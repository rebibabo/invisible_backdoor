<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20447.c" pos:tabs="8"><function pos:start="1:1" pos:end="200:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">parse_presentation_segment</name><parameter_list pos:start="1:38" pos:end="5:50">(<parameter pos:start="1:39" pos:end="1:59"><decl pos:start="1:39" pos:end="1:59"><type pos:start="1:39" pos:end="1:59"><name pos:start="1:39" pos:end="1:52">AVCodecContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">avctx</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:56"><decl pos:start="3:39" pos:end="3:56"><type pos:start="3:39" pos:end="3:56"><specifier pos:start="3:39" pos:end="3:43">const</specifier> <name pos:start="3:45" pos:end="3:51">uint8_t</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:56">buf</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:70"><decl pos:start="3:59" pos:end="3:70"><type pos:start="3:59" pos:end="3:70"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:70">buf_size</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:49"><decl pos:start="5:39" pos:end="5:49"><type pos:start="5:39" pos:end="5:49"><name pos:start="5:39" pos:end="5:45">int64_t</name></type> <name pos:start="5:47" pos:end="5:49">pts</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="200:1">{<block_content pos:start="9:5" pos:end="198:13">

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">PGSSubContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">ctx</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:30">avctx</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:16">state</name></decl>, <decl pos:start="11:19" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:21">ret</name></decl>;</decl_stmt>




    <comment type="line" pos:start="16:5" pos:end="16:23">// Video descriptor</comment>

    <decl_stmt pos:start="18:5" pos:end="18:38"><decl pos:start="18:5" pos:end="18:37"><type pos:start="18:5" pos:end="18:7"><name pos:start="18:5" pos:end="18:7">int</name></type> <name pos:start="18:9" pos:end="18:9">w</name> <init pos:start="18:11" pos:end="18:37">= <expr pos:start="18:13" pos:end="18:37"><call pos:start="18:13" pos:end="18:37"><name pos:start="18:13" pos:end="18:31">bytestream_get_be16</name><argument_list pos:start="18:32" pos:end="18:37">(<argument pos:start="18:33" pos:end="18:36"><expr pos:start="18:33" pos:end="18:36"><operator pos:start="18:33" pos:end="18:33">&amp;</operator><name pos:start="18:34" pos:end="18:36">buf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="20:5" pos:end="20:38"><decl pos:start="20:5" pos:end="20:37"><type pos:start="20:5" pos:end="20:7"><name pos:start="20:5" pos:end="20:7">int</name></type> <name pos:start="20:9" pos:end="20:9">h</name> <init pos:start="20:11" pos:end="20:37">= <expr pos:start="20:13" pos:end="20:37"><call pos:start="20:13" pos:end="20:37"><name pos:start="20:13" pos:end="20:31">bytestream_get_be16</name><argument_list pos:start="20:32" pos:end="20:37">(<argument pos:start="20:33" pos:end="20:36"><expr pos:start="20:33" pos:end="20:36"><operator pos:start="20:33" pos:end="20:33">&amp;</operator><name pos:start="20:34" pos:end="20:36">buf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="24:5" pos:end="24:26"><decl pos:start="24:5" pos:end="24:25"><type pos:start="24:5" pos:end="24:12"><name pos:start="24:5" pos:end="24:12">uint16_t</name></type> <name pos:start="24:14" pos:end="24:25">object_index</name></decl>;</decl_stmt>



    <expr_stmt pos:start="28:5" pos:end="28:32"><expr pos:start="28:5" pos:end="28:31"><name pos:start="28:5" pos:end="28:25"><name pos:start="28:5" pos:end="28:7">ctx</name><operator pos:start="28:8" pos:end="28:9">-&gt;</operator><name pos:start="28:10" pos:end="28:21">presentation</name><operator pos:start="28:22" pos:end="28:22">.</operator><name pos:start="28:23" pos:end="28:25">pts</name></name> <operator pos:start="28:27" pos:end="28:27">=</operator> <name pos:start="28:29" pos:end="28:31">pts</name></expr>;</expr_stmt>



    <expr_stmt pos:start="32:5" pos:end="34:18"><expr pos:start="32:5" pos:end="34:17"><call pos:start="32:5" pos:end="34:17"><name pos:start="32:5" pos:end="32:11">av_dlog</name><argument_list pos:start="32:12" pos:end="34:17">(<argument pos:start="32:13" pos:end="32:17"><expr pos:start="32:13" pos:end="32:17"><name pos:start="32:13" pos:end="32:17">avctx</name></expr></argument>, <argument pos:start="32:20" pos:end="32:45"><expr pos:start="32:20" pos:end="32:45"><literal type="string" pos:start="32:20" pos:end="32:45">"Video Dimensions %dx%d\n"</literal></expr></argument>,

            <argument pos:start="34:13" pos:end="34:13"><expr pos:start="34:13" pos:end="34:13"><name pos:start="34:13" pos:end="34:13">w</name></expr></argument>, <argument pos:start="34:16" pos:end="34:16"><expr pos:start="34:16" pos:end="34:16"><name pos:start="34:16" pos:end="34:16">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="36:5" pos:end="36:41"><expr pos:start="36:5" pos:end="36:40"><name pos:start="36:5" pos:end="36:7">ret</name> <operator pos:start="36:9" pos:end="36:9">=</operator> <call pos:start="36:11" pos:end="36:40"><name pos:start="36:11" pos:end="36:27">ff_set_dimensions</name><argument_list pos:start="36:28" pos:end="36:40">(<argument pos:start="36:29" pos:end="36:33"><expr pos:start="36:29" pos:end="36:33"><name pos:start="36:29" pos:end="36:33">avctx</name></expr></argument>, <argument pos:start="36:36" pos:end="36:36"><expr pos:start="36:36" pos:end="36:36"><name pos:start="36:36" pos:end="36:36">w</name></expr></argument>, <argument pos:start="36:39" pos:end="36:39"><expr pos:start="36:39" pos:end="36:39"><name pos:start="36:39" pos:end="36:39">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="38:5" pos:end="40:19"><if pos:start="38:5" pos:end="40:19">if <condition pos:start="38:8" pos:end="38:16">(<expr pos:start="38:9" pos:end="38:15"><name pos:start="38:9" pos:end="38:11">ret</name> <operator pos:start="38:13" pos:end="38:13">&lt;</operator> <literal type="number" pos:start="38:15" pos:end="38:15">0</literal></expr>)</condition><block type="pseudo" pos:start="40:9" pos:end="40:19"><block_content pos:start="40:9" pos:end="40:19">

        <return pos:start="40:9" pos:end="40:19">return <expr pos:start="40:16" pos:end="40:18"><name pos:start="40:16" pos:end="40:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="44:5" pos:end="44:45">/* Skip 1 bytes of unknown, frame rate */</comment>

    <expr_stmt pos:start="46:5" pos:end="46:10"><expr pos:start="46:5" pos:end="46:9"><name pos:start="46:5" pos:end="46:7">buf</name><operator pos:start="46:8" pos:end="46:9">++</operator></expr>;</expr_stmt>



    <comment type="line" pos:start="50:5" pos:end="50:29">// Composition descriptor</comment>

    <expr_stmt pos:start="52:5" pos:end="52:60"><expr pos:start="52:5" pos:end="52:59"><name pos:start="52:5" pos:end="52:31"><name pos:start="52:5" pos:end="52:7">ctx</name><operator pos:start="52:8" pos:end="52:9">-&gt;</operator><name pos:start="52:10" pos:end="52:21">presentation</name><operator pos:start="52:22" pos:end="52:22">.</operator><name pos:start="52:23" pos:end="52:31">id_number</name></name> <operator pos:start="52:33" pos:end="52:33">=</operator> <call pos:start="52:35" pos:end="52:59"><name pos:start="52:35" pos:end="52:53">bytestream_get_be16</name><argument_list pos:start="52:54" pos:end="52:59">(<argument pos:start="52:55" pos:end="52:58"><expr pos:start="52:55" pos:end="52:58"><operator pos:start="52:55" pos:end="52:55">&amp;</operator><name pos:start="52:56" pos:end="52:58">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="54:5" pos:end="70:7">/*

     * state is a 2 bit field that defines pgs epoch boundaries

     * 00 - Normal, previously defined objects and palettes are still valid

     * 01 - Acquisition point, previous objects and palettes can be released

     * 10 - Epoch start, previous objects and palettes can be released

     * 11 - Epoch continue, previous objects and palettes can be released

     *

     * reserved 6 bits discarded

     */</comment>

    <expr_stmt pos:start="72:5" pos:end="72:43"><expr pos:start="72:5" pos:end="72:42"><name pos:start="72:5" pos:end="72:9">state</name> <operator pos:start="72:11" pos:end="72:11">=</operator> <call pos:start="72:13" pos:end="72:37"><name pos:start="72:13" pos:end="72:31">bytestream_get_byte</name><argument_list pos:start="72:32" pos:end="72:37">(<argument pos:start="72:33" pos:end="72:36"><expr pos:start="72:33" pos:end="72:36"><operator pos:start="72:33" pos:end="72:33">&amp;</operator><name pos:start="72:34" pos:end="72:36">buf</name></expr></argument>)</argument_list></call> <operator pos:start="72:39" pos:end="72:40">&gt;&gt;</operator> <literal type="number" pos:start="72:42" pos:end="72:42">6</literal></expr>;</expr_stmt>

    <if_stmt pos:start="74:5" pos:end="78:5"><if pos:start="74:5" pos:end="78:5">if <condition pos:start="74:8" pos:end="74:19">(<expr pos:start="74:9" pos:end="74:18"><name pos:start="74:9" pos:end="74:13">state</name> <operator pos:start="74:15" pos:end="74:16">!=</operator> <literal type="number" pos:start="74:18" pos:end="74:18">0</literal></expr>)</condition> <block pos:start="74:21" pos:end="78:5">{<block_content pos:start="76:9" pos:end="76:27">

        <expr_stmt pos:start="76:9" pos:end="76:27"><expr pos:start="76:9" pos:end="76:26"><call pos:start="76:9" pos:end="76:26"><name pos:start="76:9" pos:end="76:19">flush_cache</name><argument_list pos:start="76:20" pos:end="76:26">(<argument pos:start="76:21" pos:end="76:25"><expr pos:start="76:21" pos:end="76:25"><name pos:start="76:21" pos:end="76:25">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="82:5" pos:end="86:7">/*

     * skip palette_update_flag (0x80),

     */</comment>

    <expr_stmt pos:start="88:5" pos:end="88:13"><expr pos:start="88:5" pos:end="88:12"><name pos:start="88:5" pos:end="88:7">buf</name> <operator pos:start="88:9" pos:end="88:10">+=</operator> <literal type="number" pos:start="88:12" pos:end="88:12">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="90:5" pos:end="90:61"><expr pos:start="90:5" pos:end="90:60"><name pos:start="90:5" pos:end="90:32"><name pos:start="90:5" pos:end="90:7">ctx</name><operator pos:start="90:8" pos:end="90:9">-&gt;</operator><name pos:start="90:10" pos:end="90:21">presentation</name><operator pos:start="90:22" pos:end="90:22">.</operator><name pos:start="90:23" pos:end="90:32">palette_id</name></name> <operator pos:start="90:34" pos:end="90:34">=</operator> <call pos:start="90:36" pos:end="90:60"><name pos:start="90:36" pos:end="90:54">bytestream_get_byte</name><argument_list pos:start="90:55" pos:end="90:60">(<argument pos:start="90:56" pos:end="90:59"><expr pos:start="90:56" pos:end="90:59"><operator pos:start="90:56" pos:end="90:56">&amp;</operator><name pos:start="90:57" pos:end="90:59">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="92:5" pos:end="92:63"><expr pos:start="92:5" pos:end="92:62"><name pos:start="92:5" pos:end="92:34"><name pos:start="92:5" pos:end="92:7">ctx</name><operator pos:start="92:8" pos:end="92:9">-&gt;</operator><name pos:start="92:10" pos:end="92:21">presentation</name><operator pos:start="92:22" pos:end="92:22">.</operator><name pos:start="92:23" pos:end="92:34">object_count</name></name> <operator pos:start="92:36" pos:end="92:36">=</operator> <call pos:start="92:38" pos:end="92:62"><name pos:start="92:38" pos:end="92:56">bytestream_get_byte</name><argument_list pos:start="92:57" pos:end="92:62">(<argument pos:start="92:58" pos:end="92:61"><expr pos:start="92:58" pos:end="92:61"><operator pos:start="92:58" pos:end="92:58">&amp;</operator><name pos:start="92:59" pos:end="92:61">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="94:5" pos:end="110:5"><if pos:start="94:5" pos:end="110:5">if <condition pos:start="94:8" pos:end="94:57">(<expr pos:start="94:9" pos:end="94:56"><name pos:start="94:9" pos:end="94:38"><name pos:start="94:9" pos:end="94:11">ctx</name><operator pos:start="94:12" pos:end="94:13">-&gt;</operator><name pos:start="94:14" pos:end="94:25">presentation</name><operator pos:start="94:26" pos:end="94:26">.</operator><name pos:start="94:27" pos:end="94:38">object_count</name></name> <operator pos:start="94:40" pos:end="94:40">&gt;</operator> <name pos:start="94:42" pos:end="94:56">MAX_OBJECT_REFS</name></expr>)</condition> <block pos:start="94:59" pos:end="110:5">{<block_content pos:start="96:9" pos:end="108:9">

        <expr_stmt pos:start="96:9" pos:end="100:47"><expr pos:start="96:9" pos:end="100:46"><call pos:start="96:9" pos:end="100:46"><name pos:start="96:9" pos:end="96:14">av_log</name><argument_list pos:start="96:15" pos:end="100:46">(<argument pos:start="96:16" pos:end="96:20"><expr pos:start="96:16" pos:end="96:20"><name pos:start="96:16" pos:end="96:20">avctx</name></expr></argument>, <argument pos:start="96:23" pos:end="96:34"><expr pos:start="96:23" pos:end="96:34"><name pos:start="96:23" pos:end="96:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="98:16" pos:end="98:60"><expr pos:start="98:16" pos:end="98:60"><literal type="string" pos:start="98:16" pos:end="98:60">"Invalid number of presentation objects %d\n"</literal></expr></argument>,

               <argument pos:start="100:16" pos:end="100:45"><expr pos:start="100:16" pos:end="100:45"><name pos:start="100:16" pos:end="100:45"><name pos:start="100:16" pos:end="100:18">ctx</name><operator pos:start="100:19" pos:end="100:20">-&gt;</operator><name pos:start="100:21" pos:end="100:32">presentation</name><operator pos:start="100:33" pos:end="100:33">.</operator><name pos:start="100:34" pos:end="100:45">object_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="102:9" pos:end="102:43"><expr pos:start="102:9" pos:end="102:42"><name pos:start="102:9" pos:end="102:38"><name pos:start="102:9" pos:end="102:11">ctx</name><operator pos:start="102:12" pos:end="102:13">-&gt;</operator><name pos:start="102:14" pos:end="102:25">presentation</name><operator pos:start="102:26" pos:end="102:26">.</operator><name pos:start="102:27" pos:end="102:38">object_count</name></name> <operator pos:start="102:40" pos:end="102:40">=</operator> <literal type="number" pos:start="102:42" pos:end="102:42">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="104:9" pos:end="108:9"><if pos:start="104:9" pos:end="108:9">if <condition pos:start="104:12" pos:end="104:51">(<expr pos:start="104:13" pos:end="104:50"><name pos:start="104:13" pos:end="104:34"><name pos:start="104:13" pos:end="104:17">avctx</name><operator pos:start="104:18" pos:end="104:19">-&gt;</operator><name pos:start="104:20" pos:end="104:34">err_recognition</name></name> <operator pos:start="104:36" pos:end="104:36">&amp;</operator> <name pos:start="104:38" pos:end="104:50">AV_EF_EXPLODE</name></expr>)</condition> <block pos:start="104:53" pos:end="108:9">{<block_content pos:start="106:13" pos:end="106:39">

            <return pos:start="106:13" pos:end="106:39">return <expr pos:start="106:20" pos:end="106:38"><name pos:start="106:20" pos:end="106:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>





    <for pos:start="116:5" pos:end="194:5">for <control pos:start="116:9" pos:end="116:56">(<init pos:start="116:10" pos:end="116:15"><expr pos:start="116:10" pos:end="116:14"><name pos:start="116:10" pos:end="116:10">i</name> <operator pos:start="116:12" pos:end="116:12">=</operator> <literal type="number" pos:start="116:14" pos:end="116:14">0</literal></expr>;</init> <condition pos:start="116:17" pos:end="116:51"><expr pos:start="116:17" pos:end="116:50"><name pos:start="116:17" pos:end="116:17">i</name> <operator pos:start="116:19" pos:end="116:19">&lt;</operator> <name pos:start="116:21" pos:end="116:50"><name pos:start="116:21" pos:end="116:23">ctx</name><operator pos:start="116:24" pos:end="116:25">-&gt;</operator><name pos:start="116:26" pos:end="116:37">presentation</name><operator pos:start="116:38" pos:end="116:38">.</operator><name pos:start="116:39" pos:end="116:50">object_count</name></name></expr>;</condition> <incr pos:start="116:53" pos:end="116:55"><expr pos:start="116:53" pos:end="116:55"><name pos:start="116:53" pos:end="116:53">i</name><operator pos:start="116:54" pos:end="116:55">++</operator></expr></incr>)</control>

    <block pos:start="118:5" pos:end="194:5">{<block_content pos:start="122:9" pos:end="192:9">



        <if_stmt pos:start="122:9" pos:end="130:9"><if pos:start="122:9" pos:end="130:9">if <condition pos:start="122:12" pos:end="122:30">(<expr pos:start="122:13" pos:end="122:29"><name pos:start="122:13" pos:end="122:19">buf_end</name> <operator pos:start="122:21" pos:end="122:21">-</operator> <name pos:start="122:23" pos:end="122:25">buf</name> <operator pos:start="122:27" pos:end="122:27">&lt;</operator> <literal type="number" pos:start="122:29" pos:end="122:29">8</literal></expr>)</condition> <block pos:start="122:32" pos:end="130:9">{<block_content pos:start="124:13" pos:end="128:39">

            <expr_stmt pos:start="124:13" pos:end="124:74"><expr pos:start="124:13" pos:end="124:73"><call pos:start="124:13" pos:end="124:73"><name pos:start="124:13" pos:end="124:18">av_log</name><argument_list pos:start="124:19" pos:end="124:73">(<argument pos:start="124:20" pos:end="124:24"><expr pos:start="124:20" pos:end="124:24"><name pos:start="124:20" pos:end="124:24">avctx</name></expr></argument>, <argument pos:start="124:27" pos:end="124:38"><expr pos:start="124:27" pos:end="124:38"><name pos:start="124:27" pos:end="124:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="124:41" pos:end="124:72"><expr pos:start="124:41" pos:end="124:72"><literal type="string" pos:start="124:41" pos:end="124:72">"Insufficent space for object\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="126:13" pos:end="126:47"><expr pos:start="126:13" pos:end="126:46"><name pos:start="126:13" pos:end="126:42"><name pos:start="126:13" pos:end="126:15">ctx</name><operator pos:start="126:16" pos:end="126:17">-&gt;</operator><name pos:start="126:18" pos:end="126:29">presentation</name><operator pos:start="126:30" pos:end="126:30">.</operator><name pos:start="126:31" pos:end="126:42">object_count</name></name> <operator pos:start="126:44" pos:end="126:44">=</operator> <name pos:start="126:46" pos:end="126:46">i</name></expr>;</expr_stmt>

            <return pos:start="128:13" pos:end="128:39">return <expr pos:start="128:20" pos:end="128:38"><name pos:start="128:20" pos:end="128:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="134:9" pos:end="134:68"><expr pos:start="134:9" pos:end="134:67"><name pos:start="134:9" pos:end="134:36"><name pos:start="134:9" pos:end="134:11">ctx</name><operator pos:start="134:12" pos:end="134:13">-&gt;</operator><name pos:start="134:14" pos:end="134:25">presentation</name><operator pos:start="134:26" pos:end="134:26">.</operator><name pos:start="134:27" pos:end="134:33">objects</name><index pos:start="134:34" pos:end="134:36">[<expr pos:start="134:35" pos:end="134:35"><name pos:start="134:35" pos:end="134:35">i</name></expr>]</index></name><operator pos:start="134:37" pos:end="134:37">.</operator><name pos:start="134:38" pos:end="134:39">id</name> <operator pos:start="134:41" pos:end="134:41">=</operator> <call pos:start="134:43" pos:end="134:67"><name pos:start="134:43" pos:end="134:61">bytestream_get_be16</name><argument_list pos:start="134:62" pos:end="134:67">(<argument pos:start="134:63" pos:end="134:66"><expr pos:start="134:63" pos:end="134:66"><operator pos:start="134:63" pos:end="134:63">&amp;</operator><name pos:start="134:64" pos:end="134:66">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="136:9" pos:end="136:75"><expr pos:start="136:9" pos:end="136:74"><name pos:start="136:9" pos:end="136:36"><name pos:start="136:9" pos:end="136:11">ctx</name><operator pos:start="136:12" pos:end="136:13">-&gt;</operator><name pos:start="136:14" pos:end="136:25">presentation</name><operator pos:start="136:26" pos:end="136:26">.</operator><name pos:start="136:27" pos:end="136:33">objects</name><index pos:start="136:34" pos:end="136:36">[<expr pos:start="136:35" pos:end="136:35"><name pos:start="136:35" pos:end="136:35">i</name></expr>]</index></name><operator pos:start="136:37" pos:end="136:37">.</operator><name pos:start="136:38" pos:end="136:46">window_id</name> <operator pos:start="136:48" pos:end="136:48">=</operator> <call pos:start="136:50" pos:end="136:74"><name pos:start="136:50" pos:end="136:68">bytestream_get_byte</name><argument_list pos:start="136:69" pos:end="136:74">(<argument pos:start="136:70" pos:end="136:73"><expr pos:start="136:70" pos:end="136:73"><operator pos:start="136:70" pos:end="136:70">&amp;</operator><name pos:start="136:71" pos:end="136:73">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="138:9" pos:end="138:82"><expr pos:start="138:9" pos:end="138:81"><name pos:start="138:9" pos:end="138:36"><name pos:start="138:9" pos:end="138:11">ctx</name><operator pos:start="138:12" pos:end="138:13">-&gt;</operator><name pos:start="138:14" pos:end="138:25">presentation</name><operator pos:start="138:26" pos:end="138:26">.</operator><name pos:start="138:27" pos:end="138:33">objects</name><index pos:start="138:34" pos:end="138:36">[<expr pos:start="138:35" pos:end="138:35"><name pos:start="138:35" pos:end="138:35">i</name></expr>]</index></name><operator pos:start="138:37" pos:end="138:37">.</operator><name pos:start="138:38" pos:end="138:53">composition_flag</name> <operator pos:start="138:55" pos:end="138:55">=</operator> <call pos:start="138:57" pos:end="138:81"><name pos:start="138:57" pos:end="138:75">bytestream_get_byte</name><argument_list pos:start="138:76" pos:end="138:81">(<argument pos:start="138:77" pos:end="138:80"><expr pos:start="138:77" pos:end="138:80"><operator pos:start="138:77" pos:end="138:77">&amp;</operator><name pos:start="138:78" pos:end="138:80">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="142:9" pos:end="142:67"><expr pos:start="142:9" pos:end="142:66"><name pos:start="142:9" pos:end="142:36"><name pos:start="142:9" pos:end="142:11">ctx</name><operator pos:start="142:12" pos:end="142:13">-&gt;</operator><name pos:start="142:14" pos:end="142:25">presentation</name><operator pos:start="142:26" pos:end="142:26">.</operator><name pos:start="142:27" pos:end="142:33">objects</name><index pos:start="142:34" pos:end="142:36">[<expr pos:start="142:35" pos:end="142:35"><name pos:start="142:35" pos:end="142:35">i</name></expr>]</index></name><operator pos:start="142:37" pos:end="142:37">.</operator><name pos:start="142:38" pos:end="142:38">x</name> <operator pos:start="142:40" pos:end="142:40">=</operator> <call pos:start="142:42" pos:end="142:66"><name pos:start="142:42" pos:end="142:60">bytestream_get_be16</name><argument_list pos:start="142:61" pos:end="142:66">(<argument pos:start="142:62" pos:end="142:65"><expr pos:start="142:62" pos:end="142:65"><operator pos:start="142:62" pos:end="142:62">&amp;</operator><name pos:start="142:63" pos:end="142:65">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="144:9" pos:end="144:67"><expr pos:start="144:9" pos:end="144:66"><name pos:start="144:9" pos:end="144:36"><name pos:start="144:9" pos:end="144:11">ctx</name><operator pos:start="144:12" pos:end="144:13">-&gt;</operator><name pos:start="144:14" pos:end="144:25">presentation</name><operator pos:start="144:26" pos:end="144:26">.</operator><name pos:start="144:27" pos:end="144:33">objects</name><index pos:start="144:34" pos:end="144:36">[<expr pos:start="144:35" pos:end="144:35"><name pos:start="144:35" pos:end="144:35">i</name></expr>]</index></name><operator pos:start="144:37" pos:end="144:37">.</operator><name pos:start="144:38" pos:end="144:38">y</name> <operator pos:start="144:40" pos:end="144:40">=</operator> <call pos:start="144:42" pos:end="144:66"><name pos:start="144:42" pos:end="144:60">bytestream_get_be16</name><argument_list pos:start="144:61" pos:end="144:66">(<argument pos:start="144:62" pos:end="144:65"><expr pos:start="144:62" pos:end="144:65"><operator pos:start="144:62" pos:end="144:62">&amp;</operator><name pos:start="144:63" pos:end="144:65">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="148:9" pos:end="148:22">// If cropping</comment>

        <if_stmt pos:start="150:9" pos:end="160:9"><if pos:start="150:9" pos:end="160:9">if <condition pos:start="150:12" pos:end="150:65">(<expr pos:start="150:13" pos:end="150:64"><name pos:start="150:13" pos:end="150:40"><name pos:start="150:13" pos:end="150:15">ctx</name><operator pos:start="150:16" pos:end="150:17">-&gt;</operator><name pos:start="150:18" pos:end="150:29">presentation</name><operator pos:start="150:30" pos:end="150:30">.</operator><name pos:start="150:31" pos:end="150:37">objects</name><index pos:start="150:38" pos:end="150:40">[<expr pos:start="150:39" pos:end="150:39"><name pos:start="150:39" pos:end="150:39">i</name></expr>]</index></name><operator pos:start="150:41" pos:end="150:41">.</operator><name pos:start="150:42" pos:end="150:57">composition_flag</name> <operator pos:start="150:59" pos:end="150:59">&amp;</operator> <literal type="number" pos:start="150:61" pos:end="150:64">0x80</literal></expr>)</condition> <block pos:start="150:67" pos:end="160:9">{<block_content pos:start="152:13" pos:end="158:76">

            <expr_stmt pos:start="152:13" pos:end="152:76"><expr pos:start="152:13" pos:end="152:75"><name pos:start="152:13" pos:end="152:40"><name pos:start="152:13" pos:end="152:15">ctx</name><operator pos:start="152:16" pos:end="152:17">-&gt;</operator><name pos:start="152:18" pos:end="152:29">presentation</name><operator pos:start="152:30" pos:end="152:30">.</operator><name pos:start="152:31" pos:end="152:37">objects</name><index pos:start="152:38" pos:end="152:40">[<expr pos:start="152:39" pos:end="152:39"><name pos:start="152:39" pos:end="152:39">i</name></expr>]</index></name><operator pos:start="152:41" pos:end="152:41">.</operator><name pos:start="152:42" pos:end="152:47">crop_x</name> <operator pos:start="152:49" pos:end="152:49">=</operator> <call pos:start="152:51" pos:end="152:75"><name pos:start="152:51" pos:end="152:69">bytestream_get_be16</name><argument_list pos:start="152:70" pos:end="152:75">(<argument pos:start="152:71" pos:end="152:74"><expr pos:start="152:71" pos:end="152:74"><operator pos:start="152:71" pos:end="152:71">&amp;</operator><name pos:start="152:72" pos:end="152:74">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="154:13" pos:end="154:76"><expr pos:start="154:13" pos:end="154:75"><name pos:start="154:13" pos:end="154:40"><name pos:start="154:13" pos:end="154:15">ctx</name><operator pos:start="154:16" pos:end="154:17">-&gt;</operator><name pos:start="154:18" pos:end="154:29">presentation</name><operator pos:start="154:30" pos:end="154:30">.</operator><name pos:start="154:31" pos:end="154:37">objects</name><index pos:start="154:38" pos:end="154:40">[<expr pos:start="154:39" pos:end="154:39"><name pos:start="154:39" pos:end="154:39">i</name></expr>]</index></name><operator pos:start="154:41" pos:end="154:41">.</operator><name pos:start="154:42" pos:end="154:47">crop_y</name> <operator pos:start="154:49" pos:end="154:49">=</operator> <call pos:start="154:51" pos:end="154:75"><name pos:start="154:51" pos:end="154:69">bytestream_get_be16</name><argument_list pos:start="154:70" pos:end="154:75">(<argument pos:start="154:71" pos:end="154:74"><expr pos:start="154:71" pos:end="154:74"><operator pos:start="154:71" pos:end="154:71">&amp;</operator><name pos:start="154:72" pos:end="154:74">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="156:13" pos:end="156:76"><expr pos:start="156:13" pos:end="156:75"><name pos:start="156:13" pos:end="156:40"><name pos:start="156:13" pos:end="156:15">ctx</name><operator pos:start="156:16" pos:end="156:17">-&gt;</operator><name pos:start="156:18" pos:end="156:29">presentation</name><operator pos:start="156:30" pos:end="156:30">.</operator><name pos:start="156:31" pos:end="156:37">objects</name><index pos:start="156:38" pos:end="156:40">[<expr pos:start="156:39" pos:end="156:39"><name pos:start="156:39" pos:end="156:39">i</name></expr>]</index></name><operator pos:start="156:41" pos:end="156:41">.</operator><name pos:start="156:42" pos:end="156:47">crop_w</name> <operator pos:start="156:49" pos:end="156:49">=</operator> <call pos:start="156:51" pos:end="156:75"><name pos:start="156:51" pos:end="156:69">bytestream_get_be16</name><argument_list pos:start="156:70" pos:end="156:75">(<argument pos:start="156:71" pos:end="156:74"><expr pos:start="156:71" pos:end="156:74"><operator pos:start="156:71" pos:end="156:71">&amp;</operator><name pos:start="156:72" pos:end="156:74">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="158:13" pos:end="158:76"><expr pos:start="158:13" pos:end="158:75"><name pos:start="158:13" pos:end="158:40"><name pos:start="158:13" pos:end="158:15">ctx</name><operator pos:start="158:16" pos:end="158:17">-&gt;</operator><name pos:start="158:18" pos:end="158:29">presentation</name><operator pos:start="158:30" pos:end="158:30">.</operator><name pos:start="158:31" pos:end="158:37">objects</name><index pos:start="158:38" pos:end="158:40">[<expr pos:start="158:39" pos:end="158:39"><name pos:start="158:39" pos:end="158:39">i</name></expr>]</index></name><operator pos:start="158:41" pos:end="158:41">.</operator><name pos:start="158:42" pos:end="158:47">crop_h</name> <operator pos:start="158:49" pos:end="158:49">=</operator> <call pos:start="158:51" pos:end="158:75"><name pos:start="158:51" pos:end="158:69">bytestream_get_be16</name><argument_list pos:start="158:70" pos:end="158:75">(<argument pos:start="158:71" pos:end="158:74"><expr pos:start="158:71" pos:end="158:74"><operator pos:start="158:71" pos:end="158:71">&amp;</operator><name pos:start="158:72" pos:end="158:74">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="164:9" pos:end="166:80"><expr pos:start="164:9" pos:end="166:79"><call pos:start="164:9" pos:end="166:79"><name pos:start="164:9" pos:end="164:15">av_dlog</name><argument_list pos:start="164:16" pos:end="166:79">(<argument pos:start="164:17" pos:end="164:21"><expr pos:start="164:17" pos:end="164:21"><name pos:start="164:17" pos:end="164:21">avctx</name></expr></argument>, <argument pos:start="164:24" pos:end="164:56"><expr pos:start="164:24" pos:end="164:56"><literal type="string" pos:start="164:24" pos:end="164:56">"Subtitle Placement x=%d, y=%d\n"</literal></expr></argument>,

                <argument pos:start="166:17" pos:end="166:46"><expr pos:start="166:17" pos:end="166:46"><name pos:start="166:17" pos:end="166:44"><name pos:start="166:17" pos:end="166:19">ctx</name><operator pos:start="166:20" pos:end="166:21">-&gt;</operator><name pos:start="166:22" pos:end="166:33">presentation</name><operator pos:start="166:34" pos:end="166:34">.</operator><name pos:start="166:35" pos:end="166:41">objects</name><index pos:start="166:42" pos:end="166:44">[<expr pos:start="166:43" pos:end="166:43"><name pos:start="166:43" pos:end="166:43">i</name></expr>]</index></name><operator pos:start="166:45" pos:end="166:45">.</operator><name pos:start="166:46" pos:end="166:46">x</name></expr></argument>, <argument pos:start="166:49" pos:end="166:78"><expr pos:start="166:49" pos:end="166:78"><name pos:start="166:49" pos:end="166:76"><name pos:start="166:49" pos:end="166:51">ctx</name><operator pos:start="166:52" pos:end="166:53">-&gt;</operator><name pos:start="166:54" pos:end="166:65">presentation</name><operator pos:start="166:66" pos:end="166:66">.</operator><name pos:start="166:67" pos:end="166:73">objects</name><index pos:start="166:74" pos:end="166:76">[<expr pos:start="166:75" pos:end="166:75"><name pos:start="166:75" pos:end="166:75">i</name></expr>]</index></name><operator pos:start="166:77" pos:end="166:77">.</operator><name pos:start="166:78" pos:end="166:78">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="170:9" pos:end="192:9"><if pos:start="170:9" pos:end="192:9">if <condition pos:start="170:12" pos:end="172:59">(<expr pos:start="170:13" pos:end="172:58"><name pos:start="170:13" pos:end="170:40"><name pos:start="170:13" pos:end="170:15">ctx</name><operator pos:start="170:16" pos:end="170:17">-&gt;</operator><name pos:start="170:18" pos:end="170:29">presentation</name><operator pos:start="170:30" pos:end="170:30">.</operator><name pos:start="170:31" pos:end="170:37">objects</name><index pos:start="170:38" pos:end="170:40">[<expr pos:start="170:39" pos:end="170:39"><name pos:start="170:39" pos:end="170:39">i</name></expr>]</index></name><operator pos:start="170:41" pos:end="170:41">.</operator><name pos:start="170:42" pos:end="170:42">x</name> <operator pos:start="170:44" pos:end="170:44">&gt;</operator> <name pos:start="170:46" pos:end="170:57"><name pos:start="170:46" pos:end="170:50">avctx</name><operator pos:start="170:51" pos:end="170:52">-&gt;</operator><name pos:start="170:53" pos:end="170:57">width</name></name> <operator pos:start="170:59" pos:end="170:60">||</operator>

            <name pos:start="172:13" pos:end="172:40"><name pos:start="172:13" pos:end="172:15">ctx</name><operator pos:start="172:16" pos:end="172:17">-&gt;</operator><name pos:start="172:18" pos:end="172:29">presentation</name><operator pos:start="172:30" pos:end="172:30">.</operator><name pos:start="172:31" pos:end="172:37">objects</name><index pos:start="172:38" pos:end="172:40">[<expr pos:start="172:39" pos:end="172:39"><name pos:start="172:39" pos:end="172:39">i</name></expr>]</index></name><operator pos:start="172:41" pos:end="172:41">.</operator><name pos:start="172:42" pos:end="172:42">y</name> <operator pos:start="172:44" pos:end="172:44">&gt;</operator> <name pos:start="172:46" pos:end="172:58"><name pos:start="172:46" pos:end="172:50">avctx</name><operator pos:start="172:51" pos:end="172:52">-&gt;</operator><name pos:start="172:53" pos:end="172:58">height</name></name></expr>)</condition> <block pos:start="172:61" pos:end="192:9">{<block_content pos:start="174:13" pos:end="190:13">

            <expr_stmt pos:start="174:13" pos:end="180:49"><expr pos:start="174:13" pos:end="180:48"><call pos:start="174:13" pos:end="180:48"><name pos:start="174:13" pos:end="174:18">av_log</name><argument_list pos:start="174:19" pos:end="180:48">(<argument pos:start="174:20" pos:end="174:24"><expr pos:start="174:20" pos:end="174:24"><name pos:start="174:20" pos:end="174:24">avctx</name></expr></argument>, <argument pos:start="174:27" pos:end="174:38"><expr pos:start="174:27" pos:end="174:38"><name pos:start="174:27" pos:end="174:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="174:41" pos:end="174:126"><expr pos:start="174:41" pos:end="174:126"><literal type="string" pos:start="174:41" pos:end="174:126">"Subtitle out of video bounds. x = %d, y = %d, video width = %d, video height = %d.\n"</literal></expr></argument>,

                   <argument pos:start="176:20" pos:end="176:49"><expr pos:start="176:20" pos:end="176:49"><name pos:start="176:20" pos:end="176:47"><name pos:start="176:20" pos:end="176:22">ctx</name><operator pos:start="176:23" pos:end="176:24">-&gt;</operator><name pos:start="176:25" pos:end="176:36">presentation</name><operator pos:start="176:37" pos:end="176:37">.</operator><name pos:start="176:38" pos:end="176:44">objects</name><index pos:start="176:45" pos:end="176:47">[<expr pos:start="176:46" pos:end="176:46"><name pos:start="176:46" pos:end="176:46">i</name></expr>]</index></name><operator pos:start="176:48" pos:end="176:48">.</operator><name pos:start="176:49" pos:end="176:49">x</name></expr></argument>,

                   <argument pos:start="178:20" pos:end="178:49"><expr pos:start="178:20" pos:end="178:49"><name pos:start="178:20" pos:end="178:47"><name pos:start="178:20" pos:end="178:22">ctx</name><operator pos:start="178:23" pos:end="178:24">-&gt;</operator><name pos:start="178:25" pos:end="178:36">presentation</name><operator pos:start="178:37" pos:end="178:37">.</operator><name pos:start="178:38" pos:end="178:44">objects</name><index pos:start="178:45" pos:end="178:47">[<expr pos:start="178:46" pos:end="178:46"><name pos:start="178:46" pos:end="178:46">i</name></expr>]</index></name><operator pos:start="178:48" pos:end="178:48">.</operator><name pos:start="178:49" pos:end="178:49">y</name></expr></argument>,

                    <argument pos:start="180:21" pos:end="180:32"><expr pos:start="180:21" pos:end="180:32"><name pos:start="180:21" pos:end="180:32"><name pos:start="180:21" pos:end="180:25">avctx</name><operator pos:start="180:26" pos:end="180:27">-&gt;</operator><name pos:start="180:28" pos:end="180:32">width</name></name></expr></argument>, <argument pos:start="180:35" pos:end="180:47"><expr pos:start="180:35" pos:end="180:47"><name pos:start="180:35" pos:end="180:47"><name pos:start="180:35" pos:end="180:39">avctx</name><operator pos:start="180:40" pos:end="180:41">-&gt;</operator><name pos:start="180:42" pos:end="180:47">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="182:13" pos:end="182:47"><expr pos:start="182:13" pos:end="182:46"><name pos:start="182:13" pos:end="182:40"><name pos:start="182:13" pos:end="182:15">ctx</name><operator pos:start="182:16" pos:end="182:17">-&gt;</operator><name pos:start="182:18" pos:end="182:29">presentation</name><operator pos:start="182:30" pos:end="182:30">.</operator><name pos:start="182:31" pos:end="182:37">objects</name><index pos:start="182:38" pos:end="182:40">[<expr pos:start="182:39" pos:end="182:39"><name pos:start="182:39" pos:end="182:39">i</name></expr>]</index></name><operator pos:start="182:41" pos:end="182:41">.</operator><name pos:start="182:42" pos:end="182:42">x</name> <operator pos:start="182:44" pos:end="182:44">=</operator> <literal type="number" pos:start="182:46" pos:end="182:46">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="184:13" pos:end="184:47"><expr pos:start="184:13" pos:end="184:46"><name pos:start="184:13" pos:end="184:40"><name pos:start="184:13" pos:end="184:15">ctx</name><operator pos:start="184:16" pos:end="184:17">-&gt;</operator><name pos:start="184:18" pos:end="184:29">presentation</name><operator pos:start="184:30" pos:end="184:30">.</operator><name pos:start="184:31" pos:end="184:37">objects</name><index pos:start="184:38" pos:end="184:40">[<expr pos:start="184:39" pos:end="184:39"><name pos:start="184:39" pos:end="184:39">i</name></expr>]</index></name><operator pos:start="184:41" pos:end="184:41">.</operator><name pos:start="184:42" pos:end="184:42">y</name> <operator pos:start="184:44" pos:end="184:44">=</operator> <literal type="number" pos:start="184:46" pos:end="184:46">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="186:13" pos:end="190:13"><if pos:start="186:13" pos:end="190:13">if <condition pos:start="186:16" pos:end="186:55">(<expr pos:start="186:17" pos:end="186:54"><name pos:start="186:17" pos:end="186:38"><name pos:start="186:17" pos:end="186:21">avctx</name><operator pos:start="186:22" pos:end="186:23">-&gt;</operator><name pos:start="186:24" pos:end="186:38">err_recognition</name></name> <operator pos:start="186:40" pos:end="186:40">&amp;</operator> <name pos:start="186:42" pos:end="186:54">AV_EF_EXPLODE</name></expr>)</condition> <block pos:start="186:57" pos:end="190:13">{<block_content pos:start="188:17" pos:end="188:43">

                <return pos:start="188:17" pos:end="188:43">return <expr pos:start="188:24" pos:end="188:42"><name pos:start="188:24" pos:end="188:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="198:5" pos:end="198:13">return <expr pos:start="198:12" pos:end="198:12"><literal type="number" pos:start="198:12" pos:end="198:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
