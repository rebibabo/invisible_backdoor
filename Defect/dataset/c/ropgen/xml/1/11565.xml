<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11565.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">read_audio_mux_element</name><parameter_list pos:start="1:34" pos:end="3:52">(<parameter pos:start="1:35" pos:end="1:61"><decl pos:start="1:35" pos:end="1:61"><type pos:start="1:35" pos:end="1:61"><name pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:40">struct</name> <name pos:start="1:42" pos:end="1:52">LATMContext</name></name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:61">latmctx</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:51"><decl pos:start="3:35" pos:end="3:51"><type pos:start="3:35" pos:end="3:51"><name pos:start="3:35" pos:end="3:47">GetBitContext</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:51">gb</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:13">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:24">use_same_mux</name> <init pos:start="9:26" pos:end="9:42">= <expr pos:start="9:28" pos:end="9:42"><call pos:start="9:28" pos:end="9:42"><name pos:start="9:28" pos:end="9:35">get_bits</name><argument_list pos:start="9:36" pos:end="9:42">(<argument pos:start="9:37" pos:end="9:38"><expr pos:start="9:37" pos:end="9:38"><name pos:start="9:37" pos:end="9:38">gb</name></expr></argument>, <argument pos:start="9:41" pos:end="9:41"><expr pos:start="9:41" pos:end="9:41"><literal type="number" pos:start="9:41" pos:end="9:41">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="25:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:21">use_same_mux</name></expr>)</condition> <block pos:start="11:24" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:23">

        <if_stmt pos:start="13:9" pos:end="15:23"><if pos:start="13:9" pos:end="15:23">if <condition pos:start="13:12" pos:end="13:60">(<expr pos:start="13:13" pos:end="13:59"><operator pos:start="13:13" pos:end="13:13">(</operator><name pos:start="13:14" pos:end="13:16">err</name> <operator pos:start="13:18" pos:end="13:18">=</operator> <call pos:start="13:20" pos:end="13:54"><name pos:start="13:20" pos:end="13:41">read_stream_mux_config</name><argument_list pos:start="13:42" pos:end="13:54">(<argument pos:start="13:43" pos:end="13:49"><expr pos:start="13:43" pos:end="13:49"><name pos:start="13:43" pos:end="13:49">latmctx</name></expr></argument>, <argument pos:start="13:52" pos:end="13:53"><expr pos:start="13:52" pos:end="13:53"><name pos:start="13:52" pos:end="13:53">gb</name></expr></argument>)</argument_list></call><operator pos:start="13:55" pos:end="13:55">)</operator> <operator pos:start="13:57" pos:end="13:57">&lt;</operator> <literal type="number" pos:start="13:59" pos:end="13:59">0</literal></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:23"><block_content pos:start="15:13" pos:end="15:23">

            <return pos:start="15:13" pos:end="15:23">return <expr pos:start="15:20" pos:end="15:22"><name pos:start="15:20" pos:end="15:22">err</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="25:5">else if <condition pos:start="17:15" pos:end="17:50">(<expr pos:start="17:16" pos:end="17:49"><operator pos:start="17:16" pos:end="17:16">!</operator><name pos:start="17:17" pos:end="17:49"><name pos:start="17:17" pos:end="17:23">latmctx</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:32">aac_ctx</name><operator pos:start="17:33" pos:end="17:33">.</operator><name pos:start="17:34" pos:end="17:38">avctx</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:49">extradata</name></name></expr>)</condition> <block pos:start="17:52" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:31">

        <expr_stmt pos:start="19:9" pos:end="21:44"><expr pos:start="19:9" pos:end="21:43"><call pos:start="19:9" pos:end="21:43"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="21:43">(<argument pos:start="19:16" pos:end="19:37"><expr pos:start="19:16" pos:end="19:37"><name pos:start="19:16" pos:end="19:37"><name pos:start="19:16" pos:end="19:22">latmctx</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:31">aac_ctx</name><operator pos:start="19:32" pos:end="19:32">.</operator><name pos:start="19:33" pos:end="19:37">avctx</name></name></expr></argument>, <argument pos:start="19:40" pos:end="19:51"><expr pos:start="19:40" pos:end="19:51"><name pos:start="19:40" pos:end="19:51">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="21:16" pos:end="21:42"><expr pos:start="21:16" pos:end="21:42"><literal type="string" pos:start="21:16" pos:end="21:42">"no decoder config found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="49:5"><if pos:start="27:5" pos:end="49:5">if <condition pos:start="27:8" pos:end="27:42">(<expr pos:start="27:9" pos:end="27:41"><name pos:start="27:9" pos:end="27:36"><name pos:start="27:9" pos:end="27:15">latmctx</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:36">audio_mux_version_A</name></name> <operator pos:start="27:38" pos:end="27:39">==</operator> <literal type="number" pos:start="27:41" pos:end="27:41">0</literal></expr>)</condition> <block pos:start="27:44" pos:end="49:5">{<block_content pos:start="29:9" pos:end="47:9">

        <decl_stmt pos:start="29:9" pos:end="29:74"><decl pos:start="29:9" pos:end="29:73"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:33">mux_slot_length_bytes</name> <init pos:start="29:35" pos:end="29:73">= <expr pos:start="29:37" pos:end="29:73"><call pos:start="29:37" pos:end="29:73"><name pos:start="29:37" pos:end="29:60">read_payload_length_info</name><argument_list pos:start="29:61" pos:end="29:73">(<argument pos:start="29:62" pos:end="29:68"><expr pos:start="29:62" pos:end="29:68"><name pos:start="29:62" pos:end="29:68">latmctx</name></expr></argument>, <argument pos:start="29:71" pos:end="29:72"><expr pos:start="29:71" pos:end="29:72"><name pos:start="29:71" pos:end="29:72">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="31:9" pos:end="47:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:58">(<expr pos:start="31:13" pos:end="31:57"><name pos:start="31:13" pos:end="31:33">mux_slot_length_bytes</name> <operator pos:start="31:35" pos:end="31:35">*</operator> <literal type="number" pos:start="31:37" pos:end="31:37">8</literal> <operator pos:start="31:39" pos:end="31:39">&gt;</operator> <call pos:start="31:41" pos:end="31:57"><name pos:start="31:41" pos:end="31:53">get_bits_left</name><argument_list pos:start="31:54" pos:end="31:57">(<argument pos:start="31:55" pos:end="31:56"><expr pos:start="31:55" pos:end="31:56"><name pos:start="31:55" pos:end="31:56">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:60" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:39">

            <expr_stmt pos:start="33:13" pos:end="33:79"><expr pos:start="33:13" pos:end="33:78"><call pos:start="33:13" pos:end="33:78"><name pos:start="33:13" pos:end="33:18">av_log</name><argument_list pos:start="33:19" pos:end="33:78">(<argument pos:start="33:20" pos:end="33:41"><expr pos:start="33:20" pos:end="33:41"><name pos:start="33:20" pos:end="33:41"><name pos:start="33:20" pos:end="33:26">latmctx</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:35">aac_ctx</name><operator pos:start="33:36" pos:end="33:36">.</operator><name pos:start="33:37" pos:end="33:41">avctx</name></name></expr></argument>, <argument pos:start="33:44" pos:end="33:55"><expr pos:start="33:44" pos:end="33:55"><name pos:start="33:44" pos:end="33:55">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:58" pos:end="33:77"><expr pos:start="33:58" pos:end="33:77"><literal type="string" pos:start="33:58" pos:end="33:77">"incomplete frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:39">return <expr pos:start="35:20" pos:end="35:38"><name pos:start="35:20" pos:end="35:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="37:11" pos:end="47:9">else if <condition pos:start="37:19" pos:end="37:71">(<expr pos:start="37:20" pos:end="37:70"><name pos:start="37:20" pos:end="37:40">mux_slot_length_bytes</name> <operator pos:start="37:42" pos:end="37:42">*</operator> <literal type="number" pos:start="37:44" pos:end="37:46">8</literal> <operator pos:start="37:46" pos:end="37:46">+</operator> <literal type="number" pos:start="37:48" pos:end="37:50">256</literal> <operator pos:start="37:52" pos:end="37:52">&lt;</operator> <call pos:start="37:54" pos:end="37:70"><name pos:start="37:54" pos:end="37:66">get_bits_left</name><argument_list pos:start="37:67" pos:end="37:70">(<argument pos:start="37:68" pos:end="37:69"><expr pos:start="37:68" pos:end="37:69"><name pos:start="37:68" pos:end="37:69">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:73" pos:end="47:9">{<block_content pos:start="39:13" pos:end="45:39">

            <expr_stmt pos:start="39:13" pos:end="43:65"><expr pos:start="39:13" pos:end="43:64"><call pos:start="39:13" pos:end="43:64"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="43:64">(<argument pos:start="39:20" pos:end="39:41"><expr pos:start="39:20" pos:end="39:41"><name pos:start="39:20" pos:end="39:41"><name pos:start="39:20" pos:end="39:26">latmctx</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:35">aac_ctx</name><operator pos:start="39:36" pos:end="39:36">.</operator><name pos:start="39:37" pos:end="39:41">avctx</name></name></expr></argument>, <argument pos:start="39:44" pos:end="39:55"><expr pos:start="39:44" pos:end="39:55"><name pos:start="39:44" pos:end="39:55">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="41:20" pos:end="41:53"><expr pos:start="41:20" pos:end="41:53"><literal type="string" pos:start="41:20" pos:end="41:53">"frame length mismatch %d &lt;&lt; %d\n"</literal></expr></argument>,

                   <argument pos:start="43:20" pos:end="43:44"><expr pos:start="43:20" pos:end="43:44"><name pos:start="43:20" pos:end="43:40">mux_slot_length_bytes</name> <operator pos:start="43:42" pos:end="43:42">*</operator> <literal type="number" pos:start="43:44" pos:end="43:44">8</literal></expr></argument>, <argument pos:start="43:47" pos:end="43:63"><expr pos:start="43:47" pos:end="43:63"><call pos:start="43:47" pos:end="43:63"><name pos:start="43:47" pos:end="43:59">get_bits_left</name><argument_list pos:start="43:60" pos:end="43:63">(<argument pos:start="43:61" pos:end="43:62"><expr pos:start="43:61" pos:end="43:62"><name pos:start="43:61" pos:end="43:62">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:39">return <expr pos:start="45:20" pos:end="45:38"><name pos:start="45:20" pos:end="45:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><literal type="number" pos:start="51:12" pos:end="51:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
