<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26176.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">qcow2_snapshot_load_tmp</name><parameter_list pos:start="1:28" pos:end="7:41">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:51"><decl pos:start="3:29" pos:end="3:51"><type pos:start="3:29" pos:end="3:51"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:38">char</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:51">snapshot_id</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:44"><decl pos:start="5:29" pos:end="5:44"><type pos:start="5:29" pos:end="5:44"><specifier pos:start="5:29" pos:end="5:33">const</specifier> <name pos:start="5:35" pos:end="5:38">char</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:44">name</name></decl></parameter>,

                            <parameter pos:start="7:29" pos:end="7:40"><decl pos:start="7:29" pos:end="7:40"><type pos:start="7:29" pos:end="7:40"><name pos:start="7:29" pos:end="7:33">Error</name> <modifier pos:start="7:35" pos:end="7:35">*</modifier><modifier pos:start="7:36" pos:end="7:36">*</modifier></type><name pos:start="7:37" pos:end="7:40">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="101:1">{<block_content pos:start="11:5" pos:end="99:13">

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:25">snapshot_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">BDRVQcowState</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:20">s</name> <init pos:start="13:22" pos:end="13:33">= <expr pos:start="13:24" pos:end="13:33"><name pos:start="13:24" pos:end="13:33"><name pos:start="13:24" pos:end="13:25">bs</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">QCowSnapshot</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:20">sn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">uint64_t</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:26">new_l1_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:20">new_l1_bytes</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:10">assert</name><argument_list pos:start="25:11" pos:end="25:25">(<argument pos:start="25:12" pos:end="25:24"><expr pos:start="25:12" pos:end="25:24"><name pos:start="25:12" pos:end="25:24"><name pos:start="25:12" pos:end="25:13">bs</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:24">read_only</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:29">/* Search the snapshot */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:73"><expr pos:start="31:5" pos:end="31:72"><name pos:start="31:5" pos:end="31:18">snapshot_index</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <call pos:start="31:22" pos:end="31:72"><name pos:start="31:22" pos:end="31:49">find_snapshot_by_id_and_name</name><argument_list pos:start="31:50" pos:end="31:72">(<argument pos:start="31:51" pos:end="31:52"><expr pos:start="31:51" pos:end="31:52"><name pos:start="31:51" pos:end="31:52">bs</name></expr></argument>, <argument pos:start="31:55" pos:end="31:65"><expr pos:start="31:55" pos:end="31:65"><name pos:start="31:55" pos:end="31:65">snapshot_id</name></expr></argument>, <argument pos:start="31:68" pos:end="31:71"><expr pos:start="31:68" pos:end="31:71"><name pos:start="31:68" pos:end="31:71">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:27">(<expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:22">snapshot_index</name> <operator pos:start="33:24" pos:end="33:24">&lt;</operator> <literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr>)</condition> <block pos:start="33:29" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:23">

        <expr_stmt pos:start="35:9" pos:end="37:42"><expr pos:start="35:9" pos:end="37:41"><call pos:start="35:9" pos:end="37:41"><name pos:start="35:9" pos:end="35:18">error_setg</name><argument_list pos:start="35:19" pos:end="37:41">(<argument pos:start="35:20" pos:end="35:23"><expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">errp</name></expr></argument>,

                   <argument pos:start="37:20" pos:end="37:40"><expr pos:start="37:20" pos:end="37:40"><literal type="string" pos:start="37:20" pos:end="37:40">"Can't find snapshot"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:23">return <expr pos:start="39:16" pos:end="39:22"><operator pos:start="39:16" pos:end="39:16">-</operator><name pos:start="39:17" pos:end="39:22">ENOENT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:39"><expr pos:start="43:5" pos:end="43:38"><name pos:start="43:5" pos:end="43:6">sn</name> <operator pos:start="43:8" pos:end="43:8">=</operator> <operator pos:start="43:10" pos:end="43:10">&amp;</operator><name pos:start="43:11" pos:end="43:38"><name pos:start="43:11" pos:end="43:11">s</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:22">snapshots</name><index pos:start="43:23" pos:end="43:38">[<expr pos:start="43:24" pos:end="43:37"><name pos:start="43:24" pos:end="43:37">snapshot_index</name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:54">/* Allocate and read in the snapshot's L1 table */</comment>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:39">(<expr pos:start="49:9" pos:end="49:38"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:10">sn</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:19">l1_size</name></name> <operator pos:start="49:21" pos:end="49:21">&gt;</operator> <name pos:start="49:23" pos:end="49:38">QCOW_MAX_L1_SIZE</name></expr>)</condition> <block pos:start="49:41" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:22">

        <expr_stmt pos:start="51:9" pos:end="51:56"><expr pos:start="51:9" pos:end="51:55"><call pos:start="51:9" pos:end="51:55"><name pos:start="51:9" pos:end="51:18">error_setg</name><argument_list pos:start="51:19" pos:end="51:55">(<argument pos:start="51:20" pos:end="51:23"><expr pos:start="51:20" pos:end="51:23"><name pos:start="51:20" pos:end="51:23">errp</name></expr></argument>, <argument pos:start="51:26" pos:end="51:54"><expr pos:start="51:26" pos:end="51:54"><literal type="string" pos:start="51:26" pos:end="51:54">"Snapshot L1 table too large"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:22">return <expr pos:start="53:16" pos:end="53:21"><operator pos:start="53:16" pos:end="53:16">-</operator><name pos:start="53:17" pos:end="53:21">EFBIG</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:50"><expr pos:start="57:5" pos:end="57:49"><name pos:start="57:5" pos:end="57:16">new_l1_bytes</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <name pos:start="57:20" pos:end="57:30"><name pos:start="57:20" pos:end="57:21">sn</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:30">l1_size</name></name> <operator pos:start="57:32" pos:end="57:32">*</operator> <sizeof pos:start="57:34" pos:end="57:49">sizeof<argument_list pos:start="57:40" pos:end="57:49">(<argument pos:start="57:41" pos:end="57:48"><expr pos:start="57:41" pos:end="57:48"><name pos:start="57:41" pos:end="57:48">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:62"><expr pos:start="59:5" pos:end="59:61"><name pos:start="59:5" pos:end="59:16">new_l1_table</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <call pos:start="59:20" pos:end="59:61"><name pos:start="59:20" pos:end="59:28">g_malloc0</name><argument_list pos:start="59:29" pos:end="59:61">(<argument pos:start="59:30" pos:end="59:60"><expr pos:start="59:30" pos:end="59:60"><call pos:start="59:30" pos:end="59:60"><name pos:start="59:30" pos:end="59:41">align_offset</name><argument_list pos:start="59:42" pos:end="59:60">(<argument pos:start="59:43" pos:end="59:54"><expr pos:start="59:43" pos:end="59:54"><name pos:start="59:43" pos:end="59:54">new_l1_bytes</name></expr></argument>, <argument pos:start="59:57" pos:end="59:59"><expr pos:start="59:57" pos:end="59:59"><literal type="number" pos:start="59:57" pos:end="59:59">512</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:80"><expr pos:start="63:5" pos:end="63:79"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:79"><name pos:start="63:11" pos:end="63:20">bdrv_pread</name><argument_list pos:start="63:21" pos:end="63:79">(<argument pos:start="63:22" pos:end="63:29"><expr pos:start="63:22" pos:end="63:29"><name pos:start="63:22" pos:end="63:29"><name pos:start="63:22" pos:end="63:23">bs</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:29">file</name></name></expr></argument>, <argument pos:start="63:32" pos:end="63:50"><expr pos:start="63:32" pos:end="63:50"><name pos:start="63:32" pos:end="63:50"><name pos:start="63:32" pos:end="63:33">sn</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:50">l1_table_offset</name></name></expr></argument>, <argument pos:start="63:53" pos:end="63:64"><expr pos:start="63:53" pos:end="63:64"><name pos:start="63:53" pos:end="63:64">new_l1_table</name></expr></argument>, <argument pos:start="63:67" pos:end="63:78"><expr pos:start="63:67" pos:end="63:78"><name pos:start="63:67" pos:end="63:78">new_l1_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="73:5">if <condition pos:start="65:8" pos:end="65:16">(<expr pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">&lt;</operator> <literal type="number" pos:start="65:15" pos:end="65:15">0</literal></expr>)</condition> <block pos:start="65:18" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:19">

        <expr_stmt pos:start="67:9" pos:end="67:65"><expr pos:start="67:9" pos:end="67:64"><call pos:start="67:9" pos:end="67:64"><name pos:start="67:9" pos:end="67:18">error_setg</name><argument_list pos:start="67:19" pos:end="67:64">(<argument pos:start="67:20" pos:end="67:23"><expr pos:start="67:20" pos:end="67:23"><name pos:start="67:20" pos:end="67:23">errp</name></expr></argument>, <argument pos:start="67:26" pos:end="67:63"><expr pos:start="67:26" pos:end="67:63"><literal type="string" pos:start="67:26" pos:end="67:63">"Failed to read l1 table for snapshot"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:29"><expr pos:start="69:9" pos:end="69:28"><call pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:14">g_free</name><argument_list pos:start="69:15" pos:end="69:28">(<argument pos:start="69:16" pos:end="69:27"><expr pos:start="69:16" pos:end="69:27"><name pos:start="69:16" pos:end="69:27">new_l1_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:19">return <expr pos:start="71:16" pos:end="71:18"><name pos:start="71:16" pos:end="71:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:29">/* Switch the L1 table */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:24"><expr pos:start="79:5" pos:end="79:23"><call pos:start="79:5" pos:end="79:23"><name pos:start="79:5" pos:end="79:10">g_free</name><argument_list pos:start="79:11" pos:end="79:23">(<argument pos:start="79:12" pos:end="79:22"><expr pos:start="79:12" pos:end="79:22"><name pos:start="79:12" pos:end="79:22"><name pos:start="79:12" pos:end="79:12">s</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:22">l1_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:29"><expr pos:start="83:5" pos:end="83:28"><name pos:start="83:5" pos:end="83:14"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:14">l1_size</name></name> <operator pos:start="83:16" pos:end="83:16">=</operator> <name pos:start="83:18" pos:end="83:28"><name pos:start="83:18" pos:end="83:19">sn</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:28">l1_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:45"><expr pos:start="85:5" pos:end="85:44"><name pos:start="85:5" pos:end="85:22"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:22">l1_table_offset</name></name> <operator pos:start="85:24" pos:end="85:24">=</operator> <name pos:start="85:26" pos:end="85:44"><name pos:start="85:26" pos:end="85:27">sn</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:44">l1_table_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:31"><expr pos:start="87:5" pos:end="87:30"><name pos:start="87:5" pos:end="87:15"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:15">l1_table</name></name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:30">new_l1_table</name></expr>;</expr_stmt>



    <for pos:start="91:5" pos:end="95:5">for<control pos:start="91:8" pos:end="91:34">(<init pos:start="91:9" pos:end="91:14"><expr pos:start="91:9" pos:end="91:13"><name pos:start="91:9" pos:end="91:9">i</name> <operator pos:start="91:11" pos:end="91:11">=</operator> <literal type="number" pos:start="91:13" pos:end="91:13">0</literal></expr>;</init><condition pos:start="91:15" pos:end="91:29"><expr pos:start="91:15" pos:end="91:28"><name pos:start="91:15" pos:end="91:15">i</name> <operator pos:start="91:17" pos:end="91:17">&lt;</operator> <name pos:start="91:19" pos:end="91:28"><name pos:start="91:19" pos:end="91:19">s</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:28">l1_size</name></name></expr>;</condition> <incr pos:start="91:31" pos:end="91:33"><expr pos:start="91:31" pos:end="91:33"><name pos:start="91:31" pos:end="91:31">i</name><operator pos:start="91:32" pos:end="91:33">++</operator></expr></incr>)</control> <block pos:start="91:36" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:38">

        <expr_stmt pos:start="93:9" pos:end="93:38"><expr pos:start="93:9" pos:end="93:37"><call pos:start="93:9" pos:end="93:37"><name pos:start="93:9" pos:end="93:20">be64_to_cpus</name><argument_list pos:start="93:21" pos:end="93:37">(<argument pos:start="93:22" pos:end="93:36"><expr pos:start="93:22" pos:end="93:36"><operator pos:start="93:22" pos:end="93:22">&amp;</operator><name pos:start="93:23" pos:end="93:36"><name pos:start="93:23" pos:end="93:23">s</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:33">l1_table</name><index pos:start="93:34" pos:end="93:36">[<expr pos:start="93:35" pos:end="93:35"><name pos:start="93:35" pos:end="93:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
