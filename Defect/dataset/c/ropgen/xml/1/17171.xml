<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17171.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:20"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">msvideo1_decode_frame</name><parameter_list pos:start="1:33" pos:end="3:48">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>,
                                <parameter pos:start="2:33" pos:end="2:42"><decl pos:start="2:33" pos:end="2:42"><type pos:start="2:33" pos:end="2:42"><name pos:start="2:33" pos:end="2:36">void</name> <modifier pos:start="2:38" pos:end="2:38">*</modifier></type><name pos:start="2:39" pos:end="2:42">data</name></decl></parameter>, <parameter pos:start="2:45" pos:end="2:58"><decl pos:start="2:45" pos:end="2:58"><type pos:start="2:45" pos:end="2:58"><name pos:start="2:45" pos:end="2:47">int</name> <modifier pos:start="2:49" pos:end="2:49">*</modifier></type><name pos:start="2:50" pos:end="2:58">got_frame</name></decl></parameter>,
                                <parameter pos:start="3:33" pos:end="3:47"><decl pos:start="3:33" pos:end="3:47"><type pos:start="3:33" pos:end="3:47"><name pos:start="3:33" pos:end="3:40">AVPacket</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:47">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="29:20">{<block_content pos:start="5:5" pos:end="29:20">
    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name> <init pos:start="5:24" pos:end="5:36">= <expr pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:30">avpkt</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:31"><decl pos:start="6:5" pos:end="6:30"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:16">buf_size</name> <init pos:start="6:18" pos:end="6:30">= <expr pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:24">avpkt</name><operator pos:start="6:25" pos:end="6:26">-&gt;</operator><name pos:start="6:27" pos:end="6:30">size</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">Msvideo1Context</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name> <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:12"><decl pos:start="8:5" pos:end="8:11"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:11">ret</name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:17"><expr pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:10">buf</name></name> <operator pos:start="9:12" pos:end="9:12">=</operator> <name pos:start="9:14" pos:end="9:16">buf</name></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:23"><expr pos:start="10:5" pos:end="10:22"><name pos:start="10:5" pos:end="10:11"><name pos:start="10:5" pos:end="10:5">s</name><operator pos:start="10:6" pos:end="10:7">-&gt;</operator><name pos:start="10:8" pos:end="10:11">size</name></name> <operator pos:start="10:13" pos:end="10:13">=</operator> <name pos:start="10:15" pos:end="10:22">buf_size</name></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="12:19"><if pos:start="11:5" pos:end="12:19">if <condition pos:start="11:8" pos:end="11:53">(<expr pos:start="11:9" pos:end="11:52"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:12">ret</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <call pos:start="11:16" pos:end="11:47"><name pos:start="11:16" pos:end="11:30">ff_reget_buffer</name><argument_list pos:start="11:31" pos:end="11:47">(<argument pos:start="11:32" pos:end="11:36"><expr pos:start="11:32" pos:end="11:36"><name pos:start="11:32" pos:end="11:36">avctx</name></expr></argument>, <argument pos:start="11:39" pos:end="11:46"><expr pos:start="11:39" pos:end="11:46"><name pos:start="11:39" pos:end="11:46"><name pos:start="11:39" pos:end="11:39">s</name><operator pos:start="11:40" pos:end="11:41">-&gt;</operator><name pos:start="11:42" pos:end="11:46">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="11:48" pos:end="11:48">)</operator> <operator pos:start="11:50" pos:end="11:50">&lt;</operator> <literal type="number" pos:start="11:52" pos:end="11:52">0</literal></expr>)</condition><block type="pseudo" pos:start="12:9" pos:end="12:19"><block_content pos:start="12:9" pos:end="12:19">
        <return pos:start="12:9" pos:end="12:19">return <expr pos:start="12:16" pos:end="12:18"><name pos:start="12:16" pos:end="12:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="13:5" pos:end="29:20"><if pos:start="13:5" pos:end="29:20">if <condition pos:start="13:8" pos:end="13:21">(<expr pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:20">mode_8bit</name></name></expr>)</condition> <block pos:start="13:23" pos:end="29:20">{<block_content pos:start="14:9" pos:end="29:20">
        <decl_stmt pos:start="14:9" pos:end="14:17"><decl pos:start="14:9" pos:end="14:16"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:16">size</name></decl>;</decl_stmt>
        <decl_stmt pos:start="15:9" pos:end="15:88"><decl pos:start="15:9" pos:end="15:87"><type pos:start="15:9" pos:end="15:23"><specifier pos:start="15:9" pos:end="15:13">const</specifier> <name pos:start="15:15" pos:end="15:21">uint8_t</name> <modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:26">pal</name> <init pos:start="15:28" pos:end="15:87">= <expr pos:start="15:30" pos:end="15:87"><call pos:start="15:30" pos:end="15:87"><name pos:start="15:30" pos:end="15:52">av_packet_get_side_data</name><argument_list pos:start="15:53" pos:end="15:87">(<argument pos:start="15:54" pos:end="15:58"><expr pos:start="15:54" pos:end="15:58"><name pos:start="15:54" pos:end="15:58">avpkt</name></expr></argument>, <argument pos:start="15:61" pos:end="15:79"><expr pos:start="15:61" pos:end="15:79"><name pos:start="15:61" pos:end="15:79">AV_PKT_DATA_PALETTE</name></expr></argument>, <argument pos:start="15:82" pos:end="15:86"><expr pos:start="15:82" pos:end="15:86"><operator pos:start="15:82" pos:end="15:82">&amp;</operator><name pos:start="15:83" pos:end="15:86">size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="16:9" pos:end="29:20"><if pos:start="16:9" pos:end="19:9">if <condition pos:start="16:12" pos:end="16:42">(<expr pos:start="16:13" pos:end="16:41"><name pos:start="16:13" pos:end="16:15">pal</name> <operator pos:start="16:17" pos:end="16:18">&amp;&amp;</operator> <name pos:start="16:20" pos:end="16:23">size</name> <operator pos:start="16:25" pos:end="16:26">==</operator> <name pos:start="16:28" pos:end="16:41">AVPALETTE_SIZE</name></expr>)</condition> <block pos:start="16:44" pos:end="19:9">{<block_content pos:start="17:13" pos:end="18:46">
            <expr_stmt pos:start="17:13" pos:end="17:48"><expr pos:start="17:13" pos:end="17:47"><call pos:start="17:13" pos:end="17:47"><name pos:start="17:13" pos:end="17:18">memcpy</name><argument_list pos:start="17:19" pos:end="17:47">(<argument pos:start="17:20" pos:end="17:25"><expr pos:start="17:20" pos:end="17:25"><name pos:start="17:20" pos:end="17:25"><name pos:start="17:20" pos:end="17:20">s</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:25">pal</name></name></expr></argument>, <argument pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><name pos:start="17:28" pos:end="17:30">pal</name></expr></argument>, <argument pos:start="17:33" pos:end="17:46"><expr pos:start="17:33" pos:end="17:46"><name pos:start="17:33" pos:end="17:46">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:46"><expr pos:start="18:13" pos:end="18:45"><name pos:start="18:13" pos:end="18:41"><name pos:start="18:13" pos:end="18:13">s</name><operator pos:start="18:14" pos:end="18:15">-&gt;</operator><name pos:start="18:16" pos:end="18:20">frame</name><operator pos:start="18:21" pos:end="18:22">-&gt;</operator><name pos:start="18:23" pos:end="18:41">palette_has_changed</name></name> <operator pos:start="18:43" pos:end="18:43">=</operator> <literal type="number" pos:start="18:45" pos:end="18:45">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="19:11" pos:end="29:20">else if <condition pos:start="19:19" pos:end="19:23">(<expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">pal</name></expr>)</condition> <block pos:start="19:25" pos:end="29:20">{<block_content pos:start="20:13" pos:end="29:20">
            <expr_stmt pos:start="20:13" pos:end="20:76"><expr pos:start="20:13" pos:end="20:75"><call pos:start="20:13" pos:end="20:75"><name pos:start="20:13" pos:end="20:18">av_log</name><argument_list pos:start="20:19" pos:end="20:75">(<argument pos:start="20:20" pos:end="20:24"><expr pos:start="20:20" pos:end="20:24"><name pos:start="20:20" pos:end="20:24">avctx</name></expr></argument>, <argument pos:start="20:27" pos:end="20:38"><expr pos:start="20:27" pos:end="20:38"><name pos:start="20:27" pos:end="20:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="20:41" pos:end="20:68"><expr pos:start="20:41" pos:end="20:68"><literal type="string" pos:start="20:41" pos:end="20:68">"Palette size %d is wrong\n"</literal></expr></argument>, <argument pos:start="20:71" pos:end="20:74"><expr pos:start="20:71" pos:end="20:74"><name pos:start="20:71" pos:end="20:74">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="21:5" pos:end="24:33"><if pos:start="21:5" pos:end="22:32">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:20">mode_8bit</name></name></expr>)</condition><block type="pseudo" pos:start="22:9" pos:end="22:32"><block_content pos:start="22:9" pos:end="22:32">
        <expr_stmt pos:start="22:9" pos:end="22:32"><expr pos:start="22:9" pos:end="22:31"><call pos:start="22:9" pos:end="22:31"><name pos:start="22:9" pos:end="22:28">msvideo1_decode_8bit</name><argument_list pos:start="22:29" pos:end="22:31">(<argument pos:start="22:30" pos:end="22:30"><expr pos:start="22:30" pos:end="22:30"><name pos:start="22:30" pos:end="22:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="23:5" pos:end="24:33">else<block type="pseudo" pos:start="24:9" pos:end="24:33"><block_content pos:start="24:9" pos:end="24:33">
        <expr_stmt pos:start="24:9" pos:end="24:33"><expr pos:start="24:9" pos:end="24:32"><call pos:start="24:9" pos:end="24:32"><name pos:start="24:9" pos:end="24:29">msvideo1_decode_16bit</name><argument_list pos:start="24:30" pos:end="24:32">(<argument pos:start="24:31" pos:end="24:31"><expr pos:start="24:31" pos:end="24:31"><name pos:start="24:31" pos:end="24:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="25:5" pos:end="26:19"><if pos:start="25:5" pos:end="26:19">if <condition pos:start="25:8" pos:end="25:49">(<expr pos:start="25:9" pos:end="25:48"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:12">ret</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:43"><name pos:start="25:16" pos:end="25:27">av_frame_ref</name><argument_list pos:start="25:28" pos:end="25:43">(<argument pos:start="25:29" pos:end="25:32"><expr pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:32">data</name></expr></argument>, <argument pos:start="25:35" pos:end="25:42"><expr pos:start="25:35" pos:end="25:42"><name pos:start="25:35" pos:end="25:42"><name pos:start="25:35" pos:end="25:35">s</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:42">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="25:44" pos:end="25:44">)</operator> <operator pos:start="25:46" pos:end="25:46">&lt;</operator> <literal type="number" pos:start="25:48" pos:end="25:48">0</literal></expr>)</condition><block type="pseudo" pos:start="26:9" pos:end="26:19"><block_content pos:start="26:9" pos:end="26:19">
        <return pos:start="26:9" pos:end="26:19">return <expr pos:start="26:16" pos:end="26:18"><name pos:start="26:16" pos:end="26:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><operator pos:start="27:5" pos:end="27:5">*</operator><name pos:start="27:6" pos:end="27:14">got_frame</name>      <operator pos:start="27:21" pos:end="27:21">=</operator> <literal type="number" pos:start="27:23" pos:end="27:23">1</literal></expr>;</expr_stmt>
    <comment type="block" pos:start="28:5" pos:end="28:56">/* report that the buffer was completely consumed */</comment>
    <return pos:start="29:5" pos:end="29:20">return <expr pos:start="29:12" pos:end="29:19"><name pos:start="29:12" pos:end="29:19">buf_size</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
