<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1643.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">omap_intc_init</name><parameter_list pos:start="1:26" pos:end="1:44">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:38">SysBusDevice</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">sbd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name> <init pos:start="5:22" pos:end="5:34">= <expr pos:start="5:24" pos:end="5:34"><call pos:start="5:24" pos:end="5:34"><name pos:start="5:24" pos:end="5:29">DEVICE</name><argument_list pos:start="5:30" pos:end="5:34">(<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">sbd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:30">omap_intr_handler_s</name></name> <modifier pos:start="7:32" pos:end="7:32">*</modifier></type><name pos:start="7:33" pos:end="7:33">s</name> <init pos:start="7:35" pos:end="7:50">= <expr pos:start="7:37" pos:end="7:50"><call pos:start="7:37" pos:end="7:50"><name pos:start="7:37" pos:end="7:45">OMAP_INTC</name><argument_list pos:start="7:46" pos:end="7:50">(<argument pos:start="7:47" pos:end="7:49"><expr pos:start="7:47" pos:end="7:49"><name pos:start="7:47" pos:end="7:49">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:16"><name pos:start="11:10" pos:end="11:10">s</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:16">iclk</name></name></expr>)</condition> <block pos:start="11:19" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:51">

        <expr_stmt pos:start="13:9" pos:end="13:51"><expr pos:start="13:9" pos:end="13:50"><call pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:16">hw_error</name><argument_list pos:start="13:17" pos:end="13:50">(<argument pos:start="13:18" pos:end="13:49"><expr pos:start="13:18" pos:end="13:49"><literal type="string" pos:start="13:18" pos:end="13:49">"omap-intc: clk not connected\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:13">nbanks</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><call pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:19">sysbus_init_irq</name><argument_list pos:start="19:20" pos:end="19:44">(<argument pos:start="19:21" pos:end="19:23"><expr pos:start="19:21" pos:end="19:23"><name pos:start="19:21" pos:end="19:23">sbd</name></expr></argument>, <argument pos:start="19:26" pos:end="19:43"><expr pos:start="19:26" pos:end="19:43"><operator pos:start="19:26" pos:end="19:26">&amp;</operator><name pos:start="19:27" pos:end="19:43"><name pos:start="19:27" pos:end="19:27">s</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:40">parent_intr</name><index pos:start="19:41" pos:end="19:43">[<expr pos:start="19:42" pos:end="19:42"><literal type="number" pos:start="19:42" pos:end="19:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><call pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:19">sysbus_init_irq</name><argument_list pos:start="21:20" pos:end="21:44">(<argument pos:start="21:21" pos:end="21:23"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:23">sbd</name></expr></argument>, <argument pos:start="21:26" pos:end="21:43"><expr pos:start="21:26" pos:end="21:43"><operator pos:start="21:26" pos:end="21:26">&amp;</operator><name pos:start="21:27" pos:end="21:43"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:40">parent_intr</name><index pos:start="21:41" pos:end="21:43">[<expr pos:start="21:42" pos:end="21:42"><literal type="number" pos:start="21:42" pos:end="21:42">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:58"><expr pos:start="23:5" pos:end="23:57"><call pos:start="23:5" pos:end="23:57"><name pos:start="23:5" pos:end="23:21">qdev_init_gpio_in</name><argument_list pos:start="23:22" pos:end="23:57">(<argument pos:start="23:23" pos:end="23:25"><expr pos:start="23:23" pos:end="23:25"><name pos:start="23:23" pos:end="23:25">dev</name></expr></argument>, <argument pos:start="23:28" pos:end="23:40"><expr pos:start="23:28" pos:end="23:40"><name pos:start="23:28" pos:end="23:40">omap_set_intr</name></expr></argument>, <argument pos:start="23:43" pos:end="23:56"><expr pos:start="23:43" pos:end="23:56"><name pos:start="23:43" pos:end="23:51"><name pos:start="23:43" pos:end="23:43">s</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:51">nbanks</name></name> <operator pos:start="23:53" pos:end="23:53">*</operator> <literal type="number" pos:start="23:55" pos:end="23:56">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:48"><expr pos:start="25:5" pos:end="27:47"><call pos:start="25:5" pos:end="27:47"><name pos:start="25:5" pos:end="25:25">memory_region_init_io</name><argument_list pos:start="25:26" pos:end="27:47">(<argument pos:start="25:27" pos:end="25:34"><expr pos:start="25:27" pos:end="25:34"><operator pos:start="25:27" pos:end="25:27">&amp;</operator><name pos:start="25:28" pos:end="25:34"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:34">mmio</name></name></expr></argument>, <argument pos:start="25:37" pos:end="25:45"><expr pos:start="25:37" pos:end="25:45"><call pos:start="25:37" pos:end="25:45"><name pos:start="25:37" pos:end="25:42">OBJECT</name><argument_list pos:start="25:43" pos:end="25:45">(<argument pos:start="25:44" pos:end="25:44"><expr pos:start="25:44" pos:end="25:44"><name pos:start="25:44" pos:end="25:44">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:48" pos:end="25:65"><expr pos:start="25:48" pos:end="25:65"><operator pos:start="25:48" pos:end="25:48">&amp;</operator><name pos:start="25:49" pos:end="25:65">omap_inth_mem_ops</name></expr></argument>, <argument pos:start="25:68" pos:end="25:68"><expr pos:start="25:68" pos:end="25:68"><name pos:start="25:68" pos:end="25:68">s</name></expr></argument>,

                          <argument pos:start="27:27" pos:end="27:37"><expr pos:start="27:27" pos:end="27:37"><literal type="string" pos:start="27:27" pos:end="27:37">"omap-intc"</literal></expr></argument>, <argument pos:start="27:40" pos:end="27:46"><expr pos:start="27:40" pos:end="27:46"><name pos:start="27:40" pos:end="27:46"><name pos:start="27:40" pos:end="27:40">s</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:46">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><call pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:20">sysbus_init_mmio</name><argument_list pos:start="29:21" pos:end="29:35">(<argument pos:start="29:22" pos:end="29:24"><expr pos:start="29:22" pos:end="29:24"><name pos:start="29:22" pos:end="29:24">sbd</name></expr></argument>, <argument pos:start="29:27" pos:end="29:34"><expr pos:start="29:27" pos:end="29:34"><operator pos:start="29:27" pos:end="29:27">&amp;</operator><name pos:start="29:28" pos:end="29:34"><name pos:start="29:28" pos:end="29:28">s</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:34">mmio</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
