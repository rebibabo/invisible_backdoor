<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10825.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:14">bdrv_open2</name><parameter_list pos:start="1:15" pos:end="3:32">(<parameter pos:start="1:16" pos:end="1:35"><decl pos:start="1:16" pos:end="1:35"><type pos:start="1:16" pos:end="1:35"><name pos:start="1:16" pos:end="1:31">BlockDriverState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:35">bs</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:47">char</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:57">filename</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">flags</name></decl></parameter>,

               <parameter pos:start="3:16" pos:end="3:31"><decl pos:start="3:16" pos:end="3:31"><type pos:start="3:16" pos:end="3:31"><name pos:start="3:16" pos:end="3:26">BlockDriver</name> <modifier pos:start="3:28" pos:end="3:28">*</modifier></type><name pos:start="3:29" pos:end="3:31">drv</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="213:1">{<block_content pos:start="7:5" pos:end="211:13">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:23">open_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:31"><name pos:start="9:10" pos:end="9:21">tmp_filename</name><index pos:start="9:22" pos:end="9:31">[<expr pos:start="9:23" pos:end="9:30"><name pos:start="9:23" pos:end="9:30">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:35"><name pos:start="11:10" pos:end="11:25">backing_filename</name><index pos:start="11:26" pos:end="11:35">[<expr pos:start="11:27" pos:end="11:34"><name pos:start="11:27" pos:end="11:34">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:6">bs</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:17">read_only</name></name> <operator pos:start="15:19" pos:end="15:19">=</operator> <literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:6">bs</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:20">is_temporary</name></name> <operator pos:start="17:22" pos:end="17:22">=</operator> <literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:6">bs</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:17">encrypted</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:6">bs</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:16">autogrow</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:25"><if pos:start="25:5" pos:end="27:25">if <condition pos:start="25:8" pos:end="25:32">(<expr pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:13">flags</name> <operator pos:start="25:15" pos:end="25:15">&amp;</operator> <name pos:start="25:17" pos:end="25:31">BDRV_O_AUTOGROW</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:25"><block_content pos:start="27:9" pos:end="27:25">

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:10">bs</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:20">autogrow</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <literal type="number" pos:start="27:24" pos:end="27:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="85:5"><if pos:start="31:5" pos:end="85:5">if <condition pos:start="31:8" pos:end="31:32">(<expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:13">flags</name> <operator pos:start="31:15" pos:end="31:15">&amp;</operator> <name pos:start="31:17" pos:end="31:31">BDRV_O_SNAPSHOT</name></expr>)</condition> <block pos:start="31:34" pos:end="85:5">{<block_content pos:start="33:9" pos:end="83:29">

        <decl_stmt pos:start="33:9" pos:end="33:30"><decl pos:start="33:9" pos:end="33:29"><type pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:24">BlockDriverState</name> <modifier pos:start="33:26" pos:end="33:26">*</modifier></type><name pos:start="33:27" pos:end="33:29">bs1</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:27"><decl pos:start="35:9" pos:end="35:26"><type pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:15">int64_t</name></type> <name pos:start="35:17" pos:end="35:26">total_size</name></decl>;</decl_stmt>



        <comment type="block" pos:start="39:9" pos:end="41:52">/* if snapshot, we create a temporary backing file and open it

           instead of opening 'filename' directly */</comment>



        <comment type="block" pos:start="45:9" pos:end="45:48">/* if there is a backing file, use it */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:27"><expr pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:11">bs1</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:26"><name pos:start="47:15" pos:end="47:22">bdrv_new</name><argument_list pos:start="47:23" pos:end="47:26">(<argument pos:start="47:24" pos:end="47:25"><expr pos:start="47:24" pos:end="47:25"><literal type="string" pos:start="47:24" pos:end="47:25">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:17">(<expr pos:start="49:13" pos:end="49:16"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:16">bs1</name></expr>)</condition> <block pos:start="49:19" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:27">

            <return pos:start="51:13" pos:end="51:27">return <expr pos:start="51:20" pos:end="51:26"><operator pos:start="51:20" pos:end="51:20">-</operator><name pos:start="51:21" pos:end="51:26">ENOMEM</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="55:9" pos:end="61:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:44">(<expr pos:start="55:13" pos:end="55:43"><call pos:start="55:13" pos:end="55:39"><name pos:start="55:13" pos:end="55:21">bdrv_open</name><argument_list pos:start="55:22" pos:end="55:39">(<argument pos:start="55:23" pos:end="55:25"><expr pos:start="55:23" pos:end="55:25"><name pos:start="55:23" pos:end="55:25">bs1</name></expr></argument>, <argument pos:start="55:28" pos:end="55:35"><expr pos:start="55:28" pos:end="55:35"><name pos:start="55:28" pos:end="55:35">filename</name></expr></argument>, <argument pos:start="55:38" pos:end="55:38"><expr pos:start="55:38" pos:end="55:38"><literal type="number" pos:start="55:38" pos:end="55:38">0</literal></expr></argument>)</argument_list></call> <operator pos:start="55:41" pos:end="55:41">&lt;</operator> <literal type="number" pos:start="55:43" pos:end="55:43">0</literal></expr>)</condition> <block pos:start="55:46" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:22">

            <expr_stmt pos:start="57:13" pos:end="57:29"><expr pos:start="57:13" pos:end="57:28"><call pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:23">bdrv_delete</name><argument_list pos:start="57:24" pos:end="57:28">(<argument pos:start="57:25" pos:end="57:27"><expr pos:start="57:25" pos:end="57:27"><name pos:start="57:25" pos:end="57:27">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:22">return <expr pos:start="59:20" pos:end="59:21"><operator pos:start="59:20" pos:end="59:20">-</operator><literal type="number" pos:start="59:21" pos:end="59:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:56"><expr pos:start="63:9" pos:end="63:55"><name pos:start="63:9" pos:end="63:18">total_size</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <call pos:start="63:22" pos:end="63:40"><name pos:start="63:22" pos:end="63:35">bdrv_getlength</name><argument_list pos:start="63:36" pos:end="63:40">(<argument pos:start="63:37" pos:end="63:39"><expr pos:start="63:37" pos:end="63:39"><name pos:start="63:37" pos:end="63:39">bs1</name></expr></argument>)</argument_list></call> <operator pos:start="63:42" pos:end="63:43">&gt;&gt;</operator> <name pos:start="63:45" pos:end="63:55">SECTOR_BITS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:25"><expr pos:start="65:9" pos:end="65:24"><call pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:19">bdrv_delete</name><argument_list pos:start="65:20" pos:end="65:24">(<argument pos:start="65:21" pos:end="65:23"><expr pos:start="65:21" pos:end="65:23"><name pos:start="65:21" pos:end="65:23">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:61"><expr pos:start="69:9" pos:end="69:60"><call pos:start="69:9" pos:end="69:60"><name pos:start="69:9" pos:end="69:24">get_tmp_filename</name><argument_list pos:start="69:25" pos:end="69:60">(<argument pos:start="69:26" pos:end="69:37"><expr pos:start="69:26" pos:end="69:37"><name pos:start="69:26" pos:end="69:37">tmp_filename</name></expr></argument>, <argument pos:start="69:40" pos:end="69:59"><expr pos:start="69:40" pos:end="69:59"><sizeof pos:start="69:40" pos:end="69:59">sizeof<argument_list pos:start="69:46" pos:end="69:59">(<argument pos:start="69:47" pos:end="69:58"><expr pos:start="69:47" pos:end="69:58"><name pos:start="69:47" pos:end="69:58">tmp_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:45"><expr pos:start="71:9" pos:end="71:44"><call pos:start="71:9" pos:end="71:44"><name pos:start="71:9" pos:end="71:16">realpath</name><argument_list pos:start="71:17" pos:end="71:44">(<argument pos:start="71:18" pos:end="71:25"><expr pos:start="71:18" pos:end="71:25"><name pos:start="71:18" pos:end="71:25">filename</name></expr></argument>, <argument pos:start="71:28" pos:end="71:43"><expr pos:start="71:28" pos:end="71:43"><name pos:start="71:28" pos:end="71:43">backing_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="79:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="75:61">(<expr pos:start="73:13" pos:end="75:60"><call pos:start="73:13" pos:end="75:56"><name pos:start="73:13" pos:end="73:23">bdrv_create</name><argument_list pos:start="73:24" pos:end="75:56">(<argument pos:start="73:25" pos:end="73:35"><expr pos:start="73:25" pos:end="73:35"><operator pos:start="73:25" pos:end="73:25">&amp;</operator><name pos:start="73:26" pos:end="73:35">bdrv_qcow2</name></expr></argument>, <argument pos:start="73:38" pos:end="73:49"><expr pos:start="73:38" pos:end="73:49"><name pos:start="73:38" pos:end="73:49">tmp_filename</name></expr></argument>,

                        <argument pos:start="75:25" pos:end="75:34"><expr pos:start="75:25" pos:end="75:34"><name pos:start="75:25" pos:end="75:34">total_size</name></expr></argument>, <argument pos:start="75:37" pos:end="75:52"><expr pos:start="75:37" pos:end="75:52"><name pos:start="75:37" pos:end="75:52">backing_filename</name></expr></argument>, <argument pos:start="75:55" pos:end="75:55"><expr pos:start="75:55" pos:end="75:55"><literal type="number" pos:start="75:55" pos:end="75:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="75:58" pos:end="75:58">&lt;</operator> <literal type="number" pos:start="75:60" pos:end="75:60">0</literal></expr>)</condition> <block pos:start="75:63" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:22">

            <return pos:start="77:13" pos:end="77:22">return <expr pos:start="77:20" pos:end="77:21"><operator pos:start="77:20" pos:end="77:20">-</operator><literal type="number" pos:start="77:21" pos:end="77:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:32"><expr pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:16">filename</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <name pos:start="81:20" pos:end="81:31">tmp_filename</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:29"><expr pos:start="83:9" pos:end="83:28"><name pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:10">bs</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:24">is_temporary</name></name> <operator pos:start="83:26" pos:end="83:26">=</operator> <literal type="number" pos:start="83:28" pos:end="83:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:58"><expr pos:start="89:5" pos:end="89:57"><call pos:start="89:5" pos:end="89:57"><name pos:start="89:5" pos:end="89:11">pstrcpy</name><argument_list pos:start="89:12" pos:end="89:57">(<argument pos:start="89:13" pos:end="89:24"><expr pos:start="89:13" pos:end="89:24"><name pos:start="89:13" pos:end="89:24"><name pos:start="89:13" pos:end="89:14">bs</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:24">filename</name></name></expr></argument>, <argument pos:start="89:27" pos:end="89:46"><expr pos:start="89:27" pos:end="89:46"><sizeof pos:start="89:27" pos:end="89:46">sizeof<argument_list pos:start="89:33" pos:end="89:46">(<argument pos:start="89:34" pos:end="89:45"><expr pos:start="89:34" pos:end="89:45"><name pos:start="89:34" pos:end="89:45"><name pos:start="89:34" pos:end="89:35">bs</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:45">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="89:49" pos:end="89:56"><expr pos:start="89:49" pos:end="89:56"><name pos:start="89:49" pos:end="89:56">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="111:5"><if pos:start="91:5" pos:end="99:5">if <condition pos:start="91:8" pos:end="91:28">(<expr pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:13">flags</name> <operator pos:start="91:15" pos:end="91:15">&amp;</operator> <name pos:start="91:17" pos:end="91:27">BDRV_O_FILE</name></expr>)</condition> <block pos:start="91:30" pos:end="99:5">{<block_content pos:start="93:9" pos:end="97:27">

        <expr_stmt pos:start="93:9" pos:end="93:38"><expr pos:start="93:9" pos:end="93:37"><name pos:start="93:9" pos:end="93:11">drv</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="93:37"><name pos:start="93:15" pos:end="93:27">find_protocol</name><argument_list pos:start="93:28" pos:end="93:37">(<argument pos:start="93:29" pos:end="93:36"><expr pos:start="93:29" pos:end="93:36"><name pos:start="93:29" pos:end="93:36">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="97:27"><if pos:start="95:9" pos:end="97:27">if <condition pos:start="95:12" pos:end="95:17">(<expr pos:start="95:13" pos:end="95:16"><operator pos:start="95:13" pos:end="95:13">!</operator><name pos:start="95:14" pos:end="95:16">drv</name></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:27"><block_content pos:start="97:13" pos:end="97:27">

            <return pos:start="97:13" pos:end="97:27">return <expr pos:start="97:20" pos:end="97:26"><operator pos:start="97:20" pos:end="97:20">-</operator><name pos:start="97:21" pos:end="97:26">ENOENT</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="111:5">else <block pos:start="99:12" pos:end="111:5">{<block_content pos:start="101:9" pos:end="109:9">

        <if_stmt pos:start="101:9" pos:end="109:9"><if pos:start="101:9" pos:end="109:9">if <condition pos:start="101:12" pos:end="101:17">(<expr pos:start="101:13" pos:end="101:16"><operator pos:start="101:13" pos:end="101:13">!</operator><name pos:start="101:14" pos:end="101:16">drv</name></expr>)</condition> <block pos:start="101:19" pos:end="109:9">{<block_content pos:start="103:13" pos:end="107:26">

            <expr_stmt pos:start="103:13" pos:end="103:46"><expr pos:start="103:13" pos:end="103:45"><name pos:start="103:13" pos:end="103:15">drv</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:45"><name pos:start="103:19" pos:end="103:35">find_image_format</name><argument_list pos:start="103:36" pos:end="103:45">(<argument pos:start="103:37" pos:end="103:44"><expr pos:start="103:37" pos:end="103:44"><name pos:start="103:37" pos:end="103:44">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="107:26"><if pos:start="105:13" pos:end="107:26">if <condition pos:start="105:16" pos:end="105:21">(<expr pos:start="105:17" pos:end="105:20"><operator pos:start="105:17" pos:end="105:17">!</operator><name pos:start="105:18" pos:end="105:20">drv</name></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:26"><block_content pos:start="107:17" pos:end="107:26">

                <return pos:start="107:17" pos:end="107:26">return <expr pos:start="107:24" pos:end="107:25"><operator pos:start="107:24" pos:end="107:24">-</operator><literal type="number" pos:start="107:25" pos:end="107:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:18"><expr pos:start="113:5" pos:end="113:17"><name pos:start="113:5" pos:end="113:11"><name pos:start="113:5" pos:end="113:6">bs</name><operator pos:start="113:7" pos:end="113:8">-&gt;</operator><name pos:start="113:9" pos:end="113:11">drv</name></name> <operator pos:start="113:13" pos:end="113:13">=</operator> <name pos:start="113:15" pos:end="113:17">drv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:50"><expr pos:start="115:5" pos:end="115:49"><name pos:start="115:5" pos:end="115:14"><name pos:start="115:5" pos:end="115:6">bs</name><operator pos:start="115:7" pos:end="115:8">-&gt;</operator><name pos:start="115:9" pos:end="115:14">opaque</name></name> <operator pos:start="115:16" pos:end="115:16">=</operator> <call pos:start="115:18" pos:end="115:49"><name pos:start="115:18" pos:end="115:29">qemu_mallocz</name><argument_list pos:start="115:30" pos:end="115:49">(<argument pos:start="115:31" pos:end="115:48"><expr pos:start="115:31" pos:end="115:48"><name pos:start="115:31" pos:end="115:48"><name pos:start="115:31" pos:end="115:33">drv</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:48">instance_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:26"><expr pos:start="117:5" pos:end="117:25"><name pos:start="117:5" pos:end="117:21"><name pos:start="117:5" pos:end="117:6">bs</name><operator pos:start="117:7" pos:end="117:8">-&gt;</operator><name pos:start="117:9" pos:end="117:21">total_sectors</name></name> <operator pos:start="117:23" pos:end="117:23">=</operator> <literal type="number" pos:start="117:25" pos:end="117:25">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="117:28" pos:end="117:76">/* driver will set if it does not do getlength */</comment>

    <if_stmt pos:start="119:5" pos:end="121:18"><if pos:start="119:5" pos:end="121:18">if <condition pos:start="119:8" pos:end="119:53">(<expr pos:start="119:9" pos:end="119:52"><name pos:start="119:9" pos:end="119:18"><name pos:start="119:9" pos:end="119:10">bs</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:18">opaque</name></name> <operator pos:start="119:20" pos:end="119:21">==</operator> <name pos:start="119:23" pos:end="119:26">NULL</name> <operator pos:start="119:28" pos:end="119:29">&amp;&amp;</operator> <name pos:start="119:31" pos:end="119:48"><name pos:start="119:31" pos:end="119:33">drv</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:48">instance_size</name></name> <operator pos:start="119:50" pos:end="119:50">&gt;</operator> <literal type="number" pos:start="119:52" pos:end="119:52">0</literal></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:18"><block_content pos:start="121:9" pos:end="121:18">

        <return pos:start="121:9" pos:end="121:18">return <expr pos:start="121:16" pos:end="121:17"><operator pos:start="121:16" pos:end="121:16">-</operator><literal type="number" pos:start="121:17" pos:end="121:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <comment type="block" pos:start="123:5" pos:end="125:28">/* Note: for compatibility, we open disk image files as RDWR, and

       RDONLY as fallback */</comment>

    <if_stmt pos:start="127:5" pos:end="133:62"><if pos:start="127:5" pos:end="129:59">if <condition pos:start="127:8" pos:end="127:31">(<expr pos:start="127:9" pos:end="127:30"><operator pos:start="127:9" pos:end="127:9">!</operator><operator pos:start="127:10" pos:end="127:10">(</operator><name pos:start="127:11" pos:end="127:15">flags</name> <operator pos:start="127:17" pos:end="127:17">&amp;</operator> <name pos:start="127:19" pos:end="127:29">BDRV_O_FILE</name><operator pos:start="127:30" pos:end="127:30">)</operator></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:59"><block_content pos:start="129:9" pos:end="129:59">

        <expr_stmt pos:start="129:9" pos:end="129:59"><expr pos:start="129:9" pos:end="129:58"><name pos:start="129:9" pos:end="129:18">open_flags</name> <operator pos:start="129:20" pos:end="129:20">=</operator> <name pos:start="129:22" pos:end="129:32">BDRV_O_RDWR</name> <operator pos:start="129:34" pos:end="129:34">|</operator> <operator pos:start="129:36" pos:end="129:36">(</operator><name pos:start="129:37" pos:end="129:41">flags</name> <operator pos:start="129:43" pos:end="129:43">&amp;</operator> <name pos:start="129:45" pos:end="129:57">BDRV_O_DIRECT</name><operator pos:start="129:58" pos:end="129:58">)</operator></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="131:5" pos:end="133:62">else<block type="pseudo" pos:start="133:9" pos:end="133:62"><block_content pos:start="133:9" pos:end="133:62">

        <expr_stmt pos:start="133:9" pos:end="133:62"><expr pos:start="133:9" pos:end="133:61"><name pos:start="133:9" pos:end="133:18">open_flags</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <name pos:start="133:22" pos:end="133:26">flags</name> <operator pos:start="133:28" pos:end="133:28">&amp;</operator> <operator pos:start="133:30" pos:end="133:30">~</operator><operator pos:start="133:31" pos:end="133:31">(</operator><name pos:start="133:32" pos:end="133:42">BDRV_O_FILE</name> <operator pos:start="133:44" pos:end="133:44">|</operator> <name pos:start="133:46" pos:end="133:60">BDRV_O_SNAPSHOT</name><operator pos:start="133:61" pos:end="133:61">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:51"><expr pos:start="135:5" pos:end="135:50"><name pos:start="135:5" pos:end="135:7">ret</name> <operator pos:start="135:9" pos:end="135:9">=</operator> <call pos:start="135:11" pos:end="135:50"><name pos:start="135:11" pos:end="135:24"><name pos:start="135:11" pos:end="135:13">drv</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:24">bdrv_open</name></name><argument_list pos:start="135:25" pos:end="135:50">(<argument pos:start="135:26" pos:end="135:27"><expr pos:start="135:26" pos:end="135:27"><name pos:start="135:26" pos:end="135:27">bs</name></expr></argument>, <argument pos:start="135:30" pos:end="135:37"><expr pos:start="135:30" pos:end="135:37"><name pos:start="135:30" pos:end="135:37">filename</name></expr></argument>, <argument pos:start="135:40" pos:end="135:49"><expr pos:start="135:40" pos:end="135:49"><name pos:start="135:40" pos:end="135:49">open_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="143:5"><if pos:start="137:5" pos:end="143:5">if <condition pos:start="137:8" pos:end="137:49">(<expr pos:start="137:9" pos:end="137:48"><name pos:start="137:9" pos:end="137:11">ret</name> <operator pos:start="137:13" pos:end="137:14">==</operator> <operator pos:start="137:16" pos:end="137:16">-</operator><name pos:start="137:17" pos:end="137:22">EACCES</name> <operator pos:start="137:24" pos:end="137:25">&amp;&amp;</operator> <operator pos:start="137:27" pos:end="137:27">!</operator><operator pos:start="137:28" pos:end="137:28">(</operator><name pos:start="137:29" pos:end="137:33">flags</name> <operator pos:start="137:35" pos:end="137:35">&amp;</operator> <name pos:start="137:37" pos:end="137:47">BDRV_O_FILE</name><operator pos:start="137:48" pos:end="137:48">)</operator></expr>)</condition> <block pos:start="137:51" pos:end="143:5">{<block_content pos:start="139:9" pos:end="141:26">

        <expr_stmt pos:start="139:9" pos:end="139:58"><expr pos:start="139:9" pos:end="139:57"><name pos:start="139:9" pos:end="139:11">ret</name> <operator pos:start="139:13" pos:end="139:13">=</operator> <call pos:start="139:15" pos:end="139:57"><name pos:start="139:15" pos:end="139:28"><name pos:start="139:15" pos:end="139:17">drv</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:28">bdrv_open</name></name><argument_list pos:start="139:29" pos:end="139:57">(<argument pos:start="139:30" pos:end="139:31"><expr pos:start="139:30" pos:end="139:31"><name pos:start="139:30" pos:end="139:31">bs</name></expr></argument>, <argument pos:start="139:34" pos:end="139:41"><expr pos:start="139:34" pos:end="139:41"><name pos:start="139:34" pos:end="139:41">filename</name></expr></argument>, <argument pos:start="139:44" pos:end="139:56"><expr pos:start="139:44" pos:end="139:56"><name pos:start="139:44" pos:end="139:56">BDRV_O_RDONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:26"><expr pos:start="141:9" pos:end="141:25"><name pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:10">bs</name><operator pos:start="141:11" pos:end="141:12">-&gt;</operator><name pos:start="141:13" pos:end="141:21">read_only</name></name> <operator pos:start="141:23" pos:end="141:23">=</operator> <literal type="number" pos:start="141:25" pos:end="141:25">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="145:5" pos:end="155:5"><if pos:start="145:5" pos:end="155:5">if <condition pos:start="145:8" pos:end="145:16">(<expr pos:start="145:9" pos:end="145:15"><name pos:start="145:9" pos:end="145:11">ret</name> <operator pos:start="145:13" pos:end="145:13">&lt;</operator> <literal type="number" pos:start="145:15" pos:end="145:15">0</literal></expr>)</condition> <block pos:start="145:18" pos:end="155:5">{<block_content pos:start="147:9" pos:end="153:19">

        <expr_stmt pos:start="147:9" pos:end="147:30"><expr pos:start="147:9" pos:end="147:29"><call pos:start="147:9" pos:end="147:29"><name pos:start="147:9" pos:end="147:17">qemu_free</name><argument_list pos:start="147:18" pos:end="147:29">(<argument pos:start="147:19" pos:end="147:28"><expr pos:start="147:19" pos:end="147:28"><name pos:start="147:19" pos:end="147:28"><name pos:start="147:19" pos:end="147:20">bs</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:28">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:26"><expr pos:start="149:9" pos:end="149:25"><name pos:start="149:9" pos:end="149:18"><name pos:start="149:9" pos:end="149:10">bs</name><operator pos:start="149:11" pos:end="149:12">-&gt;</operator><name pos:start="149:13" pos:end="149:18">opaque</name></name> <operator pos:start="149:20" pos:end="149:20">=</operator> <name pos:start="149:22" pos:end="149:25">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:23"><expr pos:start="151:9" pos:end="151:22"><name pos:start="151:9" pos:end="151:15"><name pos:start="151:9" pos:end="151:10">bs</name><operator pos:start="151:11" pos:end="151:12">-&gt;</operator><name pos:start="151:13" pos:end="151:15">drv</name></name> <operator pos:start="151:17" pos:end="151:17">=</operator> <name pos:start="151:19" pos:end="151:22">NULL</name></expr>;</expr_stmt>

        <return pos:start="153:9" pos:end="153:19">return <expr pos:start="153:16" pos:end="153:18"><name pos:start="153:16" pos:end="153:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="157:5" pos:end="164:0"><if pos:start="157:5" pos:end="164:0">if <condition pos:start="157:8" pos:end="157:28">(<expr pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:11">drv</name><operator pos:start="157:12" pos:end="157:13">-&gt;</operator><name pos:start="157:14" pos:end="157:27">bdrv_getlength</name></name></expr>)</condition> <block pos:start="157:30" pos:end="164:0">{<block_content pos:start="159:9" pos:end="159:62">

        <expr_stmt pos:start="159:9" pos:end="159:62"><expr pos:start="159:9" pos:end="159:61"><name pos:start="159:9" pos:end="159:25"><name pos:start="159:9" pos:end="159:10">bs</name><operator pos:start="159:11" pos:end="159:12">-&gt;</operator><name pos:start="159:13" pos:end="159:25">total_sectors</name></name> <operator pos:start="159:27" pos:end="159:27">=</operator> <call pos:start="159:29" pos:end="159:46"><name pos:start="159:29" pos:end="159:42">bdrv_getlength</name><argument_list pos:start="159:43" pos:end="159:46">(<argument pos:start="159:44" pos:end="159:45"><expr pos:start="159:44" pos:end="159:45"><name pos:start="159:44" pos:end="159:45">bs</name></expr></argument>)</argument_list></call> <operator pos:start="159:48" pos:end="159:49">&gt;&gt;</operator> <name pos:start="159:51" pos:end="159:61">SECTOR_BITS</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:ifndef pos:start="163:1" pos:end="163:14">#<cpp:directive pos:start="163:2" pos:end="163:7">ifndef</cpp:directive> <name pos:start="163:9" pos:end="163:14">_WIN32</name></cpp:ifndef>

    <if_stmt pos:start="165:5" pos:end="172:0"><if pos:start="165:5" pos:end="172:0">if <condition pos:start="165:8" pos:end="165:25">(<expr pos:start="165:9" pos:end="165:24"><name pos:start="165:9" pos:end="165:24"><name pos:start="165:9" pos:end="165:10">bs</name><operator pos:start="165:11" pos:end="165:12">-&gt;</operator><name pos:start="165:13" pos:end="165:24">is_temporary</name></name></expr>)</condition> <block pos:start="165:27" pos:end="172:0">{<block_content pos:start="167:9" pos:end="167:25">

        <expr_stmt pos:start="167:9" pos:end="167:25"><expr pos:start="167:9" pos:end="167:24"><call pos:start="167:9" pos:end="167:24"><name pos:start="167:9" pos:end="167:14">unlink</name><argument_list pos:start="167:15" pos:end="167:24">(<argument pos:start="167:16" pos:end="167:23"><expr pos:start="167:16" pos:end="167:23"><name pos:start="167:16" pos:end="167:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="171:1" pos:end="171:6">#<cpp:directive pos:start="171:2" pos:end="171:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="173:5" pos:end="197:5"><if pos:start="173:5" pos:end="197:5">if <condition pos:start="173:8" pos:end="173:36">(<expr pos:start="173:9" pos:end="173:35"><name pos:start="173:9" pos:end="173:27"><name pos:start="173:9" pos:end="173:10">bs</name><operator pos:start="173:11" pos:end="173:12">-&gt;</operator><name pos:start="173:13" pos:end="173:24">backing_file</name><index pos:start="173:25" pos:end="173:27">[<expr pos:start="173:26" pos:end="173:26"><literal type="number" pos:start="173:26" pos:end="173:26">0</literal></expr>]</index></name> <operator pos:start="173:29" pos:end="173:30">!=</operator> <literal type="char" pos:start="173:32" pos:end="173:35">'\0'</literal></expr>)</condition> <block pos:start="173:38" pos:end="197:5">{<block_content pos:start="177:9" pos:end="195:22">

        <comment type="block" pos:start="175:9" pos:end="175:48">/* if there is a backing file, use it */</comment>

        <expr_stmt pos:start="177:9" pos:end="177:38"><expr pos:start="177:9" pos:end="177:37"><name pos:start="177:9" pos:end="177:22"><name pos:start="177:9" pos:end="177:10">bs</name><operator pos:start="177:11" pos:end="177:12">-&gt;</operator><name pos:start="177:13" pos:end="177:22">backing_hd</name></name> <operator pos:start="177:24" pos:end="177:24">=</operator> <call pos:start="177:26" pos:end="177:37"><name pos:start="177:26" pos:end="177:33">bdrv_new</name><argument_list pos:start="177:34" pos:end="177:37">(<argument pos:start="177:35" pos:end="177:36"><expr pos:start="177:35" pos:end="177:36"><literal type="string" pos:start="177:35" pos:end="177:36">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="179:9" pos:end="187:9"><if pos:start="179:9" pos:end="187:9">if <condition pos:start="179:12" pos:end="179:28">(<expr pos:start="179:13" pos:end="179:27"><operator pos:start="179:13" pos:end="179:13">!</operator><name pos:start="179:14" pos:end="179:27"><name pos:start="179:14" pos:end="179:15">bs</name><operator pos:start="179:16" pos:end="179:17">-&gt;</operator><name pos:start="179:18" pos:end="179:27">backing_hd</name></name></expr>)</condition> <block pos:start="179:30" pos:end="187:9">{<block_content pos:start="181:9" pos:end="185:27">

        <label pos:start="181:9" pos:end="181:13"><name pos:start="181:9" pos:end="181:12">fail</name>:</label>

            <expr_stmt pos:start="183:13" pos:end="183:27"><expr pos:start="183:13" pos:end="183:26"><call pos:start="183:13" pos:end="183:26"><name pos:start="183:13" pos:end="183:22">bdrv_close</name><argument_list pos:start="183:23" pos:end="183:26">(<argument pos:start="183:24" pos:end="183:25"><expr pos:start="183:24" pos:end="183:25"><name pos:start="183:24" pos:end="183:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="185:13" pos:end="185:27">return <expr pos:start="185:20" pos:end="185:26"><operator pos:start="185:20" pos:end="185:20">-</operator><name pos:start="185:21" pos:end="185:26">ENOMEM</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="189:9" pos:end="191:49"><expr pos:start="189:9" pos:end="191:48"><call pos:start="189:9" pos:end="191:48"><name pos:start="189:9" pos:end="189:20">path_combine</name><argument_list pos:start="189:21" pos:end="191:48">(<argument pos:start="189:22" pos:end="189:37"><expr pos:start="189:22" pos:end="189:37"><name pos:start="189:22" pos:end="189:37">backing_filename</name></expr></argument>, <argument pos:start="189:40" pos:end="189:63"><expr pos:start="189:40" pos:end="189:63"><sizeof pos:start="189:40" pos:end="189:63">sizeof<argument_list pos:start="189:46" pos:end="189:63">(<argument pos:start="189:47" pos:end="189:62"><expr pos:start="189:47" pos:end="189:62"><name pos:start="189:47" pos:end="189:62">backing_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="191:22" pos:end="191:29"><expr pos:start="191:22" pos:end="191:29"><name pos:start="191:22" pos:end="191:29">filename</name></expr></argument>, <argument pos:start="191:32" pos:end="191:47"><expr pos:start="191:32" pos:end="191:47"><name pos:start="191:32" pos:end="191:47"><name pos:start="191:32" pos:end="191:33">bs</name><operator pos:start="191:34" pos:end="191:35">-&gt;</operator><name pos:start="191:36" pos:end="191:47">backing_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="193:9" pos:end="195:22"><if pos:start="193:9" pos:end="195:22">if <condition pos:start="193:12" pos:end="193:63">(<expr pos:start="193:13" pos:end="193:62"><call pos:start="193:13" pos:end="193:58"><name pos:start="193:13" pos:end="193:21">bdrv_open</name><argument_list pos:start="193:22" pos:end="193:58">(<argument pos:start="193:23" pos:end="193:36"><expr pos:start="193:23" pos:end="193:36"><name pos:start="193:23" pos:end="193:36"><name pos:start="193:23" pos:end="193:24">bs</name><operator pos:start="193:25" pos:end="193:26">-&gt;</operator><name pos:start="193:27" pos:end="193:36">backing_hd</name></name></expr></argument>, <argument pos:start="193:39" pos:end="193:54"><expr pos:start="193:39" pos:end="193:54"><name pos:start="193:39" pos:end="193:54">backing_filename</name></expr></argument>, <argument pos:start="193:57" pos:end="193:57"><expr pos:start="193:57" pos:end="193:57"><literal type="number" pos:start="193:57" pos:end="193:57">0</literal></expr></argument>)</argument_list></call> <operator pos:start="193:60" pos:end="193:60">&lt;</operator> <literal type="number" pos:start="193:62" pos:end="193:62">0</literal></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:22"><block_content pos:start="195:13" pos:end="195:22">

            <goto pos:start="195:13" pos:end="195:22">goto <name pos:start="195:18" pos:end="195:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="201:5" pos:end="201:34">/* call the change callback */</comment>

    <expr_stmt pos:start="203:5" pos:end="203:26"><expr pos:start="203:5" pos:end="203:25"><name pos:start="203:5" pos:end="203:21"><name pos:start="203:5" pos:end="203:6">bs</name><operator pos:start="203:7" pos:end="203:8">-&gt;</operator><name pos:start="203:9" pos:end="203:21">media_changed</name></name> <operator pos:start="203:23" pos:end="203:23">=</operator> <literal type="number" pos:start="203:25" pos:end="203:25">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="205:5" pos:end="207:41"><if pos:start="205:5" pos:end="207:41">if <condition pos:start="205:8" pos:end="205:22">(<expr pos:start="205:9" pos:end="205:21"><name pos:start="205:9" pos:end="205:21"><name pos:start="205:9" pos:end="205:10">bs</name><operator pos:start="205:11" pos:end="205:12">-&gt;</operator><name pos:start="205:13" pos:end="205:21">change_cb</name></name></expr>)</condition><block type="pseudo" pos:start="207:9" pos:end="207:41"><block_content pos:start="207:9" pos:end="207:41">

        <expr_stmt pos:start="207:9" pos:end="207:41"><expr pos:start="207:9" pos:end="207:40"><call pos:start="207:9" pos:end="207:40"><name pos:start="207:9" pos:end="207:21"><name pos:start="207:9" pos:end="207:10">bs</name><operator pos:start="207:11" pos:end="207:12">-&gt;</operator><name pos:start="207:13" pos:end="207:21">change_cb</name></name><argument_list pos:start="207:22" pos:end="207:40">(<argument pos:start="207:23" pos:end="207:39"><expr pos:start="207:23" pos:end="207:39"><name pos:start="207:23" pos:end="207:39"><name pos:start="207:23" pos:end="207:24">bs</name><operator pos:start="207:25" pos:end="207:26">-&gt;</operator><name pos:start="207:27" pos:end="207:39">change_opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="211:5" pos:end="211:13">return <expr pos:start="211:12" pos:end="211:12"><literal type="number" pos:start="211:12" pos:end="211:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
