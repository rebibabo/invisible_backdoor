<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19632.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">kvm_arch_init_vcpu</name><parameter_list pos:start="1:23" pos:end="1:37">(<parameter pos:start="1:24" pos:end="1:36"><decl pos:start="1:24" pos:end="1:36"><type pos:start="1:24" pos:end="1:33"><name pos:start="1:24" pos:end="1:31">CPUState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="189:1">{<block_content pos:start="5:5" pos:end="187:60">

    <struct pos:start="5:5" pos:end="11:41">struct <block pos:start="5:12" pos:end="11:5">{

        <decl_stmt pos:start="7:9" pos:end="7:32"><decl pos:start="7:9" pos:end="7:31"><type pos:start="7:9" pos:end="7:25"><name pos:start="7:9" pos:end="7:25"><name pos:start="7:9" pos:end="7:14">struct</name> <name pos:start="7:16" pos:end="7:25">kvm_cpuid2</name></name></type> <name pos:start="7:27" pos:end="7:31">cpuid</name></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:45"><decl pos:start="9:9" pos:end="9:44"><type pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:14">struct</name> <name pos:start="9:16" pos:end="9:31">kvm_cpuid_entry2</name></name></type> <name pos:start="9:33" pos:end="9:44"><name pos:start="9:33" pos:end="9:39">entries</name><index pos:start="9:40" pos:end="9:44">[<expr pos:start="9:41" pos:end="9:43"><literal type="number" pos:start="9:41" pos:end="9:43">100</literal></expr>]</index></name></decl>;</decl_stmt>

    }</block> <decl pos:start="11:7" pos:end="11:40"><name pos:start="11:7" pos:end="11:19">__attribute__</name><argument_list pos:start="11:20" pos:end="11:29">(<argument pos:start="11:21" pos:end="11:28"><expr pos:start="11:21" pos:end="11:28"><operator pos:start="11:21" pos:end="11:21">(</operator><name pos:start="11:22" pos:end="11:27">packed</name><operator pos:start="11:28" pos:end="11:28">)</operator></expr></argument>)</argument_list> <name pos:start="11:31" pos:end="11:40">cpuid_data</name></decl>;</struct>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:18">limit</name></decl>, <decl pos:start="13:21" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:21" pos:end="13:21">i</name></decl>, <decl pos:start="13:24" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:24" pos:end="13:24">j</name></decl>, <decl pos:start="13:27" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:27" pos:end="13:33">cpuid_i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:16">eax</name></decl>, <decl pos:start="15:19" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:19" pos:end="15:21">ebx</name></decl>, <decl pos:start="15:24" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:24" pos:end="15:26">ecx</name></decl>, <decl pos:start="15:29" pos:end="15:31"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:29" pos:end="15:31">edx</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:16"><expr pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:11">cpuid_i</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:53"><expr pos:start="23:5" pos:end="23:52"><call pos:start="23:5" pos:end="23:52"><name pos:start="23:5" pos:end="23:17">cpu_x86_cpuid</name><argument_list pos:start="23:18" pos:end="23:52">(<argument pos:start="23:19" pos:end="23:21"><expr pos:start="23:19" pos:end="23:21"><name pos:start="23:19" pos:end="23:21">env</name></expr></argument>, <argument pos:start="23:24" pos:end="23:24"><expr pos:start="23:24" pos:end="23:24"><literal type="number" pos:start="23:24" pos:end="23:24">0</literal></expr></argument>, <argument pos:start="23:27" pos:end="23:27"><expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr></argument>, <argument pos:start="23:30" pos:end="23:33"><expr pos:start="23:30" pos:end="23:33"><operator pos:start="23:30" pos:end="23:30">&amp;</operator><name pos:start="23:31" pos:end="23:33">eax</name></expr></argument>, <argument pos:start="23:36" pos:end="23:39"><expr pos:start="23:36" pos:end="23:39"><operator pos:start="23:36" pos:end="23:36">&amp;</operator><name pos:start="23:37" pos:end="23:39">ebx</name></expr></argument>, <argument pos:start="23:42" pos:end="23:45"><expr pos:start="23:42" pos:end="23:45"><operator pos:start="23:42" pos:end="23:42">&amp;</operator><name pos:start="23:43" pos:end="23:45">ecx</name></expr></argument>, <argument pos:start="23:48" pos:end="23:51"><expr pos:start="23:48" pos:end="23:51"><operator pos:start="23:48" pos:end="23:48">&amp;</operator><name pos:start="23:49" pos:end="23:51">edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:16"><expr pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:9">limit</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <name pos:start="25:13" pos:end="25:15">eax</name></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="153:5">for <control pos:start="29:9" pos:end="29:32">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:27"><expr pos:start="29:17" pos:end="29:26"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:20">&lt;=</operator> <name pos:start="29:22" pos:end="29:26">limit</name></expr>;</condition> <incr pos:start="29:29" pos:end="29:31"><expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:29">i</name><operator pos:start="29:30" pos:end="29:31">++</operator></expr></incr>)</control> <block pos:start="29:34" pos:end="153:5">{<block_content pos:start="31:9" pos:end="151:9">

        <decl_stmt pos:start="31:9" pos:end="31:68"><decl pos:start="31:9" pos:end="31:67"><type pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:14">struct</name> <name pos:start="31:16" pos:end="31:31">kvm_cpuid_entry2</name></name> <modifier pos:start="31:33" pos:end="31:33">*</modifier></type><name pos:start="31:34" pos:end="31:34">c</name> <init pos:start="31:36" pos:end="31:67">= <expr pos:start="31:38" pos:end="31:67"><operator pos:start="31:38" pos:end="31:38">&amp;</operator><name pos:start="31:39" pos:end="31:67"><name pos:start="31:39" pos:end="31:48">cpuid_data</name><operator pos:start="31:49" pos:end="31:49">.</operator><name pos:start="31:50" pos:end="31:56">entries</name><index pos:start="31:57" pos:end="31:67">[<expr pos:start="31:58" pos:end="31:66"><name pos:start="31:58" pos:end="31:64">cpuid_i</name><operator pos:start="31:65" pos:end="31:66">++</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <switch pos:start="35:9" pos:end="151:9">switch <condition pos:start="35:16" pos:end="35:18">(<expr pos:start="35:17" pos:end="35:17"><name pos:start="35:17" pos:end="35:17">i</name></expr>)</condition> <block pos:start="35:20" pos:end="151:9">{<block_content pos:start="37:9" pos:end="149:18">

        <case pos:start="37:9" pos:end="37:15">case <expr pos:start="37:14" pos:end="37:14"><literal type="number" pos:start="37:14" pos:end="37:14">2</literal></expr>:</case> <block pos:start="37:17" pos:end="89:9">{<block_content pos:start="41:13" pos:end="87:18">

            <comment type="block" pos:start="39:13" pos:end="39:72">/* Keep reading function 2 till all the input is received */</comment>

            <decl_stmt pos:start="41:13" pos:end="41:22"><decl pos:start="41:13" pos:end="41:21"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:21">times</name></decl>;</decl_stmt>



            <expr_stmt pos:start="45:13" pos:end="45:61"><expr pos:start="45:13" pos:end="45:60"><call pos:start="45:13" pos:end="45:60"><name pos:start="45:13" pos:end="45:25">cpu_x86_cpuid</name><argument_list pos:start="45:26" pos:end="45:60">(<argument pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:29">env</name></expr></argument>, <argument pos:start="45:32" pos:end="45:32"><expr pos:start="45:32" pos:end="45:32"><name pos:start="45:32" pos:end="45:32">i</name></expr></argument>, <argument pos:start="45:35" pos:end="45:35"><expr pos:start="45:35" pos:end="45:35"><literal type="number" pos:start="45:35" pos:end="45:35">0</literal></expr></argument>, <argument pos:start="45:38" pos:end="45:41"><expr pos:start="45:38" pos:end="45:41"><operator pos:start="45:38" pos:end="45:38">&amp;</operator><name pos:start="45:39" pos:end="45:41">eax</name></expr></argument>, <argument pos:start="45:44" pos:end="45:47"><expr pos:start="45:44" pos:end="45:47"><operator pos:start="45:44" pos:end="45:44">&amp;</operator><name pos:start="45:45" pos:end="45:47">ebx</name></expr></argument>, <argument pos:start="45:50" pos:end="45:53"><expr pos:start="45:50" pos:end="45:53"><operator pos:start="45:50" pos:end="45:50">&amp;</operator><name pos:start="45:51" pos:end="45:53">ecx</name></expr></argument>, <argument pos:start="45:56" pos:end="45:59"><expr pos:start="45:56" pos:end="45:59"><operator pos:start="45:56" pos:end="45:56">&amp;</operator><name pos:start="45:57" pos:end="45:59">edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:31"><expr pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:17">times</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:23">eax</name> <operator pos:start="47:25" pos:end="47:25">&amp;</operator> <literal type="number" pos:start="47:27" pos:end="47:30">0xff</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="51:13" pos:end="51:28"><expr pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:13">c</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:23">function</name></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:27">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:53"><expr pos:start="53:13" pos:end="53:52"><name pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:13">c</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:20">flags</name></name> <operator pos:start="53:22" pos:end="53:23">|=</operator> <name pos:start="53:25" pos:end="53:52">KVM_CPUID_FLAG_STATEFUL_FUNC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:55"><expr pos:start="55:13" pos:end="55:54"><name pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:13">c</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:20">flags</name></name> <operator pos:start="55:22" pos:end="55:23">|=</operator> <name pos:start="55:25" pos:end="55:54">KVM_CPUID_FLAG_STATE_READ_NEXT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:25"><expr pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:18"><name pos:start="57:13" pos:end="57:13">c</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:18">eax</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:24">eax</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:25"><expr pos:start="59:13" pos:end="59:24"><name pos:start="59:13" pos:end="59:18"><name pos:start="59:13" pos:end="59:13">c</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:18">ebx</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:24">ebx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:25"><expr pos:start="61:13" pos:end="61:24"><name pos:start="61:13" pos:end="61:18"><name pos:start="61:13" pos:end="61:13">c</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:18">ecx</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:24">ecx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:25"><expr pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:18"><name pos:start="63:13" pos:end="63:13">c</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:18">edx</name></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:24">edx</name></expr>;</expr_stmt>



            <for pos:start="67:13" pos:end="85:13">for <control pos:start="67:17" pos:end="67:39">(<init pos:start="67:18" pos:end="67:23"><expr pos:start="67:18" pos:end="67:22"><name pos:start="67:18" pos:end="67:18">j</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">1</literal></expr>;</init> <condition pos:start="67:25" pos:end="67:34"><expr pos:start="67:25" pos:end="67:33"><name pos:start="67:25" pos:end="67:25">j</name> <operator pos:start="67:27" pos:end="67:27">&lt;</operator> <name pos:start="67:29" pos:end="67:33">times</name></expr>;</condition> <incr pos:start="67:36" pos:end="67:38"><expr pos:start="67:36" pos:end="67:38"><operator pos:start="67:36" pos:end="67:37">++</operator><name pos:start="67:38" pos:end="67:38">j</name></expr></incr>)</control> <block pos:start="67:41" pos:end="85:13">{<block_content pos:start="69:17" pos:end="83:51">

                <expr_stmt pos:start="69:17" pos:end="69:65"><expr pos:start="69:17" pos:end="69:64"><call pos:start="69:17" pos:end="69:64"><name pos:start="69:17" pos:end="69:29">cpu_x86_cpuid</name><argument_list pos:start="69:30" pos:end="69:64">(<argument pos:start="69:31" pos:end="69:33"><expr pos:start="69:31" pos:end="69:33"><name pos:start="69:31" pos:end="69:33">env</name></expr></argument>, <argument pos:start="69:36" pos:end="69:36"><expr pos:start="69:36" pos:end="69:36"><name pos:start="69:36" pos:end="69:36">i</name></expr></argument>, <argument pos:start="69:39" pos:end="69:39"><expr pos:start="69:39" pos:end="69:39"><literal type="number" pos:start="69:39" pos:end="69:39">0</literal></expr></argument>, <argument pos:start="69:42" pos:end="69:45"><expr pos:start="69:42" pos:end="69:45"><operator pos:start="69:42" pos:end="69:42">&amp;</operator><name pos:start="69:43" pos:end="69:45">eax</name></expr></argument>, <argument pos:start="69:48" pos:end="69:51"><expr pos:start="69:48" pos:end="69:51"><operator pos:start="69:48" pos:end="69:48">&amp;</operator><name pos:start="69:49" pos:end="69:51">ebx</name></expr></argument>, <argument pos:start="69:54" pos:end="69:57"><expr pos:start="69:54" pos:end="69:57"><operator pos:start="69:54" pos:end="69:54">&amp;</operator><name pos:start="69:55" pos:end="69:57">ecx</name></expr></argument>, <argument pos:start="69:60" pos:end="69:63"><expr pos:start="69:60" pos:end="69:63"><operator pos:start="69:60" pos:end="69:60">&amp;</operator><name pos:start="69:61" pos:end="69:63">edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:32"><expr pos:start="71:17" pos:end="71:31"><name pos:start="71:17" pos:end="71:27"><name pos:start="71:17" pos:end="71:17">c</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:27">function</name></name> <operator pos:start="71:29" pos:end="71:29">=</operator> <name pos:start="71:31" pos:end="71:31">i</name></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:57"><expr pos:start="73:17" pos:end="73:56"><name pos:start="73:17" pos:end="73:24"><name pos:start="73:17" pos:end="73:17">c</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:24">flags</name></name> <operator pos:start="73:26" pos:end="73:27">|=</operator> <name pos:start="73:29" pos:end="73:56">KVM_CPUID_FLAG_STATEFUL_FUNC</name></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:29"><expr pos:start="75:17" pos:end="75:28"><name pos:start="75:17" pos:end="75:22"><name pos:start="75:17" pos:end="75:17">c</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:22">eax</name></name> <operator pos:start="75:24" pos:end="75:24">=</operator> <name pos:start="75:26" pos:end="75:28">eax</name></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:29"><expr pos:start="77:17" pos:end="77:28"><name pos:start="77:17" pos:end="77:22"><name pos:start="77:17" pos:end="77:17">c</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:22">ebx</name></name> <operator pos:start="77:24" pos:end="77:24">=</operator> <name pos:start="77:26" pos:end="77:28">ebx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:29"><expr pos:start="79:17" pos:end="79:28"><name pos:start="79:17" pos:end="79:22"><name pos:start="79:17" pos:end="79:17">c</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:22">ecx</name></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:28">ecx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:29"><expr pos:start="81:17" pos:end="81:28"><name pos:start="81:17" pos:end="81:22"><name pos:start="81:17" pos:end="81:17">c</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:22">edx</name></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:28">edx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:51"><expr pos:start="83:17" pos:end="83:50"><name pos:start="83:17" pos:end="83:17">c</name> <operator pos:start="83:19" pos:end="83:19">=</operator> <operator pos:start="83:21" pos:end="83:21">&amp;</operator><name pos:start="83:22" pos:end="83:50"><name pos:start="83:22" pos:end="83:31">cpuid_data</name><operator pos:start="83:32" pos:end="83:32">.</operator><name pos:start="83:33" pos:end="83:39">entries</name><index pos:start="83:40" pos:end="83:50">[<expr pos:start="83:41" pos:end="83:49"><operator pos:start="83:41" pos:end="83:42">++</operator><name pos:start="83:43" pos:end="83:49">cpuid_i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        </block_content>}</block>

        <case pos:start="91:9" pos:end="91:15">case <expr pos:start="91:14" pos:end="91:14"><literal type="number" pos:start="91:14" pos:end="91:14">4</literal></expr>:</case>

        <case pos:start="93:9" pos:end="93:17">case <expr pos:start="93:14" pos:end="93:16"><literal type="number" pos:start="93:14" pos:end="93:16">0xb</literal></expr>:</case>

        <case pos:start="95:9" pos:end="95:17">case <expr pos:start="95:14" pos:end="95:16"><literal type="number" pos:start="95:14" pos:end="95:16">0xd</literal></expr>:</case>

            <for pos:start="97:13" pos:end="131:13">for <control pos:start="97:17" pos:end="97:30">(<init pos:start="97:18" pos:end="97:23"><expr pos:start="97:18" pos:end="97:22"><name pos:start="97:18" pos:end="97:18">j</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <literal type="number" pos:start="97:22" pos:end="97:22">0</literal></expr>;</init> <condition pos:start="97:25" pos:end="97:25">;</condition> <incr pos:start="97:27" pos:end="97:29"><expr pos:start="97:27" pos:end="97:29"><name pos:start="97:27" pos:end="97:27">j</name><operator pos:start="97:28" pos:end="97:29">++</operator></expr></incr>)</control> <block pos:start="97:32" pos:end="131:13">{<block_content pos:start="99:17" pos:end="129:26">

                <expr_stmt pos:start="99:17" pos:end="99:65"><expr pos:start="99:17" pos:end="99:64"><call pos:start="99:17" pos:end="99:64"><name pos:start="99:17" pos:end="99:29">cpu_x86_cpuid</name><argument_list pos:start="99:30" pos:end="99:64">(<argument pos:start="99:31" pos:end="99:33"><expr pos:start="99:31" pos:end="99:33"><name pos:start="99:31" pos:end="99:33">env</name></expr></argument>, <argument pos:start="99:36" pos:end="99:36"><expr pos:start="99:36" pos:end="99:36"><name pos:start="99:36" pos:end="99:36">i</name></expr></argument>, <argument pos:start="99:39" pos:end="99:39"><expr pos:start="99:39" pos:end="99:39"><name pos:start="99:39" pos:end="99:39">j</name></expr></argument>, <argument pos:start="99:42" pos:end="99:45"><expr pos:start="99:42" pos:end="99:45"><operator pos:start="99:42" pos:end="99:42">&amp;</operator><name pos:start="99:43" pos:end="99:45">eax</name></expr></argument>, <argument pos:start="99:48" pos:end="99:51"><expr pos:start="99:48" pos:end="99:51"><operator pos:start="99:48" pos:end="99:48">&amp;</operator><name pos:start="99:49" pos:end="99:51">ebx</name></expr></argument>, <argument pos:start="99:54" pos:end="99:57"><expr pos:start="99:54" pos:end="99:57"><operator pos:start="99:54" pos:end="99:54">&amp;</operator><name pos:start="99:55" pos:end="99:57">ecx</name></expr></argument>, <argument pos:start="99:60" pos:end="99:63"><expr pos:start="99:60" pos:end="99:63"><operator pos:start="99:60" pos:end="99:60">&amp;</operator><name pos:start="99:61" pos:end="99:63">edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:32"><expr pos:start="101:17" pos:end="101:31"><name pos:start="101:17" pos:end="101:27"><name pos:start="101:17" pos:end="101:17">c</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:27">function</name></name> <operator pos:start="101:29" pos:end="101:29">=</operator> <name pos:start="101:31" pos:end="101:31">i</name></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:59"><expr pos:start="103:17" pos:end="103:58"><name pos:start="103:17" pos:end="103:24"><name pos:start="103:17" pos:end="103:17">c</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:24">flags</name></name> <operator pos:start="103:26" pos:end="103:26">=</operator> <name pos:start="103:28" pos:end="103:58">KVM_CPUID_FLAG_SIGNIFCANT_INDEX</name></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:29"><expr pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:24"><name pos:start="105:17" pos:end="105:17">c</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:24">index</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <name pos:start="105:28" pos:end="105:28">j</name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:29"><expr pos:start="107:17" pos:end="107:28"><name pos:start="107:17" pos:end="107:22"><name pos:start="107:17" pos:end="107:17">c</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:22">eax</name></name> <operator pos:start="107:24" pos:end="107:24">=</operator> <name pos:start="107:26" pos:end="107:28">eax</name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:29"><expr pos:start="109:17" pos:end="109:28"><name pos:start="109:17" pos:end="109:22"><name pos:start="109:17" pos:end="109:17">c</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:22">ebx</name></name> <operator pos:start="109:24" pos:end="109:24">=</operator> <name pos:start="109:26" pos:end="109:28">ebx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:29"><expr pos:start="111:17" pos:end="111:28"><name pos:start="111:17" pos:end="111:22"><name pos:start="111:17" pos:end="111:17">c</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:22">ecx</name></name> <operator pos:start="111:24" pos:end="111:24">=</operator> <name pos:start="111:26" pos:end="111:28">ecx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:29"><expr pos:start="113:17" pos:end="113:28"><name pos:start="113:17" pos:end="113:22"><name pos:start="113:17" pos:end="113:17">c</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:22">edx</name></name> <operator pos:start="113:24" pos:end="113:24">=</operator> <name pos:start="113:26" pos:end="113:28">edx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:51"><expr pos:start="115:17" pos:end="115:50"><name pos:start="115:17" pos:end="115:17">c</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <operator pos:start="115:21" pos:end="115:21">&amp;</operator><name pos:start="115:22" pos:end="115:50"><name pos:start="115:22" pos:end="115:31">cpuid_data</name><operator pos:start="115:32" pos:end="115:32">.</operator><name pos:start="115:33" pos:end="115:39">entries</name><index pos:start="115:40" pos:end="115:50">[<expr pos:start="115:41" pos:end="115:49"><operator pos:start="115:41" pos:end="115:42">++</operator><name pos:start="115:43" pos:end="115:49">cpuid_i</name></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="119:17" pos:end="121:26"><if pos:start="119:17" pos:end="121:26">if <condition pos:start="119:20" pos:end="119:39">(<expr pos:start="119:21" pos:end="119:38"><name pos:start="119:21" pos:end="119:21">i</name> <operator pos:start="119:23" pos:end="119:24">==</operator> <literal type="number" pos:start="119:26" pos:end="119:26">4</literal> <operator pos:start="119:28" pos:end="119:29">&amp;&amp;</operator> <name pos:start="119:31" pos:end="119:33">eax</name> <operator pos:start="119:35" pos:end="119:36">==</operator> <literal type="number" pos:start="119:38" pos:end="119:38">0</literal></expr>)</condition><block type="pseudo" pos:start="121:21" pos:end="121:26"><block_content pos:start="121:21" pos:end="121:26">

                    <break pos:start="121:21" pos:end="121:26">break;</break></block_content></block></if></if_stmt>

                <if_stmt pos:start="123:17" pos:end="125:26"><if pos:start="123:17" pos:end="125:26">if <condition pos:start="123:20" pos:end="123:48">(<expr pos:start="123:21" pos:end="123:47"><name pos:start="123:21" pos:end="123:21">i</name> <operator pos:start="123:23" pos:end="123:24">==</operator> <literal type="number" pos:start="123:26" pos:end="123:28">0xb</literal> <operator pos:start="123:30" pos:end="123:31">&amp;&amp;</operator> <operator pos:start="123:33" pos:end="123:33">!</operator><operator pos:start="123:34" pos:end="123:34">(</operator><name pos:start="123:35" pos:end="123:37">ecx</name> <operator pos:start="123:39" pos:end="123:39">&amp;</operator> <literal type="number" pos:start="123:41" pos:end="123:46">0xff00</literal><operator pos:start="123:47" pos:end="123:47">)</operator></expr>)</condition><block type="pseudo" pos:start="125:21" pos:end="125:26"><block_content pos:start="125:21" pos:end="125:26">

                    <break pos:start="125:21" pos:end="125:26">break;</break></block_content></block></if></if_stmt>

                <if_stmt pos:start="127:17" pos:end="129:26"><if pos:start="127:17" pos:end="129:26">if <condition pos:start="127:20" pos:end="127:41">(<expr pos:start="127:21" pos:end="127:40"><name pos:start="127:21" pos:end="127:21">i</name> <operator pos:start="127:23" pos:end="127:24">==</operator> <literal type="number" pos:start="127:26" pos:end="127:28">0xd</literal> <operator pos:start="127:30" pos:end="127:31">&amp;&amp;</operator> <name pos:start="127:33" pos:end="127:35">eax</name> <operator pos:start="127:37" pos:end="127:38">==</operator> <literal type="number" pos:start="127:40" pos:end="127:40">0</literal></expr>)</condition><block type="pseudo" pos:start="129:21" pos:end="129:26"><block_content pos:start="129:21" pos:end="129:26">

                    <break pos:start="129:21" pos:end="129:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        <default pos:start="135:9" pos:end="135:16">default:</default>

            <expr_stmt pos:start="137:13" pos:end="137:61"><expr pos:start="137:13" pos:end="137:60"><call pos:start="137:13" pos:end="137:60"><name pos:start="137:13" pos:end="137:25">cpu_x86_cpuid</name><argument_list pos:start="137:26" pos:end="137:60">(<argument pos:start="137:27" pos:end="137:29"><expr pos:start="137:27" pos:end="137:29"><name pos:start="137:27" pos:end="137:29">env</name></expr></argument>, <argument pos:start="137:32" pos:end="137:32"><expr pos:start="137:32" pos:end="137:32"><name pos:start="137:32" pos:end="137:32">i</name></expr></argument>, <argument pos:start="137:35" pos:end="137:35"><expr pos:start="137:35" pos:end="137:35"><literal type="number" pos:start="137:35" pos:end="137:35">0</literal></expr></argument>, <argument pos:start="137:38" pos:end="137:41"><expr pos:start="137:38" pos:end="137:41"><operator pos:start="137:38" pos:end="137:38">&amp;</operator><name pos:start="137:39" pos:end="137:41">eax</name></expr></argument>, <argument pos:start="137:44" pos:end="137:47"><expr pos:start="137:44" pos:end="137:47"><operator pos:start="137:44" pos:end="137:44">&amp;</operator><name pos:start="137:45" pos:end="137:47">ebx</name></expr></argument>, <argument pos:start="137:50" pos:end="137:53"><expr pos:start="137:50" pos:end="137:53"><operator pos:start="137:50" pos:end="137:50">&amp;</operator><name pos:start="137:51" pos:end="137:53">ecx</name></expr></argument>, <argument pos:start="137:56" pos:end="137:59"><expr pos:start="137:56" pos:end="137:59"><operator pos:start="137:56" pos:end="137:56">&amp;</operator><name pos:start="137:57" pos:end="137:59">edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:28"><expr pos:start="139:13" pos:end="139:27"><name pos:start="139:13" pos:end="139:23"><name pos:start="139:13" pos:end="139:13">c</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:23">function</name></name> <operator pos:start="139:25" pos:end="139:25">=</operator> <name pos:start="139:27" pos:end="139:27">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:25"><expr pos:start="141:13" pos:end="141:24"><name pos:start="141:13" pos:end="141:18"><name pos:start="141:13" pos:end="141:13">c</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:18">eax</name></name> <operator pos:start="141:20" pos:end="141:20">=</operator> <name pos:start="141:22" pos:end="141:24">eax</name></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:25"><expr pos:start="143:13" pos:end="143:24"><name pos:start="143:13" pos:end="143:18"><name pos:start="143:13" pos:end="143:13">c</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:18">ebx</name></name> <operator pos:start="143:20" pos:end="143:20">=</operator> <name pos:start="143:22" pos:end="143:24">ebx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:25"><expr pos:start="145:13" pos:end="145:24"><name pos:start="145:13" pos:end="145:18"><name pos:start="145:13" pos:end="145:13">c</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:18">ecx</name></name> <operator pos:start="145:20" pos:end="145:20">=</operator> <name pos:start="145:22" pos:end="145:24">ecx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:25"><expr pos:start="147:13" pos:end="147:24"><name pos:start="147:13" pos:end="147:18"><name pos:start="147:13" pos:end="147:13">c</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:18">edx</name></name> <operator pos:start="147:20" pos:end="147:20">=</operator> <name pos:start="147:22" pos:end="147:24">edx</name></expr>;</expr_stmt>

            <break pos:start="149:13" pos:end="149:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>

    <expr_stmt pos:start="155:5" pos:end="155:62"><expr pos:start="155:5" pos:end="155:61"><call pos:start="155:5" pos:end="155:61"><name pos:start="155:5" pos:end="155:17">cpu_x86_cpuid</name><argument_list pos:start="155:18" pos:end="155:61">(<argument pos:start="155:19" pos:end="155:21"><expr pos:start="155:19" pos:end="155:21"><name pos:start="155:19" pos:end="155:21">env</name></expr></argument>, <argument pos:start="155:24" pos:end="155:33"><expr pos:start="155:24" pos:end="155:33"><literal type="number" pos:start="155:24" pos:end="155:33">0x80000000</literal></expr></argument>, <argument pos:start="155:36" pos:end="155:36"><expr pos:start="155:36" pos:end="155:36"><literal type="number" pos:start="155:36" pos:end="155:36">0</literal></expr></argument>, <argument pos:start="155:39" pos:end="155:42"><expr pos:start="155:39" pos:end="155:42"><operator pos:start="155:39" pos:end="155:39">&amp;</operator><name pos:start="155:40" pos:end="155:42">eax</name></expr></argument>, <argument pos:start="155:45" pos:end="155:48"><expr pos:start="155:45" pos:end="155:48"><operator pos:start="155:45" pos:end="155:45">&amp;</operator><name pos:start="155:46" pos:end="155:48">ebx</name></expr></argument>, <argument pos:start="155:51" pos:end="155:54"><expr pos:start="155:51" pos:end="155:54"><operator pos:start="155:51" pos:end="155:51">&amp;</operator><name pos:start="155:52" pos:end="155:54">ecx</name></expr></argument>, <argument pos:start="155:57" pos:end="155:60"><expr pos:start="155:57" pos:end="155:60"><operator pos:start="155:57" pos:end="155:57">&amp;</operator><name pos:start="155:58" pos:end="155:60">edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:16"><expr pos:start="157:5" pos:end="157:15"><name pos:start="157:5" pos:end="157:9">limit</name> <operator pos:start="157:11" pos:end="157:11">=</operator> <name pos:start="157:13" pos:end="157:15">eax</name></expr>;</expr_stmt>



    <for pos:start="161:5" pos:end="179:5">for <control pos:start="161:9" pos:end="161:41">(<init pos:start="161:10" pos:end="161:24"><expr pos:start="161:10" pos:end="161:23"><name pos:start="161:10" pos:end="161:10">i</name> <operator pos:start="161:12" pos:end="161:12">=</operator> <literal type="number" pos:start="161:14" pos:end="161:23">0x80000000</literal></expr>;</init> <condition pos:start="161:26" pos:end="161:36"><expr pos:start="161:26" pos:end="161:35"><name pos:start="161:26" pos:end="161:26">i</name> <operator pos:start="161:28" pos:end="161:29">&lt;=</operator> <name pos:start="161:31" pos:end="161:35">limit</name></expr>;</condition> <incr pos:start="161:38" pos:end="161:40"><expr pos:start="161:38" pos:end="161:40"><name pos:start="161:38" pos:end="161:38">i</name><operator pos:start="161:39" pos:end="161:40">++</operator></expr></incr>)</control> <block pos:start="161:43" pos:end="179:5">{<block_content pos:start="163:9" pos:end="177:21">

        <decl_stmt pos:start="163:9" pos:end="163:68"><decl pos:start="163:9" pos:end="163:67"><type pos:start="163:9" pos:end="163:33"><name pos:start="163:9" pos:end="163:31"><name pos:start="163:9" pos:end="163:14">struct</name> <name pos:start="163:16" pos:end="163:31">kvm_cpuid_entry2</name></name> <modifier pos:start="163:33" pos:end="163:33">*</modifier></type><name pos:start="163:34" pos:end="163:34">c</name> <init pos:start="163:36" pos:end="163:67">= <expr pos:start="163:38" pos:end="163:67"><operator pos:start="163:38" pos:end="163:38">&amp;</operator><name pos:start="163:39" pos:end="163:67"><name pos:start="163:39" pos:end="163:48">cpuid_data</name><operator pos:start="163:49" pos:end="163:49">.</operator><name pos:start="163:50" pos:end="163:56">entries</name><index pos:start="163:57" pos:end="163:67">[<expr pos:start="163:58" pos:end="163:66"><name pos:start="163:58" pos:end="163:64">cpuid_i</name><operator pos:start="163:65" pos:end="163:66">++</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:57"><expr pos:start="167:9" pos:end="167:56"><call pos:start="167:9" pos:end="167:56"><name pos:start="167:9" pos:end="167:21">cpu_x86_cpuid</name><argument_list pos:start="167:22" pos:end="167:56">(<argument pos:start="167:23" pos:end="167:25"><expr pos:start="167:23" pos:end="167:25"><name pos:start="167:23" pos:end="167:25">env</name></expr></argument>, <argument pos:start="167:28" pos:end="167:28"><expr pos:start="167:28" pos:end="167:28"><name pos:start="167:28" pos:end="167:28">i</name></expr></argument>, <argument pos:start="167:31" pos:end="167:31"><expr pos:start="167:31" pos:end="167:31"><literal type="number" pos:start="167:31" pos:end="167:31">0</literal></expr></argument>, <argument pos:start="167:34" pos:end="167:37"><expr pos:start="167:34" pos:end="167:37"><operator pos:start="167:34" pos:end="167:34">&amp;</operator><name pos:start="167:35" pos:end="167:37">eax</name></expr></argument>, <argument pos:start="167:40" pos:end="167:43"><expr pos:start="167:40" pos:end="167:43"><operator pos:start="167:40" pos:end="167:40">&amp;</operator><name pos:start="167:41" pos:end="167:43">ebx</name></expr></argument>, <argument pos:start="167:46" pos:end="167:49"><expr pos:start="167:46" pos:end="167:49"><operator pos:start="167:46" pos:end="167:46">&amp;</operator><name pos:start="167:47" pos:end="167:49">ecx</name></expr></argument>, <argument pos:start="167:52" pos:end="167:55"><expr pos:start="167:52" pos:end="167:55"><operator pos:start="167:52" pos:end="167:52">&amp;</operator><name pos:start="167:53" pos:end="167:55">edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:24"><expr pos:start="169:9" pos:end="169:23"><name pos:start="169:9" pos:end="169:19"><name pos:start="169:9" pos:end="169:9">c</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:19">function</name></name> <operator pos:start="169:21" pos:end="169:21">=</operator> <name pos:start="169:23" pos:end="169:23">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:21"><expr pos:start="171:9" pos:end="171:20"><name pos:start="171:9" pos:end="171:14"><name pos:start="171:9" pos:end="171:9">c</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:14">eax</name></name> <operator pos:start="171:16" pos:end="171:16">=</operator> <name pos:start="171:18" pos:end="171:20">eax</name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:21"><expr pos:start="173:9" pos:end="173:20"><name pos:start="173:9" pos:end="173:14"><name pos:start="173:9" pos:end="173:9">c</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:14">ebx</name></name> <operator pos:start="173:16" pos:end="173:16">=</operator> <name pos:start="173:18" pos:end="173:20">ebx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:21"><expr pos:start="175:9" pos:end="175:20"><name pos:start="175:9" pos:end="175:14"><name pos:start="175:9" pos:end="175:9">c</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:14">ecx</name></name> <operator pos:start="175:16" pos:end="175:16">=</operator> <name pos:start="175:18" pos:end="175:20">ecx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:21"><expr pos:start="177:9" pos:end="177:20"><name pos:start="177:9" pos:end="177:14"><name pos:start="177:9" pos:end="177:9">c</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:14">edx</name></name> <operator pos:start="177:16" pos:end="177:16">=</operator> <name pos:start="177:18" pos:end="177:20">edx</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="183:5" pos:end="183:36"><expr pos:start="183:5" pos:end="183:35"><name pos:start="183:5" pos:end="183:25"><name pos:start="183:5" pos:end="183:14">cpuid_data</name><operator pos:start="183:15" pos:end="183:15">.</operator><name pos:start="183:16" pos:end="183:20">cpuid</name><operator pos:start="183:21" pos:end="183:21">.</operator><name pos:start="183:22" pos:end="183:25">nent</name></name> <operator pos:start="183:27" pos:end="183:27">=</operator> <name pos:start="183:29" pos:end="183:35">cpuid_i</name></expr>;</expr_stmt>



    <return pos:start="187:5" pos:end="187:60">return <expr pos:start="187:12" pos:end="187:59"><call pos:start="187:12" pos:end="187:59"><name pos:start="187:12" pos:end="187:25">kvm_vcpu_ioctl</name><argument_list pos:start="187:26" pos:end="187:59">(<argument pos:start="187:27" pos:end="187:29"><expr pos:start="187:27" pos:end="187:29"><name pos:start="187:27" pos:end="187:29">env</name></expr></argument>, <argument pos:start="187:32" pos:end="187:45"><expr pos:start="187:32" pos:end="187:45"><name pos:start="187:32" pos:end="187:45">KVM_SET_CPUID2</name></expr></argument>, <argument pos:start="187:48" pos:end="187:58"><expr pos:start="187:48" pos:end="187:58"><operator pos:start="187:48" pos:end="187:48">&amp;</operator><name pos:start="187:49" pos:end="187:58">cpuid_data</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
