<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22569.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">sp804_init</name><parameter_list pos:start="1:16" pos:end="1:44">(<parameter pos:start="1:17" pos:end="1:29"><decl pos:start="1:17" pos:end="1:29"><type pos:start="1:17" pos:end="1:29"><name pos:start="1:17" pos:end="1:24">uint32_t</name></type> <name pos:start="1:26" pos:end="1:29">base</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:39">qemu_irq</name></type> <name pos:start="1:41" pos:end="1:43">irq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="33:62">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">iomemtype</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">sp804_state</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">qemu_irq</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">qi</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:57"><expr pos:start="13:5" pos:end="13:56"><name pos:start="13:5" pos:end="13:5">s</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:20">sp804_state</name> <operator pos:start="13:22" pos:end="13:22">*</operator><operator pos:start="13:23" pos:end="13:23">)</operator><call pos:start="13:24" pos:end="13:56"><name pos:start="13:24" pos:end="13:35">qemu_mallocz</name><argument_list pos:start="13:36" pos:end="13:56">(<argument pos:start="13:37" pos:end="13:55"><expr pos:start="13:37" pos:end="13:55"><sizeof pos:start="13:37" pos:end="13:55">sizeof<argument_list pos:start="13:43" pos:end="13:55">(<argument pos:start="13:44" pos:end="13:54"><expr pos:start="13:44" pos:end="13:54"><name pos:start="13:44" pos:end="13:54">sp804_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:49"><expr pos:start="15:5" pos:end="15:48"><name pos:start="15:5" pos:end="15:6">qi</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <call pos:start="15:10" pos:end="15:48"><name pos:start="15:10" pos:end="15:27">qemu_allocate_irqs</name><argument_list pos:start="15:28" pos:end="15:48">(<argument pos:start="15:29" pos:end="15:41"><expr pos:start="15:29" pos:end="15:41"><name pos:start="15:29" pos:end="15:41">sp804_set_irq</name></expr></argument>, <argument pos:start="15:44" pos:end="15:44"><expr pos:start="15:44" pos:end="15:44"><name pos:start="15:44" pos:end="15:44">s</name></expr></argument>, <argument pos:start="15:47" pos:end="15:47"><expr pos:start="15:47" pos:end="15:47"><literal type="number" pos:start="15:47" pos:end="15:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:11">base</name></name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:18">base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:10">irq</name></name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:16">irq</name></expr>;</expr_stmt>

    <comment type="block" pos:start="21:5" pos:end="23:35">/* ??? The timers are actually configurable between 32kHz and 1MHz, but

       we don't implement that.  */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:49"><expr pos:start="25:5" pos:end="25:48"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:12">timer</name><index pos:start="25:13" pos:end="25:15">[<expr pos:start="25:14" pos:end="25:14"><literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>]</index></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:48"><name pos:start="25:19" pos:end="25:32">arm_timer_init</name><argument_list pos:start="25:33" pos:end="25:48">(<argument pos:start="25:34" pos:end="25:40"><expr pos:start="25:34" pos:end="25:40"><literal type="number" pos:start="25:34" pos:end="25:40">1000000</literal></expr></argument>, <argument pos:start="25:43" pos:end="25:47"><expr pos:start="25:43" pos:end="25:47"><name pos:start="25:43" pos:end="25:47"><name pos:start="25:43" pos:end="25:44">qi</name><index pos:start="25:45" pos:end="25:47">[<expr pos:start="25:46" pos:end="25:46"><literal type="number" pos:start="25:46" pos:end="25:46">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:49"><expr pos:start="27:5" pos:end="27:48"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:12">timer</name><index pos:start="27:13" pos:end="27:15">[<expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">1</literal></expr>]</index></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:48"><name pos:start="27:19" pos:end="27:32">arm_timer_init</name><argument_list pos:start="27:33" pos:end="27:48">(<argument pos:start="27:34" pos:end="27:40"><expr pos:start="27:34" pos:end="27:40"><literal type="number" pos:start="27:34" pos:end="27:40">1000000</literal></expr></argument>, <argument pos:start="27:43" pos:end="27:47"><expr pos:start="27:43" pos:end="27:47"><name pos:start="27:43" pos:end="27:47"><name pos:start="27:43" pos:end="27:44">qi</name><index pos:start="27:45" pos:end="27:47">[<expr pos:start="27:46" pos:end="27:46"><literal type="number" pos:start="27:46" pos:end="27:46">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:57"><expr pos:start="29:5" pos:end="31:56"><name pos:start="29:5" pos:end="29:13">iomemtype</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="31:56"><name pos:start="29:17" pos:end="29:38">cpu_register_io_memory</name><argument_list pos:start="29:39" pos:end="31:56">(<argument pos:start="29:40" pos:end="29:40"><expr pos:start="29:40" pos:end="29:40"><literal type="number" pos:start="29:40" pos:end="29:40">0</literal></expr></argument>, <argument pos:start="29:43" pos:end="29:54"><expr pos:start="29:43" pos:end="29:54"><name pos:start="29:43" pos:end="29:54">sp804_readfn</name></expr></argument>,

                                       <argument pos:start="31:40" pos:end="31:52"><expr pos:start="31:40" pos:end="31:52"><name pos:start="31:40" pos:end="31:52">sp804_writefn</name></expr></argument>, <argument pos:start="31:55" pos:end="31:55"><expr pos:start="31:55" pos:end="31:55"><name pos:start="31:55" pos:end="31:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:62"><expr pos:start="33:5" pos:end="33:61"><call pos:start="33:5" pos:end="33:61"><name pos:start="33:5" pos:end="33:32">cpu_register_physical_memory</name><argument_list pos:start="33:33" pos:end="33:61">(<argument pos:start="33:34" pos:end="33:37"><expr pos:start="33:34" pos:end="33:37"><name pos:start="33:34" pos:end="33:37">base</name></expr></argument>, <argument pos:start="33:40" pos:end="33:49"><expr pos:start="33:40" pos:end="33:49"><literal type="number" pos:start="33:40" pos:end="33:49">0x00000fff</literal></expr></argument>, <argument pos:start="33:52" pos:end="33:60"><expr pos:start="33:52" pos:end="33:60"><name pos:start="33:52" pos:end="33:60">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="35:5" pos:end="35:28">/* ??? Save/restore.  */</comment>

</block_content>}</block></function>
</unit>
