<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25473.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:16">blur</name><parameter_list pos:start="1:17" pos:end="1:70">(<parameter pos:start="1:18" pos:end="1:36"><decl pos:start="1:18" pos:end="1:36"><type pos:start="1:18" pos:end="1:36"><name pos:start="1:18" pos:end="1:29">CoverContext</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:36">cover</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:49"><decl pos:start="1:39" pos:end="1:49"><type pos:start="1:39" pos:end="1:49"><name pos:start="1:39" pos:end="1:45">AVFrame</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">in</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:59"><decl pos:start="1:52" pos:end="1:59"><type pos:start="1:52" pos:end="1:59"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:59">offx</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:69"><decl pos:start="1:62" pos:end="1:69"><type pos:start="1:62" pos:end="1:69"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:69">offy</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:5">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">y</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">p</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="81:5">for <control pos:start="9:9" pos:end="9:23">(<init pos:start="9:10" pos:end="9:13"><expr pos:start="9:10" pos:end="9:12"><name pos:start="9:10" pos:end="9:10">p</name><operator pos:start="9:11" pos:end="9:11">=</operator><literal type="number" pos:start="9:12" pos:end="9:12">0</literal></expr>;</init> <condition pos:start="9:15" pos:end="9:18"><expr pos:start="9:15" pos:end="9:17"><name pos:start="9:15" pos:end="9:15">p</name><operator pos:start="9:16" pos:end="9:16">&lt;</operator><literal type="number" pos:start="9:17" pos:end="9:17">3</literal></expr>;</condition> <incr pos:start="9:20" pos:end="9:22"><expr pos:start="9:20" pos:end="9:22"><name pos:start="9:20" pos:end="9:20">p</name><operator pos:start="9:21" pos:end="9:22">++</operator></expr></incr>)</control> <block pos:start="9:25" pos:end="81:5">{<block_content pos:start="11:9" pos:end="79:9">

        <decl_stmt pos:start="11:9" pos:end="11:27"><decl pos:start="11:9" pos:end="11:26"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:14">ox</name> <init pos:start="11:16" pos:end="11:26">= <expr pos:start="11:18" pos:end="11:26"><name pos:start="11:18" pos:end="11:21">offx</name><operator pos:start="11:22" pos:end="11:23">&gt;&gt;</operator><operator pos:start="11:24" pos:end="11:24">!</operator><operator pos:start="11:25" pos:end="11:25">!</operator><name pos:start="11:26" pos:end="11:26">p</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:27"><decl pos:start="13:9" pos:end="13:26"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:14">oy</name> <init pos:start="13:16" pos:end="13:26">= <expr pos:start="13:18" pos:end="13:26"><name pos:start="13:18" pos:end="13:21">offy</name><operator pos:start="13:22" pos:end="13:23">&gt;&gt;</operator><operator pos:start="13:24" pos:end="13:24">!</operator><operator pos:start="13:25" pos:end="13:25">!</operator><name pos:start="13:26" pos:end="13:26">p</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:37"><decl pos:start="15:9" pos:end="15:36"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:18">stride</name> <init pos:start="15:20" pos:end="15:36">= <expr pos:start="15:22" pos:end="15:36"><name pos:start="15:22" pos:end="15:36"><name pos:start="15:22" pos:end="15:23">in</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:33">linesize</name><index pos:start="15:34" pos:end="15:36">[<expr pos:start="15:35" pos:end="15:35"><name pos:start="15:35" pos:end="15:35">p</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:55"><decl pos:start="17:9" pos:end="17:54"><type pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:15">uint8_t</name> <modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:21">data</name> <init pos:start="17:23" pos:end="17:54">= <expr pos:start="17:25" pos:end="17:54"><name pos:start="17:25" pos:end="17:35"><name pos:start="17:25" pos:end="17:26">in</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:32">data</name><index pos:start="17:33" pos:end="17:35">[<expr pos:start="17:34" pos:end="17:34"><name pos:start="17:34" pos:end="17:34">p</name></expr>]</index></name> <operator pos:start="17:37" pos:end="17:37">+</operator> <name pos:start="17:39" pos:end="17:40">ox</name> <operator pos:start="17:42" pos:end="17:42">+</operator> <name pos:start="17:44" pos:end="17:45">oy</name> <operator pos:start="17:47" pos:end="17:47">*</operator> <name pos:start="17:49" pos:end="17:54">stride</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:51"><decl pos:start="19:9" pos:end="19:50"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">w</name> <init pos:start="19:15" pos:end="19:50">= <expr pos:start="19:17" pos:end="19:50"><call pos:start="19:17" pos:end="19:50"><name pos:start="19:17" pos:end="19:30">FF_CEIL_RSHIFT</name><argument_list pos:start="19:31" pos:end="19:50">(<argument pos:start="19:32" pos:end="19:43"><expr pos:start="19:32" pos:end="19:43"><name pos:start="19:32" pos:end="19:43"><name pos:start="19:32" pos:end="19:36">cover</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:43">width</name></name></expr></argument> , <argument pos:start="19:47" pos:end="19:49"><expr pos:start="19:47" pos:end="19:49"><operator pos:start="19:47" pos:end="19:47">!</operator><operator pos:start="19:48" pos:end="19:48">!</operator><name pos:start="19:49" pos:end="19:49">p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:51"><decl pos:start="21:9" pos:end="21:50"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">h</name> <init pos:start="21:15" pos:end="21:50">= <expr pos:start="21:17" pos:end="21:50"><call pos:start="21:17" pos:end="21:50"><name pos:start="21:17" pos:end="21:30">FF_CEIL_RSHIFT</name><argument_list pos:start="21:31" pos:end="21:50">(<argument pos:start="21:32" pos:end="21:44"><expr pos:start="21:32" pos:end="21:44"><name pos:start="21:32" pos:end="21:44"><name pos:start="21:32" pos:end="21:36">cover</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:44">height</name></name></expr></argument>, <argument pos:start="21:47" pos:end="21:49"><expr pos:start="21:47" pos:end="21:49"><operator pos:start="21:47" pos:end="21:47">!</operator><operator pos:start="21:48" pos:end="21:48">!</operator><name pos:start="21:49" pos:end="21:49">p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:49"><decl pos:start="23:9" pos:end="23:48"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:14">iw</name> <init pos:start="23:16" pos:end="23:48">= <expr pos:start="23:18" pos:end="23:48"><call pos:start="23:18" pos:end="23:48"><name pos:start="23:18" pos:end="23:31">FF_CEIL_RSHIFT</name><argument_list pos:start="23:32" pos:end="23:48">(<argument pos:start="23:33" pos:end="23:41"><expr pos:start="23:33" pos:end="23:41"><name pos:start="23:33" pos:end="23:41"><name pos:start="23:33" pos:end="23:34">in</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:41">width</name></name></expr></argument> , <argument pos:start="23:45" pos:end="23:47"><expr pos:start="23:45" pos:end="23:47"><operator pos:start="23:45" pos:end="23:45">!</operator><operator pos:start="23:46" pos:end="23:46">!</operator><name pos:start="23:47" pos:end="23:47">p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:49"><decl pos:start="25:9" pos:end="25:48"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:14">ih</name> <init pos:start="25:16" pos:end="25:48">= <expr pos:start="25:18" pos:end="25:48"><call pos:start="25:18" pos:end="25:48"><name pos:start="25:18" pos:end="25:31">FF_CEIL_RSHIFT</name><argument_list pos:start="25:32" pos:end="25:48">(<argument pos:start="25:33" pos:end="25:42"><expr pos:start="25:33" pos:end="25:42"><name pos:start="25:33" pos:end="25:42"><name pos:start="25:33" pos:end="25:34">in</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:42">height</name></name></expr></argument>, <argument pos:start="25:45" pos:end="25:47"><expr pos:start="25:45" pos:end="25:47"><operator pos:start="25:45" pos:end="25:45">!</operator><operator pos:start="25:46" pos:end="25:46">!</operator><name pos:start="25:47" pos:end="25:47">p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <for pos:start="27:9" pos:end="79:9">for <control pos:start="27:13" pos:end="27:31">(<init pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">y</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:25"><name pos:start="27:21" pos:end="27:21">y</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <name pos:start="27:25" pos:end="27:25">h</name></expr>;</condition> <incr pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:28">y</name><operator pos:start="27:29" pos:end="27:30">++</operator></expr></incr>)</control> <block pos:start="27:33" pos:end="79:9">{<block_content pos:start="29:13" pos:end="77:13">

            <for pos:start="29:13" pos:end="77:13">for <control pos:start="29:17" pos:end="29:35">(<init pos:start="29:18" pos:end="29:23"><expr pos:start="29:18" pos:end="29:22"><name pos:start="29:18" pos:end="29:18">x</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>;</init> <condition pos:start="29:25" pos:end="29:30"><expr pos:start="29:25" pos:end="29:29"><name pos:start="29:25" pos:end="29:25">x</name> <operator pos:start="29:27" pos:end="29:27">&lt;</operator> <name pos:start="29:29" pos:end="29:29">w</name></expr>;</condition> <incr pos:start="29:32" pos:end="29:34"><expr pos:start="29:32" pos:end="29:34"><name pos:start="29:32" pos:end="29:32">x</name><operator pos:start="29:33" pos:end="29:34">++</operator></expr></incr>)</control> <block pos:start="29:37" pos:end="77:13">{<block_content pos:start="31:17" pos:end="75:54">

                <decl_stmt pos:start="31:17" pos:end="31:26"><decl pos:start="31:17" pos:end="31:25"><type pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:19">int</name></type> <name pos:start="31:21" pos:end="31:21">c</name> <init pos:start="31:23" pos:end="31:25">= <expr pos:start="31:25" pos:end="31:25"><literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="33:17" pos:end="33:26"><decl pos:start="33:17" pos:end="33:25"><type pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:19">int</name></type> <name pos:start="33:21" pos:end="33:21">s</name> <init pos:start="33:23" pos:end="33:25">= <expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">0</literal></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="35:17" pos:end="43:17"><if pos:start="35:17" pos:end="43:17">if <condition pos:start="35:20" pos:end="35:23">(<expr pos:start="35:21" pos:end="35:22"><name pos:start="35:21" pos:end="35:22">ox</name></expr>)</condition> <block pos:start="35:25" pos:end="43:17">{<block_content pos:start="37:21" pos:end="41:31">

                    <decl_stmt pos:start="37:21" pos:end="37:48"><decl pos:start="37:21" pos:end="37:47"><type pos:start="37:21" pos:end="37:23"><name pos:start="37:21" pos:end="37:23">int</name></type> <name pos:start="37:25" pos:end="37:29">scale</name> <init pos:start="37:31" pos:end="37:47">= <expr pos:start="37:33" pos:end="37:47"><literal type="number" pos:start="37:33" pos:end="37:37">65536</literal> <operator pos:start="37:39" pos:end="37:39">/</operator> <operator pos:start="37:41" pos:end="37:41">(</operator><name pos:start="37:42" pos:end="37:42">x</name> <operator pos:start="37:44" pos:end="37:44">+</operator> <literal type="number" pos:start="37:46" pos:end="37:46">1</literal><operator pos:start="37:47" pos:end="37:47">)</operator></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="39:21" pos:end="39:53"><expr pos:start="39:21" pos:end="39:52"><name pos:start="39:21" pos:end="39:21">s</name> <operator pos:start="39:23" pos:end="39:24">+=</operator> <name pos:start="39:26" pos:end="39:44"><name pos:start="39:26" pos:end="39:29">data</name><index pos:start="39:30" pos:end="39:44">[<expr pos:start="39:31" pos:end="39:43"><operator pos:start="39:31" pos:end="39:31">-</operator><literal type="number" pos:start="39:32" pos:end="39:34">1</literal> <operator pos:start="39:34" pos:end="39:34">+</operator> <name pos:start="39:36" pos:end="39:36">y</name><operator pos:start="39:37" pos:end="39:37">*</operator><name pos:start="39:38" pos:end="39:43">stride</name></expr>]</index></name> <operator pos:start="39:46" pos:end="39:46">*</operator> <name pos:start="39:48" pos:end="39:52">scale</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="41:21" pos:end="41:31"><expr pos:start="41:21" pos:end="41:30"><name pos:start="41:21" pos:end="41:21">c</name> <operator pos:start="41:23" pos:end="41:24">+=</operator> <name pos:start="41:26" pos:end="41:30">scale</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="45:17" pos:end="53:17"><if pos:start="45:17" pos:end="53:17">if <condition pos:start="45:20" pos:end="45:23">(<expr pos:start="45:21" pos:end="45:22"><name pos:start="45:21" pos:end="45:22">oy</name></expr>)</condition> <block pos:start="45:25" pos:end="53:17">{<block_content pos:start="47:21" pos:end="51:31">

                    <decl_stmt pos:start="47:21" pos:end="47:48"><decl pos:start="47:21" pos:end="47:47"><type pos:start="47:21" pos:end="47:23"><name pos:start="47:21" pos:end="47:23">int</name></type> <name pos:start="47:25" pos:end="47:29">scale</name> <init pos:start="47:31" pos:end="47:47">= <expr pos:start="47:33" pos:end="47:47"><literal type="number" pos:start="47:33" pos:end="47:37">65536</literal> <operator pos:start="47:39" pos:end="47:39">/</operator> <operator pos:start="47:41" pos:end="47:41">(</operator><name pos:start="47:42" pos:end="47:42">y</name> <operator pos:start="47:44" pos:end="47:44">+</operator> <literal type="number" pos:start="47:46" pos:end="47:46">1</literal><operator pos:start="47:47" pos:end="47:47">)</operator></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:50"><expr pos:start="49:21" pos:end="49:49"><name pos:start="49:21" pos:end="49:21">s</name> <operator pos:start="49:23" pos:end="49:24">+=</operator> <name pos:start="49:26" pos:end="49:41"><name pos:start="49:26" pos:end="49:29">data</name><index pos:start="49:30" pos:end="49:41">[<expr pos:start="49:31" pos:end="49:40"><name pos:start="49:31" pos:end="49:31">x</name> <operator pos:start="49:33" pos:end="49:33">-</operator> <name pos:start="49:35" pos:end="49:40">stride</name></expr>]</index></name> <operator pos:start="49:43" pos:end="49:43">*</operator> <name pos:start="49:45" pos:end="49:49">scale</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="51:21" pos:end="51:31"><expr pos:start="51:21" pos:end="51:30"><name pos:start="51:21" pos:end="51:21">c</name> <operator pos:start="51:23" pos:end="51:24">+=</operator> <name pos:start="51:26" pos:end="51:30">scale</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="55:17" pos:end="63:17"><if pos:start="55:17" pos:end="63:17">if <condition pos:start="55:20" pos:end="55:32">(<expr pos:start="55:21" pos:end="55:31"><name pos:start="55:21" pos:end="55:22">ox</name> <operator pos:start="55:24" pos:end="55:24">+</operator> <name pos:start="55:26" pos:end="55:26">w</name> <operator pos:start="55:28" pos:end="55:28">&lt;</operator> <name pos:start="55:30" pos:end="55:31">iw</name></expr>)</condition> <block pos:start="55:34" pos:end="63:17">{<block_content pos:start="57:21" pos:end="61:31">

                    <decl_stmt pos:start="57:21" pos:end="57:48"><decl pos:start="57:21" pos:end="57:47"><type pos:start="57:21" pos:end="57:23"><name pos:start="57:21" pos:end="57:23">int</name></type> <name pos:start="57:25" pos:end="57:29">scale</name> <init pos:start="57:31" pos:end="57:47">= <expr pos:start="57:33" pos:end="57:47"><literal type="number" pos:start="57:33" pos:end="57:37">65536</literal> <operator pos:start="57:39" pos:end="57:39">/</operator> <operator pos:start="57:41" pos:end="57:41">(</operator><name pos:start="57:42" pos:end="57:42">w</name> <operator pos:start="57:44" pos:end="57:44">-</operator> <name pos:start="57:46" pos:end="57:46">x</name><operator pos:start="57:47" pos:end="57:47">)</operator></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:52"><expr pos:start="59:21" pos:end="59:51"><name pos:start="59:21" pos:end="59:21">s</name> <operator pos:start="59:23" pos:end="59:24">+=</operator> <name pos:start="59:26" pos:end="59:43"><name pos:start="59:26" pos:end="59:29">data</name><index pos:start="59:30" pos:end="59:43">[<expr pos:start="59:31" pos:end="59:42"><name pos:start="59:31" pos:end="59:31">w</name> <operator pos:start="59:33" pos:end="59:33">+</operator> <name pos:start="59:35" pos:end="59:35">y</name><operator pos:start="59:36" pos:end="59:36">*</operator><name pos:start="59:37" pos:end="59:42">stride</name></expr>]</index></name> <operator pos:start="59:45" pos:end="59:45">*</operator> <name pos:start="59:47" pos:end="59:51">scale</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="61:21" pos:end="61:31"><expr pos:start="61:21" pos:end="61:30"><name pos:start="61:21" pos:end="61:21">c</name> <operator pos:start="61:23" pos:end="61:24">+=</operator> <name pos:start="61:26" pos:end="61:30">scale</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="65:17" pos:end="73:17"><if pos:start="65:17" pos:end="73:17">if <condition pos:start="65:20" pos:end="65:32">(<expr pos:start="65:21" pos:end="65:31"><name pos:start="65:21" pos:end="65:22">oy</name> <operator pos:start="65:24" pos:end="65:24">+</operator> <name pos:start="65:26" pos:end="65:26">h</name> <operator pos:start="65:28" pos:end="65:28">&lt;</operator> <name pos:start="65:30" pos:end="65:31">ih</name></expr>)</condition> <block pos:start="65:34" pos:end="73:17">{<block_content pos:start="67:21" pos:end="71:31">

                    <decl_stmt pos:start="67:21" pos:end="67:48"><decl pos:start="67:21" pos:end="67:47"><type pos:start="67:21" pos:end="67:23"><name pos:start="67:21" pos:end="67:23">int</name></type> <name pos:start="67:25" pos:end="67:29">scale</name> <init pos:start="67:31" pos:end="67:47">= <expr pos:start="67:33" pos:end="67:47"><literal type="number" pos:start="67:33" pos:end="67:37">65536</literal> <operator pos:start="67:39" pos:end="67:39">/</operator> <operator pos:start="67:41" pos:end="67:41">(</operator><name pos:start="67:42" pos:end="67:42">h</name> <operator pos:start="67:44" pos:end="67:44">-</operator> <name pos:start="67:46" pos:end="67:46">y</name><operator pos:start="67:47" pos:end="67:47">)</operator></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:52"><expr pos:start="69:21" pos:end="69:51"><name pos:start="69:21" pos:end="69:21">s</name> <operator pos:start="69:23" pos:end="69:24">+=</operator> <name pos:start="69:26" pos:end="69:43"><name pos:start="69:26" pos:end="69:29">data</name><index pos:start="69:30" pos:end="69:43">[<expr pos:start="69:31" pos:end="69:42"><name pos:start="69:31" pos:end="69:31">x</name> <operator pos:start="69:33" pos:end="69:33">+</operator> <name pos:start="69:35" pos:end="69:35">h</name><operator pos:start="69:36" pos:end="69:36">*</operator><name pos:start="69:37" pos:end="69:42">stride</name></expr>]</index></name> <operator pos:start="69:45" pos:end="69:45">*</operator> <name pos:start="69:47" pos:end="69:51">scale</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:31"><expr pos:start="71:21" pos:end="71:30"><name pos:start="71:21" pos:end="71:21">c</name> <operator pos:start="71:23" pos:end="71:24">+=</operator> <name pos:start="71:26" pos:end="71:30">scale</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:54"><expr pos:start="75:17" pos:end="75:53"><name pos:start="75:17" pos:end="75:34"><name pos:start="75:17" pos:end="75:20">data</name><index pos:start="75:21" pos:end="75:34">[<expr pos:start="75:22" pos:end="75:33"><name pos:start="75:22" pos:end="75:22">x</name> <operator pos:start="75:24" pos:end="75:24">+</operator> <name pos:start="75:26" pos:end="75:26">y</name><operator pos:start="75:27" pos:end="75:27">*</operator><name pos:start="75:28" pos:end="75:33">stride</name></expr>]</index></name> <operator pos:start="75:36" pos:end="75:36">=</operator> <operator pos:start="75:38" pos:end="75:38">(</operator><name pos:start="75:39" pos:end="75:39">s</name> <operator pos:start="75:41" pos:end="75:41">+</operator> <operator pos:start="75:43" pos:end="75:43">(</operator><name pos:start="75:44" pos:end="75:44">c</name><operator pos:start="75:45" pos:end="75:46">&gt;&gt;</operator><literal type="number" pos:start="75:47" pos:end="75:47">1</literal><operator pos:start="75:48" pos:end="75:48">)</operator><operator pos:start="75:49" pos:end="75:49">)</operator> <operator pos:start="75:51" pos:end="75:51">/</operator> <name pos:start="75:53" pos:end="75:53">c</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
