<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25331.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:28">gen_wsr_ccompare</name><parameter_list pos:start="1:29" pos:end="1:71">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:41">DisasContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">dc</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:58"><decl pos:start="1:48" pos:end="1:58"><type pos:start="1:48" pos:end="1:58"><name pos:start="1:48" pos:end="1:55">uint32_t</name></type> <name pos:start="1:57" pos:end="1:58">sr</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:70"><decl pos:start="1:61" pos:end="1:70"><type pos:start="1:61" pos:end="1:70"><name pos:start="1:61" pos:end="1:68">TCGv_i32</name></type> <name pos:start="1:70" pos:end="1:70">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:15">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:15">id</name> <init pos:start="5:17" pos:end="5:31">= <expr pos:start="5:19" pos:end="5:31"><name pos:start="5:19" pos:end="5:20">sr</name> <operator pos:start="5:22" pos:end="5:22">-</operator> <name pos:start="5:24" pos:end="5:31">CCOMPARE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:12">ret</name> <init pos:start="7:14" pos:end="7:20">= <expr pos:start="7:16" pos:end="7:20"><name pos:start="7:16" pos:end="7:20">false</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="43:5"><if pos:start="11:5" pos:end="43:5">if <condition pos:start="11:8" pos:end="11:35">(<expr pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:10">id</name> <operator pos:start="11:12" pos:end="11:12">&lt;</operator> <name pos:start="11:14" pos:end="11:34"><name pos:start="11:14" pos:end="11:15">dc</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:23">config</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:34">nccompare</name></name></expr>)</condition> <block pos:start="11:37" pos:end="43:5">{<block_content pos:start="13:9" pos:end="41:27">

        <decl_stmt pos:start="13:9" pos:end="13:57"><decl pos:start="13:9" pos:end="13:56"><type pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:16">uint32_t</name></type> <name pos:start="13:18" pos:end="13:24">int_bit</name> <init pos:start="13:26" pos:end="13:56">= <expr pos:start="13:28" pos:end="13:56"><literal type="number" pos:start="13:28" pos:end="13:28">1</literal> <operator pos:start="13:30" pos:end="13:31">&lt;&lt;</operator> <name pos:start="13:33" pos:end="13:56"><name pos:start="13:33" pos:end="13:34">dc</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:42">config</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:52">timerint</name><index pos:start="13:53" pos:end="13:56">[<expr pos:start="13:54" pos:end="13:55"><name pos:start="13:54" pos:end="13:55">id</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:41"><decl pos:start="15:9" pos:end="15:40"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">TCGv_i32</name></type> <name pos:start="15:18" pos:end="15:20">tmp</name> <init pos:start="15:22" pos:end="15:40">= <expr pos:start="15:24" pos:end="15:40"><call pos:start="15:24" pos:end="15:40"><name pos:start="15:24" pos:end="15:36">tcg_const_i32</name><argument_list pos:start="15:37" pos:end="15:40">(<argument pos:start="15:38" pos:end="15:39"><expr pos:start="15:38" pos:end="15:39"><name pos:start="15:38" pos:end="15:39">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:39"><expr pos:start="19:9" pos:end="19:38"><call pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:23">tcg_gen_mov_i32</name><argument_list pos:start="19:24" pos:end="19:38">(<argument pos:start="19:25" pos:end="19:34"><expr pos:start="19:25" pos:end="19:34"><name pos:start="19:25" pos:end="19:34"><name pos:start="19:25" pos:end="19:30">cpu_SR</name><index pos:start="19:31" pos:end="19:34">[<expr pos:start="19:32" pos:end="19:33"><name pos:start="19:32" pos:end="19:33">sr</name></expr>]</index></name></expr></argument>, <argument pos:start="19:37" pos:end="19:37"><expr pos:start="19:37" pos:end="19:37"><name pos:start="19:37" pos:end="19:37">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:67"><expr pos:start="21:9" pos:end="21:66"><call pos:start="21:9" pos:end="21:66"><name pos:start="21:9" pos:end="21:24">tcg_gen_andi_i32</name><argument_list pos:start="21:25" pos:end="21:66">(<argument pos:start="21:26" pos:end="21:39"><expr pos:start="21:26" pos:end="21:39"><name pos:start="21:26" pos:end="21:39"><name pos:start="21:26" pos:end="21:31">cpu_SR</name><index pos:start="21:32" pos:end="21:39">[<expr pos:start="21:33" pos:end="21:38"><name pos:start="21:33" pos:end="21:38">INTSET</name></expr>]</index></name></expr></argument>, <argument pos:start="21:42" pos:end="21:55"><expr pos:start="21:42" pos:end="21:55"><name pos:start="21:42" pos:end="21:55"><name pos:start="21:42" pos:end="21:47">cpu_SR</name><index pos:start="21:48" pos:end="21:55">[<expr pos:start="21:49" pos:end="21:54"><name pos:start="21:49" pos:end="21:54">INTSET</name></expr>]</index></name></expr></argument>, <argument pos:start="21:58" pos:end="21:65"><expr pos:start="21:58" pos:end="21:65"><operator pos:start="21:58" pos:end="21:58">~</operator><name pos:start="21:59" pos:end="21:65">int_bit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:43">(<expr pos:start="23:13" pos:end="23:42"><name pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:14">dc</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:18">tb</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:26">cflags</name></name> <operator pos:start="23:28" pos:end="23:28">&amp;</operator> <name pos:start="23:30" pos:end="23:42">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="23:45" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:27">

            <expr_stmt pos:start="25:13" pos:end="25:27"><expr pos:start="25:13" pos:end="25:26"><call pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:24">gen_io_start</name><argument_list pos:start="25:25" pos:end="25:26">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:49"><expr pos:start="29:9" pos:end="29:48"><call pos:start="29:9" pos:end="29:48"><name pos:start="29:9" pos:end="29:34">gen_helper_update_ccompare</name><argument_list pos:start="29:35" pos:end="29:48">(<argument pos:start="29:36" pos:end="29:42"><expr pos:start="29:36" pos:end="29:42"><name pos:start="29:36" pos:end="29:42">cpu_env</name></expr></argument>, <argument pos:start="29:45" pos:end="29:47"><expr pos:start="29:45" pos:end="29:47"><name pos:start="29:45" pos:end="29:47">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="39:9"><if pos:start="31:9" pos:end="39:9">if <condition pos:start="31:12" pos:end="31:43">(<expr pos:start="31:13" pos:end="31:42"><name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:14">dc</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:18">tb</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:26">cflags</name></name> <operator pos:start="31:28" pos:end="31:28">&amp;</operator> <name pos:start="31:30" pos:end="31:42">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="31:45" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:23">

            <expr_stmt pos:start="33:13" pos:end="33:25"><expr pos:start="33:13" pos:end="33:24"><call pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:22">gen_io_end</name><argument_list pos:start="33:23" pos:end="33:24">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:44"><expr pos:start="35:13" pos:end="35:43"><call pos:start="35:13" pos:end="35:43"><name pos:start="35:13" pos:end="35:36">gen_jumpi_check_loop_end</name><argument_list pos:start="35:37" pos:end="35:43">(<argument pos:start="35:38" pos:end="35:39"><expr pos:start="35:38" pos:end="35:39"><name pos:start="35:38" pos:end="35:39">dc</name></expr></argument>, <argument pos:start="35:42" pos:end="35:42"><expr pos:start="35:42" pos:end="35:42"><literal type="number" pos:start="35:42" pos:end="35:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:23"><expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:22">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:27"><expr pos:start="41:9" pos:end="41:26"><call pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:21">tcg_temp_free</name><argument_list pos:start="41:22" pos:end="41:26">(<argument pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="45:5" pos:end="45:15">return <expr pos:start="45:12" pos:end="45:14"><name pos:start="45:12" pos:end="45:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
