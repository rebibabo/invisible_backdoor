<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22538.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">output_configure</name><parameter_list pos:start="1:28" pos:end="5:69">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:38">AACContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">ac</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:66"><decl pos:start="3:29" pos:end="3:66"><type pos:start="3:29" pos:end="3:46"><name pos:start="3:29" pos:end="3:35">uint8_t</name></type> <name pos:start="3:37" pos:end="3:66"><name pos:start="3:37" pos:end="3:46">layout_map</name><index pos:start="3:47" pos:end="3:63">[<expr pos:start="3:48" pos:end="3:62"><name pos:start="3:48" pos:end="3:58">MAX_ELEM_ID</name> <operator pos:start="3:60" pos:end="3:60">*</operator> <literal type="number" pos:start="3:62" pos:end="3:62">4</literal></expr>]</index><index pos:start="3:64" pos:end="3:66">[<expr pos:start="3:65" pos:end="3:65"><literal type="number" pos:start="3:65" pos:end="3:65">3</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="3:69" pos:end="3:76"><decl pos:start="3:69" pos:end="3:76"><type pos:start="3:69" pos:end="3:76"><name pos:start="3:69" pos:end="3:71">int</name></type> <name pos:start="3:73" pos:end="3:76">tags</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:49"><decl pos:start="5:29" pos:end="5:49"><type pos:start="5:29" pos:end="5:49"><name pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:32">enum</name> <name pos:start="5:34" pos:end="5:41">OCStatus</name></name></type> <name pos:start="5:43" pos:end="5:49">oc_type</name></decl></parameter>, <parameter pos:start="5:52" pos:end="5:68"><decl pos:start="5:52" pos:end="5:68"><type pos:start="5:52" pos:end="5:68"><name pos:start="5:52" pos:end="5:54">int</name></type> <name pos:start="5:56" pos:end="5:68">get_new_frame</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="105:13">{<block_content pos:start="9:5" pos:end="105:13">

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">avctx</name> <init pos:start="9:27" pos:end="9:37">= <expr pos:start="9:29" pos:end="9:37"><name pos:start="9:29" pos:end="9:37"><name pos:start="9:29" pos:end="9:30">ac</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:37">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:19">channels</name> <init pos:start="11:21" pos:end="11:23">= <expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr></init></decl>, <decl pos:start="11:26" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:26" pos:end="11:28">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:19">layout</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:52"><decl pos:start="15:5" pos:end="15:51"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:41"><name pos:start="15:13" pos:end="15:18">id_map</name><index pos:start="15:19" pos:end="15:28">[<expr pos:start="15:20" pos:end="15:27"><name pos:start="15:20" pos:end="15:27">TYPE_END</name></expr>]</index><index pos:start="15:29" pos:end="15:41">[<expr pos:start="15:30" pos:end="15:40"><name pos:start="15:30" pos:end="15:40">MAX_ELEM_ID</name></expr>]</index></name> <init pos:start="15:43" pos:end="15:51">= <expr pos:start="15:45" pos:end="15:51"><block pos:start="15:45" pos:end="15:51">{<expr pos:start="15:46" pos:end="15:50"><block pos:start="15:46" pos:end="15:50">{ <expr pos:start="15:48" pos:end="15:48"><literal type="number" pos:start="15:48" pos:end="15:48">0</literal></expr> }</block></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:42"><decl pos:start="17:5" pos:end="17:41"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">uint8_t</name></type> <name pos:start="17:13" pos:end="17:33"><name pos:start="17:13" pos:end="17:23">type_counts</name><index pos:start="17:24" pos:end="17:33">[<expr pos:start="17:25" pos:end="17:32"><name pos:start="17:25" pos:end="17:32">TYPE_END</name></expr>]</index></name> <init pos:start="17:35" pos:end="17:41">= <expr pos:start="17:37" pos:end="17:41"><block pos:start="17:37" pos:end="17:41">{ <expr pos:start="17:39" pos:end="17:39"><literal type="number" pos:start="17:39" pos:end="17:39">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="105:13"><if pos:start="21:5" pos:end="105:13">if <condition pos:start="21:8" pos:end="21:43">(<expr pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:10">ac</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:14">oc</name><index pos:start="21:15" pos:end="21:17">[<expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">1</literal></expr>]</index></name><operator pos:start="21:18" pos:end="21:18">.</operator><name pos:start="21:19" pos:end="21:28">layout_map</name> <operator pos:start="21:30" pos:end="21:31">!=</operator> <name pos:start="21:33" pos:end="21:42">layout_map</name></expr>)</condition> <block pos:start="21:45" pos:end="105:13">{<block_content pos:start="23:9" pos:end="105:13">

        <expr_stmt pos:start="23:9" pos:end="23:79"><expr pos:start="23:9" pos:end="23:78"><call pos:start="23:9" pos:end="23:78"><name pos:start="23:9" pos:end="23:14">memcpy</name><argument_list pos:start="23:15" pos:end="23:78">(<argument pos:start="23:16" pos:end="23:35"><expr pos:start="23:16" pos:end="23:35"><name pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:17">ac</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:21">oc</name><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">1</literal></expr>]</index></name><operator pos:start="23:25" pos:end="23:25">.</operator><name pos:start="23:26" pos:end="23:35">layout_map</name></expr></argument>, <argument pos:start="23:38" pos:end="23:47"><expr pos:start="23:38" pos:end="23:47"><name pos:start="23:38" pos:end="23:47">layout_map</name></expr></argument>, <argument pos:start="23:50" pos:end="23:77"><expr pos:start="23:50" pos:end="23:77"><name pos:start="23:50" pos:end="23:53">tags</name> <operator pos:start="23:55" pos:end="23:55">*</operator> <sizeof pos:start="23:57" pos:end="23:77">sizeof<argument_list pos:start="23:63" pos:end="23:77">(<argument pos:start="23:64" pos:end="23:76"><expr pos:start="23:64" pos:end="23:76"><name pos:start="23:64" pos:end="23:76"><name pos:start="23:64" pos:end="23:73">layout_map</name><index pos:start="23:74" pos:end="23:76">[<expr pos:start="23:75" pos:end="23:75"><literal type="number" pos:start="23:75" pos:end="23:75">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:10">ac</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:14">oc</name><index pos:start="25:15" pos:end="25:17">[<expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">1</literal></expr>]</index></name><operator pos:start="25:18" pos:end="25:18">.</operator><name pos:start="25:19" pos:end="25:33">layout_map_tags</name> <operator pos:start="25:35" pos:end="25:35">=</operator> <name pos:start="25:37" pos:end="25:40">tags</name></expr>;</expr_stmt>


    <for pos:start="28:5" pos:end="105:13">for <control pos:start="28:9" pos:end="28:30">(<init pos:start="28:10" pos:end="28:15"><expr pos:start="28:10" pos:end="28:14"><name pos:start="28:10" pos:end="28:10">i</name> <operator pos:start="28:12" pos:end="28:12">=</operator> <literal type="number" pos:start="28:14" pos:end="28:14">0</literal></expr>;</init> <condition pos:start="28:17" pos:end="28:25"><expr pos:start="28:17" pos:end="28:24"><name pos:start="28:17" pos:end="28:17">i</name> <operator pos:start="28:19" pos:end="28:19">&lt;</operator> <name pos:start="28:21" pos:end="28:24">tags</name></expr>;</condition> <incr pos:start="28:27" pos:end="28:29"><expr pos:start="28:27" pos:end="28:29"><name pos:start="28:27" pos:end="28:27">i</name><operator pos:start="28:28" pos:end="28:29">++</operator></expr></incr>)</control> <block pos:start="28:32" pos:end="105:13">{<block_content pos:start="30:9" pos:end="105:13">

        <decl_stmt pos:start="30:9" pos:end="30:44"><decl pos:start="30:9" pos:end="30:43"><type pos:start="30:9" pos:end="30:11"><name pos:start="30:9" pos:end="30:11">int</name></type> <name pos:start="30:13" pos:end="30:16">type</name> <init pos:start="30:18" pos:end="30:43">=         <expr pos:start="30:28" pos:end="30:43"><name pos:start="30:28" pos:end="30:43"><name pos:start="30:28" pos:end="30:37">layout_map</name><index pos:start="30:38" pos:end="30:40">[<expr pos:start="30:39" pos:end="30:39"><name pos:start="30:39" pos:end="30:39">i</name></expr>]</index><index pos:start="30:41" pos:end="30:43">[<expr pos:start="30:42" pos:end="30:42"><literal type="number" pos:start="30:42" pos:end="30:42">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="32:9" pos:end="32:44"><decl pos:start="32:9" pos:end="32:43"><type pos:start="32:9" pos:end="32:11"><name pos:start="32:9" pos:end="32:11">int</name></type> <name pos:start="32:13" pos:end="32:14">id</name> <init pos:start="32:16" pos:end="32:43">=           <expr pos:start="32:28" pos:end="32:43"><name pos:start="32:28" pos:end="32:43"><name pos:start="32:28" pos:end="32:37">layout_map</name><index pos:start="32:38" pos:end="32:40">[<expr pos:start="32:39" pos:end="32:39"><name pos:start="32:39" pos:end="32:39">i</name></expr>]</index><index pos:start="32:41" pos:end="32:43">[<expr pos:start="32:42" pos:end="32:42"><literal type="number" pos:start="32:42" pos:end="32:42">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="34:9" pos:end="34:47"><expr pos:start="34:9" pos:end="34:46"><name pos:start="34:9" pos:end="34:24"><name pos:start="34:9" pos:end="34:14">id_map</name><index pos:start="34:15" pos:end="34:20">[<expr pos:start="34:16" pos:end="34:19"><name pos:start="34:16" pos:end="34:19">type</name></expr>]</index><index pos:start="34:21" pos:end="34:24">[<expr pos:start="34:22" pos:end="34:23"><name pos:start="34:22" pos:end="34:23">id</name></expr>]</index></name> <operator pos:start="34:26" pos:end="34:26">=</operator> <name pos:start="34:28" pos:end="34:44"><name pos:start="34:28" pos:end="34:38">type_counts</name><index pos:start="34:39" pos:end="34:44">[<expr pos:start="34:40" pos:end="34:43"><name pos:start="34:40" pos:end="34:43">type</name></expr>]</index></name><operator pos:start="34:45" pos:end="34:46">++</operator></expr>;</expr_stmt>






    <comment type="line" pos:start="41:5" pos:end="41:68">// Try to sniff a reasonable channel order, otherwise output the</comment>

    <comment type="line" pos:start="43:5" pos:end="43:51">// channels in the order the PCE declared them.</comment>

    <if_stmt pos:start="45:5" pos:end="47:55"><if pos:start="45:5" pos:end="47:55">if <condition pos:start="45:8" pos:end="45:61">(<expr pos:start="45:9" pos:end="45:60"><name pos:start="45:9" pos:end="45:37"><name pos:start="45:9" pos:end="45:13">avctx</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:37">request_channel_layout</name></name> <operator pos:start="45:39" pos:end="45:40">!=</operator> <name pos:start="45:42" pos:end="45:60">AV_CH_LAYOUT_NATIVE</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:55"><block_content pos:start="47:9" pos:end="47:55">

        <expr_stmt pos:start="47:9" pos:end="47:55"><expr pos:start="47:9" pos:end="47:54"><name pos:start="47:9" pos:end="47:14">layout</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <call pos:start="47:18" pos:end="47:54"><name pos:start="47:18" pos:end="47:36">sniff_channel_order</name><argument_list pos:start="47:37" pos:end="47:54">(<argument pos:start="47:38" pos:end="47:47"><expr pos:start="47:38" pos:end="47:47"><name pos:start="47:38" pos:end="47:47">layout_map</name></expr></argument>, <argument pos:start="47:50" pos:end="47:53"><expr pos:start="47:50" pos:end="47:53"><name pos:start="47:50" pos:end="47:53">tags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="49:5" pos:end="105:13">for <control pos:start="49:9" pos:end="49:30">(<init pos:start="49:10" pos:end="49:15"><expr pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:10">i</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>;</init> <condition pos:start="49:17" pos:end="49:25"><expr pos:start="49:17" pos:end="49:24"><name pos:start="49:17" pos:end="49:17">i</name> <operator pos:start="49:19" pos:end="49:19">&lt;</operator> <name pos:start="49:21" pos:end="49:24">tags</name></expr>;</condition> <incr pos:start="49:27" pos:end="49:29"><expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:27">i</name><operator pos:start="49:28" pos:end="49:29">++</operator></expr></incr>)</control> <block pos:start="49:32" pos:end="105:13">{<block_content pos:start="51:9" pos:end="105:13">

        <decl_stmt pos:start="51:9" pos:end="51:40"><decl pos:start="51:9" pos:end="51:39"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:16">type</name> <init pos:start="51:18" pos:end="51:39">=     <expr pos:start="51:24" pos:end="51:39"><name pos:start="51:24" pos:end="51:39"><name pos:start="51:24" pos:end="51:33">layout_map</name><index pos:start="51:34" pos:end="51:36">[<expr pos:start="51:35" pos:end="51:35"><name pos:start="51:35" pos:end="51:35">i</name></expr>]</index><index pos:start="51:37" pos:end="51:39">[<expr pos:start="51:38" pos:end="51:38"><literal type="number" pos:start="51:38" pos:end="51:38">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:40"><decl pos:start="53:9" pos:end="53:39"><type pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">int</name></type> <name pos:start="53:13" pos:end="53:14">id</name> <init pos:start="53:16" pos:end="53:39">=       <expr pos:start="53:24" pos:end="53:39"><name pos:start="53:24" pos:end="53:39"><name pos:start="53:24" pos:end="53:33">layout_map</name><index pos:start="53:34" pos:end="53:36">[<expr pos:start="53:35" pos:end="53:35"><name pos:start="53:35" pos:end="53:35">i</name></expr>]</index><index pos:start="53:37" pos:end="53:39">[<expr pos:start="53:38" pos:end="53:38"><literal type="number" pos:start="53:38" pos:end="53:38">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="55:9" pos:end="55:40"><decl pos:start="55:9" pos:end="55:39"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:15">iid</name> <init pos:start="55:17" pos:end="55:39">=      <expr pos:start="55:24" pos:end="55:39"><name pos:start="55:24" pos:end="55:39"><name pos:start="55:24" pos:end="55:29">id_map</name><index pos:start="55:30" pos:end="55:35">[<expr pos:start="55:31" pos:end="55:34"><name pos:start="55:31" pos:end="55:34">type</name></expr>]</index><index pos:start="55:36" pos:end="55:39">[<expr pos:start="55:37" pos:end="55:38"><name pos:start="55:37" pos:end="55:38">id</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:40"><decl pos:start="57:9" pos:end="57:39"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:20">position</name> <init pos:start="57:22" pos:end="57:39">= <expr pos:start="57:24" pos:end="57:39"><name pos:start="57:24" pos:end="57:39"><name pos:start="57:24" pos:end="57:33">layout_map</name><index pos:start="57:34" pos:end="57:36">[<expr pos:start="57:35" pos:end="57:35"><name pos:start="57:35" pos:end="57:35">i</name></expr>]</index><index pos:start="57:37" pos:end="57:39">[<expr pos:start="57:38" pos:end="57:38"><literal type="number" pos:start="57:38" pos:end="57:38">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:start="59:9" pos:end="59:68">// Allocate or free elements depending on if they are in the</comment>

        <comment type="line" pos:start="61:9" pos:end="61:41">// current program configuration.</comment>

        <expr_stmt pos:start="63:9" pos:end="63:64"><expr pos:start="63:9" pos:end="63:63"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="63:63"><name pos:start="63:15" pos:end="63:27">che_configure</name><argument_list pos:start="63:28" pos:end="63:63">(<argument pos:start="63:29" pos:end="63:30"><expr pos:start="63:29" pos:end="63:30"><name pos:start="63:29" pos:end="63:30">ac</name></expr></argument>, <argument pos:start="63:33" pos:end="63:40"><expr pos:start="63:33" pos:end="63:40"><name pos:start="63:33" pos:end="63:40">position</name></expr></argument>, <argument pos:start="63:43" pos:end="63:46"><expr pos:start="63:43" pos:end="63:46"><name pos:start="63:43" pos:end="63:46">type</name></expr></argument>, <argument pos:start="63:49" pos:end="63:51"><expr pos:start="63:49" pos:end="63:51"><name pos:start="63:49" pos:end="63:51">iid</name></expr></argument>, <argument pos:start="63:54" pos:end="63:62"><expr pos:start="63:54" pos:end="63:62"><operator pos:start="63:54" pos:end="63:54">&amp;</operator><name pos:start="63:55" pos:end="63:62">channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:23"><if pos:start="65:9" pos:end="67:23">if <condition pos:start="65:12" pos:end="65:20">(<expr pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:15">ret</name> <operator pos:start="65:17" pos:end="65:17">&lt;</operator> <literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:23"><block_content pos:start="67:13" pos:end="67:23">

            <return pos:start="67:13" pos:end="67:23">return <expr pos:start="67:20" pos:end="67:22"><name pos:start="67:20" pos:end="67:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:55"><expr pos:start="69:9" pos:end="69:54"><name pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:10">ac</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:23">tag_che_map</name><index pos:start="69:24" pos:end="69:29">[<expr pos:start="69:25" pos:end="69:28"><name pos:start="69:25" pos:end="69:28">type</name></expr>]</index><index pos:start="69:30" pos:end="69:33">[<expr pos:start="69:31" pos:end="69:32"><name pos:start="69:31" pos:end="69:32">id</name></expr>]</index></name> <operator pos:start="69:35" pos:end="69:35">=</operator> <name pos:start="69:37" pos:end="69:54"><name pos:start="69:37" pos:end="69:38">ac</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:43">che</name><index pos:start="69:44" pos:end="69:49">[<expr pos:start="69:45" pos:end="69:48"><name pos:start="69:45" pos:end="69:48">type</name></expr>]</index><index pos:start="69:50" pos:end="69:54">[<expr pos:start="69:51" pos:end="69:53"><name pos:start="69:51" pos:end="69:53">iid</name></expr>]</index></name></expr>;</expr_stmt>


    <if_stmt pos:start="72:5" pos:end="105:13"><if pos:start="72:5" pos:end="105:13">if <condition pos:start="72:8" pos:end="72:48">(<expr pos:start="72:9" pos:end="72:47"><name pos:start="72:9" pos:end="72:17"><name pos:start="72:9" pos:end="72:10">ac</name><operator pos:start="72:11" pos:end="72:12">-&gt;</operator><name pos:start="72:13" pos:end="72:14">oc</name><index pos:start="72:15" pos:end="72:17">[<expr pos:start="72:16" pos:end="72:16"><literal type="number" pos:start="72:16" pos:end="72:16">1</literal></expr>]</index></name><operator pos:start="72:18" pos:end="72:18">.</operator><name pos:start="72:19" pos:end="72:25"><name pos:start="72:19" pos:end="72:22">m4ac</name><operator pos:start="72:23" pos:end="72:23">.</operator><name pos:start="72:24" pos:end="72:25">ps</name></name> <operator pos:start="72:27" pos:end="72:28">==</operator> <literal type="number" pos:start="72:30" pos:end="72:30">1</literal> <operator pos:start="72:32" pos:end="72:33">&amp;&amp;</operator> <name pos:start="72:35" pos:end="72:42">channels</name> <operator pos:start="72:44" pos:end="72:45">==</operator> <literal type="number" pos:start="72:47" pos:end="72:47">2</literal></expr>)</condition> <block pos:start="72:50" pos:end="105:13">{<block_content pos:start="74:9" pos:end="105:13">

        <if_stmt pos:start="74:9" pos:end="105:13"><if pos:start="74:9" pos:end="78:9">if <condition pos:start="74:12" pos:end="74:41">(<expr pos:start="74:13" pos:end="74:40"><name pos:start="74:13" pos:end="74:18">layout</name> <operator pos:start="74:20" pos:end="74:21">==</operator> <name pos:start="74:23" pos:end="74:40">AV_CH_FRONT_CENTER</name></expr>)</condition> <block pos:start="74:43" pos:end="78:9">{<block_content pos:start="76:13" pos:end="76:56">

            <expr_stmt pos:start="76:13" pos:end="76:56"><expr pos:start="76:13" pos:end="76:55"><name pos:start="76:13" pos:end="76:18">layout</name> <operator pos:start="76:20" pos:end="76:20">=</operator> <name pos:start="76:22" pos:end="76:37">AV_CH_FRONT_LEFT</name><operator pos:start="76:38" pos:end="76:38">|</operator><name pos:start="76:39" pos:end="76:55">AV_CH_FRONT_RIGHT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="78:11" pos:end="105:13">else <block pos:start="78:16" pos:end="105:13">{<block_content pos:start="80:13" pos:end="105:13">

            <expr_stmt pos:start="80:13" pos:end="80:23"><expr pos:start="80:13" pos:end="80:22"><name pos:start="80:13" pos:end="80:18">layout</name> <operator pos:start="80:20" pos:end="80:20">=</operator> <literal type="number" pos:start="80:22" pos:end="80:22">0</literal></expr>;</expr_stmt>





    <if_stmt pos:start="86:5" pos:end="86:47"><if pos:start="86:5" pos:end="86:47">if <condition pos:start="86:8" pos:end="86:15">(<expr pos:start="86:9" pos:end="86:14"><name pos:start="86:9" pos:end="86:14">layout</name></expr>)</condition><block type="pseudo" pos:start="86:17" pos:end="86:47"><block_content pos:start="86:17" pos:end="86:47"> <expr_stmt pos:start="86:17" pos:end="86:47"><expr pos:start="86:17" pos:end="86:46"><name pos:start="86:17" pos:end="86:37"><name pos:start="86:17" pos:end="86:21">avctx</name><operator pos:start="86:22" pos:end="86:23">-&gt;</operator><name pos:start="86:24" pos:end="86:37">channel_layout</name></name> <operator pos:start="86:39" pos:end="86:39">=</operator> <name pos:start="86:41" pos:end="86:46">layout</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="88:29" pos:end="88:62"><expr pos:start="88:29" pos:end="88:61"><name pos:start="88:29" pos:end="88:37"><name pos:start="88:29" pos:end="88:30">ac</name><operator pos:start="88:31" pos:end="88:32">-&gt;</operator><name pos:start="88:33" pos:end="88:34">oc</name><index pos:start="88:35" pos:end="88:37">[<expr pos:start="88:36" pos:end="88:36"><literal type="number" pos:start="88:36" pos:end="88:36">1</literal></expr>]</index></name><operator pos:start="88:38" pos:end="88:38">.</operator><name pos:start="88:39" pos:end="88:52">channel_layout</name> <operator pos:start="88:54" pos:end="88:54">=</operator> <name pos:start="88:56" pos:end="88:61">layout</name></expr>;</expr_stmt>

    <expr_stmt pos:start="90:5" pos:end="90:64"><expr pos:start="90:5" pos:end="90:63"><name pos:start="90:5" pos:end="90:19"><name pos:start="90:5" pos:end="90:9">avctx</name><operator pos:start="90:10" pos:end="90:11">-&gt;</operator><name pos:start="90:12" pos:end="90:19">channels</name></name>       <operator pos:start="90:27" pos:end="90:27">=</operator> <name pos:start="90:29" pos:end="90:37"><name pos:start="90:29" pos:end="90:30">ac</name><operator pos:start="90:31" pos:end="90:32">-&gt;</operator><name pos:start="90:33" pos:end="90:34">oc</name><index pos:start="90:35" pos:end="90:37">[<expr pos:start="90:36" pos:end="90:36"><literal type="number" pos:start="90:36" pos:end="90:36">1</literal></expr>]</index></name><operator pos:start="90:38" pos:end="90:38">.</operator><name pos:start="90:39" pos:end="90:46">channels</name>       <operator pos:start="90:54" pos:end="90:54">=</operator> <name pos:start="90:56" pos:end="90:63">channels</name></expr>;</expr_stmt>

    <expr_stmt pos:start="92:5" pos:end="92:31"><expr pos:start="92:5" pos:end="92:30"><name pos:start="92:5" pos:end="92:13"><name pos:start="92:5" pos:end="92:6">ac</name><operator pos:start="92:7" pos:end="92:8">-&gt;</operator><name pos:start="92:9" pos:end="92:10">oc</name><index pos:start="92:11" pos:end="92:13">[<expr pos:start="92:12" pos:end="92:12"><literal type="number" pos:start="92:12" pos:end="92:12">1</literal></expr>]</index></name><operator pos:start="92:14" pos:end="92:14">.</operator><name pos:start="92:15" pos:end="92:20">status</name> <operator pos:start="92:22" pos:end="92:22">=</operator> <name pos:start="92:24" pos:end="92:30">oc_type</name></expr>;</expr_stmt>



    <if_stmt pos:start="96:5" pos:end="105:13"><if pos:start="96:5" pos:end="105:13">if <condition pos:start="96:8" pos:end="96:22">(<expr pos:start="96:9" pos:end="96:21"><name pos:start="96:9" pos:end="96:21">get_new_frame</name></expr>)</condition> <block pos:start="96:24" pos:end="105:13">{<block_content pos:start="98:9" pos:end="105:13">

        <if_stmt pos:start="98:9" pos:end="100:23"><if pos:start="98:9" pos:end="100:23">if <condition pos:start="98:12" pos:end="98:60">(<expr pos:start="98:13" pos:end="98:59"><operator pos:start="98:13" pos:end="98:13">(</operator><name pos:start="98:14" pos:end="98:16">ret</name> <operator pos:start="98:18" pos:end="98:18">=</operator> <call pos:start="98:20" pos:end="98:54"><name pos:start="98:20" pos:end="98:43">frame_configure_elements</name><argument_list pos:start="98:44" pos:end="98:54">(<argument pos:start="98:45" pos:end="98:53"><expr pos:start="98:45" pos:end="98:53"><name pos:start="98:45" pos:end="98:53"><name pos:start="98:45" pos:end="98:46">ac</name><operator pos:start="98:47" pos:end="98:48">-&gt;</operator><name pos:start="98:49" pos:end="98:53">avctx</name></name></expr></argument>)</argument_list></call><operator pos:start="98:55" pos:end="98:55">)</operator> <operator pos:start="98:57" pos:end="98:57">&lt;</operator> <literal type="number" pos:start="98:59" pos:end="98:59">0</literal></expr>)</condition><block type="pseudo" pos:start="100:13" pos:end="100:23"><block_content pos:start="100:13" pos:end="100:23">

            <return pos:start="100:13" pos:end="100:23">return <expr pos:start="100:20" pos:end="100:22"><name pos:start="100:20" pos:end="100:22">ret</name></expr>;</return></block_content></block></if></if_stmt>




    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function>
</unit>
