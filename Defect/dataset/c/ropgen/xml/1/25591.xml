<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25591.c" pos:tabs="8"><function pos:start="1:1" pos:end="249:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">quorum_open</name><parameter_list pos:start="1:23" pos:end="3:36">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:39">BlockDriverState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">bs</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:59"><decl pos:start="1:46" pos:end="1:59"><type pos:start="1:46" pos:end="1:59"><name pos:start="1:46" pos:end="1:50">QDict</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:59">options</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:70"><decl pos:start="1:62" pos:end="1:70"><type pos:start="1:62" pos:end="1:70"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:70">flags</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:35"><decl pos:start="3:24" pos:end="3:35"><type pos:start="3:24" pos:end="3:35"><name pos:start="3:24" pos:end="3:28">Error</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier><modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:35">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="249:1">{<block_content pos:start="7:5" pos:end="247:15">

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">BDRVQuorumState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name> <init pos:start="7:24" pos:end="7:35">= <expr pos:start="7:26" pos:end="7:35"><name pos:start="7:26" pos:end="7:35"><name pos:start="7:26" pos:end="7:27">bs</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:35">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">QemuOpts</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">bool</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:16">opened</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">QDict</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:14">sub</name> <init pos:start="15:16" pos:end="15:21">= <expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">QList</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:15">list</name> <init pos:start="17:17" pos:end="17:22">= <expr pos:start="17:19" pos:end="17:22"><name pos:start="17:19" pos:end="17:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:22"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:20">QListEntry</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:28">lentry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:10"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:16"><decl pos:start="23:5" pos:end="23:15"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">ret</name> <init pos:start="23:13" pos:end="23:15">= <expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><call pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:17">qdict_flatten</name><argument_list pos:start="27:18" pos:end="27:26">(<argument pos:start="27:19" pos:end="27:25"><expr pos:start="27:19" pos:end="27:25"><name pos:start="27:19" pos:end="27:25">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:55"><expr pos:start="29:5" pos:end="29:54"><call pos:start="29:5" pos:end="29:54"><name pos:start="29:5" pos:end="29:26">qdict_extract_subqdict</name><argument_list pos:start="29:27" pos:end="29:54">(<argument pos:start="29:28" pos:end="29:34"><expr pos:start="29:28" pos:end="29:34"><name pos:start="29:28" pos:end="29:34">options</name></expr></argument>, <argument pos:start="29:37" pos:end="29:40"><expr pos:start="29:37" pos:end="29:40"><operator pos:start="29:37" pos:end="29:37">&amp;</operator><name pos:start="29:38" pos:end="29:40">sub</name></expr></argument>, <argument pos:start="29:43" pos:end="29:53"><expr pos:start="29:43" pos:end="29:53"><literal type="string" pos:start="29:43" pos:end="29:53">"children."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><call pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:21">qdict_array_split</name><argument_list pos:start="31:22" pos:end="31:33">(<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">sub</name></expr></argument>, <argument pos:start="31:28" pos:end="31:32"><expr pos:start="31:28" pos:end="31:32"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:32">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="45:5"><if pos:start="35:5" pos:end="45:5">if <condition pos:start="35:8" pos:end="35:24">(<expr pos:start="35:9" pos:end="35:23"><call pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:18">qdict_size</name><argument_list pos:start="35:19" pos:end="35:23">(<argument pos:start="35:20" pos:end="35:22"><expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">sub</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:26" pos:end="45:5">{<block_content pos:start="37:9" pos:end="43:18">

        <expr_stmt pos:start="37:9" pos:end="39:42"><expr pos:start="37:9" pos:end="39:41"><call pos:start="37:9" pos:end="39:41"><name pos:start="37:9" pos:end="37:18">error_setg</name><argument_list pos:start="37:19" pos:end="39:41">(<argument pos:start="37:20" pos:end="37:29"><expr pos:start="37:20" pos:end="37:29"><operator pos:start="37:20" pos:end="37:20">&amp;</operator><name pos:start="37:21" pos:end="37:29">local_err</name></expr></argument>, <argument pos:start="37:32" pos:end="37:59"><expr pos:start="37:32" pos:end="37:59"><literal type="string" pos:start="37:32" pos:end="37:59">"Invalid option children.%s"</literal></expr></argument>,

                   <argument pos:start="39:20" pos:end="39:40"><expr pos:start="39:20" pos:end="39:40"><call pos:start="39:20" pos:end="39:35"><name pos:start="39:20" pos:end="39:30">qdict_first</name><argument_list pos:start="39:31" pos:end="39:35">(<argument pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><name pos:start="39:32" pos:end="39:34">sub</name></expr></argument>)</argument_list></call><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:40">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <operator pos:start="41:15" pos:end="41:15">-</operator><name pos:start="41:16" pos:end="41:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:18">goto <name pos:start="43:14" pos:end="43:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:55">/* count how many different children are present */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:39"><expr pos:start="51:5" pos:end="51:38"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:19">num_children</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <call pos:start="51:23" pos:end="51:38"><name pos:start="51:23" pos:end="51:32">qlist_size</name><argument_list pos:start="51:33" pos:end="51:38">(<argument pos:start="51:34" pos:end="51:37"><expr pos:start="51:34" pos:end="51:37"><name pos:start="51:34" pos:end="51:37">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="63:5"><if pos:start="53:5" pos:end="63:5">if <condition pos:start="53:8" pos:end="53:28">(<expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:23">num_children</name></name> <operator pos:start="53:25" pos:end="53:25">&lt;</operator> <literal type="number" pos:start="53:27" pos:end="53:27">2</literal></expr>)</condition> <block pos:start="53:30" pos:end="63:5">{<block_content pos:start="55:9" pos:end="61:18">

        <expr_stmt pos:start="55:9" pos:end="57:73"><expr pos:start="55:9" pos:end="57:72"><call pos:start="55:9" pos:end="57:72"><name pos:start="55:9" pos:end="55:18">error_setg</name><argument_list pos:start="55:19" pos:end="57:72">(<argument pos:start="55:20" pos:end="55:29"><expr pos:start="55:20" pos:end="55:29"><operator pos:start="55:20" pos:end="55:20">&amp;</operator><name pos:start="55:21" pos:end="55:29">local_err</name></expr></argument>,

                   <argument pos:start="57:20" pos:end="57:71"><expr pos:start="57:20" pos:end="57:71"><literal type="string" pos:start="57:20" pos:end="57:71">"Number of provided children must be greater than 1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <operator pos:start="59:15" pos:end="59:15">-</operator><name pos:start="59:16" pos:end="59:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:18">goto <name pos:start="61:14" pos:end="61:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:73"><expr pos:start="67:5" pos:end="67:72"><name pos:start="67:5" pos:end="67:8">opts</name> <operator pos:start="67:10" pos:end="67:10">=</operator> <call pos:start="67:12" pos:end="67:72"><name pos:start="67:12" pos:end="67:27">qemu_opts_create</name><argument_list pos:start="67:28" pos:end="67:72">(<argument pos:start="67:29" pos:end="67:48"><expr pos:start="67:29" pos:end="67:48"><operator pos:start="67:29" pos:end="67:29">&amp;</operator><name pos:start="67:30" pos:end="67:48">quorum_runtime_opts</name></expr></argument>, <argument pos:start="67:51" pos:end="67:54"><expr pos:start="67:51" pos:end="67:54"><name pos:start="67:51" pos:end="67:54">NULL</name></expr></argument>, <argument pos:start="67:57" pos:end="67:57"><expr pos:start="67:57" pos:end="67:57"><literal type="number" pos:start="67:57" pos:end="67:57">0</literal></expr></argument>, <argument pos:start="67:60" pos:end="67:71"><expr pos:start="67:60" pos:end="67:71"><operator pos:start="67:60" pos:end="67:60">&amp;</operator><name pos:start="67:61" pos:end="67:71">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:54"><expr pos:start="69:5" pos:end="69:53"><call pos:start="69:5" pos:end="69:53"><name pos:start="69:5" pos:end="69:26">qemu_opts_absorb_qdict</name><argument_list pos:start="69:27" pos:end="69:53">(<argument pos:start="69:28" pos:end="69:31"><expr pos:start="69:28" pos:end="69:31"><name pos:start="69:28" pos:end="69:31">opts</name></expr></argument>, <argument pos:start="69:34" pos:end="69:40"><expr pos:start="69:34" pos:end="69:40"><name pos:start="69:34" pos:end="69:40">options</name></expr></argument>, <argument pos:start="69:43" pos:end="69:52"><expr pos:start="69:43" pos:end="69:52"><operator pos:start="69:43" pos:end="69:43">&amp;</operator><name pos:start="69:44" pos:end="69:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:18">(<expr pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:17">local_err</name></expr>)</condition> <block pos:start="71:20" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:18">

        <expr_stmt pos:start="73:9" pos:end="73:22"><expr pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <operator pos:start="73:15" pos:end="73:15">-</operator><name pos:start="73:16" pos:end="73:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:18">goto <name pos:start="75:14" pos:end="75:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:75"><expr pos:start="81:5" pos:end="81:74"><name pos:start="81:5" pos:end="81:16"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:16">threshold</name></name> <operator pos:start="81:18" pos:end="81:18">=</operator> <call pos:start="81:20" pos:end="81:74"><name pos:start="81:20" pos:end="81:38">qemu_opt_get_number</name><argument_list pos:start="81:39" pos:end="81:74">(<argument pos:start="81:40" pos:end="81:43"><expr pos:start="81:40" pos:end="81:43"><name pos:start="81:40" pos:end="81:43">opts</name></expr></argument>, <argument pos:start="81:46" pos:end="81:70"><expr pos:start="81:46" pos:end="81:70"><name pos:start="81:46" pos:end="81:70">QUORUM_OPT_VOTE_THRESHOLD</name></expr></argument>, <argument pos:start="81:73" pos:end="81:73"><expr pos:start="81:73" pos:end="81:73"><literal type="number" pos:start="81:73" pos:end="81:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:49">/* and validate it against s-&gt;num_children */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:76"><expr pos:start="87:5" pos:end="87:75"><name pos:start="87:5" pos:end="87:7">ret</name> <operator pos:start="87:9" pos:end="87:9">=</operator> <call pos:start="87:11" pos:end="87:75"><name pos:start="87:11" pos:end="87:32">quorum_valid_threshold</name><argument_list pos:start="87:33" pos:end="87:75">(<argument pos:start="87:34" pos:end="87:45"><expr pos:start="87:34" pos:end="87:45"><name pos:start="87:34" pos:end="87:45"><name pos:start="87:34" pos:end="87:34">s</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:45">threshold</name></name></expr></argument>, <argument pos:start="87:48" pos:end="87:62"><expr pos:start="87:48" pos:end="87:62"><name pos:start="87:48" pos:end="87:62"><name pos:start="87:48" pos:end="87:48">s</name><operator pos:start="87:49" pos:end="87:50">-&gt;</operator><name pos:start="87:51" pos:end="87:62">num_children</name></name></expr></argument>, <argument pos:start="87:65" pos:end="87:74"><expr pos:start="87:65" pos:end="87:74"><operator pos:start="87:65" pos:end="87:65">&amp;</operator><name pos:start="87:66" pos:end="87:74">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:16">(<expr pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">&lt;</operator> <literal type="number" pos:start="89:15" pos:end="89:15">0</literal></expr>)</condition> <block pos:start="89:18" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:18">

        <goto pos:start="91:9" pos:end="91:18">goto <name pos:start="91:14" pos:end="91:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:41">/* is the driver in blkverify mode */</comment>

    <if_stmt pos:start="99:5" pos:end="111:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="101:50">(<expr pos:start="99:9" pos:end="101:49"><call pos:start="99:9" pos:end="99:60"><name pos:start="99:9" pos:end="99:25">qemu_opt_get_bool</name><argument_list pos:start="99:26" pos:end="99:60">(<argument pos:start="99:27" pos:end="99:30"><expr pos:start="99:27" pos:end="99:30"><name pos:start="99:27" pos:end="99:30">opts</name></expr></argument>, <argument pos:start="99:33" pos:end="99:52"><expr pos:start="99:33" pos:end="99:52"><name pos:start="99:33" pos:end="99:52">QUORUM_OPT_BLKVERIFY</name></expr></argument>, <argument pos:start="99:55" pos:end="99:59"><expr pos:start="99:55" pos:end="99:59"><name pos:start="99:55" pos:end="99:59">false</name></expr></argument>)</argument_list></call> <operator pos:start="99:62" pos:end="99:63">&amp;&amp;</operator>

        <name pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:23">num_children</name></name> <operator pos:start="101:25" pos:end="101:26">==</operator> <literal type="number" pos:start="101:28" pos:end="101:28">2</literal> <operator pos:start="101:30" pos:end="101:31">&amp;&amp;</operator> <name pos:start="101:33" pos:end="101:44"><name pos:start="101:33" pos:end="101:33">s</name><operator pos:start="101:34" pos:end="101:35">-&gt;</operator><name pos:start="101:36" pos:end="101:44">threshold</name></name> <operator pos:start="101:46" pos:end="101:47">==</operator> <literal type="number" pos:start="101:49" pos:end="101:49">2</literal></expr>)</condition> <block pos:start="101:52" pos:end="105:5">{<block_content pos:start="103:9" pos:end="103:31">

        <expr_stmt pos:start="103:9" pos:end="103:31"><expr pos:start="103:9" pos:end="103:30"><name pos:start="103:9" pos:end="103:23"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:23">is_blkverify</name></name> <operator pos:start="103:25" pos:end="103:25">=</operator> <name pos:start="103:27" pos:end="103:30">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="105:7" pos:end="111:5">else if <condition pos:start="105:15" pos:end="105:68">(<expr pos:start="105:16" pos:end="105:67"><call pos:start="105:16" pos:end="105:67"><name pos:start="105:16" pos:end="105:32">qemu_opt_get_bool</name><argument_list pos:start="105:33" pos:end="105:67">(<argument pos:start="105:34" pos:end="105:37"><expr pos:start="105:34" pos:end="105:37"><name pos:start="105:34" pos:end="105:37">opts</name></expr></argument>, <argument pos:start="105:40" pos:end="105:59"><expr pos:start="105:40" pos:end="105:59"><name pos:start="105:40" pos:end="105:59">QUORUM_OPT_BLKVERIFY</name></expr></argument>, <argument pos:start="105:62" pos:end="105:66"><expr pos:start="105:62" pos:end="105:66"><name pos:start="105:62" pos:end="105:66">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="105:70" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:63">

        <expr_stmt pos:start="107:9" pos:end="109:63"><expr pos:start="107:9" pos:end="109:62"><call pos:start="107:9" pos:end="109:62"><name pos:start="107:9" pos:end="107:15">fprintf</name><argument_list pos:start="107:16" pos:end="109:62">(<argument pos:start="107:17" pos:end="107:22"><expr pos:start="107:17" pos:end="107:22"><name pos:start="107:17" pos:end="107:22">stderr</name></expr></argument>, <argument pos:start="107:25" pos:end="109:61"><expr pos:start="107:25" pos:end="109:61"><literal type="string" pos:start="107:25" pos:end="107:72">"blkverify mode is set by setting blkverify=on "</literal>

                <literal type="string" pos:start="109:17" pos:end="109:61">"and using two files with vote_threshold=2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:78"><expr pos:start="115:5" pos:end="115:77"><name pos:start="115:5" pos:end="115:24"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:24">rewrite_corrupted</name></name> <operator pos:start="115:26" pos:end="115:26">=</operator> <call pos:start="115:28" pos:end="115:77"><name pos:start="115:28" pos:end="115:44">qemu_opt_get_bool</name><argument_list pos:start="115:45" pos:end="115:77">(<argument pos:start="115:46" pos:end="115:49"><expr pos:start="115:46" pos:end="115:49"><name pos:start="115:46" pos:end="115:49">opts</name></expr></argument>, <argument pos:start="115:52" pos:end="115:69"><expr pos:start="115:52" pos:end="115:69"><name pos:start="115:52" pos:end="115:69">QUORUM_OPT_REWRITE</name></expr></argument>, <argument pos:start="115:72" pos:end="115:76"><expr pos:start="115:72" pos:end="115:76"><name pos:start="115:72" pos:end="115:76">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="127:5"><if pos:start="117:5" pos:end="127:5">if <condition pos:start="117:8" pos:end="117:48">(<expr pos:start="117:9" pos:end="117:47"><name pos:start="117:9" pos:end="117:28"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:28">rewrite_corrupted</name></name> <operator pos:start="117:30" pos:end="117:31">&amp;&amp;</operator> <name pos:start="117:33" pos:end="117:47"><name pos:start="117:33" pos:end="117:33">s</name><operator pos:start="117:34" pos:end="117:35">-&gt;</operator><name pos:start="117:36" pos:end="117:47">is_blkverify</name></name></expr>)</condition> <block pos:start="117:50" pos:end="127:5">{<block_content pos:start="119:9" pos:end="125:18">

        <expr_stmt pos:start="119:9" pos:end="121:76"><expr pos:start="119:9" pos:end="121:75"><call pos:start="119:9" pos:end="121:75"><name pos:start="119:9" pos:end="119:18">error_setg</name><argument_list pos:start="119:19" pos:end="121:75">(<argument pos:start="119:20" pos:end="119:29"><expr pos:start="119:20" pos:end="119:29"><operator pos:start="119:20" pos:end="119:20">&amp;</operator><name pos:start="119:21" pos:end="119:29">local_err</name></expr></argument>,

                   <argument pos:start="121:20" pos:end="121:74"><expr pos:start="121:20" pos:end="121:74"><literal type="string" pos:start="121:20" pos:end="121:74">"rewrite-corrupted=on cannot be used with blkverify=on"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:22"><expr pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:11">ret</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <operator pos:start="123:15" pos:end="123:15">-</operator><name pos:start="123:16" pos:end="123:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="125:9" pos:end="125:18">goto <name pos:start="125:14" pos:end="125:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="131:5" pos:end="131:54">/* allocate the children BlockDriverState array */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:56"><expr pos:start="133:5" pos:end="133:55"><name pos:start="133:5" pos:end="133:9"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:9">bs</name></name> <operator pos:start="133:11" pos:end="133:11">=</operator> <call pos:start="133:13" pos:end="133:55"><name pos:start="133:13" pos:end="133:18">g_new0</name><argument_list pos:start="133:19" pos:end="133:55">(<argument pos:start="133:20" pos:end="133:37"><expr pos:start="133:20" pos:end="133:37"><name pos:start="133:20" pos:end="133:35">BlockDriverState</name> <operator pos:start="133:37" pos:end="133:37">*</operator></expr></argument>, <argument pos:start="133:40" pos:end="133:54"><expr pos:start="133:40" pos:end="133:54"><name pos:start="133:40" pos:end="133:54"><name pos:start="133:40" pos:end="133:40">s</name><operator pos:start="133:41" pos:end="133:42">-&gt;</operator><name pos:start="133:43" pos:end="133:54">num_children</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:43"><expr pos:start="135:5" pos:end="135:42"><name pos:start="135:5" pos:end="135:10">opened</name> <operator pos:start="135:12" pos:end="135:12">=</operator> <call pos:start="135:14" pos:end="135:42"><name pos:start="135:14" pos:end="135:19">g_new0</name><argument_list pos:start="135:20" pos:end="135:42">(<argument pos:start="135:21" pos:end="135:24"><expr pos:start="135:21" pos:end="135:24"><name pos:start="135:21" pos:end="135:24">bool</name></expr></argument>, <argument pos:start="135:27" pos:end="135:41"><expr pos:start="135:27" pos:end="135:41"><name pos:start="135:27" pos:end="135:41"><name pos:start="135:27" pos:end="135:27">s</name><operator pos:start="135:28" pos:end="135:29">-&gt;</operator><name pos:start="135:30" pos:end="135:41">num_children</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="139:5" pos:end="203:5">for <control pos:start="139:9" pos:end="141:42">(<init pos:start="139:10" pos:end="139:43"><expr pos:start="139:10" pos:end="139:14"><name pos:start="139:10" pos:end="139:10">i</name> <operator pos:start="139:12" pos:end="139:12">=</operator> <literal type="number" pos:start="139:14" pos:end="139:14">0</literal></expr><operator pos:start="139:15" pos:end="139:15">,</operator> <expr pos:start="139:17" pos:end="139:42"><name pos:start="139:17" pos:end="139:22">lentry</name> <operator pos:start="139:24" pos:end="139:24">=</operator> <call pos:start="139:26" pos:end="139:42"><name pos:start="139:26" pos:end="139:36">qlist_first</name><argument_list pos:start="139:37" pos:end="139:42">(<argument pos:start="139:38" pos:end="139:41"><expr pos:start="139:38" pos:end="139:41"><name pos:start="139:38" pos:end="139:41">list</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="139:45" pos:end="139:51"><expr pos:start="139:45" pos:end="139:50"><name pos:start="139:45" pos:end="139:50">lentry</name></expr>;</condition>

         <incr pos:start="141:10" pos:end="141:41"><expr pos:start="141:10" pos:end="141:36"><name pos:start="141:10" pos:end="141:15">lentry</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <call pos:start="141:19" pos:end="141:36"><name pos:start="141:19" pos:end="141:28">qlist_next</name><argument_list pos:start="141:29" pos:end="141:36">(<argument pos:start="141:30" pos:end="141:35"><expr pos:start="141:30" pos:end="141:35"><name pos:start="141:30" pos:end="141:35">lentry</name></expr></argument>)</argument_list></call></expr><operator pos:start="141:37" pos:end="141:37">,</operator> <expr pos:start="141:39" pos:end="141:41"><name pos:start="141:39" pos:end="141:39">i</name><operator pos:start="141:40" pos:end="141:41">++</operator></expr></incr>)</control> <block pos:start="141:44" pos:end="203:5">{<block_content pos:start="143:9" pos:end="201:25">

        <decl_stmt pos:start="143:9" pos:end="143:17"><decl pos:start="143:9" pos:end="143:16"><type pos:start="143:9" pos:end="143:15"><name pos:start="143:9" pos:end="143:13">QDict</name> <modifier pos:start="143:15" pos:end="143:15">*</modifier></type><name pos:start="143:16" pos:end="143:16">d</name></decl>;</decl_stmt>

        <decl_stmt pos:start="145:9" pos:end="145:24"><decl pos:start="145:9" pos:end="145:23"><type pos:start="145:9" pos:end="145:17"><name pos:start="145:9" pos:end="145:15">QString</name> <modifier pos:start="145:17" pos:end="145:17">*</modifier></type><name pos:start="145:18" pos:end="145:23">string</name></decl>;</decl_stmt>



        <switch pos:start="149:9" pos:end="191:9">switch <condition pos:start="149:16" pos:end="149:44">(<expr pos:start="149:17" pos:end="149:43"><call pos:start="149:17" pos:end="149:43"><name pos:start="149:17" pos:end="149:28">qobject_type</name><argument_list pos:start="149:29" pos:end="149:43">(<argument pos:start="149:30" pos:end="149:42"><expr pos:start="149:30" pos:end="149:42"><name pos:start="149:30" pos:end="149:42"><name pos:start="149:30" pos:end="149:35">lentry</name><operator pos:start="149:36" pos:end="149:37">-&gt;</operator><name pos:start="149:38" pos:end="149:42">value</name></name></expr></argument>)</argument_list></call></expr>)</condition>

        <block pos:start="151:9" pos:end="191:9">{<block_content pos:start="155:13" pos:end="189:30">

            <comment type="block" pos:start="153:13" pos:end="153:33">/* List of options */</comment>

            <case pos:start="155:13" pos:end="155:29">case <expr pos:start="155:18" pos:end="155:28"><name pos:start="155:18" pos:end="155:28">QTYPE_QDICT</name></expr>:</case>

                <expr_stmt pos:start="157:17" pos:end="157:52"><expr pos:start="157:17" pos:end="157:51"><name pos:start="157:17" pos:end="157:17">d</name> <operator pos:start="157:19" pos:end="157:19">=</operator> <call pos:start="157:21" pos:end="157:51"><name pos:start="157:21" pos:end="157:36">qobject_to_qdict</name><argument_list pos:start="157:37" pos:end="157:51">(<argument pos:start="157:38" pos:end="157:50"><expr pos:start="157:38" pos:end="157:50"><name pos:start="157:38" pos:end="157:50"><name pos:start="157:38" pos:end="157:43">lentry</name><operator pos:start="157:44" pos:end="157:45">-&gt;</operator><name pos:start="157:46" pos:end="157:50">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:27"><expr pos:start="159:17" pos:end="159:26"><call pos:start="159:17" pos:end="159:26"><name pos:start="159:17" pos:end="159:23">QINCREF</name><argument_list pos:start="159:24" pos:end="159:26">(<argument pos:start="159:25" pos:end="159:25"><expr pos:start="159:25" pos:end="159:25"><name pos:start="159:25" pos:end="159:25">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="163:44"><expr pos:start="161:17" pos:end="163:43"><name pos:start="161:17" pos:end="161:19">ret</name> <operator pos:start="161:21" pos:end="161:21">=</operator> <call pos:start="161:23" pos:end="163:43"><name pos:start="161:23" pos:end="161:31">bdrv_open</name><argument_list pos:start="161:32" pos:end="163:43">(<argument pos:start="161:33" pos:end="161:41"><expr pos:start="161:33" pos:end="161:41"><operator pos:start="161:33" pos:end="161:33">&amp;</operator><name pos:start="161:34" pos:end="161:41"><name pos:start="161:34" pos:end="161:34">s</name><operator pos:start="161:35" pos:end="161:36">-&gt;</operator><name pos:start="161:37" pos:end="161:38">bs</name><index pos:start="161:39" pos:end="161:41">[<expr pos:start="161:40" pos:end="161:40"><name pos:start="161:40" pos:end="161:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="161:44" pos:end="161:47"><expr pos:start="161:44" pos:end="161:47"><name pos:start="161:44" pos:end="161:47">NULL</name></expr></argument>, <argument pos:start="161:50" pos:end="161:53"><expr pos:start="161:50" pos:end="161:53"><name pos:start="161:50" pos:end="161:53">NULL</name></expr></argument>, <argument pos:start="161:56" pos:end="161:56"><expr pos:start="161:56" pos:end="161:56"><name pos:start="161:56" pos:end="161:56">d</name></expr></argument>, <argument pos:start="161:59" pos:end="161:63"><expr pos:start="161:59" pos:end="161:63"><name pos:start="161:59" pos:end="161:63">flags</name></expr></argument>, <argument pos:start="161:66" pos:end="161:69"><expr pos:start="161:66" pos:end="161:69"><name pos:start="161:66" pos:end="161:69">NULL</name></expr></argument>,

                                <argument pos:start="163:33" pos:end="163:42"><expr pos:start="163:33" pos:end="163:42"><operator pos:start="163:33" pos:end="163:33">&amp;</operator><name pos:start="163:34" pos:end="163:42">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="165:17" pos:end="165:22">break;</break>



            <comment type="block" pos:start="169:13" pos:end="169:31">/* QMP reference */</comment>

            <case pos:start="171:13" pos:end="171:31">case <expr pos:start="171:18" pos:end="171:30"><name pos:start="171:18" pos:end="171:30">QTYPE_QSTRING</name></expr>:</case>

                <expr_stmt pos:start="173:17" pos:end="173:59"><expr pos:start="173:17" pos:end="173:58"><name pos:start="173:17" pos:end="173:22">string</name> <operator pos:start="173:24" pos:end="173:24">=</operator> <call pos:start="173:26" pos:end="173:58"><name pos:start="173:26" pos:end="173:43">qobject_to_qstring</name><argument_list pos:start="173:44" pos:end="173:58">(<argument pos:start="173:45" pos:end="173:57"><expr pos:start="173:45" pos:end="173:57"><name pos:start="173:45" pos:end="173:57"><name pos:start="173:45" pos:end="173:50">lentry</name><operator pos:start="173:51" pos:end="173:52">-&gt;</operator><name pos:start="173:53" pos:end="173:57">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="177:57"><expr pos:start="175:17" pos:end="177:56"><name pos:start="175:17" pos:end="175:19">ret</name> <operator pos:start="175:21" pos:end="175:21">=</operator> <call pos:start="175:23" pos:end="177:56"><name pos:start="175:23" pos:end="175:31">bdrv_open</name><argument_list pos:start="175:32" pos:end="177:56">(<argument pos:start="175:33" pos:end="175:41"><expr pos:start="175:33" pos:end="175:41"><operator pos:start="175:33" pos:end="175:33">&amp;</operator><name pos:start="175:34" pos:end="175:41"><name pos:start="175:34" pos:end="175:34">s</name><operator pos:start="175:35" pos:end="175:36">-&gt;</operator><name pos:start="175:37" pos:end="175:38">bs</name><index pos:start="175:39" pos:end="175:41">[<expr pos:start="175:40" pos:end="175:40"><name pos:start="175:40" pos:end="175:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="175:44" pos:end="175:47"><expr pos:start="175:44" pos:end="175:47"><name pos:start="175:44" pos:end="175:47">NULL</name></expr></argument>, <argument pos:start="175:50" pos:end="175:72"><expr pos:start="175:50" pos:end="175:72"><call pos:start="175:50" pos:end="175:72"><name pos:start="175:50" pos:end="175:64">qstring_get_str</name><argument_list pos:start="175:65" pos:end="175:72">(<argument pos:start="175:66" pos:end="175:71"><expr pos:start="175:66" pos:end="175:71"><name pos:start="175:66" pos:end="175:71">string</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="175:75" pos:end="175:78"><expr pos:start="175:75" pos:end="175:78"><name pos:start="175:75" pos:end="175:78">NULL</name></expr></argument>,

                                <argument pos:start="177:33" pos:end="177:37"><expr pos:start="177:33" pos:end="177:37"><name pos:start="177:33" pos:end="177:37">flags</name></expr></argument>, <argument pos:start="177:40" pos:end="177:43"><expr pos:start="177:40" pos:end="177:43"><name pos:start="177:40" pos:end="177:43">NULL</name></expr></argument>, <argument pos:start="177:46" pos:end="177:55"><expr pos:start="177:46" pos:end="177:55"><operator pos:start="177:46" pos:end="177:46">&amp;</operator><name pos:start="177:47" pos:end="177:55">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="179:17" pos:end="179:22">break;</break>



            <default pos:start="183:13" pos:end="183:20">default:</default>

                <expr_stmt pos:start="185:17" pos:end="187:44"><expr pos:start="185:17" pos:end="187:43"><call pos:start="185:17" pos:end="187:43"><name pos:start="185:17" pos:end="185:26">error_setg</name><argument_list pos:start="185:27" pos:end="187:43">(<argument pos:start="185:28" pos:end="185:37"><expr pos:start="185:28" pos:end="185:37"><operator pos:start="185:28" pos:end="185:28">&amp;</operator><name pos:start="185:29" pos:end="185:37">local_err</name></expr></argument>, <argument pos:start="185:40" pos:end="187:39"><expr pos:start="185:40" pos:end="187:39"><literal type="string" pos:start="185:40" pos:end="185:80">"Specification of child block device %i "</literal>

                           <literal type="string" pos:start="187:28" pos:end="187:39">"is invalid"</literal></expr></argument>, <argument pos:start="187:42" pos:end="187:42"><expr pos:start="187:42" pos:end="187:42"><name pos:start="187:42" pos:end="187:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:30"><expr pos:start="189:17" pos:end="189:29"><name pos:start="189:17" pos:end="189:19">ret</name> <operator pos:start="189:21" pos:end="189:21">=</operator> <operator pos:start="189:23" pos:end="189:23">-</operator><name pos:start="189:24" pos:end="189:29">EINVAL</name></expr>;</expr_stmt>

        </block_content>}</block></switch>



        <if_stmt pos:start="195:9" pos:end="199:9"><if pos:start="195:9" pos:end="199:9">if <condition pos:start="195:12" pos:end="195:20">(<expr pos:start="195:13" pos:end="195:19"><name pos:start="195:13" pos:end="195:15">ret</name> <operator pos:start="195:17" pos:end="195:17">&lt;</operator> <literal type="number" pos:start="195:19" pos:end="195:19">0</literal></expr>)</condition> <block pos:start="195:22" pos:end="199:9">{<block_content pos:start="197:13" pos:end="197:28">

            <goto pos:start="197:13" pos:end="197:28">goto <name pos:start="197:18" pos:end="197:27">close_exit</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:25"><expr pos:start="201:9" pos:end="201:24"><name pos:start="201:9" pos:end="201:17"><name pos:start="201:9" pos:end="201:14">opened</name><index pos:start="201:15" pos:end="201:17">[<expr pos:start="201:16" pos:end="201:16"><name pos:start="201:16" pos:end="201:16">i</name></expr>]</index></name> <operator pos:start="201:19" pos:end="201:19">=</operator> <name pos:start="201:21" pos:end="201:24">true</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="207:5" pos:end="207:19"><expr pos:start="207:5" pos:end="207:18"><call pos:start="207:5" pos:end="207:18"><name pos:start="207:5" pos:end="207:10">g_free</name><argument_list pos:start="207:11" pos:end="207:18">(<argument pos:start="207:12" pos:end="207:17"><expr pos:start="207:12" pos:end="207:17"><name pos:start="207:12" pos:end="207:17">opened</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <goto pos:start="209:5" pos:end="209:14">goto <name pos:start="209:10" pos:end="209:13">exit</name>;</goto>



<label pos:start="213:1" pos:end="213:11"><name pos:start="213:1" pos:end="213:10">close_exit</name>:</label>

    <comment type="block" pos:start="215:5" pos:end="215:26">/* cleanup on error */</comment>

    <for pos:start="217:5" pos:end="227:5">for <control pos:start="217:9" pos:end="217:41">(<init pos:start="217:10" pos:end="217:15"><expr pos:start="217:10" pos:end="217:14"><name pos:start="217:10" pos:end="217:10">i</name> <operator pos:start="217:12" pos:end="217:12">=</operator> <literal type="number" pos:start="217:14" pos:end="217:14">0</literal></expr>;</init> <condition pos:start="217:17" pos:end="217:36"><expr pos:start="217:17" pos:end="217:35"><name pos:start="217:17" pos:end="217:17">i</name> <operator pos:start="217:19" pos:end="217:19">&lt;</operator> <name pos:start="217:21" pos:end="217:35"><name pos:start="217:21" pos:end="217:21">s</name><operator pos:start="217:22" pos:end="217:23">-&gt;</operator><name pos:start="217:24" pos:end="217:35">num_children</name></name></expr>;</condition> <incr pos:start="217:38" pos:end="217:40"><expr pos:start="217:38" pos:end="217:40"><name pos:start="217:38" pos:end="217:38">i</name><operator pos:start="217:39" pos:end="217:40">++</operator></expr></incr>)</control> <block pos:start="217:43" pos:end="227:5">{<block_content pos:start="219:9" pos:end="225:29">

        <if_stmt pos:start="219:9" pos:end="223:9"><if pos:start="219:9" pos:end="223:9">if <condition pos:start="219:12" pos:end="219:23">(<expr pos:start="219:13" pos:end="219:22"><operator pos:start="219:13" pos:end="219:13">!</operator><name pos:start="219:14" pos:end="219:22"><name pos:start="219:14" pos:end="219:19">opened</name><index pos:start="219:20" pos:end="219:22">[<expr pos:start="219:21" pos:end="219:21"><name pos:start="219:21" pos:end="219:21">i</name></expr>]</index></name></expr>)</condition> <block pos:start="219:25" pos:end="223:9">{<block_content pos:start="221:13" pos:end="221:21">

            <continue pos:start="221:13" pos:end="221:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:29"><expr pos:start="225:9" pos:end="225:28"><call pos:start="225:9" pos:end="225:28"><name pos:start="225:9" pos:end="225:18">bdrv_unref</name><argument_list pos:start="225:19" pos:end="225:28">(<argument pos:start="225:20" pos:end="225:27"><expr pos:start="225:20" pos:end="225:27"><name pos:start="225:20" pos:end="225:27"><name pos:start="225:20" pos:end="225:20">s</name><operator pos:start="225:21" pos:end="225:22">-&gt;</operator><name pos:start="225:23" pos:end="225:24">bs</name><index pos:start="225:25" pos:end="225:27">[<expr pos:start="225:26" pos:end="225:26"><name pos:start="225:26" pos:end="225:26">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="229:5" pos:end="229:18"><expr pos:start="229:5" pos:end="229:17"><call pos:start="229:5" pos:end="229:17"><name pos:start="229:5" pos:end="229:10">g_free</name><argument_list pos:start="229:11" pos:end="229:17">(<argument pos:start="229:12" pos:end="229:16"><expr pos:start="229:12" pos:end="229:16"><name pos:start="229:12" pos:end="229:16"><name pos:start="229:12" pos:end="229:12">s</name><operator pos:start="229:13" pos:end="229:14">-&gt;</operator><name pos:start="229:15" pos:end="229:16">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="231:19"><expr pos:start="231:5" pos:end="231:18"><call pos:start="231:5" pos:end="231:18"><name pos:start="231:5" pos:end="231:10">g_free</name><argument_list pos:start="231:11" pos:end="231:18">(<argument pos:start="231:12" pos:end="231:17"><expr pos:start="231:12" pos:end="231:17"><name pos:start="231:12" pos:end="231:17">opened</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="233:1" pos:end="233:5"><name pos:start="233:1" pos:end="233:4">exit</name>:</label>

    <comment type="block" pos:start="235:5" pos:end="235:25">/* propagate error */</comment>

    <if_stmt pos:start="237:5" pos:end="241:5"><if pos:start="237:5" pos:end="241:5">if <condition pos:start="237:8" pos:end="237:18">(<expr pos:start="237:9" pos:end="237:17"><name pos:start="237:9" pos:end="237:17">local_err</name></expr>)</condition> <block pos:start="237:20" pos:end="241:5">{<block_content pos:start="239:9" pos:end="239:41">

        <expr_stmt pos:start="239:9" pos:end="239:41"><expr pos:start="239:9" pos:end="239:40"><call pos:start="239:9" pos:end="239:40"><name pos:start="239:9" pos:end="239:23">error_propagate</name><argument_list pos:start="239:24" pos:end="239:40">(<argument pos:start="239:25" pos:end="239:28"><expr pos:start="239:25" pos:end="239:28"><name pos:start="239:25" pos:end="239:28">errp</name></expr></argument>, <argument pos:start="239:31" pos:end="239:39"><expr pos:start="239:31" pos:end="239:39"><name pos:start="239:31" pos:end="239:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:18"><expr pos:start="243:5" pos:end="243:17"><call pos:start="243:5" pos:end="243:17"><name pos:start="243:5" pos:end="243:11">QDECREF</name><argument_list pos:start="243:12" pos:end="243:17">(<argument pos:start="243:13" pos:end="243:16"><expr pos:start="243:13" pos:end="243:16"><name pos:start="243:13" pos:end="243:16">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:17"><expr pos:start="245:5" pos:end="245:16"><call pos:start="245:5" pos:end="245:16"><name pos:start="245:5" pos:end="245:11">QDECREF</name><argument_list pos:start="245:12" pos:end="245:16">(<argument pos:start="245:13" pos:end="245:15"><expr pos:start="245:13" pos:end="245:15"><name pos:start="245:13" pos:end="245:15">sub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="247:5" pos:end="247:15">return <expr pos:start="247:12" pos:end="247:14"><name pos:start="247:12" pos:end="247:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
