<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10178.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">floor_encode</name><parameter_list pos:start="1:25" pos:end="5:51">(<parameter pos:start="1:26" pos:end="1:49"><decl pos:start="1:26" pos:end="1:49"><type pos:start="1:26" pos:end="1:49"><name pos:start="1:26" pos:end="1:43">vorbis_enc_context</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">venc</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:71"><decl pos:start="1:52" pos:end="1:71"><type pos:start="1:52" pos:end="1:71"><name pos:start="1:52" pos:end="1:67">vorbis_enc_floor</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:71">fc</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:42"><decl pos:start="3:26" pos:end="3:42"><type pos:start="3:26" pos:end="3:42"><name pos:start="3:26" pos:end="3:38">PutBitContext</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:42">pb</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:59"><decl pos:start="3:45" pos:end="3:59"><type pos:start="3:45" pos:end="3:59"><name pos:start="3:45" pos:end="3:52">uint16_t</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:59">posts</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:37"><decl pos:start="5:26" pos:end="5:37"><type pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:30">float</name> <modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:37">floor</name></decl></parameter>, <parameter pos:start="5:40" pos:end="5:50"><decl pos:start="5:40" pos:end="5:50"><type pos:start="5:40" pos:end="5:50"><name pos:start="5:40" pos:end="5:42">int</name></type> <name pos:start="5:44" pos:end="5:50">samples</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="163:1">{<block_content pos:start="9:5" pos:end="161:65">

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">range</name> <init pos:start="9:15" pos:end="9:40">= <expr pos:start="9:17" pos:end="9:40"><literal type="number" pos:start="9:17" pos:end="9:19">255</literal> <operator pos:start="9:21" pos:end="9:21">/</operator> <name pos:start="9:23" pos:end="9:36"><name pos:start="9:23" pos:end="9:24">fc</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:36">multiplier</name></name> <operator pos:start="9:38" pos:end="9:38">+</operator> <literal type="number" pos:start="9:40" pos:end="9:40">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:13">coded</name><index pos:start="11:14" pos:end="11:31">[<expr pos:start="11:15" pos:end="11:30"><name pos:start="11:15" pos:end="11:30">MAX_FLOOR_VALUES</name></expr>]</index></name></decl>;</decl_stmt> <comment type="line" pos:start="11:34" pos:end="11:61">// first 2 values are unused</comment>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:18">counter</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><call pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:12">put_bits</name><argument_list pos:start="17:13" pos:end="17:22">(<argument pos:start="17:14" pos:end="17:15"><expr pos:start="17:14" pos:end="17:15"><name pos:start="17:14" pos:end="17:15">pb</name></expr></argument>, <argument pos:start="17:18" pos:end="17:18"><expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">1</literal></expr></argument>, <argument pos:start="17:21" pos:end="17:21"><expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="17:25" pos:end="17:35">// non zero</comment>

    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><call pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:12">put_bits</name><argument_list pos:start="19:13" pos:end="19:43">(<argument pos:start="19:14" pos:end="19:15"><expr pos:start="19:14" pos:end="19:15"><name pos:start="19:14" pos:end="19:15">pb</name></expr></argument>, <argument pos:start="19:18" pos:end="19:32"><expr pos:start="19:18" pos:end="19:32"><call pos:start="19:18" pos:end="19:32"><name pos:start="19:18" pos:end="19:21">ilog</name><argument_list pos:start="19:22" pos:end="19:32">(<argument pos:start="19:23" pos:end="19:31"><expr pos:start="19:23" pos:end="19:31"><name pos:start="19:23" pos:end="19:27">range</name> <operator pos:start="19:29" pos:end="19:29">-</operator> <literal type="number" pos:start="19:31" pos:end="19:31">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:35" pos:end="19:42"><expr pos:start="19:35" pos:end="19:42"><name pos:start="19:35" pos:end="19:42"><name pos:start="19:35" pos:end="19:39">posts</name><index pos:start="19:40" pos:end="19:42">[<expr pos:start="19:41" pos:end="19:41"><literal type="number" pos:start="19:41" pos:end="19:41">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><call pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:12">put_bits</name><argument_list pos:start="21:13" pos:end="21:43">(<argument pos:start="21:14" pos:end="21:15"><expr pos:start="21:14" pos:end="21:15"><name pos:start="21:14" pos:end="21:15">pb</name></expr></argument>, <argument pos:start="21:18" pos:end="21:32"><expr pos:start="21:18" pos:end="21:32"><call pos:start="21:18" pos:end="21:32"><name pos:start="21:18" pos:end="21:21">ilog</name><argument_list pos:start="21:22" pos:end="21:32">(<argument pos:start="21:23" pos:end="21:31"><expr pos:start="21:23" pos:end="21:31"><name pos:start="21:23" pos:end="21:27">range</name> <operator pos:start="21:29" pos:end="21:29">-</operator> <literal type="number" pos:start="21:31" pos:end="21:31">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:35" pos:end="21:42"><expr pos:start="21:35" pos:end="21:42"><name pos:start="21:35" pos:end="21:42"><name pos:start="21:35" pos:end="21:39">posts</name><index pos:start="21:40" pos:end="21:42">[<expr pos:start="21:41" pos:end="21:41"><literal type="number" pos:start="21:41" pos:end="21:41">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:9">coded</name><index pos:start="23:10" pos:end="23:12">[<expr pos:start="23:11" pos:end="23:11"><literal type="number" pos:start="23:11" pos:end="23:11">0</literal></expr>]</index></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:20">coded</name><index pos:start="23:21" pos:end="23:23">[<expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">1</literal></expr>]</index></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <literal type="number" pos:start="23:27" pos:end="23:27">1</literal></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="85:5">for <control pos:start="27:9" pos:end="27:36">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">2</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:31"><expr pos:start="27:17" pos:end="27:30"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:30"><name pos:start="27:21" pos:end="27:22">fc</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:30">values</name></name></expr>;</condition> <incr pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:33">i</name><operator pos:start="27:34" pos:end="27:35">++</operator></expr></incr>)</control> <block pos:start="27:38" pos:end="85:5">{<block_content pos:start="29:9" pos:end="83:9">

        <decl_stmt pos:start="29:9" pos:end="37:52"><decl pos:start="29:9" pos:end="37:51"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:21">predicted</name> <init pos:start="29:23" pos:end="37:51">= <expr pos:start="29:25" pos:end="37:51"><call pos:start="29:25" pos:end="37:51"><name pos:start="29:25" pos:end="29:36">render_point</name><argument_list pos:start="29:37" pos:end="37:51">(<argument pos:start="29:38" pos:end="29:64"><expr pos:start="29:38" pos:end="29:64"><name pos:start="29:38" pos:end="29:62"><name pos:start="29:38" pos:end="29:39">fc</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:45">list</name><index pos:start="29:46" pos:end="29:62">[<expr pos:start="29:47" pos:end="29:61"><name pos:start="29:47" pos:end="29:57"><name pos:start="29:47" pos:end="29:48">fc</name><operator pos:start="29:49" pos:end="29:50">-&gt;</operator><name pos:start="29:51" pos:end="29:54">list</name><index pos:start="29:55" pos:end="29:57">[<expr pos:start="29:56" pos:end="29:56"><name pos:start="29:56" pos:end="29:56">i</name></expr>]</index></name><operator pos:start="29:58" pos:end="29:58">.</operator><name pos:start="29:59" pos:end="29:61">low</name></expr>]</index></name><operator pos:start="29:63" pos:end="29:63">.</operator><name pos:start="29:64" pos:end="29:64">x</name></expr></argument>,

                                     <argument pos:start="31:38" pos:end="31:59"><expr pos:start="31:38" pos:end="31:59"><name pos:start="31:38" pos:end="31:59"><name pos:start="31:38" pos:end="31:42">posts</name><index pos:start="31:43" pos:end="31:59">[<expr pos:start="31:44" pos:end="31:58"><name pos:start="31:44" pos:end="31:54"><name pos:start="31:44" pos:end="31:45">fc</name><operator pos:start="31:46" pos:end="31:47">-&gt;</operator><name pos:start="31:48" pos:end="31:51">list</name><index pos:start="31:52" pos:end="31:54">[<expr pos:start="31:53" pos:end="31:53"><name pos:start="31:53" pos:end="31:53">i</name></expr>]</index></name><operator pos:start="31:55" pos:end="31:55">.</operator><name pos:start="31:56" pos:end="31:58">low</name></expr>]</index></name></expr></argument>,

                                     <argument pos:start="33:38" pos:end="33:65"><expr pos:start="33:38" pos:end="33:65"><name pos:start="33:38" pos:end="33:63"><name pos:start="33:38" pos:end="33:39">fc</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:45">list</name><index pos:start="33:46" pos:end="33:63">[<expr pos:start="33:47" pos:end="33:62"><name pos:start="33:47" pos:end="33:57"><name pos:start="33:47" pos:end="33:48">fc</name><operator pos:start="33:49" pos:end="33:50">-&gt;</operator><name pos:start="33:51" pos:end="33:54">list</name><index pos:start="33:55" pos:end="33:57">[<expr pos:start="33:56" pos:end="33:56"><name pos:start="33:56" pos:end="33:56">i</name></expr>]</index></name><operator pos:start="33:58" pos:end="33:58">.</operator><name pos:start="33:59" pos:end="33:62">high</name></expr>]</index></name><operator pos:start="33:64" pos:end="33:64">.</operator><name pos:start="33:65" pos:end="33:65">x</name></expr></argument>,

                                     <argument pos:start="35:38" pos:end="35:60"><expr pos:start="35:38" pos:end="35:60"><name pos:start="35:38" pos:end="35:60"><name pos:start="35:38" pos:end="35:42">posts</name><index pos:start="35:43" pos:end="35:60">[<expr pos:start="35:44" pos:end="35:59"><name pos:start="35:44" pos:end="35:54"><name pos:start="35:44" pos:end="35:45">fc</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:51">list</name><index pos:start="35:52" pos:end="35:54">[<expr pos:start="35:53" pos:end="35:53"><name pos:start="35:53" pos:end="35:53">i</name></expr>]</index></name><operator pos:start="35:55" pos:end="35:55">.</operator><name pos:start="35:56" pos:end="35:59">high</name></expr>]</index></name></expr></argument>,

                                     <argument pos:start="37:38" pos:end="37:50"><expr pos:start="37:38" pos:end="37:50"><name pos:start="37:38" pos:end="37:48"><name pos:start="37:38" pos:end="37:39">fc</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:45">list</name><index pos:start="37:46" pos:end="37:48">[<expr pos:start="37:47" pos:end="37:47"><name pos:start="37:47" pos:end="37:47">i</name></expr>]</index></name><operator pos:start="37:49" pos:end="37:49">.</operator><name pos:start="37:50" pos:end="37:50">x</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:41"><decl pos:start="39:9" pos:end="39:40"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:20">highroom</name> <init pos:start="39:22" pos:end="39:40">= <expr pos:start="39:24" pos:end="39:40"><name pos:start="39:24" pos:end="39:28">range</name> <operator pos:start="39:30" pos:end="39:30">-</operator> <name pos:start="39:32" pos:end="39:40">predicted</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:32"><decl pos:start="41:9" pos:end="41:31"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:19">lowroom</name> <init pos:start="41:21" pos:end="41:31">= <expr pos:start="41:23" pos:end="41:31"><name pos:start="41:23" pos:end="41:31">predicted</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:44"><decl pos:start="43:9" pos:end="43:43"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:16">room</name> <init pos:start="43:18" pos:end="43:43">= <expr pos:start="43:20" pos:end="43:43"><call pos:start="43:20" pos:end="43:43"><name pos:start="43:20" pos:end="43:24">FFMIN</name><argument_list pos:start="43:25" pos:end="43:43">(<argument pos:start="43:26" pos:end="43:33"><expr pos:start="43:26" pos:end="43:33"><name pos:start="43:26" pos:end="43:33">highroom</name></expr></argument>, <argument pos:start="43:36" pos:end="43:42"><expr pos:start="43:36" pos:end="43:42"><name pos:start="43:36" pos:end="43:42">lowroom</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="45:9" pos:end="61:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:34">(<expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:21">predicted</name> <operator pos:start="45:23" pos:end="45:24">==</operator> <name pos:start="45:26" pos:end="45:33"><name pos:start="45:26" pos:end="45:30">posts</name><index pos:start="45:31" pos:end="45:33">[<expr pos:start="45:32" pos:end="45:32"><name pos:start="45:32" pos:end="45:32">i</name></expr>]</index></name></expr>)</condition> <block pos:start="45:36" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:21">

            <expr_stmt pos:start="47:13" pos:end="47:25"><expr pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:17">coded</name><index pos:start="47:18" pos:end="47:20">[<expr pos:start="47:19" pos:end="47:19"><name pos:start="47:19" pos:end="47:19">i</name></expr>]</index></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <literal type="number" pos:start="47:24" pos:end="47:24">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="47:27" pos:end="47:56">// must be used later as flag!</comment>

            <continue pos:start="49:13" pos:end="49:21">continue;</continue>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="61:9">else <block pos:start="51:16" pos:end="61:9">{<block_content pos:start="53:13" pos:end="59:45">

            <if_stmt pos:start="53:13" pos:end="55:45"><if pos:start="53:13" pos:end="55:45">if <condition pos:start="53:16" pos:end="53:41">(<expr pos:start="53:17" pos:end="53:40"><operator pos:start="53:17" pos:end="53:17">!</operator><name pos:start="53:18" pos:end="53:40"><name pos:start="53:18" pos:end="53:22">coded</name><index pos:start="53:23" pos:end="53:40">[<expr pos:start="53:24" pos:end="53:38"><name pos:start="53:24" pos:end="53:34"><name pos:start="53:24" pos:end="53:25">fc</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:31">list</name><index pos:start="53:32" pos:end="53:34">[<expr pos:start="53:33" pos:end="53:33"><name pos:start="53:33" pos:end="53:33">i</name></expr>]</index></name><operator pos:start="53:35" pos:end="53:35">.</operator><name pos:start="53:36" pos:end="53:38">low</name></expr> ]</index></name></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:45"><block_content pos:start="55:17" pos:end="55:45">

                <expr_stmt pos:start="55:17" pos:end="55:45"><expr pos:start="55:17" pos:end="55:44"><name pos:start="55:17" pos:end="55:39"><name pos:start="55:17" pos:end="55:21">coded</name><index pos:start="55:22" pos:end="55:39">[<expr pos:start="55:23" pos:end="55:37"><name pos:start="55:23" pos:end="55:33"><name pos:start="55:23" pos:end="55:24">fc</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:30">list</name><index pos:start="55:31" pos:end="55:33">[<expr pos:start="55:32" pos:end="55:32"><name pos:start="55:32" pos:end="55:32">i</name></expr>]</index></name><operator pos:start="55:34" pos:end="55:34">.</operator><name pos:start="55:35" pos:end="55:37">low</name></expr> ]</index></name> <operator pos:start="55:41" pos:end="55:41">=</operator> <operator pos:start="55:43" pos:end="55:43">-</operator><literal type="number" pos:start="55:44" pos:end="55:44">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="57:13" pos:end="59:45"><if pos:start="57:13" pos:end="59:45">if <condition pos:start="57:16" pos:end="57:41">(<expr pos:start="57:17" pos:end="57:40"><operator pos:start="57:17" pos:end="57:17">!</operator><name pos:start="57:18" pos:end="57:40"><name pos:start="57:18" pos:end="57:22">coded</name><index pos:start="57:23" pos:end="57:40">[<expr pos:start="57:24" pos:end="57:39"><name pos:start="57:24" pos:end="57:34"><name pos:start="57:24" pos:end="57:25">fc</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:31">list</name><index pos:start="57:32" pos:end="57:34">[<expr pos:start="57:33" pos:end="57:33"><name pos:start="57:33" pos:end="57:33">i</name></expr>]</index></name><operator pos:start="57:35" pos:end="57:35">.</operator><name pos:start="57:36" pos:end="57:39">high</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:45"><block_content pos:start="59:17" pos:end="59:45">

                <expr_stmt pos:start="59:17" pos:end="59:45"><expr pos:start="59:17" pos:end="59:44"><name pos:start="59:17" pos:end="59:39"><name pos:start="59:17" pos:end="59:21">coded</name><index pos:start="59:22" pos:end="59:39">[<expr pos:start="59:23" pos:end="59:38"><name pos:start="59:23" pos:end="59:33"><name pos:start="59:23" pos:end="59:24">fc</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:30">list</name><index pos:start="59:31" pos:end="59:33">[<expr pos:start="59:32" pos:end="59:32"><name pos:start="59:32" pos:end="59:32">i</name></expr>]</index></name><operator pos:start="59:34" pos:end="59:34">.</operator><name pos:start="59:35" pos:end="59:38">high</name></expr>]</index></name> <operator pos:start="59:41" pos:end="59:41">=</operator> <operator pos:start="59:43" pos:end="59:43">-</operator><literal type="number" pos:start="59:44" pos:end="59:44">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="63:9" pos:end="83:9"><if pos:start="63:9" pos:end="73:9">if <condition pos:start="63:12" pos:end="63:33">(<expr pos:start="63:13" pos:end="63:32"><name pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:17">posts</name><index pos:start="63:18" pos:end="63:20">[<expr pos:start="63:19" pos:end="63:19"><name pos:start="63:19" pos:end="63:19">i</name></expr>]</index></name> <operator pos:start="63:22" pos:end="63:22">&gt;</operator> <name pos:start="63:24" pos:end="63:32">predicted</name></expr>)</condition> <block pos:start="63:35" pos:end="73:9">{<block_content pos:start="65:13" pos:end="71:55">

            <if_stmt pos:start="65:13" pos:end="71:55"><if pos:start="65:13" pos:end="67:58">if <condition pos:start="65:16" pos:end="65:44">(<expr pos:start="65:17" pos:end="65:43"><name pos:start="65:17" pos:end="65:24"><name pos:start="65:17" pos:end="65:21">posts</name><index pos:start="65:22" pos:end="65:24">[<expr pos:start="65:23" pos:end="65:23"><name pos:start="65:23" pos:end="65:23">i</name></expr>]</index></name> <operator pos:start="65:26" pos:end="65:26">-</operator> <name pos:start="65:28" pos:end="65:36">predicted</name> <operator pos:start="65:38" pos:end="65:38">&gt;</operator> <name pos:start="65:40" pos:end="65:43">room</name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:58"><block_content pos:start="67:17" pos:end="67:58">

                <expr_stmt pos:start="67:17" pos:end="67:58"><expr pos:start="67:17" pos:end="67:57"><name pos:start="67:17" pos:end="67:24"><name pos:start="67:17" pos:end="67:21">coded</name><index pos:start="67:22" pos:end="67:24">[<expr pos:start="67:23" pos:end="67:23"><name pos:start="67:23" pos:end="67:23">i</name></expr>]</index></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:35"><name pos:start="67:28" pos:end="67:32">posts</name><index pos:start="67:33" pos:end="67:35">[<expr pos:start="67:34" pos:end="67:34"><name pos:start="67:34" pos:end="67:34">i</name></expr>]</index></name> <operator pos:start="67:37" pos:end="67:37">-</operator> <name pos:start="67:39" pos:end="67:47">predicted</name> <operator pos:start="67:49" pos:end="67:49">+</operator> <name pos:start="67:51" pos:end="67:57">lowroom</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="69:13" pos:end="71:55">else<block type="pseudo" pos:start="71:17" pos:end="71:55"><block_content pos:start="71:17" pos:end="71:55">

                <expr_stmt pos:start="71:17" pos:end="71:55"><expr pos:start="71:17" pos:end="71:54"><name pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:21">coded</name><index pos:start="71:22" pos:end="71:24">[<expr pos:start="71:23" pos:end="71:23"><name pos:start="71:23" pos:end="71:23">i</name></expr>]</index></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <operator pos:start="71:28" pos:end="71:28">(</operator><name pos:start="71:29" pos:end="71:36"><name pos:start="71:29" pos:end="71:33">posts</name><index pos:start="71:34" pos:end="71:36">[<expr pos:start="71:35" pos:end="71:35"><name pos:start="71:35" pos:end="71:35">i</name></expr>]</index></name> <operator pos:start="71:38" pos:end="71:38">-</operator> <name pos:start="71:40" pos:end="71:48">predicted</name><operator pos:start="71:49" pos:end="71:49">)</operator> <operator pos:start="71:51" pos:end="71:52">&lt;&lt;</operator> <literal type="number" pos:start="71:54" pos:end="71:54">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="73:11" pos:end="83:9">else <block pos:start="73:16" pos:end="83:9">{<block_content pos:start="75:13" pos:end="81:61">

            <if_stmt pos:start="75:13" pos:end="81:61"><if pos:start="75:13" pos:end="77:63">if <condition pos:start="75:16" pos:end="75:44">(<expr pos:start="75:17" pos:end="75:43"><name pos:start="75:17" pos:end="75:25">predicted</name> <operator pos:start="75:27" pos:end="75:27">-</operator> <name pos:start="75:29" pos:end="75:36"><name pos:start="75:29" pos:end="75:33">posts</name><index pos:start="75:34" pos:end="75:36">[<expr pos:start="75:35" pos:end="75:35"><name pos:start="75:35" pos:end="75:35">i</name></expr>]</index></name> <operator pos:start="75:38" pos:end="75:38">&gt;</operator> <name pos:start="75:40" pos:end="75:43">room</name></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:63"><block_content pos:start="77:17" pos:end="77:63">

                <expr_stmt pos:start="77:17" pos:end="77:63"><expr pos:start="77:17" pos:end="77:62"><name pos:start="77:17" pos:end="77:24"><name pos:start="77:17" pos:end="77:21">coded</name><index pos:start="77:22" pos:end="77:24">[<expr pos:start="77:23" pos:end="77:23"><name pos:start="77:23" pos:end="77:23">i</name></expr>]</index></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <name pos:start="77:28" pos:end="77:36">predicted</name> <operator pos:start="77:38" pos:end="77:38">-</operator> <name pos:start="77:40" pos:end="77:47"><name pos:start="77:40" pos:end="77:44">posts</name><index pos:start="77:45" pos:end="77:47">[<expr pos:start="77:46" pos:end="77:46"><name pos:start="77:46" pos:end="77:46">i</name></expr>]</index></name> <operator pos:start="77:49" pos:end="77:49">+</operator> <name pos:start="77:51" pos:end="77:58">highroom</name> <operator pos:start="77:60" pos:end="77:60">-</operator> <literal type="number" pos:start="77:62" pos:end="77:62">1</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="79:13" pos:end="81:61">else<block type="pseudo" pos:start="81:17" pos:end="81:61"><block_content pos:start="81:17" pos:end="81:61">

                <expr_stmt pos:start="81:17" pos:end="81:61"><expr pos:start="81:17" pos:end="81:60"><name pos:start="81:17" pos:end="81:24"><name pos:start="81:17" pos:end="81:21">coded</name><index pos:start="81:22" pos:end="81:24">[<expr pos:start="81:23" pos:end="81:23"><name pos:start="81:23" pos:end="81:23">i</name></expr>]</index></name> <operator pos:start="81:26" pos:end="81:26">=</operator> <operator pos:start="81:28" pos:end="81:28">(</operator><operator pos:start="81:29" pos:end="81:29">(</operator><name pos:start="81:30" pos:end="81:38">predicted</name> <operator pos:start="81:40" pos:end="81:40">-</operator> <name pos:start="81:42" pos:end="81:49"><name pos:start="81:42" pos:end="81:46">posts</name><index pos:start="81:47" pos:end="81:49">[<expr pos:start="81:48" pos:end="81:48"><name pos:start="81:48" pos:end="81:48">i</name></expr>]</index></name><operator pos:start="81:50" pos:end="81:50">)</operator> <operator pos:start="81:52" pos:end="81:53">&lt;&lt;</operator> <literal type="number" pos:start="81:55" pos:end="81:55">1</literal><operator pos:start="81:56" pos:end="81:56">)</operator> <operator pos:start="81:58" pos:end="81:58">-</operator> <literal type="number" pos:start="81:60" pos:end="81:60">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="89:5" pos:end="89:16"><expr pos:start="89:5" pos:end="89:15"><name pos:start="89:5" pos:end="89:11">counter</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <literal type="number" pos:start="89:15" pos:end="89:15">2</literal></expr>;</expr_stmt>

    <for pos:start="91:5" pos:end="155:5">for <control pos:start="91:9" pos:end="91:40">(<init pos:start="91:10" pos:end="91:15"><expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>;</init> <condition pos:start="91:17" pos:end="91:35"><expr pos:start="91:17" pos:end="91:34"><name pos:start="91:17" pos:end="91:17">i</name> <operator pos:start="91:19" pos:end="91:19">&lt;</operator> <name pos:start="91:21" pos:end="91:34"><name pos:start="91:21" pos:end="91:22">fc</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:34">partitions</name></name></expr>;</condition> <incr pos:start="91:37" pos:end="91:39"><expr pos:start="91:37" pos:end="91:39"><name pos:start="91:37" pos:end="91:37">i</name><operator pos:start="91:38" pos:end="91:39">++</operator></expr></incr>)</control> <block pos:start="91:42" pos:end="155:5">{<block_content pos:start="93:9" pos:end="153:9">

        <decl_stmt pos:start="93:9" pos:end="93:77"><decl pos:start="93:9" pos:end="93:76"><type pos:start="93:9" pos:end="93:32"><name pos:start="93:9" pos:end="93:30">vorbis_enc_floor_class</name> <modifier pos:start="93:32" pos:end="93:32">*</modifier></type> <name pos:start="93:34" pos:end="93:34">c</name> <init pos:start="93:36" pos:end="93:76">= <expr pos:start="93:38" pos:end="93:76"><operator pos:start="93:38" pos:end="93:38">&amp;</operator><name pos:start="93:39" pos:end="93:76"><name pos:start="93:39" pos:end="93:40">fc</name><operator pos:start="93:41" pos:end="93:42">-&gt;</operator><name pos:start="93:43" pos:end="93:49">classes</name><index pos:start="93:50" pos:end="93:76">[<expr pos:start="93:51" pos:end="93:75"><name pos:start="93:51" pos:end="93:75"><name pos:start="93:51" pos:end="93:52">fc</name><operator pos:start="93:53" pos:end="93:54">-&gt;</operator><name pos:start="93:55" pos:end="93:72">partition_to_class</name><index pos:start="93:73" pos:end="93:75">[<expr pos:start="93:74" pos:end="93:74"><name pos:start="93:74" pos:end="93:74">i</name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:47"><decl pos:start="95:9" pos:end="95:13"><type pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:11">int</name></type> <name pos:start="95:13" pos:end="95:13">k</name></decl>, <decl pos:start="95:16" pos:end="95:23"><type ref="prev" pos:start="95:9" pos:end="95:11"/><name pos:start="95:16" pos:end="95:19">cval</name> <init pos:start="95:21" pos:end="95:23">= <expr pos:start="95:23" pos:end="95:23"><literal type="number" pos:start="95:23" pos:end="95:23">0</literal></expr></init></decl>, <decl pos:start="95:26" pos:end="95:46"><type ref="prev" pos:start="95:9" pos:end="95:11"/><name pos:start="95:26" pos:end="95:29">csub</name> <init pos:start="95:31" pos:end="95:46">= <expr pos:start="95:33" pos:end="95:46"><literal type="number" pos:start="95:33" pos:end="95:33">1</literal><operator pos:start="95:34" pos:end="95:35">&lt;&lt;</operator><name pos:start="95:36" pos:end="95:46"><name pos:start="95:36" pos:end="95:36">c</name><operator pos:start="95:37" pos:end="95:38">-&gt;</operator><name pos:start="95:39" pos:end="95:46">subclass</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="97:9" pos:end="133:9"><if pos:start="97:9" pos:end="133:9">if <condition pos:start="97:12" pos:end="97:24">(<expr pos:start="97:13" pos:end="97:23"><name pos:start="97:13" pos:end="97:23"><name pos:start="97:13" pos:end="97:13">c</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:23">subclass</name></name></expr>)</condition> <block pos:start="97:26" pos:end="133:9">{<block_content pos:start="99:13" pos:end="131:41">

            <decl_stmt pos:start="99:13" pos:end="99:73"><decl pos:start="99:13" pos:end="99:72"><type pos:start="99:13" pos:end="99:33"><name pos:start="99:13" pos:end="99:31">vorbis_enc_codebook</name> <modifier pos:start="99:33" pos:end="99:33">*</modifier></type> <name pos:start="99:35" pos:end="99:38">book</name> <init pos:start="99:40" pos:end="99:72">= <expr pos:start="99:42" pos:end="99:72"><operator pos:start="99:42" pos:end="99:42">&amp;</operator><name pos:start="99:43" pos:end="99:72"><name pos:start="99:43" pos:end="99:46">venc</name><operator pos:start="99:47" pos:end="99:48">-&gt;</operator><name pos:start="99:49" pos:end="99:57">codebooks</name><index pos:start="99:58" pos:end="99:72">[<expr pos:start="99:59" pos:end="99:71"><name pos:start="99:59" pos:end="99:71"><name pos:start="99:59" pos:end="99:59">c</name><operator pos:start="99:60" pos:end="99:61">-&gt;</operator><name pos:start="99:62" pos:end="99:71">masterbook</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="101:13" pos:end="101:27"><decl pos:start="101:13" pos:end="101:26"><type pos:start="101:13" pos:end="101:15"><name pos:start="101:13" pos:end="101:15">int</name></type> <name pos:start="101:17" pos:end="101:22">cshift</name> <init pos:start="101:24" pos:end="101:26">= <expr pos:start="101:26" pos:end="101:26"><literal type="number" pos:start="101:26" pos:end="101:26">0</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="103:13" pos:end="129:13">for <control pos:start="103:17" pos:end="103:40">(<init pos:start="103:18" pos:end="103:23"><expr pos:start="103:18" pos:end="103:22"><name pos:start="103:18" pos:end="103:18">k</name> <operator pos:start="103:20" pos:end="103:20">=</operator> <literal type="number" pos:start="103:22" pos:end="103:22">0</literal></expr>;</init> <condition pos:start="103:25" pos:end="103:35"><expr pos:start="103:25" pos:end="103:34"><name pos:start="103:25" pos:end="103:25">k</name> <operator pos:start="103:27" pos:end="103:27">&lt;</operator> <name pos:start="103:29" pos:end="103:34"><name pos:start="103:29" pos:end="103:29">c</name><operator pos:start="103:30" pos:end="103:31">-&gt;</operator><name pos:start="103:32" pos:end="103:34">dim</name></name></expr>;</condition> <incr pos:start="103:37" pos:end="103:39"><expr pos:start="103:37" pos:end="103:39"><name pos:start="103:37" pos:end="103:37">k</name><operator pos:start="103:38" pos:end="103:39">++</operator></expr></incr>)</control> <block pos:start="103:42" pos:end="129:13">{<block_content pos:start="105:17" pos:end="127:38">

                <decl_stmt pos:start="105:17" pos:end="105:22"><decl pos:start="105:17" pos:end="105:21"><type pos:start="105:17" pos:end="105:19"><name pos:start="105:17" pos:end="105:19">int</name></type> <name pos:start="105:21" pos:end="105:21">l</name></decl>;</decl_stmt>

                <for pos:start="107:17" pos:end="121:17">for <control pos:start="107:21" pos:end="107:42">(<init pos:start="107:22" pos:end="107:27"><expr pos:start="107:22" pos:end="107:26"><name pos:start="107:22" pos:end="107:22">l</name> <operator pos:start="107:24" pos:end="107:24">=</operator> <literal type="number" pos:start="107:26" pos:end="107:26">0</literal></expr>;</init> <condition pos:start="107:29" pos:end="107:37"><expr pos:start="107:29" pos:end="107:36"><name pos:start="107:29" pos:end="107:29">l</name> <operator pos:start="107:31" pos:end="107:31">&lt;</operator> <name pos:start="107:33" pos:end="107:36">csub</name></expr>;</condition> <incr pos:start="107:39" pos:end="107:41"><expr pos:start="107:39" pos:end="107:41"><name pos:start="107:39" pos:end="107:39">l</name><operator pos:start="107:40" pos:end="107:41">++</operator></expr></incr>)</control> <block pos:start="107:44" pos:end="121:17">{<block_content pos:start="109:21" pos:end="119:30">

                    <decl_stmt pos:start="109:21" pos:end="109:35"><decl pos:start="109:21" pos:end="109:34"><type pos:start="109:21" pos:end="109:23"><name pos:start="109:21" pos:end="109:23">int</name></type> <name pos:start="109:25" pos:end="109:30">maxval</name> <init pos:start="109:32" pos:end="109:34">= <expr pos:start="109:34" pos:end="109:34"><literal type="number" pos:start="109:34" pos:end="109:34">1</literal></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="111:21" pos:end="113:71"><if pos:start="111:21" pos:end="113:71">if <condition pos:start="111:24" pos:end="111:42">(<expr pos:start="111:25" pos:end="111:41"><name pos:start="111:25" pos:end="111:35"><name pos:start="111:25" pos:end="111:25">c</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:32">books</name><index pos:start="111:33" pos:end="111:35">[<expr pos:start="111:34" pos:end="111:34"><name pos:start="111:34" pos:end="111:34">l</name></expr>]</index></name> <operator pos:start="111:37" pos:end="111:38">!=</operator> <operator pos:start="111:40" pos:end="111:40">-</operator><literal type="number" pos:start="111:41" pos:end="111:41">1</literal></expr>)</condition><block type="pseudo" pos:start="113:25" pos:end="113:71"><block_content pos:start="113:25" pos:end="113:71">

                        <expr_stmt pos:start="113:25" pos:end="113:71"><expr pos:start="113:25" pos:end="113:70"><name pos:start="113:25" pos:end="113:30">maxval</name> <operator pos:start="113:32" pos:end="113:32">=</operator> <name pos:start="113:34" pos:end="113:61"><name pos:start="113:34" pos:end="113:37">venc</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:48">codebooks</name><index pos:start="113:49" pos:end="113:61">[<expr pos:start="113:50" pos:end="113:60"><name pos:start="113:50" pos:end="113:60"><name pos:start="113:50" pos:end="113:50">c</name><operator pos:start="113:51" pos:end="113:52">-&gt;</operator><name pos:start="113:53" pos:end="113:57">books</name><index pos:start="113:58" pos:end="113:60">[<expr pos:start="113:59" pos:end="113:59"><name pos:start="113:59" pos:end="113:59">l</name></expr>]</index></name></expr>]</index></name><operator pos:start="113:62" pos:end="113:62">.</operator><name pos:start="113:63" pos:end="113:70">nentries</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <comment type="line" pos:start="115:21" pos:end="115:79">// coded could be -1, but this still works, cause that is 0</comment>

                    <if_stmt pos:start="117:21" pos:end="119:30"><if pos:start="117:21" pos:end="119:30">if <condition pos:start="117:24" pos:end="117:52">(<expr pos:start="117:25" pos:end="117:51"><name pos:start="117:25" pos:end="117:42"><name pos:start="117:25" pos:end="117:29">coded</name><index pos:start="117:30" pos:end="117:42">[<expr pos:start="117:31" pos:end="117:41"><name pos:start="117:31" pos:end="117:37">counter</name> <operator pos:start="117:39" pos:end="117:39">+</operator> <name pos:start="117:41" pos:end="117:41">k</name></expr>]</index></name> <operator pos:start="117:44" pos:end="117:44">&lt;</operator> <name pos:start="117:46" pos:end="117:51">maxval</name></expr>)</condition><block type="pseudo" pos:start="119:25" pos:end="119:30"><block_content pos:start="119:25" pos:end="119:30">

                        <break pos:start="119:25" pos:end="119:30">break;</break></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="123:17" pos:end="123:34"><expr pos:start="123:17" pos:end="123:33"><call pos:start="123:17" pos:end="123:33"><name pos:start="123:17" pos:end="123:22">assert</name><argument_list pos:start="123:23" pos:end="123:33">(<argument pos:start="123:24" pos:end="123:32"><expr pos:start="123:24" pos:end="123:32"><name pos:start="123:24" pos:end="123:24">l</name> <operator pos:start="123:26" pos:end="123:27">!=</operator> <name pos:start="123:29" pos:end="123:32">csub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:38"><expr pos:start="125:17" pos:end="125:37"><name pos:start="125:17" pos:end="125:20">cval</name>   <operator pos:start="125:24" pos:end="125:25">|=</operator> <name pos:start="125:27" pos:end="125:27">l</name> <operator pos:start="125:29" pos:end="125:30">&lt;&lt;</operator> <name pos:start="125:32" pos:end="125:37">cshift</name></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:38"><expr pos:start="127:17" pos:end="127:37"><name pos:start="127:17" pos:end="127:22">cshift</name> <operator pos:start="127:24" pos:end="127:25">+=</operator> <name pos:start="127:27" pos:end="127:37"><name pos:start="127:27" pos:end="127:27">c</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:37">subclass</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="131:13" pos:end="131:41"><expr pos:start="131:13" pos:end="131:40"><call pos:start="131:13" pos:end="131:40"><name pos:start="131:13" pos:end="131:24">put_codeword</name><argument_list pos:start="131:25" pos:end="131:40">(<argument pos:start="131:26" pos:end="131:27"><expr pos:start="131:26" pos:end="131:27"><name pos:start="131:26" pos:end="131:27">pb</name></expr></argument>, <argument pos:start="131:30" pos:end="131:33"><expr pos:start="131:30" pos:end="131:33"><name pos:start="131:30" pos:end="131:33">book</name></expr></argument>, <argument pos:start="131:36" pos:end="131:39"><expr pos:start="131:36" pos:end="131:39"><name pos:start="131:36" pos:end="131:39">cval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <for pos:start="135:9" pos:end="153:9">for <control pos:start="135:13" pos:end="135:36">(<init pos:start="135:14" pos:end="135:19"><expr pos:start="135:14" pos:end="135:18"><name pos:start="135:14" pos:end="135:14">k</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <literal type="number" pos:start="135:18" pos:end="135:18">0</literal></expr>;</init> <condition pos:start="135:21" pos:end="135:31"><expr pos:start="135:21" pos:end="135:30"><name pos:start="135:21" pos:end="135:21">k</name> <operator pos:start="135:23" pos:end="135:23">&lt;</operator> <name pos:start="135:25" pos:end="135:30"><name pos:start="135:25" pos:end="135:25">c</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:30">dim</name></name></expr>;</condition> <incr pos:start="135:33" pos:end="135:35"><expr pos:start="135:33" pos:end="135:35"><name pos:start="135:33" pos:end="135:33">k</name><operator pos:start="135:34" pos:end="135:35">++</operator></expr></incr>)</control> <block pos:start="135:38" pos:end="153:9">{<block_content pos:start="137:13" pos:end="151:60">

            <decl_stmt pos:start="137:13" pos:end="137:50"><decl pos:start="137:13" pos:end="137:49"><type pos:start="137:13" pos:end="137:15"><name pos:start="137:13" pos:end="137:15">int</name></type> <name pos:start="137:17" pos:end="137:20">book</name>  <init pos:start="137:23" pos:end="137:49">= <expr pos:start="137:25" pos:end="137:49"><name pos:start="137:25" pos:end="137:49"><name pos:start="137:25" pos:end="137:25">c</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:32">books</name><index pos:start="137:33" pos:end="137:49">[<expr pos:start="137:34" pos:end="137:48"><name pos:start="137:34" pos:end="137:37">cval</name> <operator pos:start="137:39" pos:end="137:39">&amp;</operator> <operator pos:start="137:41" pos:end="137:41">(</operator><name pos:start="137:42" pos:end="137:45">csub</name><operator pos:start="137:46" pos:end="137:46">-</operator><literal type="number" pos:start="137:47" pos:end="137:47">1</literal><operator pos:start="137:48" pos:end="137:48">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="139:13" pos:end="139:41"><decl pos:start="139:13" pos:end="139:40"><type pos:start="139:13" pos:end="139:15"><name pos:start="139:13" pos:end="139:15">int</name></type> <name pos:start="139:17" pos:end="139:21">entry</name> <init pos:start="139:23" pos:end="139:40">= <expr pos:start="139:25" pos:end="139:40"><name pos:start="139:25" pos:end="139:40"><name pos:start="139:25" pos:end="139:29">coded</name><index pos:start="139:30" pos:end="139:40">[<expr pos:start="139:31" pos:end="139:39"><name pos:start="139:31" pos:end="139:37">counter</name><operator pos:start="139:38" pos:end="139:39">++</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:33"><expr pos:start="141:13" pos:end="141:32"><name pos:start="141:13" pos:end="141:16">cval</name> <operator pos:start="141:18" pos:end="141:20">&gt;&gt;=</operator> <name pos:start="141:22" pos:end="141:32"><name pos:start="141:22" pos:end="141:22">c</name><operator pos:start="141:23" pos:end="141:24">-&gt;</operator><name pos:start="141:25" pos:end="141:32">subclass</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="145:25"><if pos:start="143:13" pos:end="145:25">if <condition pos:start="143:16" pos:end="143:27">(<expr pos:start="143:17" pos:end="143:26"><name pos:start="143:17" pos:end="143:20">book</name> <operator pos:start="143:22" pos:end="143:23">==</operator> <operator pos:start="143:25" pos:end="143:25">-</operator><literal type="number" pos:start="143:26" pos:end="143:26">1</literal></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:25"><block_content pos:start="145:17" pos:end="145:25">

                <continue pos:start="145:17" pos:end="145:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="147:13" pos:end="149:26"><if pos:start="147:13" pos:end="149:26">if <condition pos:start="147:16" pos:end="147:28">(<expr pos:start="147:17" pos:end="147:27"><name pos:start="147:17" pos:end="147:21">entry</name> <operator pos:start="147:23" pos:end="147:24">==</operator> <operator pos:start="147:26" pos:end="147:26">-</operator><literal type="number" pos:start="147:27" pos:end="147:27">1</literal></expr>)</condition><block type="pseudo" pos:start="149:17" pos:end="149:26"><block_content pos:start="149:17" pos:end="149:26">

                <expr_stmt pos:start="149:17" pos:end="149:26"><expr pos:start="149:17" pos:end="149:25"><name pos:start="149:17" pos:end="149:21">entry</name> <operator pos:start="149:23" pos:end="149:23">=</operator> <literal type="number" pos:start="149:25" pos:end="149:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:60"><expr pos:start="151:13" pos:end="151:59"><call pos:start="151:13" pos:end="151:59"><name pos:start="151:13" pos:end="151:24">put_codeword</name><argument_list pos:start="151:25" pos:end="151:59">(<argument pos:start="151:26" pos:end="151:27"><expr pos:start="151:26" pos:end="151:27"><name pos:start="151:26" pos:end="151:27">pb</name></expr></argument>, <argument pos:start="151:30" pos:end="151:51"><expr pos:start="151:30" pos:end="151:51"><operator pos:start="151:30" pos:end="151:30">&amp;</operator><name pos:start="151:31" pos:end="151:51"><name pos:start="151:31" pos:end="151:34">venc</name><operator pos:start="151:35" pos:end="151:36">-&gt;</operator><name pos:start="151:37" pos:end="151:45">codebooks</name><index pos:start="151:46" pos:end="151:51">[<expr pos:start="151:47" pos:end="151:50"><name pos:start="151:47" pos:end="151:50">book</name></expr>]</index></name></expr></argument>, <argument pos:start="151:54" pos:end="151:58"><expr pos:start="151:54" pos:end="151:58"><name pos:start="151:54" pos:end="151:58">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="159:5" pos:end="161:65"><expr pos:start="159:5" pos:end="161:64"><call pos:start="159:5" pos:end="161:64"><name pos:start="159:5" pos:end="159:32">ff_vorbis_floor1_render_list</name><argument_list pos:start="159:33" pos:end="161:64">(<argument pos:start="159:34" pos:end="159:41"><expr pos:start="159:34" pos:end="159:41"><name pos:start="159:34" pos:end="159:41"><name pos:start="159:34" pos:end="159:35">fc</name><operator pos:start="159:36" pos:end="159:37">-&gt;</operator><name pos:start="159:38" pos:end="159:41">list</name></name></expr></argument>, <argument pos:start="159:44" pos:end="159:53"><expr pos:start="159:44" pos:end="159:53"><name pos:start="159:44" pos:end="159:53"><name pos:start="159:44" pos:end="159:45">fc</name><operator pos:start="159:46" pos:end="159:47">-&gt;</operator><name pos:start="159:48" pos:end="159:53">values</name></name></expr></argument>, <argument pos:start="159:56" pos:end="159:60"><expr pos:start="159:56" pos:end="159:60"><name pos:start="159:56" pos:end="159:60">posts</name></expr></argument>, <argument pos:start="159:63" pos:end="159:67"><expr pos:start="159:63" pos:end="159:67"><name pos:start="159:63" pos:end="159:67">coded</name></expr></argument>,

                                 <argument pos:start="161:34" pos:end="161:47"><expr pos:start="161:34" pos:end="161:47"><name pos:start="161:34" pos:end="161:47"><name pos:start="161:34" pos:end="161:35">fc</name><operator pos:start="161:36" pos:end="161:37">-&gt;</operator><name pos:start="161:38" pos:end="161:47">multiplier</name></name></expr></argument>, <argument pos:start="161:50" pos:end="161:54"><expr pos:start="161:50" pos:end="161:54"><name pos:start="161:50" pos:end="161:54">floor</name></expr></argument>, <argument pos:start="161:57" pos:end="161:63"><expr pos:start="161:57" pos:end="161:63"><name pos:start="161:57" pos:end="161:63">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
