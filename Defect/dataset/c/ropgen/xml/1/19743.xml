<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19743.c" pos:tabs="8"><function pos:start="1:1" pos:end="100:51"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">h264_decode_frame</name><parameter_list pos:start="1:29" pos:end="2:61">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,
                             <parameter pos:start="2:30" pos:end="2:43"><decl pos:start="2:30" pos:end="2:43"><type pos:start="2:30" pos:end="2:43"><name pos:start="2:30" pos:end="2:32">int</name> <modifier pos:start="2:34" pos:end="2:34">*</modifier></type><name pos:start="2:35" pos:end="2:43">got_frame</name></decl></parameter>, <parameter pos:start="2:46" pos:end="2:60"><decl pos:start="2:46" pos:end="2:60"><type pos:start="2:46" pos:end="2:60"><name pos:start="2:46" pos:end="2:53">AVPacket</name> <modifier pos:start="2:55" pos:end="2:55">*</modifier></type><name pos:start="2:56" pos:end="2:60">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="100:51">{<block_content pos:start="4:5" pos:end="100:51">
    <decl_stmt pos:start="4:5" pos:end="4:37"><decl pos:start="4:5" pos:end="4:36"><type pos:start="4:5" pos:end="4:19"><specifier pos:start="4:5" pos:end="4:9">const</specifier> <name pos:start="4:11" pos:end="4:17">uint8_t</name> <modifier pos:start="4:19" pos:end="4:19">*</modifier></type><name pos:start="4:20" pos:end="4:22">buf</name> <init pos:start="4:24" pos:end="4:36">= <expr pos:start="4:26" pos:end="4:36"><name pos:start="4:26" pos:end="4:36"><name pos:start="4:26" pos:end="4:30">avpkt</name><operator pos:start="4:31" pos:end="4:32">-&gt;</operator><name pos:start="4:33" pos:end="4:36">data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">buf_size</name>       <init pos:start="5:24" pos:end="5:36">= <expr pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:30">avpkt</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">size</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:42"><decl pos:start="6:5" pos:end="6:41"><type pos:start="6:5" pos:end="6:17"><name pos:start="6:5" pos:end="6:15">H264Context</name> <modifier pos:start="6:17" pos:end="6:17">*</modifier></type><name pos:start="6:18" pos:end="6:18">h</name>     <init pos:start="6:24" pos:end="6:41">= <expr pos:start="6:26" pos:end="6:41"><name pos:start="6:26" pos:end="6:41"><name pos:start="6:26" pos:end="6:30">avctx</name><operator pos:start="6:31" pos:end="6:32">-&gt;</operator><name pos:start="6:33" pos:end="6:41">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">pict</name>      <init pos:start="7:24" pos:end="7:29">= <expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">data</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:27"><decl pos:start="8:5" pos:end="8:26"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:17">buf_index</name>      <init pos:start="8:24" pos:end="8:26">= <expr pos:start="8:26" pos:end="8:26"><literal type="number" pos:start="8:26" pos:end="8:26">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">H264Picture</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">out</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:19"><decl pos:start="10:5" pos:end="10:9"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">i</name></decl>, <decl pos:start="10:12" pos:end="10:18"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:12" pos:end="10:18">out_idx</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:28"><expr pos:start="12:5" pos:end="12:27"><name pos:start="12:5" pos:end="12:12"><name pos:start="12:5" pos:end="12:5">h</name><operator pos:start="12:6" pos:end="12:7">-&gt;</operator><name pos:start="12:8" pos:end="12:12">flags</name></name> <operator pos:start="12:14" pos:end="12:14">=</operator> <name pos:start="12:16" pos:end="12:27"><name pos:start="12:16" pos:end="12:20">avctx</name><operator pos:start="12:21" pos:end="12:22">-&gt;</operator><name pos:start="12:23" pos:end="12:27">flags</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:50"><expr pos:start="13:5" pos:end="13:49"><call pos:start="13:5" pos:end="13:49"><name pos:start="13:5" pos:end="13:25">ff_h264_unref_picture</name><argument_list pos:start="13:26" pos:end="13:49">(<argument pos:start="13:27" pos:end="13:27"><expr pos:start="13:27" pos:end="13:27"><name pos:start="13:27" pos:end="13:27">h</name></expr></argument>, <argument pos:start="13:30" pos:end="13:48"><expr pos:start="13:30" pos:end="13:48"><operator pos:start="13:30" pos:end="13:30">&amp;</operator><name pos:start="13:31" pos:end="13:48"><name pos:start="13:31" pos:end="13:31">h</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:48">last_pic_for_ec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="14:5" pos:end="14:60">/* end of stream, output what is still in the buffers */</comment>
    <if_stmt pos:start="15:5" pos:end="100:51"><if pos:start="15:5" pos:end="100:51">if <condition pos:start="15:8" pos:end="15:22">(<expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:16">buf_size</name> <operator pos:start="15:18" pos:end="15:19">==</operator> <literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr>)</condition> <block pos:start="15:24" pos:end="100:51">{<block_content pos:start="16:2" pos:end="100:51">
 <label pos:start="16:2" pos:end="16:5"><name pos:start="16:2" pos:end="16:4">out</name>:</label>
        <expr_stmt pos:start="17:9" pos:end="17:30"><expr pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:9">h</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:22">cur_pic_ptr</name></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <name pos:start="17:26" pos:end="17:29">NULL</name></expr>;</expr_stmt>
        <expr_stmt pos:start="18:9" pos:end="18:27"><expr pos:start="18:9" pos:end="18:26"><name pos:start="18:9" pos:end="18:22"><name pos:start="18:9" pos:end="18:9">h</name><operator pos:start="18:10" pos:end="18:11">-&gt;</operator><name pos:start="18:12" pos:end="18:22">first_field</name></name> <operator pos:start="18:24" pos:end="18:24">=</operator> <literal type="number" pos:start="18:26" pos:end="18:26">0</literal></expr>;</expr_stmt>
        <comment type="line" pos:start="19:9" pos:end="19:58">// FIXME factorize this with the output code below</comment>
        <expr_stmt pos:start="20:9" pos:end="20:36"><expr pos:start="20:9" pos:end="20:35"><name pos:start="20:9" pos:end="20:11">out</name>     <operator pos:start="20:17" pos:end="20:17">=</operator> <name pos:start="20:19" pos:end="20:35"><name pos:start="20:19" pos:end="20:19">h</name><operator pos:start="20:20" pos:end="20:21">-&gt;</operator><name pos:start="20:22" pos:end="20:32">delayed_pic</name><index pos:start="20:33" pos:end="20:35">[<expr pos:start="20:34" pos:end="20:34"><literal type="number" pos:start="20:34" pos:end="20:34">0</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:20"><expr pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:15">out_idx</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>;</expr_stmt>
        <for pos:start="22:9" pos:end="100:51">for <control pos:start="22:13" pos:end="26:17">(<init pos:start="22:14" pos:end="22:19"><expr pos:start="22:14" pos:end="22:18"><name pos:start="22:14" pos:end="22:14">i</name> <operator pos:start="22:16" pos:end="22:16">=</operator> <literal type="number" pos:start="22:18" pos:end="22:18">1</literal></expr>;</init>
             <condition pos:start="23:14" pos:end="25:44"><expr pos:start="23:14" pos:end="25:43"><name pos:start="23:14" pos:end="23:30"><name pos:start="23:14" pos:end="23:14">h</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:27">delayed_pic</name><index pos:start="23:28" pos:end="23:30">[<expr pos:start="23:29" pos:end="23:29"><name pos:start="23:29" pos:end="23:29">i</name></expr>]</index></name> <operator pos:start="23:32" pos:end="23:33">&amp;&amp;</operator>
             <operator pos:start="24:14" pos:end="24:14">!</operator><name pos:start="24:15" pos:end="24:31"><name pos:start="24:15" pos:end="24:15">h</name><operator pos:start="24:16" pos:end="24:17">-&gt;</operator><name pos:start="24:18" pos:end="24:28">delayed_pic</name><index pos:start="24:29" pos:end="24:31">[<expr pos:start="24:30" pos:end="24:30"><name pos:start="24:30" pos:end="24:30">i</name></expr>]</index></name><operator pos:start="24:32" pos:end="24:33">-&gt;</operator><name pos:start="24:34" pos:end="24:45"><name pos:start="24:34" pos:end="24:34">f</name><operator pos:start="24:35" pos:end="24:36">-&gt;</operator><name pos:start="24:37" pos:end="24:45">key_frame</name></name> <operator pos:start="24:47" pos:end="24:48">&amp;&amp;</operator>
             <operator pos:start="25:14" pos:end="25:14">!</operator><name pos:start="25:15" pos:end="25:31"><name pos:start="25:15" pos:end="25:15">h</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:28">delayed_pic</name><index pos:start="25:29" pos:end="25:31">[<expr pos:start="25:30" pos:end="25:30"><name pos:start="25:30" pos:end="25:30">i</name></expr>]</index></name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:43">mmco_reset</name></expr>;</condition>
             <incr pos:start="26:14" pos:end="26:16"><expr pos:start="26:14" pos:end="26:16"><name pos:start="26:14" pos:end="26:14">i</name><operator pos:start="26:15" pos:end="26:16">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:13" pos:end="100:51"><block_content pos:start="27:13" pos:end="100:51">
            <if_stmt pos:start="27:13" pos:end="100:51"><if pos:start="27:13" pos:end="100:51">if <condition pos:start="27:16" pos:end="27:50">(<expr pos:start="27:17" pos:end="27:49"><name pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:17">h</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:30">delayed_pic</name><index pos:start="27:31" pos:end="27:33">[<expr pos:start="27:32" pos:end="27:32"><name pos:start="27:32" pos:end="27:32">i</name></expr>]</index></name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:38">poc</name> <operator pos:start="27:40" pos:end="27:40">&lt;</operator> <name pos:start="27:42" pos:end="27:49"><name pos:start="27:42" pos:end="27:44">out</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:49">poc</name></name></expr>)</condition> <block pos:start="27:52" pos:end="100:51">{<block_content pos:start="28:17" pos:end="100:51">
                <expr_stmt pos:start="28:17" pos:end="28:44"><expr pos:start="28:17" pos:end="28:43"><name pos:start="28:17" pos:end="28:19">out</name>     <operator pos:start="28:25" pos:end="28:25">=</operator> <name pos:start="28:27" pos:end="28:43"><name pos:start="28:27" pos:end="28:27">h</name><operator pos:start="28:28" pos:end="28:29">-&gt;</operator><name pos:start="28:30" pos:end="28:40">delayed_pic</name><index pos:start="28:41" pos:end="28:43">[<expr pos:start="28:42" pos:end="28:42"><name pos:start="28:42" pos:end="28:42">i</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="29:17" pos:end="29:28"><expr pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:23">out_idx</name> <operator pos:start="29:25" pos:end="29:25">=</operator> <name pos:start="29:27" pos:end="29:27">i</name></expr>;</expr_stmt>
        <for pos:start="30:9" pos:end="31:54">for <control pos:start="30:13" pos:end="30:49">(<init pos:start="30:14" pos:end="30:25"><expr pos:start="30:14" pos:end="30:24"><name pos:start="30:14" pos:end="30:14">i</name> <operator pos:start="30:16" pos:end="30:16">=</operator> <name pos:start="30:18" pos:end="30:24">out_idx</name></expr>;</init> <condition pos:start="30:27" pos:end="30:44"><expr pos:start="30:27" pos:end="30:43"><name pos:start="30:27" pos:end="30:43"><name pos:start="30:27" pos:end="30:27">h</name><operator pos:start="30:28" pos:end="30:29">-&gt;</operator><name pos:start="30:30" pos:end="30:40">delayed_pic</name><index pos:start="30:41" pos:end="30:43">[<expr pos:start="30:42" pos:end="30:42"><name pos:start="30:42" pos:end="30:42">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="30:46" pos:end="30:48"><expr pos:start="30:46" pos:end="30:48"><name pos:start="30:46" pos:end="30:46">i</name><operator pos:start="30:47" pos:end="30:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:13" pos:end="31:54"><block_content pos:start="31:13" pos:end="31:54">
            <expr_stmt pos:start="31:13" pos:end="31:54"><expr pos:start="31:13" pos:end="31:53"><name pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:13">h</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:26">delayed_pic</name><index pos:start="31:27" pos:end="31:29">[<expr pos:start="31:28" pos:end="31:28"><name pos:start="31:28" pos:end="31:28">i</name></expr>]</index></name> <operator pos:start="31:31" pos:end="31:31">=</operator> <name pos:start="31:33" pos:end="31:53"><name pos:start="31:33" pos:end="31:33">h</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:46">delayed_pic</name><index pos:start="31:47" pos:end="31:53">[<expr pos:start="31:48" pos:end="31:52"><name pos:start="31:48" pos:end="31:48">i</name> <operator pos:start="31:50" pos:end="31:50">+</operator> <literal type="number" pos:start="31:52" pos:end="31:52">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
        <if_stmt pos:start="32:9" pos:end="100:51"><if pos:start="32:9" pos:end="100:51">if <condition pos:start="32:12" pos:end="32:16">(<expr pos:start="32:13" pos:end="32:15"><name pos:start="32:13" pos:end="32:15">out</name></expr>)</condition> <block pos:start="32:18" pos:end="100:51">{<block_content pos:start="33:13" pos:end="100:51">
            <expr_stmt pos:start="33:13" pos:end="33:47"><expr pos:start="33:13" pos:end="33:46"><name pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:15">out</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:26">reference</name></name> <operator pos:start="33:28" pos:end="33:29">&amp;=</operator> <operator pos:start="33:31" pos:end="33:31">~</operator><name pos:start="33:32" pos:end="33:46">DELAYED_PIC_REF</name></expr>;</expr_stmt>
            <expr_stmt pos:start="34:13" pos:end="34:45"><expr pos:start="34:13" pos:end="34:44"><name pos:start="34:13" pos:end="34:15">ret</name> <operator pos:start="34:17" pos:end="34:17">=</operator> <call pos:start="34:19" pos:end="34:44"><name pos:start="34:19" pos:end="34:30">output_frame</name><argument_list pos:start="34:31" pos:end="34:44">(<argument pos:start="34:32" pos:end="34:32"><expr pos:start="34:32" pos:end="34:32"><name pos:start="34:32" pos:end="34:32">h</name></expr></argument>, <argument pos:start="34:35" pos:end="34:38"><expr pos:start="34:35" pos:end="34:38"><name pos:start="34:35" pos:end="34:38">pict</name></expr></argument>, <argument pos:start="34:41" pos:end="34:43"><expr pos:start="34:41" pos:end="34:43"><name pos:start="34:41" pos:end="34:43">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="35:13" pos:end="36:27"><if pos:start="35:13" pos:end="36:27">if <condition pos:start="35:16" pos:end="35:24">(<expr pos:start="35:17" pos:end="35:23"><name pos:start="35:17" pos:end="35:19">ret</name> <operator pos:start="35:21" pos:end="35:21">&lt;</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>)</condition><block type="pseudo" pos:start="36:17" pos:end="36:27"><block_content pos:start="36:17" pos:end="36:27">
                <return pos:start="36:17" pos:end="36:27">return <expr pos:start="36:24" pos:end="36:26"><name pos:start="36:24" pos:end="36:26">ret</name></expr>;</return></block_content></block></if></if_stmt>
            <expr_stmt pos:start="37:13" pos:end="37:27"><expr pos:start="37:13" pos:end="37:26"><operator pos:start="37:13" pos:end="37:13">*</operator><name pos:start="37:14" pos:end="37:22">got_frame</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <literal type="number" pos:start="37:26" pos:end="37:26">1</literal></expr>;</expr_stmt>
        <return pos:start="38:9" pos:end="38:25">return <expr pos:start="38:16" pos:end="38:24"><name pos:start="38:16" pos:end="38:24">buf_index</name></expr>;</return>
    <if_stmt pos:start="39:5" pos:end="100:51"><if pos:start="39:5" pos:end="100:51">if <condition pos:start="39:8" pos:end="39:85">(<expr pos:start="39:9" pos:end="39:84"><name pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:9">h</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:17">is_avc</name></name> <operator pos:start="39:19" pos:end="39:20">&amp;&amp;</operator> <call pos:start="39:22" pos:end="39:84"><name pos:start="39:22" pos:end="39:44">av_packet_get_side_data</name><argument_list pos:start="39:45" pos:end="39:84">(<argument pos:start="39:46" pos:end="39:50"><expr pos:start="39:46" pos:end="39:50"><name pos:start="39:46" pos:end="39:50">avpkt</name></expr></argument>, <argument pos:start="39:53" pos:end="39:77"><expr pos:start="39:53" pos:end="39:77"><name pos:start="39:53" pos:end="39:77">AV_PKT_DATA_NEW_EXTRADATA</name></expr></argument>, <argument pos:start="39:80" pos:end="39:83"><expr pos:start="39:80" pos:end="39:83"><name pos:start="39:80" pos:end="39:83">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:87" pos:end="100:51">{<block_content pos:start="40:9" pos:end="100:51">
        <decl_stmt pos:start="40:9" pos:end="40:22"><decl pos:start="40:9" pos:end="40:21"><type pos:start="40:9" pos:end="40:11"><name pos:start="40:9" pos:end="40:11">int</name></type> <name pos:start="40:13" pos:end="40:21">side_size</name></decl>;</decl_stmt>
        <decl_stmt pos:start="41:9" pos:end="41:94"><decl pos:start="41:9" pos:end="41:93"><type pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:15">uint8_t</name> <modifier pos:start="41:17" pos:end="41:17">*</modifier></type><name pos:start="41:18" pos:end="41:21">side</name> <init pos:start="41:23" pos:end="41:93">= <expr pos:start="41:25" pos:end="41:93"><call pos:start="41:25" pos:end="41:93"><name pos:start="41:25" pos:end="41:47">av_packet_get_side_data</name><argument_list pos:start="41:48" pos:end="41:93">(<argument pos:start="41:49" pos:end="41:53"><expr pos:start="41:49" pos:end="41:53"><name pos:start="41:49" pos:end="41:53">avpkt</name></expr></argument>, <argument pos:start="41:56" pos:end="41:80"><expr pos:start="41:56" pos:end="41:80"><name pos:start="41:56" pos:end="41:80">AV_PKT_DATA_NEW_EXTRADATA</name></expr></argument>, <argument pos:start="41:83" pos:end="41:92"><expr pos:start="41:83" pos:end="41:92"><operator pos:start="41:83" pos:end="41:83">&amp;</operator><name pos:start="41:84" pos:end="41:92">side_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="42:9" pos:end="43:57"><if pos:start="42:9" pos:end="43:57">if <condition pos:start="42:12" pos:end="42:38">(<expr pos:start="42:13" pos:end="42:37"><call pos:start="42:13" pos:end="42:37"><name pos:start="42:13" pos:end="42:20">is_extra</name><argument_list pos:start="42:21" pos:end="42:37">(<argument pos:start="42:22" pos:end="42:25"><expr pos:start="42:22" pos:end="42:25"><name pos:start="42:22" pos:end="42:25">side</name></expr></argument>, <argument pos:start="42:28" pos:end="42:36"><expr pos:start="42:28" pos:end="42:36"><name pos:start="42:28" pos:end="42:36">side_size</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:57"><block_content pos:start="43:13" pos:end="43:57">
            <expr_stmt pos:start="43:13" pos:end="43:57"><expr pos:start="43:13" pos:end="43:56"><call pos:start="43:13" pos:end="43:56"><name pos:start="43:13" pos:end="43:36">ff_h264_decode_extradata</name><argument_list pos:start="43:37" pos:end="43:56">(<argument pos:start="43:38" pos:end="43:38"><expr pos:start="43:38" pos:end="43:38"><name pos:start="43:38" pos:end="43:38">h</name></expr></argument>, <argument pos:start="43:41" pos:end="43:44"><expr pos:start="43:41" pos:end="43:44"><name pos:start="43:41" pos:end="43:44">side</name></expr></argument>, <argument pos:start="43:47" pos:end="43:55"><expr pos:start="43:47" pos:end="43:55"><name pos:start="43:47" pos:end="43:55">side_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="44:5" pos:end="100:51"><if pos:start="44:5" pos:end="100:51">if<condition pos:start="44:7" pos:end="44:116">(<expr pos:start="44:8" pos:end="44:115"><name pos:start="44:8" pos:end="44:16"><name pos:start="44:8" pos:end="44:8">h</name><operator pos:start="44:9" pos:end="44:10">-&gt;</operator><name pos:start="44:11" pos:end="44:16">is_avc</name></name> <operator pos:start="44:18" pos:end="44:19">&amp;&amp;</operator> <name pos:start="44:21" pos:end="44:28">buf_size</name> <operator pos:start="44:30" pos:end="44:31">&gt;=</operator> <literal type="number" pos:start="44:33" pos:end="44:33">9</literal> <operator pos:start="44:35" pos:end="44:36">&amp;&amp;</operator> <name pos:start="44:38" pos:end="44:43"><name pos:start="44:38" pos:end="44:40">buf</name><index pos:start="44:41" pos:end="44:43">[<expr pos:start="44:42" pos:end="44:42"><literal type="number" pos:start="44:42" pos:end="44:42">0</literal></expr>]</index></name><operator pos:start="44:44" pos:end="44:45">==</operator><literal type="number" pos:start="44:46" pos:end="44:46">1</literal> <operator pos:start="44:48" pos:end="44:49">&amp;&amp;</operator> <name pos:start="44:51" pos:end="44:56"><name pos:start="44:51" pos:end="44:53">buf</name><index pos:start="44:54" pos:end="44:56">[<expr pos:start="44:55" pos:end="44:55"><literal type="number" pos:start="44:55" pos:end="44:55">2</literal></expr>]</index></name><operator pos:start="44:57" pos:end="44:58">==</operator><literal type="number" pos:start="44:59" pos:end="44:59">0</literal> <operator pos:start="44:61" pos:end="44:62">&amp;&amp;</operator> <operator pos:start="44:64" pos:end="44:64">(</operator><name pos:start="44:65" pos:end="44:70"><name pos:start="44:65" pos:end="44:67">buf</name><index pos:start="44:68" pos:end="44:70">[<expr pos:start="44:69" pos:end="44:69"><literal type="number" pos:start="44:69" pos:end="44:69">4</literal></expr>]</index></name><operator pos:start="44:71" pos:end="44:71">&amp;</operator><literal type="number" pos:start="44:72" pos:end="44:75">0xFC</literal><operator pos:start="44:76" pos:end="44:76">)</operator><operator pos:start="44:77" pos:end="44:78">==</operator><literal type="number" pos:start="44:79" pos:end="44:82">0xFC</literal> <operator pos:start="44:84" pos:end="44:85">&amp;&amp;</operator> <operator pos:start="44:87" pos:end="44:87">(</operator><name pos:start="44:88" pos:end="44:93"><name pos:start="44:88" pos:end="44:90">buf</name><index pos:start="44:91" pos:end="44:93">[<expr pos:start="44:92" pos:end="44:92"><literal type="number" pos:start="44:92" pos:end="44:92">5</literal></expr>]</index></name><operator pos:start="44:94" pos:end="44:94">&amp;</operator><literal type="number" pos:start="44:95" pos:end="44:98">0x1F</literal><operator pos:start="44:99" pos:end="44:99">)</operator> <operator pos:start="44:101" pos:end="44:102">&amp;&amp;</operator> <name pos:start="44:104" pos:end="44:109"><name pos:start="44:104" pos:end="44:106">buf</name><index pos:start="44:107" pos:end="44:109">[<expr pos:start="44:108" pos:end="44:108"><literal type="number" pos:start="44:108" pos:end="44:108">8</literal></expr>]</index></name><operator pos:start="44:110" pos:end="44:111">==</operator><literal type="number" pos:start="44:112" pos:end="44:115">0x67</literal></expr>)</condition><block pos:start="44:117" pos:end="100:51">{<block_content pos:start="45:9" pos:end="100:51">
        <if_stmt pos:start="45:9" pos:end="46:62"><if pos:start="45:9" pos:end="46:62">if <condition pos:start="45:12" pos:end="45:36">(<expr pos:start="45:13" pos:end="45:35"><call pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:20">is_extra</name><argument_list pos:start="45:21" pos:end="45:35">(<argument pos:start="45:22" pos:end="45:24"><expr pos:start="45:22" pos:end="45:24"><name pos:start="45:22" pos:end="45:24">buf</name></expr></argument>, <argument pos:start="45:27" pos:end="45:34"><expr pos:start="45:27" pos:end="45:34"><name pos:start="45:27" pos:end="45:34">buf_size</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="46:13" pos:end="46:62"><block_content pos:start="46:13" pos:end="46:62">
            <return pos:start="46:13" pos:end="46:62">return <expr pos:start="46:20" pos:end="46:61"><call pos:start="46:20" pos:end="46:61"><name pos:start="46:20" pos:end="46:43">ff_h264_decode_extradata</name><argument_list pos:start="46:44" pos:end="46:61">(<argument pos:start="46:45" pos:end="46:45"><expr pos:start="46:45" pos:end="46:45"><name pos:start="46:45" pos:end="46:45">h</name></expr></argument>, <argument pos:start="46:48" pos:end="46:50"><expr pos:start="46:48" pos:end="46:50"><name pos:start="46:48" pos:end="46:50">buf</name></expr></argument>, <argument pos:start="46:53" pos:end="46:60"><expr pos:start="46:53" pos:end="46:60"><name pos:start="46:53" pos:end="46:60">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="47:5" pos:end="47:54"><expr pos:start="47:5" pos:end="47:53"><name pos:start="47:5" pos:end="47:13">buf_index</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:53"><name pos:start="47:17" pos:end="47:32">decode_nal_units</name><argument_list pos:start="47:33" pos:end="47:53">(<argument pos:start="47:34" pos:end="47:34"><expr pos:start="47:34" pos:end="47:34"><name pos:start="47:34" pos:end="47:34">h</name></expr></argument>, <argument pos:start="47:37" pos:end="47:39"><expr pos:start="47:37" pos:end="47:39"><name pos:start="47:37" pos:end="47:39">buf</name></expr></argument>, <argument pos:start="47:42" pos:end="47:49"><expr pos:start="47:42" pos:end="47:49"><name pos:start="47:42" pos:end="47:49">buf_size</name></expr></argument>, <argument pos:start="47:52" pos:end="47:52"><expr pos:start="47:52" pos:end="47:52"><literal type="number" pos:start="47:52" pos:end="47:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="48:5" pos:end="49:35"><if pos:start="48:5" pos:end="49:35">if <condition pos:start="48:8" pos:end="48:22">(<expr pos:start="48:9" pos:end="48:21"><name pos:start="48:9" pos:end="48:17">buf_index</name> <operator pos:start="48:19" pos:end="48:19">&lt;</operator> <literal type="number" pos:start="48:21" pos:end="48:21">0</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:35"><block_content pos:start="49:9" pos:end="49:35">
        <return pos:start="49:9" pos:end="49:35">return <expr pos:start="49:16" pos:end="49:34"><name pos:start="49:16" pos:end="49:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="50:5" pos:end="100:51"><if pos:start="50:5" pos:end="100:51">if <condition pos:start="50:8" pos:end="50:64">(<expr pos:start="50:9" pos:end="50:63"><operator pos:start="50:9" pos:end="50:9">!</operator><name pos:start="50:10" pos:end="50:23"><name pos:start="50:10" pos:end="50:10">h</name><operator pos:start="50:11" pos:end="50:12">-&gt;</operator><name pos:start="50:13" pos:end="50:23">cur_pic_ptr</name></name> <operator pos:start="50:25" pos:end="50:26">&amp;&amp;</operator> <name pos:start="50:28" pos:end="50:43"><name pos:start="50:28" pos:end="50:28">h</name><operator pos:start="50:29" pos:end="50:30">-&gt;</operator><name pos:start="50:31" pos:end="50:43">nal_unit_type</name></name> <operator pos:start="50:45" pos:end="50:46">==</operator> <name pos:start="50:48" pos:end="50:63">NAL_END_SEQUENCE</name></expr>)</condition> <block pos:start="50:66" pos:end="100:51">{<block_content pos:start="51:9" pos:end="100:51">
        <expr_stmt pos:start="51:9" pos:end="51:42"><expr pos:start="51:9" pos:end="51:41"><call pos:start="51:9" pos:end="51:41"><name pos:start="51:9" pos:end="51:18">av_assert0</name><argument_list pos:start="51:19" pos:end="51:41">(<argument pos:start="51:20" pos:end="51:40"><expr pos:start="51:20" pos:end="51:40"><name pos:start="51:20" pos:end="51:28">buf_index</name> <operator pos:start="51:30" pos:end="51:31">&lt;=</operator> <name pos:start="51:33" pos:end="51:40">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <goto pos:start="52:9" pos:end="52:17">goto <name pos:start="52:14" pos:end="52:16">out</name>;</goto>
    <if_stmt pos:start="53:5" pos:end="100:51"><if pos:start="53:5" pos:end="100:51">if <condition pos:start="53:8" pos:end="53:65">(<expr pos:start="53:9" pos:end="53:64"><operator pos:start="53:9" pos:end="53:9">!</operator><operator pos:start="53:10" pos:end="53:10">(</operator><name pos:start="53:11" pos:end="53:23"><name pos:start="53:11" pos:end="53:15">avctx</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:23">flags2</name></name> <operator pos:start="53:25" pos:end="53:25">&amp;</operator> <name pos:start="53:27" pos:end="53:44">CODEC_FLAG2_CHUNKS</name><operator pos:start="53:45" pos:end="53:45">)</operator> <operator pos:start="53:47" pos:end="53:48">&amp;&amp;</operator> <operator pos:start="53:50" pos:end="53:50">!</operator><name pos:start="53:51" pos:end="53:64"><name pos:start="53:51" pos:end="53:51">h</name><operator pos:start="53:52" pos:end="53:53">-&gt;</operator><name pos:start="53:54" pos:end="53:64">cur_pic_ptr</name></name></expr>)</condition> <block pos:start="53:67" pos:end="100:51">{<block_content pos:start="54:9" pos:end="100:51">
        <if_stmt pos:start="54:9" pos:end="56:28"><if pos:start="54:9" pos:end="56:28">if <condition pos:start="54:12" pos:end="55:53">(<expr pos:start="54:13" pos:end="55:52"><name pos:start="54:13" pos:end="54:29"><name pos:start="54:13" pos:end="54:17">avctx</name><operator pos:start="54:18" pos:end="54:19">-&gt;</operator><name pos:start="54:20" pos:end="54:29">skip_frame</name></name> <operator pos:start="54:31" pos:end="54:32">&gt;=</operator> <name pos:start="54:34" pos:end="54:49">AVDISCARD_NONREF</name> <operator pos:start="54:51" pos:end="54:52">||</operator>
            <name pos:start="55:13" pos:end="55:20">buf_size</name> <operator pos:start="55:22" pos:end="55:23">&gt;=</operator> <literal type="number" pos:start="55:25" pos:end="55:25">4</literal> <operator pos:start="55:27" pos:end="55:28">&amp;&amp;</operator> <operator pos:start="55:30" pos:end="55:30">!</operator><call pos:start="55:31" pos:end="55:52"><name pos:start="55:31" pos:end="55:36">memcmp</name><argument_list pos:start="55:37" pos:end="55:52">(<argument pos:start="55:38" pos:end="55:43"><expr pos:start="55:38" pos:end="55:43"><literal type="string" pos:start="55:38" pos:end="55:43">"Q264"</literal></expr></argument>, <argument pos:start="55:46" pos:end="55:48"><expr pos:start="55:46" pos:end="55:48"><name pos:start="55:46" pos:end="55:48">buf</name></expr></argument>, <argument pos:start="55:51" pos:end="55:51"><expr pos:start="55:51" pos:end="55:51"><literal type="number" pos:start="55:51" pos:end="55:51">4</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="56:13" pos:end="56:28"><block_content pos:start="56:13" pos:end="56:28">
            <return pos:start="56:13" pos:end="56:28">return <expr pos:start="56:20" pos:end="56:27"><name pos:start="56:20" pos:end="56:27">buf_size</name></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="57:9" pos:end="57:51"><expr pos:start="57:9" pos:end="57:50"><call pos:start="57:9" pos:end="57:50"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="57:50">(<argument pos:start="57:16" pos:end="57:20"><expr pos:start="57:16" pos:end="57:20"><name pos:start="57:16" pos:end="57:20">avctx</name></expr></argument>, <argument pos:start="57:23" pos:end="57:34"><expr pos:start="57:23" pos:end="57:34"><name pos:start="57:23" pos:end="57:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:37" pos:end="57:49"><expr pos:start="57:37" pos:end="57:49"><literal type="string" pos:start="57:37" pos:end="57:49">"no frame!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="58:9" pos:end="58:35">return <expr pos:start="58:16" pos:end="58:34"><name pos:start="58:16" pos:end="58:34">AVERROR_INVALIDDATA</name></expr>;</return>
    <if_stmt pos:start="59:5" pos:end="100:51"><if pos:start="59:5" pos:end="100:51">if <condition pos:start="59:8" pos:end="60:50">(<expr pos:start="59:9" pos:end="60:49"><operator pos:start="59:9" pos:end="59:9">!</operator><operator pos:start="59:10" pos:end="59:10">(</operator><name pos:start="59:11" pos:end="59:23"><name pos:start="59:11" pos:end="59:15">avctx</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:23">flags2</name></name> <operator pos:start="59:25" pos:end="59:25">&amp;</operator> <name pos:start="59:27" pos:end="59:44">CODEC_FLAG2_CHUNKS</name><operator pos:start="59:45" pos:end="59:45">)</operator> <operator pos:start="59:47" pos:end="59:48">||</operator>
        <operator pos:start="60:9" pos:end="60:9">(</operator><name pos:start="60:10" pos:end="60:16"><name pos:start="60:10" pos:end="60:10">h</name><operator pos:start="60:11" pos:end="60:12">-&gt;</operator><name pos:start="60:13" pos:end="60:16">mb_y</name></name> <operator pos:start="60:18" pos:end="60:19">&gt;=</operator> <name pos:start="60:21" pos:end="60:32"><name pos:start="60:21" pos:end="60:21">h</name><operator pos:start="60:22" pos:end="60:23">-&gt;</operator><name pos:start="60:24" pos:end="60:32">mb_height</name></name> <operator pos:start="60:34" pos:end="60:35">&amp;&amp;</operator> <name pos:start="60:37" pos:end="60:48"><name pos:start="60:37" pos:end="60:37">h</name><operator pos:start="60:38" pos:end="60:39">-&gt;</operator><name pos:start="60:40" pos:end="60:48">mb_height</name></name><operator pos:start="60:49" pos:end="60:49">)</operator></expr>)</condition> <block pos:start="60:52" pos:end="100:51">{<block_content pos:start="61:9" pos:end="100:51">
        <if_stmt pos:start="61:9" pos:end="62:34"><if pos:start="61:9" pos:end="62:34">if <condition pos:start="61:12" pos:end="61:47">(<expr pos:start="61:13" pos:end="61:46"><name pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:17">avctx</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:25">flags2</name></name> <operator pos:start="61:27" pos:end="61:27">&amp;</operator> <name pos:start="61:29" pos:end="61:46">CODEC_FLAG2_CHUNKS</name></expr>)</condition><block type="pseudo" pos:start="62:13" pos:end="62:34"><block_content pos:start="62:13" pos:end="62:34">
            <expr_stmt pos:start="62:13" pos:end="62:34"><expr pos:start="62:13" pos:end="62:33"><call pos:start="62:13" pos:end="62:33"><name pos:start="62:13" pos:end="62:27">decode_postinit</name><argument_list pos:start="62:28" pos:end="62:33">(<argument pos:start="62:29" pos:end="62:29"><expr pos:start="62:29" pos:end="62:29"><name pos:start="62:29" pos:end="62:29">h</name></expr></argument>, <argument pos:start="62:32" pos:end="62:32"><expr pos:start="62:32" pos:end="62:32"><literal type="number" pos:start="62:32" pos:end="62:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="63:9" pos:end="63:50"><expr pos:start="63:9" pos:end="63:49"><call pos:start="63:9" pos:end="63:49"><name pos:start="63:9" pos:end="63:25">ff_h264_field_end</name><argument_list pos:start="63:26" pos:end="63:49">(<argument pos:start="63:27" pos:end="63:27"><expr pos:start="63:27" pos:end="63:27"><name pos:start="63:27" pos:end="63:27">h</name></expr></argument>, <argument pos:start="63:30" pos:end="63:45"><expr pos:start="63:30" pos:end="63:45"><operator pos:start="63:30" pos:end="63:30">&amp;</operator><name pos:start="63:31" pos:end="63:45"><name pos:start="63:31" pos:end="63:31">h</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:42">slice_ctx</name><index pos:start="63:43" pos:end="63:45">[<expr pos:start="63:44" pos:end="63:44"><literal type="number" pos:start="63:44" pos:end="63:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="63:48" pos:end="63:48"><expr pos:start="63:48" pos:end="63:48"><literal type="number" pos:start="63:48" pos:end="63:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="64:9" pos:end="64:36">/* Wait for second field. */</comment>
        <expr_stmt pos:start="65:9" pos:end="65:23"><expr pos:start="65:9" pos:end="65:22"><operator pos:start="65:9" pos:end="65:9">*</operator><name pos:start="65:10" pos:end="65:18">got_frame</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>;</expr_stmt>
        <if_stmt pos:start="66:9" pos:end="100:51"><if pos:start="66:9" pos:end="100:51">if <condition pos:start="66:12" pos:end="67:66">(<expr pos:start="66:13" pos:end="67:65"><name pos:start="66:13" pos:end="66:30"><name pos:start="66:13" pos:end="66:13">h</name><operator pos:start="66:14" pos:end="66:15">-&gt;</operator><name pos:start="66:16" pos:end="66:30">next_output_pic</name></name> <operator pos:start="66:32" pos:end="66:33">&amp;&amp;</operator> <operator pos:start="66:35" pos:end="66:35">(</operator>
                                   <name pos:start="67:36" pos:end="67:64"><name pos:start="67:36" pos:end="67:36">h</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:53">next_output_pic</name><operator pos:start="67:54" pos:end="67:55">-&gt;</operator><name pos:start="67:56" pos:end="67:64">recovered</name></name><operator pos:start="67:65" pos:end="67:65">)</operator></expr>)</condition> <block pos:start="67:68" pos:end="100:51">{<block_content pos:start="68:13" pos:end="100:51">
            <if_stmt pos:start="68:13" pos:end="69:70"><if pos:start="68:13" pos:end="69:70">if <condition pos:start="68:16" pos:end="68:47">(<expr pos:start="68:17" pos:end="68:46"><operator pos:start="68:17" pos:end="68:17">!</operator><name pos:start="68:18" pos:end="68:46"><name pos:start="68:18" pos:end="68:18">h</name><operator pos:start="68:19" pos:end="68:20">-&gt;</operator><name pos:start="68:21" pos:end="68:35">next_output_pic</name><operator pos:start="68:36" pos:end="68:37">-&gt;</operator><name pos:start="68:38" pos:end="68:46">recovered</name></name></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:70"><block_content pos:start="69:17" pos:end="69:70">
                <expr_stmt pos:start="69:17" pos:end="69:70"><expr pos:start="69:17" pos:end="69:69"><name pos:start="69:17" pos:end="69:44"><name pos:start="69:17" pos:end="69:17">h</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:34">next_output_pic</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:37">f</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:44">flags</name></name> <operator pos:start="69:46" pos:end="69:47">|=</operator> <name pos:start="69:49" pos:end="69:69">AV_FRAME_FLAG_CORRUPT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="70:13" pos:end="100:51"><if pos:start="70:13" pos:end="100:51">if <condition pos:start="70:16" pos:end="73:13">(<expr pos:start="70:17" pos:end="72:62"><operator pos:start="70:17" pos:end="70:17">!</operator><name pos:start="70:18" pos:end="70:34"><name pos:start="70:18" pos:end="70:18">h</name><operator pos:start="70:19" pos:end="70:20">-&gt;</operator><name pos:start="70:21" pos:end="70:25">avctx</name><operator pos:start="70:26" pos:end="70:27">-&gt;</operator><name pos:start="70:28" pos:end="70:34">hwaccel</name></name> <operator pos:start="70:36" pos:end="70:37">&amp;&amp;</operator>
                 <operator pos:start="71:18" pos:end="71:18">(</operator><name pos:start="71:19" pos:end="71:50"><name pos:start="71:19" pos:end="71:19">h</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:36">next_output_pic</name><operator pos:start="71:37" pos:end="71:38">-&gt;</operator><name pos:start="71:39" pos:end="71:47">field_poc</name><index pos:start="71:48" pos:end="71:50">[<expr pos:start="71:49" pos:end="71:49"><literal type="number" pos:start="71:49" pos:end="71:49">0</literal></expr>]</index></name> <operator pos:start="71:52" pos:end="71:53">==</operator> <name pos:start="71:55" pos:end="71:61">INT_MAX</name> <operator pos:start="71:63" pos:end="71:64">||</operator>
                  <name pos:start="72:19" pos:end="72:50"><name pos:start="72:19" pos:end="72:19">h</name><operator pos:start="72:20" pos:end="72:21">-&gt;</operator><name pos:start="72:22" pos:end="72:36">next_output_pic</name><operator pos:start="72:37" pos:end="72:38">-&gt;</operator><name pos:start="72:39" pos:end="72:47">field_poc</name><index pos:start="72:48" pos:end="72:50">[<expr pos:start="72:49" pos:end="72:49"><literal type="number" pos:start="72:49" pos:end="72:49">1</literal></expr>]</index></name> <operator pos:start="72:52" pos:end="72:53">==</operator> <name pos:start="72:55" pos:end="72:61">INT_MAX</name><operator pos:start="72:62" pos:end="72:62">)</operator></expr>
            )</condition> <block pos:start="73:15" pos:end="100:51">{<block_content pos:start="74:17" pos:end="100:51">
                <decl_stmt pos:start="74:17" pos:end="74:22"><decl pos:start="74:17" pos:end="74:21"><type pos:start="74:17" pos:end="74:19"><name pos:start="74:17" pos:end="74:19">int</name></type> <name pos:start="74:21" pos:end="74:21">p</name></decl>;</decl_stmt>
                <decl_stmt pos:start="75:17" pos:end="75:51"><decl pos:start="75:17" pos:end="75:50"><type pos:start="75:17" pos:end="75:25"><name pos:start="75:17" pos:end="75:23">AVFrame</name> <modifier pos:start="75:25" pos:end="75:25">*</modifier></type><name pos:start="75:26" pos:end="75:26">f</name> <init pos:start="75:28" pos:end="75:50">= <expr pos:start="75:30" pos:end="75:50"><name pos:start="75:30" pos:end="75:50"><name pos:start="75:30" pos:end="75:30">h</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:47">next_output_pic</name><operator pos:start="75:48" pos:end="75:49">-&gt;</operator><name pos:start="75:50" pos:end="75:50">f</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="76:17" pos:end="76:72"><decl pos:start="76:17" pos:end="76:71"><type pos:start="76:17" pos:end="76:19"><name pos:start="76:17" pos:end="76:19">int</name></type> <name pos:start="76:21" pos:end="76:25">field</name> <init pos:start="76:27" pos:end="76:71">= <expr pos:start="76:29" pos:end="76:71"><name pos:start="76:29" pos:end="76:60"><name pos:start="76:29" pos:end="76:29">h</name><operator pos:start="76:30" pos:end="76:31">-&gt;</operator><name pos:start="76:32" pos:end="76:46">next_output_pic</name><operator pos:start="76:47" pos:end="76:48">-&gt;</operator><name pos:start="76:49" pos:end="76:57">field_poc</name><index pos:start="76:58" pos:end="76:60">[<expr pos:start="76:59" pos:end="76:59"><literal type="number" pos:start="76:59" pos:end="76:59">0</literal></expr>]</index></name> <operator pos:start="76:62" pos:end="76:63">==</operator> <name pos:start="76:65" pos:end="76:71">INT_MAX</name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="77:17" pos:end="77:37"><decl pos:start="77:17" pos:end="77:36"><type pos:start="77:17" pos:end="77:25"><name pos:start="77:17" pos:end="77:23">uint8_t</name> <modifier pos:start="77:25" pos:end="77:25">*</modifier></type><name pos:start="77:26" pos:end="77:36"><name pos:start="77:26" pos:end="77:33">dst_data</name><index pos:start="77:34" pos:end="77:36">[<expr pos:start="77:35" pos:end="77:35"><literal type="number" pos:start="77:35" pos:end="77:35">4</literal></expr>]</index></name></decl>;</decl_stmt>
                <decl_stmt pos:start="78:17" pos:end="78:33"><decl pos:start="78:17" pos:end="78:32"><type pos:start="78:17" pos:end="78:19"><name pos:start="78:17" pos:end="78:19">int</name></type> <name pos:start="78:21" pos:end="78:32"><name pos:start="78:21" pos:end="78:29">linesizes</name><index pos:start="78:30" pos:end="78:32">[<expr pos:start="78:31" pos:end="78:31"><literal type="number" pos:start="78:31" pos:end="78:31">4</literal></expr>]</index></name></decl>;</decl_stmt>
                <decl_stmt pos:start="79:17" pos:end="79:43"><decl pos:start="79:17" pos:end="79:42"><type pos:start="79:17" pos:end="79:31"><specifier pos:start="79:17" pos:end="79:21">const</specifier> <name pos:start="79:23" pos:end="79:29">uint8_t</name> <modifier pos:start="79:31" pos:end="79:31">*</modifier></type><name pos:start="79:32" pos:end="79:42"><name pos:start="79:32" pos:end="79:39">src_data</name><index pos:start="79:40" pos:end="79:42">[<expr pos:start="79:41" pos:end="79:41"><literal type="number" pos:start="79:41" pos:end="79:41">4</literal></expr>]</index></name></decl>;</decl_stmt>
                <expr_stmt pos:start="80:17" pos:end="80:96"><expr pos:start="80:17" pos:end="80:95"><call pos:start="80:17" pos:end="80:95"><name pos:start="80:17" pos:end="80:22">av_log</name><argument_list pos:start="80:23" pos:end="80:95">(<argument pos:start="80:24" pos:end="80:31"><expr pos:start="80:24" pos:end="80:31"><name pos:start="80:24" pos:end="80:31"><name pos:start="80:24" pos:end="80:24">h</name><operator pos:start="80:25" pos:end="80:26">-&gt;</operator><name pos:start="80:27" pos:end="80:31">avctx</name></name></expr></argument>, <argument pos:start="80:34" pos:end="80:45"><expr pos:start="80:34" pos:end="80:45"><name pos:start="80:34" pos:end="80:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="80:48" pos:end="80:87"><expr pos:start="80:48" pos:end="80:87"><literal type="string" pos:start="80:48" pos:end="80:87">"Duplicating field %d to fill missing\n"</literal></expr></argument>, <argument pos:start="80:90" pos:end="80:94"><expr pos:start="80:90" pos:end="80:94"><name pos:start="80:90" pos:end="80:94">field</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <for pos:start="81:17" pos:end="100:51">for <control pos:start="81:21" pos:end="81:37">(<init pos:start="81:22" pos:end="81:27"><expr pos:start="81:22" pos:end="81:26"><name pos:start="81:22" pos:end="81:22">p</name> <operator pos:start="81:24" pos:end="81:24">=</operator> <literal type="number" pos:start="81:26" pos:end="81:26">0</literal></expr>;</init> <condition pos:start="81:29" pos:end="81:32"><expr pos:start="81:29" pos:end="81:31"><name pos:start="81:29" pos:end="81:29">p</name><operator pos:start="81:30" pos:end="81:30">&lt;</operator><literal type="number" pos:start="81:31" pos:end="81:31">4</literal></expr>;</condition> <incr pos:start="81:34" pos:end="81:36"><expr pos:start="81:34" pos:end="81:36"><name pos:start="81:34" pos:end="81:34">p</name><operator pos:start="81:35" pos:end="81:36">++</operator></expr></incr>)</control> <block pos:start="81:39" pos:end="100:51">{<block_content pos:start="82:21" pos:end="100:51">
                    <expr_stmt pos:start="82:21" pos:end="82:72"><expr pos:start="82:21" pos:end="82:71"><name pos:start="82:21" pos:end="82:31"><name pos:start="82:21" pos:end="82:28">dst_data</name><index pos:start="82:29" pos:end="82:31">[<expr pos:start="82:30" pos:end="82:30"><name pos:start="82:30" pos:end="82:30">p</name></expr>]</index></name> <operator pos:start="82:33" pos:end="82:33">=</operator> <name pos:start="82:35" pos:end="82:44"><name pos:start="82:35" pos:end="82:35">f</name><operator pos:start="82:36" pos:end="82:37">-&gt;</operator><name pos:start="82:38" pos:end="82:41">data</name><index pos:start="82:42" pos:end="82:44">[<expr pos:start="82:43" pos:end="82:43"><name pos:start="82:43" pos:end="82:43">p</name></expr>]</index></name> <operator pos:start="82:46" pos:end="82:46">+</operator> <operator pos:start="82:48" pos:end="82:48">(</operator><name pos:start="82:49" pos:end="82:53">field</name><operator pos:start="82:54" pos:end="82:54">^</operator><literal type="number" pos:start="82:55" pos:end="82:55">1</literal><operator pos:start="82:56" pos:end="82:56">)</operator><operator pos:start="82:57" pos:end="82:57">*</operator><name pos:start="82:58" pos:end="82:71"><name pos:start="82:58" pos:end="82:58">f</name><operator pos:start="82:59" pos:end="82:60">-&gt;</operator><name pos:start="82:61" pos:end="82:68">linesize</name><index pos:start="82:69" pos:end="82:71">[<expr pos:start="82:70" pos:end="82:70"><name pos:start="82:70" pos:end="82:70">p</name></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="83:21" pos:end="83:72"><expr pos:start="83:21" pos:end="83:71"><name pos:start="83:21" pos:end="83:31"><name pos:start="83:21" pos:end="83:28">src_data</name><index pos:start="83:29" pos:end="83:31">[<expr pos:start="83:30" pos:end="83:30"><name pos:start="83:30" pos:end="83:30">p</name></expr>]</index></name> <operator pos:start="83:33" pos:end="83:33">=</operator> <name pos:start="83:35" pos:end="83:44"><name pos:start="83:35" pos:end="83:35">f</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:41">data</name><index pos:start="83:42" pos:end="83:44">[<expr pos:start="83:43" pos:end="83:43"><name pos:start="83:43" pos:end="83:43">p</name></expr>]</index></name> <operator pos:start="83:46" pos:end="83:46">+</operator>  <name pos:start="83:49" pos:end="83:53">field</name>   <operator pos:start="83:57" pos:end="83:57">*</operator><name pos:start="83:58" pos:end="83:71"><name pos:start="83:58" pos:end="83:58">f</name><operator pos:start="83:59" pos:end="83:60">-&gt;</operator><name pos:start="83:61" pos:end="83:68">linesize</name><index pos:start="83:69" pos:end="83:71">[<expr pos:start="83:70" pos:end="83:70"><name pos:start="83:70" pos:end="83:70">p</name></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="84:21" pos:end="84:52"><expr pos:start="84:21" pos:end="84:51"><name pos:start="84:21" pos:end="84:32"><name pos:start="84:21" pos:end="84:29">linesizes</name><index pos:start="84:30" pos:end="84:32">[<expr pos:start="84:31" pos:end="84:31"><name pos:start="84:31" pos:end="84:31">p</name></expr>]</index></name> <operator pos:start="84:34" pos:end="84:34">=</operator> <literal type="number" pos:start="84:36" pos:end="84:36">2</literal><operator pos:start="84:37" pos:end="84:37">*</operator><name pos:start="84:38" pos:end="84:51"><name pos:start="84:38" pos:end="84:38">f</name><operator pos:start="84:39" pos:end="84:40">-&gt;</operator><name pos:start="84:41" pos:end="84:48">linesize</name><index pos:start="84:49" pos:end="84:51">[<expr pos:start="84:50" pos:end="84:50"><name pos:start="84:50" pos:end="84:50">p</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="85:17" pos:end="86:65"><expr pos:start="85:17" pos:end="86:64"><call pos:start="85:17" pos:end="86:64"><name pos:start="85:17" pos:end="85:29">av_image_copy</name><argument_list pos:start="85:30" pos:end="86:64">(<argument pos:start="85:31" pos:end="85:38"><expr pos:start="85:31" pos:end="85:38"><name pos:start="85:31" pos:end="85:38">dst_data</name></expr></argument>, <argument pos:start="85:41" pos:end="85:49"><expr pos:start="85:41" pos:end="85:49"><name pos:start="85:41" pos:end="85:49">linesizes</name></expr></argument>, <argument pos:start="85:52" pos:end="85:59"><expr pos:start="85:52" pos:end="85:59"><name pos:start="85:52" pos:end="85:59">src_data</name></expr></argument>, <argument pos:start="85:62" pos:end="85:70"><expr pos:start="85:62" pos:end="85:70"><name pos:start="85:62" pos:end="85:70">linesizes</name></expr></argument>,
                              <argument pos:start="86:31" pos:end="86:39"><expr pos:start="86:31" pos:end="86:39"><name pos:start="86:31" pos:end="86:39"><name pos:start="86:31" pos:end="86:31">f</name><operator pos:start="86:32" pos:end="86:33">-&gt;</operator><name pos:start="86:34" pos:end="86:39">format</name></name></expr></argument>, <argument pos:start="86:42" pos:end="86:49"><expr pos:start="86:42" pos:end="86:49"><name pos:start="86:42" pos:end="86:49"><name pos:start="86:42" pos:end="86:42">f</name><operator pos:start="86:43" pos:end="86:44">-&gt;</operator><name pos:start="86:45" pos:end="86:49">width</name></name></expr></argument>, <argument pos:start="86:52" pos:end="86:63"><expr pos:start="86:52" pos:end="86:63"><name pos:start="86:52" pos:end="86:60"><name pos:start="86:52" pos:end="86:52">f</name><operator pos:start="86:53" pos:end="86:54">-&gt;</operator><name pos:start="86:55" pos:end="86:60">height</name></name><operator pos:start="86:61" pos:end="86:62">&gt;&gt;</operator><literal type="number" pos:start="86:63" pos:end="86:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="87:13" pos:end="87:60"><expr pos:start="87:13" pos:end="87:59"><name pos:start="87:13" pos:end="87:15">ret</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:59"><name pos:start="87:19" pos:end="87:30">output_frame</name><argument_list pos:start="87:31" pos:end="87:59">(<argument pos:start="87:32" pos:end="87:32"><expr pos:start="87:32" pos:end="87:32"><name pos:start="87:32" pos:end="87:32">h</name></expr></argument>, <argument pos:start="87:35" pos:end="87:38"><expr pos:start="87:35" pos:end="87:38"><name pos:start="87:35" pos:end="87:38">pict</name></expr></argument>, <argument pos:start="87:41" pos:end="87:58"><expr pos:start="87:41" pos:end="87:58"><name pos:start="87:41" pos:end="87:58"><name pos:start="87:41" pos:end="87:41">h</name><operator pos:start="87:42" pos:end="87:43">-&gt;</operator><name pos:start="87:44" pos:end="87:58">next_output_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="88:13" pos:end="89:27"><if pos:start="88:13" pos:end="89:27">if <condition pos:start="88:16" pos:end="88:24">(<expr pos:start="88:17" pos:end="88:23"><name pos:start="88:17" pos:end="88:19">ret</name> <operator pos:start="88:21" pos:end="88:21">&lt;</operator> <literal type="number" pos:start="88:23" pos:end="88:23">0</literal></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:27"><block_content pos:start="89:17" pos:end="89:27">
                <return pos:start="89:17" pos:end="89:27">return <expr pos:start="89:24" pos:end="89:26"><name pos:start="89:24" pos:end="89:26">ret</name></expr>;</return></block_content></block></if></if_stmt>
            <expr_stmt pos:start="90:13" pos:end="90:27"><expr pos:start="90:13" pos:end="90:26"><operator pos:start="90:13" pos:end="90:13">*</operator><name pos:start="90:14" pos:end="90:22">got_frame</name> <operator pos:start="90:24" pos:end="90:24">=</operator> <literal type="number" pos:start="90:26" pos:end="90:26">1</literal></expr>;</expr_stmt>
            <if_stmt pos:start="91:13" pos:end="100:51"><if pos:start="91:13" pos:end="100:51">if <condition pos:start="91:16" pos:end="91:33">(<expr pos:start="91:17" pos:end="91:32"><name pos:start="91:17" pos:end="91:32">CONFIG_MPEGVIDEO</name></expr>)</condition> <block pos:start="91:35" pos:end="100:51">{<block_content pos:start="92:17" pos:end="100:51">
                <expr_stmt pos:start="92:17" pos:end="97:80"><expr pos:start="92:17" pos:end="97:79"><call pos:start="92:17" pos:end="97:79"><name pos:start="92:17" pos:end="92:36">ff_print_debug_info2</name><argument_list pos:start="92:37" pos:end="97:79">(<argument pos:start="92:38" pos:end="92:45"><expr pos:start="92:38" pos:end="92:45"><name pos:start="92:38" pos:end="92:45"><name pos:start="92:38" pos:end="92:38">h</name><operator pos:start="92:39" pos:end="92:40">-&gt;</operator><name pos:start="92:41" pos:end="92:45">avctx</name></name></expr></argument>, <argument pos:start="92:48" pos:end="92:51"><expr pos:start="92:48" pos:end="92:51"><name pos:start="92:48" pos:end="92:51">pict</name></expr></argument>, <argument pos:start="92:54" pos:end="92:57"><expr pos:start="92:54" pos:end="92:57"><name pos:start="92:54" pos:end="92:57">NULL</name></expr></argument>,
                                    <argument pos:start="93:37" pos:end="93:63"><expr pos:start="93:37" pos:end="93:63"><name pos:start="93:37" pos:end="93:63"><name pos:start="93:37" pos:end="93:37">h</name><operator pos:start="93:38" pos:end="93:39">-&gt;</operator><name pos:start="93:40" pos:end="93:54">next_output_pic</name><operator pos:start="93:55" pos:end="93:56">-&gt;</operator><name pos:start="93:57" pos:end="93:63">mb_type</name></name></expr></argument>,
                                    <argument pos:start="94:37" pos:end="94:68"><expr pos:start="94:37" pos:end="94:68"><name pos:start="94:37" pos:end="94:68"><name pos:start="94:37" pos:end="94:37">h</name><operator pos:start="94:38" pos:end="94:39">-&gt;</operator><name pos:start="94:40" pos:end="94:54">next_output_pic</name><operator pos:start="94:55" pos:end="94:56">-&gt;</operator><name pos:start="94:57" pos:end="94:68">qscale_table</name></name></expr></argument>,
                                    <argument pos:start="95:37" pos:end="95:66"><expr pos:start="95:37" pos:end="95:66"><name pos:start="95:37" pos:end="95:66"><name pos:start="95:37" pos:end="95:37">h</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:54">next_output_pic</name><operator pos:start="95:55" pos:end="95:56">-&gt;</operator><name pos:start="95:57" pos:end="95:66">motion_val</name></name></expr></argument>,
                                    <argument pos:start="96:37" pos:end="96:49"><expr pos:start="96:37" pos:end="96:49"><operator pos:start="96:37" pos:end="96:37">&amp;</operator><name pos:start="96:38" pos:end="96:49"><name pos:start="96:38" pos:end="96:38">h</name><operator pos:start="96:39" pos:end="96:40">-&gt;</operator><name pos:start="96:41" pos:end="96:49">low_delay</name></name></expr></argument>,
                                    <argument pos:start="97:37" pos:end="97:47"><expr pos:start="97:37" pos:end="97:47"><name pos:start="97:37" pos:end="97:47"><name pos:start="97:37" pos:end="97:37">h</name><operator pos:start="97:38" pos:end="97:39">-&gt;</operator><name pos:start="97:40" pos:end="97:47">mb_width</name></name></expr></argument>, <argument pos:start="97:50" pos:end="97:61"><expr pos:start="97:50" pos:end="97:61"><name pos:start="97:50" pos:end="97:61"><name pos:start="97:50" pos:end="97:50">h</name><operator pos:start="97:51" pos:end="97:52">-&gt;</operator><name pos:start="97:53" pos:end="97:61">mb_height</name></name></expr></argument>, <argument pos:start="97:64" pos:end="97:75"><expr pos:start="97:64" pos:end="97:75"><name pos:start="97:64" pos:end="97:75"><name pos:start="97:64" pos:end="97:64">h</name><operator pos:start="97:65" pos:end="97:66">-&gt;</operator><name pos:start="97:67" pos:end="97:75">mb_stride</name></name></expr></argument>, <argument pos:start="97:78" pos:end="97:78"><expr pos:start="97:78" pos:end="97:78"><literal type="number" pos:start="97:78" pos:end="97:78">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="98:5" pos:end="98:44"><expr pos:start="98:5" pos:end="98:43"><call pos:start="98:5" pos:end="98:43"><name pos:start="98:5" pos:end="98:14">av_assert0</name><argument_list pos:start="98:15" pos:end="98:43">(<argument pos:start="98:16" pos:end="98:42"><expr pos:start="98:16" pos:end="98:42"><name pos:start="98:16" pos:end="98:27"><name pos:start="98:16" pos:end="98:19">pict</name><operator pos:start="98:20" pos:end="98:21">-&gt;</operator><name pos:start="98:22" pos:end="98:24">buf</name><index pos:start="98:25" pos:end="98:27">[<expr pos:start="98:26" pos:end="98:26"><literal type="number" pos:start="98:26" pos:end="98:26">0</literal></expr>]</index></name> <operator pos:start="98:29" pos:end="98:30">||</operator> <operator pos:start="98:32" pos:end="98:32">!</operator><operator pos:start="98:33" pos:end="98:33">*</operator><name pos:start="98:34" pos:end="98:42">got_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="99:5" pos:end="99:50"><expr pos:start="99:5" pos:end="99:49"><call pos:start="99:5" pos:end="99:49"><name pos:start="99:5" pos:end="99:25">ff_h264_unref_picture</name><argument_list pos:start="99:26" pos:end="99:49">(<argument pos:start="99:27" pos:end="99:27"><expr pos:start="99:27" pos:end="99:27"><name pos:start="99:27" pos:end="99:27">h</name></expr></argument>, <argument pos:start="99:30" pos:end="99:48"><expr pos:start="99:30" pos:end="99:48"><operator pos:start="99:30" pos:end="99:30">&amp;</operator><name pos:start="99:31" pos:end="99:48"><name pos:start="99:31" pos:end="99:31">h</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:48">last_pic_for_ec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="100:5" pos:end="100:51">return <expr pos:start="100:12" pos:end="100:50"><call pos:start="100:12" pos:end="100:50"><name pos:start="100:12" pos:end="100:29">get_consumed_bytes</name><argument_list pos:start="100:30" pos:end="100:50">(<argument pos:start="100:31" pos:end="100:39"><expr pos:start="100:31" pos:end="100:39"><name pos:start="100:31" pos:end="100:39">buf_index</name></expr></argument>, <argument pos:start="100:42" pos:end="100:49"><expr pos:start="100:42" pos:end="100:49"><name pos:start="100:42" pos:end="100:49">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></unit>
