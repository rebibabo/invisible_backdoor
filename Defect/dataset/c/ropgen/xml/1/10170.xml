<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10170.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">get_refcount</name><parameter_list pos:start="1:24" pos:end="1:68">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:40">BlockDriverState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">bs</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:53">int64_t</name></type> <name pos:start="1:55" pos:end="1:67">cluster_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:20">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:28">refcount_table_index</name></decl>, <decl pos:start="7:31" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:31" pos:end="7:41">block_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:33">refcount_block_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint16_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:28">refcount_block</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint16_t</name></type> <name pos:start="15:14" pos:end="15:21">refcount</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:79"><expr pos:start="19:5" pos:end="19:78"><name pos:start="19:5" pos:end="19:24">refcount_table_index</name> <operator pos:start="19:26" pos:end="19:26">=</operator> <name pos:start="19:28" pos:end="19:40">cluster_index</name> <operator pos:start="19:42" pos:end="19:43">&gt;&gt;</operator> <operator pos:start="19:45" pos:end="19:45">(</operator><name pos:start="19:46" pos:end="19:60"><name pos:start="19:46" pos:end="19:46">s</name><operator pos:start="19:47" pos:end="19:48">-&gt;</operator><name pos:start="19:49" pos:end="19:60">cluster_bits</name></name> <operator pos:start="19:62" pos:end="19:62">-</operator> <name pos:start="19:64" pos:end="19:77">REFCOUNT_SHIFT</name><operator pos:start="19:78" pos:end="19:78">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:55">(<expr pos:start="21:9" pos:end="21:54"><name pos:start="21:9" pos:end="21:28">refcount_table_index</name> <operator pos:start="21:30" pos:end="21:31">&gt;=</operator> <name pos:start="21:33" pos:end="21:54"><name pos:start="21:33" pos:end="21:33">s</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:54">refcount_table_size</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:67"><expr pos:start="25:5" pos:end="27:66"><name pos:start="25:5" pos:end="25:25">refcount_block_offset</name> <operator pos:start="25:27" pos:end="25:27">=</operator>

        <name pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:25">refcount_table</name><index pos:start="27:26" pos:end="27:47">[<expr pos:start="27:27" pos:end="27:46"><name pos:start="27:27" pos:end="27:46">refcount_table_index</name></expr>]</index></name> <operator pos:start="27:49" pos:end="27:49">&amp;</operator> <name pos:start="27:51" pos:end="27:66">REFT_OFFSET_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:17"><if pos:start="29:5" pos:end="31:17">if <condition pos:start="29:8" pos:end="29:31">(<expr pos:start="29:9" pos:end="29:30"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:30">refcount_block_offset</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:17"><block_content pos:start="31:9" pos:end="31:17">

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="37:34"><expr pos:start="35:5" pos:end="37:33"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="37:33"><name pos:start="35:11" pos:end="35:25">qcow2_cache_get</name><argument_list pos:start="35:26" pos:end="37:33">(<argument pos:start="35:27" pos:end="35:28"><expr pos:start="35:27" pos:end="35:28"><name pos:start="35:27" pos:end="35:28">bs</name></expr></argument>, <argument pos:start="35:31" pos:end="35:53"><expr pos:start="35:31" pos:end="35:53"><name pos:start="35:31" pos:end="35:53"><name pos:start="35:31" pos:end="35:31">s</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:53">refcount_block_cache</name></name></expr></argument>, <argument pos:start="35:56" pos:end="35:76"><expr pos:start="35:56" pos:end="35:76"><name pos:start="35:56" pos:end="35:76">refcount_block_offset</name></expr></argument>,

        <argument pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:32"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:13">void</name><operator pos:start="37:14" pos:end="37:14">*</operator><operator pos:start="37:15" pos:end="37:15">*</operator><operator pos:start="37:16" pos:end="37:16">)</operator> <operator pos:start="37:18" pos:end="37:18">&amp;</operator><name pos:start="37:19" pos:end="37:32">refcount_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">&lt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition> <block pos:start="39:18" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:19">

        <return pos:start="41:9" pos:end="41:19">return <expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="49:56"><expr pos:start="47:5" pos:end="49:55"><name pos:start="47:5" pos:end="47:15">block_index</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:31">cluster_index</name> <operator pos:start="47:33" pos:end="47:33">&amp;</operator>

        <operator pos:start="49:9" pos:end="49:9">(</operator><operator pos:start="49:10" pos:end="49:10">(</operator><literal type="number" pos:start="49:11" pos:end="49:11">1</literal> <operator pos:start="49:13" pos:end="49:14">&lt;&lt;</operator> <operator pos:start="49:16" pos:end="49:16">(</operator><name pos:start="49:17" pos:end="49:31"><name pos:start="49:17" pos:end="49:17">s</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:31">cluster_bits</name></name> <operator pos:start="49:33" pos:end="49:33">-</operator> <name pos:start="49:35" pos:end="49:48">REFCOUNT_SHIFT</name><operator pos:start="49:49" pos:end="49:49">)</operator><operator pos:start="49:50" pos:end="49:50">)</operator> <operator pos:start="49:52" pos:end="49:52">-</operator> <literal type="number" pos:start="49:54" pos:end="49:54">1</literal><operator pos:start="49:55" pos:end="49:55">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:56"><expr pos:start="51:5" pos:end="51:55"><name pos:start="51:5" pos:end="51:12">refcount</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <call pos:start="51:16" pos:end="51:55"><name pos:start="51:16" pos:end="51:26">be16_to_cpu</name><argument_list pos:start="51:27" pos:end="51:55">(<argument pos:start="51:28" pos:end="51:54"><expr pos:start="51:28" pos:end="51:54"><name pos:start="51:28" pos:end="51:54"><name pos:start="51:28" pos:end="51:41">refcount_block</name><index pos:start="51:42" pos:end="51:54">[<expr pos:start="51:43" pos:end="51:53"><name pos:start="51:43" pos:end="51:53">block_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="57:34"><expr pos:start="55:5" pos:end="57:33"><name pos:start="55:5" pos:end="55:7">ret</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="57:33"><name pos:start="55:11" pos:end="55:25">qcow2_cache_put</name><argument_list pos:start="55:26" pos:end="57:33">(<argument pos:start="55:27" pos:end="55:28"><expr pos:start="55:27" pos:end="55:28"><name pos:start="55:27" pos:end="55:28">bs</name></expr></argument>, <argument pos:start="55:31" pos:end="55:53"><expr pos:start="55:31" pos:end="55:53"><name pos:start="55:31" pos:end="55:53"><name pos:start="55:31" pos:end="55:31">s</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:53">refcount_block_cache</name></name></expr></argument>,

        <argument pos:start="57:9" pos:end="57:32"><expr pos:start="57:9" pos:end="57:32"><operator pos:start="57:9" pos:end="57:9">(</operator><name pos:start="57:10" pos:end="57:13">void</name><operator pos:start="57:14" pos:end="57:14">*</operator><operator pos:start="57:15" pos:end="57:15">*</operator><operator pos:start="57:16" pos:end="57:16">)</operator> <operator pos:start="57:18" pos:end="57:18">&amp;</operator><name pos:start="57:19" pos:end="57:32">refcount_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:16">(<expr pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">&lt;</operator> <literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>)</condition> <block pos:start="59:18" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:19">

        <return pos:start="61:9" pos:end="61:19">return <expr pos:start="61:16" pos:end="61:18"><name pos:start="61:16" pos:end="61:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="67:5" pos:end="67:20">return <expr pos:start="67:12" pos:end="67:19"><name pos:start="67:12" pos:end="67:19">refcount</name></expr>;</return>

</block_content>}</block></function>
</unit>
