<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11391.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">caca_write_header</name><parameter_list pos:start="1:29" pos:end="1:48">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="193:1">{<block_content pos:start="5:5" pos:end="191:15">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">CACAContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">c</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:32">= <expr pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:20">s</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:29">streams</name><index pos:start="7:30" pos:end="7:32">[<expr pos:start="7:31" pos:end="7:31"><literal type="number" pos:start="7:31" pos:end="7:31">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:26">encctx</name> <init pos:start="9:28" pos:end="9:38">= <expr pos:start="9:30" pos:end="9:38"><name pos:start="9:30" pos:end="9:38"><name pos:start="9:30" pos:end="9:31">st</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:38">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:16">bpp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:15"><expr pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:5">c</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:10">ctx</name></name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:14">s</name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:24">(<expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:23">list_drivers</name></name></expr>)</condition> <block pos:start="17:26" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:28">

        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><call pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:20">list_drivers</name><argument_list pos:start="19:21" pos:end="19:23">(<argument pos:start="19:22" pos:end="19:22"><expr pos:start="19:22" pos:end="19:22"><name pos:start="19:22" pos:end="19:22">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:28">return <expr pos:start="21:16" pos:end="21:27"><name pos:start="21:16" pos:end="21:27">AVERROR_EXIT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="59:5"><if pos:start="25:5" pos:end="59:5">if <condition pos:start="25:8" pos:end="25:23">(<expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:9">c</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:22">list_dither</name></name></expr>)</condition> <block pos:start="25:25" pos:end="59:5">{<block_content pos:start="27:9" pos:end="57:28">

        <if_stmt pos:start="27:9" pos:end="55:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:46">(<expr pos:start="27:13" pos:end="27:45"><operator pos:start="27:13" pos:end="27:13">!</operator><call pos:start="27:14" pos:end="27:45"><name pos:start="27:14" pos:end="27:19">strcmp</name><argument_list pos:start="27:20" pos:end="27:45">(<argument pos:start="27:21" pos:end="27:34"><expr pos:start="27:21" pos:end="27:34"><name pos:start="27:21" pos:end="27:34"><name pos:start="27:21" pos:end="27:21">c</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:34">list_dither</name></name></expr></argument>, <argument pos:start="27:37" pos:end="27:44"><expr pos:start="27:37" pos:end="27:44"><literal type="string" pos:start="27:37" pos:end="27:44">"colors"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:48" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:33">

            <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><call pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:29">list_dither_color</name><argument_list pos:start="29:30" pos:end="29:32">(<argument pos:start="29:31" pos:end="29:31"><expr pos:start="29:31" pos:end="29:31"><name pos:start="29:31" pos:end="29:31">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="31:11" pos:end="35:9">else if <condition pos:start="31:19" pos:end="31:55">(<expr pos:start="31:20" pos:end="31:54"><operator pos:start="31:20" pos:end="31:20">!</operator><call pos:start="31:21" pos:end="31:54"><name pos:start="31:21" pos:end="31:26">strcmp</name><argument_list pos:start="31:27" pos:end="31:54">(<argument pos:start="31:28" pos:end="31:41"><expr pos:start="31:28" pos:end="31:41"><name pos:start="31:28" pos:end="31:41"><name pos:start="31:28" pos:end="31:28">c</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:41">list_dither</name></name></expr></argument>, <argument pos:start="31:44" pos:end="31:53"><expr pos:start="31:44" pos:end="31:53"><literal type="string" pos:start="31:44" pos:end="31:53">"charsets"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:57" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:35">

            <expr_stmt pos:start="33:13" pos:end="33:35"><expr pos:start="33:13" pos:end="33:34"><call pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:31">list_dither_charset</name><argument_list pos:start="33:32" pos:end="33:34">(<argument pos:start="33:33" pos:end="33:33"><expr pos:start="33:33" pos:end="33:33"><name pos:start="33:33" pos:end="33:33">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="35:11" pos:end="39:9">else if <condition pos:start="35:19" pos:end="35:57">(<expr pos:start="35:20" pos:end="35:56"><operator pos:start="35:20" pos:end="35:20">!</operator><call pos:start="35:21" pos:end="35:56"><name pos:start="35:21" pos:end="35:26">strcmp</name><argument_list pos:start="35:27" pos:end="35:56">(<argument pos:start="35:28" pos:end="35:41"><expr pos:start="35:28" pos:end="35:41"><name pos:start="35:28" pos:end="35:41"><name pos:start="35:28" pos:end="35:28">c</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:41">list_dither</name></name></expr></argument>, <argument pos:start="35:44" pos:end="35:55"><expr pos:start="35:44" pos:end="35:55"><literal type="string" pos:start="35:44" pos:end="35:55">"algorithms"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:59" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:37">

            <expr_stmt pos:start="37:13" pos:end="37:37"><expr pos:start="37:13" pos:end="37:36"><call pos:start="37:13" pos:end="37:36"><name pos:start="37:13" pos:end="37:33">list_dither_algorithm</name><argument_list pos:start="37:34" pos:end="37:36">(<argument pos:start="37:35" pos:end="37:35"><expr pos:start="37:35" pos:end="37:35"><name pos:start="37:35" pos:end="37:35">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="39:11" pos:end="43:9">else if <condition pos:start="39:19" pos:end="39:58">(<expr pos:start="39:20" pos:end="39:57"><operator pos:start="39:20" pos:end="39:20">!</operator><call pos:start="39:21" pos:end="39:57"><name pos:start="39:21" pos:end="39:26">strcmp</name><argument_list pos:start="39:27" pos:end="39:57">(<argument pos:start="39:28" pos:end="39:41"><expr pos:start="39:28" pos:end="39:41"><name pos:start="39:28" pos:end="39:41"><name pos:start="39:28" pos:end="39:28">c</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:41">list_dither</name></name></expr></argument>, <argument pos:start="39:44" pos:end="39:56"><expr pos:start="39:44" pos:end="39:56"><literal type="string" pos:start="39:44" pos:end="39:56">"antialiases"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:60" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:37">

            <expr_stmt pos:start="41:13" pos:end="41:37"><expr pos:start="41:13" pos:end="41:36"><call pos:start="41:13" pos:end="41:36"><name pos:start="41:13" pos:end="41:33">list_dither_antialias</name><argument_list pos:start="41:34" pos:end="41:36">(<argument pos:start="41:35" pos:end="41:35"><expr pos:start="41:35" pos:end="41:35"><name pos:start="41:35" pos:end="41:35">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="55:9">else <block pos:start="43:16" pos:end="55:9">{<block_content pos:start="45:13" pos:end="53:35">

            <expr_stmt pos:start="45:13" pos:end="51:35"><expr pos:start="45:13" pos:end="51:34"><call pos:start="45:13" pos:end="51:34"><name pos:start="45:13" pos:end="45:18">av_log</name><argument_list pos:start="45:19" pos:end="51:34">(<argument pos:start="45:20" pos:end="45:20"><expr pos:start="45:20" pos:end="45:20"><name pos:start="45:20" pos:end="45:20">s</name></expr></argument>, <argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="47:20" pos:end="49:95"><expr pos:start="47:20" pos:end="49:95"><literal type="string" pos:start="47:20" pos:end="47:70">"Invalid argument '%s', for 'list_dither' option\n"</literal>

                   <literal type="string" pos:start="49:20" pos:end="49:95">"Argument must be one of 'algorithms, 'antialiases', 'charsets', 'colors'\n"</literal></expr></argument>,

                   <argument pos:start="51:20" pos:end="51:33"><expr pos:start="51:20" pos:end="51:33"><name pos:start="51:20" pos:end="51:33"><name pos:start="51:20" pos:end="51:20">c</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:33">list_dither</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:35">return <expr pos:start="53:20" pos:end="53:34"><call pos:start="53:20" pos:end="53:34"><name pos:start="53:20" pos:end="53:26">AVERROR</name><argument_list pos:start="53:27" pos:end="53:34">(<argument pos:start="53:28" pos:end="53:33"><expr pos:start="53:28" pos:end="53:33"><name pos:start="53:28" pos:end="53:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></else></if_stmt>

        <return pos:start="57:9" pos:end="57:28">return <expr pos:start="57:16" pos:end="57:27"><name pos:start="57:16" pos:end="57:27">AVERROR_EXIT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="73:5"><if pos:start="63:5" pos:end="73:5">if <condition pos:start="63:8" pos:end="67:51">(   <expr pos:start="63:12" pos:end="67:50"><name pos:start="63:12" pos:end="63:24"><name pos:start="63:12" pos:end="63:12">s</name><operator pos:start="63:13" pos:end="63:14">-&gt;</operator><name pos:start="63:15" pos:end="63:24">nb_streams</name></name> <operator pos:start="63:26" pos:end="63:26">&gt;</operator> <literal type="number" pos:start="63:28" pos:end="63:28">1</literal>

        <operator pos:start="65:9" pos:end="65:10">||</operator> <name pos:start="65:12" pos:end="65:29"><name pos:start="65:12" pos:end="65:17">encctx</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:29">codec_type</name></name> <operator pos:start="65:31" pos:end="65:32">!=</operator> <name pos:start="65:34" pos:end="65:51">AVMEDIA_TYPE_VIDEO</name>

        <operator pos:start="67:9" pos:end="67:10">||</operator> <name pos:start="67:12" pos:end="67:27"><name pos:start="67:12" pos:end="67:17">encctx</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:27">codec_id</name></name>   <operator pos:start="67:31" pos:end="67:32">!=</operator> <name pos:start="67:34" pos:end="67:50">CODEC_ID_RAWVIDEO</name></expr>)</condition> <block pos:start="67:53" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:31">

        <expr_stmt pos:start="69:9" pos:end="69:71"><expr pos:start="69:9" pos:end="69:70"><call pos:start="69:9" pos:end="69:70"><name pos:start="69:9" pos:end="69:14">av_log</name><argument_list pos:start="69:15" pos:end="69:70">(<argument pos:start="69:16" pos:end="69:16"><expr pos:start="69:16" pos:end="69:16"><name pos:start="69:16" pos:end="69:16">s</name></expr></argument>, <argument pos:start="69:19" pos:end="69:30"><expr pos:start="69:19" pos:end="69:30"><name pos:start="69:19" pos:end="69:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:33" pos:end="69:69"><expr pos:start="69:33" pos:end="69:69"><literal type="string" pos:start="69:33" pos:end="69:69">"Only supports one rawvideo stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:31">return <expr pos:start="71:16" pos:end="71:30"><call pos:start="71:16" pos:end="71:30"><name pos:start="71:16" pos:end="71:22">AVERROR</name><argument_list pos:start="71:23" pos:end="71:30">(<argument pos:start="71:24" pos:end="71:29"><expr pos:start="71:24" pos:end="71:29"><name pos:start="71:24" pos:end="71:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="87:5"><if pos:start="77:5" pos:end="87:5">if <condition pos:start="77:8" pos:end="77:41">(<expr pos:start="77:9" pos:end="77:40"><name pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:14">encctx</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:23">pix_fmt</name></name> <operator pos:start="77:25" pos:end="77:26">!=</operator> <name pos:start="77:28" pos:end="77:40">PIX_FMT_RGB24</name></expr>)</condition> <block pos:start="77:43" pos:end="87:5">{<block_content pos:start="79:9" pos:end="85:31">

        <expr_stmt pos:start="79:9" pos:end="83:53"><expr pos:start="79:9" pos:end="83:52"><call pos:start="79:9" pos:end="83:52"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="83:52">(<argument pos:start="79:16" pos:end="79:16"><expr pos:start="79:16" pos:end="79:16"><name pos:start="79:16" pos:end="79:16">s</name></expr></argument>, <argument pos:start="79:19" pos:end="79:30"><expr pos:start="79:19" pos:end="79:30"><name pos:start="79:19" pos:end="79:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="81:16" pos:end="81:62"><expr pos:start="81:16" pos:end="81:62"><literal type="string" pos:start="81:16" pos:end="81:62">"Unsupported pixel format '%s', choose rgb24\n"</literal></expr></argument>,

               <argument pos:start="83:16" pos:end="83:51"><expr pos:start="83:16" pos:end="83:51"><call pos:start="83:16" pos:end="83:51"><name pos:start="83:16" pos:end="83:34">av_get_pix_fmt_name</name><argument_list pos:start="83:35" pos:end="83:51">(<argument pos:start="83:36" pos:end="83:50"><expr pos:start="83:36" pos:end="83:50"><name pos:start="83:36" pos:end="83:50"><name pos:start="83:36" pos:end="83:41">encctx</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:50">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:31">return <expr pos:start="85:16" pos:end="85:30"><call pos:start="85:16" pos:end="85:30"><name pos:start="85:16" pos:end="85:22">AVERROR</name><argument_list pos:start="85:23" pos:end="85:30">(<argument pos:start="85:24" pos:end="85:29"><expr pos:start="85:24" pos:end="85:29"><name pos:start="85:24" pos:end="85:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:70"><expr pos:start="91:5" pos:end="91:69"><name pos:start="91:5" pos:end="91:13"><name pos:start="91:5" pos:end="91:5">c</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:13">canvas</name></name> <operator pos:start="91:15" pos:end="91:15">=</operator> <call pos:start="91:17" pos:end="91:69"><name pos:start="91:17" pos:end="91:34">caca_create_canvas</name><argument_list pos:start="91:35" pos:end="91:69">(<argument pos:start="91:36" pos:end="91:50"><expr pos:start="91:36" pos:end="91:50"><name pos:start="91:36" pos:end="91:50"><name pos:start="91:36" pos:end="91:36">c</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:50">window_width</name></name></expr></argument>, <argument pos:start="91:53" pos:end="91:68"><expr pos:start="91:53" pos:end="91:68"><name pos:start="91:53" pos:end="91:68"><name pos:start="91:53" pos:end="91:53">c</name><operator pos:start="91:54" pos:end="91:55">-&gt;</operator><name pos:start="91:56" pos:end="91:68">window_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:19">(<expr pos:start="93:9" pos:end="93:18"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:18"><name pos:start="93:10" pos:end="93:10">c</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:18">canvas</name></name></expr>)</condition> <block pos:start="93:21" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:30">

        <expr_stmt pos:start="95:9" pos:end="95:61"><expr pos:start="95:9" pos:end="95:60"><call pos:start="95:9" pos:end="95:60"><name pos:start="95:9" pos:end="95:14">av_log</name><argument_list pos:start="95:15" pos:end="95:60">(<argument pos:start="95:16" pos:end="95:16"><expr pos:start="95:16" pos:end="95:16"><name pos:start="95:16" pos:end="95:16">s</name></expr></argument>, <argument pos:start="95:19" pos:end="95:30"><expr pos:start="95:19" pos:end="95:30"><name pos:start="95:19" pos:end="95:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:33" pos:end="95:59"><expr pos:start="95:33" pos:end="95:59"><literal type="string" pos:start="95:33" pos:end="95:59">"Failed to create canvas\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="97:9" pos:end="97:30">return <expr pos:start="97:16" pos:end="97:29"><call pos:start="97:16" pos:end="97:29"><name pos:start="97:16" pos:end="97:22">AVERROR</name><argument_list pos:start="97:23" pos:end="97:29">(<argument pos:start="97:24" pos:end="97:28"><expr pos:start="97:24" pos:end="97:28"><name pos:start="97:24" pos:end="97:28">errno</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:71"><expr pos:start="103:5" pos:end="103:70"><name pos:start="103:5" pos:end="103:14"><name pos:start="103:5" pos:end="103:5">c</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:14">display</name></name> <operator pos:start="103:16" pos:end="103:16">=</operator> <call pos:start="103:18" pos:end="103:70"><name pos:start="103:18" pos:end="103:48">caca_create_display_with_driver</name><argument_list pos:start="103:49" pos:end="103:70">(<argument pos:start="103:50" pos:end="103:58"><expr pos:start="103:50" pos:end="103:58"><name pos:start="103:50" pos:end="103:58"><name pos:start="103:50" pos:end="103:50">c</name><operator pos:start="103:51" pos:end="103:52">-&gt;</operator><name pos:start="103:53" pos:end="103:58">canvas</name></name></expr></argument>, <argument pos:start="103:61" pos:end="103:69"><expr pos:start="103:61" pos:end="103:69"><name pos:start="103:61" pos:end="103:69"><name pos:start="103:61" pos:end="103:61">c</name><operator pos:start="103:62" pos:end="103:63">-&gt;</operator><name pos:start="103:64" pos:end="103:69">driver</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="115:5"><if pos:start="105:5" pos:end="115:5">if <condition pos:start="105:8" pos:end="105:20">(<expr pos:start="105:9" pos:end="105:19"><operator pos:start="105:9" pos:end="105:9">!</operator><name pos:start="105:10" pos:end="105:19"><name pos:start="105:10" pos:end="105:10">c</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:19">display</name></name></expr>)</condition> <block pos:start="105:22" pos:end="115:5">{<block_content pos:start="107:9" pos:end="113:30">

        <expr_stmt pos:start="107:9" pos:end="107:62"><expr pos:start="107:9" pos:end="107:61"><call pos:start="107:9" pos:end="107:61"><name pos:start="107:9" pos:end="107:14">av_log</name><argument_list pos:start="107:15" pos:end="107:61">(<argument pos:start="107:16" pos:end="107:16"><expr pos:start="107:16" pos:end="107:16"><name pos:start="107:16" pos:end="107:16">s</name></expr></argument>, <argument pos:start="107:19" pos:end="107:30"><expr pos:start="107:19" pos:end="107:30"><name pos:start="107:19" pos:end="107:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:33" pos:end="107:60"><expr pos:start="107:33" pos:end="107:60"><literal type="string" pos:start="107:33" pos:end="107:60">"Failed to create display\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:24"><expr pos:start="109:9" pos:end="109:23"><call pos:start="109:9" pos:end="109:23"><name pos:start="109:9" pos:end="109:20">list_drivers</name><argument_list pos:start="109:21" pos:end="109:23">(<argument pos:start="109:22" pos:end="109:22"><expr pos:start="109:22" pos:end="109:22"><name pos:start="109:22" pos:end="109:22">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:36"><expr pos:start="111:9" pos:end="111:35"><call pos:start="111:9" pos:end="111:35"><name pos:start="111:9" pos:end="111:24">caca_free_canvas</name><argument_list pos:start="111:25" pos:end="111:35">(<argument pos:start="111:26" pos:end="111:34"><expr pos:start="111:26" pos:end="111:34"><name pos:start="111:26" pos:end="111:34"><name pos:start="111:26" pos:end="111:26">c</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:34">canvas</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="113:9" pos:end="113:30">return <expr pos:start="113:16" pos:end="113:29"><call pos:start="113:16" pos:end="113:29"><name pos:start="113:16" pos:end="113:22">AVERROR</name><argument_list pos:start="113:23" pos:end="113:29">(<argument pos:start="113:24" pos:end="113:28"><expr pos:start="113:24" pos:end="113:28"><name pos:start="113:24" pos:end="113:28">errno</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="119:5" pos:end="125:5"><if pos:start="119:5" pos:end="125:5">if <condition pos:start="119:8" pos:end="119:46">(<expr pos:start="119:9" pos:end="119:45"><operator pos:start="119:9" pos:end="119:9">!</operator><name pos:start="119:10" pos:end="119:24"><name pos:start="119:10" pos:end="119:10">c</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:24">window_width</name></name> <operator pos:start="119:26" pos:end="119:27">||</operator> <operator pos:start="119:29" pos:end="119:29">!</operator><name pos:start="119:30" pos:end="119:45"><name pos:start="119:30" pos:end="119:30">c</name><operator pos:start="119:31" pos:end="119:32">-&gt;</operator><name pos:start="119:33" pos:end="119:45">window_height</name></name></expr>)</condition> <block pos:start="119:48" pos:end="125:5">{<block_content pos:start="121:9" pos:end="123:61">

        <expr_stmt pos:start="121:9" pos:end="121:60"><expr pos:start="121:9" pos:end="121:59"><name pos:start="121:9" pos:end="121:23"><name pos:start="121:9" pos:end="121:9">c</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:23">window_width</name></name>  <operator pos:start="121:26" pos:end="121:26">=</operator> <call pos:start="121:28" pos:end="121:59"><name pos:start="121:28" pos:end="121:48">caca_get_canvas_width</name><argument_list pos:start="121:49" pos:end="121:59">(<argument pos:start="121:50" pos:end="121:58"><expr pos:start="121:50" pos:end="121:58"><name pos:start="121:50" pos:end="121:58"><name pos:start="121:50" pos:end="121:50">c</name><operator pos:start="121:51" pos:end="121:52">-&gt;</operator><name pos:start="121:53" pos:end="121:58">canvas</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:61"><expr pos:start="123:9" pos:end="123:60"><name pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:9">c</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:24">window_height</name></name> <operator pos:start="123:26" pos:end="123:26">=</operator> <call pos:start="123:28" pos:end="123:60"><name pos:start="123:28" pos:end="123:49">caca_get_canvas_height</name><argument_list pos:start="123:50" pos:end="123:60">(<argument pos:start="123:51" pos:end="123:59"><expr pos:start="123:51" pos:end="123:59"><name pos:start="123:51" pos:end="123:59"><name pos:start="123:51" pos:end="123:51">c</name><operator pos:start="123:52" pos:end="123:53">-&gt;</operator><name pos:start="123:54" pos:end="123:59">canvas</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:74"><expr pos:start="129:5" pos:end="129:73"><name pos:start="129:5" pos:end="129:7">bpp</name> <operator pos:start="129:9" pos:end="129:9">=</operator> <call pos:start="129:11" pos:end="129:73"><name pos:start="129:11" pos:end="129:31">av_get_bits_per_pixel</name><argument_list pos:start="129:32" pos:end="129:73">(<argument pos:start="129:33" pos:end="129:72"><expr pos:start="129:33" pos:end="129:72"><operator pos:start="129:33" pos:end="129:33">&amp;</operator><name pos:start="129:34" pos:end="129:72"><name pos:start="129:34" pos:end="129:55">av_pix_fmt_descriptors</name><index pos:start="129:56" pos:end="129:72">[<expr pos:start="129:57" pos:end="129:71"><name pos:start="129:57" pos:end="129:71"><name pos:start="129:57" pos:end="129:62">encctx</name><operator pos:start="129:63" pos:end="129:64">-&gt;</operator><name pos:start="129:65" pos:end="129:71">pix_fmt</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="135:68"><expr pos:start="131:5" pos:end="135:67"><name pos:start="131:5" pos:end="131:13"><name pos:start="131:5" pos:end="131:5">c</name><operator pos:start="131:6" pos:end="131:7">-&gt;</operator><name pos:start="131:8" pos:end="131:13">dither</name></name> <operator pos:start="131:15" pos:end="131:15">=</operator> <call pos:start="131:17" pos:end="135:67"><name pos:start="131:17" pos:end="131:34">caca_create_dither</name><argument_list pos:start="131:35" pos:end="135:67">(<argument pos:start="131:36" pos:end="131:38"><expr pos:start="131:36" pos:end="131:38"><name pos:start="131:36" pos:end="131:38">bpp</name></expr></argument>, <argument pos:start="131:41" pos:end="131:53"><expr pos:start="131:41" pos:end="131:53"><name pos:start="131:41" pos:end="131:53"><name pos:start="131:41" pos:end="131:46">encctx</name><operator pos:start="131:47" pos:end="131:48">-&gt;</operator><name pos:start="131:49" pos:end="131:53">width</name></name></expr></argument>, <argument pos:start="131:56" pos:end="131:69"><expr pos:start="131:56" pos:end="131:69"><name pos:start="131:56" pos:end="131:69"><name pos:start="131:56" pos:end="131:61">encctx</name><operator pos:start="131:62" pos:end="131:63">-&gt;</operator><name pos:start="131:64" pos:end="131:69">height</name></name></expr></argument>,

                                   <argument pos:start="133:36" pos:end="133:58"><expr pos:start="133:36" pos:end="133:58"><name pos:start="133:36" pos:end="133:38">bpp</name> <operator pos:start="133:40" pos:end="133:40">/</operator> <literal type="number" pos:start="133:42" pos:end="133:42">8</literal> <operator pos:start="133:44" pos:end="133:44">*</operator> <name pos:start="133:46" pos:end="133:58"><name pos:start="133:46" pos:end="133:51">encctx</name><operator pos:start="133:52" pos:end="133:53">-&gt;</operator><name pos:start="133:54" pos:end="133:58">width</name></name></expr></argument>,

                                   <argument pos:start="135:36" pos:end="135:43"><expr pos:start="135:36" pos:end="135:43"><literal type="number" pos:start="135:36" pos:end="135:43">0x0000ff</literal></expr></argument>, <argument pos:start="135:46" pos:end="135:53"><expr pos:start="135:46" pos:end="135:53"><literal type="number" pos:start="135:46" pos:end="135:53">0x00ff00</literal></expr></argument>, <argument pos:start="135:56" pos:end="135:63"><expr pos:start="135:56" pos:end="135:63"><literal type="number" pos:start="135:56" pos:end="135:63">0xff0000</literal></expr></argument>, <argument pos:start="135:66" pos:end="135:66"><expr pos:start="135:66" pos:end="135:66"><literal type="number" pos:start="135:66" pos:end="135:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="162:0"><if pos:start="137:5" pos:end="162:0">if <condition pos:start="137:8" pos:end="137:19">(<expr pos:start="137:9" pos:end="137:18"><operator pos:start="137:9" pos:end="137:9">!</operator><name pos:start="137:10" pos:end="137:18"><name pos:start="137:10" pos:end="137:10">c</name><operator pos:start="137:11" pos:end="137:12">-&gt;</operator><name pos:start="137:13" pos:end="137:18">dither</name></name></expr>)</condition> <block pos:start="137:21" pos:end="162:0">{<block_content pos:start="139:9" pos:end="143:18">

        <expr_stmt pos:start="139:9" pos:end="139:61"><expr pos:start="139:9" pos:end="139:60"><call pos:start="139:9" pos:end="139:60"><name pos:start="139:9" pos:end="139:14">av_log</name><argument_list pos:start="139:15" pos:end="139:60">(<argument pos:start="139:16" pos:end="139:16"><expr pos:start="139:16" pos:end="139:16"><name pos:start="139:16" pos:end="139:16">s</name></expr></argument>, <argument pos:start="139:19" pos:end="139:30"><expr pos:start="139:19" pos:end="139:30"><name pos:start="139:19" pos:end="139:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="139:33" pos:end="139:59"><expr pos:start="139:33" pos:end="139:59"><literal type="string" pos:start="139:33" pos:end="139:59">"Failed to create dither\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:30"><expr pos:start="141:9" pos:end="141:29"><name pos:start="141:9" pos:end="141:11">ret</name> <operator pos:start="141:13" pos:end="141:13">=</operator>  <call pos:start="141:16" pos:end="141:29"><name pos:start="141:16" pos:end="141:22">AVERROR</name><argument_list pos:start="141:23" pos:end="141:29">(<argument pos:start="141:24" pos:end="141:28"><expr pos:start="141:24" pos:end="141:28"><name pos:start="141:24" pos:end="141:28">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="143:9" pos:end="143:18">goto <name pos:start="143:14" pos:end="143:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:define pos:start="149:1" pos:end="161:5">#<cpp:directive pos:start="149:2" pos:end="149:7">define</cpp:directive> <cpp:macro pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:24">CHECK_DITHER_OPT</name><parameter_list pos:start="149:25" pos:end="149:29">(<parameter pos:start="149:26" pos:end="149:28"><type pos:start="149:26" pos:end="149:28"><name pos:start="149:26" pos:end="149:28">opt</name></type></parameter>)</parameter_list></cpp:macro>                                           \

    <cpp:value pos:start="151:5" pos:end="161:5">if (caca_set_dither_##opt(c-&gt;dither, c-&gt;opt) &lt; 0)  {                \

        ret = AVERROR(errno);                                           \

        av_log(s, AV_LOG_ERROR, "Failed to set value '%s' for option '%s'\n", \

               c-&gt;opt, #opt);                                           \

        goto fail;                                                      \

    }</cpp:value></cpp:define>

    <expr_stmt pos:start="163:5" pos:end="163:32"><expr pos:start="163:5" pos:end="163:31"><call pos:start="163:5" pos:end="163:31"><name pos:start="163:5" pos:end="163:20">CHECK_DITHER_OPT</name><argument_list pos:start="163:21" pos:end="163:31">(<argument pos:start="163:22" pos:end="163:30"><expr pos:start="163:22" pos:end="163:30"><name pos:start="163:22" pos:end="163:30">algorithm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:32"><expr pos:start="165:5" pos:end="165:31"><call pos:start="165:5" pos:end="165:31"><name pos:start="165:5" pos:end="165:20">CHECK_DITHER_OPT</name><argument_list pos:start="165:21" pos:end="165:31">(<argument pos:start="165:22" pos:end="165:30"><expr pos:start="165:22" pos:end="165:30"><name pos:start="165:22" pos:end="165:30">antialias</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:30"><expr pos:start="167:5" pos:end="167:29"><call pos:start="167:5" pos:end="167:29"><name pos:start="167:5" pos:end="167:20">CHECK_DITHER_OPT</name><argument_list pos:start="167:21" pos:end="167:29">(<argument pos:start="167:22" pos:end="167:28"><expr pos:start="167:22" pos:end="167:28"><name pos:start="167:22" pos:end="167:28">charset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:28"><expr pos:start="169:5" pos:end="169:27"><call pos:start="169:5" pos:end="169:27"><name pos:start="169:5" pos:end="169:20">CHECK_DITHER_OPT</name><argument_list pos:start="169:21" pos:end="169:27">(<argument pos:start="169:22" pos:end="169:26"><expr pos:start="169:22" pos:end="169:26"><name pos:start="169:22" pos:end="169:26">color</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="173:5" pos:end="175:49"><if pos:start="173:5" pos:end="175:49">if <condition pos:start="173:8" pos:end="173:25">(<expr pos:start="173:9" pos:end="173:24"><operator pos:start="173:9" pos:end="173:9">!</operator><name pos:start="173:10" pos:end="173:24"><name pos:start="173:10" pos:end="173:10">c</name><operator pos:start="173:11" pos:end="173:12">-&gt;</operator><name pos:start="173:13" pos:end="173:24">window_title</name></name></expr>)</condition><block type="pseudo" pos:start="175:9" pos:end="175:49"><block_content pos:start="175:9" pos:end="175:49">

        <expr_stmt pos:start="175:9" pos:end="175:49"><expr pos:start="175:9" pos:end="175:48"><name pos:start="175:9" pos:end="175:23"><name pos:start="175:9" pos:end="175:9">c</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:23">window_title</name></name> <operator pos:start="175:25" pos:end="175:25">=</operator> <call pos:start="175:27" pos:end="175:48"><name pos:start="175:27" pos:end="175:35">av_strdup</name><argument_list pos:start="175:36" pos:end="175:48">(<argument pos:start="175:37" pos:end="175:47"><expr pos:start="175:37" pos:end="175:47"><name pos:start="175:37" pos:end="175:47"><name pos:start="175:37" pos:end="175:37">s</name><operator pos:start="175:38" pos:end="175:39">-&gt;</operator><name pos:start="175:40" pos:end="175:47">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:56"><expr pos:start="177:5" pos:end="177:55"><call pos:start="177:5" pos:end="177:55"><name pos:start="177:5" pos:end="177:26">caca_set_display_title</name><argument_list pos:start="177:27" pos:end="177:55">(<argument pos:start="177:28" pos:end="177:37"><expr pos:start="177:28" pos:end="177:37"><name pos:start="177:28" pos:end="177:37"><name pos:start="177:28" pos:end="177:28">c</name><operator pos:start="177:29" pos:end="177:30">-&gt;</operator><name pos:start="177:31" pos:end="177:37">display</name></name></expr></argument>, <argument pos:start="177:40" pos:end="177:54"><expr pos:start="177:40" pos:end="177:54"><name pos:start="177:40" pos:end="177:54"><name pos:start="177:40" pos:end="177:40">c</name><operator pos:start="177:41" pos:end="177:42">-&gt;</operator><name pos:start="177:43" pos:end="177:54">window_title</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:93"><expr pos:start="179:5" pos:end="179:92"><call pos:start="179:5" pos:end="179:92"><name pos:start="179:5" pos:end="179:25">caca_set_display_time</name><argument_list pos:start="179:26" pos:end="179:92">(<argument pos:start="179:27" pos:end="179:36"><expr pos:start="179:27" pos:end="179:36"><name pos:start="179:27" pos:end="179:36"><name pos:start="179:27" pos:end="179:27">c</name><operator pos:start="179:28" pos:end="179:29">-&gt;</operator><name pos:start="179:30" pos:end="179:36">display</name></name></expr></argument>, <argument pos:start="179:39" pos:end="179:91"><expr pos:start="179:39" pos:end="179:91"><call pos:start="179:39" pos:end="179:91"><name pos:start="179:39" pos:end="179:50">av_rescale_q</name><argument_list pos:start="179:51" pos:end="179:91">(<argument pos:start="179:52" pos:end="179:52"><expr pos:start="179:52" pos:end="179:52"><literal type="number" pos:start="179:52" pos:end="179:52">1</literal></expr></argument>, <argument pos:start="179:55" pos:end="179:74"><expr pos:start="179:55" pos:end="179:74"><name pos:start="179:55" pos:end="179:74"><name pos:start="179:55" pos:end="179:56">st</name><operator pos:start="179:57" pos:end="179:58">-&gt;</operator><name pos:start="179:59" pos:end="179:63">codec</name><operator pos:start="179:64" pos:end="179:65">-&gt;</operator><name pos:start="179:66" pos:end="179:74">time_base</name></name></expr></argument>, <argument pos:start="179:77" pos:end="179:90"><expr pos:start="179:77" pos:end="179:90"><name pos:start="179:77" pos:end="179:90">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="183:5" pos:end="183:13">return <expr pos:start="183:12" pos:end="183:12"><literal type="number" pos:start="183:12" pos:end="183:12">0</literal></expr>;</return>



<label pos:start="187:1" pos:end="187:5"><name pos:start="187:1" pos:end="187:4">fail</name>:</label>

    <expr_stmt pos:start="189:5" pos:end="189:26"><expr pos:start="189:5" pos:end="189:25"><call pos:start="189:5" pos:end="189:25"><name pos:start="189:5" pos:end="189:22">caca_write_trailer</name><argument_list pos:start="189:23" pos:end="189:25">(<argument pos:start="189:24" pos:end="189:24"><expr pos:start="189:24" pos:end="189:24"><name pos:start="189:24" pos:end="189:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="191:5" pos:end="191:15">return <expr pos:start="191:12" pos:end="191:14"><name pos:start="191:12" pos:end="191:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
