<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4692.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:35">ff_configure_buffers_for_index</name><parameter_list pos:start="1:36" pos:end="1:79">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:51">AVFormatContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:78"><decl pos:start="1:57" pos:end="1:78"><type pos:start="1:57" pos:end="1:78"><name pos:start="1:57" pos:end="1:63">int64_t</name></type> <name pos:start="1:65" pos:end="1:78">time_tolerance</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">ist1</name></decl>, <decl pos:start="5:15" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:18">ist2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:21">pos_delta</name> <init pos:start="7:23" pos:end="7:25">= <expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:start="9:5" pos:end="9:120">//We could use URLProtocol flags here but as many user applications do not use URLProtocols this would be unreliable</comment>

    <decl_stmt pos:start="11:5" pos:end="11:61"><decl pos:start="11:5" pos:end="11:60"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:21">proto</name> <init pos:start="11:23" pos:end="11:60">= <expr pos:start="11:25" pos:end="11:60"><call pos:start="11:25" pos:end="11:60"><name pos:start="11:25" pos:end="11:47">avio_find_protocol_name</name><argument_list pos:start="11:48" pos:end="11:60">(<argument pos:start="11:49" pos:end="11:59"><expr pos:start="11:49" pos:end="11:59"><name pos:start="11:49" pos:end="11:59"><name pos:start="11:49" pos:end="11:49">s</name><operator pos:start="11:50" pos:end="11:51">-&gt;</operator><name pos:start="11:52" pos:end="11:59">filename</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:15"><if pos:start="15:5" pos:end="17:15">if <condition pos:start="15:8" pos:end="15:84">(<expr pos:start="15:9" pos:end="15:83"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><call pos:start="15:11" pos:end="15:31"><name pos:start="15:11" pos:end="15:16">strcmp</name><argument_list pos:start="15:17" pos:end="15:31">(<argument pos:start="15:18" pos:end="15:22"><expr pos:start="15:18" pos:end="15:22"><name pos:start="15:18" pos:end="15:22">proto</name></expr></argument>, <argument pos:start="15:25" pos:end="15:30"><expr pos:start="15:25" pos:end="15:30"><literal type="string" pos:start="15:25" pos:end="15:30">"file"</literal></expr></argument>)</argument_list></call> <operator pos:start="15:33" pos:end="15:34">&amp;&amp;</operator> <call pos:start="15:36" pos:end="15:56"><name pos:start="15:36" pos:end="15:41">strcmp</name><argument_list pos:start="15:42" pos:end="15:56">(<argument pos:start="15:43" pos:end="15:47"><expr pos:start="15:43" pos:end="15:47"><name pos:start="15:43" pos:end="15:47">proto</name></expr></argument>, <argument pos:start="15:50" pos:end="15:55"><expr pos:start="15:50" pos:end="15:55"><literal type="string" pos:start="15:50" pos:end="15:55">"pipe"</literal></expr></argument>)</argument_list></call> <operator pos:start="15:58" pos:end="15:59">&amp;&amp;</operator> <call pos:start="15:61" pos:end="15:82"><name pos:start="15:61" pos:end="15:66">strcmp</name><argument_list pos:start="15:67" pos:end="15:82">(<argument pos:start="15:68" pos:end="15:72"><expr pos:start="15:68" pos:end="15:72"><name pos:start="15:68" pos:end="15:72">proto</name></expr></argument>, <argument pos:start="15:75" pos:end="15:81"><expr pos:start="15:75" pos:end="15:81"><literal type="string" pos:start="15:75" pos:end="15:81">"cache"</literal></expr></argument>)</argument_list></call><operator pos:start="15:83" pos:end="15:83">)</operator></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:15"><block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return></block_content></block></if></if_stmt>



    <for pos:start="21:5" pos:end="67:5">for <control pos:start="21:9" pos:end="21:48">(<init pos:start="21:10" pos:end="21:18"><expr pos:start="21:10" pos:end="21:17"><name pos:start="21:10" pos:end="21:13">ist1</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <literal type="number" pos:start="21:17" pos:end="21:17">0</literal></expr>;</init> <condition pos:start="21:20" pos:end="21:40"><expr pos:start="21:20" pos:end="21:39"><name pos:start="21:20" pos:end="21:23">ist1</name> <operator pos:start="21:25" pos:end="21:25">&lt;</operator> <name pos:start="21:27" pos:end="21:39"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:39">nb_streams</name></name></expr>;</condition> <incr pos:start="21:42" pos:end="21:47"><expr pos:start="21:42" pos:end="21:47"><name pos:start="21:42" pos:end="21:45">ist1</name><operator pos:start="21:46" pos:end="21:47">++</operator></expr></incr>)</control> <block pos:start="21:50" pos:end="67:5">{<block_content pos:start="23:9" pos:end="65:9">

        <decl_stmt pos:start="23:9" pos:end="23:41"><decl pos:start="23:9" pos:end="23:40"><type pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:16">AVStream</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:21">st1</name> <init pos:start="23:23" pos:end="23:40">= <expr pos:start="23:25" pos:end="23:40"><name pos:start="23:25" pos:end="23:40"><name pos:start="23:25" pos:end="23:25">s</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:34">streams</name><index pos:start="23:35" pos:end="23:40">[<expr pos:start="23:36" pos:end="23:39"><name pos:start="23:36" pos:end="23:39">ist1</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="25:9" pos:end="65:9">for <control pos:start="25:13" pos:end="25:52">(<init pos:start="25:14" pos:end="25:22"><expr pos:start="25:14" pos:end="25:21"><name pos:start="25:14" pos:end="25:17">ist2</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr>;</init> <condition pos:start="25:24" pos:end="25:44"><expr pos:start="25:24" pos:end="25:43"><name pos:start="25:24" pos:end="25:27">ist2</name> <operator pos:start="25:29" pos:end="25:29">&lt;</operator> <name pos:start="25:31" pos:end="25:43"><name pos:start="25:31" pos:end="25:31">s</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:43">nb_streams</name></name></expr>;</condition> <incr pos:start="25:46" pos:end="25:51"><expr pos:start="25:46" pos:end="25:51"><name pos:start="25:46" pos:end="25:49">ist2</name><operator pos:start="25:50" pos:end="25:51">++</operator></expr></incr>)</control> <block pos:start="25:54" pos:end="65:9">{<block_content pos:start="27:13" pos:end="63:13">

            <decl_stmt pos:start="27:13" pos:end="27:45"><decl pos:start="27:13" pos:end="27:44"><type pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:20">AVStream</name> <modifier pos:start="27:22" pos:end="27:22">*</modifier></type><name pos:start="27:23" pos:end="27:25">st2</name> <init pos:start="27:27" pos:end="27:44">= <expr pos:start="27:29" pos:end="27:44"><name pos:start="27:29" pos:end="27:44"><name pos:start="27:29" pos:end="27:29">s</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:38">streams</name><index pos:start="27:39" pos:end="27:44">[<expr pos:start="27:40" pos:end="27:43"><name pos:start="27:40" pos:end="27:43">ist2</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="29:13" pos:end="29:23"><decl pos:start="29:13" pos:end="29:18"><type pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">int</name></type> <name pos:start="29:17" pos:end="29:18">i1</name></decl>, <decl pos:start="29:21" pos:end="29:22"><type ref="prev" pos:start="29:13" pos:end="29:15"/><name pos:start="29:21" pos:end="29:22">i2</name></decl>;</decl_stmt>



            <if_stmt pos:start="33:13" pos:end="35:25"><if pos:start="33:13" pos:end="35:25">if <condition pos:start="33:16" pos:end="33:29">(<expr pos:start="33:17" pos:end="33:28"><name pos:start="33:17" pos:end="33:20">ist1</name> <operator pos:start="33:22" pos:end="33:23">==</operator> <name pos:start="33:25" pos:end="33:28">ist2</name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:25"><block_content pos:start="35:17" pos:end="35:25">

                <continue pos:start="35:17" pos:end="35:25">continue;</continue></block_content></block></if></if_stmt>



            <for pos:start="39:13" pos:end="63:13">for <control pos:start="39:17" pos:end="39:63">(<init pos:start="39:18" pos:end="39:29"><expr pos:start="39:18" pos:end="39:28"><name pos:start="39:18" pos:end="39:19">i1</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <name pos:start="39:23" pos:end="39:24">i2</name> <operator pos:start="39:26" pos:end="39:26">=</operator> <literal type="number" pos:start="39:28" pos:end="39:28">0</literal></expr>;</init> <condition pos:start="39:31" pos:end="39:57"><expr pos:start="39:31" pos:end="39:56"><name pos:start="39:31" pos:end="39:32">i1</name> <operator pos:start="39:34" pos:end="39:34">&lt;</operator> <name pos:start="39:36" pos:end="39:56"><name pos:start="39:36" pos:end="39:38">st1</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:56">nb_index_entries</name></name></expr>;</condition> <incr pos:start="39:59" pos:end="39:62"><expr pos:start="39:59" pos:end="39:62"><name pos:start="39:59" pos:end="39:60">i1</name><operator pos:start="39:61" pos:end="39:62">++</operator></expr></incr>)</control> <block pos:start="39:65" pos:end="63:13">{<block_content pos:start="41:17" pos:end="61:17">

                <decl_stmt pos:start="41:17" pos:end="41:59"><decl pos:start="41:17" pos:end="41:58"><type pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:28">AVIndexEntry</name> <modifier pos:start="41:30" pos:end="41:30">*</modifier></type><name pos:start="41:31" pos:end="41:32">e1</name> <init pos:start="41:34" pos:end="41:58">= <expr pos:start="41:36" pos:end="41:58"><operator pos:start="41:36" pos:end="41:36">&amp;</operator><name pos:start="41:37" pos:end="41:58"><name pos:start="41:37" pos:end="41:39">st1</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:54">index_entries</name><index pos:start="41:55" pos:end="41:58">[<expr pos:start="41:56" pos:end="41:57"><name pos:start="41:56" pos:end="41:57">i1</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="43:17" pos:end="43:93"><decl pos:start="43:17" pos:end="43:92"><type pos:start="43:17" pos:end="43:23"><name pos:start="43:17" pos:end="43:23">int64_t</name></type> <name pos:start="43:25" pos:end="43:30">e1_pts</name> <init pos:start="43:32" pos:end="43:92">= <expr pos:start="43:34" pos:end="43:92"><call pos:start="43:34" pos:end="43:92"><name pos:start="43:34" pos:end="43:45">av_rescale_q</name><argument_list pos:start="43:46" pos:end="43:92">(<argument pos:start="43:47" pos:end="43:59"><expr pos:start="43:47" pos:end="43:59"><name pos:start="43:47" pos:end="43:59"><name pos:start="43:47" pos:end="43:48">e1</name><operator pos:start="43:49" pos:end="43:50">-&gt;</operator><name pos:start="43:51" pos:end="43:59">timestamp</name></name></expr></argument>, <argument pos:start="43:62" pos:end="43:75"><expr pos:start="43:62" pos:end="43:75"><name pos:start="43:62" pos:end="43:75"><name pos:start="43:62" pos:end="43:64">st1</name><operator pos:start="43:65" pos:end="43:66">-&gt;</operator><name pos:start="43:67" pos:end="43:75">time_base</name></name></expr></argument>, <argument pos:start="43:78" pos:end="43:91"><expr pos:start="43:78" pos:end="43:91"><name pos:start="43:78" pos:end="43:91">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <for pos:start="47:17" pos:end="61:17">for <control pos:start="47:21" pos:end="47:56">(<init pos:start="47:22" pos:end="47:22">;</init> <condition pos:start="47:24" pos:end="47:50"><expr pos:start="47:24" pos:end="47:49"><name pos:start="47:24" pos:end="47:25">i2</name> <operator pos:start="47:27" pos:end="47:27">&lt;</operator> <name pos:start="47:29" pos:end="47:49"><name pos:start="47:29" pos:end="47:31">st2</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:49">nb_index_entries</name></name></expr>;</condition> <incr pos:start="47:52" pos:end="47:55"><expr pos:start="47:52" pos:end="47:55"><name pos:start="47:52" pos:end="47:53">i2</name><operator pos:start="47:54" pos:end="47:55">++</operator></expr></incr>)</control> <block pos:start="47:58" pos:end="61:17">{<block_content pos:start="49:21" pos:end="59:26">

                    <decl_stmt pos:start="49:21" pos:end="49:63"><decl pos:start="49:21" pos:end="49:62"><type pos:start="49:21" pos:end="49:34"><name pos:start="49:21" pos:end="49:32">AVIndexEntry</name> <modifier pos:start="49:34" pos:end="49:34">*</modifier></type><name pos:start="49:35" pos:end="49:36">e2</name> <init pos:start="49:38" pos:end="49:62">= <expr pos:start="49:40" pos:end="49:62"><operator pos:start="49:40" pos:end="49:40">&amp;</operator><name pos:start="49:41" pos:end="49:62"><name pos:start="49:41" pos:end="49:43">st2</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:58">index_entries</name><index pos:start="49:59" pos:end="49:62">[<expr pos:start="49:60" pos:end="49:61"><name pos:start="49:60" pos:end="49:61">i2</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="51:21" pos:end="51:97"><decl pos:start="51:21" pos:end="51:96"><type pos:start="51:21" pos:end="51:27"><name pos:start="51:21" pos:end="51:27">int64_t</name></type> <name pos:start="51:29" pos:end="51:34">e2_pts</name> <init pos:start="51:36" pos:end="51:96">= <expr pos:start="51:38" pos:end="51:96"><call pos:start="51:38" pos:end="51:96"><name pos:start="51:38" pos:end="51:49">av_rescale_q</name><argument_list pos:start="51:50" pos:end="51:96">(<argument pos:start="51:51" pos:end="51:63"><expr pos:start="51:51" pos:end="51:63"><name pos:start="51:51" pos:end="51:63"><name pos:start="51:51" pos:end="51:52">e2</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:63">timestamp</name></name></expr></argument>, <argument pos:start="51:66" pos:end="51:79"><expr pos:start="51:66" pos:end="51:79"><name pos:start="51:66" pos:end="51:79"><name pos:start="51:66" pos:end="51:68">st2</name><operator pos:start="51:69" pos:end="51:70">-&gt;</operator><name pos:start="51:71" pos:end="51:79">time_base</name></name></expr></argument>, <argument pos:start="51:82" pos:end="51:95"><expr pos:start="51:82" pos:end="51:95"><name pos:start="51:82" pos:end="51:95">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="53:21" pos:end="55:33"><if pos:start="53:21" pos:end="55:33">if <condition pos:start="53:24" pos:end="53:57">(<expr pos:start="53:25" pos:end="53:56"><name pos:start="53:25" pos:end="53:30">e2_pts</name> <operator pos:start="53:32" pos:end="53:32">-</operator> <name pos:start="53:34" pos:end="53:39">e1_pts</name> <operator pos:start="53:41" pos:end="53:41">&lt;</operator> <name pos:start="53:43" pos:end="53:56">time_tolerance</name></expr>)</condition><block type="pseudo" pos:start="55:25" pos:end="55:33"><block_content pos:start="55:25" pos:end="55:33">

                        <continue pos:start="55:25" pos:end="55:33">continue;</continue></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:68"><expr pos:start="57:21" pos:end="57:67"><name pos:start="57:21" pos:end="57:29">pos_delta</name> <operator pos:start="57:31" pos:end="57:31">=</operator> <call pos:start="57:33" pos:end="57:67"><name pos:start="57:33" pos:end="57:37">FFMAX</name><argument_list pos:start="57:38" pos:end="57:67">(<argument pos:start="57:39" pos:end="57:47"><expr pos:start="57:39" pos:end="57:47"><name pos:start="57:39" pos:end="57:47">pos_delta</name></expr></argument>, <argument pos:start="57:50" pos:end="57:66"><expr pos:start="57:50" pos:end="57:66"><name pos:start="57:50" pos:end="57:56"><name pos:start="57:50" pos:end="57:51">e1</name><operator pos:start="57:52" pos:end="57:53">-&gt;</operator><name pos:start="57:54" pos:end="57:56">pos</name></name> <operator pos:start="57:58" pos:end="57:58">-</operator> <name pos:start="57:60" pos:end="57:66"><name pos:start="57:60" pos:end="57:61">e2</name><operator pos:start="57:62" pos:end="57:63">-&gt;</operator><name pos:start="57:64" pos:end="57:66">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="59:21" pos:end="59:26">break;</break>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="71:5" pos:end="71:19"><expr pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:13">pos_delta</name> <operator pos:start="71:15" pos:end="71:16">*=</operator> <literal type="number" pos:start="71:18" pos:end="71:18">2</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="73:5" pos:end="73:57">/* XXX This could be adjusted depending on protocol*/</comment>

    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="83:5">if <condition pos:start="75:8" pos:end="75:62">(<expr pos:start="75:9" pos:end="75:61"><name pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:13">pb</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:26">buffer_size</name></name> <operator pos:start="75:28" pos:end="75:28">&lt;</operator> <name pos:start="75:30" pos:end="75:38">pos_delta</name> <operator pos:start="75:40" pos:end="75:41">&amp;&amp;</operator> <name pos:start="75:43" pos:end="75:51">pos_delta</name> <operator pos:start="75:53" pos:end="75:53">&lt;</operator> <operator pos:start="75:55" pos:end="75:55">(</operator><literal type="number" pos:start="75:56" pos:end="75:56">1</literal><operator pos:start="75:57" pos:end="75:58">&lt;&lt;</operator><literal type="number" pos:start="75:59" pos:end="75:60">24</literal><operator pos:start="75:61" pos:end="75:61">)</operator></expr>)</condition> <block pos:start="75:64" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:86">

        <expr_stmt pos:start="77:9" pos:end="77:90"><expr pos:start="77:9" pos:end="77:89"><call pos:start="77:9" pos:end="77:89"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="77:89">(<argument pos:start="77:16" pos:end="77:16"><expr pos:start="77:16" pos:end="77:16"><name pos:start="77:16" pos:end="77:16">s</name></expr></argument>, <argument pos:start="77:19" pos:end="77:32"><expr pos:start="77:19" pos:end="77:32"><name pos:start="77:19" pos:end="77:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="77:35" pos:end="77:77"><expr pos:start="77:35" pos:end="77:77"><literal type="string" pos:start="77:35" pos:end="77:67">"Reconfiguring buffers to size %"</literal><name pos:start="77:68" pos:end="77:73">PRId64</name><literal type="string" pos:start="77:74" pos:end="77:77">"\n"</literal></expr></argument>, <argument pos:start="77:80" pos:end="77:88"><expr pos:start="77:80" pos:end="77:88"><name pos:start="77:80" pos:end="77:88">pos_delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:44"><expr pos:start="79:9" pos:end="79:43"><call pos:start="79:9" pos:end="79:43"><name pos:start="79:9" pos:end="79:25">ffio_set_buf_size</name><argument_list pos:start="79:26" pos:end="79:43">(<argument pos:start="79:27" pos:end="79:31"><expr pos:start="79:27" pos:end="79:31"><name pos:start="79:27" pos:end="79:31"><name pos:start="79:27" pos:end="79:27">s</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:31">pb</name></name></expr></argument>, <argument pos:start="79:34" pos:end="79:42"><expr pos:start="79:34" pos:end="79:42"><name pos:start="79:34" pos:end="79:42">pos_delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:86"><expr pos:start="81:9" pos:end="81:85"><name pos:start="81:9" pos:end="81:35"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:13">pb</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:35">short_seek_threshold</name></name> <operator pos:start="81:37" pos:end="81:37">=</operator> <call pos:start="81:39" pos:end="81:85"><name pos:start="81:39" pos:end="81:43">FFMAX</name><argument_list pos:start="81:44" pos:end="81:85">(<argument pos:start="81:45" pos:end="81:71"><expr pos:start="81:45" pos:end="81:71"><name pos:start="81:45" pos:end="81:71"><name pos:start="81:45" pos:end="81:45">s</name><operator pos:start="81:46" pos:end="81:47">-&gt;</operator><name pos:start="81:48" pos:end="81:49">pb</name><operator pos:start="81:50" pos:end="81:51">-&gt;</operator><name pos:start="81:52" pos:end="81:71">short_seek_threshold</name></name></expr></argument>, <argument pos:start="81:74" pos:end="81:84"><expr pos:start="81:74" pos:end="81:84"><name pos:start="81:74" pos:end="81:82">pos_delta</name><operator pos:start="81:83" pos:end="81:83">/</operator><literal type="number" pos:start="81:84" pos:end="81:84">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
