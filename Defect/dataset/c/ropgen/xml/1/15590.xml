<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15590.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:45">dirac_unpack_prediction_parameters</name><parameter_list pos:start="1:46" pos:end="1:62">(<parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:58">DiracContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="213:1">{<block_content pos:start="5:5" pos:end="211:13">

    <decl_stmt pos:start="5:5" pos:end="5:60"><decl pos:start="5:5" pos:end="5:59"><type pos:start="5:5" pos:end="5:24"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:24">uint8_t</name></type> <name pos:start="5:26" pos:end="5:39"><name pos:start="5:26" pos:end="5:37">default_blen</name><index pos:start="5:38" pos:end="5:39">[]</index></name> <init pos:start="5:41" pos:end="5:59">= <expr pos:start="5:43" pos:end="5:59"><block pos:start="5:43" pos:end="5:59">{ <expr pos:start="5:45" pos:end="5:45"><literal type="number" pos:start="5:45" pos:end="5:45">4</literal></expr>, <expr pos:start="5:48" pos:end="5:49"><literal type="number" pos:start="5:48" pos:end="5:49">12</literal></expr>, <expr pos:start="5:52" pos:end="5:53"><literal type="number" pos:start="5:52" pos:end="5:53">16</literal></expr>, <expr pos:start="5:56" pos:end="5:57"><literal type="number" pos:start="5:56" pos:end="5:57">24</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:24"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:24">uint8_t</name></type> <name pos:start="7:26" pos:end="7:39"><name pos:start="7:26" pos:end="7:37">default_bsep</name><index pos:start="7:38" pos:end="7:39">[]</index></name> <init pos:start="7:41" pos:end="7:59">= <expr pos:start="7:43" pos:end="7:59"><block pos:start="7:43" pos:end="7:59">{ <expr pos:start="7:45" pos:end="7:45"><literal type="number" pos:start="7:45" pos:end="7:45">4</literal></expr>,  <expr pos:start="7:49" pos:end="7:49"><literal type="number" pos:start="7:49" pos:end="7:49">8</literal></expr>, <expr pos:start="7:52" pos:end="7:53"><literal type="number" pos:start="7:52" pos:end="7:53">12</literal></expr>, <expr pos:start="7:56" pos:end="7:57"><literal type="number" pos:start="7:56" pos:end="7:57">16</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">GetBitContext</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:21">gb</name> <init pos:start="11:23" pos:end="11:30">= <expr pos:start="11:25" pos:end="11:30"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:30"><name pos:start="11:26" pos:end="11:26">s</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:16">idx</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:19" pos:end="13:21">ref</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><call pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:18">align_get_bits</name><argument_list pos:start="17:19" pos:end="17:22">(<argument pos:start="17:20" pos:end="17:21"><expr pos:start="17:20" pos:end="17:21"><name pos:start="17:20" pos:end="17:21">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="19:5" pos:end="19:65">/* [DIRAC_STD] 11.2.2 Block parameters. block_parameters() */</comment>

    <comment type="block" pos:start="21:5" pos:end="21:43">/* Luma and Chroma are equal. 11.2.3 */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:7">idx</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:32"><name pos:start="23:11" pos:end="23:28">svq3_get_ue_golomb</name><argument_list pos:start="23:29" pos:end="23:32">(<argument pos:start="23:30" pos:end="23:31"><expr pos:start="23:30" pos:end="23:31"><name pos:start="23:30" pos:end="23:31">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:35" pos:end="23:57">/* [DIRAC_STD] index */</comment>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">idx</name> <operator pos:start="27:13" pos:end="27:13">&gt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">4</literal></expr>)</condition> <block pos:start="27:18" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <expr_stmt pos:start="29:9" pos:end="29:76"><expr pos:start="29:9" pos:end="29:75"><call pos:start="29:9" pos:end="29:75"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:75">(<argument pos:start="29:16" pos:end="29:23"><expr pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:23">avctx</name></name></expr></argument>, <argument pos:start="29:26" pos:end="29:37"><expr pos:start="29:26" pos:end="29:37"><name pos:start="29:26" pos:end="29:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:40" pos:end="29:74"><expr pos:start="29:40" pos:end="29:74"><literal type="string" pos:start="29:40" pos:end="29:74">"Block prediction index too high\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="59:5"><if pos:start="37:5" pos:end="47:5">if <condition pos:start="37:8" pos:end="37:17">(<expr pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:11">idx</name> <operator pos:start="37:13" pos:end="37:14">==</operator> <literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>)</condition> <block pos:start="37:19" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:51">

        <expr_stmt pos:start="39:9" pos:end="39:51"><expr pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:16">plane</name><index pos:start="39:17" pos:end="39:19">[<expr pos:start="39:18" pos:end="39:18"><literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>]</index></name><operator pos:start="39:20" pos:end="39:20">.</operator><name pos:start="39:21" pos:end="39:25">xblen</name> <operator pos:start="39:27" pos:end="39:27">=</operator> <call pos:start="39:29" pos:end="39:50"><name pos:start="39:29" pos:end="39:46">svq3_get_ue_golomb</name><argument_list pos:start="39:47" pos:end="39:50">(<argument pos:start="39:48" pos:end="39:49"><expr pos:start="39:48" pos:end="39:49"><name pos:start="39:48" pos:end="39:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:51"><expr pos:start="41:9" pos:end="41:50"><name pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">plane</name><index pos:start="41:17" pos:end="41:19">[<expr pos:start="41:18" pos:end="41:18"><literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>]</index></name><operator pos:start="41:20" pos:end="41:20">.</operator><name pos:start="41:21" pos:end="41:25">yblen</name> <operator pos:start="41:27" pos:end="41:27">=</operator> <call pos:start="41:29" pos:end="41:50"><name pos:start="41:29" pos:end="41:46">svq3_get_ue_golomb</name><argument_list pos:start="41:47" pos:end="41:50">(<argument pos:start="41:48" pos:end="41:49"><expr pos:start="41:48" pos:end="41:49"><name pos:start="41:48" pos:end="41:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:51"><expr pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:16">plane</name><index pos:start="43:17" pos:end="43:19">[<expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>]</index></name><operator pos:start="43:20" pos:end="43:20">.</operator><name pos:start="43:21" pos:end="43:25">xbsep</name> <operator pos:start="43:27" pos:end="43:27">=</operator> <call pos:start="43:29" pos:end="43:50"><name pos:start="43:29" pos:end="43:46">svq3_get_ue_golomb</name><argument_list pos:start="43:47" pos:end="43:50">(<argument pos:start="43:48" pos:end="43:49"><expr pos:start="43:48" pos:end="43:49"><name pos:start="43:48" pos:end="43:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:51"><expr pos:start="45:9" pos:end="45:50"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:16">plane</name><index pos:start="45:17" pos:end="45:19">[<expr pos:start="45:18" pos:end="45:18"><literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>]</index></name><operator pos:start="45:20" pos:end="45:20">.</operator><name pos:start="45:21" pos:end="45:25">ybsep</name> <operator pos:start="45:27" pos:end="45:27">=</operator> <call pos:start="45:29" pos:end="45:50"><name pos:start="45:29" pos:end="45:46">svq3_get_ue_golomb</name><argument_list pos:start="45:47" pos:end="45:50">(<argument pos:start="45:48" pos:end="45:49"><expr pos:start="45:48" pos:end="45:49"><name pos:start="45:48" pos:end="45:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="59:5">else <block pos:start="47:12" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:48">

        <comment type="block" pos:start="49:9" pos:end="49:63">/*[DIRAC_STD] preset_block_params(index). Table 11.1 */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:48"><expr pos:start="51:9" pos:end="51:47"><name pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:16">plane</name><index pos:start="51:17" pos:end="51:19">[<expr pos:start="51:18" pos:end="51:18"><literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>]</index></name><operator pos:start="51:20" pos:end="51:20">.</operator><name pos:start="51:21" pos:end="51:25">xblen</name> <operator pos:start="51:27" pos:end="51:27">=</operator> <name pos:start="51:29" pos:end="51:47"><name pos:start="51:29" pos:end="51:40">default_blen</name><index pos:start="51:41" pos:end="51:47">[<expr pos:start="51:42" pos:end="51:46"><name pos:start="51:42" pos:end="51:44">idx</name><operator pos:start="51:45" pos:end="51:45">-</operator><literal type="number" pos:start="51:46" pos:end="51:46">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:48"><expr pos:start="53:9" pos:end="53:47"><name pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:16">plane</name><index pos:start="53:17" pos:end="53:19">[<expr pos:start="53:18" pos:end="53:18"><literal type="number" pos:start="53:18" pos:end="53:18">0</literal></expr>]</index></name><operator pos:start="53:20" pos:end="53:20">.</operator><name pos:start="53:21" pos:end="53:25">yblen</name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:47"><name pos:start="53:29" pos:end="53:40">default_blen</name><index pos:start="53:41" pos:end="53:47">[<expr pos:start="53:42" pos:end="53:46"><name pos:start="53:42" pos:end="53:44">idx</name><operator pos:start="53:45" pos:end="53:45">-</operator><literal type="number" pos:start="53:46" pos:end="53:46">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:48"><expr pos:start="55:9" pos:end="55:47"><name pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:16">plane</name><index pos:start="55:17" pos:end="55:19">[<expr pos:start="55:18" pos:end="55:18"><literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>]</index></name><operator pos:start="55:20" pos:end="55:20">.</operator><name pos:start="55:21" pos:end="55:25">xbsep</name> <operator pos:start="55:27" pos:end="55:27">=</operator> <name pos:start="55:29" pos:end="55:47"><name pos:start="55:29" pos:end="55:40">default_bsep</name><index pos:start="55:41" pos:end="55:47">[<expr pos:start="55:42" pos:end="55:46"><name pos:start="55:42" pos:end="55:44">idx</name><operator pos:start="55:45" pos:end="55:45">-</operator><literal type="number" pos:start="55:46" pos:end="55:46">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:48"><expr pos:start="57:9" pos:end="57:47"><name pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:16">plane</name><index pos:start="57:17" pos:end="57:19">[<expr pos:start="57:18" pos:end="57:18"><literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>]</index></name><operator pos:start="57:20" pos:end="57:20">.</operator><name pos:start="57:21" pos:end="57:25">ybsep</name> <operator pos:start="57:27" pos:end="57:27">=</operator> <name pos:start="57:29" pos:end="57:47"><name pos:start="57:29" pos:end="57:40">default_bsep</name><index pos:start="57:41" pos:end="57:47">[<expr pos:start="57:42" pos:end="57:46"><name pos:start="57:42" pos:end="57:44">idx</name><operator pos:start="57:45" pos:end="57:45">-</operator><literal type="number" pos:start="57:46" pos:end="57:46">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="61:5" pos:end="63:62">/*[DIRAC_STD] 11.2.4 motion_data_dimensions()

      Calculated in function dirac_unpack_block_motion_data */</comment>



    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:91">(<expr pos:start="67:9" pos:end="67:90"><name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:16">plane</name><index pos:start="67:17" pos:end="67:19">[<expr pos:start="67:18" pos:end="67:18"><literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr>]</index></name><operator pos:start="67:20" pos:end="67:20">.</operator><name pos:start="67:21" pos:end="67:25">xbsep</name> <operator pos:start="67:27" pos:end="67:27">&lt;</operator> <name pos:start="67:29" pos:end="67:39"><name pos:start="67:29" pos:end="67:29">s</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:36">plane</name><index pos:start="67:37" pos:end="67:39">[<expr pos:start="67:38" pos:end="67:38"><literal type="number" pos:start="67:38" pos:end="67:38">0</literal></expr>]</index></name><operator pos:start="67:40" pos:end="67:40">.</operator><name pos:start="67:41" pos:end="67:45">xblen</name><operator pos:start="67:46" pos:end="67:46">/</operator><literal type="number" pos:start="67:47" pos:end="67:47">2</literal> <operator pos:start="67:49" pos:end="67:50">||</operator> <name pos:start="67:52" pos:end="67:62"><name pos:start="67:52" pos:end="67:52">s</name><operator pos:start="67:53" pos:end="67:54">-&gt;</operator><name pos:start="67:55" pos:end="67:59">plane</name><index pos:start="67:60" pos:end="67:62">[<expr pos:start="67:61" pos:end="67:61"><literal type="number" pos:start="67:61" pos:end="67:61">0</literal></expr>]</index></name><operator pos:start="67:63" pos:end="67:63">.</operator><name pos:start="67:64" pos:end="67:68">ybsep</name> <operator pos:start="67:70" pos:end="67:70">&lt;</operator> <name pos:start="67:72" pos:end="67:82"><name pos:start="67:72" pos:end="67:72">s</name><operator pos:start="67:73" pos:end="67:74">-&gt;</operator><name pos:start="67:75" pos:end="67:79">plane</name><index pos:start="67:80" pos:end="67:82">[<expr pos:start="67:81" pos:end="67:81"><literal type="number" pos:start="67:81" pos:end="67:81">0</literal></expr>]</index></name><operator pos:start="67:83" pos:end="67:83">.</operator><name pos:start="67:84" pos:end="67:88">yblen</name><operator pos:start="67:89" pos:end="67:89">/</operator><literal type="number" pos:start="67:90" pos:end="67:90">2</literal></expr>)</condition> <block pos:start="67:93" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:18">

        <expr_stmt pos:start="69:9" pos:end="69:71"><expr pos:start="69:9" pos:end="69:70"><call pos:start="69:9" pos:end="69:70"><name pos:start="69:9" pos:end="69:14">av_log</name><argument_list pos:start="69:15" pos:end="69:70">(<argument pos:start="69:16" pos:end="69:23"><expr pos:start="69:16" pos:end="69:23"><name pos:start="69:16" pos:end="69:23"><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:23">avctx</name></name></expr></argument>, <argument pos:start="69:26" pos:end="69:37"><expr pos:start="69:26" pos:end="69:37"><name pos:start="69:26" pos:end="69:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:40" pos:end="69:69"><expr pos:start="69:40" pos:end="69:69"><literal type="string" pos:start="69:40" pos:end="69:69">"Block separation too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:18">return <expr pos:start="71:16" pos:end="71:17"><operator pos:start="71:16" pos:end="71:16">-</operator><literal type="number" pos:start="71:17" pos:end="71:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:87">(<expr pos:start="75:9" pos:end="75:86"><name pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:16">plane</name><index pos:start="75:17" pos:end="75:19">[<expr pos:start="75:18" pos:end="75:18"><literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr>]</index></name><operator pos:start="75:20" pos:end="75:20">.</operator><name pos:start="75:21" pos:end="75:25">xbsep</name> <operator pos:start="75:27" pos:end="75:27">&gt;</operator> <name pos:start="75:29" pos:end="75:39"><name pos:start="75:29" pos:end="75:29">s</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:36">plane</name><index pos:start="75:37" pos:end="75:39">[<expr pos:start="75:38" pos:end="75:38"><literal type="number" pos:start="75:38" pos:end="75:38">0</literal></expr>]</index></name><operator pos:start="75:40" pos:end="75:40">.</operator><name pos:start="75:41" pos:end="75:45">xblen</name> <operator pos:start="75:47" pos:end="75:48">||</operator> <name pos:start="75:50" pos:end="75:60"><name pos:start="75:50" pos:end="75:50">s</name><operator pos:start="75:51" pos:end="75:52">-&gt;</operator><name pos:start="75:53" pos:end="75:57">plane</name><index pos:start="75:58" pos:end="75:60">[<expr pos:start="75:59" pos:end="75:59"><literal type="number" pos:start="75:59" pos:end="75:59">0</literal></expr>]</index></name><operator pos:start="75:61" pos:end="75:61">.</operator><name pos:start="75:62" pos:end="75:66">ybsep</name> <operator pos:start="75:68" pos:end="75:68">&gt;</operator> <name pos:start="75:70" pos:end="75:80"><name pos:start="75:70" pos:end="75:70">s</name><operator pos:start="75:71" pos:end="75:72">-&gt;</operator><name pos:start="75:73" pos:end="75:77">plane</name><index pos:start="75:78" pos:end="75:80">[<expr pos:start="75:79" pos:end="75:79"><literal type="number" pos:start="75:79" pos:end="75:79">0</literal></expr>]</index></name><operator pos:start="75:81" pos:end="75:81">.</operator><name pos:start="75:82" pos:end="75:86">yblen</name></expr>)</condition> <block pos:start="75:89" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:18">

        <expr_stmt pos:start="77:9" pos:end="77:79"><expr pos:start="77:9" pos:end="77:78"><call pos:start="77:9" pos:end="77:78"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="77:78">(<argument pos:start="77:16" pos:end="77:23"><expr pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:16">s</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:23">avctx</name></name></expr></argument>, <argument pos:start="77:26" pos:end="77:37"><expr pos:start="77:26" pos:end="77:37"><name pos:start="77:26" pos:end="77:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:40" pos:end="77:77"><expr pos:start="77:40" pos:end="77:77"><literal type="string" pos:start="77:40" pos:end="77:77">"Block seperation greater than size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:18">return <expr pos:start="79:16" pos:end="79:17"><operator pos:start="79:16" pos:end="79:16">-</operator><literal type="number" pos:start="79:17" pos:end="79:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:68">(<expr pos:start="83:9" pos:end="83:67"><call pos:start="83:9" pos:end="83:51"><name pos:start="83:9" pos:end="83:13">FFMAX</name><argument_list pos:start="83:14" pos:end="83:51">(<argument pos:start="83:15" pos:end="83:31"><expr pos:start="83:15" pos:end="83:31"><name pos:start="83:15" pos:end="83:25"><name pos:start="83:15" pos:end="83:15">s</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:22">plane</name><index pos:start="83:23" pos:end="83:25">[<expr pos:start="83:24" pos:end="83:24"><literal type="number" pos:start="83:24" pos:end="83:24">0</literal></expr>]</index></name><operator pos:start="83:26" pos:end="83:26">.</operator><name pos:start="83:27" pos:end="83:31">xblen</name></expr></argument>, <argument pos:start="83:34" pos:end="83:50"><expr pos:start="83:34" pos:end="83:50"><name pos:start="83:34" pos:end="83:44"><name pos:start="83:34" pos:end="83:34">s</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:41">plane</name><index pos:start="83:42" pos:end="83:44">[<expr pos:start="83:43" pos:end="83:43"><literal type="number" pos:start="83:43" pos:end="83:43">0</literal></expr>]</index></name><operator pos:start="83:45" pos:end="83:45">.</operator><name pos:start="83:46" pos:end="83:50">yblen</name></expr></argument>)</argument_list></call> <operator pos:start="83:53" pos:end="83:53">&gt;</operator> <name pos:start="83:55" pos:end="83:67">MAX_BLOCKSIZE</name></expr>)</condition> <block pos:start="83:70" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:18">

        <expr_stmt pos:start="85:9" pos:end="85:73"><expr pos:start="85:9" pos:end="85:72"><call pos:start="85:9" pos:end="85:72"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="85:72">(<argument pos:start="85:16" pos:end="85:23"><expr pos:start="85:16" pos:end="85:23"><name pos:start="85:16" pos:end="85:23"><name pos:start="85:16" pos:end="85:16">s</name><operator pos:start="85:17" pos:end="85:18">-&gt;</operator><name pos:start="85:19" pos:end="85:23">avctx</name></name></expr></argument>, <argument pos:start="85:26" pos:end="85:37"><expr pos:start="85:26" pos:end="85:37"><name pos:start="85:26" pos:end="85:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:40" pos:end="85:71"><expr pos:start="85:40" pos:end="85:71"><literal type="string" pos:start="85:40" pos:end="85:71">"Unsupported large block size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:18">return <expr pos:start="87:16" pos:end="87:17"><operator pos:start="87:16" pos:end="87:16">-</operator><literal type="number" pos:start="87:17" pos:end="87:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="93:5" pos:end="95:37">/*[DIRAC_STD] 11.2.5 Motion vector precision. motion_vector_precision()

      Read motion vector precision */</comment>

    <expr_stmt pos:start="97:5" pos:end="97:45"><expr pos:start="97:5" pos:end="97:44"><name pos:start="97:5" pos:end="97:19"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:19">mv_precision</name></name> <operator pos:start="97:21" pos:end="97:21">=</operator> <call pos:start="97:23" pos:end="97:44"><name pos:start="97:23" pos:end="97:40">svq3_get_ue_golomb</name><argument_list pos:start="97:41" pos:end="97:44">(<argument pos:start="97:42" pos:end="97:43"><expr pos:start="97:42" pos:end="97:43"><name pos:start="97:42" pos:end="97:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:28">(<expr pos:start="99:9" pos:end="99:27"><name pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:23">mv_precision</name></name> <operator pos:start="99:25" pos:end="99:25">&gt;</operator> <literal type="number" pos:start="99:27" pos:end="99:27">3</literal></expr>)</condition> <block pos:start="99:30" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:18">

        <expr_stmt pos:start="101:9" pos:end="101:79"><expr pos:start="101:9" pos:end="101:78"><call pos:start="101:9" pos:end="101:78"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:78">(<argument pos:start="101:16" pos:end="101:23"><expr pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:16">s</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:23">avctx</name></name></expr></argument>, <argument pos:start="101:26" pos:end="101:37"><expr pos:start="101:26" pos:end="101:37"><name pos:start="101:26" pos:end="101:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:40" pos:end="101:77"><expr pos:start="101:40" pos:end="101:77"><literal type="string" pos:start="101:40" pos:end="101:77">"MV precision finer than eighth-pel\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:18">return <expr pos:start="103:16" pos:end="103:17"><operator pos:start="103:16" pos:end="103:16">-</operator><literal type="number" pos:start="103:17" pos:end="103:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="109:5" pos:end="111:55">/*[DIRAC_STD] 11.2.6 Global motion. global_motion()

      Read the global motion compensation parameters */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:37"><expr pos:start="113:5" pos:end="113:36"><name pos:start="113:5" pos:end="113:20"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:20">globalmc_flag</name></name> <operator pos:start="113:22" pos:end="113:22">=</operator> <call pos:start="113:24" pos:end="113:36"><name pos:start="113:24" pos:end="113:32">get_bits1</name><argument_list pos:start="113:33" pos:end="113:36">(<argument pos:start="113:34" pos:end="113:35"><expr pos:start="113:34" pos:end="113:35"><name pos:start="113:34" pos:end="113:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="169:5"><if pos:start="115:5" pos:end="169:5">if <condition pos:start="115:8" pos:end="115:25">(<expr pos:start="115:9" pos:end="115:24"><name pos:start="115:9" pos:end="115:24"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:24">globalmc_flag</name></name></expr>)</condition> <block pos:start="115:27" pos:end="169:5">{<block_content pos:start="117:9" pos:end="167:9">

        <expr_stmt pos:start="117:9" pos:end="117:52"><expr pos:start="117:9" pos:end="117:51"><call pos:start="117:9" pos:end="117:51"><name pos:start="117:9" pos:end="117:14">memset</name><argument_list pos:start="117:15" pos:end="117:51">(<argument pos:start="117:16" pos:end="117:26"><expr pos:start="117:16" pos:end="117:26"><name pos:start="117:16" pos:end="117:26"><name pos:start="117:16" pos:end="117:16">s</name><operator pos:start="117:17" pos:end="117:18">-&gt;</operator><name pos:start="117:19" pos:end="117:26">globalmc</name></name></expr></argument>, <argument pos:start="117:29" pos:end="117:29"><expr pos:start="117:29" pos:end="117:29"><literal type="number" pos:start="117:29" pos:end="117:29">0</literal></expr></argument>, <argument pos:start="117:32" pos:end="117:50"><expr pos:start="117:32" pos:end="117:50"><sizeof pos:start="117:32" pos:end="117:50">sizeof<argument_list pos:start="117:38" pos:end="117:50">(<argument pos:start="117:39" pos:end="117:49"><expr pos:start="117:39" pos:end="117:49"><name pos:start="117:39" pos:end="117:49"><name pos:start="117:39" pos:end="117:39">s</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:49">globalmc</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="119:9" pos:end="119:43">/* [DIRAC_STD] pan_tilt(gparams) */</comment>

        <for pos:start="121:9" pos:end="167:9">for <control pos:start="121:13" pos:end="121:47">(<init pos:start="121:14" pos:end="121:21"><expr pos:start="121:14" pos:end="121:20"><name pos:start="121:14" pos:end="121:16">ref</name> <operator pos:start="121:18" pos:end="121:18">=</operator> <literal type="number" pos:start="121:20" pos:end="121:20">0</literal></expr>;</init> <condition pos:start="121:23" pos:end="121:40"><expr pos:start="121:23" pos:end="121:39"><name pos:start="121:23" pos:end="121:25">ref</name> <operator pos:start="121:27" pos:end="121:27">&lt;</operator> <name pos:start="121:29" pos:end="121:39"><name pos:start="121:29" pos:end="121:29">s</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:39">num_refs</name></name></expr>;</condition> <incr pos:start="121:42" pos:end="121:46"><expr pos:start="121:42" pos:end="121:46"><name pos:start="121:42" pos:end="121:44">ref</name><operator pos:start="121:45" pos:end="121:46">++</operator></expr></incr>)</control> <block pos:start="121:49" pos:end="167:9">{<block_content pos:start="123:13" pos:end="165:13">

            <if_stmt pos:start="123:13" pos:end="129:13"><if pos:start="123:13" pos:end="129:13">if <condition pos:start="123:16" pos:end="123:30">(<expr pos:start="123:17" pos:end="123:29"><call pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:25">get_bits1</name><argument_list pos:start="123:26" pos:end="123:29">(<argument pos:start="123:27" pos:end="123:28"><expr pos:start="123:27" pos:end="123:28"><name pos:start="123:27" pos:end="123:28">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:32" pos:end="129:13">{<block_content pos:start="125:17" pos:end="127:71">

                <expr_stmt pos:start="125:17" pos:end="125:71"><expr pos:start="125:17" pos:end="125:70"><name pos:start="125:17" pos:end="125:32"><name pos:start="125:17" pos:end="125:17">s</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:27">globalmc</name><index pos:start="125:28" pos:end="125:32">[<expr pos:start="125:29" pos:end="125:31"><name pos:start="125:29" pos:end="125:31">ref</name></expr>]</index></name><operator pos:start="125:33" pos:end="125:33">.</operator><name pos:start="125:34" pos:end="125:44"><name pos:start="125:34" pos:end="125:41">pan_tilt</name><index pos:start="125:42" pos:end="125:44">[<expr pos:start="125:43" pos:end="125:43"><literal type="number" pos:start="125:43" pos:end="125:43">0</literal></expr>]</index></name> <operator pos:start="125:46" pos:end="125:46">=</operator> <call pos:start="125:48" pos:end="125:70"><name pos:start="125:48" pos:end="125:66">dirac_get_se_golomb</name><argument_list pos:start="125:67" pos:end="125:70">(<argument pos:start="125:68" pos:end="125:69"><expr pos:start="125:68" pos:end="125:69"><name pos:start="125:68" pos:end="125:69">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:71"><expr pos:start="127:17" pos:end="127:70"><name pos:start="127:17" pos:end="127:32"><name pos:start="127:17" pos:end="127:17">s</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:27">globalmc</name><index pos:start="127:28" pos:end="127:32">[<expr pos:start="127:29" pos:end="127:31"><name pos:start="127:29" pos:end="127:31">ref</name></expr>]</index></name><operator pos:start="127:33" pos:end="127:33">.</operator><name pos:start="127:34" pos:end="127:44"><name pos:start="127:34" pos:end="127:41">pan_tilt</name><index pos:start="127:42" pos:end="127:44">[<expr pos:start="127:43" pos:end="127:43"><literal type="number" pos:start="127:43" pos:end="127:43">1</literal></expr>]</index></name> <operator pos:start="127:46" pos:end="127:46">=</operator> <call pos:start="127:48" pos:end="127:70"><name pos:start="127:48" pos:end="127:66">dirac_get_se_golomb</name><argument_list pos:start="127:67" pos:end="127:70">(<argument pos:start="127:68" pos:end="127:69"><expr pos:start="127:68" pos:end="127:69"><name pos:start="127:68" pos:end="127:69">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="131:13" pos:end="133:48">/* [DIRAC_STD] zoom_rotate_shear(gparams)

               zoom/rotation/shear parameters */</comment>

            <if_stmt pos:start="135:13" pos:end="153:13"><if pos:start="135:13" pos:end="147:13">if <condition pos:start="135:16" pos:end="135:30">(<expr pos:start="135:17" pos:end="135:29"><call pos:start="135:17" pos:end="135:29"><name pos:start="135:17" pos:end="135:25">get_bits1</name><argument_list pos:start="135:26" pos:end="135:29">(<argument pos:start="135:27" pos:end="135:28"><expr pos:start="135:27" pos:end="135:28"><name pos:start="135:27" pos:end="135:28">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="135:32" pos:end="147:13">{<block_content pos:start="137:17" pos:end="145:69">

                <expr_stmt pos:start="137:17" pos:end="137:68"><expr pos:start="137:17" pos:end="137:67"><name pos:start="137:17" pos:end="137:32"><name pos:start="137:17" pos:end="137:17">s</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:27">globalmc</name><index pos:start="137:28" pos:end="137:32">[<expr pos:start="137:29" pos:end="137:31"><name pos:start="137:29" pos:end="137:31">ref</name></expr>]</index></name><operator pos:start="137:33" pos:end="137:33">.</operator><name pos:start="137:34" pos:end="137:40">zrs_exp</name>   <operator pos:start="137:44" pos:end="137:44">=</operator> <call pos:start="137:46" pos:end="137:67"><name pos:start="137:46" pos:end="137:63">svq3_get_ue_golomb</name><argument_list pos:start="137:64" pos:end="137:67">(<argument pos:start="137:65" pos:end="137:66"><expr pos:start="137:65" pos:end="137:66"><name pos:start="137:65" pos:end="137:66">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:69"><expr pos:start="139:17" pos:end="139:68"><name pos:start="139:17" pos:end="139:32"><name pos:start="139:17" pos:end="139:17">s</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:27">globalmc</name><index pos:start="139:28" pos:end="139:32">[<expr pos:start="139:29" pos:end="139:31"><name pos:start="139:29" pos:end="139:31">ref</name></expr>]</index></name><operator pos:start="139:33" pos:end="139:33">.</operator><name pos:start="139:34" pos:end="139:42"><name pos:start="139:34" pos:end="139:36">zrs</name><index pos:start="139:37" pos:end="139:39">[<expr pos:start="139:38" pos:end="139:38"><literal type="number" pos:start="139:38" pos:end="139:38">0</literal></expr>]</index><index pos:start="139:40" pos:end="139:42">[<expr pos:start="139:41" pos:end="139:41"><literal type="number" pos:start="139:41" pos:end="139:41">0</literal></expr>]</index></name> <operator pos:start="139:44" pos:end="139:44">=</operator> <call pos:start="139:46" pos:end="139:68"><name pos:start="139:46" pos:end="139:64">dirac_get_se_golomb</name><argument_list pos:start="139:65" pos:end="139:68">(<argument pos:start="139:66" pos:end="139:67"><expr pos:start="139:66" pos:end="139:67"><name pos:start="139:66" pos:end="139:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:69"><expr pos:start="141:17" pos:end="141:68"><name pos:start="141:17" pos:end="141:32"><name pos:start="141:17" pos:end="141:17">s</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:27">globalmc</name><index pos:start="141:28" pos:end="141:32">[<expr pos:start="141:29" pos:end="141:31"><name pos:start="141:29" pos:end="141:31">ref</name></expr>]</index></name><operator pos:start="141:33" pos:end="141:33">.</operator><name pos:start="141:34" pos:end="141:42"><name pos:start="141:34" pos:end="141:36">zrs</name><index pos:start="141:37" pos:end="141:39">[<expr pos:start="141:38" pos:end="141:38"><literal type="number" pos:start="141:38" pos:end="141:38">0</literal></expr>]</index><index pos:start="141:40" pos:end="141:42">[<expr pos:start="141:41" pos:end="141:41"><literal type="number" pos:start="141:41" pos:end="141:41">1</literal></expr>]</index></name> <operator pos:start="141:44" pos:end="141:44">=</operator> <call pos:start="141:46" pos:end="141:68"><name pos:start="141:46" pos:end="141:64">dirac_get_se_golomb</name><argument_list pos:start="141:65" pos:end="141:68">(<argument pos:start="141:66" pos:end="141:67"><expr pos:start="141:66" pos:end="141:67"><name pos:start="141:66" pos:end="141:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:69"><expr pos:start="143:17" pos:end="143:68"><name pos:start="143:17" pos:end="143:32"><name pos:start="143:17" pos:end="143:17">s</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:27">globalmc</name><index pos:start="143:28" pos:end="143:32">[<expr pos:start="143:29" pos:end="143:31"><name pos:start="143:29" pos:end="143:31">ref</name></expr>]</index></name><operator pos:start="143:33" pos:end="143:33">.</operator><name pos:start="143:34" pos:end="143:42"><name pos:start="143:34" pos:end="143:36">zrs</name><index pos:start="143:37" pos:end="143:39">[<expr pos:start="143:38" pos:end="143:38"><literal type="number" pos:start="143:38" pos:end="143:38">1</literal></expr>]</index><index pos:start="143:40" pos:end="143:42">[<expr pos:start="143:41" pos:end="143:41"><literal type="number" pos:start="143:41" pos:end="143:41">0</literal></expr>]</index></name> <operator pos:start="143:44" pos:end="143:44">=</operator> <call pos:start="143:46" pos:end="143:68"><name pos:start="143:46" pos:end="143:64">dirac_get_se_golomb</name><argument_list pos:start="143:65" pos:end="143:68">(<argument pos:start="143:66" pos:end="143:67"><expr pos:start="143:66" pos:end="143:67"><name pos:start="143:66" pos:end="143:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:69"><expr pos:start="145:17" pos:end="145:68"><name pos:start="145:17" pos:end="145:32"><name pos:start="145:17" pos:end="145:17">s</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:27">globalmc</name><index pos:start="145:28" pos:end="145:32">[<expr pos:start="145:29" pos:end="145:31"><name pos:start="145:29" pos:end="145:31">ref</name></expr>]</index></name><operator pos:start="145:33" pos:end="145:33">.</operator><name pos:start="145:34" pos:end="145:42"><name pos:start="145:34" pos:end="145:36">zrs</name><index pos:start="145:37" pos:end="145:39">[<expr pos:start="145:38" pos:end="145:38"><literal type="number" pos:start="145:38" pos:end="145:38">1</literal></expr>]</index><index pos:start="145:40" pos:end="145:42">[<expr pos:start="145:41" pos:end="145:41"><literal type="number" pos:start="145:41" pos:end="145:41">1</literal></expr>]</index></name> <operator pos:start="145:44" pos:end="145:44">=</operator> <call pos:start="145:46" pos:end="145:68"><name pos:start="145:46" pos:end="145:64">dirac_get_se_golomb</name><argument_list pos:start="145:65" pos:end="145:68">(<argument pos:start="145:66" pos:end="145:67"><expr pos:start="145:66" pos:end="145:67"><name pos:start="145:66" pos:end="145:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="147:15" pos:end="153:13">else <block pos:start="147:20" pos:end="153:13">{<block_content pos:start="149:17" pos:end="151:47">

                <expr_stmt pos:start="149:17" pos:end="149:47"><expr pos:start="149:17" pos:end="149:46"><name pos:start="149:17" pos:end="149:32"><name pos:start="149:17" pos:end="149:17">s</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:27">globalmc</name><index pos:start="149:28" pos:end="149:32">[<expr pos:start="149:29" pos:end="149:31"><name pos:start="149:29" pos:end="149:31">ref</name></expr>]</index></name><operator pos:start="149:33" pos:end="149:33">.</operator><name pos:start="149:34" pos:end="149:42"><name pos:start="149:34" pos:end="149:36">zrs</name><index pos:start="149:37" pos:end="149:39">[<expr pos:start="149:38" pos:end="149:38"><literal type="number" pos:start="149:38" pos:end="149:38">0</literal></expr>]</index><index pos:start="149:40" pos:end="149:42">[<expr pos:start="149:41" pos:end="149:41"><literal type="number" pos:start="149:41" pos:end="149:41">0</literal></expr>]</index></name> <operator pos:start="149:44" pos:end="149:44">=</operator> <literal type="number" pos:start="149:46" pos:end="149:46">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:47"><expr pos:start="151:17" pos:end="151:46"><name pos:start="151:17" pos:end="151:32"><name pos:start="151:17" pos:end="151:17">s</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:27">globalmc</name><index pos:start="151:28" pos:end="151:32">[<expr pos:start="151:29" pos:end="151:31"><name pos:start="151:29" pos:end="151:31">ref</name></expr>]</index></name><operator pos:start="151:33" pos:end="151:33">.</operator><name pos:start="151:34" pos:end="151:42"><name pos:start="151:34" pos:end="151:36">zrs</name><index pos:start="151:37" pos:end="151:39">[<expr pos:start="151:38" pos:end="151:38"><literal type="number" pos:start="151:38" pos:end="151:38">1</literal></expr>]</index><index pos:start="151:40" pos:end="151:42">[<expr pos:start="151:41" pos:end="151:41"><literal type="number" pos:start="151:41" pos:end="151:41">1</literal></expr>]</index></name> <operator pos:start="151:44" pos:end="151:44">=</operator> <literal type="number" pos:start="151:46" pos:end="151:46">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <comment type="block" pos:start="155:13" pos:end="155:50">/* [DIRAC_STD] perspective(gparams) */</comment>

            <if_stmt pos:start="157:13" pos:end="165:13"><if pos:start="157:13" pos:end="165:13">if <condition pos:start="157:16" pos:end="157:30">(<expr pos:start="157:17" pos:end="157:29"><call pos:start="157:17" pos:end="157:29"><name pos:start="157:17" pos:end="157:25">get_bits1</name><argument_list pos:start="157:26" pos:end="157:29">(<argument pos:start="157:27" pos:end="157:28"><expr pos:start="157:27" pos:end="157:28"><name pos:start="157:27" pos:end="157:28">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="157:32" pos:end="165:13">{<block_content pos:start="159:17" pos:end="163:75">

                <expr_stmt pos:start="159:17" pos:end="159:74"><expr pos:start="159:17" pos:end="159:73"><name pos:start="159:17" pos:end="159:32"><name pos:start="159:17" pos:end="159:17">s</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:27">globalmc</name><index pos:start="159:28" pos:end="159:32">[<expr pos:start="159:29" pos:end="159:31"><name pos:start="159:29" pos:end="159:31">ref</name></expr>]</index></name><operator pos:start="159:33" pos:end="159:33">.</operator><name pos:start="159:34" pos:end="159:48">perspective_exp</name> <operator pos:start="159:50" pos:end="159:50">=</operator> <call pos:start="159:52" pos:end="159:73"><name pos:start="159:52" pos:end="159:69">svq3_get_ue_golomb</name><argument_list pos:start="159:70" pos:end="159:73">(<argument pos:start="159:71" pos:end="159:72"><expr pos:start="159:71" pos:end="159:72"><name pos:start="159:71" pos:end="159:72">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:75"><expr pos:start="161:17" pos:end="161:74"><name pos:start="161:17" pos:end="161:32"><name pos:start="161:17" pos:end="161:17">s</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:27">globalmc</name><index pos:start="161:28" pos:end="161:32">[<expr pos:start="161:29" pos:end="161:31"><name pos:start="161:29" pos:end="161:31">ref</name></expr>]</index></name><operator pos:start="161:33" pos:end="161:33">.</operator><name pos:start="161:34" pos:end="161:47"><name pos:start="161:34" pos:end="161:44">perspective</name><index pos:start="161:45" pos:end="161:47">[<expr pos:start="161:46" pos:end="161:46"><literal type="number" pos:start="161:46" pos:end="161:46">0</literal></expr>]</index></name>  <operator pos:start="161:50" pos:end="161:50">=</operator> <call pos:start="161:52" pos:end="161:74"><name pos:start="161:52" pos:end="161:70">dirac_get_se_golomb</name><argument_list pos:start="161:71" pos:end="161:74">(<argument pos:start="161:72" pos:end="161:73"><expr pos:start="161:72" pos:end="161:73"><name pos:start="161:72" pos:end="161:73">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:75"><expr pos:start="163:17" pos:end="163:74"><name pos:start="163:17" pos:end="163:32"><name pos:start="163:17" pos:end="163:17">s</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:27">globalmc</name><index pos:start="163:28" pos:end="163:32">[<expr pos:start="163:29" pos:end="163:31"><name pos:start="163:29" pos:end="163:31">ref</name></expr>]</index></name><operator pos:start="163:33" pos:end="163:33">.</operator><name pos:start="163:34" pos:end="163:47"><name pos:start="163:34" pos:end="163:44">perspective</name><index pos:start="163:45" pos:end="163:47">[<expr pos:start="163:46" pos:end="163:46"><literal type="number" pos:start="163:46" pos:end="163:46">1</literal></expr>]</index></name>  <operator pos:start="163:50" pos:end="163:50">=</operator> <call pos:start="163:52" pos:end="163:74"><name pos:start="163:52" pos:end="163:70">dirac_get_se_golomb</name><argument_list pos:start="163:71" pos:end="163:74">(<argument pos:start="163:72" pos:end="163:73"><expr pos:start="163:72" pos:end="163:73"><name pos:start="163:72" pos:end="163:73">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="173:5" pos:end="175:53">/*[DIRAC_STD] 11.2.7 Picture prediction mode. prediction_mode()

      Picture prediction mode, not currently used. */</comment>

    <if_stmt pos:start="177:5" pos:end="183:5"><if pos:start="177:5" pos:end="183:5">if <condition pos:start="177:8" pos:end="177:31">(<expr pos:start="177:9" pos:end="177:30"><call pos:start="177:9" pos:end="177:30"><name pos:start="177:9" pos:end="177:26">svq3_get_ue_golomb</name><argument_list pos:start="177:27" pos:end="177:30">(<argument pos:start="177:28" pos:end="177:29"><expr pos:start="177:28" pos:end="177:29"><name pos:start="177:28" pos:end="177:29">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="177:33" pos:end="183:5">{<block_content pos:start="179:9" pos:end="181:18">

        <expr_stmt pos:start="179:9" pos:end="179:76"><expr pos:start="179:9" pos:end="179:75"><call pos:start="179:9" pos:end="179:75"><name pos:start="179:9" pos:end="179:14">av_log</name><argument_list pos:start="179:15" pos:end="179:75">(<argument pos:start="179:16" pos:end="179:23"><expr pos:start="179:16" pos:end="179:23"><name pos:start="179:16" pos:end="179:23"><name pos:start="179:16" pos:end="179:16">s</name><operator pos:start="179:17" pos:end="179:18">-&gt;</operator><name pos:start="179:19" pos:end="179:23">avctx</name></name></expr></argument>, <argument pos:start="179:26" pos:end="179:37"><expr pos:start="179:26" pos:end="179:37"><name pos:start="179:26" pos:end="179:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="179:40" pos:end="179:74"><expr pos:start="179:40" pos:end="179:74"><literal type="string" pos:start="179:40" pos:end="179:74">"Unknown picture prediction mode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="181:9" pos:end="181:18">return <expr pos:start="181:16" pos:end="181:17"><operator pos:start="181:16" pos:end="181:16">-</operator><literal type="number" pos:start="181:17" pos:end="181:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="187:5" pos:end="189:67">/* [DIRAC_STD] 11.2.8 Reference picture weight. reference_picture_weights()

       just data read, weight calculation will be done later on. */</comment>

    <expr_stmt pos:start="191:5" pos:end="191:28"><expr pos:start="191:5" pos:end="191:27"><name pos:start="191:5" pos:end="191:23"><name pos:start="191:5" pos:end="191:5">s</name><operator pos:start="191:6" pos:end="191:7">-&gt;</operator><name pos:start="191:8" pos:end="191:23">weight_log2denom</name></name> <operator pos:start="191:25" pos:end="191:25">=</operator> <literal type="number" pos:start="191:27" pos:end="191:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:28"><expr pos:start="193:5" pos:end="193:27"><name pos:start="193:5" pos:end="193:16"><name pos:start="193:5" pos:end="193:5">s</name><operator pos:start="193:6" pos:end="193:7">-&gt;</operator><name pos:start="193:8" pos:end="193:13">weight</name><index pos:start="193:14" pos:end="193:16">[<expr pos:start="193:15" pos:end="193:15"><literal type="number" pos:start="193:15" pos:end="193:15">0</literal></expr>]</index></name>        <operator pos:start="193:25" pos:end="193:25">=</operator> <literal type="number" pos:start="193:27" pos:end="193:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:28"><expr pos:start="195:5" pos:end="195:27"><name pos:start="195:5" pos:end="195:16"><name pos:start="195:5" pos:end="195:5">s</name><operator pos:start="195:6" pos:end="195:7">-&gt;</operator><name pos:start="195:8" pos:end="195:13">weight</name><index pos:start="195:14" pos:end="195:16">[<expr pos:start="195:15" pos:end="195:15"><literal type="number" pos:start="195:15" pos:end="195:15">1</literal></expr>]</index></name>        <operator pos:start="195:25" pos:end="195:25">=</operator> <literal type="number" pos:start="195:27" pos:end="195:27">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="199:5" pos:end="209:5"><if pos:start="199:5" pos:end="209:5">if <condition pos:start="199:8" pos:end="199:22">(<expr pos:start="199:9" pos:end="199:21"><call pos:start="199:9" pos:end="199:21"><name pos:start="199:9" pos:end="199:17">get_bits1</name><argument_list pos:start="199:18" pos:end="199:21">(<argument pos:start="199:19" pos:end="199:20"><expr pos:start="199:19" pos:end="199:20"><name pos:start="199:19" pos:end="199:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="199:24" pos:end="209:5">{<block_content pos:start="201:9" pos:end="207:51">

        <expr_stmt pos:start="201:9" pos:end="201:53"><expr pos:start="201:9" pos:end="201:52"><name pos:start="201:9" pos:end="201:27"><name pos:start="201:9" pos:end="201:9">s</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:27">weight_log2denom</name></name> <operator pos:start="201:29" pos:end="201:29">=</operator> <call pos:start="201:31" pos:end="201:52"><name pos:start="201:31" pos:end="201:48">svq3_get_ue_golomb</name><argument_list pos:start="201:49" pos:end="201:52">(<argument pos:start="201:50" pos:end="201:51"><expr pos:start="201:50" pos:end="201:51"><name pos:start="201:50" pos:end="201:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:47"><expr pos:start="203:9" pos:end="203:46"><name pos:start="203:9" pos:end="203:20"><name pos:start="203:9" pos:end="203:9">s</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:17">weight</name><index pos:start="203:18" pos:end="203:20">[<expr pos:start="203:19" pos:end="203:19"><literal type="number" pos:start="203:19" pos:end="203:19">0</literal></expr>]</index></name> <operator pos:start="203:22" pos:end="203:22">=</operator> <call pos:start="203:24" pos:end="203:46"><name pos:start="203:24" pos:end="203:42">dirac_get_se_golomb</name><argument_list pos:start="203:43" pos:end="203:46">(<argument pos:start="203:44" pos:end="203:45"><expr pos:start="203:44" pos:end="203:45"><name pos:start="203:44" pos:end="203:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="205:9" pos:end="207:51"><if pos:start="205:9" pos:end="207:51">if <condition pos:start="205:12" pos:end="205:29">(<expr pos:start="205:13" pos:end="205:28"><name pos:start="205:13" pos:end="205:23"><name pos:start="205:13" pos:end="205:13">s</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:23">num_refs</name></name> <operator pos:start="205:25" pos:end="205:26">==</operator> <literal type="number" pos:start="205:28" pos:end="205:28">2</literal></expr>)</condition><block type="pseudo" pos:start="207:13" pos:end="207:51"><block_content pos:start="207:13" pos:end="207:51">

            <expr_stmt pos:start="207:13" pos:end="207:51"><expr pos:start="207:13" pos:end="207:50"><name pos:start="207:13" pos:end="207:24"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:21">weight</name><index pos:start="207:22" pos:end="207:24">[<expr pos:start="207:23" pos:end="207:23"><literal type="number" pos:start="207:23" pos:end="207:23">1</literal></expr>]</index></name> <operator pos:start="207:26" pos:end="207:26">=</operator> <call pos:start="207:28" pos:end="207:50"><name pos:start="207:28" pos:end="207:46">dirac_get_se_golomb</name><argument_list pos:start="207:47" pos:end="207:50">(<argument pos:start="207:48" pos:end="207:49"><expr pos:start="207:48" pos:end="207:49"><name pos:start="207:48" pos:end="207:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="211:5" pos:end="211:13">return <expr pos:start="211:12" pos:end="211:12"><literal type="number" pos:start="211:12" pos:end="211:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
