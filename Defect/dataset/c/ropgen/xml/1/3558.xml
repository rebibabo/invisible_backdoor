<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3558.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:29">isa_register_portio_list</name><parameter_list pos:start="1:30" pos:end="5:61">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:39">ISADevice</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">dev</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:60"><decl pos:start="1:47" pos:end="1:60"><type pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:54">uint16_t</name></type> <name pos:start="1:56" pos:end="1:60">start</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:65"><decl pos:start="3:31" pos:end="3:65"><type pos:start="3:31" pos:end="3:65"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:54">MemoryRegionPortio</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:65">pio_start</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:42"><decl pos:start="5:31" pos:end="5:42"><type pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:34">void</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:42">opaque</name></decl></parameter>, <parameter pos:start="5:45" pos:end="5:60"><decl pos:start="5:45" pos:end="5:60"><type pos:start="5:45" pos:end="5:60"><specifier pos:start="5:45" pos:end="5:49">const</specifier> <name pos:start="5:51" pos:end="5:54">char</name> <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:60">name</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="37:1">{<block_content pos:start="9:5" pos:end="35:63">

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">PortioList</name></type> <name pos:start="9:16" pos:end="9:22">piolist</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="17:48">/* START is how we should treat DEV, regardless of the actual

       contents of the portio array.  This is how the old code

       actually handled e.g. the FDC device.  */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:19">isa_init_ioport</name><argument_list pos:start="19:20" pos:end="19:31">(<argument pos:start="19:21" pos:end="19:23"><expr pos:start="19:21" pos:end="19:23"><name pos:start="19:21" pos:end="19:23">dev</name></expr></argument>, <argument pos:start="19:26" pos:end="19:30"><expr pos:start="19:26" pos:end="19:30"><name pos:start="19:26" pos:end="19:30">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="31:34">/* FIXME: the device should store created PortioList in its state.  Note

       that DEV can be NULL here and that single device can register several

       portio lists.  Current implementation is leaking memory allocated

       in portio_list_init.  The leak is not critical because it happens only

       at initialization time.  */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:69"><expr pos:start="33:5" pos:end="33:68"><call pos:start="33:5" pos:end="33:68"><name pos:start="33:5" pos:end="33:20">portio_list_init</name><argument_list pos:start="33:21" pos:end="33:68">(<argument pos:start="33:22" pos:end="33:29"><expr pos:start="33:22" pos:end="33:29"><operator pos:start="33:22" pos:end="33:22">&amp;</operator><name pos:start="33:23" pos:end="33:29">piolist</name></expr></argument>, <argument pos:start="33:32" pos:end="33:42"><expr pos:start="33:32" pos:end="33:42"><call pos:start="33:32" pos:end="33:42"><name pos:start="33:32" pos:end="33:37">OBJECT</name><argument_list pos:start="33:38" pos:end="33:42">(<argument pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><name pos:start="33:39" pos:end="33:41">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:45" pos:end="33:53"><expr pos:start="33:45" pos:end="33:53"><name pos:start="33:45" pos:end="33:53">pio_start</name></expr></argument>, <argument pos:start="33:56" pos:end="33:61"><expr pos:start="33:56" pos:end="33:61"><name pos:start="33:56" pos:end="33:61">opaque</name></expr></argument>, <argument pos:start="33:64" pos:end="33:67"><expr pos:start="33:64" pos:end="33:67"><name pos:start="33:64" pos:end="33:67">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:63"><expr pos:start="35:5" pos:end="35:62"><call pos:start="35:5" pos:end="35:62"><name pos:start="35:5" pos:end="35:19">portio_list_add</name><argument_list pos:start="35:20" pos:end="35:62">(<argument pos:start="35:21" pos:end="35:28"><expr pos:start="35:21" pos:end="35:28"><operator pos:start="35:21" pos:end="35:21">&amp;</operator><name pos:start="35:22" pos:end="35:28">piolist</name></expr></argument>, <argument pos:start="35:31" pos:end="35:54"><expr pos:start="35:31" pos:end="35:54"><name pos:start="35:31" pos:end="35:54"><name pos:start="35:31" pos:end="35:36">isabus</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:54">address_space_io</name></name></expr></argument>, <argument pos:start="35:57" pos:end="35:61"><expr pos:start="35:57" pos:end="35:61"><name pos:start="35:57" pos:end="35:61">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
