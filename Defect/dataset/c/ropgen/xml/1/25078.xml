<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25078.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">test_opts_parse_size</name><parameter_list pos:start="1:33" pos:end="1:38">(<parameter pos:start="1:34" pos:end="1:37"><decl pos:start="1:34" pos:end="1:37"><type pos:start="1:34" pos:end="1:37"><name pos:start="1:34" pos:end="1:37">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="181:1">{<block_content pos:start="5:5" pos:end="179:35">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">err</name> <init pos:start="5:16" pos:end="5:21">= <expr pos:start="5:18" pos:end="5:21"><name pos:start="5:18" pos:end="5:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">QemuOpts</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">opts</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:26">/* Lower limit zero */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:74"><expr pos:start="13:5" pos:end="13:73"><name pos:start="13:5" pos:end="13:8">opts</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:73"><name pos:start="13:12" pos:end="13:26">qemu_opts_parse</name><argument_list pos:start="13:27" pos:end="13:73">(<argument pos:start="13:28" pos:end="13:40"><expr pos:start="13:28" pos:end="13:40"><operator pos:start="13:28" pos:end="13:28">&amp;</operator><name pos:start="13:29" pos:end="13:40">opts_list_02</name></expr></argument>, <argument pos:start="13:43" pos:end="13:51"><expr pos:start="13:43" pos:end="13:51"><literal type="string" pos:start="13:43" pos:end="13:51">"size1=0"</literal></expr></argument>, <argument pos:start="13:54" pos:end="13:58"><expr pos:start="13:54" pos:end="13:58"><name pos:start="13:54" pos:end="13:58">false</name></expr></argument>, <argument pos:start="13:61" pos:end="13:72"><expr pos:start="13:61" pos:end="13:72"><operator pos:start="13:61" pos:end="13:61">&amp;</operator><name pos:start="13:62" pos:end="13:72">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><call pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:20">g_assert_cmpuint</name><argument_list pos:start="15:21" pos:end="15:45">(<argument pos:start="15:22" pos:end="15:37"><expr pos:start="15:22" pos:end="15:37"><call pos:start="15:22" pos:end="15:37"><name pos:start="15:22" pos:end="15:31">opts_count</name><argument_list pos:start="15:32" pos:end="15:37">(<argument pos:start="15:33" pos:end="15:36"><expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:40" pos:end="15:41"><expr pos:start="15:40" pos:end="15:41"><operator pos:start="15:40" pos:end="15:41">==</operator></expr></argument>, <argument pos:start="15:44" pos:end="15:44"><expr pos:start="15:44" pos:end="15:44"><literal type="number" pos:start="15:44" pos:end="15:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:65"><expr pos:start="17:5" pos:end="17:64"><call pos:start="17:5" pos:end="17:64"><name pos:start="17:5" pos:end="17:20">g_assert_cmpuint</name><argument_list pos:start="17:21" pos:end="17:64">(<argument pos:start="17:22" pos:end="17:56"><expr pos:start="17:22" pos:end="17:56"><call pos:start="17:22" pos:end="17:56"><name pos:start="17:22" pos:end="17:38">qemu_opt_get_size</name><argument_list pos:start="17:39" pos:end="17:56">(<argument pos:start="17:40" pos:end="17:43"><expr pos:start="17:40" pos:end="17:43"><name pos:start="17:40" pos:end="17:43">opts</name></expr></argument>, <argument pos:start="17:46" pos:end="17:52"><expr pos:start="17:46" pos:end="17:52"><literal type="string" pos:start="17:46" pos:end="17:52">"size1"</literal></expr></argument>, <argument pos:start="17:55" pos:end="17:55"><expr pos:start="17:55" pos:end="17:55"><literal type="number" pos:start="17:55" pos:end="17:55">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:59" pos:end="17:60"><expr pos:start="17:59" pos:end="17:60"><operator pos:start="17:59" pos:end="17:60">==</operator></expr></argument>, <argument pos:start="17:63" pos:end="17:63"><expr pos:start="17:63" pos:end="17:63"><literal type="number" pos:start="17:63" pos:end="17:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:70">/* Note: precision is 53 bits since we're parsing with strtod() */</comment>



    <comment type="block" pos:start="25:5" pos:end="25:55">/* Around limit of precision: 2^53-1, 2^53, 2^54 */</comment>

    <expr_stmt pos:start="27:5" pos:end="35:48"><expr pos:start="27:5" pos:end="35:47"><name pos:start="27:5" pos:end="27:8">opts</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="35:47"><name pos:start="27:12" pos:end="27:26">qemu_opts_parse</name><argument_list pos:start="27:27" pos:end="35:47">(<argument pos:start="27:28" pos:end="27:40"><expr pos:start="27:28" pos:end="27:40"><operator pos:start="27:28" pos:end="27:28">&amp;</operator><name pos:start="27:29" pos:end="27:40">opts_list_02</name></expr></argument>,

                           <argument pos:start="29:28" pos:end="33:51"><expr pos:start="29:28" pos:end="33:51"><literal type="string" pos:start="29:28" pos:end="29:52">"size1=9007199254740991,"</literal>

                           <literal type="string" pos:start="31:28" pos:end="31:52">"size2=9007199254740992,"</literal>

                           <literal type="string" pos:start="33:28" pos:end="33:51">"size3=9007199254740993"</literal></expr></argument>,

                           <argument pos:start="35:28" pos:end="35:32"><expr pos:start="35:28" pos:end="35:32"><name pos:start="35:28" pos:end="35:32">false</name></expr></argument>, <argument pos:start="35:35" pos:end="35:46"><expr pos:start="35:35" pos:end="35:46"><operator pos:start="35:35" pos:end="35:35">&amp;</operator><name pos:start="35:36" pos:end="35:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:46"><expr pos:start="37:5" pos:end="37:45"><call pos:start="37:5" pos:end="37:45"><name pos:start="37:5" pos:end="37:20">g_assert_cmpuint</name><argument_list pos:start="37:21" pos:end="37:45">(<argument pos:start="37:22" pos:end="37:37"><expr pos:start="37:22" pos:end="37:37"><call pos:start="37:22" pos:end="37:37"><name pos:start="37:22" pos:end="37:31">opts_count</name><argument_list pos:start="37:32" pos:end="37:37">(<argument pos:start="37:33" pos:end="37:36"><expr pos:start="37:33" pos:end="37:36"><name pos:start="37:33" pos:end="37:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:40" pos:end="37:41"><expr pos:start="37:40" pos:end="37:41"><operator pos:start="37:40" pos:end="37:41">==</operator></expr></argument>, <argument pos:start="37:44" pos:end="37:44"><expr pos:start="37:44" pos:end="37:44"><literal type="number" pos:start="37:44" pos:end="37:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:43"><expr pos:start="39:5" pos:end="41:42"><call pos:start="39:5" pos:end="41:42"><name pos:start="39:5" pos:end="39:19">g_assert_cmphex</name><argument_list pos:start="39:20" pos:end="41:42">(<argument pos:start="39:21" pos:end="39:55"><expr pos:start="39:21" pos:end="39:55"><call pos:start="39:21" pos:end="39:55"><name pos:start="39:21" pos:end="39:37">qemu_opt_get_size</name><argument_list pos:start="39:38" pos:end="39:55">(<argument pos:start="39:39" pos:end="39:42"><expr pos:start="39:39" pos:end="39:42"><name pos:start="39:39" pos:end="39:42">opts</name></expr></argument>, <argument pos:start="39:45" pos:end="39:51"><expr pos:start="39:45" pos:end="39:51"><literal type="string" pos:start="39:45" pos:end="39:51">"size1"</literal></expr></argument>, <argument pos:start="39:54" pos:end="39:54"><expr pos:start="39:54" pos:end="39:54"><literal type="number" pos:start="39:54" pos:end="39:54">1</literal></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="41:22" pos:end="41:23"><expr pos:start="41:22" pos:end="41:23"><operator pos:start="41:22" pos:end="41:23">==</operator></expr></argument>, <argument pos:start="41:26" pos:end="41:41"><expr pos:start="41:26" pos:end="41:41"><literal type="number" pos:start="41:26" pos:end="41:41">0x1fffffffffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:43"><expr pos:start="43:5" pos:end="45:42"><call pos:start="43:5" pos:end="45:42"><name pos:start="43:5" pos:end="43:19">g_assert_cmphex</name><argument_list pos:start="43:20" pos:end="45:42">(<argument pos:start="43:21" pos:end="43:55"><expr pos:start="43:21" pos:end="43:55"><call pos:start="43:21" pos:end="43:55"><name pos:start="43:21" pos:end="43:37">qemu_opt_get_size</name><argument_list pos:start="43:38" pos:end="43:55">(<argument pos:start="43:39" pos:end="43:42"><expr pos:start="43:39" pos:end="43:42"><name pos:start="43:39" pos:end="43:42">opts</name></expr></argument>, <argument pos:start="43:45" pos:end="43:51"><expr pos:start="43:45" pos:end="43:51"><literal type="string" pos:start="43:45" pos:end="43:51">"size2"</literal></expr></argument>, <argument pos:start="43:54" pos:end="43:54"><expr pos:start="43:54" pos:end="43:54"><literal type="number" pos:start="43:54" pos:end="43:54">1</literal></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="45:22" pos:end="45:23"><expr pos:start="45:22" pos:end="45:23"><operator pos:start="45:22" pos:end="45:23">==</operator></expr></argument>, <argument pos:start="45:26" pos:end="45:41"><expr pos:start="45:26" pos:end="45:41"><literal type="number" pos:start="45:26" pos:end="45:41">0x20000000000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="49:43"><expr pos:start="47:5" pos:end="49:42"><call pos:start="47:5" pos:end="49:42"><name pos:start="47:5" pos:end="47:19">g_assert_cmphex</name><argument_list pos:start="47:20" pos:end="49:42">(<argument pos:start="47:21" pos:end="47:55"><expr pos:start="47:21" pos:end="47:55"><call pos:start="47:21" pos:end="47:55"><name pos:start="47:21" pos:end="47:37">qemu_opt_get_size</name><argument_list pos:start="47:38" pos:end="47:55">(<argument pos:start="47:39" pos:end="47:42"><expr pos:start="47:39" pos:end="47:42"><name pos:start="47:39" pos:end="47:42">opts</name></expr></argument>, <argument pos:start="47:45" pos:end="47:51"><expr pos:start="47:45" pos:end="47:51"><literal type="string" pos:start="47:45" pos:end="47:51">"size3"</literal></expr></argument>, <argument pos:start="47:54" pos:end="47:54"><expr pos:start="47:54" pos:end="47:54"><literal type="number" pos:start="47:54" pos:end="47:54">1</literal></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="49:22" pos:end="49:23"><expr pos:start="49:22" pos:end="49:23"><operator pos:start="49:22" pos:end="49:23">==</operator></expr></argument>, <argument pos:start="49:26" pos:end="49:41"><expr pos:start="49:26" pos:end="49:41"><literal type="number" pos:start="49:26" pos:end="49:41">0x20000000000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:70">/* Close to signed upper limit 0x7ffffffffffffc00 (53 msbs set) */</comment>

    <expr_stmt pos:start="55:5" pos:end="61:48"><expr pos:start="55:5" pos:end="61:47"><name pos:start="55:5" pos:end="55:8">opts</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <call pos:start="55:12" pos:end="61:47"><name pos:start="55:12" pos:end="55:26">qemu_opts_parse</name><argument_list pos:start="55:27" pos:end="61:47">(<argument pos:start="55:28" pos:end="55:40"><expr pos:start="55:28" pos:end="55:40"><operator pos:start="55:28" pos:end="55:28">&amp;</operator><name pos:start="55:29" pos:end="55:40">opts_list_02</name></expr></argument>,

                           <argument pos:start="57:28" pos:end="59:54"><expr pos:start="57:28" pos:end="59:54"><literal type="string" pos:start="57:28" pos:end="57:55">"size1=9223372036854774784,"</literal> <comment type="block" pos:start="57:57" pos:end="57:78">/* 7ffffffffffffc00 */</comment>

                           <literal type="string" pos:start="59:28" pos:end="59:54">"size2=9223372036854775295"</literal></expr></argument>, <comment type="block" pos:start="59:57" pos:end="59:78">/* 7ffffffffffffdff */</comment>

                           <argument pos:start="61:28" pos:end="61:32"><expr pos:start="61:28" pos:end="61:32"><name pos:start="61:28" pos:end="61:32">false</name></expr></argument>, <argument pos:start="61:35" pos:end="61:46"><expr pos:start="61:35" pos:end="61:46"><operator pos:start="61:35" pos:end="61:35">&amp;</operator><name pos:start="61:36" pos:end="61:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:46"><expr pos:start="63:5" pos:end="63:45"><call pos:start="63:5" pos:end="63:45"><name pos:start="63:5" pos:end="63:20">g_assert_cmpuint</name><argument_list pos:start="63:21" pos:end="63:45">(<argument pos:start="63:22" pos:end="63:37"><expr pos:start="63:22" pos:end="63:37"><call pos:start="63:22" pos:end="63:37"><name pos:start="63:22" pos:end="63:31">opts_count</name><argument_list pos:start="63:32" pos:end="63:37">(<argument pos:start="63:33" pos:end="63:36"><expr pos:start="63:33" pos:end="63:36"><name pos:start="63:33" pos:end="63:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="63:40" pos:end="63:41"><expr pos:start="63:40" pos:end="63:41"><operator pos:start="63:40" pos:end="63:41">==</operator></expr></argument>, <argument pos:start="63:44" pos:end="63:44"><expr pos:start="63:44" pos:end="63:44"><literal type="number" pos:start="63:44" pos:end="63:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="67:45"><expr pos:start="65:5" pos:end="67:44"><call pos:start="65:5" pos:end="67:44"><name pos:start="65:5" pos:end="65:19">g_assert_cmphex</name><argument_list pos:start="65:20" pos:end="67:44">(<argument pos:start="65:21" pos:end="65:55"><expr pos:start="65:21" pos:end="65:55"><call pos:start="65:21" pos:end="65:55"><name pos:start="65:21" pos:end="65:37">qemu_opt_get_size</name><argument_list pos:start="65:38" pos:end="65:55">(<argument pos:start="65:39" pos:end="65:42"><expr pos:start="65:39" pos:end="65:42"><name pos:start="65:39" pos:end="65:42">opts</name></expr></argument>, <argument pos:start="65:45" pos:end="65:51"><expr pos:start="65:45" pos:end="65:51"><literal type="string" pos:start="65:45" pos:end="65:51">"size1"</literal></expr></argument>, <argument pos:start="65:54" pos:end="65:54"><expr pos:start="65:54" pos:end="65:54"><literal type="number" pos:start="65:54" pos:end="65:54">1</literal></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="67:22" pos:end="67:23"><expr pos:start="67:22" pos:end="67:23"><operator pos:start="67:22" pos:end="67:23">==</operator></expr></argument>, <argument pos:start="67:26" pos:end="67:43"><expr pos:start="67:26" pos:end="67:43"><literal type="number" pos:start="67:26" pos:end="67:43">0x7ffffffffffffc00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="71:45"><expr pos:start="69:5" pos:end="71:44"><call pos:start="69:5" pos:end="71:44"><name pos:start="69:5" pos:end="69:19">g_assert_cmphex</name><argument_list pos:start="69:20" pos:end="71:44">(<argument pos:start="69:21" pos:end="69:55"><expr pos:start="69:21" pos:end="69:55"><call pos:start="69:21" pos:end="69:55"><name pos:start="69:21" pos:end="69:37">qemu_opt_get_size</name><argument_list pos:start="69:38" pos:end="69:55">(<argument pos:start="69:39" pos:end="69:42"><expr pos:start="69:39" pos:end="69:42"><name pos:start="69:39" pos:end="69:42">opts</name></expr></argument>, <argument pos:start="69:45" pos:end="69:51"><expr pos:start="69:45" pos:end="69:51"><literal type="string" pos:start="69:45" pos:end="69:51">"size2"</literal></expr></argument>, <argument pos:start="69:54" pos:end="69:54"><expr pos:start="69:54" pos:end="69:54"><literal type="number" pos:start="69:54" pos:end="69:54">1</literal></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="71:22" pos:end="71:23"><expr pos:start="71:22" pos:end="71:23"><operator pos:start="71:22" pos:end="71:23">==</operator></expr></argument>, <argument pos:start="71:26" pos:end="71:43"><expr pos:start="71:26" pos:end="71:43"><literal type="number" pos:start="71:26" pos:end="71:43">0x7ffffffffffffc00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:70">/* Close to actual upper limit 0xfffffffffffff800 (53 msbs set) */</comment>

    <expr_stmt pos:start="77:5" pos:end="83:48"><expr pos:start="77:5" pos:end="83:47"><name pos:start="77:5" pos:end="77:8">opts</name> <operator pos:start="77:10" pos:end="77:10">=</operator> <call pos:start="77:12" pos:end="83:47"><name pos:start="77:12" pos:end="77:26">qemu_opts_parse</name><argument_list pos:start="77:27" pos:end="83:47">(<argument pos:start="77:28" pos:end="77:40"><expr pos:start="77:28" pos:end="77:40"><operator pos:start="77:28" pos:end="77:28">&amp;</operator><name pos:start="77:29" pos:end="77:40">opts_list_02</name></expr></argument>,

                           <argument pos:start="79:28" pos:end="81:55"><expr pos:start="79:28" pos:end="81:55"><literal type="string" pos:start="79:28" pos:end="79:56">"size1=18446744073709549568,"</literal> <comment type="block" pos:start="79:58" pos:end="79:79">/* fffffffffffff800 */</comment>

                           <literal type="string" pos:start="81:28" pos:end="81:55">"size2=18446744073709550591"</literal></expr></argument>, <comment type="block" pos:start="81:58" pos:end="81:79">/* fffffffffffffbff */</comment>

                           <argument pos:start="83:28" pos:end="83:32"><expr pos:start="83:28" pos:end="83:32"><name pos:start="83:28" pos:end="83:32">false</name></expr></argument>, <argument pos:start="83:35" pos:end="83:46"><expr pos:start="83:35" pos:end="83:46"><operator pos:start="83:35" pos:end="83:35">&amp;</operator><name pos:start="83:36" pos:end="83:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:46"><expr pos:start="85:5" pos:end="85:45"><call pos:start="85:5" pos:end="85:45"><name pos:start="85:5" pos:end="85:20">g_assert_cmpuint</name><argument_list pos:start="85:21" pos:end="85:45">(<argument pos:start="85:22" pos:end="85:37"><expr pos:start="85:22" pos:end="85:37"><call pos:start="85:22" pos:end="85:37"><name pos:start="85:22" pos:end="85:31">opts_count</name><argument_list pos:start="85:32" pos:end="85:37">(<argument pos:start="85:33" pos:end="85:36"><expr pos:start="85:33" pos:end="85:36"><name pos:start="85:33" pos:end="85:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:40" pos:end="85:41"><expr pos:start="85:40" pos:end="85:41"><operator pos:start="85:40" pos:end="85:41">==</operator></expr></argument>, <argument pos:start="85:44" pos:end="85:44"><expr pos:start="85:44" pos:end="85:44"><literal type="number" pos:start="85:44" pos:end="85:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="89:45"><expr pos:start="87:5" pos:end="89:44"><call pos:start="87:5" pos:end="89:44"><name pos:start="87:5" pos:end="87:19">g_assert_cmphex</name><argument_list pos:start="87:20" pos:end="89:44">(<argument pos:start="87:21" pos:end="87:55"><expr pos:start="87:21" pos:end="87:55"><call pos:start="87:21" pos:end="87:55"><name pos:start="87:21" pos:end="87:37">qemu_opt_get_size</name><argument_list pos:start="87:38" pos:end="87:55">(<argument pos:start="87:39" pos:end="87:42"><expr pos:start="87:39" pos:end="87:42"><name pos:start="87:39" pos:end="87:42">opts</name></expr></argument>, <argument pos:start="87:45" pos:end="87:51"><expr pos:start="87:45" pos:end="87:51"><literal type="string" pos:start="87:45" pos:end="87:51">"size1"</literal></expr></argument>, <argument pos:start="87:54" pos:end="87:54"><expr pos:start="87:54" pos:end="87:54"><literal type="number" pos:start="87:54" pos:end="87:54">1</literal></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="89:22" pos:end="89:23"><expr pos:start="89:22" pos:end="89:23"><operator pos:start="89:22" pos:end="89:23">==</operator></expr></argument>, <argument pos:start="89:26" pos:end="89:43"><expr pos:start="89:26" pos:end="89:43"><literal type="number" pos:start="89:26" pos:end="89:43">0xfffffffffffff800</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="93:45"><expr pos:start="91:5" pos:end="93:44"><call pos:start="91:5" pos:end="93:44"><name pos:start="91:5" pos:end="91:19">g_assert_cmphex</name><argument_list pos:start="91:20" pos:end="93:44">(<argument pos:start="91:21" pos:end="91:55"><expr pos:start="91:21" pos:end="91:55"><call pos:start="91:21" pos:end="91:55"><name pos:start="91:21" pos:end="91:37">qemu_opt_get_size</name><argument_list pos:start="91:38" pos:end="91:55">(<argument pos:start="91:39" pos:end="91:42"><expr pos:start="91:39" pos:end="91:42"><name pos:start="91:39" pos:end="91:42">opts</name></expr></argument>, <argument pos:start="91:45" pos:end="91:51"><expr pos:start="91:45" pos:end="91:51"><literal type="string" pos:start="91:45" pos:end="91:51">"size2"</literal></expr></argument>, <argument pos:start="91:54" pos:end="91:54"><expr pos:start="91:54" pos:end="91:54"><literal type="number" pos:start="91:54" pos:end="91:54">1</literal></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="93:22" pos:end="93:23"><expr pos:start="93:22" pos:end="93:23"><operator pos:start="93:22" pos:end="93:23">==</operator></expr></argument>, <argument pos:start="93:26" pos:end="93:43"><expr pos:start="93:26" pos:end="93:43"><literal type="number" pos:start="93:26" pos:end="93:43">0xfffffffffffff800</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:23">/* Beyond limits */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:67"><expr pos:start="99:5" pos:end="99:66"><name pos:start="99:5" pos:end="99:8">opts</name> <operator pos:start="99:10" pos:end="99:10">=</operator> <call pos:start="99:12" pos:end="99:66"><name pos:start="99:12" pos:end="99:26">qemu_opts_parse</name><argument_list pos:start="99:27" pos:end="99:66">(<argument pos:start="99:28" pos:end="99:40"><expr pos:start="99:28" pos:end="99:40"><operator pos:start="99:28" pos:end="99:28">&amp;</operator><name pos:start="99:29" pos:end="99:40">opts_list_02</name></expr></argument>, <argument pos:start="99:43" pos:end="99:52"><expr pos:start="99:43" pos:end="99:52"><literal type="string" pos:start="99:43" pos:end="99:52">"size1=-1"</literal></expr></argument>, <argument pos:start="99:55" pos:end="99:59"><expr pos:start="99:55" pos:end="99:59"><name pos:start="99:55" pos:end="99:59">false</name></expr></argument>, <argument pos:start="99:62" pos:end="99:65"><expr pos:start="99:62" pos:end="99:65"><operator pos:start="99:62" pos:end="99:62">&amp;</operator><name pos:start="99:63" pos:end="99:65">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:30"><expr pos:start="101:5" pos:end="101:29"><call pos:start="101:5" pos:end="101:29"><name pos:start="101:5" pos:end="101:23">error_free_or_abort</name><argument_list pos:start="101:24" pos:end="101:29">(<argument pos:start="101:25" pos:end="101:28"><expr pos:start="101:25" pos:end="101:28"><operator pos:start="101:25" pos:end="101:25">&amp;</operator><name pos:start="101:26" pos:end="101:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:20"><expr pos:start="103:5" pos:end="103:19"><call pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:12">g_assert</name><argument_list pos:start="103:13" pos:end="103:19">(<argument pos:start="103:14" pos:end="103:18"><expr pos:start="103:14" pos:end="103:18"><operator pos:start="103:14" pos:end="103:14">!</operator><name pos:start="103:15" pos:end="103:18">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="109:48"><expr pos:start="105:5" pos:end="109:47"><name pos:start="105:5" pos:end="105:8">opts</name> <operator pos:start="105:10" pos:end="105:10">=</operator> <call pos:start="105:12" pos:end="109:47"><name pos:start="105:12" pos:end="105:26">qemu_opts_parse</name><argument_list pos:start="105:27" pos:end="109:47">(<argument pos:start="105:28" pos:end="105:40"><expr pos:start="105:28" pos:end="105:40"><operator pos:start="105:28" pos:end="105:28">&amp;</operator><name pos:start="105:29" pos:end="105:40">opts_list_02</name></expr></argument>,

                           <argument pos:start="107:28" pos:end="107:55"><expr pos:start="107:28" pos:end="107:55"><literal type="string" pos:start="107:28" pos:end="107:55">"size1=18446744073709550592"</literal></expr></argument>, <comment type="block" pos:start="107:58" pos:end="107:79">/* fffffffffffffc00 */</comment>

                           <argument pos:start="109:28" pos:end="109:32"><expr pos:start="109:28" pos:end="109:32"><name pos:start="109:28" pos:end="109:32">false</name></expr></argument>, <argument pos:start="109:35" pos:end="109:46"><expr pos:start="109:35" pos:end="109:46"><operator pos:start="109:35" pos:end="109:35">&amp;</operator><name pos:start="109:36" pos:end="109:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="111:5" pos:end="111:28">/* BUG: should reject */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:46"><expr pos:start="113:5" pos:end="113:45"><call pos:start="113:5" pos:end="113:45"><name pos:start="113:5" pos:end="113:20">g_assert_cmpuint</name><argument_list pos:start="113:21" pos:end="113:45">(<argument pos:start="113:22" pos:end="113:37"><expr pos:start="113:22" pos:end="113:37"><call pos:start="113:22" pos:end="113:37"><name pos:start="113:22" pos:end="113:31">opts_count</name><argument_list pos:start="113:32" pos:end="113:37">(<argument pos:start="113:33" pos:end="113:36"><expr pos:start="113:33" pos:end="113:36"><name pos:start="113:33" pos:end="113:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="113:40" pos:end="113:41"><expr pos:start="113:40" pos:end="113:41"><operator pos:start="113:40" pos:end="113:41">==</operator></expr></argument>, <argument pos:start="113:44" pos:end="113:44"><expr pos:start="113:44" pos:end="113:44"><literal type="number" pos:start="113:44" pos:end="113:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:65"><expr pos:start="115:5" pos:end="115:64"><call pos:start="115:5" pos:end="115:64"><name pos:start="115:5" pos:end="115:20">g_assert_cmpuint</name><argument_list pos:start="115:21" pos:end="115:64">(<argument pos:start="115:22" pos:end="115:56"><expr pos:start="115:22" pos:end="115:56"><call pos:start="115:22" pos:end="115:56"><name pos:start="115:22" pos:end="115:38">qemu_opt_get_size</name><argument_list pos:start="115:39" pos:end="115:56">(<argument pos:start="115:40" pos:end="115:43"><expr pos:start="115:40" pos:end="115:43"><name pos:start="115:40" pos:end="115:43">opts</name></expr></argument>, <argument pos:start="115:46" pos:end="115:52"><expr pos:start="115:46" pos:end="115:52"><literal type="string" pos:start="115:46" pos:end="115:52">"size1"</literal></expr></argument>, <argument pos:start="115:55" pos:end="115:55"><expr pos:start="115:55" pos:end="115:55"><literal type="number" pos:start="115:55" pos:end="115:55">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="115:59" pos:end="115:60"><expr pos:start="115:59" pos:end="115:60"><operator pos:start="115:59" pos:end="115:60">==</operator></expr></argument>, <argument pos:start="115:63" pos:end="115:63"><expr pos:start="115:63" pos:end="115:63"><literal type="number" pos:start="115:63" pos:end="115:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="119:5" pos:end="119:18">/* Suffixes */</comment>

    <expr_stmt pos:start="121:5" pos:end="123:48"><expr pos:start="121:5" pos:end="123:47"><name pos:start="121:5" pos:end="121:8">opts</name> <operator pos:start="121:10" pos:end="121:10">=</operator> <call pos:start="121:12" pos:end="123:47"><name pos:start="121:12" pos:end="121:26">qemu_opts_parse</name><argument_list pos:start="121:27" pos:end="123:47">(<argument pos:start="121:28" pos:end="121:40"><expr pos:start="121:28" pos:end="121:40"><operator pos:start="121:28" pos:end="121:28">&amp;</operator><name pos:start="121:29" pos:end="121:40">opts_list_02</name></expr></argument>, <argument pos:start="121:43" pos:end="121:72"><expr pos:start="121:43" pos:end="121:72"><literal type="string" pos:start="121:43" pos:end="121:72">"size1=8b,size2=1.5k,size3=2M"</literal></expr></argument>,

                           <argument pos:start="123:28" pos:end="123:32"><expr pos:start="123:28" pos:end="123:32"><name pos:start="123:28" pos:end="123:32">false</name></expr></argument>, <argument pos:start="123:35" pos:end="123:46"><expr pos:start="123:35" pos:end="123:46"><operator pos:start="123:35" pos:end="123:35">&amp;</operator><name pos:start="123:36" pos:end="123:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:46"><expr pos:start="125:5" pos:end="125:45"><call pos:start="125:5" pos:end="125:45"><name pos:start="125:5" pos:end="125:20">g_assert_cmpuint</name><argument_list pos:start="125:21" pos:end="125:45">(<argument pos:start="125:22" pos:end="125:37"><expr pos:start="125:22" pos:end="125:37"><call pos:start="125:22" pos:end="125:37"><name pos:start="125:22" pos:end="125:31">opts_count</name><argument_list pos:start="125:32" pos:end="125:37">(<argument pos:start="125:33" pos:end="125:36"><expr pos:start="125:33" pos:end="125:36"><name pos:start="125:33" pos:end="125:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="125:40" pos:end="125:41"><expr pos:start="125:40" pos:end="125:41"><operator pos:start="125:40" pos:end="125:41">==</operator></expr></argument>, <argument pos:start="125:44" pos:end="125:44"><expr pos:start="125:44" pos:end="125:44"><literal type="number" pos:start="125:44" pos:end="125:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:64"><expr pos:start="127:5" pos:end="127:63"><call pos:start="127:5" pos:end="127:63"><name pos:start="127:5" pos:end="127:19">g_assert_cmphex</name><argument_list pos:start="127:20" pos:end="127:63">(<argument pos:start="127:21" pos:end="127:55"><expr pos:start="127:21" pos:end="127:55"><call pos:start="127:21" pos:end="127:55"><name pos:start="127:21" pos:end="127:37">qemu_opt_get_size</name><argument_list pos:start="127:38" pos:end="127:55">(<argument pos:start="127:39" pos:end="127:42"><expr pos:start="127:39" pos:end="127:42"><name pos:start="127:39" pos:end="127:42">opts</name></expr></argument>, <argument pos:start="127:45" pos:end="127:51"><expr pos:start="127:45" pos:end="127:51"><literal type="string" pos:start="127:45" pos:end="127:51">"size1"</literal></expr></argument>, <argument pos:start="127:54" pos:end="127:54"><expr pos:start="127:54" pos:end="127:54"><literal type="number" pos:start="127:54" pos:end="127:54">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="127:58" pos:end="127:59"><expr pos:start="127:58" pos:end="127:59"><operator pos:start="127:58" pos:end="127:59">==</operator></expr></argument>, <argument pos:start="127:62" pos:end="127:62"><expr pos:start="127:62" pos:end="127:62"><literal type="number" pos:start="127:62" pos:end="127:62">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:67"><expr pos:start="129:5" pos:end="129:66"><call pos:start="129:5" pos:end="129:66"><name pos:start="129:5" pos:end="129:19">g_assert_cmphex</name><argument_list pos:start="129:20" pos:end="129:66">(<argument pos:start="129:21" pos:end="129:55"><expr pos:start="129:21" pos:end="129:55"><call pos:start="129:21" pos:end="129:55"><name pos:start="129:21" pos:end="129:37">qemu_opt_get_size</name><argument_list pos:start="129:38" pos:end="129:55">(<argument pos:start="129:39" pos:end="129:42"><expr pos:start="129:39" pos:end="129:42"><name pos:start="129:39" pos:end="129:42">opts</name></expr></argument>, <argument pos:start="129:45" pos:end="129:51"><expr pos:start="129:45" pos:end="129:51"><literal type="string" pos:start="129:45" pos:end="129:51">"size2"</literal></expr></argument>, <argument pos:start="129:54" pos:end="129:54"><expr pos:start="129:54" pos:end="129:54"><literal type="number" pos:start="129:54" pos:end="129:54">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="129:58" pos:end="129:59"><expr pos:start="129:58" pos:end="129:59"><operator pos:start="129:58" pos:end="129:59">==</operator></expr></argument>, <argument pos:start="129:62" pos:end="129:65"><expr pos:start="129:62" pos:end="129:65"><literal type="number" pos:start="129:62" pos:end="129:65">1536</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:73"><expr pos:start="131:5" pos:end="131:72"><call pos:start="131:5" pos:end="131:72"><name pos:start="131:5" pos:end="131:19">g_assert_cmphex</name><argument_list pos:start="131:20" pos:end="131:72">(<argument pos:start="131:21" pos:end="131:55"><expr pos:start="131:21" pos:end="131:55"><call pos:start="131:21" pos:end="131:55"><name pos:start="131:21" pos:end="131:37">qemu_opt_get_size</name><argument_list pos:start="131:38" pos:end="131:55">(<argument pos:start="131:39" pos:end="131:42"><expr pos:start="131:39" pos:end="131:42"><name pos:start="131:39" pos:end="131:42">opts</name></expr></argument>, <argument pos:start="131:45" pos:end="131:51"><expr pos:start="131:45" pos:end="131:51"><literal type="string" pos:start="131:45" pos:end="131:51">"size3"</literal></expr></argument>, <argument pos:start="131:54" pos:end="131:54"><expr pos:start="131:54" pos:end="131:54"><literal type="number" pos:start="131:54" pos:end="131:54">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="131:58" pos:end="131:59"><expr pos:start="131:58" pos:end="131:59"><operator pos:start="131:58" pos:end="131:59">==</operator></expr></argument>, <argument pos:start="131:62" pos:end="131:71"><expr pos:start="131:62" pos:end="131:71"><literal type="number" pos:start="131:62" pos:end="131:62">2</literal> <operator pos:start="131:64" pos:end="131:64">*</operator> <name pos:start="131:66" pos:end="131:71">M_BYTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="135:48"><expr pos:start="133:5" pos:end="135:47"><name pos:start="133:5" pos:end="133:8">opts</name> <operator pos:start="133:10" pos:end="133:10">=</operator> <call pos:start="133:12" pos:end="135:47"><name pos:start="133:12" pos:end="133:26">qemu_opts_parse</name><argument_list pos:start="133:27" pos:end="135:47">(<argument pos:start="133:28" pos:end="133:40"><expr pos:start="133:28" pos:end="133:40"><operator pos:start="133:28" pos:end="133:28">&amp;</operator><name pos:start="133:29" pos:end="133:40">opts_list_02</name></expr></argument>, <argument pos:start="133:43" pos:end="133:70"><expr pos:start="133:43" pos:end="133:70"><literal type="string" pos:start="133:43" pos:end="133:70">"size1=0.1G,size2=16777215T"</literal></expr></argument>,

                           <argument pos:start="135:28" pos:end="135:32"><expr pos:start="135:28" pos:end="135:32"><name pos:start="135:28" pos:end="135:32">false</name></expr></argument>, <argument pos:start="135:35" pos:end="135:46"><expr pos:start="135:35" pos:end="135:46"><operator pos:start="135:35" pos:end="135:35">&amp;</operator><name pos:start="135:36" pos:end="135:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:46"><expr pos:start="137:5" pos:end="137:45"><call pos:start="137:5" pos:end="137:45"><name pos:start="137:5" pos:end="137:20">g_assert_cmpuint</name><argument_list pos:start="137:21" pos:end="137:45">(<argument pos:start="137:22" pos:end="137:37"><expr pos:start="137:22" pos:end="137:37"><call pos:start="137:22" pos:end="137:37"><name pos:start="137:22" pos:end="137:31">opts_count</name><argument_list pos:start="137:32" pos:end="137:37">(<argument pos:start="137:33" pos:end="137:36"><expr pos:start="137:33" pos:end="137:36"><name pos:start="137:33" pos:end="137:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="137:40" pos:end="137:41"><expr pos:start="137:40" pos:end="137:41"><operator pos:start="137:40" pos:end="137:41">==</operator></expr></argument>, <argument pos:start="137:44" pos:end="137:44"><expr pos:start="137:44" pos:end="137:44"><literal type="number" pos:start="137:44" pos:end="137:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:74"><expr pos:start="139:5" pos:end="139:73"><call pos:start="139:5" pos:end="139:73"><name pos:start="139:5" pos:end="139:19">g_assert_cmphex</name><argument_list pos:start="139:20" pos:end="139:73">(<argument pos:start="139:21" pos:end="139:55"><expr pos:start="139:21" pos:end="139:55"><call pos:start="139:21" pos:end="139:55"><name pos:start="139:21" pos:end="139:37">qemu_opt_get_size</name><argument_list pos:start="139:38" pos:end="139:55">(<argument pos:start="139:39" pos:end="139:42"><expr pos:start="139:39" pos:end="139:42"><name pos:start="139:39" pos:end="139:42">opts</name></expr></argument>, <argument pos:start="139:45" pos:end="139:51"><expr pos:start="139:45" pos:end="139:51"><literal type="string" pos:start="139:45" pos:end="139:51">"size1"</literal></expr></argument>, <argument pos:start="139:54" pos:end="139:54"><expr pos:start="139:54" pos:end="139:54"><literal type="number" pos:start="139:54" pos:end="139:54">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="139:58" pos:end="139:59"><expr pos:start="139:58" pos:end="139:59"><operator pos:start="139:58" pos:end="139:59">==</operator></expr></argument>, <argument pos:start="139:62" pos:end="139:72"><expr pos:start="139:62" pos:end="139:72"><name pos:start="139:62" pos:end="139:67">G_BYTE</name> <operator pos:start="139:69" pos:end="139:69">/</operator> <literal type="number" pos:start="139:71" pos:end="139:72">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="143:44"><expr pos:start="141:5" pos:end="143:43"><call pos:start="141:5" pos:end="143:43"><name pos:start="141:5" pos:end="141:19">g_assert_cmphex</name><argument_list pos:start="141:20" pos:end="143:43">(<argument pos:start="141:21" pos:end="141:55"><expr pos:start="141:21" pos:end="141:55"><call pos:start="141:21" pos:end="141:55"><name pos:start="141:21" pos:end="141:37">qemu_opt_get_size</name><argument_list pos:start="141:38" pos:end="141:55">(<argument pos:start="141:39" pos:end="141:42"><expr pos:start="141:39" pos:end="141:42"><name pos:start="141:39" pos:end="141:42">opts</name></expr></argument>, <argument pos:start="141:45" pos:end="141:51"><expr pos:start="141:45" pos:end="141:51"><literal type="string" pos:start="141:45" pos:end="141:51">"size2"</literal></expr></argument>, <argument pos:start="141:54" pos:end="141:54"><expr pos:start="141:54" pos:end="141:54"><literal type="number" pos:start="141:54" pos:end="141:54">0</literal></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="143:22" pos:end="143:23"><expr pos:start="143:22" pos:end="143:23"><operator pos:start="143:22" pos:end="143:23">==</operator></expr></argument>, <argument pos:start="143:26" pos:end="143:42"><expr pos:start="143:26" pos:end="143:42"><literal type="number" pos:start="143:26" pos:end="143:33">16777215</literal> <operator pos:start="143:35" pos:end="143:35">*</operator> <name pos:start="143:37" pos:end="143:42">T_BYTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="147:5" pos:end="147:34">/* Beyond limit with suffix */</comment>

    <expr_stmt pos:start="149:5" pos:end="151:48"><expr pos:start="149:5" pos:end="151:47"><name pos:start="149:5" pos:end="149:8">opts</name> <operator pos:start="149:10" pos:end="149:10">=</operator> <call pos:start="149:12" pos:end="151:47"><name pos:start="149:12" pos:end="149:26">qemu_opts_parse</name><argument_list pos:start="149:27" pos:end="151:47">(<argument pos:start="149:28" pos:end="149:40"><expr pos:start="149:28" pos:end="149:40"><operator pos:start="149:28" pos:end="149:28">&amp;</operator><name pos:start="149:29" pos:end="149:40">opts_list_02</name></expr></argument>, <argument pos:start="149:43" pos:end="149:59"><expr pos:start="149:43" pos:end="149:59"><literal type="string" pos:start="149:43" pos:end="149:59">"size1=16777216T"</literal></expr></argument>,

                           <argument pos:start="151:28" pos:end="151:32"><expr pos:start="151:28" pos:end="151:32"><name pos:start="151:28" pos:end="151:32">false</name></expr></argument>, <argument pos:start="151:35" pos:end="151:46"><expr pos:start="151:35" pos:end="151:46"><operator pos:start="151:35" pos:end="151:35">&amp;</operator><name pos:start="151:36" pos:end="151:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="153:5" pos:end="153:28">/* BUG: should reject */</comment>

    <expr_stmt pos:start="155:5" pos:end="155:46"><expr pos:start="155:5" pos:end="155:45"><call pos:start="155:5" pos:end="155:45"><name pos:start="155:5" pos:end="155:20">g_assert_cmpuint</name><argument_list pos:start="155:21" pos:end="155:45">(<argument pos:start="155:22" pos:end="155:37"><expr pos:start="155:22" pos:end="155:37"><call pos:start="155:22" pos:end="155:37"><name pos:start="155:22" pos:end="155:31">opts_count</name><argument_list pos:start="155:32" pos:end="155:37">(<argument pos:start="155:33" pos:end="155:36"><expr pos:start="155:33" pos:end="155:36"><name pos:start="155:33" pos:end="155:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="155:40" pos:end="155:41"><expr pos:start="155:40" pos:end="155:41"><operator pos:start="155:40" pos:end="155:41">==</operator></expr></argument>, <argument pos:start="155:44" pos:end="155:44"><expr pos:start="155:44" pos:end="155:44"><literal type="number" pos:start="155:44" pos:end="155:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:65"><expr pos:start="157:5" pos:end="157:64"><call pos:start="157:5" pos:end="157:64"><name pos:start="157:5" pos:end="157:20">g_assert_cmpuint</name><argument_list pos:start="157:21" pos:end="157:64">(<argument pos:start="157:22" pos:end="157:56"><expr pos:start="157:22" pos:end="157:56"><call pos:start="157:22" pos:end="157:56"><name pos:start="157:22" pos:end="157:38">qemu_opt_get_size</name><argument_list pos:start="157:39" pos:end="157:56">(<argument pos:start="157:40" pos:end="157:43"><expr pos:start="157:40" pos:end="157:43"><name pos:start="157:40" pos:end="157:43">opts</name></expr></argument>, <argument pos:start="157:46" pos:end="157:52"><expr pos:start="157:46" pos:end="157:52"><literal type="string" pos:start="157:46" pos:end="157:52">"size1"</literal></expr></argument>, <argument pos:start="157:55" pos:end="157:55"><expr pos:start="157:55" pos:end="157:55"><literal type="number" pos:start="157:55" pos:end="157:55">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="157:59" pos:end="157:60"><expr pos:start="157:59" pos:end="157:60"><operator pos:start="157:59" pos:end="157:60">==</operator></expr></argument>, <argument pos:start="157:63" pos:end="157:63"><expr pos:start="157:63" pos:end="157:63"><literal type="number" pos:start="157:63" pos:end="157:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="161:5" pos:end="161:23">/* Trailing crap */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:68"><expr pos:start="163:5" pos:end="163:67"><name pos:start="163:5" pos:end="163:8">opts</name> <operator pos:start="163:10" pos:end="163:10">=</operator> <call pos:start="163:12" pos:end="163:67"><name pos:start="163:12" pos:end="163:26">qemu_opts_parse</name><argument_list pos:start="163:27" pos:end="163:67">(<argument pos:start="163:28" pos:end="163:40"><expr pos:start="163:28" pos:end="163:40"><operator pos:start="163:28" pos:end="163:28">&amp;</operator><name pos:start="163:29" pos:end="163:40">opts_list_02</name></expr></argument>, <argument pos:start="163:43" pos:end="163:53"><expr pos:start="163:43" pos:end="163:53"><literal type="string" pos:start="163:43" pos:end="163:53">"size1=16E"</literal></expr></argument>, <argument pos:start="163:56" pos:end="163:60"><expr pos:start="163:56" pos:end="163:60"><name pos:start="163:56" pos:end="163:60">false</name></expr></argument>, <argument pos:start="163:63" pos:end="163:66"><expr pos:start="163:63" pos:end="163:66"><operator pos:start="163:63" pos:end="163:63">&amp;</operator><name pos:start="163:64" pos:end="163:66">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:30"><expr pos:start="165:5" pos:end="165:29"><call pos:start="165:5" pos:end="165:29"><name pos:start="165:5" pos:end="165:23">error_free_or_abort</name><argument_list pos:start="165:24" pos:end="165:29">(<argument pos:start="165:25" pos:end="165:28"><expr pos:start="165:25" pos:end="165:28"><operator pos:start="165:25" pos:end="165:25">&amp;</operator><name pos:start="165:26" pos:end="165:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:20"><expr pos:start="167:5" pos:end="167:19"><call pos:start="167:5" pos:end="167:19"><name pos:start="167:5" pos:end="167:12">g_assert</name><argument_list pos:start="167:13" pos:end="167:19">(<argument pos:start="167:14" pos:end="167:18"><expr pos:start="167:14" pos:end="167:18"><operator pos:start="167:14" pos:end="167:14">!</operator><name pos:start="167:15" pos:end="167:18">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:77"><expr pos:start="169:5" pos:end="169:76"><name pos:start="169:5" pos:end="169:8">opts</name> <operator pos:start="169:10" pos:end="169:10">=</operator> <call pos:start="169:12" pos:end="169:76"><name pos:start="169:12" pos:end="169:26">qemu_opts_parse</name><argument_list pos:start="169:27" pos:end="169:76">(<argument pos:start="169:28" pos:end="169:40"><expr pos:start="169:28" pos:end="169:40"><operator pos:start="169:28" pos:end="169:28">&amp;</operator><name pos:start="169:29" pos:end="169:40">opts_list_02</name></expr></argument>, <argument pos:start="169:43" pos:end="169:54"><expr pos:start="169:43" pos:end="169:54"><literal type="string" pos:start="169:43" pos:end="169:54">"size1=16Gi"</literal></expr></argument>, <argument pos:start="169:57" pos:end="169:61"><expr pos:start="169:57" pos:end="169:61"><name pos:start="169:57" pos:end="169:61">false</name></expr></argument>, <argument pos:start="169:64" pos:end="169:75"><expr pos:start="169:64" pos:end="169:75"><operator pos:start="169:64" pos:end="169:64">&amp;</operator><name pos:start="169:65" pos:end="169:75">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="171:5" pos:end="171:28">/* BUG: should reject */</comment>

    <expr_stmt pos:start="173:5" pos:end="173:46"><expr pos:start="173:5" pos:end="173:45"><call pos:start="173:5" pos:end="173:45"><name pos:start="173:5" pos:end="173:20">g_assert_cmpuint</name><argument_list pos:start="173:21" pos:end="173:45">(<argument pos:start="173:22" pos:end="173:37"><expr pos:start="173:22" pos:end="173:37"><call pos:start="173:22" pos:end="173:37"><name pos:start="173:22" pos:end="173:31">opts_count</name><argument_list pos:start="173:32" pos:end="173:37">(<argument pos:start="173:33" pos:end="173:36"><expr pos:start="173:33" pos:end="173:36"><name pos:start="173:33" pos:end="173:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="173:40" pos:end="173:41"><expr pos:start="173:40" pos:end="173:41"><operator pos:start="173:40" pos:end="173:41">==</operator></expr></argument>, <argument pos:start="173:44" pos:end="173:44"><expr pos:start="173:44" pos:end="173:44"><literal type="number" pos:start="173:44" pos:end="173:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:75"><expr pos:start="175:5" pos:end="175:74"><call pos:start="175:5" pos:end="175:74"><name pos:start="175:5" pos:end="175:20">g_assert_cmpuint</name><argument_list pos:start="175:21" pos:end="175:74">(<argument pos:start="175:22" pos:end="175:56"><expr pos:start="175:22" pos:end="175:56"><call pos:start="175:22" pos:end="175:56"><name pos:start="175:22" pos:end="175:38">qemu_opt_get_size</name><argument_list pos:start="175:39" pos:end="175:56">(<argument pos:start="175:40" pos:end="175:43"><expr pos:start="175:40" pos:end="175:43"><name pos:start="175:40" pos:end="175:43">opts</name></expr></argument>, <argument pos:start="175:46" pos:end="175:52"><expr pos:start="175:46" pos:end="175:52"><literal type="string" pos:start="175:46" pos:end="175:52">"size1"</literal></expr></argument>, <argument pos:start="175:55" pos:end="175:55"><expr pos:start="175:55" pos:end="175:55"><literal type="number" pos:start="175:55" pos:end="175:55">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="175:59" pos:end="175:60"><expr pos:start="175:59" pos:end="175:60"><operator pos:start="175:59" pos:end="175:60">==</operator></expr></argument>, <argument pos:start="175:63" pos:end="175:73"><expr pos:start="175:63" pos:end="175:73"><literal type="number" pos:start="175:63" pos:end="175:64">16</literal> <operator pos:start="175:66" pos:end="175:66">*</operator> <name pos:start="175:68" pos:end="175:73">G_BYTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:35"><expr pos:start="179:5" pos:end="179:34"><call pos:start="179:5" pos:end="179:34"><name pos:start="179:5" pos:end="179:19">qemu_opts_reset</name><argument_list pos:start="179:20" pos:end="179:34">(<argument pos:start="179:21" pos:end="179:33"><expr pos:start="179:21" pos:end="179:33"><operator pos:start="179:21" pos:end="179:21">&amp;</operator><name pos:start="179:22" pos:end="179:33">opts_list_02</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
