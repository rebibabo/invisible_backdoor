<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1333.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">ahci_init</name><parameter_list pos:start="1:15" pos:end="1:75">(<parameter pos:start="1:16" pos:end="1:27"><decl pos:start="1:16" pos:end="1:27"><type pos:start="1:16" pos:end="1:27"><name pos:start="1:16" pos:end="1:24">AHCIState</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:27">s</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:40">DeviceState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">qdev</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:58">DMAContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">dma</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:74"><decl pos:start="1:66" pos:end="1:74"><type pos:start="1:66" pos:end="1:74"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:74">ports</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">qemu_irq</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">irqs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:10">dma</name></name> <operator pos:start="11:12" pos:end="11:12">=</operator> <name pos:start="11:14" pos:end="11:16">dma</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:12">ports</name></name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:20">ports</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:51"><expr pos:start="15:5" pos:end="15:50"><name pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:10">dev</name></name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:50"><name pos:start="15:14" pos:end="15:22">g_malloc0</name><argument_list pos:start="15:23" pos:end="15:50">(<argument pos:start="15:24" pos:end="15:49"><expr pos:start="15:24" pos:end="15:49"><sizeof pos:start="15:24" pos:end="15:41">sizeof<argument_list pos:start="15:30" pos:end="15:41">(<argument pos:start="15:31" pos:end="15:40"><expr pos:start="15:31" pos:end="15:40"><name pos:start="15:31" pos:end="15:40">AHCIDevice</name></expr></argument>)</argument_list></sizeof> <operator pos:start="15:43" pos:end="15:43">*</operator> <name pos:start="15:45" pos:end="15:49">ports</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><call pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:17">ahci_reg_init</name><argument_list pos:start="17:18" pos:end="17:20">(<argument pos:start="17:19" pos:end="17:19"><expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="19:5" pos:end="19:78">/* XXX BAR size should be 1k, but that breaks, so bump it to 4k for now */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:80"><expr pos:start="21:5" pos:end="21:79"><call pos:start="21:5" pos:end="21:79"><name pos:start="21:5" pos:end="21:25">memory_region_init_io</name><argument_list pos:start="21:26" pos:end="21:79">(<argument pos:start="21:27" pos:end="21:33"><expr pos:start="21:27" pos:end="21:33"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:33"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:33">mem</name></name></expr></argument>, <argument pos:start="21:36" pos:end="21:48"><expr pos:start="21:36" pos:end="21:48"><operator pos:start="21:36" pos:end="21:36">&amp;</operator><name pos:start="21:37" pos:end="21:48">ahci_mem_ops</name></expr></argument>, <argument pos:start="21:51" pos:end="21:51"><expr pos:start="21:51" pos:end="21:51"><name pos:start="21:51" pos:end="21:51">s</name></expr></argument>, <argument pos:start="21:54" pos:end="21:59"><expr pos:start="21:54" pos:end="21:59"><literal type="string" pos:start="21:54" pos:end="21:59">"ahci"</literal></expr></argument>, <argument pos:start="21:62" pos:end="21:78"><expr pos:start="21:62" pos:end="21:78"><name pos:start="21:62" pos:end="21:78">AHCI_MEM_BAR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:69"><expr pos:start="23:5" pos:end="23:68"><call pos:start="23:5" pos:end="23:68"><name pos:start="23:5" pos:end="23:25">memory_region_init_io</name><argument_list pos:start="23:26" pos:end="23:68">(<argument pos:start="23:27" pos:end="23:33"><expr pos:start="23:27" pos:end="23:33"><operator pos:start="23:27" pos:end="23:27">&amp;</operator><name pos:start="23:28" pos:end="23:33"><name pos:start="23:28" pos:end="23:28">s</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:33">idp</name></name></expr></argument>, <argument pos:start="23:36" pos:end="23:48"><expr pos:start="23:36" pos:end="23:48"><operator pos:start="23:36" pos:end="23:36">&amp;</operator><name pos:start="23:37" pos:end="23:48">ahci_idp_ops</name></expr></argument>, <argument pos:start="23:51" pos:end="23:51"><expr pos:start="23:51" pos:end="23:51"><name pos:start="23:51" pos:end="23:51">s</name></expr></argument>, <argument pos:start="23:54" pos:end="23:63"><expr pos:start="23:54" pos:end="23:63"><literal type="string" pos:start="23:54" pos:end="23:63">"ahci-idp"</literal></expr></argument>, <argument pos:start="23:66" pos:end="23:67"><expr pos:start="23:66" pos:end="23:67"><literal type="number" pos:start="23:66" pos:end="23:67">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:57"><expr pos:start="27:5" pos:end="27:56"><name pos:start="27:5" pos:end="27:8">irqs</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:56"><name pos:start="27:12" pos:end="27:29">qemu_allocate_irqs</name><argument_list pos:start="27:30" pos:end="27:56">(<argument pos:start="27:31" pos:end="27:42"><expr pos:start="27:31" pos:end="27:42"><name pos:start="27:31" pos:end="27:42">ahci_irq_set</name></expr></argument>, <argument pos:start="27:45" pos:end="27:45"><expr pos:start="27:45" pos:end="27:45"><name pos:start="27:45" pos:end="27:45">s</name></expr></argument>, <argument pos:start="27:48" pos:end="27:55"><expr pos:start="27:48" pos:end="27:55"><name pos:start="27:48" pos:end="27:55"><name pos:start="27:48" pos:end="27:48">s</name><operator pos:start="27:49" pos:end="27:50">-&gt;</operator><name pos:start="27:51" pos:end="27:55">ports</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="31:5" pos:end="53:5">for <control pos:start="31:9" pos:end="31:34">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:29"><expr pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:28"><name pos:start="31:21" pos:end="31:21">s</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:28">ports</name></name></expr>;</condition> <incr pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><name pos:start="31:31" pos:end="31:31">i</name><operator pos:start="31:32" pos:end="31:33">++</operator></expr></incr>)</control> <block pos:start="31:36" pos:end="53:5">{<block_content pos:start="33:9" pos:end="51:65">

        <decl_stmt pos:start="33:9" pos:end="33:36"><decl pos:start="33:9" pos:end="33:35"><type pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:18">AHCIDevice</name> <modifier pos:start="33:20" pos:end="33:20">*</modifier></type><name pos:start="33:21" pos:end="33:22">ad</name> <init pos:start="33:24" pos:end="33:35">= <expr pos:start="33:26" pos:end="33:35"><operator pos:start="33:26" pos:end="33:26">&amp;</operator><name pos:start="33:27" pos:end="33:35"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:32">dev</name><index pos:start="33:33" pos:end="33:35">[<expr pos:start="33:34" pos:end="33:34"><name pos:start="33:34" pos:end="33:34">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:40"><expr pos:start="37:9" pos:end="37:39"><call pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:19">ide_bus_new</name><argument_list pos:start="37:20" pos:end="37:39">(<argument pos:start="37:21" pos:end="37:29"><expr pos:start="37:21" pos:end="37:29"><operator pos:start="37:21" pos:end="37:21">&amp;</operator><name pos:start="37:22" pos:end="37:29"><name pos:start="37:22" pos:end="37:23">ad</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:29">port</name></name></expr></argument>, <argument pos:start="37:32" pos:end="37:35"><expr pos:start="37:32" pos:end="37:35"><name pos:start="37:32" pos:end="37:35">qdev</name></expr></argument>, <argument pos:start="37:38" pos:end="37:38"><expr pos:start="37:38" pos:end="37:38"><name pos:start="37:38" pos:end="37:38">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:38"><expr pos:start="39:9" pos:end="39:37"><call pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:17">ide_init2</name><argument_list pos:start="39:18" pos:end="39:37">(<argument pos:start="39:19" pos:end="39:27"><expr pos:start="39:19" pos:end="39:27"><operator pos:start="39:19" pos:end="39:19">&amp;</operator><name pos:start="39:20" pos:end="39:27"><name pos:start="39:20" pos:end="39:21">ad</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:27">port</name></name></expr></argument>, <argument pos:start="39:30" pos:end="39:36"><expr pos:start="39:30" pos:end="39:36"><name pos:start="39:30" pos:end="39:36"><name pos:start="39:30" pos:end="39:33">irqs</name><index pos:start="39:34" pos:end="39:36">[<expr pos:start="39:35" pos:end="39:35"><name pos:start="39:35" pos:end="39:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:20"><expr pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:10">ad</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:15">hba</name></name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:19">s</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:24"><expr pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:10">ad</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:19">port_no</name></name> <operator pos:start="45:21" pos:end="45:21">=</operator> <name pos:start="45:23" pos:end="45:23">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:32"><expr pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:10">ad</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:16">port</name><operator pos:start="47:17" pos:end="47:17">.</operator><name pos:start="47:18" pos:end="47:20">dma</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <operator pos:start="47:24" pos:end="47:24">&amp;</operator><name pos:start="47:25" pos:end="47:31"><name pos:start="47:25" pos:end="47:26">ad</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:31">dma</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:42"><expr pos:start="49:9" pos:end="49:41"><name pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:10">ad</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:16">port</name><operator pos:start="49:17" pos:end="49:17">.</operator><name pos:start="49:18" pos:end="49:20">dma</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:25">ops</name></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <operator pos:start="49:29" pos:end="49:29">&amp;</operator><name pos:start="49:30" pos:end="49:41">ahci_dma_ops</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:65"><expr pos:start="51:9" pos:end="51:64"><name pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:10">ad</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:21">port_regs</name><operator pos:start="51:22" pos:end="51:22">.</operator><name pos:start="51:23" pos:end="51:25">cmd</name></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <name pos:start="51:29" pos:end="51:44">PORT_CMD_SPIN_UP</name> <operator pos:start="51:46" pos:end="51:46">|</operator> <name pos:start="51:48" pos:end="51:64">PORT_CMD_POWER_ON</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
