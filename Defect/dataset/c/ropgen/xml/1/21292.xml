<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21292.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">dca_exss_parse_header</name><parameter_list pos:start="1:34" pos:end="1:48">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:44">DCAContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="89:1">{<block_content pos:start="3:5" pos:end="88:9">
    <decl_stmt pos:start="3:5" pos:end="3:22"><decl pos:start="3:5" pos:end="3:21"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:21"><name pos:start="3:9" pos:end="3:18">asset_size</name><index pos:start="3:19" pos:end="3:21">[<expr pos:start="3:20" pos:end="3:20"><literal type="number" pos:start="3:20" pos:end="3:20">8</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:17"><decl pos:start="4:5" pos:end="4:16"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:16">ss_index</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">blownup</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:23"><decl pos:start="6:5" pos:end="6:22"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:18">num_audiop</name> <init pos:start="6:20" pos:end="6:22">= <expr pos:start="6:22" pos:end="6:22"><literal type="number" pos:start="6:22" pos:end="6:22">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">num_assets</name> <init pos:start="7:20" pos:end="7:22">= <expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:26"><decl pos:start="8:5" pos:end="8:25"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:25"><name pos:start="8:9" pos:end="8:22">active_ss_mask</name><index pos:start="8:23" pos:end="8:25">[<expr pos:start="8:24" pos:end="8:24"><literal type="number" pos:start="8:24" pos:end="8:24">8</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:19"><decl pos:start="10:5" pos:end="10:18"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:18">start_posn</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">hdrsize</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:17"><decl pos:start="12:5" pos:end="12:16"><type pos:start="12:5" pos:end="12:12"><name pos:start="12:5" pos:end="12:12">uint32_t</name></type> <name pos:start="12:14" pos:end="12:16">mkr</name></decl>;</decl_stmt>
    <if_stmt pos:start="13:5" pos:end="14:15"><if pos:start="13:5" pos:end="14:15">if <condition pos:start="13:8" pos:end="13:35">(<expr pos:start="13:9" pos:end="13:34"><call pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:21">get_bits_left</name><argument_list pos:start="13:22" pos:end="13:29">(<argument pos:start="13:23" pos:end="13:28"><expr pos:start="13:23" pos:end="13:28"><operator pos:start="13:23" pos:end="13:23">&amp;</operator><name pos:start="13:24" pos:end="13:28"><name pos:start="13:24" pos:end="13:24">s</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:31" pos:end="13:31">&lt;</operator> <literal type="number" pos:start="13:33" pos:end="13:34">52</literal></expr>)</condition><block type="pseudo" pos:start="14:9" pos:end="14:15"><block_content pos:start="14:9" pos:end="14:15">
        <return pos:start="14:9" pos:end="14:15">return;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:14">start_posn</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:39"><name pos:start="15:18" pos:end="15:31">get_bits_count</name><argument_list pos:start="15:32" pos:end="15:39">(<argument pos:start="15:33" pos:end="15:38"><expr pos:start="15:33" pos:end="15:38"><operator pos:start="15:33" pos:end="15:33">&amp;</operator><name pos:start="15:34" pos:end="15:38"><name pos:start="15:34" pos:end="15:34">s</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:38">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="15:41" pos:end="15:41">-</operator> <literal type="number" pos:start="15:43" pos:end="15:44">32</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:25"><expr pos:start="16:5" pos:end="16:24"><call pos:start="16:5" pos:end="16:24"><name pos:start="16:5" pos:end="16:13">skip_bits</name><argument_list pos:start="16:14" pos:end="16:24">(<argument pos:start="16:15" pos:end="16:20"><expr pos:start="16:15" pos:end="16:20"><operator pos:start="16:15" pos:end="16:15">&amp;</operator><name pos:start="16:16" pos:end="16:20"><name pos:start="16:16" pos:end="16:16">s</name><operator pos:start="16:17" pos:end="16:18">-&gt;</operator><name pos:start="16:19" pos:end="16:20">gb</name></name></expr></argument>, <argument pos:start="16:23" pos:end="16:23"><expr pos:start="16:23" pos:end="16:23"><literal type="number" pos:start="16:23" pos:end="16:23">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="16:27" pos:end="16:38">// user data</comment>
    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:12">ss_index</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:23">get_bits</name><argument_list pos:start="17:24" pos:end="17:34">(<argument pos:start="17:25" pos:end="17:30"><expr pos:start="17:25" pos:end="17:30"><operator pos:start="17:25" pos:end="17:25">&amp;</operator><name pos:start="17:26" pos:end="17:30"><name pos:start="17:26" pos:end="17:26">s</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:30">gb</name></name></expr></argument>, <argument pos:start="17:33" pos:end="17:33"><expr pos:start="17:33" pos:end="17:33"><literal type="number" pos:start="17:33" pos:end="17:33">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:32"><expr pos:start="18:5" pos:end="18:31"><name pos:start="18:5" pos:end="18:11">blownup</name> <operator pos:start="18:13" pos:end="18:13">=</operator> <call pos:start="18:15" pos:end="18:31"><name pos:start="18:15" pos:end="18:23">get_bits1</name><argument_list pos:start="18:24" pos:end="18:31">(<argument pos:start="18:25" pos:end="18:30"><expr pos:start="18:25" pos:end="18:30"><operator pos:start="18:25" pos:end="18:25">&amp;</operator><name pos:start="18:26" pos:end="18:30"><name pos:start="18:26" pos:end="18:26">s</name><operator pos:start="18:27" pos:end="18:28">-&gt;</operator><name pos:start="18:29" pos:end="18:30">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:53"><expr pos:start="19:5" pos:end="19:52"><name pos:start="19:5" pos:end="19:11">hdrsize</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:48"><name pos:start="19:15" pos:end="19:22">get_bits</name><argument_list pos:start="19:23" pos:end="19:48">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:29"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:29">gb</name></name></expr></argument>,  <argument pos:start="19:33" pos:end="19:47"><expr pos:start="19:33" pos:end="19:47"><literal type="number" pos:start="19:33" pos:end="19:35">8</literal> <operator pos:start="19:35" pos:end="19:35">+</operator> <literal type="number" pos:start="19:37" pos:end="19:37">4</literal> <operator pos:start="19:39" pos:end="19:39">*</operator> <name pos:start="19:41" pos:end="19:47">blownup</name></expr></argument>)</argument_list></call> <operator pos:start="19:50" pos:end="19:50">+</operator> <literal type="number" pos:start="19:52" pos:end="19:52">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="19:55" pos:end="19:68">// header_size</comment>
    <expr_stmt pos:start="20:5" pos:end="20:40"><expr pos:start="20:5" pos:end="20:39"><call pos:start="20:5" pos:end="20:39"><name pos:start="20:5" pos:end="20:13">skip_bits</name><argument_list pos:start="20:14" pos:end="20:39">(<argument pos:start="20:15" pos:end="20:20"><expr pos:start="20:15" pos:end="20:20"><operator pos:start="20:15" pos:end="20:15">&amp;</operator><name pos:start="20:16" pos:end="20:20"><name pos:start="20:16" pos:end="20:16">s</name><operator pos:start="20:17" pos:end="20:18">-&gt;</operator><name pos:start="20:19" pos:end="20:20">gb</name></name></expr></argument>, <argument pos:start="20:23" pos:end="20:38"><expr pos:start="20:23" pos:end="20:38"><literal type="number" pos:start="20:23" pos:end="20:26">16</literal> <operator pos:start="20:26" pos:end="20:26">+</operator> <literal type="number" pos:start="20:28" pos:end="20:28">4</literal> <operator pos:start="20:30" pos:end="20:30">*</operator> <name pos:start="20:32" pos:end="20:38">blownup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="20:42" pos:end="20:51">// hd_size</comment>
    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:20">static_fields</name></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <call pos:start="21:24" pos:end="21:40"><name pos:start="21:24" pos:end="21:32">get_bits1</name><argument_list pos:start="21:33" pos:end="21:40">(<argument pos:start="21:34" pos:end="21:39"><expr pos:start="21:34" pos:end="21:39"><operator pos:start="21:34" pos:end="21:34">&amp;</operator><name pos:start="21:35" pos:end="21:39"><name pos:start="21:35" pos:end="21:35">s</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="22:5" pos:end="59:5"><if pos:start="22:5" pos:end="59:5">if <condition pos:start="22:8" pos:end="22:25">(<expr pos:start="22:9" pos:end="22:24"><name pos:start="22:9" pos:end="22:24"><name pos:start="22:9" pos:end="22:9">s</name><operator pos:start="22:10" pos:end="22:11">-&gt;</operator><name pos:start="22:12" pos:end="22:24">static_fields</name></name></expr>)</condition> <block pos:start="22:27" pos:end="59:5">{<block_content pos:start="23:9" pos:end="58:9">
        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><call pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:17">skip_bits</name><argument_list pos:start="23:18" pos:end="23:28">(<argument pos:start="23:19" pos:end="23:24"><expr pos:start="23:19" pos:end="23:24"><operator pos:start="23:19" pos:end="23:19">&amp;</operator><name pos:start="23:20" pos:end="23:24"><name pos:start="23:20" pos:end="23:20">s</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:24">gb</name></name></expr></argument>, <argument pos:start="23:27" pos:end="23:27"><expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="23:31" pos:end="23:53">// reference clock code</comment>
        <expr_stmt pos:start="24:9" pos:end="24:29"><expr pos:start="24:9" pos:end="24:28"><call pos:start="24:9" pos:end="24:28"><name pos:start="24:9" pos:end="24:17">skip_bits</name><argument_list pos:start="24:18" pos:end="24:28">(<argument pos:start="24:19" pos:end="24:24"><expr pos:start="24:19" pos:end="24:24"><operator pos:start="24:19" pos:end="24:19">&amp;</operator><name pos:start="24:20" pos:end="24:24"><name pos:start="24:20" pos:end="24:20">s</name><operator pos:start="24:21" pos:end="24:22">-&gt;</operator><name pos:start="24:23" pos:end="24:24">gb</name></name></expr></argument>, <argument pos:start="24:27" pos:end="24:27"><expr pos:start="24:27" pos:end="24:27"><literal type="number" pos:start="24:27" pos:end="24:27">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="24:31" pos:end="24:52">// frame duration code</comment>
        <if_stmt pos:start="25:9" pos:end="26:39"><if pos:start="25:9" pos:end="26:39">if <condition pos:start="25:12" pos:end="25:30">(<expr pos:start="25:13" pos:end="25:29"><call pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:21">get_bits1</name><argument_list pos:start="25:22" pos:end="25:29">(<argument pos:start="25:23" pos:end="25:28"><expr pos:start="25:23" pos:end="25:28"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:28"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:28">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="26:13" pos:end="26:39"><block_content pos:start="26:13" pos:end="26:39">
            <expr_stmt pos:start="26:13" pos:end="26:39"><expr pos:start="26:13" pos:end="26:38"><call pos:start="26:13" pos:end="26:38"><name pos:start="26:13" pos:end="26:26">skip_bits_long</name><argument_list pos:start="26:27" pos:end="26:38">(<argument pos:start="26:28" pos:end="26:33"><expr pos:start="26:28" pos:end="26:33"><operator pos:start="26:28" pos:end="26:28">&amp;</operator><name pos:start="26:29" pos:end="26:33"><name pos:start="26:29" pos:end="26:29">s</name><operator pos:start="26:30" pos:end="26:31">-&gt;</operator><name pos:start="26:32" pos:end="26:33">gb</name></name></expr></argument>, <argument pos:start="26:36" pos:end="26:37"><expr pos:start="26:36" pos:end="26:37"><literal type="number" pos:start="26:36" pos:end="26:37">36</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="26:41" pos:end="26:52">// timestamp</comment>
        <comment type="block" pos:start="27:9" pos:end="28:59">/* a single stream can contain multiple audio assets that can be
         * combined to form multiple audio presentations */</comment>
        <expr_stmt pos:start="29:9" pos:end="29:45"><expr pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:18">num_audiop</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <call pos:start="29:22" pos:end="29:40"><name pos:start="29:22" pos:end="29:29">get_bits</name><argument_list pos:start="29:30" pos:end="29:40">(<argument pos:start="29:31" pos:end="29:36"><expr pos:start="29:31" pos:end="29:36"><operator pos:start="29:31" pos:end="29:31">&amp;</operator><name pos:start="29:32" pos:end="29:36"><name pos:start="29:32" pos:end="29:32">s</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:36">gb</name></name></expr></argument>, <argument pos:start="29:39" pos:end="29:39"><expr pos:start="29:39" pos:end="29:39"><literal type="number" pos:start="29:39" pos:end="29:39">3</literal></expr></argument>)</argument_list></call> <operator pos:start="29:42" pos:end="29:42">+</operator> <literal type="number" pos:start="29:44" pos:end="29:44">1</literal></expr>;</expr_stmt>
        <if_stmt pos:start="30:9" pos:end="35:9"><if pos:start="30:9" pos:end="35:9">if <condition pos:start="30:12" pos:end="30:27">(<expr pos:start="30:13" pos:end="30:26"><name pos:start="30:13" pos:end="30:22">num_audiop</name> <operator pos:start="30:24" pos:end="30:24">&gt;</operator> <literal type="number" pos:start="30:26" pos:end="30:26">1</literal></expr>)</condition> <block pos:start="30:29" pos:end="35:9">{<block_content pos:start="31:13" pos:end="34:19">
            <expr_stmt pos:start="31:13" pos:end="32:73"><expr pos:start="31:13" pos:end="32:72"><call pos:start="31:13" pos:end="32:72"><name pos:start="31:13" pos:end="31:33">avpriv_request_sample</name><argument_list pos:start="31:34" pos:end="32:72">(<argument pos:start="31:35" pos:end="31:42"><expr pos:start="31:35" pos:end="31:42"><name pos:start="31:35" pos:end="31:42"><name pos:start="31:35" pos:end="31:35">s</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:42">avctx</name></name></expr></argument>,
                                  <argument pos:start="32:35" pos:end="32:71"><expr pos:start="32:35" pos:end="32:71"><literal type="string" pos:start="32:35" pos:end="32:71">"Multiple DTS-HD audio presentations"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="block" pos:start="33:13" pos:end="33:45">/* ignore such streams for now */</comment>
            <return pos:start="34:13" pos:end="34:19">return;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="36:9" pos:end="36:45"><expr pos:start="36:9" pos:end="36:44"><name pos:start="36:9" pos:end="36:18">num_assets</name> <operator pos:start="36:20" pos:end="36:20">=</operator> <call pos:start="36:22" pos:end="36:40"><name pos:start="36:22" pos:end="36:29">get_bits</name><argument_list pos:start="36:30" pos:end="36:40">(<argument pos:start="36:31" pos:end="36:36"><expr pos:start="36:31" pos:end="36:36"><operator pos:start="36:31" pos:end="36:31">&amp;</operator><name pos:start="36:32" pos:end="36:36"><name pos:start="36:32" pos:end="36:32">s</name><operator pos:start="36:33" pos:end="36:34">-&gt;</operator><name pos:start="36:35" pos:end="36:36">gb</name></name></expr></argument>, <argument pos:start="36:39" pos:end="36:39"><expr pos:start="36:39" pos:end="36:39"><literal type="number" pos:start="36:39" pos:end="36:39">3</literal></expr></argument>)</argument_list></call> <operator pos:start="36:42" pos:end="36:42">+</operator> <literal type="number" pos:start="36:44" pos:end="36:44">1</literal></expr>;</expr_stmt>
        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:27">(<expr pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:22">num_assets</name> <operator pos:start="37:24" pos:end="37:24">&gt;</operator> <literal type="number" pos:start="37:26" pos:end="37:26">1</literal></expr>)</condition> <block pos:start="37:29" pos:end="41:9">{<block_content pos:start="38:13" pos:end="40:19">
            <expr_stmt pos:start="38:13" pos:end="38:76"><expr pos:start="38:13" pos:end="38:75"><call pos:start="38:13" pos:end="38:75"><name pos:start="38:13" pos:end="38:33">avpriv_request_sample</name><argument_list pos:start="38:34" pos:end="38:75">(<argument pos:start="38:35" pos:end="38:42"><expr pos:start="38:35" pos:end="38:42"><name pos:start="38:35" pos:end="38:42"><name pos:start="38:35" pos:end="38:35">s</name><operator pos:start="38:36" pos:end="38:37">-&gt;</operator><name pos:start="38:38" pos:end="38:42">avctx</name></name></expr></argument>, <argument pos:start="38:45" pos:end="38:74"><expr pos:start="38:45" pos:end="38:74"><literal type="string" pos:start="38:45" pos:end="38:74">"Multiple DTS-HD audio assets"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="block" pos:start="39:13" pos:end="39:45">/* ignore such streams for now */</comment>
            <return pos:start="40:13" pos:end="40:19">return;</return>
        </block_content>}</block></if></if_stmt>
        <for pos:start="42:9" pos:end="43:63">for <control pos:start="42:13" pos:end="42:40">(<init pos:start="42:14" pos:end="42:19"><expr pos:start="42:14" pos:end="42:18"><name pos:start="42:14" pos:end="42:14">i</name> <operator pos:start="42:16" pos:end="42:16">=</operator> <literal type="number" pos:start="42:18" pos:end="42:18">0</literal></expr>;</init> <condition pos:start="42:21" pos:end="42:35"><expr pos:start="42:21" pos:end="42:34"><name pos:start="42:21" pos:end="42:21">i</name> <operator pos:start="42:23" pos:end="42:23">&lt;</operator> <name pos:start="42:25" pos:end="42:34">num_audiop</name></expr>;</condition> <incr pos:start="42:37" pos:end="42:39"><expr pos:start="42:37" pos:end="42:39"><name pos:start="42:37" pos:end="42:37">i</name><operator pos:start="42:38" pos:end="42:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="43:13" pos:end="43:63"><block_content pos:start="43:13" pos:end="43:63">
            <expr_stmt pos:start="43:13" pos:end="43:63"><expr pos:start="43:13" pos:end="43:62"><name pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:26">active_ss_mask</name><index pos:start="43:27" pos:end="43:29">[<expr pos:start="43:28" pos:end="43:28"><name pos:start="43:28" pos:end="43:28">i</name></expr>]</index></name> <operator pos:start="43:31" pos:end="43:31">=</operator> <call pos:start="43:33" pos:end="43:62"><name pos:start="43:33" pos:end="43:40">get_bits</name><argument_list pos:start="43:41" pos:end="43:62">(<argument pos:start="43:42" pos:end="43:47"><expr pos:start="43:42" pos:end="43:47"><operator pos:start="43:42" pos:end="43:42">&amp;</operator><name pos:start="43:43" pos:end="43:47"><name pos:start="43:43" pos:end="43:43">s</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:47">gb</name></name></expr></argument>, <argument pos:start="43:50" pos:end="43:61"><expr pos:start="43:50" pos:end="43:61"><name pos:start="43:50" pos:end="43:57">ss_index</name> <operator pos:start="43:59" pos:end="43:59">+</operator> <literal type="number" pos:start="43:61" pos:end="43:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
        <for pos:start="44:9" pos:end="47:41">for <control pos:start="44:13" pos:end="44:40">(<init pos:start="44:14" pos:end="44:19"><expr pos:start="44:14" pos:end="44:18"><name pos:start="44:14" pos:end="44:14">i</name> <operator pos:start="44:16" pos:end="44:16">=</operator> <literal type="number" pos:start="44:18" pos:end="44:18">0</literal></expr>;</init> <condition pos:start="44:21" pos:end="44:35"><expr pos:start="44:21" pos:end="44:34"><name pos:start="44:21" pos:end="44:21">i</name> <operator pos:start="44:23" pos:end="44:23">&lt;</operator> <name pos:start="44:25" pos:end="44:34">num_audiop</name></expr>;</condition> <incr pos:start="44:37" pos:end="44:39"><expr pos:start="44:37" pos:end="44:39"><name pos:start="44:37" pos:end="44:37">i</name><operator pos:start="44:38" pos:end="44:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:13" pos:end="47:41"><block_content pos:start="45:13" pos:end="47:41">
            <for pos:start="45:13" pos:end="47:41">for <control pos:start="45:17" pos:end="45:43">(<init pos:start="45:18" pos:end="45:23"><expr pos:start="45:18" pos:end="45:22"><name pos:start="45:18" pos:end="45:18">j</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>;</init> <condition pos:start="45:25" pos:end="45:38"><expr pos:start="45:25" pos:end="45:37"><name pos:start="45:25" pos:end="45:25">j</name> <operator pos:start="45:27" pos:end="45:28">&lt;=</operator> <name pos:start="45:30" pos:end="45:37">ss_index</name></expr>;</condition> <incr pos:start="45:40" pos:end="45:42"><expr pos:start="45:40" pos:end="45:42"><name pos:start="45:40" pos:end="45:40">j</name><operator pos:start="45:41" pos:end="45:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="46:17" pos:end="47:41"><block_content pos:start="46:17" pos:end="47:41">
                <if_stmt pos:start="46:17" pos:end="47:41"><if pos:start="46:17" pos:end="47:41">if <condition pos:start="46:20" pos:end="46:49">(<expr pos:start="46:21" pos:end="46:48"><name pos:start="46:21" pos:end="46:37"><name pos:start="46:21" pos:end="46:34">active_ss_mask</name><index pos:start="46:35" pos:end="46:37">[<expr pos:start="46:36" pos:end="46:36"><name pos:start="46:36" pos:end="46:36">i</name></expr>]</index></name> <operator pos:start="46:39" pos:end="46:39">&amp;</operator> <operator pos:start="46:41" pos:end="46:41">(</operator><literal type="number" pos:start="46:42" pos:end="46:42">1</literal> <operator pos:start="46:44" pos:end="46:45">&lt;&lt;</operator> <name pos:start="46:47" pos:end="46:47">j</name><operator pos:start="46:48" pos:end="46:48">)</operator></expr>)</condition><block type="pseudo" pos:start="47:21" pos:end="47:41"><block_content pos:start="47:21" pos:end="47:41">
                    <expr_stmt pos:start="47:21" pos:end="47:41"><expr pos:start="47:21" pos:end="47:40"><call pos:start="47:21" pos:end="47:40"><name pos:start="47:21" pos:end="47:29">skip_bits</name><argument_list pos:start="47:30" pos:end="47:40">(<argument pos:start="47:31" pos:end="47:36"><expr pos:start="47:31" pos:end="47:36"><operator pos:start="47:31" pos:end="47:31">&amp;</operator><name pos:start="47:32" pos:end="47:36"><name pos:start="47:32" pos:end="47:32">s</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:36">gb</name></name></expr></argument>, <argument pos:start="47:39" pos:end="47:39"><expr pos:start="47:39" pos:end="47:39"><literal type="number" pos:start="47:39" pos:end="47:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for> <comment type="line" pos:start="47:43" pos:end="47:62">// active asset mask</comment>
        <expr_stmt pos:start="48:9" pos:end="48:44"><expr pos:start="48:9" pos:end="48:43"><name pos:start="48:9" pos:end="48:23"><name pos:start="48:9" pos:end="48:9">s</name><operator pos:start="48:10" pos:end="48:11">-&gt;</operator><name pos:start="48:12" pos:end="48:23">mix_metadata</name></name> <operator pos:start="48:25" pos:end="48:25">=</operator> <call pos:start="48:27" pos:end="48:43"><name pos:start="48:27" pos:end="48:35">get_bits1</name><argument_list pos:start="48:36" pos:end="48:43">(<argument pos:start="48:37" pos:end="48:42"><expr pos:start="48:37" pos:end="48:42"><operator pos:start="48:37" pos:end="48:37">&amp;</operator><name pos:start="48:38" pos:end="48:42"><name pos:start="48:38" pos:end="48:38">s</name><operator pos:start="48:39" pos:end="48:40">-&gt;</operator><name pos:start="48:41" pos:end="48:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="49:9" pos:end="58:9"><if pos:start="49:9" pos:end="58:9">if <condition pos:start="49:12" pos:end="49:28">(<expr pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:27">mix_metadata</name></name></expr>)</condition> <block pos:start="49:30" pos:end="58:9">{<block_content pos:start="50:13" pos:end="57:13">
            <decl_stmt pos:start="50:13" pos:end="50:34"><decl pos:start="50:13" pos:end="50:33"><type pos:start="50:13" pos:end="50:15"><name pos:start="50:13" pos:end="50:15">int</name></type> <name pos:start="50:17" pos:end="50:33">mix_out_mask_size</name></decl>;</decl_stmt>
            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><call pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:21">skip_bits</name><argument_list pos:start="51:22" pos:end="51:32">(<argument pos:start="51:23" pos:end="51:28"><expr pos:start="51:23" pos:end="51:28"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:28"><name pos:start="51:24" pos:end="51:24">s</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:28">gb</name></name></expr></argument>, <argument pos:start="51:31" pos:end="51:31"><expr pos:start="51:31" pos:end="51:31"><literal type="number" pos:start="51:31" pos:end="51:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="51:35" pos:end="51:53">// adjustment level</comment>
            <expr_stmt pos:start="52:13" pos:end="52:64"><expr pos:start="52:13" pos:end="52:63"><name pos:start="52:13" pos:end="52:29">mix_out_mask_size</name>  <operator pos:start="52:32" pos:end="52:32">=</operator> <operator pos:start="52:34" pos:end="52:34">(</operator><call pos:start="52:35" pos:end="52:53"><name pos:start="52:35" pos:end="52:42">get_bits</name><argument_list pos:start="52:43" pos:end="52:53">(<argument pos:start="52:44" pos:end="52:49"><expr pos:start="52:44" pos:end="52:49"><operator pos:start="52:44" pos:end="52:44">&amp;</operator><name pos:start="52:45" pos:end="52:49"><name pos:start="52:45" pos:end="52:45">s</name><operator pos:start="52:46" pos:end="52:47">-&gt;</operator><name pos:start="52:48" pos:end="52:49">gb</name></name></expr></argument>, <argument pos:start="52:52" pos:end="52:52"><expr pos:start="52:52" pos:end="52:52"><literal type="number" pos:start="52:52" pos:end="52:52">2</literal></expr></argument>)</argument_list></call> <operator pos:start="52:55" pos:end="52:55">+</operator> <literal type="number" pos:start="52:57" pos:end="52:57">1</literal><operator pos:start="52:58" pos:end="52:58">)</operator> <operator pos:start="52:60" pos:end="52:61">&lt;&lt;</operator> <literal type="number" pos:start="52:63" pos:end="52:63">2</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="53:13" pos:end="53:58"><expr pos:start="53:13" pos:end="53:57"><name pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:30">num_mix_configs</name></name> <operator pos:start="53:32" pos:end="53:32">=</operator>  <call pos:start="53:35" pos:end="53:53"><name pos:start="53:35" pos:end="53:42">get_bits</name><argument_list pos:start="53:43" pos:end="53:53">(<argument pos:start="53:44" pos:end="53:49"><expr pos:start="53:44" pos:end="53:49"><operator pos:start="53:44" pos:end="53:44">&amp;</operator><name pos:start="53:45" pos:end="53:49"><name pos:start="53:45" pos:end="53:45">s</name><operator pos:start="53:46" pos:end="53:47">-&gt;</operator><name pos:start="53:48" pos:end="53:49">gb</name></name></expr></argument>, <argument pos:start="53:52" pos:end="53:52"><expr pos:start="53:52" pos:end="53:52"><literal type="number" pos:start="53:52" pos:end="53:52">2</literal></expr></argument>)</argument_list></call> <operator pos:start="53:55" pos:end="53:55">+</operator> <literal type="number" pos:start="53:57" pos:end="53:57">1</literal></expr>;</expr_stmt>
            <for pos:start="54:13" pos:end="57:13">for <control pos:start="54:17" pos:end="54:52">(<init pos:start="54:18" pos:end="54:23"><expr pos:start="54:18" pos:end="54:22"><name pos:start="54:18" pos:end="54:18">i</name> <operator pos:start="54:20" pos:end="54:20">=</operator> <literal type="number" pos:start="54:22" pos:end="54:22">0</literal></expr>;</init> <condition pos:start="54:25" pos:end="54:47"><expr pos:start="54:25" pos:end="54:46"><name pos:start="54:25" pos:end="54:25">i</name> <operator pos:start="54:27" pos:end="54:27">&lt;</operator> <name pos:start="54:29" pos:end="54:46"><name pos:start="54:29" pos:end="54:29">s</name><operator pos:start="54:30" pos:end="54:31">-&gt;</operator><name pos:start="54:32" pos:end="54:46">num_mix_configs</name></name></expr>;</condition> <incr pos:start="54:49" pos:end="54:51"><expr pos:start="54:49" pos:end="54:51"><name pos:start="54:49" pos:end="54:49">i</name><operator pos:start="54:50" pos:end="54:51">++</operator></expr></incr>)</control> <block pos:start="54:54" pos:end="57:13">{<block_content pos:start="55:17" pos:end="56:76">
                <decl_stmt pos:start="55:17" pos:end="55:78"><decl pos:start="55:17" pos:end="55:77"><type pos:start="55:17" pos:end="55:19"><name pos:start="55:17" pos:end="55:19">int</name></type> <name pos:start="55:21" pos:end="55:32">mix_out_mask</name>        <init pos:start="55:41" pos:end="55:77">= <expr pos:start="55:43" pos:end="55:77"><call pos:start="55:43" pos:end="55:77"><name pos:start="55:43" pos:end="55:50">get_bits</name><argument_list pos:start="55:51" pos:end="55:77">(<argument pos:start="55:52" pos:end="55:57"><expr pos:start="55:52" pos:end="55:57"><operator pos:start="55:52" pos:end="55:52">&amp;</operator><name pos:start="55:53" pos:end="55:57"><name pos:start="55:53" pos:end="55:53">s</name><operator pos:start="55:54" pos:end="55:55">-&gt;</operator><name pos:start="55:56" pos:end="55:57">gb</name></name></expr></argument>, <argument pos:start="55:60" pos:end="55:76"><expr pos:start="55:60" pos:end="55:76"><name pos:start="55:60" pos:end="55:76">mix_out_mask_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="56:17" pos:end="56:76"><expr pos:start="56:17" pos:end="56:75"><name pos:start="56:17" pos:end="56:39"><name pos:start="56:17" pos:end="56:17">s</name><operator pos:start="56:18" pos:end="56:19">-&gt;</operator><name pos:start="56:20" pos:end="56:36">mix_config_num_ch</name><index pos:start="56:37" pos:end="56:39">[<expr pos:start="56:38" pos:end="56:38"><name pos:start="56:38" pos:end="56:38">i</name></expr>]</index></name> <operator pos:start="56:41" pos:end="56:41">=</operator> <call pos:start="56:43" pos:end="56:75"><name pos:start="56:43" pos:end="56:61">dca_exss_mask2count</name><argument_list pos:start="56:62" pos:end="56:75">(<argument pos:start="56:63" pos:end="56:74"><expr pos:start="56:63" pos:end="56:74"><name pos:start="56:63" pos:end="56:74">mix_out_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <for pos:start="60:5" pos:end="61:64">for <control pos:start="60:9" pos:end="60:36">(<init pos:start="60:10" pos:end="60:15"><expr pos:start="60:10" pos:end="60:14"><name pos:start="60:10" pos:end="60:10">i</name> <operator pos:start="60:12" pos:end="60:12">=</operator> <literal type="number" pos:start="60:14" pos:end="60:14">0</literal></expr>;</init> <condition pos:start="60:17" pos:end="60:31"><expr pos:start="60:17" pos:end="60:30"><name pos:start="60:17" pos:end="60:17">i</name> <operator pos:start="60:19" pos:end="60:19">&lt;</operator> <name pos:start="60:21" pos:end="60:30">num_assets</name></expr>;</condition> <incr pos:start="60:33" pos:end="60:35"><expr pos:start="60:33" pos:end="60:35"><name pos:start="60:33" pos:end="60:33">i</name><operator pos:start="60:34" pos:end="60:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="61:9" pos:end="61:64"><block_content pos:start="61:9" pos:end="61:64">
        <expr_stmt pos:start="61:9" pos:end="61:64"><expr pos:start="61:9" pos:end="61:63"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:18">asset_size</name><index pos:start="61:19" pos:end="61:21">[<expr pos:start="61:20" pos:end="61:20"><name pos:start="61:20" pos:end="61:20">i</name></expr>]</index></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <call pos:start="61:25" pos:end="61:63"><name pos:start="61:25" pos:end="61:37">get_bits_long</name><argument_list pos:start="61:38" pos:end="61:63">(<argument pos:start="61:39" pos:end="61:44"><expr pos:start="61:39" pos:end="61:44"><operator pos:start="61:39" pos:end="61:39">&amp;</operator><name pos:start="61:40" pos:end="61:44"><name pos:start="61:40" pos:end="61:40">s</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:44">gb</name></name></expr></argument>, <argument pos:start="61:47" pos:end="61:62"><expr pos:start="61:47" pos:end="61:62"><literal type="number" pos:start="61:47" pos:end="61:50">16</literal> <operator pos:start="61:50" pos:end="61:50">+</operator> <literal type="number" pos:start="61:52" pos:end="61:52">4</literal> <operator pos:start="61:54" pos:end="61:54">*</operator> <name pos:start="61:56" pos:end="61:62">blownup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <for pos:start="62:5" pos:end="65:5">for <control pos:start="62:9" pos:end="62:36">(<init pos:start="62:10" pos:end="62:15"><expr pos:start="62:10" pos:end="62:14"><name pos:start="62:10" pos:end="62:10">i</name> <operator pos:start="62:12" pos:end="62:12">=</operator> <literal type="number" pos:start="62:14" pos:end="62:14">0</literal></expr>;</init> <condition pos:start="62:17" pos:end="62:31"><expr pos:start="62:17" pos:end="62:30"><name pos:start="62:17" pos:end="62:17">i</name> <operator pos:start="62:19" pos:end="62:19">&lt;</operator> <name pos:start="62:21" pos:end="62:30">num_assets</name></expr>;</condition> <incr pos:start="62:33" pos:end="62:35"><expr pos:start="62:33" pos:end="62:35"><name pos:start="62:33" pos:end="62:33">i</name><operator pos:start="62:34" pos:end="62:35">++</operator></expr></incr>)</control> <block pos:start="62:38" pos:end="65:5">{<block_content pos:start="63:9" pos:end="64:19">
        <if_stmt pos:start="63:9" pos:end="64:19"><if pos:start="63:9" pos:end="64:19">if <condition pos:start="63:12" pos:end="63:43">(<expr pos:start="63:13" pos:end="63:42"><call pos:start="63:13" pos:end="63:42"><name pos:start="63:13" pos:end="63:39">dca_exss_parse_asset_header</name><argument_list pos:start="63:40" pos:end="63:42">(<argument pos:start="63:41" pos:end="63:41"><expr pos:start="63:41" pos:end="63:41"><name pos:start="63:41" pos:end="63:41">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="64:13" pos:end="64:19"><block_content pos:start="64:13" pos:end="64:19">
            <return pos:start="64:13" pos:end="64:19">return;</return></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <comment type="block" pos:start="66:5" pos:end="67:31">/* not parsed further, we were only interested in the extensions mask
     * from the asset header */</comment>
        <expr_stmt pos:start="68:9" pos:end="68:35"><expr pos:start="68:9" pos:end="68:34"><name pos:start="68:9" pos:end="68:9">j</name> <operator pos:start="68:11" pos:end="68:11">=</operator> <call pos:start="68:13" pos:end="68:34"><name pos:start="68:13" pos:end="68:26">get_bits_count</name><argument_list pos:start="68:27" pos:end="68:34">(<argument pos:start="68:28" pos:end="68:33"><expr pos:start="68:28" pos:end="68:33"><operator pos:start="68:28" pos:end="68:28">&amp;</operator><name pos:start="68:29" pos:end="68:33"><name pos:start="68:29" pos:end="68:29">s</name><operator pos:start="68:30" pos:end="68:31">-&gt;</operator><name pos:start="68:32" pos:end="68:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="69:9" pos:end="70:65"><if pos:start="69:9" pos:end="70:65">if <condition pos:start="69:12" pos:end="69:41">(<expr pos:start="69:13" pos:end="69:40"><name pos:start="69:13" pos:end="69:22">start_posn</name> <operator pos:start="69:24" pos:end="69:24">+</operator> <name pos:start="69:26" pos:end="69:32">hdrsize</name> <operator pos:start="69:34" pos:end="69:34">*</operator> <literal type="number" pos:start="69:36" pos:end="69:36">8</literal> <operator pos:start="69:38" pos:end="69:38">&gt;</operator> <name pos:start="69:40" pos:end="69:40">j</name></expr>)</condition><block type="pseudo" pos:start="70:13" pos:end="70:65"><block_content pos:start="70:13" pos:end="70:65">
            <expr_stmt pos:start="70:13" pos:end="70:65"><expr pos:start="70:13" pos:end="70:64"><call pos:start="70:13" pos:end="70:64"><name pos:start="70:13" pos:end="70:26">skip_bits_long</name><argument_list pos:start="70:27" pos:end="70:64">(<argument pos:start="70:28" pos:end="70:33"><expr pos:start="70:28" pos:end="70:33"><operator pos:start="70:28" pos:end="70:28">&amp;</operator><name pos:start="70:29" pos:end="70:33"><name pos:start="70:29" pos:end="70:29">s</name><operator pos:start="70:30" pos:end="70:31">-&gt;</operator><name pos:start="70:32" pos:end="70:33">gb</name></name></expr></argument>, <argument pos:start="70:36" pos:end="70:63"><expr pos:start="70:36" pos:end="70:63"><name pos:start="70:36" pos:end="70:45">start_posn</name> <operator pos:start="70:47" pos:end="70:47">+</operator> <name pos:start="70:49" pos:end="70:55">hdrsize</name> <operator pos:start="70:57" pos:end="70:57">*</operator> <literal type="number" pos:start="70:59" pos:end="70:61">8</literal> <operator pos:start="70:61" pos:end="70:61">-</operator> <name pos:start="70:63" pos:end="70:63">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <for pos:start="71:9" pos:end="88:9">for <control pos:start="71:13" pos:end="71:40">(<init pos:start="71:14" pos:end="71:19"><expr pos:start="71:14" pos:end="71:18"><name pos:start="71:14" pos:end="71:14">i</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:18">0</literal></expr>;</init> <condition pos:start="71:21" pos:end="71:35"><expr pos:start="71:21" pos:end="71:34"><name pos:start="71:21" pos:end="71:21">i</name> <operator pos:start="71:23" pos:end="71:23">&lt;</operator> <name pos:start="71:25" pos:end="71:34">num_assets</name></expr>;</condition> <incr pos:start="71:37" pos:end="71:39"><expr pos:start="71:37" pos:end="71:39"><name pos:start="71:37" pos:end="71:37">i</name><operator pos:start="71:38" pos:end="71:39">++</operator></expr></incr>)</control> <block pos:start="71:42" pos:end="88:9">{<block_content pos:start="72:13" pos:end="87:75">
            <expr_stmt pos:start="72:13" pos:end="72:48"><expr pos:start="72:13" pos:end="72:47"><name pos:start="72:13" pos:end="72:22">start_posn</name> <operator pos:start="72:24" pos:end="72:24">=</operator> <call pos:start="72:26" pos:end="72:47"><name pos:start="72:26" pos:end="72:39">get_bits_count</name><argument_list pos:start="72:40" pos:end="72:47">(<argument pos:start="72:41" pos:end="72:46"><expr pos:start="72:41" pos:end="72:46"><operator pos:start="72:41" pos:end="72:41">&amp;</operator><name pos:start="72:42" pos:end="72:46"><name pos:start="72:42" pos:end="72:42">s</name><operator pos:start="72:43" pos:end="72:44">-&gt;</operator><name pos:start="72:45" pos:end="72:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="73:13" pos:end="73:51"><expr pos:start="73:13" pos:end="73:50"><name pos:start="73:13" pos:end="73:15">mkr</name>        <operator pos:start="73:24" pos:end="73:24">=</operator> <call pos:start="73:26" pos:end="73:50"><name pos:start="73:26" pos:end="73:38">get_bits_long</name><argument_list pos:start="73:39" pos:end="73:50">(<argument pos:start="73:40" pos:end="73:45"><expr pos:start="73:40" pos:end="73:45"><operator pos:start="73:40" pos:end="73:40">&amp;</operator><name pos:start="73:41" pos:end="73:45"><name pos:start="73:41" pos:end="73:41">s</name><operator pos:start="73:42" pos:end="73:43">-&gt;</operator><name pos:start="73:44" pos:end="73:45">gb</name></name></expr></argument>, <argument pos:start="73:48" pos:end="73:49"><expr pos:start="73:48" pos:end="73:49"><literal type="number" pos:start="73:48" pos:end="73:49">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="block" pos:start="74:13" pos:end="74:53">/* parse extensions that we know about */</comment>
            <if_stmt pos:start="75:13" pos:end="83:13"><if pos:start="75:13" pos:end="77:13">if <condition pos:start="75:16" pos:end="75:34">(<expr pos:start="75:17" pos:end="75:33"><name pos:start="75:17" pos:end="75:19">mkr</name> <operator pos:start="75:21" pos:end="75:22">==</operator> <literal type="number" pos:start="75:24" pos:end="75:33">0x655e315e</literal></expr>)</condition> <block pos:start="75:36" pos:end="77:13">{<block_content pos:start="76:17" pos:end="76:39">
                <expr_stmt pos:start="76:17" pos:end="76:39"><expr pos:start="76:17" pos:end="76:38"><call pos:start="76:17" pos:end="76:38"><name pos:start="76:17" pos:end="76:35">dca_xbr_parse_frame</name><argument_list pos:start="76:36" pos:end="76:38">(<argument pos:start="76:37" pos:end="76:37"><expr pos:start="76:37" pos:end="76:37"><name pos:start="76:37" pos:end="76:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="77:15" pos:end="80:13">else if <condition pos:start="77:23" pos:end="77:41">(<expr pos:start="77:24" pos:end="77:40"><name pos:start="77:24" pos:end="77:26">mkr</name> <operator pos:start="77:28" pos:end="77:29">==</operator> <literal type="number" pos:start="77:31" pos:end="77:40">0x47004a03</literal></expr>)</condition> <block pos:start="77:43" pos:end="80:13">{<block_content pos:start="78:17" pos:end="79:49">
                <expr_stmt pos:start="78:17" pos:end="78:41"><expr pos:start="78:17" pos:end="78:40"><call pos:start="78:17" pos:end="78:40"><name pos:start="78:17" pos:end="78:37">dca_xxch_decode_frame</name><argument_list pos:start="78:38" pos:end="78:40">(<argument pos:start="78:39" pos:end="78:39"><expr pos:start="78:39" pos:end="78:39"><name pos:start="78:39" pos:end="78:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="79:17" pos:end="79:49"><expr pos:start="79:17" pos:end="79:48"><name pos:start="79:17" pos:end="79:32"><name pos:start="79:17" pos:end="79:17">s</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:32">core_ext_mask</name></name> <operator pos:start="79:34" pos:end="79:35">|=</operator> <name pos:start="79:37" pos:end="79:48">DCA_EXT_XXCH</name></expr>;</expr_stmt> <comment type="block" pos:start="79:51" pos:end="79:83">/* xxx use for chan reordering */</comment>
            </block_content>}</block></if> <else pos:start="80:15" pos:end="83:13">else <block pos:start="80:20" pos:end="83:13">{<block_content pos:start="81:17" pos:end="82:67">
                <expr_stmt pos:start="81:17" pos:end="82:67"><expr pos:start="81:17" pos:end="82:66"><call pos:start="81:17" pos:end="82:66"><name pos:start="81:17" pos:end="81:22">av_log</name><argument_list pos:start="81:23" pos:end="82:66">(<argument pos:start="81:24" pos:end="81:31"><expr pos:start="81:24" pos:end="81:31"><name pos:start="81:24" pos:end="81:31"><name pos:start="81:24" pos:end="81:24">s</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:31">avctx</name></name></expr></argument>, <argument pos:start="81:34" pos:end="81:45"><expr pos:start="81:34" pos:end="81:45"><name pos:start="81:34" pos:end="81:45">AV_LOG_DEBUG</name></expr></argument>,
                       <argument pos:start="82:24" pos:end="82:60"><expr pos:start="82:24" pos:end="82:60"><literal type="string" pos:start="82:24" pos:end="82:60">"DTS-ExSS: unknown marker = 0x%08x\n"</literal></expr></argument>, <argument pos:start="82:63" pos:end="82:65"><expr pos:start="82:63" pos:end="82:65"><name pos:start="82:63" pos:end="82:65">mkr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
            <comment type="block" pos:start="84:13" pos:end="84:38">/* skip to end of block */</comment>
            <expr_stmt pos:start="85:13" pos:end="85:39"><expr pos:start="85:13" pos:end="85:38"><name pos:start="85:13" pos:end="85:13">j</name> <operator pos:start="85:15" pos:end="85:15">=</operator> <call pos:start="85:17" pos:end="85:38"><name pos:start="85:17" pos:end="85:30">get_bits_count</name><argument_list pos:start="85:31" pos:end="85:38">(<argument pos:start="85:32" pos:end="85:37"><expr pos:start="85:32" pos:end="85:37"><operator pos:start="85:32" pos:end="85:32">&amp;</operator><name pos:start="85:33" pos:end="85:37"><name pos:start="85:33" pos:end="85:33">s</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="86:13" pos:end="87:75"><if pos:start="86:13" pos:end="87:75">if <condition pos:start="86:16" pos:end="86:51">(<expr pos:start="86:17" pos:end="86:50"><name pos:start="86:17" pos:end="86:26">start_posn</name> <operator pos:start="86:28" pos:end="86:28">+</operator> <name pos:start="86:30" pos:end="86:42"><name pos:start="86:30" pos:end="86:39">asset_size</name><index pos:start="86:40" pos:end="86:42">[<expr pos:start="86:41" pos:end="86:41"><name pos:start="86:41" pos:end="86:41">i</name></expr>]</index></name> <operator pos:start="86:44" pos:end="86:44">*</operator> <literal type="number" pos:start="86:46" pos:end="86:46">8</literal> <operator pos:start="86:48" pos:end="86:48">&gt;</operator> <name pos:start="86:50" pos:end="86:50">j</name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:75"><block_content pos:start="87:17" pos:end="87:75">
                <expr_stmt pos:start="87:17" pos:end="87:75"><expr pos:start="87:17" pos:end="87:74"><call pos:start="87:17" pos:end="87:74"><name pos:start="87:17" pos:end="87:30">skip_bits_long</name><argument_list pos:start="87:31" pos:end="87:74">(<argument pos:start="87:32" pos:end="87:37"><expr pos:start="87:32" pos:end="87:37"><operator pos:start="87:32" pos:end="87:32">&amp;</operator><name pos:start="87:33" pos:end="87:37"><name pos:start="87:33" pos:end="87:33">s</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:37">gb</name></name></expr></argument>, <argument pos:start="87:40" pos:end="87:73"><expr pos:start="87:40" pos:end="87:73"><name pos:start="87:40" pos:end="87:49">start_posn</name> <operator pos:start="87:51" pos:end="87:51">+</operator> <name pos:start="87:53" pos:end="87:65"><name pos:start="87:53" pos:end="87:62">asset_size</name><index pos:start="87:63" pos:end="87:65">[<expr pos:start="87:64" pos:end="87:64"><name pos:start="87:64" pos:end="87:64">i</name></expr>]</index></name> <operator pos:start="87:67" pos:end="87:67">*</operator> <literal type="number" pos:start="87:69" pos:end="87:71">8</literal> <operator pos:start="87:71" pos:end="87:71">-</operator> <name pos:start="87:73" pos:end="87:73">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></for>
</block_content>}</block></function></unit>
