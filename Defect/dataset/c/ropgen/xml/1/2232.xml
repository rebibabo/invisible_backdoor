<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2232.c" pos:tabs="8"><function pos:start="1:1" pos:end="94:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">rv10_decode_packet</name><parameter_list pos:start="1:30" pos:end="2:77">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>,
                             <parameter pos:start="2:30" pos:end="2:47"><decl pos:start="2:30" pos:end="2:47"><type pos:start="2:30" pos:end="2:47"><specifier pos:start="2:30" pos:end="2:34">const</specifier> <name pos:start="2:36" pos:end="2:42">uint8_t</name> <modifier pos:start="2:44" pos:end="2:44">*</modifier></type><name pos:start="2:45" pos:end="2:47">buf</name></decl></parameter>, <parameter pos:start="2:50" pos:end="2:61"><decl pos:start="2:50" pos:end="2:61"><type pos:start="2:50" pos:end="2:61"><name pos:start="2:50" pos:end="2:52">int</name></type> <name pos:start="2:54" pos:end="2:61">buf_size</name></decl></parameter>, <parameter pos:start="2:64" pos:end="2:76"><decl pos:start="2:64" pos:end="2:76"><type pos:start="2:64" pos:end="2:76"><name pos:start="2:64" pos:end="2:66">int</name></type> <name pos:start="2:68" pos:end="2:76">buf_size2</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="94:1">{<block_content pos:start="4:5" pos:end="93:30">
    <decl_stmt pos:start="4:5" pos:end="4:41"><decl pos:start="4:5" pos:end="4:40"><type pos:start="4:5" pos:end="4:20"><name pos:start="4:5" pos:end="4:18">MpegEncContext</name> <modifier pos:start="4:20" pos:end="4:20">*</modifier></type><name pos:start="4:21" pos:end="4:21">s</name> <init pos:start="4:23" pos:end="4:40">= <expr pos:start="4:25" pos:end="4:40"><name pos:start="4:25" pos:end="4:40"><name pos:start="4:25" pos:end="4:29">avctx</name><operator pos:start="4:30" pos:end="4:31">-&gt;</operator><name pos:start="4:32" pos:end="4:40">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">mb_count</name></decl>, <decl pos:start="5:19" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:24">mb_pos</name></decl>, <decl pos:start="5:27" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:27" pos:end="5:30">left</name></decl>, <decl pos:start="5:33" pos:end="5:42"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:33" pos:end="5:42">start_mb_x</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:43"><expr pos:start="6:5" pos:end="6:42"><call pos:start="6:5" pos:end="6:42"><name pos:start="6:5" pos:end="6:17">init_get_bits</name><argument_list pos:start="6:18" pos:end="6:42">(<argument pos:start="6:19" pos:end="6:24"><expr pos:start="6:19" pos:end="6:24"><operator pos:start="6:19" pos:end="6:19">&amp;</operator><name pos:start="6:20" pos:end="6:24"><name pos:start="6:20" pos:end="6:20">s</name><operator pos:start="6:21" pos:end="6:22">-&gt;</operator><name pos:start="6:23" pos:end="6:24">gb</name></name></expr></argument>, <argument pos:start="6:27" pos:end="6:29"><expr pos:start="6:27" pos:end="6:29"><name pos:start="6:27" pos:end="6:29">buf</name></expr></argument>, <argument pos:start="6:32" pos:end="6:41"><expr pos:start="6:32" pos:end="6:41"><name pos:start="6:32" pos:end="6:39">buf_size</name><operator pos:start="6:40" pos:end="6:40">*</operator><literal type="number" pos:start="6:41" pos:end="6:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="7:5" pos:end="10:49"><if pos:start="7:5" pos:end="8:49">if<condition pos:start="7:7" pos:end="7:35">(<expr pos:start="7:8" pos:end="7:34"><name pos:start="7:8" pos:end="7:18"><name pos:start="7:8" pos:end="7:8">s</name><operator pos:start="7:9" pos:end="7:10">-&gt;</operator><name pos:start="7:11" pos:end="7:18">codec_id</name></name> <operator pos:start="7:20" pos:end="7:21">==</operator><name pos:start="7:22" pos:end="7:34">CODEC_ID_RV10</name></expr>)</condition><block type="pseudo" pos:start="8:9" pos:end="8:49"><block_content pos:start="8:9" pos:end="8:49">
        <expr_stmt pos:start="8:9" pos:end="8:49"><expr pos:start="8:9" pos:end="8:48"><name pos:start="8:9" pos:end="8:16">mb_count</name> <operator pos:start="8:18" pos:end="8:18">=</operator> <call pos:start="8:20" pos:end="8:48"><name pos:start="8:20" pos:end="8:45">rv10_decode_picture_header</name><argument_list pos:start="8:46" pos:end="8:48">(<argument pos:start="8:47" pos:end="8:47"><expr pos:start="8:47" pos:end="8:47"><name pos:start="8:47" pos:end="8:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="9:5" pos:end="10:49">else<block type="pseudo" pos:start="10:9" pos:end="10:49"><block_content pos:start="10:9" pos:end="10:49">
        <expr_stmt pos:start="10:9" pos:end="10:49"><expr pos:start="10:9" pos:end="10:48"><name pos:start="10:9" pos:end="10:16">mb_count</name> <operator pos:start="10:18" pos:end="10:18">=</operator> <call pos:start="10:20" pos:end="10:48"><name pos:start="10:20" pos:end="10:45">rv20_decode_picture_header</name><argument_list pos:start="10:46" pos:end="10:48">(<argument pos:start="10:47" pos:end="10:47"><expr pos:start="10:47" pos:end="10:47"><name pos:start="10:47" pos:end="10:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="11:5" pos:end="13:5"><if pos:start="11:5" pos:end="13:5">if <condition pos:start="11:8" pos:end="11:21">(<expr pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:16">mb_count</name> <operator pos:start="11:18" pos:end="11:18">&lt;</operator> <literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr>)</condition> <block pos:start="11:23" pos:end="13:5">{<block_content pos:start="12:9" pos:end="12:57">
        <expr_stmt pos:start="12:9" pos:end="12:57"><expr pos:start="12:9" pos:end="12:56"><call pos:start="12:9" pos:end="12:56"><name pos:start="12:9" pos:end="12:14">av_log</name><argument_list pos:start="12:15" pos:end="12:56">(<argument pos:start="12:16" pos:end="12:23"><expr pos:start="12:16" pos:end="12:23"><name pos:start="12:16" pos:end="12:23"><name pos:start="12:16" pos:end="12:16">s</name><operator pos:start="12:17" pos:end="12:18">-&gt;</operator><name pos:start="12:19" pos:end="12:23">avctx</name></name></expr></argument>, <argument pos:start="12:26" pos:end="12:37"><expr pos:start="12:26" pos:end="12:37"><name pos:start="12:26" pos:end="12:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="12:40" pos:end="12:55"><expr pos:start="12:40" pos:end="12:55"><literal type="string" pos:start="12:40" pos:end="12:55">"HEADER ERROR\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="14:5" pos:end="17:5"><if pos:start="14:5" pos:end="17:5">if <condition pos:start="14:8" pos:end="15:32">(<expr pos:start="14:9" pos:end="15:31"><name pos:start="14:9" pos:end="14:15"><name pos:start="14:9" pos:end="14:9">s</name><operator pos:start="14:10" pos:end="14:11">-&gt;</operator><name pos:start="14:12" pos:end="14:15">mb_x</name></name> <operator pos:start="14:17" pos:end="14:18">&gt;=</operator> <name pos:start="14:20" pos:end="14:30"><name pos:start="14:20" pos:end="14:20">s</name><operator pos:start="14:21" pos:end="14:22">-&gt;</operator><name pos:start="14:23" pos:end="14:30">mb_width</name></name> <operator pos:start="14:32" pos:end="14:33">||</operator>
        <name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:15">mb_y</name></name> <operator pos:start="15:17" pos:end="15:18">&gt;=</operator> <name pos:start="15:20" pos:end="15:31"><name pos:start="15:20" pos:end="15:20">s</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:31">mb_height</name></name></expr>)</condition> <block pos:start="15:34" pos:end="17:5">{<block_content pos:start="16:9" pos:end="16:78">
        <expr_stmt pos:start="16:9" pos:end="16:78"><expr pos:start="16:9" pos:end="16:77"><call pos:start="16:9" pos:end="16:77"><name pos:start="16:9" pos:end="16:14">av_log</name><argument_list pos:start="16:15" pos:end="16:77">(<argument pos:start="16:16" pos:end="16:23"><expr pos:start="16:16" pos:end="16:23"><name pos:start="16:16" pos:end="16:23"><name pos:start="16:16" pos:end="16:16">s</name><operator pos:start="16:17" pos:end="16:18">-&gt;</operator><name pos:start="16:19" pos:end="16:23">avctx</name></name></expr></argument>, <argument pos:start="16:26" pos:end="16:37"><expr pos:start="16:26" pos:end="16:37"><name pos:start="16:26" pos:end="16:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="16:40" pos:end="16:58"><expr pos:start="16:40" pos:end="16:58"><literal type="string" pos:start="16:40" pos:end="16:58">"POS ERROR %d %d\n"</literal></expr></argument>, <argument pos:start="16:61" pos:end="16:67"><expr pos:start="16:61" pos:end="16:67"><name pos:start="16:61" pos:end="16:67"><name pos:start="16:61" pos:end="16:61">s</name><operator pos:start="16:62" pos:end="16:63">-&gt;</operator><name pos:start="16:64" pos:end="16:67">mb_x</name></name></expr></argument>, <argument pos:start="16:70" pos:end="16:76"><expr pos:start="16:70" pos:end="16:76"><name pos:start="16:70" pos:end="16:76"><name pos:start="16:70" pos:end="16:70">s</name><operator pos:start="16:71" pos:end="16:72">-&gt;</operator><name pos:start="16:73" pos:end="16:76">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:45"><expr pos:start="18:5" pos:end="18:44"><name pos:start="18:5" pos:end="18:10">mb_pos</name> <operator pos:start="18:12" pos:end="18:12">=</operator> <name pos:start="18:14" pos:end="18:20"><name pos:start="18:14" pos:end="18:14">s</name><operator pos:start="18:15" pos:end="18:16">-&gt;</operator><name pos:start="18:17" pos:end="18:20">mb_y</name></name> <operator pos:start="18:22" pos:end="18:22">*</operator> <name pos:start="18:24" pos:end="18:34"><name pos:start="18:24" pos:end="18:24">s</name><operator pos:start="18:25" pos:end="18:26">-&gt;</operator><name pos:start="18:27" pos:end="18:34">mb_width</name></name> <operator pos:start="18:36" pos:end="18:36">+</operator> <name pos:start="18:38" pos:end="18:44"><name pos:start="18:38" pos:end="18:38">s</name><operator pos:start="18:39" pos:end="18:40">-&gt;</operator><name pos:start="18:41" pos:end="18:44">mb_x</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:47"><expr pos:start="19:5" pos:end="19:46"><name pos:start="19:5" pos:end="19:8">left</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <name pos:start="19:12" pos:end="19:22"><name pos:start="19:12" pos:end="19:12">s</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:22">mb_width</name></name> <operator pos:start="19:24" pos:end="19:24">*</operator> <name pos:start="19:26" pos:end="19:37"><name pos:start="19:26" pos:end="19:26">s</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:37">mb_height</name></name> <operator pos:start="19:39" pos:end="19:39">-</operator> <name pos:start="19:41" pos:end="19:46">mb_pos</name></expr>;</expr_stmt>
    <if_stmt pos:start="20:5" pos:end="22:5"><if pos:start="20:5" pos:end="22:5">if <condition pos:start="20:8" pos:end="20:24">(<expr pos:start="20:9" pos:end="20:23"><name pos:start="20:9" pos:end="20:16">mb_count</name> <operator pos:start="20:18" pos:end="20:18">&gt;</operator> <name pos:start="20:20" pos:end="20:23">left</name></expr>)</condition> <block pos:start="20:26" pos:end="22:5">{<block_content pos:start="21:9" pos:end="21:56">
        <expr_stmt pos:start="21:9" pos:end="21:56"><expr pos:start="21:9" pos:end="21:55"><call pos:start="21:9" pos:end="21:55"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:55">(<argument pos:start="21:16" pos:end="21:23"><expr pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:23">avctx</name></name></expr></argument>, <argument pos:start="21:26" pos:end="21:37"><expr pos:start="21:26" pos:end="21:37"><name pos:start="21:26" pos:end="21:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:40" pos:end="21:54"><expr pos:start="21:40" pos:end="21:54"><literal type="string" pos:start="21:40" pos:end="21:54">"COUNT ERROR\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:71">(<expr pos:start="23:9" pos:end="23:70"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:16"><name pos:start="23:10" pos:end="23:10">s</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:16">mb_x</name></name> <operator pos:start="23:18" pos:end="23:19">==</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal> <operator pos:start="23:23" pos:end="23:24">&amp;&amp;</operator> <name pos:start="23:26" pos:end="23:32"><name pos:start="23:26" pos:end="23:26">s</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:32">mb_y</name></name> <operator pos:start="23:34" pos:end="23:35">==</operator> <literal type="number" pos:start="23:37" pos:end="23:37">0</literal><operator pos:start="23:38" pos:end="23:38">)</operator> <operator pos:start="23:40" pos:end="23:41">||</operator> <name pos:start="23:43" pos:end="23:64"><name pos:start="23:43" pos:end="23:43">s</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:64">current_picture_ptr</name></name><operator pos:start="23:65" pos:end="23:66">==</operator><name pos:start="23:67" pos:end="23:70">NULL</name></expr>)</condition> <block pos:start="23:73" pos:end="31:5">{<block_content pos:start="24:9" pos:end="30:29">
        <if_stmt pos:start="24:9" pos:end="28:9"><if pos:start="24:9" pos:end="28:9">if<condition pos:start="24:11" pos:end="24:34">(<expr pos:start="24:12" pos:end="24:33"><name pos:start="24:12" pos:end="24:33"><name pos:start="24:12" pos:end="24:12">s</name><operator pos:start="24:13" pos:end="24:14">-&gt;</operator><name pos:start="24:15" pos:end="24:33">current_picture_ptr</name></name></expr>)</condition><block pos:start="24:35" pos:end="28:9">{<block_content pos:start="25:13" pos:end="27:66"> <comment type="line" pos:start="24:37" pos:end="24:91">//FIXME write parser so we always have complete frames?</comment>
            <expr_stmt pos:start="25:13" pos:end="25:31"><expr pos:start="25:13" pos:end="25:30"><call pos:start="25:13" pos:end="25:30"><name pos:start="25:13" pos:end="25:27">ff_er_frame_end</name><argument_list pos:start="25:28" pos:end="25:30">(<argument pos:start="25:29" pos:end="25:29"><expr pos:start="25:29" pos:end="25:29"><name pos:start="25:29" pos:end="25:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="26:13" pos:end="26:29"><expr pos:start="26:13" pos:end="26:28"><call pos:start="26:13" pos:end="26:28"><name pos:start="26:13" pos:end="26:25">MPV_frame_end</name><argument_list pos:start="26:26" pos:end="26:28">(<argument pos:start="26:27" pos:end="26:27"><expr pos:start="26:27" pos:end="26:27"><name pos:start="26:27" pos:end="26:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="27:13" pos:end="27:66"><expr pos:start="27:13" pos:end="27:65"><name pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:19">mb_x</name></name><operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:28"><name pos:start="27:22" pos:end="27:22">s</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:28">mb_y</name></name> <operator pos:start="27:30" pos:end="27:30">=</operator> <name pos:start="27:32" pos:end="27:45"><name pos:start="27:32" pos:end="27:32">s</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:45">resync_mb_x</name></name> <operator pos:start="27:47" pos:end="27:47">=</operator> <name pos:start="27:49" pos:end="27:62"><name pos:start="27:49" pos:end="27:49">s</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:62">resync_mb_y</name></name><operator pos:start="27:63" pos:end="27:63">=</operator> <literal type="number" pos:start="27:65" pos:end="27:65">0</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="29:9" pos:end="30:29"><if pos:start="29:9" pos:end="30:29">if<condition pos:start="29:11" pos:end="29:41">(<expr pos:start="29:12" pos:end="29:40"><call pos:start="29:12" pos:end="29:36"><name pos:start="29:12" pos:end="29:26">MPV_frame_start</name><argument_list pos:start="29:27" pos:end="29:36">(<argument pos:start="29:28" pos:end="29:28"><expr pos:start="29:28" pos:end="29:28"><name pos:start="29:28" pos:end="29:28">s</name></expr></argument>, <argument pos:start="29:31" pos:end="29:35"><expr pos:start="29:31" pos:end="29:35"><name pos:start="29:31" pos:end="29:35">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="29:38" pos:end="29:38">&lt;</operator> <literal type="number" pos:start="29:40" pos:end="29:40">0</literal></expr>)</condition><block type="pseudo" pos:start="30:9" pos:end="30:29"><block_content pos:start="30:9" pos:end="30:29">
        <expr_stmt pos:start="30:9" pos:end="30:29"><expr pos:start="30:9" pos:end="30:28"><call pos:start="30:9" pos:end="30:28"><name pos:start="30:9" pos:end="30:25">ff_er_frame_start</name><argument_list pos:start="30:26" pos:end="30:28">(<argument pos:start="30:27" pos:end="30:27"><expr pos:start="30:27" pos:end="30:27"><name pos:start="30:27" pos:end="30:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:45"><expr pos:start="32:5" pos:end="32:44"><call pos:start="32:5" pos:end="32:44"><name pos:start="32:5" pos:end="32:11">av_dlog</name><argument_list pos:start="32:12" pos:end="32:44">(<argument pos:start="32:13" pos:end="32:17"><expr pos:start="32:13" pos:end="32:17"><name pos:start="32:13" pos:end="32:17">avctx</name></expr></argument>, <argument pos:start="32:20" pos:end="32:32"><expr pos:start="32:20" pos:end="32:32"><literal type="string" pos:start="32:20" pos:end="32:32">"qscale=%d\n"</literal></expr></argument>, <argument pos:start="32:35" pos:end="32:43"><expr pos:start="32:35" pos:end="32:43"><name pos:start="32:35" pos:end="32:43"><name pos:start="32:35" pos:end="32:35">s</name><operator pos:start="32:36" pos:end="32:37">-&gt;</operator><name pos:start="32:38" pos:end="32:43">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="33:5" pos:end="33:37">/* default quantization values */</comment>
    <if_stmt pos:start="34:5" pos:end="39:5"><if pos:start="34:5" pos:end="36:5">if<condition pos:start="34:7" pos:end="34:35">(<expr pos:start="34:8" pos:end="34:34"><name pos:start="34:8" pos:end="34:18"><name pos:start="34:8" pos:end="34:8">s</name><operator pos:start="34:9" pos:end="34:10">-&gt;</operator><name pos:start="34:11" pos:end="34:18">codec_id</name></name><operator pos:start="34:19" pos:end="34:20">==</operator> <name pos:start="34:22" pos:end="34:34">CODEC_ID_RV10</name></expr>)</condition><block pos:start="34:36" pos:end="36:5">{<block_content pos:start="35:9" pos:end="35:45">
        <if_stmt pos:start="35:9" pos:end="35:45"><if pos:start="35:9" pos:end="35:45">if<condition pos:start="35:11" pos:end="35:22">(<expr pos:start="35:12" pos:end="35:21"><name pos:start="35:12" pos:end="35:18"><name pos:start="35:12" pos:end="35:12">s</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:18">mb_y</name></name><operator pos:start="35:19" pos:end="35:20">==</operator><literal type="number" pos:start="35:21" pos:end="35:21">0</literal></expr>)</condition><block type="pseudo" pos:start="35:24" pos:end="35:45"><block_content pos:start="35:24" pos:end="35:45"> <expr_stmt pos:start="35:24" pos:end="35:45"><expr pos:start="35:24" pos:end="35:44"><name pos:start="35:24" pos:end="35:42"><name pos:start="35:24" pos:end="35:24">s</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:42">first_slice_line</name></name><operator pos:start="35:43" pos:end="35:43">=</operator><literal type="number" pos:start="35:44" pos:end="35:44">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></if><else pos:start="36:6" pos:end="39:5">else<block pos:start="36:10" pos:end="39:5">{<block_content pos:start="37:9" pos:end="38:32">
        <expr_stmt pos:start="37:9" pos:end="37:30"><expr pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:27">first_slice_line</name></name><operator pos:start="37:28" pos:end="37:28">=</operator><literal type="number" pos:start="37:29" pos:end="37:29">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="38:9" pos:end="38:32"><expr pos:start="38:9" pos:end="38:31"><name pos:start="38:9" pos:end="38:22"><name pos:start="38:9" pos:end="38:9">s</name><operator pos:start="38:10" pos:end="38:11">-&gt;</operator><name pos:start="38:12" pos:end="38:22">resync_mb_x</name></name><operator pos:start="38:23" pos:end="38:23">=</operator> <name pos:start="38:25" pos:end="38:31"><name pos:start="38:25" pos:end="38:25">s</name><operator pos:start="38:26" pos:end="38:27">-&gt;</operator><name pos:start="38:28" pos:end="38:31">mb_x</name></name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:24"><expr pos:start="40:5" pos:end="40:23"><name pos:start="40:5" pos:end="40:14">start_mb_x</name><operator pos:start="40:15" pos:end="40:15">=</operator> <name pos:start="40:17" pos:end="40:23"><name pos:start="40:17" pos:end="40:17">s</name><operator pos:start="40:18" pos:end="40:19">-&gt;</operator><name pos:start="40:20" pos:end="40:23">mb_x</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:28"><expr pos:start="41:5" pos:end="41:27"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:18">resync_mb_y</name></name><operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:27">mb_y</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="42:5" pos:end="48:5"><if pos:start="42:5" pos:end="45:5">if<condition pos:start="42:7" pos:end="42:19">(<expr pos:start="42:8" pos:end="42:18"><name pos:start="42:8" pos:end="42:18"><name pos:start="42:8" pos:end="42:8">s</name><operator pos:start="42:9" pos:end="42:10">-&gt;</operator><name pos:start="42:11" pos:end="42:18">h263_aic</name></name></expr>)</condition><block pos:start="42:20" pos:end="45:5">{<block_content pos:start="43:9" pos:end="44:51">
        <expr_stmt pos:start="43:9" pos:end="44:51"><expr pos:start="43:9" pos:end="44:50"><name pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:27">y_dc_scale_table</name></name><operator pos:start="43:28" pos:end="43:28">=</operator>
        <name pos:start="44:9" pos:end="44:27"><name pos:start="44:9" pos:end="44:9">s</name><operator pos:start="44:10" pos:end="44:11">-&gt;</operator><name pos:start="44:12" pos:end="44:27">c_dc_scale_table</name></name><operator pos:start="44:28" pos:end="44:28">=</operator> <name pos:start="44:30" pos:end="44:50">ff_aic_dc_scale_table</name></expr>;</expr_stmt>
    </block_content>}</block></if><else pos:start="45:6" pos:end="48:5">else<block pos:start="45:10" pos:end="48:5">{<block_content pos:start="46:9" pos:end="47:53">
        <expr_stmt pos:start="46:9" pos:end="47:53"><expr pos:start="46:9" pos:end="47:52"><name pos:start="46:9" pos:end="46:27"><name pos:start="46:9" pos:end="46:9">s</name><operator pos:start="46:10" pos:end="46:11">-&gt;</operator><name pos:start="46:12" pos:end="46:27">y_dc_scale_table</name></name><operator pos:start="46:28" pos:end="46:28">=</operator>
        <name pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:27">c_dc_scale_table</name></name><operator pos:start="47:28" pos:end="47:28">=</operator> <name pos:start="47:30" pos:end="47:52">ff_mpeg1_dc_scale_table</name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <if_stmt pos:start="49:5" pos:end="50:60"><if pos:start="49:5" pos:end="50:60">if<condition pos:start="49:7" pos:end="49:25">(<expr pos:start="49:8" pos:end="49:24"><name pos:start="49:8" pos:end="49:24"><name pos:start="49:8" pos:end="49:8">s</name><operator pos:start="49:9" pos:end="49:10">-&gt;</operator><name pos:start="49:11" pos:end="49:24">modified_quant</name></name></expr>)</condition><block type="pseudo" pos:start="50:9" pos:end="50:60"><block_content pos:start="50:9" pos:end="50:60">
        <expr_stmt pos:start="50:9" pos:end="50:60"><expr pos:start="50:9" pos:end="50:59"><name pos:start="50:9" pos:end="50:30"><name pos:start="50:9" pos:end="50:9">s</name><operator pos:start="50:10" pos:end="50:11">-&gt;</operator><name pos:start="50:12" pos:end="50:30">chroma_qscale_table</name></name><operator pos:start="50:31" pos:end="50:31">=</operator> <name pos:start="50:33" pos:end="50:59">ff_h263_chroma_qscale_table</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="51:5" pos:end="51:32"><expr pos:start="51:5" pos:end="51:31"><call pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:17">ff_set_qscale</name><argument_list pos:start="51:18" pos:end="51:31">(<argument pos:start="51:19" pos:end="51:19"><expr pos:start="51:19" pos:end="51:19"><name pos:start="51:19" pos:end="51:19">s</name></expr></argument>, <argument pos:start="51:22" pos:end="51:30"><expr pos:start="51:22" pos:end="51:30"><name pos:start="51:22" pos:end="51:30"><name pos:start="51:22" pos:end="51:22">s</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:30">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="52:5" pos:end="52:34"><expr pos:start="52:5" pos:end="52:33"><name pos:start="52:5" pos:end="52:29"><name pos:start="52:5" pos:end="52:5">s</name><operator pos:start="52:6" pos:end="52:7">-&gt;</operator><name pos:start="52:8" pos:end="52:26">rv10_first_dc_coded</name><index pos:start="52:27" pos:end="52:29">[<expr pos:start="52:28" pos:end="52:28"><literal type="number" pos:start="52:28" pos:end="52:28">0</literal></expr>]</index></name> <operator pos:start="52:31" pos:end="52:31">=</operator> <literal type="number" pos:start="52:33" pos:end="52:33">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="53:5" pos:end="53:34"><expr pos:start="53:5" pos:end="53:33"><name pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:26">rv10_first_dc_coded</name><index pos:start="53:27" pos:end="53:29">[<expr pos:start="53:28" pos:end="53:28"><literal type="number" pos:start="53:28" pos:end="53:28">1</literal></expr>]</index></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <literal type="number" pos:start="53:33" pos:end="53:33">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="54:5" pos:end="54:34"><expr pos:start="54:5" pos:end="54:33"><name pos:start="54:5" pos:end="54:29"><name pos:start="54:5" pos:end="54:5">s</name><operator pos:start="54:6" pos:end="54:7">-&gt;</operator><name pos:start="54:8" pos:end="54:26">rv10_first_dc_coded</name><index pos:start="54:27" pos:end="54:29">[<expr pos:start="54:28" pos:end="54:28"><literal type="number" pos:start="54:28" pos:end="54:28">2</literal></expr>]</index></name> <operator pos:start="54:31" pos:end="54:31">=</operator> <literal type="number" pos:start="54:33" pos:end="54:33">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="55:5" pos:end="58:35"><expr pos:start="55:5" pos:end="58:34"><name pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:17">block_wrap</name><index pos:start="55:18" pos:end="55:20">[<expr pos:start="55:19" pos:end="55:19"><literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr>]</index></name><operator pos:start="55:21" pos:end="55:21">=</operator>
    <name pos:start="56:5" pos:end="56:20"><name pos:start="56:5" pos:end="56:5">s</name><operator pos:start="56:6" pos:end="56:7">-&gt;</operator><name pos:start="56:8" pos:end="56:17">block_wrap</name><index pos:start="56:18" pos:end="56:20">[<expr pos:start="56:19" pos:end="56:19"><literal type="number" pos:start="56:19" pos:end="56:19">1</literal></expr>]</index></name><operator pos:start="56:21" pos:end="56:21">=</operator>
    <name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:17">block_wrap</name><index pos:start="57:18" pos:end="57:20">[<expr pos:start="57:19" pos:end="57:19"><literal type="number" pos:start="57:19" pos:end="57:19">2</literal></expr>]</index></name><operator pos:start="57:21" pos:end="57:21">=</operator>
    <name pos:start="58:5" pos:end="58:20"><name pos:start="58:5" pos:end="58:5">s</name><operator pos:start="58:6" pos:end="58:7">-&gt;</operator><name pos:start="58:8" pos:end="58:17">block_wrap</name><index pos:start="58:18" pos:end="58:20">[<expr pos:start="58:19" pos:end="58:19"><literal type="number" pos:start="58:19" pos:end="58:19">3</literal></expr>]</index></name><operator pos:start="58:21" pos:end="58:21">=</operator> <name pos:start="58:23" pos:end="58:34"><name pos:start="58:23" pos:end="58:23">s</name><operator pos:start="58:24" pos:end="58:25">-&gt;</operator><name pos:start="58:26" pos:end="58:34">b8_stride</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="59:5" pos:end="60:35"><expr pos:start="59:5" pos:end="60:34"><name pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:17">block_wrap</name><index pos:start="59:18" pos:end="59:20">[<expr pos:start="59:19" pos:end="59:19"><literal type="number" pos:start="59:19" pos:end="59:19">4</literal></expr>]</index></name><operator pos:start="59:21" pos:end="59:21">=</operator>
    <name pos:start="60:5" pos:end="60:20"><name pos:start="60:5" pos:end="60:5">s</name><operator pos:start="60:6" pos:end="60:7">-&gt;</operator><name pos:start="60:8" pos:end="60:17">block_wrap</name><index pos:start="60:18" pos:end="60:20">[<expr pos:start="60:19" pos:end="60:19"><literal type="number" pos:start="60:19" pos:end="60:19">5</literal></expr>]</index></name><operator pos:start="60:21" pos:end="60:21">=</operator> <name pos:start="60:23" pos:end="60:34"><name pos:start="60:23" pos:end="60:23">s</name><operator pos:start="60:24" pos:end="60:25">-&gt;</operator><name pos:start="60:26" pos:end="60:34">mb_stride</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="61:5" pos:end="61:27"><expr pos:start="61:5" pos:end="61:26"><call pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:23">ff_init_block_index</name><argument_list pos:start="61:24" pos:end="61:26">(<argument pos:start="61:25" pos:end="61:25"><expr pos:start="61:25" pos:end="61:25"><name pos:start="61:25" pos:end="61:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="62:5" pos:end="62:32">/* decode each macroblock */</comment>
    <for pos:start="63:5" pos:end="91:5">for<control pos:start="63:8" pos:end="63:69">(<init pos:start="63:9" pos:end="63:33"><expr pos:start="63:9" pos:end="63:32"><name pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:22">mb_num_left</name></name><operator pos:start="63:23" pos:end="63:23">=</operator> <name pos:start="63:25" pos:end="63:32">mb_count</name></expr>;</init> <condition pos:start="63:35" pos:end="63:51"><expr pos:start="63:35" pos:end="63:50"><name pos:start="63:35" pos:end="63:48"><name pos:start="63:35" pos:end="63:35">s</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:48">mb_num_left</name></name><operator pos:start="63:49" pos:end="63:49">&gt;</operator><literal type="number" pos:start="63:50" pos:end="63:50">0</literal></expr>;</condition> <incr pos:start="63:53" pos:end="63:68"><expr pos:start="63:53" pos:end="63:68"><name pos:start="63:53" pos:end="63:66"><name pos:start="63:53" pos:end="63:53">s</name><operator pos:start="63:54" pos:end="63:55">-&gt;</operator><name pos:start="63:56" pos:end="63:66">mb_num_left</name></name><operator pos:start="63:67" pos:end="63:68">--</operator></expr></incr>)</control> <block pos:start="63:71" pos:end="91:5">{<block_content pos:start="64:9" pos:end="90:35">
        <decl_stmt pos:start="64:9" pos:end="64:16"><decl pos:start="64:9" pos:end="64:15"><type pos:start="64:9" pos:end="64:11"><name pos:start="64:9" pos:end="64:11">int</name></type> <name pos:start="64:13" pos:end="64:15">ret</name></decl>;</decl_stmt>
        <expr_stmt pos:start="65:9" pos:end="65:33"><expr pos:start="65:9" pos:end="65:32"><call pos:start="65:9" pos:end="65:32"><name pos:start="65:9" pos:end="65:29">ff_update_block_index</name><argument_list pos:start="65:30" pos:end="65:32">(<argument pos:start="65:31" pos:end="65:31"><expr pos:start="65:31" pos:end="65:31"><name pos:start="65:31" pos:end="65:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="66:9" pos:end="66:61"><expr pos:start="66:9" pos:end="66:60"><call pos:start="66:9" pos:end="66:60"><name pos:start="66:9" pos:end="66:15">av_dlog</name><argument_list pos:start="66:16" pos:end="66:60">(<argument pos:start="66:17" pos:end="66:21"><expr pos:start="66:17" pos:end="66:21"><name pos:start="66:17" pos:end="66:21">avctx</name></expr></argument>, <argument pos:start="66:24" pos:end="66:41"><expr pos:start="66:24" pos:end="66:41"><literal type="string" pos:start="66:24" pos:end="66:41">"**mb x=%d y=%d\n"</literal></expr></argument>, <argument pos:start="66:44" pos:end="66:50"><expr pos:start="66:44" pos:end="66:50"><name pos:start="66:44" pos:end="66:50"><name pos:start="66:44" pos:end="66:44">s</name><operator pos:start="66:45" pos:end="66:46">-&gt;</operator><name pos:start="66:47" pos:end="66:50">mb_x</name></name></expr></argument>, <argument pos:start="66:53" pos:end="66:59"><expr pos:start="66:53" pos:end="66:59"><name pos:start="66:53" pos:end="66:59"><name pos:start="66:53" pos:end="66:53">s</name><operator pos:start="66:54" pos:end="66:55">-&gt;</operator><name pos:start="66:56" pos:end="66:59">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="67:9" pos:end="67:35"><expr pos:start="67:9" pos:end="67:34"><name pos:start="67:9" pos:end="67:17"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:17">mv_dir</name></name> <operator pos:start="67:19" pos:end="67:19">=</operator> <name pos:start="67:21" pos:end="67:34">MV_DIR_FORWARD</name></expr>;</expr_stmt>
        <expr_stmt pos:start="68:9" pos:end="68:35"><expr pos:start="68:9" pos:end="68:34"><name pos:start="68:9" pos:end="68:18"><name pos:start="68:9" pos:end="68:9">s</name><operator pos:start="68:10" pos:end="68:11">-&gt;</operator><name pos:start="68:12" pos:end="68:18">mv_type</name></name> <operator pos:start="68:20" pos:end="68:20">=</operator> <name pos:start="68:22" pos:end="68:34">MV_TYPE_16X16</name></expr>;</expr_stmt>
        <expr_stmt pos:start="69:9" pos:end="69:43"><expr pos:start="69:9" pos:end="69:42"><name pos:start="69:9" pos:end="69:11">ret</name><operator pos:start="69:12" pos:end="69:12">=</operator><call pos:start="69:13" pos:end="69:42"><name pos:start="69:13" pos:end="69:29">ff_h263_decode_mb</name><argument_list pos:start="69:30" pos:end="69:42">(<argument pos:start="69:31" pos:end="69:31"><expr pos:start="69:31" pos:end="69:31"><name pos:start="69:31" pos:end="69:31">s</name></expr></argument>, <argument pos:start="69:34" pos:end="69:41"><expr pos:start="69:34" pos:end="69:41"><name pos:start="69:34" pos:end="69:41"><name pos:start="69:34" pos:end="69:34">s</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:41">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="70:9" pos:end="74:9"><if pos:start="70:9" pos:end="74:9">if <condition pos:start="70:12" pos:end="70:119">(<expr pos:start="70:13" pos:end="70:118"><name pos:start="70:13" pos:end="70:15">ret</name> <operator pos:start="70:17" pos:end="70:18">!=</operator> <name pos:start="70:20" pos:end="70:30">SLICE_ERROR</name> <operator pos:start="70:32" pos:end="70:33">&amp;&amp;</operator> <name pos:start="70:35" pos:end="70:52"><name pos:start="70:35" pos:end="70:35">s</name><operator pos:start="70:36" pos:end="70:37">-&gt;</operator><name pos:start="70:38" pos:end="70:39">gb</name><operator pos:start="70:40" pos:end="70:40">.</operator><name pos:start="70:41" pos:end="70:52">size_in_bits</name></name> <operator pos:start="70:54" pos:end="70:54">&lt;</operator> <call pos:start="70:56" pos:end="70:77"><name pos:start="70:56" pos:end="70:69">get_bits_count</name><argument_list pos:start="70:70" pos:end="70:77">(<argument pos:start="70:71" pos:end="70:76"><expr pos:start="70:71" pos:end="70:76"><operator pos:start="70:71" pos:end="70:71">&amp;</operator><name pos:start="70:72" pos:end="70:76"><name pos:start="70:72" pos:end="70:72">s</name><operator pos:start="70:73" pos:end="70:74">-&gt;</operator><name pos:start="70:75" pos:end="70:76">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="70:79" pos:end="70:80">&amp;&amp;</operator> <literal type="number" pos:start="70:82" pos:end="70:82">8</literal><operator pos:start="70:83" pos:end="70:83">*</operator><name pos:start="70:84" pos:end="70:92">buf_size2</name> <operator pos:start="70:94" pos:end="70:95">&gt;=</operator> <call pos:start="70:97" pos:end="70:118"><name pos:start="70:97" pos:end="70:110">get_bits_count</name><argument_list pos:start="70:111" pos:end="70:118">(<argument pos:start="70:112" pos:end="70:117"><expr pos:start="70:112" pos:end="70:117"><operator pos:start="70:112" pos:end="70:112">&amp;</operator><name pos:start="70:113" pos:end="70:117"><name pos:start="70:113" pos:end="70:113">s</name><operator pos:start="70:114" pos:end="70:115">-&gt;</operator><name pos:start="70:116" pos:end="70:117">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="70:120" pos:end="74:9">{<block_content pos:start="71:13" pos:end="73:26">
            <expr_stmt pos:start="71:13" pos:end="71:104"><expr pos:start="71:13" pos:end="71:103"><call pos:start="71:13" pos:end="71:103"><name pos:start="71:13" pos:end="71:18">av_log</name><argument_list pos:start="71:19" pos:end="71:103">(<argument pos:start="71:20" pos:end="71:24"><expr pos:start="71:20" pos:end="71:24"><name pos:start="71:20" pos:end="71:24">avctx</name></expr></argument>, <argument pos:start="71:27" pos:end="71:38"><expr pos:start="71:27" pos:end="71:38"><name pos:start="71:27" pos:end="71:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="71:41" pos:end="71:69"><expr pos:start="71:41" pos:end="71:69"><literal type="string" pos:start="71:41" pos:end="71:69">"update size from %d to %d\n"</literal></expr></argument>, <argument pos:start="71:72" pos:end="71:89"><expr pos:start="71:72" pos:end="71:89"><name pos:start="71:72" pos:end="71:89"><name pos:start="71:72" pos:end="71:72">s</name><operator pos:start="71:73" pos:end="71:74">-&gt;</operator><name pos:start="71:75" pos:end="71:76">gb</name><operator pos:start="71:77" pos:end="71:77">.</operator><name pos:start="71:78" pos:end="71:89">size_in_bits</name></name></expr></argument>, <argument pos:start="71:92" pos:end="71:102"><expr pos:start="71:92" pos:end="71:102"><literal type="number" pos:start="71:92" pos:end="71:92">8</literal><operator pos:start="71:93" pos:end="71:93">*</operator><name pos:start="71:94" pos:end="71:102">buf_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="72:13" pos:end="72:44"><expr pos:start="72:13" pos:end="72:43"><name pos:start="72:13" pos:end="72:30"><name pos:start="72:13" pos:end="72:13">s</name><operator pos:start="72:14" pos:end="72:15">-&gt;</operator><name pos:start="72:16" pos:end="72:17">gb</name><operator pos:start="72:18" pos:end="72:18">.</operator><name pos:start="72:19" pos:end="72:30">size_in_bits</name></name><operator pos:start="72:31" pos:end="72:31">=</operator> <literal type="number" pos:start="72:33" pos:end="72:33">8</literal><operator pos:start="72:34" pos:end="72:34">*</operator><name pos:start="72:35" pos:end="72:43">buf_size2</name></expr>;</expr_stmt>
            <expr_stmt pos:start="73:13" pos:end="73:26"><expr pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:15">ret</name><operator pos:start="73:16" pos:end="73:16">=</operator> <name pos:start="73:18" pos:end="73:25">SLICE_OK</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="75:9" pos:end="77:9"><if pos:start="75:9" pos:end="77:9">if <condition pos:start="75:12" pos:end="75:78">(<expr pos:start="75:13" pos:end="75:77"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:18">==</operator> <name pos:start="75:20" pos:end="75:30">SLICE_ERROR</name> <operator pos:start="75:32" pos:end="75:33">||</operator> <name pos:start="75:35" pos:end="75:52"><name pos:start="75:35" pos:end="75:35">s</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:39">gb</name><operator pos:start="75:40" pos:end="75:40">.</operator><name pos:start="75:41" pos:end="75:52">size_in_bits</name></name> <operator pos:start="75:54" pos:end="75:54">&lt;</operator> <call pos:start="75:56" pos:end="75:77"><name pos:start="75:56" pos:end="75:69">get_bits_count</name><argument_list pos:start="75:70" pos:end="75:77">(<argument pos:start="75:71" pos:end="75:76"><expr pos:start="75:71" pos:end="75:76"><operator pos:start="75:71" pos:end="75:71">&amp;</operator><name pos:start="75:72" pos:end="75:76"><name pos:start="75:72" pos:end="75:72">s</name><operator pos:start="75:73" pos:end="75:74">-&gt;</operator><name pos:start="75:75" pos:end="75:76">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:80" pos:end="77:9">{<block_content pos:start="76:13" pos:end="76:84">
            <expr_stmt pos:start="76:13" pos:end="76:84"><expr pos:start="76:13" pos:end="76:83"><call pos:start="76:13" pos:end="76:83"><name pos:start="76:13" pos:end="76:18">av_log</name><argument_list pos:start="76:19" pos:end="76:83">(<argument pos:start="76:20" pos:end="76:27"><expr pos:start="76:20" pos:end="76:27"><name pos:start="76:20" pos:end="76:27"><name pos:start="76:20" pos:end="76:20">s</name><operator pos:start="76:21" pos:end="76:22">-&gt;</operator><name pos:start="76:23" pos:end="76:27">avctx</name></name></expr></argument>, <argument pos:start="76:30" pos:end="76:41"><expr pos:start="76:30" pos:end="76:41"><name pos:start="76:30" pos:end="76:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="76:44" pos:end="76:64"><expr pos:start="76:44" pos:end="76:64"><literal type="string" pos:start="76:44" pos:end="76:64">"ERROR at MB %d %d\n"</literal></expr></argument>, <argument pos:start="76:67" pos:end="76:73"><expr pos:start="76:67" pos:end="76:73"><name pos:start="76:67" pos:end="76:73"><name pos:start="76:67" pos:end="76:67">s</name><operator pos:start="76:68" pos:end="76:69">-&gt;</operator><name pos:start="76:70" pos:end="76:73">mb_x</name></name></expr></argument>, <argument pos:start="76:76" pos:end="76:82"><expr pos:start="76:76" pos:end="76:82"><name pos:start="76:76" pos:end="76:82"><name pos:start="76:76" pos:end="76:76">s</name><operator pos:start="76:77" pos:end="76:78">-&gt;</operator><name pos:start="76:79" pos:end="76:82">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="78:9" pos:end="79:41"><if pos:start="78:9" pos:end="79:41">if<condition pos:start="78:11" pos:end="78:45">(<expr pos:start="78:12" pos:end="78:44"><name pos:start="78:12" pos:end="78:23"><name pos:start="78:12" pos:end="78:12">s</name><operator pos:start="78:13" pos:end="78:14">-&gt;</operator><name pos:start="78:15" pos:end="78:23">pict_type</name></name> <operator pos:start="78:25" pos:end="78:26">!=</operator> <name pos:start="78:28" pos:end="78:44">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:41"><block_content pos:start="79:13" pos:end="79:41">
            <expr_stmt pos:start="79:13" pos:end="79:41"><expr pos:start="79:13" pos:end="79:40"><call pos:start="79:13" pos:end="79:40"><name pos:start="79:13" pos:end="79:37">ff_h263_update_motion_val</name><argument_list pos:start="79:38" pos:end="79:40">(<argument pos:start="79:39" pos:end="79:39"><expr pos:start="79:39" pos:end="79:39"><name pos:start="79:39" pos:end="79:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="80:9" pos:end="80:35"><expr pos:start="80:9" pos:end="80:34"><call pos:start="80:9" pos:end="80:34"><name pos:start="80:9" pos:end="80:21">MPV_decode_mb</name><argument_list pos:start="80:22" pos:end="80:34">(<argument pos:start="80:23" pos:end="80:23"><expr pos:start="80:23" pos:end="80:23"><name pos:start="80:23" pos:end="80:23">s</name></expr></argument>, <argument pos:start="80:26" pos:end="80:33"><expr pos:start="80:26" pos:end="80:33"><name pos:start="80:26" pos:end="80:33"><name pos:start="80:26" pos:end="80:26">s</name><operator pos:start="80:27" pos:end="80:28">-&gt;</operator><name pos:start="80:29" pos:end="80:33">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="81:9" pos:end="82:35"><if pos:start="81:9" pos:end="82:35">if<condition pos:start="81:11" pos:end="81:26">(<expr pos:start="81:12" pos:end="81:25"><name pos:start="81:12" pos:end="81:25"><name pos:start="81:12" pos:end="81:12">s</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:25">loop_filter</name></name></expr>)</condition><block type="pseudo" pos:start="82:13" pos:end="82:35"><block_content pos:start="82:13" pos:end="82:35">
            <expr_stmt pos:start="82:13" pos:end="82:35"><expr pos:start="82:13" pos:end="82:34"><call pos:start="82:13" pos:end="82:34"><name pos:start="82:13" pos:end="82:31">ff_h263_loop_filter</name><argument_list pos:start="82:32" pos:end="82:34">(<argument pos:start="82:33" pos:end="82:33"><expr pos:start="82:33" pos:end="82:33"><name pos:start="82:33" pos:end="82:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="83:9" pos:end="87:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:37">(<expr pos:start="83:13" pos:end="83:36"><operator pos:start="83:13" pos:end="83:14">++</operator><name pos:start="83:15" pos:end="83:21"><name pos:start="83:15" pos:end="83:15">s</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:21">mb_x</name></name> <operator pos:start="83:23" pos:end="83:24">==</operator> <name pos:start="83:26" pos:end="83:36"><name pos:start="83:26" pos:end="83:26">s</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:36">mb_width</name></name></expr>)</condition> <block pos:start="83:39" pos:end="87:9">{<block_content pos:start="84:13" pos:end="86:35">
            <expr_stmt pos:start="84:13" pos:end="84:24"><expr pos:start="84:13" pos:end="84:23"><name pos:start="84:13" pos:end="84:19"><name pos:start="84:13" pos:end="84:13">s</name><operator pos:start="84:14" pos:end="84:15">-&gt;</operator><name pos:start="84:16" pos:end="84:19">mb_x</name></name> <operator pos:start="84:21" pos:end="84:21">=</operator> <literal type="number" pos:start="84:23" pos:end="84:23">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="85:13" pos:end="85:22"><expr pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:19"><name pos:start="85:13" pos:end="85:13">s</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:19">mb_y</name></name><operator pos:start="85:20" pos:end="85:21">++</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="86:13" pos:end="86:35"><expr pos:start="86:13" pos:end="86:34"><call pos:start="86:13" pos:end="86:34"><name pos:start="86:13" pos:end="86:31">ff_init_block_index</name><argument_list pos:start="86:32" pos:end="86:34">(<argument pos:start="86:33" pos:end="86:33"><expr pos:start="86:33" pos:end="86:33"><name pos:start="86:33" pos:end="86:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="88:9" pos:end="89:34"><if pos:start="88:9" pos:end="89:34">if<condition pos:start="88:11" pos:end="88:37">(<expr pos:start="88:12" pos:end="88:36"><name pos:start="88:12" pos:end="88:18"><name pos:start="88:12" pos:end="88:12">s</name><operator pos:start="88:13" pos:end="88:14">-&gt;</operator><name pos:start="88:15" pos:end="88:18">mb_x</name></name> <operator pos:start="88:20" pos:end="88:21">==</operator> <name pos:start="88:23" pos:end="88:36"><name pos:start="88:23" pos:end="88:23">s</name><operator pos:start="88:24" pos:end="88:25">-&gt;</operator><name pos:start="88:26" pos:end="88:36">resync_mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:34"><block_content pos:start="89:13" pos:end="89:34">
            <expr_stmt pos:start="89:13" pos:end="89:34"><expr pos:start="89:13" pos:end="89:33"><name pos:start="89:13" pos:end="89:31"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:31">first_slice_line</name></name><operator pos:start="89:32" pos:end="89:32">=</operator><literal type="number" pos:start="89:33" pos:end="89:33">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="90:9" pos:end="90:35"><if pos:start="90:9" pos:end="90:35">if<condition pos:start="90:11" pos:end="90:28">(<expr pos:start="90:12" pos:end="90:27"><name pos:start="90:12" pos:end="90:14">ret</name> <operator pos:start="90:16" pos:end="90:17">==</operator> <name pos:start="90:19" pos:end="90:27">SLICE_END</name></expr>)</condition><block type="pseudo" pos:start="90:30" pos:end="90:35"><block_content pos:start="90:30" pos:end="90:35"> <break pos:start="90:30" pos:end="90:35">break;</break></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="92:5" pos:end="92:93"><expr pos:start="92:5" pos:end="92:92"><call pos:start="92:5" pos:end="92:92"><name pos:start="92:5" pos:end="92:19">ff_er_add_slice</name><argument_list pos:start="92:20" pos:end="92:92">(<argument pos:start="92:21" pos:end="92:21"><expr pos:start="92:21" pos:end="92:21"><name pos:start="92:21" pos:end="92:21">s</name></expr></argument>, <argument pos:start="92:24" pos:end="92:33"><expr pos:start="92:24" pos:end="92:33"><name pos:start="92:24" pos:end="92:33">start_mb_x</name></expr></argument>, <argument pos:start="92:36" pos:end="92:49"><expr pos:start="92:36" pos:end="92:49"><name pos:start="92:36" pos:end="92:49"><name pos:start="92:36" pos:end="92:36">s</name><operator pos:start="92:37" pos:end="92:38">-&gt;</operator><name pos:start="92:39" pos:end="92:49">resync_mb_y</name></name></expr></argument>, <argument pos:start="92:52" pos:end="92:60"><expr pos:start="92:52" pos:end="92:60"><name pos:start="92:52" pos:end="92:58"><name pos:start="92:52" pos:end="92:52">s</name><operator pos:start="92:53" pos:end="92:54">-&gt;</operator><name pos:start="92:55" pos:end="92:58">mb_x</name></name><operator pos:start="92:59" pos:end="92:59">-</operator><literal type="number" pos:start="92:60" pos:end="92:60">1</literal></expr></argument>, <argument pos:start="92:63" pos:end="92:69"><expr pos:start="92:63" pos:end="92:69"><name pos:start="92:63" pos:end="92:69"><name pos:start="92:63" pos:end="92:63">s</name><operator pos:start="92:64" pos:end="92:65">-&gt;</operator><name pos:start="92:66" pos:end="92:69">mb_y</name></name></expr></argument>, <argument pos:start="92:72" pos:end="92:91"><expr pos:start="92:72" pos:end="92:91"><name pos:start="92:72" pos:end="92:77">AC_END</name><operator pos:start="92:78" pos:end="92:78">|</operator><name pos:start="92:79" pos:end="92:84">DC_END</name><operator pos:start="92:85" pos:end="92:85">|</operator><name pos:start="92:86" pos:end="92:91">MV_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="93:5" pos:end="93:30">return <expr pos:start="93:12" pos:end="93:29"><name pos:start="93:12" pos:end="93:29"><name pos:start="93:12" pos:end="93:12">s</name><operator pos:start="93:13" pos:end="93:14">-&gt;</operator><name pos:start="93:15" pos:end="93:16">gb</name><operator pos:start="93:17" pos:end="93:17">.</operator><name pos:start="93:18" pos:end="93:29">size_in_bits</name></name></expr>;</return>
</block_content>}</block></function></unit>
