<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17607.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">rndis_query_response</name><parameter_list pos:start="1:32" pos:end="3:63">(<parameter pos:start="1:33" pos:end="1:46"><decl pos:start="1:33" pos:end="1:46"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:43">USBNetState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:41"><decl pos:start="3:17" pos:end="3:41"><type pos:start="3:17" pos:end="3:41"><name pos:start="3:17" pos:end="3:36">rndis_query_msg_type</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">buf</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:62"><decl pos:start="3:44" pos:end="3:62"><type pos:start="3:44" pos:end="3:62"><name pos:start="3:44" pos:end="3:51">unsigned</name> <name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:62">length</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:26">rndis_query_cmplt_type</name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:32">resp</name></decl>;</decl_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:54">/* oid_supported_list is the largest data reply */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:47"><name pos:start="11:13" pos:end="11:19">infobuf</name><index pos:start="11:20" pos:end="11:47">[<expr pos:start="11:21" pos:end="11:46"><sizeof pos:start="11:21" pos:end="11:46">sizeof<argument_list pos:start="11:27" pos:end="11:46">(<argument pos:start="11:28" pos:end="11:45"><expr pos:start="11:28" pos:end="11:45"><name pos:start="11:28" pos:end="11:45">oid_supported_list</name></expr></argument>)</argument_list></sizeof></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:20">bufoffs</name></decl>, <decl pos:start="13:23" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:23" pos:end="13:28">buflen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">infobuflen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:24">resplen</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:60"><expr pos:start="21:5" pos:end="21:59"><name pos:start="21:5" pos:end="21:11">bufoffs</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:55"><name pos:start="21:15" pos:end="21:25">le32_to_cpu</name><argument_list pos:start="21:26" pos:end="21:55">(<argument pos:start="21:27" pos:end="21:54"><expr pos:start="21:27" pos:end="21:54"><name pos:start="21:27" pos:end="21:54"><name pos:start="21:27" pos:end="21:29">buf</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:54">InformationBufferOffset</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:57" pos:end="21:57">+</operator> <literal type="number" pos:start="21:59" pos:end="21:59">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:55"><expr pos:start="23:5" pos:end="23:54"><name pos:start="23:5" pos:end="23:10">buflen</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:54"><name pos:start="23:14" pos:end="23:24">le32_to_cpu</name><argument_list pos:start="23:25" pos:end="23:54">(<argument pos:start="23:26" pos:end="23:53"><expr pos:start="23:26" pos:end="23:53"><name pos:start="23:26" pos:end="23:53"><name pos:start="23:26" pos:end="23:28">buf</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:53">InformationBufferLength</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:29"><if pos:start="25:5" pos:end="27:29">if <condition pos:start="25:8" pos:end="25:34">(<expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:15">bufoffs</name> <operator pos:start="25:17" pos:end="25:17">+</operator> <name pos:start="25:19" pos:end="25:24">buflen</name> <operator pos:start="25:26" pos:end="25:26">&gt;</operator> <name pos:start="25:28" pos:end="25:33">length</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:29"><block_content pos:start="27:9" pos:end="27:29">

        <return pos:start="27:9" pos:end="27:29">return <expr pos:start="27:16" pos:end="27:28"><name pos:start="27:16" pos:end="27:28">USB_RET_STALL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="35:45"><expr pos:start="31:5" pos:end="35:44"><name pos:start="31:5" pos:end="31:14">infobuflen</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="35:44"><name pos:start="31:18" pos:end="31:27">ndis_query</name><argument_list pos:start="31:28" pos:end="35:44">(<argument pos:start="31:29" pos:end="31:29"><expr pos:start="31:29" pos:end="31:29"><name pos:start="31:29" pos:end="31:29">s</name></expr></argument>, <argument pos:start="31:32" pos:end="31:52"><expr pos:start="31:32" pos:end="31:52"><call pos:start="31:32" pos:end="31:52"><name pos:start="31:32" pos:end="31:42">le32_to_cpu</name><argument_list pos:start="31:43" pos:end="31:52">(<argument pos:start="31:44" pos:end="31:51"><expr pos:start="31:44" pos:end="31:51"><name pos:start="31:44" pos:end="31:51"><name pos:start="31:44" pos:end="31:46">buf</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:51">OID</name></name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="33:29" pos:end="33:53"><expr pos:start="33:29" pos:end="33:53"><name pos:start="33:29" pos:end="33:35">bufoffs</name> <operator pos:start="33:37" pos:end="33:37">+</operator> <operator pos:start="33:39" pos:end="33:39">(</operator><name pos:start="33:40" pos:end="33:46">uint8_t</name> <operator pos:start="33:48" pos:end="33:48">*</operator><operator pos:start="33:49" pos:end="33:49">)</operator> <name pos:start="33:51" pos:end="33:53">buf</name></expr></argument>, <argument pos:start="33:56" pos:end="33:61"><expr pos:start="33:56" pos:end="33:61"><name pos:start="33:56" pos:end="33:61">buflen</name></expr></argument>, <argument pos:start="33:64" pos:end="33:70"><expr pos:start="33:64" pos:end="33:70"><name pos:start="33:64" pos:end="33:70">infobuf</name></expr></argument>,

                            <argument pos:start="35:29" pos:end="35:43"><expr pos:start="35:29" pos:end="35:43"><sizeof pos:start="35:29" pos:end="35:43">sizeof<argument_list pos:start="35:35" pos:end="35:43">(<argument pos:start="35:36" pos:end="35:42"><expr pos:start="35:36" pos:end="35:42"><name pos:start="35:36" pos:end="35:42">infobuf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="39:48"><expr pos:start="37:5" pos:end="39:47"><name pos:start="37:5" pos:end="37:11">resplen</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <sizeof pos:start="37:15" pos:end="37:44">sizeof<argument_list pos:start="37:21" pos:end="37:44">(<argument pos:start="37:22" pos:end="37:43"><expr pos:start="37:22" pos:end="37:43"><name pos:start="37:22" pos:end="37:43">rndis_query_cmplt_type</name></expr></argument>)</argument_list></sizeof> <operator pos:start="37:46" pos:end="37:46">+</operator>

            <operator pos:start="39:13" pos:end="39:13">(</operator><ternary pos:start="39:14" pos:end="39:46"><condition pos:start="39:14" pos:end="39:31"><expr pos:start="39:14" pos:end="39:29"><operator pos:start="39:14" pos:end="39:14">(</operator><name pos:start="39:15" pos:end="39:24">infobuflen</name> <operator pos:start="39:26" pos:end="39:26">&lt;</operator> <literal type="number" pos:start="39:28" pos:end="39:28">0</literal><operator pos:start="39:29" pos:end="39:29">)</operator></expr> ?</condition><then pos:start="39:33" pos:end="39:33"> <expr pos:start="39:33" pos:end="39:33"><literal type="number" pos:start="39:33" pos:end="39:33">0</literal></expr> </then><else pos:start="39:35" pos:end="39:46">: <expr pos:start="39:37" pos:end="39:46"><name pos:start="39:37" pos:end="39:46">infobuflen</name></expr></else></ternary><operator pos:start="39:47" pos:end="39:47">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:44"><expr pos:start="41:5" pos:end="41:43"><name pos:start="41:5" pos:end="41:8">resp</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <call pos:start="41:12" pos:end="41:43"><name pos:start="41:12" pos:end="41:31">rndis_queue_response</name><argument_list pos:start="41:32" pos:end="41:43">(<argument pos:start="41:33" pos:end="41:33"><expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">s</name></expr></argument>, <argument pos:start="41:36" pos:end="41:42"><expr pos:start="41:36" pos:end="41:42"><name pos:start="41:36" pos:end="41:42">resplen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:29"><if pos:start="43:5" pos:end="45:29">if <condition pos:start="43:8" pos:end="43:14">(<expr pos:start="43:9" pos:end="43:13"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:13">resp</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:29"><block_content pos:start="45:9" pos:end="45:29">

        <return pos:start="45:9" pos:end="45:29">return <expr pos:start="45:16" pos:end="45:28"><name pos:start="45:16" pos:end="45:28">USB_RET_STALL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:55"><expr pos:start="49:5" pos:end="49:54"><name pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:8">resp</name><operator pos:start="49:9" pos:end="49:10">-&gt;</operator><name pos:start="49:11" pos:end="49:21">MessageType</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <call pos:start="49:25" pos:end="49:54"><name pos:start="49:25" pos:end="49:35">cpu_to_le32</name><argument_list pos:start="49:36" pos:end="49:54">(<argument pos:start="49:37" pos:end="49:53"><expr pos:start="49:37" pos:end="49:53"><name pos:start="49:37" pos:end="49:53">RNDIS_QUERY_CMPLT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:8">resp</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:19">RequestID</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:36"><name pos:start="51:23" pos:end="51:25">buf</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:36">RequestID</name></name></expr>;</expr_stmt> <comment type="block" pos:start="51:39" pos:end="51:66">/* Still LE in msg buffer */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:47"><expr pos:start="53:5" pos:end="53:46"><name pos:start="53:5" pos:end="53:23"><name pos:start="53:5" pos:end="53:8">resp</name><operator pos:start="53:9" pos:end="53:10">-&gt;</operator><name pos:start="53:11" pos:end="53:23">MessageLength</name></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <call pos:start="53:27" pos:end="53:46"><name pos:start="53:27" pos:end="53:37">cpu_to_le32</name><argument_list pos:start="53:38" pos:end="53:46">(<argument pos:start="53:39" pos:end="53:45"><expr pos:start="53:39" pos:end="53:45"><name pos:start="53:39" pos:end="53:45">resplen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="69:5"><if pos:start="57:5" pos:end="69:5">if <condition pos:start="57:8" pos:end="57:23">(<expr pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:18">infobuflen</name> <operator pos:start="57:20" pos:end="57:20">&lt;</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>)</condition> <block pos:start="57:25" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:17">

        <comment type="block" pos:start="59:9" pos:end="59:31">/* OID not supported */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:63"><expr pos:start="61:9" pos:end="61:62"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:12">resp</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:20">Status</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <call pos:start="61:24" pos:end="61:62"><name pos:start="61:24" pos:end="61:34">cpu_to_le32</name><argument_list pos:start="61:35" pos:end="61:62">(<argument pos:start="61:36" pos:end="61:61"><expr pos:start="61:36" pos:end="61:61"><name pos:start="61:36" pos:end="61:61">RNDIS_STATUS_NOT_SUPPORTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:55"><expr pos:start="63:9" pos:end="63:54"><name pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:12">resp</name><operator pos:start="63:13" pos:end="63:14">-&gt;</operator><name pos:start="63:15" pos:end="63:37">InformationBufferLength</name></name> <operator pos:start="63:39" pos:end="63:39">=</operator> <call pos:start="63:41" pos:end="63:54"><name pos:start="63:41" pos:end="63:51">cpu_to_le32</name><argument_list pos:start="63:52" pos:end="63:54">(<argument pos:start="63:53" pos:end="63:53"><expr pos:start="63:53" pos:end="63:53"><literal type="number" pos:start="63:53" pos:end="63:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:55"><expr pos:start="65:9" pos:end="65:54"><name pos:start="65:9" pos:end="65:37"><name pos:start="65:9" pos:end="65:12">resp</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:37">InformationBufferOffset</name></name> <operator pos:start="65:39" pos:end="65:39">=</operator> <call pos:start="65:41" pos:end="65:54"><name pos:start="65:41" pos:end="65:51">cpu_to_le32</name><argument_list pos:start="65:52" pos:end="65:54">(<argument pos:start="65:53" pos:end="65:53"><expr pos:start="65:53" pos:end="65:53"><literal type="number" pos:start="65:53" pos:end="65:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:17">return <expr pos:start="67:16" pos:end="67:16"><literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:53"><expr pos:start="73:5" pos:end="73:52"><name pos:start="73:5" pos:end="73:16"><name pos:start="73:5" pos:end="73:8">resp</name><operator pos:start="73:9" pos:end="73:10">-&gt;</operator><name pos:start="73:11" pos:end="73:16">Status</name></name> <operator pos:start="73:18" pos:end="73:18">=</operator> <call pos:start="73:20" pos:end="73:52"><name pos:start="73:20" pos:end="73:30">cpu_to_le32</name><argument_list pos:start="73:31" pos:end="73:52">(<argument pos:start="73:32" pos:end="73:51"><expr pos:start="73:32" pos:end="73:51"><name pos:start="73:32" pos:end="73:51">RNDIS_STATUS_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="77:77"><expr pos:start="75:5" pos:end="77:76"><name pos:start="75:5" pos:end="75:33"><name pos:start="75:5" pos:end="75:8">resp</name><operator pos:start="75:9" pos:end="75:10">-&gt;</operator><name pos:start="75:11" pos:end="75:33">InformationBufferOffset</name></name> <operator pos:start="75:35" pos:end="75:35">=</operator>

            <call pos:start="77:13" pos:end="77:76"><name pos:start="77:13" pos:end="77:23">cpu_to_le32</name><argument_list pos:start="77:24" pos:end="77:76">(<argument pos:start="77:25" pos:end="77:75"><expr pos:start="77:25" pos:end="77:75"><ternary pos:start="77:25" pos:end="77:75"><condition pos:start="77:25" pos:end="77:36"><expr pos:start="77:25" pos:end="77:34"><name pos:start="77:25" pos:end="77:34">infobuflen</name></expr> ?</condition><then pos:start="77:38" pos:end="77:71"> <expr pos:start="77:38" pos:end="77:71"><sizeof pos:start="77:38" pos:end="77:67">sizeof<argument_list pos:start="77:44" pos:end="77:67">(<argument pos:start="77:45" pos:end="77:66"><expr pos:start="77:45" pos:end="77:66"><name pos:start="77:45" pos:end="77:66">rndis_query_cmplt_type</name></expr></argument>)</argument_list></sizeof> <operator pos:start="77:69" pos:end="77:69">-</operator> <literal type="number" pos:start="77:71" pos:end="77:71">8</literal></expr> </then><else pos:start="77:73" pos:end="77:75">: <expr pos:start="77:75" pos:end="77:75"><literal type="number" pos:start="77:75" pos:end="77:75">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:60"><expr pos:start="79:5" pos:end="79:59"><name pos:start="79:5" pos:end="79:33"><name pos:start="79:5" pos:end="79:8">resp</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:33">InformationBufferLength</name></name> <operator pos:start="79:35" pos:end="79:35">=</operator> <call pos:start="79:37" pos:end="79:59"><name pos:start="79:37" pos:end="79:47">cpu_to_le32</name><argument_list pos:start="79:48" pos:end="79:59">(<argument pos:start="79:49" pos:end="79:58"><expr pos:start="79:49" pos:end="79:58"><name pos:start="79:49" pos:end="79:58">infobuflen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:42"><expr pos:start="81:5" pos:end="81:41"><call pos:start="81:5" pos:end="81:41"><name pos:start="81:5" pos:end="81:10">memcpy</name><argument_list pos:start="81:11" pos:end="81:41">(<argument pos:start="81:12" pos:end="81:19"><expr pos:start="81:12" pos:end="81:19"><name pos:start="81:12" pos:end="81:15">resp</name> <operator pos:start="81:17" pos:end="81:17">+</operator> <literal type="number" pos:start="81:19" pos:end="81:19">1</literal></expr></argument>, <argument pos:start="81:22" pos:end="81:28"><expr pos:start="81:22" pos:end="81:28"><name pos:start="81:22" pos:end="81:28">infobuf</name></expr></argument>, <argument pos:start="81:31" pos:end="81:40"><expr pos:start="81:31" pos:end="81:40"><name pos:start="81:31" pos:end="81:40">infobuflen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
