<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15365.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:34">get_cluster_offset</name><parameter_list pos:start="1:35" pos:end="3:61">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><name pos:start="1:36" pos:end="1:51">BlockDriverState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">bs</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:50"><decl pos:start="3:36" pos:end="3:50"><type pos:start="3:36" pos:end="3:50"><name pos:start="3:36" pos:end="3:43">uint64_t</name></type> <name pos:start="3:45" pos:end="3:50">offset</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:60"><decl pos:start="3:53" pos:end="3:60"><type pos:start="3:53" pos:end="3:60"><name pos:start="3:53" pos:end="3:55">int</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:60">num</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="139:1">{<block_content pos:start="7:5" pos:end="137:47">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">l1_index</name></decl>, <decl pos:start="9:19" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:26">l2_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:22">l2_offset</name></decl>, <decl pos:start="11:25" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:12"><modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:33">l2_table</name></decl>, <decl pos:start="11:36" pos:end="11:49"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:36" pos:end="11:49">cluster_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">l1_bits</name></decl>, <decl pos:start="13:18" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:18">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:63"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:24">index_in_cluster</name></decl>, <decl pos:start="15:27" pos:end="15:38"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:27" pos:end="15:38">nb_available</name></decl>, <decl pos:start="15:41" pos:end="15:49"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:41" pos:end="15:49">nb_needed</name></decl>, <decl pos:start="15:52" pos:end="15:62"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:52" pos:end="15:62">nb_clusters</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:64"><expr pos:start="19:5" pos:end="19:63"><name pos:start="19:5" pos:end="19:20">index_in_cluster</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <operator pos:start="19:24" pos:end="19:24">(</operator><name pos:start="19:25" pos:end="19:30">offset</name> <operator pos:start="19:32" pos:end="19:33">&gt;&gt;</operator> <literal type="number" pos:start="19:35" pos:end="19:35">9</literal><operator pos:start="19:36" pos:end="19:36">)</operator> <operator pos:start="19:38" pos:end="19:38">&amp;</operator> <operator pos:start="19:40" pos:end="19:40">(</operator><name pos:start="19:41" pos:end="19:58"><name pos:start="19:41" pos:end="19:41">s</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:58">cluster_sectors</name></name> <operator pos:start="19:60" pos:end="19:60">-</operator> <literal type="number" pos:start="19:62" pos:end="19:62">1</literal><operator pos:start="19:63" pos:end="19:63">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:13">nb_needed</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <operator pos:start="21:17" pos:end="21:17">*</operator><name pos:start="21:18" pos:end="21:20">num</name> <operator pos:start="21:22" pos:end="21:22">+</operator> <name pos:start="21:24" pos:end="21:39">index_in_cluster</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:11">l1_bits</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:24"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:24">l2_bits</name></name> <operator pos:start="25:26" pos:end="25:26">+</operator> <name pos:start="25:28" pos:end="25:42"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:42">cluster_bits</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="33:7">/* compute how many bytes there are between the offset and

     * the end of the l1 entry

     */</comment>



    <expr_stmt pos:start="37:5" pos:end="37:68"><expr pos:start="37:5" pos:end="37:67"><name pos:start="37:5" pos:end="37:16">nb_available</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <operator pos:start="37:20" pos:end="37:20">(</operator><literal type="number" pos:start="37:21" pos:end="37:21">1</literal> <operator pos:start="37:23" pos:end="37:24">&lt;&lt;</operator> <name pos:start="37:26" pos:end="37:32">l1_bits</name><operator pos:start="37:33" pos:end="37:33">)</operator> <operator pos:start="37:35" pos:end="37:35">-</operator> <operator pos:start="37:37" pos:end="37:37">(</operator><name pos:start="37:38" pos:end="37:43">offset</name> <operator pos:start="37:45" pos:end="37:45">&amp;</operator> <operator pos:start="37:47" pos:end="37:47">(</operator><operator pos:start="37:48" pos:end="37:48">(</operator><literal type="number" pos:start="37:49" pos:end="37:49">1</literal> <operator pos:start="37:51" pos:end="37:52">&lt;&lt;</operator> <name pos:start="37:54" pos:end="37:60">l1_bits</name><operator pos:start="37:61" pos:end="37:61">)</operator> <operator pos:start="37:63" pos:end="37:63">-</operator> <literal type="number" pos:start="37:65" pos:end="37:65">1</literal><operator pos:start="37:66" pos:end="37:66">)</operator><operator pos:start="37:67" pos:end="37:67">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:49">/* compute the number of available sectors */</comment>



    <expr_stmt pos:start="45:5" pos:end="45:58"><expr pos:start="45:5" pos:end="45:57"><name pos:start="45:5" pos:end="45:16">nb_available</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <operator pos:start="45:20" pos:end="45:20">(</operator><name pos:start="45:21" pos:end="45:32">nb_available</name> <operator pos:start="45:34" pos:end="45:35">&gt;&gt;</operator> <literal type="number" pos:start="45:37" pos:end="45:37">9</literal><operator pos:start="45:38" pos:end="45:38">)</operator> <operator pos:start="45:40" pos:end="45:40">+</operator> <name pos:start="45:42" pos:end="45:57">index_in_cluster</name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:23"><expr pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:18">cluster_offset</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:48">/* seek the the l2 offset in the l1 table */</comment>



    <expr_stmt pos:start="57:5" pos:end="57:33"><expr pos:start="57:5" pos:end="57:32"><name pos:start="57:5" pos:end="57:12">l1_index</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <name pos:start="57:16" pos:end="57:21">offset</name> <operator pos:start="57:23" pos:end="57:24">&gt;&gt;</operator> <name pos:start="57:26" pos:end="57:32">l1_bits</name></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="61:17"><if pos:start="59:5" pos:end="61:17">if <condition pos:start="59:8" pos:end="59:31">(<expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:16">l1_index</name> <operator pos:start="59:18" pos:end="59:19">&gt;=</operator> <name pos:start="59:21" pos:end="59:30"><name pos:start="59:21" pos:end="59:21">s</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:30">l1_size</name></name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:17"><block_content pos:start="61:9" pos:end="61:17">

        <goto pos:start="61:9" pos:end="61:17">goto <name pos:start="61:14" pos:end="61:16">out</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:38"><expr pos:start="65:5" pos:end="65:37"><name pos:start="65:5" pos:end="65:13">l2_offset</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:37"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:27">l1_table</name><index pos:start="65:28" pos:end="65:37">[<expr pos:start="65:29" pos:end="65:36"><name pos:start="65:29" pos:end="65:36">l1_index</name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:50">/* seek the l2 table of the given l2 offset */</comment>



    <if_stmt pos:start="73:5" pos:end="75:17"><if pos:start="73:5" pos:end="75:17">if <condition pos:start="73:8" pos:end="73:19">(<expr pos:start="73:9" pos:end="73:18"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:18">l2_offset</name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:17"><block_content pos:start="75:9" pos:end="75:17">

        <goto pos:start="75:9" pos:end="75:17">goto <name pos:start="75:14" pos:end="75:16">out</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:37">/* load the l2 table in memory */</comment>



    <expr_stmt pos:start="83:5" pos:end="83:36"><expr pos:start="83:5" pos:end="83:35"><name pos:start="83:5" pos:end="83:13">l2_offset</name> <operator pos:start="83:15" pos:end="83:16">&amp;=</operator> <operator pos:start="83:18" pos:end="83:18">~</operator><name pos:start="83:19" pos:end="83:35">QCOW_OFLAG_COPIED</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:38"><expr pos:start="85:5" pos:end="85:37"><name pos:start="85:5" pos:end="85:12">l2_table</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <call pos:start="85:16" pos:end="85:37"><name pos:start="85:16" pos:end="85:22">l2_load</name><argument_list pos:start="85:23" pos:end="85:37">(<argument pos:start="85:24" pos:end="85:25"><expr pos:start="85:24" pos:end="85:25"><name pos:start="85:24" pos:end="85:25">bs</name></expr></argument>, <argument pos:start="85:28" pos:end="85:36"><expr pos:start="85:28" pos:end="85:36"><name pos:start="85:28" pos:end="85:36">l2_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="89:17"><if pos:start="87:5" pos:end="89:17">if <condition pos:start="87:8" pos:end="87:25">(<expr pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:16">l2_table</name> <operator pos:start="87:18" pos:end="87:19">==</operator> <name pos:start="87:21" pos:end="87:24">NULL</name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:17"><block_content pos:start="89:9" pos:end="89:17">

        <return pos:start="89:9" pos:end="89:17">return <expr pos:start="89:16" pos:end="89:16"><literal type="number" pos:start="89:16" pos:end="89:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:59">/* find the cluster offset for the given disk offset */</comment>



    <expr_stmt pos:start="97:5" pos:end="97:62"><expr pos:start="97:5" pos:end="97:61"><name pos:start="97:5" pos:end="97:12">l2_index</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <operator pos:start="97:16" pos:end="97:16">(</operator><name pos:start="97:17" pos:end="97:22">offset</name> <operator pos:start="97:24" pos:end="97:25">&gt;&gt;</operator> <name pos:start="97:27" pos:end="97:41"><name pos:start="97:27" pos:end="97:27">s</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:41">cluster_bits</name></name><operator pos:start="97:42" pos:end="97:42">)</operator> <operator pos:start="97:44" pos:end="97:44">&amp;</operator> <operator pos:start="97:46" pos:end="97:46">(</operator><name pos:start="97:47" pos:end="97:56"><name pos:start="97:47" pos:end="97:47">s</name><operator pos:start="97:48" pos:end="97:49">-&gt;</operator><name pos:start="97:50" pos:end="97:56">l2_size</name></name> <operator pos:start="97:58" pos:end="97:58">-</operator> <literal type="number" pos:start="97:60" pos:end="97:60">1</literal><operator pos:start="97:61" pos:end="97:61">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:53"><expr pos:start="99:5" pos:end="99:52"><name pos:start="99:5" pos:end="99:18">cluster_offset</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <call pos:start="99:22" pos:end="99:52"><name pos:start="99:22" pos:end="99:32">be64_to_cpu</name><argument_list pos:start="99:33" pos:end="99:52">(<argument pos:start="99:34" pos:end="99:51"><expr pos:start="99:34" pos:end="99:51"><name pos:start="99:34" pos:end="99:51"><name pos:start="99:34" pos:end="99:41">l2_table</name><index pos:start="99:42" pos:end="99:51">[<expr pos:start="99:43" pos:end="99:50"><name pos:start="99:43" pos:end="99:50">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:54"><expr pos:start="101:5" pos:end="101:53"><name pos:start="101:5" pos:end="101:15">nb_clusters</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="101:53"><name pos:start="101:19" pos:end="101:34">size_to_clusters</name><argument_list pos:start="101:35" pos:end="101:53">(<argument pos:start="101:36" pos:end="101:36"><expr pos:start="101:36" pos:end="101:36"><name pos:start="101:36" pos:end="101:36">s</name></expr></argument>, <argument pos:start="101:39" pos:end="101:52"><expr pos:start="101:39" pos:end="101:52"><name pos:start="101:39" pos:end="101:47">nb_needed</name> <operator pos:start="101:49" pos:end="101:50">&lt;&lt;</operator> <literal type="number" pos:start="101:52" pos:end="101:52">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="105:5" pos:end="119:5"><if pos:start="105:5" pos:end="111:5">if <condition pos:start="105:8" pos:end="105:24">(<expr pos:start="105:9" pos:end="105:23"><operator pos:start="105:9" pos:end="105:9">!</operator><name pos:start="105:10" pos:end="105:23">cluster_offset</name></expr>)</condition> <block pos:start="105:26" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:77">

        <comment type="block" pos:start="107:9" pos:end="107:39">/* how many empty clusters ? */</comment>

        <expr_stmt pos:start="109:9" pos:end="109:77"><expr pos:start="109:9" pos:end="109:76"><name pos:start="109:9" pos:end="109:9">c</name> <operator pos:start="109:11" pos:end="109:11">=</operator> <call pos:start="109:13" pos:end="109:76"><name pos:start="109:13" pos:end="109:42">count_contiguous_free_clusters</name><argument_list pos:start="109:43" pos:end="109:76">(<argument pos:start="109:44" pos:end="109:54"><expr pos:start="109:44" pos:end="109:54"><name pos:start="109:44" pos:end="109:54">nb_clusters</name></expr></argument>, <argument pos:start="109:57" pos:end="109:75"><expr pos:start="109:57" pos:end="109:75"><operator pos:start="109:57" pos:end="109:57">&amp;</operator><name pos:start="109:58" pos:end="109:75"><name pos:start="109:58" pos:end="109:65">l2_table</name><index pos:start="109:66" pos:end="109:75">[<expr pos:start="109:67" pos:end="109:74"><name pos:start="109:67" pos:end="109:74">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="111:7" pos:end="119:5">else <block pos:start="111:12" pos:end="119:5">{<block_content pos:start="115:9" pos:end="117:56">

        <comment type="block" pos:start="113:9" pos:end="113:43">/* how many allocated clusters ? */</comment>

        <expr_stmt pos:start="115:9" pos:end="117:56"><expr pos:start="115:9" pos:end="117:55"><name pos:start="115:9" pos:end="115:9">c</name> <operator pos:start="115:11" pos:end="115:11">=</operator> <call pos:start="115:13" pos:end="117:55"><name pos:start="115:13" pos:end="115:37">count_contiguous_clusters</name><argument_list pos:start="115:38" pos:end="117:55">(<argument pos:start="115:39" pos:end="115:49"><expr pos:start="115:39" pos:end="115:49"><name pos:start="115:39" pos:end="115:49">nb_clusters</name></expr></argument>, <argument pos:start="115:52" pos:end="115:66"><expr pos:start="115:52" pos:end="115:66"><name pos:start="115:52" pos:end="115:66"><name pos:start="115:52" pos:end="115:52">s</name><operator pos:start="115:53" pos:end="115:54">-&gt;</operator><name pos:start="115:55" pos:end="115:66">cluster_size</name></name></expr></argument>,

                <argument pos:start="117:17" pos:end="117:35"><expr pos:start="117:17" pos:end="117:35"><operator pos:start="117:17" pos:end="117:17">&amp;</operator><name pos:start="117:18" pos:end="117:35"><name pos:start="117:18" pos:end="117:25">l2_table</name><index pos:start="117:26" pos:end="117:35">[<expr pos:start="117:27" pos:end="117:34"><name pos:start="117:27" pos:end="117:34">l2_index</name></expr>]</index></name></expr></argument>, <argument pos:start="117:38" pos:end="117:54"><expr pos:start="117:38" pos:end="117:54"><name pos:start="117:38" pos:end="117:54">QCOW_OFLAG_COPIED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



   <expr_stmt pos:start="123:4" pos:end="123:43"><expr pos:start="123:4" pos:end="123:42"><name pos:start="123:4" pos:end="123:15">nb_available</name> <operator pos:start="123:17" pos:end="123:17">=</operator> <operator pos:start="123:19" pos:end="123:19">(</operator><name pos:start="123:20" pos:end="123:20">c</name> <operator pos:start="123:22" pos:end="123:22">*</operator> <name pos:start="123:24" pos:end="123:41"><name pos:start="123:24" pos:end="123:24">s</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:41">cluster_sectors</name></name><operator pos:start="123:42" pos:end="123:42">)</operator></expr>;</expr_stmt>

<label pos:start="125:1" pos:end="125:4"><name pos:start="125:1" pos:end="125:3">out</name>:</label>

    <if_stmt pos:start="127:5" pos:end="129:33"><if pos:start="127:5" pos:end="129:33">if <condition pos:start="127:8" pos:end="127:33">(<expr pos:start="127:9" pos:end="127:32"><name pos:start="127:9" pos:end="127:20">nb_available</name> <operator pos:start="127:22" pos:end="127:22">&gt;</operator> <name pos:start="127:24" pos:end="127:32">nb_needed</name></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:33"><block_content pos:start="129:9" pos:end="129:33">

        <expr_stmt pos:start="129:9" pos:end="129:33"><expr pos:start="129:9" pos:end="129:32"><name pos:start="129:9" pos:end="129:20">nb_available</name> <operator pos:start="129:22" pos:end="129:22">=</operator> <name pos:start="129:24" pos:end="129:32">nb_needed</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:43"><expr pos:start="133:5" pos:end="133:42"><operator pos:start="133:5" pos:end="133:5">*</operator><name pos:start="133:6" pos:end="133:8">num</name> <operator pos:start="133:10" pos:end="133:10">=</operator> <name pos:start="133:12" pos:end="133:23">nb_available</name> <operator pos:start="133:25" pos:end="133:25">-</operator> <name pos:start="133:27" pos:end="133:42">index_in_cluster</name></expr>;</expr_stmt>



    <return pos:start="137:5" pos:end="137:47">return <expr pos:start="137:12" pos:end="137:46"><name pos:start="137:12" pos:end="137:25">cluster_offset</name> <operator pos:start="137:27" pos:end="137:27">&amp;</operator> <operator pos:start="137:29" pos:end="137:29">~</operator><name pos:start="137:30" pos:end="137:46">QCOW_OFLAG_COPIED</name></expr>;</return>

</block_content>}</block></function>
</unit>
