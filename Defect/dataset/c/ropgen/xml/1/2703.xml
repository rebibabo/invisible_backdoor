<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2703.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">net_dump_init</name><parameter_list pos:start="1:25" pos:end="3:73">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:39">NetClientState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">peer</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:65"><decl pos:start="1:48" pos:end="1:65"><type pos:start="1:48" pos:end="1:65"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:65">device</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:41"><decl pos:start="3:26" pos:end="3:41"><type pos:start="3:26" pos:end="3:41"><specifier pos:start="3:26" pos:end="3:30">const</specifier> <name pos:start="3:32" pos:end="3:35">char</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:41">name</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:63"><decl pos:start="3:44" pos:end="3:63"><type pos:start="3:44" pos:end="3:63"><specifier pos:start="3:44" pos:end="3:48">const</specifier> <name pos:start="3:50" pos:end="3:53">char</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:63">filename</name></decl></parameter>, <parameter pos:start="3:66" pos:end="3:72"><decl pos:start="3:66" pos:end="3:72"><type pos:start="3:66" pos:end="3:72"><name pos:start="3:66" pos:end="3:68">int</name></type> <name pos:start="3:70" pos:end="3:72">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:13">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:24">pcap_file_hdr</name></name></type> <name pos:start="7:26" pos:end="7:28">hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">NetClientState</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:22">nc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">DumpState</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:16">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:13">tm</name></name></type> <name pos:start="13:15" pos:end="13:16">tm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:11"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">fd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:71"><expr pos:start="19:5" pos:end="19:70"><name pos:start="19:5" pos:end="19:6">fd</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:70"><name pos:start="19:10" pos:end="19:13">open</name><argument_list pos:start="19:14" pos:end="19:70">(<argument pos:start="19:15" pos:end="19:22"><expr pos:start="19:15" pos:end="19:22"><name pos:start="19:15" pos:end="19:22">filename</name></expr></argument>, <argument pos:start="19:25" pos:end="19:63"><expr pos:start="19:25" pos:end="19:63"><name pos:start="19:25" pos:end="19:31">O_CREAT</name> <operator pos:start="19:33" pos:end="19:33">|</operator> <name pos:start="19:35" pos:end="19:41">O_TRUNC</name> <operator pos:start="19:43" pos:end="19:43">|</operator> <name pos:start="19:45" pos:end="19:52">O_WRONLY</name> <operator pos:start="19:54" pos:end="19:54">|</operator> <name pos:start="19:56" pos:end="19:63">O_BINARY</name></expr></argument>, <argument pos:start="19:66" pos:end="19:69"><expr pos:start="19:66" pos:end="19:69"><literal type="number" pos:start="19:66" pos:end="19:69">0644</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:15">(<expr pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:10">fd</name> <operator pos:start="21:12" pos:end="21:12">&lt;</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>)</condition> <block pos:start="21:17" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:18">

        <expr_stmt pos:start="23:9" pos:end="23:59"><expr pos:start="23:9" pos:end="23:58"><call pos:start="23:9" pos:end="23:58"><name pos:start="23:9" pos:end="23:20">error_report</name><argument_list pos:start="23:21" pos:end="23:58">(<argument pos:start="23:22" pos:end="23:47"><expr pos:start="23:22" pos:end="23:47"><literal type="string" pos:start="23:22" pos:end="23:47">"-net dump: can't open %s"</literal></expr></argument>, <argument pos:start="23:50" pos:end="23:57"><expr pos:start="23:50" pos:end="23:57"><name pos:start="23:50" pos:end="23:57">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:7">hdr</name><operator pos:start="31:8" pos:end="31:8">.</operator><name pos:start="31:9" pos:end="31:13">magic</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:26">PCAP_MAGIC</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:7">hdr</name><operator pos:start="33:8" pos:end="33:8">.</operator><name pos:start="33:9" pos:end="33:21">version_major</name></name> <operator pos:start="33:23" pos:end="33:23">=</operator> <literal type="number" pos:start="33:25" pos:end="33:25">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:7">hdr</name><operator pos:start="35:8" pos:end="35:8">.</operator><name pos:start="35:9" pos:end="35:21">version_minor</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <literal type="number" pos:start="35:25" pos:end="35:25">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:7">hdr</name><operator pos:start="37:8" pos:end="37:8">.</operator><name pos:start="37:9" pos:end="37:16">thiszone</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:20"><expr pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:7">hdr</name><operator pos:start="39:8" pos:end="39:8">.</operator><name pos:start="39:9" pos:end="39:15">sigfigs</name></name> <operator pos:start="39:17" pos:end="39:17">=</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:7">hdr</name><operator pos:start="41:8" pos:end="41:8">.</operator><name pos:start="41:9" pos:end="41:15">snaplen</name></name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:21">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:7">hdr</name><operator pos:start="43:8" pos:end="43:8">.</operator><name pos:start="43:9" pos:end="43:16">linktype</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <literal type="number" pos:start="43:20" pos:end="43:20">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:51">(<expr pos:start="47:9" pos:end="47:50"><call pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:13">write</name><argument_list pos:start="47:14" pos:end="47:36">(<argument pos:start="47:15" pos:end="47:16"><expr pos:start="47:15" pos:end="47:16"><name pos:start="47:15" pos:end="47:16">fd</name></expr></argument>, <argument pos:start="47:19" pos:end="47:22"><expr pos:start="47:19" pos:end="47:22"><operator pos:start="47:19" pos:end="47:19">&amp;</operator><name pos:start="47:20" pos:end="47:22">hdr</name></expr></argument>, <argument pos:start="47:25" pos:end="47:35"><expr pos:start="47:25" pos:end="47:35"><sizeof pos:start="47:25" pos:end="47:35">sizeof<argument_list pos:start="47:31" pos:end="47:35">(<argument pos:start="47:32" pos:end="47:34"><expr pos:start="47:32" pos:end="47:34"><name pos:start="47:32" pos:end="47:34">hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="47:38" pos:end="47:38">&lt;</operator> <sizeof pos:start="47:40" pos:end="47:50">sizeof<argument_list pos:start="47:46" pos:end="47:50">(<argument pos:start="47:47" pos:end="47:49"><expr pos:start="47:47" pos:end="47:49"><name pos:start="47:47" pos:end="47:49">hdr</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="47:53" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:18">

        <expr_stmt pos:start="49:9" pos:end="49:67"><expr pos:start="49:9" pos:end="49:66"><call pos:start="49:9" pos:end="49:66"><name pos:start="49:9" pos:end="49:20">error_report</name><argument_list pos:start="49:21" pos:end="49:66">(<argument pos:start="49:22" pos:end="49:48"><expr pos:start="49:22" pos:end="49:48"><literal type="string" pos:start="49:22" pos:end="49:48">"-net dump write error: %s"</literal></expr></argument>, <argument pos:start="49:51" pos:end="49:65"><expr pos:start="49:51" pos:end="49:65"><call pos:start="49:51" pos:end="49:65"><name pos:start="49:51" pos:end="49:58">strerror</name><argument_list pos:start="49:59" pos:end="49:65">(<argument pos:start="49:60" pos:end="49:64"><expr pos:start="49:60" pos:end="49:64"><name pos:start="49:60" pos:end="49:64">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:18"><expr pos:start="51:9" pos:end="51:17"><call pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:13">close</name><argument_list pos:start="51:14" pos:end="51:17">(<argument pos:start="51:15" pos:end="51:16"><expr pos:start="51:15" pos:end="51:16"><name pos:start="51:15" pos:end="51:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:65"><expr pos:start="59:5" pos:end="59:64"><name pos:start="59:5" pos:end="59:6">nc</name> <operator pos:start="59:8" pos:end="59:8">=</operator> <call pos:start="59:10" pos:end="59:64"><name pos:start="59:10" pos:end="59:28">qemu_new_net_client</name><argument_list pos:start="59:29" pos:end="59:64">(<argument pos:start="59:30" pos:end="59:43"><expr pos:start="59:30" pos:end="59:43"><operator pos:start="59:30" pos:end="59:30">&amp;</operator><name pos:start="59:31" pos:end="59:43">net_dump_info</name></expr></argument>, <argument pos:start="59:46" pos:end="59:49"><expr pos:start="59:46" pos:end="59:49"><name pos:start="59:46" pos:end="59:49">peer</name></expr></argument>, <argument pos:start="59:52" pos:end="59:57"><expr pos:start="59:52" pos:end="59:57"><name pos:start="59:52" pos:end="59:57">device</name></expr></argument>, <argument pos:start="59:60" pos:end="59:63"><expr pos:start="59:60" pos:end="59:63"><name pos:start="59:60" pos:end="59:63">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="65:51"><expr pos:start="63:5" pos:end="65:50"><call pos:start="63:5" pos:end="65:50"><name pos:start="63:5" pos:end="63:12">snprintf</name><argument_list pos:start="63:13" pos:end="65:50">(<argument pos:start="63:14" pos:end="63:25"><expr pos:start="63:14" pos:end="63:25"><name pos:start="63:14" pos:end="63:25"><name pos:start="63:14" pos:end="63:15">nc</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:25">info_str</name></name></expr></argument>, <argument pos:start="63:28" pos:end="63:47"><expr pos:start="63:28" pos:end="63:47"><sizeof pos:start="63:28" pos:end="63:47">sizeof<argument_list pos:start="63:34" pos:end="63:47">(<argument pos:start="63:35" pos:end="63:46"><expr pos:start="63:35" pos:end="63:46"><name pos:start="63:35" pos:end="63:46"><name pos:start="63:35" pos:end="63:36">nc</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:46">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

             <argument pos:start="65:14" pos:end="65:34"><expr pos:start="65:14" pos:end="65:34"><literal type="string" pos:start="65:14" pos:end="65:34">"dump to %s (len=%d)"</literal></expr></argument>, <argument pos:start="65:37" pos:end="65:44"><expr pos:start="65:37" pos:end="65:44"><name pos:start="65:37" pos:end="65:44">filename</name></expr></argument>, <argument pos:start="65:47" pos:end="65:49"><expr pos:start="65:47" pos:end="65:49"><name pos:start="65:47" pos:end="65:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:37"><expr pos:start="69:5" pos:end="69:36"><name pos:start="69:5" pos:end="69:5">s</name> <operator pos:start="69:7" pos:end="69:7">=</operator> <call pos:start="69:9" pos:end="69:36"><name pos:start="69:9" pos:end="69:17">DO_UPCAST</name><argument_list pos:start="69:18" pos:end="69:36">(<argument pos:start="69:19" pos:end="69:27"><expr pos:start="69:19" pos:end="69:27"><name pos:start="69:19" pos:end="69:27">DumpState</name></expr></argument>, <argument pos:start="69:30" pos:end="69:31"><expr pos:start="69:30" pos:end="69:31"><name pos:start="69:30" pos:end="69:31">nc</name></expr></argument>, <argument pos:start="69:34" pos:end="69:35"><expr pos:start="69:34" pos:end="69:35"><name pos:start="69:34" pos:end="69:35">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:15"><expr pos:start="73:5" pos:end="73:14"><name pos:start="73:5" pos:end="73:9"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:9">fd</name></name> <operator pos:start="73:11" pos:end="73:11">=</operator> <name pos:start="73:13" pos:end="73:14">fd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:25"><expr pos:start="75:5" pos:end="75:24"><name pos:start="75:5" pos:end="75:18"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:18">pcap_caplen</name></name> <operator pos:start="75:20" pos:end="75:20">=</operator> <name pos:start="75:22" pos:end="75:24">len</name></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:30"><expr pos:start="79:5" pos:end="79:29"><call pos:start="79:5" pos:end="79:29"><name pos:start="79:5" pos:end="79:21">qemu_get_timedate</name><argument_list pos:start="79:22" pos:end="79:29">(<argument pos:start="79:23" pos:end="79:25"><expr pos:start="79:23" pos:end="79:25"><operator pos:start="79:23" pos:end="79:23">&amp;</operator><name pos:start="79:24" pos:end="79:25">tm</name></expr></argument>, <argument pos:start="79:28" pos:end="79:28"><expr pos:start="79:28" pos:end="79:28"><literal type="number" pos:start="79:28" pos:end="79:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:30"><expr pos:start="81:5" pos:end="81:29"><name pos:start="81:5" pos:end="81:15"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:15">start_ts</name></name> <operator pos:start="81:17" pos:end="81:17">=</operator> <call pos:start="81:19" pos:end="81:29"><name pos:start="81:19" pos:end="81:24">mktime</name><argument_list pos:start="81:25" pos:end="81:29">(<argument pos:start="81:26" pos:end="81:28"><expr pos:start="81:26" pos:end="81:28"><operator pos:start="81:26" pos:end="81:26">&amp;</operator><name pos:start="81:27" pos:end="81:28">tm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
