<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27215.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">gen_branch</name><parameter_list pos:start="1:23" pos:end="1:57">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:35">DisasContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">ctx</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:56">insn_bytes</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:5">

    <if_stmt pos:start="5:5" pos:end="137:5"><if pos:start="5:5" pos:end="137:5">if <condition pos:start="5:8" pos:end="5:39">(<expr pos:start="5:9" pos:end="5:38"><name pos:start="5:9" pos:end="5:19"><name pos:start="5:9" pos:end="5:11">ctx</name><operator pos:start="5:12" pos:end="5:13">-&gt;</operator><name pos:start="5:14" pos:end="5:19">hflags</name></name> <operator pos:start="5:21" pos:end="5:21">&amp;</operator> <name pos:start="5:23" pos:end="5:38">MIPS_HFLAG_BMASK</name></expr>)</condition> <block pos:start="5:41" pos:end="137:5">{<block_content pos:start="7:9" pos:end="135:9">

        <decl_stmt pos:start="7:9" pos:end="7:57"><decl pos:start="7:9" pos:end="7:56"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:23">proc_hflags</name> <init pos:start="7:25" pos:end="7:56">= <expr pos:start="7:27" pos:end="7:56"><name pos:start="7:27" pos:end="7:37"><name pos:start="7:27" pos:end="7:29">ctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:37">hflags</name></name> <operator pos:start="7:39" pos:end="7:39">&amp;</operator> <name pos:start="7:41" pos:end="7:56">MIPS_HFLAG_BMASK</name></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="9:9" pos:end="9:33">/* Branches completion */</comment>

        <expr_stmt pos:start="11:9" pos:end="11:41"><expr pos:start="11:9" pos:end="11:40"><name pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:11">ctx</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:19">hflags</name></name> <operator pos:start="11:21" pos:end="11:22">&amp;=</operator> <operator pos:start="11:24" pos:end="11:24">~</operator><name pos:start="11:25" pos:end="11:40">MIPS_HFLAG_BMASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:32"><expr pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:11">ctx</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:19">bstate</name></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <name pos:start="13:23" pos:end="13:31">BS_BRANCH</name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:31"><expr pos:start="15:9" pos:end="15:30"><call pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:22">save_cpu_state</name><argument_list pos:start="15:23" pos:end="15:30">(<argument pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:26">ctx</name></expr></argument>, <argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="17:9" pos:end="17:46">/* FIXME: Need to clear can_do_io.  */</comment>

        <switch pos:start="19:9" pos:end="135:9">switch <condition pos:start="19:16" pos:end="19:52">(<expr pos:start="19:17" pos:end="19:51"><name pos:start="19:17" pos:end="19:27">proc_hflags</name> <operator pos:start="19:29" pos:end="19:29">&amp;</operator> <name pos:start="19:31" pos:end="19:51">MIPS_HFLAG_BMASK_BASE</name></expr>)</condition> <block pos:start="19:54" pos:end="135:9">{<block_content pos:start="21:9" pos:end="133:18">

        <case pos:start="21:9" pos:end="21:32">case <expr pos:start="21:14" pos:end="21:31"><name pos:start="21:14" pos:end="21:31">MIPS_HFLAG_FBNSLOT</name></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:41"><expr pos:start="23:13" pos:end="23:40"><call pos:start="23:13" pos:end="23:40"><name pos:start="23:13" pos:end="23:22">MIPS_DEBUG</name><argument_list pos:start="23:23" pos:end="23:40">(<argument pos:start="23:24" pos:end="23:39"><expr pos:start="23:24" pos:end="23:39"><literal type="string" pos:start="23:24" pos:end="23:39">"forbidden slot"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:54"><expr pos:start="25:13" pos:end="25:53"><call pos:start="25:13" pos:end="25:53"><name pos:start="25:13" pos:end="25:23">gen_goto_tb</name><argument_list pos:start="25:24" pos:end="25:53">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">ctx</name></expr></argument>, <argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><literal type="number" pos:start="25:30" pos:end="25:30">0</literal></expr></argument>, <argument pos:start="25:33" pos:end="25:52"><expr pos:start="25:33" pos:end="25:52"><name pos:start="25:33" pos:end="25:39"><name pos:start="25:33" pos:end="25:35">ctx</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:39">pc</name></name> <operator pos:start="25:41" pos:end="25:41">+</operator> <name pos:start="25:43" pos:end="25:52">insn_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        <case pos:start="29:9" pos:end="29:26">case <expr pos:start="29:14" pos:end="29:25"><name pos:start="29:14" pos:end="29:25">MIPS_HFLAG_B</name></expr>:</case>

            <comment type="block" pos:start="31:13" pos:end="31:38">/* unconditional branch */</comment>

            <expr_stmt pos:start="33:13" pos:end="33:47"><expr pos:start="33:13" pos:end="33:46"><call pos:start="33:13" pos:end="33:46"><name pos:start="33:13" pos:end="33:22">MIPS_DEBUG</name><argument_list pos:start="33:23" pos:end="33:46">(<argument pos:start="33:24" pos:end="33:45"><expr pos:start="33:24" pos:end="33:45"><literal type="string" pos:start="33:24" pos:end="33:45">"unconditional branch"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="39:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:44">(<expr pos:start="35:17" pos:end="35:43"><name pos:start="35:17" pos:end="35:27">proc_hflags</name> <operator pos:start="35:29" pos:end="35:29">&amp;</operator> <name pos:start="35:31" pos:end="35:43">MIPS_HFLAG_BX</name></expr>)</condition> <block pos:start="35:46" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:65">

                <expr_stmt pos:start="37:17" pos:end="37:65"><expr pos:start="37:17" pos:end="37:64"><call pos:start="37:17" pos:end="37:64"><name pos:start="37:17" pos:end="37:32">tcg_gen_xori_i32</name><argument_list pos:start="37:33" pos:end="37:64">(<argument pos:start="37:34" pos:end="37:39"><expr pos:start="37:34" pos:end="37:39"><name pos:start="37:34" pos:end="37:39">hflags</name></expr></argument>, <argument pos:start="37:42" pos:end="37:47"><expr pos:start="37:42" pos:end="37:47"><name pos:start="37:42" pos:end="37:47">hflags</name></expr></argument>, <argument pos:start="37:50" pos:end="37:63"><expr pos:start="37:50" pos:end="37:63"><name pos:start="37:50" pos:end="37:63">MIPS_HFLAG_M16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:46"><expr pos:start="41:13" pos:end="41:45"><call pos:start="41:13" pos:end="41:45"><name pos:start="41:13" pos:end="41:23">gen_goto_tb</name><argument_list pos:start="41:24" pos:end="41:45">(<argument pos:start="41:25" pos:end="41:27"><expr pos:start="41:25" pos:end="41:27"><name pos:start="41:25" pos:end="41:27">ctx</name></expr></argument>, <argument pos:start="41:30" pos:end="41:30"><expr pos:start="41:30" pos:end="41:30"><literal type="number" pos:start="41:30" pos:end="41:30">0</literal></expr></argument>, <argument pos:start="41:33" pos:end="41:44"><expr pos:start="41:33" pos:end="41:44"><name pos:start="41:33" pos:end="41:44"><name pos:start="41:33" pos:end="41:35">ctx</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:44">btarget</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:27">case <expr pos:start="45:14" pos:end="45:26"><name pos:start="45:14" pos:end="45:26">MIPS_HFLAG_BL</name></expr>:</case>

            <comment type="block" pos:start="47:13" pos:end="47:36">/* blikely taken case */</comment>

            <expr_stmt pos:start="49:13" pos:end="49:47"><expr pos:start="49:13" pos:end="49:46"><call pos:start="49:13" pos:end="49:46"><name pos:start="49:13" pos:end="49:22">MIPS_DEBUG</name><argument_list pos:start="49:23" pos:end="49:46">(<argument pos:start="49:24" pos:end="49:45"><expr pos:start="49:24" pos:end="49:45"><literal type="string" pos:start="49:24" pos:end="49:45">"blikely branch taken"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:46"><expr pos:start="51:13" pos:end="51:45"><call pos:start="51:13" pos:end="51:45"><name pos:start="51:13" pos:end="51:23">gen_goto_tb</name><argument_list pos:start="51:24" pos:end="51:45">(<argument pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><name pos:start="51:25" pos:end="51:27">ctx</name></expr></argument>, <argument pos:start="51:30" pos:end="51:30"><expr pos:start="51:30" pos:end="51:30"><literal type="number" pos:start="51:30" pos:end="51:30">0</literal></expr></argument>, <argument pos:start="51:33" pos:end="51:44"><expr pos:start="51:33" pos:end="51:44"><name pos:start="51:33" pos:end="51:44"><name pos:start="51:33" pos:end="51:35">ctx</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:44">btarget</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:27">case <expr pos:start="55:14" pos:end="55:26"><name pos:start="55:14" pos:end="55:26">MIPS_HFLAG_BC</name></expr>:</case>

            <comment type="block" pos:start="57:13" pos:end="57:36">/* Conditional branch */</comment>

            <expr_stmt pos:start="59:13" pos:end="59:45"><expr pos:start="59:13" pos:end="59:44"><call pos:start="59:13" pos:end="59:44"><name pos:start="59:13" pos:end="59:22">MIPS_DEBUG</name><argument_list pos:start="59:23" pos:end="59:44">(<argument pos:start="59:24" pos:end="59:43"><expr pos:start="59:24" pos:end="59:43"><literal type="string" pos:start="59:24" pos:end="59:43">"conditional branch"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="61:13" pos:end="75:13">{<block_content pos:start="63:17" pos:end="73:50">

                <decl_stmt pos:start="63:17" pos:end="63:47"><decl pos:start="63:17" pos:end="63:46"><type pos:start="63:17" pos:end="63:26"><name pos:start="63:17" pos:end="63:24">TCGLabel</name> <modifier pos:start="63:26" pos:end="63:26">*</modifier></type><name pos:start="63:27" pos:end="63:28">l1</name> <init pos:start="63:30" pos:end="63:46">= <expr pos:start="63:32" pos:end="63:46"><call pos:start="63:32" pos:end="63:46"><name pos:start="63:32" pos:end="63:44">gen_new_label</name><argument_list pos:start="63:45" pos:end="63:46">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="67:17" pos:end="67:62"><expr pos:start="67:17" pos:end="67:61"><call pos:start="67:17" pos:end="67:61"><name pos:start="67:17" pos:end="67:34">tcg_gen_brcondi_tl</name><argument_list pos:start="67:35" pos:end="67:61">(<argument pos:start="67:36" pos:end="67:46"><expr pos:start="67:36" pos:end="67:46"><name pos:start="67:36" pos:end="67:46">TCG_COND_NE</name></expr></argument>, <argument pos:start="67:49" pos:end="67:53"><expr pos:start="67:49" pos:end="67:53"><name pos:start="67:49" pos:end="67:53">bcond</name></expr></argument>, <argument pos:start="67:56" pos:end="67:56"><expr pos:start="67:56" pos:end="67:56"><literal type="number" pos:start="67:56" pos:end="67:56">0</literal></expr></argument>, <argument pos:start="67:59" pos:end="67:60"><expr pos:start="67:59" pos:end="67:60"><name pos:start="67:59" pos:end="67:60">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:58"><expr pos:start="69:17" pos:end="69:57"><call pos:start="69:17" pos:end="69:57"><name pos:start="69:17" pos:end="69:27">gen_goto_tb</name><argument_list pos:start="69:28" pos:end="69:57">(<argument pos:start="69:29" pos:end="69:31"><expr pos:start="69:29" pos:end="69:31"><name pos:start="69:29" pos:end="69:31">ctx</name></expr></argument>, <argument pos:start="69:34" pos:end="69:34"><expr pos:start="69:34" pos:end="69:34"><literal type="number" pos:start="69:34" pos:end="69:34">1</literal></expr></argument>, <argument pos:start="69:37" pos:end="69:56"><expr pos:start="69:37" pos:end="69:56"><name pos:start="69:37" pos:end="69:43"><name pos:start="69:37" pos:end="69:39">ctx</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:43">pc</name></name> <operator pos:start="69:45" pos:end="69:45">+</operator> <name pos:start="69:47" pos:end="69:56">insn_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:34"><expr pos:start="71:17" pos:end="71:33"><call pos:start="71:17" pos:end="71:33"><name pos:start="71:17" pos:end="71:29">gen_set_label</name><argument_list pos:start="71:30" pos:end="71:33">(<argument pos:start="71:31" pos:end="71:32"><expr pos:start="71:31" pos:end="71:32"><name pos:start="71:31" pos:end="71:32">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:50"><expr pos:start="73:17" pos:end="73:49"><call pos:start="73:17" pos:end="73:49"><name pos:start="73:17" pos:end="73:27">gen_goto_tb</name><argument_list pos:start="73:28" pos:end="73:49">(<argument pos:start="73:29" pos:end="73:31"><expr pos:start="73:29" pos:end="73:31"><name pos:start="73:29" pos:end="73:31">ctx</name></expr></argument>, <argument pos:start="73:34" pos:end="73:34"><expr pos:start="73:34" pos:end="73:34"><literal type="number" pos:start="73:34" pos:end="73:34">0</literal></expr></argument>, <argument pos:start="73:37" pos:end="73:48"><expr pos:start="73:37" pos:end="73:48"><name pos:start="73:37" pos:end="73:48"><name pos:start="73:37" pos:end="73:39">ctx</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:48">btarget</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <case pos:start="79:9" pos:end="79:27">case <expr pos:start="79:14" pos:end="79:26"><name pos:start="79:14" pos:end="79:26">MIPS_HFLAG_BR</name></expr>:</case>

            <comment type="block" pos:start="81:13" pos:end="81:50">/* unconditional branch to register */</comment>

            <expr_stmt pos:start="83:13" pos:end="83:45"><expr pos:start="83:13" pos:end="83:44"><call pos:start="83:13" pos:end="83:44"><name pos:start="83:13" pos:end="83:22">MIPS_DEBUG</name><argument_list pos:start="83:23" pos:end="83:44">(<argument pos:start="83:24" pos:end="83:43"><expr pos:start="83:24" pos:end="83:43"><literal type="string" pos:start="83:24" pos:end="83:43">"branch to register"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="115:13"><if pos:start="85:13" pos:end="111:13">if <condition pos:start="85:16" pos:end="85:63">(<expr pos:start="85:17" pos:end="85:62"><name pos:start="85:17" pos:end="85:31"><name pos:start="85:17" pos:end="85:19">ctx</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:31">insn_flags</name></name> <operator pos:start="85:33" pos:end="85:33">&amp;</operator> <operator pos:start="85:35" pos:end="85:35">(</operator><name pos:start="85:36" pos:end="85:45">ASE_MIPS16</name> <operator pos:start="85:47" pos:end="85:47">|</operator> <name pos:start="85:49" pos:end="85:61">ASE_MICROMIPS</name><operator pos:start="85:62" pos:end="85:62">)</operator></expr>)</condition> <block pos:start="85:65" pos:end="111:13">{<block_content pos:start="87:17" pos:end="109:69">

                <decl_stmt pos:start="87:17" pos:end="87:41"><decl pos:start="87:17" pos:end="87:40"><type pos:start="87:17" pos:end="87:20"><name pos:start="87:17" pos:end="87:20">TCGv</name></type> <name pos:start="87:22" pos:end="87:23">t0</name> <init pos:start="87:25" pos:end="87:40">= <expr pos:start="87:27" pos:end="87:40"><call pos:start="87:27" pos:end="87:40"><name pos:start="87:27" pos:end="87:38">tcg_temp_new</name><argument_list pos:start="87:39" pos:end="87:40">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="89:17" pos:end="89:49"><decl pos:start="89:17" pos:end="89:48"><type pos:start="89:17" pos:end="89:24"><name pos:start="89:17" pos:end="89:24">TCGv_i32</name></type> <name pos:start="89:26" pos:end="89:27">t1</name> <init pos:start="89:29" pos:end="89:48">= <expr pos:start="89:31" pos:end="89:48"><call pos:start="89:31" pos:end="89:48"><name pos:start="89:31" pos:end="89:46">tcg_temp_new_i32</name><argument_list pos:start="89:47" pos:end="89:48">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="93:17" pos:end="93:50"><expr pos:start="93:17" pos:end="93:49"><call pos:start="93:17" pos:end="93:49"><name pos:start="93:17" pos:end="93:31">tcg_gen_andi_tl</name><argument_list pos:start="93:32" pos:end="93:49">(<argument pos:start="93:33" pos:end="93:34"><expr pos:start="93:33" pos:end="93:34"><name pos:start="93:33" pos:end="93:34">t0</name></expr></argument>, <argument pos:start="93:37" pos:end="93:43"><expr pos:start="93:37" pos:end="93:43"><name pos:start="93:37" pos:end="93:43">btarget</name></expr></argument>, <argument pos:start="93:46" pos:end="93:48"><expr pos:start="93:46" pos:end="93:48"><literal type="number" pos:start="93:46" pos:end="93:48">0x1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:45"><expr pos:start="95:17" pos:end="95:44"><call pos:start="95:17" pos:end="95:44"><name pos:start="95:17" pos:end="95:36">tcg_gen_trunc_tl_i32</name><argument_list pos:start="95:37" pos:end="95:44">(<argument pos:start="95:38" pos:end="95:39"><expr pos:start="95:38" pos:end="95:39"><name pos:start="95:38" pos:end="95:39">t1</name></expr></argument>, <argument pos:start="95:42" pos:end="95:43"><expr pos:start="95:42" pos:end="95:43"><name pos:start="95:42" pos:end="95:43">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:34"><expr pos:start="97:17" pos:end="97:33"><call pos:start="97:17" pos:end="97:33"><name pos:start="97:17" pos:end="97:29">tcg_temp_free</name><argument_list pos:start="97:30" pos:end="97:33">(<argument pos:start="97:31" pos:end="97:32"><expr pos:start="97:31" pos:end="97:32"><name pos:start="97:31" pos:end="97:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:76"><expr pos:start="99:17" pos:end="99:75"><call pos:start="99:17" pos:end="99:75"><name pos:start="99:17" pos:end="99:32">tcg_gen_andi_i32</name><argument_list pos:start="99:33" pos:end="99:75">(<argument pos:start="99:34" pos:end="99:39"><expr pos:start="99:34" pos:end="99:39"><name pos:start="99:34" pos:end="99:39">hflags</name></expr></argument>, <argument pos:start="99:42" pos:end="99:47"><expr pos:start="99:42" pos:end="99:47"><name pos:start="99:42" pos:end="99:47">hflags</name></expr></argument>, <argument pos:start="99:50" pos:end="99:74"><expr pos:start="99:50" pos:end="99:74"><operator pos:start="99:50" pos:end="99:50">~</operator><operator pos:start="99:51" pos:end="99:51">(</operator><name pos:start="99:52" pos:end="99:59">uint32_t</name><operator pos:start="99:60" pos:end="99:60">)</operator><name pos:start="99:61" pos:end="99:74">MIPS_HFLAG_M16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:63"><expr pos:start="101:17" pos:end="101:62"><call pos:start="101:17" pos:end="101:62"><name pos:start="101:17" pos:end="101:32">tcg_gen_shli_i32</name><argument_list pos:start="101:33" pos:end="101:62">(<argument pos:start="101:34" pos:end="101:35"><expr pos:start="101:34" pos:end="101:35"><name pos:start="101:34" pos:end="101:35">t1</name></expr></argument>, <argument pos:start="101:38" pos:end="101:39"><expr pos:start="101:38" pos:end="101:39"><name pos:start="101:38" pos:end="101:39">t1</name></expr></argument>, <argument pos:start="101:42" pos:end="101:61"><expr pos:start="101:42" pos:end="101:61"><name pos:start="101:42" pos:end="101:61">MIPS_HFLAG_M16_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:51"><expr pos:start="103:17" pos:end="103:50"><call pos:start="103:17" pos:end="103:50"><name pos:start="103:17" pos:end="103:30">tcg_gen_or_i32</name><argument_list pos:start="103:31" pos:end="103:50">(<argument pos:start="103:32" pos:end="103:37"><expr pos:start="103:32" pos:end="103:37"><name pos:start="103:32" pos:end="103:37">hflags</name></expr></argument>, <argument pos:start="103:40" pos:end="103:45"><expr pos:start="103:40" pos:end="103:45"><name pos:start="103:40" pos:end="103:45">hflags</name></expr></argument>, <argument pos:start="103:48" pos:end="103:49"><expr pos:start="103:48" pos:end="103:49"><name pos:start="103:48" pos:end="103:49">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:38"><expr pos:start="105:17" pos:end="105:37"><call pos:start="105:17" pos:end="105:37"><name pos:start="105:17" pos:end="105:33">tcg_temp_free_i32</name><argument_list pos:start="105:34" pos:end="105:37">(<argument pos:start="105:35" pos:end="105:36"><expr pos:start="105:35" pos:end="105:36"><name pos:start="105:35" pos:end="105:36">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="109:17" pos:end="109:69"><expr pos:start="109:17" pos:end="109:68"><call pos:start="109:17" pos:end="109:68"><name pos:start="109:17" pos:end="109:31">tcg_gen_andi_tl</name><argument_list pos:start="109:32" pos:end="109:68">(<argument pos:start="109:33" pos:end="109:38"><expr pos:start="109:33" pos:end="109:38"><name pos:start="109:33" pos:end="109:38">cpu_PC</name></expr></argument>, <argument pos:start="109:41" pos:end="109:47"><expr pos:start="109:41" pos:end="109:47"><name pos:start="109:41" pos:end="109:47">btarget</name></expr></argument>, <argument pos:start="109:50" pos:end="109:67"><expr pos:start="109:50" pos:end="109:67"><operator pos:start="109:50" pos:end="109:50">~</operator><operator pos:start="109:51" pos:end="109:51">(</operator><name pos:start="109:52" pos:end="109:63">target_ulong</name><operator pos:start="109:64" pos:end="109:64">)</operator><literal type="number" pos:start="109:65" pos:end="109:67">0x1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="111:15" pos:end="115:13">else <block pos:start="111:20" pos:end="115:13">{<block_content pos:start="113:17" pos:end="113:48">

                <expr_stmt pos:start="113:17" pos:end="113:48"><expr pos:start="113:17" pos:end="113:47"><call pos:start="113:17" pos:end="113:47"><name pos:start="113:17" pos:end="113:30">tcg_gen_mov_tl</name><argument_list pos:start="113:31" pos:end="113:47">(<argument pos:start="113:32" pos:end="113:37"><expr pos:start="113:32" pos:end="113:37"><name pos:start="113:32" pos:end="113:37">cpu_PC</name></expr></argument>, <argument pos:start="113:40" pos:end="113:46"><expr pos:start="113:40" pos:end="113:46"><name pos:start="113:40" pos:end="113:46">btarget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="117:13" pos:end="123:13"><if pos:start="117:13" pos:end="123:13">if <condition pos:start="117:16" pos:end="117:40">(<expr pos:start="117:17" pos:end="117:39"><name pos:start="117:17" pos:end="117:39"><name pos:start="117:17" pos:end="117:19">ctx</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:39">singlestep_enabled</name></name></expr>)</condition> <block pos:start="117:42" pos:end="123:13">{<block_content pos:start="119:17" pos:end="121:61">

                <expr_stmt pos:start="119:17" pos:end="119:39"><expr pos:start="119:17" pos:end="119:38"><call pos:start="119:17" pos:end="119:38"><name pos:start="119:17" pos:end="119:30">save_cpu_state</name><argument_list pos:start="119:31" pos:end="119:38">(<argument pos:start="119:32" pos:end="119:34"><expr pos:start="119:32" pos:end="119:34"><name pos:start="119:32" pos:end="119:34">ctx</name></expr></argument>, <argument pos:start="119:37" pos:end="119:37"><expr pos:start="119:37" pos:end="119:37"><literal type="number" pos:start="119:37" pos:end="119:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:61"><expr pos:start="121:17" pos:end="121:60"><call pos:start="121:17" pos:end="121:60"><name pos:start="121:17" pos:end="121:31">gen_helper_0e0i</name><argument_list pos:start="121:32" pos:end="121:60">(<argument pos:start="121:33" pos:end="121:47"><expr pos:start="121:33" pos:end="121:47"><name pos:start="121:33" pos:end="121:47">raise_exception</name></expr></argument>, <argument pos:start="121:50" pos:end="121:59"><expr pos:start="121:50" pos:end="121:59"><name pos:start="121:50" pos:end="121:59">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:31"><expr pos:start="125:13" pos:end="125:30"><call pos:start="125:13" pos:end="125:30"><name pos:start="125:13" pos:end="125:27">tcg_gen_exit_tb</name><argument_list pos:start="125:28" pos:end="125:30">(<argument pos:start="125:29" pos:end="125:29"><expr pos:start="125:29" pos:end="125:29"><literal type="number" pos:start="125:29" pos:end="125:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="127:13" pos:end="127:18">break;</break>

        <default pos:start="129:9" pos:end="129:16">default:</default>

            <expr_stmt pos:start="131:13" pos:end="131:41"><expr pos:start="131:13" pos:end="131:40"><call pos:start="131:13" pos:end="131:40"><name pos:start="131:13" pos:end="131:22">MIPS_DEBUG</name><argument_list pos:start="131:23" pos:end="131:40">(<argument pos:start="131:24" pos:end="131:39"><expr pos:start="131:24" pos:end="131:39"><literal type="string" pos:start="131:24" pos:end="131:39">"unknown branch"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
