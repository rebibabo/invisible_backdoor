<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12791.c" pos:tabs="8"><function pos:start="1:1" pos:end="146:15"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:8">main</name><parameter_list pos:start="1:9" pos:end="1:31">(<parameter pos:start="1:10" pos:end="1:17"><decl pos:start="1:10" pos:end="1:17"><type pos:start="1:10" pos:end="1:17"><name pos:start="1:10" pos:end="1:12">int</name></type> <name pos:start="1:14" pos:end="1:17">argc</name></decl></parameter>, <parameter pos:start="1:20" pos:end="1:30"><decl pos:start="1:20" pos:end="1:30"><type pos:start="1:20" pos:end="1:30"><name pos:start="1:20" pos:end="1:23">char</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier><modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:30">argv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="146:15">{<block_content pos:start="5:5" pos:end="146:15">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:26">= <expr pos:start="5:15" pos:end="5:26"><name pos:start="5:15" pos:end="5:26">EXIT_SUCCESS</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">GAState</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">s</name> <init pos:start="7:16" pos:end="7:35">= <expr pos:start="7:18" pos:end="7:35"><call pos:start="7:18" pos:end="7:35"><name pos:start="7:18" pos:end="7:23">g_new0</name><argument_list pos:start="7:24" pos:end="7:35">(<argument pos:start="7:25" pos:end="7:31"><expr pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:31">GAState</name></expr></argument>, <argument pos:start="7:34" pos:end="7:34"><expr pos:start="7:34" pos:end="7:34"><literal type="number" pos:start="7:34" pos:end="7:34">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">GAConfig</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:20">config</name> <init pos:start="9:22" pos:end="9:42">= <expr pos:start="9:24" pos:end="9:42"><call pos:start="9:24" pos:end="9:42"><name pos:start="9:24" pos:end="9:29">g_new0</name><argument_list pos:start="9:30" pos:end="9:42">(<argument pos:start="9:31" pos:end="9:38"><expr pos:start="9:31" pos:end="9:38"><name pos:start="9:31" pos:end="9:38">GAConfig</name></expr></argument>, <argument pos:start="9:41" pos:end="9:41"><expr pos:start="9:41" pos:end="9:41"><literal type="number" pos:start="9:41" pos:end="9:41">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:65"><expr pos:start="13:5" pos:end="13:64"><name pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:10">config</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:21">log_level</name></name> <operator pos:start="13:23" pos:end="13:23">=</operator> <name pos:start="13:25" pos:end="13:41">G_LOG_LEVEL_ERROR</name> <operator pos:start="13:43" pos:end="13:43">|</operator> <name pos:start="13:45" pos:end="13:64">G_LOG_LEVEL_CRITICAL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:39"><expr pos:start="17:5" pos:end="17:38"><call pos:start="17:5" pos:end="17:38"><name pos:start="17:5" pos:end="17:20">module_call_init</name><argument_list pos:start="17:21" pos:end="17:38">(<argument pos:start="17:22" pos:end="17:37"><expr pos:start="17:22" pos:end="17:37"><name pos:start="17:22" pos:end="17:37">MODULE_INIT_QAPI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><call pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:22">init_dfl_pathnames</name><argument_list pos:start="21:23" pos:end="21:24">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><call pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:15">config_load</name><argument_list pos:start="23:16" pos:end="23:23">(<argument pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><call pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:16">config_parse</name><argument_list pos:start="25:17" pos:end="25:36">(<argument pos:start="25:18" pos:end="25:23"><expr pos:start="25:18" pos:end="25:23"><name pos:start="25:18" pos:end="25:23">config</name></expr></argument>, <argument pos:start="25:26" pos:end="25:29"><expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">argc</name></expr></argument>, <argument pos:start="25:32" pos:end="25:35"><expr pos:start="25:32" pos:end="25:35"><name pos:start="25:32" pos:end="25:35">argv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="146:15"><if pos:start="29:5" pos:end="146:15">if <condition pos:start="29:8" pos:end="29:37">(<expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:14">config</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:28">pid_filepath</name></name> <operator pos:start="29:30" pos:end="29:31">==</operator> <name pos:start="29:33" pos:end="29:36">NULL</name></expr>)</condition> <block pos:start="29:39" pos:end="146:15">{<block_content pos:start="31:9" pos:end="146:15">

        <expr_stmt pos:start="31:9" pos:end="31:63"><expr pos:start="31:9" pos:end="31:62"><name pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:14">config</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:28">pid_filepath</name></name> <operator pos:start="31:30" pos:end="31:30">=</operator> <call pos:start="31:32" pos:end="31:62"><name pos:start="31:32" pos:end="31:39">g_strdup</name><argument_list pos:start="31:40" pos:end="31:62">(<argument pos:start="31:41" pos:end="31:61"><expr pos:start="31:41" pos:end="31:61"><name pos:start="31:41" pos:end="31:61"><name pos:start="31:41" pos:end="31:53">dfl_pathnames</name><operator pos:start="31:54" pos:end="31:54">.</operator><name pos:start="31:55" pos:end="31:61">pidfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <if_stmt pos:start="36:5" pos:end="146:15"><if pos:start="36:5" pos:end="146:15">if <condition pos:start="36:8" pos:end="36:34">(<expr pos:start="36:9" pos:end="36:33"><name pos:start="36:9" pos:end="36:25"><name pos:start="36:9" pos:end="36:14">config</name><operator pos:start="36:15" pos:end="36:16">-&gt;</operator><name pos:start="36:17" pos:end="36:25">state_dir</name></name> <operator pos:start="36:27" pos:end="36:28">==</operator> <name pos:start="36:30" pos:end="36:33">NULL</name></expr>)</condition> <block pos:start="36:36" pos:end="146:15">{<block_content pos:start="38:9" pos:end="146:15">

        <expr_stmt pos:start="38:9" pos:end="38:62"><expr pos:start="38:9" pos:end="38:61"><name pos:start="38:9" pos:end="38:25"><name pos:start="38:9" pos:end="38:14">config</name><operator pos:start="38:15" pos:end="38:16">-&gt;</operator><name pos:start="38:17" pos:end="38:25">state_dir</name></name> <operator pos:start="38:27" pos:end="38:27">=</operator> <call pos:start="38:29" pos:end="38:61"><name pos:start="38:29" pos:end="38:36">g_strdup</name><argument_list pos:start="38:37" pos:end="38:61">(<argument pos:start="38:38" pos:end="38:60"><expr pos:start="38:38" pos:end="38:60"><name pos:start="38:38" pos:end="38:60"><name pos:start="38:38" pos:end="38:50">dfl_pathnames</name><operator pos:start="38:51" pos:end="38:51">.</operator><name pos:start="38:52" pos:end="38:60">state_dir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <if_stmt pos:start="43:5" pos:end="146:15"><if pos:start="43:5" pos:end="146:15">if <condition pos:start="43:8" pos:end="43:31">(<expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:14">config</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:22">method</name></name> <operator pos:start="43:24" pos:end="43:25">==</operator> <name pos:start="43:27" pos:end="43:30">NULL</name></expr>)</condition> <block pos:start="43:33" pos:end="146:15">{<block_content pos:start="45:9" pos:end="146:15">

        <expr_stmt pos:start="45:9" pos:end="45:51"><expr pos:start="45:9" pos:end="45:50"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:14">config</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:22">method</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="45:50"><name pos:start="45:26" pos:end="45:33">g_strdup</name><argument_list pos:start="45:34" pos:end="45:50">(<argument pos:start="45:35" pos:end="45:49"><expr pos:start="45:35" pos:end="45:49"><literal type="string" pos:start="45:35" pos:end="45:49">"virtio-serial"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <if_stmt pos:start="50:5" pos:end="146:15"><if pos:start="50:5" pos:end="146:15">if <condition pos:start="50:8" pos:end="50:37">(<expr pos:start="50:9" pos:end="50:36"><name pos:start="50:9" pos:end="50:28"><name pos:start="50:9" pos:end="50:14">config</name><operator pos:start="50:15" pos:end="50:16">-&gt;</operator><name pos:start="50:17" pos:end="50:28">channel_path</name></name> <operator pos:start="50:30" pos:end="50:31">==</operator> <name pos:start="50:33" pos:end="50:36">NULL</name></expr>)</condition> <block pos:start="50:39" pos:end="146:15">{<block_content pos:start="52:9" pos:end="146:15">

        <if_stmt pos:start="52:9" pos:end="146:15"><if pos:start="52:9" pos:end="58:9">if <condition pos:start="52:12" pos:end="52:57">(<expr pos:start="52:13" pos:end="52:56"><call pos:start="52:13" pos:end="52:51"><name pos:start="52:13" pos:end="52:18">strcmp</name><argument_list pos:start="52:19" pos:end="52:51">(<argument pos:start="52:20" pos:end="52:33"><expr pos:start="52:20" pos:end="52:33"><name pos:start="52:20" pos:end="52:33"><name pos:start="52:20" pos:end="52:25">config</name><operator pos:start="52:26" pos:end="52:27">-&gt;</operator><name pos:start="52:28" pos:end="52:33">method</name></name></expr></argument>, <argument pos:start="52:36" pos:end="52:50"><expr pos:start="52:36" pos:end="52:50"><literal type="string" pos:start="52:36" pos:end="52:50">"virtio-serial"</literal></expr></argument>)</argument_list></call> <operator pos:start="52:53" pos:end="52:54">==</operator> <literal type="number" pos:start="52:56" pos:end="52:56">0</literal></expr>)</condition> <block pos:start="52:59" pos:end="58:9">{<block_content pos:start="56:13" pos:end="56:69">

            <comment type="block" pos:start="54:13" pos:end="54:65">/* try the default path for the virtio-serial port */</comment>

            <expr_stmt pos:start="56:13" pos:end="56:69"><expr pos:start="56:13" pos:end="56:68"><name pos:start="56:13" pos:end="56:32"><name pos:start="56:13" pos:end="56:18">config</name><operator pos:start="56:19" pos:end="56:20">-&gt;</operator><name pos:start="56:21" pos:end="56:32">channel_path</name></name> <operator pos:start="56:34" pos:end="56:34">=</operator> <call pos:start="56:36" pos:end="56:68"><name pos:start="56:36" pos:end="56:43">g_strdup</name><argument_list pos:start="56:44" pos:end="56:68">(<argument pos:start="56:45" pos:end="56:67"><expr pos:start="56:45" pos:end="56:67"><name pos:start="56:45" pos:end="56:67">QGA_VIRTIO_PATH_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="58:11" pos:end="64:9">else if <condition pos:start="58:19" pos:end="58:61">(<expr pos:start="58:20" pos:end="58:60"><call pos:start="58:20" pos:end="58:55"><name pos:start="58:20" pos:end="58:25">strcmp</name><argument_list pos:start="58:26" pos:end="58:55">(<argument pos:start="58:27" pos:end="58:40"><expr pos:start="58:27" pos:end="58:40"><name pos:start="58:27" pos:end="58:40"><name pos:start="58:27" pos:end="58:32">config</name><operator pos:start="58:33" pos:end="58:34">-&gt;</operator><name pos:start="58:35" pos:end="58:40">method</name></name></expr></argument>, <argument pos:start="58:43" pos:end="58:54"><expr pos:start="58:43" pos:end="58:54"><literal type="string" pos:start="58:43" pos:end="58:54">"isa-serial"</literal></expr></argument>)</argument_list></call> <operator pos:start="58:57" pos:end="58:58">==</operator> <literal type="number" pos:start="58:60" pos:end="58:60">0</literal></expr>)</condition> <block pos:start="58:63" pos:end="64:9">{<block_content pos:start="62:13" pos:end="62:69">

            <comment type="block" pos:start="60:13" pos:end="60:65">/* try the default path for the serial port - COM1 */</comment>

            <expr_stmt pos:start="62:13" pos:end="62:69"><expr pos:start="62:13" pos:end="62:68"><name pos:start="62:13" pos:end="62:32"><name pos:start="62:13" pos:end="62:18">config</name><operator pos:start="62:19" pos:end="62:20">-&gt;</operator><name pos:start="62:21" pos:end="62:32">channel_path</name></name> <operator pos:start="62:34" pos:end="62:34">=</operator> <call pos:start="62:36" pos:end="62:68"><name pos:start="62:36" pos:end="62:43">g_strdup</name><argument_list pos:start="62:44" pos:end="62:68">(<argument pos:start="62:45" pos:end="62:67"><expr pos:start="62:45" pos:end="62:67"><name pos:start="62:45" pos:end="62:67">QGA_SERIAL_PATH_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="64:11" pos:end="146:15">else <block pos:start="64:16" pos:end="146:15">{<block_content pos:start="66:13" pos:end="146:15">

            <expr_stmt pos:start="66:13" pos:end="66:63"><expr pos:start="66:13" pos:end="66:62"><call pos:start="66:13" pos:end="66:62"><name pos:start="66:13" pos:end="66:22">g_critical</name><argument_list pos:start="66:23" pos:end="66:62">(<argument pos:start="66:24" pos:end="66:61"><expr pos:start="66:24" pos:end="66:61"><literal type="string" pos:start="66:24" pos:end="66:61">"must specify a path for this channel"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="68:13" pos:end="68:31"><expr pos:start="68:13" pos:end="68:30"><name pos:start="68:13" pos:end="68:15">ret</name> <operator pos:start="68:17" pos:end="68:17">=</operator> <name pos:start="68:19" pos:end="68:30">EXIT_FAILURE</name></expr>;</expr_stmt>

            <goto pos:start="70:13" pos:end="70:21">goto <name pos:start="70:18" pos:end="70:20">end</name>;</goto>





    <expr_stmt pos:start="76:5" pos:end="76:37"><expr pos:start="76:5" pos:end="76:36"><name pos:start="76:5" pos:end="76:16"><name pos:start="76:5" pos:end="76:5">s</name><operator pos:start="76:6" pos:end="76:7">-&gt;</operator><name pos:start="76:8" pos:end="76:16">log_level</name></name> <operator pos:start="76:18" pos:end="76:18">=</operator> <name pos:start="76:20" pos:end="76:36"><name pos:start="76:20" pos:end="76:25">config</name><operator pos:start="76:26" pos:end="76:27">-&gt;</operator><name pos:start="76:28" pos:end="76:36">log_level</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="78:5" pos:end="81:0"><expr pos:start="78:5" pos:end="78:24"><name pos:start="78:5" pos:end="78:15"><name pos:start="78:5" pos:end="78:5">s</name><operator pos:start="78:6" pos:end="78:7">-&gt;</operator><name pos:start="78:8" pos:end="78:15">log_file</name></name> <operator pos:start="78:17" pos:end="78:17">=</operator> <name pos:start="78:19" pos:end="78:24">stderr</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="80:1" pos:end="80:22">#<cpp:directive pos:start="80:2" pos:end="80:6">ifdef</cpp:directive> <name pos:start="80:8" pos:end="80:22">CONFIG_FSFREEZE</name></cpp:ifdef>

    <expr_stmt pos:start="82:5" pos:end="85:0"><expr pos:start="82:5" pos:end="82:44"><name pos:start="82:5" pos:end="82:20"><name pos:start="82:5" pos:end="82:5">s</name><operator pos:start="82:6" pos:end="82:7">-&gt;</operator><name pos:start="82:8" pos:end="82:20">fsfreeze_hook</name></name> <operator pos:start="82:22" pos:end="82:22">=</operator> <name pos:start="82:24" pos:end="82:44"><name pos:start="82:24" pos:end="82:29">config</name><operator pos:start="82:30" pos:end="82:31">-&gt;</operator><name pos:start="82:32" pos:end="82:44">fsfreeze_hook</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="84:1" pos:end="84:6">#<cpp:directive pos:start="84:2" pos:end="84:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="86:5" pos:end="86:76"><expr pos:start="86:5" pos:end="86:75"><name pos:start="86:5" pos:end="86:22"><name pos:start="86:5" pos:end="86:5">s</name><operator pos:start="86:6" pos:end="86:7">-&gt;</operator><name pos:start="86:8" pos:end="86:22">pstate_filepath</name></name> <operator pos:start="86:24" pos:end="86:24">=</operator> <call pos:start="86:26" pos:end="86:75"><name pos:start="86:26" pos:end="86:40">g_strdup_printf</name><argument_list pos:start="86:41" pos:end="86:75">(<argument pos:start="86:42" pos:end="86:55"><expr pos:start="86:42" pos:end="86:55"><literal type="string" pos:start="86:42" pos:end="86:55">"%s/qga.state"</literal></expr></argument>, <argument pos:start="86:58" pos:end="86:74"><expr pos:start="86:58" pos:end="86:74"><name pos:start="86:58" pos:end="86:74"><name pos:start="86:58" pos:end="86:63">config</name><operator pos:start="86:64" pos:end="86:65">-&gt;</operator><name pos:start="86:66" pos:end="86:74">state_dir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="88:5" pos:end="90:68"><expr pos:start="88:5" pos:end="90:67"><name pos:start="88:5" pos:end="88:30"><name pos:start="88:5" pos:end="88:5">s</name><operator pos:start="88:6" pos:end="88:7">-&gt;</operator><name pos:start="88:8" pos:end="88:30">state_filepath_isfrozen</name></name> <operator pos:start="88:32" pos:end="88:32">=</operator> <call pos:start="88:34" pos:end="90:67"><name pos:start="88:34" pos:end="88:48">g_strdup_printf</name><argument_list pos:start="88:49" pos:end="90:67">(<argument pos:start="88:50" pos:end="88:72"><expr pos:start="88:50" pos:end="88:72"><literal type="string" pos:start="88:50" pos:end="88:72">"%s/qga.state.isfrozen"</literal></expr></argument>,

                                                 <argument pos:start="90:50" pos:end="90:66"><expr pos:start="90:50" pos:end="90:66"><name pos:start="90:50" pos:end="90:66"><name pos:start="90:50" pos:end="90:55">config</name><operator pos:start="90:56" pos:end="90:57">-&gt;</operator><name pos:start="90:58" pos:end="90:66">state_dir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="92:5" pos:end="92:35"><expr pos:start="92:5" pos:end="92:34"><name pos:start="92:5" pos:end="92:13"><name pos:start="92:5" pos:end="92:5">s</name><operator pos:start="92:6" pos:end="92:7">-&gt;</operator><name pos:start="92:8" pos:end="92:13">frozen</name></name> <operator pos:start="92:15" pos:end="92:15">=</operator> <call pos:start="92:17" pos:end="92:34"><name pos:start="92:17" pos:end="92:31">check_is_frozen</name><argument_list pos:start="92:32" pos:end="92:34">(<argument pos:start="92:33" pos:end="92:33"><expr pos:start="92:33" pos:end="92:33"><name pos:start="92:33" pos:end="92:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="96:5" pos:end="146:15"><if pos:start="96:5" pos:end="146:15">if <condition pos:start="96:8" pos:end="96:25">(<expr pos:start="96:9" pos:end="96:24"><name pos:start="96:9" pos:end="96:24"><name pos:start="96:9" pos:end="96:14">config</name><operator pos:start="96:15" pos:end="96:16">-&gt;</operator><name pos:start="96:17" pos:end="96:24">dumpconf</name></name></expr>)</condition> <block pos:start="96:27" pos:end="146:15">{<block_content pos:start="98:9" pos:end="146:15">

        <expr_stmt pos:start="98:9" pos:end="98:28"><expr pos:start="98:9" pos:end="98:27"><call pos:start="98:9" pos:end="98:27"><name pos:start="98:9" pos:end="98:19">config_dump</name><argument_list pos:start="98:20" pos:end="98:27">(<argument pos:start="98:21" pos:end="98:26"><expr pos:start="98:21" pos:end="98:26"><name pos:start="98:21" pos:end="98:26">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="100:9" pos:end="100:17">goto <name pos:start="100:14" pos:end="100:16">end</name>;</goto>




    <expr_stmt pos:start="105:5" pos:end="105:31"><expr pos:start="105:5" pos:end="105:30"><name pos:start="105:5" pos:end="105:7">ret</name> <operator pos:start="105:9" pos:end="105:9">=</operator> <call pos:start="105:11" pos:end="105:30"><name pos:start="105:11" pos:end="105:19">run_agent</name><argument_list pos:start="105:20" pos:end="105:30">(<argument pos:start="105:21" pos:end="105:21"><expr pos:start="105:21" pos:end="105:21"><name pos:start="105:21" pos:end="105:21">s</name></expr></argument>, <argument pos:start="105:24" pos:end="105:29"><expr pos:start="105:24" pos:end="105:29"><name pos:start="105:24" pos:end="105:29">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="109:1" pos:end="109:4"><name pos:start="109:1" pos:end="109:3">end</name>:</label>

    <if_stmt pos:start="111:5" pos:end="146:15"><if pos:start="111:5" pos:end="146:15">if <condition pos:start="111:8" pos:end="111:25">(<expr pos:start="111:9" pos:end="111:24"><name pos:start="111:9" pos:end="111:24"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:24">command_state</name></name></expr>)</condition> <block pos:start="111:27" pos:end="146:15">{<block_content pos:start="113:9" pos:end="146:15">

        <expr_stmt pos:start="113:9" pos:end="113:55"><expr pos:start="113:9" pos:end="113:54"><call pos:start="113:9" pos:end="113:54"><name pos:start="113:9" pos:end="113:36">ga_command_state_cleanup_all</name><argument_list pos:start="113:37" pos:end="113:54">(<argument pos:start="113:38" pos:end="113:53"><expr pos:start="113:38" pos:end="113:53"><name pos:start="113:38" pos:end="113:53"><name pos:start="113:38" pos:end="113:38">s</name><operator pos:start="113:39" pos:end="113:40">-&gt;</operator><name pos:start="113:41" pos:end="113:53">command_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:48"><expr pos:start="115:9" pos:end="115:47"><call pos:start="115:9" pos:end="115:47"><name pos:start="115:9" pos:end="115:29">ga_command_state_free</name><argument_list pos:start="115:30" pos:end="115:47">(<argument pos:start="115:31" pos:end="115:46"><expr pos:start="115:31" pos:end="115:46"><name pos:start="115:31" pos:end="115:46"><name pos:start="115:31" pos:end="115:31">s</name><operator pos:start="115:32" pos:end="115:33">-&gt;</operator><name pos:start="115:34" pos:end="115:46">command_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:48"><expr pos:start="117:9" pos:end="117:47"><call pos:start="117:9" pos:end="117:47"><name pos:start="117:9" pos:end="117:35">json_message_parser_destroy</name><argument_list pos:start="117:36" pos:end="117:47">(<argument pos:start="117:37" pos:end="117:46"><expr pos:start="117:37" pos:end="117:46"><operator pos:start="117:37" pos:end="117:37">&amp;</operator><name pos:start="117:38" pos:end="117:46"><name pos:start="117:38" pos:end="117:38">s</name><operator pos:start="117:39" pos:end="117:40">-&gt;</operator><name pos:start="117:41" pos:end="117:46">parser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <if_stmt pos:start="120:5" pos:end="146:15"><if pos:start="120:5" pos:end="146:15">if <condition pos:start="120:8" pos:end="120:19">(<expr pos:start="120:9" pos:end="120:18"><name pos:start="120:9" pos:end="120:18"><name pos:start="120:9" pos:end="120:9">s</name><operator pos:start="120:10" pos:end="120:11">-&gt;</operator><name pos:start="120:12" pos:end="120:18">channel</name></name></expr>)</condition> <block pos:start="120:21" pos:end="146:15">{<block_content pos:start="122:9" pos:end="146:15">

        <expr_stmt pos:start="122:9" pos:end="122:36"><expr pos:start="122:9" pos:end="122:35"><call pos:start="122:9" pos:end="122:35"><name pos:start="122:9" pos:end="122:23">ga_channel_free</name><argument_list pos:start="122:24" pos:end="122:35">(<argument pos:start="122:25" pos:end="122:34"><expr pos:start="122:25" pos:end="122:34"><name pos:start="122:25" pos:end="122:34"><name pos:start="122:25" pos:end="122:25">s</name><operator pos:start="122:26" pos:end="122:27">-&gt;</operator><name pos:start="122:28" pos:end="122:34">channel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <expr_stmt pos:start="125:5" pos:end="125:31"><expr pos:start="125:5" pos:end="125:30"><call pos:start="125:5" pos:end="125:30"><name pos:start="125:5" pos:end="125:10">g_free</name><argument_list pos:start="125:11" pos:end="125:30">(<argument pos:start="125:12" pos:end="125:29"><expr pos:start="125:12" pos:end="125:29"><name pos:start="125:12" pos:end="125:29"><name pos:start="125:12" pos:end="125:12">s</name><operator pos:start="125:13" pos:end="125:14">-&gt;</operator><name pos:start="125:15" pos:end="125:29">pstate_filepath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:39"><expr pos:start="127:5" pos:end="127:38"><call pos:start="127:5" pos:end="127:38"><name pos:start="127:5" pos:end="127:10">g_free</name><argument_list pos:start="127:11" pos:end="127:38">(<argument pos:start="127:12" pos:end="127:37"><expr pos:start="127:12" pos:end="127:37"><name pos:start="127:12" pos:end="127:37"><name pos:start="127:12" pos:end="127:12">s</name><operator pos:start="127:13" pos:end="127:14">-&gt;</operator><name pos:start="127:15" pos:end="127:37">state_filepath_isfrozen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="131:5" pos:end="146:15"><if pos:start="131:5" pos:end="146:15">if <condition pos:start="131:8" pos:end="131:26">(<expr pos:start="131:9" pos:end="131:25"><name pos:start="131:9" pos:end="131:25"><name pos:start="131:9" pos:end="131:14">config</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:25">daemonize</name></name></expr>)</condition> <block pos:start="131:28" pos:end="146:15">{<block_content pos:start="133:9" pos:end="146:15">

        <expr_stmt pos:start="133:9" pos:end="133:37"><expr pos:start="133:9" pos:end="133:36"><call pos:start="133:9" pos:end="133:36"><name pos:start="133:9" pos:end="133:14">unlink</name><argument_list pos:start="133:15" pos:end="133:36">(<argument pos:start="133:16" pos:end="133:35"><expr pos:start="133:16" pos:end="133:35"><name pos:start="133:16" pos:end="133:35"><name pos:start="133:16" pos:end="133:21">config</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:35">pid_filepath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="138:5" pos:end="138:24"><expr pos:start="138:5" pos:end="138:23"><call pos:start="138:5" pos:end="138:23"><name pos:start="138:5" pos:end="138:15">config_free</name><argument_list pos:start="138:16" pos:end="138:23">(<argument pos:start="138:17" pos:end="138:22"><expr pos:start="138:17" pos:end="138:22"><name pos:start="138:17" pos:end="138:22">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>







    <return pos:start="146:5" pos:end="146:15">return <expr pos:start="146:12" pos:end="146:14"><name pos:start="146:12" pos:end="146:14">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
