<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17456.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_open_dref</name><parameter_list pos:start="1:25" pos:end="1:69">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:38">ByteIOContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier><modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">pb</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:54"><decl pos:start="1:46" pos:end="1:54"><type pos:start="1:46" pos:end="1:54"><name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">src</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:63">MOVDref</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">ref</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:27">

    <comment type="block" pos:start="5:5" pos:end="5:27">/* try absolute path */</comment>

    <if_stmt pos:start="7:5" pos:end="9:17"><if pos:start="7:5" pos:end="9:17">if <condition pos:start="7:8" pos:end="7:46">(<expr pos:start="7:9" pos:end="7:45"><operator pos:start="7:9" pos:end="7:9">!</operator><call pos:start="7:10" pos:end="7:45"><name pos:start="7:10" pos:end="7:18">url_fopen</name><argument_list pos:start="7:19" pos:end="7:45">(<argument pos:start="7:20" pos:end="7:21"><expr pos:start="7:20" pos:end="7:21"><name pos:start="7:20" pos:end="7:21">pb</name></expr></argument>, <argument pos:start="7:24" pos:end="7:32"><expr pos:start="7:24" pos:end="7:32"><name pos:start="7:24" pos:end="7:32"><name pos:start="7:24" pos:end="7:26">ref</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:32">path</name></name></expr></argument>, <argument pos:start="7:35" pos:end="7:44"><expr pos:start="7:35" pos:end="7:44"><name pos:start="7:35" pos:end="7:44">URL_RDONLY</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:17"><block_content pos:start="9:9" pos:end="9:17">

        <return pos:start="9:9" pos:end="9:17">return <expr pos:start="9:16" pos:end="9:16"><literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:27">/* try relative path */</comment>

    <if_stmt pos:start="15:5" pos:end="83:5"><if pos:start="15:5" pos:end="83:5">if <condition pos:start="15:8" pos:end="15:47">(<expr pos:start="15:9" pos:end="15:46"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:11">ref</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:20">nlvl_to</name></name> <operator pos:start="15:22" pos:end="15:22">&gt;</operator> <literal type="number" pos:start="15:24" pos:end="15:24">0</literal> <operator pos:start="15:26" pos:end="15:27">&amp;&amp;</operator> <name pos:start="15:29" pos:end="15:42"><name pos:start="15:29" pos:end="15:31">ref</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:42">nlvl_from</name></name> <operator pos:start="15:44" pos:end="15:44">&gt;</operator> <literal type="number" pos:start="15:46" pos:end="15:46">0</literal></expr>)</condition> <block pos:start="15:49" pos:end="83:5">{<block_content pos:start="17:9" pos:end="81:9">

        <decl_stmt pos:start="17:9" pos:end="17:28"><decl pos:start="17:9" pos:end="17:27"><type pos:start="17:9" pos:end="17:12"><name pos:start="17:9" pos:end="17:12">char</name></type> <name pos:start="17:14" pos:end="17:27"><name pos:start="17:14" pos:end="17:21">filename</name><index pos:start="17:22" pos:end="17:27">[<expr pos:start="17:23" pos:end="17:26"><literal type="number" pos:start="17:23" pos:end="17:26">1024</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:23"><decl pos:start="19:9" pos:end="19:22"><type pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:12">char</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:22">src_path</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:17"><decl pos:start="21:9" pos:end="21:13"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">i</name></decl>, <decl pos:start="21:16" pos:end="21:16"><type ref="prev" pos:start="21:9" pos:end="21:11"/><name pos:start="21:16" pos:end="21:16">l</name></decl>;</decl_stmt>



        <comment type="block" pos:start="25:9" pos:end="25:31">/* find a source dir */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:37"><expr pos:start="27:9" pos:end="27:36"><name pos:start="27:9" pos:end="27:16">src_path</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:36"><name pos:start="27:20" pos:end="27:26">strrchr</name><argument_list pos:start="27:27" pos:end="27:36">(<argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">src</name></expr></argument>, <argument pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><literal type="char" pos:start="27:33" pos:end="27:35">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:27"><if pos:start="29:9" pos:end="31:23">if <condition pos:start="29:12" pos:end="29:21">(<expr pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:20">src_path</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:23"><block_content pos:start="31:13" pos:end="31:23">

            <expr_stmt pos:start="31:13" pos:end="31:23"><expr pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:20">src_path</name><operator pos:start="31:21" pos:end="31:22">++</operator></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="33:9" pos:end="35:27">else<block type="pseudo" pos:start="35:13" pos:end="35:27"><block_content pos:start="35:13" pos:end="35:27">

            <expr_stmt pos:start="35:13" pos:end="35:27"><expr pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:20">src_path</name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:26">src</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <comment type="block" pos:start="39:9" pos:end="39:46">/* find a next level down to target */</comment>

        <for pos:start="41:9" pos:end="53:13">for <control pos:start="41:13" pos:end="41:59">(<init pos:start="41:14" pos:end="41:46"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">i</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr><operator pos:start="41:19" pos:end="41:19">,</operator> <expr pos:start="41:21" pos:end="41:45"><name pos:start="41:21" pos:end="41:21">l</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <call pos:start="41:25" pos:end="41:41"><name pos:start="41:25" pos:end="41:30">strlen</name><argument_list pos:start="41:31" pos:end="41:41">(<argument pos:start="41:32" pos:end="41:40"><expr pos:start="41:32" pos:end="41:40"><name pos:start="41:32" pos:end="41:40"><name pos:start="41:32" pos:end="41:34">ref</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:40">path</name></name></expr></argument>)</argument_list></call> <operator pos:start="41:43" pos:end="41:43">-</operator> <literal type="number" pos:start="41:45" pos:end="41:45">1</literal></expr>;</init> <condition pos:start="41:48" pos:end="41:54"><expr pos:start="41:48" pos:end="41:53"><name pos:start="41:48" pos:end="41:48">l</name> <operator pos:start="41:50" pos:end="41:51">&gt;=</operator> <literal type="number" pos:start="41:53" pos:end="41:53">0</literal></expr>;</condition> <incr pos:start="41:56" pos:end="41:58"><expr pos:start="41:56" pos:end="41:58"><name pos:start="41:56" pos:end="41:56">l</name><operator pos:start="41:57" pos:end="41:58">--</operator></expr></incr>)</control><block type="pseudo" pos:start="43:13" pos:end="53:13"><block_content pos:start="43:13" pos:end="53:13">

            <if_stmt pos:start="43:13" pos:end="53:13"><if pos:start="43:13" pos:end="53:13">if <condition pos:start="43:16" pos:end="43:36">(<expr pos:start="43:17" pos:end="43:35"><name pos:start="43:17" pos:end="43:28"><name pos:start="43:17" pos:end="43:19">ref</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:25">path</name><index pos:start="43:26" pos:end="43:28">[<expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">l</name></expr>]</index></name> <operator pos:start="43:30" pos:end="43:31">==</operator> <literal type="char" pos:start="43:33" pos:end="43:35">'/'</literal></expr>)</condition> <block pos:start="43:38" pos:end="53:13">{<block_content pos:start="45:17" pos:end="51:24">

                <if_stmt pos:start="45:17" pos:end="51:24"><if pos:start="45:17" pos:end="47:26">if <condition pos:start="45:20" pos:end="45:42">(<expr pos:start="45:21" pos:end="45:41"><name pos:start="45:21" pos:end="45:21">i</name> <operator pos:start="45:23" pos:end="45:24">==</operator> <name pos:start="45:26" pos:end="45:37"><name pos:start="45:26" pos:end="45:28">ref</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:37">nlvl_to</name></name> <operator pos:start="45:39" pos:end="45:39">-</operator> <literal type="number" pos:start="45:41" pos:end="45:41">1</literal></expr>)</condition><block type="pseudo" pos:start="47:21" pos:end="47:26"><block_content pos:start="47:21" pos:end="47:26">

                    <break pos:start="47:21" pos:end="47:26">break;</break></block_content></block></if>

                <else pos:start="49:17" pos:end="51:24">else<block type="pseudo" pos:start="51:21" pos:end="51:24"><block_content pos:start="51:21" pos:end="51:24">

                    <expr_stmt pos:start="51:21" pos:end="51:24"><expr pos:start="51:21" pos:end="51:23"><name pos:start="51:21" pos:end="51:21">i</name><operator pos:start="51:22" pos:end="51:23">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt></block_content></block></for>



        <comment type="block" pos:start="57:9" pos:end="57:69">/* compose filename if next level down to target was found */</comment>

        <if_stmt pos:start="59:9" pos:end="81:9"><if pos:start="59:9" pos:end="81:9">if <condition pos:start="59:12" pos:end="59:34">(<expr pos:start="59:13" pos:end="59:33"><name pos:start="59:13" pos:end="59:13">i</name> <operator pos:start="59:15" pos:end="59:16">==</operator> <name pos:start="59:18" pos:end="59:29"><name pos:start="59:18" pos:end="59:20">ref</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:29">nlvl_to</name></name> <operator pos:start="59:31" pos:end="59:31">-</operator> <literal type="number" pos:start="59:33" pos:end="59:33">1</literal></expr>)</condition> <block pos:start="59:36" pos:end="81:9">{<block_content pos:start="61:13" pos:end="79:25">

            <expr_stmt pos:start="61:13" pos:end="61:50"><expr pos:start="61:13" pos:end="61:49"><call pos:start="61:13" pos:end="61:49"><name pos:start="61:13" pos:end="61:18">memcpy</name><argument_list pos:start="61:19" pos:end="61:49">(<argument pos:start="61:20" pos:end="61:27"><expr pos:start="61:20" pos:end="61:27"><name pos:start="61:20" pos:end="61:27">filename</name></expr></argument>, <argument pos:start="61:30" pos:end="61:32"><expr pos:start="61:30" pos:end="61:32"><name pos:start="61:30" pos:end="61:32">src</name></expr></argument>, <argument pos:start="61:35" pos:end="61:48"><expr pos:start="61:35" pos:end="61:48"><name pos:start="61:35" pos:end="61:42">src_path</name> <operator pos:start="61:44" pos:end="61:44">-</operator> <name pos:start="61:46" pos:end="61:48">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:41"><expr pos:start="63:13" pos:end="63:40"><name pos:start="63:13" pos:end="63:36"><name pos:start="63:13" pos:end="63:20">filename</name><index pos:start="63:21" pos:end="63:36">[<expr pos:start="63:22" pos:end="63:35"><name pos:start="63:22" pos:end="63:29">src_path</name> <operator pos:start="63:31" pos:end="63:31">-</operator> <name pos:start="63:33" pos:end="63:35">src</name></expr>]</index></name> <operator pos:start="63:38" pos:end="63:38">=</operator> <literal type="number" pos:start="63:40" pos:end="63:40">0</literal></expr>;</expr_stmt>



            <for pos:start="67:13" pos:end="69:50">for <control pos:start="67:17" pos:end="67:48">(<init pos:start="67:18" pos:end="67:23"><expr pos:start="67:18" pos:end="67:22"><name pos:start="67:18" pos:end="67:18">i</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">1</literal></expr>;</init> <condition pos:start="67:25" pos:end="67:43"><expr pos:start="67:25" pos:end="67:42"><name pos:start="67:25" pos:end="67:25">i</name> <operator pos:start="67:27" pos:end="67:27">&lt;</operator> <name pos:start="67:29" pos:end="67:42"><name pos:start="67:29" pos:end="67:31">ref</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:42">nlvl_from</name></name></expr>;</condition> <incr pos:start="67:45" pos:end="67:47"><expr pos:start="67:45" pos:end="67:47"><name pos:start="67:45" pos:end="67:45">i</name><operator pos:start="67:46" pos:end="67:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:17" pos:end="69:50"><block_content pos:start="69:17" pos:end="69:50">

                <expr_stmt pos:start="69:17" pos:end="69:50"><expr pos:start="69:17" pos:end="69:49"><call pos:start="69:17" pos:end="69:49"><name pos:start="69:17" pos:end="69:26">av_strlcat</name><argument_list pos:start="69:27" pos:end="69:49">(<argument pos:start="69:28" pos:end="69:35"><expr pos:start="69:28" pos:end="69:35"><name pos:start="69:28" pos:end="69:35">filename</name></expr></argument>, <argument pos:start="69:38" pos:end="69:42"><expr pos:start="69:38" pos:end="69:42"><literal type="string" pos:start="69:38" pos:end="69:42">"../"</literal></expr></argument>, <argument pos:start="69:45" pos:end="69:48"><expr pos:start="69:45" pos:end="69:48"><literal type="number" pos:start="69:45" pos:end="69:48">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="73:13" pos:end="73:58"><expr pos:start="73:13" pos:end="73:57"><call pos:start="73:13" pos:end="73:57"><name pos:start="73:13" pos:end="73:22">av_strlcat</name><argument_list pos:start="73:23" pos:end="73:57">(<argument pos:start="73:24" pos:end="73:31"><expr pos:start="73:24" pos:end="73:31"><name pos:start="73:24" pos:end="73:31">filename</name></expr></argument>, <argument pos:start="73:34" pos:end="73:50"><expr pos:start="73:34" pos:end="73:50"><name pos:start="73:34" pos:end="73:42"><name pos:start="73:34" pos:end="73:36">ref</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:42">path</name></name> <operator pos:start="73:44" pos:end="73:44">+</operator> <name pos:start="73:46" pos:end="73:46">l</name> <operator pos:start="73:48" pos:end="73:48">+</operator> <literal type="number" pos:start="73:50" pos:end="73:50">1</literal></expr></argument>, <argument pos:start="73:53" pos:end="73:56"><expr pos:start="73:53" pos:end="73:56"><literal type="number" pos:start="73:53" pos:end="73:56">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="77:13" pos:end="79:25"><if pos:start="77:13" pos:end="79:25">if <condition pos:start="77:16" pos:end="77:53">(<expr pos:start="77:17" pos:end="77:52"><operator pos:start="77:17" pos:end="77:17">!</operator><call pos:start="77:18" pos:end="77:52"><name pos:start="77:18" pos:end="77:26">url_fopen</name><argument_list pos:start="77:27" pos:end="77:52">(<argument pos:start="77:28" pos:end="77:29"><expr pos:start="77:28" pos:end="77:29"><name pos:start="77:28" pos:end="77:29">pb</name></expr></argument>, <argument pos:start="77:32" pos:end="77:39"><expr pos:start="77:32" pos:end="77:39"><name pos:start="77:32" pos:end="77:39">filename</name></expr></argument>, <argument pos:start="77:42" pos:end="77:51"><expr pos:start="77:42" pos:end="77:51"><name pos:start="77:42" pos:end="77:51">URL_RDONLY</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:25"><block_content pos:start="79:17" pos:end="79:25">

                <return pos:start="79:17" pos:end="79:25">return <expr pos:start="79:24" pos:end="79:24"><literal type="number" pos:start="79:24" pos:end="79:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="87:5" pos:end="87:27">return <expr pos:start="87:12" pos:end="87:26"><call pos:start="87:12" pos:end="87:26"><name pos:start="87:12" pos:end="87:18">AVERROR</name><argument_list pos:start="87:19" pos:end="87:26">(<argument pos:start="87:20" pos:end="87:25"><expr pos:start="87:20" pos:end="87:25"><name pos:start="87:20" pos:end="87:25">ENOENT</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function><empty_stmt pos:start="89:2" pos:end="89:2">;</empty_stmt>
</unit>
