<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18449.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">rom_load_all</name><parameter_list pos:start="1:17" pos:end="1:22">(<parameter pos:start="1:18" pos:end="1:21"><decl pos:start="1:18" pos:end="1:21"><type pos:start="1:18" pos:end="1:21"><name pos:start="1:18" pos:end="1:21">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:22">target_phys_addr_t</name></type> <name pos:start="5:24" pos:end="5:27">addr</name> <init pos:start="5:29" pos:end="5:31">= <expr pos:start="5:31" pos:end="5:31"><literal type="number" pos:start="5:31" pos:end="5:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">memtype</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:7">Rom</name> <modifier pos:start="9:9" pos:end="9:9">*</modifier></type><name pos:start="9:10" pos:end="9:12">rom</name></decl>;</decl_stmt>



    <macro pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:18">QTAILQ_FOREACH</name><argument_list pos:start="13:19" pos:end="13:36">(<argument pos:start="13:20" pos:end="13:22">rom</argument>, <argument pos:start="13:25" pos:end="13:29">&amp;roms</argument>, <argument pos:start="13:32" pos:end="13:35">next</argument>)</argument_list></macro> <block pos:start="13:38" pos:end="75:5">{<block_content pos:start="15:9" pos:end="73:27">

        <if_stmt pos:start="15:9" pos:end="17:28"><if pos:start="15:9" pos:end="17:28">if <condition pos:start="15:12" pos:end="15:28">(<expr pos:start="15:13" pos:end="15:27"><name pos:start="15:13" pos:end="15:16">addr</name> <operator pos:start="15:18" pos:end="15:18">&lt;</operator> <name pos:start="15:20" pos:end="15:27"><name pos:start="15:20" pos:end="15:22">rom</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:27">min</name></name></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:28"><block_content pos:start="17:13" pos:end="17:28">

            <expr_stmt pos:start="17:13" pos:end="17:28"><expr pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:16">addr</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:27"><name pos:start="17:20" pos:end="17:22">rom</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:27">min</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="19:9" pos:end="63:9"><if pos:start="19:9" pos:end="45:9">if <condition pos:start="19:12" pos:end="19:21">(<expr pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:15">rom</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:20">max</name></name></expr>)</condition> <block pos:start="19:23" pos:end="45:9">{<block_content pos:start="23:13" pos:end="43:13">

            <comment type="block" pos:start="21:13" pos:end="21:36">/* load address range */</comment>

            <if_stmt pos:start="23:13" pos:end="29:13"><if pos:start="23:13" pos:end="29:13">if <condition pos:start="23:16" pos:end="23:27">(<expr pos:start="23:17" pos:end="23:26"><name pos:start="23:17" pos:end="23:26"><name pos:start="23:17" pos:end="23:19">rom</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:26">align</name></name></expr>)</condition> <block pos:start="23:29" pos:end="29:13">{<block_content pos:start="25:17" pos:end="27:40">

                <expr_stmt pos:start="25:17" pos:end="25:39"><expr pos:start="25:17" pos:end="25:38"><name pos:start="25:17" pos:end="25:20">addr</name> <operator pos:start="25:22" pos:end="25:23">+=</operator> <operator pos:start="25:25" pos:end="25:25">(</operator><name pos:start="25:26" pos:end="25:35"><name pos:start="25:26" pos:end="25:28">rom</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:35">align</name></name><operator pos:start="25:36" pos:end="25:36">-</operator><literal type="number" pos:start="25:37" pos:end="25:37">1</literal><operator pos:start="25:38" pos:end="25:38">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="27:17" pos:end="27:40"><expr pos:start="27:17" pos:end="27:39"><name pos:start="27:17" pos:end="27:20">addr</name> <operator pos:start="27:22" pos:end="27:23">&amp;=</operator> <operator pos:start="27:25" pos:end="27:25">~</operator><operator pos:start="27:26" pos:end="27:26">(</operator><name pos:start="27:27" pos:end="27:36"><name pos:start="27:27" pos:end="27:29">rom</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:36">align</name></name><operator pos:start="27:37" pos:end="27:37">-</operator><literal type="number" pos:start="27:38" pos:end="27:38">1</literal><operator pos:start="27:39" pos:end="27:39">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="31:13" pos:end="43:13"><if pos:start="31:13" pos:end="43:13">if <condition pos:start="31:16" pos:end="31:47">(<expr pos:start="31:17" pos:end="31:46"><name pos:start="31:17" pos:end="31:20">addr</name> <operator pos:start="31:22" pos:end="31:22">+</operator> <name pos:start="31:24" pos:end="31:35"><name pos:start="31:24" pos:end="31:26">rom</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:35">romsize</name></name> <operator pos:start="31:37" pos:end="31:37">&gt;</operator> <name pos:start="31:39" pos:end="31:46"><name pos:start="31:39" pos:end="31:41">rom</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:46">max</name></name></expr>)</condition> <block pos:start="31:49" pos:end="43:13">{<block_content pos:start="33:17" pos:end="41:26">

                <expr_stmt pos:start="33:17" pos:end="39:65"><expr pos:start="33:17" pos:end="39:64"><call pos:start="33:17" pos:end="39:64"><name pos:start="33:17" pos:end="33:23">fprintf</name><argument_list pos:start="33:24" pos:end="39:64">(<argument pos:start="33:25" pos:end="33:30"><expr pos:start="33:25" pos:end="33:30"><name pos:start="33:25" pos:end="33:30">stderr</name></expr></argument>, <argument pos:start="33:33" pos:end="37:67"><expr pos:start="33:33" pos:end="37:67"><literal type="string" pos:start="33:33" pos:end="33:62">"rom: out of memory (rom %s, "</literal>

                        <literal type="string" pos:start="35:25" pos:end="35:33">"addr 0x"</literal> <name pos:start="35:35" pos:end="35:48">TARGET_FMT_plx</name>

                        <literal type="string" pos:start="37:25" pos:end="37:46">", size 0x%zx, max 0x"</literal> <name pos:start="37:48" pos:end="37:61">TARGET_FMT_plx</name> <literal type="string" pos:start="37:63" pos:end="37:67">")\n"</literal></expr></argument>,

                        <argument pos:start="39:25" pos:end="39:33"><expr pos:start="39:25" pos:end="39:33"><name pos:start="39:25" pos:end="39:33"><name pos:start="39:25" pos:end="39:27">rom</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:33">name</name></name></expr></argument>, <argument pos:start="39:36" pos:end="39:39"><expr pos:start="39:36" pos:end="39:39"><name pos:start="39:36" pos:end="39:39">addr</name></expr></argument>, <argument pos:start="39:42" pos:end="39:53"><expr pos:start="39:42" pos:end="39:53"><name pos:start="39:42" pos:end="39:53"><name pos:start="39:42" pos:end="39:44">rom</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:53">romsize</name></name></expr></argument>, <argument pos:start="39:56" pos:end="39:63"><expr pos:start="39:56" pos:end="39:63"><name pos:start="39:56" pos:end="39:63"><name pos:start="39:56" pos:end="39:58">rom</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:63">max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="41:17" pos:end="41:26">return <expr pos:start="41:24" pos:end="41:25"><operator pos:start="41:24" pos:end="41:24">-</operator><literal type="number" pos:start="41:25" pos:end="41:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="63:9">else <block pos:start="45:16" pos:end="63:9">{<block_content pos:start="49:13" pos:end="61:13">

            <comment type="block" pos:start="47:13" pos:end="47:41">/* fixed address requested */</comment>

            <if_stmt pos:start="49:13" pos:end="61:13"><if pos:start="49:13" pos:end="61:13">if <condition pos:start="49:16" pos:end="49:33">(<expr pos:start="49:17" pos:end="49:32"><name pos:start="49:17" pos:end="49:20">addr</name> <operator pos:start="49:22" pos:end="49:23">!=</operator> <name pos:start="49:25" pos:end="49:32"><name pos:start="49:25" pos:end="49:27">rom</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:32">min</name></name></expr>)</condition> <block pos:start="49:35" pos:end="61:13">{<block_content pos:start="51:17" pos:end="59:26">

                <expr_stmt pos:start="51:17" pos:end="57:51"><expr pos:start="51:17" pos:end="57:50"><call pos:start="51:17" pos:end="57:50"><name pos:start="51:17" pos:end="51:23">fprintf</name><argument_list pos:start="51:24" pos:end="57:50">(<argument pos:start="51:25" pos:end="51:30"><expr pos:start="51:25" pos:end="51:30"><name pos:start="51:25" pos:end="51:30">stderr</name></expr></argument>, <argument pos:start="51:33" pos:end="55:56"><expr pos:start="51:33" pos:end="55:56"><literal type="string" pos:start="51:33" pos:end="51:65">"rom: requested regions overlap "</literal>

                        <literal type="string" pos:start="53:25" pos:end="53:42">"(rom %s. free=0x"</literal> <name pos:start="53:44" pos:end="53:57">TARGET_FMT_plx</name>

                        <literal type="string" pos:start="55:25" pos:end="55:35">", addr=0x"</literal> <name pos:start="55:37" pos:end="55:50">TARGET_FMT_plx</name> <literal type="string" pos:start="55:52" pos:end="55:56">")\n"</literal></expr></argument>,

                        <argument pos:start="57:25" pos:end="57:33"><expr pos:start="57:25" pos:end="57:33"><name pos:start="57:25" pos:end="57:33"><name pos:start="57:25" pos:end="57:27">rom</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:33">name</name></name></expr></argument>, <argument pos:start="57:36" pos:end="57:39"><expr pos:start="57:36" pos:end="57:39"><name pos:start="57:36" pos:end="57:39">addr</name></expr></argument>, <argument pos:start="57:42" pos:end="57:49"><expr pos:start="57:42" pos:end="57:49"><name pos:start="57:42" pos:end="57:49"><name pos:start="57:42" pos:end="57:44">rom</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:49">min</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="59:17" pos:end="59:26">return <expr pos:start="59:24" pos:end="59:25"><operator pos:start="59:24" pos:end="59:24">-</operator><literal type="number" pos:start="59:25" pos:end="59:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:25"><expr pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:11">rom</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:17">addr</name></name> <operator pos:start="65:19" pos:end="65:19">=</operator> <name pos:start="65:21" pos:end="65:24">addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:29"><expr pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:12">addr</name> <operator pos:start="67:14" pos:end="67:15">+=</operator> <name pos:start="67:17" pos:end="67:28"><name pos:start="67:17" pos:end="67:19">rom</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:28">romsize</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:78"><expr pos:start="69:9" pos:end="69:77"><name pos:start="69:9" pos:end="69:15">memtype</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:55"><name pos:start="69:19" pos:end="69:44">cpu_get_physical_page_desc</name><argument_list pos:start="69:45" pos:end="69:55">(<argument pos:start="69:46" pos:end="69:54"><expr pos:start="69:46" pos:end="69:54"><name pos:start="69:46" pos:end="69:54"><name pos:start="69:46" pos:end="69:48">rom</name><operator pos:start="69:49" pos:end="69:50">-&gt;</operator><name pos:start="69:51" pos:end="69:54">addr</name></name></expr></argument>)</argument_list></call> <operator pos:start="69:57" pos:end="69:57">&amp;</operator> <operator pos:start="69:59" pos:end="69:59">(</operator><literal type="number" pos:start="69:60" pos:end="69:60">3</literal> <operator pos:start="69:62" pos:end="69:63">&lt;&lt;</operator> <name pos:start="69:65" pos:end="69:76">IO_MEM_SHIFT</name><operator pos:start="69:77" pos:end="69:77">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:27"><if pos:start="71:9" pos:end="73:27">if <condition pos:start="71:12" pos:end="71:34">(<expr pos:start="71:13" pos:end="71:33"><name pos:start="71:13" pos:end="71:19">memtype</name> <operator pos:start="71:21" pos:end="71:22">==</operator> <name pos:start="71:24" pos:end="71:33">IO_MEM_ROM</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:27"><block_content pos:start="73:13" pos:end="73:27">

            <expr_stmt pos:start="73:13" pos:end="73:27"><expr pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:22"><name pos:start="73:13" pos:end="73:15">rom</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:22">isrom</name></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <literal type="number" pos:start="73:26" pos:end="73:26">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="77:5" pos:end="77:41"><expr pos:start="77:5" pos:end="77:40"><call pos:start="77:5" pos:end="77:40"><name pos:start="77:5" pos:end="77:23">qemu_register_reset</name><argument_list pos:start="77:24" pos:end="77:40">(<argument pos:start="77:25" pos:end="77:33"><expr pos:start="77:25" pos:end="77:33"><name pos:start="77:25" pos:end="77:33">rom_reset</name></expr></argument>, <argument pos:start="77:36" pos:end="77:39"><expr pos:start="77:36" pos:end="77:39"><name pos:start="77:36" pos:end="77:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:20"><expr pos:start="79:5" pos:end="79:19"><name pos:start="79:5" pos:end="79:15">roms_loaded</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <literal type="number" pos:start="79:19" pos:end="79:19">1</literal></expr>;</expr_stmt>

    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
