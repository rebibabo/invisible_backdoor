<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13940.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">unsigned</name> <name pos:start="1:17" pos:end="1:19">int</name></type> <name pos:start="1:21" pos:end="1:38">virtqueue_get_head</name><parameter_list pos:start="1:39" pos:end="1:71">(<parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:48">VirtQueue</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">vq</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:70"><decl pos:start="1:55" pos:end="1:70"><type pos:start="1:55" pos:end="1:70"><name pos:start="1:55" pos:end="1:62">unsigned</name> <name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:70">idx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:16">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:21">head</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="11:31">/* Grab the next descriptor number they're advertising, and increment

     * the index we've seen. */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:53"><expr pos:start="13:5" pos:end="13:52"><name pos:start="13:5" pos:end="13:8">head</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:52"><name pos:start="13:12" pos:end="13:27">vring_avail_ring</name><argument_list pos:start="13:28" pos:end="13:52">(<argument pos:start="13:29" pos:end="13:30"><expr pos:start="13:29" pos:end="13:30"><name pos:start="13:29" pos:end="13:30">vq</name></expr></argument>, <argument pos:start="13:33" pos:end="13:51"><expr pos:start="13:33" pos:end="13:51"><name pos:start="13:33" pos:end="13:35">idx</name> <operator pos:start="13:37" pos:end="13:37">%</operator> <name pos:start="13:39" pos:end="13:51"><name pos:start="13:39" pos:end="13:40">vq</name><operator pos:start="13:41" pos:end="13:42">-&gt;</operator><name pos:start="13:43" pos:end="13:47">vring</name><operator pos:start="13:48" pos:end="13:48">.</operator><name pos:start="13:49" pos:end="13:51">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:59">/* If their number is silly, that's a fatal mistake. */</comment>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:30">(<expr pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:12">head</name> <operator pos:start="19:14" pos:end="19:15">&gt;=</operator> <name pos:start="19:17" pos:end="19:29"><name pos:start="19:17" pos:end="19:18">vq</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:25">vring</name><operator pos:start="19:26" pos:end="19:26">.</operator><name pos:start="19:27" pos:end="19:29">num</name></name></expr>)</condition> <block pos:start="19:32" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:16">

        <expr_stmt pos:start="21:9" pos:end="21:63"><expr pos:start="21:9" pos:end="21:62"><call pos:start="21:9" pos:end="21:62"><name pos:start="21:9" pos:end="21:20">error_report</name><argument_list pos:start="21:21" pos:end="21:62">(<argument pos:start="21:22" pos:end="21:55"><expr pos:start="21:22" pos:end="21:55"><literal type="string" pos:start="21:22" pos:end="21:55">"Guest says index %u is available"</literal></expr></argument>, <argument pos:start="21:58" pos:end="21:61"><expr pos:start="21:58" pos:end="21:61"><name pos:start="21:58" pos:end="21:61">head</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:16"><expr pos:start="23:9" pos:end="23:15"><call pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:12">exit</name><argument_list pos:start="23:13" pos:end="23:15">(<argument pos:start="23:14" pos:end="23:14"><expr pos:start="23:14" pos:end="23:14"><literal type="number" pos:start="23:14" pos:end="23:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="29:5" pos:end="29:16">return <expr pos:start="29:12" pos:end="29:15"><name pos:start="29:12" pos:end="29:15">head</name></expr>;</return>

</block_content>}</block></function>
</unit>
