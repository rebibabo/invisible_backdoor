<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22303.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:28">array_roll</name><parameter_list pos:start="1:29" pos:end="1:82">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:36">array_t</name><modifier pos:start="1:37" pos:end="1:37">*</modifier></type> <name pos:start="1:39" pos:end="1:43">array</name></decl></parameter>,<parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:56">index_to</name></decl></parameter>,<parameter pos:start="1:58" pos:end="1:71"><decl pos:start="1:58" pos:end="1:71"><type pos:start="1:58" pos:end="1:71"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:71">index_from</name></decl></parameter>,<parameter pos:start="1:73" pos:end="1:81"><decl pos:start="1:73" pos:end="1:81"><type pos:start="1:73" pos:end="1:81"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:81">count</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:8">char</name><modifier pos:start="5:9" pos:end="5:9">*</modifier></type> <name pos:start="5:11" pos:end="5:13">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:8">char</name><modifier pos:start="7:9" pos:end="7:9">*</modifier></type> <name pos:start="7:11" pos:end="7:14">from</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:8">char</name><modifier pos:start="9:9" pos:end="9:9">*</modifier></type> <name pos:start="9:11" pos:end="9:12">to</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:11"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">is</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:18"><if pos:start="15:5" pos:end="21:18">if<condition pos:start="15:7" pos:end="19:52">(<expr pos:start="15:8" pos:end="19:51"><operator pos:start="15:8" pos:end="15:8">!</operator><name pos:start="15:9" pos:end="15:13">array</name> <operator pos:start="15:15" pos:end="15:16">||</operator>

	    <name pos:start="17:13" pos:end="17:20">index_to</name><operator pos:start="17:21" pos:end="17:21">&lt;</operator><literal type="number" pos:start="17:22" pos:end="17:22">0</literal> <operator pos:start="17:24" pos:end="17:25">||</operator> <name pos:start="17:27" pos:end="17:34">index_to</name><operator pos:start="17:35" pos:end="17:36">&gt;=</operator><name pos:start="17:37" pos:end="17:47"><name pos:start="17:37" pos:end="17:41">array</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:47">next</name></name> <operator pos:start="17:49" pos:end="17:50">||</operator>

	    <name pos:start="19:13" pos:end="19:22">index_from</name><operator pos:start="19:23" pos:end="19:23">&lt;</operator><literal type="number" pos:start="19:24" pos:end="19:24">0</literal> <operator pos:start="19:26" pos:end="19:27">||</operator> <name pos:start="19:29" pos:end="19:38">index_from</name><operator pos:start="19:39" pos:end="19:40">&gt;=</operator><name pos:start="19:41" pos:end="19:51"><name pos:start="19:41" pos:end="19:45">array</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:51">next</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

	<return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if<condition pos:start="25:7" pos:end="25:28">(<expr pos:start="25:8" pos:end="25:27"><name pos:start="25:8" pos:end="25:15">index_to</name><operator pos:start="25:16" pos:end="25:17">==</operator><name pos:start="25:18" pos:end="25:27">index_from</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

	<return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:6">is</name><operator pos:start="31:7" pos:end="31:7">=</operator><name pos:start="31:8" pos:end="31:23"><name pos:start="31:8" pos:end="31:12">array</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:23">item_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:8">from</name><operator pos:start="33:9" pos:end="33:9">=</operator><name pos:start="33:10" pos:end="33:23"><name pos:start="33:10" pos:end="33:14">array</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:23">pointer</name></name><operator pos:start="33:24" pos:end="33:24">+</operator><name pos:start="33:25" pos:end="33:34">index_from</name><operator pos:start="33:35" pos:end="33:35">*</operator><name pos:start="33:36" pos:end="33:37">is</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:34"><expr pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:6">to</name><operator pos:start="35:7" pos:end="35:7">=</operator><name pos:start="35:8" pos:end="35:21"><name pos:start="35:8" pos:end="35:12">array</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:21">pointer</name></name><operator pos:start="35:22" pos:end="35:22">+</operator><name pos:start="35:23" pos:end="35:30">index_to</name><operator pos:start="35:31" pos:end="35:31">*</operator><name pos:start="35:32" pos:end="35:33">is</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:7">buf</name><operator pos:start="37:8" pos:end="37:8">=</operator><call pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:16">g_malloc</name><argument_list pos:start="37:17" pos:end="37:26">(<argument pos:start="37:18" pos:end="37:25"><expr pos:start="37:18" pos:end="37:25"><name pos:start="37:18" pos:end="37:19">is</name><operator pos:start="37:20" pos:end="37:20">*</operator><name pos:start="37:21" pos:end="37:25">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:30"><expr pos:start="39:5" pos:end="39:29"><call pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:10">memcpy</name><argument_list pos:start="39:11" pos:end="39:29">(<argument pos:start="39:12" pos:end="39:14"><expr pos:start="39:12" pos:end="39:14"><name pos:start="39:12" pos:end="39:14">buf</name></expr></argument>,<argument pos:start="39:16" pos:end="39:19"><expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">from</name></expr></argument>,<argument pos:start="39:21" pos:end="39:28"><expr pos:start="39:21" pos:end="39:28"><name pos:start="39:21" pos:end="39:22">is</name><operator pos:start="39:23" pos:end="39:23">*</operator><name pos:start="39:24" pos:end="39:28">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="49:44"><if pos:start="43:5" pos:end="45:40">if<condition pos:start="43:7" pos:end="43:27">(<expr pos:start="43:8" pos:end="43:26"><name pos:start="43:8" pos:end="43:15">index_to</name><operator pos:start="43:16" pos:end="43:16">&lt;</operator><name pos:start="43:17" pos:end="43:26">index_from</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:40"><block_content pos:start="45:9" pos:end="45:40">

	<expr_stmt pos:start="45:9" pos:end="45:40"><expr pos:start="45:9" pos:end="45:39"><call pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:15">memmove</name><argument_list pos:start="45:16" pos:end="45:39">(<argument pos:start="45:17" pos:end="45:27"><expr pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:18">to</name><operator pos:start="45:19" pos:end="45:19">+</operator><name pos:start="45:20" pos:end="45:21">is</name><operator pos:start="45:22" pos:end="45:22">*</operator><name pos:start="45:23" pos:end="45:27">count</name></expr></argument>,<argument pos:start="45:29" pos:end="45:30"><expr pos:start="45:29" pos:end="45:30"><name pos:start="45:29" pos:end="45:30">to</name></expr></argument>,<argument pos:start="45:32" pos:end="45:38"><expr pos:start="45:32" pos:end="45:38"><name pos:start="45:32" pos:end="45:35">from</name><operator pos:start="45:36" pos:end="45:36">-</operator><name pos:start="45:37" pos:end="45:38">to</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="47:5" pos:end="49:44">else<block type="pseudo" pos:start="49:9" pos:end="49:44"><block_content pos:start="49:9" pos:end="49:44">

	<expr_stmt pos:start="49:9" pos:end="49:44"><expr pos:start="49:9" pos:end="49:43"><call pos:start="49:9" pos:end="49:43"><name pos:start="49:9" pos:end="49:15">memmove</name><argument_list pos:start="49:16" pos:end="49:43">(<argument pos:start="49:17" pos:end="49:20"><expr pos:start="49:17" pos:end="49:20"><name pos:start="49:17" pos:end="49:20">from</name></expr></argument>,<argument pos:start="49:22" pos:end="49:34"><expr pos:start="49:22" pos:end="49:34"><name pos:start="49:22" pos:end="49:25">from</name><operator pos:start="49:26" pos:end="49:26">+</operator><name pos:start="49:27" pos:end="49:28">is</name><operator pos:start="49:29" pos:end="49:29">*</operator><name pos:start="49:30" pos:end="49:34">count</name></expr></argument>,<argument pos:start="49:36" pos:end="49:42"><expr pos:start="49:36" pos:end="49:42"><name pos:start="49:36" pos:end="49:37">to</name><operator pos:start="49:38" pos:end="49:38">-</operator><name pos:start="49:39" pos:end="49:42">from</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:28"><expr pos:start="53:5" pos:end="53:27"><call pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:10">memcpy</name><argument_list pos:start="53:11" pos:end="53:27">(<argument pos:start="53:12" pos:end="53:13"><expr pos:start="53:12" pos:end="53:13"><name pos:start="53:12" pos:end="53:13">to</name></expr></argument>,<argument pos:start="53:15" pos:end="53:17"><expr pos:start="53:15" pos:end="53:17"><name pos:start="53:15" pos:end="53:17">buf</name></expr></argument>,<argument pos:start="53:19" pos:end="53:26"><expr pos:start="53:19" pos:end="53:26"><name pos:start="53:19" pos:end="53:20">is</name><operator pos:start="53:21" pos:end="53:21">*</operator><name pos:start="53:22" pos:end="53:26">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:14"><expr pos:start="57:5" pos:end="57:13"><call pos:start="57:5" pos:end="57:13"><name pos:start="57:5" pos:end="57:8">free</name><argument_list pos:start="57:9" pos:end="57:13">(<argument pos:start="57:10" pos:end="57:12"><expr pos:start="57:10" pos:end="57:12"><name pos:start="57:10" pos:end="57:12">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
