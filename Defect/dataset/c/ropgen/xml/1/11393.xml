<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11393.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint64_t</name></type> <name pos:start="1:10" pos:end="1:42">hbitmap_serialization_granularity</name><parameter_list pos:start="1:43" pos:end="1:61">(<parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:58"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:56">HBitmap</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">hb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="9:5" pos:end="17:43">

    <comment type="block" pos:start="5:5" pos:end="7:42">/* Must hold true so that the shift below is defined

     * (ld(64) == 6, i.e. 1 &lt;&lt; 6 == 64) */</comment>

    <expr_stmt pos:start="9:5" pos:end="9:37"><expr pos:start="9:5" pos:end="9:36"><call pos:start="9:5" pos:end="9:36"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:36">(<argument pos:start="9:12" pos:end="9:35"><expr pos:start="9:12" pos:end="9:35"><name pos:start="9:12" pos:end="9:26"><name pos:start="9:12" pos:end="9:13">hb</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:26">granularity</name></name> <operator pos:start="9:28" pos:end="9:28">&lt;</operator> <literal type="number" pos:start="9:30" pos:end="9:33">64</literal> <operator pos:start="9:33" pos:end="9:33">-</operator> <literal type="number" pos:start="9:35" pos:end="9:35">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="13:5" pos:end="15:16">/* Require at least 64 bit granularity to be safe on both 64 bit and 32 bit

     * hosts. */</comment>

    <return pos:start="17:5" pos:end="17:43">return <expr pos:start="17:12" pos:end="17:42"><call pos:start="17:12" pos:end="17:23"><name pos:start="17:12" pos:end="17:19">UINT64_C</name><argument_list pos:start="17:20" pos:end="17:23">(<argument pos:start="17:21" pos:end="17:22"><expr pos:start="17:21" pos:end="17:22"><literal type="number" pos:start="17:21" pos:end="17:22">64</literal></expr></argument>)</argument_list></call> <operator pos:start="17:25" pos:end="17:26">&lt;&lt;</operator> <name pos:start="17:28" pos:end="17:42"><name pos:start="17:28" pos:end="17:29">hb</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:42">granularity</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
