<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16976.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">sample_dump</name><parameter_list pos:start="1:17" pos:end="1:45">(<parameter pos:start="1:18" pos:end="1:25"><decl pos:start="1:18" pos:end="1:25"><type pos:start="1:18" pos:end="1:25"><name pos:start="1:18" pos:end="1:20">int</name></type> <name pos:start="1:22" pos:end="1:25">fnum</name></decl></parameter>, <parameter pos:start="1:28" pos:end="1:37"><decl pos:start="1:28" pos:end="1:37"><type pos:start="1:28" pos:end="1:37"><name pos:start="1:28" pos:end="1:32">INT32</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">tab</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:44"><decl pos:start="1:40" pos:end="1:44"><type pos:start="1:40" pos:end="1:44"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:44">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:41">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:17"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:15">FILE</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:26"><name pos:start="5:18" pos:end="5:22">files</name><index pos:start="5:23" pos:end="5:26">[<expr pos:start="5:24" pos:end="5:25"><literal type="number" pos:start="5:24" pos:end="5:25">16</literal></expr>]</index></name></decl>, <decl pos:start="5:29" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:17"><modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:30">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:17"><name pos:start="7:10" pos:end="7:12">buf</name><index pos:start="7:13" pos:end="7:17">[<expr pos:start="7:14" pos:end="7:16"><literal type="number" pos:start="7:14" pos:end="7:16">512</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:20"><expr pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:5">f</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <name pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:13">files</name><index pos:start="11:14" pos:end="11:19">[<expr pos:start="11:15" pos:end="11:18"><name pos:start="11:15" pos:end="11:18">fnum</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="13:11">(<expr pos:start="13:9" pos:end="13:10"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:10">f</name></expr>)</condition> <block pos:start="13:13" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:24">

        <expr_stmt pos:start="15:9" pos:end="15:45"><expr pos:start="15:9" pos:end="15:44"><call pos:start="15:9" pos:end="15:44"><name pos:start="15:9" pos:end="15:15">sprintf</name><argument_list pos:start="15:16" pos:end="15:44">(<argument pos:start="15:17" pos:end="15:19"><expr pos:start="15:17" pos:end="15:19"><name pos:start="15:17" pos:end="15:19">buf</name></expr></argument>, <argument pos:start="15:22" pos:end="15:37"><expr pos:start="15:22" pos:end="15:37"><literal type="string" pos:start="15:22" pos:end="15:37">"/tmp/out%d.pcm"</literal></expr></argument>, <argument pos:start="15:40" pos:end="15:43"><expr pos:start="15:40" pos:end="15:43"><name pos:start="15:40" pos:end="15:43">fnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:28"><expr pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:9">f</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:17">fopen</name><argument_list pos:start="17:18" pos:end="17:27">(<argument pos:start="17:19" pos:end="17:21"><expr pos:start="17:19" pos:end="17:21"><name pos:start="17:19" pos:end="17:21">buf</name></expr></argument>, <argument pos:start="17:24" pos:end="17:26"><expr pos:start="17:24" pos:end="17:26"><literal type="string" pos:start="17:24" pos:end="17:26">"w"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="21:19"><if pos:start="19:9" pos:end="21:19">if <condition pos:start="19:12" pos:end="19:15">(<expr pos:start="19:13" pos:end="19:14"><operator pos:start="19:13" pos:end="19:13">!</operator><name pos:start="19:14" pos:end="19:14">f</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:19"><block_content pos:start="21:13" pos:end="21:19">

            <return pos:start="21:13" pos:end="21:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:24"><expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:13">files</name><index pos:start="23:14" pos:end="23:19">[<expr pos:start="23:15" pos:end="23:18"><name pos:start="23:15" pos:end="23:18">fnum</name></expr>]</index></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:23">f</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="29:5" pos:end="49:5"><if pos:start="29:5" pos:end="49:5">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:12">fnum</name> <operator pos:start="29:14" pos:end="29:15">==</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>)</condition> <block pos:start="29:20" pos:end="49:5">{<block_content pos:start="31:9" pos:end="47:17">

        <decl_stmt pos:start="31:9" pos:end="31:14"><decl pos:start="31:9" pos:end="31:13"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:27"><decl pos:start="33:9" pos:end="33:26"><type pos:start="33:9" pos:end="33:18"><specifier pos:start="33:9" pos:end="33:14">static</specifier> <name pos:start="33:16" pos:end="33:18">int</name></type> <name pos:start="33:20" pos:end="33:22">pos</name> <init pos:start="33:24" pos:end="33:26">= <expr pos:start="33:26" pos:end="33:26"><literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:32"><expr pos:start="35:9" pos:end="35:31"><call pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:14">printf</name><argument_list pos:start="35:15" pos:end="35:31">(<argument pos:start="35:16" pos:end="35:25"><expr pos:start="35:16" pos:end="35:25"><literal type="string" pos:start="35:16" pos:end="35:25">"pos=%d\n"</literal></expr></argument>, <argument pos:start="35:28" pos:end="35:30"><expr pos:start="35:28" pos:end="35:30"><name pos:start="35:28" pos:end="35:30">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="37:9" pos:end="45:9">for<control pos:start="37:12" pos:end="37:24">(<init pos:start="37:13" pos:end="37:16"><expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:13">i</name><operator pos:start="37:14" pos:end="37:14">=</operator><literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>;</init><condition pos:start="37:17" pos:end="37:20"><expr pos:start="37:17" pos:end="37:19"><name pos:start="37:17" pos:end="37:17">i</name><operator pos:start="37:18" pos:end="37:18">&lt;</operator><name pos:start="37:19" pos:end="37:19">n</name></expr>;</condition><incr pos:start="37:21" pos:end="37:23"><expr pos:start="37:21" pos:end="37:23"><name pos:start="37:21" pos:end="37:21">i</name><operator pos:start="37:22" pos:end="37:23">++</operator></expr></incr>)</control> <block pos:start="37:26" pos:end="45:9">{<block_content pos:start="39:13" pos:end="43:29">

            <expr_stmt pos:start="39:13" pos:end="39:52"><expr pos:start="39:13" pos:end="39:51"><call pos:start="39:13" pos:end="39:51"><name pos:start="39:13" pos:end="39:18">printf</name><argument_list pos:start="39:19" pos:end="39:51">(<argument pos:start="39:20" pos:end="39:24"><expr pos:start="39:20" pos:end="39:24"><literal type="string" pos:start="39:20" pos:end="39:24">" %f"</literal></expr></argument>, <argument pos:start="39:27" pos:end="39:50"><expr pos:start="39:27" pos:end="39:50"><operator pos:start="39:27" pos:end="39:27">(</operator><name pos:start="39:28" pos:end="39:33">double</name><operator pos:start="39:34" pos:end="39:34">)</operator><name pos:start="39:35" pos:end="39:40"><name pos:start="39:35" pos:end="39:37">tab</name><index pos:start="39:38" pos:end="39:40">[<expr pos:start="39:39" pos:end="39:39"><name pos:start="39:39" pos:end="39:39">i</name></expr>]</index></name> <operator pos:start="39:42" pos:end="39:42">/</operator> <literal type="number" pos:start="39:44" pos:end="39:50">32768.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="43:29"><if pos:start="41:13" pos:end="43:29">if <condition pos:start="41:16" pos:end="41:31">(<expr pos:start="41:17" pos:end="41:30"><operator pos:start="41:17" pos:end="41:17">(</operator><name pos:start="41:18" pos:end="41:18">i</name> <operator pos:start="41:20" pos:end="41:20">%</operator> <literal type="number" pos:start="41:22" pos:end="41:23">18</literal><operator pos:start="41:24" pos:end="41:24">)</operator> <operator pos:start="41:26" pos:end="41:27">==</operator> <literal type="number" pos:start="41:29" pos:end="41:30">17</literal></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:29"><block_content pos:start="43:17" pos:end="43:29">

                <expr_stmt pos:start="43:17" pos:end="43:29"><expr pos:start="43:17" pos:end="43:28"><call pos:start="43:17" pos:end="43:28"><name pos:start="43:17" pos:end="43:22">printf</name><argument_list pos:start="43:23" pos:end="43:28">(<argument pos:start="43:24" pos:end="43:27"><expr pos:start="43:24" pos:end="43:27"><literal type="string" pos:start="43:24" pos:end="43:27">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="47:9" pos:end="47:17"><expr pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:11">pos</name> <operator pos:start="47:13" pos:end="47:14">+=</operator> <name pos:start="47:16" pos:end="47:16">n</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:41"><expr pos:start="53:5" pos:end="53:40"><call pos:start="53:5" pos:end="53:40"><name pos:start="53:5" pos:end="53:10">fwrite</name><argument_list pos:start="53:11" pos:end="53:40">(<argument pos:start="53:12" pos:end="53:14"><expr pos:start="53:12" pos:end="53:14"><name pos:start="53:12" pos:end="53:14">tab</name></expr></argument>, <argument pos:start="53:17" pos:end="53:17"><expr pos:start="53:17" pos:end="53:17"><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr></argument>, <argument pos:start="53:20" pos:end="53:36"><expr pos:start="53:20" pos:end="53:36"><name pos:start="53:20" pos:end="53:20">n</name> <operator pos:start="53:22" pos:end="53:22">*</operator> <sizeof pos:start="53:24" pos:end="53:36">sizeof<argument_list pos:start="53:30" pos:end="53:36">(<argument pos:start="53:31" pos:end="53:35"><expr pos:start="53:31" pos:end="53:35"><name pos:start="53:31" pos:end="53:35">INT32</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="53:39" pos:end="53:39"><expr pos:start="53:39" pos:end="53:39"><name pos:start="53:39" pos:end="53:39">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
