<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/518.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">fdctrl_connect_drives</name><parameter_list pos:start="1:33" pos:end="1:48">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:41"><name pos:start="1:34" pos:end="1:39">FDCtrl</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">fdctrl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">FDrive</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:17">drive</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="51:5">for <control pos:start="11:9" pos:end="11:32">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:27"><expr pos:start="11:17" pos:end="11:26"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:26">MAX_FD</name></expr>;</condition> <incr pos:start="11:29" pos:end="11:31"><expr pos:start="11:29" pos:end="11:31"><name pos:start="11:29" pos:end="11:29">i</name><operator pos:start="11:30" pos:end="11:31">++</operator></expr></incr>)</control> <block pos:start="11:34" pos:end="51:5">{<block_content pos:start="13:9" pos:end="49:9">

        <expr_stmt pos:start="13:9" pos:end="13:35"><expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:13">drive</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <operator pos:start="13:17" pos:end="13:17">&amp;</operator><name pos:start="13:18" pos:end="13:34"><name pos:start="13:18" pos:end="13:23">fdctrl</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:31">drives</name><index pos:start="13:32" pos:end="13:34">[<expr pos:start="13:33" pos:end="13:33"><name pos:start="13:33" pos:end="13:33">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:31"><expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:13">drive</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:21">fdctrl</name></name> <operator pos:start="15:23" pos:end="15:23">=</operator> <name pos:start="15:25" pos:end="15:30">fdctrl</name></expr>;</expr_stmt>



        <if_stmt pos:start="19:9" pos:end="37:9"><if pos:start="19:9" pos:end="37:9">if <condition pos:start="19:12" pos:end="19:22">(<expr pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:17">drive</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:21">bs</name></name></expr>)</condition> <block pos:start="19:24" pos:end="37:9">{<block_content pos:start="21:13" pos:end="35:13">

            <if_stmt pos:start="21:13" pos:end="27:13"><if pos:start="21:13" pos:end="27:13">if <condition pos:start="21:16" pos:end="21:73">(<expr pos:start="21:17" pos:end="21:72"><call pos:start="21:17" pos:end="21:47"><name pos:start="21:17" pos:end="21:33">bdrv_get_on_error</name><argument_list pos:start="21:34" pos:end="21:47">(<argument pos:start="21:35" pos:end="21:43"><expr pos:start="21:35" pos:end="21:43"><name pos:start="21:35" pos:end="21:43"><name pos:start="21:35" pos:end="21:39">drive</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:43">bs</name></name></expr></argument>, <argument pos:start="21:46" pos:end="21:46"><expr pos:start="21:46" pos:end="21:46"><literal type="number" pos:start="21:46" pos:end="21:46">0</literal></expr></argument>)</argument_list></call> <operator pos:start="21:49" pos:end="21:50">!=</operator> <name pos:start="21:52" pos:end="21:72">BLOCK_ERR_STOP_ENOSPC</name></expr>)</condition> <block pos:start="21:75" pos:end="27:13">{<block_content pos:start="23:17" pos:end="25:26">

                <expr_stmt pos:start="23:17" pos:end="23:72"><expr pos:start="23:17" pos:end="23:71"><call pos:start="23:17" pos:end="23:71"><name pos:start="23:17" pos:end="23:28">error_report</name><argument_list pos:start="23:29" pos:end="23:71">(<argument pos:start="23:30" pos:end="23:70"><expr pos:start="23:30" pos:end="23:70"><literal type="string" pos:start="23:30" pos:end="23:70">"fdc doesn't support drive option werror"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="25:17" pos:end="25:26">return <expr pos:start="25:24" pos:end="25:25"><operator pos:start="25:24" pos:end="25:24">-</operator><literal type="number" pos:start="25:25" pos:end="25:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="29:13" pos:end="35:13"><if pos:start="29:13" pos:end="35:13">if <condition pos:start="29:16" pos:end="29:68">(<expr pos:start="29:17" pos:end="29:67"><call pos:start="29:17" pos:end="29:47"><name pos:start="29:17" pos:end="29:33">bdrv_get_on_error</name><argument_list pos:start="29:34" pos:end="29:47">(<argument pos:start="29:35" pos:end="29:43"><expr pos:start="29:35" pos:end="29:43"><name pos:start="29:35" pos:end="29:43"><name pos:start="29:35" pos:end="29:39">drive</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:43">bs</name></name></expr></argument>, <argument pos:start="29:46" pos:end="29:46"><expr pos:start="29:46" pos:end="29:46"><literal type="number" pos:start="29:46" pos:end="29:46">1</literal></expr></argument>)</argument_list></call> <operator pos:start="29:49" pos:end="29:50">!=</operator> <name pos:start="29:52" pos:end="29:67">BLOCK_ERR_REPORT</name></expr>)</condition> <block pos:start="29:70" pos:end="35:13">{<block_content pos:start="31:17" pos:end="33:26">

                <expr_stmt pos:start="31:17" pos:end="31:72"><expr pos:start="31:17" pos:end="31:71"><call pos:start="31:17" pos:end="31:71"><name pos:start="31:17" pos:end="31:28">error_report</name><argument_list pos:start="31:29" pos:end="31:71">(<argument pos:start="31:30" pos:end="31:70"><expr pos:start="31:30" pos:end="31:70"><literal type="string" pos:start="31:30" pos:end="31:70">"fdc doesn't support drive option rerror"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="33:17" pos:end="33:26">return <expr pos:start="33:24" pos:end="33:25"><operator pos:start="33:24" pos:end="33:24">-</operator><literal type="number" pos:start="33:25" pos:end="33:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:23"><expr pos:start="41:9" pos:end="41:22"><call pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:15">fd_init</name><argument_list pos:start="41:16" pos:end="41:22">(<argument pos:start="41:17" pos:end="41:21"><expr pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:21">drive</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:29"><expr pos:start="43:9" pos:end="43:28"><call pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:21">fd_revalidate</name><argument_list pos:start="43:22" pos:end="43:28">(<argument pos:start="43:23" pos:end="43:27"><expr pos:start="43:23" pos:end="43:27"><name pos:start="43:23" pos:end="43:27">drive</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:22">(<expr pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:17">drive</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:21">bs</name></name></expr>)</condition> <block pos:start="45:24" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:66">

            <expr_stmt pos:start="47:13" pos:end="47:66"><expr pos:start="47:13" pos:end="47:65"><call pos:start="47:13" pos:end="47:65"><name pos:start="47:13" pos:end="47:28">bdrv_set_dev_ops</name><argument_list pos:start="47:29" pos:end="47:65">(<argument pos:start="47:30" pos:end="47:38"><expr pos:start="47:30" pos:end="47:38"><name pos:start="47:30" pos:end="47:38"><name pos:start="47:30" pos:end="47:34">drive</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:38">bs</name></name></expr></argument>, <argument pos:start="47:41" pos:end="47:57"><expr pos:start="47:41" pos:end="47:57"><operator pos:start="47:41" pos:end="47:41">&amp;</operator><name pos:start="47:42" pos:end="47:57">fdctrl_block_ops</name></expr></argument>, <argument pos:start="47:60" pos:end="47:64"><expr pos:start="47:60" pos:end="47:64"><name pos:start="47:60" pos:end="47:64">drive</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
