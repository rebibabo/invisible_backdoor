<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9471.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">ehci_execute</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:33">EHCIQueue</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">q</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:15">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">USBPort</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">port</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">USBDevice</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">endp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">devadr</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:43">( <expr pos:start="19:10" pos:end="19:42"><operator pos:start="19:10" pos:end="19:10">!</operator><operator pos:start="19:11" pos:end="19:11">(</operator><name pos:start="19:12" pos:end="19:22"><name pos:start="19:12" pos:end="19:12">q</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:16">qh</name><operator pos:start="19:17" pos:end="19:17">.</operator><name pos:start="19:18" pos:end="19:22">token</name></name> <operator pos:start="19:24" pos:end="19:24">&amp;</operator> <name pos:start="19:26" pos:end="19:41">QTD_TOKEN_ACTIVE</name><operator pos:start="19:42" pos:end="19:42">)</operator></expr>)</condition> <block pos:start="19:45" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:31">

        <expr_stmt pos:start="21:9" pos:end="21:63"><expr pos:start="21:9" pos:end="21:62"><call pos:start="21:9" pos:end="21:62"><name pos:start="21:9" pos:end="21:15">fprintf</name><argument_list pos:start="21:16" pos:end="21:62">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:22">stderr</name></expr></argument>, <argument pos:start="21:25" pos:end="21:61"><expr pos:start="21:25" pos:end="21:61"><literal type="string" pos:start="21:25" pos:end="21:61">"Attempting to execute inactive QH\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:30">USB_RET_PROCERR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:77"><expr pos:start="29:5" pos:end="29:76"><name pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:5">q</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:13">tbytes</name></name> <operator pos:start="29:15" pos:end="29:15">=</operator> <operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:28"><name pos:start="29:18" pos:end="29:18">q</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:22">qh</name><operator pos:start="29:23" pos:end="29:23">.</operator><name pos:start="29:24" pos:end="29:28">token</name></name> <operator pos:start="29:30" pos:end="29:30">&amp;</operator> <name pos:start="29:32" pos:end="29:52">QTD_TOKEN_TBYTES_MASK</name><operator pos:start="29:53" pos:end="29:53">)</operator> <operator pos:start="29:55" pos:end="29:56">&gt;&gt;</operator> <name pos:start="29:58" pos:end="29:76">QTD_TOKEN_TBYTES_SH</name></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:30">(<expr pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:9">q</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:17">tbytes</name></name> <operator pos:start="31:19" pos:end="31:19">&gt;</operator> <name pos:start="31:21" pos:end="31:29">BUFF_SIZE</name></expr>)</condition> <block pos:start="31:32" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:31">

        <expr_stmt pos:start="33:9" pos:end="33:65"><expr pos:start="33:9" pos:end="33:64"><call pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:15">fprintf</name><argument_list pos:start="33:16" pos:end="33:64">(<argument pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:22">stderr</name></expr></argument>, <argument pos:start="33:25" pos:end="33:63"><expr pos:start="33:25" pos:end="33:63"><literal type="string" pos:start="33:25" pos:end="33:63">"Request for more bytes than allowed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:31">return <expr pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:30">USB_RET_PROCERR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:68"><expr pos:start="41:5" pos:end="41:67"><name pos:start="41:5" pos:end="41:10"><name pos:start="41:5" pos:end="41:5">q</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:10">pid</name></name> <operator pos:start="41:12" pos:end="41:12">=</operator> <operator pos:start="41:14" pos:end="41:14">(</operator><name pos:start="41:15" pos:end="41:25"><name pos:start="41:15" pos:end="41:15">q</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:19">qh</name><operator pos:start="41:20" pos:end="41:20">.</operator><name pos:start="41:21" pos:end="41:25">token</name></name> <operator pos:start="41:27" pos:end="41:27">&amp;</operator> <name pos:start="41:29" pos:end="41:46">QTD_TOKEN_PID_MASK</name><operator pos:start="41:47" pos:end="41:47">)</operator> <operator pos:start="41:49" pos:end="41:50">&gt;&gt;</operator> <name pos:start="41:52" pos:end="41:67">QTD_TOKEN_PID_SH</name></expr>;</expr_stmt>

    <switch pos:start="43:5" pos:end="53:5">switch<condition pos:start="43:11" pos:end="43:18">(<expr pos:start="43:12" pos:end="43:17"><name pos:start="43:12" pos:end="43:17"><name pos:start="43:12" pos:end="43:12">q</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:17">pid</name></name></expr>)</condition> <block pos:start="43:20" pos:end="53:5">{<block_content pos:start="45:9" pos:end="51:55">

        <case pos:start="45:9" pos:end="45:15">case <expr pos:start="45:14" pos:end="45:14"><literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>:</case> <expr_stmt pos:start="45:17" pos:end="45:39"><expr pos:start="45:17" pos:end="45:38"><name pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:17">q</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:22">pid</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:38">USB_TOKEN_OUT</name></expr>;</expr_stmt> <break pos:start="45:41" pos:end="45:46">break;</break>

        <case pos:start="47:9" pos:end="47:15">case <expr pos:start="47:14" pos:end="47:14"><literal type="number" pos:start="47:14" pos:end="47:14">1</literal></expr>:</case> <expr_stmt pos:start="47:17" pos:end="47:38"><expr pos:start="47:17" pos:end="47:37"><name pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:17">q</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:22">pid</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <name pos:start="47:26" pos:end="47:37">USB_TOKEN_IN</name></expr>;</expr_stmt> <break pos:start="47:40" pos:end="47:45">break;</break>

        <case pos:start="49:9" pos:end="49:15">case <expr pos:start="49:14" pos:end="49:14"><literal type="number" pos:start="49:14" pos:end="49:14">2</literal></expr>:</case> <expr_stmt pos:start="49:17" pos:end="49:41"><expr pos:start="49:17" pos:end="49:40"><name pos:start="49:17" pos:end="49:22"><name pos:start="49:17" pos:end="49:17">q</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:22">pid</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <name pos:start="49:26" pos:end="49:40">USB_TOKEN_SETUP</name></expr>;</expr_stmt> <break pos:start="49:43" pos:end="49:48">break;</break>

        <default pos:start="51:9" pos:end="51:16">default:</default> <expr_stmt pos:start="51:18" pos:end="51:48"><expr pos:start="51:18" pos:end="51:47"><call pos:start="51:18" pos:end="51:47"><name pos:start="51:18" pos:end="51:24">fprintf</name><argument_list pos:start="51:25" pos:end="51:47">(<argument pos:start="51:26" pos:end="51:31"><expr pos:start="51:26" pos:end="51:31"><name pos:start="51:26" pos:end="51:31">stderr</name></expr></argument>, <argument pos:start="51:34" pos:end="51:46"><expr pos:start="51:34" pos:end="51:46"><literal type="string" pos:start="51:34" pos:end="51:46">"bad token\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="51:50" pos:end="51:55">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="59:47">(<expr pos:start="57:9" pos:end="59:46"><operator pos:start="57:9" pos:end="57:9">(</operator><name pos:start="57:10" pos:end="57:18"><name pos:start="57:10" pos:end="57:10">q</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:18">tbytes</name></name> <operator pos:start="57:20" pos:end="57:21">&amp;&amp;</operator> <name pos:start="57:23" pos:end="57:28"><name pos:start="57:23" pos:end="57:23">q</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:28">pid</name></name> <operator pos:start="57:30" pos:end="57:31">!=</operator> <name pos:start="57:33" pos:end="57:44">USB_TOKEN_IN</name><operator pos:start="57:45" pos:end="57:45">)</operator> <operator pos:start="57:47" pos:end="57:48">&amp;&amp;</operator>

        <operator pos:start="59:9" pos:end="59:9">(</operator><call pos:start="59:10" pos:end="59:40"><name pos:start="59:10" pos:end="59:23">ehci_buffer_rw</name><argument_list pos:start="59:24" pos:end="59:40">(<argument pos:start="59:25" pos:end="59:25"><expr pos:start="59:25" pos:end="59:25"><name pos:start="59:25" pos:end="59:25">q</name></expr></argument>, <argument pos:start="59:28" pos:end="59:36"><expr pos:start="59:28" pos:end="59:36"><name pos:start="59:28" pos:end="59:36"><name pos:start="59:28" pos:end="59:28">q</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:36">tbytes</name></name></expr></argument>, <argument pos:start="59:39" pos:end="59:39"><expr pos:start="59:39" pos:end="59:39"><literal type="number" pos:start="59:39" pos:end="59:39">0</literal></expr></argument>)</argument_list></call> <operator pos:start="59:42" pos:end="59:43">!=</operator> <literal type="number" pos:start="59:45" pos:end="59:45">0</literal><operator pos:start="59:46" pos:end="59:46">)</operator></expr>)</condition> <block pos:start="59:49" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:31">

        <return pos:start="61:9" pos:end="61:31">return <expr pos:start="61:16" pos:end="61:30"><name pos:start="61:16" pos:end="61:30">USB_RET_PROCERR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:49"><expr pos:start="67:5" pos:end="67:48"><name pos:start="67:5" pos:end="67:8">endp</name> <operator pos:start="67:10" pos:end="67:10">=</operator> <call pos:start="67:12" pos:end="67:48"><name pos:start="67:12" pos:end="67:20">get_field</name><argument_list pos:start="67:21" pos:end="67:48">(<argument pos:start="67:22" pos:end="67:33"><expr pos:start="67:22" pos:end="67:33"><name pos:start="67:22" pos:end="67:33"><name pos:start="67:22" pos:end="67:22">q</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:26">qh</name><operator pos:start="67:27" pos:end="67:27">.</operator><name pos:start="67:28" pos:end="67:33">epchar</name></name></expr></argument>, <argument pos:start="67:36" pos:end="67:47"><expr pos:start="67:36" pos:end="67:47"><name pos:start="67:36" pos:end="67:47">QH_EPCHAR_EP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:56"><expr pos:start="69:5" pos:end="69:55"><name pos:start="69:5" pos:end="69:10">devadr</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <call pos:start="69:14" pos:end="69:55"><name pos:start="69:14" pos:end="69:22">get_field</name><argument_list pos:start="69:23" pos:end="69:55">(<argument pos:start="69:24" pos:end="69:35"><expr pos:start="69:24" pos:end="69:35"><name pos:start="69:24" pos:end="69:35"><name pos:start="69:24" pos:end="69:24">q</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:28">qh</name><operator pos:start="69:29" pos:end="69:29">.</operator><name pos:start="69:30" pos:end="69:35">epchar</name></name></expr></argument>, <argument pos:start="69:38" pos:end="69:54"><expr pos:start="69:38" pos:end="69:54"><name pos:start="69:38" pos:end="69:54">QH_EPCHAR_DEVADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:24"><expr pos:start="73:5" pos:end="73:23"><name pos:start="73:5" pos:end="73:7">ret</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <name pos:start="73:11" pos:end="73:23">USB_RET_NODEV</name></expr>;</expr_stmt>



    <comment type="line" pos:start="77:5" pos:end="77:47">// TO-DO: associating device with ehci port</comment>

    <for pos:start="79:5" pos:end="129:5">for<control pos:start="79:8" pos:end="79:33">(<init pos:start="79:9" pos:end="79:14"><expr pos:start="79:9" pos:end="79:13"><name pos:start="79:9" pos:end="79:9">i</name> <operator pos:start="79:11" pos:end="79:11">=</operator> <literal type="number" pos:start="79:13" pos:end="79:13">0</literal></expr>;</init> <condition pos:start="79:16" pos:end="79:28"><expr pos:start="79:16" pos:end="79:27"><name pos:start="79:16" pos:end="79:16">i</name> <operator pos:start="79:18" pos:end="79:18">&lt;</operator> <name pos:start="79:20" pos:end="79:27">NB_PORTS</name></expr>;</condition> <incr pos:start="79:30" pos:end="79:32"><expr pos:start="79:30" pos:end="79:32"><name pos:start="79:30" pos:end="79:30">i</name><operator pos:start="79:31" pos:end="79:32">++</operator></expr></incr>)</control> <block pos:start="79:35" pos:end="129:5">{<block_content pos:start="81:9" pos:end="127:9">

        <expr_stmt pos:start="81:9" pos:end="81:34"><expr pos:start="81:9" pos:end="81:33"><name pos:start="81:9" pos:end="81:12">port</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <operator pos:start="81:16" pos:end="81:16">&amp;</operator><name pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:17">q</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:23">ehci</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:30">ports</name><index pos:start="81:31" pos:end="81:33">[<expr pos:start="81:32" pos:end="81:32"><name pos:start="81:32" pos:end="81:32">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:24"><expr pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:11">dev</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <name pos:start="83:15" pos:end="83:23"><name pos:start="83:15" pos:end="83:18">port</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:23">dev</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="87:9" pos:end="95:9"><if pos:start="87:9" pos:end="95:9">if <condition pos:start="87:12" pos:end="87:52">(<expr pos:start="87:13" pos:end="87:51"><operator pos:start="87:13" pos:end="87:13">!</operator><operator pos:start="87:14" pos:end="87:14">(</operator><name pos:start="87:15" pos:end="87:32"><name pos:start="87:15" pos:end="87:15">q</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:21">ehci</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:29">portsc</name><index pos:start="87:30" pos:end="87:32">[<expr pos:start="87:31" pos:end="87:31"><name pos:start="87:31" pos:end="87:31">i</name></expr>]</index></name> <operator pos:start="87:34" pos:end="87:34">&amp;</operator><operator pos:start="87:35" pos:end="87:35">(</operator><name pos:start="87:36" pos:end="87:49">PORTSC_CONNECT</name><operator pos:start="87:50" pos:end="87:50">)</operator><operator pos:start="87:51" pos:end="87:51">)</operator></expr>)</condition> <block pos:start="87:54" pos:end="95:9">{<block_content pos:start="89:13" pos:end="93:21">

            <expr_stmt pos:start="89:13" pos:end="91:43"><expr pos:start="89:13" pos:end="91:42"><call pos:start="89:13" pos:end="91:42"><name pos:start="89:13" pos:end="89:19">DPRINTF</name><argument_list pos:start="89:20" pos:end="91:42">(<argument pos:start="89:21" pos:end="89:61"><expr pos:start="89:21" pos:end="89:61"><literal type="string" pos:start="89:21" pos:end="89:61">"Port %d, no exec, not connected(%08X)\n"</literal></expr></argument>,

                    <argument pos:start="91:21" pos:end="91:21"><expr pos:start="91:21" pos:end="91:21"><name pos:start="91:21" pos:end="91:21">i</name></expr></argument>, <argument pos:start="91:24" pos:end="91:41"><expr pos:start="91:24" pos:end="91:41"><name pos:start="91:24" pos:end="91:41"><name pos:start="91:24" pos:end="91:24">q</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:30">ehci</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:38">portsc</name><index pos:start="91:39" pos:end="91:41">[<expr pos:start="91:40" pos:end="91:40"><name pos:start="91:40" pos:end="91:40">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="93:13" pos:end="93:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:31"><expr pos:start="99:9" pos:end="99:30"><name pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:9">q</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:17">packet</name><operator pos:start="99:18" pos:end="99:18">.</operator><name pos:start="99:19" pos:end="99:21">pid</name></name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:30"><name pos:start="99:25" pos:end="99:25">q</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:30">pid</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:35"><expr pos:start="101:9" pos:end="101:34"><name pos:start="101:9" pos:end="101:25"><name pos:start="101:9" pos:end="101:9">q</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:17">packet</name><operator pos:start="101:18" pos:end="101:18">.</operator><name pos:start="101:19" pos:end="101:25">devaddr</name></name> <operator pos:start="101:27" pos:end="101:27">=</operator> <name pos:start="101:29" pos:end="101:34">devadr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:31"><expr pos:start="103:9" pos:end="103:30"><name pos:start="103:9" pos:end="103:23"><name pos:start="103:9" pos:end="103:9">q</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:17">packet</name><operator pos:start="103:18" pos:end="103:18">.</operator><name pos:start="103:19" pos:end="103:23">devep</name></name> <operator pos:start="103:25" pos:end="103:25">=</operator> <name pos:start="103:27" pos:end="103:30">endp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:35"><expr pos:start="105:9" pos:end="105:34"><name pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:9">q</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:17">packet</name><operator pos:start="105:18" pos:end="105:18">.</operator><name pos:start="105:19" pos:end="105:22">data</name></name> <operator pos:start="105:24" pos:end="105:24">=</operator> <name pos:start="105:26" pos:end="105:34"><name pos:start="105:26" pos:end="105:26">q</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:34">buffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:34"><expr pos:start="107:9" pos:end="107:33"><name pos:start="107:9" pos:end="107:21"><name pos:start="107:9" pos:end="107:9">q</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:17">packet</name><operator pos:start="107:18" pos:end="107:18">.</operator><name pos:start="107:19" pos:end="107:21">len</name></name> <operator pos:start="107:23" pos:end="107:23">=</operator> <name pos:start="107:25" pos:end="107:33"><name pos:start="107:25" pos:end="107:25">q</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:33">tbytes</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:49"><expr pos:start="111:9" pos:end="111:48"><name pos:start="111:9" pos:end="111:11">ret</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <call pos:start="111:15" pos:end="111:48"><name pos:start="111:15" pos:end="111:31">usb_handle_packet</name><argument_list pos:start="111:32" pos:end="111:48">(<argument pos:start="111:33" pos:end="111:35"><expr pos:start="111:33" pos:end="111:35"><name pos:start="111:33" pos:end="111:35">dev</name></expr></argument>, <argument pos:start="111:38" pos:end="111:47"><expr pos:start="111:38" pos:end="111:47"><operator pos:start="111:38" pos:end="111:38">&amp;</operator><name pos:start="111:39" pos:end="111:47"><name pos:start="111:39" pos:end="111:39">q</name><operator pos:start="111:40" pos:end="111:41">-&gt;</operator><name pos:start="111:42" pos:end="111:47">packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="115:9" pos:end="119:53"><expr pos:start="115:9" pos:end="119:52"><call pos:start="115:9" pos:end="119:52"><name pos:start="115:9" pos:end="115:15">DPRINTF</name><argument_list pos:start="115:16" pos:end="119:52">(<argument pos:start="115:17" pos:end="115:88"><expr pos:start="115:17" pos:end="115:88"><literal type="string" pos:start="115:17" pos:end="115:88">"submit: qh %x next %x qtd %x pid %x len %d (total %d) endp %x ret %d\n"</literal></expr></argument>,

                <argument pos:start="117:17" pos:end="117:25"><expr pos:start="117:17" pos:end="117:25"><name pos:start="117:17" pos:end="117:25"><name pos:start="117:17" pos:end="117:17">q</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:25">qhaddr</name></name></expr></argument>, <argument pos:start="117:28" pos:end="117:37"><expr pos:start="117:28" pos:end="117:37"><name pos:start="117:28" pos:end="117:37"><name pos:start="117:28" pos:end="117:28">q</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:32">qh</name><operator pos:start="117:33" pos:end="117:33">.</operator><name pos:start="117:34" pos:end="117:37">next</name></name></expr></argument>, <argument pos:start="117:40" pos:end="117:49"><expr pos:start="117:40" pos:end="117:49"><name pos:start="117:40" pos:end="117:49"><name pos:start="117:40" pos:end="117:40">q</name><operator pos:start="117:41" pos:end="117:42">-&gt;</operator><name pos:start="117:43" pos:end="117:49">qtdaddr</name></name></expr></argument>, <argument pos:start="117:52" pos:end="117:57"><expr pos:start="117:52" pos:end="117:57"><name pos:start="117:52" pos:end="117:57"><name pos:start="117:52" pos:end="117:52">q</name><operator pos:start="117:53" pos:end="117:54">-&gt;</operator><name pos:start="117:55" pos:end="117:57">pid</name></name></expr></argument>,

                <argument pos:start="119:17" pos:end="119:29"><expr pos:start="119:17" pos:end="119:29"><name pos:start="119:17" pos:end="119:29"><name pos:start="119:17" pos:end="119:17">q</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:25">packet</name><operator pos:start="119:26" pos:end="119:26">.</operator><name pos:start="119:27" pos:end="119:29">len</name></name></expr></argument>, <argument pos:start="119:32" pos:end="119:40"><expr pos:start="119:32" pos:end="119:40"><name pos:start="119:32" pos:end="119:40"><name pos:start="119:32" pos:end="119:32">q</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:40">tbytes</name></name></expr></argument>, <argument pos:start="119:43" pos:end="119:46"><expr pos:start="119:43" pos:end="119:46"><name pos:start="119:43" pos:end="119:46">endp</name></expr></argument>, <argument pos:start="119:49" pos:end="119:51"><expr pos:start="119:49" pos:end="119:51"><name pos:start="119:49" pos:end="119:51">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="123:9" pos:end="127:9"><if pos:start="123:9" pos:end="127:9">if <condition pos:start="123:12" pos:end="123:33">(<expr pos:start="123:13" pos:end="123:32"><name pos:start="123:13" pos:end="123:15">ret</name> <operator pos:start="123:17" pos:end="123:18">!=</operator> <name pos:start="123:20" pos:end="123:32">USB_RET_NODEV</name></expr>)</condition> <block pos:start="123:35" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:18">

            <break pos:start="125:13" pos:end="125:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="133:5" pos:end="139:5"><if pos:start="133:5" pos:end="139:5">if <condition pos:start="133:8" pos:end="133:24">(<expr pos:start="133:9" pos:end="133:23"><name pos:start="133:9" pos:end="133:11">ret</name> <operator pos:start="133:13" pos:end="133:13">&gt;</operator> <name pos:start="133:15" pos:end="133:23">BUFF_SIZE</name></expr>)</condition> <block pos:start="133:26" pos:end="139:5">{<block_content pos:start="135:9" pos:end="137:31">

        <expr_stmt pos:start="135:9" pos:end="135:68"><expr pos:start="135:9" pos:end="135:67"><call pos:start="135:9" pos:end="135:67"><name pos:start="135:9" pos:end="135:15">fprintf</name><argument_list pos:start="135:16" pos:end="135:67">(<argument pos:start="135:17" pos:end="135:22"><expr pos:start="135:17" pos:end="135:22"><name pos:start="135:17" pos:end="135:22">stderr</name></expr></argument>, <argument pos:start="135:25" pos:end="135:66"><expr pos:start="135:25" pos:end="135:66"><literal type="string" pos:start="135:25" pos:end="135:66">"ret from usb_handle_packet &gt; BUFF_SIZE\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="137:9" pos:end="137:31">return <expr pos:start="137:16" pos:end="137:30"><name pos:start="137:16" pos:end="137:30">USB_RET_PROCERR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="143:5" pos:end="143:15">return <expr pos:start="143:12" pos:end="143:14"><name pos:start="143:12" pos:end="143:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
