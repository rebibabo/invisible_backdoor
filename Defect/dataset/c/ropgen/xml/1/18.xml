<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">vncws_start_tls_handshake</name><parameter_list pos:start="1:37" pos:end="1:50">(<parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:47"><name pos:start="1:38" pos:end="1:45">VncState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">vs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:13">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:47">= <expr pos:start="5:15" pos:end="5:47"><call pos:start="5:15" pos:end="5:47"><name pos:start="5:15" pos:end="5:30">gnutls_handshake</name><argument_list pos:start="5:31" pos:end="5:47">(<argument pos:start="5:32" pos:end="5:46"><expr pos:start="5:32" pos:end="5:46"><name pos:start="5:32" pos:end="5:46"><name pos:start="5:32" pos:end="5:33">vs</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:38">tls</name><operator pos:start="5:39" pos:end="5:39">.</operator><name pos:start="5:40" pos:end="5:46">session</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="39:5"><if pos:start="9:5" pos:end="39:5">if <condition pos:start="9:8" pos:end="9:16">(<expr pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:11">ret</name> <operator pos:start="9:13" pos:end="9:13">&lt;</operator> <literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr>)</condition> <block pos:start="9:18" pos:end="39:5">{<block_content pos:start="11:9" pos:end="37:18">

        <if_stmt pos:start="11:9" pos:end="31:9"><if pos:start="11:9" pos:end="31:9">if <condition pos:start="11:12" pos:end="11:40">(<expr pos:start="11:13" pos:end="11:39"><operator pos:start="11:13" pos:end="11:13">!</operator><call pos:start="11:14" pos:end="11:39"><name pos:start="11:14" pos:end="11:34">gnutls_error_is_fatal</name><argument_list pos:start="11:35" pos:end="11:39">(<argument pos:start="11:36" pos:end="11:38"><expr pos:start="11:36" pos:end="11:38"><name pos:start="11:36" pos:end="11:38">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:42" pos:end="31:9">{<block_content pos:start="13:13" pos:end="29:21">

            <expr_stmt pos:start="13:13" pos:end="13:60"><expr pos:start="13:13" pos:end="13:59"><call pos:start="13:13" pos:end="13:59"><name pos:start="13:13" pos:end="13:21">VNC_DEBUG</name><argument_list pos:start="13:22" pos:end="13:59">(<argument pos:start="13:23" pos:end="13:58"><expr pos:start="13:23" pos:end="13:58"><literal type="string" pos:start="13:23" pos:end="13:58">"Handshake interrupted (blocking)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="15:13" pos:end="27:13"><if pos:start="15:13" pos:end="21:13">if <condition pos:start="15:16" pos:end="15:62">(<expr pos:start="15:17" pos:end="15:61"><operator pos:start="15:17" pos:end="15:17">!</operator><call pos:start="15:18" pos:end="15:61"><name pos:start="15:18" pos:end="15:44">gnutls_record_get_direction</name><argument_list pos:start="15:45" pos:end="15:61">(<argument pos:start="15:46" pos:end="15:60"><expr pos:start="15:46" pos:end="15:60"><name pos:start="15:46" pos:end="15:60"><name pos:start="15:46" pos:end="15:47">vs</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:52">tls</name><operator pos:start="15:53" pos:end="15:53">.</operator><name pos:start="15:54" pos:end="15:60">session</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:64" pos:end="21:13">{<block_content pos:start="17:17" pos:end="19:46">

                <expr_stmt pos:start="17:17" pos:end="19:46"><expr pos:start="17:17" pos:end="19:45"><call pos:start="17:17" pos:end="19:45"><name pos:start="17:17" pos:end="17:35">qemu_set_fd_handler</name><argument_list pos:start="17:36" pos:end="19:45">(<argument pos:start="17:37" pos:end="17:45"><expr pos:start="17:37" pos:end="17:45"><name pos:start="17:37" pos:end="17:45"><name pos:start="17:37" pos:end="17:38">vs</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:45">csock</name></name></expr></argument>, <argument pos:start="17:48" pos:end="17:69"><expr pos:start="17:48" pos:end="17:69"><name pos:start="17:48" pos:end="17:69">vncws_tls_handshake_io</name></expr></argument>,

                                    <argument pos:start="19:37" pos:end="19:40"><expr pos:start="19:37" pos:end="19:40"><name pos:start="19:37" pos:end="19:40">NULL</name></expr></argument>, <argument pos:start="19:43" pos:end="19:44"><expr pos:start="19:43" pos:end="19:44"><name pos:start="19:43" pos:end="19:44">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="21:15" pos:end="27:13">else <block pos:start="21:20" pos:end="27:13">{<block_content pos:start="23:17" pos:end="25:40">

                <expr_stmt pos:start="23:17" pos:end="25:40"><expr pos:start="23:17" pos:end="25:39"><call pos:start="23:17" pos:end="25:39"><name pos:start="23:17" pos:end="23:35">qemu_set_fd_handler</name><argument_list pos:start="23:36" pos:end="25:39">(<argument pos:start="23:37" pos:end="23:45"><expr pos:start="23:37" pos:end="23:45"><name pos:start="23:37" pos:end="23:45"><name pos:start="23:37" pos:end="23:38">vs</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:45">csock</name></name></expr></argument>, <argument pos:start="23:48" pos:end="23:51"><expr pos:start="23:48" pos:end="23:51"><name pos:start="23:48" pos:end="23:51">NULL</name></expr></argument>, <argument pos:start="23:54" pos:end="23:75"><expr pos:start="23:54" pos:end="23:75"><name pos:start="23:54" pos:end="23:75">vncws_tls_handshake_io</name></expr></argument>,

                                    <argument pos:start="25:37" pos:end="25:38"><expr pos:start="25:37" pos:end="25:38"><name pos:start="25:37" pos:end="25:38">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <return pos:start="29:13" pos:end="29:21">return <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:65"><expr pos:start="33:9" pos:end="33:64"><call pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:17">VNC_DEBUG</name><argument_list pos:start="33:18" pos:end="33:64">(<argument pos:start="33:19" pos:end="33:41"><expr pos:start="33:19" pos:end="33:41"><literal type="string" pos:start="33:19" pos:end="33:41">"Handshake failed %s\n"</literal></expr></argument>, <argument pos:start="33:44" pos:end="33:63"><expr pos:start="33:44" pos:end="33:63"><call pos:start="33:44" pos:end="33:63"><name pos:start="33:44" pos:end="33:58">gnutls_strerror</name><argument_list pos:start="33:59" pos:end="33:63">(<argument pos:start="33:60" pos:end="33:62"><expr pos:start="33:60" pos:end="33:62"><name pos:start="33:60" pos:end="33:62">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><call pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:24">vnc_client_error</name><argument_list pos:start="35:25" pos:end="35:28">(<argument pos:start="35:26" pos:end="35:27"><expr pos:start="35:26" pos:end="35:27"><name pos:start="35:26" pos:end="35:27">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="59:5"><if pos:start="43:5" pos:end="59:5">if <condition pos:start="43:8" pos:end="43:31">(<expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:10">vs</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:14">vd</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:19">tls</name><operator pos:start="43:20" pos:end="43:20">.</operator><name pos:start="43:21" pos:end="43:30">x509verify</name></name></expr>)</condition> <block pos:start="43:33" pos:end="59:5">{<block_content pos:start="45:9" pos:end="57:9">

        <if_stmt pos:start="45:9" pos:end="57:9"><if pos:start="45:9" pos:end="53:9">if <condition pos:start="45:12" pos:end="45:49">(<expr pos:start="45:13" pos:end="45:48"><call pos:start="45:13" pos:end="45:44"><name pos:start="45:13" pos:end="45:40">vnc_tls_validate_certificate</name><argument_list pos:start="45:41" pos:end="45:44">(<argument pos:start="45:42" pos:end="45:43"><expr pos:start="45:42" pos:end="45:43"><name pos:start="45:42" pos:end="45:43">vs</name></expr></argument>)</argument_list></call> <operator pos:start="45:46" pos:end="45:46">&lt;</operator> <literal type="number" pos:start="45:48" pos:end="45:48">0</literal></expr>)</condition> <block pos:start="45:51" pos:end="53:9">{<block_content pos:start="47:13" pos:end="51:22">

            <expr_stmt pos:start="47:13" pos:end="47:54"><expr pos:start="47:13" pos:end="47:53"><call pos:start="47:13" pos:end="47:53"><name pos:start="47:13" pos:end="47:21">VNC_DEBUG</name><argument_list pos:start="47:22" pos:end="47:53">(<argument pos:start="47:23" pos:end="47:52"><expr pos:start="47:23" pos:end="47:52"><literal type="string" pos:start="47:23" pos:end="47:52">"Client verification failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:33"><expr pos:start="49:13" pos:end="49:32"><call pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:28">vnc_client_error</name><argument_list pos:start="49:29" pos:end="49:32">(<argument pos:start="49:30" pos:end="49:31"><expr pos:start="49:30" pos:end="49:31"><name pos:start="49:30" pos:end="49:31">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="51:13" pos:end="51:22">return <expr pos:start="51:20" pos:end="51:21"><operator pos:start="51:20" pos:end="51:20">-</operator><literal type="number" pos:start="51:21" pos:end="51:21">1</literal></expr>;</return>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="57:9">else <block pos:start="53:16" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:54">

            <expr_stmt pos:start="55:13" pos:end="55:54"><expr pos:start="55:13" pos:end="55:53"><call pos:start="55:13" pos:end="55:53"><name pos:start="55:13" pos:end="55:21">VNC_DEBUG</name><argument_list pos:start="55:22" pos:end="55:53">(<argument pos:start="55:23" pos:end="55:52"><expr pos:start="55:23" pos:end="55:52"><literal type="string" pos:start="55:23" pos:end="55:52">"Client verification passed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:62"><expr pos:start="63:5" pos:end="63:61"><call pos:start="63:5" pos:end="63:61"><name pos:start="63:5" pos:end="63:13">VNC_DEBUG</name><argument_list pos:start="63:14" pos:end="63:61">(<argument pos:start="63:15" pos:end="63:60"><expr pos:start="63:15" pos:end="63:60"><literal type="string" pos:start="63:15" pos:end="63:60">"Handshake done, switching to TLS data mode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:67"><expr pos:start="65:5" pos:end="65:66"><call pos:start="65:5" pos:end="65:66"><name pos:start="65:5" pos:end="65:23">qemu_set_fd_handler</name><argument_list pos:start="65:24" pos:end="65:66">(<argument pos:start="65:25" pos:end="65:33"><expr pos:start="65:25" pos:end="65:33"><name pos:start="65:25" pos:end="65:33"><name pos:start="65:25" pos:end="65:26">vs</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:33">csock</name></name></expr></argument>, <argument pos:start="65:36" pos:end="65:55"><expr pos:start="65:36" pos:end="65:55"><name pos:start="65:36" pos:end="65:55">vncws_handshake_read</name></expr></argument>, <argument pos:start="65:58" pos:end="65:61"><expr pos:start="65:58" pos:end="65:61"><name pos:start="65:58" pos:end="65:61">NULL</name></expr></argument>, <argument pos:start="65:64" pos:end="65:65"><expr pos:start="65:64" pos:end="65:65"><name pos:start="65:64" pos:end="65:65">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
