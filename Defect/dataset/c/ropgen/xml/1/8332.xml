<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8332.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">expand_rle_row</name><parameter_list pos:start="1:27" pos:end="3:41">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:46"><name pos:start="1:28" pos:end="1:35">unsigned</name> <name pos:start="1:37" pos:end="1:40">char</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">optr</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:67"><decl pos:start="1:49" pos:end="1:67"><type pos:start="1:49" pos:end="1:67"><name pos:start="1:49" pos:end="1:56">unsigned</name> <name pos:start="1:58" pos:end="1:61">char</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">iptr</name></decl></parameter>, 

        <parameter pos:start="3:9" pos:end="3:23"><decl pos:start="3:9" pos:end="3:23"><type pos:start="3:9" pos:end="3:23"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:23">chan_offset</name></decl></parameter>, <parameter pos:start="3:26" pos:end="3:40"><decl pos:start="3:26" pos:end="3:40"><type pos:start="3:26" pos:end="3:40"><name pos:start="3:26" pos:end="3:28">int</name></type> <name pos:start="3:30" pos:end="3:40">pixelstride</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:5">

    <decl_stmt pos:start="7:5" pos:end="12:0"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name></type> <name pos:start="7:19" pos:end="7:23">pixel</name></decl>, <decl pos:start="7:26" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:17"/><name pos:start="7:26" pos:end="7:30">count</name></decl>;</decl_stmt>

 

<cpp:ifndef pos:start="11:1" pos:end="11:23">#<cpp:directive pos:start="11:2" pos:end="11:7">ifndef</cpp:directive> <name pos:start="11:9" pos:end="11:23">WORDS_BIGENDIAN</name></cpp:ifndef>

    <comment type="block" pos:start="13:5" pos:end="13:55">/* rgba -&gt; bgra for rgba32 on little endian cpus */</comment>

    <if_stmt pos:start="15:5" pos:end="22:0"><if pos:start="15:5" pos:end="22:0">if <condition pos:start="15:8" pos:end="15:45">(<expr pos:start="15:9" pos:end="15:44"><name pos:start="15:9" pos:end="15:19">pixelstride</name> <operator pos:start="15:21" pos:end="15:22">==</operator> <literal type="number" pos:start="15:24" pos:end="15:24">4</literal> <operator pos:start="15:26" pos:end="15:27">&amp;&amp;</operator> <name pos:start="15:29" pos:end="15:39">chan_offset</name> <operator pos:start="15:41" pos:end="15:42">!=</operator> <literal type="number" pos:start="15:44" pos:end="15:44">3</literal></expr>)</condition> <block pos:start="15:47" pos:end="22:0">{<block_content pos:start="17:8" pos:end="17:37">

       <expr_stmt pos:start="17:8" pos:end="17:37"><expr pos:start="17:8" pos:end="17:36"><name pos:start="17:8" pos:end="17:18">chan_offset</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <literal type="number" pos:start="17:22" pos:end="17:24">2</literal> <operator pos:start="17:24" pos:end="17:24">-</operator> <name pos:start="17:26" pos:end="17:36">chan_offset</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

        

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:8">optr</name> <operator pos:start="25:10" pos:end="25:11">+=</operator> <name pos:start="25:13" pos:end="25:23">chan_offset</name></expr>;</expr_stmt>



    <while pos:start="29:5" pos:end="69:5">while <condition pos:start="29:11" pos:end="29:13">(<expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">1</literal></expr>)</condition> <block pos:start="29:15" pos:end="69:5">{<block_content pos:start="31:9" pos:end="67:9">

        <expr_stmt pos:start="31:9" pos:end="31:24"><expr pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:13">pixel</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <operator pos:start="31:17" pos:end="31:17">*</operator><name pos:start="31:18" pos:end="31:21">iptr</name><operator pos:start="31:22" pos:end="31:23">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:38">(<expr pos:start="35:13" pos:end="35:37"><operator pos:start="35:13" pos:end="35:13">!</operator><operator pos:start="35:14" pos:end="35:14">(</operator><name pos:start="35:15" pos:end="35:19">count</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <operator pos:start="35:23" pos:end="35:23">(</operator><name pos:start="35:24" pos:end="35:28">pixel</name> <operator pos:start="35:30" pos:end="35:30">&amp;</operator> <literal type="number" pos:start="35:32" pos:end="35:35">0x7f</literal><operator pos:start="35:36" pos:end="35:36">)</operator><operator pos:start="35:37" pos:end="35:37">)</operator></expr>)</condition> <block pos:start="35:40" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:19">

            <return pos:start="37:13" pos:end="37:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="67:9"><if pos:start="41:9" pos:end="53:9">if <condition pos:start="41:12" pos:end="41:25">(<expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:17">pixel</name> <operator pos:start="41:19" pos:end="41:19">&amp;</operator> <literal type="number" pos:start="41:21" pos:end="41:24">0x80</literal></expr>)</condition> <block pos:start="41:27" pos:end="53:9">{<block_content pos:start="43:13" pos:end="51:13">

            <while pos:start="43:13" pos:end="51:13">while <condition pos:start="43:19" pos:end="43:27">(<expr pos:start="43:20" pos:end="43:26"><name pos:start="43:20" pos:end="43:24">count</name><operator pos:start="43:25" pos:end="43:26">--</operator></expr>)</condition> <block pos:start="43:29" pos:end="51:13">{<block_content pos:start="45:17" pos:end="49:23">

                <expr_stmt pos:start="45:17" pos:end="45:30"><expr pos:start="45:17" pos:end="45:29"><operator pos:start="45:17" pos:end="45:17">*</operator><name pos:start="45:18" pos:end="45:21">optr</name> <operator pos:start="45:23" pos:end="45:23">=</operator> <operator pos:start="45:25" pos:end="45:25">*</operator><name pos:start="45:26" pos:end="45:29">iptr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:36"><expr pos:start="47:17" pos:end="47:35"><name pos:start="47:17" pos:end="47:20">optr</name> <operator pos:start="47:22" pos:end="47:23">+=</operator> <name pos:start="47:25" pos:end="47:35">pixelstride</name></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:23"><expr pos:start="49:17" pos:end="49:22"><name pos:start="49:17" pos:end="49:20">iptr</name><operator pos:start="49:21" pos:end="49:22">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="67:9">else <block pos:start="53:16" pos:end="67:9">{<block_content pos:start="55:13" pos:end="65:13">

            <expr_stmt pos:start="55:13" pos:end="55:28"><expr pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:17">pixel</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <operator pos:start="55:21" pos:end="55:21">*</operator><name pos:start="55:22" pos:end="55:25">iptr</name><operator pos:start="55:26" pos:end="55:27">++</operator></expr>;</expr_stmt>



            <while pos:start="59:13" pos:end="65:13">while <condition pos:start="59:19" pos:end="59:27">(<expr pos:start="59:20" pos:end="59:26"><name pos:start="59:20" pos:end="59:24">count</name><operator pos:start="59:25" pos:end="59:26">--</operator></expr>)</condition> <block pos:start="59:29" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:36">

                <expr_stmt pos:start="61:17" pos:end="61:30"><expr pos:start="61:17" pos:end="61:29"><operator pos:start="61:17" pos:end="61:17">*</operator><name pos:start="61:18" pos:end="61:21">optr</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:29">pixel</name></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:36"><expr pos:start="63:17" pos:end="63:35"><name pos:start="63:17" pos:end="63:20">optr</name> <operator pos:start="63:22" pos:end="63:23">+=</operator> <name pos:start="63:25" pos:end="63:35">pixelstride</name></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
