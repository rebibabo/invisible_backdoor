<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20867.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">vnc_display_close</name><parameter_list pos:start="1:30" pos:end="1:47">(<parameter pos:start="1:31" pos:end="1:46"><decl pos:start="1:31" pos:end="1:46"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:42">DisplayState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">ds</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="58:0">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VncDisplay</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">vs</name> <init pos:start="5:20" pos:end="5:64">= <expr pos:start="5:22" pos:end="5:64"><ternary pos:start="5:22" pos:end="5:64"><condition pos:start="5:22" pos:end="5:25"><expr pos:start="5:22" pos:end="5:23"><name pos:start="5:22" pos:end="5:23">ds</name></expr> ?</condition><then pos:start="5:27" pos:end="5:50"> <expr pos:start="5:27" pos:end="5:50"><operator pos:start="5:27" pos:end="5:27">(</operator><name pos:start="5:28" pos:end="5:37">VncDisplay</name> <operator pos:start="5:39" pos:end="5:39">*</operator><operator pos:start="5:40" pos:end="5:40">)</operator><name pos:start="5:41" pos:end="5:50"><name pos:start="5:41" pos:end="5:42">ds</name><operator pos:start="5:43" pos:end="5:44">-&gt;</operator><name pos:start="5:45" pos:end="5:50">opaque</name></name></expr> </then><else pos:start="5:52" pos:end="5:64">: <expr pos:start="5:54" pos:end="5:64"><name pos:start="5:54" pos:end="5:64">vnc_display</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:15"><if pos:start="9:5" pos:end="11:15">if <condition pos:start="9:8" pos:end="9:12">(<expr pos:start="9:9" pos:end="9:11"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:11">vs</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:15"><block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:10">vs</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:19">display</name></name></expr>)</condition> <block pos:start="13:22" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:27">

        <expr_stmt pos:start="15:9" pos:end="15:28"><expr pos:start="15:9" pos:end="15:27"><call pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:14">g_free</name><argument_list pos:start="15:15" pos:end="15:27">(<argument pos:start="15:16" pos:end="15:26"><expr pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:17">vs</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:26">display</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:10">vs</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:19">display</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:26">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="32:0"><if pos:start="21:5" pos:end="32:0">if <condition pos:start="21:8" pos:end="21:24">(<expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:10">vs</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:17">lsock</name></name> <operator pos:start="21:19" pos:end="21:20">!=</operator> <operator pos:start="21:22" pos:end="21:22">-</operator><literal type="number" pos:start="21:23" pos:end="21:23">1</literal></expr>)</condition> <block pos:start="21:26" pos:end="32:0">{<block_content pos:start="23:9" pos:end="27:23">

        <expr_stmt pos:start="23:9" pos:end="23:64"><expr pos:start="23:9" pos:end="23:63"><call pos:start="23:9" pos:end="23:63"><name pos:start="23:9" pos:end="23:28">qemu_set_fd_handler2</name><argument_list pos:start="23:29" pos:end="23:63">(<argument pos:start="23:30" pos:end="23:38"><expr pos:start="23:30" pos:end="23:38"><name pos:start="23:30" pos:end="23:38"><name pos:start="23:30" pos:end="23:31">vs</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:38">lsock</name></name></expr></argument>, <argument pos:start="23:41" pos:end="23:44"><expr pos:start="23:41" pos:end="23:44"><name pos:start="23:41" pos:end="23:44">NULL</name></expr></argument>, <argument pos:start="23:47" pos:end="23:50"><expr pos:start="23:47" pos:end="23:50"><name pos:start="23:47" pos:end="23:50">NULL</name></expr></argument>, <argument pos:start="23:53" pos:end="23:56"><expr pos:start="23:53" pos:end="23:56"><name pos:start="23:53" pos:end="23:56">NULL</name></expr></argument>, <argument pos:start="23:59" pos:end="23:62"><expr pos:start="23:59" pos:end="23:62"><name pos:start="23:59" pos:end="23:62">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:25"><expr pos:start="25:9" pos:end="25:24"><call pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:13">close</name><argument_list pos:start="25:14" pos:end="25:24">(<argument pos:start="25:15" pos:end="25:23"><expr pos:start="25:15" pos:end="25:23"><name pos:start="25:15" pos:end="25:23"><name pos:start="25:15" pos:end="25:16">vs</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">lsock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:10">vs</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:17">lsock</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <operator pos:start="27:21" pos:end="27:21">-</operator><literal type="number" pos:start="27:22" pos:end="27:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:ifdef pos:start="31:1" pos:end="31:20">#<cpp:directive pos:start="31:2" pos:end="31:6">ifdef</cpp:directive> <name pos:start="31:8" pos:end="31:20">CONFIG_VNC_WS</name></cpp:ifdef>

    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><call pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:10">g_free</name><argument_list pos:start="33:11" pos:end="33:26">(<argument pos:start="33:12" pos:end="33:25"><expr pos:start="33:12" pos:end="33:25"><name pos:start="33:12" pos:end="33:25"><name pos:start="33:12" pos:end="33:13">vs</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:25">ws_display</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:6">vs</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:18">ws_display</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:25">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="48:0"><if pos:start="37:5" pos:end="48:0">if <condition pos:start="37:8" pos:end="37:27">(<expr pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:10">vs</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:20">lwebsock</name></name> <operator pos:start="37:22" pos:end="37:23">!=</operator> <operator pos:start="37:25" pos:end="37:25">-</operator><literal type="number" pos:start="37:26" pos:end="37:26">1</literal></expr>)</condition> <block pos:start="37:29" pos:end="48:0">{<block_content pos:start="39:9" pos:end="43:26">

        <expr_stmt pos:start="39:9" pos:end="39:67"><expr pos:start="39:9" pos:end="39:66"><call pos:start="39:9" pos:end="39:66"><name pos:start="39:9" pos:end="39:28">qemu_set_fd_handler2</name><argument_list pos:start="39:29" pos:end="39:66">(<argument pos:start="39:30" pos:end="39:41"><expr pos:start="39:30" pos:end="39:41"><name pos:start="39:30" pos:end="39:41"><name pos:start="39:30" pos:end="39:31">vs</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:41">lwebsock</name></name></expr></argument>, <argument pos:start="39:44" pos:end="39:47"><expr pos:start="39:44" pos:end="39:47"><name pos:start="39:44" pos:end="39:47">NULL</name></expr></argument>, <argument pos:start="39:50" pos:end="39:53"><expr pos:start="39:50" pos:end="39:53"><name pos:start="39:50" pos:end="39:53">NULL</name></expr></argument>, <argument pos:start="39:56" pos:end="39:59"><expr pos:start="39:56" pos:end="39:59"><name pos:start="39:56" pos:end="39:59">NULL</name></expr></argument>, <argument pos:start="39:62" pos:end="39:65"><expr pos:start="39:62" pos:end="39:65"><name pos:start="39:62" pos:end="39:65">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><call pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:13">close</name><argument_list pos:start="41:14" pos:end="41:27">(<argument pos:start="41:15" pos:end="41:26"><expr pos:start="41:15" pos:end="41:26"><name pos:start="41:15" pos:end="41:26"><name pos:start="41:15" pos:end="41:16">vs</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:26">lwebsock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:10">vs</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:20">lwebsock</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <operator pos:start="43:24" pos:end="43:24">-</operator><literal type="number" pos:start="43:25" pos:end="43:25">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="47:8" pos:end="47:26">/* CONFIG_VNC_WS */</comment>

    <expr_stmt pos:start="49:5" pos:end="52:0"><expr pos:start="49:5" pos:end="49:31"><name pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:6">vs</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:12">auth</name></name> <operator pos:start="49:14" pos:end="49:14">=</operator> <name pos:start="49:16" pos:end="49:31">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="51:1" pos:end="51:21">#<cpp:directive pos:start="51:2" pos:end="51:6">ifdef</cpp:directive> <name pos:start="51:8" pos:end="51:21">CONFIG_VNC_TLS</name></cpp:ifdef>

    <expr_stmt pos:start="53:5" pos:end="53:35"><expr pos:start="53:5" pos:end="53:34"><name pos:start="53:5" pos:end="53:15"><name pos:start="53:5" pos:end="53:6">vs</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:15">subauth</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:34">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="58:0"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:6">vs</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:11">tls</name><operator pos:start="55:12" pos:end="55:12">.</operator><name pos:start="55:13" pos:end="55:22">x509verify</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <literal type="number" pos:start="55:26" pos:end="55:26">0</literal></expr>;</expr_stmt>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
