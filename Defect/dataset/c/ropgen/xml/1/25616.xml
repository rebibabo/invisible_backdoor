<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25616.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">get_scale_factor</name><parameter_list pos:start="1:28" pos:end="3:53">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">H264SliceContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">sl</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:35"><decl pos:start="3:29" pos:end="3:35"><type pos:start="3:29" pos:end="3:35"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:35">poc</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:45"><decl pos:start="3:38" pos:end="3:45"><type pos:start="3:38" pos:end="3:45"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:45">poc1</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:52"><decl pos:start="3:48" pos:end="3:52"><type pos:start="3:48" pos:end="3:52"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:52">i</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:5">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">poc0</name> <init pos:start="7:14" pos:end="7:37">= <expr pos:start="7:16" pos:end="7:37"><name pos:start="7:16" pos:end="7:33"><name pos:start="7:16" pos:end="7:17">sl</name><operator pos:start="7:18" pos:end="7:19">-&gt;</operator><name pos:start="7:20" pos:end="7:27">ref_list</name><index pos:start="7:28" pos:end="7:30">[<expr pos:start="7:29" pos:end="7:29"><literal type="number" pos:start="7:29" pos:end="7:29">0</literal></expr>]</index><index pos:start="7:31" pos:end="7:33">[<expr pos:start="7:32" pos:end="7:32"><name pos:start="7:32" pos:end="7:32">i</name></expr>]</index></name><operator pos:start="7:34" pos:end="7:34">.</operator><name pos:start="7:35" pos:end="7:37">poc</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">td</name> <init pos:start="9:12" pos:end="9:38">= <expr pos:start="9:14" pos:end="9:38"><call pos:start="9:14" pos:end="9:38"><name pos:start="9:14" pos:end="9:25">av_clip_int8</name><argument_list pos:start="9:26" pos:end="9:38">(<argument pos:start="9:27" pos:end="9:37"><expr pos:start="9:27" pos:end="9:37"><name pos:start="9:27" pos:end="9:30">poc1</name> <operator pos:start="9:32" pos:end="9:32">-</operator> <name pos:start="9:34" pos:end="9:37">poc0</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:55">(<expr pos:start="11:9" pos:end="11:54"><name pos:start="11:9" pos:end="11:10">td</name> <operator pos:start="11:12" pos:end="11:13">==</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal> <operator pos:start="11:17" pos:end="11:18">||</operator> <name pos:start="11:20" pos:end="11:37"><name pos:start="11:20" pos:end="11:21">sl</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:31">ref_list</name><index pos:start="11:32" pos:end="11:34">[<expr pos:start="11:33" pos:end="11:33"><literal type="number" pos:start="11:33" pos:end="11:33">0</literal></expr>]</index><index pos:start="11:35" pos:end="11:37">[<expr pos:start="11:36" pos:end="11:36"><name pos:start="11:36" pos:end="11:36">i</name></expr>]</index></name><operator pos:start="11:38" pos:end="11:38">.</operator><name pos:start="11:39" pos:end="11:54"><name pos:start="11:39" pos:end="11:44">parent</name><operator pos:start="11:45" pos:end="11:46">-&gt;</operator><name pos:start="11:47" pos:end="11:54">long_ref</name></name></expr>)</condition> <block pos:start="11:57" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:19">

        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><literal type="number" pos:start="13:16" pos:end="13:18">256</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="23:5">else <block pos:start="15:12" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:54">

        <decl_stmt pos:start="17:9" pos:end="17:42"><decl pos:start="17:9" pos:end="17:41"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:14">tb</name> <init pos:start="17:16" pos:end="17:41">= <expr pos:start="17:18" pos:end="17:41"><call pos:start="17:18" pos:end="17:41"><name pos:start="17:18" pos:end="17:29">av_clip_int8</name><argument_list pos:start="17:30" pos:end="17:41">(<argument pos:start="17:31" pos:end="17:40"><expr pos:start="17:31" pos:end="17:40"><name pos:start="17:31" pos:end="17:33">poc</name> <operator pos:start="17:35" pos:end="17:35">-</operator> <name pos:start="17:37" pos:end="17:40">poc0</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:49"><decl pos:start="19:9" pos:end="19:48"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:14">tx</name> <init pos:start="19:16" pos:end="19:48">= <expr pos:start="19:18" pos:end="19:48"><operator pos:start="19:18" pos:end="19:18">(</operator><literal type="number" pos:start="19:19" pos:end="19:25">16384</literal> <operator pos:start="19:25" pos:end="19:25">+</operator> <operator pos:start="19:27" pos:end="19:27">(</operator><call pos:start="19:28" pos:end="19:36"><name pos:start="19:28" pos:end="19:32">FFABS</name><argument_list pos:start="19:33" pos:end="19:36">(<argument pos:start="19:34" pos:end="19:35"><expr pos:start="19:34" pos:end="19:35"><name pos:start="19:34" pos:end="19:35">td</name></expr></argument>)</argument_list></call> <operator pos:start="19:38" pos:end="19:39">&gt;&gt;</operator> <literal type="number" pos:start="19:41" pos:end="19:41">1</literal><operator pos:start="19:42" pos:end="19:42">)</operator><operator pos:start="19:43" pos:end="19:43">)</operator> <operator pos:start="19:45" pos:end="19:45">/</operator> <name pos:start="19:47" pos:end="19:48">td</name></expr></init></decl>;</decl_stmt>

        <return pos:start="21:9" pos:end="21:54">return <expr pos:start="21:16" pos:end="21:53"><call pos:start="21:16" pos:end="21:53"><name pos:start="21:16" pos:end="21:28">av_clip_intp2</name><argument_list pos:start="21:29" pos:end="21:53">(<argument pos:start="21:30" pos:end="21:48"><expr pos:start="21:30" pos:end="21:48"><operator pos:start="21:30" pos:end="21:30">(</operator><name pos:start="21:31" pos:end="21:32">tb</name> <operator pos:start="21:34" pos:end="21:34">*</operator> <name pos:start="21:36" pos:end="21:37">tx</name> <operator pos:start="21:39" pos:end="21:39">+</operator> <literal type="number" pos:start="21:41" pos:end="21:42">32</literal><operator pos:start="21:43" pos:end="21:43">)</operator> <operator pos:start="21:45" pos:end="21:46">&gt;&gt;</operator> <literal type="number" pos:start="21:48" pos:end="21:48">6</literal></expr></argument>, <argument pos:start="21:51" pos:end="21:52"><expr pos:start="21:51" pos:end="21:52"><literal type="number" pos:start="21:51" pos:end="21:52">10</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
