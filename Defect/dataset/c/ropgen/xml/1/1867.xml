<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1867.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">virtio_net_vhost_status</name><parameter_list pos:start="1:36" pos:end="1:65">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:45">VirtIONet</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">n</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:57">uint8_t</name></type> <name pos:start="1:59" pos:end="1:64">status</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:5">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VirtIODevice</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">vdev</name> <init pos:start="5:24" pos:end="5:41">= <expr pos:start="5:26" pos:end="5:41"><call pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:38">VIRTIO_DEVICE</name><argument_list pos:start="5:39" pos:end="5:41">(<argument pos:start="5:40" pos:end="5:40"><expr pos:start="5:40" pos:end="5:40"><name pos:start="5:40" pos:end="5:40">n</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">NetClientState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:22">nc</name> <init pos:start="7:24" pos:end="7:47">= <expr pos:start="7:26" pos:end="7:47"><call pos:start="7:26" pos:end="7:47"><name pos:start="7:26" pos:end="7:39">qemu_get_queue</name><argument_list pos:start="7:40" pos:end="7:47">(<argument pos:start="7:41" pos:end="7:46"><expr pos:start="7:41" pos:end="7:46"><name pos:start="7:41" pos:end="7:46"><name pos:start="7:41" pos:end="7:41">n</name><operator pos:start="7:42" pos:end="7:43">-&gt;</operator><name pos:start="7:44" pos:end="7:46">nic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">queues</name> <init pos:start="9:16" pos:end="9:50">= <expr pos:start="9:18" pos:end="9:50"><ternary pos:start="9:18" pos:end="9:50"><condition pos:start="9:18" pos:end="9:32"><expr pos:start="9:18" pos:end="9:30"><name pos:start="9:18" pos:end="9:30"><name pos:start="9:18" pos:end="9:18">n</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:30">multiqueue</name></name></expr> ?</condition><then pos:start="9:34" pos:end="9:46"> <expr pos:start="9:34" pos:end="9:46"><name pos:start="9:34" pos:end="9:46"><name pos:start="9:34" pos:end="9:34">n</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:46">max_queues</name></name></expr> </then><else pos:start="9:48" pos:end="9:50">: <expr pos:start="9:50" pos:end="9:50"><literal type="number" pos:start="9:50" pos:end="9:50">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:33">(<expr pos:start="13:9" pos:end="13:32"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:32"><name pos:start="13:10" pos:end="13:22">get_vhost_net</name><argument_list pos:start="13:23" pos:end="13:32">(<argument pos:start="13:24" pos:end="13:31"><expr pos:start="13:24" pos:end="13:31"><name pos:start="13:24" pos:end="13:31"><name pos:start="13:24" pos:end="13:25">nc</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:31">peer</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:35" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="23:27">(<expr pos:start="21:9" pos:end="23:26"><operator pos:start="21:9" pos:end="21:9">(</operator><call pos:start="21:10" pos:end="21:38"><name pos:start="21:10" pos:end="21:27">virtio_net_started</name><argument_list pos:start="21:28" pos:end="21:38">(<argument pos:start="21:29" pos:end="21:29"><expr pos:start="21:29" pos:end="21:29"><name pos:start="21:29" pos:end="21:29">n</name></expr></argument>, <argument pos:start="21:32" pos:end="21:37"><expr pos:start="21:32" pos:end="21:37"><name pos:start="21:32" pos:end="21:37">status</name></expr></argument>)</argument_list></call> <operator pos:start="21:40" pos:end="21:41">&amp;&amp;</operator> <operator pos:start="21:43" pos:end="21:43">!</operator><name pos:start="21:44" pos:end="21:62"><name pos:start="21:44" pos:end="21:45">nc</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:51">peer</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:62">link_down</name></name><operator pos:start="21:63" pos:end="21:63">)</operator> <operator pos:start="21:65" pos:end="21:66">==</operator>

        <operator pos:start="23:9" pos:end="23:9">!</operator><operator pos:start="23:10" pos:end="23:10">!</operator><name pos:start="23:11" pos:end="23:26"><name pos:start="23:11" pos:end="23:11">n</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:26">vhost_started</name></name></expr>)</condition> <block pos:start="23:29" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="85:5"><if pos:start="29:5" pos:end="79:5">if <condition pos:start="29:8" pos:end="29:26">(<expr pos:start="29:9" pos:end="29:25"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:25"><name pos:start="29:10" pos:end="29:10">n</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:25">vhost_started</name></name></expr>)</condition> <block pos:start="29:28" pos:end="79:5">{<block_content pos:start="31:9" pos:end="77:9">

        <decl_stmt pos:start="31:9" pos:end="31:17"><decl pos:start="31:9" pos:end="31:13"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">r</name></decl>, <decl pos:start="31:16" pos:end="31:16"><type ref="prev" pos:start="31:9" pos:end="31:11"/><name pos:start="31:16" pos:end="31:16">i</name></decl>;</decl_stmt>



        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:60">(<expr pos:start="35:13" pos:end="35:59"><operator pos:start="35:13" pos:end="35:13">!</operator><call pos:start="35:14" pos:end="35:59"><name pos:start="35:14" pos:end="35:28">vhost_net_query</name><argument_list pos:start="35:29" pos:end="35:59">(<argument pos:start="35:30" pos:end="35:52"><expr pos:start="35:30" pos:end="35:52"><call pos:start="35:30" pos:end="35:52"><name pos:start="35:30" pos:end="35:42">get_vhost_net</name><argument_list pos:start="35:43" pos:end="35:52">(<argument pos:start="35:44" pos:end="35:51"><expr pos:start="35:44" pos:end="35:51"><name pos:start="35:44" pos:end="35:51"><name pos:start="35:44" pos:end="35:45">nc</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:51">peer</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:55" pos:end="35:58"><expr pos:start="35:55" pos:end="35:58"><name pos:start="35:55" pos:end="35:58">vdev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:62" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:19">

            <return pos:start="37:13" pos:end="37:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="43:9" pos:end="47:11">/* Any packets outstanding? Purge them to avoid touching rings

         * when vhost is running.

         */</comment>

        <for pos:start="49:9" pos:end="61:9">for <control pos:start="49:13" pos:end="49:37">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">i</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init>  <condition pos:start="49:22" pos:end="49:32"><expr pos:start="49:22" pos:end="49:31"><name pos:start="49:22" pos:end="49:22">i</name> <operator pos:start="49:24" pos:end="49:24">&lt;</operator> <name pos:start="49:26" pos:end="49:31">queues</name></expr>;</condition> <incr pos:start="49:34" pos:end="49:36"><expr pos:start="49:34" pos:end="49:36"><name pos:start="49:34" pos:end="49:34">i</name><operator pos:start="49:35" pos:end="49:36">++</operator></expr></incr>)</control> <block pos:start="49:39" pos:end="61:9">{<block_content pos:start="51:13" pos:end="59:65">

            <decl_stmt pos:start="51:13" pos:end="51:63"><decl pos:start="51:13" pos:end="51:62"><type pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:26">NetClientState</name> <modifier pos:start="51:28" pos:end="51:28">*</modifier></type><name pos:start="51:29" pos:end="51:31">qnc</name> <init pos:start="51:33" pos:end="51:62">= <expr pos:start="51:35" pos:end="51:62"><call pos:start="51:35" pos:end="51:62"><name pos:start="51:35" pos:end="51:51">qemu_get_subqueue</name><argument_list pos:start="51:52" pos:end="51:62">(<argument pos:start="51:53" pos:end="51:58"><expr pos:start="51:53" pos:end="51:58"><name pos:start="51:53" pos:end="51:58"><name pos:start="51:53" pos:end="51:53">n</name><operator pos:start="51:54" pos:end="51:55">-&gt;</operator><name pos:start="51:56" pos:end="51:58">nic</name></name></expr></argument>, <argument pos:start="51:61" pos:end="51:61"><expr pos:start="51:61" pos:end="51:61"><name pos:start="51:61" pos:end="51:61">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <comment type="block" pos:start="55:13" pos:end="55:51">/* Purge both directions: TX and RX. */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:65"><expr pos:start="57:13" pos:end="57:64"><call pos:start="57:13" pos:end="57:64"><name pos:start="57:13" pos:end="57:32">qemu_net_queue_purge</name><argument_list pos:start="57:33" pos:end="57:64">(<argument pos:start="57:34" pos:end="57:58"><expr pos:start="57:34" pos:end="57:58"><name pos:start="57:34" pos:end="57:58"><name pos:start="57:34" pos:end="57:36">qnc</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:42">peer</name><operator pos:start="57:43" pos:end="57:44">-&gt;</operator><name pos:start="57:45" pos:end="57:58">incoming_queue</name></name></expr></argument>, <argument pos:start="57:61" pos:end="57:63"><expr pos:start="57:61" pos:end="57:63"><name pos:start="57:61" pos:end="57:63">qnc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:65"><expr pos:start="59:13" pos:end="59:64"><call pos:start="59:13" pos:end="59:64"><name pos:start="59:13" pos:end="59:32">qemu_net_queue_purge</name><argument_list pos:start="59:33" pos:end="59:64">(<argument pos:start="59:34" pos:end="59:52"><expr pos:start="59:34" pos:end="59:52"><name pos:start="59:34" pos:end="59:52"><name pos:start="59:34" pos:end="59:36">qnc</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:52">incoming_queue</name></name></expr></argument>, <argument pos:start="59:55" pos:end="59:63"><expr pos:start="59:55" pos:end="59:63"><name pos:start="59:55" pos:end="59:63"><name pos:start="59:55" pos:end="59:57">qnc</name><operator pos:start="59:58" pos:end="59:59">-&gt;</operator><name pos:start="59:60" pos:end="59:63">peer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="65:9" pos:end="65:29"><expr pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:9">n</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:24">vhost_started</name></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <literal type="number" pos:start="65:28" pos:end="65:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:55"><expr pos:start="67:9" pos:end="67:54"><name pos:start="67:9" pos:end="67:9">r</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <call pos:start="67:13" pos:end="67:54"><name pos:start="67:13" pos:end="67:27">vhost_net_start</name><argument_list pos:start="67:28" pos:end="67:54">(<argument pos:start="67:29" pos:end="67:32"><expr pos:start="67:29" pos:end="67:32"><name pos:start="67:29" pos:end="67:32">vdev</name></expr></argument>, <argument pos:start="67:35" pos:end="67:45"><expr pos:start="67:35" pos:end="67:45"><name pos:start="67:35" pos:end="67:45"><name pos:start="67:35" pos:end="67:35">n</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:40">nic</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:45">ncs</name></name></expr></argument>, <argument pos:start="67:48" pos:end="67:53"><expr pos:start="67:48" pos:end="67:53"><name pos:start="67:48" pos:end="67:53">queues</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="77:9"><if pos:start="69:9" pos:end="77:9">if <condition pos:start="69:12" pos:end="69:18">(<expr pos:start="69:13" pos:end="69:17"><name pos:start="69:13" pos:end="69:13">r</name> <operator pos:start="69:15" pos:end="69:15">&lt;</operator> <literal type="number" pos:start="69:17" pos:end="69:17">0</literal></expr>)</condition> <block pos:start="69:20" pos:end="77:9">{<block_content pos:start="71:13" pos:end="75:33">

            <expr_stmt pos:start="71:13" pos:end="73:65"><expr pos:start="71:13" pos:end="73:64"><call pos:start="71:13" pos:end="73:64"><name pos:start="71:13" pos:end="71:24">error_report</name><argument_list pos:start="71:25" pos:end="73:64">(<argument pos:start="71:26" pos:end="73:59"><expr pos:start="71:26" pos:end="73:59"><literal type="string" pos:start="71:26" pos:end="71:58">"unable to start vhost net: %d: "</literal>

                         <literal type="string" pos:start="73:26" pos:end="73:59">"falling back on userspace virtio"</literal></expr></argument>, <argument pos:start="73:62" pos:end="73:63"><expr pos:start="73:62" pos:end="73:63"><operator pos:start="73:62" pos:end="73:62">-</operator><name pos:start="73:63" pos:end="73:63">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:33"><expr pos:start="75:13" pos:end="75:32"><name pos:start="75:13" pos:end="75:28"><name pos:start="75:13" pos:end="75:13">n</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:28">vhost_started</name></name> <operator pos:start="75:30" pos:end="75:30">=</operator> <literal type="number" pos:start="75:32" pos:end="75:32">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="85:5">else <block pos:start="79:12" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:29">

        <expr_stmt pos:start="81:9" pos:end="81:50"><expr pos:start="81:9" pos:end="81:49"><call pos:start="81:9" pos:end="81:49"><name pos:start="81:9" pos:end="81:22">vhost_net_stop</name><argument_list pos:start="81:23" pos:end="81:49">(<argument pos:start="81:24" pos:end="81:27"><expr pos:start="81:24" pos:end="81:27"><name pos:start="81:24" pos:end="81:27">vdev</name></expr></argument>, <argument pos:start="81:30" pos:end="81:40"><expr pos:start="81:30" pos:end="81:40"><name pos:start="81:30" pos:end="81:40"><name pos:start="81:30" pos:end="81:30">n</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:35">nic</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:40">ncs</name></name></expr></argument>, <argument pos:start="81:43" pos:end="81:48"><expr pos:start="81:43" pos:end="81:48"><name pos:start="81:43" pos:end="81:48">queues</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:29"><expr pos:start="83:9" pos:end="83:28"><name pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:9">n</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:24">vhost_started</name></name> <operator pos:start="83:26" pos:end="83:26">=</operator> <literal type="number" pos:start="83:28" pos:end="83:28">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
