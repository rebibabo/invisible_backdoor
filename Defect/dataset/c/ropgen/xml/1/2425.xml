<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2425.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">patch_reloc</name><parameter_list pos:start="1:24" pos:end="3:56">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:31">uint8_t</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:41">code_ptr</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:51"><decl pos:start="1:44" pos:end="1:51"><type pos:start="1:44" pos:end="1:51"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:51">type</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:38"><decl pos:start="3:25" pos:end="3:38"><type pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:32">intptr_t</name></type> <name pos:start="3:34" pos:end="3:38">value</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:55"><decl pos:start="3:41" pos:end="3:55"><type pos:start="3:41" pos:end="3:55"><name pos:start="3:41" pos:end="3:48">intptr_t</name></type> <name pos:start="3:50" pos:end="3:55">addend</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:5">

    <expr_stmt pos:start="7:5" pos:end="7:20"><expr pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:9">value</name> <operator pos:start="7:11" pos:end="7:12">+=</operator> <name pos:start="7:14" pos:end="7:19">addend</name></expr>;</expr_stmt>

    <switch pos:start="9:5" pos:end="43:5">switch<condition pos:start="9:11" pos:end="9:16">(<expr pos:start="9:12" pos:end="9:15"><name pos:start="9:12" pos:end="9:15">type</name></expr>)</condition> <block pos:start="9:18" pos:end="43:5">{<block_content pos:start="11:5" pos:end="41:20">

    <case pos:start="11:5" pos:end="11:20">case <expr pos:start="11:10" pos:end="11:19"><name pos:start="11:10" pos:end="11:19">R_386_PC32</name></expr>:</case>

        <expr_stmt pos:start="13:9" pos:end="13:37"><expr pos:start="13:9" pos:end="13:36"><name pos:start="13:9" pos:end="13:13">value</name> <operator pos:start="13:15" pos:end="13:16">-=</operator> <operator pos:start="13:18" pos:end="13:18">(</operator><name pos:start="13:19" pos:end="13:27">uintptr_t</name><operator pos:start="13:28" pos:end="13:28">)</operator><name pos:start="13:29" pos:end="13:36">code_ptr</name></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:36">(<expr pos:start="15:13" pos:end="15:35"><name pos:start="15:13" pos:end="15:17">value</name> <operator pos:start="15:19" pos:end="15:20">!=</operator> <operator pos:start="15:22" pos:end="15:22">(</operator><name pos:start="15:23" pos:end="15:29">int32_t</name><operator pos:start="15:30" pos:end="15:30">)</operator><name pos:start="15:31" pos:end="15:35">value</name></expr>)</condition> <block pos:start="15:38" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:24">

            <expr_stmt pos:start="17:13" pos:end="17:24"><expr pos:start="17:13" pos:end="17:23"><call pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:21">tcg_abort</name><argument_list pos:start="17:22" pos:end="17:23">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:38"><expr pos:start="21:9" pos:end="21:37"><operator pos:start="21:9" pos:end="21:9">*</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:18">uint32_t</name> <operator pos:start="21:20" pos:end="21:20">*</operator><operator pos:start="21:21" pos:end="21:21">)</operator><name pos:start="21:22" pos:end="21:29">code_ptr</name> <operator pos:start="21:31" pos:end="21:31">=</operator> <name pos:start="21:33" pos:end="21:37">value</name></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:19">case <expr pos:start="25:10" pos:end="25:18"><name pos:start="25:10" pos:end="25:18">R_386_PC8</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:37"><expr pos:start="27:9" pos:end="27:36"><name pos:start="27:9" pos:end="27:13">value</name> <operator pos:start="27:15" pos:end="27:16">-=</operator> <operator pos:start="27:18" pos:end="27:18">(</operator><name pos:start="27:19" pos:end="27:27">uintptr_t</name><operator pos:start="27:28" pos:end="27:28">)</operator><name pos:start="27:29" pos:end="27:36">code_ptr</name></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:35">(<expr pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:17">value</name> <operator pos:start="29:19" pos:end="29:20">!=</operator> <operator pos:start="29:22" pos:end="29:22">(</operator><name pos:start="29:23" pos:end="29:28">int8_t</name><operator pos:start="29:29" pos:end="29:29">)</operator><name pos:start="29:30" pos:end="29:34">value</name></expr>)</condition> <block pos:start="29:37" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:24">

            <expr_stmt pos:start="31:13" pos:end="31:24"><expr pos:start="31:13" pos:end="31:23"><call pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:21">tcg_abort</name><argument_list pos:start="31:22" pos:end="31:23">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><operator pos:start="35:9" pos:end="35:9">*</operator><operator pos:start="35:10" pos:end="35:10">(</operator><name pos:start="35:11" pos:end="35:17">uint8_t</name> <operator pos:start="35:19" pos:end="35:19">*</operator><operator pos:start="35:20" pos:end="35:20">)</operator><name pos:start="35:21" pos:end="35:28">code_ptr</name> <operator pos:start="35:30" pos:end="35:30">=</operator> <name pos:start="35:32" pos:end="35:36">value</name></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <default pos:start="39:5" pos:end="39:12">default:</default>

        <expr_stmt pos:start="41:9" pos:end="41:20"><expr pos:start="41:9" pos:end="41:19"><call pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:17">tcg_abort</name><argument_list pos:start="41:18" pos:end="41:19">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
