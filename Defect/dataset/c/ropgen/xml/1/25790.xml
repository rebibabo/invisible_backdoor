<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25790.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:43">ff_vc1_decode_init_alloc_tables</name><parameter_list pos:start="1:44" pos:end="1:58">(<parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:54">VC1Context</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:27">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">mb_height</name> <init pos:start="9:19" pos:end="9:44">= <expr pos:start="9:21" pos:end="9:44"><call pos:start="9:21" pos:end="9:44"><name pos:start="9:21" pos:end="9:27">FFALIGN</name><argument_list pos:start="9:28" pos:end="9:44">(<argument pos:start="9:29" pos:end="9:40"><expr pos:start="9:29" pos:end="9:40"><name pos:start="9:29" pos:end="9:40"><name pos:start="9:29" pos:end="9:29">s</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:40">mb_height</name></name></expr></argument>, <argument pos:start="9:43" pos:end="9:43"><expr pos:start="9:43" pos:end="9:43"><literal type="number" pos:start="9:43" pos:end="9:43">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:31">/* Allocate mb bitplanes */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:63"><expr pos:start="15:5" pos:end="15:62"><name pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:5">v</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:23">mv_type_mb_plane</name></name> <operator pos:start="15:25" pos:end="15:25">=</operator> <call pos:start="15:27" pos:end="15:62"><name pos:start="15:27" pos:end="15:35">av_malloc</name> <argument_list pos:start="15:37" pos:end="15:62">(<argument pos:start="15:38" pos:end="15:61"><expr pos:start="15:38" pos:end="15:61"><name pos:start="15:38" pos:end="15:49"><name pos:start="15:38" pos:end="15:38">s</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:49">mb_stride</name></name> <operator pos:start="15:51" pos:end="15:51">*</operator> <name pos:start="15:53" pos:end="15:61">mb_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:63"><expr pos:start="17:5" pos:end="17:62"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:5">v</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:22">direct_mb_plane</name></name>  <operator pos:start="17:25" pos:end="17:25">=</operator> <call pos:start="17:27" pos:end="17:62"><name pos:start="17:27" pos:end="17:35">av_malloc</name> <argument_list pos:start="17:37" pos:end="17:62">(<argument pos:start="17:38" pos:end="17:61"><expr pos:start="17:38" pos:end="17:61"><name pos:start="17:38" pos:end="17:49"><name pos:start="17:38" pos:end="17:38">s</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:49">mb_stride</name></name> <operator pos:start="17:51" pos:end="17:51">*</operator> <name pos:start="17:53" pos:end="17:61">mb_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:63"><expr pos:start="19:5" pos:end="19:62"><name pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:5">v</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:23">forward_mb_plane</name></name> <operator pos:start="19:25" pos:end="19:25">=</operator> <call pos:start="19:27" pos:end="19:62"><name pos:start="19:27" pos:end="19:35">av_malloc</name> <argument_list pos:start="19:37" pos:end="19:62">(<argument pos:start="19:38" pos:end="19:61"><expr pos:start="19:38" pos:end="19:61"><name pos:start="19:38" pos:end="19:49"><name pos:start="19:38" pos:end="19:38">s</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:49">mb_stride</name></name> <operator pos:start="19:51" pos:end="19:51">*</operator> <name pos:start="19:53" pos:end="19:61">mb_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:63"><expr pos:start="21:5" pos:end="21:62"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:5">v</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:20">fieldtx_plane</name></name>    <operator pos:start="21:25" pos:end="21:25">=</operator> <call pos:start="21:27" pos:end="21:62"><name pos:start="21:27" pos:end="21:36">av_mallocz</name><argument_list pos:start="21:37" pos:end="21:62">(<argument pos:start="21:38" pos:end="21:61"><expr pos:start="21:38" pos:end="21:61"><name pos:start="21:38" pos:end="21:49"><name pos:start="21:38" pos:end="21:38">s</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:49">mb_stride</name></name> <operator pos:start="21:51" pos:end="21:51">*</operator> <name pos:start="21:53" pos:end="21:61">mb_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:63"><expr pos:start="23:5" pos:end="23:62"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:5">v</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:19">acpred_plane</name></name>     <operator pos:start="23:25" pos:end="23:25">=</operator> <call pos:start="23:27" pos:end="23:62"><name pos:start="23:27" pos:end="23:35">av_malloc</name> <argument_list pos:start="23:37" pos:end="23:62">(<argument pos:start="23:38" pos:end="23:61"><expr pos:start="23:38" pos:end="23:61"><name pos:start="23:38" pos:end="23:49"><name pos:start="23:38" pos:end="23:38">s</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:49">mb_stride</name></name> <operator pos:start="23:51" pos:end="23:51">*</operator> <name pos:start="23:53" pos:end="23:61">mb_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:63"><expr pos:start="25:5" pos:end="25:62"><name pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:5">v</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:23">over_flags_plane</name></name> <operator pos:start="25:25" pos:end="25:25">=</operator> <call pos:start="25:27" pos:end="25:62"><name pos:start="25:27" pos:end="25:35">av_malloc</name> <argument_list pos:start="25:37" pos:end="25:62">(<argument pos:start="25:38" pos:end="25:61"><expr pos:start="25:38" pos:end="25:61"><name pos:start="25:38" pos:end="25:49"><name pos:start="25:38" pos:end="25:38">s</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:49">mb_stride</name></name> <operator pos:start="25:51" pos:end="25:51">*</operator> <name pos:start="25:53" pos:end="25:61">mb_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:5">v</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:23">n_allocated_blks</name></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <name pos:start="29:27" pos:end="29:37"><name pos:start="29:27" pos:end="29:27">s</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:37">mb_width</name></name> <operator pos:start="29:39" pos:end="29:39">+</operator> <literal type="number" pos:start="29:41" pos:end="29:41">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:77"><expr pos:start="31:5" pos:end="31:76"><name pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:5">v</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:12">block</name></name>            <operator pos:start="31:25" pos:end="31:25">=</operator> <call pos:start="31:27" pos:end="31:76"><name pos:start="31:27" pos:end="31:35">av_malloc</name><argument_list pos:start="31:36" pos:end="31:76">(<argument pos:start="31:37" pos:end="31:75"><expr pos:start="31:37" pos:end="31:75"><sizeof pos:start="31:37" pos:end="31:53">sizeof<argument_list pos:start="31:43" pos:end="31:53">(<argument pos:start="31:44" pos:end="31:52"><expr pos:start="31:44" pos:end="31:52"><operator pos:start="31:44" pos:end="31:44">*</operator><name pos:start="31:45" pos:end="31:52"><name pos:start="31:45" pos:end="31:45">v</name><operator pos:start="31:46" pos:end="31:47">-&gt;</operator><name pos:start="31:48" pos:end="31:52">block</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="31:55" pos:end="31:55">*</operator> <name pos:start="31:57" pos:end="31:75"><name pos:start="31:57" pos:end="31:57">v</name><operator pos:start="31:58" pos:end="31:59">-&gt;</operator><name pos:start="31:60" pos:end="31:75">n_allocated_blks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:79"><expr pos:start="33:5" pos:end="33:78"><name pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:5">v</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:15">cbp_base</name></name>         <operator pos:start="33:25" pos:end="33:25">=</operator> <call pos:start="33:27" pos:end="33:78"><name pos:start="33:27" pos:end="33:35">av_malloc</name><argument_list pos:start="33:36" pos:end="33:78">(<argument pos:start="33:37" pos:end="33:77"><expr pos:start="33:37" pos:end="33:77"><sizeof pos:start="33:37" pos:end="33:58">sizeof<argument_list pos:start="33:43" pos:end="33:58">(<argument pos:start="33:44" pos:end="33:57"><expr pos:start="33:44" pos:end="33:57"><name pos:start="33:44" pos:end="33:57"><name pos:start="33:44" pos:end="33:44">v</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:54">cbp_base</name><index pos:start="33:55" pos:end="33:57">[<expr pos:start="33:56" pos:end="33:56"><literal type="number" pos:start="33:56" pos:end="33:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="33:60" pos:end="33:60">*</operator> <literal type="number" pos:start="33:62" pos:end="33:62">2</literal> <operator pos:start="33:64" pos:end="33:64">*</operator> <name pos:start="33:66" pos:end="33:77"><name pos:start="33:66" pos:end="33:66">s</name><operator pos:start="33:67" pos:end="33:68">-&gt;</operator><name pos:start="33:69" pos:end="33:77">mb_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:10"><name pos:start="35:5" pos:end="35:5">v</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:10">cbp</name></name>              <operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:37"><name pos:start="35:27" pos:end="35:27">v</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:37">cbp_base</name></name> <operator pos:start="35:39" pos:end="35:39">+</operator> <name pos:start="35:41" pos:end="35:52"><name pos:start="35:41" pos:end="35:41">s</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:52">mb_stride</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:81"><expr pos:start="37:5" pos:end="37:80"><name pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:5">v</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:17">ttblk_base</name></name>       <operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="37:80"><name pos:start="37:27" pos:end="37:35">av_malloc</name><argument_list pos:start="37:36" pos:end="37:80">(<argument pos:start="37:37" pos:end="37:79"><expr pos:start="37:37" pos:end="37:79"><sizeof pos:start="37:37" pos:end="37:60">sizeof<argument_list pos:start="37:43" pos:end="37:60">(<argument pos:start="37:44" pos:end="37:59"><expr pos:start="37:44" pos:end="37:59"><name pos:start="37:44" pos:end="37:59"><name pos:start="37:44" pos:end="37:44">v</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:56">ttblk_base</name><index pos:start="37:57" pos:end="37:59">[<expr pos:start="37:58" pos:end="37:58"><literal type="number" pos:start="37:58" pos:end="37:58">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="37:62" pos:end="37:62">*</operator> <literal type="number" pos:start="37:64" pos:end="37:64">2</literal> <operator pos:start="37:66" pos:end="37:66">*</operator> <name pos:start="37:68" pos:end="37:79"><name pos:start="37:68" pos:end="37:68">s</name><operator pos:start="37:69" pos:end="37:70">-&gt;</operator><name pos:start="37:71" pos:end="37:79">mb_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:55"><expr pos:start="39:5" pos:end="39:54"><name pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:5">v</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:12">ttblk</name></name>            <operator pos:start="39:25" pos:end="39:25">=</operator> <name pos:start="39:27" pos:end="39:39"><name pos:start="39:27" pos:end="39:27">v</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:39">ttblk_base</name></name> <operator pos:start="39:41" pos:end="39:41">+</operator> <name pos:start="39:43" pos:end="39:54"><name pos:start="39:43" pos:end="39:43">s</name><operator pos:start="39:44" pos:end="39:45">-&gt;</operator><name pos:start="39:46" pos:end="39:54">mb_stride</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:85"><expr pos:start="41:5" pos:end="41:84"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:5">v</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:20">is_intra_base</name></name>    <operator pos:start="41:25" pos:end="41:25">=</operator> <call pos:start="41:27" pos:end="41:84"><name pos:start="41:27" pos:end="41:36">av_mallocz</name><argument_list pos:start="41:37" pos:end="41:84">(<argument pos:start="41:38" pos:end="41:83"><expr pos:start="41:38" pos:end="41:83"><sizeof pos:start="41:38" pos:end="41:64">sizeof<argument_list pos:start="41:44" pos:end="41:64">(<argument pos:start="41:45" pos:end="41:63"><expr pos:start="41:45" pos:end="41:63"><name pos:start="41:45" pos:end="41:63"><name pos:start="41:45" pos:end="41:45">v</name><operator pos:start="41:46" pos:end="41:47">-&gt;</operator><name pos:start="41:48" pos:end="41:60">is_intra_base</name><index pos:start="41:61" pos:end="41:63">[<expr pos:start="41:62" pos:end="41:62"><literal type="number" pos:start="41:62" pos:end="41:62">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="41:66" pos:end="41:66">*</operator> <literal type="number" pos:start="41:68" pos:end="41:68">2</literal> <operator pos:start="41:70" pos:end="41:70">*</operator> <name pos:start="41:72" pos:end="41:83"><name pos:start="41:72" pos:end="41:72">s</name><operator pos:start="41:73" pos:end="41:74">-&gt;</operator><name pos:start="41:75" pos:end="41:83">mb_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:58"><expr pos:start="43:5" pos:end="43:57"><name pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:5">v</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:15">is_intra</name></name>         <operator pos:start="43:25" pos:end="43:25">=</operator> <name pos:start="43:27" pos:end="43:42"><name pos:start="43:27" pos:end="43:27">v</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:42">is_intra_base</name></name> <operator pos:start="43:44" pos:end="43:44">+</operator> <name pos:start="43:46" pos:end="43:57"><name pos:start="43:46" pos:end="43:46">s</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:57">mb_stride</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:83"><expr pos:start="45:5" pos:end="45:82"><name pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:5">v</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:19">luma_mv_base</name></name>     <operator pos:start="45:25" pos:end="45:25">=</operator> <call pos:start="45:27" pos:end="45:82"><name pos:start="45:27" pos:end="45:35">av_malloc</name><argument_list pos:start="45:36" pos:end="45:82">(<argument pos:start="45:37" pos:end="45:81"><expr pos:start="45:37" pos:end="45:81"><sizeof pos:start="45:37" pos:end="45:62">sizeof<argument_list pos:start="45:43" pos:end="45:62">(<argument pos:start="45:44" pos:end="45:61"><expr pos:start="45:44" pos:end="45:61"><name pos:start="45:44" pos:end="45:61"><name pos:start="45:44" pos:end="45:44">v</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:58">luma_mv_base</name><index pos:start="45:59" pos:end="45:61">[<expr pos:start="45:60" pos:end="45:60"><literal type="number" pos:start="45:60" pos:end="45:60">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="45:64" pos:end="45:64">*</operator> <literal type="number" pos:start="45:66" pos:end="45:66">2</literal> <operator pos:start="45:68" pos:end="45:68">*</operator> <name pos:start="45:70" pos:end="45:81"><name pos:start="45:70" pos:end="45:70">s</name><operator pos:start="45:71" pos:end="45:72">-&gt;</operator><name pos:start="45:73" pos:end="45:81">mb_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:57"><expr pos:start="47:5" pos:end="47:56"><name pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:5">v</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:14">luma_mv</name></name>          <operator pos:start="47:25" pos:end="47:25">=</operator> <name pos:start="47:27" pos:end="47:41"><name pos:start="47:27" pos:end="47:27">v</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:41">luma_mv_base</name></name> <operator pos:start="47:43" pos:end="47:43">+</operator> <name pos:start="47:45" pos:end="47:56"><name pos:start="47:45" pos:end="47:45">s</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:56">mb_stride</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:88">/* allocate block type info in that way so it could be used with s-&gt;block_index[] */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:105"><expr pos:start="53:5" pos:end="53:104"><name pos:start="53:5" pos:end="53:19"><name pos:start="53:5" pos:end="53:5">v</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:19">mb_type_base</name></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:104"><name pos:start="53:23" pos:end="53:31">av_malloc</name><argument_list pos:start="53:32" pos:end="53:104">(<argument pos:start="53:33" pos:end="53:103"><expr pos:start="53:33" pos:end="53:103"><name pos:start="53:33" pos:end="53:44"><name pos:start="53:33" pos:end="53:33">s</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:44">b8_stride</name></name> <operator pos:start="53:46" pos:end="53:46">*</operator> <operator pos:start="53:48" pos:end="53:48">(</operator><name pos:start="53:49" pos:end="53:57">mb_height</name> <operator pos:start="53:59" pos:end="53:59">*</operator> <literal type="number" pos:start="53:61" pos:end="53:63">2</literal> <operator pos:start="53:63" pos:end="53:63">+</operator> <literal type="number" pos:start="53:65" pos:end="53:65">1</literal><operator pos:start="53:66" pos:end="53:66">)</operator> <operator pos:start="53:68" pos:end="53:68">+</operator> <name pos:start="53:70" pos:end="53:81"><name pos:start="53:70" pos:end="53:70">s</name><operator pos:start="53:71" pos:end="53:72">-&gt;</operator><name pos:start="53:73" pos:end="53:81">mb_stride</name></name> <operator pos:start="53:83" pos:end="53:83">*</operator> <operator pos:start="53:85" pos:end="53:85">(</operator><name pos:start="53:86" pos:end="53:94">mb_height</name> <operator pos:start="53:96" pos:end="53:96">+</operator> <literal type="number" pos:start="53:98" pos:end="53:98">1</literal><operator pos:start="53:99" pos:end="53:99">)</operator> <operator pos:start="53:101" pos:end="53:101">*</operator> <literal type="number" pos:start="53:103" pos:end="53:103">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:57"><expr pos:start="55:5" pos:end="55:56"><name pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:5">v</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:14">mb_type</name><index pos:start="55:15" pos:end="55:17">[<expr pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>]</index></name>   <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:37"><name pos:start="55:23" pos:end="55:23">v</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:37">mb_type_base</name></name> <operator pos:start="55:39" pos:end="55:39">+</operator> <name pos:start="55:41" pos:end="55:52"><name pos:start="55:41" pos:end="55:41">s</name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:52">b8_stride</name></name> <operator pos:start="55:54" pos:end="55:54">+</operator> <literal type="number" pos:start="55:56" pos:end="55:56">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:94"><expr pos:start="57:5" pos:end="57:93"><name pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:5">v</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:14">mb_type</name><index pos:start="57:15" pos:end="57:17">[<expr pos:start="57:16" pos:end="57:16"><literal type="number" pos:start="57:16" pos:end="57:16">1</literal></expr>]</index></name>   <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:37"><name pos:start="57:23" pos:end="57:23">v</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:37">mb_type_base</name></name> <operator pos:start="57:39" pos:end="57:39">+</operator> <name pos:start="57:41" pos:end="57:52"><name pos:start="57:41" pos:end="57:41">s</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:52">b8_stride</name></name> <operator pos:start="57:54" pos:end="57:54">*</operator> <operator pos:start="57:56" pos:end="57:56">(</operator><name pos:start="57:57" pos:end="57:65">mb_height</name> <operator pos:start="57:67" pos:end="57:67">*</operator> <literal type="number" pos:start="57:69" pos:end="57:71">2</literal> <operator pos:start="57:71" pos:end="57:71">+</operator> <literal type="number" pos:start="57:73" pos:end="57:73">1</literal><operator pos:start="57:74" pos:end="57:74">)</operator> <operator pos:start="57:76" pos:end="57:76">+</operator> <name pos:start="57:78" pos:end="57:89"><name pos:start="57:78" pos:end="57:78">s</name><operator pos:start="57:79" pos:end="57:80">-&gt;</operator><name pos:start="57:81" pos:end="57:89">mb_stride</name></name> <operator pos:start="57:91" pos:end="57:91">+</operator> <literal type="number" pos:start="57:93" pos:end="57:93">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:69"><expr pos:start="59:5" pos:end="59:68"><name pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:5">v</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:14">mb_type</name><index pos:start="59:15" pos:end="59:17">[<expr pos:start="59:16" pos:end="59:16"><literal type="number" pos:start="59:16" pos:end="59:16">2</literal></expr>]</index></name>   <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:35"><name pos:start="59:23" pos:end="59:23">v</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:32">mb_type</name><index pos:start="59:33" pos:end="59:35">[<expr pos:start="59:34" pos:end="59:34"><literal type="number" pos:start="59:34" pos:end="59:34">1</literal></expr>]</index></name> <operator pos:start="59:37" pos:end="59:37">+</operator> <name pos:start="59:39" pos:end="59:50"><name pos:start="59:39" pos:end="59:39">s</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:50">mb_stride</name></name> <operator pos:start="59:52" pos:end="59:52">*</operator> <operator pos:start="59:54" pos:end="59:54">(</operator><name pos:start="59:55" pos:end="59:63">mb_height</name> <operator pos:start="59:65" pos:end="59:65">+</operator> <literal type="number" pos:start="59:67" pos:end="59:67">1</literal><operator pos:start="59:68" pos:end="59:68">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:54">/* allocate memory to store block level MV info */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:115"><expr pos:start="65:5" pos:end="65:114"><name pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:5">v</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:23">blk_mv_type_base</name></name> <operator pos:start="65:25" pos:end="65:25">=</operator> <call pos:start="65:27" pos:end="65:114"><name pos:start="65:27" pos:end="65:36">av_mallocz</name><argument_list pos:start="65:37" pos:end="65:114">(     <argument pos:start="65:43" pos:end="65:113"><expr pos:start="65:43" pos:end="65:113"><name pos:start="65:43" pos:end="65:54"><name pos:start="65:43" pos:end="65:43">s</name><operator pos:start="65:44" pos:end="65:45">-&gt;</operator><name pos:start="65:46" pos:end="65:54">b8_stride</name></name> <operator pos:start="65:56" pos:end="65:56">*</operator> <operator pos:start="65:58" pos:end="65:58">(</operator><name pos:start="65:59" pos:end="65:67">mb_height</name> <operator pos:start="65:69" pos:end="65:69">*</operator> <literal type="number" pos:start="65:71" pos:end="65:73">2</literal> <operator pos:start="65:73" pos:end="65:73">+</operator> <literal type="number" pos:start="65:75" pos:end="65:75">1</literal><operator pos:start="65:76" pos:end="65:76">)</operator> <operator pos:start="65:78" pos:end="65:78">+</operator> <name pos:start="65:80" pos:end="65:91"><name pos:start="65:80" pos:end="65:80">s</name><operator pos:start="65:81" pos:end="65:82">-&gt;</operator><name pos:start="65:83" pos:end="65:91">mb_stride</name></name> <operator pos:start="65:93" pos:end="65:93">*</operator> <operator pos:start="65:95" pos:end="65:95">(</operator><name pos:start="65:96" pos:end="65:104">mb_height</name> <operator pos:start="65:106" pos:end="65:106">+</operator> <literal type="number" pos:start="65:108" pos:end="65:108">1</literal><operator pos:start="65:109" pos:end="65:109">)</operator> <operator pos:start="65:111" pos:end="65:111">*</operator> <literal type="number" pos:start="65:113" pos:end="65:113">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:65"><expr pos:start="67:5" pos:end="67:64"><name pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:5">v</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:18">blk_mv_type</name></name>      <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:45"><name pos:start="67:27" pos:end="67:27">v</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:45">blk_mv_type_base</name></name> <operator pos:start="67:47" pos:end="67:47">+</operator> <name pos:start="67:49" pos:end="67:60"><name pos:start="67:49" pos:end="67:49">s</name><operator pos:start="67:50" pos:end="67:51">-&gt;</operator><name pos:start="67:52" pos:end="67:60">b8_stride</name></name> <operator pos:start="67:62" pos:end="67:62">+</operator> <literal type="number" pos:start="67:64" pos:end="67:64">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:116"><expr pos:start="69:5" pos:end="69:115"><name pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:5">v</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:16">mv_f_base</name></name>        <operator pos:start="69:25" pos:end="69:25">=</operator> <call pos:start="69:27" pos:end="69:115"><name pos:start="69:27" pos:end="69:36">av_mallocz</name><argument_list pos:start="69:37" pos:end="69:115">(<argument pos:start="69:38" pos:end="69:114"><expr pos:start="69:38" pos:end="69:114"><literal type="number" pos:start="69:38" pos:end="69:38">2</literal> <operator pos:start="69:40" pos:end="69:40">*</operator> <operator pos:start="69:42" pos:end="69:42">(</operator><name pos:start="69:43" pos:end="69:54"><name pos:start="69:43" pos:end="69:43">s</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:54">b8_stride</name></name> <operator pos:start="69:56" pos:end="69:56">*</operator> <operator pos:start="69:58" pos:end="69:58">(</operator><name pos:start="69:59" pos:end="69:67">mb_height</name> <operator pos:start="69:69" pos:end="69:69">*</operator> <literal type="number" pos:start="69:71" pos:end="69:73">2</literal> <operator pos:start="69:73" pos:end="69:73">+</operator> <literal type="number" pos:start="69:75" pos:end="69:75">1</literal><operator pos:start="69:76" pos:end="69:76">)</operator> <operator pos:start="69:78" pos:end="69:78">+</operator> <name pos:start="69:80" pos:end="69:91"><name pos:start="69:80" pos:end="69:80">s</name><operator pos:start="69:81" pos:end="69:82">-&gt;</operator><name pos:start="69:83" pos:end="69:91">mb_stride</name></name> <operator pos:start="69:93" pos:end="69:93">*</operator> <operator pos:start="69:95" pos:end="69:95">(</operator><name pos:start="69:96" pos:end="69:104">mb_height</name> <operator pos:start="69:106" pos:end="69:106">+</operator> <literal type="number" pos:start="69:108" pos:end="69:108">1</literal><operator pos:start="69:109" pos:end="69:109">)</operator> <operator pos:start="69:111" pos:end="69:111">*</operator> <literal type="number" pos:start="69:113" pos:end="69:113">2</literal><operator pos:start="69:114" pos:end="69:114">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:58"><expr pos:start="71:5" pos:end="71:57"><name pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:5">v</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:11">mv_f</name><index pos:start="71:12" pos:end="71:14">[<expr pos:start="71:13" pos:end="71:13"><literal type="number" pos:start="71:13" pos:end="71:13">0</literal></expr>]</index></name>          <operator pos:start="71:25" pos:end="71:25">=</operator> <name pos:start="71:27" pos:end="71:38"><name pos:start="71:27" pos:end="71:27">v</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:38">mv_f_base</name></name> <operator pos:start="71:40" pos:end="71:40">+</operator> <name pos:start="71:42" pos:end="71:53"><name pos:start="71:42" pos:end="71:42">s</name><operator pos:start="71:43" pos:end="71:44">-&gt;</operator><name pos:start="71:45" pos:end="71:53">b8_stride</name></name> <operator pos:start="71:55" pos:end="71:55">+</operator> <literal type="number" pos:start="71:57" pos:end="71:57">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:113"><expr pos:start="73:5" pos:end="73:112"><name pos:start="73:5" pos:end="73:14"><name pos:start="73:5" pos:end="73:5">v</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:11">mv_f</name><index pos:start="73:12" pos:end="73:14">[<expr pos:start="73:13" pos:end="73:13"><literal type="number" pos:start="73:13" pos:end="73:13">1</literal></expr>]</index></name>          <operator pos:start="73:25" pos:end="73:25">=</operator> <name pos:start="73:27" pos:end="73:36"><name pos:start="73:27" pos:end="73:27">v</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:33">mv_f</name><index pos:start="73:34" pos:end="73:36">[<expr pos:start="73:35" pos:end="73:35"><literal type="number" pos:start="73:35" pos:end="73:35">0</literal></expr>]</index></name> <operator pos:start="73:38" pos:end="73:38">+</operator> <operator pos:start="73:40" pos:end="73:40">(</operator><name pos:start="73:41" pos:end="73:52"><name pos:start="73:41" pos:end="73:41">s</name><operator pos:start="73:42" pos:end="73:43">-&gt;</operator><name pos:start="73:44" pos:end="73:52">b8_stride</name></name> <operator pos:start="73:54" pos:end="73:54">*</operator> <operator pos:start="73:56" pos:end="73:56">(</operator><name pos:start="73:57" pos:end="73:65">mb_height</name> <operator pos:start="73:67" pos:end="73:67">*</operator> <literal type="number" pos:start="73:69" pos:end="73:71">2</literal> <operator pos:start="73:71" pos:end="73:71">+</operator> <literal type="number" pos:start="73:73" pos:end="73:73">1</literal><operator pos:start="73:74" pos:end="73:74">)</operator> <operator pos:start="73:76" pos:end="73:76">+</operator> <name pos:start="73:78" pos:end="73:89"><name pos:start="73:78" pos:end="73:78">s</name><operator pos:start="73:79" pos:end="73:80">-&gt;</operator><name pos:start="73:81" pos:end="73:89">mb_stride</name></name> <operator pos:start="73:91" pos:end="73:91">*</operator> <operator pos:start="73:93" pos:end="73:93">(</operator><name pos:start="73:94" pos:end="73:102">mb_height</name> <operator pos:start="73:104" pos:end="73:104">+</operator> <literal type="number" pos:start="73:106" pos:end="73:106">1</literal><operator pos:start="73:107" pos:end="73:107">)</operator> <operator pos:start="73:109" pos:end="73:109">*</operator> <literal type="number" pos:start="73:111" pos:end="73:111">2</literal><operator pos:start="73:112" pos:end="73:112">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:116"><expr pos:start="75:5" pos:end="75:115"><name pos:start="75:5" pos:end="75:21"><name pos:start="75:5" pos:end="75:5">v</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:21">mv_f_next_base</name></name>   <operator pos:start="75:25" pos:end="75:25">=</operator> <call pos:start="75:27" pos:end="75:115"><name pos:start="75:27" pos:end="75:36">av_mallocz</name><argument_list pos:start="75:37" pos:end="75:115">(<argument pos:start="75:38" pos:end="75:114"><expr pos:start="75:38" pos:end="75:114"><literal type="number" pos:start="75:38" pos:end="75:38">2</literal> <operator pos:start="75:40" pos:end="75:40">*</operator> <operator pos:start="75:42" pos:end="75:42">(</operator><name pos:start="75:43" pos:end="75:54"><name pos:start="75:43" pos:end="75:43">s</name><operator pos:start="75:44" pos:end="75:45">-&gt;</operator><name pos:start="75:46" pos:end="75:54">b8_stride</name></name> <operator pos:start="75:56" pos:end="75:56">*</operator> <operator pos:start="75:58" pos:end="75:58">(</operator><name pos:start="75:59" pos:end="75:67">mb_height</name> <operator pos:start="75:69" pos:end="75:69">*</operator> <literal type="number" pos:start="75:71" pos:end="75:73">2</literal> <operator pos:start="75:73" pos:end="75:73">+</operator> <literal type="number" pos:start="75:75" pos:end="75:75">1</literal><operator pos:start="75:76" pos:end="75:76">)</operator> <operator pos:start="75:78" pos:end="75:78">+</operator> <name pos:start="75:80" pos:end="75:91"><name pos:start="75:80" pos:end="75:80">s</name><operator pos:start="75:81" pos:end="75:82">-&gt;</operator><name pos:start="75:83" pos:end="75:91">mb_stride</name></name> <operator pos:start="75:93" pos:end="75:93">*</operator> <operator pos:start="75:95" pos:end="75:95">(</operator><name pos:start="75:96" pos:end="75:104">mb_height</name> <operator pos:start="75:106" pos:end="75:106">+</operator> <literal type="number" pos:start="75:108" pos:end="75:108">1</literal><operator pos:start="75:109" pos:end="75:109">)</operator> <operator pos:start="75:111" pos:end="75:111">*</operator> <literal type="number" pos:start="75:113" pos:end="75:113">2</literal><operator pos:start="75:114" pos:end="75:114">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:63"><expr pos:start="77:5" pos:end="77:62"><name pos:start="77:5" pos:end="77:19"><name pos:start="77:5" pos:end="77:5">v</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:16">mv_f_next</name><index pos:start="77:17" pos:end="77:19">[<expr pos:start="77:18" pos:end="77:18"><literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>]</index></name>     <operator pos:start="77:25" pos:end="77:25">=</operator> <name pos:start="77:27" pos:end="77:43"><name pos:start="77:27" pos:end="77:27">v</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:43">mv_f_next_base</name></name> <operator pos:start="77:45" pos:end="77:45">+</operator> <name pos:start="77:47" pos:end="77:58"><name pos:start="77:47" pos:end="77:47">s</name><operator pos:start="77:48" pos:end="77:49">-&gt;</operator><name pos:start="77:50" pos:end="77:58">b8_stride</name></name> <operator pos:start="77:60" pos:end="77:60">+</operator> <literal type="number" pos:start="77:62" pos:end="77:62">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:118"><expr pos:start="79:5" pos:end="79:117"><name pos:start="79:5" pos:end="79:19"><name pos:start="79:5" pos:end="79:5">v</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:16">mv_f_next</name><index pos:start="79:17" pos:end="79:19">[<expr pos:start="79:18" pos:end="79:18"><literal type="number" pos:start="79:18" pos:end="79:18">1</literal></expr>]</index></name>     <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:41"><name pos:start="79:27" pos:end="79:27">v</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:38">mv_f_next</name><index pos:start="79:39" pos:end="79:41">[<expr pos:start="79:40" pos:end="79:40"><literal type="number" pos:start="79:40" pos:end="79:40">0</literal></expr>]</index></name> <operator pos:start="79:43" pos:end="79:43">+</operator> <operator pos:start="79:45" pos:end="79:45">(</operator><name pos:start="79:46" pos:end="79:57"><name pos:start="79:46" pos:end="79:46">s</name><operator pos:start="79:47" pos:end="79:48">-&gt;</operator><name pos:start="79:49" pos:end="79:57">b8_stride</name></name> <operator pos:start="79:59" pos:end="79:59">*</operator> <operator pos:start="79:61" pos:end="79:61">(</operator><name pos:start="79:62" pos:end="79:70">mb_height</name> <operator pos:start="79:72" pos:end="79:72">*</operator> <literal type="number" pos:start="79:74" pos:end="79:76">2</literal> <operator pos:start="79:76" pos:end="79:76">+</operator> <literal type="number" pos:start="79:78" pos:end="79:78">1</literal><operator pos:start="79:79" pos:end="79:79">)</operator> <operator pos:start="79:81" pos:end="79:81">+</operator> <name pos:start="79:83" pos:end="79:94"><name pos:start="79:83" pos:end="79:83">s</name><operator pos:start="79:84" pos:end="79:85">-&gt;</operator><name pos:start="79:86" pos:end="79:94">mb_stride</name></name> <operator pos:start="79:96" pos:end="79:96">*</operator> <operator pos:start="79:98" pos:end="79:98">(</operator><name pos:start="79:99" pos:end="79:107">mb_height</name> <operator pos:start="79:109" pos:end="79:109">+</operator> <literal type="number" pos:start="79:111" pos:end="79:111">1</literal><operator pos:start="79:112" pos:end="79:112">)</operator> <operator pos:start="79:114" pos:end="79:114">*</operator> <literal type="number" pos:start="79:116" pos:end="79:116">2</literal><operator pos:start="79:117" pos:end="79:117">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:37"><expr pos:start="83:5" pos:end="83:36"><call pos:start="83:5" pos:end="83:36"><name pos:start="83:5" pos:end="83:26">ff_intrax8_common_init</name><argument_list pos:start="83:27" pos:end="83:36">(<argument pos:start="83:28" pos:end="83:33"><expr pos:start="83:28" pos:end="83:33"><operator pos:start="83:28" pos:end="83:28">&amp;</operator><name pos:start="83:29" pos:end="83:33"><name pos:start="83:29" pos:end="83:29">v</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:33">x8</name></name></expr></argument>,<argument pos:start="83:35" pos:end="83:35"><expr pos:start="83:35" pos:end="83:35"><name pos:start="83:35" pos:end="83:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:98">(<expr pos:start="87:9" pos:end="87:97"><name pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:16">avctx</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:26">codec_id</name></name> <operator pos:start="87:28" pos:end="87:29">==</operator> <name pos:start="87:31" pos:end="87:51">AV_CODEC_ID_WMV3IMAGE</name> <operator pos:start="87:53" pos:end="87:54">||</operator> <name pos:start="87:56" pos:end="87:73"><name pos:start="87:56" pos:end="87:56">s</name><operator pos:start="87:57" pos:end="87:58">-&gt;</operator><name pos:start="87:59" pos:end="87:63">avctx</name><operator pos:start="87:64" pos:end="87:65">-&gt;</operator><name pos:start="87:66" pos:end="87:73">codec_id</name></name> <operator pos:start="87:75" pos:end="87:76">==</operator> <name pos:start="87:78" pos:end="87:97">AV_CODEC_ID_VC1IMAGE</name></expr>)</condition> <block pos:start="87:100" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:85">

        <for pos:start="89:9" pos:end="91:85">for <control pos:start="89:13" pos:end="89:31">(<init pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">i</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">0</literal></expr>;</init> <condition pos:start="89:21" pos:end="89:26"><expr pos:start="89:21" pos:end="89:25"><name pos:start="89:21" pos:end="89:21">i</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <literal type="number" pos:start="89:25" pos:end="89:25">4</literal></expr>;</condition> <incr pos:start="89:28" pos:end="89:30"><expr pos:start="89:28" pos:end="89:30"><name pos:start="89:28" pos:end="89:28">i</name><operator pos:start="89:29" pos:end="89:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="91:13" pos:end="91:85"><block_content pos:start="91:13" pos:end="91:85">

            <if_stmt pos:start="91:13" pos:end="91:85"><if pos:start="91:13" pos:end="91:85">if <condition pos:start="91:16" pos:end="91:74">(<expr pos:start="91:17" pos:end="91:73"><operator pos:start="91:17" pos:end="91:17">!</operator><operator pos:start="91:18" pos:end="91:18">(</operator><name pos:start="91:19" pos:end="91:43"><name pos:start="91:19" pos:end="91:19">v</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:28">sr_rows</name><index pos:start="91:29" pos:end="91:36">[<expr pos:start="91:30" pos:end="91:35"><name pos:start="91:30" pos:end="91:30">i</name> <operator pos:start="91:32" pos:end="91:33">&gt;&gt;</operator> <literal type="number" pos:start="91:35" pos:end="91:35">1</literal></expr>]</index><index pos:start="91:37" pos:end="91:43">[<expr pos:start="91:38" pos:end="91:42"><name pos:start="91:38" pos:end="91:38">i</name> <operator pos:start="91:40" pos:end="91:40">&amp;</operator> <literal type="number" pos:start="91:42" pos:end="91:42">1</literal></expr>]</index></name> <operator pos:start="91:45" pos:end="91:45">=</operator> <call pos:start="91:47" pos:end="91:72"><name pos:start="91:47" pos:end="91:55">av_malloc</name><argument_list pos:start="91:56" pos:end="91:72">(<argument pos:start="91:57" pos:end="91:71"><expr pos:start="91:57" pos:end="91:71"><name pos:start="91:57" pos:end="91:71"><name pos:start="91:57" pos:end="91:57">v</name><operator pos:start="91:58" pos:end="91:59">-&gt;</operator><name pos:start="91:60" pos:end="91:71">output_width</name></name></expr></argument>)</argument_list></call><operator pos:start="91:73" pos:end="91:73">)</operator></expr>)</condition><block type="pseudo" pos:start="91:76" pos:end="91:85"><block_content pos:start="91:76" pos:end="91:85"> <return pos:start="91:76" pos:end="91:85">return <expr pos:start="91:83" pos:end="91:84"><operator pos:start="91:83" pos:end="91:83">-</operator><literal type="number" pos:start="91:84" pos:end="91:84">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="105:5"><if pos:start="97:5" pos:end="105:5">if <condition pos:start="97:8" pos:end="101:25">(<expr pos:start="97:9" pos:end="101:24"><operator pos:start="97:9" pos:end="97:9">!</operator><name pos:start="97:10" pos:end="97:28"><name pos:start="97:10" pos:end="97:10">v</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:28">mv_type_mb_plane</name></name> <operator pos:start="97:30" pos:end="97:31">||</operator> <operator pos:start="97:33" pos:end="97:33">!</operator><name pos:start="97:34" pos:end="97:51"><name pos:start="97:34" pos:end="97:34">v</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:51">direct_mb_plane</name></name> <operator pos:start="97:53" pos:end="97:54">||</operator> <operator pos:start="97:56" pos:end="97:56">!</operator><name pos:start="97:57" pos:end="97:71"><name pos:start="97:57" pos:end="97:57">v</name><operator pos:start="97:58" pos:end="97:59">-&gt;</operator><name pos:start="97:60" pos:end="97:71">acpred_plane</name></name> <operator pos:start="97:73" pos:end="97:74">||</operator> <operator pos:start="97:76" pos:end="97:76">!</operator><name pos:start="97:77" pos:end="97:95"><name pos:start="97:77" pos:end="97:77">v</name><operator pos:start="97:78" pos:end="97:79">-&gt;</operator><name pos:start="97:80" pos:end="97:95">over_flags_plane</name></name> <operator pos:start="97:97" pos:end="97:98">||</operator>

        <operator pos:start="99:9" pos:end="99:9">!</operator><name pos:start="99:10" pos:end="99:17"><name pos:start="99:10" pos:end="99:10">v</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:17">block</name></name> <operator pos:start="99:19" pos:end="99:20">||</operator> <operator pos:start="99:22" pos:end="99:22">!</operator><name pos:start="99:23" pos:end="99:33"><name pos:start="99:23" pos:end="99:23">v</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:33">cbp_base</name></name> <operator pos:start="99:35" pos:end="99:36">||</operator> <operator pos:start="99:38" pos:end="99:38">!</operator><name pos:start="99:39" pos:end="99:51"><name pos:start="99:39" pos:end="99:39">v</name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:51">ttblk_base</name></name> <operator pos:start="99:53" pos:end="99:54">||</operator> <operator pos:start="99:56" pos:end="99:56">!</operator><name pos:start="99:57" pos:end="99:72"><name pos:start="99:57" pos:end="99:57">v</name><operator pos:start="99:58" pos:end="99:59">-&gt;</operator><name pos:start="99:60" pos:end="99:72">is_intra_base</name></name> <operator pos:start="99:74" pos:end="99:75">||</operator> <operator pos:start="99:77" pos:end="99:77">!</operator><name pos:start="99:78" pos:end="99:92"><name pos:start="99:78" pos:end="99:78">v</name><operator pos:start="99:79" pos:end="99:80">-&gt;</operator><name pos:start="99:81" pos:end="99:92">luma_mv_base</name></name> <operator pos:start="99:94" pos:end="99:95">||</operator>

        <operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:24"><name pos:start="101:10" pos:end="101:10">v</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:24">mb_type_base</name></name></expr>)</condition> <block pos:start="101:27" pos:end="105:5">{<block_content pos:start="103:9" pos:end="103:19">

        <goto pos:start="103:9" pos:end="103:19">goto <name pos:start="103:14" pos:end="103:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>



<label pos:start="113:1" pos:end="113:6"><name pos:start="113:1" pos:end="113:5">error</name>:</label>

    <expr_stmt pos:start="115:5" pos:end="115:32"><expr pos:start="115:5" pos:end="115:31"><call pos:start="115:5" pos:end="115:31"><name pos:start="115:5" pos:end="115:21">ff_vc1_decode_end</name><argument_list pos:start="115:22" pos:end="115:31">(<argument pos:start="115:23" pos:end="115:30"><expr pos:start="115:23" pos:end="115:30"><name pos:start="115:23" pos:end="115:30"><name pos:start="115:23" pos:end="115:23">s</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:30">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="117:5" pos:end="117:27">return <expr pos:start="117:12" pos:end="117:26"><call pos:start="117:12" pos:end="117:26"><name pos:start="117:12" pos:end="117:18">AVERROR</name><argument_list pos:start="117:19" pos:end="117:26">(<argument pos:start="117:20" pos:end="117:25"><expr pos:start="117:20" pos:end="117:25"><name pos:start="117:20" pos:end="117:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
