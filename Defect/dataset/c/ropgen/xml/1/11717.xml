<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11717.c" pos:tabs="8"><function pos:start="1:1" pos:end="327:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mkv_write_tracks</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="327:1">{<block_content pos:start="5:5" pos:end="325:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">MatroskaMuxContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">mkv</name> <init pos:start="5:29" pos:end="5:42">= <expr pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:31">s</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15">ebml_master</name></type> <name pos:start="9:17" pos:end="9:22">tracks</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>, <decl pos:start="11:15" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:17">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:88"><expr pos:start="15:5" pos:end="15:87"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:87"><name pos:start="15:11" pos:end="15:32">mkv_add_seekhead_entry</name><argument_list pos:start="15:33" pos:end="15:87">(<argument pos:start="15:34" pos:end="15:51"><expr pos:start="15:34" pos:end="15:51"><name pos:start="15:34" pos:end="15:51"><name pos:start="15:34" pos:end="15:36">mkv</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:51">main_seekhead</name></name></expr></argument>, <argument pos:start="15:54" pos:end="15:71"><expr pos:start="15:54" pos:end="15:71"><name pos:start="15:54" pos:end="15:71">MATROSKA_ID_TRACKS</name></expr></argument>, <argument pos:start="15:74" pos:end="15:86"><expr pos:start="15:74" pos:end="15:86"><call pos:start="15:74" pos:end="15:86"><name pos:start="15:74" pos:end="15:82">avio_tell</name><argument_list pos:start="15:83" pos:end="15:86">(<argument pos:start="15:84" pos:end="15:85"><expr pos:start="15:84" pos:end="15:85"><name pos:start="15:84" pos:end="15:85">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="17:28"><if pos:start="17:5" pos:end="17:28">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">&lt;</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>)</condition><block type="pseudo" pos:start="17:18" pos:end="17:28"><block_content pos:start="17:18" pos:end="17:28"> <return pos:start="17:18" pos:end="17:28">return <expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:27">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:58"><expr pos:start="21:5" pos:end="21:57"><name pos:start="21:5" pos:end="21:10">tracks</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="21:57"><name pos:start="21:14" pos:end="21:30">start_ebml_master</name><argument_list pos:start="21:31" pos:end="21:57">(<argument pos:start="21:32" pos:end="21:33"><expr pos:start="21:32" pos:end="21:33"><name pos:start="21:32" pos:end="21:33">pb</name></expr></argument>, <argument pos:start="21:36" pos:end="21:53"><expr pos:start="21:36" pos:end="21:53"><name pos:start="21:36" pos:end="21:53">MATROSKA_ID_TRACKS</name></expr></argument>, <argument pos:start="21:56" pos:end="21:56"><expr pos:start="21:56" pos:end="21:56"><literal type="number" pos:start="21:56" pos:end="21:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="321:5">for <control pos:start="23:9" pos:end="23:39">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:34"><expr pos:start="23:17" pos:end="23:33"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:33"><name pos:start="23:21" pos:end="23:21">s</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:33">nb_streams</name></name></expr>;</condition> <incr pos:start="23:36" pos:end="23:38"><expr pos:start="23:36" pos:end="23:38"><name pos:start="23:36" pos:end="23:36">i</name><operator pos:start="23:37" pos:end="23:38">++</operator></expr></incr>)</control> <block pos:start="23:41" pos:end="321:5">{<block_content pos:start="25:9" pos:end="319:45">

        <decl_stmt pos:start="25:9" pos:end="25:37"><decl pos:start="25:9" pos:end="25:36"><type pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:16">AVStream</name> <modifier pos:start="25:18" pos:end="25:18">*</modifier></type><name pos:start="25:19" pos:end="25:20">st</name> <init pos:start="25:22" pos:end="25:36">= <expr pos:start="25:24" pos:end="25:36"><name pos:start="25:24" pos:end="25:36"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:33">streams</name><index pos:start="25:34" pos:end="25:36">[<expr pos:start="25:35" pos:end="25:35"><name pos:start="25:35" pos:end="25:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:42"><decl pos:start="27:9" pos:end="27:41"><type pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:22">AVCodecContext</name> <modifier pos:start="27:24" pos:end="27:24">*</modifier></type><name pos:start="27:25" pos:end="27:29">codec</name> <init pos:start="27:31" pos:end="27:41">= <expr pos:start="27:33" pos:end="27:41"><name pos:start="27:33" pos:end="27:41"><name pos:start="27:33" pos:end="27:34">st</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:41">codec</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:35"><decl pos:start="29:9" pos:end="29:27"><type pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:19">ebml_master</name></type> <name pos:start="29:21" pos:end="29:27">subinfo</name></decl>, <decl pos:start="29:30" pos:end="29:34"><type ref="prev" pos:start="29:9" pos:end="29:19"/><name pos:start="29:30" pos:end="29:34">track</name></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:26"><decl pos:start="31:9" pos:end="31:25"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:21">native_id</name> <init pos:start="31:23" pos:end="31:25">= <expr pos:start="31:25" pos:end="31:25"><literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:22"><decl pos:start="33:9" pos:end="33:21"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:17">qt_id</name> <init pos:start="33:19" pos:end="33:21">= <expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:64"><decl pos:start="35:9" pos:end="35:63"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:21">bit_depth</name> <init pos:start="35:23" pos:end="35:63">= <expr pos:start="35:25" pos:end="35:63"><call pos:start="35:25" pos:end="35:63"><name pos:start="35:25" pos:end="35:46">av_get_bits_per_sample</name><argument_list pos:start="35:47" pos:end="35:63">(<argument pos:start="35:48" pos:end="35:62"><expr pos:start="35:48" pos:end="35:62"><name pos:start="35:48" pos:end="35:62"><name pos:start="35:48" pos:end="35:52">codec</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:62">codec_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:45"><decl pos:start="37:9" pos:end="37:44"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:23">sample_rate</name> <init pos:start="37:25" pos:end="37:44">= <expr pos:start="37:27" pos:end="37:44"><name pos:start="37:27" pos:end="37:44"><name pos:start="37:27" pos:end="37:31">codec</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:44">sample_rate</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:35"><decl pos:start="39:9" pos:end="39:34"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:30">output_sample_rate</name> <init pos:start="39:32" pos:end="39:34">= <expr pos:start="39:34" pos:end="39:34"><literal type="number" pos:start="39:34" pos:end="39:34">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:31"><decl pos:start="41:9" pos:end="41:30"><type pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:25">AVDictionaryEntry</name> <modifier pos:start="41:27" pos:end="41:27">*</modifier></type><name pos:start="41:28" pos:end="41:30">tag</name></decl>;</decl_stmt>



        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:57">(<expr pos:start="45:13" pos:end="45:56"><name pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:17">codec</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:29">codec_type</name></name> <operator pos:start="45:31" pos:end="45:32">==</operator> <name pos:start="45:34" pos:end="45:56">AVMEDIA_TYPE_ATTACHMENT</name></expr>)</condition> <block pos:start="45:59" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:21">

            <expr_stmt pos:start="47:13" pos:end="47:38"><expr pos:start="47:13" pos:end="47:37"><name pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:15">mkv</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:33">have_attachments</name></name> <operator pos:start="47:35" pos:end="47:35">=</operator> <literal type="number" pos:start="47:37" pos:end="47:37">1</literal></expr>;</expr_stmt>

            <continue pos:start="49:13" pos:end="49:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="55:9" pos:end="57:72"><if pos:start="55:9" pos:end="57:72">if <condition pos:start="55:12" pos:end="55:23">(<expr pos:start="55:13" pos:end="55:22"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:22">bit_depth</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:72"><block_content pos:start="57:13" pos:end="57:72">

            <expr_stmt pos:start="57:13" pos:end="57:72"><expr pos:start="57:13" pos:end="57:71"><name pos:start="57:13" pos:end="57:21">bit_depth</name> <operator pos:start="57:23" pos:end="57:23">=</operator> <call pos:start="57:25" pos:end="57:66"><name pos:start="57:25" pos:end="57:47">av_get_bytes_per_sample</name><argument_list pos:start="57:48" pos:end="57:66">(<argument pos:start="57:49" pos:end="57:65"><expr pos:start="57:49" pos:end="57:65"><name pos:start="57:49" pos:end="57:65"><name pos:start="57:49" pos:end="57:53">codec</name><operator pos:start="57:54" pos:end="57:55">-&gt;</operator><name pos:start="57:56" pos:end="57:65">sample_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="57:68" pos:end="57:69">&lt;&lt;</operator> <literal type="number" pos:start="57:71" pos:end="57:71">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="61:9" pos:end="63:78"><if pos:start="61:9" pos:end="63:78">if <condition pos:start="61:12" pos:end="61:47">(<expr pos:start="61:13" pos:end="61:46"><name pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:17">codec</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:27">codec_id</name></name> <operator pos:start="61:29" pos:end="61:30">==</operator> <name pos:start="61:32" pos:end="61:46">AV_CODEC_ID_AAC</name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:78"><block_content pos:start="63:13" pos:end="63:78">

            <expr_stmt pos:start="63:13" pos:end="63:78"><expr pos:start="63:13" pos:end="63:77"><call pos:start="63:13" pos:end="63:77"><name pos:start="63:13" pos:end="63:32">get_aac_sample_rates</name><argument_list pos:start="63:33" pos:end="63:77">(<argument pos:start="63:34" pos:end="63:34"><expr pos:start="63:34" pos:end="63:34"><name pos:start="63:34" pos:end="63:34">s</name></expr></argument>, <argument pos:start="63:37" pos:end="63:41"><expr pos:start="63:37" pos:end="63:41"><name pos:start="63:37" pos:end="63:41">codec</name></expr></argument>, <argument pos:start="63:44" pos:end="63:55"><expr pos:start="63:44" pos:end="63:55"><operator pos:start="63:44" pos:end="63:44">&amp;</operator><name pos:start="63:45" pos:end="63:55">sample_rate</name></expr></argument>, <argument pos:start="63:58" pos:end="63:76"><expr pos:start="63:58" pos:end="63:76"><operator pos:start="63:58" pos:end="63:58">&amp;</operator><name pos:start="63:59" pos:end="63:76">output_sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:65"><expr pos:start="67:9" pos:end="67:64"><name pos:start="67:9" pos:end="67:13">track</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <call pos:start="67:17" pos:end="67:64"><name pos:start="67:17" pos:end="67:33">start_ebml_master</name><argument_list pos:start="67:34" pos:end="67:64">(<argument pos:start="67:35" pos:end="67:36"><expr pos:start="67:35" pos:end="67:36"><name pos:start="67:35" pos:end="67:36">pb</name></expr></argument>, <argument pos:start="67:39" pos:end="67:60"><expr pos:start="67:39" pos:end="67:60"><name pos:start="67:39" pos:end="67:60">MATROSKA_ID_TRACKENTRY</name></expr></argument>, <argument pos:start="67:63" pos:end="67:63"><expr pos:start="67:63" pos:end="67:63"><literal type="number" pos:start="67:63" pos:end="67:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:64"><expr pos:start="69:9" pos:end="69:63"><call pos:start="69:9" pos:end="69:63"><name pos:start="69:9" pos:end="69:21">put_ebml_uint</name> <argument_list pos:start="69:23" pos:end="69:63">(<argument pos:start="69:24" pos:end="69:25"><expr pos:start="69:24" pos:end="69:25"><name pos:start="69:24" pos:end="69:25">pb</name></expr></argument>, <argument pos:start="69:28" pos:end="69:50"><expr pos:start="69:28" pos:end="69:50"><name pos:start="69:28" pos:end="69:50">MATROSKA_ID_TRACKNUMBER</name></expr></argument>     , <argument pos:start="69:58" pos:end="69:62"><expr pos:start="69:58" pos:end="69:62"><name pos:start="69:58" pos:end="69:58">i</name> <operator pos:start="69:60" pos:end="69:60">+</operator> <literal type="number" pos:start="69:62" pos:end="69:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:64"><expr pos:start="71:9" pos:end="71:63"><call pos:start="71:9" pos:end="71:63"><name pos:start="71:9" pos:end="71:21">put_ebml_uint</name> <argument_list pos:start="71:23" pos:end="71:63">(<argument pos:start="71:24" pos:end="71:25"><expr pos:start="71:24" pos:end="71:25"><name pos:start="71:24" pos:end="71:25">pb</name></expr></argument>, <argument pos:start="71:28" pos:end="71:47"><expr pos:start="71:28" pos:end="71:47"><name pos:start="71:28" pos:end="71:47">MATROSKA_ID_TRACKUID</name></expr></argument>        , <argument pos:start="71:58" pos:end="71:62"><expr pos:start="71:58" pos:end="71:62"><name pos:start="71:58" pos:end="71:58">i</name> <operator pos:start="71:60" pos:end="71:60">+</operator> <literal type="number" pos:start="71:62" pos:end="71:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:60"><expr pos:start="73:9" pos:end="73:59"><call pos:start="73:9" pos:end="73:59"><name pos:start="73:9" pos:end="73:21">put_ebml_uint</name> <argument_list pos:start="73:23" pos:end="73:59">(<argument pos:start="73:24" pos:end="73:25"><expr pos:start="73:24" pos:end="73:25"><name pos:start="73:24" pos:end="73:25">pb</name></expr></argument>, <argument pos:start="73:28" pos:end="73:54"><expr pos:start="73:28" pos:end="73:54"><name pos:start="73:28" pos:end="73:54">MATROSKA_ID_TRACKFLAGLACING</name></expr></argument> , <argument pos:start="73:58" pos:end="73:58"><expr pos:start="73:58" pos:end="73:58"><literal type="number" pos:start="73:58" pos:end="73:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="line" pos:start="73:65" pos:end="73:82">// no lacing (yet)</comment>



        <if_stmt pos:start="77:9" pos:end="79:67"><if pos:start="77:9" pos:end="79:67">if <condition pos:start="77:12" pos:end="77:64">(<expr pos:start="77:13" pos:end="77:63"><operator pos:start="77:13" pos:end="77:13">(</operator><name pos:start="77:14" pos:end="77:16">tag</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <call pos:start="77:20" pos:end="77:62"><name pos:start="77:20" pos:end="77:30">av_dict_get</name><argument_list pos:start="77:31" pos:end="77:62">(<argument pos:start="77:32" pos:end="77:43"><expr pos:start="77:32" pos:end="77:43"><name pos:start="77:32" pos:end="77:43"><name pos:start="77:32" pos:end="77:33">st</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:43">metadata</name></name></expr></argument>, <argument pos:start="77:46" pos:end="77:52"><expr pos:start="77:46" pos:end="77:52"><literal type="string" pos:start="77:46" pos:end="77:52">"title"</literal></expr></argument>, <argument pos:start="77:55" pos:end="77:58"><expr pos:start="77:55" pos:end="77:58"><name pos:start="77:55" pos:end="77:58">NULL</name></expr></argument>, <argument pos:start="77:61" pos:end="77:61"><expr pos:start="77:61" pos:end="77:61"><literal type="number" pos:start="77:61" pos:end="77:61">0</literal></expr></argument>)</argument_list></call><operator pos:start="77:63" pos:end="77:63">)</operator></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:67"><block_content pos:start="79:13" pos:end="79:67">

            <expr_stmt pos:start="79:13" pos:end="79:67"><expr pos:start="79:13" pos:end="79:66"><call pos:start="79:13" pos:end="79:66"><name pos:start="79:13" pos:end="79:27">put_ebml_string</name><argument_list pos:start="79:28" pos:end="79:66">(<argument pos:start="79:29" pos:end="79:30"><expr pos:start="79:29" pos:end="79:30"><name pos:start="79:29" pos:end="79:30">pb</name></expr></argument>, <argument pos:start="79:33" pos:end="79:53"><expr pos:start="79:33" pos:end="79:53"><name pos:start="79:33" pos:end="79:53">MATROSKA_ID_TRACKNAME</name></expr></argument>, <argument pos:start="79:56" pos:end="79:65"><expr pos:start="79:56" pos:end="79:65"><name pos:start="79:56" pos:end="79:65"><name pos:start="79:56" pos:end="79:58">tag</name><operator pos:start="79:59" pos:end="79:60">-&gt;</operator><name pos:start="79:61" pos:end="79:65">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:61"><expr pos:start="81:9" pos:end="81:60"><name pos:start="81:9" pos:end="81:11">tag</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:60"><name pos:start="81:15" pos:end="81:25">av_dict_get</name><argument_list pos:start="81:26" pos:end="81:60">(<argument pos:start="81:27" pos:end="81:38"><expr pos:start="81:27" pos:end="81:38"><name pos:start="81:27" pos:end="81:38"><name pos:start="81:27" pos:end="81:28">st</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:38">metadata</name></name></expr></argument>, <argument pos:start="81:41" pos:end="81:50"><expr pos:start="81:41" pos:end="81:50"><literal type="string" pos:start="81:41" pos:end="81:50">"language"</literal></expr></argument>, <argument pos:start="81:53" pos:end="81:56"><expr pos:start="81:53" pos:end="81:56"><name pos:start="81:53" pos:end="81:56">NULL</name></expr></argument>, <argument pos:start="81:59" pos:end="81:59"><expr pos:start="81:59" pos:end="81:59"><literal type="number" pos:start="81:59" pos:end="81:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:79"><expr pos:start="83:9" pos:end="83:78"><call pos:start="83:9" pos:end="83:78"><name pos:start="83:9" pos:end="83:23">put_ebml_string</name><argument_list pos:start="83:24" pos:end="83:78">(<argument pos:start="83:25" pos:end="83:26"><expr pos:start="83:25" pos:end="83:26"><name pos:start="83:25" pos:end="83:26">pb</name></expr></argument>, <argument pos:start="83:29" pos:end="83:53"><expr pos:start="83:29" pos:end="83:53"><name pos:start="83:29" pos:end="83:53">MATROSKA_ID_TRACKLANGUAGE</name></expr></argument>, <argument pos:start="83:56" pos:end="83:77"><expr pos:start="83:56" pos:end="83:77"><ternary pos:start="83:56" pos:end="83:77"><condition pos:start="83:56" pos:end="83:60"><expr pos:start="83:56" pos:end="83:58"><name pos:start="83:56" pos:end="83:58">tag</name></expr> ?</condition><then pos:start="83:62" pos:end="83:71"> <expr pos:start="83:62" pos:end="83:71"><name pos:start="83:62" pos:end="83:71"><name pos:start="83:62" pos:end="83:64">tag</name><operator pos:start="83:65" pos:end="83:66">-&gt;</operator><name pos:start="83:67" pos:end="83:71">value</name></name></expr></then><else pos:start="83:72" pos:end="83:77">:<expr pos:start="83:73" pos:end="83:77"><literal type="string" pos:start="83:73" pos:end="83:77">"und"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="87:9" pos:end="89:106"><if pos:start="87:9" pos:end="89:106">if <condition pos:start="87:12" pos:end="87:28">(<expr pos:start="87:13" pos:end="87:27"><name pos:start="87:13" pos:end="87:27"><name pos:start="87:13" pos:end="87:14">st</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:27">disposition</name></name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:106"><block_content pos:start="89:13" pos:end="89:106">

            <expr_stmt pos:start="89:13" pos:end="89:106"><expr pos:start="89:13" pos:end="89:105"><call pos:start="89:13" pos:end="89:105"><name pos:start="89:13" pos:end="89:25">put_ebml_uint</name><argument_list pos:start="89:26" pos:end="89:105">(<argument pos:start="89:27" pos:end="89:28"><expr pos:start="89:27" pos:end="89:28"><name pos:start="89:27" pos:end="89:28">pb</name></expr></argument>, <argument pos:start="89:31" pos:end="89:58"><expr pos:start="89:31" pos:end="89:58"><name pos:start="89:31" pos:end="89:58">MATROSKA_ID_TRACKFLAGDEFAULT</name></expr></argument>, <argument pos:start="89:61" pos:end="89:104"><expr pos:start="89:61" pos:end="89:104"><operator pos:start="89:61" pos:end="89:61">!</operator><operator pos:start="89:62" pos:end="89:62">!</operator><operator pos:start="89:63" pos:end="89:63">(</operator><name pos:start="89:64" pos:end="89:78"><name pos:start="89:64" pos:end="89:65">st</name><operator pos:start="89:66" pos:end="89:67">-&gt;</operator><name pos:start="89:68" pos:end="89:78">disposition</name></name> <operator pos:start="89:80" pos:end="89:80">&amp;</operator> <name pos:start="89:82" pos:end="89:103">AV_DISPOSITION_DEFAULT</name><operator pos:start="89:104" pos:end="89:104">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="line" pos:start="93:9" pos:end="93:61">// look for a codec ID string specific to mkv to use,</comment>

        <comment type="line" pos:start="95:9" pos:end="95:43">// if none are found, use AVI codes</comment>

        <for pos:start="97:9" pos:end="109:9">for <control pos:start="97:13" pos:end="97:69">(<init pos:start="97:14" pos:end="97:19"><expr pos:start="97:14" pos:end="97:18"><name pos:start="97:14" pos:end="97:14">j</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <literal type="number" pos:start="97:18" pos:end="97:18">0</literal></expr>;</init> <condition pos:start="97:21" pos:end="97:64"><expr pos:start="97:21" pos:end="97:63"><name pos:start="97:21" pos:end="97:40"><name pos:start="97:21" pos:end="97:37">ff_mkv_codec_tags</name><index pos:start="97:38" pos:end="97:40">[<expr pos:start="97:39" pos:end="97:39"><name pos:start="97:39" pos:end="97:39">j</name></expr>]</index></name><operator pos:start="97:41" pos:end="97:41">.</operator><name pos:start="97:42" pos:end="97:43">id</name> <operator pos:start="97:45" pos:end="97:46">!=</operator> <name pos:start="97:48" pos:end="97:63">AV_CODEC_ID_NONE</name></expr>;</condition> <incr pos:start="97:66" pos:end="97:68"><expr pos:start="97:66" pos:end="97:68"><name pos:start="97:66" pos:end="97:66">j</name><operator pos:start="97:67" pos:end="97:68">++</operator></expr></incr>)</control> <block pos:start="97:71" pos:end="109:9">{<block_content pos:start="99:13" pos:end="107:13">

            <if_stmt pos:start="99:13" pos:end="107:13"><if pos:start="99:13" pos:end="107:13">if <condition pos:start="99:16" pos:end="99:59">(<expr pos:start="99:17" pos:end="99:58"><name pos:start="99:17" pos:end="99:36"><name pos:start="99:17" pos:end="99:33">ff_mkv_codec_tags</name><index pos:start="99:34" pos:end="99:36">[<expr pos:start="99:35" pos:end="99:35"><name pos:start="99:35" pos:end="99:35">j</name></expr>]</index></name><operator pos:start="99:37" pos:end="99:37">.</operator><name pos:start="99:38" pos:end="99:39">id</name> <operator pos:start="99:41" pos:end="99:42">==</operator> <name pos:start="99:44" pos:end="99:58"><name pos:start="99:44" pos:end="99:48">codec</name><operator pos:start="99:49" pos:end="99:50">-&gt;</operator><name pos:start="99:51" pos:end="99:58">codec_id</name></name></expr>)</condition> <block pos:start="99:61" pos:end="107:13">{<block_content pos:start="101:17" pos:end="105:22">

                <expr_stmt pos:start="101:17" pos:end="101:83"><expr pos:start="101:17" pos:end="101:82"><call pos:start="101:17" pos:end="101:82"><name pos:start="101:17" pos:end="101:31">put_ebml_string</name><argument_list pos:start="101:32" pos:end="101:82">(<argument pos:start="101:33" pos:end="101:34"><expr pos:start="101:33" pos:end="101:34"><name pos:start="101:33" pos:end="101:34">pb</name></expr></argument>, <argument pos:start="101:37" pos:end="101:55"><expr pos:start="101:37" pos:end="101:55"><name pos:start="101:37" pos:end="101:55">MATROSKA_ID_CODECID</name></expr></argument>, <argument pos:start="101:58" pos:end="101:81"><expr pos:start="101:58" pos:end="101:81"><name pos:start="101:58" pos:end="101:77"><name pos:start="101:58" pos:end="101:74">ff_mkv_codec_tags</name><index pos:start="101:75" pos:end="101:77">[<expr pos:start="101:76" pos:end="101:76"><name pos:start="101:76" pos:end="101:76">j</name></expr>]</index></name><operator pos:start="101:78" pos:end="101:78">.</operator><name pos:start="101:79" pos:end="101:81">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:30"><expr pos:start="103:17" pos:end="103:29"><name pos:start="103:17" pos:end="103:25">native_id</name> <operator pos:start="103:27" pos:end="103:27">=</operator> <literal type="number" pos:start="103:29" pos:end="103:29">1</literal></expr>;</expr_stmt>

                <break pos:start="105:17" pos:end="105:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="113:9" pos:end="123:9"><if pos:start="113:9" pos:end="123:9">if <condition pos:start="113:12" pos:end="115:79">(<expr pos:start="113:13" pos:end="115:78"><name pos:start="113:13" pos:end="113:21"><name pos:start="113:13" pos:end="113:15">mkv</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:21">mode</name></name> <operator pos:start="113:23" pos:end="113:24">==</operator> <name pos:start="113:26" pos:end="113:34">MODE_WEBM</name> <operator pos:start="113:36" pos:end="113:37">&amp;&amp;</operator> <operator pos:start="113:39" pos:end="113:39">!</operator><operator pos:start="113:40" pos:end="113:40">(</operator><name pos:start="113:41" pos:end="113:55"><name pos:start="113:41" pos:end="113:45">codec</name><operator pos:start="113:46" pos:end="113:47">-&gt;</operator><name pos:start="113:48" pos:end="113:55">codec_id</name></name> <operator pos:start="113:57" pos:end="113:58">==</operator> <name pos:start="113:60" pos:end="113:74">AV_CODEC_ID_VP8</name> <operator pos:start="113:76" pos:end="113:77">||</operator>

                                        <name pos:start="115:41" pos:end="115:55"><name pos:start="115:41" pos:end="115:45">codec</name><operator pos:start="115:46" pos:end="115:47">-&gt;</operator><name pos:start="115:48" pos:end="115:55">codec_id</name></name> <operator pos:start="115:57" pos:end="115:58">==</operator> <name pos:start="115:60" pos:end="115:77">AV_CODEC_ID_VORBIS</name><operator pos:start="115:78" pos:end="115:78">)</operator></expr>)</condition> <block pos:start="115:81" pos:end="123:9">{<block_content pos:start="117:13" pos:end="121:35">

            <expr_stmt pos:start="117:13" pos:end="119:80"><expr pos:start="117:13" pos:end="119:79"><call pos:start="117:13" pos:end="119:79"><name pos:start="117:13" pos:end="117:18">av_log</name><argument_list pos:start="117:19" pos:end="119:79">(<argument pos:start="117:20" pos:end="117:20"><expr pos:start="117:20" pos:end="117:20"><name pos:start="117:20" pos:end="117:20">s</name></expr></argument>, <argument pos:start="117:23" pos:end="117:34"><expr pos:start="117:23" pos:end="117:34"><name pos:start="117:23" pos:end="117:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="119:20" pos:end="119:78"><expr pos:start="119:20" pos:end="119:78"><literal type="string" pos:start="119:20" pos:end="119:78">"Only VP8 video and Vorbis audio are supported for WebM.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="121:13" pos:end="121:35">return <expr pos:start="121:20" pos:end="121:34"><call pos:start="121:20" pos:end="121:34"><name pos:start="121:20" pos:end="121:26">AVERROR</name><argument_list pos:start="121:27" pos:end="121:34">(<argument pos:start="121:28" pos:end="121:33"><expr pos:start="121:28" pos:end="121:33"><name pos:start="121:28" pos:end="121:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="127:9" pos:end="305:9">switch <condition pos:start="127:16" pos:end="127:34">(<expr pos:start="127:17" pos:end="127:33"><name pos:start="127:17" pos:end="127:33"><name pos:start="127:17" pos:end="127:21">codec</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:33">codec_type</name></name></expr>)</condition> <block pos:start="127:36" pos:end="305:9">{<block_content pos:start="129:13" pos:end="303:22">

            <case pos:start="129:13" pos:end="129:36">case <expr pos:start="129:18" pos:end="129:35"><name pos:start="129:18" pos:end="129:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="131:17" pos:end="131:84"><expr pos:start="131:17" pos:end="131:83"><call pos:start="131:17" pos:end="131:83"><name pos:start="131:17" pos:end="131:29">put_ebml_uint</name><argument_list pos:start="131:30" pos:end="131:83">(<argument pos:start="131:31" pos:end="131:32"><expr pos:start="131:31" pos:end="131:32"><name pos:start="131:31" pos:end="131:32">pb</name></expr></argument>, <argument pos:start="131:35" pos:end="131:55"><expr pos:start="131:35" pos:end="131:55"><name pos:start="131:35" pos:end="131:55">MATROSKA_ID_TRACKTYPE</name></expr></argument>, <argument pos:start="131:58" pos:end="131:82"><expr pos:start="131:58" pos:end="131:82"><name pos:start="131:58" pos:end="131:82">MATROSKA_TRACK_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="133:17" pos:end="139:102"><if pos:start="133:17" pos:end="135:104">if<condition pos:start="133:19" pos:end="133:129">(<expr pos:start="133:20" pos:end="133:128"><name pos:start="133:20" pos:end="133:41"><name pos:start="133:20" pos:end="133:21">st</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:37">avg_frame_rate</name><operator pos:start="133:38" pos:end="133:38">.</operator><name pos:start="133:39" pos:end="133:41">num</name></name> <operator pos:start="133:43" pos:end="133:44">&amp;&amp;</operator> <name pos:start="133:46" pos:end="133:67"><name pos:start="133:46" pos:end="133:47">st</name><operator pos:start="133:48" pos:end="133:49">-&gt;</operator><name pos:start="133:50" pos:end="133:63">avg_frame_rate</name><operator pos:start="133:64" pos:end="133:64">.</operator><name pos:start="133:65" pos:end="133:67">den</name></name> <operator pos:start="133:69" pos:end="133:70">&amp;&amp;</operator> <literal type="number" pos:start="133:72" pos:end="133:74">1.0</literal><operator pos:start="133:75" pos:end="133:75">/</operator><call pos:start="133:76" pos:end="133:101"><name pos:start="133:76" pos:end="133:81">av_q2d</name><argument_list pos:start="133:82" pos:end="133:101">(<argument pos:start="133:83" pos:end="133:100"><expr pos:start="133:83" pos:end="133:100"><name pos:start="133:83" pos:end="133:100"><name pos:start="133:83" pos:end="133:84">st</name><operator pos:start="133:85" pos:end="133:86">-&gt;</operator><name pos:start="133:87" pos:end="133:100">avg_frame_rate</name></name></expr></argument>)</argument_list></call> <operator pos:start="133:103" pos:end="133:103">&gt;</operator> <call pos:start="133:105" pos:end="133:128"><name pos:start="133:105" pos:end="133:110">av_q2d</name><argument_list pos:start="133:111" pos:end="133:128">(<argument pos:start="133:112" pos:end="133:127"><expr pos:start="133:112" pos:end="133:127"><name pos:start="133:112" pos:end="133:127"><name pos:start="133:112" pos:end="133:116">codec</name><operator pos:start="133:117" pos:end="133:118">-&gt;</operator><name pos:start="133:119" pos:end="133:127">time_base</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="135:21" pos:end="135:104"><block_content pos:start="135:21" pos:end="135:104">

                    <expr_stmt pos:start="135:21" pos:end="135:104"><expr pos:start="135:21" pos:end="135:103"><call pos:start="135:21" pos:end="135:103"><name pos:start="135:21" pos:end="135:33">put_ebml_uint</name><argument_list pos:start="135:34" pos:end="135:103">(<argument pos:start="135:35" pos:end="135:36"><expr pos:start="135:35" pos:end="135:36"><name pos:start="135:35" pos:end="135:36">pb</name></expr></argument>, <argument pos:start="135:39" pos:end="135:70"><expr pos:start="135:39" pos:end="135:70"><name pos:start="135:39" pos:end="135:70">MATROSKA_ID_TRACKDEFAULTDURATION</name></expr></argument>, <argument pos:start="135:73" pos:end="135:102"><expr pos:start="135:73" pos:end="135:102"><literal type="number" pos:start="135:73" pos:end="135:75">1E9</literal><operator pos:start="135:76" pos:end="135:76">/</operator><call pos:start="135:77" pos:end="135:102"><name pos:start="135:77" pos:end="135:82">av_q2d</name><argument_list pos:start="135:83" pos:end="135:102">(<argument pos:start="135:84" pos:end="135:101"><expr pos:start="135:84" pos:end="135:101"><name pos:start="135:84" pos:end="135:101"><name pos:start="135:84" pos:end="135:85">st</name><operator pos:start="135:86" pos:end="135:87">-&gt;</operator><name pos:start="135:88" pos:end="135:101">avg_frame_rate</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="137:17" pos:end="139:102">else<block type="pseudo" pos:start="139:21" pos:end="139:102"><block_content pos:start="139:21" pos:end="139:102">

                    <expr_stmt pos:start="139:21" pos:end="139:102"><expr pos:start="139:21" pos:end="139:101"><call pos:start="139:21" pos:end="139:101"><name pos:start="139:21" pos:end="139:33">put_ebml_uint</name><argument_list pos:start="139:34" pos:end="139:101">(<argument pos:start="139:35" pos:end="139:36"><expr pos:start="139:35" pos:end="139:36"><name pos:start="139:35" pos:end="139:36">pb</name></expr></argument>, <argument pos:start="139:39" pos:end="139:70"><expr pos:start="139:39" pos:end="139:70"><name pos:start="139:39" pos:end="139:70">MATROSKA_ID_TRACKDEFAULTDURATION</name></expr></argument>, <argument pos:start="139:73" pos:end="139:100"><expr pos:start="139:73" pos:end="139:100"><call pos:start="139:73" pos:end="139:96"><name pos:start="139:73" pos:end="139:78">av_q2d</name><argument_list pos:start="139:79" pos:end="139:96">(<argument pos:start="139:80" pos:end="139:95"><expr pos:start="139:80" pos:end="139:95"><name pos:start="139:80" pos:end="139:95"><name pos:start="139:80" pos:end="139:84">codec</name><operator pos:start="139:85" pos:end="139:86">-&gt;</operator><name pos:start="139:87" pos:end="139:95">time_base</name></name></expr></argument>)</argument_list></call><operator pos:start="139:97" pos:end="139:97">*</operator><literal type="number" pos:start="139:98" pos:end="139:100">1E9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <if_stmt pos:start="143:17" pos:end="155:30"><if pos:start="143:17" pos:end="155:30">if <condition pos:start="143:20" pos:end="153:64">(<expr pos:start="143:21" pos:end="153:63"><operator pos:start="143:21" pos:end="143:21">!</operator><name pos:start="143:22" pos:end="143:30">native_id</name> <operator pos:start="143:32" pos:end="143:33">&amp;&amp;</operator>

                      <call pos:start="145:23" pos:end="145:79"><name pos:start="145:23" pos:end="145:38">ff_codec_get_tag</name><argument_list pos:start="145:39" pos:end="145:79">(<argument pos:start="145:40" pos:end="145:61"><expr pos:start="145:40" pos:end="145:61"><name pos:start="145:40" pos:end="145:61">ff_codec_movvideo_tags</name></expr></argument>, <argument pos:start="145:64" pos:end="145:78"><expr pos:start="145:64" pos:end="145:78"><name pos:start="145:64" pos:end="145:78"><name pos:start="145:64" pos:end="145:68">codec</name><operator pos:start="145:69" pos:end="145:70">-&gt;</operator><name pos:start="145:71" pos:end="145:78">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="145:81" pos:end="145:82">&amp;&amp;</operator>

                    <operator pos:start="147:21" pos:end="147:21">(</operator><operator pos:start="147:22" pos:end="147:22">!</operator><call pos:start="147:23" pos:end="147:76"><name pos:start="147:23" pos:end="147:38">ff_codec_get_tag</name><argument_list pos:start="147:39" pos:end="147:76">(<argument pos:start="147:40" pos:end="147:56"><expr pos:start="147:40" pos:end="147:56"><name pos:start="147:40" pos:end="147:56">ff_codec_bmp_tags</name></expr></argument>,   <argument pos:start="147:61" pos:end="147:75"><expr pos:start="147:61" pos:end="147:75"><name pos:start="147:61" pos:end="147:75"><name pos:start="147:61" pos:end="147:65">codec</name><operator pos:start="147:66" pos:end="147:67">-&gt;</operator><name pos:start="147:68" pos:end="147:75">codec_id</name></name></expr></argument>)</argument_list></call>

                     <operator pos:start="149:22" pos:end="149:23">||</operator> <name pos:start="149:25" pos:end="149:39"><name pos:start="149:25" pos:end="149:29">codec</name><operator pos:start="149:30" pos:end="149:31">-&gt;</operator><name pos:start="149:32" pos:end="149:39">codec_id</name></name> <operator pos:start="149:41" pos:end="149:42">==</operator> <name pos:start="149:44" pos:end="149:59">AV_CODEC_ID_SVQ1</name>

                     <operator pos:start="151:22" pos:end="151:23">||</operator> <name pos:start="151:25" pos:end="151:39"><name pos:start="151:25" pos:end="151:29">codec</name><operator pos:start="151:30" pos:end="151:31">-&gt;</operator><name pos:start="151:32" pos:end="151:39">codec_id</name></name> <operator pos:start="151:41" pos:end="151:42">==</operator> <name pos:start="151:44" pos:end="151:59">AV_CODEC_ID_SVQ3</name>

                     <operator pos:start="153:22" pos:end="153:23">||</operator> <name pos:start="153:25" pos:end="153:39"><name pos:start="153:25" pos:end="153:29">codec</name><operator pos:start="153:30" pos:end="153:31">-&gt;</operator><name pos:start="153:32" pos:end="153:39">codec_id</name></name> <operator pos:start="153:41" pos:end="153:42">==</operator> <name pos:start="153:44" pos:end="153:62">AV_CODEC_ID_CINEPAK</name><operator pos:start="153:63" pos:end="153:63">)</operator></expr>)</condition><block type="pseudo" pos:start="155:21" pos:end="155:30"><block_content pos:start="155:21" pos:end="155:30">

                    <expr_stmt pos:start="155:21" pos:end="155:30"><expr pos:start="155:21" pos:end="155:29"><name pos:start="155:21" pos:end="155:25">qt_id</name> <operator pos:start="155:27" pos:end="155:27">=</operator> <literal type="number" pos:start="155:29" pos:end="155:29">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="159:17" pos:end="171:17"><if pos:start="159:17" pos:end="161:76">if <condition pos:start="159:20" pos:end="159:26">(<expr pos:start="159:21" pos:end="159:25"><name pos:start="159:21" pos:end="159:25">qt_id</name></expr>)</condition><block type="pseudo" pos:start="161:21" pos:end="161:76"><block_content pos:start="161:21" pos:end="161:76">

                    <expr_stmt pos:start="161:21" pos:end="161:76"><expr pos:start="161:21" pos:end="161:75"><call pos:start="161:21" pos:end="161:75"><name pos:start="161:21" pos:end="161:35">put_ebml_string</name><argument_list pos:start="161:36" pos:end="161:75">(<argument pos:start="161:37" pos:end="161:38"><expr pos:start="161:37" pos:end="161:38"><name pos:start="161:37" pos:end="161:38">pb</name></expr></argument>, <argument pos:start="161:41" pos:end="161:59"><expr pos:start="161:41" pos:end="161:59"><name pos:start="161:41" pos:end="161:59">MATROSKA_ID_CODECID</name></expr></argument>, <argument pos:start="161:62" pos:end="161:74"><expr pos:start="161:62" pos:end="161:74"><literal type="string" pos:start="161:62" pos:end="161:74">"V_QUICKTIME"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="163:17" pos:end="171:17">else if <condition pos:start="163:25" pos:end="163:36">(<expr pos:start="163:26" pos:end="163:35"><operator pos:start="163:26" pos:end="163:26">!</operator><name pos:start="163:27" pos:end="163:35">native_id</name></expr>)</condition> <block pos:start="163:38" pos:end="171:17">{<block_content pos:start="167:21" pos:end="169:49">

                    <comment type="line" pos:start="165:21" pos:end="165:73">// if there is no mkv-specific codec ID, use VFW mode</comment>

                    <expr_stmt pos:start="167:21" pos:end="167:80"><expr pos:start="167:21" pos:end="167:79"><call pos:start="167:21" pos:end="167:79"><name pos:start="167:21" pos:end="167:35">put_ebml_string</name><argument_list pos:start="167:36" pos:end="167:79">(<argument pos:start="167:37" pos:end="167:38"><expr pos:start="167:37" pos:end="167:38"><name pos:start="167:37" pos:end="167:38">pb</name></expr></argument>, <argument pos:start="167:41" pos:end="167:59"><expr pos:start="167:41" pos:end="167:59"><name pos:start="167:41" pos:end="167:59">MATROSKA_ID_CODECID</name></expr></argument>, <argument pos:start="167:62" pos:end="167:78"><expr pos:start="167:62" pos:end="167:78"><literal type="string" pos:start="167:62" pos:end="167:78">"V_MS/VFW/FOURCC"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="169:21" pos:end="169:49"><expr pos:start="169:21" pos:end="169:48"><name pos:start="169:21" pos:end="169:34"><name pos:start="169:21" pos:end="169:23">mkv</name><operator pos:start="169:24" pos:end="169:25">-&gt;</operator><name pos:start="169:26" pos:end="169:31">tracks</name><index pos:start="169:32" pos:end="169:34">[<expr pos:start="169:33" pos:end="169:33"><name pos:start="169:33" pos:end="169:33">i</name></expr>]</index></name><operator pos:start="169:35" pos:end="169:35">.</operator><name pos:start="169:36" pos:end="169:44">write_dts</name> <operator pos:start="169:46" pos:end="169:46">=</operator> <literal type="number" pos:start="169:48" pos:end="169:48">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="175:17" pos:end="175:75"><expr pos:start="175:17" pos:end="175:74"><name pos:start="175:17" pos:end="175:23">subinfo</name> <operator pos:start="175:25" pos:end="175:25">=</operator> <call pos:start="175:27" pos:end="175:74"><name pos:start="175:27" pos:end="175:43">start_ebml_master</name><argument_list pos:start="175:44" pos:end="175:74">(<argument pos:start="175:45" pos:end="175:46"><expr pos:start="175:45" pos:end="175:46"><name pos:start="175:45" pos:end="175:46">pb</name></expr></argument>, <argument pos:start="175:49" pos:end="175:70"><expr pos:start="175:49" pos:end="175:70"><name pos:start="175:49" pos:end="175:70">MATROSKA_ID_TRACKVIDEO</name></expr></argument>, <argument pos:start="175:73" pos:end="175:73"><expr pos:start="175:73" pos:end="175:73"><literal type="number" pos:start="175:73" pos:end="175:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:start="177:17" pos:end="177:39">// XXX: interlace flag?</comment>

                <expr_stmt pos:start="179:17" pos:end="179:79"><expr pos:start="179:17" pos:end="179:78"><call pos:start="179:17" pos:end="179:78"><name pos:start="179:17" pos:end="179:29">put_ebml_uint</name> <argument_list pos:start="179:31" pos:end="179:78">(<argument pos:start="179:32" pos:end="179:33"><expr pos:start="179:32" pos:end="179:33"><name pos:start="179:32" pos:end="179:33">pb</name></expr></argument>, <argument pos:start="179:36" pos:end="179:62"><expr pos:start="179:36" pos:end="179:62"><name pos:start="179:36" pos:end="179:62">MATROSKA_ID_VIDEOPIXELWIDTH</name></expr></argument> , <argument pos:start="179:66" pos:end="179:77"><expr pos:start="179:66" pos:end="179:77"><name pos:start="179:66" pos:end="179:77"><name pos:start="179:66" pos:end="179:70">codec</name><operator pos:start="179:71" pos:end="179:72">-&gt;</operator><name pos:start="179:73" pos:end="179:77">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:80"><expr pos:start="181:17" pos:end="181:79"><call pos:start="181:17" pos:end="181:79"><name pos:start="181:17" pos:end="181:29">put_ebml_uint</name> <argument_list pos:start="181:31" pos:end="181:79">(<argument pos:start="181:32" pos:end="181:33"><expr pos:start="181:32" pos:end="181:33"><name pos:start="181:32" pos:end="181:33">pb</name></expr></argument>, <argument pos:start="181:36" pos:end="181:63"><expr pos:start="181:36" pos:end="181:63"><name pos:start="181:36" pos:end="181:63">MATROSKA_ID_VIDEOPIXELHEIGHT</name></expr></argument>, <argument pos:start="181:66" pos:end="181:78"><expr pos:start="181:66" pos:end="181:78"><name pos:start="181:66" pos:end="181:78"><name pos:start="181:66" pos:end="181:70">codec</name><operator pos:start="181:71" pos:end="181:72">-&gt;</operator><name pos:start="181:73" pos:end="181:78">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="185:17" pos:end="221:17"><if pos:start="185:17" pos:end="221:17">if <condition pos:start="185:20" pos:end="187:78">(<expr pos:start="185:21" pos:end="187:77"><operator pos:start="185:21" pos:end="185:21">(</operator><name pos:start="185:22" pos:end="185:24">tag</name> <operator pos:start="185:26" pos:end="185:26">=</operator> <call pos:start="185:28" pos:end="185:76"><name pos:start="185:28" pos:end="185:38">av_dict_get</name><argument_list pos:start="185:39" pos:end="185:76">(<argument pos:start="185:40" pos:end="185:51"><expr pos:start="185:40" pos:end="185:51"><name pos:start="185:40" pos:end="185:51"><name pos:start="185:40" pos:end="185:41">st</name><operator pos:start="185:42" pos:end="185:43">-&gt;</operator><name pos:start="185:44" pos:end="185:51">metadata</name></name></expr></argument>, <argument pos:start="185:54" pos:end="185:66"><expr pos:start="185:54" pos:end="185:66"><literal type="string" pos:start="185:54" pos:end="185:66">"stereo_mode"</literal></expr></argument>, <argument pos:start="185:69" pos:end="185:72"><expr pos:start="185:69" pos:end="185:72"><name pos:start="185:69" pos:end="185:72">NULL</name></expr></argument>, <argument pos:start="185:75" pos:end="185:75"><expr pos:start="185:75" pos:end="185:75"><literal type="number" pos:start="185:75" pos:end="185:75">0</literal></expr></argument>)</argument_list></call><operator pos:start="185:77" pos:end="185:77">)</operator> <operator pos:start="185:79" pos:end="185:80">||</operator>

                    <operator pos:start="187:21" pos:end="187:21">(</operator><name pos:start="187:22" pos:end="187:24">tag</name> <operator pos:start="187:26" pos:end="187:26">=</operator> <call pos:start="187:28" pos:end="187:76"><name pos:start="187:28" pos:end="187:38">av_dict_get</name><argument_list pos:start="187:39" pos:end="187:76">( <argument pos:start="187:41" pos:end="187:51"><expr pos:start="187:41" pos:end="187:51"><name pos:start="187:41" pos:end="187:51"><name pos:start="187:41" pos:end="187:41">s</name><operator pos:start="187:42" pos:end="187:43">-&gt;</operator><name pos:start="187:44" pos:end="187:51">metadata</name></name></expr></argument>, <argument pos:start="187:54" pos:end="187:66"><expr pos:start="187:54" pos:end="187:66"><literal type="string" pos:start="187:54" pos:end="187:66">"stereo_mode"</literal></expr></argument>, <argument pos:start="187:69" pos:end="187:72"><expr pos:start="187:69" pos:end="187:72"><name pos:start="187:69" pos:end="187:72">NULL</name></expr></argument>, <argument pos:start="187:75" pos:end="187:75"><expr pos:start="187:75" pos:end="187:75"><literal type="number" pos:start="187:75" pos:end="187:75">0</literal></expr></argument>)</argument_list></call><operator pos:start="187:77" pos:end="187:77">)</operator></expr>)</condition> <block pos:start="187:80" pos:end="221:17">{<block_content pos:start="191:21" pos:end="219:80">

                    <comment type="line" pos:start="189:21" pos:end="189:44">// save stereo mode flag</comment>

                    <decl_stmt pos:start="191:21" pos:end="191:72"><decl pos:start="191:21" pos:end="191:71"><type pos:start="191:21" pos:end="191:28"><name pos:start="191:21" pos:end="191:28">uint64_t</name></type> <name pos:start="191:30" pos:end="191:36">st_mode</name> <init pos:start="191:38" pos:end="191:71">= <expr pos:start="191:40" pos:end="191:71"><name pos:start="191:40" pos:end="191:71">MATROSKA_VIDEO_STEREO_MODE_COUNT</name></expr></init></decl>;</decl_stmt>



                    <for pos:start="195:21" pos:end="203:25">for <control pos:start="195:25" pos:end="195:70">(<init pos:start="195:26" pos:end="195:29"><expr pos:start="195:26" pos:end="195:28"><name pos:start="195:26" pos:end="195:26">j</name><operator pos:start="195:27" pos:end="195:27">=</operator><literal type="number" pos:start="195:28" pos:end="195:28">0</literal></expr>;</init> <condition pos:start="195:31" pos:end="195:65"><expr pos:start="195:31" pos:end="195:64"><name pos:start="195:31" pos:end="195:31">j</name><operator pos:start="195:32" pos:end="195:32">&lt;</operator><name pos:start="195:33" pos:end="195:64">MATROSKA_VIDEO_STEREO_MODE_COUNT</name></expr>;</condition> <incr pos:start="195:67" pos:end="195:69"><expr pos:start="195:67" pos:end="195:69"><name pos:start="195:67" pos:end="195:67">j</name><operator pos:start="195:68" pos:end="195:69">++</operator></expr></incr>)</control><block type="pseudo" pos:start="197:25" pos:end="203:25"><block_content pos:start="197:25" pos:end="203:25">

                        <if_stmt pos:start="197:25" pos:end="203:25"><if pos:start="197:25" pos:end="203:25">if <condition pos:start="197:28" pos:end="197:82">(<expr pos:start="197:29" pos:end="197:81"><operator pos:start="197:29" pos:end="197:29">!</operator><call pos:start="197:30" pos:end="197:81"><name pos:start="197:30" pos:end="197:35">strcmp</name><argument_list pos:start="197:36" pos:end="197:81">(<argument pos:start="197:37" pos:end="197:46"><expr pos:start="197:37" pos:end="197:46"><name pos:start="197:37" pos:end="197:46"><name pos:start="197:37" pos:end="197:39">tag</name><operator pos:start="197:40" pos:end="197:41">-&gt;</operator><name pos:start="197:42" pos:end="197:46">value</name></name></expr></argument>, <argument pos:start="197:49" pos:end="197:80"><expr pos:start="197:49" pos:end="197:80"><name pos:start="197:49" pos:end="197:80"><name pos:start="197:49" pos:end="197:77">ff_matroska_video_stereo_mode</name><index pos:start="197:78" pos:end="197:80">[<expr pos:start="197:79" pos:end="197:79"><name pos:start="197:79" pos:end="197:79">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="197:83" pos:end="203:25">{<block_content pos:start="199:29" pos:end="201:34">

                            <expr_stmt pos:start="199:29" pos:end="199:40"><expr pos:start="199:29" pos:end="199:39"><name pos:start="199:29" pos:end="199:35">st_mode</name> <operator pos:start="199:37" pos:end="199:37">=</operator> <name pos:start="199:39" pos:end="199:39">j</name></expr>;</expr_stmt>

                            <break pos:start="201:29" pos:end="201:34">break;</break>

                        </block_content>}</block></if></if_stmt></block_content></block></for>



                    <if_stmt pos:start="207:21" pos:end="219:80"><if pos:start="207:21" pos:end="217:21">if <condition pos:start="207:24" pos:end="209:71">(<expr pos:start="207:25" pos:end="209:70"><operator pos:start="207:25" pos:end="207:25">(</operator><name pos:start="207:26" pos:end="207:34"><name pos:start="207:26" pos:end="207:28">mkv</name><operator pos:start="207:29" pos:end="207:30">-&gt;</operator><name pos:start="207:31" pos:end="207:34">mode</name></name> <operator pos:start="207:36" pos:end="207:37">==</operator> <name pos:start="207:39" pos:end="207:47">MODE_WEBM</name> <operator pos:start="207:49" pos:end="207:50">&amp;&amp;</operator> <name pos:start="207:52" pos:end="207:58">st_mode</name> <operator pos:start="207:60" pos:end="207:60">&gt;</operator> <literal type="number" pos:start="207:62" pos:end="207:62">3</literal> <operator pos:start="207:64" pos:end="207:65">&amp;&amp;</operator> <name pos:start="207:67" pos:end="207:73">st_mode</name> <operator pos:start="207:75" pos:end="207:76">!=</operator> <literal type="number" pos:start="207:78" pos:end="207:79">11</literal><operator pos:start="207:80" pos:end="207:80">)</operator>

                        <operator pos:start="209:25" pos:end="209:26">||</operator> <name pos:start="209:28" pos:end="209:34">st_mode</name> <operator pos:start="209:36" pos:end="209:37">&gt;=</operator> <name pos:start="209:39" pos:end="209:70">MATROSKA_VIDEO_STEREO_MODE_COUNT</name></expr>)</condition> <block pos:start="209:73" pos:end="217:21">{<block_content pos:start="211:25" pos:end="215:47">

                        <expr_stmt pos:start="211:25" pos:end="213:76"><expr pos:start="211:25" pos:end="213:75"><call pos:start="211:25" pos:end="213:75"><name pos:start="211:25" pos:end="211:30">av_log</name><argument_list pos:start="211:31" pos:end="213:75">(<argument pos:start="211:32" pos:end="211:32"><expr pos:start="211:32" pos:end="211:32"><name pos:start="211:32" pos:end="211:32">s</name></expr></argument>, <argument pos:start="211:35" pos:end="211:46"><expr pos:start="211:35" pos:end="211:46"><name pos:start="211:35" pos:end="211:46">AV_LOG_ERROR</name></expr></argument>,

                               <argument pos:start="213:32" pos:end="213:74"><expr pos:start="213:32" pos:end="213:74"><literal type="string" pos:start="213:32" pos:end="213:74">"The specified stereo mode is not valid.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="215:25" pos:end="215:47">return <expr pos:start="215:32" pos:end="215:46"><call pos:start="215:32" pos:end="215:46"><name pos:start="215:32" pos:end="215:38">AVERROR</name><argument_list pos:start="215:39" pos:end="215:46">(<argument pos:start="215:40" pos:end="215:45"><expr pos:start="215:40" pos:end="215:45"><name pos:start="215:40" pos:end="215:45">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

                    </block_content>}</block></if> <else pos:start="217:23" pos:end="219:80">else<block type="pseudo" pos:start="219:25" pos:end="219:80"><block_content pos:start="219:25" pos:end="219:80">

                        <expr_stmt pos:start="219:25" pos:end="219:80"><expr pos:start="219:25" pos:end="219:79"><call pos:start="219:25" pos:end="219:79"><name pos:start="219:25" pos:end="219:37">put_ebml_uint</name><argument_list pos:start="219:38" pos:end="219:79">(<argument pos:start="219:39" pos:end="219:40"><expr pos:start="219:39" pos:end="219:40"><name pos:start="219:39" pos:end="219:40">pb</name></expr></argument>, <argument pos:start="219:43" pos:end="219:69"><expr pos:start="219:43" pos:end="219:69"><name pos:start="219:43" pos:end="219:69">MATROSKA_ID_VIDEOSTEREOMODE</name></expr></argument>, <argument pos:start="219:72" pos:end="219:78"><expr pos:start="219:72" pos:end="219:78"><name pos:start="219:72" pos:end="219:78">st_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="225:17" pos:end="233:17"><if pos:start="225:17" pos:end="233:17">if <condition pos:start="225:20" pos:end="225:48">(<expr pos:start="225:21" pos:end="225:47"><name pos:start="225:21" pos:end="225:47"><name pos:start="225:21" pos:end="225:22">st</name><operator pos:start="225:23" pos:end="225:24">-&gt;</operator><name pos:start="225:25" pos:end="225:43">sample_aspect_ratio</name><operator pos:start="225:44" pos:end="225:44">.</operator><name pos:start="225:45" pos:end="225:47">num</name></name></expr>)</condition> <block pos:start="225:50" pos:end="233:17">{<block_content pos:start="227:21" pos:end="231:85">

                    <decl_stmt pos:start="227:21" pos:end="227:117"><decl pos:start="227:21" pos:end="227:116"><type pos:start="227:21" pos:end="227:23"><name pos:start="227:21" pos:end="227:23">int</name></type> <name pos:start="227:25" pos:end="227:31">d_width</name> <init pos:start="227:33" pos:end="227:116">= <expr pos:start="227:35" pos:end="227:116"><call pos:start="227:35" pos:end="227:116"><name pos:start="227:35" pos:end="227:44">av_rescale</name><argument_list pos:start="227:45" pos:end="227:116">(<argument pos:start="227:46" pos:end="227:57"><expr pos:start="227:46" pos:end="227:57"><name pos:start="227:46" pos:end="227:57"><name pos:start="227:46" pos:end="227:50">codec</name><operator pos:start="227:51" pos:end="227:52">-&gt;</operator><name pos:start="227:53" pos:end="227:57">width</name></name></expr></argument>, <argument pos:start="227:60" pos:end="227:86"><expr pos:start="227:60" pos:end="227:86"><name pos:start="227:60" pos:end="227:86"><name pos:start="227:60" pos:end="227:61">st</name><operator pos:start="227:62" pos:end="227:63">-&gt;</operator><name pos:start="227:64" pos:end="227:82">sample_aspect_ratio</name><operator pos:start="227:83" pos:end="227:83">.</operator><name pos:start="227:84" pos:end="227:86">num</name></name></expr></argument>, <argument pos:start="227:89" pos:end="227:115"><expr pos:start="227:89" pos:end="227:115"><name pos:start="227:89" pos:end="227:115"><name pos:start="227:89" pos:end="227:90">st</name><operator pos:start="227:91" pos:end="227:92">-&gt;</operator><name pos:start="227:93" pos:end="227:111">sample_aspect_ratio</name><operator pos:start="227:112" pos:end="227:112">.</operator><name pos:start="227:113" pos:end="227:115">den</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="229:21" pos:end="229:79"><expr pos:start="229:21" pos:end="229:78"><call pos:start="229:21" pos:end="229:78"><name pos:start="229:21" pos:end="229:33">put_ebml_uint</name><argument_list pos:start="229:34" pos:end="229:78">(<argument pos:start="229:35" pos:end="229:36"><expr pos:start="229:35" pos:end="229:36"><name pos:start="229:35" pos:end="229:36">pb</name></expr></argument>, <argument pos:start="229:39" pos:end="229:67"><expr pos:start="229:39" pos:end="229:67"><name pos:start="229:39" pos:end="229:67">MATROSKA_ID_VIDEODISPLAYWIDTH</name></expr></argument> , <argument pos:start="229:71" pos:end="229:77"><expr pos:start="229:71" pos:end="229:77"><name pos:start="229:71" pos:end="229:77">d_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="231:21" pos:end="231:85"><expr pos:start="231:21" pos:end="231:84"><call pos:start="231:21" pos:end="231:84"><name pos:start="231:21" pos:end="231:33">put_ebml_uint</name><argument_list pos:start="231:34" pos:end="231:84">(<argument pos:start="231:35" pos:end="231:36"><expr pos:start="231:35" pos:end="231:36"><name pos:start="231:35" pos:end="231:36">pb</name></expr></argument>, <argument pos:start="231:39" pos:end="231:68"><expr pos:start="231:39" pos:end="231:68"><name pos:start="231:39" pos:end="231:68">MATROSKA_ID_VIDEODISPLAYHEIGHT</name></expr></argument>, <argument pos:start="231:71" pos:end="231:83"><expr pos:start="231:71" pos:end="231:83"><name pos:start="231:71" pos:end="231:83"><name pos:start="231:71" pos:end="231:75">codec</name><operator pos:start="231:76" pos:end="231:77">-&gt;</operator><name pos:start="231:78" pos:end="231:83">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="237:17" pos:end="243:17"><if pos:start="237:17" pos:end="243:17">if <condition pos:start="237:20" pos:end="237:60">(<expr pos:start="237:21" pos:end="237:59"><name pos:start="237:21" pos:end="237:35"><name pos:start="237:21" pos:end="237:25">codec</name><operator pos:start="237:26" pos:end="237:27">-&gt;</operator><name pos:start="237:28" pos:end="237:35">codec_id</name></name> <operator pos:start="237:37" pos:end="237:38">==</operator> <name pos:start="237:40" pos:end="237:59">AV_CODEC_ID_RAWVIDEO</name></expr>)</condition> <block pos:start="237:62" pos:end="243:17">{<block_content pos:start="239:21" pos:end="241:104">

                    <decl_stmt pos:start="239:21" pos:end="239:72"><decl pos:start="239:21" pos:end="239:71"><type pos:start="239:21" pos:end="239:28"><name pos:start="239:21" pos:end="239:28">uint32_t</name></type> <name pos:start="239:30" pos:end="239:40">color_space</name> <init pos:start="239:42" pos:end="239:71">= <expr pos:start="239:44" pos:end="239:71"><call pos:start="239:44" pos:end="239:71"><name pos:start="239:44" pos:end="239:53">av_le2ne32</name><argument_list pos:start="239:54" pos:end="239:71">(<argument pos:start="239:55" pos:end="239:70"><expr pos:start="239:55" pos:end="239:70"><name pos:start="239:55" pos:end="239:70"><name pos:start="239:55" pos:end="239:59">codec</name><operator pos:start="239:60" pos:end="239:61">-&gt;</operator><name pos:start="239:62" pos:end="239:70">codec_tag</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="241:21" pos:end="241:104"><expr pos:start="241:21" pos:end="241:103"><call pos:start="241:21" pos:end="241:103"><name pos:start="241:21" pos:end="241:35">put_ebml_binary</name><argument_list pos:start="241:36" pos:end="241:103">(<argument pos:start="241:37" pos:end="241:38"><expr pos:start="241:37" pos:end="241:38"><name pos:start="241:37" pos:end="241:38">pb</name></expr></argument>, <argument pos:start="241:41" pos:end="241:67"><expr pos:start="241:41" pos:end="241:67"><name pos:start="241:41" pos:end="241:67">MATROSKA_ID_VIDEOCOLORSPACE</name></expr></argument>, <argument pos:start="241:70" pos:end="241:81"><expr pos:start="241:70" pos:end="241:81"><operator pos:start="241:70" pos:end="241:70">&amp;</operator><name pos:start="241:71" pos:end="241:81">color_space</name></expr></argument>, <argument pos:start="241:84" pos:end="241:102"><expr pos:start="241:84" pos:end="241:102"><sizeof pos:start="241:84" pos:end="241:102">sizeof<argument_list pos:start="241:90" pos:end="241:102">(<argument pos:start="241:91" pos:end="241:101"><expr pos:start="241:91" pos:end="241:101"><name pos:start="241:91" pos:end="241:101">color_space</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="245:17" pos:end="245:45"><expr pos:start="245:17" pos:end="245:44"><call pos:start="245:17" pos:end="245:44"><name pos:start="245:17" pos:end="245:31">end_ebml_master</name><argument_list pos:start="245:32" pos:end="245:44">(<argument pos:start="245:33" pos:end="245:34"><expr pos:start="245:33" pos:end="245:34"><name pos:start="245:33" pos:end="245:34">pb</name></expr></argument>, <argument pos:start="245:37" pos:end="245:43"><expr pos:start="245:37" pos:end="245:43"><name pos:start="245:37" pos:end="245:43">subinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="247:17" pos:end="247:22">break;</break>



            <case pos:start="251:13" pos:end="251:36">case <expr pos:start="251:18" pos:end="251:35"><name pos:start="251:18" pos:end="251:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <expr_stmt pos:start="253:17" pos:end="253:84"><expr pos:start="253:17" pos:end="253:83"><call pos:start="253:17" pos:end="253:83"><name pos:start="253:17" pos:end="253:29">put_ebml_uint</name><argument_list pos:start="253:30" pos:end="253:83">(<argument pos:start="253:31" pos:end="253:32"><expr pos:start="253:31" pos:end="253:32"><name pos:start="253:31" pos:end="253:32">pb</name></expr></argument>, <argument pos:start="253:35" pos:end="253:55"><expr pos:start="253:35" pos:end="253:55"><name pos:start="253:35" pos:end="253:55">MATROSKA_ID_TRACKTYPE</name></expr></argument>, <argument pos:start="253:58" pos:end="253:82"><expr pos:start="253:58" pos:end="253:82"><name pos:start="253:58" pos:end="253:82">MATROSKA_TRACK_TYPE_AUDIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="257:17" pos:end="261:73"><if pos:start="257:17" pos:end="261:73">if <condition pos:start="257:20" pos:end="257:31">(<expr pos:start="257:21" pos:end="257:30"><operator pos:start="257:21" pos:end="257:21">!</operator><name pos:start="257:22" pos:end="257:30">native_id</name></expr>)</condition><block type="pseudo" pos:start="261:21" pos:end="261:73"><block_content pos:start="261:21" pos:end="261:73">

                    <comment type="line" pos:start="259:21" pos:end="259:55">// no mkv-specific ID, use ACM mode</comment>

                    <expr_stmt pos:start="261:21" pos:end="261:73"><expr pos:start="261:21" pos:end="261:72"><call pos:start="261:21" pos:end="261:72"><name pos:start="261:21" pos:end="261:35">put_ebml_string</name><argument_list pos:start="261:36" pos:end="261:72">(<argument pos:start="261:37" pos:end="261:38"><expr pos:start="261:37" pos:end="261:38"><name pos:start="261:37" pos:end="261:38">pb</name></expr></argument>, <argument pos:start="261:41" pos:end="261:59"><expr pos:start="261:41" pos:end="261:59"><name pos:start="261:41" pos:end="261:59">MATROSKA_ID_CODECID</name></expr></argument>, <argument pos:start="261:62" pos:end="261:71"><expr pos:start="261:62" pos:end="261:71"><literal type="string" pos:start="261:62" pos:end="261:71">"A_MS/ACM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="265:17" pos:end="265:75"><expr pos:start="265:17" pos:end="265:74"><name pos:start="265:17" pos:end="265:23">subinfo</name> <operator pos:start="265:25" pos:end="265:25">=</operator> <call pos:start="265:27" pos:end="265:74"><name pos:start="265:27" pos:end="265:43">start_ebml_master</name><argument_list pos:start="265:44" pos:end="265:74">(<argument pos:start="265:45" pos:end="265:46"><expr pos:start="265:45" pos:end="265:46"><name pos:start="265:45" pos:end="265:46">pb</name></expr></argument>, <argument pos:start="265:49" pos:end="265:70"><expr pos:start="265:49" pos:end="265:70"><name pos:start="265:49" pos:end="265:70">MATROSKA_ID_TRACKAUDIO</name></expr></argument>, <argument pos:start="265:73" pos:end="265:73"><expr pos:start="265:73" pos:end="265:73"><literal type="number" pos:start="265:73" pos:end="265:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:84"><expr pos:start="267:17" pos:end="267:83"><call pos:start="267:17" pos:end="267:83"><name pos:start="267:17" pos:end="267:29">put_ebml_uint</name>  <argument_list pos:start="267:32" pos:end="267:83">(<argument pos:start="267:33" pos:end="267:34"><expr pos:start="267:33" pos:end="267:34"><name pos:start="267:33" pos:end="267:34">pb</name></expr></argument>, <argument pos:start="267:37" pos:end="267:61"><expr pos:start="267:37" pos:end="267:61"><name pos:start="267:37" pos:end="267:61">MATROSKA_ID_AUDIOCHANNELS</name></expr></argument>    , <argument pos:start="267:68" pos:end="267:82"><expr pos:start="267:68" pos:end="267:82"><name pos:start="267:68" pos:end="267:82"><name pos:start="267:68" pos:end="267:72">codec</name><operator pos:start="267:73" pos:end="267:74">-&gt;</operator><name pos:start="267:75" pos:end="267:82">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="269:17" pos:end="269:80"><expr pos:start="269:17" pos:end="269:79"><call pos:start="269:17" pos:end="269:79"><name pos:start="269:17" pos:end="269:30">put_ebml_float</name> <argument_list pos:start="269:32" pos:end="269:79">(<argument pos:start="269:33" pos:end="269:34"><expr pos:start="269:33" pos:end="269:34"><name pos:start="269:33" pos:end="269:34">pb</name></expr></argument>, <argument pos:start="269:37" pos:end="269:65"><expr pos:start="269:37" pos:end="269:65"><name pos:start="269:37" pos:end="269:65">MATROSKA_ID_AUDIOSAMPLINGFREQ</name></expr></argument>, <argument pos:start="269:68" pos:end="269:78"><expr pos:start="269:68" pos:end="269:78"><name pos:start="269:68" pos:end="269:78">sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="271:17" pos:end="273:93"><if pos:start="271:17" pos:end="273:93">if <condition pos:start="271:20" pos:end="271:39">(<expr pos:start="271:21" pos:end="271:38"><name pos:start="271:21" pos:end="271:38">output_sample_rate</name></expr>)</condition><block type="pseudo" pos:start="273:21" pos:end="273:93"><block_content pos:start="273:21" pos:end="273:93">

                    <expr_stmt pos:start="273:21" pos:end="273:93"><expr pos:start="273:21" pos:end="273:92"><call pos:start="273:21" pos:end="273:92"><name pos:start="273:21" pos:end="273:34">put_ebml_float</name><argument_list pos:start="273:35" pos:end="273:92">(<argument pos:start="273:36" pos:end="273:37"><expr pos:start="273:36" pos:end="273:37"><name pos:start="273:36" pos:end="273:37">pb</name></expr></argument>, <argument pos:start="273:40" pos:end="273:71"><expr pos:start="273:40" pos:end="273:71"><name pos:start="273:40" pos:end="273:71">MATROSKA_ID_AUDIOOUTSAMPLINGFREQ</name></expr></argument>, <argument pos:start="273:74" pos:end="273:91"><expr pos:start="273:74" pos:end="273:91"><name pos:start="273:74" pos:end="273:91">output_sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="275:17" pos:end="277:76"><if pos:start="275:17" pos:end="277:76">if <condition pos:start="275:20" pos:end="275:30">(<expr pos:start="275:21" pos:end="275:29"><name pos:start="275:21" pos:end="275:29">bit_depth</name></expr>)</condition><block type="pseudo" pos:start="277:21" pos:end="277:76"><block_content pos:start="277:21" pos:end="277:76">

                    <expr_stmt pos:start="277:21" pos:end="277:76"><expr pos:start="277:21" pos:end="277:75"><call pos:start="277:21" pos:end="277:75"><name pos:start="277:21" pos:end="277:33">put_ebml_uint</name><argument_list pos:start="277:34" pos:end="277:75">(<argument pos:start="277:35" pos:end="277:36"><expr pos:start="277:35" pos:end="277:36"><name pos:start="277:35" pos:end="277:36">pb</name></expr></argument>, <argument pos:start="277:39" pos:end="277:63"><expr pos:start="277:39" pos:end="277:63"><name pos:start="277:39" pos:end="277:63">MATROSKA_ID_AUDIOBITDEPTH</name></expr></argument>, <argument pos:start="277:66" pos:end="277:74"><expr pos:start="277:66" pos:end="277:74"><name pos:start="277:66" pos:end="277:74">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:45"><expr pos:start="279:17" pos:end="279:44"><call pos:start="279:17" pos:end="279:44"><name pos:start="279:17" pos:end="279:31">end_ebml_master</name><argument_list pos:start="279:32" pos:end="279:44">(<argument pos:start="279:33" pos:end="279:34"><expr pos:start="279:33" pos:end="279:34"><name pos:start="279:33" pos:end="279:34">pb</name></expr></argument>, <argument pos:start="279:37" pos:end="279:43"><expr pos:start="279:37" pos:end="279:43"><name pos:start="279:37" pos:end="279:43">subinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="281:17" pos:end="281:22">break;</break>



            <case pos:start="285:13" pos:end="285:39">case <expr pos:start="285:18" pos:end="285:38"><name pos:start="285:18" pos:end="285:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="287:17" pos:end="287:87"><expr pos:start="287:17" pos:end="287:86"><call pos:start="287:17" pos:end="287:86"><name pos:start="287:17" pos:end="287:29">put_ebml_uint</name><argument_list pos:start="287:30" pos:end="287:86">(<argument pos:start="287:31" pos:end="287:32"><expr pos:start="287:31" pos:end="287:32"><name pos:start="287:31" pos:end="287:32">pb</name></expr></argument>, <argument pos:start="287:35" pos:end="287:55"><expr pos:start="287:35" pos:end="287:55"><name pos:start="287:35" pos:end="287:55">MATROSKA_ID_TRACKTYPE</name></expr></argument>, <argument pos:start="287:58" pos:end="287:85"><expr pos:start="287:58" pos:end="287:85"><name pos:start="287:58" pos:end="287:85">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="289:17" pos:end="295:17"><if pos:start="289:17" pos:end="295:17">if <condition pos:start="289:20" pos:end="289:31">(<expr pos:start="289:21" pos:end="289:30"><operator pos:start="289:21" pos:end="289:21">!</operator><name pos:start="289:22" pos:end="289:30">native_id</name></expr>)</condition> <block pos:start="289:33" pos:end="295:17">{<block_content pos:start="291:21" pos:end="293:43">

                    <expr_stmt pos:start="291:21" pos:end="291:102"><expr pos:start="291:21" pos:end="291:101"><call pos:start="291:21" pos:end="291:101"><name pos:start="291:21" pos:end="291:26">av_log</name><argument_list pos:start="291:27" pos:end="291:101">(<argument pos:start="291:28" pos:end="291:28"><expr pos:start="291:28" pos:end="291:28"><name pos:start="291:28" pos:end="291:28">s</name></expr></argument>, <argument pos:start="291:31" pos:end="291:42"><expr pos:start="291:31" pos:end="291:42"><name pos:start="291:31" pos:end="291:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="291:45" pos:end="291:83"><expr pos:start="291:45" pos:end="291:83"><literal type="string" pos:start="291:45" pos:end="291:83">"Subtitle codec %d is not supported.\n"</literal></expr></argument>, <argument pos:start="291:86" pos:end="291:100"><expr pos:start="291:86" pos:end="291:100"><name pos:start="291:86" pos:end="291:100"><name pos:start="291:86" pos:end="291:90">codec</name><operator pos:start="291:91" pos:end="291:92">-&gt;</operator><name pos:start="291:93" pos:end="291:100">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="293:21" pos:end="293:43">return <expr pos:start="293:28" pos:end="293:42"><call pos:start="293:28" pos:end="293:42"><name pos:start="293:28" pos:end="293:34">AVERROR</name><argument_list pos:start="293:35" pos:end="293:42">(<argument pos:start="293:36" pos:end="293:41"><expr pos:start="293:36" pos:end="293:41"><name pos:start="293:36" pos:end="293:41">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <break pos:start="297:17" pos:end="297:22">break;</break>

            <default pos:start="299:13" pos:end="299:20">default:</default>

                <expr_stmt pos:start="301:17" pos:end="301:106"><expr pos:start="301:17" pos:end="301:105"><call pos:start="301:17" pos:end="301:105"><name pos:start="301:17" pos:end="301:22">av_log</name><argument_list pos:start="301:23" pos:end="301:105">(<argument pos:start="301:24" pos:end="301:24"><expr pos:start="301:24" pos:end="301:24"><name pos:start="301:24" pos:end="301:24">s</name></expr></argument>, <argument pos:start="301:27" pos:end="301:38"><expr pos:start="301:27" pos:end="301:38"><name pos:start="301:27" pos:end="301:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="301:41" pos:end="301:104"><expr pos:start="301:41" pos:end="301:104"><literal type="string" pos:start="301:41" pos:end="301:104">"Only audio, video, and subtitles are supported for Matroska.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="303:17" pos:end="303:22">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="307:9" pos:end="307:69"><expr pos:start="307:9" pos:end="307:68"><name pos:start="307:9" pos:end="307:11">ret</name> <operator pos:start="307:13" pos:end="307:13">=</operator> <call pos:start="307:15" pos:end="307:68"><name pos:start="307:15" pos:end="307:36">mkv_write_codecprivate</name><argument_list pos:start="307:37" pos:end="307:68">(<argument pos:start="307:38" pos:end="307:38"><expr pos:start="307:38" pos:end="307:38"><name pos:start="307:38" pos:end="307:38">s</name></expr></argument>, <argument pos:start="307:41" pos:end="307:42"><expr pos:start="307:41" pos:end="307:42"><name pos:start="307:41" pos:end="307:42">pb</name></expr></argument>, <argument pos:start="307:45" pos:end="307:49"><expr pos:start="307:45" pos:end="307:49"><name pos:start="307:45" pos:end="307:49">codec</name></expr></argument>, <argument pos:start="307:52" pos:end="307:60"><expr pos:start="307:52" pos:end="307:60"><name pos:start="307:52" pos:end="307:60">native_id</name></expr></argument>, <argument pos:start="307:63" pos:end="307:67"><expr pos:start="307:63" pos:end="307:67"><name pos:start="307:63" pos:end="307:67">qt_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="309:9" pos:end="309:32"><if pos:start="309:9" pos:end="309:32">if <condition pos:start="309:12" pos:end="309:20">(<expr pos:start="309:13" pos:end="309:19"><name pos:start="309:13" pos:end="309:15">ret</name> <operator pos:start="309:17" pos:end="309:17">&lt;</operator> <literal type="number" pos:start="309:19" pos:end="309:19">0</literal></expr>)</condition><block type="pseudo" pos:start="309:22" pos:end="309:32"><block_content pos:start="309:22" pos:end="309:32"> <return pos:start="309:22" pos:end="309:32">return <expr pos:start="309:29" pos:end="309:31"><name pos:start="309:29" pos:end="309:31">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="313:9" pos:end="313:35"><expr pos:start="313:9" pos:end="313:34"><call pos:start="313:9" pos:end="313:34"><name pos:start="313:9" pos:end="313:23">end_ebml_master</name><argument_list pos:start="313:24" pos:end="313:34">(<argument pos:start="313:25" pos:end="313:26"><expr pos:start="313:25" pos:end="313:26"><name pos:start="313:25" pos:end="313:26">pb</name></expr></argument>, <argument pos:start="313:29" pos:end="313:33"><expr pos:start="313:29" pos:end="313:33"><name pos:start="313:29" pos:end="313:33">track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="317:9" pos:end="317:72">// ms precision is the de-facto standard timescale for mkv files</comment>

        <expr_stmt pos:start="319:9" pos:end="319:45"><expr pos:start="319:9" pos:end="319:44"><call pos:start="319:9" pos:end="319:44"><name pos:start="319:9" pos:end="319:27">avpriv_set_pts_info</name><argument_list pos:start="319:28" pos:end="319:44">(<argument pos:start="319:29" pos:end="319:30"><expr pos:start="319:29" pos:end="319:30"><name pos:start="319:29" pos:end="319:30">st</name></expr></argument>, <argument pos:start="319:33" pos:end="319:34"><expr pos:start="319:33" pos:end="319:34"><literal type="number" pos:start="319:33" pos:end="319:34">64</literal></expr></argument>, <argument pos:start="319:37" pos:end="319:37"><expr pos:start="319:37" pos:end="319:37"><literal type="number" pos:start="319:37" pos:end="319:37">1</literal></expr></argument>, <argument pos:start="319:40" pos:end="319:43"><expr pos:start="319:40" pos:end="319:43"><literal type="number" pos:start="319:40" pos:end="319:43">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="323:5" pos:end="323:32"><expr pos:start="323:5" pos:end="323:31"><call pos:start="323:5" pos:end="323:31"><name pos:start="323:5" pos:end="323:19">end_ebml_master</name><argument_list pos:start="323:20" pos:end="323:31">(<argument pos:start="323:21" pos:end="323:22"><expr pos:start="323:21" pos:end="323:22"><name pos:start="323:21" pos:end="323:22">pb</name></expr></argument>, <argument pos:start="323:25" pos:end="323:30"><expr pos:start="323:25" pos:end="323:30"><name pos:start="323:25" pos:end="323:30">tracks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="325:5" pos:end="325:13">return <expr pos:start="325:12" pos:end="325:12"><literal type="number" pos:start="325:12" pos:end="325:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
