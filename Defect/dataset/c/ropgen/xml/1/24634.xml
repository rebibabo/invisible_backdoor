<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24634.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:68"><name pos:start="1:1" pos:end="1:22">print_syscall_ret_addr</name><argument_list pos:start="1:23" pos:end="1:68">(<argument pos:start="1:24" pos:end="1:53">const struct syscallname *name</argument>, <argument pos:start="1:56" pos:end="1:67">abi_long ret</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:5">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:16">errstr</name> <init pos:start="5:18" pos:end="5:23">= <expr pos:start="5:20" pos:end="5:23"><name pos:start="5:20" pos:end="5:23">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:18">(<expr pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:11">ret</name> <operator pos:start="9:13" pos:end="9:14">==</operator> <operator pos:start="9:16" pos:end="9:16">-</operator><literal type="number" pos:start="9:17" pos:end="9:17">1</literal></expr>)</condition> <block pos:start="9:20" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:40">

        <expr_stmt pos:start="11:9" pos:end="11:40"><expr pos:start="11:9" pos:end="11:39"><name pos:start="11:9" pos:end="11:14">errstr</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <call pos:start="11:18" pos:end="11:39"><name pos:start="11:18" pos:end="11:32">target_strerror</name><argument_list pos:start="11:33" pos:end="11:39">(<argument pos:start="11:34" pos:end="11:38"><expr pos:start="11:34" pos:end="11:38"><name pos:start="11:34" pos:end="11:38">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:30">(<expr pos:start="15:9" pos:end="15:29"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:12">ret</name> <operator pos:start="15:14" pos:end="15:15">==</operator> <operator pos:start="15:17" pos:end="15:17">-</operator><literal type="number" pos:start="15:18" pos:end="15:18">1</literal><operator pos:start="15:19" pos:end="15:19">)</operator> <operator pos:start="15:21" pos:end="15:22">&amp;&amp;</operator> <name pos:start="15:24" pos:end="15:29">errstr</name></expr>)</condition> <block pos:start="15:32" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:57">

        <expr_stmt pos:start="17:9" pos:end="17:57"><expr pos:start="17:9" pos:end="17:56"><call pos:start="17:9" pos:end="17:56"><name pos:start="17:9" pos:end="17:16">gemu_log</name><argument_list pos:start="17:17" pos:end="17:56">(<argument pos:start="17:18" pos:end="17:40"><expr pos:start="17:18" pos:end="17:40"><literal type="string" pos:start="17:18" pos:end="17:40">" = -1 errno=%d (%s)\n"</literal></expr></argument>, <argument pos:start="17:43" pos:end="17:47"><expr pos:start="17:43" pos:end="17:47"><name pos:start="17:43" pos:end="17:47">errno</name></expr></argument>, <argument pos:start="17:50" pos:end="17:55"><expr pos:start="17:50" pos:end="17:55"><name pos:start="17:50" pos:end="17:55">errstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="23:5">else <block pos:start="19:12" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:54">

        <expr_stmt pos:start="21:9" pos:end="21:54"><expr pos:start="21:9" pos:end="21:53"><call pos:start="21:9" pos:end="21:53"><name pos:start="21:9" pos:end="21:16">gemu_log</name><argument_list pos:start="21:17" pos:end="21:53">(<argument pos:start="21:18" pos:end="21:47"><expr pos:start="21:18" pos:end="21:47"><literal type="string" pos:start="21:18" pos:end="21:24">" = 0x"</literal> <name pos:start="21:26" pos:end="21:42">TARGET_ABI_FMT_lx</name> <literal type="string" pos:start="21:44" pos:end="21:47">"\n"</literal></expr></argument>, <argument pos:start="21:50" pos:end="21:52"><expr pos:start="21:50" pos:end="21:52"><name pos:start="21:50" pos:end="21:52">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block>
</unit>
