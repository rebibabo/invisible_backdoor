<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21054.c" pos:tabs="8"><function pos:start="1:1" pos:end="185:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mpeg_field_start</name><parameter_list pos:start="1:28" pos:end="1:80">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:42">MpegEncContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:65"><decl pos:start="1:48" pos:end="1:65"><type pos:start="1:48" pos:end="1:65"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:60">uint8_t</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">buf</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:79"><decl pos:start="1:68" pos:end="1:79"><type pos:start="1:68" pos:end="1:79"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:79">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="185:1">{<block_content pos:start="5:5" pos:end="183:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AVCodecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">avctx</name> <init pos:start="5:27" pos:end="5:36">= <expr pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:36">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">Mpeg1Context</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">s1</name>      <init pos:start="7:27" pos:end="7:46">= <expr pos:start="7:29" pos:end="7:46"><operator pos:start="7:29" pos:end="7:29">(</operator><name pos:start="7:30" pos:end="7:41">Mpeg1Context</name> <operator pos:start="7:43" pos:end="7:43">*</operator><operator pos:start="7:44" pos:end="7:44">)</operator> <name pos:start="7:46" pos:end="7:46">s</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:30">/* start frame decoding */</comment>

    <if_stmt pos:start="13:5" pos:end="149:5"><if pos:start="13:5" pos:end="107:5">if <condition pos:start="13:8" pos:end="13:61">(<expr pos:start="13:9" pos:end="13:60"><name pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:22">first_field</name></name> <operator pos:start="13:24" pos:end="13:25">||</operator> <name pos:start="13:27" pos:end="13:46"><name pos:start="13:27" pos:end="13:27">s</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:46">picture_structure</name></name> <operator pos:start="13:48" pos:end="13:49">==</operator> <name pos:start="13:51" pos:end="13:60">PICT_FRAME</name></expr>)</condition> <block pos:start="13:63" pos:end="107:5">{<block_content pos:start="15:9" pos:end="105:42">

        <decl_stmt pos:start="15:9" pos:end="15:34"><decl pos:start="15:9" pos:end="15:33"><type pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:23">AVFrameSideData</name> <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:33">pan_scan</name></decl>;</decl_stmt>



        <if_stmt pos:start="19:9" pos:end="21:22"><if pos:start="19:9" pos:end="21:22">if <condition pos:start="19:12" pos:end="19:45">(<expr pos:start="19:13" pos:end="19:44"><call pos:start="19:13" pos:end="19:40"><name pos:start="19:13" pos:end="19:30">ff_MPV_frame_start</name><argument_list pos:start="19:31" pos:end="19:40">(<argument pos:start="19:32" pos:end="19:32"><expr pos:start="19:32" pos:end="19:32"><name pos:start="19:32" pos:end="19:32">s</name></expr></argument>, <argument pos:start="19:35" pos:end="19:39"><expr pos:start="19:35" pos:end="19:39"><name pos:start="19:35" pos:end="19:39">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="19:42" pos:end="19:42">&lt;</operator> <literal type="number" pos:start="19:44" pos:end="19:44">0</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:22"><block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><call pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:30">ff_mpeg_er_frame_start</name><argument_list pos:start="25:31" pos:end="25:33">(<argument pos:start="25:32" pos:end="25:32"><expr pos:start="25:32" pos:end="25:32"><name pos:start="25:32" pos:end="25:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="29:9" pos:end="29:53">/* first check if we must repeat the frame */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:50"><expr pos:start="31:9" pos:end="31:49"><name pos:start="31:9" pos:end="31:45"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:30">current_picture_ptr</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:33">f</name><operator pos:start="31:34" pos:end="31:34">.</operator><name pos:start="31:35" pos:end="31:45">repeat_pict</name></name> <operator pos:start="31:47" pos:end="31:47">=</operator> <literal type="number" pos:start="31:49" pos:end="31:49">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="51:9"><if pos:start="33:9" pos:end="51:9">if <condition pos:start="33:12" pos:end="33:34">(<expr pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:33">repeat_first_field</name></name></expr>)</condition> <block pos:start="33:36" pos:end="51:9">{<block_content pos:start="35:13" pos:end="49:13">

            <if_stmt pos:start="35:13" pos:end="49:13"><if pos:start="35:13" pos:end="45:13">if <condition pos:start="35:16" pos:end="35:40">(<expr pos:start="35:17" pos:end="35:39"><name pos:start="35:17" pos:end="35:39"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:39">progressive_sequence</name></name></expr>)</condition> <block pos:start="35:42" pos:end="45:13">{<block_content pos:start="37:17" pos:end="43:62">

                <if_stmt pos:start="37:17" pos:end="43:62"><if pos:start="37:17" pos:end="39:62">if <condition pos:start="37:20" pos:end="37:39">(<expr pos:start="37:21" pos:end="37:38"><name pos:start="37:21" pos:end="37:38"><name pos:start="37:21" pos:end="37:21">s</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:38">top_field_first</name></name></expr>)</condition><block type="pseudo" pos:start="39:21" pos:end="39:62"><block_content pos:start="39:21" pos:end="39:62">

                    <expr_stmt pos:start="39:21" pos:end="39:62"><expr pos:start="39:21" pos:end="39:61"><name pos:start="39:21" pos:end="39:57"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:42">current_picture_ptr</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:45">f</name><operator pos:start="39:46" pos:end="39:46">.</operator><name pos:start="39:47" pos:end="39:57">repeat_pict</name></name> <operator pos:start="39:59" pos:end="39:59">=</operator> <literal type="number" pos:start="39:61" pos:end="39:61">4</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="41:17" pos:end="43:62">else<block type="pseudo" pos:start="43:21" pos:end="43:62"><block_content pos:start="43:21" pos:end="43:62">

                    <expr_stmt pos:start="43:21" pos:end="43:62"><expr pos:start="43:21" pos:end="43:61"><name pos:start="43:21" pos:end="43:57"><name pos:start="43:21" pos:end="43:21">s</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:42">current_picture_ptr</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:45">f</name><operator pos:start="43:46" pos:end="43:46">.</operator><name pos:start="43:47" pos:end="43:57">repeat_pict</name></name> <operator pos:start="43:59" pos:end="43:59">=</operator> <literal type="number" pos:start="43:61" pos:end="43:61">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="45:15" pos:end="49:13">else if <condition pos:start="45:23" pos:end="45:44">(<expr pos:start="45:24" pos:end="45:43"><name pos:start="45:24" pos:end="45:43"><name pos:start="45:24" pos:end="45:24">s</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:43">progressive_frame</name></name></expr>)</condition> <block pos:start="45:46" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:58">

                <expr_stmt pos:start="47:17" pos:end="47:58"><expr pos:start="47:17" pos:end="47:57"><name pos:start="47:17" pos:end="47:53"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:38">current_picture_ptr</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:41">f</name><operator pos:start="47:42" pos:end="47:42">.</operator><name pos:start="47:43" pos:end="47:53">repeat_pict</name></name> <operator pos:start="47:55" pos:end="47:55">=</operator> <literal type="number" pos:start="47:57" pos:end="47:57">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="59:64"><expr pos:start="55:9" pos:end="59:63"><name pos:start="55:9" pos:end="55:16">pan_scan</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="59:63"><name pos:start="55:20" pos:end="55:41">av_frame_new_side_data</name><argument_list pos:start="55:42" pos:end="59:63">(<argument pos:start="55:43" pos:end="55:68"><expr pos:start="55:43" pos:end="55:68"><operator pos:start="55:43" pos:end="55:43">&amp;</operator><name pos:start="55:44" pos:end="55:68"><name pos:start="55:44" pos:end="55:44">s</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:65">current_picture_ptr</name><operator pos:start="55:66" pos:end="55:67">-&gt;</operator><name pos:start="55:68" pos:end="55:68">f</name></name></expr></argument>,

                                          <argument pos:start="57:43" pos:end="57:63"><expr pos:start="57:43" pos:end="57:63"><name pos:start="57:43" pos:end="57:63">AV_FRAME_DATA_PANSCAN</name></expr></argument>,

                                          <argument pos:start="59:43" pos:end="59:62"><expr pos:start="59:43" pos:end="59:62"><sizeof pos:start="59:43" pos:end="59:62">sizeof<argument_list pos:start="59:49" pos:end="59:62">(<argument pos:start="59:50" pos:end="59:61"><expr pos:start="59:50" pos:end="59:61"><name pos:start="59:50" pos:end="59:61"><name pos:start="59:50" pos:end="59:51">s1</name><operator pos:start="59:52" pos:end="59:53">-&gt;</operator><name pos:start="59:54" pos:end="59:61">pan_scan</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="63:35"><if pos:start="61:9" pos:end="63:35">if <condition pos:start="61:12" pos:end="61:22">(<expr pos:start="61:13" pos:end="61:21"><operator pos:start="61:13" pos:end="61:13">!</operator><name pos:start="61:14" pos:end="61:21">pan_scan</name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:35"><block_content pos:start="63:13" pos:end="63:35">

            <return pos:start="63:13" pos:end="63:35">return <expr pos:start="63:20" pos:end="63:34"><call pos:start="63:20" pos:end="63:34"><name pos:start="63:20" pos:end="63:26">AVERROR</name><argument_list pos:start="63:27" pos:end="63:34">(<argument pos:start="63:28" pos:end="63:33"><expr pos:start="63:28" pos:end="63:33"><name pos:start="63:28" pos:end="63:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:68"><expr pos:start="65:9" pos:end="65:67"><call pos:start="65:9" pos:end="65:67"><name pos:start="65:9" pos:end="65:14">memcpy</name><argument_list pos:start="65:15" pos:end="65:67">(<argument pos:start="65:16" pos:end="65:29"><expr pos:start="65:16" pos:end="65:29"><name pos:start="65:16" pos:end="65:29"><name pos:start="65:16" pos:end="65:23">pan_scan</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:29">data</name></name></expr></argument>, <argument pos:start="65:32" pos:end="65:44"><expr pos:start="65:32" pos:end="65:44"><operator pos:start="65:32" pos:end="65:32">&amp;</operator><name pos:start="65:33" pos:end="65:44"><name pos:start="65:33" pos:end="65:34">s1</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:44">pan_scan</name></name></expr></argument>, <argument pos:start="65:47" pos:end="65:66"><expr pos:start="65:47" pos:end="65:66"><sizeof pos:start="65:47" pos:end="65:66">sizeof<argument_list pos:start="65:53" pos:end="65:66">(<argument pos:start="65:54" pos:end="65:65"><expr pos:start="65:54" pos:end="65:65"><name pos:start="65:54" pos:end="65:65"><name pos:start="65:54" pos:end="65:55">s1</name><operator pos:start="65:56" pos:end="65:57">-&gt;</operator><name pos:start="65:58" pos:end="65:65">pan_scan</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="69:9" pos:end="83:9"><if pos:start="69:9" pos:end="83:9">if <condition pos:start="69:12" pos:end="69:28">(<expr pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:14">s1</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:27">a53_caption</name></name></expr>)</condition> <block pos:start="69:30" pos:end="83:9">{<block_content pos:start="71:13" pos:end="81:39">

            <decl_stmt pos:start="71:13" pos:end="75:38"><decl pos:start="71:13" pos:end="75:37"><type pos:start="71:13" pos:end="71:29"><name pos:start="71:13" pos:end="71:27">AVFrameSideData</name> <modifier pos:start="71:29" pos:end="71:29">*</modifier></type><name pos:start="71:30" pos:end="71:31">sd</name> <init pos:start="71:33" pos:end="75:37">= <expr pos:start="71:35" pos:end="75:37"><call pos:start="71:35" pos:end="75:37"><name pos:start="71:35" pos:end="71:56">av_frame_new_side_data</name><argument_list pos:start="71:57" pos:end="75:37">(

                <argument pos:start="73:17" pos:end="73:42"><expr pos:start="73:17" pos:end="73:42"><operator pos:start="73:17" pos:end="73:17">&amp;</operator><name pos:start="73:18" pos:end="73:42"><name pos:start="73:18" pos:end="73:18">s</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:39">current_picture_ptr</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:42">f</name></name></expr></argument>, <argument pos:start="73:45" pos:end="73:64"><expr pos:start="73:45" pos:end="73:64"><name pos:start="73:45" pos:end="73:64">AV_FRAME_DATA_A53_CC</name></expr></argument>,

                <argument pos:start="75:17" pos:end="75:36"><expr pos:start="75:17" pos:end="75:36"><name pos:start="75:17" pos:end="75:36"><name pos:start="75:17" pos:end="75:18">s1</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:36">a53_caption_size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="77:13" pos:end="79:72"><if pos:start="77:13" pos:end="79:72">if <condition pos:start="77:16" pos:end="77:19">(<expr pos:start="77:17" pos:end="77:18"><name pos:start="77:17" pos:end="77:18">sd</name></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:72"><block_content pos:start="79:17" pos:end="79:72">

                <expr_stmt pos:start="79:17" pos:end="79:72"><expr pos:start="79:17" pos:end="79:71"><call pos:start="79:17" pos:end="79:71"><name pos:start="79:17" pos:end="79:22">memcpy</name><argument_list pos:start="79:23" pos:end="79:71">(<argument pos:start="79:24" pos:end="79:31"><expr pos:start="79:24" pos:end="79:31"><name pos:start="79:24" pos:end="79:31"><name pos:start="79:24" pos:end="79:25">sd</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:31">data</name></name></expr></argument>, <argument pos:start="79:34" pos:end="79:48"><expr pos:start="79:34" pos:end="79:48"><name pos:start="79:34" pos:end="79:48"><name pos:start="79:34" pos:end="79:35">s1</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:48">a53_caption</name></name></expr></argument>, <argument pos:start="79:51" pos:end="79:70"><expr pos:start="79:51" pos:end="79:70"><name pos:start="79:51" pos:end="79:70"><name pos:start="79:51" pos:end="79:52">s1</name><operator pos:start="79:53" pos:end="79:54">-&gt;</operator><name pos:start="79:55" pos:end="79:70">a53_caption_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:39"><expr pos:start="81:13" pos:end="81:38"><call pos:start="81:13" pos:end="81:38"><name pos:start="81:13" pos:end="81:20">av_freep</name><argument_list pos:start="81:21" pos:end="81:38">(<argument pos:start="81:22" pos:end="81:37"><expr pos:start="81:22" pos:end="81:37"><operator pos:start="81:22" pos:end="81:22">&amp;</operator><name pos:start="81:23" pos:end="81:37"><name pos:start="81:23" pos:end="81:24">s1</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:37">a53_caption</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="87:9" pos:end="101:9"><if pos:start="87:9" pos:end="101:9">if <condition pos:start="87:12" pos:end="87:29">(<expr pos:start="87:13" pos:end="87:28"><name pos:start="87:13" pos:end="87:28"><name pos:start="87:13" pos:end="87:14">s1</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:28">has_stereo3d</name></name></expr>)</condition> <block pos:start="87:31" pos:end="101:9">{<block_content pos:start="89:13" pos:end="99:33">

            <decl_stmt pos:start="89:13" pos:end="89:90"><decl pos:start="89:13" pos:end="89:89"><type pos:start="89:13" pos:end="89:24"><name pos:start="89:13" pos:end="89:22">AVStereo3D</name> <modifier pos:start="89:24" pos:end="89:24">*</modifier></type><name pos:start="89:25" pos:end="89:30">stereo</name> <init pos:start="89:32" pos:end="89:89">= <expr pos:start="89:34" pos:end="89:89"><call pos:start="89:34" pos:end="89:89"><name pos:start="89:34" pos:end="89:61">av_stereo3d_create_side_data</name><argument_list pos:start="89:62" pos:end="89:89">(<argument pos:start="89:63" pos:end="89:88"><expr pos:start="89:63" pos:end="89:88"><operator pos:start="89:63" pos:end="89:63">&amp;</operator><name pos:start="89:64" pos:end="89:88"><name pos:start="89:64" pos:end="89:64">s</name><operator pos:start="89:65" pos:end="89:66">-&gt;</operator><name pos:start="89:67" pos:end="89:85">current_picture_ptr</name><operator pos:start="89:86" pos:end="89:87">-&gt;</operator><name pos:start="89:88" pos:end="89:88">f</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="91:13" pos:end="93:39"><if pos:start="91:13" pos:end="93:39">if <condition pos:start="91:16" pos:end="91:24">(<expr pos:start="91:17" pos:end="91:23"><operator pos:start="91:17" pos:end="91:17">!</operator><name pos:start="91:18" pos:end="91:23">stereo</name></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:39"><block_content pos:start="93:17" pos:end="93:39">

                <return pos:start="93:17" pos:end="93:39">return <expr pos:start="93:24" pos:end="93:38"><call pos:start="93:24" pos:end="93:38"><name pos:start="93:24" pos:end="93:30">AVERROR</name><argument_list pos:start="93:31" pos:end="93:38">(<argument pos:start="93:32" pos:end="93:37"><expr pos:start="93:32" pos:end="93:37"><name pos:start="93:32" pos:end="93:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="97:13" pos:end="97:35"><expr pos:start="97:13" pos:end="97:34"><operator pos:start="97:13" pos:end="97:13">*</operator><name pos:start="97:14" pos:end="97:19">stereo</name> <operator pos:start="97:21" pos:end="97:21">=</operator> <name pos:start="97:23" pos:end="97:34"><name pos:start="97:23" pos:end="97:24">s1</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:34">stereo3d</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:33"><expr pos:start="99:13" pos:end="99:32"><name pos:start="99:13" pos:end="99:28"><name pos:start="99:13" pos:end="99:14">s1</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:28">has_stereo3d</name></name> <operator pos:start="99:30" pos:end="99:30">=</operator> <literal type="number" pos:start="99:32" pos:end="99:32">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="103:9" pos:end="105:42"><if pos:start="103:9" pos:end="105:42">if <condition pos:start="103:12" pos:end="103:74">(<expr pos:start="103:13" pos:end="103:73"><name pos:start="103:13" pos:end="103:24">HAVE_THREADS</name> <operator pos:start="103:26" pos:end="103:27">&amp;&amp;</operator> <operator pos:start="103:29" pos:end="103:29">(</operator><name pos:start="103:30" pos:end="103:54"><name pos:start="103:30" pos:end="103:34">avctx</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:54">active_thread_type</name></name> <operator pos:start="103:56" pos:end="103:56">&amp;</operator> <name pos:start="103:58" pos:end="103:72">FF_THREAD_FRAME</name><operator pos:start="103:73" pos:end="103:73">)</operator></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:42"><block_content pos:start="105:13" pos:end="105:42">

            <expr_stmt pos:start="105:13" pos:end="105:42"><expr pos:start="105:13" pos:end="105:41"><call pos:start="105:13" pos:end="105:41"><name pos:start="105:13" pos:end="105:34">ff_thread_finish_setup</name><argument_list pos:start="105:35" pos:end="105:41">(<argument pos:start="105:36" pos:end="105:40"><expr pos:start="105:36" pos:end="105:40"><name pos:start="105:36" pos:end="105:40">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="107:7" pos:end="149:5">else <block pos:start="107:12" pos:end="149:5">{<block_content pos:start="109:9" pos:end="147:9"> <comment type="line" pos:start="107:14" pos:end="107:28">// second field</comment>

        <decl_stmt pos:start="109:9" pos:end="109:14"><decl pos:start="109:9" pos:end="109:13"><type pos:start="109:9" pos:end="109:11"><name pos:start="109:9" pos:end="109:11">int</name></type> <name pos:start="109:13" pos:end="109:13">i</name></decl>;</decl_stmt>



        <if_stmt pos:start="113:9" pos:end="119:9"><if pos:start="113:9" pos:end="119:9">if <condition pos:start="113:12" pos:end="113:36">(<expr pos:start="113:13" pos:end="113:35"><operator pos:start="113:13" pos:end="113:13">!</operator><name pos:start="113:14" pos:end="113:35"><name pos:start="113:14" pos:end="113:14">s</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:35">current_picture_ptr</name></name></expr>)</condition> <block pos:start="113:38" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:22">

            <expr_stmt pos:start="115:13" pos:end="115:68"><expr pos:start="115:13" pos:end="115:67"><call pos:start="115:13" pos:end="115:67"><name pos:start="115:13" pos:end="115:18">av_log</name><argument_list pos:start="115:19" pos:end="115:67">(<argument pos:start="115:20" pos:end="115:27"><expr pos:start="115:20" pos:end="115:27"><name pos:start="115:20" pos:end="115:27"><name pos:start="115:20" pos:end="115:20">s</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:27">avctx</name></name></expr></argument>, <argument pos:start="115:30" pos:end="115:41"><expr pos:start="115:30" pos:end="115:41"><name pos:start="115:30" pos:end="115:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="115:44" pos:end="115:66"><expr pos:start="115:44" pos:end="115:66"><literal type="string" pos:start="115:44" pos:end="115:66">"first field missing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="117:13" pos:end="117:22">return <expr pos:start="117:20" pos:end="117:21"><operator pos:start="117:20" pos:end="117:20">-</operator><literal type="number" pos:start="117:21" pos:end="117:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="123:9" pos:end="133:9"><if pos:start="123:9" pos:end="133:9">if <condition pos:start="123:12" pos:end="125:61">(<expr pos:start="123:13" pos:end="125:60"><name pos:start="123:13" pos:end="123:29"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:20">avctx</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:29">hwaccel</name></name> <operator pos:start="123:31" pos:end="123:32">&amp;&amp;</operator>

            <operator pos:start="125:13" pos:end="125:13">(</operator><name pos:start="125:14" pos:end="125:34"><name pos:start="125:14" pos:end="125:14">s</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:21">avctx</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:34">slice_flags</name></name> <operator pos:start="125:36" pos:end="125:36">&amp;</operator> <name pos:start="125:38" pos:end="125:59">SLICE_FLAG_ALLOW_FIELD</name><operator pos:start="125:60" pos:end="125:60">)</operator></expr>)</condition> <block pos:start="125:63" pos:end="133:9">{<block_content pos:start="127:13" pos:end="131:78">

            <if_stmt pos:start="127:13" pos:end="131:78"><if pos:start="127:13" pos:end="131:78">if <condition pos:start="127:16" pos:end="127:59">(<expr pos:start="127:17" pos:end="127:58"><call pos:start="127:17" pos:end="127:54"><name pos:start="127:17" pos:end="127:44"><name pos:start="127:17" pos:end="127:17">s</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:24">avctx</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:33">hwaccel</name><operator pos:start="127:34" pos:end="127:35">-&gt;</operator><name pos:start="127:36" pos:end="127:44">end_frame</name></name><argument_list pos:start="127:45" pos:end="127:54">(<argument pos:start="127:46" pos:end="127:53"><expr pos:start="127:46" pos:end="127:53"><name pos:start="127:46" pos:end="127:53"><name pos:start="127:46" pos:end="127:46">s</name><operator pos:start="127:47" pos:end="127:48">-&gt;</operator><name pos:start="127:49" pos:end="127:53">avctx</name></name></expr></argument>)</argument_list></call> <operator pos:start="127:56" pos:end="127:56">&lt;</operator> <literal type="number" pos:start="127:58" pos:end="127:58">0</literal></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="131:78"><block_content pos:start="129:17" pos:end="131:78">

                <expr_stmt pos:start="129:17" pos:end="131:78"><expr pos:start="129:17" pos:end="131:77"><call pos:start="129:17" pos:end="131:77"><name pos:start="129:17" pos:end="129:22">av_log</name><argument_list pos:start="129:23" pos:end="131:77">(<argument pos:start="129:24" pos:end="129:28"><expr pos:start="129:24" pos:end="129:28"><name pos:start="129:24" pos:end="129:28">avctx</name></expr></argument>, <argument pos:start="129:31" pos:end="129:42"><expr pos:start="129:31" pos:end="129:42"><name pos:start="129:31" pos:end="129:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="131:24" pos:end="131:76"><expr pos:start="131:24" pos:end="131:76"><literal type="string" pos:start="131:24" pos:end="131:76">"hardware accelerator failed to decode first field\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="137:9" pos:end="147:9">for <control pos:start="137:13" pos:end="137:31">(<init pos:start="137:14" pos:end="137:19"><expr pos:start="137:14" pos:end="137:18"><name pos:start="137:14" pos:end="137:14">i</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <literal type="number" pos:start="137:18" pos:end="137:18">0</literal></expr>;</init> <condition pos:start="137:21" pos:end="137:26"><expr pos:start="137:21" pos:end="137:25"><name pos:start="137:21" pos:end="137:21">i</name> <operator pos:start="137:23" pos:end="137:23">&lt;</operator> <literal type="number" pos:start="137:25" pos:end="137:25">4</literal></expr>;</condition> <incr pos:start="137:28" pos:end="137:30"><expr pos:start="137:28" pos:end="137:30"><name pos:start="137:28" pos:end="137:28">i</name><operator pos:start="137:29" pos:end="137:30">++</operator></expr></incr>)</control> <block pos:start="137:33" pos:end="147:9">{<block_content pos:start="139:13" pos:end="145:58">

            <expr_stmt pos:start="139:13" pos:end="139:77"><expr pos:start="139:13" pos:end="139:76"><name pos:start="139:13" pos:end="139:40"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:30">current_picture</name><operator pos:start="139:31" pos:end="139:31">.</operator><name pos:start="139:32" pos:end="139:32">f</name><operator pos:start="139:33" pos:end="139:33">.</operator><name pos:start="139:34" pos:end="139:37">data</name><index pos:start="139:38" pos:end="139:40">[<expr pos:start="139:39" pos:end="139:39"><name pos:start="139:39" pos:end="139:39">i</name></expr>]</index></name> <operator pos:start="139:42" pos:end="139:42">=</operator> <name pos:start="139:44" pos:end="139:76"><name pos:start="139:44" pos:end="139:44">s</name><operator pos:start="139:45" pos:end="139:46">-&gt;</operator><name pos:start="139:47" pos:end="139:65">current_picture_ptr</name><operator pos:start="139:66" pos:end="139:67">-&gt;</operator><name pos:start="139:68" pos:end="139:68">f</name><operator pos:start="139:69" pos:end="139:69">.</operator><name pos:start="139:70" pos:end="139:73">data</name><index pos:start="139:74" pos:end="139:76">[<expr pos:start="139:75" pos:end="139:75"><name pos:start="139:75" pos:end="139:75">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="141:13" pos:end="145:58"><if pos:start="141:13" pos:end="145:58">if <condition pos:start="141:16" pos:end="141:58">(<expr pos:start="141:17" pos:end="141:57"><name pos:start="141:17" pos:end="141:36"><name pos:start="141:17" pos:end="141:17">s</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:36">picture_structure</name></name> <operator pos:start="141:38" pos:end="141:39">==</operator> <name pos:start="141:41" pos:end="141:57">PICT_BOTTOM_FIELD</name></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="145:58"><block_content pos:start="143:17" pos:end="145:58">

                <expr_stmt pos:start="143:17" pos:end="145:58"><expr pos:start="143:17" pos:end="145:57"><name pos:start="143:17" pos:end="143:44"><name pos:start="143:17" pos:end="143:17">s</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:34">current_picture</name><operator pos:start="143:35" pos:end="143:35">.</operator><name pos:start="143:36" pos:end="143:36">f</name><operator pos:start="143:37" pos:end="143:37">.</operator><name pos:start="143:38" pos:end="143:41">data</name><index pos:start="143:42" pos:end="143:44">[<expr pos:start="143:43" pos:end="143:43"><name pos:start="143:43" pos:end="143:43">i</name></expr>]</index></name> <operator pos:start="143:46" pos:end="143:47">+=</operator>

                    <name pos:start="145:21" pos:end="145:57"><name pos:start="145:21" pos:end="145:21">s</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:42">current_picture_ptr</name><operator pos:start="145:43" pos:end="145:44">-&gt;</operator><name pos:start="145:45" pos:end="145:45">f</name><operator pos:start="145:46" pos:end="145:46">.</operator><name pos:start="145:47" pos:end="145:54">linesize</name><index pos:start="145:55" pos:end="145:57">[<expr pos:start="145:56" pos:end="145:56"><name pos:start="145:56" pos:end="145:56">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="153:5" pos:end="164:0"><if pos:start="153:5" pos:end="164:0">if <condition pos:start="153:8" pos:end="153:23">(<expr pos:start="153:9" pos:end="153:22"><name pos:start="153:9" pos:end="153:22"><name pos:start="153:9" pos:end="153:13">avctx</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:22">hwaccel</name></name></expr>)</condition> <block pos:start="153:25" pos:end="164:0">{<block_content pos:start="155:9" pos:end="157:22">

        <if_stmt pos:start="155:9" pos:end="157:22"><if pos:start="155:9" pos:end="157:22">if <condition pos:start="155:12" pos:end="155:66">(<expr pos:start="155:13" pos:end="155:65"><call pos:start="155:13" pos:end="155:61"><name pos:start="155:13" pos:end="155:39"><name pos:start="155:13" pos:end="155:17">avctx</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:26">hwaccel</name><operator pos:start="155:27" pos:end="155:28">-&gt;</operator><name pos:start="155:29" pos:end="155:39">start_frame</name></name><argument_list pos:start="155:40" pos:end="155:61">(<argument pos:start="155:41" pos:end="155:45"><expr pos:start="155:41" pos:end="155:45"><name pos:start="155:41" pos:end="155:45">avctx</name></expr></argument>, <argument pos:start="155:48" pos:end="155:50"><expr pos:start="155:48" pos:end="155:50"><name pos:start="155:48" pos:end="155:50">buf</name></expr></argument>, <argument pos:start="155:53" pos:end="155:60"><expr pos:start="155:53" pos:end="155:60"><name pos:start="155:53" pos:end="155:60">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="155:63" pos:end="155:63">&lt;</operator> <literal type="number" pos:start="155:65" pos:end="155:65">0</literal></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:22"><block_content pos:start="157:13" pos:end="157:22">

            <return pos:start="157:13" pos:end="157:22">return <expr pos:start="157:20" pos:end="157:21"><operator pos:start="157:20" pos:end="157:20">-</operator><literal type="number" pos:start="157:21" pos:end="157:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="163:1" pos:end="163:15">#<cpp:directive pos:start="163:2" pos:end="163:3">if</cpp:directive> <expr pos:start="163:5" pos:end="163:15"><name pos:start="163:5" pos:end="163:15">FF_API_XVMC</name></expr></cpp:if>

<macro pos:start="165:1" pos:end="165:31"><name pos:start="165:1" pos:end="165:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

<comment type="line" pos:start="167:1" pos:end="167:47">// MPV_frame_start will call this function too,</comment>

<comment type="line" pos:start="169:1" pos:end="169:40">// but we need to call it on every field</comment>

    <if_stmt pos:start="171:5" pos:end="175:22"><if pos:start="171:5" pos:end="175:22">if <condition pos:start="171:8" pos:end="171:64">(<expr pos:start="171:9" pos:end="171:63"><name pos:start="171:9" pos:end="171:32">CONFIG_MPEG_XVMC_DECODER</name> <operator pos:start="171:34" pos:end="171:35">&amp;&amp;</operator> <name pos:start="171:37" pos:end="171:63"><name pos:start="171:37" pos:end="171:37">s</name><operator pos:start="171:38" pos:end="171:39">-&gt;</operator><name pos:start="171:40" pos:end="171:44">avctx</name><operator pos:start="171:45" pos:end="171:46">-&gt;</operator><name pos:start="171:47" pos:end="171:63">xvmc_acceleration</name></name></expr>)</condition><block type="pseudo" pos:start="173:9" pos:end="175:22"><block_content pos:start="173:9" pos:end="175:22">

        <if_stmt pos:start="173:9" pos:end="175:22"><if pos:start="173:9" pos:end="175:22">if <condition pos:start="173:12" pos:end="173:46">(<expr pos:start="173:13" pos:end="173:45"><call pos:start="173:13" pos:end="173:41"><name pos:start="173:13" pos:end="173:31">ff_xvmc_field_start</name><argument_list pos:start="173:32" pos:end="173:41">(<argument pos:start="173:33" pos:end="173:33"><expr pos:start="173:33" pos:end="173:33"><name pos:start="173:33" pos:end="173:33">s</name></expr></argument>, <argument pos:start="173:36" pos:end="173:40"><expr pos:start="173:36" pos:end="173:40"><name pos:start="173:36" pos:end="173:40">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="173:43" pos:end="173:43">&lt;</operator> <literal type="number" pos:start="173:45" pos:end="173:45">0</literal></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:22"><block_content pos:start="175:13" pos:end="175:22">

            <return pos:start="175:13" pos:end="175:22">return <expr pos:start="175:20" pos:end="175:21"><operator pos:start="175:20" pos:end="175:20">-</operator><literal type="number" pos:start="175:21" pos:end="175:21">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<macro pos:start="177:1" pos:end="180:0"><name pos:start="177:1" pos:end="180:0">FF_ENABLE_DEPRECATION_WARNINGS</name></macro>

<cpp:endif pos:start="179:1" pos:end="179:6">#<cpp:directive pos:start="179:2" pos:end="179:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="179:8" pos:end="179:24">/* FF_API_XVMC */</comment>



    <return pos:start="183:5" pos:end="183:13">return <expr pos:start="183:12" pos:end="183:12"><literal type="number" pos:start="183:12" pos:end="183:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
