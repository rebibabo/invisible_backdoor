<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21184.c" pos:tabs="8"><function pos:start="1:1" pos:end="90:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">guess_dc</name><parameter_list pos:start="1:21" pos:end="2:52">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:35">MpegEncContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:51"><decl pos:start="1:41" pos:end="1:51"><type pos:start="1:41" pos:end="1:51"><name pos:start="1:41" pos:end="1:47">int16_t</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">dc</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:58"><decl pos:start="1:54" pos:end="1:58"><type pos:start="1:54" pos:end="1:58"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:58">w</name></decl></parameter>,
                     <parameter pos:start="2:22" pos:end="2:26"><decl pos:start="2:22" pos:end="2:26"><type pos:start="2:22" pos:end="2:26"><name pos:start="2:22" pos:end="2:24">int</name></type> <name pos:start="2:26" pos:end="2:26">h</name></decl></parameter>, <parameter pos:start="2:29" pos:end="2:38"><decl pos:start="2:29" pos:end="2:38"><type pos:start="2:29" pos:end="2:38"><name pos:start="2:29" pos:end="2:31">int</name></type> <name pos:start="2:33" pos:end="2:38">stride</name></decl></parameter>, <parameter pos:start="2:41" pos:end="2:51"><decl pos:start="2:41" pos:end="2:51"><type pos:start="2:41" pos:end="2:51"><name pos:start="2:41" pos:end="2:43">int</name></type> <name pos:start="2:45" pos:end="2:51">is_luma</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="90:1">{<block_content pos:start="4:5" pos:end="89:20">
    <decl_stmt pos:start="4:5" pos:end="4:17"><decl pos:start="4:5" pos:end="4:11"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:11">b_x</name></decl>, <decl pos:start="4:14" pos:end="4:16"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:14" pos:end="4:16">b_y</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:65"><expr pos:start="5:5" pos:end="5:64"><call pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:11">int16_t</name>  <argument_list pos:start="5:14" pos:end="5:20">(<argument pos:start="5:15" pos:end="5:18"><expr pos:start="5:15" pos:end="5:18"><operator pos:start="5:15" pos:end="5:15">*</operator><name pos:start="5:16" pos:end="5:18">col</name></expr></argument> )</argument_list></call><index pos:start="5:21" pos:end="5:23">[<expr pos:start="5:22" pos:end="5:22"><literal type="number" pos:start="5:22" pos:end="5:22">4</literal></expr>]</index> <operator pos:start="5:25" pos:end="5:25">=</operator> <call pos:start="5:27" pos:end="5:64"><name pos:start="5:27" pos:end="5:35">av_malloc</name><argument_list pos:start="5:36" pos:end="5:64">(<argument pos:start="5:37" pos:end="5:63"><expr pos:start="5:37" pos:end="5:63"><name pos:start="5:37" pos:end="5:42">stride</name><operator pos:start="5:43" pos:end="5:43">*</operator><name pos:start="5:44" pos:end="5:44">h</name><operator pos:start="5:45" pos:end="5:45">*</operator><sizeof pos:start="5:46" pos:end="5:61">sizeof<argument_list pos:start="5:52" pos:end="5:61">( <argument pos:start="5:54" pos:end="5:60"><expr pos:start="5:54" pos:end="5:60"><name pos:start="5:54" pos:end="5:60">int16_t</name></expr></argument>)</argument_list></sizeof><operator pos:start="5:62" pos:end="5:62">*</operator><literal type="number" pos:start="5:63" pos:end="5:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:65"><expr pos:start="6:5" pos:end="6:64"><call pos:start="6:5" pos:end="6:20"><name pos:start="6:5" pos:end="6:12">uint32_t</name> <argument_list pos:start="6:14" pos:end="6:20">(<argument pos:start="6:15" pos:end="6:19"><expr pos:start="6:15" pos:end="6:19"><operator pos:start="6:15" pos:end="6:15">*</operator><name pos:start="6:16" pos:end="6:19">dist</name></expr></argument>)</argument_list></call><index pos:start="6:21" pos:end="6:23">[<expr pos:start="6:22" pos:end="6:22"><literal type="number" pos:start="6:22" pos:end="6:22">4</literal></expr>]</index> <operator pos:start="6:25" pos:end="6:25">=</operator> <call pos:start="6:27" pos:end="6:64"><name pos:start="6:27" pos:end="6:35">av_malloc</name><argument_list pos:start="6:36" pos:end="6:64">(<argument pos:start="6:37" pos:end="6:63"><expr pos:start="6:37" pos:end="6:63"><name pos:start="6:37" pos:end="6:42">stride</name><operator pos:start="6:43" pos:end="6:43">*</operator><name pos:start="6:44" pos:end="6:44">h</name><operator pos:start="6:45" pos:end="6:45">*</operator><sizeof pos:start="6:46" pos:end="6:61">sizeof<argument_list pos:start="6:52" pos:end="6:61">(<argument pos:start="6:53" pos:end="6:60"><expr pos:start="6:53" pos:end="6:60"><name pos:start="6:53" pos:end="6:60">uint32_t</name></expr></argument>)</argument_list></sizeof><operator pos:start="6:62" pos:end="6:62">*</operator><literal type="number" pos:start="6:63" pos:end="6:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="7:5" pos:end="10:5"><if pos:start="7:5" pos:end="10:5">if<condition pos:start="7:7" pos:end="7:21">(<expr pos:start="7:8" pos:end="7:20"><operator pos:start="7:8" pos:end="7:8">!</operator><name pos:start="7:9" pos:end="7:11">col</name> <operator pos:start="7:13" pos:end="7:14">||</operator> <operator pos:start="7:16" pos:end="7:16">!</operator><name pos:start="7:17" pos:end="7:20">dist</name></expr>)</condition> <block pos:start="7:23" pos:end="10:5">{<block_content pos:start="8:9" pos:end="9:18">
        <expr_stmt pos:start="8:9" pos:end="8:72"><expr pos:start="8:9" pos:end="8:71"><call pos:start="8:9" pos:end="8:71"><name pos:start="8:9" pos:end="8:14">av_log</name><argument_list pos:start="8:15" pos:end="8:71">(<argument pos:start="8:16" pos:end="8:23"><expr pos:start="8:16" pos:end="8:23"><name pos:start="8:16" pos:end="8:23"><name pos:start="8:16" pos:end="8:16">s</name><operator pos:start="8:17" pos:end="8:18">-&gt;</operator><name pos:start="8:19" pos:end="8:23">avctx</name></name></expr></argument>, <argument pos:start="8:26" pos:end="8:37"><expr pos:start="8:26" pos:end="8:37"><name pos:start="8:26" pos:end="8:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="8:40" pos:end="8:70"><expr pos:start="8:40" pos:end="8:70"><literal type="string" pos:start="8:40" pos:end="8:70">"guess_dc() is out of memory\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <goto pos:start="9:9" pos:end="9:18">goto <name pos:start="9:14" pos:end="9:17">fail</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <for pos:start="11:5" pos:end="38:5">for<control pos:start="11:8" pos:end="11:28">(<init pos:start="11:9" pos:end="11:14"><expr pos:start="11:9" pos:end="11:13"><name pos:start="11:9" pos:end="11:11">b_y</name><operator pos:start="11:12" pos:end="11:12">=</operator><literal type="number" pos:start="11:13" pos:end="11:13">0</literal></expr>;</init> <condition pos:start="11:16" pos:end="11:21"><expr pos:start="11:16" pos:end="11:20"><name pos:start="11:16" pos:end="11:18">b_y</name><operator pos:start="11:19" pos:end="11:19">&lt;</operator><name pos:start="11:20" pos:end="11:20">h</name></expr>;</condition> <incr pos:start="11:23" pos:end="11:27"><expr pos:start="11:23" pos:end="11:27"><name pos:start="11:23" pos:end="11:25">b_y</name><operator pos:start="11:26" pos:end="11:27">++</operator></expr></incr>)</control><block pos:start="11:29" pos:end="38:5">{<block_content pos:start="12:9" pos:end="37:9">
        <decl_stmt pos:start="12:9" pos:end="12:24"><decl pos:start="12:9" pos:end="12:23"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:17">color</name><init pos:start="12:18" pos:end="12:23">= <expr pos:start="12:20" pos:end="12:23"><literal type="number" pos:start="12:20" pos:end="12:23">1024</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="13:9" pos:end="13:25"><decl pos:start="13:9" pos:end="13:24"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:20">distance</name><init pos:start="13:21" pos:end="13:24">= <expr pos:start="13:23" pos:end="13:24"><operator pos:start="13:23" pos:end="13:23">-</operator><literal type="number" pos:start="13:24" pos:end="13:24">1</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="14:9" pos:end="24:9">for<control pos:start="14:12" pos:end="14:32">(<init pos:start="14:13" pos:end="14:18"><expr pos:start="14:13" pos:end="14:17"><name pos:start="14:13" pos:end="14:15">b_x</name><operator pos:start="14:16" pos:end="14:16">=</operator><literal type="number" pos:start="14:17" pos:end="14:17">0</literal></expr>;</init> <condition pos:start="14:20" pos:end="14:25"><expr pos:start="14:20" pos:end="14:24"><name pos:start="14:20" pos:end="14:22">b_x</name><operator pos:start="14:23" pos:end="14:23">&lt;</operator><name pos:start="14:24" pos:end="14:24">w</name></expr>;</condition> <incr pos:start="14:27" pos:end="14:31"><expr pos:start="14:27" pos:end="14:31"><name pos:start="14:27" pos:end="14:29">b_x</name><operator pos:start="14:30" pos:end="14:31">++</operator></expr></incr>)</control><block pos:start="14:33" pos:end="24:9">{<block_content pos:start="15:13" pos:end="23:75">
            <decl_stmt pos:start="15:13" pos:end="15:73"><decl pos:start="15:13" pos:end="15:72"><type pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">int</name></type> <name pos:start="15:17" pos:end="15:26">mb_index_j</name><init pos:start="15:27" pos:end="15:72">= <expr pos:start="15:29" pos:end="15:72"><operator pos:start="15:29" pos:end="15:29">(</operator><name pos:start="15:30" pos:end="15:32">b_x</name><operator pos:start="15:33" pos:end="15:34">&gt;&gt;</operator><name pos:start="15:35" pos:end="15:41">is_luma</name><operator pos:start="15:42" pos:end="15:42">)</operator> <operator pos:start="15:44" pos:end="15:44">+</operator> <operator pos:start="15:46" pos:end="15:46">(</operator><name pos:start="15:47" pos:end="15:49">b_y</name><operator pos:start="15:50" pos:end="15:51">&gt;&gt;</operator><name pos:start="15:52" pos:end="15:58">is_luma</name><operator pos:start="15:59" pos:end="15:59">)</operator><operator pos:start="15:60" pos:end="15:60">*</operator><name pos:start="15:61" pos:end="15:72"><name pos:start="15:61" pos:end="15:61">s</name><operator pos:start="15:62" pos:end="15:63">-&gt;</operator><name pos:start="15:64" pos:end="15:72">mb_stride</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="16:13" pos:end="16:59"><decl pos:start="16:13" pos:end="16:58"><type pos:start="16:13" pos:end="16:15"><name pos:start="16:13" pos:end="16:15">int</name></type> <name pos:start="16:17" pos:end="16:23">error_j</name><init pos:start="16:24" pos:end="16:58">= <expr pos:start="16:26" pos:end="16:58"><name pos:start="16:26" pos:end="16:58"><name pos:start="16:26" pos:end="16:26">s</name><operator pos:start="16:27" pos:end="16:28">-&gt;</operator><name pos:start="16:29" pos:end="16:46">error_status_table</name><index pos:start="16:47" pos:end="16:58">[<expr pos:start="16:48" pos:end="16:57"><name pos:start="16:48" pos:end="16:57">mb_index_j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="17:13" pos:end="17:77"><decl pos:start="17:13" pos:end="17:76"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:23">intra_j</name> <init pos:start="17:25" pos:end="17:76">= <expr pos:start="17:27" pos:end="17:76"><call pos:start="17:27" pos:end="17:76"><name pos:start="17:27" pos:end="17:34">IS_INTRA</name><argument_list pos:start="17:35" pos:end="17:76">(<argument pos:start="17:36" pos:end="17:75"><expr pos:start="17:36" pos:end="17:75"><name pos:start="17:36" pos:end="17:75"><name pos:start="17:36" pos:end="17:36">s</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:53">current_picture</name><operator pos:start="17:54" pos:end="17:54">.</operator><name pos:start="17:55" pos:end="17:55">f</name><operator pos:start="17:56" pos:end="17:56">.</operator><name pos:start="17:57" pos:end="17:63">mb_type</name><index pos:start="17:64" pos:end="17:75">[<expr pos:start="17:65" pos:end="17:74"><name pos:start="17:65" pos:end="17:74">mb_index_j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="18:13" pos:end="21:13"><if pos:start="18:13" pos:end="21:13">if<condition pos:start="18:15" pos:end="18:52">(<expr pos:start="18:16" pos:end="18:51"><name pos:start="18:16" pos:end="18:22">intra_j</name><operator pos:start="18:23" pos:end="18:24">==</operator><literal type="number" pos:start="18:25" pos:end="18:25">0</literal> <operator pos:start="18:27" pos:end="18:28">||</operator> <operator pos:start="18:30" pos:end="18:30">!</operator><operator pos:start="18:31" pos:end="18:31">(</operator><name pos:start="18:32" pos:end="18:38">error_j</name><operator pos:start="18:39" pos:end="18:39">&amp;</operator><name pos:start="18:40" pos:end="18:50">ER_DC_ERROR</name><operator pos:start="18:51" pos:end="18:51">)</operator></expr>)</condition><block pos:start="18:53" pos:end="21:13">{<block_content pos:start="19:17" pos:end="20:30">
                <expr_stmt pos:start="19:17" pos:end="19:44"><expr pos:start="19:17" pos:end="19:43"><name pos:start="19:17" pos:end="19:21">color</name><operator pos:start="19:22" pos:end="19:22">=</operator> <name pos:start="19:24" pos:end="19:43"><name pos:start="19:24" pos:end="19:25">dc</name><index pos:start="19:26" pos:end="19:43">[<expr pos:start="19:27" pos:end="19:42"><name pos:start="19:27" pos:end="19:29">b_x</name> <operator pos:start="19:31" pos:end="19:31">+</operator> <name pos:start="19:33" pos:end="19:35">b_y</name><operator pos:start="19:36" pos:end="19:36">*</operator><name pos:start="19:37" pos:end="19:42">stride</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="20:17" pos:end="20:30"><expr pos:start="20:17" pos:end="20:29"><name pos:start="20:17" pos:end="20:24">distance</name><operator pos:start="20:25" pos:end="20:25">=</operator> <name pos:start="20:27" pos:end="20:29">b_x</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:45"><expr pos:start="22:13" pos:end="22:44"><name pos:start="22:13" pos:end="22:37"><name pos:start="22:13" pos:end="22:15">col</name> <index pos:start="22:17" pos:end="22:34">[<expr pos:start="22:18" pos:end="22:33"><name pos:start="22:18" pos:end="22:20">b_x</name> <operator pos:start="22:22" pos:end="22:22">+</operator> <name pos:start="22:24" pos:end="22:26">b_y</name><operator pos:start="22:27" pos:end="22:27">*</operator><name pos:start="22:28" pos:end="22:33">stride</name></expr>]</index><index pos:start="22:35" pos:end="22:37">[<expr pos:start="22:36" pos:end="22:36"><literal type="number" pos:start="22:36" pos:end="22:36">1</literal></expr>]</index></name><operator pos:start="22:38" pos:end="22:38">=</operator> <name pos:start="22:40" pos:end="22:44">color</name></expr>;</expr_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:75"><expr pos:start="23:13" pos:end="23:74"><name pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:16">dist</name><index pos:start="23:17" pos:end="23:34">[<expr pos:start="23:18" pos:end="23:33"><name pos:start="23:18" pos:end="23:20">b_x</name> <operator pos:start="23:22" pos:end="23:22">+</operator> <name pos:start="23:24" pos:end="23:26">b_y</name><operator pos:start="23:27" pos:end="23:27">*</operator><name pos:start="23:28" pos:end="23:33">stride</name></expr>]</index><index pos:start="23:35" pos:end="23:37">[<expr pos:start="23:36" pos:end="23:36"><literal type="number" pos:start="23:36" pos:end="23:36">1</literal></expr>]</index></name><operator pos:start="23:38" pos:end="23:38">=</operator> <ternary pos:start="23:40" pos:end="23:74"><condition pos:start="23:40" pos:end="23:54"><expr pos:start="23:40" pos:end="23:52"><name pos:start="23:40" pos:end="23:47">distance</name> <operator pos:start="23:49" pos:end="23:50">&gt;=</operator> <literal type="number" pos:start="23:52" pos:end="23:52">0</literal></expr> ?</condition><then pos:start="23:56" pos:end="23:67"> <expr pos:start="23:56" pos:end="23:67"><name pos:start="23:56" pos:end="23:58">b_x</name><operator pos:start="23:59" pos:end="23:59">-</operator><name pos:start="23:60" pos:end="23:67">distance</name></expr> </then><else pos:start="23:69" pos:end="23:74">: <expr pos:start="23:71" pos:end="23:74"><literal type="number" pos:start="23:71" pos:end="23:74">9999</literal></expr></else></ternary></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="25:9" pos:end="25:20"><expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:13">color</name><operator pos:start="25:14" pos:end="25:14">=</operator> <literal type="number" pos:start="25:16" pos:end="25:19">1024</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="26:9" pos:end="26:21"><expr pos:start="26:9" pos:end="26:20"><name pos:start="26:9" pos:end="26:16">distance</name><operator pos:start="26:17" pos:end="26:17">=</operator> <operator pos:start="26:19" pos:end="26:19">-</operator><literal type="number" pos:start="26:20" pos:end="26:20">1</literal></expr>;</expr_stmt>
        <for pos:start="27:9" pos:end="37:9">for<control pos:start="27:12" pos:end="27:35">(<init pos:start="27:13" pos:end="27:20"><expr pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:15">b_x</name><operator pos:start="27:16" pos:end="27:16">=</operator><name pos:start="27:17" pos:end="27:17">w</name><operator pos:start="27:18" pos:end="27:18">-</operator><literal type="number" pos:start="27:19" pos:end="27:19">1</literal></expr>;</init> <condition pos:start="27:22" pos:end="27:28"><expr pos:start="27:22" pos:end="27:27"><name pos:start="27:22" pos:end="27:24">b_x</name><operator pos:start="27:25" pos:end="27:26">&gt;=</operator><literal type="number" pos:start="27:27" pos:end="27:27">0</literal></expr>;</condition> <incr pos:start="27:30" pos:end="27:34"><expr pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:32">b_x</name><operator pos:start="27:33" pos:end="27:34">--</operator></expr></incr>)</control><block pos:start="27:36" pos:end="37:9">{<block_content pos:start="28:13" pos:end="36:75">
            <decl_stmt pos:start="28:13" pos:end="28:73"><decl pos:start="28:13" pos:end="28:72"><type pos:start="28:13" pos:end="28:15"><name pos:start="28:13" pos:end="28:15">int</name></type> <name pos:start="28:17" pos:end="28:26">mb_index_j</name><init pos:start="28:27" pos:end="28:72">= <expr pos:start="28:29" pos:end="28:72"><operator pos:start="28:29" pos:end="28:29">(</operator><name pos:start="28:30" pos:end="28:32">b_x</name><operator pos:start="28:33" pos:end="28:34">&gt;&gt;</operator><name pos:start="28:35" pos:end="28:41">is_luma</name><operator pos:start="28:42" pos:end="28:42">)</operator> <operator pos:start="28:44" pos:end="28:44">+</operator> <operator pos:start="28:46" pos:end="28:46">(</operator><name pos:start="28:47" pos:end="28:49">b_y</name><operator pos:start="28:50" pos:end="28:51">&gt;&gt;</operator><name pos:start="28:52" pos:end="28:58">is_luma</name><operator pos:start="28:59" pos:end="28:59">)</operator><operator pos:start="28:60" pos:end="28:60">*</operator><name pos:start="28:61" pos:end="28:72"><name pos:start="28:61" pos:end="28:61">s</name><operator pos:start="28:62" pos:end="28:63">-&gt;</operator><name pos:start="28:64" pos:end="28:72">mb_stride</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="29:13" pos:end="29:59"><decl pos:start="29:13" pos:end="29:58"><type pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">int</name></type> <name pos:start="29:17" pos:end="29:23">error_j</name><init pos:start="29:24" pos:end="29:58">= <expr pos:start="29:26" pos:end="29:58"><name pos:start="29:26" pos:end="29:58"><name pos:start="29:26" pos:end="29:26">s</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:46">error_status_table</name><index pos:start="29:47" pos:end="29:58">[<expr pos:start="29:48" pos:end="29:57"><name pos:start="29:48" pos:end="29:57">mb_index_j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="30:13" pos:end="30:77"><decl pos:start="30:13" pos:end="30:76"><type pos:start="30:13" pos:end="30:15"><name pos:start="30:13" pos:end="30:15">int</name></type> <name pos:start="30:17" pos:end="30:23">intra_j</name> <init pos:start="30:25" pos:end="30:76">= <expr pos:start="30:27" pos:end="30:76"><call pos:start="30:27" pos:end="30:76"><name pos:start="30:27" pos:end="30:34">IS_INTRA</name><argument_list pos:start="30:35" pos:end="30:76">(<argument pos:start="30:36" pos:end="30:75"><expr pos:start="30:36" pos:end="30:75"><name pos:start="30:36" pos:end="30:75"><name pos:start="30:36" pos:end="30:36">s</name><operator pos:start="30:37" pos:end="30:38">-&gt;</operator><name pos:start="30:39" pos:end="30:53">current_picture</name><operator pos:start="30:54" pos:end="30:54">.</operator><name pos:start="30:55" pos:end="30:55">f</name><operator pos:start="30:56" pos:end="30:56">.</operator><name pos:start="30:57" pos:end="30:63">mb_type</name><index pos:start="30:64" pos:end="30:75">[<expr pos:start="30:65" pos:end="30:74"><name pos:start="30:65" pos:end="30:74">mb_index_j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="31:13" pos:end="34:13"><if pos:start="31:13" pos:end="34:13">if<condition pos:start="31:15" pos:end="31:52">(<expr pos:start="31:16" pos:end="31:51"><name pos:start="31:16" pos:end="31:22">intra_j</name><operator pos:start="31:23" pos:end="31:24">==</operator><literal type="number" pos:start="31:25" pos:end="31:25">0</literal> <operator pos:start="31:27" pos:end="31:28">||</operator> <operator pos:start="31:30" pos:end="31:30">!</operator><operator pos:start="31:31" pos:end="31:31">(</operator><name pos:start="31:32" pos:end="31:38">error_j</name><operator pos:start="31:39" pos:end="31:39">&amp;</operator><name pos:start="31:40" pos:end="31:50">ER_DC_ERROR</name><operator pos:start="31:51" pos:end="31:51">)</operator></expr>)</condition><block pos:start="31:53" pos:end="34:13">{<block_content pos:start="32:17" pos:end="33:30">
                <expr_stmt pos:start="32:17" pos:end="32:44"><expr pos:start="32:17" pos:end="32:43"><name pos:start="32:17" pos:end="32:21">color</name><operator pos:start="32:22" pos:end="32:22">=</operator> <name pos:start="32:24" pos:end="32:43"><name pos:start="32:24" pos:end="32:25">dc</name><index pos:start="32:26" pos:end="32:43">[<expr pos:start="32:27" pos:end="32:42"><name pos:start="32:27" pos:end="32:29">b_x</name> <operator pos:start="32:31" pos:end="32:31">+</operator> <name pos:start="32:33" pos:end="32:35">b_y</name><operator pos:start="32:36" pos:end="32:36">*</operator><name pos:start="32:37" pos:end="32:42">stride</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="33:17" pos:end="33:30"><expr pos:start="33:17" pos:end="33:29"><name pos:start="33:17" pos:end="33:24">distance</name><operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:29">b_x</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="35:13" pos:end="35:45"><expr pos:start="35:13" pos:end="35:44"><name pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:15">col</name> <index pos:start="35:17" pos:end="35:34">[<expr pos:start="35:18" pos:end="35:33"><name pos:start="35:18" pos:end="35:20">b_x</name> <operator pos:start="35:22" pos:end="35:22">+</operator> <name pos:start="35:24" pos:end="35:26">b_y</name><operator pos:start="35:27" pos:end="35:27">*</operator><name pos:start="35:28" pos:end="35:33">stride</name></expr>]</index><index pos:start="35:35" pos:end="35:37">[<expr pos:start="35:36" pos:end="35:36"><literal type="number" pos:start="35:36" pos:end="35:36">0</literal></expr>]</index></name><operator pos:start="35:38" pos:end="35:38">=</operator> <name pos:start="35:40" pos:end="35:44">color</name></expr>;</expr_stmt>
            <expr_stmt pos:start="36:13" pos:end="36:75"><expr pos:start="36:13" pos:end="36:74"><name pos:start="36:13" pos:end="36:37"><name pos:start="36:13" pos:end="36:16">dist</name><index pos:start="36:17" pos:end="36:34">[<expr pos:start="36:18" pos:end="36:33"><name pos:start="36:18" pos:end="36:20">b_x</name> <operator pos:start="36:22" pos:end="36:22">+</operator> <name pos:start="36:24" pos:end="36:26">b_y</name><operator pos:start="36:27" pos:end="36:27">*</operator><name pos:start="36:28" pos:end="36:33">stride</name></expr>]</index><index pos:start="36:35" pos:end="36:37">[<expr pos:start="36:36" pos:end="36:36"><literal type="number" pos:start="36:36" pos:end="36:36">0</literal></expr>]</index></name><operator pos:start="36:38" pos:end="36:38">=</operator> <ternary pos:start="36:40" pos:end="36:74"><condition pos:start="36:40" pos:end="36:54"><expr pos:start="36:40" pos:end="36:52"><name pos:start="36:40" pos:end="36:47">distance</name> <operator pos:start="36:49" pos:end="36:50">&gt;=</operator> <literal type="number" pos:start="36:52" pos:end="36:52">0</literal></expr> ?</condition><then pos:start="36:56" pos:end="36:67"> <expr pos:start="36:56" pos:end="36:67"><name pos:start="36:56" pos:end="36:63">distance</name><operator pos:start="36:64" pos:end="36:64">-</operator><name pos:start="36:65" pos:end="36:67">b_x</name></expr> </then><else pos:start="36:69" pos:end="36:74">: <expr pos:start="36:71" pos:end="36:74"><literal type="number" pos:start="36:71" pos:end="36:74">9999</literal></expr></else></ternary></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="39:5" pos:end="66:5">for<control pos:start="39:8" pos:end="39:28">(<init pos:start="39:9" pos:end="39:14"><expr pos:start="39:9" pos:end="39:13"><name pos:start="39:9" pos:end="39:11">b_x</name><operator pos:start="39:12" pos:end="39:12">=</operator><literal type="number" pos:start="39:13" pos:end="39:13">0</literal></expr>;</init> <condition pos:start="39:16" pos:end="39:21"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:18">b_x</name><operator pos:start="39:19" pos:end="39:19">&lt;</operator><name pos:start="39:20" pos:end="39:20">w</name></expr>;</condition> <incr pos:start="39:23" pos:end="39:27"><expr pos:start="39:23" pos:end="39:27"><name pos:start="39:23" pos:end="39:25">b_x</name><operator pos:start="39:26" pos:end="39:27">++</operator></expr></incr>)</control><block pos:start="39:29" pos:end="66:5">{<block_content pos:start="40:9" pos:end="65:9">
        <decl_stmt pos:start="40:9" pos:end="40:24"><decl pos:start="40:9" pos:end="40:23"><type pos:start="40:9" pos:end="40:11"><name pos:start="40:9" pos:end="40:11">int</name></type> <name pos:start="40:13" pos:end="40:17">color</name><init pos:start="40:18" pos:end="40:23">= <expr pos:start="40:20" pos:end="40:23"><literal type="number" pos:start="40:20" pos:end="40:23">1024</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="41:9" pos:end="41:25"><decl pos:start="41:9" pos:end="41:24"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:20">distance</name><init pos:start="41:21" pos:end="41:24">= <expr pos:start="41:23" pos:end="41:24"><operator pos:start="41:23" pos:end="41:23">-</operator><literal type="number" pos:start="41:24" pos:end="41:24">1</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="42:9" pos:end="52:9">for<control pos:start="42:12" pos:end="42:32">(<init pos:start="42:13" pos:end="42:18"><expr pos:start="42:13" pos:end="42:17"><name pos:start="42:13" pos:end="42:15">b_y</name><operator pos:start="42:16" pos:end="42:16">=</operator><literal type="number" pos:start="42:17" pos:end="42:17">0</literal></expr>;</init> <condition pos:start="42:20" pos:end="42:25"><expr pos:start="42:20" pos:end="42:24"><name pos:start="42:20" pos:end="42:22">b_y</name><operator pos:start="42:23" pos:end="42:23">&lt;</operator><name pos:start="42:24" pos:end="42:24">h</name></expr>;</condition> <incr pos:start="42:27" pos:end="42:31"><expr pos:start="42:27" pos:end="42:31"><name pos:start="42:27" pos:end="42:29">b_y</name><operator pos:start="42:30" pos:end="42:31">++</operator></expr></incr>)</control><block pos:start="42:33" pos:end="52:9">{<block_content pos:start="43:13" pos:end="51:75">
            <decl_stmt pos:start="43:13" pos:end="43:73"><decl pos:start="43:13" pos:end="43:72"><type pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">int</name></type> <name pos:start="43:17" pos:end="43:26">mb_index_j</name><init pos:start="43:27" pos:end="43:72">= <expr pos:start="43:29" pos:end="43:72"><operator pos:start="43:29" pos:end="43:29">(</operator><name pos:start="43:30" pos:end="43:32">b_x</name><operator pos:start="43:33" pos:end="43:34">&gt;&gt;</operator><name pos:start="43:35" pos:end="43:41">is_luma</name><operator pos:start="43:42" pos:end="43:42">)</operator> <operator pos:start="43:44" pos:end="43:44">+</operator> <operator pos:start="43:46" pos:end="43:46">(</operator><name pos:start="43:47" pos:end="43:49">b_y</name><operator pos:start="43:50" pos:end="43:51">&gt;&gt;</operator><name pos:start="43:52" pos:end="43:58">is_luma</name><operator pos:start="43:59" pos:end="43:59">)</operator><operator pos:start="43:60" pos:end="43:60">*</operator><name pos:start="43:61" pos:end="43:72"><name pos:start="43:61" pos:end="43:61">s</name><operator pos:start="43:62" pos:end="43:63">-&gt;</operator><name pos:start="43:64" pos:end="43:72">mb_stride</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="44:13" pos:end="44:59"><decl pos:start="44:13" pos:end="44:58"><type pos:start="44:13" pos:end="44:15"><name pos:start="44:13" pos:end="44:15">int</name></type> <name pos:start="44:17" pos:end="44:23">error_j</name><init pos:start="44:24" pos:end="44:58">= <expr pos:start="44:26" pos:end="44:58"><name pos:start="44:26" pos:end="44:58"><name pos:start="44:26" pos:end="44:26">s</name><operator pos:start="44:27" pos:end="44:28">-&gt;</operator><name pos:start="44:29" pos:end="44:46">error_status_table</name><index pos:start="44:47" pos:end="44:58">[<expr pos:start="44:48" pos:end="44:57"><name pos:start="44:48" pos:end="44:57">mb_index_j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="45:13" pos:end="45:77"><decl pos:start="45:13" pos:end="45:76"><type pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">int</name></type> <name pos:start="45:17" pos:end="45:23">intra_j</name> <init pos:start="45:25" pos:end="45:76">= <expr pos:start="45:27" pos:end="45:76"><call pos:start="45:27" pos:end="45:76"><name pos:start="45:27" pos:end="45:34">IS_INTRA</name><argument_list pos:start="45:35" pos:end="45:76">(<argument pos:start="45:36" pos:end="45:75"><expr pos:start="45:36" pos:end="45:75"><name pos:start="45:36" pos:end="45:75"><name pos:start="45:36" pos:end="45:36">s</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:53">current_picture</name><operator pos:start="45:54" pos:end="45:54">.</operator><name pos:start="45:55" pos:end="45:55">f</name><operator pos:start="45:56" pos:end="45:56">.</operator><name pos:start="45:57" pos:end="45:63">mb_type</name><index pos:start="45:64" pos:end="45:75">[<expr pos:start="45:65" pos:end="45:74"><name pos:start="45:65" pos:end="45:74">mb_index_j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="46:13" pos:end="49:13"><if pos:start="46:13" pos:end="49:13">if<condition pos:start="46:15" pos:end="46:52">(<expr pos:start="46:16" pos:end="46:51"><name pos:start="46:16" pos:end="46:22">intra_j</name><operator pos:start="46:23" pos:end="46:24">==</operator><literal type="number" pos:start="46:25" pos:end="46:25">0</literal> <operator pos:start="46:27" pos:end="46:28">||</operator> <operator pos:start="46:30" pos:end="46:30">!</operator><operator pos:start="46:31" pos:end="46:31">(</operator><name pos:start="46:32" pos:end="46:38">error_j</name><operator pos:start="46:39" pos:end="46:39">&amp;</operator><name pos:start="46:40" pos:end="46:50">ER_DC_ERROR</name><operator pos:start="46:51" pos:end="46:51">)</operator></expr>)</condition><block pos:start="46:53" pos:end="49:13">{<block_content pos:start="47:17" pos:end="48:30">
                <expr_stmt pos:start="47:17" pos:end="47:44"><expr pos:start="47:17" pos:end="47:43"><name pos:start="47:17" pos:end="47:21">color</name><operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:43"><name pos:start="47:24" pos:end="47:25">dc</name><index pos:start="47:26" pos:end="47:43">[<expr pos:start="47:27" pos:end="47:42"><name pos:start="47:27" pos:end="47:29">b_x</name> <operator pos:start="47:31" pos:end="47:31">+</operator> <name pos:start="47:33" pos:end="47:35">b_y</name><operator pos:start="47:36" pos:end="47:36">*</operator><name pos:start="47:37" pos:end="47:42">stride</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="48:17" pos:end="48:30"><expr pos:start="48:17" pos:end="48:29"><name pos:start="48:17" pos:end="48:24">distance</name><operator pos:start="48:25" pos:end="48:25">=</operator> <name pos:start="48:27" pos:end="48:29">b_y</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="50:13" pos:end="50:45"><expr pos:start="50:13" pos:end="50:44"><name pos:start="50:13" pos:end="50:37"><name pos:start="50:13" pos:end="50:15">col</name> <index pos:start="50:17" pos:end="50:34">[<expr pos:start="50:18" pos:end="50:33"><name pos:start="50:18" pos:end="50:20">b_x</name> <operator pos:start="50:22" pos:end="50:22">+</operator> <name pos:start="50:24" pos:end="50:26">b_y</name><operator pos:start="50:27" pos:end="50:27">*</operator><name pos:start="50:28" pos:end="50:33">stride</name></expr>]</index><index pos:start="50:35" pos:end="50:37">[<expr pos:start="50:36" pos:end="50:36"><literal type="number" pos:start="50:36" pos:end="50:36">3</literal></expr>]</index></name><operator pos:start="50:38" pos:end="50:38">=</operator> <name pos:start="50:40" pos:end="50:44">color</name></expr>;</expr_stmt>
            <expr_stmt pos:start="51:13" pos:end="51:75"><expr pos:start="51:13" pos:end="51:74"><name pos:start="51:13" pos:end="51:37"><name pos:start="51:13" pos:end="51:16">dist</name><index pos:start="51:17" pos:end="51:34">[<expr pos:start="51:18" pos:end="51:33"><name pos:start="51:18" pos:end="51:20">b_x</name> <operator pos:start="51:22" pos:end="51:22">+</operator> <name pos:start="51:24" pos:end="51:26">b_y</name><operator pos:start="51:27" pos:end="51:27">*</operator><name pos:start="51:28" pos:end="51:33">stride</name></expr>]</index><index pos:start="51:35" pos:end="51:37">[<expr pos:start="51:36" pos:end="51:36"><literal type="number" pos:start="51:36" pos:end="51:36">3</literal></expr>]</index></name><operator pos:start="51:38" pos:end="51:38">=</operator> <ternary pos:start="51:40" pos:end="51:74"><condition pos:start="51:40" pos:end="51:54"><expr pos:start="51:40" pos:end="51:52"><name pos:start="51:40" pos:end="51:47">distance</name> <operator pos:start="51:49" pos:end="51:50">&gt;=</operator> <literal type="number" pos:start="51:52" pos:end="51:52">0</literal></expr> ?</condition><then pos:start="51:56" pos:end="51:67"> <expr pos:start="51:56" pos:end="51:67"><name pos:start="51:56" pos:end="51:58">b_y</name><operator pos:start="51:59" pos:end="51:59">-</operator><name pos:start="51:60" pos:end="51:67">distance</name></expr> </then><else pos:start="51:69" pos:end="51:74">: <expr pos:start="51:71" pos:end="51:74"><literal type="number" pos:start="51:71" pos:end="51:74">9999</literal></expr></else></ternary></expr>;</expr_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="53:9" pos:end="53:20"><expr pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:13">color</name><operator pos:start="53:14" pos:end="53:14">=</operator> <literal type="number" pos:start="53:16" pos:end="53:19">1024</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="54:9" pos:end="54:21"><expr pos:start="54:9" pos:end="54:20"><name pos:start="54:9" pos:end="54:16">distance</name><operator pos:start="54:17" pos:end="54:17">=</operator> <operator pos:start="54:19" pos:end="54:19">-</operator><literal type="number" pos:start="54:20" pos:end="54:20">1</literal></expr>;</expr_stmt>
        <for pos:start="55:9" pos:end="65:9">for<control pos:start="55:12" pos:end="55:35">(<init pos:start="55:13" pos:end="55:20"><expr pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:15">b_y</name><operator pos:start="55:16" pos:end="55:16">=</operator><name pos:start="55:17" pos:end="55:17">h</name><operator pos:start="55:18" pos:end="55:18">-</operator><literal type="number" pos:start="55:19" pos:end="55:19">1</literal></expr>;</init> <condition pos:start="55:22" pos:end="55:28"><expr pos:start="55:22" pos:end="55:27"><name pos:start="55:22" pos:end="55:24">b_y</name><operator pos:start="55:25" pos:end="55:26">&gt;=</operator><literal type="number" pos:start="55:27" pos:end="55:27">0</literal></expr>;</condition> <incr pos:start="55:30" pos:end="55:34"><expr pos:start="55:30" pos:end="55:34"><name pos:start="55:30" pos:end="55:32">b_y</name><operator pos:start="55:33" pos:end="55:34">--</operator></expr></incr>)</control><block pos:start="55:36" pos:end="65:9">{<block_content pos:start="56:13" pos:end="64:75">
            <decl_stmt pos:start="56:13" pos:end="56:73"><decl pos:start="56:13" pos:end="56:72"><type pos:start="56:13" pos:end="56:15"><name pos:start="56:13" pos:end="56:15">int</name></type> <name pos:start="56:17" pos:end="56:26">mb_index_j</name><init pos:start="56:27" pos:end="56:72">= <expr pos:start="56:29" pos:end="56:72"><operator pos:start="56:29" pos:end="56:29">(</operator><name pos:start="56:30" pos:end="56:32">b_x</name><operator pos:start="56:33" pos:end="56:34">&gt;&gt;</operator><name pos:start="56:35" pos:end="56:41">is_luma</name><operator pos:start="56:42" pos:end="56:42">)</operator> <operator pos:start="56:44" pos:end="56:44">+</operator> <operator pos:start="56:46" pos:end="56:46">(</operator><name pos:start="56:47" pos:end="56:49">b_y</name><operator pos:start="56:50" pos:end="56:51">&gt;&gt;</operator><name pos:start="56:52" pos:end="56:58">is_luma</name><operator pos:start="56:59" pos:end="56:59">)</operator><operator pos:start="56:60" pos:end="56:60">*</operator><name pos:start="56:61" pos:end="56:72"><name pos:start="56:61" pos:end="56:61">s</name><operator pos:start="56:62" pos:end="56:63">-&gt;</operator><name pos:start="56:64" pos:end="56:72">mb_stride</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="57:13" pos:end="57:59"><decl pos:start="57:13" pos:end="57:58"><type pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:15">int</name></type> <name pos:start="57:17" pos:end="57:23">error_j</name><init pos:start="57:24" pos:end="57:58">= <expr pos:start="57:26" pos:end="57:58"><name pos:start="57:26" pos:end="57:58"><name pos:start="57:26" pos:end="57:26">s</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:46">error_status_table</name><index pos:start="57:47" pos:end="57:58">[<expr pos:start="57:48" pos:end="57:57"><name pos:start="57:48" pos:end="57:57">mb_index_j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="58:13" pos:end="58:77"><decl pos:start="58:13" pos:end="58:76"><type pos:start="58:13" pos:end="58:15"><name pos:start="58:13" pos:end="58:15">int</name></type> <name pos:start="58:17" pos:end="58:23">intra_j</name> <init pos:start="58:25" pos:end="58:76">= <expr pos:start="58:27" pos:end="58:76"><call pos:start="58:27" pos:end="58:76"><name pos:start="58:27" pos:end="58:34">IS_INTRA</name><argument_list pos:start="58:35" pos:end="58:76">(<argument pos:start="58:36" pos:end="58:75"><expr pos:start="58:36" pos:end="58:75"><name pos:start="58:36" pos:end="58:75"><name pos:start="58:36" pos:end="58:36">s</name><operator pos:start="58:37" pos:end="58:38">-&gt;</operator><name pos:start="58:39" pos:end="58:53">current_picture</name><operator pos:start="58:54" pos:end="58:54">.</operator><name pos:start="58:55" pos:end="58:55">f</name><operator pos:start="58:56" pos:end="58:56">.</operator><name pos:start="58:57" pos:end="58:63">mb_type</name><index pos:start="58:64" pos:end="58:75">[<expr pos:start="58:65" pos:end="58:74"><name pos:start="58:65" pos:end="58:74">mb_index_j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="59:13" pos:end="62:13"><if pos:start="59:13" pos:end="62:13">if<condition pos:start="59:15" pos:end="59:52">(<expr pos:start="59:16" pos:end="59:51"><name pos:start="59:16" pos:end="59:22">intra_j</name><operator pos:start="59:23" pos:end="59:24">==</operator><literal type="number" pos:start="59:25" pos:end="59:25">0</literal> <operator pos:start="59:27" pos:end="59:28">||</operator> <operator pos:start="59:30" pos:end="59:30">!</operator><operator pos:start="59:31" pos:end="59:31">(</operator><name pos:start="59:32" pos:end="59:38">error_j</name><operator pos:start="59:39" pos:end="59:39">&amp;</operator><name pos:start="59:40" pos:end="59:50">ER_DC_ERROR</name><operator pos:start="59:51" pos:end="59:51">)</operator></expr>)</condition><block pos:start="59:53" pos:end="62:13">{<block_content pos:start="60:17" pos:end="61:30">
                <expr_stmt pos:start="60:17" pos:end="60:44"><expr pos:start="60:17" pos:end="60:43"><name pos:start="60:17" pos:end="60:21">color</name><operator pos:start="60:22" pos:end="60:22">=</operator> <name pos:start="60:24" pos:end="60:43"><name pos:start="60:24" pos:end="60:25">dc</name><index pos:start="60:26" pos:end="60:43">[<expr pos:start="60:27" pos:end="60:42"><name pos:start="60:27" pos:end="60:29">b_x</name> <operator pos:start="60:31" pos:end="60:31">+</operator> <name pos:start="60:33" pos:end="60:35">b_y</name><operator pos:start="60:36" pos:end="60:36">*</operator><name pos:start="60:37" pos:end="60:42">stride</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="61:17" pos:end="61:30"><expr pos:start="61:17" pos:end="61:29"><name pos:start="61:17" pos:end="61:24">distance</name><operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:29">b_y</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="63:13" pos:end="63:45"><expr pos:start="63:13" pos:end="63:44"><name pos:start="63:13" pos:end="63:37"><name pos:start="63:13" pos:end="63:15">col</name> <index pos:start="63:17" pos:end="63:34">[<expr pos:start="63:18" pos:end="63:33"><name pos:start="63:18" pos:end="63:20">b_x</name> <operator pos:start="63:22" pos:end="63:22">+</operator> <name pos:start="63:24" pos:end="63:26">b_y</name><operator pos:start="63:27" pos:end="63:27">*</operator><name pos:start="63:28" pos:end="63:33">stride</name></expr>]</index><index pos:start="63:35" pos:end="63:37">[<expr pos:start="63:36" pos:end="63:36"><literal type="number" pos:start="63:36" pos:end="63:36">2</literal></expr>]</index></name><operator pos:start="63:38" pos:end="63:38">=</operator> <name pos:start="63:40" pos:end="63:44">color</name></expr>;</expr_stmt>
            <expr_stmt pos:start="64:13" pos:end="64:75"><expr pos:start="64:13" pos:end="64:74"><name pos:start="64:13" pos:end="64:37"><name pos:start="64:13" pos:end="64:16">dist</name><index pos:start="64:17" pos:end="64:34">[<expr pos:start="64:18" pos:end="64:33"><name pos:start="64:18" pos:end="64:20">b_x</name> <operator pos:start="64:22" pos:end="64:22">+</operator> <name pos:start="64:24" pos:end="64:26">b_y</name><operator pos:start="64:27" pos:end="64:27">*</operator><name pos:start="64:28" pos:end="64:33">stride</name></expr>]</index><index pos:start="64:35" pos:end="64:37">[<expr pos:start="64:36" pos:end="64:36"><literal type="number" pos:start="64:36" pos:end="64:36">2</literal></expr>]</index></name><operator pos:start="64:38" pos:end="64:38">=</operator> <ternary pos:start="64:40" pos:end="64:74"><condition pos:start="64:40" pos:end="64:54"><expr pos:start="64:40" pos:end="64:52"><name pos:start="64:40" pos:end="64:47">distance</name> <operator pos:start="64:49" pos:end="64:50">&gt;=</operator> <literal type="number" pos:start="64:52" pos:end="64:52">0</literal></expr> ?</condition><then pos:start="64:56" pos:end="64:67"> <expr pos:start="64:56" pos:end="64:67"><name pos:start="64:56" pos:end="64:63">distance</name><operator pos:start="64:64" pos:end="64:64">-</operator><name pos:start="64:65" pos:end="64:67">b_y</name></expr> </then><else pos:start="64:69" pos:end="64:74">: <expr pos:start="64:71" pos:end="64:74"><literal type="number" pos:start="64:71" pos:end="64:74">9999</literal></expr></else></ternary></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <for pos:start="67:5" pos:end="87:5">for <control pos:start="67:9" pos:end="67:33">(<init pos:start="67:10" pos:end="67:17"><expr pos:start="67:10" pos:end="67:16"><name pos:start="67:10" pos:end="67:12">b_y</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr>;</init> <condition pos:start="67:19" pos:end="67:26"><expr pos:start="67:19" pos:end="67:25"><name pos:start="67:19" pos:end="67:21">b_y</name> <operator pos:start="67:23" pos:end="67:23">&lt;</operator> <name pos:start="67:25" pos:end="67:25">h</name></expr>;</condition> <incr pos:start="67:28" pos:end="67:32"><expr pos:start="67:28" pos:end="67:32"><name pos:start="67:28" pos:end="67:30">b_y</name><operator pos:start="67:31" pos:end="67:32">++</operator></expr></incr>)</control> <block pos:start="67:35" pos:end="87:5">{<block_content pos:start="68:9" pos:end="86:9">
        <for pos:start="68:9" pos:end="86:9">for <control pos:start="68:13" pos:end="68:37">(<init pos:start="68:14" pos:end="68:21"><expr pos:start="68:14" pos:end="68:20"><name pos:start="68:14" pos:end="68:16">b_x</name> <operator pos:start="68:18" pos:end="68:18">=</operator> <literal type="number" pos:start="68:20" pos:end="68:20">0</literal></expr>;</init> <condition pos:start="68:23" pos:end="68:30"><expr pos:start="68:23" pos:end="68:29"><name pos:start="68:23" pos:end="68:25">b_x</name> <operator pos:start="68:27" pos:end="68:27">&lt;</operator> <name pos:start="68:29" pos:end="68:29">w</name></expr>;</condition> <incr pos:start="68:32" pos:end="68:36"><expr pos:start="68:32" pos:end="68:36"><name pos:start="68:32" pos:end="68:34">b_x</name><operator pos:start="68:35" pos:end="68:36">++</operator></expr></incr>)</control> <block pos:start="68:39" pos:end="86:9">{<block_content pos:start="69:13" pos:end="85:43">
            <decl_stmt pos:start="69:13" pos:end="69:35"><decl pos:start="69:13" pos:end="69:24"><type pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">int</name></type> <name pos:start="69:17" pos:end="69:24">mb_index</name></decl>, <decl pos:start="69:27" pos:end="69:31"><type ref="prev" pos:start="69:13" pos:end="69:15"/><name pos:start="69:27" pos:end="69:31">error</name></decl>, <decl pos:start="69:34" pos:end="69:34"><type ref="prev" pos:start="69:13" pos:end="69:15"/><name pos:start="69:34" pos:end="69:34">j</name></decl>;</decl_stmt>
            <decl_stmt pos:start="70:13" pos:end="70:38"><decl pos:start="70:13" pos:end="70:25"><type pos:start="70:13" pos:end="70:19"><name pos:start="70:13" pos:end="70:19">int64_t</name></type> <name pos:start="70:21" pos:end="70:25">guess</name></decl>, <decl pos:start="70:28" pos:end="70:37"><type ref="prev" pos:start="70:13" pos:end="70:19"/><name pos:start="70:28" pos:end="70:37">weight_sum</name></decl>;</decl_stmt>
            <expr_stmt pos:start="71:13" pos:end="71:74"><expr pos:start="71:13" pos:end="71:73"><name pos:start="71:13" pos:end="71:20">mb_index</name> <operator pos:start="71:22" pos:end="71:22">=</operator> <operator pos:start="71:24" pos:end="71:24">(</operator><name pos:start="71:25" pos:end="71:27">b_x</name> <operator pos:start="71:29" pos:end="71:30">&gt;&gt;</operator> <name pos:start="71:32" pos:end="71:38">is_luma</name><operator pos:start="71:39" pos:end="71:39">)</operator> <operator pos:start="71:41" pos:end="71:41">+</operator> <operator pos:start="71:43" pos:end="71:43">(</operator><name pos:start="71:44" pos:end="71:46">b_y</name> <operator pos:start="71:48" pos:end="71:49">&gt;&gt;</operator> <name pos:start="71:51" pos:end="71:57">is_luma</name><operator pos:start="71:58" pos:end="71:58">)</operator> <operator pos:start="71:60" pos:end="71:60">*</operator> <name pos:start="71:62" pos:end="71:73"><name pos:start="71:62" pos:end="71:62">s</name><operator pos:start="71:63" pos:end="71:64">-&gt;</operator><name pos:start="71:65" pos:end="71:73">mb_stride</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="72:13" pos:end="72:55"><expr pos:start="72:13" pos:end="72:54"><name pos:start="72:13" pos:end="72:17">error</name>    <operator pos:start="72:22" pos:end="72:22">=</operator> <name pos:start="72:24" pos:end="72:54"><name pos:start="72:24" pos:end="72:24">s</name><operator pos:start="72:25" pos:end="72:26">-&gt;</operator><name pos:start="72:27" pos:end="72:44">error_status_table</name><index pos:start="72:45" pos:end="72:54">[<expr pos:start="72:46" pos:end="72:53"><name pos:start="72:46" pos:end="72:53">mb_index</name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="73:13" pos:end="74:25"><if pos:start="73:13" pos:end="74:25">if <condition pos:start="73:16" pos:end="73:65">(<expr pos:start="73:17" pos:end="73:64"><call pos:start="73:17" pos:end="73:64"><name pos:start="73:17" pos:end="73:24">IS_INTER</name><argument_list pos:start="73:25" pos:end="73:64">(<argument pos:start="73:26" pos:end="73:63"><expr pos:start="73:26" pos:end="73:63"><name pos:start="73:26" pos:end="73:63"><name pos:start="73:26" pos:end="73:26">s</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:43">current_picture</name><operator pos:start="73:44" pos:end="73:44">.</operator><name pos:start="73:45" pos:end="73:45">f</name><operator pos:start="73:46" pos:end="73:46">.</operator><name pos:start="73:47" pos:end="73:53">mb_type</name><index pos:start="73:54" pos:end="73:63">[<expr pos:start="73:55" pos:end="73:62"><name pos:start="73:55" pos:end="73:62">mb_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="74:17" pos:end="74:25"><block_content pos:start="74:17" pos:end="74:25">
                <continue pos:start="74:17" pos:end="74:25">continue;</continue></block_content></block></if></if_stmt> <comment type="line" pos:start="74:27" pos:end="74:34">// inter</comment>
            <if_stmt pos:start="75:13" pos:end="76:25"><if pos:start="75:13" pos:end="76:25">if <condition pos:start="75:16" pos:end="75:39">(<expr pos:start="75:17" pos:end="75:38"><operator pos:start="75:17" pos:end="75:17">!</operator><operator pos:start="75:18" pos:end="75:18">(</operator><name pos:start="75:19" pos:end="75:23">error</name> <operator pos:start="75:25" pos:end="75:25">&amp;</operator> <name pos:start="75:27" pos:end="75:37">ER_DC_ERROR</name><operator pos:start="75:38" pos:end="75:38">)</operator></expr>)</condition><block type="pseudo" pos:start="76:17" pos:end="76:25"><block_content pos:start="76:17" pos:end="76:25">
                <continue pos:start="76:17" pos:end="76:25">continue;</continue></block_content></block></if></if_stmt> <comment type="line" pos:start="76:27" pos:end="76:34">// dc-ok</comment>
            <expr_stmt pos:start="77:13" pos:end="77:27"><expr pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:22">weight_sum</name> <operator pos:start="77:24" pos:end="77:24">=</operator> <literal type="number" pos:start="77:26" pos:end="77:26">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="78:13" pos:end="78:27"><expr pos:start="78:13" pos:end="78:26"><name pos:start="78:13" pos:end="78:17">guess</name>      <operator pos:start="78:24" pos:end="78:24">=</operator> <literal type="number" pos:start="78:26" pos:end="78:26">0</literal></expr>;</expr_stmt>
            <for pos:start="79:13" pos:end="83:13">for <control pos:start="79:17" pos:end="79:35">(<init pos:start="79:18" pos:end="79:23"><expr pos:start="79:18" pos:end="79:22"><name pos:start="79:18" pos:end="79:18">j</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>;</init> <condition pos:start="79:25" pos:end="79:30"><expr pos:start="79:25" pos:end="79:29"><name pos:start="79:25" pos:end="79:25">j</name> <operator pos:start="79:27" pos:end="79:27">&lt;</operator> <literal type="number" pos:start="79:29" pos:end="79:29">4</literal></expr>;</condition> <incr pos:start="79:32" pos:end="79:34"><expr pos:start="79:32" pos:end="79:34"><name pos:start="79:32" pos:end="79:32">j</name><operator pos:start="79:33" pos:end="79:34">++</operator></expr></incr>)</control> <block pos:start="79:37" pos:end="83:13">{<block_content pos:start="80:17" pos:end="82:41">
                <decl_stmt pos:start="80:17" pos:end="80:93"><decl pos:start="80:17" pos:end="80:92"><type pos:start="80:17" pos:end="80:23"><name pos:start="80:17" pos:end="80:23">int64_t</name></type> <name pos:start="80:25" pos:end="80:30">weight</name>  <init pos:start="80:33" pos:end="80:92">= <expr pos:start="80:35" pos:end="80:92"><literal type="number" pos:start="80:35" pos:end="80:37">256</literal> <operator pos:start="80:39" pos:end="80:39">*</operator> <literal type="number" pos:start="80:41" pos:end="80:43">256</literal> <operator pos:start="80:45" pos:end="80:45">*</operator> <literal type="number" pos:start="80:47" pos:end="80:49">256</literal> <operator pos:start="80:51" pos:end="80:51">*</operator> <literal type="number" pos:start="80:53" pos:end="80:54">16</literal> <operator pos:start="80:56" pos:end="80:56">/</operator> <call pos:start="80:58" pos:end="80:92"><name pos:start="80:58" pos:end="80:62">FFMAX</name><argument_list pos:start="80:63" pos:end="80:92">(<argument pos:start="80:64" pos:end="80:88"><expr pos:start="80:64" pos:end="80:88"><name pos:start="80:64" pos:end="80:88"><name pos:start="80:64" pos:end="80:67">dist</name><index pos:start="80:68" pos:end="80:85">[<expr pos:start="80:69" pos:end="80:84"><name pos:start="80:69" pos:end="80:71">b_x</name> <operator pos:start="80:73" pos:end="80:73">+</operator> <name pos:start="80:75" pos:end="80:77">b_y</name><operator pos:start="80:78" pos:end="80:78">*</operator><name pos:start="80:79" pos:end="80:84">stride</name></expr>]</index><index pos:start="80:86" pos:end="80:88">[<expr pos:start="80:87" pos:end="80:87"><name pos:start="80:87" pos:end="80:87">j</name></expr>]</index></name></expr></argument>, <argument pos:start="80:91" pos:end="80:91"><expr pos:start="80:91" pos:end="80:91"><literal type="number" pos:start="80:91" pos:end="80:91">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="81:17" pos:end="81:75"><expr pos:start="81:17" pos:end="81:74"><name pos:start="81:17" pos:end="81:21">guess</name>          <operator pos:start="81:32" pos:end="81:33">+=</operator> <name pos:start="81:35" pos:end="81:40">weight</name><operator pos:start="81:41" pos:end="81:41">*</operator><operator pos:start="81:42" pos:end="81:42">(</operator><name pos:start="81:43" pos:end="81:49">int64_t</name><operator pos:start="81:50" pos:end="81:50">)</operator><name pos:start="81:51" pos:end="81:74"><name pos:start="81:51" pos:end="81:53">col</name><index pos:start="81:54" pos:end="81:71">[<expr pos:start="81:55" pos:end="81:70"><name pos:start="81:55" pos:end="81:57">b_x</name> <operator pos:start="81:59" pos:end="81:59">+</operator> <name pos:start="81:61" pos:end="81:63">b_y</name><operator pos:start="81:64" pos:end="81:64">*</operator><name pos:start="81:65" pos:end="81:70">stride</name></expr>]</index><index pos:start="81:72" pos:end="81:74">[<expr pos:start="81:73" pos:end="81:73"><name pos:start="81:73" pos:end="81:73">j</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="82:17" pos:end="82:41"><expr pos:start="82:17" pos:end="82:40"><name pos:start="82:17" pos:end="82:26">weight_sum</name>     <operator pos:start="82:32" pos:end="82:33">+=</operator> <name pos:start="82:35" pos:end="82:40">weight</name></expr>;</expr_stmt>
            </block_content>}</block></for>
            <expr_stmt pos:start="84:13" pos:end="84:58"><expr pos:start="84:13" pos:end="84:57"><name pos:start="84:13" pos:end="84:17">guess</name> <operator pos:start="84:19" pos:end="84:19">=</operator> <operator pos:start="84:21" pos:end="84:21">(</operator><name pos:start="84:22" pos:end="84:26">guess</name> <operator pos:start="84:28" pos:end="84:28">+</operator> <name pos:start="84:30" pos:end="84:39">weight_sum</name> <operator pos:start="84:41" pos:end="84:41">/</operator> <literal type="number" pos:start="84:43" pos:end="84:43">2</literal><operator pos:start="84:44" pos:end="84:44">)</operator> <operator pos:start="84:46" pos:end="84:46">/</operator> <name pos:start="84:48" pos:end="84:57">weight_sum</name></expr>;</expr_stmt>
            <expr_stmt pos:start="85:13" pos:end="85:43"><expr pos:start="85:13" pos:end="85:42"><name pos:start="85:13" pos:end="85:34"><name pos:start="85:13" pos:end="85:14">dc</name><index pos:start="85:15" pos:end="85:34">[<expr pos:start="85:16" pos:end="85:33"><name pos:start="85:16" pos:end="85:18">b_x</name> <operator pos:start="85:20" pos:end="85:20">+</operator> <name pos:start="85:22" pos:end="85:24">b_y</name> <operator pos:start="85:26" pos:end="85:26">*</operator> <name pos:start="85:28" pos:end="85:33">stride</name></expr>]</index></name> <operator pos:start="85:36" pos:end="85:36">=</operator> <name pos:start="85:38" pos:end="85:42">guess</name></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></for>
    <expr_stmt pos:start="88:5" pos:end="88:19"><expr pos:start="88:5" pos:end="88:18"><call pos:start="88:5" pos:end="88:18"><name pos:start="88:5" pos:end="88:12">av_freep</name><argument_list pos:start="88:13" pos:end="88:18">(<argument pos:start="88:14" pos:end="88:17"><expr pos:start="88:14" pos:end="88:17"><operator pos:start="88:14" pos:end="88:14">&amp;</operator><name pos:start="88:15" pos:end="88:17">col</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="89:5" pos:end="89:20"><expr pos:start="89:5" pos:end="89:19"><call pos:start="89:5" pos:end="89:19"><name pos:start="89:5" pos:end="89:12">av_freep</name><argument_list pos:start="89:13" pos:end="89:19">(<argument pos:start="89:14" pos:end="89:18"><expr pos:start="89:14" pos:end="89:18"><operator pos:start="89:14" pos:end="89:14">&amp;</operator><name pos:start="89:15" pos:end="89:18">dist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function></unit>
