<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3579.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">unix_get_buffer</name><parameter_list pos:start="1:27" pos:end="1:77">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:48">uint8_t</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">buf</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:66"><decl pos:start="1:56" pos:end="1:66"><type pos:start="1:56" pos:end="1:66"><name pos:start="1:56" pos:end="1:62">int64_t</name></type> <name pos:start="1:64" pos:end="1:66">pos</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:76"><decl pos:start="1:69" pos:end="1:76"><type pos:start="1:69" pos:end="1:76"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:76">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:15">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">QEMUFileSocket</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">ssize_t</name></type> <name pos:start="7:13" pos:end="7:15">len</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="31:5">for <control pos:start="11:9" pos:end="11:12">(<init pos:start="11:10" pos:end="11:10">;</init><condition pos:start="11:11" pos:end="11:11">;</condition><incr/>)</control> <block pos:start="11:14" pos:end="31:5">{<block_content pos:start="13:9" pos:end="29:9">

        <expr_stmt pos:start="13:9" pos:end="13:37"><expr pos:start="13:9" pos:end="13:36"><name pos:start="13:9" pos:end="13:11">len</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:36"><name pos:start="13:15" pos:end="13:18">read</name><argument_list pos:start="13:19" pos:end="13:36">(<argument pos:start="13:20" pos:end="13:24"><expr pos:start="13:20" pos:end="13:24"><name pos:start="13:20" pos:end="13:24"><name pos:start="13:20" pos:end="13:20">s</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:24">fd</name></name></expr></argument>, <argument pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><name pos:start="13:27" pos:end="13:29">buf</name></expr></argument>, <argument pos:start="13:32" pos:end="13:35"><expr pos:start="13:32" pos:end="13:35"><name pos:start="13:32" pos:end="13:35">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:22">(<expr pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:15">len</name> <operator pos:start="15:17" pos:end="15:18">!=</operator> <operator pos:start="15:20" pos:end="15:20">-</operator><literal type="number" pos:start="15:21" pos:end="15:21">1</literal></expr>)</condition> <block pos:start="15:24" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:18">

            <break pos:start="17:13" pos:end="17:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="21:9" pos:end="29:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:28">(<expr pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:17">errno</name> <operator pos:start="21:19" pos:end="21:20">==</operator> <name pos:start="21:22" pos:end="21:27">EAGAIN</name></expr>)</condition> <block pos:start="21:30" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:43">

            <expr_stmt pos:start="23:13" pos:end="23:43"><expr pos:start="23:13" pos:end="23:42"><call pos:start="23:13" pos:end="23:42"><name pos:start="23:13" pos:end="23:35">yield_until_fd_readable</name><argument_list pos:start="23:36" pos:end="23:42">(<argument pos:start="23:37" pos:end="23:41"><expr pos:start="23:37" pos:end="23:41"><name pos:start="23:37" pos:end="23:41"><name pos:start="23:37" pos:end="23:37">s</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:41">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="25:11" pos:end="29:9">else if <condition pos:start="25:19" pos:end="25:34">(<expr pos:start="25:20" pos:end="25:33"><name pos:start="25:20" pos:end="25:24">errno</name> <operator pos:start="25:26" pos:end="25:27">!=</operator> <name pos:start="25:29" pos:end="25:33">EINTR</name></expr>)</condition> <block pos:start="25:36" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:18">(<expr pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:11">len</name> <operator pos:start="35:13" pos:end="35:14">==</operator> <operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>)</condition> <block pos:start="35:20" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:21">

        <expr_stmt pos:start="37:9" pos:end="37:21"><expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:11">len</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <operator pos:start="37:15" pos:end="37:15">-</operator><name pos:start="37:16" pos:end="37:20">errno</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="41:5" pos:end="41:15">return <expr pos:start="41:12" pos:end="41:14"><name pos:start="41:12" pos:end="41:14">len</name></expr>;</return>

</block_content>}</block></function>
</unit>
