<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5610.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:33"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:18">detach</name><parameter_list pos:start="1:19" pos:end="3:56">(<parameter pos:start="1:20" pos:end="1:40"><decl pos:start="1:20" pos:end="1:40"><type pos:start="1:20" pos:end="1:40"><name pos:start="1:20" pos:end="1:35">sPAPRDRConnector</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">drc</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:53">DeviceState</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">d</name></decl></parameter>,
                   <parameter pos:start="2:20" pos:end="2:49"><decl pos:start="2:20" pos:end="2:49"><type pos:start="2:20" pos:end="2:49"><name pos:start="2:20" pos:end="2:38">spapr_drc_detach_cb</name> <modifier pos:start="2:40" pos:end="2:40">*</modifier></type><name pos:start="2:41" pos:end="2:49">detach_cb</name></decl></parameter>,
                   <parameter pos:start="3:20" pos:end="3:41"><decl pos:start="3:20" pos:end="3:41"><type pos:start="3:20" pos:end="3:41"><name pos:start="3:20" pos:end="3:23">void</name> <modifier pos:start="3:25" pos:end="3:25">*</modifier></type><name pos:start="3:26" pos:end="3:41">detach_cb_opaque</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:55"><decl pos:start="3:44" pos:end="3:55"><type pos:start="3:44" pos:end="3:55"><name pos:start="3:44" pos:end="3:48">Error</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier><modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:55">errp</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="41:33">{<block_content pos:start="5:5" pos:end="41:33">
    <expr_stmt pos:start="5:5" pos:end="5:48"><expr pos:start="5:5" pos:end="5:47"><call pos:start="5:5" pos:end="5:47"><name pos:start="5:5" pos:end="5:12">DPRINTFN</name><argument_list pos:start="5:13" pos:end="5:47">(<argument pos:start="5:14" pos:end="5:30"><expr pos:start="5:14" pos:end="5:30"><literal type="string" pos:start="5:14" pos:end="5:30">"drc: %x, detach"</literal></expr></argument>, <argument pos:start="5:33" pos:end="5:46"><expr pos:start="5:33" pos:end="5:46"><call pos:start="5:33" pos:end="5:46"><name pos:start="5:33" pos:end="5:41">get_index</name><argument_list pos:start="5:42" pos:end="5:46">(<argument pos:start="5:43" pos:end="5:45"><expr pos:start="5:43" pos:end="5:45"><name pos:start="5:43" pos:end="5:45">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:31"><expr pos:start="6:5" pos:end="6:30"><name pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:7">drc</name><operator pos:start="6:8" pos:end="6:9">-&gt;</operator><name pos:start="6:10" pos:end="6:18">detach_cb</name></name> <operator pos:start="6:20" pos:end="6:20">=</operator> <name pos:start="6:22" pos:end="6:30">detach_cb</name></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:45"><expr pos:start="7:5" pos:end="7:44"><name pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:7">drc</name><operator pos:start="7:8" pos:end="7:9">-&gt;</operator><name pos:start="7:10" pos:end="7:25">detach_cb_opaque</name></name> <operator pos:start="7:27" pos:end="7:27">=</operator> <name pos:start="7:29" pos:end="7:44">detach_cb_opaque</name></expr>;</expr_stmt>
    <comment type="block" pos:start="8:5" pos:end="20:7">/* if we've signalled device presence to the guest, or if the guest
     * has gone ahead and configured the device (via manually-executed
     * device add via drmgr in guest, namely), we need to wait
     * for the guest to quiesce the device before completing detach.
     * Otherwise, we can assume the guest hasn't seen it and complete the
     * detach immediately. Note that there is a small race window
     * just before, or during, configuration, which is this context
     * refers mainly to fetching the device tree via RTAS.
     * During this window the device access will be arbitrated by
     * associated DRC, which will simply fail the RTAS calls as invalid.
     * This is recoverable within guest and current implementations of
     * drmgr should be able to cope.
     */</comment>
    <if_stmt pos:start="21:5" pos:end="41:33"><if pos:start="21:5" pos:end="41:33">if <condition pos:start="21:8" pos:end="21:44">(<expr pos:start="21:9" pos:end="21:43"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:23"><name pos:start="21:10" pos:end="21:12">drc</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:23">signalled</name></name> <operator pos:start="21:25" pos:end="21:26">&amp;&amp;</operator> <operator pos:start="21:28" pos:end="21:28">!</operator><name pos:start="21:29" pos:end="21:43"><name pos:start="21:29" pos:end="21:31">drc</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:43">configured</name></name></expr>)</condition> <block pos:start="21:46" pos:end="41:33">{<block_content pos:start="25:9" pos:end="41:33">
        <comment type="block" pos:start="22:9" pos:end="24:11">/* if the guest hasn't seen the device we can't rely on it to
         * set it back to an isolated state via RTAS, so do it here manually
         */</comment>
        <expr_stmt pos:start="25:9" pos:end="25:65"><expr pos:start="25:9" pos:end="25:64"><name pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:11">drc</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:28">isolation_state</name></name> <operator pos:start="25:30" pos:end="25:30">=</operator> <name pos:start="25:32" pos:end="25:64">SPAPR_DR_ISOLATION_STATE_ISOLATED</name></expr>;</expr_stmt>
    <if_stmt pos:start="26:5" pos:end="41:33"><if pos:start="26:5" pos:end="41:33">if <condition pos:start="26:8" pos:end="26:66">(<expr pos:start="26:9" pos:end="26:65"><name pos:start="26:9" pos:end="26:28"><name pos:start="26:9" pos:end="26:11">drc</name><operator pos:start="26:12" pos:end="26:13">-&gt;</operator><name pos:start="26:14" pos:end="26:28">isolation_state</name></name> <operator pos:start="26:30" pos:end="26:31">!=</operator> <name pos:start="26:33" pos:end="26:65">SPAPR_DR_ISOLATION_STATE_ISOLATED</name></expr>)</condition> <block pos:start="26:68" pos:end="41:33">{<block_content pos:start="27:9" pos:end="41:33">
        <expr_stmt pos:start="27:9" pos:end="27:73"><expr pos:start="27:9" pos:end="27:72"><call pos:start="27:9" pos:end="27:72"><name pos:start="27:9" pos:end="27:16">DPRINTFN</name><argument_list pos:start="27:17" pos:end="27:72">(<argument pos:start="27:18" pos:end="27:71"><expr pos:start="27:18" pos:end="27:71"><literal type="string" pos:start="27:18" pos:end="27:71">"awaiting transition to isolated state before removal"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="28:5" pos:end="41:33"><if pos:start="28:5" pos:end="41:33">if <condition pos:start="28:8" pos:end="29:68">(<expr pos:start="28:9" pos:end="29:67"><name pos:start="28:9" pos:end="28:17"><name pos:start="28:9" pos:end="28:11">drc</name><operator pos:start="28:12" pos:end="28:13">-&gt;</operator><name pos:start="28:14" pos:end="28:17">type</name></name> <operator pos:start="28:19" pos:end="28:20">!=</operator> <name pos:start="28:22" pos:end="28:48">SPAPR_DR_CONNECTOR_TYPE_PCI</name> <operator pos:start="28:50" pos:end="28:51">&amp;&amp;</operator>
        <name pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:11">drc</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:29">allocation_state</name></name> <operator pos:start="29:31" pos:end="29:32">!=</operator> <name pos:start="29:34" pos:end="29:67">SPAPR_DR_ALLOCATION_STATE_UNUSABLE</name></expr>)</condition> <block pos:start="29:70" pos:end="41:33">{<block_content pos:start="30:9" pos:end="41:33">
        <expr_stmt pos:start="30:9" pos:end="30:73"><expr pos:start="30:9" pos:end="30:72"><call pos:start="30:9" pos:end="30:72"><name pos:start="30:9" pos:end="30:16">DPRINTFN</name><argument_list pos:start="30:17" pos:end="30:72">(<argument pos:start="30:18" pos:end="30:71"><expr pos:start="30:18" pos:end="30:71"><literal type="string" pos:start="30:18" pos:end="30:71">"awaiting transition to unusable state before removal"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:61"><expr pos:start="31:5" pos:end="31:60"><name pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:7">drc</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:24">indicator_state</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:60">SPAPR_DR_INDICATOR_STATE_INACTIVE</name></expr>;</expr_stmt>
    <if_stmt pos:start="32:5" pos:end="41:33"><if pos:start="32:5" pos:end="41:33">if <condition pos:start="32:8" pos:end="32:23">(<expr pos:start="32:9" pos:end="32:22"><name pos:start="32:9" pos:end="32:22"><name pos:start="32:9" pos:end="32:11">drc</name><operator pos:start="32:12" pos:end="32:13">-&gt;</operator><name pos:start="32:14" pos:end="32:22">detach_cb</name></name></expr>)</condition> <block pos:start="32:25" pos:end="41:33">{<block_content pos:start="33:9" pos:end="41:33">
        <expr_stmt pos:start="33:9" pos:end="33:56"><expr pos:start="33:9" pos:end="33:55"><call pos:start="33:9" pos:end="33:55"><name pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:11">drc</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:22">detach_cb</name></name><argument_list pos:start="33:23" pos:end="33:55">(<argument pos:start="33:24" pos:end="33:31"><expr pos:start="33:24" pos:end="33:31"><name pos:start="33:24" pos:end="33:31"><name pos:start="33:24" pos:end="33:26">drc</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:31">dev</name></name></expr></argument>, <argument pos:start="33:34" pos:end="33:54"><expr pos:start="33:34" pos:end="33:54"><name pos:start="33:34" pos:end="33:54"><name pos:start="33:34" pos:end="33:36">drc</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:54">detach_cb_opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:34"><expr pos:start="34:5" pos:end="34:33"><name pos:start="34:5" pos:end="34:25"><name pos:start="34:5" pos:end="34:7">drc</name><operator pos:start="34:8" pos:end="34:9">-&gt;</operator><name pos:start="34:10" pos:end="34:25">awaiting_release</name></name> <operator pos:start="34:27" pos:end="34:27">=</operator> <name pos:start="34:29" pos:end="34:33">false</name></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:21"><expr pos:start="35:5" pos:end="35:20"><call pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:10">g_free</name><argument_list pos:start="35:11" pos:end="35:20">(<argument pos:start="35:12" pos:end="35:19"><expr pos:start="35:12" pos:end="35:19"><name pos:start="35:12" pos:end="35:19"><name pos:start="35:12" pos:end="35:14">drc</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:19">fdt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:20"><expr pos:start="36:5" pos:end="36:19"><name pos:start="36:5" pos:end="36:12"><name pos:start="36:5" pos:end="36:7">drc</name><operator pos:start="36:8" pos:end="36:9">-&gt;</operator><name pos:start="36:10" pos:end="36:12">fdt</name></name> <operator pos:start="36:14" pos:end="36:14">=</operator> <name pos:start="36:16" pos:end="36:19">NULL</name></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:7">drc</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:25">fdt_start_offset</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <literal type="number" pos:start="37:29" pos:end="37:29">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:53"><expr pos:start="38:5" pos:end="38:52"><call pos:start="38:5" pos:end="38:52"><name pos:start="38:5" pos:end="38:23">object_property_del</name><argument_list pos:start="38:24" pos:end="38:52">(<argument pos:start="38:25" pos:end="38:35"><expr pos:start="38:25" pos:end="38:35"><call pos:start="38:25" pos:end="38:35"><name pos:start="38:25" pos:end="38:30">OBJECT</name><argument_list pos:start="38:31" pos:end="38:35">(<argument pos:start="38:32" pos:end="38:34"><expr pos:start="38:32" pos:end="38:34"><name pos:start="38:32" pos:end="38:34">drc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="38:38" pos:end="38:45"><expr pos:start="38:38" pos:end="38:45"><literal type="string" pos:start="38:38" pos:end="38:45">"device"</literal></expr></argument>, <argument pos:start="38:48" pos:end="38:51"><expr pos:start="38:48" pos:end="38:51"><name pos:start="38:48" pos:end="38:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:20"><expr pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:7">drc</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:12">dev</name></name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:19">NULL</name></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:26"><expr pos:start="40:5" pos:end="40:25"><name pos:start="40:5" pos:end="40:18"><name pos:start="40:5" pos:end="40:7">drc</name><operator pos:start="40:8" pos:end="40:9">-&gt;</operator><name pos:start="40:10" pos:end="40:18">detach_cb</name></name> <operator pos:start="40:20" pos:end="40:20">=</operator> <name pos:start="40:22" pos:end="40:25">NULL</name></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:25"><name pos:start="41:5" pos:end="41:7">drc</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:25">detach_cb_opaque</name></name> <operator pos:start="41:27" pos:end="41:27">=</operator> <name pos:start="41:29" pos:end="41:32">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
