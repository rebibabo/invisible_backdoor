<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17331.c" pos:tabs="8"><function pos:start="1:1" pos:end="563:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">svq3_decode_mb</name><parameter_list pos:start="1:26" pos:end="1:66">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:37">SVQ3Context</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">svq3</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:65"><decl pos:start="1:46" pos:end="1:65"><type pos:start="1:46" pos:end="1:65"><name pos:start="1:46" pos:end="1:53">unsigned</name> <name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:65">mb_type</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="563:1">{<block_content pos:start="5:5" pos:end="561:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">H264Context</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">h</name> <init pos:start="5:20" pos:end="5:29">= <expr pos:start="5:22" pos:end="5:29"><operator pos:start="5:22" pos:end="5:22">&amp;</operator><name pos:start="5:23" pos:end="5:29"><name pos:start="5:23" pos:end="5:26">svq3</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">h</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">k</name></decl>, <decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:18">m</name></decl>, <decl pos:start="7:21" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:23">dir</name></decl>, <decl pos:start="7:26" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:29">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">cbp</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:16">vlc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:10">int8_t</name> <modifier pos:start="13:12" pos:end="13:12">*</modifier></type><name pos:start="13:13" pos:end="13:15">top</name></decl>, <decl pos:start="13:18" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:12"><modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:22">left</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:51"><decl pos:start="15:5" pos:end="15:50"><type pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:18">MpegEncContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier><specifier pos:start="15:21" pos:end="15:25">const</specifier></type> <name pos:start="15:27" pos:end="15:27">s</name> <init pos:start="15:29" pos:end="15:50">= <expr pos:start="15:31" pos:end="15:50"><operator pos:start="15:31" pos:end="15:31">(</operator><name pos:start="15:32" pos:end="15:45">MpegEncContext</name> <operator pos:start="15:47" pos:end="15:47">*</operator><operator pos:start="15:48" pos:end="15:48">)</operator> <name pos:start="15:50" pos:end="15:50">h</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:19">mb_xy</name> <init pos:start="17:21" pos:end="17:30">= <expr pos:start="17:23" pos:end="17:30"><name pos:start="17:23" pos:end="17:30"><name pos:start="17:23" pos:end="17:23">h</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:30">mb_xy</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:56"><decl pos:start="19:5" pos:end="19:55"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:18">b_xy</name>  <init pos:start="19:21" pos:end="19:55">= <expr pos:start="19:23" pos:end="19:55"><literal type="number" pos:start="19:23" pos:end="19:23">4</literal><operator pos:start="19:24" pos:end="19:24">*</operator><name pos:start="19:25" pos:end="19:31"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:31">mb_x</name></name> <operator pos:start="19:33" pos:end="19:33">+</operator> <literal type="number" pos:start="19:35" pos:end="19:35">4</literal><operator pos:start="19:36" pos:end="19:36">*</operator><name pos:start="19:37" pos:end="19:43"><name pos:start="19:37" pos:end="19:37">s</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:43">mb_y</name></name><operator pos:start="19:44" pos:end="19:44">*</operator><name pos:start="19:45" pos:end="19:55"><name pos:start="19:45" pos:end="19:45">h</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:55">b_stride</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:69"><expr pos:start="23:5" pos:end="23:68"><name pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:5">h</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:28">top_samples_available</name></name>      <operator pos:start="23:35" pos:end="23:35">=</operator> <ternary pos:start="23:37" pos:end="23:68"><condition pos:start="23:37" pos:end="23:52"><expr pos:start="23:37" pos:end="23:50"><operator pos:start="23:37" pos:end="23:37">(</operator><name pos:start="23:38" pos:end="23:44"><name pos:start="23:38" pos:end="23:38">s</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:44">mb_y</name></name> <operator pos:start="23:46" pos:end="23:47">==</operator> <literal type="number" pos:start="23:49" pos:end="23:49">0</literal><operator pos:start="23:50" pos:end="23:50">)</operator></expr> ?</condition><then pos:start="23:54" pos:end="23:59"> <expr pos:start="23:54" pos:end="23:59"><literal type="number" pos:start="23:54" pos:end="23:59">0x33FF</literal></expr> </then><else pos:start="23:61" pos:end="23:68">: <expr pos:start="23:63" pos:end="23:68"><literal type="number" pos:start="23:63" pos:end="23:68">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:69"><expr pos:start="25:5" pos:end="25:68"><name pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:5">h</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:29">left_samples_available</name></name>     <operator pos:start="25:35" pos:end="25:35">=</operator> <ternary pos:start="25:37" pos:end="25:68"><condition pos:start="25:37" pos:end="25:52"><expr pos:start="25:37" pos:end="25:50"><operator pos:start="25:37" pos:end="25:37">(</operator><name pos:start="25:38" pos:end="25:44"><name pos:start="25:38" pos:end="25:38">s</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:44">mb_x</name></name> <operator pos:start="25:46" pos:end="25:47">==</operator> <literal type="number" pos:start="25:49" pos:end="25:49">0</literal><operator pos:start="25:50" pos:end="25:50">)</operator></expr> ?</condition><then pos:start="25:54" pos:end="25:59"> <expr pos:start="25:54" pos:end="25:59"><literal type="number" pos:start="25:54" pos:end="25:59">0x5F5F</literal></expr> </then><else pos:start="25:61" pos:end="25:68">: <expr pos:start="25:63" pos:end="25:68"><literal type="number" pos:start="25:63" pos:end="25:68">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:43"><expr pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:5">h</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:33">topright_samples_available</name></name> <operator pos:start="27:35" pos:end="27:35">=</operator> <literal type="number" pos:start="27:37" pos:end="27:42">0xFFFF</literal></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="371:5"><if pos:start="31:5" pos:end="67:5">if <condition pos:start="31:8" pos:end="31:21">(<expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:15">mb_type</name> <operator pos:start="31:17" pos:end="31:18">==</operator> <literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>)</condition> <block pos:start="31:23" pos:end="67:5">{<block_content pos:start="33:9" pos:end="65:9">           <comment type="block" pos:start="31:35" pos:end="31:44">/* SKIP */</comment>

        <if_stmt pos:start="33:9" pos:end="65:9"><if pos:start="33:9" pos:end="49:9">if <condition pos:start="33:12" pos:end="33:88">(<expr pos:start="33:13" pos:end="33:87"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:24">pict_type</name></name> <operator pos:start="33:26" pos:end="33:27">==</operator> <name pos:start="33:29" pos:end="33:45">AV_PICTURE_TYPE_P</name> <operator pos:start="33:47" pos:end="33:48">||</operator> <name pos:start="33:50" pos:end="33:81"><name pos:start="33:50" pos:end="33:50">s</name><operator pos:start="33:51" pos:end="33:52">-&gt;</operator><name pos:start="33:53" pos:end="33:64">next_picture</name><operator pos:start="33:65" pos:end="33:65">.</operator><name pos:start="33:66" pos:end="33:66">f</name><operator pos:start="33:67" pos:end="33:67">.</operator><name pos:start="33:68" pos:end="33:74">mb_type</name><index pos:start="33:75" pos:end="33:81">[<expr pos:start="33:76" pos:end="33:80"><name pos:start="33:76" pos:end="33:80">mb_xy</name></expr>]</index></name> <operator pos:start="33:83" pos:end="33:84">==</operator> <operator pos:start="33:86" pos:end="33:86">-</operator><literal type="number" pos:start="33:87" pos:end="33:87">1</literal></expr>)</condition> <block pos:start="33:90" pos:end="49:9">{<block_content pos:start="35:13" pos:end="47:35">

            <expr_stmt pos:start="35:13" pos:end="35:82"><expr pos:start="35:13" pos:end="35:81"><call pos:start="35:13" pos:end="35:81"><name pos:start="35:13" pos:end="35:28">svq3_mc_dir_part</name><argument_list pos:start="35:29" pos:end="35:81">(<argument pos:start="35:30" pos:end="35:30"><expr pos:start="35:30" pos:end="35:30"><name pos:start="35:30" pos:end="35:30">s</name></expr></argument>, <argument pos:start="35:33" pos:end="35:42"><expr pos:start="35:33" pos:end="35:42"><literal type="number" pos:start="35:33" pos:end="35:34">16</literal><operator pos:start="35:35" pos:end="35:35">*</operator><name pos:start="35:36" pos:end="35:42"><name pos:start="35:36" pos:end="35:36">s</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:42">mb_x</name></name></expr></argument>, <argument pos:start="35:45" pos:end="35:54"><expr pos:start="35:45" pos:end="35:54"><literal type="number" pos:start="35:45" pos:end="35:46">16</literal><operator pos:start="35:47" pos:end="35:47">*</operator><name pos:start="35:48" pos:end="35:54"><name pos:start="35:48" pos:end="35:48">s</name><operator pos:start="35:49" pos:end="35:50">-&gt;</operator><name pos:start="35:51" pos:end="35:54">mb_y</name></name></expr></argument>, <argument pos:start="35:57" pos:end="35:58"><expr pos:start="35:57" pos:end="35:58"><literal type="number" pos:start="35:57" pos:end="35:58">16</literal></expr></argument>, <argument pos:start="35:61" pos:end="35:62"><expr pos:start="35:61" pos:end="35:62"><literal type="number" pos:start="35:61" pos:end="35:62">16</literal></expr></argument>, <argument pos:start="35:65" pos:end="35:65"><expr pos:start="35:65" pos:end="35:65"><literal type="number" pos:start="35:65" pos:end="35:65">0</literal></expr></argument>, <argument pos:start="35:68" pos:end="35:68"><expr pos:start="35:68" pos:end="35:68"><literal type="number" pos:start="35:68" pos:end="35:68">0</literal></expr></argument>, <argument pos:start="35:71" pos:end="35:71"><expr pos:start="35:71" pos:end="35:71"><literal type="number" pos:start="35:71" pos:end="35:71">0</literal></expr></argument>, <argument pos:start="35:74" pos:end="35:74"><expr pos:start="35:74" pos:end="35:74"><literal type="number" pos:start="35:74" pos:end="35:74">0</literal></expr></argument>, <argument pos:start="35:77" pos:end="35:77"><expr pos:start="35:77" pos:end="35:77"><literal type="number" pos:start="35:77" pos:end="35:77">0</literal></expr></argument>, <argument pos:start="35:80" pos:end="35:80"><expr pos:start="35:80" pos:end="35:80"><literal type="number" pos:start="35:80" pos:end="35:80">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="39:13" pos:end="43:13"><if pos:start="39:13" pos:end="43:13">if <condition pos:start="39:16" pos:end="39:50">(<expr pos:start="39:17" pos:end="39:49"><name pos:start="39:17" pos:end="39:28"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:28">pict_type</name></name> <operator pos:start="39:30" pos:end="39:31">==</operator> <name pos:start="39:33" pos:end="39:49">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="39:52" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:86">

                <expr_stmt pos:start="41:17" pos:end="41:86"><expr pos:start="41:17" pos:end="41:85"><call pos:start="41:17" pos:end="41:85"><name pos:start="41:17" pos:end="41:32">svq3_mc_dir_part</name><argument_list pos:start="41:33" pos:end="41:85">(<argument pos:start="41:34" pos:end="41:34"><expr pos:start="41:34" pos:end="41:34"><name pos:start="41:34" pos:end="41:34">s</name></expr></argument>, <argument pos:start="41:37" pos:end="41:46"><expr pos:start="41:37" pos:end="41:46"><literal type="number" pos:start="41:37" pos:end="41:38">16</literal><operator pos:start="41:39" pos:end="41:39">*</operator><name pos:start="41:40" pos:end="41:46"><name pos:start="41:40" pos:end="41:40">s</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:46">mb_x</name></name></expr></argument>, <argument pos:start="41:49" pos:end="41:58"><expr pos:start="41:49" pos:end="41:58"><literal type="number" pos:start="41:49" pos:end="41:50">16</literal><operator pos:start="41:51" pos:end="41:51">*</operator><name pos:start="41:52" pos:end="41:58"><name pos:start="41:52" pos:end="41:52">s</name><operator pos:start="41:53" pos:end="41:54">-&gt;</operator><name pos:start="41:55" pos:end="41:58">mb_y</name></name></expr></argument>, <argument pos:start="41:61" pos:end="41:62"><expr pos:start="41:61" pos:end="41:62"><literal type="number" pos:start="41:61" pos:end="41:62">16</literal></expr></argument>, <argument pos:start="41:65" pos:end="41:66"><expr pos:start="41:65" pos:end="41:66"><literal type="number" pos:start="41:65" pos:end="41:66">16</literal></expr></argument>, <argument pos:start="41:69" pos:end="41:69"><expr pos:start="41:69" pos:end="41:69"><literal type="number" pos:start="41:69" pos:end="41:69">0</literal></expr></argument>, <argument pos:start="41:72" pos:end="41:72"><expr pos:start="41:72" pos:end="41:72"><literal type="number" pos:start="41:72" pos:end="41:72">0</literal></expr></argument>, <argument pos:start="41:75" pos:end="41:75"><expr pos:start="41:75" pos:end="41:75"><literal type="number" pos:start="41:75" pos:end="41:75">0</literal></expr></argument>, <argument pos:start="41:78" pos:end="41:78"><expr pos:start="41:78" pos:end="41:78"><literal type="number" pos:start="41:78" pos:end="41:78">0</literal></expr></argument>, <argument pos:start="41:81" pos:end="41:81"><expr pos:start="41:81" pos:end="41:81"><literal type="number" pos:start="41:81" pos:end="41:81">1</literal></expr></argument>, <argument pos:start="41:84" pos:end="41:84"><expr pos:start="41:84" pos:end="41:84"><literal type="number" pos:start="41:84" pos:end="41:84">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="47:13" pos:end="47:35"><expr pos:start="47:13" pos:end="47:34"><name pos:start="47:13" pos:end="47:19">mb_type</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:34">MB_TYPE_SKIP</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="65:9">else <block pos:start="49:16" pos:end="65:9">{<block_content pos:start="51:13" pos:end="63:36">

            <expr_stmt pos:start="51:13" pos:end="51:65"><expr pos:start="51:13" pos:end="51:64"><name pos:start="51:13" pos:end="51:19">mb_type</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <call pos:start="51:23" pos:end="51:64"><name pos:start="51:23" pos:end="51:27">FFMIN</name><argument_list pos:start="51:28" pos:end="51:64">(<argument pos:start="51:29" pos:end="51:60"><expr pos:start="51:29" pos:end="51:60"><name pos:start="51:29" pos:end="51:60"><name pos:start="51:29" pos:end="51:29">s</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:43">next_picture</name><operator pos:start="51:44" pos:end="51:44">.</operator><name pos:start="51:45" pos:end="51:45">f</name><operator pos:start="51:46" pos:end="51:46">.</operator><name pos:start="51:47" pos:end="51:53">mb_type</name><index pos:start="51:54" pos:end="51:60">[<expr pos:start="51:55" pos:end="51:59"><name pos:start="51:55" pos:end="51:59">mb_xy</name></expr>]</index></name></expr></argument>, <argument pos:start="51:63" pos:end="51:63"><expr pos:start="51:63" pos:end="51:63"><literal type="number" pos:start="51:63" pos:end="51:63">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="55:26"><if pos:start="53:13" pos:end="55:26">if <condition pos:start="53:16" pos:end="53:64">(<expr pos:start="53:17" pos:end="53:63"><call pos:start="53:17" pos:end="53:59"><name pos:start="53:17" pos:end="53:27">svq3_mc_dir</name><argument_list pos:start="53:28" pos:end="53:59">(<argument pos:start="53:29" pos:end="53:29"><expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">h</name></expr></argument>, <argument pos:start="53:32" pos:end="53:38"><expr pos:start="53:32" pos:end="53:38"><name pos:start="53:32" pos:end="53:38">mb_type</name></expr></argument>, <argument pos:start="53:41" pos:end="53:52"><expr pos:start="53:41" pos:end="53:52"><name pos:start="53:41" pos:end="53:52">PREDICT_MODE</name></expr></argument>, <argument pos:start="53:55" pos:end="53:55"><expr pos:start="53:55" pos:end="53:55"><literal type="number" pos:start="53:55" pos:end="53:55">0</literal></expr></argument>, <argument pos:start="53:58" pos:end="53:58"><expr pos:start="53:58" pos:end="53:58"><literal type="number" pos:start="53:58" pos:end="53:58">0</literal></expr></argument>)</argument_list></call> <operator pos:start="53:61" pos:end="53:61">&lt;</operator> <literal type="number" pos:start="53:63" pos:end="53:63">0</literal></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:26"><block_content pos:start="55:17" pos:end="55:26">

                <return pos:start="55:17" pos:end="55:26">return <expr pos:start="55:24" pos:end="55:25"><operator pos:start="55:24" pos:end="55:24">-</operator><literal type="number" pos:start="55:25" pos:end="55:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="57:13" pos:end="59:26"><if pos:start="57:13" pos:end="59:26">if <condition pos:start="57:16" pos:end="57:64">(<expr pos:start="57:17" pos:end="57:63"><call pos:start="57:17" pos:end="57:59"><name pos:start="57:17" pos:end="57:27">svq3_mc_dir</name><argument_list pos:start="57:28" pos:end="57:59">(<argument pos:start="57:29" pos:end="57:29"><expr pos:start="57:29" pos:end="57:29"><name pos:start="57:29" pos:end="57:29">h</name></expr></argument>, <argument pos:start="57:32" pos:end="57:38"><expr pos:start="57:32" pos:end="57:38"><name pos:start="57:32" pos:end="57:38">mb_type</name></expr></argument>, <argument pos:start="57:41" pos:end="57:52"><expr pos:start="57:41" pos:end="57:52"><name pos:start="57:41" pos:end="57:52">PREDICT_MODE</name></expr></argument>, <argument pos:start="57:55" pos:end="57:55"><expr pos:start="57:55" pos:end="57:55"><literal type="number" pos:start="57:55" pos:end="57:55">1</literal></expr></argument>, <argument pos:start="57:58" pos:end="57:58"><expr pos:start="57:58" pos:end="57:58"><literal type="number" pos:start="57:58" pos:end="57:58">1</literal></expr></argument>)</argument_list></call> <operator pos:start="57:61" pos:end="57:61">&lt;</operator> <literal type="number" pos:start="57:63" pos:end="57:63">0</literal></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:26"><block_content pos:start="59:17" pos:end="59:26">

                <return pos:start="59:17" pos:end="59:26">return <expr pos:start="59:24" pos:end="59:25"><operator pos:start="59:24" pos:end="59:24">-</operator><literal type="number" pos:start="59:25" pos:end="59:25">1</literal></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="63:13" pos:end="63:36"><expr pos:start="63:13" pos:end="63:35"><name pos:start="63:13" pos:end="63:19">mb_type</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <name pos:start="63:23" pos:end="63:35">MB_TYPE_16x16</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="67:7" pos:end="217:5">else if <condition pos:start="67:15" pos:end="67:27">(<expr pos:start="67:16" pos:end="67:26"><name pos:start="67:16" pos:end="67:22">mb_type</name> <operator pos:start="67:24" pos:end="67:24">&lt;</operator> <literal type="number" pos:start="67:26" pos:end="67:26">8</literal></expr>)</condition> <block pos:start="67:29" pos:end="217:5">{<block_content pos:start="69:9" pos:end="215:32">     <comment type="block" pos:start="67:35" pos:end="67:45">/* INTER */</comment>

        <if_stmt pos:start="69:9" pos:end="81:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:77">(<expr pos:start="69:13" pos:end="69:76"><name pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:16">svq3</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:31">thirdpel_flag</name></name> <operator pos:start="69:33" pos:end="69:34">&amp;&amp;</operator> <name pos:start="69:36" pos:end="69:53"><name pos:start="69:36" pos:end="69:39">svq3</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:53">halfpel_flag</name></name> <operator pos:start="69:55" pos:end="69:56">==</operator> <operator pos:start="69:58" pos:end="69:58">!</operator><call pos:start="69:59" pos:end="69:76"><name pos:start="69:59" pos:end="69:67">get_bits1</name> <argument_list pos:start="69:69" pos:end="69:76">(<argument pos:start="69:70" pos:end="69:75"><expr pos:start="69:70" pos:end="69:75"><operator pos:start="69:70" pos:end="69:70">&amp;</operator><name pos:start="69:71" pos:end="69:75"><name pos:start="69:71" pos:end="69:71">s</name><operator pos:start="69:72" pos:end="69:73">-&gt;</operator><name pos:start="69:74" pos:end="69:75">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:79" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:33">

            <expr_stmt pos:start="71:13" pos:end="71:33"><expr pos:start="71:13" pos:end="71:32"><name pos:start="71:13" pos:end="71:16">mode</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:32">THIRDPEL_MODE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="73:11" pos:end="77:9">else if <condition pos:start="73:19" pos:end="73:84">(<expr pos:start="73:20" pos:end="73:83"><name pos:start="73:20" pos:end="73:37"><name pos:start="73:20" pos:end="73:23">svq3</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:37">halfpel_flag</name></name> <operator pos:start="73:39" pos:end="73:40">&amp;&amp;</operator> <name pos:start="73:42" pos:end="73:60"><name pos:start="73:42" pos:end="73:45">svq3</name><operator pos:start="73:46" pos:end="73:47">-&gt;</operator><name pos:start="73:48" pos:end="73:60">thirdpel_flag</name></name> <operator pos:start="73:62" pos:end="73:63">==</operator> <operator pos:start="73:65" pos:end="73:65">!</operator><call pos:start="73:66" pos:end="73:83"><name pos:start="73:66" pos:end="73:74">get_bits1</name> <argument_list pos:start="73:76" pos:end="73:83">(<argument pos:start="73:77" pos:end="73:82"><expr pos:start="73:77" pos:end="73:82"><operator pos:start="73:77" pos:end="73:77">&amp;</operator><name pos:start="73:78" pos:end="73:82"><name pos:start="73:78" pos:end="73:78">s</name><operator pos:start="73:79" pos:end="73:80">-&gt;</operator><name pos:start="73:81" pos:end="73:82">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:86" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:32">

            <expr_stmt pos:start="75:13" pos:end="75:32"><expr pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:16">mode</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:31">HALFPEL_MODE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="81:9">else <block pos:start="77:16" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:32">

            <expr_stmt pos:start="79:13" pos:end="79:32"><expr pos:start="79:13" pos:end="79:31"><name pos:start="79:13" pos:end="79:16">mode</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:31">FULLPEL_MODE</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="85:9" pos:end="85:25">/* fill caches */</comment>

        <comment type="block" pos:start="87:9" pos:end="99:10">/* note ref_cache should contain here:

            ????????

            ???11111

            N??11111

            N??11111

            N??11111

        */</comment>



        <for pos:start="103:9" pos:end="165:9">for <control pos:start="103:13" pos:end="103:31">(<init pos:start="103:14" pos:end="103:19"><expr pos:start="103:14" pos:end="103:18"><name pos:start="103:14" pos:end="103:14">m</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <literal type="number" pos:start="103:18" pos:end="103:18">0</literal></expr>;</init> <condition pos:start="103:21" pos:end="103:26"><expr pos:start="103:21" pos:end="103:25"><name pos:start="103:21" pos:end="103:21">m</name> <operator pos:start="103:23" pos:end="103:23">&lt;</operator> <literal type="number" pos:start="103:25" pos:end="103:25">2</literal></expr>;</condition> <incr pos:start="103:28" pos:end="103:30"><expr pos:start="103:28" pos:end="103:30"><name pos:start="103:28" pos:end="103:28">m</name><operator pos:start="103:29" pos:end="103:30">++</operator></expr></incr>)</control> <block pos:start="103:33" pos:end="165:9">{<block_content pos:start="105:13" pos:end="163:22">

            <if_stmt pos:start="105:13" pos:end="121:13"><if pos:start="105:13" pos:end="113:13">if <condition pos:start="105:16" pos:end="105:85">(<expr pos:start="105:17" pos:end="105:84"><name pos:start="105:17" pos:end="105:23"><name pos:start="105:17" pos:end="105:17">s</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:23">mb_x</name></name> <operator pos:start="105:25" pos:end="105:25">&gt;</operator> <literal type="number" pos:start="105:27" pos:end="105:27">0</literal> <operator pos:start="105:29" pos:end="105:30">&amp;&amp;</operator> <name pos:start="105:32" pos:end="105:78"><name pos:start="105:32" pos:end="105:32">h</name><operator pos:start="105:33" pos:end="105:34">-&gt;</operator><name pos:start="105:35" pos:end="105:52">intra4x4_pred_mode</name><index pos:start="105:53" pos:end="105:78">[<expr pos:start="105:54" pos:end="105:77"><name pos:start="105:54" pos:end="105:75"><name pos:start="105:54" pos:end="105:54">h</name><operator pos:start="105:55" pos:end="105:56">-&gt;</operator><name pos:start="105:57" pos:end="105:64">mb2br_xy</name><index pos:start="105:65" pos:end="105:75">[<expr pos:start="105:66" pos:end="105:74"><name pos:start="105:66" pos:end="105:70">mb_xy</name> <operator pos:start="105:72" pos:end="105:72">-</operator> <literal type="number" pos:start="105:74" pos:end="105:74">1</literal></expr>]</index></name><operator pos:start="105:76" pos:end="105:76">+</operator><literal type="number" pos:start="105:77" pos:end="105:77">6</literal></expr>]</index></name> <operator pos:start="105:80" pos:end="105:81">!=</operator> <operator pos:start="105:83" pos:end="105:83">-</operator><literal type="number" pos:start="105:84" pos:end="105:84">1</literal></expr>)</condition> <block pos:start="105:87" pos:end="113:13">{<block_content pos:start="107:17" pos:end="111:17">

                <for pos:start="107:17" pos:end="111:17">for <control pos:start="107:21" pos:end="107:39">(<init pos:start="107:22" pos:end="107:27"><expr pos:start="107:22" pos:end="107:26"><name pos:start="107:22" pos:end="107:22">i</name> <operator pos:start="107:24" pos:end="107:24">=</operator> <literal type="number" pos:start="107:26" pos:end="107:26">0</literal></expr>;</init> <condition pos:start="107:29" pos:end="107:34"><expr pos:start="107:29" pos:end="107:33"><name pos:start="107:29" pos:end="107:29">i</name> <operator pos:start="107:31" pos:end="107:31">&lt;</operator> <literal type="number" pos:start="107:33" pos:end="107:33">4</literal></expr>;</condition> <incr pos:start="107:36" pos:end="107:38"><expr pos:start="107:36" pos:end="107:38"><name pos:start="107:36" pos:end="107:36">i</name><operator pos:start="107:37" pos:end="107:38">++</operator></expr></incr>)</control> <block pos:start="107:41" pos:end="111:17">{<block_content pos:start="109:21" pos:end="109:146">

                    <expr_stmt pos:start="109:21" pos:end="109:146"><expr pos:start="109:21" pos:end="109:145"><operator pos:start="109:21" pos:end="109:21">*</operator><operator pos:start="109:22" pos:end="109:22">(</operator><name pos:start="109:23" pos:end="109:30">uint32_t</name> <operator pos:start="109:32" pos:end="109:32">*</operator><operator pos:start="109:33" pos:end="109:33">)</operator> <name pos:start="109:35" pos:end="109:68"><name pos:start="109:35" pos:end="109:35">h</name><operator pos:start="109:36" pos:end="109:37">-&gt;</operator><name pos:start="109:38" pos:end="109:45">mv_cache</name><index pos:start="109:46" pos:end="109:48">[<expr pos:start="109:47" pos:end="109:47"><name pos:start="109:47" pos:end="109:47">m</name></expr>]</index><index pos:start="109:49" pos:end="109:68">[<expr pos:start="109:50" pos:end="109:67"><name pos:start="109:50" pos:end="109:57"><name pos:start="109:50" pos:end="109:54">scan8</name><index pos:start="109:55" pos:end="109:57">[<expr pos:start="109:56" pos:end="109:56"><literal type="number" pos:start="109:56" pos:end="109:56">0</literal></expr>]</index></name> <operator pos:start="109:59" pos:end="109:59">-</operator> <literal type="number" pos:start="109:61" pos:end="109:63">1</literal> <operator pos:start="109:63" pos:end="109:63">+</operator> <name pos:start="109:65" pos:end="109:65">i</name><operator pos:start="109:66" pos:end="109:66">*</operator><literal type="number" pos:start="109:67" pos:end="109:67">8</literal></expr>]</index></name> <operator pos:start="109:70" pos:end="109:70">=</operator> <operator pos:start="109:72" pos:end="109:72">*</operator><operator pos:start="109:73" pos:end="109:73">(</operator><name pos:start="109:74" pos:end="109:81">uint32_t</name> <operator pos:start="109:83" pos:end="109:83">*</operator><operator pos:start="109:84" pos:end="109:84">)</operator> <name pos:start="109:86" pos:end="109:145"><name pos:start="109:86" pos:end="109:86">s</name><operator pos:start="109:87" pos:end="109:88">-&gt;</operator><name pos:start="109:89" pos:end="109:103">current_picture</name><operator pos:start="109:104" pos:end="109:104">.</operator><name pos:start="109:105" pos:end="109:105">f</name><operator pos:start="109:106" pos:end="109:106">.</operator><name pos:start="109:107" pos:end="109:116">motion_val</name><index pos:start="109:117" pos:end="109:119">[<expr pos:start="109:118" pos:end="109:118"><name pos:start="109:118" pos:end="109:118">m</name></expr>]</index><index pos:start="109:120" pos:end="109:145">[<expr pos:start="109:121" pos:end="109:144"><name pos:start="109:121" pos:end="109:124">b_xy</name> <operator pos:start="109:126" pos:end="109:126">-</operator> <literal type="number" pos:start="109:128" pos:end="109:130">1</literal> <operator pos:start="109:130" pos:end="109:130">+</operator> <name pos:start="109:132" pos:end="109:132">i</name><operator pos:start="109:133" pos:end="109:133">*</operator><name pos:start="109:134" pos:end="109:144"><name pos:start="109:134" pos:end="109:134">h</name><operator pos:start="109:135" pos:end="109:136">-&gt;</operator><name pos:start="109:137" pos:end="109:144">b_stride</name></name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="113:15" pos:end="121:13">else <block pos:start="113:20" pos:end="121:13">{<block_content pos:start="115:17" pos:end="119:17">

                <for pos:start="115:17" pos:end="119:17">for <control pos:start="115:21" pos:end="115:39">(<init pos:start="115:22" pos:end="115:27"><expr pos:start="115:22" pos:end="115:26"><name pos:start="115:22" pos:end="115:22">i</name> <operator pos:start="115:24" pos:end="115:24">=</operator> <literal type="number" pos:start="115:26" pos:end="115:26">0</literal></expr>;</init> <condition pos:start="115:29" pos:end="115:34"><expr pos:start="115:29" pos:end="115:33"><name pos:start="115:29" pos:end="115:29">i</name> <operator pos:start="115:31" pos:end="115:31">&lt;</operator> <literal type="number" pos:start="115:33" pos:end="115:33">4</literal></expr>;</condition> <incr pos:start="115:36" pos:end="115:38"><expr pos:start="115:36" pos:end="115:38"><name pos:start="115:36" pos:end="115:36">i</name><operator pos:start="115:37" pos:end="115:38">++</operator></expr></incr>)</control> <block pos:start="115:41" pos:end="119:17">{<block_content pos:start="117:21" pos:end="117:73">

                    <expr_stmt pos:start="117:21" pos:end="117:73"><expr pos:start="117:21" pos:end="117:72"><operator pos:start="117:21" pos:end="117:21">*</operator><operator pos:start="117:22" pos:end="117:22">(</operator><name pos:start="117:23" pos:end="117:30">uint32_t</name> <operator pos:start="117:32" pos:end="117:32">*</operator><operator pos:start="117:33" pos:end="117:33">)</operator> <name pos:start="117:35" pos:end="117:68"><name pos:start="117:35" pos:end="117:35">h</name><operator pos:start="117:36" pos:end="117:37">-&gt;</operator><name pos:start="117:38" pos:end="117:45">mv_cache</name><index pos:start="117:46" pos:end="117:48">[<expr pos:start="117:47" pos:end="117:47"><name pos:start="117:47" pos:end="117:47">m</name></expr>]</index><index pos:start="117:49" pos:end="117:68">[<expr pos:start="117:50" pos:end="117:67"><name pos:start="117:50" pos:end="117:57"><name pos:start="117:50" pos:end="117:54">scan8</name><index pos:start="117:55" pos:end="117:57">[<expr pos:start="117:56" pos:end="117:56"><literal type="number" pos:start="117:56" pos:end="117:56">0</literal></expr>]</index></name> <operator pos:start="117:59" pos:end="117:59">-</operator> <literal type="number" pos:start="117:61" pos:end="117:63">1</literal> <operator pos:start="117:63" pos:end="117:63">+</operator> <name pos:start="117:65" pos:end="117:65">i</name><operator pos:start="117:66" pos:end="117:66">*</operator><literal type="number" pos:start="117:67" pos:end="117:67">8</literal></expr>]</index></name> <operator pos:start="117:70" pos:end="117:70">=</operator> <literal type="number" pos:start="117:72" pos:end="117:72">0</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="123:13" pos:end="157:84"><if pos:start="123:13" pos:end="155:13">if <condition pos:start="123:16" pos:end="123:28">(<expr pos:start="123:17" pos:end="123:27"><name pos:start="123:17" pos:end="123:23"><name pos:start="123:17" pos:end="123:17">s</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:23">mb_y</name></name> <operator pos:start="123:25" pos:end="123:25">&gt;</operator> <literal type="number" pos:start="123:27" pos:end="123:27">0</literal></expr>)</condition> <block pos:start="123:30" pos:end="155:13">{<block_content pos:start="125:17" pos:end="153:77">

                <expr_stmt pos:start="125:17" pos:end="125:132"><expr pos:start="125:17" pos:end="125:131"><call pos:start="125:17" pos:end="125:131"><name pos:start="125:17" pos:end="125:22">memcpy</name><argument_list pos:start="125:23" pos:end="125:131">(<argument pos:start="125:24" pos:end="125:53"><expr pos:start="125:24" pos:end="125:53"><name pos:start="125:24" pos:end="125:53"><name pos:start="125:24" pos:end="125:24">h</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:34">mv_cache</name><index pos:start="125:35" pos:end="125:37">[<expr pos:start="125:36" pos:end="125:36"><name pos:start="125:36" pos:end="125:36">m</name></expr>]</index><index pos:start="125:38" pos:end="125:53">[<expr pos:start="125:39" pos:end="125:52"><name pos:start="125:39" pos:end="125:46"><name pos:start="125:39" pos:end="125:43">scan8</name><index pos:start="125:44" pos:end="125:46">[<expr pos:start="125:45" pos:end="125:45"><literal type="number" pos:start="125:45" pos:end="125:45">0</literal></expr>]</index></name> <operator pos:start="125:48" pos:end="125:48">-</operator> <literal type="number" pos:start="125:50" pos:end="125:50">1</literal><operator pos:start="125:51" pos:end="125:51">*</operator><literal type="number" pos:start="125:52" pos:end="125:52">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="125:56" pos:end="125:109"><expr pos:start="125:56" pos:end="125:109"><name pos:start="125:56" pos:end="125:109"><name pos:start="125:56" pos:end="125:56">s</name><operator pos:start="125:57" pos:end="125:58">-&gt;</operator><name pos:start="125:59" pos:end="125:73">current_picture</name><operator pos:start="125:74" pos:end="125:74">.</operator><name pos:start="125:75" pos:end="125:75">f</name><operator pos:start="125:76" pos:end="125:76">.</operator><name pos:start="125:77" pos:end="125:86">motion_val</name><index pos:start="125:87" pos:end="125:89">[<expr pos:start="125:88" pos:end="125:88"><name pos:start="125:88" pos:end="125:88">m</name></expr>]</index><index pos:start="125:90" pos:end="125:109">[<expr pos:start="125:91" pos:end="125:108"><name pos:start="125:91" pos:end="125:94">b_xy</name> <operator pos:start="125:96" pos:end="125:96">-</operator> <name pos:start="125:98" pos:end="125:108"><name pos:start="125:98" pos:end="125:98">h</name><operator pos:start="125:99" pos:end="125:100">-&gt;</operator><name pos:start="125:101" pos:end="125:108">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="125:112" pos:end="125:130"><expr pos:start="125:112" pos:end="125:130"><literal type="number" pos:start="125:112" pos:end="125:112">4</literal><operator pos:start="125:113" pos:end="125:113">*</operator><literal type="number" pos:start="125:114" pos:end="125:114">2</literal><operator pos:start="125:115" pos:end="125:115">*</operator><sizeof pos:start="125:116" pos:end="125:130">sizeof<argument_list pos:start="125:122" pos:end="125:130">(<argument pos:start="125:123" pos:end="125:129"><expr pos:start="125:123" pos:end="125:129"><name pos:start="125:123" pos:end="125:129">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:151"><expr pos:start="127:17" pos:end="127:150"><call pos:start="127:17" pos:end="127:150"><name pos:start="127:17" pos:end="127:22">memset</name><argument_list pos:start="127:23" pos:end="127:150">(<argument pos:start="127:24" pos:end="127:55"><expr pos:start="127:24" pos:end="127:55"><operator pos:start="127:24" pos:end="127:24">&amp;</operator><name pos:start="127:25" pos:end="127:55"><name pos:start="127:25" pos:end="127:25">h</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:36">ref_cache</name><index pos:start="127:37" pos:end="127:39">[<expr pos:start="127:38" pos:end="127:38"><name pos:start="127:38" pos:end="127:38">m</name></expr>]</index><index pos:start="127:40" pos:end="127:55">[<expr pos:start="127:41" pos:end="127:54"><name pos:start="127:41" pos:end="127:48"><name pos:start="127:41" pos:end="127:45">scan8</name><index pos:start="127:46" pos:end="127:48">[<expr pos:start="127:47" pos:end="127:47"><literal type="number" pos:start="127:47" pos:end="127:47">0</literal></expr>]</index></name> <operator pos:start="127:50" pos:end="127:50">-</operator> <literal type="number" pos:start="127:52" pos:end="127:52">1</literal><operator pos:start="127:53" pos:end="127:53">*</operator><literal type="number" pos:start="127:54" pos:end="127:54">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="127:58" pos:end="127:146"><expr pos:start="127:58" pos:end="127:146"><ternary pos:start="127:58" pos:end="127:146"><condition pos:start="127:58" pos:end="127:123"><expr pos:start="127:58" pos:end="127:121"><operator pos:start="127:58" pos:end="127:58">(</operator><name pos:start="127:59" pos:end="127:114"><name pos:start="127:59" pos:end="127:59">h</name><operator pos:start="127:60" pos:end="127:61">-&gt;</operator><name pos:start="127:62" pos:end="127:79">intra4x4_pred_mode</name><index pos:start="127:80" pos:end="127:114">[<expr pos:start="127:81" pos:end="127:113"><name pos:start="127:81" pos:end="127:113"><name pos:start="127:81" pos:end="127:81">h</name><operator pos:start="127:82" pos:end="127:83">-&gt;</operator><name pos:start="127:84" pos:end="127:91">mb2br_xy</name><index pos:start="127:92" pos:end="127:113">[<expr pos:start="127:93" pos:end="127:112"><name pos:start="127:93" pos:end="127:97">mb_xy</name> <operator pos:start="127:99" pos:end="127:99">-</operator> <name pos:start="127:101" pos:end="127:112"><name pos:start="127:101" pos:end="127:101">s</name><operator pos:start="127:102" pos:end="127:103">-&gt;</operator><name pos:start="127:104" pos:end="127:112">mb_stride</name></name></expr>]</index></name></expr>]</index></name> <operator pos:start="127:116" pos:end="127:117">==</operator> <operator pos:start="127:119" pos:end="127:119">-</operator><literal type="number" pos:start="127:120" pos:end="127:120">1</literal><operator pos:start="127:121" pos:end="127:121">)</operator></expr> ?</condition><then pos:start="127:125" pos:end="127:142"> <expr pos:start="127:125" pos:end="127:142"><name pos:start="127:125" pos:end="127:142">PART_NOT_AVAILABLE</name></expr> </then><else pos:start="127:144" pos:end="127:146">: <expr pos:start="127:146" pos:end="127:146"><literal type="number" pos:start="127:146" pos:end="127:146">1</literal></expr></else></ternary></expr></argument>, <argument pos:start="127:149" pos:end="127:149"><expr pos:start="127:149" pos:end="127:149"><literal type="number" pos:start="127:149" pos:end="127:149">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="131:17" pos:end="143:77"><if pos:start="131:17" pos:end="141:17">if <condition pos:start="131:20" pos:end="131:48">(<expr pos:start="131:21" pos:end="131:47"><name pos:start="131:21" pos:end="131:27"><name pos:start="131:21" pos:end="131:21">s</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:27">mb_x</name></name> <operator pos:start="131:29" pos:end="131:29">&lt;</operator> <operator pos:start="131:31" pos:end="131:31">(</operator><name pos:start="131:32" pos:end="131:42"><name pos:start="131:32" pos:end="131:32">s</name><operator pos:start="131:33" pos:end="131:34">-&gt;</operator><name pos:start="131:35" pos:end="131:42">mb_width</name></name> <operator pos:start="131:44" pos:end="131:44">-</operator> <literal type="number" pos:start="131:46" pos:end="131:46">1</literal><operator pos:start="131:47" pos:end="131:47">)</operator></expr>)</condition> <block pos:start="131:50" pos:end="141:17">{<block_content pos:start="133:21" pos:end="139:120">

                    <expr_stmt pos:start="133:21" pos:end="133:144"><expr pos:start="133:21" pos:end="133:143"><operator pos:start="133:21" pos:end="133:21">*</operator><operator pos:start="133:22" pos:end="133:22">(</operator><name pos:start="133:23" pos:end="133:30">uint32_t</name> <operator pos:start="133:32" pos:end="133:32">*</operator><operator pos:start="133:33" pos:end="133:33">)</operator> <name pos:start="133:35" pos:end="133:68"><name pos:start="133:35" pos:end="133:35">h</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:45">mv_cache</name><index pos:start="133:46" pos:end="133:48">[<expr pos:start="133:47" pos:end="133:47"><name pos:start="133:47" pos:end="133:47">m</name></expr>]</index><index pos:start="133:49" pos:end="133:68">[<expr pos:start="133:50" pos:end="133:67"><name pos:start="133:50" pos:end="133:57"><name pos:start="133:50" pos:end="133:54">scan8</name><index pos:start="133:55" pos:end="133:57">[<expr pos:start="133:56" pos:end="133:56"><literal type="number" pos:start="133:56" pos:end="133:56">0</literal></expr>]</index></name> <operator pos:start="133:59" pos:end="133:59">+</operator> <literal type="number" pos:start="133:61" pos:end="133:63">4</literal> <operator pos:start="133:63" pos:end="133:63">-</operator> <literal type="number" pos:start="133:65" pos:end="133:65">1</literal><operator pos:start="133:66" pos:end="133:66">*</operator><literal type="number" pos:start="133:67" pos:end="133:67">8</literal></expr>]</index></name> <operator pos:start="133:70" pos:end="133:70">=</operator> <operator pos:start="133:72" pos:end="133:72">*</operator><operator pos:start="133:73" pos:end="133:73">(</operator><name pos:start="133:74" pos:end="133:81">uint32_t</name> <operator pos:start="133:83" pos:end="133:83">*</operator><operator pos:start="133:84" pos:end="133:84">)</operator> <name pos:start="133:86" pos:end="133:143"><name pos:start="133:86" pos:end="133:86">s</name><operator pos:start="133:87" pos:end="133:88">-&gt;</operator><name pos:start="133:89" pos:end="133:103">current_picture</name><operator pos:start="133:104" pos:end="133:104">.</operator><name pos:start="133:105" pos:end="133:105">f</name><operator pos:start="133:106" pos:end="133:106">.</operator><name pos:start="133:107" pos:end="133:116">motion_val</name><index pos:start="133:117" pos:end="133:119">[<expr pos:start="133:118" pos:end="133:118"><name pos:start="133:118" pos:end="133:118">m</name></expr>]</index><index pos:start="133:120" pos:end="133:143">[<expr pos:start="133:121" pos:end="133:142"><name pos:start="133:121" pos:end="133:124">b_xy</name> <operator pos:start="133:126" pos:end="133:126">-</operator> <name pos:start="133:128" pos:end="133:138"><name pos:start="133:128" pos:end="133:128">h</name><operator pos:start="133:129" pos:end="133:130">-&gt;</operator><name pos:start="133:131" pos:end="133:138">b_stride</name></name> <operator pos:start="133:140" pos:end="133:140">+</operator> <literal type="number" pos:start="133:142" pos:end="133:142">4</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="135:21" pos:end="139:120"><expr pos:start="135:21" pos:end="139:119"><name pos:start="135:21" pos:end="135:55"><name pos:start="135:21" pos:end="135:21">h</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:32">ref_cache</name><index pos:start="135:33" pos:end="135:35">[<expr pos:start="135:34" pos:end="135:34"><name pos:start="135:34" pos:end="135:34">m</name></expr>]</index><index pos:start="135:36" pos:end="135:55">[<expr pos:start="135:37" pos:end="135:54"><name pos:start="135:37" pos:end="135:44"><name pos:start="135:37" pos:end="135:41">scan8</name><index pos:start="135:42" pos:end="135:44">[<expr pos:start="135:43" pos:end="135:43"><literal type="number" pos:start="135:43" pos:end="135:43">0</literal></expr>]</index></name> <operator pos:start="135:46" pos:end="135:46">+</operator> <literal type="number" pos:start="135:48" pos:end="135:48">4</literal> <operator pos:start="135:50" pos:end="135:50">-</operator> <literal type="number" pos:start="135:52" pos:end="135:52">1</literal><operator pos:start="135:53" pos:end="135:53">*</operator><literal type="number" pos:start="135:54" pos:end="135:54">8</literal></expr>]</index></name> <operator pos:start="135:57" pos:end="135:57">=</operator>

                        <ternary pos:start="137:25" pos:end="139:119"><condition pos:start="137:25" pos:end="139:96"><expr pos:start="137:25" pos:end="139:94"><operator pos:start="137:25" pos:end="137:25">(</operator><name pos:start="137:26" pos:end="137:87"><name pos:start="137:26" pos:end="137:26">h</name><operator pos:start="137:27" pos:end="137:28">-&gt;</operator><name pos:start="137:29" pos:end="137:46">intra4x4_pred_mode</name><index pos:start="137:47" pos:end="137:87">[<expr pos:start="137:48" pos:end="137:86"><name pos:start="137:48" pos:end="137:84"><name pos:start="137:48" pos:end="137:48">h</name><operator pos:start="137:49" pos:end="137:50">-&gt;</operator><name pos:start="137:51" pos:end="137:58">mb2br_xy</name><index pos:start="137:59" pos:end="137:84">[<expr pos:start="137:60" pos:end="137:83"><name pos:start="137:60" pos:end="137:64">mb_xy</name> <operator pos:start="137:66" pos:end="137:66">-</operator> <name pos:start="137:68" pos:end="137:79"><name pos:start="137:68" pos:end="137:68">s</name><operator pos:start="137:69" pos:end="137:70">-&gt;</operator><name pos:start="137:71" pos:end="137:79">mb_stride</name></name> <operator pos:start="137:81" pos:end="137:81">+</operator> <literal type="number" pos:start="137:83" pos:end="137:83">1</literal></expr>]</index></name><operator pos:start="137:85" pos:end="137:85">+</operator><literal type="number" pos:start="137:86" pos:end="137:86">6</literal></expr>]</index></name> <operator pos:start="137:89" pos:end="137:90">==</operator> <operator pos:start="137:92" pos:end="137:92">-</operator><literal type="number" pos:start="137:93" pos:end="137:93">1</literal> <operator pos:start="137:95" pos:end="137:96">||</operator>

                         <name pos:start="139:26" pos:end="139:87"><name pos:start="139:26" pos:end="139:26">h</name><operator pos:start="139:27" pos:end="139:28">-&gt;</operator><name pos:start="139:29" pos:end="139:46">intra4x4_pred_mode</name><index pos:start="139:47" pos:end="139:87">[<expr pos:start="139:48" pos:end="139:84"><name pos:start="139:48" pos:end="139:84"><name pos:start="139:48" pos:end="139:48">h</name><operator pos:start="139:49" pos:end="139:50">-&gt;</operator><name pos:start="139:51" pos:end="139:58">mb2br_xy</name><index pos:start="139:59" pos:end="139:84">[<expr pos:start="139:60" pos:end="139:79"><name pos:start="139:60" pos:end="139:64">mb_xy</name> <operator pos:start="139:66" pos:end="139:66">-</operator> <name pos:start="139:68" pos:end="139:79"><name pos:start="139:68" pos:end="139:68">s</name><operator pos:start="139:69" pos:end="139:70">-&gt;</operator><name pos:start="139:71" pos:end="139:79">mb_stride</name></name></expr>    ]</index></name></expr>  ]</index></name> <operator pos:start="139:89" pos:end="139:90">==</operator> <operator pos:start="139:92" pos:end="139:92">-</operator><literal type="number" pos:start="139:93" pos:end="139:93">1</literal><operator pos:start="139:94" pos:end="139:94">)</operator></expr> ?</condition><then pos:start="139:98" pos:end="139:115"> <expr pos:start="139:98" pos:end="139:115"><name pos:start="139:98" pos:end="139:115">PART_NOT_AVAILABLE</name></expr> </then><else pos:start="139:117" pos:end="139:119">: <expr pos:start="139:119" pos:end="139:119"><literal type="number" pos:start="139:119" pos:end="139:119">1</literal></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="141:18" pos:end="143:77">else<block type="pseudo" pos:start="143:21" pos:end="143:77"><block_content pos:start="143:21" pos:end="143:77">

                    <expr_stmt pos:start="143:21" pos:end="143:77"><expr pos:start="143:21" pos:end="143:76"><name pos:start="143:21" pos:end="143:55"><name pos:start="143:21" pos:end="143:21">h</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:32">ref_cache</name><index pos:start="143:33" pos:end="143:35">[<expr pos:start="143:34" pos:end="143:34"><name pos:start="143:34" pos:end="143:34">m</name></expr>]</index><index pos:start="143:36" pos:end="143:55">[<expr pos:start="143:37" pos:end="143:54"><name pos:start="143:37" pos:end="143:44"><name pos:start="143:37" pos:end="143:41">scan8</name><index pos:start="143:42" pos:end="143:44">[<expr pos:start="143:43" pos:end="143:43"><literal type="number" pos:start="143:43" pos:end="143:43">0</literal></expr>]</index></name> <operator pos:start="143:46" pos:end="143:46">+</operator> <literal type="number" pos:start="143:48" pos:end="143:48">4</literal> <operator pos:start="143:50" pos:end="143:50">-</operator> <literal type="number" pos:start="143:52" pos:end="143:52">1</literal><operator pos:start="143:53" pos:end="143:53">*</operator><literal type="number" pos:start="143:54" pos:end="143:54">8</literal></expr>]</index></name> <operator pos:start="143:57" pos:end="143:57">=</operator> <name pos:start="143:59" pos:end="143:76">PART_NOT_AVAILABLE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="145:17" pos:end="153:77"><if pos:start="145:17" pos:end="151:17">if <condition pos:start="145:20" pos:end="145:32">(<expr pos:start="145:21" pos:end="145:31"><name pos:start="145:21" pos:end="145:27"><name pos:start="145:21" pos:end="145:21">s</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:27">mb_x</name></name> <operator pos:start="145:29" pos:end="145:29">&gt;</operator> <literal type="number" pos:start="145:31" pos:end="145:31">0</literal></expr>)</condition> <block pos:start="145:34" pos:end="151:17">{<block_content pos:start="147:21" pos:end="149:154">

                    <expr_stmt pos:start="147:21" pos:end="147:144"><expr pos:start="147:21" pos:end="147:143"><operator pos:start="147:21" pos:end="147:21">*</operator><operator pos:start="147:22" pos:end="147:22">(</operator><name pos:start="147:23" pos:end="147:30">uint32_t</name> <operator pos:start="147:32" pos:end="147:32">*</operator><operator pos:start="147:33" pos:end="147:33">)</operator> <name pos:start="147:35" pos:end="147:68"><name pos:start="147:35" pos:end="147:35">h</name><operator pos:start="147:36" pos:end="147:37">-&gt;</operator><name pos:start="147:38" pos:end="147:45">mv_cache</name><index pos:start="147:46" pos:end="147:48">[<expr pos:start="147:47" pos:end="147:47"><name pos:start="147:47" pos:end="147:47">m</name></expr>]</index><index pos:start="147:49" pos:end="147:68">[<expr pos:start="147:50" pos:end="147:67"><name pos:start="147:50" pos:end="147:57"><name pos:start="147:50" pos:end="147:54">scan8</name><index pos:start="147:55" pos:end="147:57">[<expr pos:start="147:56" pos:end="147:56"><literal type="number" pos:start="147:56" pos:end="147:56">0</literal></expr>]</index></name> <operator pos:start="147:59" pos:end="147:59">-</operator> <literal type="number" pos:start="147:61" pos:end="147:63">1</literal> <operator pos:start="147:63" pos:end="147:63">-</operator> <literal type="number" pos:start="147:65" pos:end="147:65">1</literal><operator pos:start="147:66" pos:end="147:66">*</operator><literal type="number" pos:start="147:67" pos:end="147:67">8</literal></expr>]</index></name> <operator pos:start="147:70" pos:end="147:70">=</operator> <operator pos:start="147:72" pos:end="147:72">*</operator><operator pos:start="147:73" pos:end="147:73">(</operator><name pos:start="147:74" pos:end="147:81">uint32_t</name> <operator pos:start="147:83" pos:end="147:83">*</operator><operator pos:start="147:84" pos:end="147:84">)</operator> <name pos:start="147:86" pos:end="147:143"><name pos:start="147:86" pos:end="147:86">s</name><operator pos:start="147:87" pos:end="147:88">-&gt;</operator><name pos:start="147:89" pos:end="147:103">current_picture</name><operator pos:start="147:104" pos:end="147:104">.</operator><name pos:start="147:105" pos:end="147:105">f</name><operator pos:start="147:106" pos:end="147:106">.</operator><name pos:start="147:107" pos:end="147:116">motion_val</name><index pos:start="147:117" pos:end="147:119">[<expr pos:start="147:118" pos:end="147:118"><name pos:start="147:118" pos:end="147:118">m</name></expr>]</index><index pos:start="147:120" pos:end="147:143">[<expr pos:start="147:121" pos:end="147:142"><name pos:start="147:121" pos:end="147:124">b_xy</name> <operator pos:start="147:126" pos:end="147:126">-</operator> <name pos:start="147:128" pos:end="147:138"><name pos:start="147:128" pos:end="147:128">h</name><operator pos:start="147:129" pos:end="147:130">-&gt;</operator><name pos:start="147:131" pos:end="147:138">b_stride</name></name> <operator pos:start="147:140" pos:end="147:140">-</operator> <literal type="number" pos:start="147:142" pos:end="147:142">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:154"><expr pos:start="149:21" pos:end="149:153"><name pos:start="149:21" pos:end="149:55"><name pos:start="149:21" pos:end="149:21">h</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:32">ref_cache</name><index pos:start="149:33" pos:end="149:35">[<expr pos:start="149:34" pos:end="149:34"><name pos:start="149:34" pos:end="149:34">m</name></expr>]</index><index pos:start="149:36" pos:end="149:55">[<expr pos:start="149:37" pos:end="149:54"><name pos:start="149:37" pos:end="149:44"><name pos:start="149:37" pos:end="149:41">scan8</name><index pos:start="149:42" pos:end="149:44">[<expr pos:start="149:43" pos:end="149:43"><literal type="number" pos:start="149:43" pos:end="149:43">0</literal></expr>]</index></name> <operator pos:start="149:46" pos:end="149:46">-</operator> <literal type="number" pos:start="149:48" pos:end="149:48">1</literal> <operator pos:start="149:50" pos:end="149:50">-</operator> <literal type="number" pos:start="149:52" pos:end="149:52">1</literal><operator pos:start="149:53" pos:end="149:53">*</operator><literal type="number" pos:start="149:54" pos:end="149:54">8</literal></expr>]</index></name> <operator pos:start="149:57" pos:end="149:57">=</operator> <ternary pos:start="149:59" pos:end="149:153"><condition pos:start="149:59" pos:end="149:130"><expr pos:start="149:59" pos:end="149:128"><operator pos:start="149:59" pos:end="149:59">(</operator><name pos:start="149:60" pos:end="149:121"><name pos:start="149:60" pos:end="149:60">h</name><operator pos:start="149:61" pos:end="149:62">-&gt;</operator><name pos:start="149:63" pos:end="149:80">intra4x4_pred_mode</name><index pos:start="149:81" pos:end="149:121">[<expr pos:start="149:82" pos:end="149:120"><name pos:start="149:82" pos:end="149:118"><name pos:start="149:82" pos:end="149:82">h</name><operator pos:start="149:83" pos:end="149:84">-&gt;</operator><name pos:start="149:85" pos:end="149:92">mb2br_xy</name><index pos:start="149:93" pos:end="149:118">[<expr pos:start="149:94" pos:end="149:117"><name pos:start="149:94" pos:end="149:98">mb_xy</name> <operator pos:start="149:100" pos:end="149:100">-</operator> <name pos:start="149:102" pos:end="149:113"><name pos:start="149:102" pos:end="149:102">s</name><operator pos:start="149:103" pos:end="149:104">-&gt;</operator><name pos:start="149:105" pos:end="149:113">mb_stride</name></name> <operator pos:start="149:115" pos:end="149:115">-</operator> <literal type="number" pos:start="149:117" pos:end="149:117">1</literal></expr>]</index></name><operator pos:start="149:119" pos:end="149:119">+</operator><literal type="number" pos:start="149:120" pos:end="149:120">3</literal></expr>]</index></name> <operator pos:start="149:123" pos:end="149:124">==</operator> <operator pos:start="149:126" pos:end="149:126">-</operator><literal type="number" pos:start="149:127" pos:end="149:127">1</literal><operator pos:start="149:128" pos:end="149:128">)</operator></expr> ?</condition><then pos:start="149:132" pos:end="149:149"> <expr pos:start="149:132" pos:end="149:149"><name pos:start="149:132" pos:end="149:149">PART_NOT_AVAILABLE</name></expr> </then><else pos:start="149:151" pos:end="149:153">: <expr pos:start="149:153" pos:end="149:153"><literal type="number" pos:start="149:153" pos:end="149:153">1</literal></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="151:18" pos:end="153:77">else<block type="pseudo" pos:start="153:21" pos:end="153:77"><block_content pos:start="153:21" pos:end="153:77">

                    <expr_stmt pos:start="153:21" pos:end="153:77"><expr pos:start="153:21" pos:end="153:76"><name pos:start="153:21" pos:end="153:55"><name pos:start="153:21" pos:end="153:21">h</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:32">ref_cache</name><index pos:start="153:33" pos:end="153:35">[<expr pos:start="153:34" pos:end="153:34"><name pos:start="153:34" pos:end="153:34">m</name></expr>]</index><index pos:start="153:36" pos:end="153:55">[<expr pos:start="153:37" pos:end="153:54"><name pos:start="153:37" pos:end="153:44"><name pos:start="153:37" pos:end="153:41">scan8</name><index pos:start="153:42" pos:end="153:44">[<expr pos:start="153:43" pos:end="153:43"><literal type="number" pos:start="153:43" pos:end="153:43">0</literal></expr>]</index></name> <operator pos:start="153:46" pos:end="153:46">-</operator> <literal type="number" pos:start="153:48" pos:end="153:48">1</literal> <operator pos:start="153:50" pos:end="153:50">-</operator> <literal type="number" pos:start="153:52" pos:end="153:52">1</literal><operator pos:start="153:53" pos:end="153:53">*</operator><literal type="number" pos:start="153:54" pos:end="153:54">8</literal></expr>]</index></name> <operator pos:start="153:57" pos:end="153:57">=</operator> <name pos:start="153:59" pos:end="153:76">PART_NOT_AVAILABLE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if><else pos:start="155:14" pos:end="157:84">else<block type="pseudo" pos:start="157:17" pos:end="157:84"><block_content pos:start="157:17" pos:end="157:84">

                <expr_stmt pos:start="157:17" pos:end="157:84"><expr pos:start="157:17" pos:end="157:83"><call pos:start="157:17" pos:end="157:83"><name pos:start="157:17" pos:end="157:22">memset</name><argument_list pos:start="157:23" pos:end="157:83">(<argument pos:start="157:24" pos:end="157:59"><expr pos:start="157:24" pos:end="157:59"><operator pos:start="157:24" pos:end="157:24">&amp;</operator><name pos:start="157:25" pos:end="157:59"><name pos:start="157:25" pos:end="157:25">h</name><operator pos:start="157:26" pos:end="157:27">-&gt;</operator><name pos:start="157:28" pos:end="157:36">ref_cache</name><index pos:start="157:37" pos:end="157:39">[<expr pos:start="157:38" pos:end="157:38"><name pos:start="157:38" pos:end="157:38">m</name></expr>]</index><index pos:start="157:40" pos:end="157:59">[<expr pos:start="157:41" pos:end="157:58"><name pos:start="157:41" pos:end="157:48"><name pos:start="157:41" pos:end="157:45">scan8</name><index pos:start="157:46" pos:end="157:48">[<expr pos:start="157:47" pos:end="157:47"><literal type="number" pos:start="157:47" pos:end="157:47">0</literal></expr>]</index></name> <operator pos:start="157:50" pos:end="157:50">-</operator> <literal type="number" pos:start="157:52" pos:end="157:52">1</literal><operator pos:start="157:53" pos:end="157:53">*</operator><literal type="number" pos:start="157:54" pos:end="157:56">8</literal> <operator pos:start="157:56" pos:end="157:56">-</operator> <literal type="number" pos:start="157:58" pos:end="157:58">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="157:62" pos:end="157:79"><expr pos:start="157:62" pos:end="157:79"><name pos:start="157:62" pos:end="157:79">PART_NOT_AVAILABLE</name></expr></argument>, <argument pos:start="157:82" pos:end="157:82"><expr pos:start="157:82" pos:end="157:82"><literal type="number" pos:start="157:82" pos:end="157:82">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="161:13" pos:end="163:22"><if pos:start="161:13" pos:end="163:22">if <condition pos:start="161:16" pos:end="161:50">(<expr pos:start="161:17" pos:end="161:49"><name pos:start="161:17" pos:end="161:28"><name pos:start="161:17" pos:end="161:17">s</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:28">pict_type</name></name> <operator pos:start="161:30" pos:end="161:31">!=</operator> <name pos:start="161:33" pos:end="161:49">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="163:17" pos:end="163:22"><block_content pos:start="163:17" pos:end="163:22">

                <break pos:start="163:17" pos:end="163:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="169:9" pos:end="169:60">/* decode motion vector(s) and form prediction(s) */</comment>

        <if_stmt pos:start="171:9" pos:end="211:9"><if pos:start="171:9" pos:end="177:9">if <condition pos:start="171:12" pos:end="171:46">(<expr pos:start="171:13" pos:end="171:45"><name pos:start="171:13" pos:end="171:24"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:24">pict_type</name></name> <operator pos:start="171:26" pos:end="171:27">==</operator> <name pos:start="171:29" pos:end="171:45">AV_PICTURE_TYPE_P</name></expr>)</condition> <block pos:start="171:48" pos:end="177:9">{<block_content pos:start="173:13" pos:end="175:26">

            <if_stmt pos:start="173:13" pos:end="175:26"><if pos:start="173:13" pos:end="175:26">if <condition pos:start="173:16" pos:end="173:62">(<expr pos:start="173:17" pos:end="173:61"><call pos:start="173:17" pos:end="173:57"><name pos:start="173:17" pos:end="173:27">svq3_mc_dir</name><argument_list pos:start="173:28" pos:end="173:57">(<argument pos:start="173:29" pos:end="173:29"><expr pos:start="173:29" pos:end="173:29"><name pos:start="173:29" pos:end="173:29">h</name></expr></argument>, <argument pos:start="173:32" pos:end="173:44"><expr pos:start="173:32" pos:end="173:44"><operator pos:start="173:32" pos:end="173:32">(</operator><name pos:start="173:33" pos:end="173:39">mb_type</name> <operator pos:start="173:41" pos:end="173:41">-</operator> <literal type="number" pos:start="173:43" pos:end="173:43">1</literal><operator pos:start="173:44" pos:end="173:44">)</operator></expr></argument>, <argument pos:start="173:47" pos:end="173:50"><expr pos:start="173:47" pos:end="173:50"><name pos:start="173:47" pos:end="173:50">mode</name></expr></argument>, <argument pos:start="173:53" pos:end="173:53"><expr pos:start="173:53" pos:end="173:53"><literal type="number" pos:start="173:53" pos:end="173:53">0</literal></expr></argument>, <argument pos:start="173:56" pos:end="173:56"><expr pos:start="173:56" pos:end="173:56"><literal type="number" pos:start="173:56" pos:end="173:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="173:59" pos:end="173:59">&lt;</operator> <literal type="number" pos:start="173:61" pos:end="173:61">0</literal></expr>)</condition><block type="pseudo" pos:start="175:17" pos:end="175:26"><block_content pos:start="175:17" pos:end="175:26">

                <return pos:start="175:17" pos:end="175:26">return <expr pos:start="175:24" pos:end="175:25"><operator pos:start="175:24" pos:end="175:24">-</operator><literal type="number" pos:start="175:25" pos:end="175:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="177:11" pos:end="211:9">else <block pos:start="177:16" pos:end="211:9">{<block_content pos:start="179:13" pos:end="209:13">        <comment type="block" pos:start="177:25" pos:end="177:47">/* AV_PICTURE_TYPE_B */</comment>

            <if_stmt pos:start="179:13" pos:end="193:13"><if pos:start="179:13" pos:end="185:13">if <condition pos:start="179:16" pos:end="179:29">(<expr pos:start="179:17" pos:end="179:28"><name pos:start="179:17" pos:end="179:23">mb_type</name> <operator pos:start="179:25" pos:end="179:26">!=</operator> <literal type="number" pos:start="179:28" pos:end="179:28">2</literal></expr>)</condition> <block pos:start="179:31" pos:end="185:13">{<block_content pos:start="181:17" pos:end="183:30">

                <if_stmt pos:start="181:17" pos:end="183:30"><if pos:start="181:17" pos:end="183:30">if <condition pos:start="181:20" pos:end="181:54">(<expr pos:start="181:21" pos:end="181:53"><call pos:start="181:21" pos:end="181:49"><name pos:start="181:21" pos:end="181:31">svq3_mc_dir</name><argument_list pos:start="181:32" pos:end="181:49">(<argument pos:start="181:33" pos:end="181:33"><expr pos:start="181:33" pos:end="181:33"><name pos:start="181:33" pos:end="181:33">h</name></expr></argument>, <argument pos:start="181:36" pos:end="181:36"><expr pos:start="181:36" pos:end="181:36"><literal type="number" pos:start="181:36" pos:end="181:36">0</literal></expr></argument>, <argument pos:start="181:39" pos:end="181:42"><expr pos:start="181:39" pos:end="181:42"><name pos:start="181:39" pos:end="181:42">mode</name></expr></argument>, <argument pos:start="181:45" pos:end="181:45"><expr pos:start="181:45" pos:end="181:45"><literal type="number" pos:start="181:45" pos:end="181:45">0</literal></expr></argument>, <argument pos:start="181:48" pos:end="181:48"><expr pos:start="181:48" pos:end="181:48"><literal type="number" pos:start="181:48" pos:end="181:48">0</literal></expr></argument>)</argument_list></call> <operator pos:start="181:51" pos:end="181:51">&lt;</operator> <literal type="number" pos:start="181:53" pos:end="181:53">0</literal></expr>)</condition><block type="pseudo" pos:start="183:21" pos:end="183:30"><block_content pos:start="183:21" pos:end="183:30">

                    <return pos:start="183:21" pos:end="183:30">return <expr pos:start="183:28" pos:end="183:29"><operator pos:start="183:28" pos:end="183:28">-</operator><literal type="number" pos:start="183:29" pos:end="183:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="185:15" pos:end="193:13">else <block pos:start="185:20" pos:end="193:13">{<block_content pos:start="187:17" pos:end="191:17">

                <for pos:start="187:17" pos:end="191:17">for <control pos:start="187:21" pos:end="187:39">(<init pos:start="187:22" pos:end="187:27"><expr pos:start="187:22" pos:end="187:26"><name pos:start="187:22" pos:end="187:22">i</name> <operator pos:start="187:24" pos:end="187:24">=</operator> <literal type="number" pos:start="187:26" pos:end="187:26">0</literal></expr>;</init> <condition pos:start="187:29" pos:end="187:34"><expr pos:start="187:29" pos:end="187:33"><name pos:start="187:29" pos:end="187:29">i</name> <operator pos:start="187:31" pos:end="187:31">&lt;</operator> <literal type="number" pos:start="187:33" pos:end="187:33">4</literal></expr>;</condition> <incr pos:start="187:36" pos:end="187:38"><expr pos:start="187:36" pos:end="187:38"><name pos:start="187:36" pos:end="187:36">i</name><operator pos:start="187:37" pos:end="187:38">++</operator></expr></incr>)</control> <block pos:start="187:41" pos:end="191:17">{<block_content pos:start="189:21" pos:end="189:109">

                    <expr_stmt pos:start="189:21" pos:end="189:109"><expr pos:start="189:21" pos:end="189:108"><call pos:start="189:21" pos:end="189:108"><name pos:start="189:21" pos:end="189:26">memset</name><argument_list pos:start="189:27" pos:end="189:108">(<argument pos:start="189:28" pos:end="189:83"><expr pos:start="189:28" pos:end="189:83"><name pos:start="189:28" pos:end="189:83"><name pos:start="189:28" pos:end="189:28">s</name><operator pos:start="189:29" pos:end="189:30">-&gt;</operator><name pos:start="189:31" pos:end="189:45">current_picture</name><operator pos:start="189:46" pos:end="189:46">.</operator><name pos:start="189:47" pos:end="189:47">f</name><operator pos:start="189:48" pos:end="189:48">.</operator><name pos:start="189:49" pos:end="189:58">motion_val</name><index pos:start="189:59" pos:end="189:61">[<expr pos:start="189:60" pos:end="189:60"><literal type="number" pos:start="189:60" pos:end="189:60">0</literal></expr>]</index><index pos:start="189:62" pos:end="189:83">[<expr pos:start="189:63" pos:end="189:82"><name pos:start="189:63" pos:end="189:66">b_xy</name> <operator pos:start="189:68" pos:end="189:68">+</operator> <name pos:start="189:70" pos:end="189:70">i</name><operator pos:start="189:71" pos:end="189:71">*</operator><name pos:start="189:72" pos:end="189:82"><name pos:start="189:72" pos:end="189:72">h</name><operator pos:start="189:73" pos:end="189:74">-&gt;</operator><name pos:start="189:75" pos:end="189:82">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="189:86" pos:end="189:86"><expr pos:start="189:86" pos:end="189:86"><literal type="number" pos:start="189:86" pos:end="189:86">0</literal></expr></argument>, <argument pos:start="189:89" pos:end="189:107"><expr pos:start="189:89" pos:end="189:107"><literal type="number" pos:start="189:89" pos:end="189:89">4</literal><operator pos:start="189:90" pos:end="189:90">*</operator><literal type="number" pos:start="189:91" pos:end="189:91">2</literal><operator pos:start="189:92" pos:end="189:92">*</operator><sizeof pos:start="189:93" pos:end="189:107">sizeof<argument_list pos:start="189:99" pos:end="189:107">(<argument pos:start="189:100" pos:end="189:106"><expr pos:start="189:100" pos:end="189:106"><name pos:start="189:100" pos:end="189:106">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="195:13" pos:end="209:13"><if pos:start="195:13" pos:end="201:13">if <condition pos:start="195:16" pos:end="195:29">(<expr pos:start="195:17" pos:end="195:28"><name pos:start="195:17" pos:end="195:23">mb_type</name> <operator pos:start="195:25" pos:end="195:26">!=</operator> <literal type="number" pos:start="195:28" pos:end="195:28">1</literal></expr>)</condition> <block pos:start="195:31" pos:end="201:13">{<block_content pos:start="197:17" pos:end="199:30">

                <if_stmt pos:start="197:17" pos:end="199:30"><if pos:start="197:17" pos:end="199:30">if <condition pos:start="197:20" pos:end="197:67">(<expr pos:start="197:21" pos:end="197:66"><call pos:start="197:21" pos:end="197:62"><name pos:start="197:21" pos:end="197:31">svq3_mc_dir</name><argument_list pos:start="197:32" pos:end="197:62">(<argument pos:start="197:33" pos:end="197:33"><expr pos:start="197:33" pos:end="197:33"><name pos:start="197:33" pos:end="197:33">h</name></expr></argument>, <argument pos:start="197:36" pos:end="197:36"><expr pos:start="197:36" pos:end="197:36"><literal type="number" pos:start="197:36" pos:end="197:36">0</literal></expr></argument>, <argument pos:start="197:39" pos:end="197:42"><expr pos:start="197:39" pos:end="197:42"><name pos:start="197:39" pos:end="197:42">mode</name></expr></argument>, <argument pos:start="197:45" pos:end="197:45"><expr pos:start="197:45" pos:end="197:45"><literal type="number" pos:start="197:45" pos:end="197:45">1</literal></expr></argument>, <argument pos:start="197:48" pos:end="197:61"><expr pos:start="197:48" pos:end="197:61"><operator pos:start="197:48" pos:end="197:48">(</operator><name pos:start="197:49" pos:end="197:55">mb_type</name> <operator pos:start="197:57" pos:end="197:58">==</operator> <literal type="number" pos:start="197:60" pos:end="197:60">3</literal><operator pos:start="197:61" pos:end="197:61">)</operator></expr></argument>)</argument_list></call> <operator pos:start="197:64" pos:end="197:64">&lt;</operator> <literal type="number" pos:start="197:66" pos:end="197:66">0</literal></expr>)</condition><block type="pseudo" pos:start="199:21" pos:end="199:30"><block_content pos:start="199:21" pos:end="199:30">

                    <return pos:start="199:21" pos:end="199:30">return <expr pos:start="199:28" pos:end="199:29"><operator pos:start="199:28" pos:end="199:28">-</operator><literal type="number" pos:start="199:29" pos:end="199:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="201:15" pos:end="209:13">else <block pos:start="201:20" pos:end="209:13">{<block_content pos:start="203:17" pos:end="207:17">

                <for pos:start="203:17" pos:end="207:17">for <control pos:start="203:21" pos:end="203:39">(<init pos:start="203:22" pos:end="203:27"><expr pos:start="203:22" pos:end="203:26"><name pos:start="203:22" pos:end="203:22">i</name> <operator pos:start="203:24" pos:end="203:24">=</operator> <literal type="number" pos:start="203:26" pos:end="203:26">0</literal></expr>;</init> <condition pos:start="203:29" pos:end="203:34"><expr pos:start="203:29" pos:end="203:33"><name pos:start="203:29" pos:end="203:29">i</name> <operator pos:start="203:31" pos:end="203:31">&lt;</operator> <literal type="number" pos:start="203:33" pos:end="203:33">4</literal></expr>;</condition> <incr pos:start="203:36" pos:end="203:38"><expr pos:start="203:36" pos:end="203:38"><name pos:start="203:36" pos:end="203:36">i</name><operator pos:start="203:37" pos:end="203:38">++</operator></expr></incr>)</control> <block pos:start="203:41" pos:end="207:17">{<block_content pos:start="205:21" pos:end="205:109">

                    <expr_stmt pos:start="205:21" pos:end="205:109"><expr pos:start="205:21" pos:end="205:108"><call pos:start="205:21" pos:end="205:108"><name pos:start="205:21" pos:end="205:26">memset</name><argument_list pos:start="205:27" pos:end="205:108">(<argument pos:start="205:28" pos:end="205:83"><expr pos:start="205:28" pos:end="205:83"><name pos:start="205:28" pos:end="205:83"><name pos:start="205:28" pos:end="205:28">s</name><operator pos:start="205:29" pos:end="205:30">-&gt;</operator><name pos:start="205:31" pos:end="205:45">current_picture</name><operator pos:start="205:46" pos:end="205:46">.</operator><name pos:start="205:47" pos:end="205:47">f</name><operator pos:start="205:48" pos:end="205:48">.</operator><name pos:start="205:49" pos:end="205:58">motion_val</name><index pos:start="205:59" pos:end="205:61">[<expr pos:start="205:60" pos:end="205:60"><literal type="number" pos:start="205:60" pos:end="205:60">1</literal></expr>]</index><index pos:start="205:62" pos:end="205:83">[<expr pos:start="205:63" pos:end="205:82"><name pos:start="205:63" pos:end="205:66">b_xy</name> <operator pos:start="205:68" pos:end="205:68">+</operator> <name pos:start="205:70" pos:end="205:70">i</name><operator pos:start="205:71" pos:end="205:71">*</operator><name pos:start="205:72" pos:end="205:82"><name pos:start="205:72" pos:end="205:72">h</name><operator pos:start="205:73" pos:end="205:74">-&gt;</operator><name pos:start="205:75" pos:end="205:82">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="205:86" pos:end="205:86"><expr pos:start="205:86" pos:end="205:86"><literal type="number" pos:start="205:86" pos:end="205:86">0</literal></expr></argument>, <argument pos:start="205:89" pos:end="205:107"><expr pos:start="205:89" pos:end="205:107"><literal type="number" pos:start="205:89" pos:end="205:89">4</literal><operator pos:start="205:90" pos:end="205:90">*</operator><literal type="number" pos:start="205:91" pos:end="205:91">2</literal><operator pos:start="205:92" pos:end="205:92">*</operator><sizeof pos:start="205:93" pos:end="205:107">sizeof<argument_list pos:start="205:99" pos:end="205:107">(<argument pos:start="205:100" pos:end="205:106"><expr pos:start="205:100" pos:end="205:106"><name pos:start="205:100" pos:end="205:106">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="215:9" pos:end="215:32"><expr pos:start="215:9" pos:end="215:31"><name pos:start="215:9" pos:end="215:15">mb_type</name> <operator pos:start="215:17" pos:end="215:17">=</operator> <name pos:start="215:19" pos:end="215:31">MB_TYPE_16x16</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="217:7" pos:end="349:5">else if <condition pos:start="217:15" pos:end="217:45">(<expr pos:start="217:16" pos:end="217:44"><name pos:start="217:16" pos:end="217:22">mb_type</name> <operator pos:start="217:24" pos:end="217:25">==</operator> <literal type="number" pos:start="217:27" pos:end="217:27">8</literal> <operator pos:start="217:29" pos:end="217:30">||</operator> <name pos:start="217:32" pos:end="217:38">mb_type</name> <operator pos:start="217:40" pos:end="217:41">==</operator> <literal type="number" pos:start="217:43" pos:end="217:44">33</literal></expr>)</condition> <block pos:start="217:47" pos:end="349:5">{<block_content pos:start="219:9" pos:end="347:35">   <comment type="block" pos:start="217:51" pos:end="217:64">/* INTRA4x4 */</comment>

        <expr_stmt pos:start="219:9" pos:end="219:68"><expr pos:start="219:9" pos:end="219:67"><call pos:start="219:9" pos:end="219:67"><name pos:start="219:9" pos:end="219:14">memset</name><argument_list pos:start="219:15" pos:end="219:67">(<argument pos:start="219:16" pos:end="219:42"><expr pos:start="219:16" pos:end="219:42"><name pos:start="219:16" pos:end="219:42"><name pos:start="219:16" pos:end="219:16">h</name><operator pos:start="219:17" pos:end="219:18">-&gt;</operator><name pos:start="219:19" pos:end="219:42">intra4x4_pred_mode_cache</name></name></expr></argument>, <argument pos:start="219:45" pos:end="219:46"><expr pos:start="219:45" pos:end="219:46"><operator pos:start="219:45" pos:end="219:45">-</operator><literal type="number" pos:start="219:46" pos:end="219:46">1</literal></expr></argument>, <argument pos:start="219:49" pos:end="219:66"><expr pos:start="219:49" pos:end="219:66"><literal type="number" pos:start="219:49" pos:end="219:49">8</literal><operator pos:start="219:50" pos:end="219:50">*</operator><literal type="number" pos:start="219:51" pos:end="219:51">5</literal><operator pos:start="219:52" pos:end="219:52">*</operator><sizeof pos:start="219:53" pos:end="219:66">sizeof<argument_list pos:start="219:59" pos:end="219:66">(<argument pos:start="219:60" pos:end="219:65"><expr pos:start="219:60" pos:end="219:65"><name pos:start="219:60" pos:end="219:65">int8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="223:9" pos:end="311:9"><if pos:start="223:9" pos:end="303:9">if <condition pos:start="223:12" pos:end="223:25">(<expr pos:start="223:13" pos:end="223:24"><name pos:start="223:13" pos:end="223:19">mb_type</name> <operator pos:start="223:21" pos:end="223:22">==</operator> <literal type="number" pos:start="223:24" pos:end="223:24">8</literal></expr>)</condition> <block pos:start="223:27" pos:end="303:9">{<block_content pos:start="225:13" pos:end="301:13">

            <if_stmt pos:start="225:13" pos:end="239:13"><if pos:start="225:13" pos:end="239:13">if <condition pos:start="225:16" pos:end="225:28">(<expr pos:start="225:17" pos:end="225:27"><name pos:start="225:17" pos:end="225:23"><name pos:start="225:17" pos:end="225:17">s</name><operator pos:start="225:18" pos:end="225:19">-&gt;</operator><name pos:start="225:20" pos:end="225:23">mb_x</name></name> <operator pos:start="225:25" pos:end="225:25">&gt;</operator> <literal type="number" pos:start="225:27" pos:end="225:27">0</literal></expr>)</condition> <block pos:start="225:30" pos:end="239:13">{<block_content pos:start="227:17" pos:end="237:17">

                <for pos:start="227:17" pos:end="231:17">for <control pos:start="227:21" pos:end="227:39">(<init pos:start="227:22" pos:end="227:27"><expr pos:start="227:22" pos:end="227:26"><name pos:start="227:22" pos:end="227:22">i</name> <operator pos:start="227:24" pos:end="227:24">=</operator> <literal type="number" pos:start="227:26" pos:end="227:26">0</literal></expr>;</init> <condition pos:start="227:29" pos:end="227:34"><expr pos:start="227:29" pos:end="227:33"><name pos:start="227:29" pos:end="227:29">i</name> <operator pos:start="227:31" pos:end="227:31">&lt;</operator> <literal type="number" pos:start="227:33" pos:end="227:33">4</literal></expr>;</condition> <incr pos:start="227:36" pos:end="227:38"><expr pos:start="227:36" pos:end="227:38"><name pos:start="227:36" pos:end="227:36">i</name><operator pos:start="227:37" pos:end="227:38">++</operator></expr></incr>)</control> <block pos:start="227:41" pos:end="231:17">{<block_content pos:start="229:21" pos:end="229:120">

                    <expr_stmt pos:start="229:21" pos:end="229:120"><expr pos:start="229:21" pos:end="229:119"><name pos:start="229:21" pos:end="229:67"><name pos:start="229:21" pos:end="229:21">h</name><operator pos:start="229:22" pos:end="229:23">-&gt;</operator><name pos:start="229:24" pos:end="229:47">intra4x4_pred_mode_cache</name><index pos:start="229:48" pos:end="229:67">[<expr pos:start="229:49" pos:end="229:66"><name pos:start="229:49" pos:end="229:56"><name pos:start="229:49" pos:end="229:53">scan8</name><index pos:start="229:54" pos:end="229:56">[<expr pos:start="229:55" pos:end="229:55"><literal type="number" pos:start="229:55" pos:end="229:55">0</literal></expr>]</index></name> <operator pos:start="229:58" pos:end="229:58">-</operator> <literal type="number" pos:start="229:60" pos:end="229:60">1</literal> <operator pos:start="229:62" pos:end="229:62">+</operator> <name pos:start="229:64" pos:end="229:64">i</name><operator pos:start="229:65" pos:end="229:65">*</operator><literal type="number" pos:start="229:66" pos:end="229:66">8</literal></expr>]</index></name> <operator pos:start="229:69" pos:end="229:69">=</operator> <name pos:start="229:71" pos:end="229:119"><name pos:start="229:71" pos:end="229:71">h</name><operator pos:start="229:72" pos:end="229:73">-&gt;</operator><name pos:start="229:74" pos:end="229:91">intra4x4_pred_mode</name><index pos:start="229:92" pos:end="229:119">[<expr pos:start="229:93" pos:end="229:118"><name pos:start="229:93" pos:end="229:114"><name pos:start="229:93" pos:end="229:93">h</name><operator pos:start="229:94" pos:end="229:95">-&gt;</operator><name pos:start="229:96" pos:end="229:103">mb2br_xy</name><index pos:start="229:104" pos:end="229:114">[<expr pos:start="229:105" pos:end="229:113"><name pos:start="229:105" pos:end="229:109">mb_xy</name> <operator pos:start="229:111" pos:end="229:111">-</operator> <literal type="number" pos:start="229:113" pos:end="229:113">1</literal></expr>]</index></name><operator pos:start="229:115" pos:end="229:115">+</operator><literal type="number" pos:start="229:116" pos:end="229:117">6</literal><operator pos:start="229:117" pos:end="229:117">-</operator><name pos:start="229:118" pos:end="229:118">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="233:17" pos:end="237:17"><if pos:start="233:17" pos:end="237:17">if <condition pos:start="233:20" pos:end="233:68">(<expr pos:start="233:21" pos:end="233:67"><name pos:start="233:21" pos:end="233:61"><name pos:start="233:21" pos:end="233:21">h</name><operator pos:start="233:22" pos:end="233:23">-&gt;</operator><name pos:start="233:24" pos:end="233:47">intra4x4_pred_mode_cache</name><index pos:start="233:48" pos:end="233:61">[<expr pos:start="233:49" pos:end="233:60"><name pos:start="233:49" pos:end="233:56"><name pos:start="233:49" pos:end="233:53">scan8</name><index pos:start="233:54" pos:end="233:56">[<expr pos:start="233:55" pos:end="233:55"><literal type="number" pos:start="233:55" pos:end="233:55">0</literal></expr>]</index></name> <operator pos:start="233:58" pos:end="233:58">-</operator> <literal type="number" pos:start="233:60" pos:end="233:60">1</literal></expr>]</index></name> <operator pos:start="233:63" pos:end="233:64">==</operator> <operator pos:start="233:66" pos:end="233:66">-</operator><literal type="number" pos:start="233:67" pos:end="233:67">1</literal></expr>)</condition> <block pos:start="233:70" pos:end="237:17">{<block_content pos:start="235:21" pos:end="235:55">

                    <expr_stmt pos:start="235:21" pos:end="235:55"><expr pos:start="235:21" pos:end="235:54"><name pos:start="235:21" pos:end="235:45"><name pos:start="235:21" pos:end="235:21">h</name><operator pos:start="235:22" pos:end="235:23">-&gt;</operator><name pos:start="235:24" pos:end="235:45">left_samples_available</name></name> <operator pos:start="235:47" pos:end="235:47">=</operator> <literal type="number" pos:start="235:49" pos:end="235:54">0x5F5F</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="241:13" pos:end="259:13"><if pos:start="241:13" pos:end="259:13">if <condition pos:start="241:16" pos:end="241:28">(<expr pos:start="241:17" pos:end="241:27"><name pos:start="241:17" pos:end="241:23"><name pos:start="241:17" pos:end="241:17">s</name><operator pos:start="241:18" pos:end="241:19">-&gt;</operator><name pos:start="241:20" pos:end="241:23">mb_y</name></name> <operator pos:start="241:25" pos:end="241:25">&gt;</operator> <literal type="number" pos:start="241:27" pos:end="241:27">0</literal></expr>)</condition> <block pos:start="241:30" pos:end="259:13">{<block_content pos:start="243:17" pos:end="257:17">

                <expr_stmt pos:start="243:17" pos:end="243:112"><expr pos:start="243:17" pos:end="243:111"><name pos:start="243:17" pos:end="243:50"><name pos:start="243:17" pos:end="243:17">h</name><operator pos:start="243:18" pos:end="243:19">-&gt;</operator><name pos:start="243:20" pos:end="243:43">intra4x4_pred_mode_cache</name><index pos:start="243:44" pos:end="243:50">[<expr pos:start="243:45" pos:end="243:49"><literal type="number" pos:start="243:45" pos:end="243:45">4</literal><operator pos:start="243:46" pos:end="243:46">+</operator><literal type="number" pos:start="243:47" pos:end="243:47">8</literal><operator pos:start="243:48" pos:end="243:48">*</operator><literal type="number" pos:start="243:49" pos:end="243:49">0</literal></expr>]</index></name> <operator pos:start="243:52" pos:end="243:52">=</operator> <name pos:start="243:54" pos:end="243:111"><name pos:start="243:54" pos:end="243:54">h</name><operator pos:start="243:55" pos:end="243:56">-&gt;</operator><name pos:start="243:57" pos:end="243:74">intra4x4_pred_mode</name><index pos:start="243:75" pos:end="243:111">[<expr pos:start="243:76" pos:end="243:110"><name pos:start="243:76" pos:end="243:108"><name pos:start="243:76" pos:end="243:76">h</name><operator pos:start="243:77" pos:end="243:78">-&gt;</operator><name pos:start="243:79" pos:end="243:86">mb2br_xy</name><index pos:start="243:87" pos:end="243:108">[<expr pos:start="243:88" pos:end="243:107"><name pos:start="243:88" pos:end="243:92">mb_xy</name> <operator pos:start="243:94" pos:end="243:94">-</operator> <name pos:start="243:96" pos:end="243:107"><name pos:start="243:96" pos:end="243:96">s</name><operator pos:start="243:97" pos:end="243:98">-&gt;</operator><name pos:start="243:99" pos:end="243:107">mb_stride</name></name></expr>]</index></name><operator pos:start="243:109" pos:end="243:109">+</operator><literal type="number" pos:start="243:110" pos:end="243:110">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="245:17" pos:end="245:112"><expr pos:start="245:17" pos:end="245:111"><name pos:start="245:17" pos:end="245:50"><name pos:start="245:17" pos:end="245:17">h</name><operator pos:start="245:18" pos:end="245:19">-&gt;</operator><name pos:start="245:20" pos:end="245:43">intra4x4_pred_mode_cache</name><index pos:start="245:44" pos:end="245:50">[<expr pos:start="245:45" pos:end="245:49"><literal type="number" pos:start="245:45" pos:end="245:45">5</literal><operator pos:start="245:46" pos:end="245:46">+</operator><literal type="number" pos:start="245:47" pos:end="245:47">8</literal><operator pos:start="245:48" pos:end="245:48">*</operator><literal type="number" pos:start="245:49" pos:end="245:49">0</literal></expr>]</index></name> <operator pos:start="245:52" pos:end="245:52">=</operator> <name pos:start="245:54" pos:end="245:111"><name pos:start="245:54" pos:end="245:54">h</name><operator pos:start="245:55" pos:end="245:56">-&gt;</operator><name pos:start="245:57" pos:end="245:74">intra4x4_pred_mode</name><index pos:start="245:75" pos:end="245:111">[<expr pos:start="245:76" pos:end="245:110"><name pos:start="245:76" pos:end="245:108"><name pos:start="245:76" pos:end="245:76">h</name><operator pos:start="245:77" pos:end="245:78">-&gt;</operator><name pos:start="245:79" pos:end="245:86">mb2br_xy</name><index pos:start="245:87" pos:end="245:108">[<expr pos:start="245:88" pos:end="245:107"><name pos:start="245:88" pos:end="245:92">mb_xy</name> <operator pos:start="245:94" pos:end="245:94">-</operator> <name pos:start="245:96" pos:end="245:107"><name pos:start="245:96" pos:end="245:96">s</name><operator pos:start="245:97" pos:end="245:98">-&gt;</operator><name pos:start="245:99" pos:end="245:107">mb_stride</name></name></expr>]</index></name><operator pos:start="245:109" pos:end="245:109">+</operator><literal type="number" pos:start="245:110" pos:end="245:110">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="247:17" pos:end="247:112"><expr pos:start="247:17" pos:end="247:111"><name pos:start="247:17" pos:end="247:50"><name pos:start="247:17" pos:end="247:17">h</name><operator pos:start="247:18" pos:end="247:19">-&gt;</operator><name pos:start="247:20" pos:end="247:43">intra4x4_pred_mode_cache</name><index pos:start="247:44" pos:end="247:50">[<expr pos:start="247:45" pos:end="247:49"><literal type="number" pos:start="247:45" pos:end="247:45">6</literal><operator pos:start="247:46" pos:end="247:46">+</operator><literal type="number" pos:start="247:47" pos:end="247:47">8</literal><operator pos:start="247:48" pos:end="247:48">*</operator><literal type="number" pos:start="247:49" pos:end="247:49">0</literal></expr>]</index></name> <operator pos:start="247:52" pos:end="247:52">=</operator> <name pos:start="247:54" pos:end="247:111"><name pos:start="247:54" pos:end="247:54">h</name><operator pos:start="247:55" pos:end="247:56">-&gt;</operator><name pos:start="247:57" pos:end="247:74">intra4x4_pred_mode</name><index pos:start="247:75" pos:end="247:111">[<expr pos:start="247:76" pos:end="247:110"><name pos:start="247:76" pos:end="247:108"><name pos:start="247:76" pos:end="247:76">h</name><operator pos:start="247:77" pos:end="247:78">-&gt;</operator><name pos:start="247:79" pos:end="247:86">mb2br_xy</name><index pos:start="247:87" pos:end="247:108">[<expr pos:start="247:88" pos:end="247:107"><name pos:start="247:88" pos:end="247:92">mb_xy</name> <operator pos:start="247:94" pos:end="247:94">-</operator> <name pos:start="247:96" pos:end="247:107"><name pos:start="247:96" pos:end="247:96">s</name><operator pos:start="247:97" pos:end="247:98">-&gt;</operator><name pos:start="247:99" pos:end="247:107">mb_stride</name></name></expr>]</index></name><operator pos:start="247:109" pos:end="247:109">+</operator><literal type="number" pos:start="247:110" pos:end="247:110">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:112"><expr pos:start="249:17" pos:end="249:111"><name pos:start="249:17" pos:end="249:50"><name pos:start="249:17" pos:end="249:17">h</name><operator pos:start="249:18" pos:end="249:19">-&gt;</operator><name pos:start="249:20" pos:end="249:43">intra4x4_pred_mode_cache</name><index pos:start="249:44" pos:end="249:50">[<expr pos:start="249:45" pos:end="249:49"><literal type="number" pos:start="249:45" pos:end="249:45">7</literal><operator pos:start="249:46" pos:end="249:46">+</operator><literal type="number" pos:start="249:47" pos:end="249:47">8</literal><operator pos:start="249:48" pos:end="249:48">*</operator><literal type="number" pos:start="249:49" pos:end="249:49">0</literal></expr>]</index></name> <operator pos:start="249:52" pos:end="249:52">=</operator> <name pos:start="249:54" pos:end="249:111"><name pos:start="249:54" pos:end="249:54">h</name><operator pos:start="249:55" pos:end="249:56">-&gt;</operator><name pos:start="249:57" pos:end="249:74">intra4x4_pred_mode</name><index pos:start="249:75" pos:end="249:111">[<expr pos:start="249:76" pos:end="249:110"><name pos:start="249:76" pos:end="249:108"><name pos:start="249:76" pos:end="249:76">h</name><operator pos:start="249:77" pos:end="249:78">-&gt;</operator><name pos:start="249:79" pos:end="249:86">mb2br_xy</name><index pos:start="249:87" pos:end="249:108">[<expr pos:start="249:88" pos:end="249:107"><name pos:start="249:88" pos:end="249:92">mb_xy</name> <operator pos:start="249:94" pos:end="249:94">-</operator> <name pos:start="249:96" pos:end="249:107"><name pos:start="249:96" pos:end="249:96">s</name><operator pos:start="249:97" pos:end="249:98">-&gt;</operator><name pos:start="249:99" pos:end="249:107">mb_stride</name></name></expr>]</index></name><operator pos:start="249:109" pos:end="249:109">+</operator><literal type="number" pos:start="249:110" pos:end="249:110">3</literal></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="253:17" pos:end="257:17"><if pos:start="253:17" pos:end="257:17">if <condition pos:start="253:20" pos:end="253:61">(<expr pos:start="253:21" pos:end="253:60"><name pos:start="253:21" pos:end="253:54"><name pos:start="253:21" pos:end="253:21">h</name><operator pos:start="253:22" pos:end="253:23">-&gt;</operator><name pos:start="253:24" pos:end="253:47">intra4x4_pred_mode_cache</name><index pos:start="253:48" pos:end="253:54">[<expr pos:start="253:49" pos:end="253:53"><literal type="number" pos:start="253:49" pos:end="253:49">4</literal><operator pos:start="253:50" pos:end="253:50">+</operator><literal type="number" pos:start="253:51" pos:end="253:51">8</literal><operator pos:start="253:52" pos:end="253:52">*</operator><literal type="number" pos:start="253:53" pos:end="253:53">0</literal></expr>]</index></name> <operator pos:start="253:56" pos:end="253:57">==</operator> <operator pos:start="253:59" pos:end="253:59">-</operator><literal type="number" pos:start="253:60" pos:end="253:60">1</literal></expr>)</condition> <block pos:start="253:63" pos:end="257:17">{<block_content pos:start="255:21" pos:end="255:54">

                    <expr_stmt pos:start="255:21" pos:end="255:54"><expr pos:start="255:21" pos:end="255:53"><name pos:start="255:21" pos:end="255:44"><name pos:start="255:21" pos:end="255:21">h</name><operator pos:start="255:22" pos:end="255:23">-&gt;</operator><name pos:start="255:24" pos:end="255:44">top_samples_available</name></name> <operator pos:start="255:46" pos:end="255:46">=</operator> <literal type="number" pos:start="255:48" pos:end="255:53">0x33FF</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="263:13" pos:end="263:57">/* decode prediction codes for luma blocks */</comment>

            <for pos:start="265:13" pos:end="301:13">for <control pos:start="265:17" pos:end="265:37">(<init pos:start="265:18" pos:end="265:23"><expr pos:start="265:18" pos:end="265:22"><name pos:start="265:18" pos:end="265:18">i</name> <operator pos:start="265:20" pos:end="265:20">=</operator> <literal type="number" pos:start="265:22" pos:end="265:22">0</literal></expr>;</init> <condition pos:start="265:25" pos:end="265:31"><expr pos:start="265:25" pos:end="265:30"><name pos:start="265:25" pos:end="265:25">i</name> <operator pos:start="265:27" pos:end="265:27">&lt;</operator> <literal type="number" pos:start="265:29" pos:end="265:30">16</literal></expr>;</condition> <incr pos:start="265:33" pos:end="265:36"><expr pos:start="265:33" pos:end="265:36"><name pos:start="265:33" pos:end="265:33">i</name><operator pos:start="265:34" pos:end="265:35">+=</operator><literal type="number" pos:start="265:36" pos:end="265:36">2</literal></expr></incr>)</control> <block pos:start="265:39" pos:end="301:13">{<block_content pos:start="267:17" pos:end="299:17">

                <expr_stmt pos:start="267:17" pos:end="267:49"><expr pos:start="267:17" pos:end="267:48"><name pos:start="267:17" pos:end="267:19">vlc</name> <operator pos:start="267:21" pos:end="267:21">=</operator> <call pos:start="267:23" pos:end="267:48"><name pos:start="267:23" pos:end="267:40">svq3_get_ue_golomb</name><argument_list pos:start="267:41" pos:end="267:48">(<argument pos:start="267:42" pos:end="267:47"><expr pos:start="267:42" pos:end="267:47"><operator pos:start="267:42" pos:end="267:42">&amp;</operator><name pos:start="267:43" pos:end="267:47"><name pos:start="267:43" pos:end="267:43">s</name><operator pos:start="267:44" pos:end="267:45">-&gt;</operator><name pos:start="267:46" pos:end="267:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="271:17" pos:end="277:17"><if pos:start="271:17" pos:end="277:17">if <condition pos:start="271:20" pos:end="271:30">(<expr pos:start="271:21" pos:end="271:29"><name pos:start="271:21" pos:end="271:23">vlc</name> <operator pos:start="271:25" pos:end="271:26">&gt;=</operator> <literal type="number" pos:start="271:28" pos:end="271:29">25</literal></expr>)</condition><block pos:start="271:31" pos:end="277:17">{<block_content pos:start="273:21" pos:end="275:30">

                    <expr_stmt pos:start="273:21" pos:end="273:82"><expr pos:start="273:21" pos:end="273:81"><call pos:start="273:21" pos:end="273:81"><name pos:start="273:21" pos:end="273:26">av_log</name><argument_list pos:start="273:27" pos:end="273:81">(<argument pos:start="273:28" pos:end="273:37"><expr pos:start="273:28" pos:end="273:37"><name pos:start="273:28" pos:end="273:37"><name pos:start="273:28" pos:end="273:28">h</name><operator pos:start="273:29" pos:end="273:30">-&gt;</operator><name pos:start="273:31" pos:end="273:31">s</name><operator pos:start="273:32" pos:end="273:32">.</operator><name pos:start="273:33" pos:end="273:37">avctx</name></name></expr></argument>, <argument pos:start="273:40" pos:end="273:51"><expr pos:start="273:40" pos:end="273:51"><name pos:start="273:40" pos:end="273:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="273:54" pos:end="273:75"><expr pos:start="273:54" pos:end="273:75"><literal type="string" pos:start="273:54" pos:end="273:75">"luma prediction:%d\n"</literal></expr></argument>, <argument pos:start="273:78" pos:end="273:80"><expr pos:start="273:78" pos:end="273:80"><name pos:start="273:78" pos:end="273:80">vlc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="275:21" pos:end="275:30">return <expr pos:start="275:28" pos:end="275:29"><operator pos:start="275:28" pos:end="275:28">-</operator><literal type="number" pos:start="275:29" pos:end="275:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="281:17" pos:end="281:69"><expr pos:start="281:17" pos:end="281:68"><name pos:start="281:17" pos:end="281:20">left</name>    <operator pos:start="281:25" pos:end="281:25">=</operator> <operator pos:start="281:27" pos:end="281:27">&amp;</operator><name pos:start="281:28" pos:end="281:68"><name pos:start="281:28" pos:end="281:28">h</name><operator pos:start="281:29" pos:end="281:30">-&gt;</operator><name pos:start="281:31" pos:end="281:54">intra4x4_pred_mode_cache</name><index pos:start="281:55" pos:end="281:68">[<expr pos:start="281:56" pos:end="281:67"><name pos:start="281:56" pos:end="281:63"><name pos:start="281:56" pos:end="281:60">scan8</name><index pos:start="281:61" pos:end="281:63">[<expr pos:start="281:62" pos:end="281:62"><name pos:start="281:62" pos:end="281:62">i</name></expr>]</index></name> <operator pos:start="281:65" pos:end="281:65">-</operator> <literal type="number" pos:start="281:67" pos:end="281:67">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="283:17" pos:end="283:69"><expr pos:start="283:17" pos:end="283:68"><name pos:start="283:17" pos:end="283:19">top</name>     <operator pos:start="283:25" pos:end="283:25">=</operator> <operator pos:start="283:27" pos:end="283:27">&amp;</operator><name pos:start="283:28" pos:end="283:68"><name pos:start="283:28" pos:end="283:28">h</name><operator pos:start="283:29" pos:end="283:30">-&gt;</operator><name pos:start="283:31" pos:end="283:54">intra4x4_pred_mode_cache</name><index pos:start="283:55" pos:end="283:68">[<expr pos:start="283:56" pos:end="283:67"><name pos:start="283:56" pos:end="283:63"><name pos:start="283:56" pos:end="283:60">scan8</name><index pos:start="283:61" pos:end="283:63">[<expr pos:start="283:62" pos:end="283:62"><name pos:start="283:62" pos:end="283:62">i</name></expr>]</index></name> <operator pos:start="283:65" pos:end="283:65">-</operator> <literal type="number" pos:start="283:67" pos:end="283:67">8</literal></expr>]</index></name></expr>;</expr_stmt>



                <expr_stmt pos:start="287:17" pos:end="287:84"><expr pos:start="287:17" pos:end="287:83"><name pos:start="287:17" pos:end="287:23"><name pos:start="287:17" pos:end="287:20">left</name><index pos:start="287:21" pos:end="287:23">[<expr pos:start="287:22" pos:end="287:22"><literal type="number" pos:start="287:22" pos:end="287:22">1</literal></expr>]</index></name> <operator pos:start="287:25" pos:end="287:25">=</operator> <name pos:start="287:27" pos:end="287:83"><name pos:start="287:27" pos:end="287:37">svq3_pred_1</name><index pos:start="287:38" pos:end="287:49">[<expr pos:start="287:39" pos:end="287:48"><name pos:start="287:39" pos:end="287:44"><name pos:start="287:39" pos:end="287:41">top</name><index pos:start="287:42" pos:end="287:44">[<expr pos:start="287:43" pos:end="287:43"><literal type="number" pos:start="287:43" pos:end="287:43">0</literal></expr>]</index></name> <operator pos:start="287:46" pos:end="287:46">+</operator> <literal type="number" pos:start="287:48" pos:end="287:48">1</literal></expr>]</index><index pos:start="287:50" pos:end="287:62">[<expr pos:start="287:51" pos:end="287:61"><name pos:start="287:51" pos:end="287:57"><name pos:start="287:51" pos:end="287:54">left</name><index pos:start="287:55" pos:end="287:57">[<expr pos:start="287:56" pos:end="287:56"><literal type="number" pos:start="287:56" pos:end="287:56">0</literal></expr>]</index></name> <operator pos:start="287:59" pos:end="287:59">+</operator> <literal type="number" pos:start="287:61" pos:end="287:61">1</literal></expr>]</index><index pos:start="287:63" pos:end="287:83">[<expr pos:start="287:64" pos:end="287:82"><name pos:start="287:64" pos:end="287:82"><name pos:start="287:64" pos:end="287:74">svq3_pred_0</name><index pos:start="287:75" pos:end="287:79">[<expr pos:start="287:76" pos:end="287:78"><name pos:start="287:76" pos:end="287:78">vlc</name></expr>]</index><index pos:start="287:80" pos:end="287:82">[<expr pos:start="287:81" pos:end="287:81"><literal type="number" pos:start="287:81" pos:end="287:81">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:84"><expr pos:start="289:17" pos:end="289:83"><name pos:start="289:17" pos:end="289:23"><name pos:start="289:17" pos:end="289:20">left</name><index pos:start="289:21" pos:end="289:23">[<expr pos:start="289:22" pos:end="289:22"><literal type="number" pos:start="289:22" pos:end="289:22">2</literal></expr>]</index></name> <operator pos:start="289:25" pos:end="289:25">=</operator> <name pos:start="289:27" pos:end="289:83"><name pos:start="289:27" pos:end="289:37">svq3_pred_1</name><index pos:start="289:38" pos:end="289:49">[<expr pos:start="289:39" pos:end="289:48"><name pos:start="289:39" pos:end="289:44"><name pos:start="289:39" pos:end="289:41">top</name><index pos:start="289:42" pos:end="289:44">[<expr pos:start="289:43" pos:end="289:43"><literal type="number" pos:start="289:43" pos:end="289:43">1</literal></expr>]</index></name> <operator pos:start="289:46" pos:end="289:46">+</operator> <literal type="number" pos:start="289:48" pos:end="289:48">1</literal></expr>]</index><index pos:start="289:50" pos:end="289:62">[<expr pos:start="289:51" pos:end="289:61"><name pos:start="289:51" pos:end="289:57"><name pos:start="289:51" pos:end="289:54">left</name><index pos:start="289:55" pos:end="289:57">[<expr pos:start="289:56" pos:end="289:56"><literal type="number" pos:start="289:56" pos:end="289:56">1</literal></expr>]</index></name> <operator pos:start="289:59" pos:end="289:59">+</operator> <literal type="number" pos:start="289:61" pos:end="289:61">1</literal></expr>]</index><index pos:start="289:63" pos:end="289:83">[<expr pos:start="289:64" pos:end="289:82"><name pos:start="289:64" pos:end="289:82"><name pos:start="289:64" pos:end="289:74">svq3_pred_0</name><index pos:start="289:75" pos:end="289:79">[<expr pos:start="289:76" pos:end="289:78"><name pos:start="289:76" pos:end="289:78">vlc</name></expr>]</index><index pos:start="289:80" pos:end="289:82">[<expr pos:start="289:81" pos:end="289:81"><literal type="number" pos:start="289:81" pos:end="289:81">1</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="293:17" pos:end="299:17"><if pos:start="293:17" pos:end="299:17">if <condition pos:start="293:20" pos:end="293:51">(<expr pos:start="293:21" pos:end="293:50"><name pos:start="293:21" pos:end="293:27"><name pos:start="293:21" pos:end="293:24">left</name><index pos:start="293:25" pos:end="293:27">[<expr pos:start="293:26" pos:end="293:26"><literal type="number" pos:start="293:26" pos:end="293:26">1</literal></expr>]</index></name> <operator pos:start="293:29" pos:end="293:30">==</operator> <operator pos:start="293:32" pos:end="293:32">-</operator><literal type="number" pos:start="293:33" pos:end="293:33">1</literal> <operator pos:start="293:35" pos:end="293:36">||</operator> <name pos:start="293:38" pos:end="293:44"><name pos:start="293:38" pos:end="293:41">left</name><index pos:start="293:42" pos:end="293:44">[<expr pos:start="293:43" pos:end="293:43"><literal type="number" pos:start="293:43" pos:end="293:43">2</literal></expr>]</index></name> <operator pos:start="293:46" pos:end="293:47">==</operator> <operator pos:start="293:49" pos:end="293:49">-</operator><literal type="number" pos:start="293:50" pos:end="293:50">1</literal></expr>)</condition><block pos:start="293:52" pos:end="299:17">{<block_content pos:start="295:21" pos:end="297:30">

                    <expr_stmt pos:start="295:21" pos:end="295:75"><expr pos:start="295:21" pos:end="295:74"><call pos:start="295:21" pos:end="295:74"><name pos:start="295:21" pos:end="295:26">av_log</name><argument_list pos:start="295:27" pos:end="295:74">(<argument pos:start="295:28" pos:end="295:37"><expr pos:start="295:28" pos:end="295:37"><name pos:start="295:28" pos:end="295:37"><name pos:start="295:28" pos:end="295:28">h</name><operator pos:start="295:29" pos:end="295:30">-&gt;</operator><name pos:start="295:31" pos:end="295:31">s</name><operator pos:start="295:32" pos:end="295:32">.</operator><name pos:start="295:33" pos:end="295:37">avctx</name></name></expr></argument>, <argument pos:start="295:40" pos:end="295:51"><expr pos:start="295:40" pos:end="295:51"><name pos:start="295:40" pos:end="295:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="295:54" pos:end="295:73"><expr pos:start="295:54" pos:end="295:73"><literal type="string" pos:start="295:54" pos:end="295:73">"weird prediction\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="297:21" pos:end="297:30">return <expr pos:start="297:28" pos:end="297:29"><operator pos:start="297:28" pos:end="297:28">-</operator><literal type="number" pos:start="297:29" pos:end="297:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="303:11" pos:end="311:9">else <block pos:start="303:16" pos:end="311:9">{<block_content pos:start="305:13" pos:end="309:13">    <comment type="block" pos:start="303:21" pos:end="303:63">/* mb_type == 33, DC_128_PRED block type */</comment>

            <for pos:start="305:13" pos:end="309:13">for <control pos:start="305:17" pos:end="305:35">(<init pos:start="305:18" pos:end="305:23"><expr pos:start="305:18" pos:end="305:22"><name pos:start="305:18" pos:end="305:18">i</name> <operator pos:start="305:20" pos:end="305:20">=</operator> <literal type="number" pos:start="305:22" pos:end="305:22">0</literal></expr>;</init> <condition pos:start="305:25" pos:end="305:30"><expr pos:start="305:25" pos:end="305:29"><name pos:start="305:25" pos:end="305:25">i</name> <operator pos:start="305:27" pos:end="305:27">&lt;</operator> <literal type="number" pos:start="305:29" pos:end="305:29">4</literal></expr>;</condition> <incr pos:start="305:32" pos:end="305:34"><expr pos:start="305:32" pos:end="305:34"><name pos:start="305:32" pos:end="305:32">i</name><operator pos:start="305:33" pos:end="305:34">++</operator></expr></incr>)</control> <block pos:start="305:37" pos:end="309:13">{<block_content pos:start="307:17" pos:end="307:81">

                <expr_stmt pos:start="307:17" pos:end="307:81"><expr pos:start="307:17" pos:end="307:80"><call pos:start="307:17" pos:end="307:80"><name pos:start="307:17" pos:end="307:22">memset</name><argument_list pos:start="307:23" pos:end="307:80">(<argument pos:start="307:24" pos:end="307:67"><expr pos:start="307:24" pos:end="307:67"><operator pos:start="307:24" pos:end="307:24">&amp;</operator><name pos:start="307:25" pos:end="307:67"><name pos:start="307:25" pos:end="307:25">h</name><operator pos:start="307:26" pos:end="307:27">-&gt;</operator><name pos:start="307:28" pos:end="307:51">intra4x4_pred_mode_cache</name><index pos:start="307:52" pos:end="307:67">[<expr pos:start="307:53" pos:end="307:66"><name pos:start="307:53" pos:end="307:60"><name pos:start="307:53" pos:end="307:57">scan8</name><index pos:start="307:58" pos:end="307:60">[<expr pos:start="307:59" pos:end="307:59"><literal type="number" pos:start="307:59" pos:end="307:59">0</literal></expr>]</index></name> <operator pos:start="307:62" pos:end="307:62">+</operator> <literal type="number" pos:start="307:64" pos:end="307:64">8</literal><operator pos:start="307:65" pos:end="307:65">*</operator><name pos:start="307:66" pos:end="307:66">i</name></expr>]</index></name></expr></argument>, <argument pos:start="307:70" pos:end="307:76"><expr pos:start="307:70" pos:end="307:76"><name pos:start="307:70" pos:end="307:76">DC_PRED</name></expr></argument>, <argument pos:start="307:79" pos:end="307:79"><expr pos:start="307:79" pos:end="307:79"><literal type="number" pos:start="307:79" pos:end="307:79">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="315:9" pos:end="315:38"><expr pos:start="315:9" pos:end="315:37"><call pos:start="315:9" pos:end="315:37"><name pos:start="315:9" pos:end="315:34">write_back_intra_pred_mode</name><argument_list pos:start="315:35" pos:end="315:37">(<argument pos:start="315:36" pos:end="315:36"><expr pos:start="315:36" pos:end="315:36"><name pos:start="315:36" pos:end="315:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="319:9" pos:end="343:9"><if pos:start="319:9" pos:end="329:9">if <condition pos:start="319:12" pos:end="319:25">(<expr pos:start="319:13" pos:end="319:24"><name pos:start="319:13" pos:end="319:19">mb_type</name> <operator pos:start="319:21" pos:end="319:22">==</operator> <literal type="number" pos:start="319:24" pos:end="319:24">8</literal></expr>)</condition> <block pos:start="319:27" pos:end="329:9">{<block_content pos:start="321:13" pos:end="327:73">

            <expr_stmt pos:start="321:13" pos:end="321:48"><expr pos:start="321:13" pos:end="321:47"><call pos:start="321:13" pos:end="321:47"><name pos:start="321:13" pos:end="321:44">ff_h264_check_intra4x4_pred_mode</name><argument_list pos:start="321:45" pos:end="321:47">(<argument pos:start="321:46" pos:end="321:46"><expr pos:start="321:46" pos:end="321:46"><name pos:start="321:46" pos:end="321:46">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="325:13" pos:end="325:73"><expr pos:start="325:13" pos:end="325:72"><name pos:start="325:13" pos:end="325:36"><name pos:start="325:13" pos:end="325:13">h</name><operator pos:start="325:14" pos:end="325:15">-&gt;</operator><name pos:start="325:16" pos:end="325:36">top_samples_available</name></name>  <operator pos:start="325:39" pos:end="325:39">=</operator> <ternary pos:start="325:41" pos:end="325:72"><condition pos:start="325:41" pos:end="325:56"><expr pos:start="325:41" pos:end="325:54"><operator pos:start="325:41" pos:end="325:41">(</operator><name pos:start="325:42" pos:end="325:48"><name pos:start="325:42" pos:end="325:42">s</name><operator pos:start="325:43" pos:end="325:44">-&gt;</operator><name pos:start="325:45" pos:end="325:48">mb_y</name></name> <operator pos:start="325:50" pos:end="325:51">==</operator> <literal type="number" pos:start="325:53" pos:end="325:53">0</literal><operator pos:start="325:54" pos:end="325:54">)</operator></expr> ?</condition><then pos:start="325:58" pos:end="325:63"> <expr pos:start="325:58" pos:end="325:63"><literal type="number" pos:start="325:58" pos:end="325:63">0x33FF</literal></expr> </then><else pos:start="325:65" pos:end="325:72">: <expr pos:start="325:67" pos:end="325:72"><literal type="number" pos:start="325:67" pos:end="325:72">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="327:13" pos:end="327:73"><expr pos:start="327:13" pos:end="327:72"><name pos:start="327:13" pos:end="327:37"><name pos:start="327:13" pos:end="327:13">h</name><operator pos:start="327:14" pos:end="327:15">-&gt;</operator><name pos:start="327:16" pos:end="327:37">left_samples_available</name></name> <operator pos:start="327:39" pos:end="327:39">=</operator> <ternary pos:start="327:41" pos:end="327:72"><condition pos:start="327:41" pos:end="327:56"><expr pos:start="327:41" pos:end="327:54"><operator pos:start="327:41" pos:end="327:41">(</operator><name pos:start="327:42" pos:end="327:48"><name pos:start="327:42" pos:end="327:42">s</name><operator pos:start="327:43" pos:end="327:44">-&gt;</operator><name pos:start="327:45" pos:end="327:48">mb_x</name></name> <operator pos:start="327:50" pos:end="327:51">==</operator> <literal type="number" pos:start="327:53" pos:end="327:53">0</literal><operator pos:start="327:54" pos:end="327:54">)</operator></expr> ?</condition><then pos:start="327:58" pos:end="327:63"> <expr pos:start="327:58" pos:end="327:63"><literal type="number" pos:start="327:58" pos:end="327:63">0x5F5F</literal></expr> </then><else pos:start="327:65" pos:end="327:72">: <expr pos:start="327:67" pos:end="327:72"><literal type="number" pos:start="327:67" pos:end="327:72">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="329:11" pos:end="343:9">else <block pos:start="329:16" pos:end="343:9">{<block_content pos:start="331:13" pos:end="341:47">

            <for pos:start="331:13" pos:end="335:13">for <control pos:start="331:17" pos:end="331:35">(<init pos:start="331:18" pos:end="331:23"><expr pos:start="331:18" pos:end="331:22"><name pos:start="331:18" pos:end="331:18">i</name> <operator pos:start="331:20" pos:end="331:20">=</operator> <literal type="number" pos:start="331:22" pos:end="331:22">0</literal></expr>;</init> <condition pos:start="331:25" pos:end="331:30"><expr pos:start="331:25" pos:end="331:29"><name pos:start="331:25" pos:end="331:25">i</name> <operator pos:start="331:27" pos:end="331:27">&lt;</operator> <literal type="number" pos:start="331:29" pos:end="331:29">4</literal></expr>;</condition> <incr pos:start="331:32" pos:end="331:34"><expr pos:start="331:32" pos:end="331:34"><name pos:start="331:32" pos:end="331:32">i</name><operator pos:start="331:33" pos:end="331:34">++</operator></expr></incr>)</control> <block pos:start="331:37" pos:end="335:13">{<block_content pos:start="333:17" pos:end="333:85">

                <expr_stmt pos:start="333:17" pos:end="333:85"><expr pos:start="333:17" pos:end="333:84"><call pos:start="333:17" pos:end="333:84"><name pos:start="333:17" pos:end="333:22">memset</name><argument_list pos:start="333:23" pos:end="333:84">(<argument pos:start="333:24" pos:end="333:67"><expr pos:start="333:24" pos:end="333:67"><operator pos:start="333:24" pos:end="333:24">&amp;</operator><name pos:start="333:25" pos:end="333:67"><name pos:start="333:25" pos:end="333:25">h</name><operator pos:start="333:26" pos:end="333:27">-&gt;</operator><name pos:start="333:28" pos:end="333:51">intra4x4_pred_mode_cache</name><index pos:start="333:52" pos:end="333:67">[<expr pos:start="333:53" pos:end="333:66"><name pos:start="333:53" pos:end="333:60"><name pos:start="333:53" pos:end="333:57">scan8</name><index pos:start="333:58" pos:end="333:60">[<expr pos:start="333:59" pos:end="333:59"><literal type="number" pos:start="333:59" pos:end="333:59">0</literal></expr>]</index></name> <operator pos:start="333:62" pos:end="333:62">+</operator> <literal type="number" pos:start="333:64" pos:end="333:64">8</literal><operator pos:start="333:65" pos:end="333:65">*</operator><name pos:start="333:66" pos:end="333:66">i</name></expr>]</index></name></expr></argument>, <argument pos:start="333:70" pos:end="333:80"><expr pos:start="333:70" pos:end="333:80"><name pos:start="333:70" pos:end="333:80">DC_128_PRED</name></expr></argument>, <argument pos:start="333:83" pos:end="333:83"><expr pos:start="333:83" pos:end="333:83"><literal type="number" pos:start="333:83" pos:end="333:83">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="339:13" pos:end="339:47"><expr pos:start="339:13" pos:end="339:46"><name pos:start="339:13" pos:end="339:36"><name pos:start="339:13" pos:end="339:13">h</name><operator pos:start="339:14" pos:end="339:15">-&gt;</operator><name pos:start="339:16" pos:end="339:36">top_samples_available</name></name>  <operator pos:start="339:39" pos:end="339:39">=</operator> <literal type="number" pos:start="339:41" pos:end="339:46">0x33FF</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:47"><expr pos:start="341:13" pos:end="341:46"><name pos:start="341:13" pos:end="341:37"><name pos:start="341:13" pos:end="341:13">h</name><operator pos:start="341:14" pos:end="341:15">-&gt;</operator><name pos:start="341:16" pos:end="341:37">left_samples_available</name></name> <operator pos:start="341:39" pos:end="341:39">=</operator> <literal type="number" pos:start="341:41" pos:end="341:46">0x5F5F</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="347:9" pos:end="347:35"><expr pos:start="347:9" pos:end="347:34"><name pos:start="347:9" pos:end="347:15">mb_type</name> <operator pos:start="347:17" pos:end="347:17">=</operator> <name pos:start="347:19" pos:end="347:34">MB_TYPE_INTRA4x4</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="349:7" pos:end="371:5">else <block pos:start="349:12" pos:end="371:5">{<block_content pos:start="351:9" pos:end="369:37">                      <comment type="block" pos:start="349:35" pos:end="349:50">/* INTRA16x16 */</comment>

        <expr_stmt pos:start="351:9" pos:end="351:52"><expr pos:start="351:9" pos:end="351:51"><name pos:start="351:9" pos:end="351:11">dir</name> <operator pos:start="351:13" pos:end="351:13">=</operator> <name pos:start="351:15" pos:end="351:41"><name pos:start="351:15" pos:end="351:28">i_mb_type_info</name><index pos:start="351:29" pos:end="351:41">[<expr pos:start="351:30" pos:end="351:40"><name pos:start="351:30" pos:end="351:36">mb_type</name> <operator pos:start="351:38" pos:end="351:38">-</operator> <literal type="number" pos:start="351:40" pos:end="351:40">8</literal></expr>]</index></name><operator pos:start="351:42" pos:end="351:42">.</operator><name pos:start="351:43" pos:end="351:51">pred_mode</name></expr>;</expr_stmt>

        <expr_stmt pos:start="353:9" pos:end="353:43"><expr pos:start="353:9" pos:end="353:42"><name pos:start="353:9" pos:end="353:11">dir</name> <operator pos:start="353:13" pos:end="353:13">=</operator> <operator pos:start="353:15" pos:end="353:15">(</operator><name pos:start="353:16" pos:end="353:18">dir</name> <operator pos:start="353:20" pos:end="353:21">&gt;&gt;</operator> <literal type="number" pos:start="353:23" pos:end="353:23">1</literal><operator pos:start="353:24" pos:end="353:24">)</operator> <operator pos:start="353:26" pos:end="353:26">^</operator> <literal type="number" pos:start="353:28" pos:end="353:28">3</literal><operator pos:start="353:29" pos:end="353:29">*</operator><operator pos:start="353:30" pos:end="353:30">(</operator><name pos:start="353:31" pos:end="353:33">dir</name> <operator pos:start="353:35" pos:end="353:35">&amp;</operator> <literal type="number" pos:start="353:37" pos:end="353:37">1</literal><operator pos:start="353:38" pos:end="353:38">)</operator> <operator pos:start="353:40" pos:end="353:40">^</operator> <literal type="number" pos:start="353:42" pos:end="353:42">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="357:9" pos:end="363:9"><if pos:start="357:9" pos:end="363:9">if <condition pos:start="357:12" pos:end="357:84">(<expr pos:start="357:13" pos:end="357:83"><operator pos:start="357:13" pos:end="357:13">(</operator><name pos:start="357:14" pos:end="357:36"><name pos:start="357:14" pos:end="357:14">h</name><operator pos:start="357:15" pos:end="357:16">-&gt;</operator><name pos:start="357:17" pos:end="357:36">intra16x16_pred_mode</name></name> <operator pos:start="357:38" pos:end="357:38">=</operator> <call pos:start="357:40" pos:end="357:76"><name pos:start="357:40" pos:end="357:68">ff_h264_check_intra_pred_mode</name><argument_list pos:start="357:69" pos:end="357:76">(<argument pos:start="357:70" pos:end="357:70"><expr pos:start="357:70" pos:end="357:70"><name pos:start="357:70" pos:end="357:70">h</name></expr></argument>, <argument pos:start="357:73" pos:end="357:75"><expr pos:start="357:73" pos:end="357:75"><name pos:start="357:73" pos:end="357:75">dir</name></expr></argument>)</argument_list></call><operator pos:start="357:77" pos:end="357:77">)</operator> <operator pos:start="357:79" pos:end="357:80">==</operator> <operator pos:start="357:82" pos:end="357:82">-</operator><literal type="number" pos:start="357:83" pos:end="357:83">1</literal></expr>)</condition><block pos:start="357:85" pos:end="363:9">{<block_content pos:start="359:13" pos:end="361:22">

            <expr_stmt pos:start="359:13" pos:end="359:77"><expr pos:start="359:13" pos:end="359:76"><call pos:start="359:13" pos:end="359:76"><name pos:start="359:13" pos:end="359:18">av_log</name><argument_list pos:start="359:19" pos:end="359:76">(<argument pos:start="359:20" pos:end="359:29"><expr pos:start="359:20" pos:end="359:29"><name pos:start="359:20" pos:end="359:29"><name pos:start="359:20" pos:end="359:20">h</name><operator pos:start="359:21" pos:end="359:22">-&gt;</operator><name pos:start="359:23" pos:end="359:23">s</name><operator pos:start="359:24" pos:end="359:24">.</operator><name pos:start="359:25" pos:end="359:29">avctx</name></name></expr></argument>, <argument pos:start="359:32" pos:end="359:43"><expr pos:start="359:32" pos:end="359:43"><name pos:start="359:32" pos:end="359:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="359:46" pos:end="359:75"><expr pos:start="359:46" pos:end="359:75"><literal type="string" pos:start="359:46" pos:end="359:75">"check_intra_pred_mode = -1\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="361:13" pos:end="361:22">return <expr pos:start="361:20" pos:end="361:21"><operator pos:start="361:20" pos:end="361:20">-</operator><literal type="number" pos:start="361:21" pos:end="361:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="367:9" pos:end="367:46"><expr pos:start="367:9" pos:end="367:45"><name pos:start="367:9" pos:end="367:11">cbp</name> <operator pos:start="367:13" pos:end="367:13">=</operator> <name pos:start="367:15" pos:end="367:41"><name pos:start="367:15" pos:end="367:28">i_mb_type_info</name><index pos:start="367:29" pos:end="367:41">[<expr pos:start="367:30" pos:end="367:40"><name pos:start="367:30" pos:end="367:36">mb_type</name> <operator pos:start="367:38" pos:end="367:38">-</operator> <literal type="number" pos:start="367:40" pos:end="367:40">8</literal></expr>]</index></name><operator pos:start="367:42" pos:end="367:42">.</operator><name pos:start="367:43" pos:end="367:45">cbp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="369:9" pos:end="369:37"><expr pos:start="369:9" pos:end="369:36"><name pos:start="369:9" pos:end="369:15">mb_type</name> <operator pos:start="369:17" pos:end="369:17">=</operator> <name pos:start="369:19" pos:end="369:36">MB_TYPE_INTRA16x16</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="375:5" pos:end="393:5"><if pos:start="375:5" pos:end="393:5">if <condition pos:start="375:8" pos:end="375:64">(<expr pos:start="375:9" pos:end="375:63"><operator pos:start="375:9" pos:end="375:9">!</operator><call pos:start="375:10" pos:end="375:26"><name pos:start="375:10" pos:end="375:17">IS_INTER</name><argument_list pos:start="375:18" pos:end="375:26">(<argument pos:start="375:19" pos:end="375:25"><expr pos:start="375:19" pos:end="375:25"><name pos:start="375:19" pos:end="375:25">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="375:28" pos:end="375:29">&amp;&amp;</operator> <name pos:start="375:31" pos:end="375:42"><name pos:start="375:31" pos:end="375:31">s</name><operator pos:start="375:32" pos:end="375:33">-&gt;</operator><name pos:start="375:34" pos:end="375:42">pict_type</name></name> <operator pos:start="375:44" pos:end="375:45">!=</operator> <name pos:start="375:47" pos:end="375:63">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="375:66" pos:end="393:5">{<block_content pos:start="377:9" pos:end="391:9">

        <for pos:start="377:9" pos:end="381:9">for <control pos:start="377:13" pos:end="377:31">(<init pos:start="377:14" pos:end="377:19"><expr pos:start="377:14" pos:end="377:18"><name pos:start="377:14" pos:end="377:14">i</name> <operator pos:start="377:16" pos:end="377:16">=</operator> <literal type="number" pos:start="377:18" pos:end="377:18">0</literal></expr>;</init> <condition pos:start="377:21" pos:end="377:26"><expr pos:start="377:21" pos:end="377:25"><name pos:start="377:21" pos:end="377:21">i</name> <operator pos:start="377:23" pos:end="377:23">&lt;</operator> <literal type="number" pos:start="377:25" pos:end="377:25">4</literal></expr>;</condition> <incr pos:start="377:28" pos:end="377:30"><expr pos:start="377:28" pos:end="377:30"><name pos:start="377:28" pos:end="377:28">i</name><operator pos:start="377:29" pos:end="377:30">++</operator></expr></incr>)</control> <block pos:start="377:33" pos:end="381:9">{<block_content pos:start="379:13" pos:end="379:101">

            <expr_stmt pos:start="379:13" pos:end="379:101"><expr pos:start="379:13" pos:end="379:100"><call pos:start="379:13" pos:end="379:100"><name pos:start="379:13" pos:end="379:18">memset</name><argument_list pos:start="379:19" pos:end="379:100">(<argument pos:start="379:20" pos:end="379:75"><expr pos:start="379:20" pos:end="379:75"><name pos:start="379:20" pos:end="379:75"><name pos:start="379:20" pos:end="379:20">s</name><operator pos:start="379:21" pos:end="379:22">-&gt;</operator><name pos:start="379:23" pos:end="379:37">current_picture</name><operator pos:start="379:38" pos:end="379:38">.</operator><name pos:start="379:39" pos:end="379:39">f</name><operator pos:start="379:40" pos:end="379:40">.</operator><name pos:start="379:41" pos:end="379:50">motion_val</name><index pos:start="379:51" pos:end="379:53">[<expr pos:start="379:52" pos:end="379:52"><literal type="number" pos:start="379:52" pos:end="379:52">0</literal></expr>]</index><index pos:start="379:54" pos:end="379:75">[<expr pos:start="379:55" pos:end="379:74"><name pos:start="379:55" pos:end="379:58">b_xy</name> <operator pos:start="379:60" pos:end="379:60">+</operator> <name pos:start="379:62" pos:end="379:62">i</name><operator pos:start="379:63" pos:end="379:63">*</operator><name pos:start="379:64" pos:end="379:74"><name pos:start="379:64" pos:end="379:64">h</name><operator pos:start="379:65" pos:end="379:66">-&gt;</operator><name pos:start="379:67" pos:end="379:74">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="379:78" pos:end="379:78"><expr pos:start="379:78" pos:end="379:78"><literal type="number" pos:start="379:78" pos:end="379:78">0</literal></expr></argument>, <argument pos:start="379:81" pos:end="379:99"><expr pos:start="379:81" pos:end="379:99"><literal type="number" pos:start="379:81" pos:end="379:81">4</literal><operator pos:start="379:82" pos:end="379:82">*</operator><literal type="number" pos:start="379:83" pos:end="379:83">2</literal><operator pos:start="379:84" pos:end="379:84">*</operator><sizeof pos:start="379:85" pos:end="379:99">sizeof<argument_list pos:start="379:91" pos:end="379:99">(<argument pos:start="379:92" pos:end="379:98"><expr pos:start="379:92" pos:end="379:98"><name pos:start="379:92" pos:end="379:98">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="383:9" pos:end="391:9"><if pos:start="383:9" pos:end="391:9">if <condition pos:start="383:12" pos:end="383:46">(<expr pos:start="383:13" pos:end="383:45"><name pos:start="383:13" pos:end="383:24"><name pos:start="383:13" pos:end="383:13">s</name><operator pos:start="383:14" pos:end="383:15">-&gt;</operator><name pos:start="383:16" pos:end="383:24">pict_type</name></name> <operator pos:start="383:26" pos:end="383:27">==</operator> <name pos:start="383:29" pos:end="383:45">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="383:48" pos:end="391:9">{<block_content pos:start="385:13" pos:end="389:13">

            <for pos:start="385:13" pos:end="389:13">for <control pos:start="385:17" pos:end="385:35">(<init pos:start="385:18" pos:end="385:23"><expr pos:start="385:18" pos:end="385:22"><name pos:start="385:18" pos:end="385:18">i</name> <operator pos:start="385:20" pos:end="385:20">=</operator> <literal type="number" pos:start="385:22" pos:end="385:22">0</literal></expr>;</init> <condition pos:start="385:25" pos:end="385:30"><expr pos:start="385:25" pos:end="385:29"><name pos:start="385:25" pos:end="385:25">i</name> <operator pos:start="385:27" pos:end="385:27">&lt;</operator> <literal type="number" pos:start="385:29" pos:end="385:29">4</literal></expr>;</condition> <incr pos:start="385:32" pos:end="385:34"><expr pos:start="385:32" pos:end="385:34"><name pos:start="385:32" pos:end="385:32">i</name><operator pos:start="385:33" pos:end="385:34">++</operator></expr></incr>)</control> <block pos:start="385:37" pos:end="389:13">{<block_content pos:start="387:17" pos:end="387:105">

                <expr_stmt pos:start="387:17" pos:end="387:105"><expr pos:start="387:17" pos:end="387:104"><call pos:start="387:17" pos:end="387:104"><name pos:start="387:17" pos:end="387:22">memset</name><argument_list pos:start="387:23" pos:end="387:104">(<argument pos:start="387:24" pos:end="387:79"><expr pos:start="387:24" pos:end="387:79"><name pos:start="387:24" pos:end="387:79"><name pos:start="387:24" pos:end="387:24">s</name><operator pos:start="387:25" pos:end="387:26">-&gt;</operator><name pos:start="387:27" pos:end="387:41">current_picture</name><operator pos:start="387:42" pos:end="387:42">.</operator><name pos:start="387:43" pos:end="387:43">f</name><operator pos:start="387:44" pos:end="387:44">.</operator><name pos:start="387:45" pos:end="387:54">motion_val</name><index pos:start="387:55" pos:end="387:57">[<expr pos:start="387:56" pos:end="387:56"><literal type="number" pos:start="387:56" pos:end="387:56">1</literal></expr>]</index><index pos:start="387:58" pos:end="387:79">[<expr pos:start="387:59" pos:end="387:78"><name pos:start="387:59" pos:end="387:62">b_xy</name> <operator pos:start="387:64" pos:end="387:64">+</operator> <name pos:start="387:66" pos:end="387:66">i</name><operator pos:start="387:67" pos:end="387:67">*</operator><name pos:start="387:68" pos:end="387:78"><name pos:start="387:68" pos:end="387:68">h</name><operator pos:start="387:69" pos:end="387:70">-&gt;</operator><name pos:start="387:71" pos:end="387:78">b_stride</name></name></expr>]</index></name></expr></argument>, <argument pos:start="387:82" pos:end="387:82"><expr pos:start="387:82" pos:end="387:82"><literal type="number" pos:start="387:82" pos:end="387:82">0</literal></expr></argument>, <argument pos:start="387:85" pos:end="387:103"><expr pos:start="387:85" pos:end="387:103"><literal type="number" pos:start="387:85" pos:end="387:85">4</literal><operator pos:start="387:86" pos:end="387:86">*</operator><literal type="number" pos:start="387:87" pos:end="387:87">2</literal><operator pos:start="387:88" pos:end="387:88">*</operator><sizeof pos:start="387:89" pos:end="387:103">sizeof<argument_list pos:start="387:95" pos:end="387:103">(<argument pos:start="387:96" pos:end="387:102"><expr pos:start="387:96" pos:end="387:102"><name pos:start="387:96" pos:end="387:102">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="395:5" pos:end="399:5"><if pos:start="395:5" pos:end="399:5">if <condition pos:start="395:8" pos:end="395:30">(<expr pos:start="395:9" pos:end="395:29"><operator pos:start="395:9" pos:end="395:9">!</operator><call pos:start="395:10" pos:end="395:29"><name pos:start="395:10" pos:end="395:20">IS_INTRA4x4</name><argument_list pos:start="395:21" pos:end="395:29">(<argument pos:start="395:22" pos:end="395:28"><expr pos:start="395:22" pos:end="395:28"><name pos:start="395:22" pos:end="395:28">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="395:32" pos:end="399:5">{<block_content pos:start="397:9" pos:end="397:69">

        <expr_stmt pos:start="397:9" pos:end="397:69"><expr pos:start="397:9" pos:end="397:68"><call pos:start="397:9" pos:end="397:68"><name pos:start="397:9" pos:end="397:14">memset</name><argument_list pos:start="397:15" pos:end="397:68">(<argument pos:start="397:16" pos:end="397:55"><expr pos:start="397:16" pos:end="397:55"><name pos:start="397:16" pos:end="397:36"><name pos:start="397:16" pos:end="397:16">h</name><operator pos:start="397:17" pos:end="397:18">-&gt;</operator><name pos:start="397:19" pos:end="397:36">intra4x4_pred_mode</name></name><operator pos:start="397:37" pos:end="397:37">+</operator><name pos:start="397:38" pos:end="397:55"><name pos:start="397:38" pos:end="397:38">h</name><operator pos:start="397:39" pos:end="397:40">-&gt;</operator><name pos:start="397:41" pos:end="397:48">mb2br_xy</name><index pos:start="397:49" pos:end="397:55">[<expr pos:start="397:50" pos:end="397:54"><name pos:start="397:50" pos:end="397:54">mb_xy</name></expr>]</index></name></expr></argument>, <argument pos:start="397:58" pos:end="397:64"><expr pos:start="397:58" pos:end="397:64"><name pos:start="397:58" pos:end="397:64">DC_PRED</name></expr></argument>, <argument pos:start="397:67" pos:end="397:67"><expr pos:start="397:67" pos:end="397:67"><literal type="number" pos:start="397:67" pos:end="397:67">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="401:5" pos:end="409:5"><if pos:start="401:5" pos:end="409:5">if <condition pos:start="401:8" pos:end="401:63">(<expr pos:start="401:9" pos:end="401:62"><operator pos:start="401:9" pos:end="401:9">!</operator><call pos:start="401:10" pos:end="401:25"><name pos:start="401:10" pos:end="401:16">IS_SKIP</name><argument_list pos:start="401:17" pos:end="401:25">(<argument pos:start="401:18" pos:end="401:24"><expr pos:start="401:18" pos:end="401:24"><name pos:start="401:18" pos:end="401:24">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="401:27" pos:end="401:28">||</operator> <name pos:start="401:30" pos:end="401:41"><name pos:start="401:30" pos:end="401:30">s</name><operator pos:start="401:31" pos:end="401:32">-&gt;</operator><name pos:start="401:33" pos:end="401:41">pict_type</name></name> <operator pos:start="401:43" pos:end="401:44">==</operator> <name pos:start="401:46" pos:end="401:62">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="401:65" pos:end="409:5">{<block_content pos:start="403:9" pos:end="407:39">

        <expr_stmt pos:start="403:9" pos:end="403:69"><expr pos:start="403:9" pos:end="403:68"><call pos:start="403:9" pos:end="403:68"><name pos:start="403:9" pos:end="403:14">memset</name><argument_list pos:start="403:15" pos:end="403:68">(<argument pos:start="403:16" pos:end="403:42"><expr pos:start="403:16" pos:end="403:42"><name pos:start="403:16" pos:end="403:38"><name pos:start="403:16" pos:end="403:16">h</name><operator pos:start="403:17" pos:end="403:18">-&gt;</operator><name pos:start="403:19" pos:end="403:38">non_zero_count_cache</name></name> <operator pos:start="403:40" pos:end="403:40">+</operator> <literal type="number" pos:start="403:42" pos:end="403:42">8</literal></expr></argument>, <argument pos:start="403:45" pos:end="403:45"><expr pos:start="403:45" pos:end="403:45"><literal type="number" pos:start="403:45" pos:end="403:45">0</literal></expr></argument>, <argument pos:start="403:48" pos:end="403:67"><expr pos:start="403:48" pos:end="403:67"><literal type="number" pos:start="403:48" pos:end="403:49">14</literal><operator pos:start="403:50" pos:end="403:50">*</operator><literal type="number" pos:start="403:51" pos:end="403:51">8</literal><operator pos:start="403:52" pos:end="403:52">*</operator><sizeof pos:start="403:53" pos:end="403:67">sizeof<argument_list pos:start="403:59" pos:end="403:67">(<argument pos:start="403:60" pos:end="403:66"><expr pos:start="403:60" pos:end="403:66"><name pos:start="403:60" pos:end="403:66">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="405:9" pos:end="405:39"><expr pos:start="405:9" pos:end="405:38"><call pos:start="405:9" pos:end="405:38"><name pos:start="405:9" pos:end="405:27"><name pos:start="405:9" pos:end="405:9">s</name><operator pos:start="405:10" pos:end="405:11">-&gt;</operator><name pos:start="405:12" pos:end="405:14">dsp</name><operator pos:start="405:15" pos:end="405:15">.</operator><name pos:start="405:16" pos:end="405:27">clear_blocks</name></name><argument_list pos:start="405:28" pos:end="405:38">(<argument pos:start="405:29" pos:end="405:37"><expr pos:start="405:29" pos:end="405:37"><name pos:start="405:29" pos:end="405:33"><name pos:start="405:29" pos:end="405:29">h</name><operator pos:start="405:30" pos:end="405:31">-&gt;</operator><name pos:start="405:32" pos:end="405:33">mb</name></name><operator pos:start="405:34" pos:end="405:34">+</operator>  <literal type="number" pos:start="405:37" pos:end="405:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="407:9" pos:end="407:39"><expr pos:start="407:9" pos:end="407:38"><call pos:start="407:9" pos:end="407:38"><name pos:start="407:9" pos:end="407:27"><name pos:start="407:9" pos:end="407:9">s</name><operator pos:start="407:10" pos:end="407:11">-&gt;</operator><name pos:start="407:12" pos:end="407:14">dsp</name><operator pos:start="407:15" pos:end="407:15">.</operator><name pos:start="407:16" pos:end="407:27">clear_blocks</name></name><argument_list pos:start="407:28" pos:end="407:38">(<argument pos:start="407:29" pos:end="407:37"><expr pos:start="407:29" pos:end="407:37"><name pos:start="407:29" pos:end="407:33"><name pos:start="407:29" pos:end="407:29">h</name><operator pos:start="407:30" pos:end="407:31">-&gt;</operator><name pos:start="407:32" pos:end="407:33">mb</name></name><operator pos:start="407:34" pos:end="407:34">+</operator><literal type="number" pos:start="407:35" pos:end="407:37">384</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="413:5" pos:end="427:5"><if pos:start="413:5" pos:end="427:5">if <condition pos:start="413:8" pos:end="413:92">(<expr pos:start="413:9" pos:end="413:91"><operator pos:start="413:9" pos:end="413:9">!</operator><call pos:start="413:10" pos:end="413:31"><name pos:start="413:10" pos:end="413:22">IS_INTRA16x16</name><argument_list pos:start="413:23" pos:end="413:31">(<argument pos:start="413:24" pos:end="413:30"><expr pos:start="413:24" pos:end="413:30"><name pos:start="413:24" pos:end="413:30">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="413:33" pos:end="413:34">&amp;&amp;</operator> <operator pos:start="413:36" pos:end="413:36">(</operator><operator pos:start="413:37" pos:end="413:37">!</operator><call pos:start="413:38" pos:end="413:53"><name pos:start="413:38" pos:end="413:44">IS_SKIP</name><argument_list pos:start="413:45" pos:end="413:53">(<argument pos:start="413:46" pos:end="413:52"><expr pos:start="413:46" pos:end="413:52"><name pos:start="413:46" pos:end="413:52">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="413:55" pos:end="413:56">||</operator> <name pos:start="413:58" pos:end="413:69"><name pos:start="413:58" pos:end="413:58">s</name><operator pos:start="413:59" pos:end="413:60">-&gt;</operator><name pos:start="413:61" pos:end="413:69">pict_type</name></name> <operator pos:start="413:71" pos:end="413:72">==</operator> <name pos:start="413:74" pos:end="413:90">AV_PICTURE_TYPE_B</name><operator pos:start="413:91" pos:end="413:91">)</operator></expr>)</condition> <block pos:start="413:94" pos:end="427:5">{<block_content pos:start="415:9" pos:end="425:89">

        <if_stmt pos:start="415:9" pos:end="421:9"><if pos:start="415:9" pos:end="421:9">if <condition pos:start="415:12" pos:end="415:53">(<expr pos:start="415:13" pos:end="415:52"><operator pos:start="415:13" pos:end="415:13">(</operator><name pos:start="415:14" pos:end="415:16">vlc</name> <operator pos:start="415:18" pos:end="415:18">=</operator> <call pos:start="415:20" pos:end="415:45"><name pos:start="415:20" pos:end="415:37">svq3_get_ue_golomb</name><argument_list pos:start="415:38" pos:end="415:45">(<argument pos:start="415:39" pos:end="415:44"><expr pos:start="415:39" pos:end="415:44"><operator pos:start="415:39" pos:end="415:39">&amp;</operator><name pos:start="415:40" pos:end="415:44"><name pos:start="415:40" pos:end="415:40">s</name><operator pos:start="415:41" pos:end="415:42">-&gt;</operator><name pos:start="415:43" pos:end="415:44">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="415:46" pos:end="415:46">)</operator> <operator pos:start="415:48" pos:end="415:49">&gt;=</operator> <literal type="number" pos:start="415:51" pos:end="415:52">48</literal></expr>)</condition><block pos:start="415:54" pos:end="421:9">{<block_content pos:start="417:13" pos:end="419:22">

            <expr_stmt pos:start="417:13" pos:end="417:66"><expr pos:start="417:13" pos:end="417:65"><call pos:start="417:13" pos:end="417:65"><name pos:start="417:13" pos:end="417:18">av_log</name><argument_list pos:start="417:19" pos:end="417:65">(<argument pos:start="417:20" pos:end="417:29"><expr pos:start="417:20" pos:end="417:29"><name pos:start="417:20" pos:end="417:29"><name pos:start="417:20" pos:end="417:20">h</name><operator pos:start="417:21" pos:end="417:22">-&gt;</operator><name pos:start="417:23" pos:end="417:23">s</name><operator pos:start="417:24" pos:end="417:24">.</operator><name pos:start="417:25" pos:end="417:29">avctx</name></name></expr></argument>, <argument pos:start="417:32" pos:end="417:43"><expr pos:start="417:32" pos:end="417:43"><name pos:start="417:32" pos:end="417:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="417:46" pos:end="417:59"><expr pos:start="417:46" pos:end="417:59"><literal type="string" pos:start="417:46" pos:end="417:59">"cbp_vlc=%d\n"</literal></expr></argument>, <argument pos:start="417:62" pos:end="417:64"><expr pos:start="417:62" pos:end="417:64"><name pos:start="417:62" pos:end="417:64">vlc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="419:13" pos:end="419:22">return <expr pos:start="419:20" pos:end="419:21"><operator pos:start="419:20" pos:end="419:20">-</operator><literal type="number" pos:start="419:21" pos:end="419:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="425:9" pos:end="425:89"><expr pos:start="425:9" pos:end="425:88"><name pos:start="425:9" pos:end="425:11">cbp</name> <operator pos:start="425:13" pos:end="425:13">=</operator> <ternary pos:start="425:15" pos:end="425:88"><condition pos:start="425:15" pos:end="425:33"><expr pos:start="425:15" pos:end="425:31"><call pos:start="425:15" pos:end="425:31"><name pos:start="425:15" pos:end="425:22">IS_INTRA</name><argument_list pos:start="425:23" pos:end="425:31">(<argument pos:start="425:24" pos:end="425:30"><expr pos:start="425:24" pos:end="425:30"><name pos:start="425:24" pos:end="425:30">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="425:35" pos:end="425:61"> <expr pos:start="425:35" pos:end="425:61"><name pos:start="425:35" pos:end="425:61"><name pos:start="425:35" pos:end="425:56">golomb_to_intra4x4_cbp</name><index pos:start="425:57" pos:end="425:61">[<expr pos:start="425:58" pos:end="425:60"><name pos:start="425:58" pos:end="425:60">vlc</name></expr>]</index></name></expr> </then><else pos:start="425:63" pos:end="425:88">: <expr pos:start="425:65" pos:end="425:88"><name pos:start="425:65" pos:end="425:88"><name pos:start="425:65" pos:end="425:83">golomb_to_inter_cbp</name><index pos:start="425:84" pos:end="425:88">[<expr pos:start="425:85" pos:end="425:87"><name pos:start="425:85" pos:end="425:87">vlc</name></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="429:5" pos:end="443:5"><if pos:start="429:5" pos:end="443:5">if <condition pos:start="429:8" pos:end="429:98">(<expr pos:start="429:9" pos:end="429:97"><call pos:start="429:9" pos:end="429:30"><name pos:start="429:9" pos:end="429:21">IS_INTRA16x16</name><argument_list pos:start="429:22" pos:end="429:30">(<argument pos:start="429:23" pos:end="429:29"><expr pos:start="429:23" pos:end="429:29"><name pos:start="429:23" pos:end="429:29">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="429:32" pos:end="429:33">||</operator> <operator pos:start="429:35" pos:end="429:35">(</operator><name pos:start="429:36" pos:end="429:47"><name pos:start="429:36" pos:end="429:36">s</name><operator pos:start="429:37" pos:end="429:38">-&gt;</operator><name pos:start="429:39" pos:end="429:47">pict_type</name></name> <operator pos:start="429:49" pos:end="429:50">!=</operator> <name pos:start="429:52" pos:end="429:68">AV_PICTURE_TYPE_I</name> <operator pos:start="429:70" pos:end="429:71">&amp;&amp;</operator> <name pos:start="429:73" pos:end="429:89"><name pos:start="429:73" pos:end="429:73">s</name><operator pos:start="429:74" pos:end="429:75">-&gt;</operator><name pos:start="429:76" pos:end="429:89">adaptive_quant</name></name> <operator pos:start="429:91" pos:end="429:92">&amp;&amp;</operator> <name pos:start="429:94" pos:end="429:96">cbp</name><operator pos:start="429:97" pos:end="429:97">)</operator></expr>)</condition> <block pos:start="429:100" pos:end="443:5">{<block_content pos:start="431:9" pos:end="441:9">

        <expr_stmt pos:start="431:9" pos:end="431:48"><expr pos:start="431:9" pos:end="431:47"><name pos:start="431:9" pos:end="431:17"><name pos:start="431:9" pos:end="431:9">s</name><operator pos:start="431:10" pos:end="431:11">-&gt;</operator><name pos:start="431:12" pos:end="431:17">qscale</name></name> <operator pos:start="431:19" pos:end="431:20">+=</operator> <call pos:start="431:22" pos:end="431:47"><name pos:start="431:22" pos:end="431:39">svq3_get_se_golomb</name><argument_list pos:start="431:40" pos:end="431:47">(<argument pos:start="431:41" pos:end="431:46"><expr pos:start="431:41" pos:end="431:46"><operator pos:start="431:41" pos:end="431:41">&amp;</operator><name pos:start="431:42" pos:end="431:46"><name pos:start="431:42" pos:end="431:42">s</name><operator pos:start="431:43" pos:end="431:44">-&gt;</operator><name pos:start="431:45" pos:end="431:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="435:9" pos:end="441:9"><if pos:start="435:9" pos:end="441:9">if <condition pos:start="435:12" pos:end="435:27">(<expr pos:start="435:13" pos:end="435:26"><name pos:start="435:13" pos:end="435:21"><name pos:start="435:13" pos:end="435:13">s</name><operator pos:start="435:14" pos:end="435:15">-&gt;</operator><name pos:start="435:16" pos:end="435:21">qscale</name></name> <operator pos:start="435:23" pos:end="435:23">&gt;</operator> <literal type="number" pos:start="435:25" pos:end="435:26">31</literal></expr>)</condition><block pos:start="435:28" pos:end="441:9">{<block_content pos:start="437:13" pos:end="439:22">

            <expr_stmt pos:start="437:13" pos:end="437:71"><expr pos:start="437:13" pos:end="437:70"><call pos:start="437:13" pos:end="437:70"><name pos:start="437:13" pos:end="437:18">av_log</name><argument_list pos:start="437:19" pos:end="437:70">(<argument pos:start="437:20" pos:end="437:29"><expr pos:start="437:20" pos:end="437:29"><name pos:start="437:20" pos:end="437:29"><name pos:start="437:20" pos:end="437:20">h</name><operator pos:start="437:21" pos:end="437:22">-&gt;</operator><name pos:start="437:23" pos:end="437:23">s</name><operator pos:start="437:24" pos:end="437:24">.</operator><name pos:start="437:25" pos:end="437:29">avctx</name></name></expr></argument>, <argument pos:start="437:32" pos:end="437:43"><expr pos:start="437:32" pos:end="437:43"><name pos:start="437:32" pos:end="437:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="437:46" pos:end="437:58"><expr pos:start="437:46" pos:end="437:58"><literal type="string" pos:start="437:46" pos:end="437:58">"qscale:%d\n"</literal></expr></argument>, <argument pos:start="437:61" pos:end="437:69"><expr pos:start="437:61" pos:end="437:69"><name pos:start="437:61" pos:end="437:69"><name pos:start="437:61" pos:end="437:61">s</name><operator pos:start="437:62" pos:end="437:63">-&gt;</operator><name pos:start="437:64" pos:end="437:69">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="439:13" pos:end="439:22">return <expr pos:start="439:20" pos:end="439:21"><operator pos:start="439:20" pos:end="439:20">-</operator><literal type="number" pos:start="439:21" pos:end="439:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="445:5" pos:end="459:5"><if pos:start="445:5" pos:end="459:5">if <condition pos:start="445:8" pos:end="445:31">(<expr pos:start="445:9" pos:end="445:30"><call pos:start="445:9" pos:end="445:30"><name pos:start="445:9" pos:end="445:21">IS_INTRA16x16</name><argument_list pos:start="445:22" pos:end="445:30">(<argument pos:start="445:23" pos:end="445:29"><expr pos:start="445:23" pos:end="445:29"><name pos:start="445:23" pos:end="445:29">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="445:33" pos:end="459:5">{<block_content pos:start="447:9" pos:end="457:9">

        <expr_stmt pos:start="447:9" pos:end="447:39"><expr pos:start="447:9" pos:end="447:38"><call pos:start="447:9" pos:end="447:38"><name pos:start="447:9" pos:end="447:18">AV_ZERO128</name><argument_list pos:start="447:19" pos:end="447:38">(<argument pos:start="447:20" pos:end="447:37"><expr pos:start="447:20" pos:end="447:37"><name pos:start="447:20" pos:end="447:35"><name pos:start="447:20" pos:end="447:20">h</name><operator pos:start="447:21" pos:end="447:22">-&gt;</operator><name pos:start="447:23" pos:end="447:32">mb_luma_dc</name><index pos:start="447:33" pos:end="447:35">[<expr pos:start="447:34" pos:end="447:34"><literal type="number" pos:start="447:34" pos:end="447:34">0</literal></expr>]</index></name><operator pos:start="447:36" pos:end="447:36">+</operator><literal type="number" pos:start="447:37" pos:end="447:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="449:9" pos:end="449:39"><expr pos:start="449:9" pos:end="449:38"><call pos:start="449:9" pos:end="449:38"><name pos:start="449:9" pos:end="449:18">AV_ZERO128</name><argument_list pos:start="449:19" pos:end="449:38">(<argument pos:start="449:20" pos:end="449:37"><expr pos:start="449:20" pos:end="449:37"><name pos:start="449:20" pos:end="449:35"><name pos:start="449:20" pos:end="449:20">h</name><operator pos:start="449:21" pos:end="449:22">-&gt;</operator><name pos:start="449:23" pos:end="449:32">mb_luma_dc</name><index pos:start="449:33" pos:end="449:35">[<expr pos:start="449:34" pos:end="449:34"><literal type="number" pos:start="449:34" pos:end="449:34">0</literal></expr>]</index></name><operator pos:start="449:36" pos:end="449:36">+</operator><literal type="number" pos:start="449:37" pos:end="449:37">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="451:9" pos:end="457:9"><if pos:start="451:9" pos:end="457:9">if <condition pos:start="451:12" pos:end="451:59">(<expr pos:start="451:13" pos:end="451:58"><call pos:start="451:13" pos:end="451:58"><name pos:start="451:13" pos:end="451:29">svq3_decode_block</name><argument_list pos:start="451:30" pos:end="451:58">(<argument pos:start="451:31" pos:end="451:36"><expr pos:start="451:31" pos:end="451:36"><operator pos:start="451:31" pos:end="451:31">&amp;</operator><name pos:start="451:32" pos:end="451:36"><name pos:start="451:32" pos:end="451:32">s</name><operator pos:start="451:33" pos:end="451:34">-&gt;</operator><name pos:start="451:35" pos:end="451:36">gb</name></name></expr></argument>, <argument pos:start="451:39" pos:end="451:51"><expr pos:start="451:39" pos:end="451:51"><name pos:start="451:39" pos:end="451:51"><name pos:start="451:39" pos:end="451:39">h</name><operator pos:start="451:40" pos:end="451:41">-&gt;</operator><name pos:start="451:42" pos:end="451:51">mb_luma_dc</name></name></expr></argument>, <argument pos:start="451:54" pos:end="451:54"><expr pos:start="451:54" pos:end="451:54"><literal type="number" pos:start="451:54" pos:end="451:54">0</literal></expr></argument>, <argument pos:start="451:57" pos:end="451:57"><expr pos:start="451:57" pos:end="451:57"><literal type="number" pos:start="451:57" pos:end="451:57">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="451:60" pos:end="457:9">{<block_content pos:start="453:13" pos:end="455:22">

            <expr_stmt pos:start="453:13" pos:end="453:85"><expr pos:start="453:13" pos:end="453:84"><call pos:start="453:13" pos:end="453:84"><name pos:start="453:13" pos:end="453:18">av_log</name><argument_list pos:start="453:19" pos:end="453:84">(<argument pos:start="453:20" pos:end="453:29"><expr pos:start="453:20" pos:end="453:29"><name pos:start="453:20" pos:end="453:29"><name pos:start="453:20" pos:end="453:20">h</name><operator pos:start="453:21" pos:end="453:22">-&gt;</operator><name pos:start="453:23" pos:end="453:23">s</name><operator pos:start="453:24" pos:end="453:24">.</operator><name pos:start="453:25" pos:end="453:29">avctx</name></name></expr></argument>, <argument pos:start="453:32" pos:end="453:43"><expr pos:start="453:32" pos:end="453:43"><name pos:start="453:32" pos:end="453:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="453:46" pos:end="453:83"><expr pos:start="453:46" pos:end="453:83"><literal type="string" pos:start="453:46" pos:end="453:83">"error while decoding intra luma dc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="455:13" pos:end="455:22">return <expr pos:start="455:20" pos:end="455:21"><operator pos:start="455:20" pos:end="455:20">-</operator><literal type="number" pos:start="455:21" pos:end="455:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="463:5" pos:end="543:5"><if pos:start="463:5" pos:end="543:5">if <condition pos:start="463:8" pos:end="463:12">(<expr pos:start="463:9" pos:end="463:11"><name pos:start="463:9" pos:end="463:11">cbp</name></expr>)</condition> <block pos:start="463:14" pos:end="543:5">{<block_content pos:start="465:9" pos:end="541:9">

        <decl_stmt pos:start="465:9" pos:end="465:57"><decl pos:start="465:9" pos:end="465:56"><type pos:start="465:9" pos:end="465:17"><specifier pos:start="465:9" pos:end="465:13">const</specifier> <name pos:start="465:15" pos:end="465:17">int</name></type> <name pos:start="465:19" pos:end="465:23">index</name> <init pos:start="465:25" pos:end="465:56">= <expr pos:start="465:27" pos:end="465:56"><ternary pos:start="465:27" pos:end="465:56"><condition pos:start="465:27" pos:end="465:50"><expr pos:start="465:27" pos:end="465:48"><call pos:start="465:27" pos:end="465:48"><name pos:start="465:27" pos:end="465:39">IS_INTRA16x16</name><argument_list pos:start="465:40" pos:end="465:48">(<argument pos:start="465:41" pos:end="465:47"><expr pos:start="465:41" pos:end="465:47"><name pos:start="465:41" pos:end="465:47">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="465:52" pos:end="465:52"> <expr pos:start="465:52" pos:end="465:52"><literal type="number" pos:start="465:52" pos:end="465:52">1</literal></expr> </then><else pos:start="465:54" pos:end="465:56">: <expr pos:start="465:56" pos:end="465:56"><literal type="number" pos:start="465:56" pos:end="465:56">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="467:9" pos:end="467:76"><decl pos:start="467:9" pos:end="467:75"><type pos:start="467:9" pos:end="467:17"><specifier pos:start="467:9" pos:end="467:13">const</specifier> <name pos:start="467:15" pos:end="467:17">int</name></type> <name pos:start="467:19" pos:end="467:22">type</name> <init pos:start="467:24" pos:end="467:75">= <expr pos:start="467:26" pos:end="467:75"><operator pos:start="467:26" pos:end="467:26">(</operator><ternary pos:start="467:27" pos:end="467:74"><condition pos:start="467:27" pos:end="467:68"><expr pos:start="467:27" pos:end="467:66"><operator pos:start="467:27" pos:end="467:27">(</operator><name pos:start="467:28" pos:end="467:36"><name pos:start="467:28" pos:end="467:28">s</name><operator pos:start="467:29" pos:end="467:30">-&gt;</operator><name pos:start="467:31" pos:end="467:36">qscale</name></name> <operator pos:start="467:38" pos:end="467:38">&lt;</operator> <literal type="number" pos:start="467:40" pos:end="467:41">24</literal> <operator pos:start="467:43" pos:end="467:44">&amp;&amp;</operator> <call pos:start="467:46" pos:end="467:65"><name pos:start="467:46" pos:end="467:56">IS_INTRA4x4</name><argument_list pos:start="467:57" pos:end="467:65">(<argument pos:start="467:58" pos:end="467:64"><expr pos:start="467:58" pos:end="467:64"><name pos:start="467:58" pos:end="467:64">mb_type</name></expr></argument>)</argument_list></call><operator pos:start="467:66" pos:end="467:66">)</operator></expr> ?</condition><then pos:start="467:70" pos:end="467:70"> <expr pos:start="467:70" pos:end="467:70"><literal type="number" pos:start="467:70" pos:end="467:70">2</literal></expr> </then><else pos:start="467:72" pos:end="467:74">: <expr pos:start="467:74" pos:end="467:74"><literal type="number" pos:start="467:74" pos:end="467:74">1</literal></expr></else></ternary><operator pos:start="467:75" pos:end="467:75">)</operator></expr></init></decl>;</decl_stmt>



        <for pos:start="471:9" pos:end="495:9">for <control pos:start="471:13" pos:end="471:31">(<init pos:start="471:14" pos:end="471:19"><expr pos:start="471:14" pos:end="471:18"><name pos:start="471:14" pos:end="471:14">i</name> <operator pos:start="471:16" pos:end="471:16">=</operator> <literal type="number" pos:start="471:18" pos:end="471:18">0</literal></expr>;</init> <condition pos:start="471:21" pos:end="471:26"><expr pos:start="471:21" pos:end="471:25"><name pos:start="471:21" pos:end="471:21">i</name> <operator pos:start="471:23" pos:end="471:23">&lt;</operator> <literal type="number" pos:start="471:25" pos:end="471:25">4</literal></expr>;</condition> <incr pos:start="471:28" pos:end="471:30"><expr pos:start="471:28" pos:end="471:30"><name pos:start="471:28" pos:end="471:28">i</name><operator pos:start="471:29" pos:end="471:30">++</operator></expr></incr>)</control> <block pos:start="471:33" pos:end="495:9">{<block_content pos:start="473:13" pos:end="493:13">

            <if_stmt pos:start="473:13" pos:end="493:13"><if pos:start="473:13" pos:end="493:13">if <condition pos:start="473:16" pos:end="473:33">(<expr pos:start="473:17" pos:end="473:32"><operator pos:start="473:17" pos:end="473:17">(</operator><name pos:start="473:18" pos:end="473:20">cbp</name> <operator pos:start="473:22" pos:end="473:22">&amp;</operator> <operator pos:start="473:24" pos:end="473:24">(</operator><literal type="number" pos:start="473:25" pos:end="473:25">1</literal> <operator pos:start="473:27" pos:end="473:28">&lt;&lt;</operator> <name pos:start="473:30" pos:end="473:30">i</name><operator pos:start="473:31" pos:end="473:31">)</operator><operator pos:start="473:32" pos:end="473:32">)</operator></expr>)</condition> <block pos:start="473:35" pos:end="493:13">{<block_content pos:start="475:17" pos:end="491:17">

                <for pos:start="475:17" pos:end="491:17">for <control pos:start="475:21" pos:end="475:39">(<init pos:start="475:22" pos:end="475:27"><expr pos:start="475:22" pos:end="475:26"><name pos:start="475:22" pos:end="475:22">j</name> <operator pos:start="475:24" pos:end="475:24">=</operator> <literal type="number" pos:start="475:26" pos:end="475:26">0</literal></expr>;</init> <condition pos:start="475:29" pos:end="475:34"><expr pos:start="475:29" pos:end="475:33"><name pos:start="475:29" pos:end="475:29">j</name> <operator pos:start="475:31" pos:end="475:31">&lt;</operator> <literal type="number" pos:start="475:33" pos:end="475:33">4</literal></expr>;</condition> <incr pos:start="475:36" pos:end="475:38"><expr pos:start="475:36" pos:end="475:38"><name pos:start="475:36" pos:end="475:36">j</name><operator pos:start="475:37" pos:end="475:38">++</operator></expr></incr>)</control> <block pos:start="475:41" pos:end="491:17">{<block_content pos:start="477:21" pos:end="489:21">

                    <expr_stmt pos:start="477:21" pos:end="477:82"><expr pos:start="477:21" pos:end="477:81"><name pos:start="477:21" pos:end="477:21">k</name> <operator pos:start="477:23" pos:end="477:23">=</operator> <ternary pos:start="477:25" pos:end="477:81"><condition pos:start="477:25" pos:end="477:31"><expr pos:start="477:25" pos:end="477:29"><name pos:start="477:25" pos:end="477:29">index</name></expr> ?</condition><then pos:start="477:33" pos:end="477:69"> <expr pos:start="477:33" pos:end="477:69"><operator pos:start="477:33" pos:end="477:33">(</operator><operator pos:start="477:34" pos:end="477:34">(</operator><name pos:start="477:35" pos:end="477:35">j</name><operator pos:start="477:36" pos:end="477:36">&amp;</operator><literal type="number" pos:start="477:37" pos:end="477:37">1</literal><operator pos:start="477:38" pos:end="477:38">)</operator> <operator pos:start="477:40" pos:end="477:40">+</operator> <literal type="number" pos:start="477:42" pos:end="477:42">2</literal><operator pos:start="477:43" pos:end="477:43">*</operator><operator pos:start="477:44" pos:end="477:44">(</operator><name pos:start="477:45" pos:end="477:45">i</name><operator pos:start="477:46" pos:end="477:46">&amp;</operator><literal type="number" pos:start="477:47" pos:end="477:47">1</literal><operator pos:start="477:48" pos:end="477:48">)</operator> <operator pos:start="477:50" pos:end="477:50">+</operator> <literal type="number" pos:start="477:52" pos:end="477:52">2</literal><operator pos:start="477:53" pos:end="477:53">*</operator><operator pos:start="477:54" pos:end="477:54">(</operator><name pos:start="477:55" pos:end="477:55">j</name><operator pos:start="477:56" pos:end="477:56">&amp;</operator><literal type="number" pos:start="477:57" pos:end="477:57">2</literal><operator pos:start="477:58" pos:end="477:58">)</operator> <operator pos:start="477:60" pos:end="477:60">+</operator> <literal type="number" pos:start="477:62" pos:end="477:62">4</literal><operator pos:start="477:63" pos:end="477:63">*</operator><operator pos:start="477:64" pos:end="477:64">(</operator><name pos:start="477:65" pos:end="477:65">i</name><operator pos:start="477:66" pos:end="477:66">&amp;</operator><literal type="number" pos:start="477:67" pos:end="477:67">2</literal><operator pos:start="477:68" pos:end="477:68">)</operator><operator pos:start="477:69" pos:end="477:69">)</operator></expr> </then><else pos:start="477:71" pos:end="477:81">: <expr pos:start="477:73" pos:end="477:81"><operator pos:start="477:73" pos:end="477:73">(</operator><literal type="number" pos:start="477:74" pos:end="477:74">4</literal><operator pos:start="477:75" pos:end="477:75">*</operator><name pos:start="477:76" pos:end="477:76">i</name> <operator pos:start="477:78" pos:end="477:78">+</operator> <name pos:start="477:80" pos:end="477:80">j</name><operator pos:start="477:81" pos:end="477:81">)</operator></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="479:21" pos:end="479:60"><expr pos:start="479:21" pos:end="479:59"><name pos:start="479:21" pos:end="479:55"><name pos:start="479:21" pos:end="479:21">h</name><operator pos:start="479:22" pos:end="479:23">-&gt;</operator><name pos:start="479:24" pos:end="479:43">non_zero_count_cache</name><index pos:start="479:44" pos:end="479:55">[ <expr pos:start="479:46" pos:end="479:53"><name pos:start="479:46" pos:end="479:53"><name pos:start="479:46" pos:end="479:50">scan8</name><index pos:start="479:51" pos:end="479:53">[<expr pos:start="479:52" pos:end="479:52"><name pos:start="479:52" pos:end="479:52">k</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="479:57" pos:end="479:57">=</operator> <literal type="number" pos:start="479:59" pos:end="479:59">1</literal></expr>;</expr_stmt>



                    <if_stmt pos:start="483:21" pos:end="489:21"><if pos:start="483:21" pos:end="489:21">if <condition pos:start="483:24" pos:end="483:77">(<expr pos:start="483:25" pos:end="483:76"><call pos:start="483:25" pos:end="483:76"><name pos:start="483:25" pos:end="483:41">svq3_decode_block</name><argument_list pos:start="483:42" pos:end="483:76">(<argument pos:start="483:43" pos:end="483:48"><expr pos:start="483:43" pos:end="483:48"><operator pos:start="483:43" pos:end="483:43">&amp;</operator><name pos:start="483:44" pos:end="483:48"><name pos:start="483:44" pos:end="483:44">s</name><operator pos:start="483:45" pos:end="483:46">-&gt;</operator><name pos:start="483:47" pos:end="483:48">gb</name></name></expr></argument>, <argument pos:start="483:51" pos:end="483:62"><expr pos:start="483:51" pos:end="483:62"><operator pos:start="483:51" pos:end="483:51">&amp;</operator><name pos:start="483:52" pos:end="483:62"><name pos:start="483:52" pos:end="483:52">h</name><operator pos:start="483:53" pos:end="483:54">-&gt;</operator><name pos:start="483:55" pos:end="483:56">mb</name><index pos:start="483:57" pos:end="483:62">[<expr pos:start="483:58" pos:end="483:61"><literal type="number" pos:start="483:58" pos:end="483:59">16</literal><operator pos:start="483:60" pos:end="483:60">*</operator><name pos:start="483:61" pos:end="483:61">k</name></expr>]</index></name></expr></argument>, <argument pos:start="483:65" pos:end="483:69"><expr pos:start="483:65" pos:end="483:69"><name pos:start="483:65" pos:end="483:69">index</name></expr></argument>, <argument pos:start="483:72" pos:end="483:75"><expr pos:start="483:72" pos:end="483:75"><name pos:start="483:72" pos:end="483:75">type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="483:78" pos:end="489:21">{<block_content pos:start="485:25" pos:end="487:34">

                        <expr_stmt pos:start="485:25" pos:end="485:89"><expr pos:start="485:25" pos:end="485:88"><call pos:start="485:25" pos:end="485:88"><name pos:start="485:25" pos:end="485:30">av_log</name><argument_list pos:start="485:31" pos:end="485:88">(<argument pos:start="485:32" pos:end="485:41"><expr pos:start="485:32" pos:end="485:41"><name pos:start="485:32" pos:end="485:41"><name pos:start="485:32" pos:end="485:32">h</name><operator pos:start="485:33" pos:end="485:34">-&gt;</operator><name pos:start="485:35" pos:end="485:35">s</name><operator pos:start="485:36" pos:end="485:36">.</operator><name pos:start="485:37" pos:end="485:41">avctx</name></name></expr></argument>, <argument pos:start="485:44" pos:end="485:55"><expr pos:start="485:44" pos:end="485:55"><name pos:start="485:44" pos:end="485:55">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="485:58" pos:end="485:87"><expr pos:start="485:58" pos:end="485:87"><literal type="string" pos:start="485:58" pos:end="485:87">"error while decoding block\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="487:25" pos:end="487:34">return <expr pos:start="487:32" pos:end="487:33"><operator pos:start="487:32" pos:end="487:32">-</operator><literal type="number" pos:start="487:33" pos:end="487:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="499:9" pos:end="541:9"><if pos:start="499:9" pos:end="541:9">if <condition pos:start="499:12" pos:end="499:25">(<expr pos:start="499:13" pos:end="499:24"><operator pos:start="499:13" pos:end="499:13">(</operator><name pos:start="499:14" pos:end="499:16">cbp</name> <operator pos:start="499:18" pos:end="499:18">&amp;</operator> <literal type="number" pos:start="499:20" pos:end="499:23">0x30</literal><operator pos:start="499:24" pos:end="499:24">)</operator></expr>)</condition> <block pos:start="499:27" pos:end="541:9">{<block_content pos:start="501:13" pos:end="539:13">

            <for pos:start="501:13" pos:end="511:13">for <control pos:start="501:17" pos:end="501:35">(<init pos:start="501:18" pos:end="501:23"><expr pos:start="501:18" pos:end="501:22"><name pos:start="501:18" pos:end="501:18">i</name> <operator pos:start="501:20" pos:end="501:20">=</operator> <literal type="number" pos:start="501:22" pos:end="501:22">1</literal></expr>;</init> <condition pos:start="501:25" pos:end="501:30"><expr pos:start="501:25" pos:end="501:29"><name pos:start="501:25" pos:end="501:25">i</name> <operator pos:start="501:27" pos:end="501:27">&lt;</operator> <literal type="number" pos:start="501:29" pos:end="501:29">3</literal></expr>;</condition> <incr pos:start="501:32" pos:end="501:34"><expr pos:start="501:32" pos:end="501:34"><operator pos:start="501:32" pos:end="501:33">++</operator><name pos:start="501:34" pos:end="501:34">i</name></expr></incr>)</control> <block pos:start="501:37" pos:end="511:13">{<block_content pos:start="503:15" pos:end="509:15">

              <if_stmt pos:start="503:15" pos:end="509:15"><if pos:start="503:15" pos:end="509:15">if <condition pos:start="503:18" pos:end="503:67">(<expr pos:start="503:19" pos:end="503:66"><call pos:start="503:19" pos:end="503:66"><name pos:start="503:19" pos:end="503:35">svq3_decode_block</name><argument_list pos:start="503:36" pos:end="503:66">(<argument pos:start="503:37" pos:end="503:42"><expr pos:start="503:37" pos:end="503:42"><operator pos:start="503:37" pos:end="503:37">&amp;</operator><name pos:start="503:38" pos:end="503:42"><name pos:start="503:38" pos:end="503:38">s</name><operator pos:start="503:39" pos:end="503:40">-&gt;</operator><name pos:start="503:41" pos:end="503:42">gb</name></name></expr></argument>, <argument pos:start="503:45" pos:end="503:59"><expr pos:start="503:45" pos:end="503:59"><operator pos:start="503:45" pos:end="503:45">&amp;</operator><name pos:start="503:46" pos:end="503:59"><name pos:start="503:46" pos:end="503:46">h</name><operator pos:start="503:47" pos:end="503:48">-&gt;</operator><name pos:start="503:49" pos:end="503:50">mb</name><index pos:start="503:51" pos:end="503:59">[<expr pos:start="503:52" pos:end="503:58"><literal type="number" pos:start="503:52" pos:end="503:53">16</literal><operator pos:start="503:54" pos:end="503:54">*</operator><literal type="number" pos:start="503:55" pos:end="503:56">16</literal><operator pos:start="503:57" pos:end="503:57">*</operator><name pos:start="503:58" pos:end="503:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="503:62" pos:end="503:62"><expr pos:start="503:62" pos:end="503:62"><literal type="number" pos:start="503:62" pos:end="503:62">0</literal></expr></argument>, <argument pos:start="503:65" pos:end="503:65"><expr pos:start="503:65" pos:end="503:65"><literal type="number" pos:start="503:65" pos:end="503:65">3</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="503:68" pos:end="509:15">{<block_content pos:start="505:17" pos:end="507:26">

                <expr_stmt pos:start="505:17" pos:end="505:91"><expr pos:start="505:17" pos:end="505:90"><call pos:start="505:17" pos:end="505:90"><name pos:start="505:17" pos:end="505:22">av_log</name><argument_list pos:start="505:23" pos:end="505:90">(<argument pos:start="505:24" pos:end="505:33"><expr pos:start="505:24" pos:end="505:33"><name pos:start="505:24" pos:end="505:33"><name pos:start="505:24" pos:end="505:24">h</name><operator pos:start="505:25" pos:end="505:26">-&gt;</operator><name pos:start="505:27" pos:end="505:27">s</name><operator pos:start="505:28" pos:end="505:28">.</operator><name pos:start="505:29" pos:end="505:33">avctx</name></name></expr></argument>, <argument pos:start="505:36" pos:end="505:47"><expr pos:start="505:36" pos:end="505:47"><name pos:start="505:36" pos:end="505:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="505:50" pos:end="505:89"><expr pos:start="505:50" pos:end="505:89"><literal type="string" pos:start="505:50" pos:end="505:89">"error while decoding chroma dc block\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="507:17" pos:end="507:26">return <expr pos:start="507:24" pos:end="507:25"><operator pos:start="507:24" pos:end="507:24">-</operator><literal type="number" pos:start="507:25" pos:end="507:25">1</literal></expr>;</return>

              </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>



            <if_stmt pos:start="515:13" pos:end="539:13"><if pos:start="515:13" pos:end="539:13">if <condition pos:start="515:16" pos:end="515:29">(<expr pos:start="515:17" pos:end="515:28"><operator pos:start="515:17" pos:end="515:17">(</operator><name pos:start="515:18" pos:end="515:20">cbp</name> <operator pos:start="515:22" pos:end="515:22">&amp;</operator> <literal type="number" pos:start="515:24" pos:end="515:27">0x20</literal><operator pos:start="515:28" pos:end="515:28">)</operator></expr>)</condition> <block pos:start="515:31" pos:end="539:13">{<block_content pos:start="517:17" pos:end="537:17">

                <for pos:start="517:17" pos:end="537:17">for <control pos:start="517:21" pos:end="517:39">(<init pos:start="517:22" pos:end="517:27"><expr pos:start="517:22" pos:end="517:26"><name pos:start="517:22" pos:end="517:22">i</name> <operator pos:start="517:24" pos:end="517:24">=</operator> <literal type="number" pos:start="517:26" pos:end="517:26">1</literal></expr>;</init> <condition pos:start="517:29" pos:end="517:34"><expr pos:start="517:29" pos:end="517:33"><name pos:start="517:29" pos:end="517:29">i</name> <operator pos:start="517:31" pos:end="517:31">&lt;</operator> <literal type="number" pos:start="517:33" pos:end="517:33">3</literal></expr>;</condition> <incr pos:start="517:36" pos:end="517:38"><expr pos:start="517:36" pos:end="517:38"><name pos:start="517:36" pos:end="517:36">i</name><operator pos:start="517:37" pos:end="517:38">++</operator></expr></incr>)</control> <block pos:start="517:41" pos:end="537:17">{<block_content pos:start="519:21" pos:end="535:21">

                    <for pos:start="519:21" pos:end="535:21">for <control pos:start="519:25" pos:end="519:43">(<init pos:start="519:26" pos:end="519:31"><expr pos:start="519:26" pos:end="519:30"><name pos:start="519:26" pos:end="519:26">j</name> <operator pos:start="519:28" pos:end="519:28">=</operator> <literal type="number" pos:start="519:30" pos:end="519:30">0</literal></expr>;</init> <condition pos:start="519:33" pos:end="519:38"><expr pos:start="519:33" pos:end="519:37"><name pos:start="519:33" pos:end="519:33">j</name> <operator pos:start="519:35" pos:end="519:35">&lt;</operator> <literal type="number" pos:start="519:37" pos:end="519:37">4</literal></expr>;</condition> <incr pos:start="519:40" pos:end="519:42"><expr pos:start="519:40" pos:end="519:42"><name pos:start="519:40" pos:end="519:40">j</name><operator pos:start="519:41" pos:end="519:42">++</operator></expr></incr>)</control> <block pos:start="519:45" pos:end="535:21">{<block_content pos:start="521:25" pos:end="533:25">

                        <expr_stmt pos:start="521:25" pos:end="521:37"><expr pos:start="521:25" pos:end="521:36"><name pos:start="521:25" pos:end="521:25">k</name> <operator pos:start="521:27" pos:end="521:27">=</operator> <literal type="number" pos:start="521:29" pos:end="521:30">16</literal><operator pos:start="521:31" pos:end="521:31">*</operator><name pos:start="521:32" pos:end="521:32">i</name> <operator pos:start="521:34" pos:end="521:34">+</operator> <name pos:start="521:36" pos:end="521:36">j</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="523:25" pos:end="523:64"><expr pos:start="523:25" pos:end="523:63"><name pos:start="523:25" pos:end="523:59"><name pos:start="523:25" pos:end="523:25">h</name><operator pos:start="523:26" pos:end="523:27">-&gt;</operator><name pos:start="523:28" pos:end="523:47">non_zero_count_cache</name><index pos:start="523:48" pos:end="523:59">[ <expr pos:start="523:50" pos:end="523:57"><name pos:start="523:50" pos:end="523:57"><name pos:start="523:50" pos:end="523:54">scan8</name><index pos:start="523:55" pos:end="523:57">[<expr pos:start="523:56" pos:end="523:56"><name pos:start="523:56" pos:end="523:56">k</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="523:61" pos:end="523:61">=</operator> <literal type="number" pos:start="523:63" pos:end="523:63">1</literal></expr>;</expr_stmt>



                        <if_stmt pos:start="527:25" pos:end="533:25"><if pos:start="527:25" pos:end="533:25">if <condition pos:start="527:28" pos:end="527:74">(<expr pos:start="527:29" pos:end="527:73"><call pos:start="527:29" pos:end="527:73"><name pos:start="527:29" pos:end="527:45">svq3_decode_block</name><argument_list pos:start="527:46" pos:end="527:73">(<argument pos:start="527:47" pos:end="527:52"><expr pos:start="527:47" pos:end="527:52"><operator pos:start="527:47" pos:end="527:47">&amp;</operator><name pos:start="527:48" pos:end="527:52"><name pos:start="527:48" pos:end="527:48">s</name><operator pos:start="527:49" pos:end="527:50">-&gt;</operator><name pos:start="527:51" pos:end="527:52">gb</name></name></expr></argument>, <argument pos:start="527:55" pos:end="527:66"><expr pos:start="527:55" pos:end="527:66"><operator pos:start="527:55" pos:end="527:55">&amp;</operator><name pos:start="527:56" pos:end="527:66"><name pos:start="527:56" pos:end="527:56">h</name><operator pos:start="527:57" pos:end="527:58">-&gt;</operator><name pos:start="527:59" pos:end="527:60">mb</name><index pos:start="527:61" pos:end="527:66">[<expr pos:start="527:62" pos:end="527:65"><literal type="number" pos:start="527:62" pos:end="527:63">16</literal><operator pos:start="527:64" pos:end="527:64">*</operator><name pos:start="527:65" pos:end="527:65">k</name></expr>]</index></name></expr></argument>, <argument pos:start="527:69" pos:end="527:69"><expr pos:start="527:69" pos:end="527:69"><literal type="number" pos:start="527:69" pos:end="527:69">1</literal></expr></argument>, <argument pos:start="527:72" pos:end="527:72"><expr pos:start="527:72" pos:end="527:72"><literal type="number" pos:start="527:72" pos:end="527:72">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="527:75" pos:end="533:25">{<block_content pos:start="529:29" pos:end="531:38">

                            <expr_stmt pos:start="529:29" pos:end="529:103"><expr pos:start="529:29" pos:end="529:102"><call pos:start="529:29" pos:end="529:102"><name pos:start="529:29" pos:end="529:34">av_log</name><argument_list pos:start="529:35" pos:end="529:102">(<argument pos:start="529:36" pos:end="529:45"><expr pos:start="529:36" pos:end="529:45"><name pos:start="529:36" pos:end="529:45"><name pos:start="529:36" pos:end="529:36">h</name><operator pos:start="529:37" pos:end="529:38">-&gt;</operator><name pos:start="529:39" pos:end="529:39">s</name><operator pos:start="529:40" pos:end="529:40">.</operator><name pos:start="529:41" pos:end="529:45">avctx</name></name></expr></argument>, <argument pos:start="529:48" pos:end="529:59"><expr pos:start="529:48" pos:end="529:59"><name pos:start="529:48" pos:end="529:59">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="529:62" pos:end="529:101"><expr pos:start="529:62" pos:end="529:101"><literal type="string" pos:start="529:62" pos:end="529:101">"error while decoding chroma ac block\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="531:29" pos:end="531:38">return <expr pos:start="531:36" pos:end="531:37"><operator pos:start="531:36" pos:end="531:36">-</operator><literal type="number" pos:start="531:37" pos:end="531:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="547:5" pos:end="547:16"><expr pos:start="547:5" pos:end="547:15"><name pos:start="547:5" pos:end="547:10"><name pos:start="547:5" pos:end="547:5">h</name><operator pos:start="547:6" pos:end="547:7">-&gt;</operator><name pos:start="547:8" pos:end="547:10">cbp</name></name><operator pos:start="547:11" pos:end="547:11">=</operator> <name pos:start="547:13" pos:end="547:15">cbp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="549:5" pos:end="549:50"><expr pos:start="549:5" pos:end="549:49"><name pos:start="549:5" pos:end="549:39"><name pos:start="549:5" pos:end="549:5">s</name><operator pos:start="549:6" pos:end="549:7">-&gt;</operator><name pos:start="549:8" pos:end="549:22">current_picture</name><operator pos:start="549:23" pos:end="549:23">.</operator><name pos:start="549:24" pos:end="549:24">f</name><operator pos:start="549:25" pos:end="549:25">.</operator><name pos:start="549:26" pos:end="549:32">mb_type</name><index pos:start="549:33" pos:end="549:39">[<expr pos:start="549:34" pos:end="549:38"><name pos:start="549:34" pos:end="549:38">mb_xy</name></expr>]</index></name> <operator pos:start="549:41" pos:end="549:41">=</operator> <name pos:start="549:43" pos:end="549:49">mb_type</name></expr>;</expr_stmt>



    <if_stmt pos:start="553:5" pos:end="557:5"><if pos:start="553:5" pos:end="557:5">if <condition pos:start="553:8" pos:end="553:26">(<expr pos:start="553:9" pos:end="553:25"><call pos:start="553:9" pos:end="553:25"><name pos:start="553:9" pos:end="553:16">IS_INTRA</name><argument_list pos:start="553:17" pos:end="553:25">(<argument pos:start="553:18" pos:end="553:24"><expr pos:start="553:18" pos:end="553:24"><name pos:start="553:18" pos:end="553:24">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="553:28" pos:end="557:5">{<block_content pos:start="555:9" pos:end="555:75">

        <expr_stmt pos:start="555:9" pos:end="555:75"><expr pos:start="555:9" pos:end="555:74"><name pos:start="555:9" pos:end="555:27"><name pos:start="555:9" pos:end="555:9">h</name><operator pos:start="555:10" pos:end="555:11">-&gt;</operator><name pos:start="555:12" pos:end="555:27">chroma_pred_mode</name></name> <operator pos:start="555:29" pos:end="555:29">=</operator> <call pos:start="555:31" pos:end="555:74"><name pos:start="555:31" pos:end="555:59">ff_h264_check_intra_pred_mode</name><argument_list pos:start="555:60" pos:end="555:74">(<argument pos:start="555:61" pos:end="555:61"><expr pos:start="555:61" pos:end="555:61"><name pos:start="555:61" pos:end="555:61">h</name></expr></argument>, <argument pos:start="555:64" pos:end="555:73"><expr pos:start="555:64" pos:end="555:73"><name pos:start="555:64" pos:end="555:73">DC_PRED8x8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="561:5" pos:end="561:13">return <expr pos:start="561:12" pos:end="561:12"><literal type="number" pos:start="561:12" pos:end="561:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
