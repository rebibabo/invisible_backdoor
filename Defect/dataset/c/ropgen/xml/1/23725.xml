<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23725.c" pos:tabs="8"><function pos:start="1:1" pos:end="349:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">open_slave</name><parameter_list pos:start="1:22" pos:end="1:77">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:42"><name pos:start="1:23" pos:end="1:37">AVFormatContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">avf</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:48">char</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">slave</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:76"><decl pos:start="1:58" pos:end="1:76"><type pos:start="1:58" pos:end="1:76"><name pos:start="1:58" pos:end="1:65">TeeSlave</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:76">tee_slave</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="349:1">{<block_content pos:start="5:5" pos:end="347:15">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AVDictionary</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:25">options</name> <init pos:start="7:27" pos:end="7:32">= <expr pos:start="7:29" pos:end="7:32"><name pos:start="7:29" pos:end="7:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVDictionaryEntry</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:28">entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:18">filename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:16">format</name> <init pos:start="13:18" pos:end="13:23">= <expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">NULL</name></expr></init></decl>, <decl pos:start="13:26" pos:end="13:39"><type ref="prev" pos:start="13:5" pos:end="13:10"><modifier pos:start="13:26" pos:end="13:26">*</modifier></type><name pos:start="13:27" pos:end="13:32">select</name> <init pos:start="13:34" pos:end="13:39">= <expr pos:start="13:36" pos:end="13:39"><name pos:start="13:36" pos:end="13:39">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:19">AVFormatContext</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:25">avf2</name> <init pos:start="15:27" pos:end="15:32">= <expr pos:start="15:29" pos:end="15:32"><name pos:start="15:29" pos:end="15:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">AVStream</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:16">st</name></decl>, <decl pos:start="17:19" pos:end="17:22"><type ref="prev" pos:start="17:5" pos:end="17:14"><modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:22">st2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:20">stream_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:15">fullret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:96"><decl pos:start="23:5" pos:end="23:26"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:8">char</name> <modifier pos:start="23:10" pos:end="23:10">*</modifier></type><name pos:start="23:11" pos:end="23:19">subselect</name> <init pos:start="23:21" pos:end="23:26">= <expr pos:start="23:23" pos:end="23:26"><name pos:start="23:23" pos:end="23:26">NULL</name></expr></init></decl>, <decl pos:start="23:29" pos:end="23:50"><type ref="prev" pos:start="23:5" pos:end="23:10"><modifier pos:start="23:29" pos:end="23:29">*</modifier></type><name pos:start="23:30" pos:end="23:43">next_subselect</name> <init pos:start="23:45" pos:end="23:50">= <expr pos:start="23:47" pos:end="23:50"><name pos:start="23:47" pos:end="23:50">NULL</name></expr></init></decl>, <decl pos:start="23:53" pos:end="23:75"><type ref="prev" pos:start="23:5" pos:end="23:10"><modifier pos:start="23:53" pos:end="23:53">*</modifier></type><name pos:start="23:54" pos:end="23:68">first_subselect</name> <init pos:start="23:70" pos:end="23:75">= <expr pos:start="23:72" pos:end="23:75"><name pos:start="23:72" pos:end="23:75">NULL</name></expr></init></decl>, <decl pos:start="23:78" pos:end="23:95"><type ref="prev" pos:start="23:5" pos:end="23:10"><modifier pos:start="23:78" pos:end="23:78">*</modifier></type><name pos:start="23:79" pos:end="23:88">tmp_select</name> <init pos:start="23:90" pos:end="23:95">= <expr pos:start="23:92" pos:end="23:95"><name pos:start="23:92" pos:end="23:95">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="46:0"><if pos:start="27:5" pos:end="46:0">if <condition pos:start="27:8" pos:end="27:73">(<expr pos:start="27:9" pos:end="27:72"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:12">ret</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:67"><name pos:start="27:16" pos:end="27:34">parse_slave_options</name><argument_list pos:start="27:35" pos:end="27:67">(<argument pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:38">avf</name></expr></argument>, <argument pos:start="27:41" pos:end="27:45"><expr pos:start="27:41" pos:end="27:45"><name pos:start="27:41" pos:end="27:45">slave</name></expr></argument>, <argument pos:start="27:48" pos:end="27:55"><expr pos:start="27:48" pos:end="27:55"><operator pos:start="27:48" pos:end="27:48">&amp;</operator><name pos:start="27:49" pos:end="27:55">options</name></expr></argument>, <argument pos:start="27:58" pos:end="27:66"><expr pos:start="27:58" pos:end="27:66"><operator pos:start="27:58" pos:end="27:58">&amp;</operator><name pos:start="27:59" pos:end="27:66">filename</name></expr></argument>)</argument_list></call><operator pos:start="27:68" pos:end="27:68">)</operator> <operator pos:start="27:70" pos:end="27:70">&lt;</operator> <literal type="number" pos:start="27:72" pos:end="27:72">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="46:0"><block_content pos:start="29:9" pos:end="46:0">

        <return pos:start="29:9" pos:end="46:0">return <expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



<cpp:define pos:start="33:1" pos:end="45:15">#<cpp:directive pos:start="33:2" pos:end="33:7">define</cpp:directive> <cpp:macro pos:start="33:9" pos:end="33:35"><name pos:start="33:9" pos:end="33:20">STEAL_OPTION</name><parameter_list pos:start="33:21" pos:end="33:35">(<parameter pos:start="33:22" pos:end="33:27"><type pos:start="33:22" pos:end="33:27"><name pos:start="33:22" pos:end="33:27">option</name></type></parameter>, <parameter pos:start="33:30" pos:end="33:34"><type pos:start="33:30" pos:end="33:34"><name pos:start="33:30" pos:end="33:34">field</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="33:37" pos:end="45:15">do {                                \

        if ((entry = av_dict_get(options, option, NULL, 0))) {          \

            field = entry-&gt;value;                                       \

            entry-&gt;value = NULL; <comment type="block" pos:start="39:34" pos:end="39:66">/* prevent it from being freed */</comment>      \

            av_dict_set(&amp;options, option, NULL, 0);                     \

        }                                                               \

    } while (0)</cpp:value></cpp:define>



    <expr_stmt pos:start="49:5" pos:end="49:30"><expr pos:start="49:5" pos:end="49:29"><call pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:16">STEAL_OPTION</name><argument_list pos:start="49:17" pos:end="49:29">(<argument pos:start="49:18" pos:end="49:20"><expr pos:start="49:18" pos:end="49:20"><literal type="string" pos:start="49:18" pos:end="49:20">"f"</literal></expr></argument>, <argument pos:start="49:23" pos:end="49:28"><expr pos:start="49:23" pos:end="49:28"><name pos:start="49:23" pos:end="49:28">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:35"><expr pos:start="51:5" pos:end="51:34"><call pos:start="51:5" pos:end="51:34"><name pos:start="51:5" pos:end="51:16">STEAL_OPTION</name><argument_list pos:start="51:17" pos:end="51:34">(<argument pos:start="51:18" pos:end="51:25"><expr pos:start="51:18" pos:end="51:25"><literal type="string" pos:start="51:18" pos:end="51:25">"select"</literal></expr></argument>, <argument pos:start="51:28" pos:end="51:33"><expr pos:start="51:28" pos:end="51:33"><name pos:start="51:28" pos:end="51:33">select</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:72"><expr pos:start="55:5" pos:end="55:71"><name pos:start="55:5" pos:end="55:7">ret</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="55:71"><name pos:start="55:11" pos:end="55:40">avformat_alloc_output_context2</name><argument_list pos:start="55:41" pos:end="55:71">(<argument pos:start="55:42" pos:end="55:46"><expr pos:start="55:42" pos:end="55:46"><operator pos:start="55:42" pos:end="55:42">&amp;</operator><name pos:start="55:43" pos:end="55:46">avf2</name></expr></argument>, <argument pos:start="55:49" pos:end="55:52"><expr pos:start="55:49" pos:end="55:52"><name pos:start="55:49" pos:end="55:52">NULL</name></expr></argument>, <argument pos:start="55:55" pos:end="55:60"><expr pos:start="55:55" pos:end="55:60"><name pos:start="55:55" pos:end="55:60">format</name></expr></argument>, <argument pos:start="55:63" pos:end="55:70"><expr pos:start="55:63" pos:end="55:70"><name pos:start="55:63" pos:end="55:70">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="59:17"><if pos:start="57:5" pos:end="59:17">if <condition pos:start="57:8" pos:end="57:16">(<expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">&lt;</operator> <literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:17"><block_content pos:start="59:9" pos:end="59:17">

        <goto pos:start="59:9" pos:end="59:17">goto <name pos:start="59:14" pos:end="59:16">end</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:52"><expr pos:start="61:5" pos:end="61:51"><call pos:start="61:5" pos:end="61:51"><name pos:start="61:5" pos:end="61:16">av_dict_copy</name><argument_list pos:start="61:17" pos:end="61:51">(<argument pos:start="61:18" pos:end="61:32"><expr pos:start="61:18" pos:end="61:32"><operator pos:start="61:18" pos:end="61:18">&amp;</operator><name pos:start="61:19" pos:end="61:32"><name pos:start="61:19" pos:end="61:22">avf2</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:32">metadata</name></name></expr></argument>, <argument pos:start="61:35" pos:end="61:47"><expr pos:start="61:35" pos:end="61:47"><name pos:start="61:35" pos:end="61:47"><name pos:start="61:35" pos:end="61:37">avf</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:47">metadata</name></name></expr></argument>, <argument pos:start="61:50" pos:end="61:50"><expr pos:start="61:50" pos:end="61:50"><literal type="number" pos:start="61:50" pos:end="61:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:33"><expr pos:start="63:5" pos:end="63:32"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:8">avf2</name><operator pos:start="63:9" pos:end="63:10">-&gt;</operator><name pos:start="63:11" pos:end="63:16">opaque</name></name>   <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:32"><name pos:start="63:22" pos:end="63:24">avf</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:32">opaque</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:34"><expr pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:8">avf2</name><operator pos:start="65:9" pos:end="65:10">-&gt;</operator><name pos:start="65:11" pos:end="65:17">io_open</name></name>  <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:33"><name pos:start="65:22" pos:end="65:24">avf</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:33">io_open</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:35"><expr pos:start="67:5" pos:end="67:34"><name pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:8">avf2</name><operator pos:start="67:9" pos:end="67:10">-&gt;</operator><name pos:start="67:11" pos:end="67:18">io_close</name></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <name pos:start="67:22" pos:end="67:34"><name pos:start="67:22" pos:end="67:24">avf</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:34">io_close</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:87"><expr pos:start="71:5" pos:end="71:86"><name pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:13">tee_slave</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:25">stream_map</name></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <call pos:start="71:29" pos:end="71:86"><name pos:start="71:29" pos:end="71:37">av_calloc</name><argument_list pos:start="71:38" pos:end="71:86">(<argument pos:start="71:39" pos:end="71:53"><expr pos:start="71:39" pos:end="71:53"><name pos:start="71:39" pos:end="71:53"><name pos:start="71:39" pos:end="71:41">avf</name><operator pos:start="71:42" pos:end="71:43">-&gt;</operator><name pos:start="71:44" pos:end="71:53">nb_streams</name></name></expr></argument>, <argument pos:start="71:56" pos:end="71:85"><expr pos:start="71:56" pos:end="71:85"><sizeof pos:start="71:56" pos:end="71:85">sizeof<argument_list pos:start="71:62" pos:end="71:85">(<argument pos:start="71:63" pos:end="71:84"><expr pos:start="71:63" pos:end="71:84"><operator pos:start="71:63" pos:end="71:63">*</operator><name pos:start="71:64" pos:end="71:84"><name pos:start="71:64" pos:end="71:72">tee_slave</name><operator pos:start="71:73" pos:end="71:74">-&gt;</operator><name pos:start="71:75" pos:end="71:84">stream_map</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:31">(<expr pos:start="73:9" pos:end="73:30"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:30"><name pos:start="73:10" pos:end="73:18">tee_slave</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:30">stream_map</name></name></expr>)</condition> <block pos:start="73:33" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:17">

        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:29"><name pos:start="75:15" pos:end="75:21">AVERROR</name><argument_list pos:start="75:22" pos:end="75:29">(<argument pos:start="75:23" pos:end="75:28"><expr pos:start="75:23" pos:end="75:28"><name pos:start="75:23" pos:end="75:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="77:9" pos:end="77:17">goto <name pos:start="77:14" pos:end="77:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:21"><expr pos:start="83:5" pos:end="83:20"><name pos:start="83:5" pos:end="83:16">stream_count</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <literal type="number" pos:start="83:20" pos:end="83:20">0</literal></expr>;</expr_stmt>

    <for pos:start="85:5" pos:end="187:5">for <control pos:start="85:9" pos:end="85:41">(<init pos:start="85:10" pos:end="85:15"><expr pos:start="85:10" pos:end="85:14"><name pos:start="85:10" pos:end="85:10">i</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <literal type="number" pos:start="85:14" pos:end="85:14">0</literal></expr>;</init> <condition pos:start="85:17" pos:end="85:36"><expr pos:start="85:17" pos:end="85:35"><name pos:start="85:17" pos:end="85:17">i</name> <operator pos:start="85:19" pos:end="85:19">&lt;</operator> <name pos:start="85:21" pos:end="85:35"><name pos:start="85:21" pos:end="85:23">avf</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:35">nb_streams</name></name></expr>;</condition> <incr pos:start="85:38" pos:end="85:40"><expr pos:start="85:38" pos:end="85:40"><name pos:start="85:38" pos:end="85:38">i</name><operator pos:start="85:39" pos:end="85:40">++</operator></expr></incr>)</control> <block pos:start="85:43" pos:end="187:5">{<block_content pos:start="87:9" pos:end="185:21">

        <expr_stmt pos:start="87:9" pos:end="87:29"><expr pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:10">st</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <name pos:start="87:14" pos:end="87:28"><name pos:start="87:14" pos:end="87:16">avf</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:25">streams</name><index pos:start="87:26" pos:end="87:28">[<expr pos:start="87:27" pos:end="87:27"><name pos:start="87:27" pos:end="87:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="149:9"><if pos:start="89:9" pos:end="149:9">if <condition pos:start="89:12" pos:end="89:19">(<expr pos:start="89:13" pos:end="89:18"><name pos:start="89:13" pos:end="89:18">select</name></expr>)</condition> <block pos:start="89:21" pos:end="149:9">{<block_content pos:start="91:13" pos:end="147:13">

            <expr_stmt pos:start="91:13" pos:end="91:43"><expr pos:start="91:13" pos:end="91:42"><name pos:start="91:13" pos:end="91:22">tmp_select</name> <operator pos:start="91:24" pos:end="91:24">=</operator> <call pos:start="91:26" pos:end="91:42"><name pos:start="91:26" pos:end="91:34">av_strdup</name><argument_list pos:start="91:35" pos:end="91:42">(<argument pos:start="91:36" pos:end="91:41"><expr pos:start="91:36" pos:end="91:41"><name pos:start="91:36" pos:end="91:41">select</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="91:46" pos:end="91:105">// av_strtok is destructive so we regenerate it in each loop</comment>

            <if_stmt pos:start="93:13" pos:end="99:13"><if pos:start="93:13" pos:end="99:13">if <condition pos:start="93:16" pos:end="93:28">(<expr pos:start="93:17" pos:end="93:27"><operator pos:start="93:17" pos:end="93:17">!</operator><name pos:start="93:18" pos:end="93:27">tmp_select</name></expr>)</condition> <block pos:start="93:30" pos:end="99:13">{<block_content pos:start="95:17" pos:end="97:25">

                <expr_stmt pos:start="95:17" pos:end="95:38"><expr pos:start="95:17" pos:end="95:37"><name pos:start="95:17" pos:end="95:19">ret</name> <operator pos:start="95:21" pos:end="95:21">=</operator> <call pos:start="95:23" pos:end="95:37"><name pos:start="95:23" pos:end="95:29">AVERROR</name><argument_list pos:start="95:30" pos:end="95:37">(<argument pos:start="95:31" pos:end="95:36"><expr pos:start="95:31" pos:end="95:36"><name pos:start="95:31" pos:end="95:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="97:17" pos:end="97:25">goto <name pos:start="97:22" pos:end="97:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:24"><expr pos:start="101:13" pos:end="101:23"><name pos:start="101:13" pos:end="101:19">fullret</name> <operator pos:start="101:21" pos:end="101:21">=</operator> <literal type="number" pos:start="101:23" pos:end="101:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:41"><expr pos:start="103:13" pos:end="103:40"><name pos:start="103:13" pos:end="103:27">first_subselect</name> <operator pos:start="103:29" pos:end="103:29">=</operator> <name pos:start="103:31" pos:end="103:40">tmp_select</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:34"><expr pos:start="105:13" pos:end="105:33"><name pos:start="105:13" pos:end="105:26">next_subselect</name> <operator pos:start="105:28" pos:end="105:28">=</operator> <name pos:start="105:30" pos:end="105:33">NULL</name></expr>;</expr_stmt>

            <while pos:start="107:13" pos:end="135:13">while <condition pos:start="107:19" pos:end="107:93">(<expr pos:start="107:20" pos:end="107:92"><name pos:start="107:20" pos:end="107:28">subselect</name> <operator pos:start="107:30" pos:end="107:30">=</operator> <call pos:start="107:32" pos:end="107:92"><name pos:start="107:32" pos:end="107:40">av_strtok</name><argument_list pos:start="107:41" pos:end="107:92">(<argument pos:start="107:42" pos:end="107:56"><expr pos:start="107:42" pos:end="107:56"><name pos:start="107:42" pos:end="107:56">first_subselect</name></expr></argument>, <argument pos:start="107:59" pos:end="107:74"><expr pos:start="107:59" pos:end="107:74"><name pos:start="107:59" pos:end="107:74">slave_select_sep</name></expr></argument>, <argument pos:start="107:77" pos:end="107:91"><expr pos:start="107:77" pos:end="107:91"><operator pos:start="107:77" pos:end="107:77">&amp;</operator><name pos:start="107:78" pos:end="107:91">next_subselect</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:95" pos:end="135:13">{<block_content pos:start="109:17" pos:end="133:17">

                <expr_stmt pos:start="109:17" pos:end="109:39"><expr pos:start="109:17" pos:end="109:38"><name pos:start="109:17" pos:end="109:31">first_subselect</name> <operator pos:start="109:33" pos:end="109:33">=</operator> <name pos:start="109:35" pos:end="109:38">NULL</name></expr>;</expr_stmt>



                <expr_stmt pos:start="113:17" pos:end="113:87"><expr pos:start="113:17" pos:end="113:86"><name pos:start="113:17" pos:end="113:19">ret</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <call pos:start="113:23" pos:end="113:86"><name pos:start="113:23" pos:end="113:53">avformat_match_stream_specifier</name><argument_list pos:start="113:54" pos:end="113:86">(<argument pos:start="113:55" pos:end="113:57"><expr pos:start="113:55" pos:end="113:57"><name pos:start="113:55" pos:end="113:57">avf</name></expr></argument>, <argument pos:start="113:60" pos:end="113:74"><expr pos:start="113:60" pos:end="113:74"><name pos:start="113:60" pos:end="113:74"><name pos:start="113:60" pos:end="113:62">avf</name><operator pos:start="113:63" pos:end="113:64">-&gt;</operator><name pos:start="113:65" pos:end="113:71">streams</name><index pos:start="113:72" pos:end="113:74">[<expr pos:start="113:73" pos:end="113:73"><name pos:start="113:73" pos:end="113:73">i</name></expr>]</index></name></expr></argument>, <argument pos:start="113:77" pos:end="113:85"><expr pos:start="113:77" pos:end="113:85"><name pos:start="113:77" pos:end="113:85">subselect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="115:17" pos:end="125:17"><if pos:start="115:17" pos:end="125:17">if <condition pos:start="115:20" pos:end="115:28">(<expr pos:start="115:21" pos:end="115:27"><name pos:start="115:21" pos:end="115:23">ret</name> <operator pos:start="115:25" pos:end="115:25">&lt;</operator> <literal type="number" pos:start="115:27" pos:end="115:27">0</literal></expr>)</condition> <block pos:start="115:30" pos:end="125:17">{<block_content pos:start="117:21" pos:end="123:29">

                    <expr_stmt pos:start="117:21" pos:end="121:45"><expr pos:start="117:21" pos:end="121:44"><call pos:start="117:21" pos:end="121:44"><name pos:start="117:21" pos:end="117:26">av_log</name><argument_list pos:start="117:27" pos:end="121:44">(<argument pos:start="117:28" pos:end="117:30"><expr pos:start="117:28" pos:end="117:30"><name pos:start="117:28" pos:end="117:30">avf</name></expr></argument>, <argument pos:start="117:33" pos:end="117:44"><expr pos:start="117:33" pos:end="117:44"><name pos:start="117:33" pos:end="117:44">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="119:28" pos:end="119:76"><expr pos:start="119:28" pos:end="119:76"><literal type="string" pos:start="119:28" pos:end="119:76">"Invalid stream specifier '%s' for output '%s'\n"</literal></expr></argument>,

                           <argument pos:start="121:28" pos:end="121:36"><expr pos:start="121:28" pos:end="121:36"><name pos:start="121:28" pos:end="121:36">subselect</name></expr></argument>, <argument pos:start="121:39" pos:end="121:43"><expr pos:start="121:39" pos:end="121:43"><name pos:start="121:39" pos:end="121:43">slave</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="123:21" pos:end="123:29">goto <name pos:start="123:26" pos:end="123:28">end</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="127:17" pos:end="133:17"><if pos:start="127:17" pos:end="133:17">if <condition pos:start="127:20" pos:end="127:29">(<expr pos:start="127:21" pos:end="127:28"><name pos:start="127:21" pos:end="127:23">ret</name> <operator pos:start="127:25" pos:end="127:26">!=</operator> <literal type="number" pos:start="127:28" pos:end="127:28">0</literal></expr>)</condition> <block pos:start="127:31" pos:end="133:17">{<block_content pos:start="129:21" pos:end="131:26">

                    <expr_stmt pos:start="129:21" pos:end="129:32"><expr pos:start="129:21" pos:end="129:31"><name pos:start="129:21" pos:end="129:27">fullret</name> <operator pos:start="129:29" pos:end="129:29">=</operator> <literal type="number" pos:start="129:31" pos:end="129:31">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="129:34" pos:end="129:41">// match</comment>

                    <break pos:start="131:21" pos:end="131:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="137:13" pos:end="137:34"><expr pos:start="137:13" pos:end="137:33"><call pos:start="137:13" pos:end="137:33"><name pos:start="137:13" pos:end="137:20">av_freep</name><argument_list pos:start="137:21" pos:end="137:33">(<argument pos:start="137:22" pos:end="137:32"><expr pos:start="137:22" pos:end="137:32"><operator pos:start="137:22" pos:end="137:22">&amp;</operator><name pos:start="137:23" pos:end="137:32">tmp_select</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="141:13" pos:end="147:13"><if pos:start="141:13" pos:end="147:13">if <condition pos:start="141:16" pos:end="141:29">(<expr pos:start="141:17" pos:end="141:28"><name pos:start="141:17" pos:end="141:23">fullret</name> <operator pos:start="141:25" pos:end="141:26">==</operator> <literal type="number" pos:start="141:28" pos:end="141:28">0</literal></expr>)</condition> <block pos:start="141:31" pos:end="147:13">{<block_content pos:start="143:17" pos:end="145:25"> <comment type="block" pos:start="141:33" pos:end="141:46">/* no match */</comment>

                <expr_stmt pos:start="143:17" pos:end="143:46"><expr pos:start="143:17" pos:end="143:45"><name pos:start="143:17" pos:end="143:40"><name pos:start="143:17" pos:end="143:25">tee_slave</name><operator pos:start="143:26" pos:end="143:27">-&gt;</operator><name pos:start="143:28" pos:end="143:37">stream_map</name><index pos:start="143:38" pos:end="143:40">[<expr pos:start="143:39" pos:end="143:39"><name pos:start="143:39" pos:end="143:39">i</name></expr>]</index></name> <operator pos:start="143:42" pos:end="143:42">=</operator> <operator pos:start="143:44" pos:end="143:44">-</operator><literal type="number" pos:start="143:45" pos:end="143:45">1</literal></expr>;</expr_stmt>

                <continue pos:start="145:17" pos:end="145:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:50"><expr pos:start="151:9" pos:end="151:49"><name pos:start="151:9" pos:end="151:32"><name pos:start="151:9" pos:end="151:17">tee_slave</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:29">stream_map</name><index pos:start="151:30" pos:end="151:32">[<expr pos:start="151:31" pos:end="151:31"><name pos:start="151:31" pos:end="151:31">i</name></expr>]</index></name> <operator pos:start="151:34" pos:end="151:34">=</operator> <name pos:start="151:36" pos:end="151:47">stream_count</name><operator pos:start="151:48" pos:end="151:49">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="155:9" pos:end="161:9"><if pos:start="155:9" pos:end="161:9">if <condition pos:start="155:12" pos:end="155:53">(<expr pos:start="155:13" pos:end="155:52"><operator pos:start="155:13" pos:end="155:13">!</operator><operator pos:start="155:14" pos:end="155:14">(</operator><name pos:start="155:15" pos:end="155:17">st2</name> <operator pos:start="155:19" pos:end="155:19">=</operator> <call pos:start="155:21" pos:end="155:51"><name pos:start="155:21" pos:end="155:39">avformat_new_stream</name><argument_list pos:start="155:40" pos:end="155:51">(<argument pos:start="155:41" pos:end="155:44"><expr pos:start="155:41" pos:end="155:44"><name pos:start="155:41" pos:end="155:44">avf2</name></expr></argument>, <argument pos:start="155:47" pos:end="155:50"><expr pos:start="155:47" pos:end="155:50"><name pos:start="155:47" pos:end="155:50">NULL</name></expr></argument>)</argument_list></call><operator pos:start="155:52" pos:end="155:52">)</operator></expr>)</condition> <block pos:start="155:55" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:21">

            <expr_stmt pos:start="157:13" pos:end="157:34"><expr pos:start="157:13" pos:end="157:33"><name pos:start="157:13" pos:end="157:15">ret</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <call pos:start="157:19" pos:end="157:33"><name pos:start="157:19" pos:end="157:25">AVERROR</name><argument_list pos:start="157:26" pos:end="157:33">(<argument pos:start="157:27" pos:end="157:32"><expr pos:start="157:27" pos:end="157:32"><name pos:start="157:27" pos:end="157:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="159:13" pos:end="159:21">goto <name pos:start="159:18" pos:end="159:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:25"><expr pos:start="163:9" pos:end="163:24"><name pos:start="163:9" pos:end="163:15"><name pos:start="163:9" pos:end="163:11">st2</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:15">id</name></name> <operator pos:start="163:17" pos:end="163:17">=</operator> <name pos:start="163:19" pos:end="163:24"><name pos:start="163:19" pos:end="163:20">st</name><operator pos:start="163:21" pos:end="163:22">-&gt;</operator><name pos:start="163:23" pos:end="163:24">id</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:52"><expr pos:start="165:9" pos:end="165:51"><name pos:start="165:9" pos:end="165:25"><name pos:start="165:9" pos:end="165:11">st2</name><operator pos:start="165:12" pos:end="165:13">-&gt;</operator><name pos:start="165:14" pos:end="165:25">r_frame_rate</name></name>        <operator pos:start="165:34" pos:end="165:34">=</operator> <name pos:start="165:36" pos:end="165:51"><name pos:start="165:36" pos:end="165:37">st</name><operator pos:start="165:38" pos:end="165:39">-&gt;</operator><name pos:start="165:40" pos:end="165:51">r_frame_rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:49"><expr pos:start="167:9" pos:end="167:48"><name pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:11">st2</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:22">time_base</name></name>           <operator pos:start="167:34" pos:end="167:34">=</operator> <name pos:start="167:36" pos:end="167:48"><name pos:start="167:36" pos:end="167:37">st</name><operator pos:start="167:38" pos:end="167:39">-&gt;</operator><name pos:start="167:40" pos:end="167:48">time_base</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:50"><expr pos:start="169:9" pos:end="169:49"><name pos:start="169:9" pos:end="169:23"><name pos:start="169:9" pos:end="169:11">st2</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:23">start_time</name></name>          <operator pos:start="169:34" pos:end="169:34">=</operator> <name pos:start="169:36" pos:end="169:49"><name pos:start="169:36" pos:end="169:37">st</name><operator pos:start="169:38" pos:end="169:39">-&gt;</operator><name pos:start="169:40" pos:end="169:49">start_time</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:48"><expr pos:start="171:9" pos:end="171:47"><name pos:start="171:9" pos:end="171:21"><name pos:start="171:9" pos:end="171:11">st2</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:21">duration</name></name>            <operator pos:start="171:34" pos:end="171:34">=</operator> <name pos:start="171:36" pos:end="171:47"><name pos:start="171:36" pos:end="171:37">st</name><operator pos:start="171:38" pos:end="171:39">-&gt;</operator><name pos:start="171:40" pos:end="171:47">duration</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:49"><expr pos:start="173:9" pos:end="173:48"><name pos:start="173:9" pos:end="173:22"><name pos:start="173:9" pos:end="173:11">st2</name><operator pos:start="173:12" pos:end="173:13">-&gt;</operator><name pos:start="173:14" pos:end="173:22">nb_frames</name></name>           <operator pos:start="173:34" pos:end="173:34">=</operator> <name pos:start="173:36" pos:end="173:48"><name pos:start="173:36" pos:end="173:37">st</name><operator pos:start="173:38" pos:end="173:39">-&gt;</operator><name pos:start="173:40" pos:end="173:48">nb_frames</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:51"><expr pos:start="175:9" pos:end="175:50"><name pos:start="175:9" pos:end="175:24"><name pos:start="175:9" pos:end="175:11">st2</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:24">disposition</name></name>         <operator pos:start="175:34" pos:end="175:34">=</operator> <name pos:start="175:36" pos:end="175:50"><name pos:start="175:36" pos:end="175:37">st</name><operator pos:start="175:38" pos:end="175:39">-&gt;</operator><name pos:start="175:40" pos:end="175:50">disposition</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:59"><expr pos:start="177:9" pos:end="177:58"><name pos:start="177:9" pos:end="177:32"><name pos:start="177:9" pos:end="177:11">st2</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:32">sample_aspect_ratio</name></name> <operator pos:start="177:34" pos:end="177:34">=</operator> <name pos:start="177:36" pos:end="177:58"><name pos:start="177:36" pos:end="177:37">st</name><operator pos:start="177:38" pos:end="177:39">-&gt;</operator><name pos:start="177:40" pos:end="177:58">sample_aspect_ratio</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:54"><expr pos:start="179:9" pos:end="179:53"><name pos:start="179:9" pos:end="179:27"><name pos:start="179:9" pos:end="179:11">st2</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:27">avg_frame_rate</name></name>      <operator pos:start="179:34" pos:end="179:34">=</operator> <name pos:start="179:36" pos:end="179:53"><name pos:start="179:36" pos:end="179:37">st</name><operator pos:start="179:38" pos:end="179:39">-&gt;</operator><name pos:start="179:40" pos:end="179:53">avg_frame_rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:54"><expr pos:start="181:9" pos:end="181:53"><call pos:start="181:9" pos:end="181:53"><name pos:start="181:9" pos:end="181:20">av_dict_copy</name><argument_list pos:start="181:21" pos:end="181:53">(<argument pos:start="181:22" pos:end="181:35"><expr pos:start="181:22" pos:end="181:35"><operator pos:start="181:22" pos:end="181:22">&amp;</operator><name pos:start="181:23" pos:end="181:35"><name pos:start="181:23" pos:end="181:25">st2</name><operator pos:start="181:26" pos:end="181:27">-&gt;</operator><name pos:start="181:28" pos:end="181:35">metadata</name></name></expr></argument>, <argument pos:start="181:38" pos:end="181:49"><expr pos:start="181:38" pos:end="181:49"><name pos:start="181:38" pos:end="181:49"><name pos:start="181:38" pos:end="181:39">st</name><operator pos:start="181:40" pos:end="181:41">-&gt;</operator><name pos:start="181:42" pos:end="181:49">metadata</name></name></expr></argument>, <argument pos:start="181:52" pos:end="181:52"><expr pos:start="181:52" pos:end="181:52"><literal type="number" pos:start="181:52" pos:end="181:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="183:9" pos:end="185:21"><if pos:start="183:9" pos:end="185:21">if <condition pos:start="183:12" pos:end="183:77">(<expr pos:start="183:13" pos:end="183:76"><operator pos:start="183:13" pos:end="183:13">(</operator><name pos:start="183:14" pos:end="183:16">ret</name> <operator pos:start="183:18" pos:end="183:18">=</operator> <call pos:start="183:20" pos:end="183:71"><name pos:start="183:20" pos:end="183:42">avcodec_parameters_copy</name><argument_list pos:start="183:43" pos:end="183:71">(<argument pos:start="183:44" pos:end="183:56"><expr pos:start="183:44" pos:end="183:56"><name pos:start="183:44" pos:end="183:56"><name pos:start="183:44" pos:end="183:46">st2</name><operator pos:start="183:47" pos:end="183:48">-&gt;</operator><name pos:start="183:49" pos:end="183:56">codecpar</name></name></expr></argument>, <argument pos:start="183:59" pos:end="183:70"><expr pos:start="183:59" pos:end="183:70"><name pos:start="183:59" pos:end="183:70"><name pos:start="183:59" pos:end="183:60">st</name><operator pos:start="183:61" pos:end="183:62">-&gt;</operator><name pos:start="183:63" pos:end="183:70">codecpar</name></name></expr></argument>)</argument_list></call><operator pos:start="183:72" pos:end="183:72">)</operator> <operator pos:start="183:74" pos:end="183:74">&lt;</operator> <literal type="number" pos:start="183:76" pos:end="183:76">0</literal></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:21"><block_content pos:start="185:13" pos:end="185:21">

            <goto pos:start="185:13" pos:end="185:21">goto <name pos:start="185:18" pos:end="185:20">end</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="191:5" pos:end="203:5"><if pos:start="191:5" pos:end="203:5">if <condition pos:start="191:8" pos:end="191:47">(<expr pos:start="191:9" pos:end="191:46"><operator pos:start="191:9" pos:end="191:9">!</operator><operator pos:start="191:10" pos:end="191:10">(</operator><name pos:start="191:11" pos:end="191:30"><name pos:start="191:11" pos:end="191:14">avf2</name><operator pos:start="191:15" pos:end="191:16">-&gt;</operator><name pos:start="191:17" pos:end="191:23">oformat</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:30">flags</name></name> <operator pos:start="191:32" pos:end="191:32">&amp;</operator> <name pos:start="191:34" pos:end="191:45">AVFMT_NOFILE</name><operator pos:start="191:46" pos:end="191:46">)</operator></expr>)</condition> <block pos:start="191:49" pos:end="203:5">{<block_content pos:start="193:9" pos:end="201:9">

        <if_stmt pos:start="193:9" pos:end="201:9"><if pos:start="193:9" pos:end="201:9">if <condition pos:start="193:12" pos:end="193:88">(<expr pos:start="193:13" pos:end="193:87"><operator pos:start="193:13" pos:end="193:13">(</operator><name pos:start="193:14" pos:end="193:16">ret</name> <operator pos:start="193:18" pos:end="193:18">=</operator> <call pos:start="193:20" pos:end="193:82"><name pos:start="193:20" pos:end="193:32"><name pos:start="193:20" pos:end="193:23">avf2</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:32">io_open</name></name><argument_list pos:start="193:33" pos:end="193:82">(<argument pos:start="193:34" pos:end="193:37"><expr pos:start="193:34" pos:end="193:37"><name pos:start="193:34" pos:end="193:37">avf2</name></expr></argument>, <argument pos:start="193:40" pos:end="193:48"><expr pos:start="193:40" pos:end="193:48"><operator pos:start="193:40" pos:end="193:40">&amp;</operator><name pos:start="193:41" pos:end="193:48"><name pos:start="193:41" pos:end="193:44">avf2</name><operator pos:start="193:45" pos:end="193:46">-&gt;</operator><name pos:start="193:47" pos:end="193:48">pb</name></name></expr></argument>, <argument pos:start="193:51" pos:end="193:58"><expr pos:start="193:51" pos:end="193:58"><name pos:start="193:51" pos:end="193:58">filename</name></expr></argument>, <argument pos:start="193:61" pos:end="193:75"><expr pos:start="193:61" pos:end="193:75"><name pos:start="193:61" pos:end="193:75">AVIO_FLAG_WRITE</name></expr></argument>, <argument pos:start="193:78" pos:end="193:81"><expr pos:start="193:78" pos:end="193:81"><name pos:start="193:78" pos:end="193:81">NULL</name></expr></argument>)</argument_list></call><operator pos:start="193:83" pos:end="193:83">)</operator> <operator pos:start="193:85" pos:end="193:85">&lt;</operator> <literal type="number" pos:start="193:87" pos:end="193:87">0</literal></expr>)</condition> <block pos:start="193:90" pos:end="201:9">{<block_content pos:start="195:13" pos:end="199:21">

            <expr_stmt pos:start="195:13" pos:end="197:43"><expr pos:start="195:13" pos:end="197:42"><call pos:start="195:13" pos:end="197:42"><name pos:start="195:13" pos:end="195:18">av_log</name><argument_list pos:start="195:19" pos:end="197:42">(<argument pos:start="195:20" pos:end="195:22"><expr pos:start="195:20" pos:end="195:22"><name pos:start="195:20" pos:end="195:22">avf</name></expr></argument>, <argument pos:start="195:25" pos:end="195:36"><expr pos:start="195:25" pos:end="195:36"><name pos:start="195:25" pos:end="195:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="195:39" pos:end="195:71"><expr pos:start="195:39" pos:end="195:71"><literal type="string" pos:start="195:39" pos:end="195:71">"Slave '%s': error opening: %s\n"</literal></expr></argument>,

                   <argument pos:start="197:20" pos:end="197:24"><expr pos:start="197:20" pos:end="197:24"><name pos:start="197:20" pos:end="197:24">slave</name></expr></argument>, <argument pos:start="197:27" pos:end="197:41"><expr pos:start="197:27" pos:end="197:41"><call pos:start="197:27" pos:end="197:41"><name pos:start="197:27" pos:end="197:36">av_err2str</name><argument_list pos:start="197:37" pos:end="197:41">(<argument pos:start="197:38" pos:end="197:40"><expr pos:start="197:38" pos:end="197:40"><name pos:start="197:38" pos:end="197:40">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="199:13" pos:end="199:21">goto <name pos:start="199:18" pos:end="199:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="207:5" pos:end="215:5"><if pos:start="207:5" pos:end="215:5">if <condition pos:start="207:8" pos:end="207:58">(<expr pos:start="207:9" pos:end="207:57"><operator pos:start="207:9" pos:end="207:9">(</operator><name pos:start="207:10" pos:end="207:12">ret</name> <operator pos:start="207:14" pos:end="207:14">=</operator> <call pos:start="207:16" pos:end="207:52"><name pos:start="207:16" pos:end="207:36">avformat_write_header</name><argument_list pos:start="207:37" pos:end="207:52">(<argument pos:start="207:38" pos:end="207:41"><expr pos:start="207:38" pos:end="207:41"><name pos:start="207:38" pos:end="207:41">avf2</name></expr></argument>, <argument pos:start="207:44" pos:end="207:51"><expr pos:start="207:44" pos:end="207:51"><operator pos:start="207:44" pos:end="207:44">&amp;</operator><name pos:start="207:45" pos:end="207:51">options</name></expr></argument>)</argument_list></call><operator pos:start="207:53" pos:end="207:53">)</operator> <operator pos:start="207:55" pos:end="207:55">&lt;</operator> <literal type="number" pos:start="207:57" pos:end="207:57">0</literal></expr>)</condition> <block pos:start="207:60" pos:end="215:5">{<block_content pos:start="209:9" pos:end="213:17">

        <expr_stmt pos:start="209:9" pos:end="211:39"><expr pos:start="209:9" pos:end="211:38"><call pos:start="209:9" pos:end="211:38"><name pos:start="209:9" pos:end="209:14">av_log</name><argument_list pos:start="209:15" pos:end="211:38">(<argument pos:start="209:16" pos:end="209:18"><expr pos:start="209:16" pos:end="209:18"><name pos:start="209:16" pos:end="209:18">avf</name></expr></argument>, <argument pos:start="209:21" pos:end="209:32"><expr pos:start="209:21" pos:end="209:32"><name pos:start="209:21" pos:end="209:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="209:35" pos:end="209:74"><expr pos:start="209:35" pos:end="209:74"><literal type="string" pos:start="209:35" pos:end="209:74">"Slave '%s': error writing header: %s\n"</literal></expr></argument>,

               <argument pos:start="211:16" pos:end="211:20"><expr pos:start="211:16" pos:end="211:20"><name pos:start="211:16" pos:end="211:20">slave</name></expr></argument>, <argument pos:start="211:23" pos:end="211:37"><expr pos:start="211:23" pos:end="211:37"><call pos:start="211:23" pos:end="211:37"><name pos:start="211:23" pos:end="211:32">av_err2str</name><argument_list pos:start="211:33" pos:end="211:37">(<argument pos:start="211:34" pos:end="211:36"><expr pos:start="211:34" pos:end="211:36"><name pos:start="211:34" pos:end="211:36">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="213:9" pos:end="213:17">goto <name pos:start="213:14" pos:end="213:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:26"><expr pos:start="219:5" pos:end="219:25"><name pos:start="219:5" pos:end="219:18"><name pos:start="219:5" pos:end="219:13">tee_slave</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:18">avf</name></name> <operator pos:start="219:20" pos:end="219:20">=</operator> <name pos:start="219:22" pos:end="219:25">avf2</name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:68"><expr pos:start="221:5" pos:end="221:67"><name pos:start="221:5" pos:end="221:19"><name pos:start="221:5" pos:end="221:13">tee_slave</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:19">bsfs</name></name> <operator pos:start="221:21" pos:end="221:21">=</operator> <call pos:start="221:23" pos:end="221:67"><name pos:start="221:23" pos:end="221:31">av_calloc</name><argument_list pos:start="221:32" pos:end="221:67">(<argument pos:start="221:33" pos:end="221:48"><expr pos:start="221:33" pos:end="221:48"><name pos:start="221:33" pos:end="221:48"><name pos:start="221:33" pos:end="221:36">avf2</name><operator pos:start="221:37" pos:end="221:38">-&gt;</operator><name pos:start="221:39" pos:end="221:48">nb_streams</name></name></expr></argument>, <argument pos:start="221:51" pos:end="221:66"><expr pos:start="221:51" pos:end="221:66"><sizeof pos:start="221:51" pos:end="221:66">sizeof<argument_list pos:start="221:57" pos:end="221:66">(<argument pos:start="221:58" pos:end="221:65"><expr pos:start="221:58" pos:end="221:65"><name pos:start="221:58" pos:end="221:65">TeeSlave</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="223:5" pos:end="229:5"><if pos:start="223:5" pos:end="229:5">if <condition pos:start="223:8" pos:end="223:25">(<expr pos:start="223:9" pos:end="223:24"><operator pos:start="223:9" pos:end="223:9">!</operator><name pos:start="223:10" pos:end="223:24"><name pos:start="223:10" pos:end="223:18">tee_slave</name><operator pos:start="223:19" pos:end="223:20">-&gt;</operator><name pos:start="223:21" pos:end="223:24">bsfs</name></name></expr>)</condition> <block pos:start="223:27" pos:end="229:5">{<block_content pos:start="225:9" pos:end="227:17">

        <expr_stmt pos:start="225:9" pos:end="225:30"><expr pos:start="225:9" pos:end="225:29"><name pos:start="225:9" pos:end="225:11">ret</name> <operator pos:start="225:13" pos:end="225:13">=</operator> <call pos:start="225:15" pos:end="225:29"><name pos:start="225:15" pos:end="225:21">AVERROR</name><argument_list pos:start="225:22" pos:end="225:29">(<argument pos:start="225:23" pos:end="225:28"><expr pos:start="225:23" pos:end="225:28"><name pos:start="225:23" pos:end="225:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="227:9" pos:end="227:17">goto <name pos:start="227:14" pos:end="227:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="233:5" pos:end="233:17"><expr pos:start="233:5" pos:end="233:16"><name pos:start="233:5" pos:end="233:9">entry</name> <operator pos:start="233:11" pos:end="233:11">=</operator> <name pos:start="233:13" pos:end="233:16">NULL</name></expr>;</expr_stmt>

    <while pos:start="235:5" pos:end="317:5">while <condition pos:start="235:11" pos:end="235:77">(<expr pos:start="235:12" pos:end="235:76"><name pos:start="235:12" pos:end="235:16">entry</name> <operator pos:start="235:18" pos:end="235:18">=</operator> <call pos:start="235:20" pos:end="235:76"><name pos:start="235:20" pos:end="235:30">av_dict_get</name><argument_list pos:start="235:31" pos:end="235:76">(<argument pos:start="235:32" pos:end="235:38"><expr pos:start="235:32" pos:end="235:38"><name pos:start="235:32" pos:end="235:38">options</name></expr></argument>, <argument pos:start="235:41" pos:end="235:46"><expr pos:start="235:41" pos:end="235:46"><literal type="string" pos:start="235:41" pos:end="235:46">"bsfs"</literal></expr></argument>, <argument pos:start="235:49" pos:end="235:52"><expr pos:start="235:49" pos:end="235:52"><name pos:start="235:49" pos:end="235:52">NULL</name></expr></argument>, <argument pos:start="235:55" pos:end="235:75"><expr pos:start="235:55" pos:end="235:75"><name pos:start="235:55" pos:end="235:75">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="235:79" pos:end="317:5">{<block_content pos:start="237:9" pos:end="315:51">

        <decl_stmt pos:start="237:9" pos:end="237:55"><decl pos:start="237:9" pos:end="237:54"><type pos:start="237:9" pos:end="237:20"><specifier pos:start="237:9" pos:end="237:13">const</specifier> <name pos:start="237:15" pos:end="237:18">char</name> <modifier pos:start="237:20" pos:end="237:20">*</modifier></type><name pos:start="237:21" pos:end="237:24">spec</name> <init pos:start="237:26" pos:end="237:54">= <expr pos:start="237:28" pos:end="237:54"><name pos:start="237:28" pos:end="237:37"><name pos:start="237:28" pos:end="237:32">entry</name><operator pos:start="237:33" pos:end="237:34">-&gt;</operator><name pos:start="237:35" pos:end="237:37">key</name></name> <operator pos:start="237:39" pos:end="237:39">+</operator> <call pos:start="237:41" pos:end="237:54"><name pos:start="237:41" pos:end="237:46">strlen</name><argument_list pos:start="237:47" pos:end="237:54">(<argument pos:start="237:48" pos:end="237:53"><expr pos:start="237:48" pos:end="237:53"><literal type="string" pos:start="237:48" pos:end="237:53">"bsfs"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="239:9" pos:end="255:9"><if pos:start="239:9" pos:end="255:9">if <condition pos:start="239:12" pos:end="239:18">(<expr pos:start="239:13" pos:end="239:17"><operator pos:start="239:13" pos:end="239:13">*</operator><name pos:start="239:14" pos:end="239:17">spec</name></expr>)</condition> <block pos:start="239:20" pos:end="255:9">{<block_content pos:start="241:13" pos:end="253:19">

            <if_stmt pos:start="241:13" pos:end="251:13"><if pos:start="241:13" pos:end="251:13">if <condition pos:start="241:16" pos:end="241:55">(<expr pos:start="241:17" pos:end="241:54"><call pos:start="241:17" pos:end="241:49"><name pos:start="241:17" pos:end="241:22">strspn</name><argument_list pos:start="241:23" pos:end="241:49">(<argument pos:start="241:24" pos:end="241:27"><expr pos:start="241:24" pos:end="241:27"><name pos:start="241:24" pos:end="241:27">spec</name></expr></argument>, <argument pos:start="241:30" pos:end="241:48"><expr pos:start="241:30" pos:end="241:48"><name pos:start="241:30" pos:end="241:48">slave_bsfs_spec_sep</name></expr></argument>)</argument_list></call> <operator pos:start="241:51" pos:end="241:52">!=</operator> <literal type="number" pos:start="241:54" pos:end="241:54">1</literal></expr>)</condition> <block pos:start="241:57" pos:end="251:13">{<block_content pos:start="243:17" pos:end="249:39">

                <expr_stmt pos:start="243:17" pos:end="247:80"><expr pos:start="243:17" pos:end="247:79"><call pos:start="243:17" pos:end="247:79"><name pos:start="243:17" pos:end="243:22">av_log</name><argument_list pos:start="243:23" pos:end="247:79">(<argument pos:start="243:24" pos:end="243:26"><expr pos:start="243:24" pos:end="243:26"><name pos:start="243:24" pos:end="243:26">avf</name></expr></argument>, <argument pos:start="243:29" pos:end="243:40"><expr pos:start="243:29" pos:end="243:40"><name pos:start="243:29" pos:end="243:40">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="245:24" pos:end="247:38"><expr pos:start="245:24" pos:end="247:38"><literal type="string" pos:start="245:24" pos:end="245:87">"Specifier separator in '%s' is '%c', but only characters '%s' "</literal>

                       <literal type="string" pos:start="247:24" pos:end="247:38">"are allowed\n"</literal></expr></argument>, <argument pos:start="247:41" pos:end="247:50"><expr pos:start="247:41" pos:end="247:50"><name pos:start="247:41" pos:end="247:50"><name pos:start="247:41" pos:end="247:45">entry</name><operator pos:start="247:46" pos:end="247:47">-&gt;</operator><name pos:start="247:48" pos:end="247:50">key</name></name></expr></argument>, <argument pos:start="247:53" pos:end="247:57"><expr pos:start="247:53" pos:end="247:57"><operator pos:start="247:53" pos:end="247:53">*</operator><name pos:start="247:54" pos:end="247:57">spec</name></expr></argument>, <argument pos:start="247:60" pos:end="247:78"><expr pos:start="247:60" pos:end="247:78"><name pos:start="247:60" pos:end="247:78">slave_bsfs_spec_sep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="249:17" pos:end="249:39">return <expr pos:start="249:24" pos:end="249:38"><call pos:start="249:24" pos:end="249:38"><name pos:start="249:24" pos:end="249:30">AVERROR</name><argument_list pos:start="249:31" pos:end="249:38">(<argument pos:start="249:32" pos:end="249:37"><expr pos:start="249:32" pos:end="249:37"><name pos:start="249:32" pos:end="249:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:19"><expr pos:start="253:13" pos:end="253:18"><name pos:start="253:13" pos:end="253:16">spec</name><operator pos:start="253:17" pos:end="253:18">++</operator></expr>;</expr_stmt> <comment type="block" pos:start="253:21" pos:end="253:43">/* consume separator */</comment>

        </block_content>}</block></if></if_stmt>



        <for pos:start="259:9" pos:end="311:9">for <control pos:start="259:13" pos:end="259:46">(<init pos:start="259:14" pos:end="259:19"><expr pos:start="259:14" pos:end="259:18"><name pos:start="259:14" pos:end="259:14">i</name> <operator pos:start="259:16" pos:end="259:16">=</operator> <literal type="number" pos:start="259:18" pos:end="259:18">0</literal></expr>;</init> <condition pos:start="259:21" pos:end="259:41"><expr pos:start="259:21" pos:end="259:40"><name pos:start="259:21" pos:end="259:21">i</name> <operator pos:start="259:23" pos:end="259:23">&lt;</operator> <name pos:start="259:25" pos:end="259:40"><name pos:start="259:25" pos:end="259:28">avf2</name><operator pos:start="259:29" pos:end="259:30">-&gt;</operator><name pos:start="259:31" pos:end="259:40">nb_streams</name></name></expr>;</condition> <incr pos:start="259:43" pos:end="259:45"><expr pos:start="259:43" pos:end="259:45"><name pos:start="259:43" pos:end="259:43">i</name><operator pos:start="259:44" pos:end="259:45">++</operator></expr></incr>)</control> <block pos:start="259:48" pos:end="311:9">{<block_content pos:start="261:13" pos:end="309:13">

            <expr_stmt pos:start="261:13" pos:end="261:80"><expr pos:start="261:13" pos:end="261:79"><name pos:start="261:13" pos:end="261:15">ret</name> <operator pos:start="261:17" pos:end="261:17">=</operator> <call pos:start="261:19" pos:end="261:79"><name pos:start="261:19" pos:end="261:49">avformat_match_stream_specifier</name><argument_list pos:start="261:50" pos:end="261:79">(<argument pos:start="261:51" pos:end="261:54"><expr pos:start="261:51" pos:end="261:54"><name pos:start="261:51" pos:end="261:54">avf2</name></expr></argument>, <argument pos:start="261:57" pos:end="261:72"><expr pos:start="261:57" pos:end="261:72"><name pos:start="261:57" pos:end="261:72"><name pos:start="261:57" pos:end="261:60">avf2</name><operator pos:start="261:61" pos:end="261:62">-&gt;</operator><name pos:start="261:63" pos:end="261:69">streams</name><index pos:start="261:70" pos:end="261:72">[<expr pos:start="261:71" pos:end="261:71"><name pos:start="261:71" pos:end="261:71">i</name></expr>]</index></name></expr></argument>, <argument pos:start="261:75" pos:end="261:78"><expr pos:start="261:75" pos:end="261:78"><name pos:start="261:75" pos:end="261:78">spec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="263:13" pos:end="273:13"><if pos:start="263:13" pos:end="273:13">if <condition pos:start="263:16" pos:end="263:24">(<expr pos:start="263:17" pos:end="263:23"><name pos:start="263:17" pos:end="263:19">ret</name> <operator pos:start="263:21" pos:end="263:21">&lt;</operator> <literal type="number" pos:start="263:23" pos:end="263:23">0</literal></expr>)</condition> <block pos:start="263:26" pos:end="273:13">{<block_content pos:start="265:17" pos:end="271:25">

                <expr_stmt pos:start="265:17" pos:end="269:68"><expr pos:start="265:17" pos:end="269:67"><call pos:start="265:17" pos:end="269:67"><name pos:start="265:17" pos:end="265:22">av_log</name><argument_list pos:start="265:23" pos:end="269:67">(<argument pos:start="265:24" pos:end="265:26"><expr pos:start="265:24" pos:end="265:26"><name pos:start="265:24" pos:end="265:26">avf</name></expr></argument>, <argument pos:start="265:29" pos:end="265:40"><expr pos:start="265:29" pos:end="265:40"><name pos:start="265:29" pos:end="265:40">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="267:24" pos:end="269:38"><expr pos:start="267:24" pos:end="269:38"><literal type="string" pos:start="267:24" pos:end="267:85">"Invalid stream specifier '%s' in bsfs option '%s' for slave "</literal>

                       <literal type="string" pos:start="269:24" pos:end="269:38">"output '%s'\n"</literal></expr></argument>, <argument pos:start="269:41" pos:end="269:44"><expr pos:start="269:41" pos:end="269:44"><name pos:start="269:41" pos:end="269:44">spec</name></expr></argument>, <argument pos:start="269:47" pos:end="269:56"><expr pos:start="269:47" pos:end="269:56"><name pos:start="269:47" pos:end="269:56"><name pos:start="269:47" pos:end="269:51">entry</name><operator pos:start="269:52" pos:end="269:53">-&gt;</operator><name pos:start="269:54" pos:end="269:56">key</name></name></expr></argument>, <argument pos:start="269:59" pos:end="269:66"><expr pos:start="269:59" pos:end="269:66"><name pos:start="269:59" pos:end="269:66">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="271:17" pos:end="271:25">goto <name pos:start="271:22" pos:end="271:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="277:13" pos:end="309:13"><if pos:start="277:13" pos:end="309:13">if <condition pos:start="277:16" pos:end="277:24">(<expr pos:start="277:17" pos:end="277:23"><name pos:start="277:17" pos:end="277:19">ret</name> <operator pos:start="277:21" pos:end="277:21">&gt;</operator> <literal type="number" pos:start="277:23" pos:end="277:23">0</literal></expr>)</condition> <block pos:start="277:26" pos:end="309:13">{<block_content pos:start="279:17" pos:end="307:17">

                <expr_stmt pos:start="279:17" pos:end="281:73"><expr pos:start="279:17" pos:end="281:72"><call pos:start="279:17" pos:end="281:72"><name pos:start="279:17" pos:end="279:22">av_log</name><argument_list pos:start="279:23" pos:end="281:72">(<argument pos:start="279:24" pos:end="279:26"><expr pos:start="279:24" pos:end="279:26"><name pos:start="279:24" pos:end="279:26">avf</name></expr></argument>, <argument pos:start="279:29" pos:end="279:40"><expr pos:start="279:29" pos:end="279:40"><name pos:start="279:29" pos:end="279:40">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="279:43" pos:end="281:38"><expr pos:start="279:43" pos:end="281:38"><literal type="string" pos:start="279:43" pos:end="279:87">"spec:%s bsfs:%s matches stream %d of slave "</literal>

                       <literal type="string" pos:start="281:24" pos:end="281:38">"output '%s'\n"</literal></expr></argument>, <argument pos:start="281:41" pos:end="281:44"><expr pos:start="281:41" pos:end="281:44"><name pos:start="281:41" pos:end="281:44">spec</name></expr></argument>, <argument pos:start="281:47" pos:end="281:58"><expr pos:start="281:47" pos:end="281:58"><name pos:start="281:47" pos:end="281:58"><name pos:start="281:47" pos:end="281:51">entry</name><operator pos:start="281:52" pos:end="281:53">-&gt;</operator><name pos:start="281:54" pos:end="281:58">value</name></name></expr></argument>, <argument pos:start="281:61" pos:end="281:61"><expr pos:start="281:61" pos:end="281:61"><name pos:start="281:61" pos:end="281:61">i</name></expr></argument>, <argument pos:start="281:64" pos:end="281:71"><expr pos:start="281:64" pos:end="281:71"><name pos:start="281:64" pos:end="281:71">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="283:17" pos:end="293:17"><if pos:start="283:17" pos:end="293:17">if <condition pos:start="283:20" pos:end="283:39">(<expr pos:start="283:21" pos:end="283:38"><name pos:start="283:21" pos:end="283:38"><name pos:start="283:21" pos:end="283:29">tee_slave</name><operator pos:start="283:30" pos:end="283:31">-&gt;</operator><name pos:start="283:32" pos:end="283:35">bsfs</name><index pos:start="283:36" pos:end="283:38">[<expr pos:start="283:37" pos:end="283:37"><name pos:start="283:37" pos:end="283:37">i</name></expr>]</index></name></expr>)</condition> <block pos:start="283:41" pos:end="293:17">{<block_content pos:start="285:21" pos:end="291:29">

                    <expr_stmt pos:start="285:21" pos:end="289:82"><expr pos:start="285:21" pos:end="289:81"><call pos:start="285:21" pos:end="289:81"><name pos:start="285:21" pos:end="285:26">av_log</name><argument_list pos:start="285:27" pos:end="289:81">(<argument pos:start="285:28" pos:end="285:30"><expr pos:start="285:28" pos:end="285:30"><name pos:start="285:28" pos:end="285:30">avf</name></expr></argument>, <argument pos:start="285:33" pos:end="285:46"><expr pos:start="285:33" pos:end="285:46"><name pos:start="285:33" pos:end="285:46">AV_LOG_WARNING</name></expr></argument>,

                           <argument pos:start="287:28" pos:end="289:67"><expr pos:start="287:28" pos:end="289:67"><literal type="string" pos:start="287:28" pos:end="287:91">"Duplicate bsfs specification associated to stream %d of slave "</literal>

                           <literal type="string" pos:start="289:28" pos:end="289:67">"output '%s', filters will be ignored\n"</literal></expr></argument>, <argument pos:start="289:70" pos:end="289:70"><expr pos:start="289:70" pos:end="289:70"><name pos:start="289:70" pos:end="289:70">i</name></expr></argument>, <argument pos:start="289:73" pos:end="289:80"><expr pos:start="289:73" pos:end="289:80"><name pos:start="289:73" pos:end="289:80">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <continue pos:start="291:21" pos:end="291:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="295:17" pos:end="295:73"><expr pos:start="295:17" pos:end="295:72"><name pos:start="295:17" pos:end="295:19">ret</name> <operator pos:start="295:21" pos:end="295:21">=</operator> <call pos:start="295:23" pos:end="295:72"><name pos:start="295:23" pos:end="295:32">parse_bsfs</name><argument_list pos:start="295:33" pos:end="295:72">(<argument pos:start="295:34" pos:end="295:36"><expr pos:start="295:34" pos:end="295:36"><name pos:start="295:34" pos:end="295:36">avf</name></expr></argument>, <argument pos:start="295:39" pos:end="295:50"><expr pos:start="295:39" pos:end="295:50"><name pos:start="295:39" pos:end="295:50"><name pos:start="295:39" pos:end="295:43">entry</name><operator pos:start="295:44" pos:end="295:45">-&gt;</operator><name pos:start="295:46" pos:end="295:50">value</name></name></expr></argument>, <argument pos:start="295:53" pos:end="295:71"><expr pos:start="295:53" pos:end="295:71"><operator pos:start="295:53" pos:end="295:53">&amp;</operator><name pos:start="295:54" pos:end="295:71"><name pos:start="295:54" pos:end="295:62">tee_slave</name><operator pos:start="295:63" pos:end="295:64">-&gt;</operator><name pos:start="295:65" pos:end="295:68">bsfs</name><index pos:start="295:69" pos:end="295:71">[<expr pos:start="295:70" pos:end="295:70"><name pos:start="295:70" pos:end="295:70">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="297:17" pos:end="307:17"><if pos:start="297:17" pos:end="307:17">if <condition pos:start="297:20" pos:end="297:28">(<expr pos:start="297:21" pos:end="297:27"><name pos:start="297:21" pos:end="297:23">ret</name> <operator pos:start="297:25" pos:end="297:25">&lt;</operator> <literal type="number" pos:start="297:27" pos:end="297:27">0</literal></expr>)</condition> <block pos:start="297:30" pos:end="307:17">{<block_content pos:start="299:21" pos:end="305:29">

                    <expr_stmt pos:start="299:21" pos:end="303:90"><expr pos:start="299:21" pos:end="303:89"><call pos:start="299:21" pos:end="303:89"><name pos:start="299:21" pos:end="299:26">av_log</name><argument_list pos:start="299:27" pos:end="303:89">(<argument pos:start="299:28" pos:end="299:30"><expr pos:start="299:28" pos:end="299:30"><name pos:start="299:28" pos:end="299:30">avf</name></expr></argument>, <argument pos:start="299:33" pos:end="299:44"><expr pos:start="299:33" pos:end="299:44"><name pos:start="299:33" pos:end="299:44">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="301:28" pos:end="303:61"><expr pos:start="301:28" pos:end="303:61"><literal type="string" pos:start="301:28" pos:end="301:88">"Error parsing bitstream filter sequence '%s' associated to "</literal>

                           <literal type="string" pos:start="303:28" pos:end="303:61">"stream %d of slave output '%s'\n"</literal></expr></argument>, <argument pos:start="303:64" pos:end="303:75"><expr pos:start="303:64" pos:end="303:75"><name pos:start="303:64" pos:end="303:75"><name pos:start="303:64" pos:end="303:68">entry</name><operator pos:start="303:69" pos:end="303:70">-&gt;</operator><name pos:start="303:71" pos:end="303:75">value</name></name></expr></argument>, <argument pos:start="303:78" pos:end="303:78"><expr pos:start="303:78" pos:end="303:78"><name pos:start="303:78" pos:end="303:78">i</name></expr></argument>, <argument pos:start="303:81" pos:end="303:88"><expr pos:start="303:81" pos:end="303:88"><name pos:start="303:81" pos:end="303:88">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="305:21" pos:end="305:29">goto <name pos:start="305:26" pos:end="305:28">end</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="315:9" pos:end="315:51"><expr pos:start="315:9" pos:end="315:50"><call pos:start="315:9" pos:end="315:50"><name pos:start="315:9" pos:end="315:19">av_dict_set</name><argument_list pos:start="315:20" pos:end="315:50">(<argument pos:start="315:21" pos:end="315:28"><expr pos:start="315:21" pos:end="315:28"><operator pos:start="315:21" pos:end="315:21">&amp;</operator><name pos:start="315:22" pos:end="315:28">options</name></expr></argument>, <argument pos:start="315:31" pos:end="315:40"><expr pos:start="315:31" pos:end="315:40"><name pos:start="315:31" pos:end="315:40"><name pos:start="315:31" pos:end="315:35">entry</name><operator pos:start="315:36" pos:end="315:37">-&gt;</operator><name pos:start="315:38" pos:end="315:40">key</name></name></expr></argument>, <argument pos:start="315:43" pos:end="315:46"><expr pos:start="315:43" pos:end="315:46"><name pos:start="315:43" pos:end="315:46">NULL</name></expr></argument>, <argument pos:start="315:49" pos:end="315:49"><expr pos:start="315:49" pos:end="315:49"><literal type="number" pos:start="315:49" pos:end="315:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="321:5" pos:end="333:5"><if pos:start="321:5" pos:end="333:5">if <condition pos:start="321:8" pos:end="321:16">(<expr pos:start="321:9" pos:end="321:15"><name pos:start="321:9" pos:end="321:15">options</name></expr>)</condition> <block pos:start="321:18" pos:end="333:5">{<block_content pos:start="323:9" pos:end="331:17">

        <expr_stmt pos:start="323:9" pos:end="323:21"><expr pos:start="323:9" pos:end="323:20"><name pos:start="323:9" pos:end="323:13">entry</name> <operator pos:start="323:15" pos:end="323:15">=</operator> <name pos:start="323:17" pos:end="323:20">NULL</name></expr>;</expr_stmt>

        <while pos:start="325:9" pos:end="327:76">while <condition pos:start="325:15" pos:end="325:80">(<expr pos:start="325:16" pos:end="325:79"><operator pos:start="325:16" pos:end="325:16">(</operator><name pos:start="325:17" pos:end="325:21">entry</name> <operator pos:start="325:23" pos:end="325:23">=</operator> <call pos:start="325:25" pos:end="325:78"><name pos:start="325:25" pos:end="325:35">av_dict_get</name><argument_list pos:start="325:36" pos:end="325:78">(<argument pos:start="325:37" pos:end="325:43"><expr pos:start="325:37" pos:end="325:43"><name pos:start="325:37" pos:end="325:43">options</name></expr></argument>, <argument pos:start="325:46" pos:end="325:47"><expr pos:start="325:46" pos:end="325:47"><literal type="string" pos:start="325:46" pos:end="325:47">""</literal></expr></argument>, <argument pos:start="325:50" pos:end="325:54"><expr pos:start="325:50" pos:end="325:54"><name pos:start="325:50" pos:end="325:54">entry</name></expr></argument>, <argument pos:start="325:57" pos:end="325:77"><expr pos:start="325:57" pos:end="325:77"><name pos:start="325:57" pos:end="325:77">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call><operator pos:start="325:79" pos:end="325:79">)</operator></expr>)</condition><block type="pseudo" pos:start="327:13" pos:end="327:76"><block_content pos:start="327:13" pos:end="327:76">

            <expr_stmt pos:start="327:13" pos:end="327:76"><expr pos:start="327:13" pos:end="327:75"><call pos:start="327:13" pos:end="327:75"><name pos:start="327:13" pos:end="327:18">av_log</name><argument_list pos:start="327:19" pos:end="327:75">(<argument pos:start="327:20" pos:end="327:23"><expr pos:start="327:20" pos:end="327:23"><name pos:start="327:20" pos:end="327:23">avf2</name></expr></argument>, <argument pos:start="327:26" pos:end="327:37"><expr pos:start="327:26" pos:end="327:37"><name pos:start="327:26" pos:end="327:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="327:40" pos:end="327:62"><expr pos:start="327:40" pos:end="327:62"><literal type="string" pos:start="327:40" pos:end="327:62">"Unknown option '%s'\n"</literal></expr></argument>, <argument pos:start="327:65" pos:end="327:74"><expr pos:start="327:65" pos:end="327:74"><name pos:start="327:65" pos:end="327:74"><name pos:start="327:65" pos:end="327:69">entry</name><operator pos:start="327:70" pos:end="327:71">-&gt;</operator><name pos:start="327:72" pos:end="327:74">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

        <expr_stmt pos:start="329:9" pos:end="329:39"><expr pos:start="329:9" pos:end="329:38"><name pos:start="329:9" pos:end="329:11">ret</name> <operator pos:start="329:13" pos:end="329:13">=</operator> <name pos:start="329:15" pos:end="329:38">AVERROR_OPTION_NOT_FOUND</name></expr>;</expr_stmt>

        <goto pos:start="331:9" pos:end="331:17">goto <name pos:start="331:14" pos:end="331:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



<label pos:start="337:1" pos:end="337:4"><name pos:start="337:1" pos:end="337:3">end</name>:</label>

    <expr_stmt pos:start="339:5" pos:end="339:20"><expr pos:start="339:5" pos:end="339:19"><call pos:start="339:5" pos:end="339:19"><name pos:start="339:5" pos:end="339:11">av_free</name><argument_list pos:start="339:12" pos:end="339:19">(<argument pos:start="339:13" pos:end="339:18"><expr pos:start="339:13" pos:end="339:18"><name pos:start="339:13" pos:end="339:18">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="341:5" pos:end="341:20"><expr pos:start="341:5" pos:end="341:19"><call pos:start="341:5" pos:end="341:19"><name pos:start="341:5" pos:end="341:11">av_free</name><argument_list pos:start="341:12" pos:end="341:19">(<argument pos:start="341:13" pos:end="341:18"><expr pos:start="341:13" pos:end="341:18"><name pos:start="341:13" pos:end="341:18">select</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="343:5" pos:end="343:27"><expr pos:start="343:5" pos:end="343:26"><call pos:start="343:5" pos:end="343:26"><name pos:start="343:5" pos:end="343:16">av_dict_free</name><argument_list pos:start="343:17" pos:end="343:26">(<argument pos:start="343:18" pos:end="343:25"><expr pos:start="343:18" pos:end="343:25"><operator pos:start="343:18" pos:end="343:18">&amp;</operator><name pos:start="343:19" pos:end="343:25">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:26"><expr pos:start="345:5" pos:end="345:25"><call pos:start="345:5" pos:end="345:25"><name pos:start="345:5" pos:end="345:12">av_freep</name><argument_list pos:start="345:13" pos:end="345:25">(<argument pos:start="345:14" pos:end="345:24"><expr pos:start="345:14" pos:end="345:24"><operator pos:start="345:14" pos:end="345:14">&amp;</operator><name pos:start="345:15" pos:end="345:24">tmp_select</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="347:5" pos:end="347:15">return <expr pos:start="347:12" pos:end="347:14"><name pos:start="347:12" pos:end="347:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
