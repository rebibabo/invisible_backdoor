<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24528.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:32">tcp_start_outgoing_migration</name><parameter_list pos:start="1:33" pos:end="3:46">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:47">MigrationState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:73"><decl pos:start="1:53" pos:end="1:73"><type pos:start="1:53" pos:end="1:73"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:73">host_port</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:38">Error</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier><modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:45">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:13">

    <expr_stmt pos:start="7:5" pos:end="7:32"><expr pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:16">get_error</name></name> <operator pos:start="7:18" pos:end="7:18">=</operator> <name pos:start="7:20" pos:end="7:31">socket_errno</name></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:28"><expr pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:12">write</name></name> <operator pos:start="9:14" pos:end="9:14">=</operator> <name pos:start="9:16" pos:end="9:27">socket_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:25"><expr pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:12">close</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:24">tcp_close</name></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:55"><expr pos:start="15:5" pos:end="15:54"><name pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:9">fd</name></name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:54"><name pos:start="15:13" pos:end="15:24">inet_connect</name><argument_list pos:start="15:25" pos:end="15:54">(<argument pos:start="15:26" pos:end="15:34"><expr pos:start="15:26" pos:end="15:34"><name pos:start="15:26" pos:end="15:34">host_port</name></expr></argument>, <argument pos:start="15:37" pos:end="15:41"><expr pos:start="15:37" pos:end="15:41"><name pos:start="15:37" pos:end="15:41">false</name></expr></argument>, <argument pos:start="15:44" pos:end="15:47"><expr pos:start="15:44" pos:end="15:47"><name pos:start="15:44" pos:end="15:47">NULL</name></expr></argument>, <argument pos:start="15:50" pos:end="15:53"><expr pos:start="15:50" pos:end="15:53"><name pos:start="15:50" pos:end="15:53">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="49:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:28">(<expr pos:start="19:9" pos:end="19:27"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:27"><name pos:start="19:10" pos:end="19:21">error_is_set</name><argument_list pos:start="19:22" pos:end="19:27">(<argument pos:start="19:23" pos:end="19:26"><expr pos:start="19:23" pos:end="19:26"><name pos:start="19:23" pos:end="19:26">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:30" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:30">

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><call pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:26">migrate_fd_connect</name><argument_list pos:start="21:27" pos:end="21:29">(<argument pos:start="21:28" pos:end="21:28"><expr pos:start="21:28" pos:end="21:28"><name pos:start="21:28" pos:end="21:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="29:5">else if <condition pos:start="23:15" pos:end="23:69">(<expr pos:start="23:16" pos:end="23:68"><call pos:start="23:16" pos:end="23:68"><name pos:start="23:16" pos:end="23:28">error_is_type</name><argument_list pos:start="23:29" pos:end="23:68">(<argument pos:start="23:30" pos:end="23:34"><expr pos:start="23:30" pos:end="23:34"><operator pos:start="23:30" pos:end="23:30">*</operator><name pos:start="23:31" pos:end="23:34">errp</name></expr></argument>, <argument pos:start="23:37" pos:end="23:67"><expr pos:start="23:37" pos:end="23:67"><name pos:start="23:37" pos:end="23:67">QERR_SOCKET_CONNECT_IN_PROGRESS</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:71" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:73">

        <expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><call pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:15">DPRINTF</name><argument_list pos:start="25:16" pos:end="25:40">(<argument pos:start="25:17" pos:end="25:39"><expr pos:start="25:17" pos:end="25:39"><literal type="string" pos:start="25:17" pos:end="25:39">"connect in progress\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:73"><expr pos:start="27:9" pos:end="27:72"><call pos:start="27:9" pos:end="27:72"><name pos:start="27:9" pos:end="27:28">qemu_set_fd_handler2</name><argument_list pos:start="27:29" pos:end="27:72">(<argument pos:start="27:30" pos:end="27:34"><expr pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:30">s</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:34">fd</name></name></expr></argument>, <argument pos:start="27:37" pos:end="27:40"><expr pos:start="27:37" pos:end="27:40"><name pos:start="27:37" pos:end="27:40">NULL</name></expr></argument>, <argument pos:start="27:43" pos:end="27:46"><expr pos:start="27:43" pos:end="27:46"><name pos:start="27:43" pos:end="27:46">NULL</name></expr></argument>, <argument pos:start="27:49" pos:end="27:68"><expr pos:start="27:49" pos:end="27:68"><name pos:start="27:49" pos:end="27:68">tcp_wait_for_connect</name></expr></argument>, <argument pos:start="27:71" pos:end="27:71"><expr pos:start="27:71" pos:end="27:71"><name pos:start="27:71" pos:end="27:71">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="29:7" pos:end="35:5">else if <condition pos:start="29:15" pos:end="29:63">(<expr pos:start="29:16" pos:end="29:62"><call pos:start="29:16" pos:end="29:62"><name pos:start="29:16" pos:end="29:28">error_is_type</name><argument_list pos:start="29:29" pos:end="29:62">(<argument pos:start="29:30" pos:end="29:34"><expr pos:start="29:30" pos:end="29:34"><operator pos:start="29:30" pos:end="29:30">*</operator><name pos:start="29:31" pos:end="29:34">errp</name></expr></argument>, <argument pos:start="29:37" pos:end="29:61"><expr pos:start="29:37" pos:end="29:61"><name pos:start="29:37" pos:end="29:61">QERR_SOCKET_CREATE_FAILED</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:65" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:18">

        <expr_stmt pos:start="31:9" pos:end="31:36"><expr pos:start="31:9" pos:end="31:35"><call pos:start="31:9" pos:end="31:35"><name pos:start="31:9" pos:end="31:15">DPRINTF</name><argument_list pos:start="31:16" pos:end="31:35">(<argument pos:start="31:17" pos:end="31:34"><expr pos:start="31:17" pos:end="31:34"><literal type="string" pos:start="31:17" pos:end="31:34">"connect failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="43:5">else if <condition pos:start="35:15" pos:end="35:64">(<expr pos:start="35:16" pos:end="35:63"><call pos:start="35:16" pos:end="35:63"><name pos:start="35:16" pos:end="35:28">error_is_type</name><argument_list pos:start="35:29" pos:end="35:63">(<argument pos:start="35:30" pos:end="35:34"><expr pos:start="35:30" pos:end="35:34"><operator pos:start="35:30" pos:end="35:30">*</operator><name pos:start="35:31" pos:end="35:34">errp</name></expr></argument>, <argument pos:start="35:37" pos:end="35:62"><expr pos:start="35:37" pos:end="35:62"><name pos:start="35:37" pos:end="35:62">QERR_SOCKET_CONNECT_FAILED</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:66" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:18">

        <expr_stmt pos:start="37:9" pos:end="37:36"><expr pos:start="37:9" pos:end="37:35"><call pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:15">DPRINTF</name><argument_list pos:start="37:16" pos:end="37:35">(<argument pos:start="37:17" pos:end="37:34"><expr pos:start="37:17" pos:end="37:34"><literal type="string" pos:start="37:17" pos:end="37:34">"connect failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><call pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:24">migrate_fd_error</name><argument_list pos:start="39:25" pos:end="39:27">(<argument pos:start="39:26" pos:end="39:26"><expr pos:start="39:26" pos:end="39:26"><name pos:start="39:26" pos:end="39:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="49:5">else <block pos:start="43:12" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:18">

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><call pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:15">DPRINTF</name><argument_list pos:start="45:16" pos:end="45:34">(<argument pos:start="45:17" pos:end="45:33"><expr pos:start="45:17" pos:end="45:33"><literal type="string" pos:start="45:17" pos:end="45:33">"unknown error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
