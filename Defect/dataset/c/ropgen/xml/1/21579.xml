<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21579.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">test_query_cpus</name><parameter_list pos:start="1:28" pos:end="1:45">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:40"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:16">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:13">cli</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">QDict</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:15">resp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">QList</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:15">cpus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">QObject</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">e</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:75"><expr pos:start="15:5" pos:end="15:74"><name pos:start="15:5" pos:end="15:7">cli</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:74"><name pos:start="15:11" pos:end="15:18">make_cli</name><argument_list pos:start="15:19" pos:end="15:74">(<argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">data</name></expr></argument>, <argument pos:start="15:26" pos:end="15:73"><expr pos:start="15:26" pos:end="15:73"><literal type="string" pos:start="15:26" pos:end="15:73">"-smp 8 -numa node,cpus=0-3 -numa node,cpus=4-7"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><call pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:15">qtest_start</name><argument_list pos:start="17:16" pos:end="17:20">(<argument pos:start="17:17" pos:end="17:19"><expr pos:start="17:17" pos:end="17:19"><name pos:start="17:17" pos:end="17:19">cli</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:8">cpus</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:26"><name pos:start="19:12" pos:end="19:19">get_cpus</name><argument_list pos:start="19:20" pos:end="19:26">(<argument pos:start="19:21" pos:end="19:25"><expr pos:start="19:21" pos:end="19:25"><operator pos:start="19:21" pos:end="19:21">&amp;</operator><name pos:start="19:22" pos:end="19:25">resp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><call pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:12">g_assert</name><argument_list pos:start="21:13" pos:end="21:18">(<argument pos:start="21:14" pos:end="21:17"><expr pos:start="21:14" pos:end="21:17"><name pos:start="21:14" pos:end="21:17">cpus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="25:5" pos:end="59:5">while <condition pos:start="25:11" pos:end="25:33">(<expr pos:start="25:12" pos:end="25:32"><operator pos:start="25:12" pos:end="25:12">(</operator><name pos:start="25:13" pos:end="25:13">e</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <call pos:start="25:17" pos:end="25:31"><name pos:start="25:17" pos:end="25:25">qlist_pop</name><argument_list pos:start="25:26" pos:end="25:31">(<argument pos:start="25:27" pos:end="25:30"><expr pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:30">cpus</name></expr></argument>)</argument_list></call><operator pos:start="25:32" pos:end="25:32">)</operator></expr>)</condition> <block pos:start="25:35" pos:end="59:5">{<block_content pos:start="27:9" pos:end="57:9">

        <decl_stmt pos:start="27:9" pos:end="27:27"><decl pos:start="27:9" pos:end="27:18"><type pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:13">QDict</name> <modifier pos:start="27:15" pos:end="27:15">*</modifier></type><name pos:start="27:16" pos:end="27:18">cpu</name></decl>, <decl pos:start="27:21" pos:end="27:26"><type ref="prev" pos:start="27:9" pos:end="27:15"><modifier pos:start="27:21" pos:end="27:21">*</modifier></type><name pos:start="27:22" pos:end="27:26">props</name></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:30"><decl pos:start="29:9" pos:end="29:23"><type pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:15">int64_t</name></type> <name pos:start="29:17" pos:end="29:23">cpu_idx</name></decl>, <decl pos:start="29:26" pos:end="29:29"><type ref="prev" pos:start="29:9" pos:end="29:15"/><name pos:start="29:26" pos:end="29:29">node</name></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:11">cpu</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:33"><name pos:start="33:15" pos:end="33:30">qobject_to_qdict</name><argument_list pos:start="33:31" pos:end="33:33">(<argument pos:start="33:32" pos:end="33:32"><expr pos:start="33:32" pos:end="33:32"><name pos:start="33:32" pos:end="33:32">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:43"><expr pos:start="35:9" pos:end="35:42"><call pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:16">g_assert</name><argument_list pos:start="35:17" pos:end="35:42">(<argument pos:start="35:18" pos:end="35:41"><expr pos:start="35:18" pos:end="35:41"><call pos:start="35:18" pos:end="35:41"><name pos:start="35:18" pos:end="35:29">qdict_haskey</name><argument_list pos:start="35:30" pos:end="35:41">(<argument pos:start="35:31" pos:end="35:33"><expr pos:start="35:31" pos:end="35:33"><name pos:start="35:31" pos:end="35:33">cpu</name></expr></argument>, <argument pos:start="35:36" pos:end="35:40"><expr pos:start="35:36" pos:end="35:40"><literal type="string" pos:start="35:36" pos:end="35:40">"CPU"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:45"><expr pos:start="37:9" pos:end="37:44"><call pos:start="37:9" pos:end="37:44"><name pos:start="37:9" pos:end="37:16">g_assert</name><argument_list pos:start="37:17" pos:end="37:44">(<argument pos:start="37:18" pos:end="37:43"><expr pos:start="37:18" pos:end="37:43"><call pos:start="37:18" pos:end="37:43"><name pos:start="37:18" pos:end="37:29">qdict_haskey</name><argument_list pos:start="37:30" pos:end="37:43">(<argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">cpu</name></expr></argument>, <argument pos:start="37:36" pos:end="37:42"><expr pos:start="37:36" pos:end="37:42"><literal type="string" pos:start="37:36" pos:end="37:42">"props"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:44"><expr pos:start="41:9" pos:end="41:43"><name pos:start="41:9" pos:end="41:15">cpu_idx</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:43"><name pos:start="41:19" pos:end="41:31">qdict_get_int</name><argument_list pos:start="41:32" pos:end="41:43">(<argument pos:start="41:33" pos:end="41:35"><expr pos:start="41:33" pos:end="41:35"><name pos:start="41:33" pos:end="41:35">cpu</name></expr></argument>, <argument pos:start="41:38" pos:end="41:42"><expr pos:start="41:38" pos:end="41:42"><literal type="string" pos:start="41:38" pos:end="41:42">"CPU"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:46"><expr pos:start="43:9" pos:end="43:45"><name pos:start="43:9" pos:end="43:13">props</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <call pos:start="43:17" pos:end="43:45"><name pos:start="43:17" pos:end="43:31">qdict_get_qdict</name><argument_list pos:start="43:32" pos:end="43:45">(<argument pos:start="43:33" pos:end="43:35"><expr pos:start="43:33" pos:end="43:35"><name pos:start="43:33" pos:end="43:35">cpu</name></expr></argument>, <argument pos:start="43:38" pos:end="43:44"><expr pos:start="43:38" pos:end="43:44"><literal type="string" pos:start="43:38" pos:end="43:44">"props"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:49"><expr pos:start="45:9" pos:end="45:48"><call pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:16">g_assert</name><argument_list pos:start="45:17" pos:end="45:48">(<argument pos:start="45:18" pos:end="45:47"><expr pos:start="45:18" pos:end="45:47"><call pos:start="45:18" pos:end="45:47"><name pos:start="45:18" pos:end="45:29">qdict_haskey</name><argument_list pos:start="45:30" pos:end="45:47">(<argument pos:start="45:31" pos:end="45:35"><expr pos:start="45:31" pos:end="45:35"><name pos:start="45:31" pos:end="45:35">props</name></expr></argument>, <argument pos:start="45:38" pos:end="45:46"><expr pos:start="45:38" pos:end="45:46"><literal type="string" pos:start="45:38" pos:end="45:46">"node-id"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:47"><expr pos:start="47:9" pos:end="47:46"><name pos:start="47:9" pos:end="47:12">node</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:46"><name pos:start="47:16" pos:end="47:28">qdict_get_int</name><argument_list pos:start="47:29" pos:end="47:46">(<argument pos:start="47:30" pos:end="47:34"><expr pos:start="47:30" pos:end="47:34"><name pos:start="47:30" pos:end="47:34">props</name></expr></argument>, <argument pos:start="47:37" pos:end="47:45"><expr pos:start="47:37" pos:end="47:45"><literal type="string" pos:start="47:37" pos:end="47:45">"node-id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:40">(<expr pos:start="49:13" pos:end="49:39"><name pos:start="49:13" pos:end="49:19">cpu_idx</name> <operator pos:start="49:21" pos:end="49:22">&gt;=</operator> <literal type="number" pos:start="49:24" pos:end="49:24">0</literal> <operator pos:start="49:26" pos:end="49:27">&amp;&amp;</operator> <name pos:start="49:29" pos:end="49:35">cpu_idx</name> <operator pos:start="49:37" pos:end="49:37">&lt;</operator> <literal type="number" pos:start="49:39" pos:end="49:39">4</literal></expr>)</condition> <block pos:start="49:42" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:41">

            <expr_stmt pos:start="51:13" pos:end="51:41"><expr pos:start="51:13" pos:end="51:40"><call pos:start="51:13" pos:end="51:40"><name pos:start="51:13" pos:end="51:27">g_assert_cmpint</name><argument_list pos:start="51:28" pos:end="51:40">(<argument pos:start="51:29" pos:end="51:32"><expr pos:start="51:29" pos:end="51:32"><name pos:start="51:29" pos:end="51:32">node</name></expr></argument>, <argument pos:start="51:35" pos:end="51:36"><expr pos:start="51:35" pos:end="51:36"><operator pos:start="51:35" pos:end="51:36">==</operator></expr></argument>, <argument pos:start="51:39" pos:end="51:39"><expr pos:start="51:39" pos:end="51:39"><literal type="number" pos:start="51:39" pos:end="51:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="57:9">else <block pos:start="53:16" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:41">

            <expr_stmt pos:start="55:13" pos:end="55:41"><expr pos:start="55:13" pos:end="55:40"><call pos:start="55:13" pos:end="55:40"><name pos:start="55:13" pos:end="55:27">g_assert_cmpint</name><argument_list pos:start="55:28" pos:end="55:40">(<argument pos:start="55:29" pos:end="55:32"><expr pos:start="55:29" pos:end="55:32"><name pos:start="55:29" pos:end="55:32">node</name></expr></argument>, <argument pos:start="55:35" pos:end="55:36"><expr pos:start="55:35" pos:end="55:36"><operator pos:start="55:35" pos:end="55:36">==</operator></expr></argument>, <argument pos:start="55:39" pos:end="55:39"><expr pos:start="55:39" pos:end="55:39"><literal type="number" pos:start="55:39" pos:end="55:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="63:5" pos:end="63:18"><expr pos:start="63:5" pos:end="63:17"><call pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:11">QDECREF</name><argument_list pos:start="63:12" pos:end="63:17">(<argument pos:start="63:13" pos:end="63:16"><expr pos:start="63:13" pos:end="63:16"><name pos:start="63:13" pos:end="63:16">resp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:16"><expr pos:start="65:5" pos:end="65:15"><call pos:start="65:5" pos:end="65:15"><name pos:start="65:5" pos:end="65:13">qtest_end</name><argument_list pos:start="65:14" pos:end="65:15">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:16"><expr pos:start="67:5" pos:end="67:15"><call pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:10">g_free</name><argument_list pos:start="67:11" pos:end="67:15">(<argument pos:start="67:12" pos:end="67:14"><expr pos:start="67:12" pos:end="67:14"><name pos:start="67:12" pos:end="67:14">cli</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
