<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24108.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">slavio_misc_init1</name><parameter_list pos:start="1:29" pos:end="1:47">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:41">SysBusDevice</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">sbd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name> <init pos:start="5:22" pos:end="5:34">= <expr pos:start="5:24" pos:end="5:34"><call pos:start="5:24" pos:end="5:34"><name pos:start="5:24" pos:end="5:29">DEVICE</name><argument_list pos:start="5:30" pos:end="5:34">(<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">sbd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">MiscState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:35">= <expr pos:start="7:20" pos:end="7:35"><call pos:start="7:20" pos:end="7:35"><name pos:start="7:20" pos:end="7:30">SLAVIO_MISC</name><argument_list pos:start="7:31" pos:end="7:35">(<argument pos:start="7:32" pos:end="7:34"><expr pos:start="7:32" pos:end="7:34"><name pos:start="7:32" pos:end="7:34">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:34"><expr pos:start="11:5" pos:end="11:33"><call pos:start="11:5" pos:end="11:33"><name pos:start="11:5" pos:end="11:19">sysbus_init_irq</name><argument_list pos:start="11:20" pos:end="11:33">(<argument pos:start="11:21" pos:end="11:23"><expr pos:start="11:21" pos:end="11:23"><name pos:start="11:21" pos:end="11:23">sbd</name></expr></argument>, <argument pos:start="11:26" pos:end="11:32"><expr pos:start="11:26" pos:end="11:32"><operator pos:start="11:26" pos:end="11:26">&amp;</operator><name pos:start="11:27" pos:end="11:32"><name pos:start="11:27" pos:end="11:27">s</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:32">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><call pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:19">sysbus_init_irq</name><argument_list pos:start="13:20" pos:end="13:36">(<argument pos:start="13:21" pos:end="13:23"><expr pos:start="13:21" pos:end="13:23"><name pos:start="13:21" pos:end="13:23">sbd</name></expr></argument>, <argument pos:start="13:26" pos:end="13:35"><expr pos:start="13:26" pos:end="13:35"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:35"><name pos:start="13:27" pos:end="13:27">s</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:35">fdc_tc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:25">/* 8 bit registers */</comment>

    <comment type="block" pos:start="19:5" pos:end="19:24">/* Slavio control */</comment>

    <expr_stmt pos:start="21:5" pos:end="23:54"><expr pos:start="21:5" pos:end="23:53"><call pos:start="21:5" pos:end="23:53"><name pos:start="21:5" pos:end="21:25">memory_region_init_io</name><argument_list pos:start="21:26" pos:end="23:53">(<argument pos:start="21:27" pos:end="21:39"><expr pos:start="21:27" pos:end="21:39"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:39"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:39">cfg_iomem</name></name></expr></argument>, <argument pos:start="21:42" pos:end="21:50"><expr pos:start="21:42" pos:end="21:50"><call pos:start="21:42" pos:end="21:50"><name pos:start="21:42" pos:end="21:47">OBJECT</name><argument_list pos:start="21:48" pos:end="21:50">(<argument pos:start="21:49" pos:end="21:49"><expr pos:start="21:49" pos:end="21:49"><name pos:start="21:49" pos:end="21:49">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:53" pos:end="21:71"><expr pos:start="21:53" pos:end="21:71"><operator pos:start="21:53" pos:end="21:53">&amp;</operator><name pos:start="21:54" pos:end="21:71">slavio_cfg_mem_ops</name></expr></argument>, <argument pos:start="21:74" pos:end="21:74"><expr pos:start="21:74" pos:end="21:74"><name pos:start="21:74" pos:end="21:74">s</name></expr></argument>,

                          <argument pos:start="23:27" pos:end="23:41"><expr pos:start="23:27" pos:end="23:41"><literal type="string" pos:start="23:27" pos:end="23:41">"configuration"</literal></expr></argument>, <argument pos:start="23:44" pos:end="23:52"><expr pos:start="23:44" pos:end="23:52"><name pos:start="23:44" pos:end="23:52">MISC_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><call pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:20">sysbus_init_mmio</name><argument_list pos:start="25:21" pos:end="25:40">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">sbd</name></expr></argument>, <argument pos:start="25:27" pos:end="25:39"><expr pos:start="25:27" pos:end="25:39"><operator pos:start="25:27" pos:end="25:27">&amp;</operator><name pos:start="25:28" pos:end="25:39"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:39">cfg_iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:21">/* Diagnostics */</comment>

    <expr_stmt pos:start="31:5" pos:end="33:51"><expr pos:start="31:5" pos:end="33:50"><call pos:start="31:5" pos:end="33:50"><name pos:start="31:5" pos:end="31:25">memory_region_init_io</name><argument_list pos:start="31:26" pos:end="33:50">(<argument pos:start="31:27" pos:end="31:40"><expr pos:start="31:27" pos:end="31:40"><operator pos:start="31:27" pos:end="31:27">&amp;</operator><name pos:start="31:28" pos:end="31:40"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:40">diag_iomem</name></name></expr></argument>, <argument pos:start="31:43" pos:end="31:51"><expr pos:start="31:43" pos:end="31:51"><call pos:start="31:43" pos:end="31:51"><name pos:start="31:43" pos:end="31:48">OBJECT</name><argument_list pos:start="31:49" pos:end="31:51">(<argument pos:start="31:50" pos:end="31:50"><expr pos:start="31:50" pos:end="31:50"><name pos:start="31:50" pos:end="31:50">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:54" pos:end="31:73"><expr pos:start="31:54" pos:end="31:73"><operator pos:start="31:54" pos:end="31:54">&amp;</operator><name pos:start="31:55" pos:end="31:73">slavio_diag_mem_ops</name></expr></argument>, <argument pos:start="31:76" pos:end="31:76"><expr pos:start="31:76" pos:end="31:76"><name pos:start="31:76" pos:end="31:76">s</name></expr></argument>,

                          <argument pos:start="33:27" pos:end="33:38"><expr pos:start="33:27" pos:end="33:38"><literal type="string" pos:start="33:27" pos:end="33:38">"diagnostic"</literal></expr></argument>, <argument pos:start="33:41" pos:end="33:49"><expr pos:start="33:41" pos:end="33:49"><name pos:start="33:41" pos:end="33:49">MISC_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><call pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:20">sysbus_init_mmio</name><argument_list pos:start="35:21" pos:end="35:41">(<argument pos:start="35:22" pos:end="35:24"><expr pos:start="35:22" pos:end="35:24"><name pos:start="35:22" pos:end="35:24">sbd</name></expr></argument>, <argument pos:start="35:27" pos:end="35:40"><expr pos:start="35:27" pos:end="35:40"><operator pos:start="35:27" pos:end="35:27">&amp;</operator><name pos:start="35:28" pos:end="35:40"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:40">diag_iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:23">/* Modem control */</comment>

    <expr_stmt pos:start="41:5" pos:end="43:46"><expr pos:start="41:5" pos:end="43:45"><call pos:start="41:5" pos:end="43:45"><name pos:start="41:5" pos:end="41:25">memory_region_init_io</name><argument_list pos:start="41:26" pos:end="43:45">(<argument pos:start="41:27" pos:end="41:39"><expr pos:start="41:27" pos:end="41:39"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:39"><name pos:start="41:28" pos:end="41:28">s</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:39">mdm_iomem</name></name></expr></argument>, <argument pos:start="41:42" pos:end="41:50"><expr pos:start="41:42" pos:end="41:50"><call pos:start="41:42" pos:end="41:50"><name pos:start="41:42" pos:end="41:47">OBJECT</name><argument_list pos:start="41:48" pos:end="41:50">(<argument pos:start="41:49" pos:end="41:49"><expr pos:start="41:49" pos:end="41:49"><name pos:start="41:49" pos:end="41:49">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:53" pos:end="41:71"><expr pos:start="41:53" pos:end="41:71"><operator pos:start="41:53" pos:end="41:53">&amp;</operator><name pos:start="41:54" pos:end="41:71">slavio_mdm_mem_ops</name></expr></argument>, <argument pos:start="41:74" pos:end="41:74"><expr pos:start="41:74" pos:end="41:74"><name pos:start="41:74" pos:end="41:74">s</name></expr></argument>,

                          <argument pos:start="43:27" pos:end="43:33"><expr pos:start="43:27" pos:end="43:33"><literal type="string" pos:start="43:27" pos:end="43:33">"modem"</literal></expr></argument>, <argument pos:start="43:36" pos:end="43:44"><expr pos:start="43:36" pos:end="43:44"><name pos:start="43:36" pos:end="43:44">MISC_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><call pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:20">sysbus_init_mmio</name><argument_list pos:start="45:21" pos:end="45:40">(<argument pos:start="45:22" pos:end="45:24"><expr pos:start="45:22" pos:end="45:24"><name pos:start="45:22" pos:end="45:24">sbd</name></expr></argument>, <argument pos:start="45:27" pos:end="45:39"><expr pos:start="45:27" pos:end="45:39"><operator pos:start="45:27" pos:end="45:27">&amp;</operator><name pos:start="45:28" pos:end="45:39"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:39">mdm_iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:26">/* 16 bit registers */</comment>

    <comment type="block" pos:start="51:5" pos:end="51:27">/* ss600mp diag LEDs */</comment>

    <expr_stmt pos:start="53:5" pos:end="55:45"><expr pos:start="53:5" pos:end="55:44"><call pos:start="53:5" pos:end="55:44"><name pos:start="53:5" pos:end="53:25">memory_region_init_io</name><argument_list pos:start="53:26" pos:end="55:44">(<argument pos:start="53:27" pos:end="53:39"><expr pos:start="53:27" pos:end="53:39"><operator pos:start="53:27" pos:end="53:27">&amp;</operator><name pos:start="53:28" pos:end="53:39"><name pos:start="53:28" pos:end="53:28">s</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:39">led_iomem</name></name></expr></argument>, <argument pos:start="53:42" pos:end="53:50"><expr pos:start="53:42" pos:end="53:50"><call pos:start="53:42" pos:end="53:50"><name pos:start="53:42" pos:end="53:47">OBJECT</name><argument_list pos:start="53:48" pos:end="53:50">(<argument pos:start="53:49" pos:end="53:49"><expr pos:start="53:49" pos:end="53:49"><name pos:start="53:49" pos:end="53:49">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:53" pos:end="53:71"><expr pos:start="53:53" pos:end="53:71"><operator pos:start="53:53" pos:end="53:53">&amp;</operator><name pos:start="53:54" pos:end="53:71">slavio_led_mem_ops</name></expr></argument>, <argument pos:start="53:74" pos:end="53:74"><expr pos:start="53:74" pos:end="53:74"><name pos:start="53:74" pos:end="53:74">s</name></expr></argument>,

                          <argument pos:start="55:27" pos:end="55:32"><expr pos:start="55:27" pos:end="55:32"><literal type="string" pos:start="55:27" pos:end="55:32">"leds"</literal></expr></argument>, <argument pos:start="55:35" pos:end="55:43"><expr pos:start="55:35" pos:end="55:43"><name pos:start="55:35" pos:end="55:43">MISC_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:41"><expr pos:start="57:5" pos:end="57:40"><call pos:start="57:5" pos:end="57:40"><name pos:start="57:5" pos:end="57:20">sysbus_init_mmio</name><argument_list pos:start="57:21" pos:end="57:40">(<argument pos:start="57:22" pos:end="57:24"><expr pos:start="57:22" pos:end="57:24"><name pos:start="57:22" pos:end="57:24">sbd</name></expr></argument>, <argument pos:start="57:27" pos:end="57:39"><expr pos:start="57:27" pos:end="57:39"><operator pos:start="57:27" pos:end="57:27">&amp;</operator><name pos:start="57:28" pos:end="57:39"><name pos:start="57:28" pos:end="57:28">s</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:39">led_iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:26">/* 32 bit registers */</comment>

    <comment type="block" pos:start="63:5" pos:end="63:24">/* System control */</comment>

    <expr_stmt pos:start="65:5" pos:end="67:55"><expr pos:start="65:5" pos:end="67:54"><call pos:start="65:5" pos:end="67:54"><name pos:start="65:5" pos:end="65:25">memory_region_init_io</name><argument_list pos:start="65:26" pos:end="67:54">(<argument pos:start="65:27" pos:end="65:43"><expr pos:start="65:27" pos:end="65:43"><operator pos:start="65:27" pos:end="65:27">&amp;</operator><name pos:start="65:28" pos:end="65:43"><name pos:start="65:28" pos:end="65:28">s</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:43">sysctrl_iomem</name></name></expr></argument>, <argument pos:start="65:46" pos:end="65:54"><expr pos:start="65:46" pos:end="65:54"><call pos:start="65:46" pos:end="65:54"><name pos:start="65:46" pos:end="65:51">OBJECT</name><argument_list pos:start="65:52" pos:end="65:54">(<argument pos:start="65:53" pos:end="65:53"><expr pos:start="65:53" pos:end="65:53"><name pos:start="65:53" pos:end="65:53">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:57" pos:end="65:79"><expr pos:start="65:57" pos:end="65:79"><operator pos:start="65:57" pos:end="65:57">&amp;</operator><name pos:start="65:58" pos:end="65:79">slavio_sysctrl_mem_ops</name></expr></argument>, <argument pos:start="65:82" pos:end="65:82"><expr pos:start="65:82" pos:end="65:82"><name pos:start="65:82" pos:end="65:82">s</name></expr></argument>,

                          <argument pos:start="67:27" pos:end="67:42"><expr pos:start="67:27" pos:end="67:42"><literal type="string" pos:start="67:27" pos:end="67:42">"system-control"</literal></expr></argument>, <argument pos:start="67:45" pos:end="67:53"><expr pos:start="67:45" pos:end="67:53"><name pos:start="67:45" pos:end="67:53">MISC_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:45"><expr pos:start="69:5" pos:end="69:44"><call pos:start="69:5" pos:end="69:44"><name pos:start="69:5" pos:end="69:20">sysbus_init_mmio</name><argument_list pos:start="69:21" pos:end="69:44">(<argument pos:start="69:22" pos:end="69:24"><expr pos:start="69:22" pos:end="69:24"><name pos:start="69:22" pos:end="69:24">sbd</name></expr></argument>, <argument pos:start="69:27" pos:end="69:43"><expr pos:start="69:27" pos:end="69:43"><operator pos:start="69:27" pos:end="69:27">&amp;</operator><name pos:start="69:28" pos:end="69:43"><name pos:start="69:28" pos:end="69:28">s</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:43">sysctrl_iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:39">/* AUX 1 (Misc System Functions) */</comment>

    <expr_stmt pos:start="75:5" pos:end="77:62"><expr pos:start="75:5" pos:end="77:61"><call pos:start="75:5" pos:end="77:61"><name pos:start="75:5" pos:end="75:25">memory_region_init_io</name><argument_list pos:start="75:26" pos:end="77:61">(<argument pos:start="75:27" pos:end="75:40"><expr pos:start="75:27" pos:end="75:40"><operator pos:start="75:27" pos:end="75:27">&amp;</operator><name pos:start="75:28" pos:end="75:40"><name pos:start="75:28" pos:end="75:28">s</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:40">aux1_iomem</name></name></expr></argument>, <argument pos:start="75:43" pos:end="75:51"><expr pos:start="75:43" pos:end="75:51"><call pos:start="75:43" pos:end="75:51"><name pos:start="75:43" pos:end="75:48">OBJECT</name><argument_list pos:start="75:49" pos:end="75:51">(<argument pos:start="75:50" pos:end="75:50"><expr pos:start="75:50" pos:end="75:50"><name pos:start="75:50" pos:end="75:50">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:54" pos:end="75:73"><expr pos:start="75:54" pos:end="75:73"><operator pos:start="75:54" pos:end="75:54">&amp;</operator><name pos:start="75:55" pos:end="75:73">slavio_aux1_mem_ops</name></expr></argument>, <argument pos:start="75:76" pos:end="75:76"><expr pos:start="75:76" pos:end="75:76"><name pos:start="75:76" pos:end="75:76">s</name></expr></argument>,

                          <argument pos:start="77:27" pos:end="77:49"><expr pos:start="77:27" pos:end="77:49"><literal type="string" pos:start="77:27" pos:end="77:49">"misc-system-functions"</literal></expr></argument>, <argument pos:start="77:52" pos:end="77:60"><expr pos:start="77:52" pos:end="77:60"><name pos:start="77:52" pos:end="77:60">MISC_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:42"><expr pos:start="79:5" pos:end="79:41"><call pos:start="79:5" pos:end="79:41"><name pos:start="79:5" pos:end="79:20">sysbus_init_mmio</name><argument_list pos:start="79:21" pos:end="79:41">(<argument pos:start="79:22" pos:end="79:24"><expr pos:start="79:22" pos:end="79:24"><name pos:start="79:22" pos:end="79:24">sbd</name></expr></argument>, <argument pos:start="79:27" pos:end="79:40"><expr pos:start="79:27" pos:end="79:40"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:40"><name pos:start="79:28" pos:end="79:28">s</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:40">aux1_iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:44">/* AUX 2 (Software Powerdown Control) */</comment>

    <expr_stmt pos:start="85:5" pos:end="87:67"><expr pos:start="85:5" pos:end="87:66"><call pos:start="85:5" pos:end="87:66"><name pos:start="85:5" pos:end="85:25">memory_region_init_io</name><argument_list pos:start="85:26" pos:end="87:66">(<argument pos:start="85:27" pos:end="85:40"><expr pos:start="85:27" pos:end="85:40"><operator pos:start="85:27" pos:end="85:27">&amp;</operator><name pos:start="85:28" pos:end="85:40"><name pos:start="85:28" pos:end="85:28">s</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:40">aux2_iomem</name></name></expr></argument>, <argument pos:start="85:43" pos:end="85:51"><expr pos:start="85:43" pos:end="85:51"><call pos:start="85:43" pos:end="85:51"><name pos:start="85:43" pos:end="85:48">OBJECT</name><argument_list pos:start="85:49" pos:end="85:51">(<argument pos:start="85:50" pos:end="85:50"><expr pos:start="85:50" pos:end="85:50"><name pos:start="85:50" pos:end="85:50">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:54" pos:end="85:73"><expr pos:start="85:54" pos:end="85:73"><operator pos:start="85:54" pos:end="85:54">&amp;</operator><name pos:start="85:55" pos:end="85:73">slavio_aux2_mem_ops</name></expr></argument>, <argument pos:start="85:76" pos:end="85:76"><expr pos:start="85:76" pos:end="85:76"><name pos:start="85:76" pos:end="85:76">s</name></expr></argument>,

                          <argument pos:start="87:27" pos:end="87:54"><expr pos:start="87:27" pos:end="87:54"><literal type="string" pos:start="87:27" pos:end="87:54">"software-powerdown-control"</literal></expr></argument>, <argument pos:start="87:57" pos:end="87:65"><expr pos:start="87:57" pos:end="87:65"><name pos:start="87:57" pos:end="87:65">MISC_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:42"><expr pos:start="89:5" pos:end="89:41"><call pos:start="89:5" pos:end="89:41"><name pos:start="89:5" pos:end="89:20">sysbus_init_mmio</name><argument_list pos:start="89:21" pos:end="89:41">(<argument pos:start="89:22" pos:end="89:24"><expr pos:start="89:22" pos:end="89:24"><name pos:start="89:22" pos:end="89:24">sbd</name></expr></argument>, <argument pos:start="89:27" pos:end="89:40"><expr pos:start="89:27" pos:end="89:40"><operator pos:start="89:27" pos:end="89:27">&amp;</operator><name pos:start="89:28" pos:end="89:40"><name pos:start="89:28" pos:end="89:28">s</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:40">aux2_iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:53"><expr pos:start="93:5" pos:end="93:52"><call pos:start="93:5" pos:end="93:52"><name pos:start="93:5" pos:end="93:21">qdev_init_gpio_in</name><argument_list pos:start="93:22" pos:end="93:52">(<argument pos:start="93:23" pos:end="93:25"><expr pos:start="93:23" pos:end="93:25"><name pos:start="93:23" pos:end="93:25">dev</name></expr></argument>, <argument pos:start="93:28" pos:end="93:48"><expr pos:start="93:28" pos:end="93:48"><name pos:start="93:28" pos:end="93:48">slavio_set_power_fail</name></expr></argument>, <argument pos:start="93:51" pos:end="93:51"><expr pos:start="93:51" pos:end="93:51"><literal type="number" pos:start="93:51" pos:end="93:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="97:5" pos:end="97:13">return <expr pos:start="97:12" pos:end="97:12"><literal type="number" pos:start="97:12" pos:end="97:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
