<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27146.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">pixel_format_message</name> <parameter_list pos:start="1:34" pos:end="1:47">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:44"><name pos:start="1:35" pos:end="1:42">VncState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">vs</name></decl></parameter>)</parameter_list> <block pos:start="1:49" pos:end="99:1">{<block_content pos:start="3:5" pos:end="97:26">

    <decl_stmt pos:start="3:5" pos:end="3:30"><decl pos:start="3:5" pos:end="3:29"><type pos:start="3:5" pos:end="3:8"><name pos:start="3:5" pos:end="3:8">char</name></type> <name pos:start="3:10" pos:end="3:15"><name pos:start="3:10" pos:end="3:12">pad</name><index pos:start="3:13" pos:end="3:15">[<expr pos:start="3:14" pos:end="3:14"><literal type="number" pos:start="3:14" pos:end="3:14">3</literal></expr>]</index></name> <init pos:start="3:17" pos:end="3:29">= <expr pos:start="3:19" pos:end="3:29"><block pos:start="3:19" pos:end="3:29">{ <expr pos:start="3:21" pos:end="3:21"><literal type="number" pos:start="3:21" pos:end="3:21">0</literal></expr>, <expr pos:start="3:24" pos:end="3:24"><literal type="number" pos:start="3:24" pos:end="3:24">0</literal></expr>, <expr pos:start="3:27" pos:end="3:27"><literal type="number" pos:start="3:27" pos:end="3:27">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="7:5" pos:end="7:36"><expr pos:start="7:5" pos:end="7:35"><call pos:start="7:5" pos:end="7:35"><name pos:start="7:5" pos:end="7:16">vnc_write_u8</name><argument_list pos:start="7:17" pos:end="7:35">(<argument pos:start="7:18" pos:end="7:19"><expr pos:start="7:18" pos:end="7:19"><name pos:start="7:18" pos:end="7:19">vs</name></expr></argument>, <argument pos:start="7:22" pos:end="7:34"><expr pos:start="7:22" pos:end="7:34"><name pos:start="7:22" pos:end="7:30"><name pos:start="7:22" pos:end="7:23">vs</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:30">depth</name></name> <operator pos:start="7:32" pos:end="7:32">*</operator> <literal type="number" pos:start="7:34" pos:end="7:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="7:38" pos:end="7:57">/* bits-per-pixel */</comment>

    <if_stmt pos:start="9:5" pos:end="16:0"><if pos:start="9:5" pos:end="9:45">if <condition pos:start="9:8" pos:end="9:23">(<expr pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:10">vs</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:17">depth</name></name> <operator pos:start="9:19" pos:end="9:20">==</operator> <literal type="number" pos:start="9:22" pos:end="9:22">4</literal></expr>)</condition><block type="pseudo" pos:start="9:25" pos:end="9:45"><block_content pos:start="9:25" pos:end="9:45"> <expr_stmt pos:start="9:25" pos:end="9:45"><expr pos:start="9:25" pos:end="9:44"><call pos:start="9:25" pos:end="9:44"><name pos:start="9:25" pos:end="9:36">vnc_write_u8</name><argument_list pos:start="9:37" pos:end="9:44">(<argument pos:start="9:38" pos:end="9:39"><expr pos:start="9:38" pos:end="9:39"><name pos:start="9:38" pos:end="9:39">vs</name></expr></argument>, <argument pos:start="9:42" pos:end="9:43"><expr pos:start="9:42" pos:end="9:43"><literal type="number" pos:start="9:42" pos:end="9:43">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="9:47" pos:end="9:57">/* depth */</comment>

    <else pos:start="11:5" pos:end="16:0">else<block type="pseudo" pos:start="11:10" pos:end="16:0"><block_content pos:start="11:10" pos:end="16:0"> <expr_stmt pos:start="11:10" pos:end="16:0"><expr pos:start="11:10" pos:end="11:40"><call pos:start="11:10" pos:end="11:40"><name pos:start="11:10" pos:end="11:21">vnc_write_u8</name><argument_list pos:start="11:22" pos:end="11:40">(<argument pos:start="11:23" pos:end="11:24"><expr pos:start="11:23" pos:end="11:24"><name pos:start="11:23" pos:end="11:24">vs</name></expr></argument>, <argument pos:start="11:27" pos:end="11:39"><expr pos:start="11:27" pos:end="11:39"><name pos:start="11:27" pos:end="11:35"><name pos:start="11:27" pos:end="11:28">vs</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:35">depth</name></name> <operator pos:start="11:37" pos:end="11:37">*</operator> <literal type="number" pos:start="11:39" pos:end="11:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="11:43" pos:end="11:53">/* depth */</comment>



<cpp:ifdef pos:start="15:1" pos:end="15:22">#<cpp:directive pos:start="15:2" pos:end="15:6">ifdef</cpp:directive> <name pos:start="15:8" pos:end="15:22">WORDS_BIGENDIAN</name></cpp:ifdef>

    <expr_stmt pos:start="17:5" pos:end="20:0"><expr pos:start="17:5" pos:end="17:23"><call pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:16">vnc_write_u8</name><argument_list pos:start="17:17" pos:end="17:23">(<argument pos:start="17:18" pos:end="17:19"><expr pos:start="17:18" pos:end="17:19"><name pos:start="17:18" pos:end="17:19">vs</name></expr></argument>, <argument pos:start="17:22" pos:end="17:22"><expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="block" pos:start="17:38" pos:end="17:58">/* big-endian-flag */</comment>

<cpp:else pos:start="19:1" pos:end="19:5">#<cpp:directive pos:start="19:2" pos:end="19:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="21:5" pos:end="24:0"><expr pos:start="21:5" pos:end="21:23"><call pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:16">vnc_write_u8</name><argument_list pos:start="21:17" pos:end="21:23">(<argument pos:start="21:18" pos:end="21:19"><expr pos:start="21:18" pos:end="21:19"><name pos:start="21:18" pos:end="21:19">vs</name></expr></argument>, <argument pos:start="21:22" pos:end="21:22"><expr pos:start="21:22" pos:end="21:22"><literal type="number" pos:start="21:22" pos:end="21:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="block" pos:start="21:38" pos:end="21:58">/* big-endian-flag */</comment>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><call pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:16">vnc_write_u8</name><argument_list pos:start="25:17" pos:end="25:23">(<argument pos:start="25:18" pos:end="25:19"><expr pos:start="25:18" pos:end="25:19"><name pos:start="25:18" pos:end="25:19">vs</name></expr></argument>, <argument pos:start="25:22" pos:end="25:22"><expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="block" pos:start="25:38" pos:end="25:58">/* true-color-flag */</comment>

    <if_stmt pos:start="27:5" pos:end="77:5"><if pos:start="27:5" pos:end="43:5">if <condition pos:start="27:8" pos:end="27:23">(<expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:10">vs</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:17">depth</name></name> <operator pos:start="27:19" pos:end="27:20">==</operator> <literal type="number" pos:start="27:22" pos:end="27:22">4</literal></expr>)</condition> <block pos:start="27:25" pos:end="43:5">{<block_content pos:start="29:9" pos:end="41:53">

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><call pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:21">vnc_write_u16</name><argument_list pos:start="29:22" pos:end="29:31">(<argument pos:start="29:23" pos:end="29:24"><expr pos:start="29:23" pos:end="29:24"><name pos:start="29:23" pos:end="29:24">vs</name></expr></argument>, <argument pos:start="29:27" pos:end="29:30"><expr pos:start="29:27" pos:end="29:30"><literal type="number" pos:start="29:27" pos:end="29:30">0xFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="29:38" pos:end="29:50">/* red-max */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><call pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:21">vnc_write_u16</name><argument_list pos:start="31:22" pos:end="31:31">(<argument pos:start="31:23" pos:end="31:24"><expr pos:start="31:23" pos:end="31:24"><name pos:start="31:23" pos:end="31:24">vs</name></expr></argument>, <argument pos:start="31:27" pos:end="31:30"><expr pos:start="31:27" pos:end="31:30"><literal type="number" pos:start="31:27" pos:end="31:30">0xFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="31:38" pos:end="31:52">/* green-max */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><call pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:21">vnc_write_u16</name><argument_list pos:start="33:22" pos:end="33:31">(<argument pos:start="33:23" pos:end="33:24"><expr pos:start="33:23" pos:end="33:24"><name pos:start="33:23" pos:end="33:24">vs</name></expr></argument>, <argument pos:start="33:27" pos:end="33:30"><expr pos:start="33:27" pos:end="33:30"><literal type="number" pos:start="33:27" pos:end="33:30">0xFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="33:38" pos:end="33:51">/* blue-max */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><call pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:20">vnc_write_u8</name><argument_list pos:start="35:21" pos:end="35:28">(<argument pos:start="35:22" pos:end="35:23"><expr pos:start="35:22" pos:end="35:23"><name pos:start="35:22" pos:end="35:23">vs</name></expr></argument>, <argument pos:start="35:26" pos:end="35:27"><expr pos:start="35:26" pos:end="35:27"><literal type="number" pos:start="35:26" pos:end="35:27">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>        <comment type="block" pos:start="35:38" pos:end="35:52">/* red-shift */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:28"><expr pos:start="37:9" pos:end="37:27"><call pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:20">vnc_write_u8</name><argument_list pos:start="37:21" pos:end="37:27">(<argument pos:start="37:22" pos:end="37:23"><expr pos:start="37:22" pos:end="37:23"><name pos:start="37:22" pos:end="37:23">vs</name></expr></argument>, <argument pos:start="37:26" pos:end="37:26"><expr pos:start="37:26" pos:end="37:26"><literal type="number" pos:start="37:26" pos:end="37:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="37:38" pos:end="37:54">/* green-shift */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><call pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:20">vnc_write_u8</name><argument_list pos:start="39:21" pos:end="39:27">(<argument pos:start="39:22" pos:end="39:23"><expr pos:start="39:22" pos:end="39:23"><name pos:start="39:22" pos:end="39:23">vs</name></expr></argument>, <argument pos:start="39:26" pos:end="39:26"><expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="39:38" pos:end="39:53">/* blue-shift */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:53"><expr pos:start="41:9" pos:end="41:52"><name pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:10">vs</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:29">send_hextile_tile</name></name> <operator pos:start="41:31" pos:end="41:31">=</operator> <name pos:start="41:33" pos:end="41:52">send_hextile_tile_32</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="59:5">else if <condition pos:start="43:15" pos:end="43:30">(<expr pos:start="43:16" pos:end="43:29"><name pos:start="43:16" pos:end="43:24"><name pos:start="43:16" pos:end="43:17">vs</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:24">depth</name></name> <operator pos:start="43:26" pos:end="43:27">==</operator> <literal type="number" pos:start="43:29" pos:end="43:29">2</literal></expr>)</condition> <block pos:start="43:32" pos:end="59:5">{<block_content pos:start="45:9" pos:end="57:53">

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><call pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:21">vnc_write_u16</name><argument_list pos:start="45:22" pos:end="45:29">(<argument pos:start="45:23" pos:end="45:24"><expr pos:start="45:23" pos:end="45:24"><name pos:start="45:23" pos:end="45:24">vs</name></expr></argument>, <argument pos:start="45:27" pos:end="45:28"><expr pos:start="45:27" pos:end="45:28"><literal type="number" pos:start="45:27" pos:end="45:28">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="block" pos:start="45:38" pos:end="45:50">/* red-max */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:30"><expr pos:start="47:9" pos:end="47:29"><call pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:21">vnc_write_u16</name><argument_list pos:start="47:22" pos:end="47:29">(<argument pos:start="47:23" pos:end="47:24"><expr pos:start="47:23" pos:end="47:24"><name pos:start="47:23" pos:end="47:24">vs</name></expr></argument>, <argument pos:start="47:27" pos:end="47:28"><expr pos:start="47:27" pos:end="47:28"><literal type="number" pos:start="47:27" pos:end="47:28">63</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="block" pos:start="47:38" pos:end="47:52">/* green-max */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:30"><expr pos:start="49:9" pos:end="49:29"><call pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:21">vnc_write_u16</name><argument_list pos:start="49:22" pos:end="49:29">(<argument pos:start="49:23" pos:end="49:24"><expr pos:start="49:23" pos:end="49:24"><name pos:start="49:23" pos:end="49:24">vs</name></expr></argument>, <argument pos:start="49:27" pos:end="49:28"><expr pos:start="49:27" pos:end="49:28"><literal type="number" pos:start="49:27" pos:end="49:28">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="block" pos:start="49:38" pos:end="49:51">/* blue-max */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><call pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:20">vnc_write_u8</name><argument_list pos:start="51:21" pos:end="51:28">(<argument pos:start="51:22" pos:end="51:23"><expr pos:start="51:22" pos:end="51:23"><name pos:start="51:22" pos:end="51:23">vs</name></expr></argument>, <argument pos:start="51:26" pos:end="51:27"><expr pos:start="51:26" pos:end="51:27"><literal type="number" pos:start="51:26" pos:end="51:27">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>        <comment type="block" pos:start="51:38" pos:end="51:52">/* red-shift */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><call pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:20">vnc_write_u8</name><argument_list pos:start="53:21" pos:end="53:27">(<argument pos:start="53:22" pos:end="53:23"><expr pos:start="53:22" pos:end="53:23"><name pos:start="53:22" pos:end="53:23">vs</name></expr></argument>, <argument pos:start="53:26" pos:end="53:26"><expr pos:start="53:26" pos:end="53:26"><literal type="number" pos:start="53:26" pos:end="53:26">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="53:38" pos:end="53:54">/* green-shift */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><call pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:20">vnc_write_u8</name><argument_list pos:start="55:21" pos:end="55:27">(<argument pos:start="55:22" pos:end="55:23"><expr pos:start="55:22" pos:end="55:23"><name pos:start="55:22" pos:end="55:23">vs</name></expr></argument>, <argument pos:start="55:26" pos:end="55:26"><expr pos:start="55:26" pos:end="55:26"><literal type="number" pos:start="55:26" pos:end="55:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="55:38" pos:end="55:53">/* blue-shift */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:53"><expr pos:start="57:9" pos:end="57:52"><name pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:10">vs</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:29">send_hextile_tile</name></name> <operator pos:start="57:31" pos:end="57:31">=</operator> <name pos:start="57:33" pos:end="57:52">send_hextile_tile_16</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="77:5">else if <condition pos:start="59:15" pos:end="59:30">(<expr pos:start="59:16" pos:end="59:29"><name pos:start="59:16" pos:end="59:24"><name pos:start="59:16" pos:end="59:17">vs</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:24">depth</name></name> <operator pos:start="59:26" pos:end="59:27">==</operator> <literal type="number" pos:start="59:29" pos:end="59:29">1</literal></expr>)</condition> <block pos:start="59:32" pos:end="77:5">{<block_content pos:start="63:9" pos:end="75:52">

        <comment type="block" pos:start="61:9" pos:end="61:78">/* XXX: change QEMU pixel 8 bit pixel format to match the VNC one ? */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:29"><expr pos:start="63:9" pos:end="63:28"><call pos:start="63:9" pos:end="63:28"><name pos:start="63:9" pos:end="63:21">vnc_write_u16</name><argument_list pos:start="63:22" pos:end="63:28">(<argument pos:start="63:23" pos:end="63:24"><expr pos:start="63:23" pos:end="63:24"><name pos:start="63:23" pos:end="63:24">vs</name></expr></argument>, <argument pos:start="63:27" pos:end="63:27"><expr pos:start="63:27" pos:end="63:27"><literal type="number" pos:start="63:27" pos:end="63:27">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>        <comment type="block" pos:start="63:38" pos:end="63:50">/* red-max */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:29"><expr pos:start="65:9" pos:end="65:28"><call pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:21">vnc_write_u16</name><argument_list pos:start="65:22" pos:end="65:28">(<argument pos:start="65:23" pos:end="65:24"><expr pos:start="65:23" pos:end="65:24"><name pos:start="65:23" pos:end="65:24">vs</name></expr></argument>, <argument pos:start="65:27" pos:end="65:27"><expr pos:start="65:27" pos:end="65:27"><literal type="number" pos:start="65:27" pos:end="65:27">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>        <comment type="block" pos:start="65:38" pos:end="65:52">/* green-max */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:29"><expr pos:start="67:9" pos:end="67:28"><call pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:21">vnc_write_u16</name><argument_list pos:start="67:22" pos:end="67:28">(<argument pos:start="67:23" pos:end="67:24"><expr pos:start="67:23" pos:end="67:24"><name pos:start="67:23" pos:end="67:24">vs</name></expr></argument>, <argument pos:start="67:27" pos:end="67:27"><expr pos:start="67:27" pos:end="67:27"><literal type="number" pos:start="67:27" pos:end="67:27">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>        <comment type="block" pos:start="67:38" pos:end="67:51">/* blue-max */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:28"><expr pos:start="69:9" pos:end="69:27"><call pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:20">vnc_write_u8</name><argument_list pos:start="69:21" pos:end="69:27">(<argument pos:start="69:22" pos:end="69:23"><expr pos:start="69:22" pos:end="69:23"><name pos:start="69:22" pos:end="69:23">vs</name></expr></argument>, <argument pos:start="69:26" pos:end="69:26"><expr pos:start="69:26" pos:end="69:26"><literal type="number" pos:start="69:26" pos:end="69:26">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="69:38" pos:end="69:52">/* red-shift */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:28"><expr pos:start="71:9" pos:end="71:27"><call pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:20">vnc_write_u8</name><argument_list pos:start="71:21" pos:end="71:27">(<argument pos:start="71:22" pos:end="71:23"><expr pos:start="71:22" pos:end="71:23"><name pos:start="71:22" pos:end="71:23">vs</name></expr></argument>, <argument pos:start="71:26" pos:end="71:26"><expr pos:start="71:26" pos:end="71:26"><literal type="number" pos:start="71:26" pos:end="71:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="71:38" pos:end="71:54">/* green-shift */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:28"><expr pos:start="73:9" pos:end="73:27"><call pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:20">vnc_write_u8</name><argument_list pos:start="73:21" pos:end="73:27">(<argument pos:start="73:22" pos:end="73:23"><expr pos:start="73:22" pos:end="73:23"><name pos:start="73:22" pos:end="73:23">vs</name></expr></argument>, <argument pos:start="73:26" pos:end="73:26"><expr pos:start="73:26" pos:end="73:26"><literal type="number" pos:start="73:26" pos:end="73:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="73:38" pos:end="73:53">/* blue-shift */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:52"><expr pos:start="75:9" pos:end="75:51"><name pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:10">vs</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:29">send_hextile_tile</name></name> <operator pos:start="75:31" pos:end="75:31">=</operator> <name pos:start="75:33" pos:end="75:51">send_hextile_tile_8</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:44"><expr pos:start="79:5" pos:end="79:43"><name pos:start="79:5" pos:end="79:22"><name pos:start="79:5" pos:end="79:6">vs</name><operator pos:start="79:7" pos:end="79:8">-&gt;</operator><name pos:start="79:9" pos:end="79:22">client_red_max</name></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:43"><name pos:start="79:26" pos:end="79:27">vs</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:43">server_red_max</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:48"><expr pos:start="81:5" pos:end="81:47"><name pos:start="81:5" pos:end="81:24"><name pos:start="81:5" pos:end="81:6">vs</name><operator pos:start="81:7" pos:end="81:8">-&gt;</operator><name pos:start="81:9" pos:end="81:24">client_green_max</name></name> <operator pos:start="81:26" pos:end="81:26">=</operator> <name pos:start="81:28" pos:end="81:47"><name pos:start="81:28" pos:end="81:29">vs</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:47">server_green_max</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:46"><expr pos:start="83:5" pos:end="83:45"><name pos:start="83:5" pos:end="83:23"><name pos:start="83:5" pos:end="83:6">vs</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:23">client_blue_max</name></name> <operator pos:start="83:25" pos:end="83:25">=</operator> <name pos:start="83:27" pos:end="83:45"><name pos:start="83:27" pos:end="83:28">vs</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:45">server_blue_max</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:48"><expr pos:start="85:5" pos:end="85:47"><name pos:start="85:5" pos:end="85:24"><name pos:start="85:5" pos:end="85:6">vs</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:24">client_red_shift</name></name> <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:47"><name pos:start="85:28" pos:end="85:29">vs</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:47">server_red_shift</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:52"><expr pos:start="87:5" pos:end="87:51"><name pos:start="87:5" pos:end="87:26"><name pos:start="87:5" pos:end="87:6">vs</name><operator pos:start="87:7" pos:end="87:8">-&gt;</operator><name pos:start="87:9" pos:end="87:26">client_green_shift</name></name> <operator pos:start="87:28" pos:end="87:28">=</operator> <name pos:start="87:30" pos:end="87:51"><name pos:start="87:30" pos:end="87:31">vs</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:51">server_green_shift</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:50"><expr pos:start="89:5" pos:end="89:49"><name pos:start="89:5" pos:end="89:25"><name pos:start="89:5" pos:end="89:6">vs</name><operator pos:start="89:7" pos:end="89:8">-&gt;</operator><name pos:start="89:9" pos:end="89:25">client_blue_shift</name></name> <operator pos:start="89:27" pos:end="89:27">=</operator> <name pos:start="89:29" pos:end="89:49"><name pos:start="89:29" pos:end="89:30">vs</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:49">server_blue_shift</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:32"><expr pos:start="91:5" pos:end="91:31"><name pos:start="91:5" pos:end="91:15"><name pos:start="91:5" pos:end="91:6">vs</name><operator pos:start="91:7" pos:end="91:8">-&gt;</operator><name pos:start="91:9" pos:end="91:15">pix_bpp</name></name> <operator pos:start="91:17" pos:end="91:17">=</operator> <name pos:start="91:19" pos:end="91:27"><name pos:start="91:19" pos:end="91:20">vs</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:27">depth</name></name> <operator pos:start="91:29" pos:end="91:29">*</operator> <literal type="number" pos:start="91:31" pos:end="91:31">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:45"><expr pos:start="93:5" pos:end="93:44"><name pos:start="93:5" pos:end="93:20"><name pos:start="93:5" pos:end="93:6">vs</name><operator pos:start="93:7" pos:end="93:8">-&gt;</operator><name pos:start="93:9" pos:end="93:20">write_pixels</name></name> <operator pos:start="93:22" pos:end="93:22">=</operator> <name pos:start="93:24" pos:end="93:44">vnc_write_pixels_copy</name></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:26"><expr pos:start="97:5" pos:end="97:25"><call pos:start="97:5" pos:end="97:25"><name pos:start="97:5" pos:end="97:13">vnc_write</name><argument_list pos:start="97:14" pos:end="97:25">(<argument pos:start="97:15" pos:end="97:16"><expr pos:start="97:15" pos:end="97:16"><name pos:start="97:15" pos:end="97:16">vs</name></expr></argument>, <argument pos:start="97:19" pos:end="97:21"><expr pos:start="97:19" pos:end="97:21"><name pos:start="97:19" pos:end="97:21">pad</name></expr></argument>, <argument pos:start="97:24" pos:end="97:24"><expr pos:start="97:24" pos:end="97:24"><literal type="number" pos:start="97:24" pos:end="97:24">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>           <comment type="block" pos:start="97:38" pos:end="97:50">/* padding */</comment>

</block_content>}</block></function>
</unit>
