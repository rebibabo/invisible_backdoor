<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21642.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">check_strtox_error</name><parameter_list pos:start="1:30" pos:end="3:38">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><specifier pos:start="1:31" pos:end="1:35">const</specifier> <name pos:start="1:37" pos:end="1:40">char</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">p</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:57">endptr</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:76"><decl pos:start="1:60" pos:end="1:76"><type pos:start="1:60" pos:end="1:76"><specifier pos:start="1:60" pos:end="1:64">const</specifier> <name pos:start="1:66" pos:end="1:69">char</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier><modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:76">next</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:37"><decl pos:start="3:31" pos:end="3:37"><type pos:start="3:31" pos:end="3:37"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:37">err</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="13:5" pos:end="31:16">

    <comment type="block" pos:start="7:5" pos:end="11:7">/* If no conversion was performed, prefer BSD behavior over glibc

     * behavior.

     */</comment>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:32">(<expr pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:11">err</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <literal type="number" pos:start="13:16" pos:end="13:16">0</literal> <operator pos:start="13:18" pos:end="13:19">&amp;&amp;</operator> <name pos:start="13:21" pos:end="13:26">endptr</name> <operator pos:start="13:28" pos:end="13:29">==</operator> <name pos:start="13:31" pos:end="13:31">p</name></expr>)</condition> <block pos:start="13:34" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:21">

        <expr_stmt pos:start="15:9" pos:end="15:21"><expr pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:11">err</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:20">EINVAL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:25">(<expr pos:start="19:9" pos:end="19:24"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:13">next</name> <operator pos:start="19:15" pos:end="19:16">&amp;&amp;</operator> <operator pos:start="19:18" pos:end="19:18">*</operator><name pos:start="19:19" pos:end="19:24">endptr</name></expr>)</condition> <block pos:start="19:27" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:23">

        <return pos:start="21:9" pos:end="21:23">return <expr pos:start="21:16" pos:end="21:22"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:13">(<expr pos:start="25:9" pos:end="25:12"><name pos:start="25:9" pos:end="25:12">next</name></expr>)</condition> <block pos:start="25:15" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:23">

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:13">next</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:22">endptr</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="31:5" pos:end="31:16">return <expr pos:start="31:12" pos:end="31:15"><operator pos:start="31:12" pos:end="31:12">-</operator><name pos:start="31:13" pos:end="31:15">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
