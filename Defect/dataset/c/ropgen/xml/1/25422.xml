<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25422.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:34">fieldmatch_init</name><parameter_list pos:start="1:35" pos:end="1:56">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:50">AVFilterContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:13">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:29"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:27">FieldMatchContext</name> <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:31">fm</name> <init pos:start="5:33" pos:end="5:43">= <expr pos:start="5:35" pos:end="5:43"><name pos:start="5:35" pos:end="5:43"><name pos:start="5:35" pos:end="5:37">ctx</name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:43">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="17:6"><decl pos:start="7:5" pos:end="17:5"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15">AVFilterPad</name></type> <name pos:start="7:17" pos:end="7:19">pad</name> <init pos:start="7:21" pos:end="17:5">= <expr pos:start="7:23" pos:end="17:5"><block pos:start="7:23" pos:end="17:5">{

        <expr pos:start="9:9" pos:end="9:41"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:13">name</name>         <operator pos:start="9:23" pos:end="9:23">=</operator> <call pos:start="9:25" pos:end="9:41"><name pos:start="9:25" pos:end="9:33">av_strdup</name><argument_list pos:start="9:34" pos:end="9:41">(<argument pos:start="9:35" pos:end="9:40"><expr pos:start="9:35" pos:end="9:40"><literal type="string" pos:start="9:35" pos:end="9:40">"main"</literal></expr></argument>)</argument_list></call></expr>,

        <expr pos:start="11:9" pos:end="11:42"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:13">type</name>         <operator pos:start="11:23" pos:end="11:23">=</operator> <name pos:start="11:25" pos:end="11:42">AVMEDIA_TYPE_VIDEO</name></expr>,

        <expr pos:start="13:9" pos:end="13:36"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:21">filter_frame</name> <operator pos:start="13:23" pos:end="13:23">=</operator> <name pos:start="13:25" pos:end="13:36">filter_frame</name></expr>,

        <expr pos:start="15:9" pos:end="15:36"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:21">config_props</name> <operator pos:start="15:23" pos:end="15:23">=</operator> <name pos:start="15:25" pos:end="15:36">config_input</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:31"><if pos:start="21:5" pos:end="23:31">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:17"><name pos:start="21:10" pos:end="21:12">pad</name><operator pos:start="21:13" pos:end="21:13">.</operator><name pos:start="21:14" pos:end="21:17">name</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><call pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:19">ff_insert_inpad</name><argument_list pos:start="25:20" pos:end="25:42">(<argument pos:start="25:21" pos:end="25:23"><expr pos:start="25:21" pos:end="25:23"><name pos:start="25:21" pos:end="25:23">ctx</name></expr></argument>, <argument pos:start="25:26" pos:end="25:35"><expr pos:start="25:26" pos:end="25:35"><name pos:start="25:26" pos:end="25:35">INPUT_MAIN</name></expr></argument>, <argument pos:start="25:38" pos:end="25:41"><expr pos:start="25:38" pos:end="25:41"><operator pos:start="25:38" pos:end="25:38">&amp;</operator><name pos:start="25:39" pos:end="25:41">pad</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="41:5"><if pos:start="29:5" pos:end="41:5">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:10">fm</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:17">ppsrc</name></name></expr>)</condition> <block pos:start="29:20" pos:end="41:5">{<block_content pos:start="31:9" pos:end="39:51">

        <expr_stmt pos:start="31:9" pos:end="31:42"><expr pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:11">pad</name><operator pos:start="31:12" pos:end="31:12">.</operator><name pos:start="31:13" pos:end="31:16">name</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="31:41"><name pos:start="31:20" pos:end="31:28">av_strdup</name><argument_list pos:start="31:29" pos:end="31:41">(<argument pos:start="31:30" pos:end="31:40"><expr pos:start="31:30" pos:end="31:40"><literal type="string" pos:start="31:30" pos:end="31:40">"clean_src"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:11">pad</name><operator pos:start="33:12" pos:end="33:12">.</operator><name pos:start="33:13" pos:end="33:24">config_props</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <name pos:start="33:28" pos:end="33:31">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:35"><if pos:start="35:9" pos:end="37:35">if <condition pos:start="35:12" pos:end="35:22">(<expr pos:start="35:13" pos:end="35:21"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:21"><name pos:start="35:14" pos:end="35:16">pad</name><operator pos:start="35:17" pos:end="35:17">.</operator><name pos:start="35:18" pos:end="35:21">name</name></name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:35"><block_content pos:start="37:13" pos:end="37:35">

            <return pos:start="37:13" pos:end="37:35">return <expr pos:start="37:20" pos:end="37:34"><call pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:26">AVERROR</name><argument_list pos:start="37:27" pos:end="37:34">(<argument pos:start="37:28" pos:end="37:33"><expr pos:start="37:28" pos:end="37:33"><name pos:start="37:28" pos:end="37:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:51"><expr pos:start="39:9" pos:end="39:50"><call pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:23">ff_insert_inpad</name><argument_list pos:start="39:24" pos:end="39:50">(<argument pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">ctx</name></expr></argument>, <argument pos:start="39:30" pos:end="39:43"><expr pos:start="39:30" pos:end="39:43"><name pos:start="39:30" pos:end="39:43">INPUT_CLEANSRC</name></expr></argument>, <argument pos:start="39:46" pos:end="39:49"><expr pos:start="39:46" pos:end="39:49"><operator pos:start="39:46" pos:end="39:46">&amp;</operator><name pos:start="39:47" pos:end="39:49">pad</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="47:40">(<expr pos:start="45:9" pos:end="47:39"><operator pos:start="45:9" pos:end="45:9">(</operator><name pos:start="45:10" pos:end="45:19"><name pos:start="45:10" pos:end="45:11">fm</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:19">blockx</name></name> <operator pos:start="45:21" pos:end="45:21">&amp;</operator> <operator pos:start="45:23" pos:end="45:23">(</operator><name pos:start="45:24" pos:end="45:33"><name pos:start="45:24" pos:end="45:25">fm</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:33">blockx</name></name> <operator pos:start="45:35" pos:end="45:35">-</operator> <literal type="number" pos:start="45:37" pos:end="45:37">1</literal><operator pos:start="45:38" pos:end="45:38">)</operator><operator pos:start="45:39" pos:end="45:39">)</operator> <operator pos:start="45:41" pos:end="45:42">||</operator>

        <operator pos:start="47:9" pos:end="47:9">(</operator><name pos:start="47:10" pos:end="47:19"><name pos:start="47:10" pos:end="47:11">fm</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:19">blocky</name></name> <operator pos:start="47:21" pos:end="47:21">&amp;</operator> <operator pos:start="47:23" pos:end="47:23">(</operator><name pos:start="47:24" pos:end="47:33"><name pos:start="47:24" pos:end="47:25">fm</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:33">blocky</name></name> <operator pos:start="47:35" pos:end="47:35">-</operator> <literal type="number" pos:start="47:37" pos:end="47:37">1</literal><operator pos:start="47:38" pos:end="47:38">)</operator><operator pos:start="47:39" pos:end="47:39">)</operator></expr>)</condition> <block pos:start="47:42" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:31">

        <expr_stmt pos:start="49:9" pos:end="49:87"><expr pos:start="49:9" pos:end="49:86"><call pos:start="49:9" pos:end="49:86"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:86">(<argument pos:start="49:16" pos:end="49:18"><expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">ctx</name></expr></argument>, <argument pos:start="49:21" pos:end="49:32"><expr pos:start="49:21" pos:end="49:32"><name pos:start="49:21" pos:end="49:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:35" pos:end="49:85"><expr pos:start="49:35" pos:end="49:85"><literal type="string" pos:start="49:35" pos:end="49:85">"blockx and blocky settings must be power of two\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:31">return <expr pos:start="51:16" pos:end="51:30"><call pos:start="51:16" pos:end="51:30"><name pos:start="51:16" pos:end="51:22">AVERROR</name><argument_list pos:start="51:23" pos:end="51:30">(<argument pos:start="51:24" pos:end="51:29"><expr pos:start="51:24" pos:end="51:29"><name pos:start="51:24" pos:end="51:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:46">(<expr pos:start="57:9" pos:end="57:45"><name pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:10">fm</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:19">combpel</name></name> <operator pos:start="57:21" pos:end="57:21">&gt;</operator> <name pos:start="57:23" pos:end="57:32"><name pos:start="57:23" pos:end="57:24">fm</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:32">blockx</name></name> <operator pos:start="57:34" pos:end="57:34">*</operator> <name pos:start="57:36" pos:end="57:45"><name pos:start="57:36" pos:end="57:37">fm</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:45">blocky</name></name></expr>)</condition> <block pos:start="57:48" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:31">

        <expr_stmt pos:start="59:9" pos:end="59:94"><expr pos:start="59:9" pos:end="59:93"><call pos:start="59:9" pos:end="59:93"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="59:93">(<argument pos:start="59:16" pos:end="59:18"><expr pos:start="59:16" pos:end="59:18"><name pos:start="59:16" pos:end="59:18">ctx</name></expr></argument>, <argument pos:start="59:21" pos:end="59:32"><expr pos:start="59:21" pos:end="59:32"><name pos:start="59:21" pos:end="59:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:35" pos:end="59:92"><expr pos:start="59:35" pos:end="59:92"><literal type="string" pos:start="59:35" pos:end="59:92">"Combed pixel should not be larger than blockx x blocky\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:31">return <expr pos:start="61:16" pos:end="61:30"><call pos:start="61:16" pos:end="61:30"><name pos:start="61:16" pos:end="61:22">AVERROR</name><argument_list pos:start="61:23" pos:end="61:30">(<argument pos:start="61:24" pos:end="61:29"><expr pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
