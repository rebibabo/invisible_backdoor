<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26506.c" pos:tabs="8"><function pos:start="1:1" pos:end="265:1"><type pos:start="1:1" pos:end="1:12"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:12">float</name></type> <name pos:start="1:14" pos:end="1:35">get_band_cost_ESC_mips</name><parameter_list pos:start="1:36" pos:end="9:46">(<parameter pos:start="1:37" pos:end="1:59"><decl pos:start="1:37" pos:end="1:59"><type pos:start="1:37" pos:end="1:59"><name pos:start="1:37" pos:end="1:56"><name pos:start="1:37" pos:end="1:42">struct</name> <name pos:start="1:44" pos:end="1:56">AACEncContext</name></name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">s</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:53"><decl pos:start="3:37" pos:end="3:53"><type pos:start="3:37" pos:end="3:53"><name pos:start="3:37" pos:end="3:49">PutBitContext</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:53">pb</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:70"><decl pos:start="3:56" pos:end="3:70"><type pos:start="3:56" pos:end="3:70"><specifier pos:start="3:56" pos:end="3:60">const</specifier> <name pos:start="3:62" pos:end="3:66">float</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier></type><name pos:start="3:69" pos:end="3:70">in</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:55"><decl pos:start="5:37" pos:end="5:55"><type pos:start="5:37" pos:end="5:55"><specifier pos:start="5:37" pos:end="5:41">const</specifier> <name pos:start="5:43" pos:end="5:47">float</name> <modifier pos:start="5:49" pos:end="5:49">*</modifier></type><name pos:start="5:50" pos:end="5:55">scaled</name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:65"><decl pos:start="5:58" pos:end="5:65"><type pos:start="5:58" pos:end="5:65"><name pos:start="5:58" pos:end="5:60">int</name></type> <name pos:start="5:62" pos:end="5:65">size</name></decl></parameter>, <parameter pos:start="5:68" pos:end="5:80"><decl pos:start="5:68" pos:end="5:80"><type pos:start="5:68" pos:end="5:80"><name pos:start="5:68" pos:end="5:70">int</name></type> <name pos:start="5:72" pos:end="5:80">scale_idx</name></decl></parameter>,

                                    <parameter pos:start="7:37" pos:end="7:42"><decl pos:start="7:37" pos:end="7:42"><type pos:start="7:37" pos:end="7:42"><name pos:start="7:37" pos:end="7:39">int</name></type> <name pos:start="7:41" pos:end="7:42">cb</name></decl></parameter>, <parameter pos:start="7:45" pos:end="7:62"><decl pos:start="7:45" pos:end="7:62"><type pos:start="7:45" pos:end="7:62"><specifier pos:start="7:45" pos:end="7:49">const</specifier> <name pos:start="7:51" pos:end="7:55">float</name></type> <name pos:start="7:57" pos:end="7:62">lambda</name></decl></parameter>, <parameter pos:start="7:65" pos:end="7:81"><decl pos:start="7:65" pos:end="7:81"><type pos:start="7:65" pos:end="7:81"><specifier pos:start="7:65" pos:end="7:69">const</specifier> <name pos:start="7:71" pos:end="7:75">float</name></type> <name pos:start="7:77" pos:end="7:81">uplim</name></decl></parameter>,

                                    <parameter pos:start="9:37" pos:end="9:45"><decl pos:start="9:37" pos:end="9:45"><type pos:start="9:37" pos:end="9:45"><name pos:start="9:37" pos:end="9:39">int</name> <modifier pos:start="9:41" pos:end="9:41">*</modifier></type><name pos:start="9:42" pos:end="9:45">bits</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="265:1">{<block_content pos:start="13:5" pos:end="263:35">

    <decl_stmt pos:start="13:5" pos:end="13:99"><decl pos:start="13:5" pos:end="13:98"><type pos:start="13:5" pos:end="13:15"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:15">float</name></type> <name pos:start="13:17" pos:end="13:19">Q34</name> <init pos:start="13:21" pos:end="13:98">= <expr pos:start="13:23" pos:end="13:98"><name pos:start="13:23" pos:end="13:98"><name pos:start="13:23" pos:end="13:40">ff_aac_pow34sf_tab</name><index pos:start="13:41" pos:end="13:98">[<expr pos:start="13:42" pos:end="13:97"><name pos:start="13:42" pos:end="13:53">POW_SF2_ZERO</name> <operator pos:start="13:55" pos:end="13:55">-</operator> <name pos:start="13:57" pos:end="13:65">scale_idx</name> <operator pos:start="13:67" pos:end="13:67">+</operator> <name pos:start="13:69" pos:end="13:81">SCALE_ONE_POS</name> <operator pos:start="13:83" pos:end="13:83">-</operator> <name pos:start="13:85" pos:end="13:97">SCALE_DIV_512</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:99"><decl pos:start="15:5" pos:end="15:98"><type pos:start="15:5" pos:end="15:15"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:15">float</name></type> <name pos:start="15:17" pos:end="15:18">IQ</name>  <init pos:start="15:21" pos:end="15:98">= <expr pos:start="15:23" pos:end="15:98"><name pos:start="15:23" pos:end="15:98"><name pos:start="15:23" pos:end="15:39">ff_aac_pow2sf_tab</name> <index pos:start="15:41" pos:end="15:98">[<expr pos:start="15:42" pos:end="15:97"><name pos:start="15:42" pos:end="15:53">POW_SF2_ZERO</name> <operator pos:start="15:55" pos:end="15:55">+</operator> <name pos:start="15:57" pos:end="15:65">scale_idx</name> <operator pos:start="15:67" pos:end="15:67">-</operator> <name pos:start="15:69" pos:end="15:81">SCALE_ONE_POS</name> <operator pos:start="15:83" pos:end="15:83">+</operator> <name pos:start="15:85" pos:end="15:97">SCALE_DIV_512</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:48"><decl pos:start="17:5" pos:end="17:47"><type pos:start="17:5" pos:end="17:15"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:15">float</name></type> <name pos:start="17:17" pos:end="17:30">CLIPPED_ESCAPE</name> <init pos:start="17:32" pos:end="17:47">= <expr pos:start="17:34" pos:end="17:47"><literal type="number" pos:start="17:34" pos:end="17:42">165140.0f</literal> <operator pos:start="17:44" pos:end="17:44">*</operator> <name pos:start="17:46" pos:end="17:47">IQ</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:9">float</name></type> <name pos:start="21:11" pos:end="21:14">cost</name> <init pos:start="21:16" pos:end="21:18">= <expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:27"><decl pos:start="23:5" pos:end="23:11"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">qc1</name></decl>, <decl pos:start="23:14" pos:end="23:16"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:14" pos:end="23:16">qc2</name></decl>, <decl pos:start="23:19" pos:end="23:21"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:19" pos:end="23:21">qc3</name></decl>, <decl pos:start="23:24" pos:end="23:26"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:24" pos:end="23:26">qc4</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:20"><decl pos:start="25:5" pos:end="25:19"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:15">curbits</name> <init pos:start="25:17" pos:end="25:19">= <expr pos:start="25:19" pos:end="25:19"><literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="29:5" pos:end="29:60"><decl pos:start="29:5" pos:end="29:59"><type pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:11">uint8_t</name> <modifier pos:start="29:13" pos:end="29:13">*</modifier></type><name pos:start="29:14" pos:end="29:19">p_bits</name>  <init pos:start="29:22" pos:end="29:59">= <expr pos:start="29:24" pos:end="29:59"><operator pos:start="29:24" pos:end="29:24">(</operator><name pos:start="29:25" pos:end="29:31">uint8_t</name><operator pos:start="29:32" pos:end="29:32">*</operator><operator pos:start="29:33" pos:end="29:33">)</operator><name pos:start="29:34" pos:end="29:59"><name pos:start="29:34" pos:end="29:53">ff_aac_spectral_bits</name><index pos:start="29:54" pos:end="29:59">[<expr pos:start="29:55" pos:end="29:58"><name pos:start="29:55" pos:end="29:56">cb</name><operator pos:start="29:57" pos:end="29:57">-</operator><literal type="number" pos:start="29:58" pos:end="29:58">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:63"><decl pos:start="31:5" pos:end="31:62"><type pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:9">float</name>   <modifier pos:start="31:13" pos:end="31:13">*</modifier></type><name pos:start="31:14" pos:end="31:20">p_codes</name> <init pos:start="31:22" pos:end="31:62">= <expr pos:start="31:24" pos:end="31:62"><operator pos:start="31:24" pos:end="31:24">(</operator><name pos:start="31:25" pos:end="31:29">float</name><operator pos:start="31:30" pos:end="31:30">*</operator>  <operator pos:start="31:33" pos:end="31:33">)</operator><name pos:start="31:34" pos:end="31:62"><name pos:start="31:34" pos:end="31:56">ff_aac_codebook_vectors</name><index pos:start="31:57" pos:end="31:62">[<expr pos:start="31:58" pos:end="31:61"><name pos:start="31:58" pos:end="31:59">cb</name><operator pos:start="31:60" pos:end="31:60">-</operator><literal type="number" pos:start="31:61" pos:end="31:61">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <for pos:start="35:5" pos:end="255:5">for <control pos:start="35:9" pos:end="35:33">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:25"><expr pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:24">size</name></expr>;</condition> <incr pos:start="35:27" pos:end="35:32"><expr pos:start="35:27" pos:end="35:32"><name pos:start="35:27" pos:end="35:27">i</name> <operator pos:start="35:29" pos:end="35:30">+=</operator> <literal type="number" pos:start="35:32" pos:end="35:32">4</literal></expr></incr>)</control> <block pos:start="35:35" pos:end="255:5">{<block_content pos:start="37:9" pos:end="253:40">

        <decl_stmt pos:start="37:9" pos:end="37:32"><decl pos:start="37:9" pos:end="37:24"><type pos:start="37:9" pos:end="37:21"><specifier pos:start="37:9" pos:end="37:13">const</specifier> <name pos:start="37:15" pos:end="37:19">float</name> <modifier pos:start="37:21" pos:end="37:21">*</modifier></type><name pos:start="37:22" pos:end="37:24">vec</name></decl>, <decl pos:start="37:27" pos:end="37:31"><type ref="prev" pos:start="37:9" pos:end="37:21"><modifier pos:start="37:27" pos:end="37:27">*</modifier></type><name pos:start="37:28" pos:end="37:31">vec2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:28"><decl pos:start="39:9" pos:end="39:18"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:18">curidx</name></decl>, <decl pos:start="39:21" pos:end="39:27"><type ref="prev" pos:start="39:9" pos:end="39:11"/><name pos:start="39:21" pos:end="39:27">curidx2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:29"><decl pos:start="41:9" pos:end="41:16"><type pos:start="41:9" pos:end="41:13"><name pos:start="41:9" pos:end="41:13">float</name></type> <name pos:start="41:15" pos:end="41:16">t1</name></decl>, <decl pos:start="41:19" pos:end="41:20"><type ref="prev" pos:start="41:9" pos:end="41:13"/><name pos:start="41:19" pos:end="41:20">t2</name></decl>, <decl pos:start="41:23" pos:end="41:24"><type ref="prev" pos:start="41:9" pos:end="41:13"/><name pos:start="41:23" pos:end="41:24">t3</name></decl>, <decl pos:start="41:27" pos:end="41:28"><type ref="prev" pos:start="41:9" pos:end="41:13"/><name pos:start="41:27" pos:end="41:28">t4</name></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:33"><decl pos:start="43:9" pos:end="43:17"><type pos:start="43:9" pos:end="43:13"><name pos:start="43:9" pos:end="43:13">float</name></type> <name pos:start="43:15" pos:end="43:17">di1</name></decl>, <decl pos:start="43:20" pos:end="43:22"><type ref="prev" pos:start="43:9" pos:end="43:13"/><name pos:start="43:20" pos:end="43:22">di2</name></decl>, <decl pos:start="43:25" pos:end="43:27"><type ref="prev" pos:start="43:9" pos:end="43:13"/><name pos:start="43:25" pos:end="43:27">di3</name></decl>, <decl pos:start="43:30" pos:end="43:32"><type ref="prev" pos:start="43:9" pos:end="43:13"/><name pos:start="43:30" pos:end="43:32">di4</name></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:39"><decl pos:start="45:9" pos:end="45:17"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:17">cond0</name></decl>, <decl pos:start="45:20" pos:end="45:24"><type ref="prev" pos:start="45:9" pos:end="45:11"/><name pos:start="45:20" pos:end="45:24">cond1</name></decl>, <decl pos:start="45:27" pos:end="45:31"><type ref="prev" pos:start="45:9" pos:end="45:11"/><name pos:start="45:27" pos:end="45:31">cond2</name></decl>, <decl pos:start="45:34" pos:end="45:38"><type ref="prev" pos:start="45:9" pos:end="45:11"/><name pos:start="45:34" pos:end="45:38">cond3</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:27"><decl pos:start="47:9" pos:end="47:14"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:14">c1</name></decl>, <decl pos:start="47:17" pos:end="47:18"><type ref="prev" pos:start="47:9" pos:end="47:11"/><name pos:start="47:17" pos:end="47:18">c2</name></decl>, <decl pos:start="47:21" pos:end="47:22"><type ref="prev" pos:start="47:9" pos:end="47:11"/><name pos:start="47:21" pos:end="47:22">c3</name></decl>, <decl pos:start="47:25" pos:end="47:26"><type ref="prev" pos:start="47:9" pos:end="47:11"/><name pos:start="47:25" pos:end="47:26">c4</name></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:19"><decl pos:start="49:9" pos:end="49:14"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:14">t6</name></decl>, <decl pos:start="49:17" pos:end="49:18"><type ref="prev" pos:start="49:9" pos:end="49:11"/><name pos:start="49:17" pos:end="49:18">t7</name></decl>;</decl_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:49"><expr pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:11">qc1</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:25"><name pos:start="53:15" pos:end="53:20">scaled</name><index pos:start="53:21" pos:end="53:25">[<expr pos:start="53:22" pos:end="53:22"><name pos:start="53:22" pos:end="53:22">i</name></expr>  ]</index></name> <operator pos:start="53:27" pos:end="53:27">*</operator> <name pos:start="53:29" pos:end="53:31">Q34</name> <operator pos:start="53:33" pos:end="53:33">+</operator> <name pos:start="53:35" pos:end="53:48">ROUND_STANDARD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:49"><expr pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:11">qc2</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <name pos:start="55:15" pos:end="55:25"><name pos:start="55:15" pos:end="55:20">scaled</name><index pos:start="55:21" pos:end="55:25">[<expr pos:start="55:22" pos:end="55:24"><name pos:start="55:22" pos:end="55:22">i</name><operator pos:start="55:23" pos:end="55:23">+</operator><literal type="number" pos:start="55:24" pos:end="55:24">1</literal></expr>]</index></name> <operator pos:start="55:27" pos:end="55:27">*</operator> <name pos:start="55:29" pos:end="55:31">Q34</name> <operator pos:start="55:33" pos:end="55:33">+</operator> <name pos:start="55:35" pos:end="55:48">ROUND_STANDARD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:49"><expr pos:start="57:9" pos:end="57:48"><name pos:start="57:9" pos:end="57:11">qc3</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:25"><name pos:start="57:15" pos:end="57:20">scaled</name><index pos:start="57:21" pos:end="57:25">[<expr pos:start="57:22" pos:end="57:24"><name pos:start="57:22" pos:end="57:22">i</name><operator pos:start="57:23" pos:end="57:23">+</operator><literal type="number" pos:start="57:24" pos:end="57:24">2</literal></expr>]</index></name> <operator pos:start="57:27" pos:end="57:27">*</operator> <name pos:start="57:29" pos:end="57:31">Q34</name> <operator pos:start="57:33" pos:end="57:33">+</operator> <name pos:start="57:35" pos:end="57:48">ROUND_STANDARD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:49"><expr pos:start="59:9" pos:end="59:48"><name pos:start="59:9" pos:end="59:11">qc4</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:25"><name pos:start="59:15" pos:end="59:20">scaled</name><index pos:start="59:21" pos:end="59:25">[<expr pos:start="59:22" pos:end="59:24"><name pos:start="59:22" pos:end="59:22">i</name><operator pos:start="59:23" pos:end="59:23">+</operator><literal type="number" pos:start="59:24" pos:end="59:24">3</literal></expr>]</index></name> <operator pos:start="59:27" pos:end="59:27">*</operator> <name pos:start="59:29" pos:end="59:31">Q34</name> <operator pos:start="59:33" pos:end="59:33">+</operator> <name pos:start="59:35" pos:end="59:48">ROUND_STANDARD</name></expr>;</expr_stmt>



        <asm pos:start="63:9" pos:end="127:10">__asm__ <specifier pos:start="63:17" pos:end="63:24">volatile</specifier> (

            ".set push                                  \n\t"

            ".set noreorder                             \n\t"



            "ori        %[t6],      $zero,  15          \n\t"

            "ori        %[t7],      $zero,  16          \n\t"

            "shll_s.w   %[c1],      %[qc1], 18          \n\t"

            "shll_s.w   %[c2],      %[qc2], 18          \n\t"

            "shll_s.w   %[c3],      %[qc3], 18          \n\t"

            "shll_s.w   %[c4],      %[qc4], 18          \n\t"

            "srl        %[c1],      %[c1],  18          \n\t"

            "srl        %[c2],      %[c2],  18          \n\t"

            "srl        %[c3],      %[c3],  18          \n\t"

            "srl        %[c4],      %[c4],  18          \n\t"

            "slt        %[cond0],   %[t6],  %[qc1]      \n\t"

            "slt        %[cond1],   %[t6],  %[qc2]      \n\t"

            "slt        %[cond2],   %[t6],  %[qc3]      \n\t"

            "slt        %[cond3],   %[t6],  %[qc4]      \n\t"

            "movn       %[qc1],     %[t7],  %[cond0]    \n\t"

            "movn       %[qc2],     %[t7],  %[cond1]    \n\t"

            "movn       %[qc3],     %[t7],  %[cond2]    \n\t"

            "movn       %[qc4],     %[t7],  %[cond3]    \n\t"



            ".set pop                                   \n\t"



            : [qc1]"+r"(qc1), [qc2]"+r"(qc2),

              [qc3]"+r"(qc3), [qc4]"+r"(qc4),

              [cond0]"=&amp;r"(cond0), [cond1]"=&amp;r"(cond1),

              [cond2]"=&amp;r"(cond2), [cond3]"=&amp;r"(cond3),

              [c1]"=&amp;r"(c1), [c2]"=&amp;r"(c2),

              [c3]"=&amp;r"(c3), [c4]"=&amp;r"(c4),

              [t6]"=&amp;r"(t6), [t7]"=&amp;r"(t7)

        );</asm>



        <expr_stmt pos:start="131:9" pos:end="131:26"><expr pos:start="131:9" pos:end="131:25"><name pos:start="131:9" pos:end="131:14">curidx</name> <operator pos:start="131:16" pos:end="131:16">=</operator> <literal type="number" pos:start="131:18" pos:end="131:19">17</literal> <operator pos:start="131:21" pos:end="131:21">*</operator> <name pos:start="131:23" pos:end="131:25">qc1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:22"><expr pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:14">curidx</name> <operator pos:start="133:16" pos:end="133:17">+=</operator> <name pos:start="133:19" pos:end="133:21">qc2</name></expr>;</expr_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:27"><expr pos:start="137:9" pos:end="137:26"><name pos:start="137:9" pos:end="137:15">curidx2</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <literal type="number" pos:start="137:19" pos:end="137:20">17</literal> <operator pos:start="137:22" pos:end="137:22">*</operator> <name pos:start="137:24" pos:end="137:26">qc3</name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:23"><expr pos:start="139:9" pos:end="139:22"><name pos:start="139:9" pos:end="139:15">curidx2</name> <operator pos:start="139:17" pos:end="139:18">+=</operator> <name pos:start="139:20" pos:end="139:22">qc4</name></expr>;</expr_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:34"><expr pos:start="143:9" pos:end="143:33"><name pos:start="143:9" pos:end="143:15">curbits</name> <operator pos:start="143:17" pos:end="143:18">+=</operator> <name pos:start="143:20" pos:end="143:33"><name pos:start="143:20" pos:end="143:25">p_bits</name><index pos:start="143:26" pos:end="143:33">[<expr pos:start="143:27" pos:end="143:32"><name pos:start="143:27" pos:end="143:32">curidx</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:41"><expr pos:start="145:9" pos:end="145:40"><name pos:start="145:9" pos:end="145:15">curbits</name> <operator pos:start="145:17" pos:end="145:18">+=</operator> <name pos:start="145:20" pos:end="145:40"><name pos:start="145:20" pos:end="145:32">esc_sign_bits</name><index pos:start="145:33" pos:end="145:40">[<expr pos:start="145:34" pos:end="145:39"><name pos:start="145:34" pos:end="145:39">curidx</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:37"><expr pos:start="147:9" pos:end="147:36"><name pos:start="147:9" pos:end="147:11">vec</name>     <operator pos:start="147:17" pos:end="147:17">=</operator> <operator pos:start="147:19" pos:end="147:19">&amp;</operator><name pos:start="147:20" pos:end="147:36"><name pos:start="147:20" pos:end="147:26">p_codes</name><index pos:start="147:27" pos:end="147:36">[<expr pos:start="147:28" pos:end="147:35"><name pos:start="147:28" pos:end="147:33">curidx</name><operator pos:start="147:34" pos:end="147:34">*</operator><literal type="number" pos:start="147:35" pos:end="147:35">2</literal></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:35"><expr pos:start="151:9" pos:end="151:34"><name pos:start="151:9" pos:end="151:15">curbits</name> <operator pos:start="151:17" pos:end="151:18">+=</operator> <name pos:start="151:20" pos:end="151:34"><name pos:start="151:20" pos:end="151:25">p_bits</name><index pos:start="151:26" pos:end="151:34">[<expr pos:start="151:27" pos:end="151:33"><name pos:start="151:27" pos:end="151:33">curidx2</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:42"><expr pos:start="153:9" pos:end="153:41"><name pos:start="153:9" pos:end="153:15">curbits</name> <operator pos:start="153:17" pos:end="153:18">+=</operator> <name pos:start="153:20" pos:end="153:41"><name pos:start="153:20" pos:end="153:32">esc_sign_bits</name><index pos:start="153:33" pos:end="153:41">[<expr pos:start="153:34" pos:end="153:40"><name pos:start="153:34" pos:end="153:40">curidx2</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:39"><expr pos:start="155:9" pos:end="155:38"><name pos:start="155:9" pos:end="155:12">vec2</name>     <operator pos:start="155:18" pos:end="155:18">=</operator> <operator pos:start="155:20" pos:end="155:20">&amp;</operator><name pos:start="155:21" pos:end="155:38"><name pos:start="155:21" pos:end="155:27">p_codes</name><index pos:start="155:28" pos:end="155:38">[<expr pos:start="155:29" pos:end="155:37"><name pos:start="155:29" pos:end="155:35">curidx2</name><operator pos:start="155:36" pos:end="155:36">*</operator><literal type="number" pos:start="155:37" pos:end="155:37">2</literal></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="159:9" pos:end="159:52"><expr pos:start="159:9" pos:end="159:51"><name pos:start="159:9" pos:end="159:15">curbits</name> <operator pos:start="159:17" pos:end="159:18">+=</operator> <operator pos:start="159:20" pos:end="159:20">(</operator><call pos:start="159:21" pos:end="159:31"><name pos:start="159:21" pos:end="159:27">av_log2</name><argument_list pos:start="159:28" pos:end="159:31">(<argument pos:start="159:29" pos:end="159:30"><expr pos:start="159:29" pos:end="159:30"><name pos:start="159:29" pos:end="159:30">c1</name></expr></argument>)</argument_list></call> <operator pos:start="159:33" pos:end="159:33">*</operator> <literal type="number" pos:start="159:35" pos:end="159:37">2</literal> <operator pos:start="159:37" pos:end="159:37">-</operator> <literal type="number" pos:start="159:39" pos:end="159:39">3</literal><operator pos:start="159:40" pos:end="159:40">)</operator> <operator pos:start="159:42" pos:end="159:42">&amp;</operator> <operator pos:start="159:44" pos:end="159:44">(</operator><operator pos:start="159:45" pos:end="159:45">-</operator><name pos:start="159:46" pos:end="159:50">cond0</name><operator pos:start="159:51" pos:end="159:51">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:52"><expr pos:start="161:9" pos:end="161:51"><name pos:start="161:9" pos:end="161:15">curbits</name> <operator pos:start="161:17" pos:end="161:18">+=</operator> <operator pos:start="161:20" pos:end="161:20">(</operator><call pos:start="161:21" pos:end="161:31"><name pos:start="161:21" pos:end="161:27">av_log2</name><argument_list pos:start="161:28" pos:end="161:31">(<argument pos:start="161:29" pos:end="161:30"><expr pos:start="161:29" pos:end="161:30"><name pos:start="161:29" pos:end="161:30">c2</name></expr></argument>)</argument_list></call> <operator pos:start="161:33" pos:end="161:33">*</operator> <literal type="number" pos:start="161:35" pos:end="161:37">2</literal> <operator pos:start="161:37" pos:end="161:37">-</operator> <literal type="number" pos:start="161:39" pos:end="161:39">3</literal><operator pos:start="161:40" pos:end="161:40">)</operator> <operator pos:start="161:42" pos:end="161:42">&amp;</operator> <operator pos:start="161:44" pos:end="161:44">(</operator><operator pos:start="161:45" pos:end="161:45">-</operator><name pos:start="161:46" pos:end="161:50">cond1</name><operator pos:start="161:51" pos:end="161:51">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:52"><expr pos:start="163:9" pos:end="163:51"><name pos:start="163:9" pos:end="163:15">curbits</name> <operator pos:start="163:17" pos:end="163:18">+=</operator> <operator pos:start="163:20" pos:end="163:20">(</operator><call pos:start="163:21" pos:end="163:31"><name pos:start="163:21" pos:end="163:27">av_log2</name><argument_list pos:start="163:28" pos:end="163:31">(<argument pos:start="163:29" pos:end="163:30"><expr pos:start="163:29" pos:end="163:30"><name pos:start="163:29" pos:end="163:30">c3</name></expr></argument>)</argument_list></call> <operator pos:start="163:33" pos:end="163:33">*</operator> <literal type="number" pos:start="163:35" pos:end="163:37">2</literal> <operator pos:start="163:37" pos:end="163:37">-</operator> <literal type="number" pos:start="163:39" pos:end="163:39">3</literal><operator pos:start="163:40" pos:end="163:40">)</operator> <operator pos:start="163:42" pos:end="163:42">&amp;</operator> <operator pos:start="163:44" pos:end="163:44">(</operator><operator pos:start="163:45" pos:end="163:45">-</operator><name pos:start="163:46" pos:end="163:50">cond2</name><operator pos:start="163:51" pos:end="163:51">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:52"><expr pos:start="165:9" pos:end="165:51"><name pos:start="165:9" pos:end="165:15">curbits</name> <operator pos:start="165:17" pos:end="165:18">+=</operator> <operator pos:start="165:20" pos:end="165:20">(</operator><call pos:start="165:21" pos:end="165:31"><name pos:start="165:21" pos:end="165:27">av_log2</name><argument_list pos:start="165:28" pos:end="165:31">(<argument pos:start="165:29" pos:end="165:30"><expr pos:start="165:29" pos:end="165:30"><name pos:start="165:29" pos:end="165:30">c4</name></expr></argument>)</argument_list></call> <operator pos:start="165:33" pos:end="165:33">*</operator> <literal type="number" pos:start="165:35" pos:end="165:37">2</literal> <operator pos:start="165:37" pos:end="165:37">-</operator> <literal type="number" pos:start="165:39" pos:end="165:39">3</literal><operator pos:start="165:40" pos:end="165:40">)</operator> <operator pos:start="165:42" pos:end="165:42">&amp;</operator> <operator pos:start="165:44" pos:end="165:44">(</operator><operator pos:start="165:45" pos:end="165:45">-</operator><name pos:start="165:46" pos:end="165:50">cond3</name><operator pos:start="165:51" pos:end="165:51">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="169:9" pos:end="169:28"><expr pos:start="169:9" pos:end="169:27"><name pos:start="169:9" pos:end="169:10">t1</name> <operator pos:start="169:12" pos:end="169:12">=</operator> <call pos:start="169:14" pos:end="169:27"><name pos:start="169:14" pos:end="169:18">fabsf</name><argument_list pos:start="169:19" pos:end="169:27">(<argument pos:start="169:20" pos:end="169:26"><expr pos:start="169:20" pos:end="169:26"><name pos:start="169:20" pos:end="169:26"><name pos:start="169:20" pos:end="169:21">in</name><index pos:start="169:22" pos:end="169:26">[<expr pos:start="169:23" pos:end="169:23"><name pos:start="169:23" pos:end="169:23">i</name></expr>  ]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:28"><expr pos:start="171:9" pos:end="171:27"><name pos:start="171:9" pos:end="171:10">t2</name> <operator pos:start="171:12" pos:end="171:12">=</operator> <call pos:start="171:14" pos:end="171:27"><name pos:start="171:14" pos:end="171:18">fabsf</name><argument_list pos:start="171:19" pos:end="171:27">(<argument pos:start="171:20" pos:end="171:26"><expr pos:start="171:20" pos:end="171:26"><name pos:start="171:20" pos:end="171:26"><name pos:start="171:20" pos:end="171:21">in</name><index pos:start="171:22" pos:end="171:26">[<expr pos:start="171:23" pos:end="171:25"><name pos:start="171:23" pos:end="171:23">i</name><operator pos:start="171:24" pos:end="171:24">+</operator><literal type="number" pos:start="171:25" pos:end="171:25">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:28"><expr pos:start="173:9" pos:end="173:27"><name pos:start="173:9" pos:end="173:10">t3</name> <operator pos:start="173:12" pos:end="173:12">=</operator> <call pos:start="173:14" pos:end="173:27"><name pos:start="173:14" pos:end="173:18">fabsf</name><argument_list pos:start="173:19" pos:end="173:27">(<argument pos:start="173:20" pos:end="173:26"><expr pos:start="173:20" pos:end="173:26"><name pos:start="173:20" pos:end="173:26"><name pos:start="173:20" pos:end="173:21">in</name><index pos:start="173:22" pos:end="173:26">[<expr pos:start="173:23" pos:end="173:25"><name pos:start="173:23" pos:end="173:23">i</name><operator pos:start="173:24" pos:end="173:24">+</operator><literal type="number" pos:start="173:25" pos:end="173:25">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:28"><expr pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:10">t4</name> <operator pos:start="175:12" pos:end="175:12">=</operator> <call pos:start="175:14" pos:end="175:27"><name pos:start="175:14" pos:end="175:18">fabsf</name><argument_list pos:start="175:19" pos:end="175:27">(<argument pos:start="175:20" pos:end="175:26"><expr pos:start="175:20" pos:end="175:26"><name pos:start="175:20" pos:end="175:26"><name pos:start="175:20" pos:end="175:21">in</name><index pos:start="175:22" pos:end="175:26">[<expr pos:start="175:23" pos:end="175:25"><name pos:start="175:23" pos:end="175:23">i</name><operator pos:start="175:24" pos:end="175:24">+</operator><literal type="number" pos:start="175:25" pos:end="175:25">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="179:9" pos:end="193:35"><if pos:start="179:9" pos:end="191:9">if <condition pos:start="179:12" pos:end="179:18">(<expr pos:start="179:13" pos:end="179:17"><name pos:start="179:13" pos:end="179:17">cond0</name></expr>)</condition> <block pos:start="179:20" pos:end="191:9">{<block_content pos:start="181:13" pos:end="189:13">

            <if_stmt pos:start="181:13" pos:end="189:13"><if pos:start="181:13" pos:end="185:13">if <condition pos:start="181:16" pos:end="181:37">(<expr pos:start="181:17" pos:end="181:36"><name pos:start="181:17" pos:end="181:18">t1</name> <operator pos:start="181:20" pos:end="181:21">&gt;=</operator> <name pos:start="181:23" pos:end="181:36">CLIPPED_ESCAPE</name></expr>)</condition> <block pos:start="181:39" pos:end="185:13">{<block_content pos:start="183:17" pos:end="183:42">

                <expr_stmt pos:start="183:17" pos:end="183:42"><expr pos:start="183:17" pos:end="183:41"><name pos:start="183:17" pos:end="183:19">di1</name> <operator pos:start="183:21" pos:end="183:21">=</operator> <name pos:start="183:23" pos:end="183:24">t1</name> <operator pos:start="183:26" pos:end="183:26">-</operator> <name pos:start="183:28" pos:end="183:41">CLIPPED_ESCAPE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="185:15" pos:end="189:13">else <block pos:start="185:20" pos:end="189:13">{<block_content pos:start="187:17" pos:end="187:47">

                <expr_stmt pos:start="187:17" pos:end="187:47"><expr pos:start="187:17" pos:end="187:46"><name pos:start="187:17" pos:end="187:19">di1</name> <operator pos:start="187:21" pos:end="187:21">=</operator> <name pos:start="187:23" pos:end="187:24">t1</name> <operator pos:start="187:26" pos:end="187:26">-</operator> <name pos:start="187:28" pos:end="187:29">c1</name> <operator pos:start="187:31" pos:end="187:31">*</operator> <call pos:start="187:33" pos:end="187:41"><name pos:start="187:33" pos:end="187:37">cbrtf</name><argument_list pos:start="187:38" pos:end="187:41">(<argument pos:start="187:39" pos:end="187:40"><expr pos:start="187:39" pos:end="187:40"><name pos:start="187:39" pos:end="187:40">c1</name></expr></argument>)</argument_list></call> <operator pos:start="187:43" pos:end="187:43">*</operator> <name pos:start="187:45" pos:end="187:46">IQ</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="191:11" pos:end="193:35">else<block type="pseudo" pos:start="193:13" pos:end="193:35"><block_content pos:start="193:13" pos:end="193:35">

            <expr_stmt pos:start="193:13" pos:end="193:35"><expr pos:start="193:13" pos:end="193:34"><name pos:start="193:13" pos:end="193:15">di1</name> <operator pos:start="193:17" pos:end="193:17">=</operator> <name pos:start="193:19" pos:end="193:20">t1</name> <operator pos:start="193:22" pos:end="193:22">-</operator> <name pos:start="193:24" pos:end="193:29"><name pos:start="193:24" pos:end="193:26">vec</name><index pos:start="193:27" pos:end="193:29">[<expr pos:start="193:28" pos:end="193:28"><literal type="number" pos:start="193:28" pos:end="193:28">0</literal></expr>]</index></name> <operator pos:start="193:31" pos:end="193:31">*</operator> <name pos:start="193:33" pos:end="193:34">IQ</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="197:9" pos:end="211:35"><if pos:start="197:9" pos:end="209:9">if <condition pos:start="197:12" pos:end="197:18">(<expr pos:start="197:13" pos:end="197:17"><name pos:start="197:13" pos:end="197:17">cond1</name></expr>)</condition> <block pos:start="197:20" pos:end="209:9">{<block_content pos:start="199:13" pos:end="207:13">

            <if_stmt pos:start="199:13" pos:end="207:13"><if pos:start="199:13" pos:end="203:13">if <condition pos:start="199:16" pos:end="199:37">(<expr pos:start="199:17" pos:end="199:36"><name pos:start="199:17" pos:end="199:18">t2</name> <operator pos:start="199:20" pos:end="199:21">&gt;=</operator> <name pos:start="199:23" pos:end="199:36">CLIPPED_ESCAPE</name></expr>)</condition> <block pos:start="199:39" pos:end="203:13">{<block_content pos:start="201:17" pos:end="201:42">

                <expr_stmt pos:start="201:17" pos:end="201:42"><expr pos:start="201:17" pos:end="201:41"><name pos:start="201:17" pos:end="201:19">di2</name> <operator pos:start="201:21" pos:end="201:21">=</operator> <name pos:start="201:23" pos:end="201:24">t2</name> <operator pos:start="201:26" pos:end="201:26">-</operator> <name pos:start="201:28" pos:end="201:41">CLIPPED_ESCAPE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="203:15" pos:end="207:13">else <block pos:start="203:20" pos:end="207:13">{<block_content pos:start="205:17" pos:end="205:47">

                <expr_stmt pos:start="205:17" pos:end="205:47"><expr pos:start="205:17" pos:end="205:46"><name pos:start="205:17" pos:end="205:19">di2</name> <operator pos:start="205:21" pos:end="205:21">=</operator> <name pos:start="205:23" pos:end="205:24">t2</name> <operator pos:start="205:26" pos:end="205:26">-</operator> <name pos:start="205:28" pos:end="205:29">c2</name> <operator pos:start="205:31" pos:end="205:31">*</operator> <call pos:start="205:33" pos:end="205:41"><name pos:start="205:33" pos:end="205:37">cbrtf</name><argument_list pos:start="205:38" pos:end="205:41">(<argument pos:start="205:39" pos:end="205:40"><expr pos:start="205:39" pos:end="205:40"><name pos:start="205:39" pos:end="205:40">c2</name></expr></argument>)</argument_list></call> <operator pos:start="205:43" pos:end="205:43">*</operator> <name pos:start="205:45" pos:end="205:46">IQ</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="209:11" pos:end="211:35">else<block type="pseudo" pos:start="211:13" pos:end="211:35"><block_content pos:start="211:13" pos:end="211:35">

            <expr_stmt pos:start="211:13" pos:end="211:35"><expr pos:start="211:13" pos:end="211:34"><name pos:start="211:13" pos:end="211:15">di2</name> <operator pos:start="211:17" pos:end="211:17">=</operator> <name pos:start="211:19" pos:end="211:20">t2</name> <operator pos:start="211:22" pos:end="211:22">-</operator> <name pos:start="211:24" pos:end="211:29"><name pos:start="211:24" pos:end="211:26">vec</name><index pos:start="211:27" pos:end="211:29">[<expr pos:start="211:28" pos:end="211:28"><literal type="number" pos:start="211:28" pos:end="211:28">1</literal></expr>]</index></name> <operator pos:start="211:31" pos:end="211:31">*</operator> <name pos:start="211:33" pos:end="211:34">IQ</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="215:9" pos:end="229:36"><if pos:start="215:9" pos:end="227:9">if <condition pos:start="215:12" pos:end="215:18">(<expr pos:start="215:13" pos:end="215:17"><name pos:start="215:13" pos:end="215:17">cond2</name></expr>)</condition> <block pos:start="215:20" pos:end="227:9">{<block_content pos:start="217:13" pos:end="225:13">

            <if_stmt pos:start="217:13" pos:end="225:13"><if pos:start="217:13" pos:end="221:13">if <condition pos:start="217:16" pos:end="217:37">(<expr pos:start="217:17" pos:end="217:36"><name pos:start="217:17" pos:end="217:18">t3</name> <operator pos:start="217:20" pos:end="217:21">&gt;=</operator> <name pos:start="217:23" pos:end="217:36">CLIPPED_ESCAPE</name></expr>)</condition> <block pos:start="217:39" pos:end="221:13">{<block_content pos:start="219:17" pos:end="219:42">

                <expr_stmt pos:start="219:17" pos:end="219:42"><expr pos:start="219:17" pos:end="219:41"><name pos:start="219:17" pos:end="219:19">di3</name> <operator pos:start="219:21" pos:end="219:21">=</operator> <name pos:start="219:23" pos:end="219:24">t3</name> <operator pos:start="219:26" pos:end="219:26">-</operator> <name pos:start="219:28" pos:end="219:41">CLIPPED_ESCAPE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="221:15" pos:end="225:13">else <block pos:start="221:20" pos:end="225:13">{<block_content pos:start="223:17" pos:end="223:47">

                <expr_stmt pos:start="223:17" pos:end="223:47"><expr pos:start="223:17" pos:end="223:46"><name pos:start="223:17" pos:end="223:19">di3</name> <operator pos:start="223:21" pos:end="223:21">=</operator> <name pos:start="223:23" pos:end="223:24">t3</name> <operator pos:start="223:26" pos:end="223:26">-</operator> <name pos:start="223:28" pos:end="223:29">c3</name> <operator pos:start="223:31" pos:end="223:31">*</operator> <call pos:start="223:33" pos:end="223:41"><name pos:start="223:33" pos:end="223:37">cbrtf</name><argument_list pos:start="223:38" pos:end="223:41">(<argument pos:start="223:39" pos:end="223:40"><expr pos:start="223:39" pos:end="223:40"><name pos:start="223:39" pos:end="223:40">c3</name></expr></argument>)</argument_list></call> <operator pos:start="223:43" pos:end="223:43">*</operator> <name pos:start="223:45" pos:end="223:46">IQ</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="227:11" pos:end="229:36">else<block type="pseudo" pos:start="229:13" pos:end="229:36"><block_content pos:start="229:13" pos:end="229:36">

            <expr_stmt pos:start="229:13" pos:end="229:36"><expr pos:start="229:13" pos:end="229:35"><name pos:start="229:13" pos:end="229:15">di3</name> <operator pos:start="229:17" pos:end="229:17">=</operator> <name pos:start="229:19" pos:end="229:20">t3</name> <operator pos:start="229:22" pos:end="229:22">-</operator> <name pos:start="229:24" pos:end="229:30"><name pos:start="229:24" pos:end="229:27">vec2</name><index pos:start="229:28" pos:end="229:30">[<expr pos:start="229:29" pos:end="229:29"><literal type="number" pos:start="229:29" pos:end="229:29">0</literal></expr>]</index></name> <operator pos:start="229:32" pos:end="229:32">*</operator> <name pos:start="229:34" pos:end="229:35">IQ</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="233:9" pos:end="247:34"><if pos:start="233:9" pos:end="245:9">if <condition pos:start="233:12" pos:end="233:18">(<expr pos:start="233:13" pos:end="233:17"><name pos:start="233:13" pos:end="233:17">cond3</name></expr>)</condition> <block pos:start="233:20" pos:end="245:9">{<block_content pos:start="235:13" pos:end="243:13">

            <if_stmt pos:start="235:13" pos:end="243:13"><if pos:start="235:13" pos:end="239:13">if <condition pos:start="235:16" pos:end="235:37">(<expr pos:start="235:17" pos:end="235:36"><name pos:start="235:17" pos:end="235:18">t4</name> <operator pos:start="235:20" pos:end="235:21">&gt;=</operator> <name pos:start="235:23" pos:end="235:36">CLIPPED_ESCAPE</name></expr>)</condition> <block pos:start="235:39" pos:end="239:13">{<block_content pos:start="237:17" pos:end="237:42">

                <expr_stmt pos:start="237:17" pos:end="237:42"><expr pos:start="237:17" pos:end="237:41"><name pos:start="237:17" pos:end="237:19">di4</name> <operator pos:start="237:21" pos:end="237:21">=</operator> <name pos:start="237:23" pos:end="237:24">t4</name> <operator pos:start="237:26" pos:end="237:26">-</operator> <name pos:start="237:28" pos:end="237:41">CLIPPED_ESCAPE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="239:15" pos:end="243:13">else <block pos:start="239:20" pos:end="243:13">{<block_content pos:start="241:17" pos:end="241:47">

                <expr_stmt pos:start="241:17" pos:end="241:47"><expr pos:start="241:17" pos:end="241:46"><name pos:start="241:17" pos:end="241:19">di4</name> <operator pos:start="241:21" pos:end="241:21">=</operator> <name pos:start="241:23" pos:end="241:24">t4</name> <operator pos:start="241:26" pos:end="241:26">-</operator> <name pos:start="241:28" pos:end="241:29">c4</name> <operator pos:start="241:31" pos:end="241:31">*</operator> <call pos:start="241:33" pos:end="241:41"><name pos:start="241:33" pos:end="241:37">cbrtf</name><argument_list pos:start="241:38" pos:end="241:41">(<argument pos:start="241:39" pos:end="241:40"><expr pos:start="241:39" pos:end="241:40"><name pos:start="241:39" pos:end="241:40">c4</name></expr></argument>)</argument_list></call> <operator pos:start="241:43" pos:end="241:43">*</operator> <name pos:start="241:45" pos:end="241:46">IQ</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="245:11" pos:end="247:34">else<block type="pseudo" pos:start="247:13" pos:end="247:34"><block_content pos:start="247:13" pos:end="247:34">

            <expr_stmt pos:start="247:13" pos:end="247:34"><expr pos:start="247:13" pos:end="247:33"><name pos:start="247:13" pos:end="247:15">di4</name> <operator pos:start="247:17" pos:end="247:17">=</operator> <name pos:start="247:19" pos:end="247:20">t4</name> <operator pos:start="247:22" pos:end="247:22">-</operator> <name pos:start="247:24" pos:end="247:30"><name pos:start="247:24" pos:end="247:27">vec2</name><index pos:start="247:28" pos:end="247:30">[<expr pos:start="247:29" pos:end="247:29"><literal type="number" pos:start="247:29" pos:end="247:29">1</literal></expr>]</index></name><operator pos:start="247:31" pos:end="247:31">*</operator><name pos:start="247:32" pos:end="247:33">IQ</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="251:9" pos:end="253:40"><expr pos:start="251:9" pos:end="253:39"><name pos:start="251:9" pos:end="251:12">cost</name> <operator pos:start="251:14" pos:end="251:15">+=</operator> <name pos:start="251:17" pos:end="251:19">di1</name> <operator pos:start="251:21" pos:end="251:21">*</operator> <name pos:start="251:23" pos:end="251:25">di1</name> <operator pos:start="251:27" pos:end="251:27">+</operator> <name pos:start="251:29" pos:end="251:31">di2</name> <operator pos:start="251:33" pos:end="251:33">*</operator> <name pos:start="251:35" pos:end="251:37">di2</name>

                <operator pos:start="253:17" pos:end="253:17">+</operator> <name pos:start="253:19" pos:end="253:21">di3</name> <operator pos:start="253:23" pos:end="253:23">*</operator> <name pos:start="253:25" pos:end="253:27">di3</name> <operator pos:start="253:29" pos:end="253:29">+</operator> <name pos:start="253:31" pos:end="253:33">di4</name> <operator pos:start="253:35" pos:end="253:35">*</operator> <name pos:start="253:37" pos:end="253:39">di4</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="259:5" pos:end="261:24"><if pos:start="259:5" pos:end="261:24">if <condition pos:start="259:8" pos:end="259:13">(<expr pos:start="259:9" pos:end="259:12"><name pos:start="259:9" pos:end="259:12">bits</name></expr>)</condition><block type="pseudo" pos:start="261:9" pos:end="261:24"><block_content pos:start="261:9" pos:end="261:24">

        <expr_stmt pos:start="261:9" pos:end="261:24"><expr pos:start="261:9" pos:end="261:23"><operator pos:start="261:9" pos:end="261:9">*</operator><name pos:start="261:10" pos:end="261:13">bits</name> <operator pos:start="261:15" pos:end="261:15">=</operator> <name pos:start="261:17" pos:end="261:23">curbits</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="263:5" pos:end="263:35">return <expr pos:start="263:12" pos:end="263:34"><name pos:start="263:12" pos:end="263:15">cost</name> <operator pos:start="263:17" pos:end="263:17">*</operator> <name pos:start="263:19" pos:end="263:24">lambda</name> <operator pos:start="263:26" pos:end="263:26">+</operator> <name pos:start="263:28" pos:end="263:34">curbits</name></expr>;</return>

</block_content>}</block></function>
</unit>
