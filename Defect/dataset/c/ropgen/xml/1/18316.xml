<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18316.c" pos:tabs="8"><function pos:start="1:1" pos:end="76:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:29">qemu_savevm_state_iterate</name><parameter_list pos:start="1:30" pos:end="1:42">(<parameter pos:start="1:31" pos:end="1:41"><decl pos:start="1:31" pos:end="1:41"><type pos:start="1:31" pos:end="1:40"><name pos:start="1:31" pos:end="1:38">QEMUFile</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="76:1">{<block_content pos:start="5:5" pos:end="74:15">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SaveStateEntry</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">se</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><call pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:30">trace_savevm_state_iterate</name><argument_list pos:start="11:31" pos:end="11:32">()</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="13:5" pos:end="13:53"><name pos:start="13:5" pos:end="13:18">QTAILQ_FOREACH</name><argument_list pos:start="13:19" pos:end="13:53">(<argument pos:start="13:20" pos:end="13:21">se</argument>, <argument pos:start="13:24" pos:end="13:45">&amp;savevm_state.handlers</argument>, <argument pos:start="13:48" pos:end="13:52">entry</argument>)</argument_list></macro> <block pos:start="13:55" pos:end="72:5">{<block_content pos:start="15:9" pos:end="70:9">

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:52">(<expr pos:start="15:13" pos:end="15:51"><operator pos:start="15:13" pos:end="15:13">!</operator><name pos:start="15:14" pos:end="15:20"><name pos:start="15:14" pos:end="15:15">se</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:20">ops</name></name> <operator pos:start="15:22" pos:end="15:23">||</operator> <operator pos:start="15:25" pos:end="15:25">!</operator><name pos:start="15:26" pos:end="15:51"><name pos:start="15:26" pos:end="15:27">se</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:32">ops</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:51">save_live_iterate</name></name></expr>)</condition> <block pos:start="15:54" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:21">

            <continue pos:start="17:13" pos:end="17:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="21:9" pos:end="29:9"><if pos:start="21:9" pos:end="29:9">if <condition pos:start="21:12" pos:end="21:42">(<expr pos:start="21:13" pos:end="21:41"><name pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:14">se</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:19">ops</name></name> <operator pos:start="21:21" pos:end="21:22">&amp;&amp;</operator> <name pos:start="21:24" pos:end="21:41"><name pos:start="21:24" pos:end="21:25">se</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:30">ops</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:41">is_active</name></name></expr>)</condition> <block pos:start="21:44" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:13">

            <if_stmt pos:start="23:13" pos:end="27:13"><if pos:start="23:13" pos:end="27:13">if <condition pos:start="23:16" pos:end="23:48">(<expr pos:start="23:17" pos:end="23:47"><operator pos:start="23:17" pos:end="23:17">!</operator><call pos:start="23:18" pos:end="23:47"><name pos:start="23:18" pos:end="23:35"><name pos:start="23:18" pos:end="23:19">se</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:24">ops</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:35">is_active</name></name><argument_list pos:start="23:36" pos:end="23:47">(<argument pos:start="23:37" pos:end="23:46"><expr pos:start="23:37" pos:end="23:46"><name pos:start="23:37" pos:end="23:46"><name pos:start="23:37" pos:end="23:38">se</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:46">opaque</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:50" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:25">

                <continue pos:start="25:17" pos:end="25:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:36">(<expr pos:start="31:13" pos:end="31:35"><call pos:start="31:13" pos:end="31:35"><name pos:start="31:13" pos:end="31:32">qemu_file_rate_limit</name><argument_list pos:start="31:33" pos:end="31:35">(<argument pos:start="31:34" pos:end="31:34"><expr pos:start="31:34" pos:end="31:34"><name pos:start="31:34" pos:end="31:34">f</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:38" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:21">

            <return pos:start="33:13" pos:end="33:21">return <expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:62"><expr pos:start="37:9" pos:end="37:61"><call pos:start="37:9" pos:end="37:61"><name pos:start="37:9" pos:end="37:34">trace_savevm_section_start</name><argument_list pos:start="37:35" pos:end="37:61">(<argument pos:start="37:36" pos:end="37:44"><expr pos:start="37:36" pos:end="37:44"><name pos:start="37:36" pos:end="37:44"><name pos:start="37:36" pos:end="37:37">se</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:44">idstr</name></name></expr></argument>, <argument pos:start="37:47" pos:end="37:60"><expr pos:start="37:47" pos:end="37:60"><name pos:start="37:47" pos:end="37:60"><name pos:start="37:47" pos:end="37:48">se</name><operator pos:start="37:49" pos:end="37:50">-&gt;</operator><name pos:start="37:51" pos:end="37:60">section_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:57"><expr pos:start="41:9" pos:end="41:56"><call pos:start="41:9" pos:end="41:56"><name pos:start="41:9" pos:end="41:27">save_section_header</name><argument_list pos:start="41:28" pos:end="41:56">(<argument pos:start="41:29" pos:end="41:29"><expr pos:start="41:29" pos:end="41:29"><name pos:start="41:29" pos:end="41:29">f</name></expr></argument>, <argument pos:start="41:32" pos:end="41:33"><expr pos:start="41:32" pos:end="41:33"><name pos:start="41:32" pos:end="41:33">se</name></expr></argument>, <argument pos:start="41:36" pos:end="41:55"><expr pos:start="41:36" pos:end="41:55"><name pos:start="41:36" pos:end="41:55">QEMU_VM_SECTION_PART</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:56"><expr pos:start="45:9" pos:end="45:55"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:55"><name pos:start="45:15" pos:end="45:40"><name pos:start="45:15" pos:end="45:16">se</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:21">ops</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:40">save_live_iterate</name></name><argument_list pos:start="45:41" pos:end="45:55">(<argument pos:start="45:42" pos:end="45:42"><expr pos:start="45:42" pos:end="45:42"><name pos:start="45:42" pos:end="45:42">f</name></expr></argument>, <argument pos:start="45:45" pos:end="45:54"><expr pos:start="45:45" pos:end="45:54"><name pos:start="45:45" pos:end="45:54"><name pos:start="45:45" pos:end="45:46">se</name><operator pos:start="45:47" pos:end="45:48">-&gt;</operator><name pos:start="45:49" pos:end="45:54">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:65"><expr pos:start="47:9" pos:end="47:64"><call pos:start="47:9" pos:end="47:64"><name pos:start="47:9" pos:end="47:32">trace_savevm_section_end</name><argument_list pos:start="47:33" pos:end="47:64">(<argument pos:start="47:34" pos:end="47:42"><expr pos:start="47:34" pos:end="47:42"><name pos:start="47:34" pos:end="47:42"><name pos:start="47:34" pos:end="47:35">se</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:42">idstr</name></name></expr></argument>, <argument pos:start="47:45" pos:end="47:58"><expr pos:start="47:45" pos:end="47:58"><name pos:start="47:45" pos:end="47:58"><name pos:start="47:45" pos:end="47:46">se</name><operator pos:start="47:47" pos:end="47:48">-&gt;</operator><name pos:start="47:49" pos:end="47:58">section_id</name></name></expr></argument>, <argument pos:start="47:61" pos:end="47:63"><expr pos:start="47:61" pos:end="47:63"><name pos:start="47:61" pos:end="47:63">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




        <if_stmt pos:start="52:9" pos:end="56:9"><if pos:start="52:9" pos:end="56:9">if <condition pos:start="52:12" pos:end="52:20">(<expr pos:start="52:13" pos:end="52:19"><name pos:start="52:13" pos:end="52:15">ret</name> <operator pos:start="52:17" pos:end="52:17">&lt;</operator> <literal type="number" pos:start="52:19" pos:end="52:19">0</literal></expr>)</condition> <block pos:start="52:22" pos:end="56:9">{<block_content pos:start="54:13" pos:end="54:40">

            <expr_stmt pos:start="54:13" pos:end="54:40"><expr pos:start="54:13" pos:end="54:39"><call pos:start="54:13" pos:end="54:39"><name pos:start="54:13" pos:end="54:31">qemu_file_set_error</name><argument_list pos:start="54:32" pos:end="54:39">(<argument pos:start="54:33" pos:end="54:33"><expr pos:start="54:33" pos:end="54:33"><name pos:start="54:33" pos:end="54:33">f</name></expr></argument>, <argument pos:start="54:36" pos:end="54:38"><expr pos:start="54:36" pos:end="54:38"><name pos:start="54:36" pos:end="54:38">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="58:9" pos:end="70:9"><if pos:start="58:9" pos:end="70:9">if <condition pos:start="58:12" pos:end="58:21">(<expr pos:start="58:13" pos:end="58:20"><name pos:start="58:13" pos:end="58:15">ret</name> <operator pos:start="58:17" pos:end="58:18">&lt;=</operator> <literal type="number" pos:start="58:20" pos:end="58:20">0</literal></expr>)</condition> <block pos:start="58:23" pos:end="70:9">{<block_content pos:start="68:13" pos:end="68:18">

            <comment type="block" pos:start="60:13" pos:end="66:51">/* Do not proceed to the next vmstate before this one reported

               completion of the current stage. This serializes the migration

               and reduces the probability that a faster changing state is

               synchronized over and over again. */</comment>

            <break pos:start="68:13" pos:end="68:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <return pos:start="74:5" pos:end="74:15">return <expr pos:start="74:12" pos:end="74:14"><name pos:start="74:12" pos:end="74:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
