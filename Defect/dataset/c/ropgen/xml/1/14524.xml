<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14524.c" pos:tabs="8"><function pos:start="1:1" pos:end="285:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">cpu_ppc_handle_mmu_fault</name> <parameter_list pos:start="1:30" pos:end="3:58">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:38">CPUState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">env</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><name pos:start="1:46" pos:end="1:53">uint32_t</name></type> <name pos:start="1:55" pos:end="1:61">address</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:69"><decl pos:start="1:64" pos:end="1:69"><type pos:start="1:64" pos:end="1:69"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:69">rw</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:41"><decl pos:start="3:31" pos:end="3:41"><type pos:start="3:31" pos:end="3:41"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:41">is_user</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:57"><decl pos:start="3:44" pos:end="3:57"><type pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:57">is_softmmu</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="285:1">{<block_content pos:start="7:5" pos:end="283:15">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">mmu_ctx_t</name></type> <name pos:start="7:15" pos:end="7:17">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">exception</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>, <decl pos:start="9:24" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:24" pos:end="9:33">error_code</name> <init pos:start="9:35" pos:end="9:37">= <expr pos:start="9:37" pos:end="9:37"><literal type="number" pos:start="9:37" pos:end="9:37">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">access_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>

    

    <if_stmt pos:start="17:5" pos:end="37:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:10">rw</name> <operator pos:start="17:12" pos:end="17:13">==</operator> <literal type="number" pos:start="17:15" pos:end="17:15">2</literal></expr>)</condition> <block pos:start="17:18" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:34">

        <comment type="block" pos:start="19:9" pos:end="19:25">/* code access */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:15"><expr pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:10">rw</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:19">access_type</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:33">ACCESS_CODE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="37:5">else <block pos:start="25:12" pos:end="37:5">{<block_content pos:start="33:9" pos:end="33:33">

        <comment type="block" pos:start="27:9" pos:end="27:25">/* data access */</comment>

        <comment type="block" pos:start="29:9" pos:end="31:23">/* XXX: put correct access by using cpu_restore_state()

           correctly */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:33"><expr pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:19">access_type</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:32">ACCESS_INT</name></expr>;</expr_stmt>

        <comment type="line" pos:start="35:9" pos:end="35:49">//        access_type = env-&gt;access_type;</comment>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:71"><expr pos:start="39:5" pos:end="39:70"><name pos:start="39:5" pos:end="39:7">ret</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:70"><name pos:start="39:11" pos:end="39:30">get_physical_address</name><argument_list pos:start="39:31" pos:end="39:70">(<argument pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><name pos:start="39:32" pos:end="39:34">env</name></expr></argument>, <argument pos:start="39:37" pos:end="39:40"><expr pos:start="39:37" pos:end="39:40"><operator pos:start="39:37" pos:end="39:37">&amp;</operator><name pos:start="39:38" pos:end="39:40">ctx</name></expr></argument>, <argument pos:start="39:43" pos:end="39:49"><expr pos:start="39:43" pos:end="39:49"><name pos:start="39:43" pos:end="39:49">address</name></expr></argument>, <argument pos:start="39:52" pos:end="39:53"><expr pos:start="39:52" pos:end="39:53"><name pos:start="39:52" pos:end="39:53">rw</name></expr></argument>, <argument pos:start="39:56" pos:end="39:66"><expr pos:start="39:56" pos:end="39:66"><name pos:start="39:56" pos:end="39:66">access_type</name></expr></argument>, <argument pos:start="39:69" pos:end="39:69"><expr pos:start="39:69" pos:end="39:69"><literal type="number" pos:start="39:69" pos:end="39:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="279:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:17">(<expr pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:14">==</operator> <literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>)</condition> <block pos:start="41:19" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:48">

        <expr_stmt pos:start="43:9" pos:end="47:48"><expr pos:start="43:9" pos:end="47:47"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="47:47"><name pos:start="43:15" pos:end="43:26">tlb_set_page</name><argument_list pos:start="43:27" pos:end="47:47">(<argument pos:start="43:28" pos:end="43:30"><expr pos:start="43:28" pos:end="43:30"><name pos:start="43:28" pos:end="43:30">env</name></expr></argument>, <argument pos:start="43:33" pos:end="43:58"><expr pos:start="43:33" pos:end="43:58"><name pos:start="43:33" pos:end="43:39">address</name> <operator pos:start="43:41" pos:end="43:41">&amp;</operator> <name pos:start="43:43" pos:end="43:58">TARGET_PAGE_MASK</name></expr></argument>,

                           <argument pos:start="45:28" pos:end="45:55"><expr pos:start="45:28" pos:end="45:55"><name pos:start="45:28" pos:end="45:36"><name pos:start="45:28" pos:end="45:30">ctx</name><operator pos:start="45:31" pos:end="45:31">.</operator><name pos:start="45:32" pos:end="45:36">raddr</name></name> <operator pos:start="45:38" pos:end="45:38">&amp;</operator> <name pos:start="45:40" pos:end="45:55">TARGET_PAGE_MASK</name></expr></argument>, <argument pos:start="45:58" pos:end="45:65"><expr pos:start="45:58" pos:end="45:65"><name pos:start="45:58" pos:end="45:65"><name pos:start="45:58" pos:end="45:60">ctx</name><operator pos:start="45:61" pos:end="45:61">.</operator><name pos:start="45:62" pos:end="45:65">prot</name></name></expr></argument>,

                           <argument pos:start="47:28" pos:end="47:34"><expr pos:start="47:28" pos:end="47:34"><name pos:start="47:28" pos:end="47:34">is_user</name></expr></argument>, <argument pos:start="47:37" pos:end="47:46"><expr pos:start="47:37" pos:end="47:46"><name pos:start="47:37" pos:end="47:46">is_softmmu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="279:5">else if <condition pos:start="49:15" pos:end="49:23">(<expr pos:start="49:16" pos:end="49:22"><name pos:start="49:16" pos:end="49:18">ret</name> <operator pos:start="49:20" pos:end="49:20">&lt;</operator> <literal type="number" pos:start="49:22" pos:end="49:22">0</literal></expr>)</condition> <block pos:start="49:25" pos:end="279:5">{<block_content pos:start="53:9" pos:end="277:16">

<cpp:if pos:start="51:1" pos:end="51:23">#<cpp:directive pos:start="51:2" pos:end="51:3">if</cpp:directive> <expr pos:start="51:5" pos:end="51:23"><call pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:11">defined</name> <argument_list pos:start="51:13" pos:end="51:23">(<argument pos:start="51:14" pos:end="51:22"><expr pos:start="51:14" pos:end="51:22"><name pos:start="51:14" pos:end="51:22">DEBUG_MMU</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="53:9" pos:end="58:0"><if pos:start="53:9" pos:end="58:0">if <condition pos:start="53:12" pos:end="53:25">(<expr pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:20">loglevel</name> <operator pos:start="53:22" pos:end="53:22">&gt;</operator> <literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="58:0"><block_content pos:start="55:13" pos:end="58:0">

            <expr_stmt pos:start="55:13" pos:end="58:0"><expr pos:start="55:13" pos:end="55:52"><call pos:start="55:13" pos:end="55:52"><name pos:start="55:13" pos:end="55:26">cpu_dump_state</name><argument_list pos:start="55:27" pos:end="55:52">(<argument pos:start="55:28" pos:end="55:30"><expr pos:start="55:28" pos:end="55:30"><name pos:start="55:28" pos:end="55:30">env</name></expr></argument>, <argument pos:start="55:33" pos:end="55:39"><expr pos:start="55:33" pos:end="55:39"><name pos:start="55:33" pos:end="55:39">logfile</name></expr></argument>, <argument pos:start="55:42" pos:end="55:48"><expr pos:start="55:42" pos:end="55:48"><name pos:start="55:42" pos:end="55:48">fprintf</name></expr></argument>, <argument pos:start="55:51" pos:end="55:51"><expr pos:start="55:51" pos:end="55:51"><literal type="number" pos:start="55:51" pos:end="55:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="59:9" pos:end="261:9"><if pos:start="59:9" pos:end="131:9">if <condition pos:start="59:12" pos:end="59:39">(<expr pos:start="59:13" pos:end="59:38"><name pos:start="59:13" pos:end="59:23">access_type</name> <operator pos:start="59:25" pos:end="59:26">==</operator> <name pos:start="59:28" pos:end="59:38">ACCESS_CODE</name></expr>)</condition> <block pos:start="59:41" pos:end="131:9">{<block_content pos:start="61:13" pos:end="129:13">

            <expr_stmt pos:start="61:13" pos:end="61:33"><expr pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:21">exception</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:32">EXCP_ISI</name></expr>;</expr_stmt>

            <switch pos:start="63:13" pos:end="129:13">switch <condition pos:start="63:20" pos:end="63:24">(<expr pos:start="63:21" pos:end="63:23"><name pos:start="63:21" pos:end="63:23">ret</name></expr>)</condition> <block pos:start="63:26" pos:end="129:13">{<block_content pos:start="65:13" pos:end="127:22">

            <case pos:start="65:13" pos:end="65:20">case <expr pos:start="65:18" pos:end="65:19"><operator pos:start="65:18" pos:end="65:18">-</operator><literal type="number" pos:start="65:19" pos:end="65:19">1</literal></expr>:</case>

                <comment type="block" pos:start="67:17" pos:end="67:54">/* No matches in page tables or TLB */</comment>

                <if_stmt pos:start="69:17" pos:end="89:17"><if pos:start="69:17" pos:end="81:17">if <condition pos:start="69:20" pos:end="69:69">(<expr pos:start="69:21" pos:end="69:68"><call pos:start="69:21" pos:end="69:68"><name pos:start="69:21" pos:end="69:28">unlikely</name><argument_list pos:start="69:29" pos:end="69:68">(<argument pos:start="69:30" pos:end="69:67"><expr pos:start="69:30" pos:end="69:67"><call pos:start="69:30" pos:end="69:41"><name pos:start="69:30" pos:end="69:36">PPC_MMU</name><argument_list pos:start="69:37" pos:end="69:41">(<argument pos:start="69:38" pos:end="69:40"><expr pos:start="69:38" pos:end="69:40"><name pos:start="69:38" pos:end="69:40">env</name></expr></argument>)</argument_list></call> <operator pos:start="69:43" pos:end="69:44">==</operator> <name pos:start="69:46" pos:end="69:67">PPC_FLAGS_MMU_SOFT_6xx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:71" pos:end="81:17">{<block_content pos:start="71:21" pos:end="79:34">

                    <expr_stmt pos:start="71:21" pos:end="71:47"><expr pos:start="71:21" pos:end="71:46"><name pos:start="71:21" pos:end="71:29">exception</name> <operator pos:start="71:31" pos:end="71:31">=</operator> <name pos:start="71:33" pos:end="71:46">EXCP_I_TLBMISS</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:50"><expr pos:start="73:21" pos:end="73:49"><name pos:start="73:21" pos:end="73:39"><name pos:start="73:21" pos:end="73:23">env</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:28">spr</name><index pos:start="73:29" pos:end="73:39">[<expr pos:start="73:30" pos:end="73:38"><name pos:start="73:30" pos:end="73:38">SPR_IMISS</name></expr>]</index></name> <operator pos:start="73:41" pos:end="73:41">=</operator> <name pos:start="73:43" pos:end="73:49">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="75:21" pos:end="75:63"><expr pos:start="75:21" pos:end="75:62"><name pos:start="75:21" pos:end="75:38"><name pos:start="75:21" pos:end="75:23">env</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:28">spr</name><index pos:start="75:29" pos:end="75:38">[<expr pos:start="75:30" pos:end="75:37"><name pos:start="75:30" pos:end="75:37">SPR_ICMP</name></expr>]</index></name> <operator pos:start="75:40" pos:end="75:40">=</operator> <literal type="number" pos:start="75:42" pos:end="75:51">0x80000000</literal> <operator pos:start="75:53" pos:end="75:53">|</operator> <name pos:start="75:55" pos:end="75:62"><name pos:start="75:55" pos:end="75:57">ctx</name><operator pos:start="75:58" pos:end="75:58">.</operator><name pos:start="75:59" pos:end="75:62">ptem</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="77:21" pos:end="77:41"><expr pos:start="77:21" pos:end="77:40"><name pos:start="77:21" pos:end="77:30">error_code</name> <operator pos:start="77:32" pos:end="77:32">=</operator> <literal type="number" pos:start="77:34" pos:end="77:34">1</literal> <operator pos:start="77:36" pos:end="77:37">&lt;&lt;</operator> <literal type="number" pos:start="77:39" pos:end="77:40">18</literal></expr>;</expr_stmt>

                    <goto pos:start="79:21" pos:end="79:34">goto <name pos:start="79:26" pos:end="79:33">tlb_miss</name>;</goto>

                </block_content>}</block></if> <if type="elseif" pos:start="81:19" pos:end="85:17">else if <condition pos:start="81:27" pos:end="81:76">(<expr pos:start="81:28" pos:end="81:75"><call pos:start="81:28" pos:end="81:75"><name pos:start="81:28" pos:end="81:35">unlikely</name><argument_list pos:start="81:36" pos:end="81:75">(<argument pos:start="81:37" pos:end="81:74"><expr pos:start="81:37" pos:end="81:74"><call pos:start="81:37" pos:end="81:48"><name pos:start="81:37" pos:end="81:43">PPC_MMU</name><argument_list pos:start="81:44" pos:end="81:48">(<argument pos:start="81:45" pos:end="81:47"><expr pos:start="81:45" pos:end="81:47"><name pos:start="81:45" pos:end="81:47">env</name></expr></argument>)</argument_list></call> <operator pos:start="81:50" pos:end="81:51">==</operator> <name pos:start="81:53" pos:end="81:74">PPC_FLAGS_MMU_SOFT_4xx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:78" pos:end="85:17">{<block_content>

                    <comment type="block" pos:start="83:21" pos:end="83:35">/* XXX: TODO */</comment>

                </block_content>}</block></if> <else pos:start="85:19" pos:end="89:17">else <block pos:start="85:24" pos:end="89:17">{<block_content pos:start="87:21" pos:end="87:44">

                    <expr_stmt pos:start="87:21" pos:end="87:44"><expr pos:start="87:21" pos:end="87:43"><name pos:start="87:21" pos:end="87:30">error_code</name> <operator pos:start="87:32" pos:end="87:32">=</operator> <literal type="number" pos:start="87:34" pos:end="87:43">0x40000000</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="91:17" pos:end="91:22">break;</break>

            <case pos:start="93:13" pos:end="93:20">case <expr pos:start="93:18" pos:end="93:19"><operator pos:start="93:18" pos:end="93:18">-</operator><literal type="number" pos:start="93:19" pos:end="93:19">2</literal></expr>:</case>

                <comment type="block" pos:start="95:17" pos:end="95:45">/* Access rights violation */</comment>

                <expr_stmt pos:start="97:17" pos:end="97:40"><expr pos:start="97:17" pos:end="97:39"><name pos:start="97:17" pos:end="97:26">error_code</name> <operator pos:start="97:28" pos:end="97:28">=</operator> <literal type="number" pos:start="97:30" pos:end="97:39">0x08000000</literal></expr>;</expr_stmt>

                <break pos:start="99:17" pos:end="99:22">break;</break>

            <case pos:start="101:13" pos:end="101:20">case <expr pos:start="101:18" pos:end="101:19"><operator pos:start="101:18" pos:end="101:18">-</operator><literal type="number" pos:start="101:19" pos:end="101:19">3</literal></expr>:</case>

                <comment type="block" pos:start="103:17" pos:end="103:53">/* No execute protection violation */</comment>

                <expr_stmt pos:start="105:17" pos:end="105:40"><expr pos:start="105:17" pos:end="105:39"><name pos:start="105:17" pos:end="105:26">error_code</name> <operator pos:start="105:28" pos:end="105:28">=</operator> <literal type="number" pos:start="105:30" pos:end="105:39">0x10000000</literal></expr>;</expr_stmt>

                <break pos:start="107:17" pos:end="107:22">break;</break>

            <case pos:start="109:13" pos:end="109:20">case <expr pos:start="109:18" pos:end="109:19"><operator pos:start="109:18" pos:end="109:18">-</operator><literal type="number" pos:start="109:19" pos:end="109:19">4</literal></expr>:</case>

                <comment type="block" pos:start="111:17" pos:end="111:44">/* Direct store exception */</comment>

                <comment type="block" pos:start="113:17" pos:end="113:68">/* No code fetch is allowed in direct-store areas */</comment>

                <expr_stmt pos:start="115:17" pos:end="115:40"><expr pos:start="115:17" pos:end="115:39"><name pos:start="115:17" pos:end="115:26">error_code</name> <operator pos:start="115:28" pos:end="115:28">=</operator> <literal type="number" pos:start="115:30" pos:end="115:39">0x10000000</literal></expr>;</expr_stmt>

                <break pos:start="117:17" pos:end="117:22">break;</break>

            <case pos:start="119:13" pos:end="119:20">case <expr pos:start="119:18" pos:end="119:19"><operator pos:start="119:18" pos:end="119:18">-</operator><literal type="number" pos:start="119:19" pos:end="119:19">5</literal></expr>:</case>

                <comment type="block" pos:start="121:17" pos:end="121:47">/* No match in segment table */</comment>

                <expr_stmt pos:start="123:17" pos:end="123:38"><expr pos:start="123:17" pos:end="123:37"><name pos:start="123:17" pos:end="123:25">exception</name> <operator pos:start="123:27" pos:end="123:27">=</operator> <name pos:start="123:29" pos:end="123:37">EXCP_ISEG</name></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:31"><expr pos:start="125:17" pos:end="125:30"><name pos:start="125:17" pos:end="125:26">error_code</name> <operator pos:start="125:28" pos:end="125:28">=</operator> <literal type="number" pos:start="125:30" pos:end="125:30">0</literal></expr>;</expr_stmt>

                <break pos:start="127:17" pos:end="127:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="131:11" pos:end="261:9">else <block pos:start="131:16" pos:end="261:9">{<block_content pos:start="133:13" pos:end="259:45">

            <expr_stmt pos:start="133:13" pos:end="133:33"><expr pos:start="133:13" pos:end="133:32"><name pos:start="133:13" pos:end="133:21">exception</name> <operator pos:start="133:23" pos:end="133:23">=</operator> <name pos:start="133:25" pos:end="133:32">EXCP_DSI</name></expr>;</expr_stmt>

            <switch pos:start="135:13" pos:end="249:13">switch <condition pos:start="135:20" pos:end="135:24">(<expr pos:start="135:21" pos:end="135:23"><name pos:start="135:21" pos:end="135:23">ret</name></expr>)</condition> <block pos:start="135:26" pos:end="249:13">{<block_content pos:start="137:13" pos:end="247:22">

            <case pos:start="137:13" pos:end="137:20">case <expr pos:start="137:18" pos:end="137:19"><operator pos:start="137:18" pos:end="137:18">-</operator><literal type="number" pos:start="137:19" pos:end="137:19">1</literal></expr>:</case>

                <comment type="block" pos:start="139:17" pos:end="139:54">/* No matches in page tables or TLB */</comment>

                <if_stmt pos:start="141:17" pos:end="181:17"><if pos:start="141:17" pos:end="173:17">if <condition pos:start="141:20" pos:end="141:69">(<expr pos:start="141:21" pos:end="141:68"><call pos:start="141:21" pos:end="141:68"><name pos:start="141:21" pos:end="141:28">unlikely</name><argument_list pos:start="141:29" pos:end="141:68">(<argument pos:start="141:30" pos:end="141:67"><expr pos:start="141:30" pos:end="141:67"><call pos:start="141:30" pos:end="141:41"><name pos:start="141:30" pos:end="141:36">PPC_MMU</name><argument_list pos:start="141:37" pos:end="141:41">(<argument pos:start="141:38" pos:end="141:40"><expr pos:start="141:38" pos:end="141:40"><name pos:start="141:38" pos:end="141:40">env</name></expr></argument>)</argument_list></call> <operator pos:start="141:43" pos:end="141:44">==</operator> <name pos:start="141:46" pos:end="141:67">PPC_FLAGS_MMU_SOFT_6xx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="141:71" pos:end="173:17">{<block_content pos:start="143:21" pos:end="171:29">

                    <if_stmt pos:start="143:21" pos:end="155:21"><if pos:start="143:21" pos:end="149:21">if <condition pos:start="143:24" pos:end="143:32">(<expr pos:start="143:25" pos:end="143:31"><name pos:start="143:25" pos:end="143:26">rw</name> <operator pos:start="143:28" pos:end="143:29">==</operator> <literal type="number" pos:start="143:31" pos:end="143:31">1</literal></expr>)</condition> <block pos:start="143:34" pos:end="149:21">{<block_content pos:start="145:25" pos:end="147:45">

                        <expr_stmt pos:start="145:25" pos:end="145:52"><expr pos:start="145:25" pos:end="145:51"><name pos:start="145:25" pos:end="145:33">exception</name> <operator pos:start="145:35" pos:end="145:35">=</operator> <name pos:start="145:37" pos:end="145:51">EXCP_DS_TLBMISS</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="147:25" pos:end="147:45"><expr pos:start="147:25" pos:end="147:44"><name pos:start="147:25" pos:end="147:34">error_code</name> <operator pos:start="147:36" pos:end="147:36">=</operator> <literal type="number" pos:start="147:38" pos:end="147:38">1</literal> <operator pos:start="147:40" pos:end="147:41">&lt;&lt;</operator> <literal type="number" pos:start="147:43" pos:end="147:44">16</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="149:23" pos:end="155:21">else <block pos:start="149:28" pos:end="155:21">{<block_content pos:start="151:25" pos:end="153:39">

                        <expr_stmt pos:start="151:25" pos:end="151:52"><expr pos:start="151:25" pos:end="151:51"><name pos:start="151:25" pos:end="151:33">exception</name> <operator pos:start="151:35" pos:end="151:35">=</operator> <name pos:start="151:37" pos:end="151:51">EXCP_DL_TLBMISS</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="153:25" pos:end="153:39"><expr pos:start="153:25" pos:end="153:38"><name pos:start="153:25" pos:end="153:34">error_code</name> <operator pos:start="153:36" pos:end="153:36">=</operator> <literal type="number" pos:start="153:38" pos:end="153:38">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="157:21" pos:end="157:50"><expr pos:start="157:21" pos:end="157:49"><name pos:start="157:21" pos:end="157:39"><name pos:start="157:21" pos:end="157:23">env</name><operator pos:start="157:24" pos:end="157:25">-&gt;</operator><name pos:start="157:26" pos:end="157:28">spr</name><index pos:start="157:29" pos:end="157:39">[<expr pos:start="157:30" pos:end="157:38"><name pos:start="157:30" pos:end="157:38">SPR_DMISS</name></expr>]</index></name> <operator pos:start="157:41" pos:end="157:41">=</operator> <name pos:start="157:43" pos:end="157:49">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="159:21" pos:end="159:63"><expr pos:start="159:21" pos:end="159:62"><name pos:start="159:21" pos:end="159:38"><name pos:start="159:21" pos:end="159:23">env</name><operator pos:start="159:24" pos:end="159:25">-&gt;</operator><name pos:start="159:26" pos:end="159:28">spr</name><index pos:start="159:29" pos:end="159:38">[<expr pos:start="159:30" pos:end="159:37"><name pos:start="159:30" pos:end="159:37">SPR_DCMP</name></expr>]</index></name> <operator pos:start="159:40" pos:end="159:40">=</operator> <literal type="number" pos:start="159:42" pos:end="159:51">0x80000000</literal> <operator pos:start="159:53" pos:end="159:53">|</operator> <name pos:start="159:55" pos:end="159:62"><name pos:start="159:55" pos:end="159:57">ctx</name><operator pos:start="159:58" pos:end="159:58">.</operator><name pos:start="159:59" pos:end="159:62">ptem</name></name></expr>;</expr_stmt>

                <label pos:start="161:17" pos:end="161:25"><name pos:start="161:17" pos:end="161:24">tlb_miss</name>:</label>

                    <expr_stmt pos:start="163:21" pos:end="163:48"><expr pos:start="163:21" pos:end="163:47"><name pos:start="163:21" pos:end="163:30">error_code</name> <operator pos:start="163:32" pos:end="163:33">|=</operator> <name pos:start="163:35" pos:end="163:41"><name pos:start="163:35" pos:end="163:37">ctx</name><operator pos:start="163:38" pos:end="163:38">.</operator><name pos:start="163:39" pos:end="163:41">key</name></name> <operator pos:start="163:43" pos:end="163:44">&lt;&lt;</operator> <literal type="number" pos:start="163:46" pos:end="163:47">19</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:57"><expr pos:start="165:21" pos:end="165:56"><name pos:start="165:21" pos:end="165:39"><name pos:start="165:21" pos:end="165:23">env</name><operator pos:start="165:24" pos:end="165:25">-&gt;</operator><name pos:start="165:26" pos:end="165:28">spr</name><index pos:start="165:29" pos:end="165:39">[<expr pos:start="165:30" pos:end="165:38"><name pos:start="165:30" pos:end="165:38">SPR_HASH1</name></expr>]</index></name> <operator pos:start="165:41" pos:end="165:41">=</operator> <name pos:start="165:43" pos:end="165:56"><name pos:start="165:43" pos:end="165:45">ctx</name><operator pos:start="165:46" pos:end="165:46">.</operator><name pos:start="165:47" pos:end="165:53">pg_addr</name><index pos:start="165:54" pos:end="165:56">[<expr pos:start="165:55" pos:end="165:55"><literal type="number" pos:start="165:55" pos:end="165:55">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="167:21" pos:end="167:57"><expr pos:start="167:21" pos:end="167:56"><name pos:start="167:21" pos:end="167:39"><name pos:start="167:21" pos:end="167:23">env</name><operator pos:start="167:24" pos:end="167:25">-&gt;</operator><name pos:start="167:26" pos:end="167:28">spr</name><index pos:start="167:29" pos:end="167:39">[<expr pos:start="167:30" pos:end="167:38"><name pos:start="167:30" pos:end="167:38">SPR_HASH2</name></expr>]</index></name> <operator pos:start="167:41" pos:end="167:41">=</operator> <name pos:start="167:43" pos:end="167:56"><name pos:start="167:43" pos:end="167:45">ctx</name><operator pos:start="167:46" pos:end="167:46">.</operator><name pos:start="167:47" pos:end="167:53">pg_addr</name><index pos:start="167:54" pos:end="167:56">[<expr pos:start="167:55" pos:end="167:55"><literal type="number" pos:start="167:55" pos:end="167:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <comment type="block" pos:start="169:21" pos:end="169:52">/* Do not alter DAR nor DSISR */</comment>

                    <goto pos:start="171:21" pos:end="171:29">goto <name pos:start="171:26" pos:end="171:28">out</name>;</goto>

                </block_content>}</block></if> <if type="elseif" pos:start="173:19" pos:end="177:17">else if <condition pos:start="173:27" pos:end="173:76">(<expr pos:start="173:28" pos:end="173:75"><call pos:start="173:28" pos:end="173:75"><name pos:start="173:28" pos:end="173:35">unlikely</name><argument_list pos:start="173:36" pos:end="173:75">(<argument pos:start="173:37" pos:end="173:74"><expr pos:start="173:37" pos:end="173:74"><call pos:start="173:37" pos:end="173:48"><name pos:start="173:37" pos:end="173:43">PPC_MMU</name><argument_list pos:start="173:44" pos:end="173:48">(<argument pos:start="173:45" pos:end="173:47"><expr pos:start="173:45" pos:end="173:47"><name pos:start="173:45" pos:end="173:47">env</name></expr></argument>)</argument_list></call> <operator pos:start="173:50" pos:end="173:51">==</operator> <name pos:start="173:53" pos:end="173:74">PPC_FLAGS_MMU_SOFT_4xx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="173:78" pos:end="177:17">{<block_content>

                    <comment type="block" pos:start="175:21" pos:end="175:35">/* XXX: TODO */</comment>

                </block_content>}</block></if> <else pos:start="177:19" pos:end="181:17">else <block pos:start="177:24" pos:end="181:17">{<block_content pos:start="179:21" pos:end="179:44">

                    <expr_stmt pos:start="179:21" pos:end="179:44"><expr pos:start="179:21" pos:end="179:43"><name pos:start="179:21" pos:end="179:30">error_code</name> <operator pos:start="179:32" pos:end="179:32">=</operator> <literal type="number" pos:start="179:34" pos:end="179:43">0x40000000</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="183:17" pos:end="183:22">break;</break>

            <case pos:start="185:13" pos:end="185:20">case <expr pos:start="185:18" pos:end="185:19"><operator pos:start="185:18" pos:end="185:18">-</operator><literal type="number" pos:start="185:19" pos:end="185:19">2</literal></expr>:</case>

                <comment type="block" pos:start="187:17" pos:end="187:45">/* Access rights violation */</comment>

                <expr_stmt pos:start="189:17" pos:end="189:40"><expr pos:start="189:17" pos:end="189:39"><name pos:start="189:17" pos:end="189:26">error_code</name> <operator pos:start="189:28" pos:end="189:28">=</operator> <literal type="number" pos:start="189:30" pos:end="189:39">0x08000000</literal></expr>;</expr_stmt>

                <break pos:start="191:17" pos:end="191:22">break;</break>

            <case pos:start="193:13" pos:end="193:20">case <expr pos:start="193:18" pos:end="193:19"><operator pos:start="193:18" pos:end="193:18">-</operator><literal type="number" pos:start="193:19" pos:end="193:19">4</literal></expr>:</case>

                <comment type="block" pos:start="195:17" pos:end="195:44">/* Direct store exception */</comment>

                <switch pos:start="197:17" pos:end="235:17">switch <condition pos:start="197:24" pos:end="197:36">(<expr pos:start="197:25" pos:end="197:35"><name pos:start="197:25" pos:end="197:35">access_type</name></expr>)</condition> <block pos:start="197:38" pos:end="235:17">{<block_content pos:start="199:17" pos:end="233:26">

                <case pos:start="199:17" pos:end="199:34">case <expr pos:start="199:22" pos:end="199:33"><name pos:start="199:22" pos:end="199:33">ACCESS_FLOAT</name></expr>:</case>

                    <comment type="block" pos:start="201:21" pos:end="201:51">/* Floating point load/store */</comment>

                    <expr_stmt pos:start="203:21" pos:end="203:43"><expr pos:start="203:21" pos:end="203:42"><name pos:start="203:21" pos:end="203:29">exception</name> <operator pos:start="203:31" pos:end="203:31">=</operator> <name pos:start="203:33" pos:end="203:42">EXCP_ALIGN</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="205:21" pos:end="205:47"><expr pos:start="205:21" pos:end="205:46"><name pos:start="205:21" pos:end="205:30">error_code</name> <operator pos:start="205:32" pos:end="205:32">=</operator> <name pos:start="205:34" pos:end="205:46">EXCP_ALIGN_FP</name></expr>;</expr_stmt>

                    <break pos:start="207:21" pos:end="207:26">break;</break>

                <case pos:start="209:17" pos:end="209:32">case <expr pos:start="209:22" pos:end="209:31"><name pos:start="209:22" pos:end="209:31">ACCESS_RES</name></expr>:</case>

                    <comment type="block" pos:start="211:21" pos:end="211:48">/* lwarx, ldarx or srwcx. */</comment>

                    <expr_stmt pos:start="213:21" pos:end="213:44"><expr pos:start="213:21" pos:end="213:43"><name pos:start="213:21" pos:end="213:30">error_code</name> <operator pos:start="213:32" pos:end="213:32">=</operator> <literal type="number" pos:start="213:34" pos:end="213:43">0x04000000</literal></expr>;</expr_stmt>

                    <break pos:start="215:21" pos:end="215:26">break;</break>

                <case pos:start="217:17" pos:end="217:32">case <expr pos:start="217:22" pos:end="217:31"><name pos:start="217:22" pos:end="217:31">ACCESS_EXT</name></expr>:</case>

                    <comment type="block" pos:start="219:21" pos:end="219:40">/* eciwx or ecowx */</comment>

                    <expr_stmt pos:start="221:21" pos:end="221:44"><expr pos:start="221:21" pos:end="221:43"><name pos:start="221:21" pos:end="221:30">error_code</name> <operator pos:start="221:32" pos:end="221:32">=</operator> <literal type="number" pos:start="221:34" pos:end="221:43">0x04100000</literal></expr>;</expr_stmt>

                    <break pos:start="223:21" pos:end="223:26">break;</break>

                <default pos:start="225:17" pos:end="225:24">default:</default>

                    <expr_stmt pos:start="227:21" pos:end="227:65"><expr pos:start="227:21" pos:end="227:64"><call pos:start="227:21" pos:end="227:64"><name pos:start="227:21" pos:end="227:26">printf</name><argument_list pos:start="227:27" pos:end="227:64">(<argument pos:start="227:28" pos:end="227:58"><expr pos:start="227:28" pos:end="227:58"><literal type="string" pos:start="227:28" pos:end="227:58">"DSI: invalid exception (%d)\n"</literal></expr></argument>, <argument pos:start="227:61" pos:end="227:63"><expr pos:start="227:61" pos:end="227:63"><name pos:start="227:61" pos:end="227:63">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="229:21" pos:end="229:45"><expr pos:start="229:21" pos:end="229:44"><name pos:start="229:21" pos:end="229:29">exception</name> <operator pos:start="229:31" pos:end="229:31">=</operator> <name pos:start="229:33" pos:end="229:44">EXCP_PROGRAM</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="231:21" pos:end="231:63"><expr pos:start="231:21" pos:end="231:62"><name pos:start="231:21" pos:end="231:30">error_code</name> <operator pos:start="231:32" pos:end="231:32">=</operator> <name pos:start="231:34" pos:end="231:43">EXCP_INVAL</name> <operator pos:start="231:45" pos:end="231:45">|</operator> <name pos:start="231:47" pos:end="231:62">EXCP_INVAL_INVAL</name></expr>;</expr_stmt>

                    <break pos:start="233:21" pos:end="233:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="237:17" pos:end="237:22">break;</break>

            <case pos:start="239:13" pos:end="239:20">case <expr pos:start="239:18" pos:end="239:19"><operator pos:start="239:18" pos:end="239:18">-</operator><literal type="number" pos:start="239:19" pos:end="239:19">5</literal></expr>:</case>

                <comment type="block" pos:start="241:17" pos:end="241:47">/* No match in segment table */</comment>

                <expr_stmt pos:start="243:17" pos:end="243:38"><expr pos:start="243:17" pos:end="243:37"><name pos:start="243:17" pos:end="243:25">exception</name> <operator pos:start="243:27" pos:end="243:27">=</operator> <name pos:start="243:29" pos:end="243:37">EXCP_DSEG</name></expr>;</expr_stmt>

                <expr_stmt pos:start="245:17" pos:end="245:31"><expr pos:start="245:17" pos:end="245:30"><name pos:start="245:17" pos:end="245:26">error_code</name> <operator pos:start="245:28" pos:end="245:28">=</operator> <literal type="number" pos:start="245:30" pos:end="245:30">0</literal></expr>;</expr_stmt>

                <break pos:start="247:17" pos:end="247:22">break;</break>

            </block_content>}</block></switch>

            <if_stmt pos:start="251:13" pos:end="253:41"><if pos:start="251:13" pos:end="253:41">if <condition pos:start="251:16" pos:end="251:49">(<expr pos:start="251:17" pos:end="251:48"><name pos:start="251:17" pos:end="251:25">exception</name> <operator pos:start="251:27" pos:end="251:28">==</operator> <name pos:start="251:30" pos:end="251:37">EXCP_DSI</name> <operator pos:start="251:39" pos:end="251:40">&amp;&amp;</operator> <name pos:start="251:42" pos:end="251:43">rw</name> <operator pos:start="251:45" pos:end="251:46">==</operator> <literal type="number" pos:start="251:48" pos:end="251:48">1</literal></expr>)</condition><block type="pseudo" pos:start="253:17" pos:end="253:41"><block_content pos:start="253:17" pos:end="253:41">

                <expr_stmt pos:start="253:17" pos:end="253:41"><expr pos:start="253:17" pos:end="253:40"><name pos:start="253:17" pos:end="253:26">error_code</name> <operator pos:start="253:28" pos:end="253:29">|=</operator> <literal type="number" pos:start="253:31" pos:end="253:40">0x02000000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="255:13" pos:end="255:37">/* Store fault address */</comment>

            <expr_stmt pos:start="257:13" pos:end="257:40"><expr pos:start="257:13" pos:end="257:39"><name pos:start="257:13" pos:end="257:29"><name pos:start="257:13" pos:end="257:15">env</name><operator pos:start="257:16" pos:end="257:17">-&gt;</operator><name pos:start="257:18" pos:end="257:20">spr</name><index pos:start="257:21" pos:end="257:29">[<expr pos:start="257:22" pos:end="257:28"><name pos:start="257:22" pos:end="257:28">SPR_DAR</name></expr>]</index></name> <operator pos:start="257:31" pos:end="257:31">=</operator> <name pos:start="257:33" pos:end="257:39">address</name></expr>;</expr_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:45"><expr pos:start="259:13" pos:end="259:44"><name pos:start="259:13" pos:end="259:31"><name pos:start="259:13" pos:end="259:15">env</name><operator pos:start="259:16" pos:end="259:17">-&gt;</operator><name pos:start="259:18" pos:end="259:20">spr</name><index pos:start="259:21" pos:end="259:31">[<expr pos:start="259:22" pos:end="259:30"><name pos:start="259:22" pos:end="259:30">SPR_DSISR</name></expr>]</index></name> <operator pos:start="259:33" pos:end="259:33">=</operator> <name pos:start="259:35" pos:end="259:44">error_code</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    <label pos:start="263:5" pos:end="272:0"><name pos:start="263:5" pos:end="263:7">out</name>:</label>

<cpp:if pos:start="265:1" pos:end="265:5">#<cpp:directive pos:start="265:2" pos:end="265:3">if</cpp:directive> <expr pos:start="265:5" pos:end="265:5"><literal type="number" pos:start="265:5" pos:end="265:5">0</literal></expr></cpp:if>

        printf("%s: set exception to %d %02x\n",

               __func__, exception, error_code);

<cpp:endif pos:start="271:1" pos:end="271:6">#<cpp:directive pos:start="271:2" pos:end="271:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="273:9" pos:end="273:41"><expr pos:start="273:9" pos:end="273:40"><name pos:start="273:9" pos:end="273:28"><name pos:start="273:9" pos:end="273:11">env</name><operator pos:start="273:12" pos:end="273:13">-&gt;</operator><name pos:start="273:14" pos:end="273:28">exception_index</name></name> <operator pos:start="273:30" pos:end="273:30">=</operator> <name pos:start="273:32" pos:end="273:40">exception</name></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:37"><expr pos:start="275:9" pos:end="275:36"><name pos:start="275:9" pos:end="275:23"><name pos:start="275:9" pos:end="275:11">env</name><operator pos:start="275:12" pos:end="275:13">-&gt;</operator><name pos:start="275:14" pos:end="275:23">error_code</name></name> <operator pos:start="275:25" pos:end="275:25">=</operator> <name pos:start="275:27" pos:end="275:36">error_code</name></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:16"><expr pos:start="277:9" pos:end="277:15"><name pos:start="277:9" pos:end="277:11">ret</name> <operator pos:start="277:13" pos:end="277:13">=</operator> <literal type="number" pos:start="277:15" pos:end="277:15">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="283:5" pos:end="283:15">return <expr pos:start="283:12" pos:end="283:14"><name pos:start="283:12" pos:end="283:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
