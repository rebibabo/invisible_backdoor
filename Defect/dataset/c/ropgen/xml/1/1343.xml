<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1343.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">esp_mem_writeb</name><parameter_list pos:start="1:27" pos:end="1:79">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:64"><decl pos:start="1:42" pos:end="1:64"><type pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:59">target_phys_addr_t</name></type> <name pos:start="1:61" pos:end="1:64">addr</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:78"><decl pos:start="1:67" pos:end="1:78"><type pos:start="1:67" pos:end="1:78"><name pos:start="1:67" pos:end="1:74">uint32_t</name></type> <name pos:start="1:76" pos:end="1:78">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:26">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">ESPState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:24">= <expr pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:24">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:18">saddr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:51"><expr pos:start="11:5" pos:end="11:50"><name pos:start="11:5" pos:end="11:9">saddr</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <operator pos:start="11:13" pos:end="11:13">(</operator><name pos:start="11:14" pos:end="11:17">addr</name> <operator pos:start="11:19" pos:end="11:20">&gt;&gt;</operator> <name pos:start="11:22" pos:end="11:32"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:32">it_shift</name></name><operator pos:start="11:33" pos:end="11:33">)</operator> <operator pos:start="11:35" pos:end="11:35">&amp;</operator> <operator pos:start="11:37" pos:end="11:37">(</operator><name pos:start="11:38" pos:end="11:45">ESP_REGS</name> <operator pos:start="11:47" pos:end="11:47">-</operator> <literal type="number" pos:start="11:49" pos:end="11:49">1</literal><operator pos:start="11:50" pos:end="11:50">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="15:17"><expr pos:start="13:5" pos:end="15:16"><call pos:start="13:5" pos:end="15:16"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="15:16">(<argument pos:start="13:13" pos:end="13:49"><expr pos:start="13:13" pos:end="13:49"><literal type="string" pos:start="13:13" pos:end="13:49">"write reg[%d]: 0x%2.2x -&gt; 0x%2.2x\n"</literal></expr></argument>, <argument pos:start="13:52" pos:end="13:56"><expr pos:start="13:52" pos:end="13:56"><name pos:start="13:52" pos:end="13:56">saddr</name></expr></argument>, <argument pos:start="13:59" pos:end="13:73"><expr pos:start="13:59" pos:end="13:73"><name pos:start="13:59" pos:end="13:73"><name pos:start="13:59" pos:end="13:59">s</name><operator pos:start="13:60" pos:end="13:61">-&gt;</operator><name pos:start="13:62" pos:end="13:66">wregs</name><index pos:start="13:67" pos:end="13:73">[<expr pos:start="13:68" pos:end="13:72"><name pos:start="13:68" pos:end="13:72">saddr</name></expr>]</index></name></expr></argument>,

            <argument pos:start="15:13" pos:end="15:15"><expr pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="17:5" pos:end="211:5">switch <condition pos:start="17:12" pos:end="17:18">(<expr pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:17">saddr</name></expr>)</condition> <block pos:start="17:20" pos:end="211:5">{<block_content pos:start="19:5" pos:end="209:14">

    <case pos:start="19:5" pos:end="19:18">case <expr pos:start="19:10" pos:end="19:17"><name pos:start="19:10" pos:end="19:17">ESP_TCLO</name></expr>:</case>

    <case pos:start="21:5" pos:end="21:19">case <expr pos:start="21:10" pos:end="21:18"><name pos:start="21:10" pos:end="21:18">ESP_TCMID</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:16">rregs</name><index pos:start="23:17" pos:end="23:27">[<expr pos:start="23:18" pos:end="23:26"><name pos:start="23:18" pos:end="23:26">ESP_RSTAT</name></expr>]</index></name> <operator pos:start="23:29" pos:end="23:30">&amp;=</operator> <operator pos:start="23:32" pos:end="23:32">~</operator><name pos:start="23:33" pos:end="23:39">STAT_TC</name></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:18">case <expr pos:start="27:10" pos:end="27:17"><name pos:start="27:10" pos:end="27:17">ESP_FIFO</name></expr>:</case>

        <if_stmt pos:start="29:9" pos:end="49:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:22">(<expr pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:21">do_cmd</name></name></expr>)</condition> <block pos:start="29:24" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:48">

            <expr_stmt pos:start="31:13" pos:end="31:48"><expr pos:start="31:13" pos:end="31:47"><name pos:start="31:13" pos:end="31:34"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:21">cmdbuf</name><index pos:start="31:22" pos:end="31:34">[<expr pos:start="31:23" pos:end="31:33"><name pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:23">s</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:31">cmdlen</name></name><operator pos:start="31:32" pos:end="31:33">++</operator></expr>]</index></name> <operator pos:start="31:36" pos:end="31:36">=</operator> <name pos:start="31:38" pos:end="31:40">val</name> <operator pos:start="31:42" pos:end="31:42">&amp;</operator> <literal type="number" pos:start="31:44" pos:end="31:47">0xff</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="33:11" pos:end="43:9">else if <condition pos:start="33:19" pos:end="33:62">(<expr pos:start="33:20" pos:end="33:61"><operator pos:start="33:20" pos:end="33:20">(</operator><name pos:start="33:21" pos:end="33:39"><name pos:start="33:21" pos:end="33:21">s</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:28">rregs</name><index pos:start="33:29" pos:end="33:39">[<expr pos:start="33:30" pos:end="33:38"><name pos:start="33:30" pos:end="33:38">ESP_RSTAT</name></expr>]</index></name> <operator pos:start="33:41" pos:end="33:41">&amp;</operator> <name pos:start="33:43" pos:end="33:55">STAT_PIO_MASK</name><operator pos:start="33:56" pos:end="33:56">)</operator> <operator pos:start="33:58" pos:end="33:59">==</operator> <literal type="number" pos:start="33:61" pos:end="33:61">0</literal></expr>)</condition> <block pos:start="33:64" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:69">

            <decl_stmt pos:start="35:13" pos:end="35:24"><decl pos:start="35:13" pos:end="35:23"><type pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:19">uint8_t</name></type> <name pos:start="35:21" pos:end="35:23">buf</name></decl>;</decl_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:29"><expr pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:15">buf</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:21">val</name> <operator pos:start="37:23" pos:end="37:23">&amp;</operator> <literal type="number" pos:start="37:25" pos:end="37:28">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:25"><expr pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:22">ti_size</name></name><operator pos:start="39:23" pos:end="39:24">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:69"><expr pos:start="41:13" pos:end="41:68"><call pos:start="41:13" pos:end="41:68"><name pos:start="41:13" pos:end="41:19">fprintf</name><argument_list pos:start="41:20" pos:end="41:68">(<argument pos:start="41:21" pos:end="41:26"><expr pos:start="41:21" pos:end="41:26"><name pos:start="41:21" pos:end="41:26">stderr</name></expr></argument>, <argument pos:start="41:29" pos:end="41:67"><expr pos:start="41:29" pos:end="41:67"><literal type="string" pos:start="41:29" pos:end="41:67">"esp: PIO data write not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="49:9">else <block pos:start="43:16" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:49">

            <expr_stmt pos:start="45:13" pos:end="45:25"><expr pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:22">ti_size</name></name><operator pos:start="45:23" pos:end="45:24">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:49"><expr pos:start="47:13" pos:end="47:48"><name pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:21">ti_buf</name><index pos:start="47:22" pos:end="47:35">[<expr pos:start="47:23" pos:end="47:34"><name pos:start="47:23" pos:end="47:32"><name pos:start="47:23" pos:end="47:23">s</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:32">ti_wptr</name></name><operator pos:start="47:33" pos:end="47:34">++</operator></expr>]</index></name> <operator pos:start="47:37" pos:end="47:37">=</operator> <name pos:start="47:39" pos:end="47:41">val</name> <operator pos:start="47:43" pos:end="47:43">&amp;</operator> <literal type="number" pos:start="47:45" pos:end="47:48">0xff</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:17">case <expr pos:start="53:10" pos:end="53:16"><name pos:start="53:10" pos:end="53:16">ESP_CMD</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:30"><expr pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:16">rregs</name><index pos:start="55:17" pos:end="55:23">[<expr pos:start="55:18" pos:end="55:22"><name pos:start="55:18" pos:end="55:22">saddr</name></expr>]</index></name> <operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:29">val</name></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="71:9"><if pos:start="57:9" pos:end="67:9">if <condition pos:start="57:12" pos:end="57:26">(<expr pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:15">val</name> <operator pos:start="57:17" pos:end="57:17">&amp;</operator> <name pos:start="57:19" pos:end="57:25">CMD_DMA</name></expr>)</condition> <block pos:start="57:28" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:54">

            <expr_stmt pos:start="59:13" pos:end="59:23"><expr pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:18"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:18">dma</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">1</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="61:13" pos:end="61:38">/* Reload DMA counter.  */</comment>

            <expr_stmt pos:start="63:13" pos:end="63:52"><expr pos:start="63:13" pos:end="63:51"><name pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:20">rregs</name><index pos:start="63:21" pos:end="63:30">[<expr pos:start="63:22" pos:end="63:29"><name pos:start="63:22" pos:end="63:29">ESP_TCLO</name></expr>]</index></name> <operator pos:start="63:32" pos:end="63:32">=</operator> <name pos:start="63:34" pos:end="63:51"><name pos:start="63:34" pos:end="63:34">s</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:41">wregs</name><index pos:start="63:42" pos:end="63:51">[<expr pos:start="63:43" pos:end="63:50"><name pos:start="63:43" pos:end="63:50">ESP_TCLO</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:54"><expr pos:start="65:13" pos:end="65:53"><name pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:20">rregs</name><index pos:start="65:21" pos:end="65:31">[<expr pos:start="65:22" pos:end="65:30"><name pos:start="65:22" pos:end="65:30">ESP_TCMID</name></expr>]</index></name> <operator pos:start="65:33" pos:end="65:33">=</operator> <name pos:start="65:35" pos:end="65:53"><name pos:start="65:35" pos:end="65:35">s</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:42">wregs</name><index pos:start="65:43" pos:end="65:53">[<expr pos:start="65:44" pos:end="65:52"><name pos:start="65:44" pos:end="65:52">ESP_TCMID</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="71:9">else <block pos:start="67:16" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:23">

            <expr_stmt pos:start="69:13" pos:end="69:23"><expr pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:18"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:18">dma</name></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <literal type="number" pos:start="69:22" pos:end="69:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <switch pos:start="73:9" pos:end="177:9">switch<condition pos:start="73:15" pos:end="73:29">(<expr pos:start="73:16" pos:end="73:28"><name pos:start="73:16" pos:end="73:18">val</name> <operator pos:start="73:20" pos:end="73:20">&amp;</operator> <name pos:start="73:22" pos:end="73:28">CMD_CMD</name></expr>)</condition> <block pos:start="73:31" pos:end="177:9">{<block_content pos:start="75:9" pos:end="175:18">

        <case pos:start="75:9" pos:end="75:21">case <expr pos:start="75:14" pos:end="75:20"><name pos:start="75:14" pos:end="75:20">CMD_NOP</name></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="77:42"><expr pos:start="77:13" pos:end="77:41"><call pos:start="77:13" pos:end="77:41"><name pos:start="77:13" pos:end="77:19">DPRINTF</name><argument_list pos:start="77:20" pos:end="77:41">(<argument pos:start="77:21" pos:end="77:35"><expr pos:start="77:21" pos:end="77:35"><literal type="string" pos:start="77:21" pos:end="77:35">"NOP (%2.2x)\n"</literal></expr></argument>, <argument pos:start="77:38" pos:end="77:40"><expr pos:start="77:38" pos:end="77:40"><name pos:start="77:38" pos:end="77:40">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        <case pos:start="81:9" pos:end="81:23">case <expr pos:start="81:14" pos:end="81:22"><name pos:start="81:14" pos:end="81:22">CMD_FLUSH</name></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:49"><expr pos:start="83:13" pos:end="83:48"><call pos:start="83:13" pos:end="83:48"><name pos:start="83:13" pos:end="83:19">DPRINTF</name><argument_list pos:start="83:20" pos:end="83:48">(<argument pos:start="83:21" pos:end="83:42"><expr pos:start="83:21" pos:end="83:42"><literal type="string" pos:start="83:21" pos:end="83:42">"Flush FIFO (%2.2x)\n"</literal></expr></argument>, <argument pos:start="83:45" pos:end="83:47"><expr pos:start="83:45" pos:end="83:47"><name pos:start="83:45" pos:end="83:47">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="85:13" pos:end="85:29">//s-&gt;ti_size = 0;</comment>

            <expr_stmt pos:start="87:13" pos:end="87:42"><expr pos:start="87:13" pos:end="87:41"><name pos:start="87:13" pos:end="87:31"><name pos:start="87:13" pos:end="87:13">s</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:20">rregs</name><index pos:start="87:21" pos:end="87:31">[<expr pos:start="87:22" pos:end="87:30"><name pos:start="87:22" pos:end="87:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="87:33" pos:end="87:33">=</operator> <name pos:start="87:35" pos:end="87:41">INTR_FC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:35"><expr pos:start="89:13" pos:end="89:34"><name pos:start="89:13" pos:end="89:30"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:20">rregs</name><index pos:start="89:21" pos:end="89:30">[<expr pos:start="89:22" pos:end="89:29"><name pos:start="89:22" pos:end="89:29">ESP_RSEQ</name></expr>]</index></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <literal type="number" pos:start="89:34" pos:end="89:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:37"><expr pos:start="91:13" pos:end="91:36"><name pos:start="91:13" pos:end="91:32"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:20">rregs</name><index pos:start="91:21" pos:end="91:32">[<expr pos:start="91:22" pos:end="91:31"><name pos:start="91:22" pos:end="91:31">ESP_RFLAGS</name></expr>]</index></name> <operator pos:start="91:34" pos:end="91:34">=</operator> <literal type="number" pos:start="91:36" pos:end="91:36">0</literal></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:23">case <expr pos:start="95:14" pos:end="95:22"><name pos:start="95:14" pos:end="95:22">CMD_RESET</name></expr>:</case>

            <expr_stmt pos:start="97:13" pos:end="97:49"><expr pos:start="97:13" pos:end="97:48"><call pos:start="97:13" pos:end="97:48"><name pos:start="97:13" pos:end="97:19">DPRINTF</name><argument_list pos:start="97:20" pos:end="97:48">(<argument pos:start="97:21" pos:end="97:42"><expr pos:start="97:21" pos:end="97:42"><literal type="string" pos:start="97:21" pos:end="97:42">"Chip reset (%2.2x)\n"</literal></expr></argument>, <argument pos:start="97:45" pos:end="97:47"><expr pos:start="97:45" pos:end="97:47"><name pos:start="97:45" pos:end="97:47">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:25"><expr pos:start="99:13" pos:end="99:24"><call pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:21">esp_reset</name><argument_list pos:start="99:22" pos:end="99:24">(<argument pos:start="99:23" pos:end="99:23"><expr pos:start="99:23" pos:end="99:23"><name pos:start="99:23" pos:end="99:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="101:13" pos:end="101:18">break;</break>

        <case pos:start="103:9" pos:end="103:26">case <expr pos:start="103:14" pos:end="103:25"><name pos:start="103:14" pos:end="103:25">CMD_BUSRESET</name></expr>:</case>

            <expr_stmt pos:start="105:13" pos:end="105:48"><expr pos:start="105:13" pos:end="105:47"><call pos:start="105:13" pos:end="105:47"><name pos:start="105:13" pos:end="105:19">DPRINTF</name><argument_list pos:start="105:20" pos:end="105:47">(<argument pos:start="105:21" pos:end="105:41"><expr pos:start="105:21" pos:end="105:41"><literal type="string" pos:start="105:21" pos:end="105:41">"Bus reset (%2.2x)\n"</literal></expr></argument>, <argument pos:start="105:44" pos:end="105:46"><expr pos:start="105:44" pos:end="105:46"><name pos:start="105:44" pos:end="105:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:43"><expr pos:start="107:13" pos:end="107:42"><name pos:start="107:13" pos:end="107:31"><name pos:start="107:13" pos:end="107:13">s</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:20">rregs</name><index pos:start="107:21" pos:end="107:31">[<expr pos:start="107:22" pos:end="107:30"><name pos:start="107:22" pos:end="107:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="107:33" pos:end="107:33">=</operator> <name pos:start="107:35" pos:end="107:42">INTR_RST</name></expr>;</expr_stmt>

            <if_stmt pos:start="109:13" pos:end="113:13"><if pos:start="109:13" pos:end="113:13">if <condition pos:start="109:16" pos:end="109:53">(<expr pos:start="109:17" pos:end="109:52"><operator pos:start="109:17" pos:end="109:17">!</operator><operator pos:start="109:18" pos:end="109:18">(</operator><name pos:start="109:19" pos:end="109:36"><name pos:start="109:19" pos:end="109:19">s</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:26">wregs</name><index pos:start="109:27" pos:end="109:36">[<expr pos:start="109:28" pos:end="109:35"><name pos:start="109:28" pos:end="109:35">ESP_CFG1</name></expr>]</index></name> <operator pos:start="109:38" pos:end="109:38">&amp;</operator> <name pos:start="109:40" pos:end="109:51">CFG1_RESREPT</name><operator pos:start="109:52" pos:end="109:52">)</operator></expr>)</condition> <block pos:start="109:55" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:33">

                <expr_stmt pos:start="111:17" pos:end="111:33"><expr pos:start="111:17" pos:end="111:32"><call pos:start="111:17" pos:end="111:32"><name pos:start="111:17" pos:end="111:29">esp_raise_irq</name><argument_list pos:start="111:30" pos:end="111:32">(<argument pos:start="111:31" pos:end="111:31"><expr pos:start="111:31" pos:end="111:31"><name pos:start="111:31" pos:end="111:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        <case pos:start="117:9" pos:end="117:20">case <expr pos:start="117:14" pos:end="117:19"><name pos:start="117:14" pos:end="117:19">CMD_TI</name></expr>:</case>

            <expr_stmt pos:start="119:13" pos:end="119:25"><expr pos:start="119:13" pos:end="119:24"><call pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:21">handle_ti</name><argument_list pos:start="119:22" pos:end="119:24">(<argument pos:start="119:23" pos:end="119:23"><expr pos:start="119:23" pos:end="119:23"><name pos:start="119:23" pos:end="119:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        <case pos:start="123:9" pos:end="123:22">case <expr pos:start="123:14" pos:end="123:21"><name pos:start="123:14" pos:end="123:21">CMD_ICCS</name></expr>:</case>

            <expr_stmt pos:start="125:13" pos:end="125:74"><expr pos:start="125:13" pos:end="125:73"><call pos:start="125:13" pos:end="125:73"><name pos:start="125:13" pos:end="125:19">DPRINTF</name><argument_list pos:start="125:20" pos:end="125:73">(<argument pos:start="125:21" pos:end="125:67"><expr pos:start="125:21" pos:end="125:67"><literal type="string" pos:start="125:21" pos:end="125:67">"Initiator Command Complete Sequence (%2.2x)\n"</literal></expr></argument>, <argument pos:start="125:70" pos:end="125:72"><expr pos:start="125:70" pos:end="125:72"><name pos:start="125:70" pos:end="125:72">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:30"><expr pos:start="127:13" pos:end="127:29"><call pos:start="127:13" pos:end="127:29"><name pos:start="127:13" pos:end="127:26">write_response</name><argument_list pos:start="127:27" pos:end="127:29">(<argument pos:start="127:28" pos:end="127:28"><expr pos:start="127:28" pos:end="127:28"><name pos:start="127:28" pos:end="127:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:24">case <expr pos:start="131:14" pos:end="131:23"><name pos:start="131:14" pos:end="131:23">CMD_MSGACC</name></expr>:</case>

            <expr_stmt pos:start="133:13" pos:end="133:55"><expr pos:start="133:13" pos:end="133:54"><call pos:start="133:13" pos:end="133:54"><name pos:start="133:13" pos:end="133:19">DPRINTF</name><argument_list pos:start="133:20" pos:end="133:54">(<argument pos:start="133:21" pos:end="133:48"><expr pos:start="133:21" pos:end="133:48"><literal type="string" pos:start="133:21" pos:end="133:48">"Message Accepted (%2.2x)\n"</literal></expr></argument>, <argument pos:start="133:51" pos:end="133:53"><expr pos:start="133:51" pos:end="133:53"><name pos:start="133:51" pos:end="133:53">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:30"><expr pos:start="135:13" pos:end="135:29"><call pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:26">write_response</name><argument_list pos:start="135:27" pos:end="135:29">(<argument pos:start="135:28" pos:end="135:28"><expr pos:start="135:28" pos:end="135:28"><name pos:start="135:28" pos:end="135:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:42"><expr pos:start="137:13" pos:end="137:41"><name pos:start="137:13" pos:end="137:31"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:20">rregs</name><index pos:start="137:21" pos:end="137:31">[<expr pos:start="137:22" pos:end="137:30"><name pos:start="137:22" pos:end="137:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="137:33" pos:end="137:33">=</operator> <name pos:start="137:35" pos:end="137:41">INTR_DC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:35"><expr pos:start="139:13" pos:end="139:34"><name pos:start="139:13" pos:end="139:30"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:20">rregs</name><index pos:start="139:21" pos:end="139:30">[<expr pos:start="139:22" pos:end="139:29"><name pos:start="139:22" pos:end="139:29">ESP_RSEQ</name></expr>]</index></name> <operator pos:start="139:32" pos:end="139:32">=</operator> <literal type="number" pos:start="139:34" pos:end="139:34">0</literal></expr>;</expr_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>

        <case pos:start="143:9" pos:end="143:22">case <expr pos:start="143:14" pos:end="143:21"><name pos:start="143:14" pos:end="143:21">CMD_SATN</name></expr>:</case>

            <expr_stmt pos:start="145:13" pos:end="145:46"><expr pos:start="145:13" pos:end="145:45"><call pos:start="145:13" pos:end="145:45"><name pos:start="145:13" pos:end="145:19">DPRINTF</name><argument_list pos:start="145:20" pos:end="145:45">(<argument pos:start="145:21" pos:end="145:39"><expr pos:start="145:21" pos:end="145:39"><literal type="string" pos:start="145:21" pos:end="145:39">"Set ATN (%2.2x)\n"</literal></expr></argument>, <argument pos:start="145:42" pos:end="145:44"><expr pos:start="145:42" pos:end="145:44"><name pos:start="145:42" pos:end="145:44">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <case pos:start="149:9" pos:end="149:24">case <expr pos:start="149:14" pos:end="149:23"><name pos:start="149:14" pos:end="149:23">CMD_SELATN</name></expr>:</case>

            <expr_stmt pos:start="151:13" pos:end="151:46"><expr pos:start="151:13" pos:end="151:45"><call pos:start="151:13" pos:end="151:45"><name pos:start="151:13" pos:end="151:19">DPRINTF</name><argument_list pos:start="151:20" pos:end="151:45">(<argument pos:start="151:21" pos:end="151:39"><expr pos:start="151:21" pos:end="151:39"><literal type="string" pos:start="151:21" pos:end="151:39">"Set ATN (%2.2x)\n"</literal></expr></argument>, <argument pos:start="151:42" pos:end="151:44"><expr pos:start="151:42" pos:end="151:44"><name pos:start="151:42" pos:end="151:44">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:27"><expr pos:start="153:13" pos:end="153:26"><call pos:start="153:13" pos:end="153:26"><name pos:start="153:13" pos:end="153:23">handle_satn</name><argument_list pos:start="153:24" pos:end="153:26">(<argument pos:start="153:25" pos:end="153:25"><expr pos:start="153:25" pos:end="153:25"><name pos:start="153:25" pos:end="153:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="155:13" pos:end="155:18">break;</break>

        <case pos:start="157:9" pos:end="157:25">case <expr pos:start="157:14" pos:end="157:24"><name pos:start="157:14" pos:end="157:24">CMD_SELATNS</name></expr>:</case>

            <expr_stmt pos:start="159:13" pos:end="159:53"><expr pos:start="159:13" pos:end="159:52"><call pos:start="159:13" pos:end="159:52"><name pos:start="159:13" pos:end="159:19">DPRINTF</name><argument_list pos:start="159:20" pos:end="159:52">(<argument pos:start="159:21" pos:end="159:46"><expr pos:start="159:21" pos:end="159:46"><literal type="string" pos:start="159:21" pos:end="159:46">"Set ATN &amp; stop (%2.2x)\n"</literal></expr></argument>, <argument pos:start="159:49" pos:end="159:51"><expr pos:start="159:49" pos:end="159:51"><name pos:start="159:49" pos:end="159:51">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:32"><expr pos:start="161:13" pos:end="161:31"><call pos:start="161:13" pos:end="161:31"><name pos:start="161:13" pos:end="161:28">handle_satn_stop</name><argument_list pos:start="161:29" pos:end="161:31">(<argument pos:start="161:30" pos:end="161:30"><expr pos:start="161:30" pos:end="161:30"><name pos:start="161:30" pos:end="161:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="163:13" pos:end="163:18">break;</break>

        <case pos:start="165:9" pos:end="165:23">case <expr pos:start="165:14" pos:end="165:22"><name pos:start="165:14" pos:end="165:22">CMD_ENSEL</name></expr>:</case>

            <expr_stmt pos:start="167:13" pos:end="167:55"><expr pos:start="167:13" pos:end="167:54"><call pos:start="167:13" pos:end="167:54"><name pos:start="167:13" pos:end="167:19">DPRINTF</name><argument_list pos:start="167:20" pos:end="167:54">(<argument pos:start="167:21" pos:end="167:48"><expr pos:start="167:21" pos:end="167:48"><literal type="string" pos:start="167:21" pos:end="167:48">"Enable selection (%2.2x)\n"</literal></expr></argument>, <argument pos:start="167:51" pos:end="167:53"><expr pos:start="167:51" pos:end="167:53"><name pos:start="167:51" pos:end="167:53">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="169:13" pos:end="169:18">break;</break>

        <default pos:start="171:9" pos:end="171:16">default:</default>

            <expr_stmt pos:start="173:13" pos:end="173:60"><expr pos:start="173:13" pos:end="173:59"><call pos:start="173:13" pos:end="173:59"><name pos:start="173:13" pos:end="173:19">DPRINTF</name><argument_list pos:start="173:20" pos:end="173:59">(<argument pos:start="173:21" pos:end="173:53"><expr pos:start="173:21" pos:end="173:53"><literal type="string" pos:start="173:21" pos:end="173:53">"Unhandled ESP command (%2.2x)\n"</literal></expr></argument>, <argument pos:start="173:56" pos:end="173:58"><expr pos:start="173:56" pos:end="173:58"><name pos:start="173:56" pos:end="173:58">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="179:9" pos:end="179:14">break;</break>

    <case pos:start="181:5" pos:end="181:34">case <expr pos:start="181:10" pos:end="181:33"><name pos:start="181:10" pos:end="181:19">ESP_WBUSID</name> <operator pos:start="181:21" pos:end="181:23">...</operator> <name pos:start="181:25" pos:end="181:33">ESP_WSYNO</name></expr>:</case>

        <break pos:start="183:9" pos:end="183:14">break;</break>

    <case pos:start="185:5" pos:end="185:18">case <expr pos:start="185:10" pos:end="185:17"><name pos:start="185:10" pos:end="185:17">ESP_CFG1</name></expr>:</case>

        <expr_stmt pos:start="187:9" pos:end="187:30"><expr pos:start="187:9" pos:end="187:29"><name pos:start="187:9" pos:end="187:23"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:16">rregs</name><index pos:start="187:17" pos:end="187:23">[<expr pos:start="187:18" pos:end="187:22"><name pos:start="187:18" pos:end="187:22">saddr</name></expr>]</index></name> <operator pos:start="187:25" pos:end="187:25">=</operator> <name pos:start="187:27" pos:end="187:29">val</name></expr>;</expr_stmt>

        <break pos:start="189:9" pos:end="189:14">break;</break>

    <case pos:start="191:5" pos:end="191:32">case <expr pos:start="191:10" pos:end="191:31"><name pos:start="191:10" pos:end="191:17">ESP_WCCF</name> <operator pos:start="191:19" pos:end="191:21">...</operator> <name pos:start="191:23" pos:end="191:31">ESP_WTEST</name></expr>:</case>

        <break pos:start="193:9" pos:end="193:14">break;</break>

    <case pos:start="195:5" pos:end="195:18">case <expr pos:start="195:10" pos:end="195:17"><name pos:start="195:10" pos:end="195:17">ESP_CFG2</name></expr>:</case>

        <expr_stmt pos:start="197:9" pos:end="197:42"><expr pos:start="197:9" pos:end="197:41"><name pos:start="197:9" pos:end="197:23"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:16">rregs</name><index pos:start="197:17" pos:end="197:23">[<expr pos:start="197:18" pos:end="197:22"><name pos:start="197:18" pos:end="197:22">saddr</name></expr>]</index></name> <operator pos:start="197:25" pos:end="197:25">=</operator> <name pos:start="197:27" pos:end="197:29">val</name> <operator pos:start="197:31" pos:end="197:31">&amp;</operator> <name pos:start="197:33" pos:end="197:41">CFG2_MASK</name></expr>;</expr_stmt>

        <break pos:start="199:9" pos:end="199:14">break;</break>

    <case pos:start="201:5" pos:end="201:31">case <expr pos:start="201:10" pos:end="201:30"><name pos:start="201:10" pos:end="201:17">ESP_CFG3</name> <operator pos:start="201:19" pos:end="201:21">...</operator> <name pos:start="201:23" pos:end="201:30">ESP_RES4</name></expr>:</case>

        <expr_stmt pos:start="203:9" pos:end="203:30"><expr pos:start="203:9" pos:end="203:29"><name pos:start="203:9" pos:end="203:23"><name pos:start="203:9" pos:end="203:9">s</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:16">rregs</name><index pos:start="203:17" pos:end="203:23">[<expr pos:start="203:18" pos:end="203:22"><name pos:start="203:18" pos:end="203:22">saddr</name></expr>]</index></name> <operator pos:start="203:25" pos:end="203:25">=</operator> <name pos:start="203:27" pos:end="203:29">val</name></expr>;</expr_stmt>

        <break pos:start="205:9" pos:end="205:14">break;</break>

    <default pos:start="207:5" pos:end="207:12">default:</default>

        <break pos:start="209:9" pos:end="209:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="213:5" pos:end="213:26"><expr pos:start="213:5" pos:end="213:25"><name pos:start="213:5" pos:end="213:19"><name pos:start="213:5" pos:end="213:5">s</name><operator pos:start="213:6" pos:end="213:7">-&gt;</operator><name pos:start="213:8" pos:end="213:12">wregs</name><index pos:start="213:13" pos:end="213:19">[<expr pos:start="213:14" pos:end="213:18"><name pos:start="213:14" pos:end="213:18">saddr</name></expr>]</index></name> <operator pos:start="213:21" pos:end="213:21">=</operator> <name pos:start="213:23" pos:end="213:25">val</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
