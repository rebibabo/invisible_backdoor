<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21682.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:27">gen_outs</name><parameter_list pos:start="1:28" pos:end="1:57">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:40">DisasContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:56"><decl pos:start="1:46" pos:end="1:56"><type pos:start="1:46" pos:end="1:56"><name pos:start="1:46" pos:end="1:53">TCGMemOp</name></type> <name pos:start="1:55" pos:end="1:56">ot</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:5">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:43">(<expr pos:start="5:9" pos:end="5:42"><name pos:start="5:9" pos:end="5:26"><name pos:start="5:9" pos:end="5:9">s</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:15">base</name><operator pos:start="5:16" pos:end="5:16">.</operator><name pos:start="5:17" pos:end="5:18">tb</name><operator pos:start="5:19" pos:end="5:20">-&gt;</operator><name pos:start="5:21" pos:end="5:26">cflags</name></name> <operator pos:start="5:28" pos:end="5:28">&amp;</operator> <name pos:start="5:30" pos:end="5:42">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="5:45" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:23">

        <expr_stmt pos:start="7:9" pos:end="7:23"><expr pos:start="7:9" pos:end="7:22"><call pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:20">gen_io_start</name><argument_list pos:start="7:21" pos:end="7:22">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:30"><expr pos:start="11:5" pos:end="11:29"><call pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:26">gen_string_movl_A0_ESI</name><argument_list pos:start="11:27" pos:end="11:29">(<argument pos:start="11:28" pos:end="11:28"><expr pos:start="11:28" pos:end="11:28"><name pos:start="11:28" pos:end="11:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:39"><expr pos:start="13:5" pos:end="13:38"><call pos:start="13:5" pos:end="13:38"><name pos:start="13:5" pos:end="13:15">gen_op_ld_v</name><argument_list pos:start="13:16" pos:end="13:38">(<argument pos:start="13:17" pos:end="13:17"><expr pos:start="13:17" pos:end="13:17"><name pos:start="13:17" pos:end="13:17">s</name></expr></argument>, <argument pos:start="13:20" pos:end="13:21"><expr pos:start="13:20" pos:end="13:21"><name pos:start="13:20" pos:end="13:21">ot</name></expr></argument>, <argument pos:start="13:24" pos:end="13:29"><expr pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:29">cpu_T0</name></expr></argument>, <argument pos:start="13:32" pos:end="13:37"><expr pos:start="13:32" pos:end="13:37"><name pos:start="13:32" pos:end="13:37">cpu_A0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:56"><expr pos:start="17:5" pos:end="17:55"><call pos:start="17:5" pos:end="17:55"><name pos:start="17:5" pos:end="17:24">tcg_gen_trunc_tl_i32</name><argument_list pos:start="17:25" pos:end="17:55">(<argument pos:start="17:26" pos:end="17:37"><expr pos:start="17:26" pos:end="17:37"><name pos:start="17:26" pos:end="17:37">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="17:40" pos:end="17:54"><expr pos:start="17:40" pos:end="17:54"><name pos:start="17:40" pos:end="17:54"><name pos:start="17:40" pos:end="17:47">cpu_regs</name><index pos:start="17:48" pos:end="17:54">[<expr pos:start="17:49" pos:end="17:53"><name pos:start="17:49" pos:end="17:53">R_EDX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:57"><expr pos:start="19:5" pos:end="19:56"><call pos:start="19:5" pos:end="19:56"><name pos:start="19:5" pos:end="19:20">tcg_gen_andi_i32</name><argument_list pos:start="19:21" pos:end="19:56">(<argument pos:start="19:22" pos:end="19:33"><expr pos:start="19:22" pos:end="19:33"><name pos:start="19:22" pos:end="19:33">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="19:36" pos:end="19:47"><expr pos:start="19:36" pos:end="19:47"><name pos:start="19:36" pos:end="19:47">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="19:50" pos:end="19:55"><expr pos:start="19:50" pos:end="19:55"><literal type="number" pos:start="19:50" pos:end="19:55">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:47"><expr pos:start="21:5" pos:end="21:46"><call pos:start="21:5" pos:end="21:46"><name pos:start="21:5" pos:end="21:24">tcg_gen_trunc_tl_i32</name><argument_list pos:start="21:25" pos:end="21:46">(<argument pos:start="21:26" pos:end="21:37"><expr pos:start="21:26" pos:end="21:37"><name pos:start="21:26" pos:end="21:37">cpu_tmp3_i32</name></expr></argument>, <argument pos:start="21:40" pos:end="21:45"><expr pos:start="21:40" pos:end="21:45"><name pos:start="21:40" pos:end="21:45">cpu_T0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:56"><expr pos:start="23:5" pos:end="23:55"><call pos:start="23:5" pos:end="23:55"><name pos:start="23:5" pos:end="23:23">gen_helper_out_func</name><argument_list pos:start="23:24" pos:end="23:55">(<argument pos:start="23:25" pos:end="23:26"><expr pos:start="23:25" pos:end="23:26"><name pos:start="23:25" pos:end="23:26">ot</name></expr></argument>, <argument pos:start="23:29" pos:end="23:40"><expr pos:start="23:29" pos:end="23:40"><name pos:start="23:29" pos:end="23:40">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="23:43" pos:end="23:54"><expr pos:start="23:43" pos:end="23:54"><name pos:start="23:43" pos:end="23:54">cpu_tmp3_i32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><call pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:25">gen_op_movl_T0_Dshift</name><argument_list pos:start="25:26" pos:end="25:29">(<argument pos:start="25:27" pos:end="25:28"><expr pos:start="25:27" pos:end="25:28"><name pos:start="25:27" pos:end="25:28">ot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:39"><expr pos:start="27:5" pos:end="27:38"><call pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:21">gen_op_add_reg_T0</name><argument_list pos:start="27:22" pos:end="27:38">(<argument pos:start="27:23" pos:end="27:30"><expr pos:start="27:23" pos:end="27:30"><name pos:start="27:23" pos:end="27:30"><name pos:start="27:23" pos:end="27:23">s</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:30">aflag</name></name></expr></argument>, <argument pos:start="27:33" pos:end="27:37"><expr pos:start="27:33" pos:end="27:37"><name pos:start="27:33" pos:end="27:37">R_ESI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><call pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:14">gen_bpt_io</name><argument_list pos:start="29:15" pos:end="29:35">(<argument pos:start="29:16" pos:end="29:16"><expr pos:start="29:16" pos:end="29:16"><name pos:start="29:16" pos:end="29:16">s</name></expr></argument>, <argument pos:start="29:19" pos:end="29:30"><expr pos:start="29:19" pos:end="29:30"><name pos:start="29:19" pos:end="29:30">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="29:33" pos:end="29:34"><expr pos:start="29:33" pos:end="29:34"><name pos:start="29:33" pos:end="29:34">ot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:43">(<expr pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:15">base</name><operator pos:start="31:16" pos:end="31:16">.</operator><name pos:start="31:17" pos:end="31:18">tb</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:26">cflags</name></name> <operator pos:start="31:28" pos:end="31:28">&amp;</operator> <name pos:start="31:30" pos:end="31:42">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="31:45" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:21">

        <expr_stmt pos:start="33:9" pos:end="33:21"><expr pos:start="33:9" pos:end="33:20"><call pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:18">gen_io_end</name><argument_list pos:start="33:19" pos:end="33:20">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
