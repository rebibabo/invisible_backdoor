<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16357.c" pos:tabs="8"><function pos:start="1:1" pos:end="720:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:28">X264_init</name><parameter_list pos:start="1:29" pos:end="1:51">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="720:1">{<block_content pos:start="5:5" pos:end="718:27">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">X264Context</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">x4</name> <init pos:start="5:21" pos:end="5:38">= <expr pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:27">avctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">sw</name></decl>,<decl pos:start="7:12" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:13">sh</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:84"><if pos:start="11:5" pos:end="13:84">if <condition pos:start="11:8" pos:end="11:34">(<expr pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:13">avctx</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:29">global_quality</name></name> <operator pos:start="11:31" pos:end="11:31">&gt;</operator> <literal type="number" pos:start="11:33" pos:end="11:33">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:84"><block_content pos:start="13:9" pos:end="13:84">

        <expr_stmt pos:start="13:9" pos:end="13:84"><expr pos:start="13:9" pos:end="13:83"><call pos:start="13:9" pos:end="13:83"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:83">(<argument pos:start="13:16" pos:end="13:20"><expr pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:20">avctx</name></expr></argument>, <argument pos:start="13:23" pos:end="13:36"><expr pos:start="13:23" pos:end="13:36"><name pos:start="13:23" pos:end="13:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="13:39" pos:end="13:82"><expr pos:start="13:39" pos:end="13:82"><literal type="string" pos:start="13:39" pos:end="13:82">"-qscale is ignored, -crf is recommended.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><call pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:22">x264_param_default</name><argument_list pos:start="17:23" pos:end="17:35">(<argument pos:start="17:24" pos:end="17:34"><expr pos:start="17:24" pos:end="17:34"><operator pos:start="17:24" pos:end="17:24">&amp;</operator><name pos:start="17:25" pos:end="17:34"><name pos:start="17:25" pos:end="17:26">x4</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:34">params</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:83"><expr pos:start="21:5" pos:end="21:82"><name pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:6">x4</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:14">params</name><operator pos:start="21:15" pos:end="21:15">.</operator><name pos:start="21:16" pos:end="21:34">b_deblocking_filter</name></name>         <operator pos:start="21:44" pos:end="21:44">=</operator> <name pos:start="21:46" pos:end="21:57"><name pos:start="21:46" pos:end="21:50">avctx</name><operator pos:start="21:51" pos:end="21:52">-&gt;</operator><name pos:start="21:53" pos:end="21:57">flags</name></name> <operator pos:start="21:59" pos:end="21:59">&amp;</operator> <name pos:start="21:61" pos:end="21:82">CODEC_FLAG_LOOP_FILTER</name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="51:9"><if pos:start="25:5" pos:end="51:9">if <condition pos:start="25:8" pos:end="25:31">(<expr pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:10">x4</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:18">preset</name></name> <operator pos:start="25:20" pos:end="25:21">||</operator> <name pos:start="25:23" pos:end="25:30"><name pos:start="25:23" pos:end="25:24">x4</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:30">tune</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="51:9"><block_content pos:start="27:9" pos:end="51:9">

        <if_stmt pos:start="27:9" pos:end="51:9"><if pos:start="27:9" pos:end="51:9">if <condition pos:start="27:12" pos:end="27:77">(<expr pos:start="27:13" pos:end="27:76"><call pos:start="27:13" pos:end="27:72"><name pos:start="27:13" pos:end="27:37">x264_param_default_preset</name><argument_list pos:start="27:38" pos:end="27:72">(<argument pos:start="27:39" pos:end="27:49"><expr pos:start="27:39" pos:end="27:49"><operator pos:start="27:39" pos:end="27:39">&amp;</operator><name pos:start="27:40" pos:end="27:49"><name pos:start="27:40" pos:end="27:41">x4</name><operator pos:start="27:42" pos:end="27:43">-&gt;</operator><name pos:start="27:44" pos:end="27:49">params</name></name></expr></argument>, <argument pos:start="27:52" pos:end="27:61"><expr pos:start="27:52" pos:end="27:61"><name pos:start="27:52" pos:end="27:61"><name pos:start="27:52" pos:end="27:53">x4</name><operator pos:start="27:54" pos:end="27:55">-&gt;</operator><name pos:start="27:56" pos:end="27:61">preset</name></name></expr></argument>, <argument pos:start="27:64" pos:end="27:71"><expr pos:start="27:64" pos:end="27:71"><name pos:start="27:64" pos:end="27:71"><name pos:start="27:64" pos:end="27:65">x4</name><operator pos:start="27:66" pos:end="27:67">-&gt;</operator><name pos:start="27:68" pos:end="27:71">tune</name></name></expr></argument>)</argument_list></call> <operator pos:start="27:74" pos:end="27:74">&lt;</operator> <literal type="number" pos:start="27:76" pos:end="27:76">0</literal></expr>)</condition> <block pos:start="27:79" pos:end="51:9">{<block_content pos:start="29:13" pos:end="49:35">

            <decl_stmt pos:start="29:13" pos:end="29:18"><decl pos:start="29:13" pos:end="29:17"><type pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">int</name></type> <name pos:start="29:17" pos:end="29:17">i</name></decl>;</decl_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:100"><expr pos:start="31:13" pos:end="31:99"><call pos:start="31:13" pos:end="31:99"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="31:99">(<argument pos:start="31:20" pos:end="31:24"><expr pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:24">avctx</name></expr></argument>, <argument pos:start="31:27" pos:end="31:38"><expr pos:start="31:27" pos:end="31:38"><name pos:start="31:27" pos:end="31:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:41" pos:end="31:76"><expr pos:start="31:41" pos:end="31:76"><literal type="string" pos:start="31:41" pos:end="31:76">"Error setting preset/tune %s/%s.\n"</literal></expr></argument>, <argument pos:start="31:79" pos:end="31:88"><expr pos:start="31:79" pos:end="31:88"><name pos:start="31:79" pos:end="31:88"><name pos:start="31:79" pos:end="31:80">x4</name><operator pos:start="31:81" pos:end="31:82">-&gt;</operator><name pos:start="31:83" pos:end="31:88">preset</name></name></expr></argument>, <argument pos:start="31:91" pos:end="31:98"><expr pos:start="31:91" pos:end="31:98"><name pos:start="31:91" pos:end="31:98"><name pos:start="31:91" pos:end="31:92">x4</name><operator pos:start="31:93" pos:end="31:94">-&gt;</operator><name pos:start="31:95" pos:end="31:98">tune</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:60"><expr pos:start="33:13" pos:end="33:59"><call pos:start="33:13" pos:end="33:59"><name pos:start="33:13" pos:end="33:18">av_log</name><argument_list pos:start="33:19" pos:end="33:59">(<argument pos:start="33:20" pos:end="33:24"><expr pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:24">avctx</name></expr></argument>, <argument pos:start="33:27" pos:end="33:37"><expr pos:start="33:27" pos:end="33:37"><name pos:start="33:27" pos:end="33:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="33:40" pos:end="33:58"><expr pos:start="33:40" pos:end="33:58"><literal type="string" pos:start="33:40" pos:end="33:58">"Possible presets:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="35:13" pos:end="37:72">for <control pos:start="35:17" pos:end="35:50">(<init pos:start="35:18" pos:end="35:23"><expr pos:start="35:18" pos:end="35:22"><name pos:start="35:18" pos:end="35:18">i</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="number" pos:start="35:22" pos:end="35:22">0</literal></expr>;</init> <condition pos:start="35:25" pos:end="35:45"><expr pos:start="35:25" pos:end="35:44"><name pos:start="35:25" pos:end="35:44"><name pos:start="35:25" pos:end="35:41">x264_preset_names</name><index pos:start="35:42" pos:end="35:44">[<expr pos:start="35:43" pos:end="35:43"><name pos:start="35:43" pos:end="35:43">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="35:47" pos:end="35:49"><expr pos:start="35:47" pos:end="35:49"><name pos:start="35:47" pos:end="35:47">i</name><operator pos:start="35:48" pos:end="35:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:17" pos:end="37:72"><block_content pos:start="37:17" pos:end="37:72">

                <expr_stmt pos:start="37:17" pos:end="37:72"><expr pos:start="37:17" pos:end="37:71"><call pos:start="37:17" pos:end="37:71"><name pos:start="37:17" pos:end="37:22">av_log</name><argument_list pos:start="37:23" pos:end="37:71">(<argument pos:start="37:24" pos:end="37:28"><expr pos:start="37:24" pos:end="37:28"><name pos:start="37:24" pos:end="37:28">avctx</name></expr></argument>, <argument pos:start="37:31" pos:end="37:41"><expr pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:41">AV_LOG_INFO</name></expr></argument>, <argument pos:start="37:44" pos:end="37:48"><expr pos:start="37:44" pos:end="37:48"><literal type="string" pos:start="37:44" pos:end="37:48">" %s"</literal></expr></argument>, <argument pos:start="37:51" pos:end="37:70"><expr pos:start="37:51" pos:end="37:70"><name pos:start="37:51" pos:end="37:70"><name pos:start="37:51" pos:end="37:67">x264_preset_names</name><index pos:start="37:68" pos:end="37:70">[<expr pos:start="37:69" pos:end="37:69"><name pos:start="37:69" pos:end="37:69">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="39:13" pos:end="39:45"><expr pos:start="39:13" pos:end="39:44"><call pos:start="39:13" pos:end="39:44"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="39:44">(<argument pos:start="39:20" pos:end="39:24"><expr pos:start="39:20" pos:end="39:24"><name pos:start="39:20" pos:end="39:24">avctx</name></expr></argument>, <argument pos:start="39:27" pos:end="39:37"><expr pos:start="39:27" pos:end="39:37"><name pos:start="39:27" pos:end="39:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="39:40" pos:end="39:43"><expr pos:start="39:40" pos:end="39:43"><literal type="string" pos:start="39:40" pos:end="39:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:58"><expr pos:start="41:13" pos:end="41:57"><call pos:start="41:13" pos:end="41:57"><name pos:start="41:13" pos:end="41:18">av_log</name><argument_list pos:start="41:19" pos:end="41:57">(<argument pos:start="41:20" pos:end="41:24"><expr pos:start="41:20" pos:end="41:24"><name pos:start="41:20" pos:end="41:24">avctx</name></expr></argument>, <argument pos:start="41:27" pos:end="41:37"><expr pos:start="41:27" pos:end="41:37"><name pos:start="41:27" pos:end="41:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="41:40" pos:end="41:56"><expr pos:start="41:40" pos:end="41:56"><literal type="string" pos:start="41:40" pos:end="41:56">"Possible tunes:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="43:13" pos:end="45:70">for <control pos:start="43:17" pos:end="43:48">(<init pos:start="43:18" pos:end="43:23"><expr pos:start="43:18" pos:end="43:22"><name pos:start="43:18" pos:end="43:18">i</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</init> <condition pos:start="43:25" pos:end="43:43"><expr pos:start="43:25" pos:end="43:42"><name pos:start="43:25" pos:end="43:42"><name pos:start="43:25" pos:end="43:39">x264_tune_names</name><index pos:start="43:40" pos:end="43:42">[<expr pos:start="43:41" pos:end="43:41"><name pos:start="43:41" pos:end="43:41">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="43:45" pos:end="43:47"><expr pos:start="43:45" pos:end="43:47"><name pos:start="43:45" pos:end="43:45">i</name><operator pos:start="43:46" pos:end="43:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:17" pos:end="45:70"><block_content pos:start="45:17" pos:end="45:70">

                <expr_stmt pos:start="45:17" pos:end="45:70"><expr pos:start="45:17" pos:end="45:69"><call pos:start="45:17" pos:end="45:69"><name pos:start="45:17" pos:end="45:22">av_log</name><argument_list pos:start="45:23" pos:end="45:69">(<argument pos:start="45:24" pos:end="45:28"><expr pos:start="45:24" pos:end="45:28"><name pos:start="45:24" pos:end="45:28">avctx</name></expr></argument>, <argument pos:start="45:31" pos:end="45:41"><expr pos:start="45:31" pos:end="45:41"><name pos:start="45:31" pos:end="45:41">AV_LOG_INFO</name></expr></argument>, <argument pos:start="45:44" pos:end="45:48"><expr pos:start="45:44" pos:end="45:48"><literal type="string" pos:start="45:44" pos:end="45:48">" %s"</literal></expr></argument>, <argument pos:start="45:51" pos:end="45:68"><expr pos:start="45:51" pos:end="45:68"><name pos:start="45:51" pos:end="45:68"><name pos:start="45:51" pos:end="45:65">x264_tune_names</name><index pos:start="45:66" pos:end="45:68">[<expr pos:start="45:67" pos:end="45:67"><name pos:start="45:67" pos:end="45:67">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="47:13" pos:end="47:45"><expr pos:start="47:13" pos:end="47:44"><call pos:start="47:13" pos:end="47:44"><name pos:start="47:13" pos:end="47:18">av_log</name><argument_list pos:start="47:19" pos:end="47:44">(<argument pos:start="47:20" pos:end="47:24"><expr pos:start="47:20" pos:end="47:24"><name pos:start="47:20" pos:end="47:24">avctx</name></expr></argument>, <argument pos:start="47:27" pos:end="47:37"><expr pos:start="47:27" pos:end="47:37"><name pos:start="47:27" pos:end="47:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="47:40" pos:end="47:43"><expr pos:start="47:40" pos:end="47:43"><literal type="string" pos:start="47:40" pos:end="47:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:35">return <expr pos:start="49:20" pos:end="49:34"><call pos:start="49:20" pos:end="49:34"><name pos:start="49:20" pos:end="49:26">AVERROR</name><argument_list pos:start="49:27" pos:end="49:34">(<argument pos:start="49:28" pos:end="49:33"><expr pos:start="49:28" pos:end="49:33"><name pos:start="49:28" pos:end="49:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="57:46"><if pos:start="55:5" pos:end="57:46">if <condition pos:start="55:8" pos:end="55:25">(<expr pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:13">avctx</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:20">level</name></name> <operator pos:start="55:22" pos:end="55:22">&gt;</operator> <literal type="number" pos:start="55:24" pos:end="55:24">0</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:46"><block_content pos:start="57:9" pos:end="57:46">

        <expr_stmt pos:start="57:9" pos:end="57:46"><expr pos:start="57:9" pos:end="57:45"><name pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:10">x4</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:18">params</name><operator pos:start="57:19" pos:end="57:19">.</operator><name pos:start="57:20" pos:end="57:30">i_level_idc</name></name> <operator pos:start="57:32" pos:end="57:32">=</operator> <name pos:start="57:34" pos:end="57:45"><name pos:start="57:34" pos:end="57:38">avctx</name><operator pos:start="57:39" pos:end="57:40">-&gt;</operator><name pos:start="57:41" pos:end="57:45">level</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:47"><expr pos:start="61:5" pos:end="61:46"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:6">x4</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:14">params</name><operator pos:start="61:15" pos:end="61:15">.</operator><name pos:start="61:16" pos:end="61:21">pf_log</name></name>               <operator pos:start="61:37" pos:end="61:37">=</operator> <name pos:start="61:39" pos:end="61:46">X264_log</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:44"><expr pos:start="63:5" pos:end="63:43"><name pos:start="63:5" pos:end="63:28"><name pos:start="63:5" pos:end="63:6">x4</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:14">params</name><operator pos:start="63:15" pos:end="63:15">.</operator><name pos:start="63:16" pos:end="63:28">p_log_private</name></name>        <operator pos:start="63:37" pos:end="63:37">=</operator> <name pos:start="63:39" pos:end="63:43">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:53"><expr pos:start="65:5" pos:end="65:52"><name pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:6">x4</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:14">params</name><operator pos:start="65:15" pos:end="65:15">.</operator><name pos:start="65:16" pos:end="65:26">i_log_level</name></name>          <operator pos:start="65:37" pos:end="65:37">=</operator> <name pos:start="65:39" pos:end="65:52">X264_LOG_DEBUG</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:70"><expr pos:start="67:5" pos:end="67:69"><name pos:start="67:5" pos:end="67:20"><name pos:start="67:5" pos:end="67:6">x4</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:14">params</name><operator pos:start="67:15" pos:end="67:15">.</operator><name pos:start="67:16" pos:end="67:20">i_csp</name></name>                <operator pos:start="67:37" pos:end="67:37">=</operator> <call pos:start="67:39" pos:end="67:69"><name pos:start="67:39" pos:end="67:53">convert_pix_fmt</name><argument_list pos:start="67:54" pos:end="67:69">(<argument pos:start="67:55" pos:end="67:68"><expr pos:start="67:55" pos:end="67:68"><name pos:start="67:55" pos:end="67:68"><name pos:start="67:55" pos:end="67:59">avctx</name><operator pos:start="67:60" pos:end="67:61">-&gt;</operator><name pos:start="67:62" pos:end="67:68">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:35"><expr pos:start="71:5" pos:end="71:34"><call pos:start="71:5" pos:end="71:34"><name pos:start="71:5" pos:end="71:11">OPT_STR</name><argument_list pos:start="71:12" pos:end="71:34">(<argument pos:start="71:13" pos:end="71:21"><expr pos:start="71:13" pos:end="71:21"><literal type="string" pos:start="71:13" pos:end="71:21">"weightp"</literal></expr></argument>, <argument pos:start="71:24" pos:end="71:33"><expr pos:start="71:24" pos:end="71:33"><name pos:start="71:24" pos:end="71:33"><name pos:start="71:24" pos:end="71:25">x4</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:33">wpredp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:24">(<expr pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:13">avctx</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:23">bit_rate</name></name></expr>)</condition> <block pos:start="75:26" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:48">

        <expr_stmt pos:start="77:9" pos:end="77:59"><expr pos:start="77:9" pos:end="77:58"><name pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:10">x4</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:18">params</name><operator pos:start="77:19" pos:end="77:19">.</operator><name pos:start="77:20" pos:end="77:21">rc</name><operator pos:start="77:22" pos:end="77:22">.</operator><name pos:start="77:23" pos:end="77:31">i_bitrate</name></name>   <operator pos:start="77:35" pos:end="77:35">=</operator> <name pos:start="77:37" pos:end="77:51"><name pos:start="77:37" pos:end="77:41">avctx</name><operator pos:start="77:42" pos:end="77:43">-&gt;</operator><name pos:start="77:44" pos:end="77:51">bit_rate</name></name> <operator pos:start="77:53" pos:end="77:53">/</operator> <literal type="number" pos:start="77:55" pos:end="77:58">1000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:48"><expr pos:start="79:9" pos:end="79:47"><name pos:start="79:9" pos:end="79:33"><name pos:start="79:9" pos:end="79:10">x4</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:18">params</name><operator pos:start="79:19" pos:end="79:19">.</operator><name pos:start="79:20" pos:end="79:21">rc</name><operator pos:start="79:22" pos:end="79:22">.</operator><name pos:start="79:23" pos:end="79:33">i_rc_method</name></name> <operator pos:start="79:35" pos:end="79:35">=</operator> <name pos:start="79:37" pos:end="79:47">X264_RC_ABR</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:67"><expr pos:start="83:5" pos:end="83:66"><name pos:start="83:5" pos:end="83:35"><name pos:start="83:5" pos:end="83:6">x4</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:14">params</name><operator pos:start="83:15" pos:end="83:15">.</operator><name pos:start="83:16" pos:end="83:17">rc</name><operator pos:start="83:18" pos:end="83:18">.</operator><name pos:start="83:19" pos:end="83:35">i_vbv_buffer_size</name></name> <operator pos:start="83:37" pos:end="83:37">=</operator> <name pos:start="83:39" pos:end="83:59"><name pos:start="83:39" pos:end="83:43">avctx</name><operator pos:start="83:44" pos:end="83:45">-&gt;</operator><name pos:start="83:46" pos:end="83:59">rc_buffer_size</name></name> <operator pos:start="83:61" pos:end="83:61">/</operator> <literal type="number" pos:start="83:63" pos:end="83:66">1000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:67"><expr pos:start="85:5" pos:end="85:66"><name pos:start="85:5" pos:end="85:35"><name pos:start="85:5" pos:end="85:6">x4</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:14">params</name><operator pos:start="85:15" pos:end="85:15">.</operator><name pos:start="85:16" pos:end="85:17">rc</name><operator pos:start="85:18" pos:end="85:18">.</operator><name pos:start="85:19" pos:end="85:35">i_vbv_max_bitrate</name></name> <operator pos:start="85:37" pos:end="85:37">=</operator> <name pos:start="85:39" pos:end="85:56"><name pos:start="85:39" pos:end="85:43">avctx</name><operator pos:start="85:44" pos:end="85:45">-&gt;</operator><name pos:start="85:46" pos:end="85:56">rc_max_rate</name></name>    <operator pos:start="85:61" pos:end="85:61">/</operator> <literal type="number" pos:start="85:63" pos:end="85:66">1000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:70"><expr pos:start="87:5" pos:end="87:69"><name pos:start="87:5" pos:end="87:30"><name pos:start="87:5" pos:end="87:6">x4</name><operator pos:start="87:7" pos:end="87:8">-&gt;</operator><name pos:start="87:9" pos:end="87:14">params</name><operator pos:start="87:15" pos:end="87:15">.</operator><name pos:start="87:16" pos:end="87:17">rc</name><operator pos:start="87:18" pos:end="87:18">.</operator><name pos:start="87:19" pos:end="87:30">b_stat_write</name></name>      <operator pos:start="87:37" pos:end="87:37">=</operator> <name pos:start="87:39" pos:end="87:50"><name pos:start="87:39" pos:end="87:43">avctx</name><operator pos:start="87:44" pos:end="87:45">-&gt;</operator><name pos:start="87:46" pos:end="87:50">flags</name></name> <operator pos:start="87:52" pos:end="87:52">&amp;</operator> <name pos:start="87:54" pos:end="87:69">CODEC_FLAG_PASS1</name></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="115:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:40">(<expr pos:start="89:9" pos:end="89:39"><name pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:13">avctx</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:20">flags</name></name> <operator pos:start="89:22" pos:end="89:22">&amp;</operator> <name pos:start="89:24" pos:end="89:39">CODEC_FLAG_PASS2</name></expr>)</condition> <block pos:start="89:42" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:38">

        <expr_stmt pos:start="91:9" pos:end="91:38"><expr pos:start="91:9" pos:end="91:37"><name pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:10">x4</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:18">params</name><operator pos:start="91:19" pos:end="91:19">.</operator><name pos:start="91:20" pos:end="91:21">rc</name><operator pos:start="91:22" pos:end="91:22">.</operator><name pos:start="91:23" pos:end="91:33">b_stat_read</name></name> <operator pos:start="91:35" pos:end="91:35">=</operator> <literal type="number" pos:start="91:37" pos:end="91:37">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="115:5">else <block pos:start="93:12" pos:end="115:5">{<block_content pos:start="95:9" pos:end="113:58">

        <if_stmt pos:start="95:9" pos:end="107:9"><if pos:start="95:9" pos:end="101:9">if <condition pos:start="95:12" pos:end="95:25">(<expr pos:start="95:13" pos:end="95:24"><name pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:14">x4</name><operator pos:start="95:15" pos:end="95:16">-&gt;</operator><name pos:start="95:17" pos:end="95:19">crf</name></name> <operator pos:start="95:21" pos:end="95:22">&gt;=</operator> <literal type="number" pos:start="95:24" pos:end="95:24">0</literal></expr>)</condition> <block pos:start="95:27" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:50">

            <expr_stmt pos:start="97:13" pos:end="97:54"><expr pos:start="97:13" pos:end="97:53"><name pos:start="97:13" pos:end="97:37"><name pos:start="97:13" pos:end="97:14">x4</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:22">params</name><operator pos:start="97:23" pos:end="97:23">.</operator><name pos:start="97:24" pos:end="97:25">rc</name><operator pos:start="97:26" pos:end="97:26">.</operator><name pos:start="97:27" pos:end="97:37">i_rc_method</name></name>   <operator pos:start="97:41" pos:end="97:41">=</operator> <name pos:start="97:43" pos:end="97:53">X264_RC_CRF</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:50"><expr pos:start="99:13" pos:end="99:49"><name pos:start="99:13" pos:end="99:39"><name pos:start="99:13" pos:end="99:14">x4</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:22">params</name><operator pos:start="99:23" pos:end="99:23">.</operator><name pos:start="99:24" pos:end="99:25">rc</name><operator pos:start="99:26" pos:end="99:26">.</operator><name pos:start="99:27" pos:end="99:39">f_rf_constant</name></name> <operator pos:start="99:41" pos:end="99:41">=</operator> <name pos:start="99:43" pos:end="99:49"><name pos:start="99:43" pos:end="99:44">x4</name><operator pos:start="99:45" pos:end="99:46">-&gt;</operator><name pos:start="99:47" pos:end="99:49">crf</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="101:11" pos:end="107:9">else if <condition pos:start="101:19" pos:end="101:32">(<expr pos:start="101:20" pos:end="101:31"><name pos:start="101:20" pos:end="101:26"><name pos:start="101:20" pos:end="101:21">x4</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:26">cqp</name></name> <operator pos:start="101:28" pos:end="101:29">&gt;=</operator> <literal type="number" pos:start="101:31" pos:end="101:31">0</literal></expr>)</condition> <block pos:start="101:34" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:50">

            <expr_stmt pos:start="103:13" pos:end="103:54"><expr pos:start="103:13" pos:end="103:53"><name pos:start="103:13" pos:end="103:37"><name pos:start="103:13" pos:end="103:14">x4</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:22">params</name><operator pos:start="103:23" pos:end="103:23">.</operator><name pos:start="103:24" pos:end="103:25">rc</name><operator pos:start="103:26" pos:end="103:26">.</operator><name pos:start="103:27" pos:end="103:37">i_rc_method</name></name>   <operator pos:start="103:41" pos:end="103:41">=</operator> <name pos:start="103:43" pos:end="103:53">X264_RC_CQP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:50"><expr pos:start="105:13" pos:end="105:49"><name pos:start="105:13" pos:end="105:39"><name pos:start="105:13" pos:end="105:14">x4</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:22">params</name><operator pos:start="105:23" pos:end="105:23">.</operator><name pos:start="105:24" pos:end="105:25">rc</name><operator pos:start="105:26" pos:end="105:26">.</operator><name pos:start="105:27" pos:end="105:39">i_qp_constant</name></name> <operator pos:start="105:41" pos:end="105:41">=</operator> <name pos:start="105:43" pos:end="105:49"><name pos:start="105:43" pos:end="105:44">x4</name><operator pos:start="105:45" pos:end="105:46">-&gt;</operator><name pos:start="105:47" pos:end="105:49">cqp</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="111:9" pos:end="113:58"><if pos:start="111:9" pos:end="113:58">if <condition pos:start="111:12" pos:end="111:29">(<expr pos:start="111:13" pos:end="111:28"><name pos:start="111:13" pos:end="111:23"><name pos:start="111:13" pos:end="111:14">x4</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:23">crf_max</name></name> <operator pos:start="111:25" pos:end="111:26">&gt;=</operator> <literal type="number" pos:start="111:28" pos:end="111:28">0</literal></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:58"><block_content pos:start="113:13" pos:end="113:58">

            <expr_stmt pos:start="113:13" pos:end="113:58"><expr pos:start="113:13" pos:end="113:57"><name pos:start="113:13" pos:end="113:43"><name pos:start="113:13" pos:end="113:14">x4</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:22">params</name><operator pos:start="113:23" pos:end="113:23">.</operator><name pos:start="113:24" pos:end="113:25">rc</name><operator pos:start="113:26" pos:end="113:26">.</operator><name pos:start="113:27" pos:end="113:43">f_rf_constant_max</name></name> <operator pos:start="113:45" pos:end="113:45">=</operator> <name pos:start="113:47" pos:end="113:57"><name pos:start="113:47" pos:end="113:48">x4</name><operator pos:start="113:49" pos:end="113:50">-&gt;</operator><name pos:start="113:51" pos:end="113:57">crf_max</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="119:5" pos:end="127:5"><if pos:start="119:5" pos:end="127:5">if <condition pos:start="119:8" pos:end="121:70">(<expr pos:start="119:9" pos:end="121:69"><name pos:start="119:9" pos:end="119:29"><name pos:start="119:9" pos:end="119:13">avctx</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:29">rc_buffer_size</name></name> <operator pos:start="119:31" pos:end="119:32">&amp;&amp;</operator> <name pos:start="119:34" pos:end="119:67"><name pos:start="119:34" pos:end="119:38">avctx</name><operator pos:start="119:39" pos:end="119:40">-&gt;</operator><name pos:start="119:41" pos:end="119:67">rc_initial_buffer_occupancy</name></name> <operator pos:start="119:69" pos:end="119:69">&gt;</operator> <literal type="number" pos:start="119:71" pos:end="119:71">0</literal> <operator pos:start="119:73" pos:end="119:74">&amp;&amp;</operator>

        <operator pos:start="121:9" pos:end="121:9">(</operator><name pos:start="121:10" pos:end="121:43"><name pos:start="121:10" pos:end="121:14">avctx</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:43">rc_initial_buffer_occupancy</name></name> <operator pos:start="121:45" pos:end="121:46">&lt;=</operator> <name pos:start="121:48" pos:end="121:68"><name pos:start="121:48" pos:end="121:52">avctx</name><operator pos:start="121:53" pos:end="121:54">-&gt;</operator><name pos:start="121:55" pos:end="121:68">rc_buffer_size</name></name><operator pos:start="121:69" pos:end="121:69">)</operator></expr>)</condition> <block pos:start="121:72" pos:end="127:5">{<block_content pos:start="123:9" pos:end="125:78">

        <expr_stmt pos:start="123:9" pos:end="125:78"><expr pos:start="123:9" pos:end="125:77"><name pos:start="123:9" pos:end="123:39"><name pos:start="123:9" pos:end="123:10">x4</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:18">params</name><operator pos:start="123:19" pos:end="123:19">.</operator><name pos:start="123:20" pos:end="123:21">rc</name><operator pos:start="123:22" pos:end="123:22">.</operator><name pos:start="123:23" pos:end="123:39">f_vbv_buffer_init</name></name> <operator pos:start="123:41" pos:end="123:41">=</operator>

            <operator pos:start="125:13" pos:end="125:13">(</operator><name pos:start="125:14" pos:end="125:18">float</name><operator pos:start="125:19" pos:end="125:19">)</operator><name pos:start="125:20" pos:end="125:53"><name pos:start="125:20" pos:end="125:24">avctx</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:53">rc_initial_buffer_occupancy</name></name> <operator pos:start="125:55" pos:end="125:55">/</operator> <name pos:start="125:57" pos:end="125:77"><name pos:start="125:57" pos:end="125:61">avctx</name><operator pos:start="125:62" pos:end="125:63">-&gt;</operator><name pos:start="125:64" pos:end="125:77">rc_buffer_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:32"><expr pos:start="131:5" pos:end="131:31"><call pos:start="131:5" pos:end="131:31"><name pos:start="131:5" pos:end="131:11">OPT_STR</name><argument_list pos:start="131:12" pos:end="131:31">(<argument pos:start="131:13" pos:end="131:19"><expr pos:start="131:13" pos:end="131:19"><literal type="string" pos:start="131:13" pos:end="131:19">"level"</literal></expr></argument>, <argument pos:start="131:22" pos:end="131:30"><expr pos:start="131:22" pos:end="131:30"><name pos:start="131:22" pos:end="131:30"><name pos:start="131:22" pos:end="131:23">x4</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:30">level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="135:5" pos:end="137:76"><if pos:start="135:5" pos:end="137:76">if <condition pos:start="135:8" pos:end="135:34">(<expr pos:start="135:9" pos:end="135:33"><name pos:start="135:9" pos:end="135:29"><name pos:start="135:9" pos:end="135:13">avctx</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:29">i_quant_factor</name></name> <operator pos:start="135:31" pos:end="135:31">&gt;</operator> <literal type="number" pos:start="135:33" pos:end="135:33">0</literal></expr>)</condition><block type="pseudo" pos:start="137:9" pos:end="137:76"><block_content pos:start="137:9" pos:end="137:76">

        <expr_stmt pos:start="137:9" pos:end="137:76"><expr pos:start="137:9" pos:end="137:75"><name pos:start="137:9" pos:end="137:33"><name pos:start="137:9" pos:end="137:10">x4</name><operator pos:start="137:11" pos:end="137:12">-&gt;</operator><name pos:start="137:13" pos:end="137:18">params</name><operator pos:start="137:19" pos:end="137:19">.</operator><name pos:start="137:20" pos:end="137:21">rc</name><operator pos:start="137:22" pos:end="137:22">.</operator><name pos:start="137:23" pos:end="137:33">f_ip_factor</name></name>         <operator pos:start="137:43" pos:end="137:43">=</operator> <literal type="number" pos:start="137:45" pos:end="137:45">1</literal> <operator pos:start="137:47" pos:end="137:47">/</operator> <call pos:start="137:49" pos:end="137:75"><name pos:start="137:49" pos:end="137:52">fabs</name><argument_list pos:start="137:53" pos:end="137:75">(<argument pos:start="137:54" pos:end="137:74"><expr pos:start="137:54" pos:end="137:74"><name pos:start="137:54" pos:end="137:74"><name pos:start="137:54" pos:end="137:58">avctx</name><operator pos:start="137:59" pos:end="137:60">-&gt;</operator><name pos:start="137:61" pos:end="137:74">i_quant_factor</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="139:5" pos:end="141:66"><if pos:start="139:5" pos:end="141:66">if <condition pos:start="139:8" pos:end="139:34">(<expr pos:start="139:9" pos:end="139:33"><name pos:start="139:9" pos:end="139:29"><name pos:start="139:9" pos:end="139:13">avctx</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:29">b_quant_factor</name></name> <operator pos:start="139:31" pos:end="139:31">&gt;</operator> <literal type="number" pos:start="139:33" pos:end="139:33">0</literal></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:66"><block_content pos:start="141:9" pos:end="141:66">

        <expr_stmt pos:start="141:9" pos:end="141:66"><expr pos:start="141:9" pos:end="141:65"><name pos:start="141:9" pos:end="141:33"><name pos:start="141:9" pos:end="141:10">x4</name><operator pos:start="141:11" pos:end="141:12">-&gt;</operator><name pos:start="141:13" pos:end="141:18">params</name><operator pos:start="141:19" pos:end="141:19">.</operator><name pos:start="141:20" pos:end="141:21">rc</name><operator pos:start="141:22" pos:end="141:22">.</operator><name pos:start="141:23" pos:end="141:33">f_pb_factor</name></name>         <operator pos:start="141:43" pos:end="141:43">=</operator> <name pos:start="141:45" pos:end="141:65"><name pos:start="141:45" pos:end="141:49">avctx</name><operator pos:start="141:50" pos:end="141:51">-&gt;</operator><name pos:start="141:52" pos:end="141:65">b_quant_factor</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="143:5" pos:end="145:68"><if pos:start="143:5" pos:end="145:68">if <condition pos:start="143:8" pos:end="143:28">(<expr pos:start="143:9" pos:end="143:27"><name pos:start="143:9" pos:end="143:27"><name pos:start="143:9" pos:end="143:13">avctx</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:27">chromaoffset</name></name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:68"><block_content pos:start="145:9" pos:end="145:68">

        <expr_stmt pos:start="145:9" pos:end="145:68"><expr pos:start="145:9" pos:end="145:67"><name pos:start="145:9" pos:end="145:45"><name pos:start="145:9" pos:end="145:10">x4</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:18">params</name><operator pos:start="145:19" pos:end="145:19">.</operator><name pos:start="145:20" pos:end="145:26">analyse</name><operator pos:start="145:27" pos:end="145:27">.</operator><name pos:start="145:28" pos:end="145:45">i_chroma_qp_offset</name></name> <operator pos:start="145:47" pos:end="145:47">=</operator> <name pos:start="145:49" pos:end="145:67"><name pos:start="145:49" pos:end="145:53">avctx</name><operator pos:start="145:54" pos:end="145:55">-&gt;</operator><name pos:start="145:56" pos:end="145:67">chromaoffset</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="149:5" pos:end="167:54"><if pos:start="149:5" pos:end="151:53">if <condition pos:start="149:8" pos:end="149:36">(<expr pos:start="149:9" pos:end="149:35"><name pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:13">avctx</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:24">me_method</name></name> <operator pos:start="149:26" pos:end="149:27">==</operator> <name pos:start="149:29" pos:end="149:35">ME_EPZS</name></expr>)</condition><block type="pseudo" pos:start="151:9" pos:end="151:53"><block_content pos:start="151:9" pos:end="151:53">

        <expr_stmt pos:start="151:9" pos:end="151:53"><expr pos:start="151:9" pos:end="151:52"><name pos:start="151:9" pos:end="151:38"><name pos:start="151:9" pos:end="151:10">x4</name><operator pos:start="151:11" pos:end="151:12">-&gt;</operator><name pos:start="151:13" pos:end="151:18">params</name><operator pos:start="151:19" pos:end="151:19">.</operator><name pos:start="151:20" pos:end="151:26">analyse</name><operator pos:start="151:27" pos:end="151:27">.</operator><name pos:start="151:28" pos:end="151:38">i_me_method</name></name> <operator pos:start="151:40" pos:end="151:40">=</operator> <name pos:start="151:42" pos:end="151:52">X264_ME_DIA</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="153:5" pos:end="155:53">else if <condition pos:start="153:13" pos:end="153:40">(<expr pos:start="153:14" pos:end="153:39"><name pos:start="153:14" pos:end="153:29"><name pos:start="153:14" pos:end="153:18">avctx</name><operator pos:start="153:19" pos:end="153:20">-&gt;</operator><name pos:start="153:21" pos:end="153:29">me_method</name></name> <operator pos:start="153:31" pos:end="153:32">==</operator> <name pos:start="153:34" pos:end="153:39">ME_HEX</name></expr>)</condition><block type="pseudo" pos:start="155:9" pos:end="155:53"><block_content pos:start="155:9" pos:end="155:53">

        <expr_stmt pos:start="155:9" pos:end="155:53"><expr pos:start="155:9" pos:end="155:52"><name pos:start="155:9" pos:end="155:38"><name pos:start="155:9" pos:end="155:10">x4</name><operator pos:start="155:11" pos:end="155:12">-&gt;</operator><name pos:start="155:13" pos:end="155:18">params</name><operator pos:start="155:19" pos:end="155:19">.</operator><name pos:start="155:20" pos:end="155:26">analyse</name><operator pos:start="155:27" pos:end="155:27">.</operator><name pos:start="155:28" pos:end="155:38">i_me_method</name></name> <operator pos:start="155:40" pos:end="155:40">=</operator> <name pos:start="155:42" pos:end="155:52">X264_ME_HEX</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="157:5" pos:end="159:53">else if <condition pos:start="157:13" pos:end="157:40">(<expr pos:start="157:14" pos:end="157:39"><name pos:start="157:14" pos:end="157:29"><name pos:start="157:14" pos:end="157:18">avctx</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:29">me_method</name></name> <operator pos:start="157:31" pos:end="157:32">==</operator> <name pos:start="157:34" pos:end="157:39">ME_UMH</name></expr>)</condition><block type="pseudo" pos:start="159:9" pos:end="159:53"><block_content pos:start="159:9" pos:end="159:53">

        <expr_stmt pos:start="159:9" pos:end="159:53"><expr pos:start="159:9" pos:end="159:52"><name pos:start="159:9" pos:end="159:38"><name pos:start="159:9" pos:end="159:10">x4</name><operator pos:start="159:11" pos:end="159:12">-&gt;</operator><name pos:start="159:13" pos:end="159:18">params</name><operator pos:start="159:19" pos:end="159:19">.</operator><name pos:start="159:20" pos:end="159:26">analyse</name><operator pos:start="159:27" pos:end="159:27">.</operator><name pos:start="159:28" pos:end="159:38">i_me_method</name></name> <operator pos:start="159:40" pos:end="159:40">=</operator> <name pos:start="159:42" pos:end="159:52">X264_ME_UMH</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="161:5" pos:end="163:53">else if <condition pos:start="161:13" pos:end="161:41">(<expr pos:start="161:14" pos:end="161:40"><name pos:start="161:14" pos:end="161:29"><name pos:start="161:14" pos:end="161:18">avctx</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:29">me_method</name></name> <operator pos:start="161:31" pos:end="161:32">==</operator> <name pos:start="161:34" pos:end="161:40">ME_FULL</name></expr>)</condition><block type="pseudo" pos:start="163:9" pos:end="163:53"><block_content pos:start="163:9" pos:end="163:53">

        <expr_stmt pos:start="163:9" pos:end="163:53"><expr pos:start="163:9" pos:end="163:52"><name pos:start="163:9" pos:end="163:38"><name pos:start="163:9" pos:end="163:10">x4</name><operator pos:start="163:11" pos:end="163:12">-&gt;</operator><name pos:start="163:13" pos:end="163:18">params</name><operator pos:start="163:19" pos:end="163:19">.</operator><name pos:start="163:20" pos:end="163:26">analyse</name><operator pos:start="163:27" pos:end="163:27">.</operator><name pos:start="163:28" pos:end="163:38">i_me_method</name></name> <operator pos:start="163:40" pos:end="163:40">=</operator> <name pos:start="163:42" pos:end="163:52">X264_ME_ESA</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="165:5" pos:end="167:54">else if <condition pos:start="165:13" pos:end="165:41">(<expr pos:start="165:14" pos:end="165:40"><name pos:start="165:14" pos:end="165:29"><name pos:start="165:14" pos:end="165:18">avctx</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:29">me_method</name></name> <operator pos:start="165:31" pos:end="165:32">==</operator> <name pos:start="165:34" pos:end="165:40">ME_TESA</name></expr>)</condition><block type="pseudo" pos:start="167:9" pos:end="167:54"><block_content pos:start="167:9" pos:end="167:54">

        <expr_stmt pos:start="167:9" pos:end="167:54"><expr pos:start="167:9" pos:end="167:53"><name pos:start="167:9" pos:end="167:38"><name pos:start="167:9" pos:end="167:10">x4</name><operator pos:start="167:11" pos:end="167:12">-&gt;</operator><name pos:start="167:13" pos:end="167:18">params</name><operator pos:start="167:19" pos:end="167:19">.</operator><name pos:start="167:20" pos:end="167:26">analyse</name><operator pos:start="167:27" pos:end="167:27">.</operator><name pos:start="167:28" pos:end="167:38">i_me_method</name></name> <operator pos:start="167:40" pos:end="167:40">=</operator> <name pos:start="167:42" pos:end="167:53">X264_ME_TESA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="171:5" pos:end="173:58"><if pos:start="171:5" pos:end="173:58">if <condition pos:start="171:8" pos:end="171:29">(<expr pos:start="171:9" pos:end="171:28"><name pos:start="171:9" pos:end="171:23"><name pos:start="171:9" pos:end="171:13">avctx</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:23">gop_size</name></name> <operator pos:start="171:25" pos:end="171:26">&gt;=</operator> <literal type="number" pos:start="171:28" pos:end="171:28">0</literal></expr>)</condition><block type="pseudo" pos:start="173:9" pos:end="173:58"><block_content pos:start="173:9" pos:end="173:58">

        <expr_stmt pos:start="173:9" pos:end="173:58"><expr pos:start="173:9" pos:end="173:57"><name pos:start="173:9" pos:end="173:31"><name pos:start="173:9" pos:end="173:10">x4</name><operator pos:start="173:11" pos:end="173:12">-&gt;</operator><name pos:start="173:13" pos:end="173:18">params</name><operator pos:start="173:19" pos:end="173:19">.</operator><name pos:start="173:20" pos:end="173:31">i_keyint_max</name></name>         <operator pos:start="173:41" pos:end="173:41">=</operator> <name pos:start="173:43" pos:end="173:57"><name pos:start="173:43" pos:end="173:47">avctx</name><operator pos:start="173:48" pos:end="173:49">-&gt;</operator><name pos:start="173:50" pos:end="173:57">gop_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="175:5" pos:end="177:62"><if pos:start="175:5" pos:end="177:62">if <condition pos:start="175:8" pos:end="175:33">(<expr pos:start="175:9" pos:end="175:32"><name pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:13">avctx</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:27">max_b_frames</name></name> <operator pos:start="175:29" pos:end="175:30">&gt;=</operator> <literal type="number" pos:start="175:32" pos:end="175:32">0</literal></expr>)</condition><block type="pseudo" pos:start="177:9" pos:end="177:62"><block_content pos:start="177:9" pos:end="177:62">

        <expr_stmt pos:start="177:9" pos:end="177:62"><expr pos:start="177:9" pos:end="177:61"><name pos:start="177:9" pos:end="177:27"><name pos:start="177:9" pos:end="177:10">x4</name><operator pos:start="177:11" pos:end="177:12">-&gt;</operator><name pos:start="177:13" pos:end="177:18">params</name><operator pos:start="177:19" pos:end="177:19">.</operator><name pos:start="177:20" pos:end="177:27">i_bframe</name></name>             <operator pos:start="177:41" pos:end="177:41">=</operator> <name pos:start="177:43" pos:end="177:61"><name pos:start="177:43" pos:end="177:47">avctx</name><operator pos:start="177:48" pos:end="177:49">-&gt;</operator><name pos:start="177:50" pos:end="177:61">max_b_frames</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="179:5" pos:end="181:71"><if pos:start="179:5" pos:end="181:71">if <condition pos:start="179:8" pos:end="179:42">(<expr pos:start="179:9" pos:end="179:41"><name pos:start="179:9" pos:end="179:36"><name pos:start="179:9" pos:end="179:13">avctx</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:36">scenechange_threshold</name></name> <operator pos:start="179:38" pos:end="179:39">&gt;=</operator> <literal type="number" pos:start="179:41" pos:end="179:41">0</literal></expr>)</condition><block type="pseudo" pos:start="181:9" pos:end="181:71"><block_content pos:start="181:9" pos:end="181:71">

        <expr_stmt pos:start="181:9" pos:end="181:71"><expr pos:start="181:9" pos:end="181:70"><name pos:start="181:9" pos:end="181:39"><name pos:start="181:9" pos:end="181:10">x4</name><operator pos:start="181:11" pos:end="181:12">-&gt;</operator><name pos:start="181:13" pos:end="181:18">params</name><operator pos:start="181:19" pos:end="181:19">.</operator><name pos:start="181:20" pos:end="181:39">i_scenecut_threshold</name></name> <operator pos:start="181:41" pos:end="181:41">=</operator> <name pos:start="181:43" pos:end="181:70"><name pos:start="181:43" pos:end="181:47">avctx</name><operator pos:start="181:48" pos:end="181:49">-&gt;</operator><name pos:start="181:50" pos:end="181:70">scenechange_threshold</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="183:5" pos:end="185:54"><if pos:start="183:5" pos:end="185:54">if <condition pos:start="183:8" pos:end="183:25">(<expr pos:start="183:9" pos:end="183:24"><name pos:start="183:9" pos:end="183:19"><name pos:start="183:9" pos:end="183:13">avctx</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:19">qmin</name></name> <operator pos:start="183:21" pos:end="183:22">&gt;=</operator> <literal type="number" pos:start="183:24" pos:end="183:24">0</literal></expr>)</condition><block type="pseudo" pos:start="185:9" pos:end="185:54"><block_content pos:start="185:9" pos:end="185:54">

        <expr_stmt pos:start="185:9" pos:end="185:54"><expr pos:start="185:9" pos:end="185:53"><name pos:start="185:9" pos:end="185:30"><name pos:start="185:9" pos:end="185:10">x4</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:18">params</name><operator pos:start="185:19" pos:end="185:19">.</operator><name pos:start="185:20" pos:end="185:21">rc</name><operator pos:start="185:22" pos:end="185:22">.</operator><name pos:start="185:23" pos:end="185:30">i_qp_min</name></name>          <operator pos:start="185:41" pos:end="185:41">=</operator> <name pos:start="185:43" pos:end="185:53"><name pos:start="185:43" pos:end="185:47">avctx</name><operator pos:start="185:48" pos:end="185:49">-&gt;</operator><name pos:start="185:50" pos:end="185:53">qmin</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="187:5" pos:end="189:54"><if pos:start="187:5" pos:end="189:54">if <condition pos:start="187:8" pos:end="187:25">(<expr pos:start="187:9" pos:end="187:24"><name pos:start="187:9" pos:end="187:19"><name pos:start="187:9" pos:end="187:13">avctx</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:19">qmax</name></name> <operator pos:start="187:21" pos:end="187:22">&gt;=</operator> <literal type="number" pos:start="187:24" pos:end="187:24">0</literal></expr>)</condition><block type="pseudo" pos:start="189:9" pos:end="189:54"><block_content pos:start="189:9" pos:end="189:54">

        <expr_stmt pos:start="189:9" pos:end="189:54"><expr pos:start="189:9" pos:end="189:53"><name pos:start="189:9" pos:end="189:30"><name pos:start="189:9" pos:end="189:10">x4</name><operator pos:start="189:11" pos:end="189:12">-&gt;</operator><name pos:start="189:13" pos:end="189:18">params</name><operator pos:start="189:19" pos:end="189:19">.</operator><name pos:start="189:20" pos:end="189:21">rc</name><operator pos:start="189:22" pos:end="189:22">.</operator><name pos:start="189:23" pos:end="189:30">i_qp_max</name></name>          <operator pos:start="189:41" pos:end="189:41">=</operator> <name pos:start="189:43" pos:end="189:53"><name pos:start="189:43" pos:end="189:47">avctx</name><operator pos:start="189:48" pos:end="189:49">-&gt;</operator><name pos:start="189:50" pos:end="189:53">qmax</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="191:5" pos:end="193:59"><if pos:start="191:5" pos:end="193:59">if <condition pos:start="191:8" pos:end="191:30">(<expr pos:start="191:9" pos:end="191:29"><name pos:start="191:9" pos:end="191:24"><name pos:start="191:9" pos:end="191:13">avctx</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:24">max_qdiff</name></name> <operator pos:start="191:26" pos:end="191:27">&gt;=</operator> <literal type="number" pos:start="191:29" pos:end="191:29">0</literal></expr>)</condition><block type="pseudo" pos:start="193:9" pos:end="193:59"><block_content pos:start="193:9" pos:end="193:59">

        <expr_stmt pos:start="193:9" pos:end="193:59"><expr pos:start="193:9" pos:end="193:58"><name pos:start="193:9" pos:end="193:31"><name pos:start="193:9" pos:end="193:10">x4</name><operator pos:start="193:11" pos:end="193:12">-&gt;</operator><name pos:start="193:13" pos:end="193:18">params</name><operator pos:start="193:19" pos:end="193:19">.</operator><name pos:start="193:20" pos:end="193:21">rc</name><operator pos:start="193:22" pos:end="193:22">.</operator><name pos:start="193:23" pos:end="193:31">i_qp_step</name></name>         <operator pos:start="193:41" pos:end="193:41">=</operator> <name pos:start="193:43" pos:end="193:58"><name pos:start="193:43" pos:end="193:47">avctx</name><operator pos:start="193:48" pos:end="193:49">-&gt;</operator><name pos:start="193:50" pos:end="193:58">max_qdiff</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="195:5" pos:end="197:55"><if pos:start="195:5" pos:end="197:55">if <condition pos:start="195:8" pos:end="195:26">(<expr pos:start="195:9" pos:end="195:25"><name pos:start="195:9" pos:end="195:20"><name pos:start="195:9" pos:end="195:13">avctx</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:20">qblur</name></name> <operator pos:start="195:22" pos:end="195:23">&gt;=</operator> <literal type="number" pos:start="195:25" pos:end="195:25">0</literal></expr>)</condition><block type="pseudo" pos:start="197:9" pos:end="197:55"><block_content pos:start="197:9" pos:end="197:55">

        <expr_stmt pos:start="197:9" pos:end="197:55"><expr pos:start="197:9" pos:end="197:54"><name pos:start="197:9" pos:end="197:29"><name pos:start="197:9" pos:end="197:10">x4</name><operator pos:start="197:11" pos:end="197:12">-&gt;</operator><name pos:start="197:13" pos:end="197:18">params</name><operator pos:start="197:19" pos:end="197:19">.</operator><name pos:start="197:20" pos:end="197:21">rc</name><operator pos:start="197:22" pos:end="197:22">.</operator><name pos:start="197:23" pos:end="197:29">f_qblur</name></name>           <operator pos:start="197:41" pos:end="197:41">=</operator> <name pos:start="197:43" pos:end="197:54"><name pos:start="197:43" pos:end="197:47">avctx</name><operator pos:start="197:48" pos:end="197:49">-&gt;</operator><name pos:start="197:50" pos:end="197:54">qblur</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>     <comment type="block" pos:start="197:61" pos:end="197:88">/* temporally blur quants */</comment>

    <if_stmt pos:start="199:5" pos:end="201:59"><if pos:start="199:5" pos:end="201:59">if <condition pos:start="199:8" pos:end="199:30">(<expr pos:start="199:9" pos:end="199:29"><name pos:start="199:9" pos:end="199:24"><name pos:start="199:9" pos:end="199:13">avctx</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:24">qcompress</name></name> <operator pos:start="199:26" pos:end="199:27">&gt;=</operator> <literal type="number" pos:start="199:29" pos:end="199:29">0</literal></expr>)</condition><block type="pseudo" pos:start="201:9" pos:end="201:59"><block_content pos:start="201:9" pos:end="201:59">

        <expr_stmt pos:start="201:9" pos:end="201:59"><expr pos:start="201:9" pos:end="201:58"><name pos:start="201:9" pos:end="201:33"><name pos:start="201:9" pos:end="201:10">x4</name><operator pos:start="201:11" pos:end="201:12">-&gt;</operator><name pos:start="201:13" pos:end="201:18">params</name><operator pos:start="201:19" pos:end="201:19">.</operator><name pos:start="201:20" pos:end="201:21">rc</name><operator pos:start="201:22" pos:end="201:22">.</operator><name pos:start="201:23" pos:end="201:33">f_qcompress</name></name>       <operator pos:start="201:41" pos:end="201:41">=</operator> <name pos:start="201:43" pos:end="201:58"><name pos:start="201:43" pos:end="201:47">avctx</name><operator pos:start="201:48" pos:end="201:49">-&gt;</operator><name pos:start="201:50" pos:end="201:58">qcompress</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="201:61" pos:end="201:96">/* 0.0 =&gt; cbr, 1.0 =&gt; constant qp */</comment>

    <if_stmt pos:start="203:5" pos:end="247:5"><if pos:start="203:5" pos:end="205:54">if <condition pos:start="203:8" pos:end="203:25">(<expr pos:start="203:9" pos:end="203:24"><name pos:start="203:9" pos:end="203:19"><name pos:start="203:9" pos:end="203:13">avctx</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:19">refs</name></name> <operator pos:start="203:21" pos:end="203:22">&gt;=</operator> <literal type="number" pos:start="203:24" pos:end="203:24">0</literal></expr>)</condition><block type="pseudo" pos:start="205:9" pos:end="205:54"><block_content pos:start="205:9" pos:end="205:54">

        <expr_stmt pos:start="205:9" pos:end="205:54"><expr pos:start="205:9" pos:end="205:53"><name pos:start="205:9" pos:end="205:36"><name pos:start="205:9" pos:end="205:10">x4</name><operator pos:start="205:11" pos:end="205:12">-&gt;</operator><name pos:start="205:13" pos:end="205:18">params</name><operator pos:start="205:19" pos:end="205:19">.</operator><name pos:start="205:20" pos:end="205:36">i_frame_reference</name></name>    <operator pos:start="205:41" pos:end="205:41">=</operator> <name pos:start="205:43" pos:end="205:53"><name pos:start="205:43" pos:end="205:47">avctx</name><operator pos:start="205:48" pos:end="205:49">-&gt;</operator><name pos:start="205:50" pos:end="205:53">refs</name></name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="207:5" pos:end="247:5">else if <condition pos:start="207:13" pos:end="207:23">(<expr pos:start="207:14" pos:end="207:22"><name pos:start="207:14" pos:end="207:22"><name pos:start="207:14" pos:end="207:15">x4</name><operator pos:start="207:16" pos:end="207:17">-&gt;</operator><name pos:start="207:18" pos:end="207:22">level</name></name></expr>)</condition> <block pos:start="207:25" pos:end="247:5">{<block_content pos:start="209:9" pos:end="245:122">

        <decl_stmt pos:start="209:9" pos:end="209:14"><decl pos:start="209:9" pos:end="209:13"><type pos:start="209:9" pos:end="209:11"><name pos:start="209:9" pos:end="209:11">int</name></type> <name pos:start="209:13" pos:end="209:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="211:9" pos:end="211:85"><decl pos:start="211:9" pos:end="211:84"><type pos:start="211:9" pos:end="211:11"><name pos:start="211:9" pos:end="211:11">int</name></type> <name pos:start="211:13" pos:end="211:15">mbn</name> <init pos:start="211:17" pos:end="211:84">= <expr pos:start="211:19" pos:end="211:84"><call pos:start="211:19" pos:end="211:49"><name pos:start="211:19" pos:end="211:32">FF_CEIL_RSHIFT</name><argument_list pos:start="211:33" pos:end="211:49">(<argument pos:start="211:34" pos:end="211:45"><expr pos:start="211:34" pos:end="211:45"><name pos:start="211:34" pos:end="211:45"><name pos:start="211:34" pos:end="211:38">avctx</name><operator pos:start="211:39" pos:end="211:40">-&gt;</operator><name pos:start="211:41" pos:end="211:45">width</name></name></expr></argument>, <argument pos:start="211:48" pos:end="211:48"><expr pos:start="211:48" pos:end="211:48"><literal type="number" pos:start="211:48" pos:end="211:48">4</literal></expr></argument>)</argument_list></call> <operator pos:start="211:51" pos:end="211:51">*</operator> <call pos:start="211:53" pos:end="211:84"><name pos:start="211:53" pos:end="211:66">FF_CEIL_RSHIFT</name><argument_list pos:start="211:67" pos:end="211:84">(<argument pos:start="211:68" pos:end="211:80"><expr pos:start="211:68" pos:end="211:80"><name pos:start="211:68" pos:end="211:80"><name pos:start="211:68" pos:end="211:72">avctx</name><operator pos:start="211:73" pos:end="211:74">-&gt;</operator><name pos:start="211:75" pos:end="211:80">height</name></name></expr></argument>, <argument pos:start="211:83" pos:end="211:83"><expr pos:start="211:83" pos:end="211:83"><literal type="number" pos:start="211:83" pos:end="211:83">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="213:9" pos:end="213:26"><decl pos:start="213:9" pos:end="213:25"><type pos:start="213:9" pos:end="213:11"><name pos:start="213:9" pos:end="213:11">int</name></type> <name pos:start="213:13" pos:end="213:20">level_id</name> <init pos:start="213:22" pos:end="213:25">= <expr pos:start="213:24" pos:end="213:25"><operator pos:start="213:24" pos:end="213:24">-</operator><literal type="number" pos:start="213:25" pos:end="213:25">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="215:9" pos:end="215:19"><decl pos:start="215:9" pos:end="215:18"><type pos:start="215:9" pos:end="215:14"><name pos:start="215:9" pos:end="215:12">char</name> <modifier pos:start="215:14" pos:end="215:14">*</modifier></type><name pos:start="215:15" pos:end="215:18">tail</name></decl>;</decl_stmt>

        <decl_stmt pos:start="217:9" pos:end="217:47"><decl pos:start="217:9" pos:end="217:46"><type pos:start="217:9" pos:end="217:11"><name pos:start="217:9" pos:end="217:11">int</name></type> <name pos:start="217:13" pos:end="217:17">scale</name> <init pos:start="217:19" pos:end="217:46">= <expr pos:start="217:21" pos:end="217:46"><ternary pos:start="217:21" pos:end="217:46"><condition pos:start="217:21" pos:end="217:38"><expr pos:start="217:21" pos:end="217:36"><name pos:start="217:21" pos:end="217:30">X264_BUILD</name> <operator pos:start="217:32" pos:end="217:32">&lt;</operator> <literal type="number" pos:start="217:34" pos:end="217:36">129</literal></expr> ?</condition><then pos:start="217:40" pos:end="217:42"> <expr pos:start="217:40" pos:end="217:42"><literal type="number" pos:start="217:40" pos:end="217:42">384</literal></expr> </then><else pos:start="217:44" pos:end="217:46">: <expr pos:start="217:46" pos:end="217:46"><literal type="number" pos:start="217:46" pos:end="217:46">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="221:9" pos:end="233:9"><if pos:start="221:9" pos:end="225:9">if <condition pos:start="221:12" pos:end="221:37">(<expr pos:start="221:13" pos:end="221:36"><operator pos:start="221:13" pos:end="221:13">!</operator><call pos:start="221:14" pos:end="221:36"><name pos:start="221:14" pos:end="221:19">strcmp</name><argument_list pos:start="221:20" pos:end="221:36">(<argument pos:start="221:21" pos:end="221:29"><expr pos:start="221:21" pos:end="221:29"><name pos:start="221:21" pos:end="221:29"><name pos:start="221:21" pos:end="221:22">x4</name><operator pos:start="221:23" pos:end="221:24">-&gt;</operator><name pos:start="221:25" pos:end="221:29">level</name></name></expr></argument>, <argument pos:start="221:32" pos:end="221:35"><expr pos:start="221:32" pos:end="221:35"><literal type="string" pos:start="221:32" pos:end="221:35">"1b"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="221:39" pos:end="225:9">{<block_content pos:start="223:13" pos:end="223:25">

            <expr_stmt pos:start="223:13" pos:end="223:25"><expr pos:start="223:13" pos:end="223:24"><name pos:start="223:13" pos:end="223:20">level_id</name> <operator pos:start="223:22" pos:end="223:22">=</operator> <literal type="number" pos:start="223:24" pos:end="223:24">9</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="225:11" pos:end="233:9">else if <condition pos:start="225:19" pos:end="225:42">(<expr pos:start="225:20" pos:end="225:41"><call pos:start="225:20" pos:end="225:36"><name pos:start="225:20" pos:end="225:25">strlen</name><argument_list pos:start="225:26" pos:end="225:36">(<argument pos:start="225:27" pos:end="225:35"><expr pos:start="225:27" pos:end="225:35"><name pos:start="225:27" pos:end="225:35"><name pos:start="225:27" pos:end="225:28">x4</name><operator pos:start="225:29" pos:end="225:30">-&gt;</operator><name pos:start="225:31" pos:end="225:35">level</name></name></expr></argument>)</argument_list></call> <operator pos:start="225:38" pos:end="225:39">&lt;=</operator> <literal type="number" pos:start="225:41" pos:end="225:41">3</literal></expr>)</condition><block pos:start="225:43" pos:end="233:9">{<block_content pos:start="227:13" pos:end="231:30">

            <expr_stmt pos:start="227:13" pos:end="227:62"><expr pos:start="227:13" pos:end="227:61"><name pos:start="227:13" pos:end="227:20">level_id</name> <operator pos:start="227:22" pos:end="227:22">=</operator> <call pos:start="227:24" pos:end="227:50"><name pos:start="227:24" pos:end="227:32">av_strtod</name><argument_list pos:start="227:33" pos:end="227:50">(<argument pos:start="227:34" pos:end="227:42"><expr pos:start="227:34" pos:end="227:42"><name pos:start="227:34" pos:end="227:42"><name pos:start="227:34" pos:end="227:35">x4</name><operator pos:start="227:36" pos:end="227:37">-&gt;</operator><name pos:start="227:38" pos:end="227:42">level</name></name></expr></argument>, <argument pos:start="227:45" pos:end="227:49"><expr pos:start="227:45" pos:end="227:49"><operator pos:start="227:45" pos:end="227:45">&amp;</operator><name pos:start="227:46" pos:end="227:49">tail</name></expr></argument>)</argument_list></call> <operator pos:start="227:52" pos:end="227:52">*</operator> <literal type="number" pos:start="227:54" pos:end="227:57">10</literal> <operator pos:start="227:57" pos:end="227:57">+</operator> <literal type="number" pos:start="227:59" pos:end="227:61">0.5</literal></expr>;</expr_stmt>

            <if_stmt pos:start="229:13" pos:end="231:30"><if pos:start="229:13" pos:end="231:30">if <condition pos:start="229:16" pos:end="229:22">(<expr pos:start="229:17" pos:end="229:21"><operator pos:start="229:17" pos:end="229:17">*</operator><name pos:start="229:18" pos:end="229:21">tail</name></expr>)</condition><block type="pseudo" pos:start="231:17" pos:end="231:30"><block_content pos:start="231:17" pos:end="231:30">

                <expr_stmt pos:start="231:17" pos:end="231:30"><expr pos:start="231:17" pos:end="231:29"><name pos:start="231:17" pos:end="231:24">level_id</name> <operator pos:start="231:26" pos:end="231:26">=</operator> <operator pos:start="231:28" pos:end="231:28">-</operator><literal type="number" pos:start="231:29" pos:end="231:29">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="235:9" pos:end="237:69"><if pos:start="235:9" pos:end="237:69">if <condition pos:start="235:12" pos:end="235:26">(<expr pos:start="235:13" pos:end="235:25"><name pos:start="235:13" pos:end="235:20">level_id</name> <operator pos:start="235:22" pos:end="235:23">&lt;=</operator> <literal type="number" pos:start="235:25" pos:end="235:25">0</literal></expr>)</condition><block type="pseudo" pos:start="237:13" pos:end="237:69"><block_content pos:start="237:13" pos:end="237:69">

            <expr_stmt pos:start="237:13" pos:end="237:69"><expr pos:start="237:13" pos:end="237:68"><call pos:start="237:13" pos:end="237:68"><name pos:start="237:13" pos:end="237:18">av_log</name><argument_list pos:start="237:19" pos:end="237:68">(<argument pos:start="237:20" pos:end="237:24"><expr pos:start="237:20" pos:end="237:24"><name pos:start="237:20" pos:end="237:24">avctx</name></expr></argument>, <argument pos:start="237:27" pos:end="237:40"><expr pos:start="237:27" pos:end="237:40"><name pos:start="237:27" pos:end="237:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="237:43" pos:end="237:67"><expr pos:start="237:43" pos:end="237:67"><literal type="string" pos:start="237:43" pos:end="237:67">"Failed to parse level\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="241:9" pos:end="245:122">for <control pos:start="241:13" pos:end="241:52">(<init pos:start="241:14" pos:end="241:19"><expr pos:start="241:14" pos:end="241:18"><name pos:start="241:14" pos:end="241:14">i</name> <operator pos:start="241:16" pos:end="241:16">=</operator> <literal type="number" pos:start="241:18" pos:end="241:18">0</literal></expr>;</init> <condition pos:start="241:21" pos:end="241:47"><expr pos:start="241:21" pos:end="241:46"><name pos:start="241:21" pos:end="241:21">i</name><operator pos:start="241:22" pos:end="241:22">&lt;</operator><name pos:start="241:23" pos:end="241:36"><name pos:start="241:23" pos:end="241:33">x264_levels</name><index pos:start="241:34" pos:end="241:36">[<expr pos:start="241:35" pos:end="241:35"><name pos:start="241:35" pos:end="241:35">i</name></expr>]</index></name><operator pos:start="241:37" pos:end="241:37">.</operator><name pos:start="241:38" pos:end="241:46">level_idc</name></expr>;</condition> <incr pos:start="241:49" pos:end="241:51"><expr pos:start="241:49" pos:end="241:51"><name pos:start="241:49" pos:end="241:49">i</name><operator pos:start="241:50" pos:end="241:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="243:13" pos:end="245:122"><block_content pos:start="243:13" pos:end="245:122">

            <if_stmt pos:start="243:13" pos:end="245:122"><if pos:start="243:13" pos:end="245:122">if <condition pos:start="243:16" pos:end="243:53">(<expr pos:start="243:17" pos:end="243:52"><name pos:start="243:17" pos:end="243:30"><name pos:start="243:17" pos:end="243:27">x264_levels</name><index pos:start="243:28" pos:end="243:30">[<expr pos:start="243:29" pos:end="243:29"><name pos:start="243:29" pos:end="243:29">i</name></expr>]</index></name><operator pos:start="243:31" pos:end="243:31">.</operator><name pos:start="243:32" pos:end="243:40">level_idc</name> <operator pos:start="243:42" pos:end="243:43">==</operator> <name pos:start="243:45" pos:end="243:52">level_id</name></expr>)</condition><block type="pseudo" pos:start="245:17" pos:end="245:122"><block_content pos:start="245:17" pos:end="245:122">

                <expr_stmt pos:start="245:17" pos:end="245:122"><expr pos:start="245:17" pos:end="245:121"><name pos:start="245:17" pos:end="245:44"><name pos:start="245:17" pos:end="245:18">x4</name><operator pos:start="245:19" pos:end="245:20">-&gt;</operator><name pos:start="245:21" pos:end="245:26">params</name><operator pos:start="245:27" pos:end="245:27">.</operator><name pos:start="245:28" pos:end="245:44">i_frame_reference</name></name> <operator pos:start="245:46" pos:end="245:46">=</operator> <call pos:start="245:48" pos:end="245:121"><name pos:start="245:48" pos:end="245:54">av_clip</name><argument_list pos:start="245:55" pos:end="245:121">(<argument pos:start="245:56" pos:end="245:87"><expr pos:start="245:56" pos:end="245:87"><name pos:start="245:56" pos:end="245:69"><name pos:start="245:56" pos:end="245:66">x264_levels</name><index pos:start="245:67" pos:end="245:69">[<expr pos:start="245:68" pos:end="245:68"><name pos:start="245:68" pos:end="245:68">i</name></expr>]</index></name><operator pos:start="245:70" pos:end="245:70">.</operator><name pos:start="245:71" pos:end="245:73">dpb</name> <operator pos:start="245:75" pos:end="245:75">/</operator> <name pos:start="245:77" pos:end="245:79">mbn</name> <operator pos:start="245:81" pos:end="245:81">/</operator> <name pos:start="245:83" pos:end="245:87">scale</name></expr></argument>, <argument pos:start="245:90" pos:end="245:90"><expr pos:start="245:90" pos:end="245:90"><literal type="number" pos:start="245:90" pos:end="245:90">1</literal></expr></argument>, <argument pos:start="245:93" pos:end="245:120"><expr pos:start="245:93" pos:end="245:120"><name pos:start="245:93" pos:end="245:120"><name pos:start="245:93" pos:end="245:94">x4</name><operator pos:start="245:95" pos:end="245:96">-&gt;</operator><name pos:start="245:97" pos:end="245:102">params</name><operator pos:start="245:103" pos:end="245:103">.</operator><name pos:start="245:104" pos:end="245:120">i_frame_reference</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="251:5" pos:end="253:57"><if pos:start="251:5" pos:end="253:57">if <condition pos:start="251:8" pos:end="251:28">(<expr pos:start="251:9" pos:end="251:27"><name pos:start="251:9" pos:end="251:22"><name pos:start="251:9" pos:end="251:13">avctx</name><operator pos:start="251:14" pos:end="251:15">-&gt;</operator><name pos:start="251:16" pos:end="251:22">trellis</name></name> <operator pos:start="251:24" pos:end="251:25">&gt;=</operator> <literal type="number" pos:start="251:27" pos:end="251:27">0</literal></expr>)</condition><block type="pseudo" pos:start="253:9" pos:end="253:57"><block_content pos:start="253:9" pos:end="253:57">

        <expr_stmt pos:start="253:9" pos:end="253:57"><expr pos:start="253:9" pos:end="253:56"><name pos:start="253:9" pos:end="253:36"><name pos:start="253:9" pos:end="253:10">x4</name><operator pos:start="253:11" pos:end="253:12">-&gt;</operator><name pos:start="253:13" pos:end="253:18">params</name><operator pos:start="253:19" pos:end="253:19">.</operator><name pos:start="253:20" pos:end="253:26">analyse</name><operator pos:start="253:27" pos:end="253:27">.</operator><name pos:start="253:28" pos:end="253:36">i_trellis</name></name>    <operator pos:start="253:41" pos:end="253:41">=</operator> <name pos:start="253:43" pos:end="253:56"><name pos:start="253:43" pos:end="253:47">avctx</name><operator pos:start="253:48" pos:end="253:49">-&gt;</operator><name pos:start="253:50" pos:end="253:56">trellis</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="255:5" pos:end="257:58"><if pos:start="255:5" pos:end="257:58">if <condition pos:start="255:8" pos:end="255:29">(<expr pos:start="255:9" pos:end="255:28"><name pos:start="255:9" pos:end="255:23"><name pos:start="255:9" pos:end="255:13">avctx</name><operator pos:start="255:14" pos:end="255:15">-&gt;</operator><name pos:start="255:16" pos:end="255:23">me_range</name></name> <operator pos:start="255:25" pos:end="255:26">&gt;=</operator> <literal type="number" pos:start="255:28" pos:end="255:28">0</literal></expr>)</condition><block type="pseudo" pos:start="257:9" pos:end="257:58"><block_content pos:start="257:9" pos:end="257:58">

        <expr_stmt pos:start="257:9" pos:end="257:58"><expr pos:start="257:9" pos:end="257:57"><name pos:start="257:9" pos:end="257:37"><name pos:start="257:9" pos:end="257:10">x4</name><operator pos:start="257:11" pos:end="257:12">-&gt;</operator><name pos:start="257:13" pos:end="257:18">params</name><operator pos:start="257:19" pos:end="257:19">.</operator><name pos:start="257:20" pos:end="257:26">analyse</name><operator pos:start="257:27" pos:end="257:27">.</operator><name pos:start="257:28" pos:end="257:37">i_me_range</name></name>   <operator pos:start="257:41" pos:end="257:41">=</operator> <name pos:start="257:43" pos:end="257:57"><name pos:start="257:43" pos:end="257:47">avctx</name><operator pos:start="257:48" pos:end="257:49">-&gt;</operator><name pos:start="257:50" pos:end="257:57">me_range</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="259:5" pos:end="261:70"><if pos:start="259:5" pos:end="261:70">if <condition pos:start="259:8" pos:end="259:36">(<expr pos:start="259:9" pos:end="259:35"><name pos:start="259:9" pos:end="259:30"><name pos:start="259:9" pos:end="259:13">avctx</name><operator pos:start="259:14" pos:end="259:15">-&gt;</operator><name pos:start="259:16" pos:end="259:30">noise_reduction</name></name> <operator pos:start="259:32" pos:end="259:33">&gt;=</operator> <literal type="number" pos:start="259:35" pos:end="259:35">0</literal></expr>)</condition><block type="pseudo" pos:start="261:9" pos:end="261:70"><block_content pos:start="261:9" pos:end="261:70">

        <expr_stmt pos:start="261:9" pos:end="261:70"><expr pos:start="261:9" pos:end="261:69"><name pos:start="261:9" pos:end="261:44"><name pos:start="261:9" pos:end="261:10">x4</name><operator pos:start="261:11" pos:end="261:12">-&gt;</operator><name pos:start="261:13" pos:end="261:18">params</name><operator pos:start="261:19" pos:end="261:19">.</operator><name pos:start="261:20" pos:end="261:26">analyse</name><operator pos:start="261:27" pos:end="261:27">.</operator><name pos:start="261:28" pos:end="261:44">i_noise_reduction</name></name> <operator pos:start="261:46" pos:end="261:46">=</operator> <name pos:start="261:48" pos:end="261:69"><name pos:start="261:48" pos:end="261:52">avctx</name><operator pos:start="261:53" pos:end="261:54">-&gt;</operator><name pos:start="261:55" pos:end="261:69">noise_reduction</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="263:5" pos:end="265:72"><if pos:start="263:5" pos:end="265:72">if <condition pos:start="263:8" pos:end="263:38">(<expr pos:start="263:9" pos:end="263:37"><name pos:start="263:9" pos:end="263:32"><name pos:start="263:9" pos:end="263:13">avctx</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:32">me_subpel_quality</name></name> <operator pos:start="263:34" pos:end="263:35">&gt;=</operator> <literal type="number" pos:start="263:37" pos:end="263:37">0</literal></expr>)</condition><block type="pseudo" pos:start="265:9" pos:end="265:72"><block_content pos:start="265:9" pos:end="265:72">

        <expr_stmt pos:start="265:9" pos:end="265:72"><expr pos:start="265:9" pos:end="265:71"><name pos:start="265:9" pos:end="265:42"><name pos:start="265:9" pos:end="265:10">x4</name><operator pos:start="265:11" pos:end="265:12">-&gt;</operator><name pos:start="265:13" pos:end="265:18">params</name><operator pos:start="265:19" pos:end="265:19">.</operator><name pos:start="265:20" pos:end="265:26">analyse</name><operator pos:start="265:27" pos:end="265:27">.</operator><name pos:start="265:28" pos:end="265:42">i_subpel_refine</name></name>   <operator pos:start="265:46" pos:end="265:46">=</operator> <name pos:start="265:48" pos:end="265:71"><name pos:start="265:48" pos:end="265:52">avctx</name><operator pos:start="265:53" pos:end="265:54">-&gt;</operator><name pos:start="265:55" pos:end="265:71">me_subpel_quality</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="267:5" pos:end="269:63"><if pos:start="267:5" pos:end="269:63">if <condition pos:start="267:8" pos:end="267:37">(<expr pos:start="267:9" pos:end="267:36"><name pos:start="267:9" pos:end="267:31"><name pos:start="267:9" pos:end="267:13">avctx</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:31">b_frame_strategy</name></name> <operator pos:start="267:33" pos:end="267:34">&gt;=</operator> <literal type="number" pos:start="267:36" pos:end="267:36">0</literal></expr>)</condition><block type="pseudo" pos:start="269:9" pos:end="269:63"><block_content pos:start="269:9" pos:end="269:63">

        <expr_stmt pos:start="269:9" pos:end="269:63"><expr pos:start="269:9" pos:end="269:62"><name pos:start="269:9" pos:end="269:36"><name pos:start="269:9" pos:end="269:10">x4</name><operator pos:start="269:11" pos:end="269:12">-&gt;</operator><name pos:start="269:13" pos:end="269:18">params</name><operator pos:start="269:19" pos:end="269:19">.</operator><name pos:start="269:20" pos:end="269:36">i_bframe_adaptive</name></name> <operator pos:start="269:38" pos:end="269:38">=</operator> <name pos:start="269:40" pos:end="269:62"><name pos:start="269:40" pos:end="269:44">avctx</name><operator pos:start="269:45" pos:end="269:46">-&gt;</operator><name pos:start="269:47" pos:end="269:62">b_frame_strategy</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="271:5" pos:end="273:52"><if pos:start="271:5" pos:end="273:52">if <condition pos:start="271:8" pos:end="271:31">(<expr pos:start="271:9" pos:end="271:30"><name pos:start="271:9" pos:end="271:25"><name pos:start="271:9" pos:end="271:13">avctx</name><operator pos:start="271:14" pos:end="271:15">-&gt;</operator><name pos:start="271:16" pos:end="271:25">keyint_min</name></name> <operator pos:start="271:27" pos:end="271:28">&gt;=</operator> <literal type="number" pos:start="271:30" pos:end="271:30">0</literal></expr>)</condition><block type="pseudo" pos:start="273:9" pos:end="273:52"><block_content pos:start="273:9" pos:end="273:52">

        <expr_stmt pos:start="273:9" pos:end="273:52"><expr pos:start="273:9" pos:end="273:51"><name pos:start="273:9" pos:end="273:31"><name pos:start="273:9" pos:end="273:10">x4</name><operator pos:start="273:11" pos:end="273:12">-&gt;</operator><name pos:start="273:13" pos:end="273:18">params</name><operator pos:start="273:19" pos:end="273:19">.</operator><name pos:start="273:20" pos:end="273:31">i_keyint_min</name></name> <operator pos:start="273:33" pos:end="273:33">=</operator> <name pos:start="273:35" pos:end="273:51"><name pos:start="273:35" pos:end="273:39">avctx</name><operator pos:start="273:40" pos:end="273:41">-&gt;</operator><name pos:start="273:42" pos:end="273:51">keyint_min</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="275:5" pos:end="277:67"><if pos:start="275:5" pos:end="277:67">if <condition pos:start="275:8" pos:end="275:31">(<expr pos:start="275:9" pos:end="275:30"><name pos:start="275:9" pos:end="275:25"><name pos:start="275:9" pos:end="275:13">avctx</name><operator pos:start="275:14" pos:end="275:15">-&gt;</operator><name pos:start="275:16" pos:end="275:25">coder_type</name></name> <operator pos:start="275:27" pos:end="275:28">&gt;=</operator> <literal type="number" pos:start="275:30" pos:end="275:30">0</literal></expr>)</condition><block type="pseudo" pos:start="277:9" pos:end="277:67"><block_content pos:start="277:9" pos:end="277:67">

        <expr_stmt pos:start="277:9" pos:end="277:67"><expr pos:start="277:9" pos:end="277:66"><name pos:start="277:9" pos:end="277:26"><name pos:start="277:9" pos:end="277:10">x4</name><operator pos:start="277:11" pos:end="277:12">-&gt;</operator><name pos:start="277:13" pos:end="277:18">params</name><operator pos:start="277:19" pos:end="277:19">.</operator><name pos:start="277:20" pos:end="277:26">b_cabac</name></name> <operator pos:start="277:28" pos:end="277:28">=</operator> <name pos:start="277:30" pos:end="277:46"><name pos:start="277:30" pos:end="277:34">avctx</name><operator pos:start="277:35" pos:end="277:36">-&gt;</operator><name pos:start="277:37" pos:end="277:46">coder_type</name></name> <operator pos:start="277:48" pos:end="277:49">==</operator> <name pos:start="277:51" pos:end="277:66">FF_CODER_TYPE_AC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="279:5" pos:end="281:71"><if pos:start="279:5" pos:end="281:71">if <condition pos:start="279:8" pos:end="279:27">(<expr pos:start="279:9" pos:end="279:26"><name pos:start="279:9" pos:end="279:21"><name pos:start="279:9" pos:end="279:13">avctx</name><operator pos:start="279:14" pos:end="279:15">-&gt;</operator><name pos:start="279:16" pos:end="279:21">me_cmp</name></name> <operator pos:start="279:23" pos:end="279:24">&gt;=</operator> <literal type="number" pos:start="279:26" pos:end="279:26">0</literal></expr>)</condition><block type="pseudo" pos:start="281:9" pos:end="281:71"><block_content pos:start="281:9" pos:end="281:71">

        <expr_stmt pos:start="281:9" pos:end="281:71"><expr pos:start="281:9" pos:end="281:70"><name pos:start="281:9" pos:end="281:38"><name pos:start="281:9" pos:end="281:10">x4</name><operator pos:start="281:11" pos:end="281:12">-&gt;</operator><name pos:start="281:13" pos:end="281:18">params</name><operator pos:start="281:19" pos:end="281:19">.</operator><name pos:start="281:20" pos:end="281:26">analyse</name><operator pos:start="281:27" pos:end="281:27">.</operator><name pos:start="281:28" pos:end="281:38">b_chroma_me</name></name> <operator pos:start="281:40" pos:end="281:40">=</operator> <name pos:start="281:42" pos:end="281:54"><name pos:start="281:42" pos:end="281:46">avctx</name><operator pos:start="281:47" pos:end="281:48">-&gt;</operator><name pos:start="281:49" pos:end="281:54">me_cmp</name></name> <operator pos:start="281:56" pos:end="281:56">&amp;</operator> <name pos:start="281:58" pos:end="281:70">FF_CMP_CHROMA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="285:5" pos:end="287:46"><if pos:start="285:5" pos:end="287:46">if <condition pos:start="285:8" pos:end="285:25">(<expr pos:start="285:9" pos:end="285:24"><name pos:start="285:9" pos:end="285:19"><name pos:start="285:9" pos:end="285:10">x4</name><operator pos:start="285:11" pos:end="285:12">-&gt;</operator><name pos:start="285:13" pos:end="285:19">aq_mode</name></name> <operator pos:start="285:21" pos:end="285:22">&gt;=</operator> <literal type="number" pos:start="285:24" pos:end="285:24">0</literal></expr>)</condition><block type="pseudo" pos:start="287:9" pos:end="287:46"><block_content pos:start="287:9" pos:end="287:46">

        <expr_stmt pos:start="287:9" pos:end="287:46"><expr pos:start="287:9" pos:end="287:45"><name pos:start="287:9" pos:end="287:31"><name pos:start="287:9" pos:end="287:10">x4</name><operator pos:start="287:11" pos:end="287:12">-&gt;</operator><name pos:start="287:13" pos:end="287:18">params</name><operator pos:start="287:19" pos:end="287:19">.</operator><name pos:start="287:20" pos:end="287:21">rc</name><operator pos:start="287:22" pos:end="287:22">.</operator><name pos:start="287:23" pos:end="287:31">i_aq_mode</name></name> <operator pos:start="287:33" pos:end="287:33">=</operator> <name pos:start="287:35" pos:end="287:45"><name pos:start="287:35" pos:end="287:36">x4</name><operator pos:start="287:37" pos:end="287:38">-&gt;</operator><name pos:start="287:39" pos:end="287:45">aq_mode</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="289:5" pos:end="291:54"><if pos:start="289:5" pos:end="291:54">if <condition pos:start="289:8" pos:end="289:29">(<expr pos:start="289:9" pos:end="289:28"><name pos:start="289:9" pos:end="289:23"><name pos:start="289:9" pos:end="289:10">x4</name><operator pos:start="289:11" pos:end="289:12">-&gt;</operator><name pos:start="289:13" pos:end="289:23">aq_strength</name></name> <operator pos:start="289:25" pos:end="289:26">&gt;=</operator> <literal type="number" pos:start="289:28" pos:end="289:28">0</literal></expr>)</condition><block type="pseudo" pos:start="291:9" pos:end="291:54"><block_content pos:start="291:9" pos:end="291:54">

        <expr_stmt pos:start="291:9" pos:end="291:54"><expr pos:start="291:9" pos:end="291:53"><name pos:start="291:9" pos:end="291:35"><name pos:start="291:9" pos:end="291:10">x4</name><operator pos:start="291:11" pos:end="291:12">-&gt;</operator><name pos:start="291:13" pos:end="291:18">params</name><operator pos:start="291:19" pos:end="291:19">.</operator><name pos:start="291:20" pos:end="291:21">rc</name><operator pos:start="291:22" pos:end="291:22">.</operator><name pos:start="291:23" pos:end="291:35">f_aq_strength</name></name> <operator pos:start="291:37" pos:end="291:37">=</operator> <name pos:start="291:39" pos:end="291:53"><name pos:start="291:39" pos:end="291:40">x4</name><operator pos:start="291:41" pos:end="291:42">-&gt;</operator><name pos:start="291:43" pos:end="291:53">aq_strength</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:37"><expr pos:start="293:5" pos:end="293:36"><call pos:start="293:5" pos:end="293:36"><name pos:start="293:5" pos:end="293:18">PARSE_X264_OPT</name><argument_list pos:start="293:19" pos:end="293:36">(<argument pos:start="293:20" pos:end="293:27"><expr pos:start="293:20" pos:end="293:27"><literal type="string" pos:start="293:20" pos:end="293:27">"psy-rd"</literal></expr></argument>, <argument pos:start="293:30" pos:end="293:35"><expr pos:start="293:30" pos:end="293:35"><name pos:start="293:30" pos:end="293:35">psy_rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="295:5" pos:end="295:39"><expr pos:start="295:5" pos:end="295:38"><call pos:start="295:5" pos:end="295:38"><name pos:start="295:5" pos:end="295:18">PARSE_X264_OPT</name><argument_list pos:start="295:19" pos:end="295:38">(<argument pos:start="295:20" pos:end="295:28"><expr pos:start="295:20" pos:end="295:28"><literal type="string" pos:start="295:20" pos:end="295:28">"deblock"</literal></expr></argument>, <argument pos:start="295:31" pos:end="295:37"><expr pos:start="295:31" pos:end="295:37"><name pos:start="295:31" pos:end="295:37">deblock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:45"><expr pos:start="297:5" pos:end="297:44"><call pos:start="297:5" pos:end="297:44"><name pos:start="297:5" pos:end="297:18">PARSE_X264_OPT</name><argument_list pos:start="297:19" pos:end="297:44">(<argument pos:start="297:20" pos:end="297:31"><expr pos:start="297:20" pos:end="297:31"><literal type="string" pos:start="297:20" pos:end="297:31">"partitions"</literal></expr></argument>, <argument pos:start="297:34" pos:end="297:43"><expr pos:start="297:34" pos:end="297:43"><name pos:start="297:34" pos:end="297:43">partitions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="299:5" pos:end="299:35"><expr pos:start="299:5" pos:end="299:34"><call pos:start="299:5" pos:end="299:34"><name pos:start="299:5" pos:end="299:18">PARSE_X264_OPT</name><argument_list pos:start="299:19" pos:end="299:34">(<argument pos:start="299:20" pos:end="299:26"><expr pos:start="299:20" pos:end="299:26"><literal type="string" pos:start="299:20" pos:end="299:26">"stats"</literal></expr></argument>, <argument pos:start="299:29" pos:end="299:33"><expr pos:start="299:29" pos:end="299:33"><name pos:start="299:29" pos:end="299:33">stats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="301:5" pos:end="303:44"><if pos:start="301:5" pos:end="303:44">if <condition pos:start="301:8" pos:end="301:21">(<expr pos:start="301:9" pos:end="301:20"><name pos:start="301:9" pos:end="301:15"><name pos:start="301:9" pos:end="301:10">x4</name><operator pos:start="301:11" pos:end="301:12">-&gt;</operator><name pos:start="301:13" pos:end="301:15">psy</name></name> <operator pos:start="301:17" pos:end="301:18">&gt;=</operator> <literal type="number" pos:start="301:20" pos:end="301:20">0</literal></expr>)</condition><block type="pseudo" pos:start="303:9" pos:end="303:44"><block_content pos:start="303:9" pos:end="303:44">

        <expr_stmt pos:start="303:9" pos:end="303:44"><expr pos:start="303:9" pos:end="303:43"><name pos:start="303:9" pos:end="303:32"><name pos:start="303:9" pos:end="303:10">x4</name><operator pos:start="303:11" pos:end="303:12">-&gt;</operator><name pos:start="303:13" pos:end="303:18">params</name><operator pos:start="303:19" pos:end="303:19">.</operator><name pos:start="303:20" pos:end="303:26">analyse</name><operator pos:start="303:27" pos:end="303:27">.</operator><name pos:start="303:28" pos:end="303:32">b_psy</name></name>  <operator pos:start="303:35" pos:end="303:35">=</operator> <name pos:start="303:37" pos:end="303:43"><name pos:start="303:37" pos:end="303:38">x4</name><operator pos:start="303:39" pos:end="303:40">-&gt;</operator><name pos:start="303:41" pos:end="303:43">psy</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="305:5" pos:end="307:53"><if pos:start="305:5" pos:end="307:53">if <condition pos:start="305:8" pos:end="305:30">(<expr pos:start="305:9" pos:end="305:29"><name pos:start="305:9" pos:end="305:24"><name pos:start="305:9" pos:end="305:10">x4</name><operator pos:start="305:11" pos:end="305:12">-&gt;</operator><name pos:start="305:13" pos:end="305:24">rc_lookahead</name></name> <operator pos:start="305:26" pos:end="305:27">&gt;=</operator> <literal type="number" pos:start="305:29" pos:end="305:29">0</literal></expr>)</condition><block type="pseudo" pos:start="307:9" pos:end="307:53"><block_content pos:start="307:9" pos:end="307:53">

        <expr_stmt pos:start="307:9" pos:end="307:53"><expr pos:start="307:9" pos:end="307:52"><name pos:start="307:9" pos:end="307:33"><name pos:start="307:9" pos:end="307:10">x4</name><operator pos:start="307:11" pos:end="307:12">-&gt;</operator><name pos:start="307:13" pos:end="307:18">params</name><operator pos:start="307:19" pos:end="307:19">.</operator><name pos:start="307:20" pos:end="307:21">rc</name><operator pos:start="307:22" pos:end="307:22">.</operator><name pos:start="307:23" pos:end="307:33">i_lookahead</name></name> <operator pos:start="307:35" pos:end="307:35">=</operator> <name pos:start="307:37" pos:end="307:52"><name pos:start="307:37" pos:end="307:38">x4</name><operator pos:start="307:39" pos:end="307:40">-&gt;</operator><name pos:start="307:41" pos:end="307:52">rc_lookahead</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="309:5" pos:end="311:57"><if pos:start="309:5" pos:end="311:57">if <condition pos:start="309:8" pos:end="309:25">(<expr pos:start="309:9" pos:end="309:24"><name pos:start="309:9" pos:end="309:19"><name pos:start="309:9" pos:end="309:10">x4</name><operator pos:start="309:11" pos:end="309:12">-&gt;</operator><name pos:start="309:13" pos:end="309:19">weightp</name></name> <operator pos:start="309:21" pos:end="309:22">&gt;=</operator> <literal type="number" pos:start="309:24" pos:end="309:24">0</literal></expr>)</condition><block type="pseudo" pos:start="311:9" pos:end="311:57"><block_content pos:start="311:9" pos:end="311:57">

        <expr_stmt pos:start="311:9" pos:end="311:57"><expr pos:start="311:9" pos:end="311:56"><name pos:start="311:9" pos:end="311:42"><name pos:start="311:9" pos:end="311:10">x4</name><operator pos:start="311:11" pos:end="311:12">-&gt;</operator><name pos:start="311:13" pos:end="311:18">params</name><operator pos:start="311:19" pos:end="311:19">.</operator><name pos:start="311:20" pos:end="311:26">analyse</name><operator pos:start="311:27" pos:end="311:27">.</operator><name pos:start="311:28" pos:end="311:42">i_weighted_pred</name></name> <operator pos:start="311:44" pos:end="311:44">=</operator> <name pos:start="311:46" pos:end="311:56"><name pos:start="311:46" pos:end="311:47">x4</name><operator pos:start="311:48" pos:end="311:49">-&gt;</operator><name pos:start="311:50" pos:end="311:56">weightp</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="313:5" pos:end="315:59"><if pos:start="313:5" pos:end="315:59">if <condition pos:start="313:8" pos:end="313:25">(<expr pos:start="313:9" pos:end="313:24"><name pos:start="313:9" pos:end="313:19"><name pos:start="313:9" pos:end="313:10">x4</name><operator pos:start="313:11" pos:end="313:12">-&gt;</operator><name pos:start="313:13" pos:end="313:19">weightb</name></name> <operator pos:start="313:21" pos:end="313:22">&gt;=</operator> <literal type="number" pos:start="313:24" pos:end="313:24">0</literal></expr>)</condition><block type="pseudo" pos:start="315:9" pos:end="315:59"><block_content pos:start="315:9" pos:end="315:59">

        <expr_stmt pos:start="315:9" pos:end="315:59"><expr pos:start="315:9" pos:end="315:58"><name pos:start="315:9" pos:end="315:44"><name pos:start="315:9" pos:end="315:10">x4</name><operator pos:start="315:11" pos:end="315:12">-&gt;</operator><name pos:start="315:13" pos:end="315:18">params</name><operator pos:start="315:19" pos:end="315:19">.</operator><name pos:start="315:20" pos:end="315:26">analyse</name><operator pos:start="315:27" pos:end="315:27">.</operator><name pos:start="315:28" pos:end="315:44">b_weighted_bipred</name></name> <operator pos:start="315:46" pos:end="315:46">=</operator> <name pos:start="315:48" pos:end="315:58"><name pos:start="315:48" pos:end="315:49">x4</name><operator pos:start="315:50" pos:end="315:51">-&gt;</operator><name pos:start="315:52" pos:end="315:58">weightb</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="317:5" pos:end="319:55"><if pos:start="317:5" pos:end="319:55">if <condition pos:start="317:8" pos:end="317:26">(<expr pos:start="317:9" pos:end="317:25"><name pos:start="317:9" pos:end="317:20"><name pos:start="317:9" pos:end="317:10">x4</name><operator pos:start="317:11" pos:end="317:12">-&gt;</operator><name pos:start="317:13" pos:end="317:20">cplxblur</name></name> <operator pos:start="317:22" pos:end="317:23">&gt;=</operator> <literal type="number" pos:start="317:25" pos:end="317:25">0</literal></expr>)</condition><block type="pseudo" pos:start="319:9" pos:end="319:55"><block_content pos:start="319:9" pos:end="319:55">

        <expr_stmt pos:start="319:9" pos:end="319:55"><expr pos:start="319:9" pos:end="319:54"><name pos:start="319:9" pos:end="319:39"><name pos:start="319:9" pos:end="319:10">x4</name><operator pos:start="319:11" pos:end="319:12">-&gt;</operator><name pos:start="319:13" pos:end="319:18">params</name><operator pos:start="319:19" pos:end="319:19">.</operator><name pos:start="319:20" pos:end="319:21">rc</name><operator pos:start="319:22" pos:end="319:22">.</operator><name pos:start="319:23" pos:end="319:39">f_complexity_blur</name></name> <operator pos:start="319:41" pos:end="319:41">=</operator> <name pos:start="319:43" pos:end="319:54"><name pos:start="319:43" pos:end="319:44">x4</name><operator pos:start="319:45" pos:end="319:46">-&gt;</operator><name pos:start="319:47" pos:end="319:54">cplxblur</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="323:5" pos:end="325:45"><if pos:start="323:5" pos:end="325:45">if <condition pos:start="323:8" pos:end="323:22">(<expr pos:start="323:9" pos:end="323:21"><name pos:start="323:9" pos:end="323:16"><name pos:start="323:9" pos:end="323:10">x4</name><operator pos:start="323:11" pos:end="323:12">-&gt;</operator><name pos:start="323:13" pos:end="323:16">ssim</name></name> <operator pos:start="323:18" pos:end="323:19">&gt;=</operator> <literal type="number" pos:start="323:21" pos:end="323:21">0</literal></expr>)</condition><block type="pseudo" pos:start="325:9" pos:end="325:45"><block_content pos:start="325:9" pos:end="325:45">

        <expr_stmt pos:start="325:9" pos:end="325:45"><expr pos:start="325:9" pos:end="325:44"><name pos:start="325:9" pos:end="325:33"><name pos:start="325:9" pos:end="325:10">x4</name><operator pos:start="325:11" pos:end="325:12">-&gt;</operator><name pos:start="325:13" pos:end="325:18">params</name><operator pos:start="325:19" pos:end="325:19">.</operator><name pos:start="325:20" pos:end="325:26">analyse</name><operator pos:start="325:27" pos:end="325:27">.</operator><name pos:start="325:28" pos:end="325:33">b_ssim</name></name> <operator pos:start="325:35" pos:end="325:35">=</operator> <name pos:start="325:37" pos:end="325:44"><name pos:start="325:37" pos:end="325:38">x4</name><operator pos:start="325:39" pos:end="325:40">-&gt;</operator><name pos:start="325:41" pos:end="325:44">ssim</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="327:5" pos:end="329:55"><if pos:start="327:5" pos:end="329:55">if <condition pos:start="327:8" pos:end="327:31">(<expr pos:start="327:9" pos:end="327:30"><name pos:start="327:9" pos:end="327:25"><name pos:start="327:9" pos:end="327:10">x4</name><operator pos:start="327:11" pos:end="327:12">-&gt;</operator><name pos:start="327:13" pos:end="327:25">intra_refresh</name></name> <operator pos:start="327:27" pos:end="327:28">&gt;=</operator> <literal type="number" pos:start="327:30" pos:end="327:30">0</literal></expr>)</condition><block type="pseudo" pos:start="329:9" pos:end="329:55"><block_content pos:start="329:9" pos:end="329:55">

        <expr_stmt pos:start="329:9" pos:end="329:55"><expr pos:start="329:9" pos:end="329:54"><name pos:start="329:9" pos:end="329:34"><name pos:start="329:9" pos:end="329:10">x4</name><operator pos:start="329:11" pos:end="329:12">-&gt;</operator><name pos:start="329:13" pos:end="329:18">params</name><operator pos:start="329:19" pos:end="329:19">.</operator><name pos:start="329:20" pos:end="329:34">b_intra_refresh</name></name> <operator pos:start="329:36" pos:end="329:36">=</operator> <name pos:start="329:38" pos:end="329:54"><name pos:start="329:38" pos:end="329:39">x4</name><operator pos:start="329:40" pos:end="329:41">-&gt;</operator><name pos:start="329:42" pos:end="329:54">intra_refresh</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="331:5" pos:end="337:5"><if pos:start="331:5" pos:end="337:5">if <condition pos:start="331:8" pos:end="331:31">(<expr pos:start="331:9" pos:end="331:30"><name pos:start="331:9" pos:end="331:25"><name pos:start="331:9" pos:end="331:10">x4</name><operator pos:start="331:11" pos:end="331:12">-&gt;</operator><name pos:start="331:13" pos:end="331:25">bluray_compat</name></name> <operator pos:start="331:27" pos:end="331:28">&gt;=</operator> <literal type="number" pos:start="331:30" pos:end="331:30">0</literal></expr>)</condition> <block pos:start="331:33" pos:end="337:5">{<block_content pos:start="333:9" pos:end="335:35">

        <expr_stmt pos:start="333:9" pos:end="333:55"><expr pos:start="333:9" pos:end="333:54"><name pos:start="333:9" pos:end="333:34"><name pos:start="333:9" pos:end="333:10">x4</name><operator pos:start="333:11" pos:end="333:12">-&gt;</operator><name pos:start="333:13" pos:end="333:18">params</name><operator pos:start="333:19" pos:end="333:19">.</operator><name pos:start="333:20" pos:end="333:34">b_bluray_compat</name></name> <operator pos:start="333:36" pos:end="333:36">=</operator> <name pos:start="333:38" pos:end="333:54"><name pos:start="333:38" pos:end="333:39">x4</name><operator pos:start="333:40" pos:end="333:41">-&gt;</operator><name pos:start="333:42" pos:end="333:54">bluray_compat</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="335:9" pos:end="335:35"><expr pos:start="335:9" pos:end="335:34"><name pos:start="335:9" pos:end="335:30"><name pos:start="335:9" pos:end="335:10">x4</name><operator pos:start="335:11" pos:end="335:12">-&gt;</operator><name pos:start="335:13" pos:end="335:18">params</name><operator pos:start="335:19" pos:end="335:19">.</operator><name pos:start="335:20" pos:end="335:30">b_vfr_input</name></name> <operator pos:start="335:32" pos:end="335:32">=</operator> <literal type="number" pos:start="335:34" pos:end="335:34">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="339:5" pos:end="346:0"><if pos:start="339:5" pos:end="346:0">if <condition pos:start="339:8" pos:end="342:0">(<expr pos:start="339:9" pos:end="339:31"><name pos:start="339:9" pos:end="339:26"><name pos:start="339:9" pos:end="339:10">x4</name><operator pos:start="339:11" pos:end="339:12">-&gt;</operator><name pos:start="339:13" pos:end="339:26">avcintra_class</name></name> <operator pos:start="339:28" pos:end="339:29">&gt;=</operator> <literal type="number" pos:start="339:31" pos:end="339:31">0</literal></expr>)</condition><block type="pseudo" pos:start="343:9" pos:end="346:0"><block_content pos:start="343:9" pos:end="346:0">

<cpp:if pos:start="341:1" pos:end="341:21">#<cpp:directive pos:start="341:2" pos:end="341:3">if</cpp:directive> <expr pos:start="341:5" pos:end="341:21"><name pos:start="341:5" pos:end="341:14">X264_BUILD</name> <operator pos:start="341:16" pos:end="341:17">&gt;=</operator> <literal type="number" pos:start="341:19" pos:end="341:21">142</literal></expr></cpp:if>

        <expr_stmt pos:start="343:9" pos:end="346:0"><expr pos:start="343:9" pos:end="343:56"><name pos:start="343:9" pos:end="343:35"><name pos:start="343:9" pos:end="343:10">x4</name><operator pos:start="343:11" pos:end="343:12">-&gt;</operator><name pos:start="343:13" pos:end="343:18">params</name><operator pos:start="343:19" pos:end="343:19">.</operator><name pos:start="343:20" pos:end="343:35">i_avcintra_class</name></name> <operator pos:start="343:37" pos:end="343:37">=</operator> <name pos:start="343:39" pos:end="343:56"><name pos:start="343:39" pos:end="343:40">x4</name><operator pos:start="343:41" pos:end="343:42">-&gt;</operator><name pos:start="343:43" pos:end="343:56">avcintra_class</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:else pos:start="345:1" pos:end="345:5">#<cpp:directive pos:start="345:2" pos:end="345:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="347:9" pos:end="352:0"><expr pos:start="347:9" pos:end="349:75"><call pos:start="347:9" pos:end="349:75"><name pos:start="347:9" pos:end="347:14">av_log</name><argument_list pos:start="347:15" pos:end="349:75">(<argument pos:start="347:16" pos:end="347:20"><expr pos:start="347:16" pos:end="347:20"><name pos:start="347:16" pos:end="347:20">avctx</name></expr></argument>, <argument pos:start="347:23" pos:end="347:34"><expr pos:start="347:23" pos:end="347:34"><name pos:start="347:23" pos:end="347:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="349:16" pos:end="349:74"><expr pos:start="349:16" pos:end="349:74"><literal type="string" pos:start="349:16" pos:end="349:74">"x264 too old for AVC Intra, at least version 142 needed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="351:1" pos:end="351:6">#<cpp:directive pos:start="351:2" pos:end="351:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="353:5" pos:end="355:59"><if pos:start="353:5" pos:end="355:59">if <condition pos:start="353:8" pos:end="353:30">(<expr pos:start="353:9" pos:end="353:29"><name pos:start="353:9" pos:end="353:18"><name pos:start="353:9" pos:end="353:10">x4</name><operator pos:start="353:11" pos:end="353:12">-&gt;</operator><name pos:start="353:13" pos:end="353:18">b_bias</name></name> <operator pos:start="353:20" pos:end="353:21">!=</operator> <name pos:start="353:23" pos:end="353:29">INT_MIN</name></expr>)</condition><block type="pseudo" pos:start="355:9" pos:end="355:59"><block_content pos:start="355:9" pos:end="355:59">

        <expr_stmt pos:start="355:9" pos:end="355:59"><expr pos:start="355:9" pos:end="355:58"><name pos:start="355:9" pos:end="355:32"><name pos:start="355:9" pos:end="355:10">x4</name><operator pos:start="355:11" pos:end="355:12">-&gt;</operator><name pos:start="355:13" pos:end="355:18">params</name><operator pos:start="355:19" pos:end="355:19">.</operator><name pos:start="355:20" pos:end="355:32">i_bframe_bias</name></name>              <operator pos:start="355:47" pos:end="355:47">=</operator> <name pos:start="355:49" pos:end="355:58"><name pos:start="355:49" pos:end="355:50">x4</name><operator pos:start="355:51" pos:end="355:52">-&gt;</operator><name pos:start="355:53" pos:end="355:58">b_bias</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="357:5" pos:end="359:52"><if pos:start="357:5" pos:end="359:52">if <condition pos:start="357:8" pos:end="357:27">(<expr pos:start="357:9" pos:end="357:26"><name pos:start="357:9" pos:end="357:21"><name pos:start="357:9" pos:end="357:10">x4</name><operator pos:start="357:11" pos:end="357:12">-&gt;</operator><name pos:start="357:13" pos:end="357:21">b_pyramid</name></name> <operator pos:start="357:23" pos:end="357:24">&gt;=</operator> <literal type="number" pos:start="357:26" pos:end="357:26">0</literal></expr>)</condition><block type="pseudo" pos:start="359:9" pos:end="359:52"><block_content pos:start="359:9" pos:end="359:52">

        <expr_stmt pos:start="359:9" pos:end="359:52"><expr pos:start="359:9" pos:end="359:51"><name pos:start="359:9" pos:end="359:35"><name pos:start="359:9" pos:end="359:10">x4</name><operator pos:start="359:11" pos:end="359:12">-&gt;</operator><name pos:start="359:13" pos:end="359:18">params</name><operator pos:start="359:19" pos:end="359:19">.</operator><name pos:start="359:20" pos:end="359:35">i_bframe_pyramid</name></name> <operator pos:start="359:37" pos:end="359:37">=</operator> <name pos:start="359:39" pos:end="359:51"><name pos:start="359:39" pos:end="359:40">x4</name><operator pos:start="359:41" pos:end="359:42">-&gt;</operator><name pos:start="359:43" pos:end="359:51">b_pyramid</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="361:5" pos:end="363:63"><if pos:start="361:5" pos:end="363:63">if <condition pos:start="361:8" pos:end="361:28">(<expr pos:start="361:9" pos:end="361:27"><name pos:start="361:9" pos:end="361:22"><name pos:start="361:9" pos:end="361:10">x4</name><operator pos:start="361:11" pos:end="361:12">-&gt;</operator><name pos:start="361:13" pos:end="361:22">mixed_refs</name></name> <operator pos:start="361:24" pos:end="361:25">&gt;=</operator> <literal type="number" pos:start="361:27" pos:end="361:27">0</literal></expr>)</condition><block type="pseudo" pos:start="363:9" pos:end="363:63"><block_content pos:start="363:9" pos:end="363:63">

        <expr_stmt pos:start="363:9" pos:end="363:63"><expr pos:start="363:9" pos:end="363:62"><name pos:start="363:9" pos:end="363:45"><name pos:start="363:9" pos:end="363:10">x4</name><operator pos:start="363:11" pos:end="363:12">-&gt;</operator><name pos:start="363:13" pos:end="363:18">params</name><operator pos:start="363:19" pos:end="363:19">.</operator><name pos:start="363:20" pos:end="363:26">analyse</name><operator pos:start="363:27" pos:end="363:27">.</operator><name pos:start="363:28" pos:end="363:45">b_mixed_references</name></name> <operator pos:start="363:47" pos:end="363:47">=</operator> <name pos:start="363:49" pos:end="363:62"><name pos:start="363:49" pos:end="363:50">x4</name><operator pos:start="363:51" pos:end="363:52">-&gt;</operator><name pos:start="363:53" pos:end="363:62">mixed_refs</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="365:5" pos:end="367:59"><if pos:start="365:5" pos:end="367:59">if <condition pos:start="365:8" pos:end="365:24">(<expr pos:start="365:9" pos:end="365:23"><name pos:start="365:9" pos:end="365:18"><name pos:start="365:9" pos:end="365:10">x4</name><operator pos:start="365:11" pos:end="365:12">-&gt;</operator><name pos:start="365:13" pos:end="365:18">dct8x8</name></name> <operator pos:start="365:20" pos:end="365:21">&gt;=</operator> <literal type="number" pos:start="365:23" pos:end="365:23">0</literal></expr>)</condition><block type="pseudo" pos:start="367:9" pos:end="367:59"><block_content pos:start="367:9" pos:end="367:59">

        <expr_stmt pos:start="367:9" pos:end="367:59"><expr pos:start="367:9" pos:end="367:58"><name pos:start="367:9" pos:end="367:42"><name pos:start="367:9" pos:end="367:10">x4</name><operator pos:start="367:11" pos:end="367:12">-&gt;</operator><name pos:start="367:13" pos:end="367:18">params</name><operator pos:start="367:19" pos:end="367:19">.</operator><name pos:start="367:20" pos:end="367:26">analyse</name><operator pos:start="367:27" pos:end="367:27">.</operator><name pos:start="367:28" pos:end="367:42">b_transform_8x8</name></name>    <operator pos:start="367:47" pos:end="367:47">=</operator> <name pos:start="367:49" pos:end="367:58"><name pos:start="367:49" pos:end="367:50">x4</name><operator pos:start="367:51" pos:end="367:52">-&gt;</operator><name pos:start="367:53" pos:end="367:58">dct8x8</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="369:5" pos:end="371:63"><if pos:start="369:5" pos:end="371:63">if <condition pos:start="369:8" pos:end="369:28">(<expr pos:start="369:9" pos:end="369:27"><name pos:start="369:9" pos:end="369:22"><name pos:start="369:9" pos:end="369:10">x4</name><operator pos:start="369:11" pos:end="369:12">-&gt;</operator><name pos:start="369:13" pos:end="369:22">fast_pskip</name></name> <operator pos:start="369:24" pos:end="369:25">&gt;=</operator> <literal type="number" pos:start="369:27" pos:end="369:27">0</literal></expr>)</condition><block type="pseudo" pos:start="371:9" pos:end="371:63"><block_content pos:start="371:9" pos:end="371:63">

        <expr_stmt pos:start="371:9" pos:end="371:63"><expr pos:start="371:9" pos:end="371:62"><name pos:start="371:9" pos:end="371:39"><name pos:start="371:9" pos:end="371:10">x4</name><operator pos:start="371:11" pos:end="371:12">-&gt;</operator><name pos:start="371:13" pos:end="371:18">params</name><operator pos:start="371:19" pos:end="371:19">.</operator><name pos:start="371:20" pos:end="371:26">analyse</name><operator pos:start="371:27" pos:end="371:27">.</operator><name pos:start="371:28" pos:end="371:39">b_fast_pskip</name></name>       <operator pos:start="371:47" pos:end="371:47">=</operator> <name pos:start="371:49" pos:end="371:62"><name pos:start="371:49" pos:end="371:50">x4</name><operator pos:start="371:51" pos:end="371:52">-&gt;</operator><name pos:start="371:53" pos:end="371:62">fast_pskip</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="373:5" pos:end="375:56"><if pos:start="373:5" pos:end="375:56">if <condition pos:start="373:8" pos:end="373:21">(<expr pos:start="373:9" pos:end="373:20"><name pos:start="373:9" pos:end="373:15"><name pos:start="373:9" pos:end="373:10">x4</name><operator pos:start="373:11" pos:end="373:12">-&gt;</operator><name pos:start="373:13" pos:end="373:15">aud</name></name> <operator pos:start="373:17" pos:end="373:18">&gt;=</operator> <literal type="number" pos:start="373:20" pos:end="373:20">0</literal></expr>)</condition><block type="pseudo" pos:start="375:9" pos:end="375:56"><block_content pos:start="375:9" pos:end="375:56">

        <expr_stmt pos:start="375:9" pos:end="375:56"><expr pos:start="375:9" pos:end="375:55"><name pos:start="375:9" pos:end="375:24"><name pos:start="375:9" pos:end="375:10">x4</name><operator pos:start="375:11" pos:end="375:12">-&gt;</operator><name pos:start="375:13" pos:end="375:18">params</name><operator pos:start="375:19" pos:end="375:19">.</operator><name pos:start="375:20" pos:end="375:24">b_aud</name></name>                      <operator pos:start="375:47" pos:end="375:47">=</operator> <name pos:start="375:49" pos:end="375:55"><name pos:start="375:49" pos:end="375:50">x4</name><operator pos:start="375:51" pos:end="375:52">-&gt;</operator><name pos:start="375:53" pos:end="375:55">aud</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="377:5" pos:end="379:59"><if pos:start="377:5" pos:end="379:59">if <condition pos:start="377:8" pos:end="377:24">(<expr pos:start="377:9" pos:end="377:23"><name pos:start="377:9" pos:end="377:18"><name pos:start="377:9" pos:end="377:10">x4</name><operator pos:start="377:11" pos:end="377:12">-&gt;</operator><name pos:start="377:13" pos:end="377:18">mbtree</name></name> <operator pos:start="377:20" pos:end="377:21">&gt;=</operator> <literal type="number" pos:start="377:23" pos:end="377:23">0</literal></expr>)</condition><block type="pseudo" pos:start="379:9" pos:end="379:59"><block_content pos:start="379:9" pos:end="379:59">

        <expr_stmt pos:start="379:9" pos:end="379:59"><expr pos:start="379:9" pos:end="379:58"><name pos:start="379:9" pos:end="379:31"><name pos:start="379:9" pos:end="379:10">x4</name><operator pos:start="379:11" pos:end="379:12">-&gt;</operator><name pos:start="379:13" pos:end="379:18">params</name><operator pos:start="379:19" pos:end="379:19">.</operator><name pos:start="379:20" pos:end="379:21">rc</name><operator pos:start="379:22" pos:end="379:22">.</operator><name pos:start="379:23" pos:end="379:31">b_mb_tree</name></name>               <operator pos:start="379:47" pos:end="379:47">=</operator> <name pos:start="379:49" pos:end="379:58"><name pos:start="379:49" pos:end="379:50">x4</name><operator pos:start="379:51" pos:end="379:52">-&gt;</operator><name pos:start="379:53" pos:end="379:58">mbtree</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="381:5" pos:end="383:64"><if pos:start="381:5" pos:end="383:64">if <condition pos:start="381:8" pos:end="381:29">(<expr pos:start="381:9" pos:end="381:28"><name pos:start="381:9" pos:end="381:23"><name pos:start="381:9" pos:end="381:10">x4</name><operator pos:start="381:11" pos:end="381:12">-&gt;</operator><name pos:start="381:13" pos:end="381:23">direct_pred</name></name> <operator pos:start="381:25" pos:end="381:26">&gt;=</operator> <literal type="number" pos:start="381:28" pos:end="381:28">0</literal></expr>)</condition><block type="pseudo" pos:start="383:9" pos:end="383:64"><block_content pos:start="383:9" pos:end="383:64">

        <expr_stmt pos:start="383:9" pos:end="383:64"><expr pos:start="383:9" pos:end="383:63"><name pos:start="383:9" pos:end="383:43"><name pos:start="383:9" pos:end="383:10">x4</name><operator pos:start="383:11" pos:end="383:12">-&gt;</operator><name pos:start="383:13" pos:end="383:18">params</name><operator pos:start="383:19" pos:end="383:19">.</operator><name pos:start="383:20" pos:end="383:26">analyse</name><operator pos:start="383:27" pos:end="383:27">.</operator><name pos:start="383:28" pos:end="383:43">i_direct_mv_pred</name></name>   <operator pos:start="383:47" pos:end="383:47">=</operator> <name pos:start="383:49" pos:end="383:63"><name pos:start="383:49" pos:end="383:50">x4</name><operator pos:start="383:51" pos:end="383:52">-&gt;</operator><name pos:start="383:53" pos:end="383:63">direct_pred</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="387:5" pos:end="409:5"><if pos:start="387:5" pos:end="389:58">if <condition pos:start="387:8" pos:end="387:32">(<expr pos:start="387:9" pos:end="387:31"><name pos:start="387:9" pos:end="387:26"><name pos:start="387:9" pos:end="387:10">x4</name><operator pos:start="387:11" pos:end="387:12">-&gt;</operator><name pos:start="387:13" pos:end="387:26">slice_max_size</name></name> <operator pos:start="387:28" pos:end="387:29">&gt;=</operator> <literal type="number" pos:start="387:31" pos:end="387:31">0</literal></expr>)</condition><block type="pseudo" pos:start="389:9" pos:end="389:58"><block_content pos:start="389:9" pos:end="389:58">

        <expr_stmt pos:start="389:9" pos:end="389:58"><expr pos:start="389:9" pos:end="389:57"><name pos:start="389:9" pos:end="389:35"><name pos:start="389:9" pos:end="389:10">x4</name><operator pos:start="389:11" pos:end="389:12">-&gt;</operator><name pos:start="389:13" pos:end="389:18">params</name><operator pos:start="389:19" pos:end="389:19">.</operator><name pos:start="389:20" pos:end="389:35">i_slice_max_size</name></name> <operator pos:start="389:37" pos:end="389:37">=</operator>  <name pos:start="389:40" pos:end="389:57"><name pos:start="389:40" pos:end="389:41">x4</name><operator pos:start="389:42" pos:end="389:43">-&gt;</operator><name pos:start="389:44" pos:end="389:57">slice_max_size</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="391:5" pos:end="409:5">else <block pos:start="391:10" pos:end="409:5">{<block_content pos:start="405:9" pos:end="407:66">

        <comment type="block" pos:start="393:9" pos:end="403:11">/*

         * Allow x264 to be instructed through AVCodecContext about the maximum

         * size of the RTP payload. For example, this enables the production of

         * payload suitable for the H.264 RTP packetization-mode 0 i.e. single

         * NAL unit per RTP packet.

         */</comment>

        <if_stmt pos:start="405:9" pos:end="407:66"><if pos:start="405:9" pos:end="407:66">if <condition pos:start="405:12" pos:end="405:36">(<expr pos:start="405:13" pos:end="405:35"><name pos:start="405:13" pos:end="405:35"><name pos:start="405:13" pos:end="405:17">avctx</name><operator pos:start="405:18" pos:end="405:19">-&gt;</operator><name pos:start="405:20" pos:end="405:35">rtp_payload_size</name></name></expr>)</condition><block type="pseudo" pos:start="407:13" pos:end="407:66"><block_content pos:start="407:13" pos:end="407:66">

            <expr_stmt pos:start="407:13" pos:end="407:66"><expr pos:start="407:13" pos:end="407:65"><name pos:start="407:13" pos:end="407:39"><name pos:start="407:13" pos:end="407:14">x4</name><operator pos:start="407:15" pos:end="407:16">-&gt;</operator><name pos:start="407:17" pos:end="407:22">params</name><operator pos:start="407:23" pos:end="407:23">.</operator><name pos:start="407:24" pos:end="407:39">i_slice_max_size</name></name> <operator pos:start="407:41" pos:end="407:41">=</operator> <name pos:start="407:43" pos:end="407:65"><name pos:start="407:43" pos:end="407:47">avctx</name><operator pos:start="407:48" pos:end="407:49">-&gt;</operator><name pos:start="407:50" pos:end="407:65">rtp_payload_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="413:5" pos:end="415:52"><if pos:start="413:5" pos:end="415:52">if <condition pos:start="413:8" pos:end="413:26">(<expr pos:start="413:9" pos:end="413:25"><name pos:start="413:9" pos:end="413:25"><name pos:start="413:9" pos:end="413:10">x4</name><operator pos:start="413:11" pos:end="413:12">-&gt;</operator><name pos:start="413:13" pos:end="413:25">fastfirstpass</name></name></expr>)</condition><block type="pseudo" pos:start="415:9" pos:end="415:52"><block_content pos:start="415:9" pos:end="415:52">

        <expr_stmt pos:start="415:9" pos:end="415:52"><expr pos:start="415:9" pos:end="415:51"><call pos:start="415:9" pos:end="415:51"><name pos:start="415:9" pos:end="415:38">x264_param_apply_fastfirstpass</name><argument_list pos:start="415:39" pos:end="415:51">(<argument pos:start="415:40" pos:end="415:50"><expr pos:start="415:40" pos:end="415:50"><operator pos:start="415:40" pos:end="415:40">&amp;</operator><name pos:start="415:41" pos:end="415:50"><name pos:start="415:41" pos:end="415:42">x4</name><operator pos:start="415:43" pos:end="415:44">-&gt;</operator><name pos:start="415:45" pos:end="415:50">params</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="419:5" pos:end="419:67">/* Allow specifying the x264 profile through AVCodecContext. */</comment>

    <if_stmt pos:start="421:5" pos:end="465:9"><if pos:start="421:5" pos:end="465:9">if <condition pos:start="421:8" pos:end="421:21">(<expr pos:start="421:9" pos:end="421:20"><operator pos:start="421:9" pos:end="421:9">!</operator><name pos:start="421:10" pos:end="421:20"><name pos:start="421:10" pos:end="421:11">x4</name><operator pos:start="421:12" pos:end="421:13">-&gt;</operator><name pos:start="421:14" pos:end="421:20">profile</name></name></expr>)</condition><block type="pseudo" pos:start="423:9" pos:end="465:9"><block_content pos:start="423:9" pos:end="465:9">

        <switch pos:start="423:9" pos:end="465:9">switch <condition pos:start="423:16" pos:end="423:31">(<expr pos:start="423:17" pos:end="423:30"><name pos:start="423:17" pos:end="423:30"><name pos:start="423:17" pos:end="423:21">avctx</name><operator pos:start="423:22" pos:end="423:23">-&gt;</operator><name pos:start="423:24" pos:end="423:30">profile</name></name></expr>)</condition> <block pos:start="423:33" pos:end="465:9">{<block_content pos:start="425:9" pos:end="463:18">

        <case pos:start="425:9" pos:end="425:38">case <expr pos:start="425:14" pos:end="425:37"><name pos:start="425:14" pos:end="425:37">FF_PROFILE_H264_BASELINE</name></expr>:</case>

            <expr_stmt pos:start="427:13" pos:end="427:48"><expr pos:start="427:13" pos:end="427:47"><name pos:start="427:13" pos:end="427:23"><name pos:start="427:13" pos:end="427:14">x4</name><operator pos:start="427:15" pos:end="427:16">-&gt;</operator><name pos:start="427:17" pos:end="427:23">profile</name></name> <operator pos:start="427:25" pos:end="427:25">=</operator> <call pos:start="427:27" pos:end="427:47"><name pos:start="427:27" pos:end="427:35">av_strdup</name><argument_list pos:start="427:36" pos:end="427:47">(<argument pos:start="427:37" pos:end="427:46"><expr pos:start="427:37" pos:end="427:46"><literal type="string" pos:start="427:37" pos:end="427:46">"baseline"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="429:13" pos:end="429:18">break;</break>

        <case pos:start="431:9" pos:end="431:34">case <expr pos:start="431:14" pos:end="431:33"><name pos:start="431:14" pos:end="431:33">FF_PROFILE_H264_HIGH</name></expr>:</case>

            <expr_stmt pos:start="433:13" pos:end="433:44"><expr pos:start="433:13" pos:end="433:43"><name pos:start="433:13" pos:end="433:23"><name pos:start="433:13" pos:end="433:14">x4</name><operator pos:start="433:15" pos:end="433:16">-&gt;</operator><name pos:start="433:17" pos:end="433:23">profile</name></name> <operator pos:start="433:25" pos:end="433:25">=</operator> <call pos:start="433:27" pos:end="433:43"><name pos:start="433:27" pos:end="433:35">av_strdup</name><argument_list pos:start="433:36" pos:end="433:43">(<argument pos:start="433:37" pos:end="433:42"><expr pos:start="433:37" pos:end="433:42"><literal type="string" pos:start="433:37" pos:end="433:42">"high"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="435:13" pos:end="435:18">break;</break>

        <case pos:start="437:9" pos:end="437:37">case <expr pos:start="437:14" pos:end="437:36"><name pos:start="437:14" pos:end="437:36">FF_PROFILE_H264_HIGH_10</name></expr>:</case>

            <expr_stmt pos:start="439:13" pos:end="439:46"><expr pos:start="439:13" pos:end="439:45"><name pos:start="439:13" pos:end="439:23"><name pos:start="439:13" pos:end="439:14">x4</name><operator pos:start="439:15" pos:end="439:16">-&gt;</operator><name pos:start="439:17" pos:end="439:23">profile</name></name> <operator pos:start="439:25" pos:end="439:25">=</operator> <call pos:start="439:27" pos:end="439:45"><name pos:start="439:27" pos:end="439:35">av_strdup</name><argument_list pos:start="439:36" pos:end="439:45">(<argument pos:start="439:37" pos:end="439:44"><expr pos:start="439:37" pos:end="439:44"><literal type="string" pos:start="439:37" pos:end="439:44">"high10"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="441:13" pos:end="441:18">break;</break>

        <case pos:start="443:9" pos:end="443:38">case <expr pos:start="443:14" pos:end="443:37"><name pos:start="443:14" pos:end="443:37">FF_PROFILE_H264_HIGH_422</name></expr>:</case>

            <expr_stmt pos:start="445:13" pos:end="445:47"><expr pos:start="445:13" pos:end="445:46"><name pos:start="445:13" pos:end="445:23"><name pos:start="445:13" pos:end="445:14">x4</name><operator pos:start="445:15" pos:end="445:16">-&gt;</operator><name pos:start="445:17" pos:end="445:23">profile</name></name> <operator pos:start="445:25" pos:end="445:25">=</operator> <call pos:start="445:27" pos:end="445:46"><name pos:start="445:27" pos:end="445:35">av_strdup</name><argument_list pos:start="445:36" pos:end="445:46">(<argument pos:start="445:37" pos:end="445:45"><expr pos:start="445:37" pos:end="445:45"><literal type="string" pos:start="445:37" pos:end="445:45">"high422"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="447:13" pos:end="447:18">break;</break>

        <case pos:start="449:9" pos:end="449:38">case <expr pos:start="449:14" pos:end="449:37"><name pos:start="449:14" pos:end="449:37">FF_PROFILE_H264_HIGH_444</name></expr>:</case>

            <expr_stmt pos:start="451:13" pos:end="451:47"><expr pos:start="451:13" pos:end="451:46"><name pos:start="451:13" pos:end="451:23"><name pos:start="451:13" pos:end="451:14">x4</name><operator pos:start="451:15" pos:end="451:16">-&gt;</operator><name pos:start="451:17" pos:end="451:23">profile</name></name> <operator pos:start="451:25" pos:end="451:25">=</operator> <call pos:start="451:27" pos:end="451:46"><name pos:start="451:27" pos:end="451:35">av_strdup</name><argument_list pos:start="451:36" pos:end="451:46">(<argument pos:start="451:37" pos:end="451:45"><expr pos:start="451:37" pos:end="451:45"><literal type="string" pos:start="451:37" pos:end="451:45">"high444"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="453:13" pos:end="453:18">break;</break>

        <case pos:start="455:9" pos:end="455:34">case <expr pos:start="455:14" pos:end="455:33"><name pos:start="455:14" pos:end="455:33">FF_PROFILE_H264_MAIN</name></expr>:</case>

            <expr_stmt pos:start="457:13" pos:end="457:44"><expr pos:start="457:13" pos:end="457:43"><name pos:start="457:13" pos:end="457:23"><name pos:start="457:13" pos:end="457:14">x4</name><operator pos:start="457:15" pos:end="457:16">-&gt;</operator><name pos:start="457:17" pos:end="457:23">profile</name></name> <operator pos:start="457:25" pos:end="457:25">=</operator> <call pos:start="457:27" pos:end="457:43"><name pos:start="457:27" pos:end="457:35">av_strdup</name><argument_list pos:start="457:36" pos:end="457:43">(<argument pos:start="457:37" pos:end="457:42"><expr pos:start="457:37" pos:end="457:42"><literal type="string" pos:start="457:37" pos:end="457:42">"main"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="459:13" pos:end="459:18">break;</break>

        <default pos:start="461:9" pos:end="461:16">default:</default>

            <break pos:start="463:13" pos:end="463:18">break;</break>

        </block_content>}</block></switch></block_content></block></if></if_stmt>



    <if_stmt pos:start="469:5" pos:end="471:43"><if pos:start="469:5" pos:end="471:43">if <condition pos:start="469:8" pos:end="469:25">(<expr pos:start="469:9" pos:end="469:24"><name pos:start="469:9" pos:end="469:19"><name pos:start="469:9" pos:end="469:10">x4</name><operator pos:start="469:11" pos:end="469:12">-&gt;</operator><name pos:start="469:13" pos:end="469:19">nal_hrd</name></name> <operator pos:start="469:21" pos:end="469:22">&gt;=</operator> <literal type="number" pos:start="469:24" pos:end="469:24">0</literal></expr>)</condition><block type="pseudo" pos:start="471:9" pos:end="471:43"><block_content pos:start="471:9" pos:end="471:43">

        <expr_stmt pos:start="471:9" pos:end="471:43"><expr pos:start="471:9" pos:end="471:42"><name pos:start="471:9" pos:end="471:28"><name pos:start="471:9" pos:end="471:10">x4</name><operator pos:start="471:11" pos:end="471:12">-&gt;</operator><name pos:start="471:13" pos:end="471:18">params</name><operator pos:start="471:19" pos:end="471:19">.</operator><name pos:start="471:20" pos:end="471:28">i_nal_hrd</name></name> <operator pos:start="471:30" pos:end="471:30">=</operator> <name pos:start="471:32" pos:end="471:42"><name pos:start="471:32" pos:end="471:33">x4</name><operator pos:start="471:34" pos:end="471:35">-&gt;</operator><name pos:start="471:36" pos:end="471:42">nal_hrd</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="475:5" pos:end="493:9"><if pos:start="475:5" pos:end="493:9">if <condition pos:start="475:8" pos:end="475:20">(<expr pos:start="475:9" pos:end="475:19"><name pos:start="475:9" pos:end="475:19"><name pos:start="475:9" pos:end="475:10">x4</name><operator pos:start="475:11" pos:end="475:12">-&gt;</operator><name pos:start="475:13" pos:end="475:19">profile</name></name></expr>)</condition><block type="pseudo" pos:start="477:9" pos:end="493:9"><block_content pos:start="477:9" pos:end="493:9">

        <if_stmt pos:start="477:9" pos:end="493:9"><if pos:start="477:9" pos:end="493:9">if <condition pos:start="477:12" pos:end="477:67">(<expr pos:start="477:13" pos:end="477:66"><call pos:start="477:13" pos:end="477:62"><name pos:start="477:13" pos:end="477:36">x264_param_apply_profile</name><argument_list pos:start="477:37" pos:end="477:62">(<argument pos:start="477:38" pos:end="477:48"><expr pos:start="477:38" pos:end="477:48"><operator pos:start="477:38" pos:end="477:38">&amp;</operator><name pos:start="477:39" pos:end="477:48"><name pos:start="477:39" pos:end="477:40">x4</name><operator pos:start="477:41" pos:end="477:42">-&gt;</operator><name pos:start="477:43" pos:end="477:48">params</name></name></expr></argument>, <argument pos:start="477:51" pos:end="477:61"><expr pos:start="477:51" pos:end="477:61"><name pos:start="477:51" pos:end="477:61"><name pos:start="477:51" pos:end="477:52">x4</name><operator pos:start="477:53" pos:end="477:54">-&gt;</operator><name pos:start="477:55" pos:end="477:61">profile</name></name></expr></argument>)</argument_list></call> <operator pos:start="477:64" pos:end="477:64">&lt;</operator> <literal type="number" pos:start="477:66" pos:end="477:66">0</literal></expr>)</condition> <block pos:start="477:69" pos:end="493:9">{<block_content pos:start="479:13" pos:end="491:35">

            <decl_stmt pos:start="479:13" pos:end="479:18"><decl pos:start="479:13" pos:end="479:17"><type pos:start="479:13" pos:end="479:15"><name pos:start="479:13" pos:end="479:15">int</name></type> <name pos:start="479:17" pos:end="479:17">i</name></decl>;</decl_stmt>

            <expr_stmt pos:start="481:13" pos:end="481:84"><expr pos:start="481:13" pos:end="481:83"><call pos:start="481:13" pos:end="481:83"><name pos:start="481:13" pos:end="481:18">av_log</name><argument_list pos:start="481:19" pos:end="481:83">(<argument pos:start="481:20" pos:end="481:24"><expr pos:start="481:20" pos:end="481:24"><name pos:start="481:20" pos:end="481:24">avctx</name></expr></argument>, <argument pos:start="481:27" pos:end="481:38"><expr pos:start="481:27" pos:end="481:38"><name pos:start="481:27" pos:end="481:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="481:41" pos:end="481:69"><expr pos:start="481:41" pos:end="481:69"><literal type="string" pos:start="481:41" pos:end="481:69">"Error setting profile %s.\n"</literal></expr></argument>, <argument pos:start="481:72" pos:end="481:82"><expr pos:start="481:72" pos:end="481:82"><name pos:start="481:72" pos:end="481:82"><name pos:start="481:72" pos:end="481:73">x4</name><operator pos:start="481:74" pos:end="481:75">-&gt;</operator><name pos:start="481:76" pos:end="481:82">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="483:13" pos:end="483:61"><expr pos:start="483:13" pos:end="483:60"><call pos:start="483:13" pos:end="483:60"><name pos:start="483:13" pos:end="483:18">av_log</name><argument_list pos:start="483:19" pos:end="483:60">(<argument pos:start="483:20" pos:end="483:24"><expr pos:start="483:20" pos:end="483:24"><name pos:start="483:20" pos:end="483:24">avctx</name></expr></argument>, <argument pos:start="483:27" pos:end="483:37"><expr pos:start="483:27" pos:end="483:37"><name pos:start="483:27" pos:end="483:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="483:40" pos:end="483:59"><expr pos:start="483:40" pos:end="483:59"><literal type="string" pos:start="483:40" pos:end="483:59">"Possible profiles:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="485:13" pos:end="487:73">for <control pos:start="485:17" pos:end="485:51">(<init pos:start="485:18" pos:end="485:23"><expr pos:start="485:18" pos:end="485:22"><name pos:start="485:18" pos:end="485:18">i</name> <operator pos:start="485:20" pos:end="485:20">=</operator> <literal type="number" pos:start="485:22" pos:end="485:22">0</literal></expr>;</init> <condition pos:start="485:25" pos:end="485:46"><expr pos:start="485:25" pos:end="485:45"><name pos:start="485:25" pos:end="485:45"><name pos:start="485:25" pos:end="485:42">x264_profile_names</name><index pos:start="485:43" pos:end="485:45">[<expr pos:start="485:44" pos:end="485:44"><name pos:start="485:44" pos:end="485:44">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="485:48" pos:end="485:50"><expr pos:start="485:48" pos:end="485:50"><name pos:start="485:48" pos:end="485:48">i</name><operator pos:start="485:49" pos:end="485:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="487:17" pos:end="487:73"><block_content pos:start="487:17" pos:end="487:73">

                <expr_stmt pos:start="487:17" pos:end="487:73"><expr pos:start="487:17" pos:end="487:72"><call pos:start="487:17" pos:end="487:72"><name pos:start="487:17" pos:end="487:22">av_log</name><argument_list pos:start="487:23" pos:end="487:72">(<argument pos:start="487:24" pos:end="487:28"><expr pos:start="487:24" pos:end="487:28"><name pos:start="487:24" pos:end="487:28">avctx</name></expr></argument>, <argument pos:start="487:31" pos:end="487:41"><expr pos:start="487:31" pos:end="487:41"><name pos:start="487:31" pos:end="487:41">AV_LOG_INFO</name></expr></argument>, <argument pos:start="487:44" pos:end="487:48"><expr pos:start="487:44" pos:end="487:48"><literal type="string" pos:start="487:44" pos:end="487:48">" %s"</literal></expr></argument>, <argument pos:start="487:51" pos:end="487:71"><expr pos:start="487:51" pos:end="487:71"><name pos:start="487:51" pos:end="487:71"><name pos:start="487:51" pos:end="487:68">x264_profile_names</name><index pos:start="487:69" pos:end="487:71">[<expr pos:start="487:70" pos:end="487:70"><name pos:start="487:70" pos:end="487:70">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="489:13" pos:end="489:45"><expr pos:start="489:13" pos:end="489:44"><call pos:start="489:13" pos:end="489:44"><name pos:start="489:13" pos:end="489:18">av_log</name><argument_list pos:start="489:19" pos:end="489:44">(<argument pos:start="489:20" pos:end="489:24"><expr pos:start="489:20" pos:end="489:24"><name pos:start="489:20" pos:end="489:24">avctx</name></expr></argument>, <argument pos:start="489:27" pos:end="489:37"><expr pos:start="489:27" pos:end="489:37"><name pos:start="489:27" pos:end="489:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="489:40" pos:end="489:43"><expr pos:start="489:40" pos:end="489:43"><literal type="string" pos:start="489:40" pos:end="489:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="491:13" pos:end="491:35">return <expr pos:start="491:20" pos:end="491:34"><call pos:start="491:20" pos:end="491:34"><name pos:start="491:20" pos:end="491:26">AVERROR</name><argument_list pos:start="491:27" pos:end="491:34">(<argument pos:start="491:28" pos:end="491:33"><expr pos:start="491:28" pos:end="491:33"><name pos:start="491:28" pos:end="491:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="497:5" pos:end="497:47"><expr pos:start="497:5" pos:end="497:46"><name pos:start="497:5" pos:end="497:22"><name pos:start="497:5" pos:end="497:6">x4</name><operator pos:start="497:7" pos:end="497:8">-&gt;</operator><name pos:start="497:9" pos:end="497:14">params</name><operator pos:start="497:15" pos:end="497:15">.</operator><name pos:start="497:16" pos:end="497:22">i_width</name></name>          <operator pos:start="497:33" pos:end="497:33">=</operator> <name pos:start="497:35" pos:end="497:46"><name pos:start="497:35" pos:end="497:39">avctx</name><operator pos:start="497:40" pos:end="497:41">-&gt;</operator><name pos:start="497:42" pos:end="497:46">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="499:5" pos:end="499:48"><expr pos:start="499:5" pos:end="499:47"><name pos:start="499:5" pos:end="499:23"><name pos:start="499:5" pos:end="499:6">x4</name><operator pos:start="499:7" pos:end="499:8">-&gt;</operator><name pos:start="499:9" pos:end="499:14">params</name><operator pos:start="499:15" pos:end="499:15">.</operator><name pos:start="499:16" pos:end="499:23">i_height</name></name>         <operator pos:start="499:33" pos:end="499:33">=</operator> <name pos:start="499:35" pos:end="499:47"><name pos:start="499:35" pos:end="499:39">avctx</name><operator pos:start="499:40" pos:end="499:41">-&gt;</operator><name pos:start="499:42" pos:end="499:47">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="501:5" pos:end="501:94"><expr pos:start="501:5" pos:end="501:93"><call pos:start="501:5" pos:end="501:93"><name pos:start="501:5" pos:end="501:13">av_reduce</name><argument_list pos:start="501:14" pos:end="501:93">(<argument pos:start="501:15" pos:end="501:17"><expr pos:start="501:15" pos:end="501:17"><operator pos:start="501:15" pos:end="501:15">&amp;</operator><name pos:start="501:16" pos:end="501:17">sw</name></expr></argument>, <argument pos:start="501:20" pos:end="501:22"><expr pos:start="501:20" pos:end="501:22"><operator pos:start="501:20" pos:end="501:20">&amp;</operator><name pos:start="501:21" pos:end="501:22">sh</name></expr></argument>, <argument pos:start="501:25" pos:end="501:54"><expr pos:start="501:25" pos:end="501:54"><name pos:start="501:25" pos:end="501:54"><name pos:start="501:25" pos:end="501:29">avctx</name><operator pos:start="501:30" pos:end="501:31">-&gt;</operator><name pos:start="501:32" pos:end="501:50">sample_aspect_ratio</name><operator pos:start="501:51" pos:end="501:51">.</operator><name pos:start="501:52" pos:end="501:54">num</name></name></expr></argument>, <argument pos:start="501:57" pos:end="501:86"><expr pos:start="501:57" pos:end="501:86"><name pos:start="501:57" pos:end="501:86"><name pos:start="501:57" pos:end="501:61">avctx</name><operator pos:start="501:62" pos:end="501:63">-&gt;</operator><name pos:start="501:64" pos:end="501:82">sample_aspect_ratio</name><operator pos:start="501:83" pos:end="501:83">.</operator><name pos:start="501:84" pos:end="501:86">den</name></name></expr></argument>, <argument pos:start="501:89" pos:end="501:92"><expr pos:start="501:89" pos:end="501:92"><literal type="number" pos:start="501:89" pos:end="501:92">4096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="503:5" pos:end="503:37"><expr pos:start="503:5" pos:end="503:36"><name pos:start="503:5" pos:end="503:30"><name pos:start="503:5" pos:end="503:6">x4</name><operator pos:start="503:7" pos:end="503:8">-&gt;</operator><name pos:start="503:9" pos:end="503:14">params</name><operator pos:start="503:15" pos:end="503:15">.</operator><name pos:start="503:16" pos:end="503:18">vui</name><operator pos:start="503:19" pos:end="503:19">.</operator><name pos:start="503:20" pos:end="503:30">i_sar_width</name></name>  <operator pos:start="503:33" pos:end="503:33">=</operator> <name pos:start="503:35" pos:end="503:36">sw</name></expr>;</expr_stmt>

    <expr_stmt pos:start="505:5" pos:end="505:37"><expr pos:start="505:5" pos:end="505:36"><name pos:start="505:5" pos:end="505:31"><name pos:start="505:5" pos:end="505:6">x4</name><operator pos:start="505:7" pos:end="505:8">-&gt;</operator><name pos:start="505:9" pos:end="505:14">params</name><operator pos:start="505:15" pos:end="505:15">.</operator><name pos:start="505:16" pos:end="505:18">vui</name><operator pos:start="505:19" pos:end="505:19">.</operator><name pos:start="505:20" pos:end="505:31">i_sar_height</name></name> <operator pos:start="505:33" pos:end="505:33">=</operator> <name pos:start="505:35" pos:end="505:36">sh</name></expr>;</expr_stmt>

    <expr_stmt pos:start="507:5" pos:end="507:53"><expr pos:start="507:5" pos:end="507:52"><name pos:start="507:5" pos:end="507:29"><name pos:start="507:5" pos:end="507:6">x4</name><operator pos:start="507:7" pos:end="507:8">-&gt;</operator><name pos:start="507:9" pos:end="507:14">params</name><operator pos:start="507:15" pos:end="507:15">.</operator><name pos:start="507:16" pos:end="507:29">i_timebase_den</name></name> <operator pos:start="507:31" pos:end="507:31">=</operator> <name pos:start="507:33" pos:end="507:52"><name pos:start="507:33" pos:end="507:37">avctx</name><operator pos:start="507:38" pos:end="507:39">-&gt;</operator><name pos:start="507:40" pos:end="507:48">time_base</name><operator pos:start="507:49" pos:end="507:49">.</operator><name pos:start="507:50" pos:end="507:52">den</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="509:5" pos:end="509:53"><expr pos:start="509:5" pos:end="509:52"><name pos:start="509:5" pos:end="509:29"><name pos:start="509:5" pos:end="509:6">x4</name><operator pos:start="509:7" pos:end="509:8">-&gt;</operator><name pos:start="509:9" pos:end="509:14">params</name><operator pos:start="509:15" pos:end="509:15">.</operator><name pos:start="509:16" pos:end="509:29">i_timebase_num</name></name> <operator pos:start="509:31" pos:end="509:31">=</operator> <name pos:start="509:33" pos:end="509:52"><name pos:start="509:33" pos:end="509:37">avctx</name><operator pos:start="509:38" pos:end="509:39">-&gt;</operator><name pos:start="509:40" pos:end="509:48">time_base</name><operator pos:start="509:49" pos:end="509:49">.</operator><name pos:start="509:50" pos:end="509:52">num</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="511:5" pos:end="511:48"><expr pos:start="511:5" pos:end="511:47"><name pos:start="511:5" pos:end="511:24"><name pos:start="511:5" pos:end="511:6">x4</name><operator pos:start="511:7" pos:end="511:8">-&gt;</operator><name pos:start="511:9" pos:end="511:14">params</name><operator pos:start="511:15" pos:end="511:15">.</operator><name pos:start="511:16" pos:end="511:24">i_fps_num</name></name> <operator pos:start="511:26" pos:end="511:26">=</operator> <name pos:start="511:28" pos:end="511:47"><name pos:start="511:28" pos:end="511:32">avctx</name><operator pos:start="511:33" pos:end="511:34">-&gt;</operator><name pos:start="511:35" pos:end="511:43">time_base</name><operator pos:start="511:44" pos:end="511:44">.</operator><name pos:start="511:45" pos:end="511:47">den</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="513:5" pos:end="513:73"><expr pos:start="513:5" pos:end="513:72"><name pos:start="513:5" pos:end="513:24"><name pos:start="513:5" pos:end="513:6">x4</name><operator pos:start="513:7" pos:end="513:8">-&gt;</operator><name pos:start="513:9" pos:end="513:14">params</name><operator pos:start="513:15" pos:end="513:15">.</operator><name pos:start="513:16" pos:end="513:24">i_fps_den</name></name> <operator pos:start="513:26" pos:end="513:26">=</operator> <name pos:start="513:28" pos:end="513:47"><name pos:start="513:28" pos:end="513:32">avctx</name><operator pos:start="513:33" pos:end="513:34">-&gt;</operator><name pos:start="513:35" pos:end="513:43">time_base</name><operator pos:start="513:44" pos:end="513:44">.</operator><name pos:start="513:45" pos:end="513:47">num</name></name> <operator pos:start="513:49" pos:end="513:49">*</operator> <name pos:start="513:51" pos:end="513:72"><name pos:start="513:51" pos:end="513:55">avctx</name><operator pos:start="513:56" pos:end="513:57">-&gt;</operator><name pos:start="513:58" pos:end="513:72">ticks_per_frame</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="517:5" pos:end="517:63"><expr pos:start="517:5" pos:end="517:62"><name pos:start="517:5" pos:end="517:29"><name pos:start="517:5" pos:end="517:6">x4</name><operator pos:start="517:7" pos:end="517:8">-&gt;</operator><name pos:start="517:9" pos:end="517:14">params</name><operator pos:start="517:15" pos:end="517:15">.</operator><name pos:start="517:16" pos:end="517:22">analyse</name><operator pos:start="517:23" pos:end="517:23">.</operator><name pos:start="517:24" pos:end="517:29">b_psnr</name></name> <operator pos:start="517:31" pos:end="517:31">=</operator> <name pos:start="517:33" pos:end="517:44"><name pos:start="517:33" pos:end="517:37">avctx</name><operator pos:start="517:38" pos:end="517:39">-&gt;</operator><name pos:start="517:40" pos:end="517:44">flags</name></name> <operator pos:start="517:46" pos:end="517:46">&amp;</operator> <name pos:start="517:48" pos:end="517:62">CODEC_FLAG_PSNR</name></expr>;</expr_stmt>



    <expr_stmt pos:start="521:5" pos:end="521:52"><expr pos:start="521:5" pos:end="521:51"><name pos:start="521:5" pos:end="521:24"><name pos:start="521:5" pos:end="521:6">x4</name><operator pos:start="521:7" pos:end="521:8">-&gt;</operator><name pos:start="521:9" pos:end="521:14">params</name><operator pos:start="521:15" pos:end="521:15">.</operator><name pos:start="521:16" pos:end="521:24">i_threads</name></name>      <operator pos:start="521:31" pos:end="521:31">=</operator> <name pos:start="521:33" pos:end="521:51"><name pos:start="521:33" pos:end="521:37">avctx</name><operator pos:start="521:38" pos:end="521:39">-&gt;</operator><name pos:start="521:40" pos:end="521:51">thread_count</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="523:5" pos:end="525:76"><if pos:start="523:5" pos:end="525:76">if <condition pos:start="523:8" pos:end="523:27">(<expr pos:start="523:9" pos:end="523:26"><name pos:start="523:9" pos:end="523:26"><name pos:start="523:9" pos:end="523:13">avctx</name><operator pos:start="523:14" pos:end="523:15">-&gt;</operator><name pos:start="523:16" pos:end="523:26">thread_type</name></name></expr>)</condition><block type="pseudo" pos:start="525:9" pos:end="525:76"><block_content pos:start="525:9" pos:end="525:76">

        <expr_stmt pos:start="525:9" pos:end="525:76"><expr pos:start="525:9" pos:end="525:75"><name pos:start="525:9" pos:end="525:35"><name pos:start="525:9" pos:end="525:10">x4</name><operator pos:start="525:11" pos:end="525:12">-&gt;</operator><name pos:start="525:13" pos:end="525:18">params</name><operator pos:start="525:19" pos:end="525:19">.</operator><name pos:start="525:20" pos:end="525:35">b_sliced_threads</name></name> <operator pos:start="525:37" pos:end="525:37">=</operator> <name pos:start="525:39" pos:end="525:56"><name pos:start="525:39" pos:end="525:43">avctx</name><operator pos:start="525:44" pos:end="525:45">-&gt;</operator><name pos:start="525:46" pos:end="525:56">thread_type</name></name> <operator pos:start="525:58" pos:end="525:59">==</operator> <name pos:start="525:61" pos:end="525:75">FF_THREAD_SLICE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="529:5" pos:end="529:73"><expr pos:start="529:5" pos:end="529:72"><name pos:start="529:5" pos:end="529:27"><name pos:start="529:5" pos:end="529:6">x4</name><operator pos:start="529:7" pos:end="529:8">-&gt;</operator><name pos:start="529:9" pos:end="529:14">params</name><operator pos:start="529:15" pos:end="529:15">.</operator><name pos:start="529:16" pos:end="529:27">b_interlaced</name></name>   <operator pos:start="529:31" pos:end="529:31">=</operator> <name pos:start="529:33" pos:end="529:44"><name pos:start="529:33" pos:end="529:37">avctx</name><operator pos:start="529:38" pos:end="529:39">-&gt;</operator><name pos:start="529:40" pos:end="529:44">flags</name></name> <operator pos:start="529:46" pos:end="529:46">&amp;</operator> <name pos:start="529:48" pos:end="529:72">CODEC_FLAG_INTERLACED_DCT</name></expr>;</expr_stmt>



    <expr_stmt pos:start="533:5" pos:end="533:72"><expr pos:start="533:5" pos:end="533:71"><name pos:start="533:5" pos:end="533:25"><name pos:start="533:5" pos:end="533:6">x4</name><operator pos:start="533:7" pos:end="533:8">-&gt;</operator><name pos:start="533:9" pos:end="533:14">params</name><operator pos:start="533:15" pos:end="533:15">.</operator><name pos:start="533:16" pos:end="533:25">b_open_gop</name></name>     <operator pos:start="533:31" pos:end="533:31">=</operator> <operator pos:start="533:33" pos:end="533:33">!</operator><operator pos:start="533:34" pos:end="533:34">(</operator><name pos:start="533:35" pos:end="533:46"><name pos:start="533:35" pos:end="533:39">avctx</name><operator pos:start="533:40" pos:end="533:41">-&gt;</operator><name pos:start="533:42" pos:end="533:46">flags</name></name> <operator pos:start="533:48" pos:end="533:48">&amp;</operator> <name pos:start="533:50" pos:end="533:70">CODEC_FLAG_CLOSED_GOP</name><operator pos:start="533:71" pos:end="533:71">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="537:5" pos:end="537:46"><expr pos:start="537:5" pos:end="537:45"><name pos:start="537:5" pos:end="537:28"><name pos:start="537:5" pos:end="537:6">x4</name><operator pos:start="537:7" pos:end="537:8">-&gt;</operator><name pos:start="537:9" pos:end="537:14">params</name><operator pos:start="537:15" pos:end="537:15">.</operator><name pos:start="537:16" pos:end="537:28">i_slice_count</name></name>  <operator pos:start="537:31" pos:end="537:31">=</operator> <name pos:start="537:33" pos:end="537:45"><name pos:start="537:33" pos:end="537:37">avctx</name><operator pos:start="537:38" pos:end="537:39">-&gt;</operator><name pos:start="537:40" pos:end="537:45">slices</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="541:5" pos:end="547:72"><expr pos:start="541:5" pos:end="547:71"><name pos:start="541:5" pos:end="541:30"><name pos:start="541:5" pos:end="541:6">x4</name><operator pos:start="541:7" pos:end="541:8">-&gt;</operator><name pos:start="541:9" pos:end="541:14">params</name><operator pos:start="541:15" pos:end="541:15">.</operator><name pos:start="541:16" pos:end="541:18">vui</name><operator pos:start="541:19" pos:end="541:19">.</operator><name pos:start="541:20" pos:end="541:30">b_fullrange</name></name> <operator pos:start="541:32" pos:end="541:32">=</operator> <name pos:start="541:34" pos:end="541:47"><name pos:start="541:34" pos:end="541:38">avctx</name><operator pos:start="541:39" pos:end="541:40">-&gt;</operator><name pos:start="541:41" pos:end="541:47">pix_fmt</name></name> <operator pos:start="541:49" pos:end="541:50">==</operator> <name pos:start="541:52" pos:end="541:70">AV_PIX_FMT_YUVJ420P</name> <operator pos:start="541:72" pos:end="541:73">||</operator>

                                 <name pos:start="543:34" pos:end="543:47"><name pos:start="543:34" pos:end="543:38">avctx</name><operator pos:start="543:39" pos:end="543:40">-&gt;</operator><name pos:start="543:41" pos:end="543:47">pix_fmt</name></name> <operator pos:start="543:49" pos:end="543:50">==</operator> <name pos:start="543:52" pos:end="543:70">AV_PIX_FMT_YUVJ422P</name> <operator pos:start="543:72" pos:end="543:73">||</operator>

                                 <name pos:start="545:34" pos:end="545:47"><name pos:start="545:34" pos:end="545:38">avctx</name><operator pos:start="545:39" pos:end="545:40">-&gt;</operator><name pos:start="545:41" pos:end="545:47">pix_fmt</name></name> <operator pos:start="545:49" pos:end="545:50">==</operator> <name pos:start="545:52" pos:end="545:70">AV_PIX_FMT_YUVJ444P</name> <operator pos:start="545:72" pos:end="545:73">||</operator>

                                 <name pos:start="547:34" pos:end="547:51"><name pos:start="547:34" pos:end="547:38">avctx</name><operator pos:start="547:39" pos:end="547:40">-&gt;</operator><name pos:start="547:41" pos:end="547:51">color_range</name></name> <operator pos:start="547:53" pos:end="547:54">==</operator> <name pos:start="547:56" pos:end="547:71">AVCOL_RANGE_JPEG</name></expr>;</expr_stmt>



    <if_stmt pos:start="551:5" pos:end="553:55"><if pos:start="551:5" pos:end="553:55">if <condition pos:start="551:8" pos:end="551:51">(<expr pos:start="551:9" pos:end="551:50"><name pos:start="551:9" pos:end="551:25"><name pos:start="551:9" pos:end="551:13">avctx</name><operator pos:start="551:14" pos:end="551:15">-&gt;</operator><name pos:start="551:16" pos:end="551:25">colorspace</name></name> <operator pos:start="551:27" pos:end="551:28">!=</operator> <name pos:start="551:30" pos:end="551:50">AVCOL_SPC_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="553:9" pos:end="553:55"><block_content pos:start="553:9" pos:end="553:55">

        <expr_stmt pos:start="553:9" pos:end="553:55"><expr pos:start="553:9" pos:end="553:54"><name pos:start="553:9" pos:end="553:34"><name pos:start="553:9" pos:end="553:10">x4</name><operator pos:start="553:11" pos:end="553:12">-&gt;</operator><name pos:start="553:13" pos:end="553:18">params</name><operator pos:start="553:19" pos:end="553:19">.</operator><name pos:start="553:20" pos:end="553:22">vui</name><operator pos:start="553:23" pos:end="553:23">.</operator><name pos:start="553:24" pos:end="553:34">i_colmatrix</name></name> <operator pos:start="553:36" pos:end="553:36">=</operator> <name pos:start="553:38" pos:end="553:54"><name pos:start="553:38" pos:end="553:42">avctx</name><operator pos:start="553:43" pos:end="553:44">-&gt;</operator><name pos:start="553:45" pos:end="553:54">colorspace</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="555:5" pos:end="557:60"><if pos:start="555:5" pos:end="557:60">if <condition pos:start="555:8" pos:end="555:56">(<expr pos:start="555:9" pos:end="555:55"><name pos:start="555:9" pos:end="555:30"><name pos:start="555:9" pos:end="555:13">avctx</name><operator pos:start="555:14" pos:end="555:15">-&gt;</operator><name pos:start="555:16" pos:end="555:30">color_primaries</name></name> <operator pos:start="555:32" pos:end="555:33">!=</operator> <name pos:start="555:35" pos:end="555:55">AVCOL_PRI_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="557:9" pos:end="557:60"><block_content pos:start="557:9" pos:end="557:60">

        <expr_stmt pos:start="557:9" pos:end="557:60"><expr pos:start="557:9" pos:end="557:59"><name pos:start="557:9" pos:end="557:34"><name pos:start="557:9" pos:end="557:10">x4</name><operator pos:start="557:11" pos:end="557:12">-&gt;</operator><name pos:start="557:13" pos:end="557:18">params</name><operator pos:start="557:19" pos:end="557:19">.</operator><name pos:start="557:20" pos:end="557:22">vui</name><operator pos:start="557:23" pos:end="557:23">.</operator><name pos:start="557:24" pos:end="557:34">i_colorprim</name></name> <operator pos:start="557:36" pos:end="557:36">=</operator> <name pos:start="557:38" pos:end="557:59"><name pos:start="557:38" pos:end="557:42">avctx</name><operator pos:start="557:43" pos:end="557:44">-&gt;</operator><name pos:start="557:45" pos:end="557:59">color_primaries</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="559:5" pos:end="561:54"><if pos:start="559:5" pos:end="561:54">if <condition pos:start="559:8" pos:end="559:50">(<expr pos:start="559:9" pos:end="559:49"><name pos:start="559:9" pos:end="559:24"><name pos:start="559:9" pos:end="559:13">avctx</name><operator pos:start="559:14" pos:end="559:15">-&gt;</operator><name pos:start="559:16" pos:end="559:24">color_trc</name></name> <operator pos:start="559:26" pos:end="559:27">!=</operator> <name pos:start="559:29" pos:end="559:49">AVCOL_TRC_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="561:9" pos:end="561:54"><block_content pos:start="561:9" pos:end="561:54">

        <expr_stmt pos:start="561:9" pos:end="561:54"><expr pos:start="561:9" pos:end="561:53"><name pos:start="561:9" pos:end="561:33"><name pos:start="561:9" pos:end="561:10">x4</name><operator pos:start="561:11" pos:end="561:12">-&gt;</operator><name pos:start="561:13" pos:end="561:18">params</name><operator pos:start="561:19" pos:end="561:19">.</operator><name pos:start="561:20" pos:end="561:22">vui</name><operator pos:start="561:23" pos:end="561:23">.</operator><name pos:start="561:24" pos:end="561:33">i_transfer</name></name>  <operator pos:start="561:36" pos:end="561:36">=</operator> <name pos:start="561:38" pos:end="561:53"><name pos:start="561:38" pos:end="561:42">avctx</name><operator pos:start="561:43" pos:end="561:44">-&gt;</operator><name pos:start="561:45" pos:end="561:53">color_trc</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="565:5" pos:end="567:40"><if pos:start="565:5" pos:end="567:40">if <condition pos:start="565:8" pos:end="565:48">(<expr pos:start="565:9" pos:end="565:47"><name pos:start="565:9" pos:end="565:20"><name pos:start="565:9" pos:end="565:13">avctx</name><operator pos:start="565:14" pos:end="565:15">-&gt;</operator><name pos:start="565:16" pos:end="565:20">flags</name></name> <operator pos:start="565:22" pos:end="565:22">&amp;</operator> <name pos:start="565:24" pos:end="565:47">CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition><block type="pseudo" pos:start="567:9" pos:end="567:40"><block_content pos:start="567:9" pos:end="567:40">

        <expr_stmt pos:start="567:9" pos:end="567:40"><expr pos:start="567:9" pos:end="567:39"><name pos:start="567:9" pos:end="567:35"><name pos:start="567:9" pos:end="567:10">x4</name><operator pos:start="567:11" pos:end="567:12">-&gt;</operator><name pos:start="567:13" pos:end="567:18">params</name><operator pos:start="567:19" pos:end="567:19">.</operator><name pos:start="567:20" pos:end="567:35">b_repeat_headers</name></name> <operator pos:start="567:37" pos:end="567:37">=</operator> <literal type="number" pos:start="567:39" pos:end="567:39">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="571:5" pos:end="593:5"><if pos:start="571:5" pos:end="593:5">if<condition pos:start="571:7" pos:end="571:20">(<expr pos:start="571:8" pos:end="571:19"><name pos:start="571:8" pos:end="571:19"><name pos:start="571:8" pos:end="571:9">x4</name><operator pos:start="571:10" pos:end="571:11">-&gt;</operator><name pos:start="571:12" pos:end="571:19">x264opts</name></name></expr>)</condition><block pos:start="571:21" pos:end="593:5">{<block_content pos:start="573:9" pos:end="591:9">

        <decl_stmt pos:start="573:9" pos:end="573:36"><decl pos:start="573:9" pos:end="573:35"><type pos:start="573:9" pos:end="573:20"><specifier pos:start="573:9" pos:end="573:13">const</specifier> <name pos:start="573:15" pos:end="573:18">char</name> <modifier pos:start="573:20" pos:end="573:20">*</modifier></type><name pos:start="573:21" pos:end="573:21">p</name><init pos:start="573:22" pos:end="573:35">= <expr pos:start="573:24" pos:end="573:35"><name pos:start="573:24" pos:end="573:35"><name pos:start="573:24" pos:end="573:25">x4</name><operator pos:start="573:26" pos:end="573:27">-&gt;</operator><name pos:start="573:28" pos:end="573:35">x264opts</name></name></expr></init></decl>;</decl_stmt>

        <while pos:start="575:9" pos:end="591:9">while<condition pos:start="575:14" pos:end="575:16">(<expr pos:start="575:15" pos:end="575:15"><name pos:start="575:15" pos:end="575:15">p</name></expr>)</condition><block pos:start="575:17" pos:end="591:9">{<block_content pos:start="577:13" pos:end="589:19">

            <decl_stmt pos:start="577:13" pos:end="577:46"><decl pos:start="577:13" pos:end="577:31"><type pos:start="577:13" pos:end="577:16"><name pos:start="577:13" pos:end="577:16">char</name></type> <name pos:start="577:18" pos:end="577:27"><name pos:start="577:18" pos:end="577:22">param</name><index pos:start="577:23" pos:end="577:27">[<expr pos:start="577:24" pos:end="577:26"><literal type="number" pos:start="577:24" pos:end="577:26">256</literal></expr>]</index></name><init pos:start="577:28" pos:end="577:31">=<expr pos:start="577:29" pos:end="577:31"><block pos:start="577:29" pos:end="577:31">{<expr pos:start="577:30" pos:end="577:30"><literal type="number" pos:start="577:30" pos:end="577:30">0</literal></expr>}</block></expr></init></decl>, <decl pos:start="577:34" pos:end="577:45"><type ref="prev" pos:start="577:13" pos:end="577:16"/><name pos:start="577:34" pos:end="577:41"><name pos:start="577:34" pos:end="577:36">val</name><index pos:start="577:37" pos:end="577:41">[<expr pos:start="577:38" pos:end="577:40"><literal type="number" pos:start="577:38" pos:end="577:40">256</literal></expr>]</index></name><init pos:start="577:42" pos:end="577:45">=<expr pos:start="577:43" pos:end="577:45"><block pos:start="577:43" pos:end="577:45">{<expr pos:start="577:44" pos:end="577:44"><literal type="number" pos:start="577:44" pos:end="577:44">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="579:13" pos:end="585:36"><if pos:start="579:13" pos:end="583:13">if<condition pos:start="579:15" pos:end="579:64">(<expr pos:start="579:16" pos:end="579:63"><call pos:start="579:16" pos:end="579:58"><name pos:start="579:16" pos:end="579:21">sscanf</name><argument_list pos:start="579:22" pos:end="579:58">(<argument pos:start="579:23" pos:end="579:23"><expr pos:start="579:23" pos:end="579:23"><name pos:start="579:23" pos:end="579:23">p</name></expr></argument>, <argument pos:start="579:26" pos:end="579:45"><expr pos:start="579:26" pos:end="579:45"><literal type="string" pos:start="579:26" pos:end="579:45">"%255[^:=]=%255[^:]"</literal></expr></argument>, <argument pos:start="579:48" pos:end="579:52"><expr pos:start="579:48" pos:end="579:52"><name pos:start="579:48" pos:end="579:52">param</name></expr></argument>, <argument pos:start="579:55" pos:end="579:57"><expr pos:start="579:55" pos:end="579:57"><name pos:start="579:55" pos:end="579:57">val</name></expr></argument>)</argument_list></call> <operator pos:start="579:60" pos:end="579:61">==</operator> <literal type="number" pos:start="579:63" pos:end="579:63">1</literal></expr>)</condition><block pos:start="579:65" pos:end="583:13">{<block_content pos:start="581:17" pos:end="581:36">

                <expr_stmt pos:start="581:17" pos:end="581:36"><expr pos:start="581:17" pos:end="581:35"><call pos:start="581:17" pos:end="581:35"><name pos:start="581:17" pos:end="581:23">OPT_STR</name><argument_list pos:start="581:24" pos:end="581:35">(<argument pos:start="581:25" pos:end="581:29"><expr pos:start="581:25" pos:end="581:29"><name pos:start="581:25" pos:end="581:29">param</name></expr></argument>, <argument pos:start="581:32" pos:end="581:34"><expr pos:start="581:32" pos:end="581:34"><literal type="string" pos:start="581:32" pos:end="581:34">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="583:14" pos:end="585:36">else<block type="pseudo" pos:start="585:17" pos:end="585:36"><block_content pos:start="585:17" pos:end="585:36">

                <expr_stmt pos:start="585:17" pos:end="585:36"><expr pos:start="585:17" pos:end="585:35"><call pos:start="585:17" pos:end="585:35"><name pos:start="585:17" pos:end="585:23">OPT_STR</name><argument_list pos:start="585:24" pos:end="585:35">(<argument pos:start="585:25" pos:end="585:29"><expr pos:start="585:25" pos:end="585:29"><name pos:start="585:25" pos:end="585:29">param</name></expr></argument>, <argument pos:start="585:32" pos:end="585:34"><expr pos:start="585:32" pos:end="585:34"><name pos:start="585:32" pos:end="585:34">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="587:13" pos:end="587:30"><expr pos:start="587:13" pos:end="587:29"><name pos:start="587:13" pos:end="587:13">p</name><operator pos:start="587:14" pos:end="587:14">=</operator> <call pos:start="587:16" pos:end="587:29"><name pos:start="587:16" pos:end="587:21">strchr</name><argument_list pos:start="587:22" pos:end="587:29">(<argument pos:start="587:23" pos:end="587:23"><expr pos:start="587:23" pos:end="587:23"><name pos:start="587:23" pos:end="587:23">p</name></expr></argument>, <argument pos:start="587:26" pos:end="587:28"><expr pos:start="587:26" pos:end="587:28"><literal type="char" pos:start="587:26" pos:end="587:28">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="589:13" pos:end="589:19"><expr pos:start="589:13" pos:end="589:18"><name pos:start="589:13" pos:end="589:13">p</name><operator pos:start="589:14" pos:end="589:15">+=</operator><operator pos:start="589:16" pos:end="589:16">!</operator><operator pos:start="589:17" pos:end="589:17">!</operator><name pos:start="589:18" pos:end="589:18">p</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="597:5" pos:end="625:5"><if pos:start="597:5" pos:end="625:5">if <condition pos:start="597:8" pos:end="597:24">(<expr pos:start="597:9" pos:end="597:23"><name pos:start="597:9" pos:end="597:23"><name pos:start="597:9" pos:end="597:10">x4</name><operator pos:start="597:11" pos:end="597:12">-&gt;</operator><name pos:start="597:13" pos:end="597:23">x264_params</name></name></expr>)</condition> <block pos:start="597:26" pos:end="625:5">{<block_content pos:start="599:9" pos:end="623:9">

        <decl_stmt pos:start="599:9" pos:end="599:37"><decl pos:start="599:9" pos:end="599:36"><type pos:start="599:9" pos:end="599:22"><name pos:start="599:9" pos:end="599:20">AVDictionary</name> <modifier pos:start="599:22" pos:end="599:22">*</modifier></type><name pos:start="599:23" pos:end="599:26">dict</name>    <init pos:start="599:31" pos:end="599:36">= <expr pos:start="599:33" pos:end="599:36"><name pos:start="599:33" pos:end="599:36">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="601:9" pos:end="601:37"><decl pos:start="601:9" pos:end="601:36"><type pos:start="601:9" pos:end="601:27"><name pos:start="601:9" pos:end="601:25">AVDictionaryEntry</name> <modifier pos:start="601:27" pos:end="601:27">*</modifier></type><name pos:start="601:28" pos:end="601:29">en</name> <init pos:start="601:31" pos:end="601:36">= <expr pos:start="601:33" pos:end="601:36"><name pos:start="601:33" pos:end="601:36">NULL</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="605:9" pos:end="623:9"><if pos:start="605:9" pos:end="623:9">if <condition pos:start="605:12" pos:end="605:71">(<expr pos:start="605:13" pos:end="605:70"><operator pos:start="605:13" pos:end="605:13">!</operator><call pos:start="605:14" pos:end="605:70"><name pos:start="605:14" pos:end="605:33">av_dict_parse_string</name><argument_list pos:start="605:34" pos:end="605:70">(<argument pos:start="605:35" pos:end="605:39"><expr pos:start="605:35" pos:end="605:39"><operator pos:start="605:35" pos:end="605:35">&amp;</operator><name pos:start="605:36" pos:end="605:39">dict</name></expr></argument>, <argument pos:start="605:42" pos:end="605:56"><expr pos:start="605:42" pos:end="605:56"><name pos:start="605:42" pos:end="605:56"><name pos:start="605:42" pos:end="605:43">x4</name><operator pos:start="605:44" pos:end="605:45">-&gt;</operator><name pos:start="605:46" pos:end="605:56">x264_params</name></name></expr></argument>, <argument pos:start="605:59" pos:end="605:61"><expr pos:start="605:59" pos:end="605:61"><literal type="string" pos:start="605:59" pos:end="605:61">"="</literal></expr></argument>, <argument pos:start="605:64" pos:end="605:66"><expr pos:start="605:64" pos:end="605:66"><literal type="string" pos:start="605:64" pos:end="605:66">":"</literal></expr></argument>, <argument pos:start="605:69" pos:end="605:69"><expr pos:start="605:69" pos:end="605:69"><literal type="number" pos:start="605:69" pos:end="605:69">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="605:73" pos:end="623:9">{<block_content pos:start="607:13" pos:end="621:32">

            <while pos:start="607:13" pos:end="617:13">while <condition pos:start="607:19" pos:end="607:75">(<expr pos:start="607:20" pos:end="607:74"><operator pos:start="607:20" pos:end="607:20">(</operator><name pos:start="607:21" pos:end="607:22">en</name> <operator pos:start="607:24" pos:end="607:24">=</operator> <call pos:start="607:26" pos:end="607:73"><name pos:start="607:26" pos:end="607:36">av_dict_get</name><argument_list pos:start="607:37" pos:end="607:73">(<argument pos:start="607:38" pos:end="607:41"><expr pos:start="607:38" pos:end="607:41"><name pos:start="607:38" pos:end="607:41">dict</name></expr></argument>, <argument pos:start="607:44" pos:end="607:45"><expr pos:start="607:44" pos:end="607:45"><literal type="string" pos:start="607:44" pos:end="607:45">""</literal></expr></argument>, <argument pos:start="607:48" pos:end="607:49"><expr pos:start="607:48" pos:end="607:49"><name pos:start="607:48" pos:end="607:49">en</name></expr></argument>, <argument pos:start="607:52" pos:end="607:72"><expr pos:start="607:52" pos:end="607:72"><name pos:start="607:52" pos:end="607:72">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call><operator pos:start="607:74" pos:end="607:74">)</operator></expr>)</condition> <block pos:start="607:77" pos:end="617:13">{<block_content pos:start="609:17" pos:end="615:48">

                <if_stmt pos:start="609:17" pos:end="615:48"><if pos:start="609:17" pos:end="615:48">if <condition pos:start="609:20" pos:end="609:74">(<expr pos:start="609:21" pos:end="609:73"><call pos:start="609:21" pos:end="609:69"><name pos:start="609:21" pos:end="609:36">x264_param_parse</name><argument_list pos:start="609:37" pos:end="609:69">(<argument pos:start="609:38" pos:end="609:48"><expr pos:start="609:38" pos:end="609:48"><operator pos:start="609:38" pos:end="609:38">&amp;</operator><name pos:start="609:39" pos:end="609:48"><name pos:start="609:39" pos:end="609:40">x4</name><operator pos:start="609:41" pos:end="609:42">-&gt;</operator><name pos:start="609:43" pos:end="609:48">params</name></name></expr></argument>, <argument pos:start="609:51" pos:end="609:57"><expr pos:start="609:51" pos:end="609:57"><name pos:start="609:51" pos:end="609:57"><name pos:start="609:51" pos:end="609:52">en</name><operator pos:start="609:53" pos:end="609:54">-&gt;</operator><name pos:start="609:55" pos:end="609:57">key</name></name></expr></argument>, <argument pos:start="609:60" pos:end="609:68"><expr pos:start="609:60" pos:end="609:68"><name pos:start="609:60" pos:end="609:68"><name pos:start="609:60" pos:end="609:61">en</name><operator pos:start="609:62" pos:end="609:63">-&gt;</operator><name pos:start="609:64" pos:end="609:68">value</name></name></expr></argument>)</argument_list></call> <operator pos:start="609:71" pos:end="609:71">&lt;</operator> <literal type="number" pos:start="609:73" pos:end="609:73">0</literal></expr>)</condition><block type="pseudo" pos:start="611:21" pos:end="615:48"><block_content pos:start="611:21" pos:end="615:48">

                    <expr_stmt pos:start="611:21" pos:end="615:48"><expr pos:start="611:21" pos:end="615:47"><call pos:start="611:21" pos:end="615:47"><name pos:start="611:21" pos:end="611:26">av_log</name><argument_list pos:start="611:27" pos:end="615:47">(<argument pos:start="611:28" pos:end="611:32"><expr pos:start="611:28" pos:end="611:32"><name pos:start="611:28" pos:end="611:32">avctx</name></expr></argument>, <argument pos:start="611:35" pos:end="611:48"><expr pos:start="611:35" pos:end="611:48"><name pos:start="611:35" pos:end="611:48">AV_LOG_WARNING</name></expr></argument>,

                           <argument pos:start="613:28" pos:end="613:62"><expr pos:start="613:28" pos:end="613:62"><literal type="string" pos:start="613:28" pos:end="613:62">"Error parsing option '%s = %s'.\n"</literal></expr></argument>,

                            <argument pos:start="615:29" pos:end="615:35"><expr pos:start="615:29" pos:end="615:35"><name pos:start="615:29" pos:end="615:35"><name pos:start="615:29" pos:end="615:30">en</name><operator pos:start="615:31" pos:end="615:32">-&gt;</operator><name pos:start="615:33" pos:end="615:35">key</name></name></expr></argument>, <argument pos:start="615:38" pos:end="615:46"><expr pos:start="615:38" pos:end="615:46"><name pos:start="615:38" pos:end="615:46"><name pos:start="615:38" pos:end="615:39">en</name><operator pos:start="615:40" pos:end="615:41">-&gt;</operator><name pos:start="615:42" pos:end="615:46">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></while>



            <expr_stmt pos:start="621:13" pos:end="621:32"><expr pos:start="621:13" pos:end="621:31"><call pos:start="621:13" pos:end="621:31"><name pos:start="621:13" pos:end="621:24">av_dict_free</name><argument_list pos:start="621:25" pos:end="621:31">(<argument pos:start="621:26" pos:end="621:30"><expr pos:start="621:26" pos:end="621:30"><operator pos:start="621:26" pos:end="621:26">&amp;</operator><name pos:start="621:27" pos:end="621:30">dict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="629:5" pos:end="629:49">// update AVCodecContext with x264 parameters</comment>

    <expr_stmt pos:start="631:5" pos:end="633:48"><expr pos:start="631:5" pos:end="633:47"><name pos:start="631:5" pos:end="631:23"><name pos:start="631:5" pos:end="631:9">avctx</name><operator pos:start="631:10" pos:end="631:11">-&gt;</operator><name pos:start="631:12" pos:end="631:23">has_b_frames</name></name> <operator pos:start="631:25" pos:end="631:25">=</operator> <ternary pos:start="631:27" pos:end="633:47"><condition pos:start="631:27" pos:end="631:47"><expr pos:start="631:27" pos:end="631:45"><name pos:start="631:27" pos:end="631:45"><name pos:start="631:27" pos:end="631:28">x4</name><operator pos:start="631:29" pos:end="631:30">-&gt;</operator><name pos:start="631:31" pos:end="631:36">params</name><operator pos:start="631:37" pos:end="631:37">.</operator><name pos:start="631:38" pos:end="631:45">i_bframe</name></name></expr> ?</condition><then pos:start="633:9" pos:end="633:43">

        <expr pos:start="633:9" pos:end="633:43"><ternary pos:start="633:9" pos:end="633:43"><condition pos:start="633:9" pos:end="633:37"><expr pos:start="633:9" pos:end="633:35"><name pos:start="633:9" pos:end="633:35"><name pos:start="633:9" pos:end="633:10">x4</name><operator pos:start="633:11" pos:end="633:12">-&gt;</operator><name pos:start="633:13" pos:end="633:18">params</name><operator pos:start="633:19" pos:end="633:19">.</operator><name pos:start="633:20" pos:end="633:35">i_bframe_pyramid</name></name></expr> ?</condition><then pos:start="633:39" pos:end="633:39"> <expr pos:start="633:39" pos:end="633:39"><literal type="number" pos:start="633:39" pos:end="633:39">2</literal></expr> </then><else pos:start="633:41" pos:end="633:43">: <expr pos:start="633:43" pos:end="633:43"><literal type="number" pos:start="633:43" pos:end="633:43">1</literal></expr></else></ternary></expr> </then><else pos:start="633:45" pos:end="633:47">: <expr pos:start="633:47" pos:end="633:47"><literal type="number" pos:start="633:47" pos:end="633:47">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="635:5" pos:end="637:32"><if pos:start="635:5" pos:end="637:32">if <condition pos:start="635:8" pos:end="635:32">(<expr pos:start="635:9" pos:end="635:31"><name pos:start="635:9" pos:end="635:27"><name pos:start="635:9" pos:end="635:13">avctx</name><operator pos:start="635:14" pos:end="635:15">-&gt;</operator><name pos:start="635:16" pos:end="635:27">max_b_frames</name></name> <operator pos:start="635:29" pos:end="635:29">&lt;</operator> <literal type="number" pos:start="635:31" pos:end="635:31">0</literal></expr>)</condition><block type="pseudo" pos:start="637:9" pos:end="637:32"><block_content pos:start="637:9" pos:end="637:32">

        <expr_stmt pos:start="637:9" pos:end="637:32"><expr pos:start="637:9" pos:end="637:31"><name pos:start="637:9" pos:end="637:27"><name pos:start="637:9" pos:end="637:13">avctx</name><operator pos:start="637:14" pos:end="637:15">-&gt;</operator><name pos:start="637:16" pos:end="637:27">max_b_frames</name></name> <operator pos:start="637:29" pos:end="637:29">=</operator> <literal type="number" pos:start="637:31" pos:end="637:31">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="641:5" pos:end="641:51"><expr pos:start="641:5" pos:end="641:50"><name pos:start="641:5" pos:end="641:19"><name pos:start="641:5" pos:end="641:9">avctx</name><operator pos:start="641:10" pos:end="641:11">-&gt;</operator><name pos:start="641:12" pos:end="641:19">bit_rate</name></name> <operator pos:start="641:21" pos:end="641:21">=</operator> <name pos:start="641:23" pos:end="641:45"><name pos:start="641:23" pos:end="641:24">x4</name><operator pos:start="641:25" pos:end="641:26">-&gt;</operator><name pos:start="641:27" pos:end="641:32">params</name><operator pos:start="641:33" pos:end="641:33">.</operator><name pos:start="641:34" pos:end="641:35">rc</name><operator pos:start="641:36" pos:end="641:36">.</operator><name pos:start="641:37" pos:end="641:45">i_bitrate</name></name><operator pos:start="641:46" pos:end="641:46">*</operator><literal type="number" pos:start="641:47" pos:end="641:50">1000</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="645:5" pos:end="645:45"><expr pos:start="645:5" pos:end="645:44"><name pos:start="645:5" pos:end="645:11"><name pos:start="645:5" pos:end="645:6">x4</name><operator pos:start="645:7" pos:end="645:8">-&gt;</operator><name pos:start="645:9" pos:end="645:11">enc</name></name> <operator pos:start="645:13" pos:end="645:13">=</operator> <call pos:start="645:15" pos:end="645:44"><name pos:start="645:15" pos:end="645:31">x264_encoder_open</name><argument_list pos:start="645:32" pos:end="645:44">(<argument pos:start="645:33" pos:end="645:43"><expr pos:start="645:33" pos:end="645:43"><operator pos:start="645:33" pos:end="645:33">&amp;</operator><name pos:start="645:34" pos:end="645:43"><name pos:start="645:34" pos:end="645:35">x4</name><operator pos:start="645:36" pos:end="645:37">-&gt;</operator><name pos:start="645:38" pos:end="645:43">params</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="647:5" pos:end="649:18"><if pos:start="647:5" pos:end="649:18">if <condition pos:start="647:8" pos:end="647:17">(<expr pos:start="647:9" pos:end="647:16"><operator pos:start="647:9" pos:end="647:9">!</operator><name pos:start="647:10" pos:end="647:16"><name pos:start="647:10" pos:end="647:11">x4</name><operator pos:start="647:12" pos:end="647:13">-&gt;</operator><name pos:start="647:14" pos:end="647:16">enc</name></name></expr>)</condition><block type="pseudo" pos:start="649:9" pos:end="649:18"><block_content pos:start="649:9" pos:end="649:18">

        <return pos:start="649:9" pos:end="649:18">return <expr pos:start="649:16" pos:end="649:17"><operator pos:start="649:16" pos:end="649:16">-</operator><literal type="number" pos:start="649:17" pos:end="649:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="653:5" pos:end="653:42"><expr pos:start="653:5" pos:end="653:41"><name pos:start="653:5" pos:end="653:22"><name pos:start="653:5" pos:end="653:9">avctx</name><operator pos:start="653:10" pos:end="653:11">-&gt;</operator><name pos:start="653:12" pos:end="653:22">coded_frame</name></name> <operator pos:start="653:24" pos:end="653:24">=</operator> <call pos:start="653:26" pos:end="653:41"><name pos:start="653:26" pos:end="653:39">av_frame_alloc</name><argument_list pos:start="653:40" pos:end="653:41">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="655:5" pos:end="657:31"><if pos:start="655:5" pos:end="657:31">if <condition pos:start="655:8" pos:end="655:28">(<expr pos:start="655:9" pos:end="655:27"><operator pos:start="655:9" pos:end="655:9">!</operator><name pos:start="655:10" pos:end="655:27"><name pos:start="655:10" pos:end="655:14">avctx</name><operator pos:start="655:15" pos:end="655:16">-&gt;</operator><name pos:start="655:17" pos:end="655:27">coded_frame</name></name></expr>)</condition><block type="pseudo" pos:start="657:9" pos:end="657:31"><block_content pos:start="657:9" pos:end="657:31">

        <return pos:start="657:9" pos:end="657:31">return <expr pos:start="657:16" pos:end="657:30"><call pos:start="657:16" pos:end="657:30"><name pos:start="657:16" pos:end="657:22">AVERROR</name><argument_list pos:start="657:23" pos:end="657:30">(<argument pos:start="657:24" pos:end="657:29"><expr pos:start="657:24" pos:end="657:29"><name pos:start="657:24" pos:end="657:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="661:5" pos:end="708:5"><if pos:start="661:5" pos:end="708:5">if <condition pos:start="661:8" pos:end="661:48">(<expr pos:start="661:9" pos:end="661:47"><name pos:start="661:9" pos:end="661:20"><name pos:start="661:9" pos:end="661:13">avctx</name><operator pos:start="661:14" pos:end="661:15">-&gt;</operator><name pos:start="661:16" pos:end="661:20">flags</name></name> <operator pos:start="661:22" pos:end="661:22">&amp;</operator> <name pos:start="661:24" pos:end="661:47">CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition> <block pos:start="661:50" pos:end="708:5">{<block_content pos:start="663:9" pos:end="706:53">

        <decl_stmt pos:start="663:9" pos:end="663:24"><decl pos:start="663:9" pos:end="663:23"><type pos:start="663:9" pos:end="663:20"><name pos:start="663:9" pos:end="663:18">x264_nal_t</name> <modifier pos:start="663:20" pos:end="663:20">*</modifier></type><name pos:start="663:21" pos:end="663:23">nal</name></decl>;</decl_stmt>

        <decl_stmt pos:start="665:9" pos:end="665:19"><decl pos:start="665:9" pos:end="665:18"><type pos:start="665:9" pos:end="665:17"><name pos:start="665:9" pos:end="665:15">uint8_t</name> <modifier pos:start="665:17" pos:end="665:17">*</modifier></type><name pos:start="665:18" pos:end="665:18">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="667:9" pos:end="667:23"><decl pos:start="667:9" pos:end="667:16"><type pos:start="667:9" pos:end="667:11"><name pos:start="667:9" pos:end="667:11">int</name></type> <name pos:start="667:13" pos:end="667:16">nnal</name></decl>, <decl pos:start="667:19" pos:end="667:19"><type ref="prev" pos:start="667:9" pos:end="667:11"/><name pos:start="667:19" pos:end="667:19">s</name></decl>, <decl pos:start="667:22" pos:end="667:22"><type ref="prev" pos:start="667:9" pos:end="667:11"/><name pos:start="667:22" pos:end="667:22">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="671:9" pos:end="671:55"><expr pos:start="671:9" pos:end="671:54"><name pos:start="671:9" pos:end="671:9">s</name> <operator pos:start="671:11" pos:end="671:11">=</operator> <call pos:start="671:13" pos:end="671:54"><name pos:start="671:13" pos:end="671:32">x264_encoder_headers</name><argument_list pos:start="671:33" pos:end="671:54">(<argument pos:start="671:34" pos:end="671:40"><expr pos:start="671:34" pos:end="671:40"><name pos:start="671:34" pos:end="671:40"><name pos:start="671:34" pos:end="671:35">x4</name><operator pos:start="671:36" pos:end="671:37">-&gt;</operator><name pos:start="671:38" pos:end="671:40">enc</name></name></expr></argument>, <argument pos:start="671:43" pos:end="671:46"><expr pos:start="671:43" pos:end="671:46"><operator pos:start="671:43" pos:end="671:43">&amp;</operator><name pos:start="671:44" pos:end="671:46">nal</name></expr></argument>, <argument pos:start="671:49" pos:end="671:53"><expr pos:start="671:49" pos:end="671:53"><operator pos:start="671:49" pos:end="671:49">&amp;</operator><name pos:start="671:50" pos:end="671:53">nnal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="673:9" pos:end="673:44"><expr pos:start="673:9" pos:end="673:43"><name pos:start="673:9" pos:end="673:24"><name pos:start="673:9" pos:end="673:13">avctx</name><operator pos:start="673:14" pos:end="673:15">-&gt;</operator><name pos:start="673:16" pos:end="673:24">extradata</name></name> <operator pos:start="673:26" pos:end="673:26">=</operator> <name pos:start="673:28" pos:end="673:28">p</name> <operator pos:start="673:30" pos:end="673:30">=</operator> <call pos:start="673:32" pos:end="673:43"><name pos:start="673:32" pos:end="673:40">av_malloc</name><argument_list pos:start="673:41" pos:end="673:43">(<argument pos:start="673:42" pos:end="673:42"><expr pos:start="673:42" pos:end="673:42"><name pos:start="673:42" pos:end="673:42">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





        <for pos:start="679:9" pos:end="704:9">for <control pos:start="679:13" pos:end="679:34">(<init pos:start="679:14" pos:end="679:19"><expr pos:start="679:14" pos:end="679:18"><name pos:start="679:14" pos:end="679:14">i</name> <operator pos:start="679:16" pos:end="679:16">=</operator> <literal type="number" pos:start="679:18" pos:end="679:18">0</literal></expr>;</init> <condition pos:start="679:21" pos:end="679:29"><expr pos:start="679:21" pos:end="679:28"><name pos:start="679:21" pos:end="679:21">i</name> <operator pos:start="679:23" pos:end="679:23">&lt;</operator> <name pos:start="679:25" pos:end="679:28">nnal</name></expr>;</condition> <incr pos:start="679:31" pos:end="679:33"><expr pos:start="679:31" pos:end="679:33"><name pos:start="679:31" pos:end="679:31">i</name><operator pos:start="679:32" pos:end="679:33">++</operator></expr></incr>)</control> <block pos:start="679:36" pos:end="704:9">{<block_content pos:start="683:13" pos:end="702:34">

            <comment type="block" pos:start="681:13" pos:end="681:49">/* Don't put the SEI in extradata. */</comment>

            <if_stmt pos:start="683:13" pos:end="698:13"><if pos:start="683:13" pos:end="698:13">if <condition pos:start="683:16" pos:end="683:41">(<expr pos:start="683:17" pos:end="683:40"><name pos:start="683:17" pos:end="683:22"><name pos:start="683:17" pos:end="683:19">nal</name><index pos:start="683:20" pos:end="683:22">[<expr pos:start="683:21" pos:end="683:21"><name pos:start="683:21" pos:end="683:21">i</name></expr>]</index></name><operator pos:start="683:23" pos:end="683:23">.</operator><name pos:start="683:24" pos:end="683:29">i_type</name> <operator pos:start="683:31" pos:end="683:32">==</operator> <name pos:start="683:34" pos:end="683:40">NAL_SEI</name></expr>)</condition> <block pos:start="683:43" pos:end="698:13">{<block_content pos:start="685:17" pos:end="696:25">

                <expr_stmt pos:start="685:17" pos:end="685:72"><expr pos:start="685:17" pos:end="685:71"><call pos:start="685:17" pos:end="685:71"><name pos:start="685:17" pos:end="685:22">av_log</name><argument_list pos:start="685:23" pos:end="685:71">(<argument pos:start="685:24" pos:end="685:28"><expr pos:start="685:24" pos:end="685:28"><name pos:start="685:24" pos:end="685:28">avctx</name></expr></argument>, <argument pos:start="685:31" pos:end="685:41"><expr pos:start="685:31" pos:end="685:41"><name pos:start="685:31" pos:end="685:41">AV_LOG_INFO</name></expr></argument>, <argument pos:start="685:44" pos:end="685:49"><expr pos:start="685:44" pos:end="685:49"><literal type="string" pos:start="685:44" pos:end="685:49">"%s\n"</literal></expr></argument>, <argument pos:start="685:52" pos:end="685:70"><expr pos:start="685:52" pos:end="685:70"><name pos:start="685:52" pos:end="685:57"><name pos:start="685:52" pos:end="685:54">nal</name><index pos:start="685:55" pos:end="685:57">[<expr pos:start="685:56" pos:end="685:56"><name pos:start="685:56" pos:end="685:56">i</name></expr>]</index></name><operator pos:start="685:58" pos:end="685:58">.</operator><name pos:start="685:59" pos:end="685:67">p_payload</name><operator pos:start="685:68" pos:end="685:68">+</operator><literal type="number" pos:start="685:69" pos:end="685:70">25</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="687:17" pos:end="687:48"><expr pos:start="687:17" pos:end="687:47"><name pos:start="687:17" pos:end="687:28"><name pos:start="687:17" pos:end="687:18">x4</name><operator pos:start="687:19" pos:end="687:20">-&gt;</operator><name pos:start="687:21" pos:end="687:28">sei_size</name></name> <operator pos:start="687:30" pos:end="687:30">=</operator> <name pos:start="687:32" pos:end="687:37"><name pos:start="687:32" pos:end="687:34">nal</name><index pos:start="687:35" pos:end="687:37">[<expr pos:start="687:36" pos:end="687:36"><name pos:start="687:36" pos:end="687:36">i</name></expr>]</index></name><operator pos:start="687:38" pos:end="687:38">.</operator><name pos:start="687:39" pos:end="687:47">i_payload</name></expr>;</expr_stmt>

                <expr_stmt pos:start="689:17" pos:end="689:55"><expr pos:start="689:17" pos:end="689:54"><name pos:start="689:17" pos:end="689:23"><name pos:start="689:17" pos:end="689:18">x4</name><operator pos:start="689:19" pos:end="689:20">-&gt;</operator><name pos:start="689:21" pos:end="689:23">sei</name></name>      <operator pos:start="689:30" pos:end="689:30">=</operator> <call pos:start="689:32" pos:end="689:54"><name pos:start="689:32" pos:end="689:40">av_malloc</name><argument_list pos:start="689:41" pos:end="689:54">(<argument pos:start="689:42" pos:end="689:53"><expr pos:start="689:42" pos:end="689:53"><name pos:start="689:42" pos:end="689:53"><name pos:start="689:42" pos:end="689:43">x4</name><operator pos:start="689:44" pos:end="689:45">-&gt;</operator><name pos:start="689:46" pos:end="689:53">sei_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="691:17" pos:end="694:68"><if pos:start="691:17" pos:end="694:68">if <condition pos:start="691:20" pos:end="691:29">(<expr pos:start="691:21" pos:end="691:28"><operator pos:start="691:21" pos:end="691:21">!</operator><name pos:start="691:22" pos:end="691:28"><name pos:start="691:22" pos:end="691:23">x4</name><operator pos:start="691:24" pos:end="691:25">-&gt;</operator><name pos:start="691:26" pos:end="691:28">sei</name></name></expr>)</condition><block type="pseudo" pos:start="694:17" pos:end="694:68"><block_content pos:start="694:17" pos:end="694:68">


                <expr_stmt pos:start="694:17" pos:end="694:68"><expr pos:start="694:17" pos:end="694:67"><call pos:start="694:17" pos:end="694:67"><name pos:start="694:17" pos:end="694:22">memcpy</name><argument_list pos:start="694:23" pos:end="694:67">(<argument pos:start="694:24" pos:end="694:30"><expr pos:start="694:24" pos:end="694:30"><name pos:start="694:24" pos:end="694:30"><name pos:start="694:24" pos:end="694:25">x4</name><operator pos:start="694:26" pos:end="694:27">-&gt;</operator><name pos:start="694:28" pos:end="694:30">sei</name></name></expr></argument>, <argument pos:start="694:33" pos:end="694:48"><expr pos:start="694:33" pos:end="694:48"><name pos:start="694:33" pos:end="694:38"><name pos:start="694:33" pos:end="694:35">nal</name><index pos:start="694:36" pos:end="694:38">[<expr pos:start="694:37" pos:end="694:37"><name pos:start="694:37" pos:end="694:37">i</name></expr>]</index></name><operator pos:start="694:39" pos:end="694:39">.</operator><name pos:start="694:40" pos:end="694:48">p_payload</name></expr></argument>, <argument pos:start="694:51" pos:end="694:66"><expr pos:start="694:51" pos:end="694:66"><name pos:start="694:51" pos:end="694:56"><name pos:start="694:51" pos:end="694:53">nal</name><index pos:start="694:54" pos:end="694:56">[<expr pos:start="694:55" pos:end="694:55"><name pos:start="694:55" pos:end="694:55">i</name></expr>]</index></name><operator pos:start="694:57" pos:end="694:57">.</operator><name pos:start="694:58" pos:end="694:66">i_payload</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <continue pos:start="696:17" pos:end="696:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="700:13" pos:end="700:58"><expr pos:start="700:13" pos:end="700:57"><call pos:start="700:13" pos:end="700:57"><name pos:start="700:13" pos:end="700:18">memcpy</name><argument_list pos:start="700:19" pos:end="700:57">(<argument pos:start="700:20" pos:end="700:20"><expr pos:start="700:20" pos:end="700:20"><name pos:start="700:20" pos:end="700:20">p</name></expr></argument>, <argument pos:start="700:23" pos:end="700:38"><expr pos:start="700:23" pos:end="700:38"><name pos:start="700:23" pos:end="700:28"><name pos:start="700:23" pos:end="700:25">nal</name><index pos:start="700:26" pos:end="700:28">[<expr pos:start="700:27" pos:end="700:27"><name pos:start="700:27" pos:end="700:27">i</name></expr>]</index></name><operator pos:start="700:29" pos:end="700:29">.</operator><name pos:start="700:30" pos:end="700:38">p_payload</name></expr></argument>, <argument pos:start="700:41" pos:end="700:56"><expr pos:start="700:41" pos:end="700:56"><name pos:start="700:41" pos:end="700:46"><name pos:start="700:41" pos:end="700:43">nal</name><index pos:start="700:44" pos:end="700:46">[<expr pos:start="700:45" pos:end="700:45"><name pos:start="700:45" pos:end="700:45">i</name></expr>]</index></name><operator pos:start="700:47" pos:end="700:47">.</operator><name pos:start="700:48" pos:end="700:56">i_payload</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="702:13" pos:end="702:34"><expr pos:start="702:13" pos:end="702:33"><name pos:start="702:13" pos:end="702:13">p</name> <operator pos:start="702:15" pos:end="702:16">+=</operator> <name pos:start="702:18" pos:end="702:23"><name pos:start="702:18" pos:end="702:20">nal</name><index pos:start="702:21" pos:end="702:23">[<expr pos:start="702:22" pos:end="702:22"><name pos:start="702:22" pos:end="702:22">i</name></expr>]</index></name><operator pos:start="702:24" pos:end="702:24">.</operator><name pos:start="702:25" pos:end="702:33">i_payload</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="706:9" pos:end="706:53"><expr pos:start="706:9" pos:end="706:52"><name pos:start="706:9" pos:end="706:29"><name pos:start="706:9" pos:end="706:13">avctx</name><operator pos:start="706:14" pos:end="706:15">-&gt;</operator><name pos:start="706:16" pos:end="706:29">extradata_size</name></name> <operator pos:start="706:31" pos:end="706:31">=</operator> <name pos:start="706:33" pos:end="706:33">p</name> <operator pos:start="706:35" pos:end="706:35">-</operator> <name pos:start="706:37" pos:end="706:52"><name pos:start="706:37" pos:end="706:41">avctx</name><operator pos:start="706:42" pos:end="706:43">-&gt;</operator><name pos:start="706:44" pos:end="706:52">extradata</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="712:5" pos:end="712:13">return <expr pos:start="712:12" pos:end="712:12"><literal type="number" pos:start="712:12" pos:end="712:12">0</literal></expr>;</return>

<label pos:start="714:1" pos:end="714:6"><name pos:start="714:1" pos:end="714:5">nomem</name>:</label>

    <expr_stmt pos:start="716:5" pos:end="716:22"><expr pos:start="716:5" pos:end="716:21"><call pos:start="716:5" pos:end="716:21"><name pos:start="716:5" pos:end="716:14">X264_close</name><argument_list pos:start="716:15" pos:end="716:21">(<argument pos:start="716:16" pos:end="716:20"><expr pos:start="716:16" pos:end="716:20"><name pos:start="716:16" pos:end="716:20">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="718:5" pos:end="718:27">return <expr pos:start="718:12" pos:end="718:26"><call pos:start="718:12" pos:end="718:26"><name pos:start="718:12" pos:end="718:18">AVERROR</name><argument_list pos:start="718:19" pos:end="718:26">(<argument pos:start="718:20" pos:end="718:25"><expr pos:start="718:20" pos:end="718:25"><name pos:start="718:20" pos:end="718:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function></unit>
