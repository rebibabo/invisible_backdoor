<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4052.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">hpet_start_timer</name><parameter_list pos:start="1:28" pos:end="1:55">(<parameter pos:start="1:29" pos:end="1:54"><decl pos:start="1:29" pos:end="1:54"><type pos:start="1:29" pos:end="1:54"><name pos:start="1:29" pos:end="1:51"><name pos:start="1:29" pos:end="1:34">struct</name> <name pos:start="1:36" pos:end="1:51">qemu_alarm_timer</name></name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">t</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:14">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">hpet_info</name></name></type> <name pos:start="5:22" pos:end="5:25">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">r</name></decl>, <decl pos:start="7:12" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:13">fd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:6">fd</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <call pos:start="11:10" pos:end="11:36"><name pos:start="11:10" pos:end="11:13">open</name><argument_list pos:start="11:14" pos:end="11:36">(<argument pos:start="11:15" pos:end="11:25"><expr pos:start="11:15" pos:end="11:25"><literal type="string" pos:start="11:15" pos:end="11:25">"/dev/hpet"</literal></expr></argument>, <argument pos:start="11:28" pos:end="11:35"><expr pos:start="11:28" pos:end="11:35"><name pos:start="11:28" pos:end="11:35">O_RDONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:18"><if pos:start="13:5" pos:end="15:18">if <condition pos:start="13:8" pos:end="13:15">(<expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:10">fd</name> <operator pos:start="13:12" pos:end="13:12">&lt;</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:18"><block_content pos:start="15:9" pos:end="15:18">

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:23">/* Set frequency */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:5">r</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <call pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:13">ioctl</name><argument_list pos:start="21:14" pos:end="21:41">(<argument pos:start="21:15" pos:end="21:16"><expr pos:start="21:15" pos:end="21:16"><name pos:start="21:15" pos:end="21:16">fd</name></expr></argument>, <argument pos:start="21:19" pos:end="21:30"><expr pos:start="21:19" pos:end="21:30"><name pos:start="21:19" pos:end="21:30">HPET_IRQFREQ</name></expr></argument>, <argument pos:start="21:33" pos:end="21:40"><expr pos:start="21:33" pos:end="21:40"><name pos:start="21:33" pos:end="21:40">RTC_FREQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">r</name> <operator pos:start="23:11" pos:end="23:11">&lt;</operator> <literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr>)</condition> <block pos:start="23:16" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:18">

        <expr_stmt pos:start="25:9" pos:end="29:77"><expr pos:start="25:9" pos:end="29:76"><call pos:start="25:9" pos:end="29:76"><name pos:start="25:9" pos:end="25:15">fprintf</name><argument_list pos:start="25:16" pos:end="29:76">(<argument pos:start="25:17" pos:end="25:22"><expr pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:22">stderr</name></expr></argument>, <argument pos:start="25:25" pos:end="29:75"><expr pos:start="25:25" pos:end="29:75"><literal type="string" pos:start="25:25" pos:end="25:103">"Could not configure '/dev/hpet' to have a 1024Hz timer. This is not a fatal\n"</literal>

                <literal type="string" pos:start="27:17" pos:end="27:66">"error, but for better emulation accuracy type:\n"</literal>

                <literal type="string" pos:start="29:17" pos:end="29:75">"'echo 1024 &gt; /proc/sys/dev/hpet/max-user-freq' as root.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:28">/* Check capabilities */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:36"><expr pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:5">r</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <call pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:13">ioctl</name><argument_list pos:start="39:14" pos:end="39:35">(<argument pos:start="39:15" pos:end="39:16"><expr pos:start="39:15" pos:end="39:16"><name pos:start="39:15" pos:end="39:16">fd</name></expr></argument>, <argument pos:start="39:19" pos:end="39:27"><expr pos:start="39:19" pos:end="39:27"><name pos:start="39:19" pos:end="39:27">HPET_INFO</name></expr></argument>, <argument pos:start="39:30" pos:end="39:34"><expr pos:start="39:30" pos:end="39:34"><operator pos:start="39:30" pos:end="39:30">&amp;</operator><name pos:start="39:31" pos:end="39:34">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:18"><if pos:start="41:5" pos:end="43:18">if <condition pos:start="41:8" pos:end="41:14">(<expr pos:start="41:9" pos:end="41:13"><name pos:start="41:9" pos:end="41:9">r</name> <operator pos:start="41:11" pos:end="41:11">&lt;</operator> <literal type="number" pos:start="41:13" pos:end="41:13">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:18"><block_content pos:start="43:9" pos:end="43:18">

        <goto pos:start="43:9" pos:end="43:18">goto <name pos:start="43:14" pos:end="43:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:30">/* Enable periodic mode */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:31"><expr pos:start="49:5" pos:end="49:30"><name pos:start="49:5" pos:end="49:5">r</name> <operator pos:start="49:7" pos:end="49:7">=</operator> <call pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:13">ioctl</name><argument_list pos:start="49:14" pos:end="49:30">(<argument pos:start="49:15" pos:end="49:16"><expr pos:start="49:15" pos:end="49:16"><name pos:start="49:15" pos:end="49:16">fd</name></expr></argument>, <argument pos:start="49:19" pos:end="49:26"><expr pos:start="49:19" pos:end="49:26"><name pos:start="49:19" pos:end="49:26">HPET_EPI</name></expr></argument>, <argument pos:start="49:29" pos:end="49:29"><expr pos:start="49:29" pos:end="49:29"><literal type="number" pos:start="49:29" pos:end="49:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:18"><if pos:start="51:5" pos:end="53:18">if <condition pos:start="51:8" pos:end="51:33">(<expr pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:12">info</name><operator pos:start="51:13" pos:end="51:13">.</operator><name pos:start="51:14" pos:end="51:21">hi_flags</name></name> <operator pos:start="51:23" pos:end="51:24">&amp;&amp;</operator> <operator pos:start="51:26" pos:end="51:26">(</operator><name pos:start="51:27" pos:end="51:27">r</name> <operator pos:start="51:29" pos:end="51:29">&lt;</operator> <literal type="number" pos:start="51:31" pos:end="51:31">0</literal><operator pos:start="51:32" pos:end="51:32">)</operator></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:18"><block_content pos:start="53:9" pos:end="53:18">

        <goto pos:start="53:9" pos:end="53:18">goto <name pos:start="53:14" pos:end="53:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:26">/* Enable interrupt */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:33"><expr pos:start="59:5" pos:end="59:32"><name pos:start="59:5" pos:end="59:5">r</name> <operator pos:start="59:7" pos:end="59:7">=</operator> <call pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:13">ioctl</name><argument_list pos:start="59:14" pos:end="59:32">(<argument pos:start="59:15" pos:end="59:16"><expr pos:start="59:15" pos:end="59:16"><name pos:start="59:15" pos:end="59:16">fd</name></expr></argument>, <argument pos:start="59:19" pos:end="59:28"><expr pos:start="59:19" pos:end="59:28"><name pos:start="59:19" pos:end="59:28">HPET_IE_ON</name></expr></argument>, <argument pos:start="59:31" pos:end="59:31"><expr pos:start="59:31" pos:end="59:31"><literal type="number" pos:start="59:31" pos:end="59:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="63:18"><if pos:start="61:5" pos:end="63:18">if <condition pos:start="61:8" pos:end="61:14">(<expr pos:start="61:9" pos:end="61:13"><name pos:start="61:9" pos:end="61:9">r</name> <operator pos:start="61:11" pos:end="61:11">&lt;</operator> <literal type="number" pos:start="61:13" pos:end="61:13">0</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:18"><block_content pos:start="63:9" pos:end="63:18">

        <goto pos:start="63:9" pos:end="63:18">goto <name pos:start="63:14" pos:end="63:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:27"><expr pos:start="67:5" pos:end="67:26"><call pos:start="67:5" pos:end="67:26"><name pos:start="67:5" pos:end="67:22">enable_sigio_timer</name><argument_list pos:start="67:23" pos:end="67:26">(<argument pos:start="67:24" pos:end="67:25"><expr pos:start="67:24" pos:end="67:25"><name pos:start="67:24" pos:end="67:25">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:31"><expr pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:11"><name pos:start="69:5" pos:end="69:5">t</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:11">priv</name></name> <operator pos:start="69:13" pos:end="69:13">=</operator> <operator pos:start="69:15" pos:end="69:15">(</operator><name pos:start="69:16" pos:end="69:19">void</name> <operator pos:start="69:21" pos:end="69:21">*</operator><operator pos:start="69:22" pos:end="69:22">)</operator><operator pos:start="69:23" pos:end="69:23">(</operator><name pos:start="69:24" pos:end="69:27">long</name><operator pos:start="69:28" pos:end="69:28">)</operator><name pos:start="69:29" pos:end="69:30">fd</name></expr>;</expr_stmt>



    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

<label pos:start="75:1" pos:end="75:5"><name pos:start="75:1" pos:end="75:4">fail</name>:</label>

    <expr_stmt pos:start="77:5" pos:end="77:14"><expr pos:start="77:5" pos:end="77:13"><call pos:start="77:5" pos:end="77:13"><name pos:start="77:5" pos:end="77:9">close</name><argument_list pos:start="77:10" pos:end="77:13">(<argument pos:start="77:11" pos:end="77:12"><expr pos:start="77:11" pos:end="77:12"><name pos:start="77:11" pos:end="77:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="79:5" pos:end="79:14">return <expr pos:start="79:12" pos:end="79:13"><operator pos:start="79:12" pos:end="79:12">-</operator><literal type="number" pos:start="79:13" pos:end="79:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
