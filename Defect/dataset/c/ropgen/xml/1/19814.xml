<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19814.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">setup_frame</name><parameter_list pos:start="1:24" pos:end="3:62">(<parameter pos:start="1:25" pos:end="1:31"><decl pos:start="1:25" pos:end="1:31"><type pos:start="1:25" pos:end="1:31"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:31">sig</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:60"><decl pos:start="1:34" pos:end="1:60"><type pos:start="1:34" pos:end="1:60"><name pos:start="1:34" pos:end="1:56"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:56">target_sigaction</name></name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">ka</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:44"><decl pos:start="3:25" pos:end="3:44"><type pos:start="3:25" pos:end="3:44"><name pos:start="3:25" pos:end="3:39">target_sigset_t</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">set</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:61"><decl pos:start="3:47" pos:end="3:61"><type pos:start="3:47" pos:end="3:61"><name pos:start="3:47" pos:end="3:56">CPUMBState</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:61">env</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="127:1">{<block_content pos:start="7:5" pos:end="125:30">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:30">target_signal_frame</name></name> <modifier pos:start="7:32" pos:end="7:32">*</modifier></type><name pos:start="7:33" pos:end="7:37">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">abi_ulong</name></type> <name pos:start="9:15" pos:end="9:24">frame_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">err</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:14">frame_addr</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:53"><name pos:start="17:18" pos:end="17:29">get_sigframe</name><argument_list pos:start="17:30" pos:end="17:53">(<argument pos:start="17:31" pos:end="17:32"><expr pos:start="17:31" pos:end="17:32"><name pos:start="17:31" pos:end="17:32">ka</name></expr></argument>, <argument pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:37">env</name></expr></argument>, <argument pos:start="17:40" pos:end="17:52"><expr pos:start="17:40" pos:end="17:52"><sizeof pos:start="17:40" pos:end="17:45">sizeof <name/></sizeof>*<name pos:start="17:48" pos:end="17:52">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:22"><if pos:start="19:5" pos:end="21:22">if <condition pos:start="19:8" pos:end="19:62">(<expr pos:start="19:9" pos:end="19:61"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:61"><name pos:start="19:10" pos:end="19:25">lock_user_struct</name><argument_list pos:start="19:26" pos:end="19:61">(<argument pos:start="19:27" pos:end="19:38"><expr pos:start="19:27" pos:end="19:38"><name pos:start="19:27" pos:end="19:38">VERIFY_WRITE</name></expr></argument>, <argument pos:start="19:41" pos:end="19:45"><expr pos:start="19:41" pos:end="19:45"><name pos:start="19:41" pos:end="19:45">frame</name></expr></argument>, <argument pos:start="19:48" pos:end="19:57"><expr pos:start="19:48" pos:end="19:57"><name pos:start="19:48" pos:end="19:57">frame_addr</name></expr></argument>, <argument pos:start="19:60" pos:end="19:60"><expr pos:start="19:60" pos:end="19:60"><literal type="number" pos:start="19:60" pos:end="19:60">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:22"><block_content pos:start="21:9" pos:end="21:22">

        <goto pos:start="21:9" pos:end="21:22">goto <name pos:start="21:14" pos:end="21:21">badframe</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:25">/* Save the mask.  */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:61"><expr pos:start="27:5" pos:end="27:60"><call pos:start="27:5" pos:end="27:60"><name pos:start="27:5" pos:end="27:14">__put_user</name><argument_list pos:start="27:15" pos:end="27:60">(<argument pos:start="27:16" pos:end="27:26"><expr pos:start="27:16" pos:end="27:26"><name pos:start="27:16" pos:end="27:26"><name pos:start="27:16" pos:end="27:18">set</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:23">sig</name><index pos:start="27:24" pos:end="27:26">[<expr pos:start="27:25" pos:end="27:25"><literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:29" pos:end="27:59"><expr pos:start="27:29" pos:end="27:59"><operator pos:start="27:29" pos:end="27:29">&amp;</operator><name pos:start="27:30" pos:end="27:59"><name pos:start="27:30" pos:end="27:34">frame</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:38">uc</name><operator pos:start="27:39" pos:end="27:39">.</operator><name pos:start="27:40" pos:end="27:51">tuc_mcontext</name><operator pos:start="27:52" pos:end="27:52">.</operator><name pos:start="27:53" pos:end="27:59">oldmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:22"><if pos:start="29:5" pos:end="31:22">if <condition pos:start="29:8" pos:end="29:12">(<expr pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">err</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:22"><block_content pos:start="31:9" pos:end="31:22">

        <goto pos:start="31:9" pos:end="31:22">goto <name pos:start="31:14" pos:end="31:21">badframe</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="35:5" pos:end="41:5">for<control pos:start="35:8" pos:end="35:42">(<init pos:start="35:9" pos:end="35:14"><expr pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:9">i</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <literal type="number" pos:start="35:13" pos:end="35:13">1</literal></expr>;</init> <condition pos:start="35:16" pos:end="35:37"><expr pos:start="35:16" pos:end="35:36"><name pos:start="35:16" pos:end="35:16">i</name> <operator pos:start="35:18" pos:end="35:18">&lt;</operator> <name pos:start="35:20" pos:end="35:36">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="35:39" pos:end="35:41"><expr pos:start="35:39" pos:end="35:41"><name pos:start="35:39" pos:end="35:39">i</name><operator pos:start="35:40" pos:end="35:41">++</operator></expr></incr>)</control> <block pos:start="35:44" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:26">

        <if_stmt pos:start="37:9" pos:end="39:26"><if pos:start="37:9" pos:end="39:26">if <condition pos:start="37:12" pos:end="37:62">(<expr pos:start="37:13" pos:end="37:61"><call pos:start="37:13" pos:end="37:61"><name pos:start="37:13" pos:end="37:22">__put_user</name><argument_list pos:start="37:23" pos:end="37:61">(<argument pos:start="37:24" pos:end="37:34"><expr pos:start="37:24" pos:end="37:34"><name pos:start="37:24" pos:end="37:34"><name pos:start="37:24" pos:end="37:26">set</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:31">sig</name><index pos:start="37:32" pos:end="37:34">[<expr pos:start="37:33" pos:end="37:33"><name pos:start="37:33" pos:end="37:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="37:37" pos:end="37:60"><expr pos:start="37:37" pos:end="37:60"><operator pos:start="37:37" pos:end="37:37">&amp;</operator><name pos:start="37:38" pos:end="37:60"><name pos:start="37:38" pos:end="37:42">frame</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:53">extramask</name><index pos:start="37:54" pos:end="37:60">[<expr pos:start="37:55" pos:end="37:59"><name pos:start="37:55" pos:end="37:55">i</name> <operator pos:start="37:57" pos:end="37:57">-</operator> <literal type="number" pos:start="37:59" pos:end="37:59">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:26"><block_content pos:start="39:13" pos:end="39:26">

            <goto pos:start="39:13" pos:end="39:26">goto <name pos:start="39:18" pos:end="39:25">badframe</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="45:5" pos:end="45:51"><expr pos:start="45:5" pos:end="45:50"><call pos:start="45:5" pos:end="45:50"><name pos:start="45:5" pos:end="45:20">setup_sigcontext</name><argument_list pos:start="45:21" pos:end="45:50">(<argument pos:start="45:22" pos:end="45:44"><expr pos:start="45:22" pos:end="45:44"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:44"><name pos:start="45:23" pos:end="45:27">frame</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:31">uc</name><operator pos:start="45:32" pos:end="45:32">.</operator><name pos:start="45:33" pos:end="45:44">tuc_mcontext</name></name></expr></argument>, <argument pos:start="45:47" pos:end="45:49"><expr pos:start="45:47" pos:end="45:49"><name pos:start="45:47" pos:end="45:49">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="51:31">/* Set up to return from userspace. If provided, use a stub

       already in userspace. */</comment>

    <comment type="block" pos:start="53:5" pos:end="53:60">/* minus 8 is offset to cater for "rtsd r15,8" offset */</comment>

    <if_stmt pos:start="55:5" pos:end="85:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:42">(<expr pos:start="55:9" pos:end="55:41"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:10">ka</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:20">sa_flags</name></name> <operator pos:start="55:22" pos:end="55:22">&amp;</operator> <name pos:start="55:24" pos:end="55:41">TARGET_SA_RESTORER</name></expr>)</condition> <block pos:start="55:44" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:59">

        <expr_stmt pos:start="57:9" pos:end="57:59"><expr pos:start="57:9" pos:end="57:58"><name pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:11">env</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:17">regs</name><index pos:start="57:18" pos:end="57:21">[<expr pos:start="57:19" pos:end="57:20"><literal type="number" pos:start="57:19" pos:end="57:20">15</literal></expr>]</index></name> <operator pos:start="57:23" pos:end="57:23">=</operator> <operator pos:start="57:25" pos:end="57:25">(</operator><operator pos:start="57:26" pos:end="57:26">(</operator><name pos:start="57:27" pos:end="57:34">unsigned</name> <name pos:start="57:36" pos:end="57:39">long</name><operator pos:start="57:40" pos:end="57:40">)</operator><name pos:start="57:41" pos:end="57:55"><name pos:start="57:41" pos:end="57:42">ka</name><operator pos:start="57:43" pos:end="57:44">-&gt;</operator><name pos:start="57:45" pos:end="57:55">sa_restorer</name></name><operator pos:start="57:56" pos:end="57:56">)</operator><operator pos:start="57:57" pos:end="57:57">-</operator><literal type="number" pos:start="57:58" pos:end="57:58">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="85:5">else <block pos:start="59:12" pos:end="85:5">{<block_content pos:start="61:9" pos:end="83:58">

        <decl_stmt pos:start="61:9" pos:end="61:19"><decl pos:start="61:9" pos:end="61:18"><type pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:16">uint32_t</name></type> <name pos:start="61:18" pos:end="61:18">t</name></decl>;</decl_stmt>

        <comment type="block" pos:start="63:9" pos:end="63:53">/* Note, these encodings are _big endian_! */</comment>

        <comment type="block" pos:start="65:9" pos:end="65:42">/* addi r12, r0, __NR_sigreturn */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:47"><expr pos:start="67:9" pos:end="67:46"><name pos:start="67:9" pos:end="67:9">t</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <literal type="number" pos:start="67:13" pos:end="67:24">0x31800000UL</literal> <operator pos:start="67:26" pos:end="67:26">|</operator> <name pos:start="67:28" pos:end="67:46">TARGET_NR_sigreturn</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:40"><expr pos:start="69:9" pos:end="69:39"><call pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:18">__put_user</name><argument_list pos:start="69:19" pos:end="69:39">(<argument pos:start="69:20" pos:end="69:20"><expr pos:start="69:20" pos:end="69:20"><name pos:start="69:20" pos:end="69:20">t</name></expr></argument>, <argument pos:start="69:23" pos:end="69:38"><expr pos:start="69:23" pos:end="69:38"><name pos:start="69:23" pos:end="69:34"><name pos:start="69:23" pos:end="69:27">frame</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:34">tramp</name></name> <operator pos:start="69:36" pos:end="69:36">+</operator> <literal type="number" pos:start="69:38" pos:end="69:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="71:9" pos:end="71:27">/* brki r14, 0x8 */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:25"><expr pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:9">t</name> <operator pos:start="73:11" pos:end="73:11">=</operator> <literal type="number" pos:start="73:13" pos:end="73:24">0xb9cc0008UL</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:40"><expr pos:start="75:9" pos:end="75:39"><call pos:start="75:9" pos:end="75:39"><name pos:start="75:9" pos:end="75:18">__put_user</name><argument_list pos:start="75:19" pos:end="75:39">(<argument pos:start="75:20" pos:end="75:20"><expr pos:start="75:20" pos:end="75:20"><name pos:start="75:20" pos:end="75:20">t</name></expr></argument>, <argument pos:start="75:23" pos:end="75:38"><expr pos:start="75:23" pos:end="75:38"><name pos:start="75:23" pos:end="75:34"><name pos:start="75:23" pos:end="75:27">frame</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:34">tramp</name></name> <operator pos:start="75:36" pos:end="75:36">+</operator> <literal type="number" pos:start="75:38" pos:end="75:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="79:9" pos:end="81:61">/* Return from sighandler will jump to the tramp.

           Negative 8 offset because return is rtsd r15, 8 */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:58"><expr pos:start="83:9" pos:end="83:57"><name pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:11">env</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:17">regs</name><index pos:start="83:18" pos:end="83:21">[<expr pos:start="83:19" pos:end="83:20"><literal type="number" pos:start="83:19" pos:end="83:20">15</literal></expr>]</index></name> <operator pos:start="83:23" pos:end="83:23">=</operator> <operator pos:start="83:25" pos:end="83:25">(</operator><operator pos:start="83:26" pos:end="83:26">(</operator><name pos:start="83:27" pos:end="83:34">unsigned</name> <name pos:start="83:36" pos:end="83:39">long</name><operator pos:start="83:40" pos:end="83:40">)</operator><name pos:start="83:41" pos:end="83:52"><name pos:start="83:41" pos:end="83:45">frame</name><operator pos:start="83:46" pos:end="83:47">-&gt;</operator><name pos:start="83:48" pos:end="83:52">tramp</name></name><operator pos:start="83:53" pos:end="83:53">)</operator> <operator pos:start="83:55" pos:end="83:55">-</operator> <literal type="number" pos:start="83:57" pos:end="83:57">8</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="89:5" pos:end="91:22"><if pos:start="89:5" pos:end="91:22">if <condition pos:start="89:8" pos:end="89:12">(<expr pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:11">err</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:22"><block_content pos:start="91:9" pos:end="91:22">

        <goto pos:start="91:9" pos:end="91:22">goto <name pos:start="91:14" pos:end="91:21">badframe</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="95:5" pos:end="95:45">/* Set up registers for signal handler */</comment>

    <expr_stmt pos:start="97:5" pos:end="97:30"><expr pos:start="97:5" pos:end="97:29"><name pos:start="97:5" pos:end="97:16"><name pos:start="97:5" pos:end="97:7">env</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:13">regs</name><index pos:start="97:14" pos:end="97:16">[<expr pos:start="97:15" pos:end="97:15"><literal type="number" pos:start="97:15" pos:end="97:15">1</literal></expr>]</index></name> <operator pos:start="97:18" pos:end="97:18">=</operator> <name pos:start="97:20" pos:end="97:29">frame_addr</name></expr>;</expr_stmt>

    <comment type="block" pos:start="99:5" pos:end="99:30">/* Signal handler args: */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:23"><expr pos:start="101:5" pos:end="101:22"><name pos:start="101:5" pos:end="101:16"><name pos:start="101:5" pos:end="101:7">env</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:13">regs</name><index pos:start="101:14" pos:end="101:16">[<expr pos:start="101:15" pos:end="101:15"><literal type="number" pos:start="101:15" pos:end="101:15">5</literal></expr>]</index></name> <operator pos:start="101:18" pos:end="101:18">=</operator> <name pos:start="101:20" pos:end="101:22">sig</name></expr>;</expr_stmt> <comment type="block" pos:start="101:25" pos:end="101:43">/* Arg 0: signum */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:21"><expr pos:start="103:5" pos:end="103:20"><name pos:start="103:5" pos:end="103:16"><name pos:start="103:5" pos:end="103:7">env</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:13">regs</name><index pos:start="103:14" pos:end="103:16">[<expr pos:start="103:15" pos:end="103:15"><literal type="number" pos:start="103:15" pos:end="103:15">6</literal></expr>]</index></name> <operator pos:start="103:18" pos:end="103:18">=</operator> <literal type="number" pos:start="103:20" pos:end="103:20">0</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="105:5" pos:end="105:27">/* arg 1: sigcontext */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:62"><expr pos:start="107:5" pos:end="107:61"><name pos:start="107:5" pos:end="107:16"><name pos:start="107:5" pos:end="107:7">env</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:13">regs</name><index pos:start="107:14" pos:end="107:16">[<expr pos:start="107:15" pos:end="107:15"><literal type="number" pos:start="107:15" pos:end="107:15">7</literal></expr>]</index></name> <operator pos:start="107:18" pos:end="107:18">=</operator> <name pos:start="107:20" pos:end="107:29">frame_addr</name> <operator pos:start="107:31" pos:end="107:32">+=</operator> <call pos:start="107:34" pos:end="107:61"><name pos:start="107:34" pos:end="107:41">offsetof</name><argument_list pos:start="107:42" pos:end="107:61">(<argument pos:start="107:43" pos:end="107:56"><expr pos:start="107:43" pos:end="107:56"><call pos:start="107:43" pos:end="107:56"><name pos:start="107:43" pos:end="107:48">typeof</name><argument_list pos:start="107:49" pos:end="107:56">(<argument pos:start="107:50" pos:end="107:55"><expr pos:start="107:50" pos:end="107:55"><operator pos:start="107:50" pos:end="107:50">*</operator><name pos:start="107:51" pos:end="107:55">frame</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="107:59" pos:end="107:60"><expr pos:start="107:59" pos:end="107:60"><name pos:start="107:59" pos:end="107:60">uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="111:5" pos:end="111:54">/* Offset of 4 to handle microblaze rtid r14, 0 */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:55"><expr pos:start="113:5" pos:end="113:54"><name pos:start="113:5" pos:end="113:21"><name pos:start="113:5" pos:end="113:7">env</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:14">sregs</name><index pos:start="113:15" pos:end="113:21">[<expr pos:start="113:16" pos:end="113:20"><name pos:start="113:16" pos:end="113:20">SR_PC</name></expr>]</index></name> <operator pos:start="113:23" pos:end="113:23">=</operator> <operator pos:start="113:25" pos:end="113:25">(</operator><name pos:start="113:26" pos:end="113:33">unsigned</name> <name pos:start="113:35" pos:end="113:38">long</name><operator pos:start="113:39" pos:end="113:39">)</operator><name pos:start="113:40" pos:end="113:54"><name pos:start="113:40" pos:end="113:41">ka</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:54">_sa_handler</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:45"><expr pos:start="117:5" pos:end="117:44"><call pos:start="117:5" pos:end="117:44"><name pos:start="117:5" pos:end="117:22">unlock_user_struct</name><argument_list pos:start="117:23" pos:end="117:44">(<argument pos:start="117:24" pos:end="117:28"><expr pos:start="117:24" pos:end="117:28"><name pos:start="117:24" pos:end="117:28">frame</name></expr></argument>, <argument pos:start="117:31" pos:end="117:40"><expr pos:start="117:31" pos:end="117:40"><name pos:start="117:31" pos:end="117:40">frame_addr</name></expr></argument>, <argument pos:start="117:43" pos:end="117:43"><expr pos:start="117:43" pos:end="117:43"><literal type="number" pos:start="117:43" pos:end="117:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="119:5" pos:end="119:11">return;</return>

  <label pos:start="121:3" pos:end="121:11"><name pos:start="121:3" pos:end="121:10">badframe</name>:</label>

    <expr_stmt pos:start="123:5" pos:end="123:45"><expr pos:start="123:5" pos:end="123:44"><call pos:start="123:5" pos:end="123:44"><name pos:start="123:5" pos:end="123:22">unlock_user_struct</name><argument_list pos:start="123:23" pos:end="123:44">(<argument pos:start="123:24" pos:end="123:28"><expr pos:start="123:24" pos:end="123:28"><name pos:start="123:24" pos:end="123:28">frame</name></expr></argument>, <argument pos:start="123:31" pos:end="123:40"><expr pos:start="123:31" pos:end="123:40"><name pos:start="123:31" pos:end="123:40">frame_addr</name></expr></argument>, <argument pos:start="123:43" pos:end="123:43"><expr pos:start="123:43" pos:end="123:43"><literal type="number" pos:start="123:43" pos:end="123:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:30"><expr pos:start="125:5" pos:end="125:29"><call pos:start="125:5" pos:end="125:29"><name pos:start="125:5" pos:end="125:13">force_sig</name><argument_list pos:start="125:14" pos:end="125:29">(<argument pos:start="125:15" pos:end="125:28"><expr pos:start="125:15" pos:end="125:28"><name pos:start="125:15" pos:end="125:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
