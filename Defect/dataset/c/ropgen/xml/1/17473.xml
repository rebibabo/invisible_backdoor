<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17473.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:34">do_subchannel_work_passthrough</name><parameter_list pos:start="1:35" pos:end="1:49">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:45"><name pos:start="1:36" pos:end="1:43">SubchDev</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">sch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">SCSW</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">s</name> <init pos:start="7:13" pos:end="7:36">= <expr pos:start="7:15" pos:end="7:36"><operator pos:start="7:15" pos:end="7:15">&amp;</operator><name pos:start="7:16" pos:end="7:36"><name pos:start="7:16" pos:end="7:18">sch</name><operator pos:start="7:19" pos:end="7:20">-&gt;</operator><name pos:start="7:21" pos:end="7:31">curr_status</name><operator pos:start="7:32" pos:end="7:32">.</operator><name pos:start="7:33" pos:end="7:36">scsw</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="27:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:39">(<expr pos:start="11:9" pos:end="11:38"><name pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:15">ctrl</name></name> <operator pos:start="11:17" pos:end="11:17">&amp;</operator> <name pos:start="11:19" pos:end="11:38">SCSW_FCTL_CLEAR_FUNC</name></expr>)</condition> <block pos:start="11:41" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:35">

        <comment type="block" pos:start="13:9" pos:end="13:34">/* TODO: Clear handling */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:35"><expr pos:start="15:9" pos:end="15:34"><call pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:29">sch_handle_clear_func</name><argument_list pos:start="15:30" pos:end="15:34">(<argument pos:start="15:31" pos:end="15:33"><expr pos:start="15:31" pos:end="15:33"><name pos:start="15:31" pos:end="15:33">sch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="23:5">else if <condition pos:start="17:15" pos:end="17:45">(<expr pos:start="17:16" pos:end="17:44"><name pos:start="17:16" pos:end="17:22"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:22">ctrl</name></name> <operator pos:start="17:24" pos:end="17:24">&amp;</operator> <name pos:start="17:26" pos:end="17:44">SCSW_FCTL_HALT_FUNC</name></expr>)</condition> <block pos:start="17:47" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:34">

        <comment type="block" pos:start="19:9" pos:end="19:33">/* TODO: Halt handling */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><call pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:28">sch_handle_halt_func</name><argument_list pos:start="21:29" pos:end="21:33">(<argument pos:start="21:30" pos:end="21:32"><expr pos:start="21:30" pos:end="21:32"><name pos:start="21:30" pos:end="21:32">sch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="27:5">else if <condition pos:start="23:15" pos:end="23:46">(<expr pos:start="23:16" pos:end="23:45"><name pos:start="23:16" pos:end="23:22"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:22">ctrl</name></name> <operator pos:start="23:24" pos:end="23:24">&amp;</operator> <name pos:start="23:26" pos:end="23:45">SCSW_FCTL_START_FUNC</name></expr>)</condition> <block pos:start="23:48" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:53">

        <expr_stmt pos:start="25:9" pos:end="25:53"><expr pos:start="25:9" pos:end="25:52"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:52"><name pos:start="25:15" pos:end="25:47">sch_handle_start_func_passthrough</name><argument_list pos:start="25:48" pos:end="25:52">(<argument pos:start="25:49" pos:end="25:51"><expr pos:start="25:49" pos:end="25:51"><name pos:start="25:49" pos:end="25:51">sch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
