<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21936.c" pos:tabs="8"><function pos:start="1:1" pos:end="174:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">decode_mvs</name><parameter_list pos:start="1:16" pos:end="1:69">(<parameter pos:start="1:17" pos:end="1:29"><decl pos:start="1:17" pos:end="1:29"><type pos:start="1:17" pos:end="1:29"><name pos:start="1:17" pos:end="1:26">VP8Context</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:29">s</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:44">VP8Macroblock</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">mb</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:58"><decl pos:start="1:51" pos:end="1:58"><type pos:start="1:51" pos:end="1:58"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:58">mb_x</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:68"><decl pos:start="1:61" pos:end="1:68"><type pos:start="1:61" pos:end="1:68"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:68">mb_y</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="174:1">{<block_content pos:start="5:5" pos:end="172:5">

    <decl_stmt pos:start="5:5" pos:end="9:58"><decl pos:start="5:5" pos:end="9:57"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">VP8Macroblock</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:29"><name pos:start="5:20" pos:end="5:26">mb_edge</name><index pos:start="5:27" pos:end="5:29">[<expr pos:start="5:28" pos:end="5:28"><literal type="number" pos:start="5:28" pos:end="5:28">3</literal></expr>]</index></name> <init pos:start="5:31" pos:end="9:57">= <expr pos:start="5:33" pos:end="9:57"><block pos:start="5:33" pos:end="9:57">{ <expr pos:start="5:35" pos:end="5:40"><name pos:start="5:35" pos:end="5:36">mb</name> <operator pos:start="5:38" pos:end="5:38">+</operator> <literal type="number" pos:start="5:40" pos:end="5:40">2</literal></expr> <comment type="block" pos:start="5:42" pos:end="5:50">/* top */</comment>,

                                  <expr pos:start="7:35" pos:end="7:40"><name pos:start="7:35" pos:end="7:36">mb</name> <operator pos:start="7:38" pos:end="7:38">-</operator> <literal type="number" pos:start="7:40" pos:end="7:40">1</literal></expr> <comment type="block" pos:start="7:42" pos:end="7:51">/* left */</comment>,

                                  <expr pos:start="9:35" pos:end="9:40"><name pos:start="9:35" pos:end="9:36">mb</name> <operator pos:start="9:38" pos:end="9:38">+</operator> <literal type="number" pos:start="9:40" pos:end="9:40">1</literal></expr> <comment type="block" pos:start="9:42" pos:end="9:55">/* top-left */</comment> }</block></expr></init></decl>;</decl_stmt>

    <enum pos:start="11:5" pos:end="11:58">enum <block pos:start="11:10" pos:end="11:57">{ <decl pos:start="11:12" pos:end="11:19"><name pos:start="11:12" pos:end="11:19">CNT_ZERO</name></decl>, <decl pos:start="11:22" pos:end="11:32"><name pos:start="11:22" pos:end="11:32">CNT_NEAREST</name></decl>, <decl pos:start="11:35" pos:end="11:42"><name pos:start="11:35" pos:end="11:42">CNT_NEAR</name></decl>, <decl pos:start="11:45" pos:end="11:55"><name pos:start="11:45" pos:end="11:55">CNT_SPLITMV</name></decl> }</block>;</enum>

    <enum pos:start="13:5" pos:end="13:59">enum <block pos:start="13:10" pos:end="13:58">{ <decl pos:start="13:12" pos:end="13:23"><name pos:start="13:12" pos:end="13:23">VP8_EDGE_TOP</name></decl>, <decl pos:start="13:26" pos:end="13:38"><name pos:start="13:26" pos:end="13:38">VP8_EDGE_LEFT</name></decl>, <decl pos:start="13:41" pos:end="13:56"><name pos:start="13:41" pos:end="13:56">VP8_EDGE_TOPLEFT</name></decl> }</block>;</enum>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">idx</name> <init pos:start="15:13" pos:end="15:22">= <expr pos:start="15:15" pos:end="15:22"><name pos:start="15:15" pos:end="15:22">CNT_ZERO</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:52"><decl pos:start="17:5" pos:end="17:51"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:21">cur_sign_bias</name> <init pos:start="17:23" pos:end="17:51">= <expr pos:start="17:25" pos:end="17:51"><name pos:start="17:25" pos:end="17:51"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:36">sign_bias</name><index pos:start="17:37" pos:end="17:51">[<expr pos:start="17:38" pos:end="17:50"><name pos:start="17:38" pos:end="17:50"><name pos:start="17:38" pos:end="17:39">mb</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:50">ref_frame</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:37"><decl pos:start="19:5" pos:end="19:36"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:10">int8_t</name> <modifier pos:start="19:12" pos:end="19:12">*</modifier></type><name pos:start="19:13" pos:end="19:21">sign_bias</name> <init pos:start="19:23" pos:end="19:36">= <expr pos:start="19:25" pos:end="19:36"><name pos:start="19:25" pos:end="19:36"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:36">sign_bias</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">VP56mv</name></type> <name pos:start="21:12" pos:end="21:21"><name pos:start="21:12" pos:end="21:18">near_mv</name><index pos:start="21:19" pos:end="21:21">[<expr pos:start="21:20" pos:end="21:20"><literal type="number" pos:start="21:20" pos:end="21:20">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:27"><decl pos:start="23:5" pos:end="23:26"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">uint8_t</name></type> <name pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:15">cnt</name><index pos:start="23:16" pos:end="23:18">[<expr pos:start="23:17" pos:end="23:17"><literal type="number" pos:start="23:17" pos:end="23:17">4</literal></expr>]</index></name> <init pos:start="23:20" pos:end="23:26">= <expr pos:start="23:22" pos:end="23:26"><block pos:start="23:22" pos:end="23:26">{ <expr pos:start="23:24" pos:end="23:24"><literal type="number" pos:start="23:24" pos:end="23:24">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:30"><decl pos:start="25:5" pos:end="25:29"><type pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:18">VP56RangeCoder</name> <modifier pos:start="25:20" pos:end="25:20">*</modifier></type><name pos:start="25:21" pos:end="25:21">c</name> <init pos:start="25:23" pos:end="25:29">= <expr pos:start="25:25" pos:end="25:29"><operator pos:start="25:25" pos:end="25:25">&amp;</operator><name pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:26">s</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:29">c</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><call pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:13">AV_ZERO32</name><argument_list pos:start="29:14" pos:end="29:26">(<argument pos:start="29:15" pos:end="29:25"><expr pos:start="29:15" pos:end="29:25"><operator pos:start="29:15" pos:end="29:15">&amp;</operator><name pos:start="29:16" pos:end="29:25"><name pos:start="29:16" pos:end="29:22">near_mv</name><index pos:start="29:23" pos:end="29:25">[<expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="75:0"><expr pos:start="31:5" pos:end="31:26"><call pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:13">AV_ZERO32</name><argument_list pos:start="31:14" pos:end="31:26">(<argument pos:start="31:15" pos:end="31:25"><expr pos:start="31:15" pos:end="31:25"><operator pos:start="31:15" pos:end="31:15">&amp;</operator><name pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:22">near_mv</name><index pos:start="31:23" pos:end="31:25">[<expr pos:start="31:24" pos:end="31:24"><literal type="number" pos:start="31:24" pos:end="31:24">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <comment type="block" pos:start="36:5" pos:end="36:46">/* Process MB on top, left and top-left */</comment>

    <cpp:define pos:start="38:5" pos:end="74:5">#<cpp:directive pos:start="38:6" pos:end="38:11">define</cpp:directive> <cpp:macro pos:start="38:13" pos:end="38:28"><name pos:start="38:13" pos:end="38:25">MV_EDGE_CHECK</name><parameter_list pos:start="38:26" pos:end="38:28">(<parameter pos:start="38:27" pos:end="38:27"><type pos:start="38:27" pos:end="38:27"><name pos:start="38:27" pos:end="38:27">n</name></type></parameter>)</parameter_list></cpp:macro>\

    <cpp:value pos:start="40:5" pos:end="74:5">{\

        VP8Macroblock *edge = mb_edge[n];\

        int edge_ref = edge-&gt;ref_frame;\

        if (edge_ref != VP56_FRAME_CURRENT) {\

            uint32_t mv = AV_RN32A(&amp;edge-&gt;mv);\

            if (mv) {\

                if (cur_sign_bias != sign_bias[edge_ref]) {\

                    <comment type="block" pos:start="54:21" pos:end="54:58">/* SWAR negate of the values in mv. */</comment>\

                    mv = ~mv;\

                    mv = ((mv&amp;0x7fff7fff) + 0x00010001) ^ (mv&amp;0x80008000);\

                }\

                if (!n || mv != AV_RN32A(&amp;near_mv[idx]))\

                    AV_WN32A(&amp;near_mv[++idx], mv);\

                cnt[idx]      += 1 + (n != 2);\

            } else\

                cnt[CNT_ZERO] += 1 + (n != 2);\

        }\

    }</cpp:value></cpp:define>



    <macro pos:start="78:5" pos:end="78:20"><name pos:start="78:5" pos:end="78:17">MV_EDGE_CHECK</name><argument_list pos:start="78:18" pos:end="78:20">(<argument pos:start="78:19" pos:end="78:19"><literal type="number" pos:start="78:19" pos:end="78:19">0</literal></argument>)</argument_list></macro>

    <macro pos:start="80:5" pos:end="80:20"><name pos:start="80:5" pos:end="80:17">MV_EDGE_CHECK</name><argument_list pos:start="80:18" pos:end="80:20">(<argument pos:start="80:19" pos:end="80:19"><literal type="number" pos:start="80:19" pos:end="80:19">1</literal></argument>)</argument_list></macro>

    <macro pos:start="82:5" pos:end="82:20"><name pos:start="82:5" pos:end="82:17">MV_EDGE_CHECK</name><argument_list pos:start="82:18" pos:end="82:20">(<argument pos:start="82:19" pos:end="82:19"><literal type="number" pos:start="82:19" pos:end="82:19">2</literal></argument>)</argument_list></macro>



    <expr_stmt pos:start="86:5" pos:end="86:44"><expr pos:start="86:5" pos:end="86:43"><name pos:start="86:5" pos:end="86:20"><name pos:start="86:5" pos:end="86:6">mb</name><operator pos:start="86:7" pos:end="86:8">-&gt;</operator><name pos:start="86:9" pos:end="86:20">partitioning</name></name> <operator pos:start="86:22" pos:end="86:22">=</operator> <name pos:start="86:24" pos:end="86:43">VP8_SPLITMVMODE_NONE</name></expr>;</expr_stmt>

    <if_stmt pos:start="88:5" pos:end="172:5"><if pos:start="88:5" pos:end="164:5">if <condition pos:start="88:8" pos:end="88:74">(<expr pos:start="88:9" pos:end="88:73"><call pos:start="88:9" pos:end="88:73"><name pos:start="88:9" pos:end="88:33">vp56_rac_get_prob_branchy</name><argument_list pos:start="88:34" pos:end="88:73">(<argument pos:start="88:35" pos:end="88:35"><expr pos:start="88:35" pos:end="88:35"><name pos:start="88:35" pos:end="88:35">c</name></expr></argument>, <argument pos:start="88:38" pos:end="88:72"><expr pos:start="88:38" pos:end="88:72"><name pos:start="88:38" pos:end="88:72"><name pos:start="88:38" pos:end="88:54">vp8_mode_contexts</name><index pos:start="88:55" pos:end="88:69">[<expr pos:start="88:56" pos:end="88:68"><name pos:start="88:56" pos:end="88:68"><name pos:start="88:56" pos:end="88:58">cnt</name><index pos:start="88:59" pos:end="88:68">[<expr pos:start="88:60" pos:end="88:67"><name pos:start="88:60" pos:end="88:67">CNT_ZERO</name></expr>]</index></name></expr>]</index><index pos:start="88:70" pos:end="88:72">[<expr pos:start="88:71" pos:end="88:71"><literal type="number" pos:start="88:71" pos:end="88:71">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="88:76" pos:end="164:5">{<block_content pos:start="90:9" pos:end="162:9">

        <expr_stmt pos:start="90:9" pos:end="90:33"><expr pos:start="90:9" pos:end="90:32"><name pos:start="90:9" pos:end="90:16"><name pos:start="90:9" pos:end="90:10">mb</name><operator pos:start="90:11" pos:end="90:12">-&gt;</operator><name pos:start="90:13" pos:end="90:16">mode</name></name> <operator pos:start="90:18" pos:end="90:18">=</operator> <name pos:start="90:20" pos:end="90:32">VP8_MVMODE_MV</name></expr>;</expr_stmt>



        <comment type="block" pos:start="94:9" pos:end="94:85">/* If we have three distinct MVs, merge first and last if they're the same */</comment>

        <if_stmt pos:start="96:9" pos:end="98:34"><if pos:start="96:9" pos:end="98:34">if <condition pos:start="96:12" pos:end="96:113">(<expr pos:start="96:13" pos:end="96:112"><name pos:start="96:13" pos:end="96:28"><name pos:start="96:13" pos:end="96:15">cnt</name><index pos:start="96:16" pos:end="96:28">[<expr pos:start="96:17" pos:end="96:27"><name pos:start="96:17" pos:end="96:27">CNT_SPLITMV</name></expr>]</index></name> <operator pos:start="96:30" pos:end="96:31">&amp;&amp;</operator> <call pos:start="96:33" pos:end="96:68"><name pos:start="96:33" pos:end="96:40">AV_RN32A</name><argument_list pos:start="96:41" pos:end="96:68">(<argument pos:start="96:42" pos:end="96:67"><expr pos:start="96:42" pos:end="96:67"><operator pos:start="96:42" pos:end="96:42">&amp;</operator><name pos:start="96:43" pos:end="96:67"><name pos:start="96:43" pos:end="96:49">near_mv</name><index pos:start="96:50" pos:end="96:67">[<expr pos:start="96:51" pos:end="96:66"><literal type="number" pos:start="96:51" pos:end="96:53">1</literal> <operator pos:start="96:53" pos:end="96:53">+</operator> <name pos:start="96:55" pos:end="96:66">VP8_EDGE_TOP</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="96:70" pos:end="96:71">==</operator> <call pos:start="96:73" pos:end="96:112"><name pos:start="96:73" pos:end="96:80">AV_RN32A</name><argument_list pos:start="96:81" pos:end="96:112">(<argument pos:start="96:82" pos:end="96:111"><expr pos:start="96:82" pos:end="96:111"><operator pos:start="96:82" pos:end="96:82">&amp;</operator><name pos:start="96:83" pos:end="96:111"><name pos:start="96:83" pos:end="96:89">near_mv</name><index pos:start="96:90" pos:end="96:111">[<expr pos:start="96:91" pos:end="96:110"><literal type="number" pos:start="96:91" pos:end="96:93">1</literal> <operator pos:start="96:93" pos:end="96:93">+</operator> <name pos:start="96:95" pos:end="96:110">VP8_EDGE_TOPLEFT</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="98:13" pos:end="98:34"><block_content pos:start="98:13" pos:end="98:34">

            <expr_stmt pos:start="98:13" pos:end="98:34"><expr pos:start="98:13" pos:end="98:33"><name pos:start="98:13" pos:end="98:28"><name pos:start="98:13" pos:end="98:15">cnt</name><index pos:start="98:16" pos:end="98:28">[<expr pos:start="98:17" pos:end="98:27"><name pos:start="98:17" pos:end="98:27">CNT_NEAREST</name></expr>]</index></name> <operator pos:start="98:30" pos:end="98:31">+=</operator> <literal type="number" pos:start="98:33" pos:end="98:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="102:9" pos:end="102:48">/* Swap near and nearest if necessary */</comment>

        <if_stmt pos:start="104:9" pos:end="110:9"><if pos:start="104:9" pos:end="110:9">if <condition pos:start="104:12" pos:end="104:45">(<expr pos:start="104:13" pos:end="104:44"><name pos:start="104:13" pos:end="104:25"><name pos:start="104:13" pos:end="104:15">cnt</name><index pos:start="104:16" pos:end="104:25">[<expr pos:start="104:17" pos:end="104:24"><name pos:start="104:17" pos:end="104:24">CNT_NEAR</name></expr>]</index></name> <operator pos:start="104:27" pos:end="104:27">&gt;</operator> <name pos:start="104:29" pos:end="104:44"><name pos:start="104:29" pos:end="104:31">cnt</name><index pos:start="104:32" pos:end="104:44">[<expr pos:start="104:33" pos:end="104:43"><name pos:start="104:33" pos:end="104:43">CNT_NEAREST</name></expr>]</index></name></expr>)</condition> <block pos:start="104:47" pos:end="110:9">{<block_content pos:start="106:13" pos:end="108:69">

            <expr_stmt pos:start="106:13" pos:end="106:69"><expr pos:start="106:13" pos:end="106:68"><call pos:start="106:13" pos:end="106:68"><name pos:start="106:13" pos:end="106:18">FFSWAP</name><argument_list pos:start="106:19" pos:end="106:68">(<argument pos:start="106:20" pos:end="106:26"><expr pos:start="106:20" pos:end="106:26"><name pos:start="106:20" pos:end="106:26">uint8_t</name></expr></argument>,     <argument pos:start="106:33" pos:end="106:48"><expr pos:start="106:33" pos:end="106:48"><name pos:start="106:33" pos:end="106:48"><name pos:start="106:33" pos:end="106:35">cnt</name><index pos:start="106:36" pos:end="106:48">[<expr pos:start="106:37" pos:end="106:47"><name pos:start="106:37" pos:end="106:47">CNT_NEAREST</name></expr>]</index></name></expr></argument>,     <argument pos:start="106:55" pos:end="106:67"><expr pos:start="106:55" pos:end="106:67"><name pos:start="106:55" pos:end="106:67"><name pos:start="106:55" pos:end="106:57">cnt</name><index pos:start="106:58" pos:end="106:67">[<expr pos:start="106:59" pos:end="106:66"><name pos:start="106:59" pos:end="106:66">CNT_NEAR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="108:13" pos:end="108:69"><expr pos:start="108:13" pos:end="108:68"><call pos:start="108:13" pos:end="108:68"><name pos:start="108:13" pos:end="108:18">FFSWAP</name><argument_list pos:start="108:19" pos:end="108:68">( <argument pos:start="108:21" pos:end="108:26"><expr pos:start="108:21" pos:end="108:26"><name pos:start="108:21" pos:end="108:26">VP56mv</name></expr></argument>, <argument pos:start="108:29" pos:end="108:48"><expr pos:start="108:29" pos:end="108:48"><name pos:start="108:29" pos:end="108:48"><name pos:start="108:29" pos:end="108:35">near_mv</name><index pos:start="108:36" pos:end="108:48">[<expr pos:start="108:37" pos:end="108:47"><name pos:start="108:37" pos:end="108:47">CNT_NEAREST</name></expr>]</index></name></expr></argument>, <argument pos:start="108:51" pos:end="108:67"><expr pos:start="108:51" pos:end="108:67"><name pos:start="108:51" pos:end="108:67"><name pos:start="108:51" pos:end="108:57">near_mv</name><index pos:start="108:58" pos:end="108:67">[<expr pos:start="108:59" pos:end="108:66"><name pos:start="108:59" pos:end="108:66">CNT_NEAR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="114:9" pos:end="162:9"><if pos:start="114:9" pos:end="156:9">if <condition pos:start="114:12" pos:end="114:81">(<expr pos:start="114:13" pos:end="114:80"><call pos:start="114:13" pos:end="114:80"><name pos:start="114:13" pos:end="114:37">vp56_rac_get_prob_branchy</name><argument_list pos:start="114:38" pos:end="114:80">(<argument pos:start="114:39" pos:end="114:39"><expr pos:start="114:39" pos:end="114:39"><name pos:start="114:39" pos:end="114:39">c</name></expr></argument>, <argument pos:start="114:42" pos:end="114:79"><expr pos:start="114:42" pos:end="114:79"><name pos:start="114:42" pos:end="114:79"><name pos:start="114:42" pos:end="114:58">vp8_mode_contexts</name><index pos:start="114:59" pos:end="114:76">[<expr pos:start="114:60" pos:end="114:75"><name pos:start="114:60" pos:end="114:75"><name pos:start="114:60" pos:end="114:62">cnt</name><index pos:start="114:63" pos:end="114:75">[<expr pos:start="114:64" pos:end="114:74"><name pos:start="114:64" pos:end="114:74">CNT_NEAREST</name></expr>]</index></name></expr>]</index><index pos:start="114:77" pos:end="114:79">[<expr pos:start="114:78" pos:end="114:78"><literal type="number" pos:start="114:78" pos:end="114:78">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="114:83" pos:end="156:9">{<block_content pos:start="116:13" pos:end="154:13">

            <if_stmt pos:start="116:13" pos:end="154:13"><if pos:start="116:13" pos:end="148:13">if <condition pos:start="116:16" pos:end="116:82">(<expr pos:start="116:17" pos:end="116:81"><call pos:start="116:17" pos:end="116:81"><name pos:start="116:17" pos:end="116:41">vp56_rac_get_prob_branchy</name><argument_list pos:start="116:42" pos:end="116:81">(<argument pos:start="116:43" pos:end="116:43"><expr pos:start="116:43" pos:end="116:43"><name pos:start="116:43" pos:end="116:43">c</name></expr></argument>, <argument pos:start="116:46" pos:end="116:80"><expr pos:start="116:46" pos:end="116:80"><name pos:start="116:46" pos:end="116:80"><name pos:start="116:46" pos:end="116:62">vp8_mode_contexts</name><index pos:start="116:63" pos:end="116:77">[<expr pos:start="116:64" pos:end="116:76"><name pos:start="116:64" pos:end="116:76"><name pos:start="116:64" pos:end="116:66">cnt</name><index pos:start="116:67" pos:end="116:76">[<expr pos:start="116:68" pos:end="116:75"><name pos:start="116:68" pos:end="116:75">CNT_NEAR</name></expr>]</index></name></expr>]</index><index pos:start="116:78" pos:end="116:80">[<expr pos:start="116:79" pos:end="116:79"><literal type="number" pos:start="116:79" pos:end="116:79">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="116:84" pos:end="148:13">{<block_content pos:start="122:17" pos:end="146:17">



                <comment type="block" pos:start="120:17" pos:end="120:70">/* Choose the best mv out of 0,0 and the nearest mv */</comment>

                <expr_stmt pos:start="122:17" pos:end="122:95"><expr pos:start="122:17" pos:end="122:94"><call pos:start="122:17" pos:end="122:94"><name pos:start="122:17" pos:end="122:24">clamp_mv</name><argument_list pos:start="122:25" pos:end="122:94">(<argument pos:start="122:26" pos:end="122:26"><expr pos:start="122:26" pos:end="122:26"><name pos:start="122:26" pos:end="122:26">s</name></expr></argument>, <argument pos:start="122:29" pos:end="122:35"><expr pos:start="122:29" pos:end="122:35"><operator pos:start="122:29" pos:end="122:29">&amp;</operator><name pos:start="122:30" pos:end="122:35"><name pos:start="122:30" pos:end="122:31">mb</name><operator pos:start="122:32" pos:end="122:33">-&gt;</operator><name pos:start="122:34" pos:end="122:35">mv</name></name></expr></argument>, <argument pos:start="122:38" pos:end="122:93"><expr pos:start="122:38" pos:end="122:93"><operator pos:start="122:38" pos:end="122:38">&amp;</operator><name pos:start="122:39" pos:end="122:93"><name pos:start="122:39" pos:end="122:45">near_mv</name><index pos:start="122:46" pos:end="122:93">[<expr pos:start="122:47" pos:end="122:92"><name pos:start="122:47" pos:end="122:54">CNT_ZERO</name> <operator pos:start="122:56" pos:end="122:56">+</operator> <operator pos:start="122:58" pos:end="122:58">(</operator><name pos:start="122:59" pos:end="122:74"><name pos:start="122:59" pos:end="122:61">cnt</name><index pos:start="122:62" pos:end="122:74">[<expr pos:start="122:63" pos:end="122:73"><name pos:start="122:63" pos:end="122:73">CNT_NEAREST</name></expr>]</index></name> <operator pos:start="122:76" pos:end="122:77">&gt;=</operator> <name pos:start="122:79" pos:end="122:91"><name pos:start="122:79" pos:end="122:81">cnt</name><index pos:start="122:82" pos:end="122:91">[<expr pos:start="122:83" pos:end="122:90"><name pos:start="122:83" pos:end="122:90">CNT_ZERO</name></expr>]</index></name><operator pos:start="122:92" pos:end="122:92">)</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="124:17" pos:end="128:90"><expr pos:start="124:17" pos:end="128:89"><name pos:start="124:17" pos:end="124:32"><name pos:start="124:17" pos:end="124:19">cnt</name><index pos:start="124:20" pos:end="124:32">[<expr pos:start="124:21" pos:end="124:31"><name pos:start="124:21" pos:end="124:31">CNT_SPLITMV</name></expr>]</index></name> <operator pos:start="124:34" pos:end="124:34">=</operator> <operator pos:start="124:36" pos:end="124:36">(</operator><operator pos:start="124:37" pos:end="124:37">(</operator><name pos:start="124:38" pos:end="124:59"><name pos:start="124:38" pos:end="124:44">mb_edge</name><index pos:start="124:45" pos:end="124:59">[<expr pos:start="124:46" pos:end="124:58"><name pos:start="124:46" pos:end="124:58">VP8_EDGE_LEFT</name></expr>]</index></name><operator pos:start="124:60" pos:end="124:61">-&gt;</operator><name pos:start="124:62" pos:end="124:65">mode</name>    <operator pos:start="124:70" pos:end="124:71">==</operator> <name pos:start="124:73" pos:end="124:88">VP8_MVMODE_SPLIT</name><operator pos:start="124:89" pos:end="124:89">)</operator> <operator pos:start="124:91" pos:end="124:91">+</operator>

                                    <operator pos:start="126:37" pos:end="126:37">(</operator><name pos:start="126:38" pos:end="126:58"><name pos:start="126:38" pos:end="126:44">mb_edge</name><index pos:start="126:45" pos:end="126:58">[<expr pos:start="126:46" pos:end="126:57"><name pos:start="126:46" pos:end="126:57">VP8_EDGE_TOP</name></expr>]</index></name><operator pos:start="126:59" pos:end="126:60">-&gt;</operator><name pos:start="126:61" pos:end="126:64">mode</name>     <operator pos:start="126:70" pos:end="126:71">==</operator> <name pos:start="126:73" pos:end="126:88">VP8_MVMODE_SPLIT</name><operator pos:start="126:89" pos:end="126:89">)</operator><operator pos:start="126:90" pos:end="126:90">)</operator> <operator pos:start="126:92" pos:end="126:92">*</operator> <literal type="number" pos:start="126:94" pos:end="126:96">2</literal> <operator pos:start="126:96" pos:end="126:96">+</operator>

                                    <operator pos:start="128:37" pos:end="128:37">(</operator><name pos:start="128:38" pos:end="128:62"><name pos:start="128:38" pos:end="128:44">mb_edge</name><index pos:start="128:45" pos:end="128:62">[<expr pos:start="128:46" pos:end="128:61"><name pos:start="128:46" pos:end="128:61">VP8_EDGE_TOPLEFT</name></expr>]</index></name><operator pos:start="128:63" pos:end="128:64">-&gt;</operator><name pos:start="128:65" pos:end="128:68">mode</name> <operator pos:start="128:70" pos:end="128:71">==</operator> <name pos:start="128:73" pos:end="128:88">VP8_MVMODE_SPLIT</name><operator pos:start="128:89" pos:end="128:89">)</operator></expr>;</expr_stmt>



                <if_stmt pos:start="132:17" pos:end="146:17"><if pos:start="132:17" pos:end="138:17">if <condition pos:start="132:20" pos:end="132:89">(<expr pos:start="132:21" pos:end="132:88"><call pos:start="132:21" pos:end="132:88"><name pos:start="132:21" pos:end="132:45">vp56_rac_get_prob_branchy</name><argument_list pos:start="132:46" pos:end="132:88">(<argument pos:start="132:47" pos:end="132:47"><expr pos:start="132:47" pos:end="132:47"><name pos:start="132:47" pos:end="132:47">c</name></expr></argument>, <argument pos:start="132:50" pos:end="132:87"><expr pos:start="132:50" pos:end="132:87"><name pos:start="132:50" pos:end="132:87"><name pos:start="132:50" pos:end="132:66">vp8_mode_contexts</name><index pos:start="132:67" pos:end="132:84">[<expr pos:start="132:68" pos:end="132:83"><name pos:start="132:68" pos:end="132:83"><name pos:start="132:68" pos:end="132:70">cnt</name><index pos:start="132:71" pos:end="132:83">[<expr pos:start="132:72" pos:end="132:82"><name pos:start="132:72" pos:end="132:82">CNT_SPLITMV</name></expr>]</index></name></expr>]</index><index pos:start="132:85" pos:end="132:87">[<expr pos:start="132:86" pos:end="132:86"><literal type="number" pos:start="132:86" pos:end="132:86">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="132:91" pos:end="138:17">{<block_content pos:start="134:21" pos:end="136:68">

                    <expr_stmt pos:start="134:21" pos:end="134:48"><expr pos:start="134:21" pos:end="134:47"><name pos:start="134:21" pos:end="134:28"><name pos:start="134:21" pos:end="134:22">mb</name><operator pos:start="134:23" pos:end="134:24">-&gt;</operator><name pos:start="134:25" pos:end="134:28">mode</name></name> <operator pos:start="134:30" pos:end="134:30">=</operator> <name pos:start="134:32" pos:end="134:47">VP8_MVMODE_SPLIT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="136:21" pos:end="136:68"><expr pos:start="136:21" pos:end="136:67"><name pos:start="136:21" pos:end="136:26"><name pos:start="136:21" pos:end="136:22">mb</name><operator pos:start="136:23" pos:end="136:24">-&gt;</operator><name pos:start="136:25" pos:end="136:26">mv</name></name> <operator pos:start="136:28" pos:end="136:28">=</operator> <name pos:start="136:30" pos:end="136:67"><name pos:start="136:30" pos:end="136:31">mb</name><operator pos:start="136:32" pos:end="136:33">-&gt;</operator><name pos:start="136:34" pos:end="136:36">bmv</name><index pos:start="136:37" pos:end="136:67">[<expr pos:start="136:38" pos:end="136:66"><call pos:start="136:38" pos:end="136:62"><name pos:start="136:38" pos:end="136:52">decode_splitmvs</name><argument_list pos:start="136:53" pos:end="136:62">(<argument pos:start="136:54" pos:end="136:54"><expr pos:start="136:54" pos:end="136:54"><name pos:start="136:54" pos:end="136:54">s</name></expr></argument>, <argument pos:start="136:57" pos:end="136:57"><expr pos:start="136:57" pos:end="136:57"><name pos:start="136:57" pos:end="136:57">c</name></expr></argument>, <argument pos:start="136:60" pos:end="136:61"><expr pos:start="136:60" pos:end="136:61"><name pos:start="136:60" pos:end="136:61">mb</name></expr></argument>)</argument_list></call> <operator pos:start="136:64" pos:end="136:64">-</operator> <literal type="number" pos:start="136:66" pos:end="136:66">1</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="138:19" pos:end="146:17">else <block pos:start="138:24" pos:end="146:17">{<block_content pos:start="140:21" pos:end="144:40">

                    <expr_stmt pos:start="140:21" pos:end="140:70"><expr pos:start="140:21" pos:end="140:69"><name pos:start="140:21" pos:end="140:28"><name pos:start="140:21" pos:end="140:22">mb</name><operator pos:start="140:23" pos:end="140:24">-&gt;</operator><name pos:start="140:25" pos:end="140:26">mv</name><operator pos:start="140:27" pos:end="140:27">.</operator><name pos:start="140:28" pos:end="140:28">y</name></name> <operator pos:start="140:30" pos:end="140:31">+=</operator> <call pos:start="140:33" pos:end="140:69"><name pos:start="140:33" pos:end="140:49">read_mv_component</name><argument_list pos:start="140:50" pos:end="140:69">(<argument pos:start="140:51" pos:end="140:51"><expr pos:start="140:51" pos:end="140:51"><name pos:start="140:51" pos:end="140:51">c</name></expr></argument>, <argument pos:start="140:54" pos:end="140:68"><expr pos:start="140:54" pos:end="140:68"><name pos:start="140:54" pos:end="140:68"><name pos:start="140:54" pos:end="140:54">s</name><operator pos:start="140:55" pos:end="140:56">-&gt;</operator><name pos:start="140:57" pos:end="140:60">prob</name><operator pos:start="140:61" pos:end="140:62">-&gt;</operator><name pos:start="140:63" pos:end="140:65">mvc</name><index pos:start="140:66" pos:end="140:68">[<expr pos:start="140:67" pos:end="140:67"><literal type="number" pos:start="140:67" pos:end="140:67">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="142:21" pos:end="142:70"><expr pos:start="142:21" pos:end="142:69"><name pos:start="142:21" pos:end="142:28"><name pos:start="142:21" pos:end="142:22">mb</name><operator pos:start="142:23" pos:end="142:24">-&gt;</operator><name pos:start="142:25" pos:end="142:26">mv</name><operator pos:start="142:27" pos:end="142:27">.</operator><name pos:start="142:28" pos:end="142:28">x</name></name> <operator pos:start="142:30" pos:end="142:31">+=</operator> <call pos:start="142:33" pos:end="142:69"><name pos:start="142:33" pos:end="142:49">read_mv_component</name><argument_list pos:start="142:50" pos:end="142:69">(<argument pos:start="142:51" pos:end="142:51"><expr pos:start="142:51" pos:end="142:51"><name pos:start="142:51" pos:end="142:51">c</name></expr></argument>, <argument pos:start="142:54" pos:end="142:68"><expr pos:start="142:54" pos:end="142:68"><name pos:start="142:54" pos:end="142:68"><name pos:start="142:54" pos:end="142:54">s</name><operator pos:start="142:55" pos:end="142:56">-&gt;</operator><name pos:start="142:57" pos:end="142:60">prob</name><operator pos:start="142:61" pos:end="142:62">-&gt;</operator><name pos:start="142:63" pos:end="142:65">mvc</name><index pos:start="142:66" pos:end="142:68">[<expr pos:start="142:67" pos:end="142:67"><literal type="number" pos:start="142:67" pos:end="142:67">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="144:21" pos:end="144:40"><expr pos:start="144:21" pos:end="144:39"><name pos:start="144:21" pos:end="144:30"><name pos:start="144:21" pos:end="144:22">mb</name><operator pos:start="144:23" pos:end="144:24">-&gt;</operator><name pos:start="144:25" pos:end="144:27">bmv</name><index pos:start="144:28" pos:end="144:30">[<expr pos:start="144:29" pos:end="144:29"><literal type="number" pos:start="144:29" pos:end="144:29">0</literal></expr>]</index></name> <operator pos:start="144:32" pos:end="144:32">=</operator> <name pos:start="144:34" pos:end="144:39"><name pos:start="144:34" pos:end="144:35">mb</name><operator pos:start="144:36" pos:end="144:37">-&gt;</operator><name pos:start="144:38" pos:end="144:39">mv</name></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="148:15" pos:end="154:13">else <block pos:start="148:20" pos:end="154:13">{<block_content pos:start="150:17" pos:end="152:36">

                <expr_stmt pos:start="150:17" pos:end="150:57"><expr pos:start="150:17" pos:end="150:56"><call pos:start="150:17" pos:end="150:56"><name pos:start="150:17" pos:end="150:24">clamp_mv</name><argument_list pos:start="150:25" pos:end="150:56">(<argument pos:start="150:26" pos:end="150:26"><expr pos:start="150:26" pos:end="150:26"><name pos:start="150:26" pos:end="150:26">s</name></expr></argument>, <argument pos:start="150:29" pos:end="150:35"><expr pos:start="150:29" pos:end="150:35"><operator pos:start="150:29" pos:end="150:29">&amp;</operator><name pos:start="150:30" pos:end="150:35"><name pos:start="150:30" pos:end="150:31">mb</name><operator pos:start="150:32" pos:end="150:33">-&gt;</operator><name pos:start="150:34" pos:end="150:35">mv</name></name></expr></argument>, <argument pos:start="150:38" pos:end="150:55"><expr pos:start="150:38" pos:end="150:55"><operator pos:start="150:38" pos:end="150:38">&amp;</operator><name pos:start="150:39" pos:end="150:55"><name pos:start="150:39" pos:end="150:45">near_mv</name><index pos:start="150:46" pos:end="150:55">[<expr pos:start="150:47" pos:end="150:54"><name pos:start="150:47" pos:end="150:54">CNT_NEAR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="152:17" pos:end="152:36"><expr pos:start="152:17" pos:end="152:35"><name pos:start="152:17" pos:end="152:26"><name pos:start="152:17" pos:end="152:18">mb</name><operator pos:start="152:19" pos:end="152:20">-&gt;</operator><name pos:start="152:21" pos:end="152:23">bmv</name><index pos:start="152:24" pos:end="152:26">[<expr pos:start="152:25" pos:end="152:25"><literal type="number" pos:start="152:25" pos:end="152:25">0</literal></expr>]</index></name> <operator pos:start="152:28" pos:end="152:28">=</operator> <name pos:start="152:30" pos:end="152:35"><name pos:start="152:30" pos:end="152:31">mb</name><operator pos:start="152:32" pos:end="152:33">-&gt;</operator><name pos:start="152:34" pos:end="152:35">mv</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="156:11" pos:end="162:9">else <block pos:start="156:16" pos:end="162:9">{<block_content pos:start="158:13" pos:end="160:32">

            <expr_stmt pos:start="158:13" pos:end="158:56"><expr pos:start="158:13" pos:end="158:55"><call pos:start="158:13" pos:end="158:55"><name pos:start="158:13" pos:end="158:20">clamp_mv</name><argument_list pos:start="158:21" pos:end="158:55">(<argument pos:start="158:22" pos:end="158:22"><expr pos:start="158:22" pos:end="158:22"><name pos:start="158:22" pos:end="158:22">s</name></expr></argument>, <argument pos:start="158:25" pos:end="158:31"><expr pos:start="158:25" pos:end="158:31"><operator pos:start="158:25" pos:end="158:25">&amp;</operator><name pos:start="158:26" pos:end="158:31"><name pos:start="158:26" pos:end="158:27">mb</name><operator pos:start="158:28" pos:end="158:29">-&gt;</operator><name pos:start="158:30" pos:end="158:31">mv</name></name></expr></argument>, <argument pos:start="158:34" pos:end="158:54"><expr pos:start="158:34" pos:end="158:54"><operator pos:start="158:34" pos:end="158:34">&amp;</operator><name pos:start="158:35" pos:end="158:54"><name pos:start="158:35" pos:end="158:41">near_mv</name><index pos:start="158:42" pos:end="158:54">[<expr pos:start="158:43" pos:end="158:53"><name pos:start="158:43" pos:end="158:53">CNT_NEAREST</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="160:13" pos:end="160:32"><expr pos:start="160:13" pos:end="160:31"><name pos:start="160:13" pos:end="160:22"><name pos:start="160:13" pos:end="160:14">mb</name><operator pos:start="160:15" pos:end="160:16">-&gt;</operator><name pos:start="160:17" pos:end="160:19">bmv</name><index pos:start="160:20" pos:end="160:22">[<expr pos:start="160:21" pos:end="160:21"><literal type="number" pos:start="160:21" pos:end="160:21">0</literal></expr>]</index></name> <operator pos:start="160:24" pos:end="160:24">=</operator> <name pos:start="160:26" pos:end="160:31"><name pos:start="160:26" pos:end="160:27">mb</name><operator pos:start="160:28" pos:end="160:29">-&gt;</operator><name pos:start="160:30" pos:end="160:31">mv</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="164:7" pos:end="172:5">else <block pos:start="164:12" pos:end="172:5">{<block_content pos:start="166:9" pos:end="170:28">

        <expr_stmt pos:start="166:9" pos:end="166:35"><expr pos:start="166:9" pos:end="166:34"><name pos:start="166:9" pos:end="166:16"><name pos:start="166:9" pos:end="166:10">mb</name><operator pos:start="166:11" pos:end="166:12">-&gt;</operator><name pos:start="166:13" pos:end="166:16">mode</name></name> <operator pos:start="166:18" pos:end="166:18">=</operator> <name pos:start="166:20" pos:end="166:34">VP8_MVMODE_ZERO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="168:9" pos:end="168:27"><expr pos:start="168:9" pos:end="168:26"><call pos:start="168:9" pos:end="168:26"><name pos:start="168:9" pos:end="168:17">AV_ZERO32</name><argument_list pos:start="168:18" pos:end="168:26">(<argument pos:start="168:19" pos:end="168:25"><expr pos:start="168:19" pos:end="168:25"><operator pos:start="168:19" pos:end="168:19">&amp;</operator><name pos:start="168:20" pos:end="168:25"><name pos:start="168:20" pos:end="168:21">mb</name><operator pos:start="168:22" pos:end="168:23">-&gt;</operator><name pos:start="168:24" pos:end="168:25">mv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="170:9" pos:end="170:28"><expr pos:start="170:9" pos:end="170:27"><name pos:start="170:9" pos:end="170:18"><name pos:start="170:9" pos:end="170:10">mb</name><operator pos:start="170:11" pos:end="170:12">-&gt;</operator><name pos:start="170:13" pos:end="170:15">bmv</name><index pos:start="170:16" pos:end="170:18">[<expr pos:start="170:17" pos:end="170:17"><literal type="number" pos:start="170:17" pos:end="170:17">0</literal></expr>]</index></name> <operator pos:start="170:20" pos:end="170:20">=</operator> <name pos:start="170:22" pos:end="170:27"><name pos:start="170:22" pos:end="170:23">mb</name><operator pos:start="170:24" pos:end="170:25">-&gt;</operator><name pos:start="170:26" pos:end="170:27">mv</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function></unit>
