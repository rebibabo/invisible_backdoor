<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/530.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:27">ga_open_pidfile</name><parameter_list pos:start="1:28" pos:end="1:48">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:40"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:47">pidfile</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:17">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">pidfd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:19"><name pos:start="7:10" pos:end="7:15">pidstr</name><index pos:start="7:16" pos:end="7:19">[<expr pos:start="7:17" pos:end="7:18"><literal type="number" pos:start="7:17" pos:end="7:18">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:61"><expr pos:start="11:5" pos:end="11:60"><name pos:start="11:5" pos:end="11:9">pidfd</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <call pos:start="11:13" pos:end="11:60"><name pos:start="11:13" pos:end="11:16">open</name><argument_list pos:start="11:17" pos:end="11:60">(<argument pos:start="11:18" pos:end="11:24"><expr pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:24">pidfile</name></expr></argument>, <argument pos:start="11:27" pos:end="11:42"><expr pos:start="11:27" pos:end="11:42"><name pos:start="11:27" pos:end="11:33">O_CREAT</name><operator pos:start="11:34" pos:end="11:34">|</operator><name pos:start="11:35" pos:end="11:42">O_WRONLY</name></expr></argument>, <argument pos:start="11:45" pos:end="11:59"><expr pos:start="11:45" pos:end="11:59"><name pos:start="11:45" pos:end="11:51">S_IRUSR</name><operator pos:start="11:52" pos:end="11:52">|</operator><name pos:start="11:53" pos:end="11:59">S_IWUSR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="13:48">(<expr pos:start="13:9" pos:end="13:47"><name pos:start="13:9" pos:end="13:13">pidfd</name> <operator pos:start="13:15" pos:end="13:16">==</operator> <operator pos:start="13:18" pos:end="13:18">-</operator><literal type="number" pos:start="13:19" pos:end="13:19">1</literal> <operator pos:start="13:21" pos:end="13:22">||</operator> <call pos:start="13:24" pos:end="13:47"><name pos:start="13:24" pos:end="13:28">lockf</name><argument_list pos:start="13:29" pos:end="13:47">(<argument pos:start="13:30" pos:end="13:34"><expr pos:start="13:30" pos:end="13:34"><name pos:start="13:30" pos:end="13:34">pidfd</name></expr></argument>, <argument pos:start="13:37" pos:end="13:43"><expr pos:start="13:37" pos:end="13:43"><name pos:start="13:37" pos:end="13:43">F_TLOCK</name></expr></argument>, <argument pos:start="13:46" pos:end="13:46"><expr pos:start="13:46" pos:end="13:46"><literal type="number" pos:start="13:46" pos:end="13:46">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:50" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:21">

        <expr_stmt pos:start="15:9" pos:end="15:64"><expr pos:start="15:9" pos:end="15:63"><call pos:start="15:9" pos:end="15:63"><name pos:start="15:9" pos:end="15:18">g_critical</name><argument_list pos:start="15:19" pos:end="15:63">(<argument pos:start="15:20" pos:end="15:45"><expr pos:start="15:20" pos:end="15:45"><literal type="string" pos:start="15:20" pos:end="15:45">"Cannot lock pid file, %s"</literal></expr></argument>, <argument pos:start="15:48" pos:end="15:62"><expr pos:start="15:48" pos:end="15:62"><call pos:start="15:48" pos:end="15:62"><name pos:start="15:48" pos:end="15:55">strerror</name><argument_list pos:start="15:56" pos:end="15:62">(<argument pos:start="15:57" pos:end="15:61"><expr pos:start="15:57" pos:end="15:61"><name pos:start="15:57" pos:end="15:61">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:24">(<expr pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:17">pidfd</name> <operator pos:start="17:19" pos:end="17:20">!=</operator> <operator pos:start="17:22" pos:end="17:22">-</operator><literal type="number" pos:start="17:23" pos:end="17:23">1</literal></expr>)</condition> <block pos:start="17:26" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:25">

            <expr_stmt pos:start="19:13" pos:end="19:25"><expr pos:start="19:13" pos:end="19:24"><call pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:17">close</name><argument_list pos:start="19:18" pos:end="19:24">(<argument pos:start="19:19" pos:end="19:23"><expr pos:start="19:19" pos:end="19:23"><name pos:start="19:19" pos:end="19:23">pidfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="23:9" pos:end="23:21">return <expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:57">(<expr pos:start="29:9" pos:end="29:56"><call pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:17">ftruncate</name><argument_list pos:start="29:18" pos:end="29:27">(<argument pos:start="29:19" pos:end="29:23"><expr pos:start="29:19" pos:end="29:23"><name pos:start="29:19" pos:end="29:23">pidfd</name></expr></argument>, <argument pos:start="29:26" pos:end="29:26"><expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">0</literal></expr></argument>)</argument_list></call> <operator pos:start="29:29" pos:end="29:30">||</operator> <call pos:start="29:32" pos:end="29:56"><name pos:start="29:32" pos:end="29:36">lseek</name><argument_list pos:start="29:37" pos:end="29:56">(<argument pos:start="29:38" pos:end="29:42"><expr pos:start="29:38" pos:end="29:42"><name pos:start="29:38" pos:end="29:42">pidfd</name></expr></argument>, <argument pos:start="29:45" pos:end="29:45"><expr pos:start="29:45" pos:end="29:45"><literal type="number" pos:start="29:45" pos:end="29:45">0</literal></expr></argument>, <argument pos:start="29:48" pos:end="29:55"><expr pos:start="29:48" pos:end="29:55"><name pos:start="29:48" pos:end="29:55">SEEK_SET</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:59" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:18">

        <expr_stmt pos:start="31:9" pos:end="31:50"><expr pos:start="31:9" pos:end="31:49"><call pos:start="31:9" pos:end="31:49"><name pos:start="31:9" pos:end="31:18">g_critical</name><argument_list pos:start="31:19" pos:end="31:49">(<argument pos:start="31:20" pos:end="31:48"><expr pos:start="31:20" pos:end="31:48"><literal type="string" pos:start="31:20" pos:end="31:48">"Failed to truncate pid file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:18">goto <name pos:start="33:14" pos:end="33:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:55"><expr pos:start="37:5" pos:end="37:54"><call pos:start="37:5" pos:end="37:54"><name pos:start="37:5" pos:end="37:12">snprintf</name><argument_list pos:start="37:13" pos:end="37:54">(<argument pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:19"><name pos:start="37:14" pos:end="37:19">pidstr</name></expr></argument>, <argument pos:start="37:22" pos:end="37:35"><expr pos:start="37:22" pos:end="37:35"><sizeof pos:start="37:22" pos:end="37:35">sizeof<argument_list pos:start="37:28" pos:end="37:35">(<argument pos:start="37:29" pos:end="37:34"><expr pos:start="37:29" pos:end="37:34"><name pos:start="37:29" pos:end="37:34">pidstr</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="37:38" pos:end="37:43"><expr pos:start="37:38" pos:end="37:43"><literal type="string" pos:start="37:38" pos:end="37:43">"%d\n"</literal></expr></argument>, <argument pos:start="37:46" pos:end="37:53"><expr pos:start="37:46" pos:end="37:53"><call pos:start="37:46" pos:end="37:53"><name pos:start="37:46" pos:end="37:51">getpid</name><argument_list pos:start="37:52" pos:end="37:53">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:63">(<expr pos:start="39:9" pos:end="39:62"><call pos:start="39:9" pos:end="39:44"><name pos:start="39:9" pos:end="39:13">write</name><argument_list pos:start="39:14" pos:end="39:44">(<argument pos:start="39:15" pos:end="39:19"><expr pos:start="39:15" pos:end="39:19"><name pos:start="39:15" pos:end="39:19">pidfd</name></expr></argument>, <argument pos:start="39:22" pos:end="39:27"><expr pos:start="39:22" pos:end="39:27"><name pos:start="39:22" pos:end="39:27">pidstr</name></expr></argument>, <argument pos:start="39:30" pos:end="39:43"><expr pos:start="39:30" pos:end="39:43"><call pos:start="39:30" pos:end="39:43"><name pos:start="39:30" pos:end="39:35">strlen</name><argument_list pos:start="39:36" pos:end="39:43">(<argument pos:start="39:37" pos:end="39:42"><expr pos:start="39:37" pos:end="39:42"><name pos:start="39:37" pos:end="39:42">pidstr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="39:46" pos:end="39:47">!=</operator> <call pos:start="39:49" pos:end="39:62"><name pos:start="39:49" pos:end="39:54">strlen</name><argument_list pos:start="39:55" pos:end="39:62">(<argument pos:start="39:56" pos:end="39:61"><expr pos:start="39:56" pos:end="39:61"><name pos:start="39:56" pos:end="39:61">pidstr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:65" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:18">

        <expr_stmt pos:start="41:9" pos:end="41:47"><expr pos:start="41:9" pos:end="41:46"><call pos:start="41:9" pos:end="41:46"><name pos:start="41:9" pos:end="41:18">g_critical</name><argument_list pos:start="41:19" pos:end="41:46">(<argument pos:start="41:20" pos:end="41:45"><expr pos:start="41:20" pos:end="41:45"><literal type="string" pos:start="41:20" pos:end="41:45">"Failed to write pid file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:18">goto <name pos:start="43:14" pos:end="43:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="49:5" pos:end="49:16">return <expr pos:start="49:12" pos:end="49:15"><name pos:start="49:12" pos:end="49:15">true</name></expr>;</return>



<label pos:start="53:1" pos:end="53:5"><name pos:start="53:1" pos:end="53:4">fail</name>:</label>

    <expr_stmt pos:start="55:5" pos:end="55:20"><expr pos:start="55:5" pos:end="55:19"><call pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:10">unlink</name><argument_list pos:start="55:11" pos:end="55:19">(<argument pos:start="55:12" pos:end="55:18"><expr pos:start="55:12" pos:end="55:18"><name pos:start="55:12" pos:end="55:18">pidfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="57:5" pos:end="57:17">return <expr pos:start="57:12" pos:end="57:16"><name pos:start="57:12" pos:end="57:16">false</name></expr>;</return>

</block_content>}</block></function>
</unit>
