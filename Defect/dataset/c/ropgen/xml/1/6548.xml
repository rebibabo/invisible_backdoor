<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6548.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:42">mpeg1_decode_block_intra</name><parameter_list pos:start="1:43" pos:end="1:84">(<parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:57">MpegEncContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">s</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:76"><decl pos:start="1:63" pos:end="1:76"><type pos:start="1:63" pos:end="1:76"><name pos:start="1:63" pos:end="1:69">int16_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:76">block</name></decl></parameter>, <parameter pos:start="1:79" pos:end="1:83"><decl pos:start="1:79" pos:end="1:83"><type pos:start="1:79" pos:end="1:83"><name pos:start="1:79" pos:end="1:81">int</name></type> <name pos:start="1:83" pos:end="1:83">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:12">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">level</name></decl>, <decl pos:start="5:16" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:17">dc</name></decl>, <decl pos:start="5:20" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:23">diff</name></decl>, <decl pos:start="5:26" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:26" pos:end="5:26">i</name></decl>, <decl pos:start="5:29" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:29">j</name></decl>, <decl pos:start="5:32" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:34">run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">component</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">RLTable</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:15">rl</name> <init pos:start="9:17" pos:end="9:30">= <expr pos:start="9:19" pos:end="9:30"><operator pos:start="9:19" pos:end="9:19">&amp;</operator><name pos:start="9:20" pos:end="9:30">ff_rl_mpeg1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:65"><decl pos:start="11:5" pos:end="11:64"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier> <specifier pos:start="11:15" pos:end="11:19">const</specifier></type> <name pos:start="11:21" pos:end="11:29">scantable</name>    <init pos:start="11:34" pos:end="11:64">= <expr pos:start="11:36" pos:end="11:64"><name pos:start="11:36" pos:end="11:64"><name pos:start="11:36" pos:end="11:36">s</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:53">intra_scantable</name><operator pos:start="11:54" pos:end="11:54">.</operator><name pos:start="11:55" pos:end="11:64">permutated</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:50"><type pos:start="13:5" pos:end="13:20"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:18">uint16_t</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:32">quant_matrix</name> <init pos:start="13:34" pos:end="13:50">= <expr pos:start="13:36" pos:end="13:50"><name pos:start="13:36" pos:end="13:50"><name pos:start="13:36" pos:end="13:36">s</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:50">intra_matrix</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:45"><decl pos:start="15:5" pos:end="15:44"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:20">qscale</name>             <init pos:start="15:34" pos:end="15:44">= <expr pos:start="15:36" pos:end="15:44"><name pos:start="15:36" pos:end="15:44"><name pos:start="15:36" pos:end="15:36">s</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:44">qscale</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:24">/* DC coefficient */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:13">component</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <operator pos:start="21:17" pos:end="21:17">(</operator><ternary pos:start="21:18" pos:end="21:39"><condition pos:start="21:18" pos:end="21:25"><expr pos:start="21:18" pos:end="21:23"><name pos:start="21:18" pos:end="21:18">n</name> <operator pos:start="21:20" pos:end="21:21">&lt;=</operator> <literal type="number" pos:start="21:23" pos:end="21:23">3</literal></expr> ?</condition><then pos:start="21:27" pos:end="21:27"> <expr pos:start="21:27" pos:end="21:27"><literal type="number" pos:start="21:27" pos:end="21:27">0</literal></expr> </then><else pos:start="21:29" pos:end="21:39">: <expr pos:start="21:31" pos:end="21:39"><name pos:start="21:31" pos:end="21:31">n</name> <operator pos:start="21:33" pos:end="21:33">-</operator> <literal type="number" pos:start="21:35" pos:end="21:37">4</literal> <operator pos:start="21:37" pos:end="21:37">+</operator> <literal type="number" pos:start="21:39" pos:end="21:39">1</literal></expr></else></ternary><operator pos:start="21:40" pos:end="21:40">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:8">diff</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:39"><name pos:start="23:12" pos:end="23:20">decode_dc</name><argument_list pos:start="23:21" pos:end="23:39">(<argument pos:start="23:22" pos:end="23:27"><expr pos:start="23:22" pos:end="23:27"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><name pos:start="23:23" pos:end="23:27"><name pos:start="23:23" pos:end="23:23">s</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:27">gb</name></name></expr></argument>, <argument pos:start="23:30" pos:end="23:38"><expr pos:start="23:30" pos:end="23:38"><name pos:start="23:30" pos:end="23:38">component</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if <condition pos:start="25:8" pos:end="25:23">(<expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:12">diff</name> <operator pos:start="25:14" pos:end="25:15">&gt;=</operator> <literal type="number" pos:start="25:17" pos:end="25:22">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:6">dc</name>  <operator pos:start="29:9" pos:end="29:9">=</operator> <name pos:start="29:11" pos:end="29:31"><name pos:start="29:11" pos:end="29:11">s</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:20">last_dc</name><index pos:start="29:21" pos:end="29:31">[<expr pos:start="29:22" pos:end="29:30"><name pos:start="29:22" pos:end="29:30">component</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:15"><expr pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:6">dc</name> <operator pos:start="31:8" pos:end="31:9">+=</operator> <name pos:start="31:11" pos:end="31:14">diff</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:14">last_dc</name><index pos:start="33:15" pos:end="33:25">[<expr pos:start="33:16" pos:end="33:24"><name pos:start="33:16" pos:end="33:24">component</name></expr>]</index></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <name pos:start="33:29" pos:end="33:30">dc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:36"><expr pos:start="35:5" pos:end="35:35"><name pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:9">block</name><index pos:start="35:10" pos:end="35:12">[<expr pos:start="35:11" pos:end="35:11"><literal type="number" pos:start="35:11" pos:end="35:11">0</literal></expr>]</index></name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:17">dc</name> <operator pos:start="35:19" pos:end="35:19">*</operator> <name pos:start="35:21" pos:end="35:35"><name pos:start="35:21" pos:end="35:32">quant_matrix</name><index pos:start="35:33" pos:end="35:35">[<expr pos:start="35:34" pos:end="35:34"><literal type="number" pos:start="35:34" pos:end="35:34">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><call pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:11">av_dlog</name><argument_list pos:start="37:12" pos:end="37:50">(<argument pos:start="37:13" pos:end="37:20"><expr pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:20">avctx</name></name></expr></argument>, <argument pos:start="37:23" pos:end="37:39"><expr pos:start="37:23" pos:end="37:39"><literal type="string" pos:start="37:23" pos:end="37:39">"dc=%d diff=%d\n"</literal></expr></argument>, <argument pos:start="37:42" pos:end="37:43"><expr pos:start="37:42" pos:end="37:43"><name pos:start="37:42" pos:end="37:43">dc</name></expr></argument>, <argument pos:start="37:46" pos:end="37:49"><expr pos:start="37:46" pos:end="37:49"><name pos:start="37:46" pos:end="37:49">diff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:10"><expr pos:start="39:5" pos:end="39:9"><name pos:start="39:5" pos:end="39:5">i</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <literal type="number" pos:start="39:9" pos:end="39:9">0</literal></expr>;</expr_stmt>

    <block pos:start="41:5" pos:end="133:5">{<block_content pos:start="43:9" pos:end="131:33">

        <expr_stmt pos:start="43:9" pos:end="43:32"><expr pos:start="43:9" pos:end="43:31"><call pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:19">OPEN_READER</name><argument_list pos:start="43:20" pos:end="43:31">(<argument pos:start="43:21" pos:end="43:22"><expr pos:start="43:21" pos:end="43:22"><name pos:start="43:21" pos:end="43:22">re</name></expr></argument>, <argument pos:start="43:25" pos:end="43:30"><expr pos:start="43:25" pos:end="43:30"><operator pos:start="43:25" pos:end="43:25">&amp;</operator><name pos:start="43:26" pos:end="43:30"><name pos:start="43:26" pos:end="43:26">s</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:30">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="45:9" pos:end="45:51">/* now quantify &amp; encode AC coefficients */</comment>

        <for pos:start="47:9" pos:end="129:9">for <control pos:start="47:13" pos:end="47:16">(<init pos:start="47:14" pos:end="47:14">;</init><condition pos:start="47:15" pos:end="47:15">;</condition><incr/>)</control> <block pos:start="47:18" pos:end="129:9">{<block_content pos:start="49:13" pos:end="127:29">

            <expr_stmt pos:start="49:13" pos:end="49:37"><expr pos:start="49:13" pos:end="49:36"><call pos:start="49:13" pos:end="49:36"><name pos:start="49:13" pos:end="49:24">UPDATE_CACHE</name><argument_list pos:start="49:25" pos:end="49:36">(<argument pos:start="49:26" pos:end="49:27"><expr pos:start="49:26" pos:end="49:27"><name pos:start="49:26" pos:end="49:27">re</name></expr></argument>, <argument pos:start="49:30" pos:end="49:35"><expr pos:start="49:30" pos:end="49:35"><operator pos:start="49:30" pos:end="49:30">&amp;</operator><name pos:start="49:31" pos:end="49:35"><name pos:start="49:31" pos:end="49:31">s</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:82"><expr pos:start="51:13" pos:end="51:81"><call pos:start="51:13" pos:end="51:81"><name pos:start="51:13" pos:end="51:22">GET_RL_VLC</name><argument_list pos:start="51:23" pos:end="51:81">(<argument pos:start="51:24" pos:end="51:28"><expr pos:start="51:24" pos:end="51:28"><name pos:start="51:24" pos:end="51:28">level</name></expr></argument>, <argument pos:start="51:31" pos:end="51:33"><expr pos:start="51:31" pos:end="51:33"><name pos:start="51:31" pos:end="51:33">run</name></expr></argument>, <argument pos:start="51:36" pos:end="51:37"><expr pos:start="51:36" pos:end="51:37"><name pos:start="51:36" pos:end="51:37">re</name></expr></argument>, <argument pos:start="51:40" pos:end="51:45"><expr pos:start="51:40" pos:end="51:45"><operator pos:start="51:40" pos:end="51:40">&amp;</operator><name pos:start="51:41" pos:end="51:45"><name pos:start="51:41" pos:end="51:41">s</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:45">gb</name></name></expr></argument>, <argument pos:start="51:48" pos:end="51:60"><expr pos:start="51:48" pos:end="51:60"><name pos:start="51:48" pos:end="51:60"><name pos:start="51:48" pos:end="51:49">rl</name><operator pos:start="51:50" pos:end="51:51">-&gt;</operator><name pos:start="51:52" pos:end="51:57">rl_vlc</name><index pos:start="51:58" pos:end="51:60">[<expr pos:start="51:59" pos:end="51:59"><literal type="number" pos:start="51:59" pos:end="51:59">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:63" pos:end="51:74"><expr pos:start="51:63" pos:end="51:74"><name pos:start="51:63" pos:end="51:74">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="51:77" pos:end="51:77"><expr pos:start="51:77" pos:end="51:77"><literal type="number" pos:start="51:77" pos:end="51:77">2</literal></expr></argument>, <argument pos:start="51:80" pos:end="51:80"><expr pos:start="51:80" pos:end="51:80"><literal type="number" pos:start="51:80" pos:end="51:80">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="55:13" pos:end="115:13"><if pos:start="55:13" pos:end="59:13">if <condition pos:start="55:16" pos:end="55:29">(<expr pos:start="55:17" pos:end="55:28"><name pos:start="55:17" pos:end="55:21">level</name> <operator pos:start="55:23" pos:end="55:24">==</operator> <literal type="number" pos:start="55:26" pos:end="55:28">127</literal></expr>)</condition> <block pos:start="55:31" pos:end="59:13">{<block_content pos:start="57:17" pos:end="57:22">

                <break pos:start="57:17" pos:end="57:22">break;</break>

            </block_content>}</block></if> <if type="elseif" pos:start="59:15" pos:end="73:13">else if <condition pos:start="59:23" pos:end="59:34">(<expr pos:start="59:24" pos:end="59:33"><name pos:start="59:24" pos:end="59:28">level</name> <operator pos:start="59:30" pos:end="59:31">!=</operator> <literal type="number" pos:start="59:33" pos:end="59:33">0</literal></expr>)</condition> <block pos:start="59:36" pos:end="73:13">{<block_content pos:start="61:17" pos:end="71:46">

                <expr_stmt pos:start="61:17" pos:end="61:25"><expr pos:start="61:17" pos:end="61:24"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:20">+=</operator> <name pos:start="61:22" pos:end="61:24">run</name></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:33"><expr pos:start="63:17" pos:end="63:32"><name pos:start="63:17" pos:end="63:17">j</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:32"><name pos:start="63:21" pos:end="63:29">scantable</name><index pos:start="63:30" pos:end="63:32">[<expr pos:start="63:31" pos:end="63:31"><name pos:start="63:31" pos:end="63:31">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:64"><expr pos:start="65:17" pos:end="65:63"><name pos:start="65:17" pos:end="65:21">level</name> <operator pos:start="65:23" pos:end="65:23">=</operator> <operator pos:start="65:25" pos:end="65:25">(</operator><name pos:start="65:26" pos:end="65:30">level</name> <operator pos:start="65:32" pos:end="65:32">*</operator> <name pos:start="65:34" pos:end="65:39">qscale</name> <operator pos:start="65:41" pos:end="65:41">*</operator> <name pos:start="65:43" pos:end="65:57"><name pos:start="65:43" pos:end="65:54">quant_matrix</name><index pos:start="65:55" pos:end="65:57">[<expr pos:start="65:56" pos:end="65:56"><name pos:start="65:56" pos:end="65:56">j</name></expr>]</index></name><operator pos:start="65:58" pos:end="65:58">)</operator> <operator pos:start="65:60" pos:end="65:61">&gt;&gt;</operator> <literal type="number" pos:start="65:63" pos:end="65:63">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:40"><expr pos:start="67:17" pos:end="67:39"><name pos:start="67:17" pos:end="67:21">level</name> <operator pos:start="67:23" pos:end="67:23">=</operator> <operator pos:start="67:25" pos:end="67:25">(</operator><name pos:start="67:26" pos:end="67:30">level</name> <operator pos:start="67:32" pos:end="67:32">-</operator> <literal type="number" pos:start="67:34" pos:end="67:34">1</literal><operator pos:start="67:35" pos:end="67:35">)</operator> <operator pos:start="67:37" pos:end="67:37">|</operator> <literal type="number" pos:start="67:39" pos:end="67:39">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:88"><expr pos:start="69:17" pos:end="69:87"><name pos:start="69:17" pos:end="69:21">level</name> <operator pos:start="69:23" pos:end="69:23">=</operator> <operator pos:start="69:25" pos:end="69:25">(</operator><name pos:start="69:26" pos:end="69:30">level</name> <operator pos:start="69:32" pos:end="69:32">^</operator> <call pos:start="69:34" pos:end="69:58"><name pos:start="69:34" pos:end="69:43">SHOW_SBITS</name><argument_list pos:start="69:44" pos:end="69:58">(<argument pos:start="69:45" pos:end="69:46"><expr pos:start="69:45" pos:end="69:46"><name pos:start="69:45" pos:end="69:46">re</name></expr></argument>, <argument pos:start="69:49" pos:end="69:54"><expr pos:start="69:49" pos:end="69:54"><operator pos:start="69:49" pos:end="69:49">&amp;</operator><name pos:start="69:50" pos:end="69:54"><name pos:start="69:50" pos:end="69:50">s</name><operator pos:start="69:51" pos:end="69:52">-&gt;</operator><name pos:start="69:53" pos:end="69:54">gb</name></name></expr></argument>, <argument pos:start="69:57" pos:end="69:57"><expr pos:start="69:57" pos:end="69:57"><literal type="number" pos:start="69:57" pos:end="69:57">1</literal></expr></argument>)</argument_list></call><operator pos:start="69:59" pos:end="69:59">)</operator> <operator pos:start="69:61" pos:end="69:61">-</operator> <call pos:start="69:63" pos:end="69:87"><name pos:start="69:63" pos:end="69:72">SHOW_SBITS</name><argument_list pos:start="69:73" pos:end="69:87">(<argument pos:start="69:74" pos:end="69:75"><expr pos:start="69:74" pos:end="69:75"><name pos:start="69:74" pos:end="69:75">re</name></expr></argument>, <argument pos:start="69:78" pos:end="69:83"><expr pos:start="69:78" pos:end="69:83"><operator pos:start="69:78" pos:end="69:78">&amp;</operator><name pos:start="69:79" pos:end="69:83"><name pos:start="69:79" pos:end="69:79">s</name><operator pos:start="69:80" pos:end="69:81">-&gt;</operator><name pos:start="69:82" pos:end="69:83">gb</name></name></expr></argument>, <argument pos:start="69:86" pos:end="69:86"><expr pos:start="69:86" pos:end="69:86"><literal type="number" pos:start="69:86" pos:end="69:86">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:46"><expr pos:start="71:17" pos:end="71:45"><call pos:start="71:17" pos:end="71:45"><name pos:start="71:17" pos:end="71:30">LAST_SKIP_BITS</name><argument_list pos:start="71:31" pos:end="71:45">(<argument pos:start="71:32" pos:end="71:33"><expr pos:start="71:32" pos:end="71:33"><name pos:start="71:32" pos:end="71:33">re</name></expr></argument>, <argument pos:start="71:36" pos:end="71:41"><expr pos:start="71:36" pos:end="71:41"><operator pos:start="71:36" pos:end="71:36">&amp;</operator><name pos:start="71:37" pos:end="71:41"><name pos:start="71:37" pos:end="71:37">s</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:41">gb</name></name></expr></argument>, <argument pos:start="71:44" pos:end="71:44"><expr pos:start="71:44" pos:end="71:44"><literal type="number" pos:start="71:44" pos:end="71:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="73:15" pos:end="115:13">else <block pos:start="73:20" pos:end="115:13">{<block_content pos:start="77:17" pos:end="113:17">

                <comment type="block" pos:start="75:17" pos:end="75:28">/* escape */</comment>

                <expr_stmt pos:start="77:17" pos:end="77:52"><expr pos:start="77:17" pos:end="77:51"><name pos:start="77:17" pos:end="77:19">run</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <call pos:start="77:23" pos:end="77:47"><name pos:start="77:23" pos:end="77:32">SHOW_UBITS</name><argument_list pos:start="77:33" pos:end="77:47">(<argument pos:start="77:34" pos:end="77:35"><expr pos:start="77:34" pos:end="77:35"><name pos:start="77:34" pos:end="77:35">re</name></expr></argument>, <argument pos:start="77:38" pos:end="77:43"><expr pos:start="77:38" pos:end="77:43"><operator pos:start="77:38" pos:end="77:38">&amp;</operator><name pos:start="77:39" pos:end="77:43"><name pos:start="77:39" pos:end="77:39">s</name><operator pos:start="77:40" pos:end="77:41">-&gt;</operator><name pos:start="77:42" pos:end="77:43">gb</name></name></expr></argument>, <argument pos:start="77:46" pos:end="77:46"><expr pos:start="77:46" pos:end="77:46"><literal type="number" pos:start="77:46" pos:end="77:46">6</literal></expr></argument>)</argument_list></call> <operator pos:start="77:49" pos:end="77:49">+</operator> <literal type="number" pos:start="77:51" pos:end="77:51">1</literal></expr>;</expr_stmt> <expr_stmt pos:start="77:54" pos:end="77:83"><expr pos:start="77:54" pos:end="77:82"><call pos:start="77:54" pos:end="77:82"><name pos:start="77:54" pos:end="77:67">LAST_SKIP_BITS</name><argument_list pos:start="77:68" pos:end="77:82">(<argument pos:start="77:69" pos:end="77:70"><expr pos:start="77:69" pos:end="77:70"><name pos:start="77:69" pos:end="77:70">re</name></expr></argument>, <argument pos:start="77:73" pos:end="77:78"><expr pos:start="77:73" pos:end="77:78"><operator pos:start="77:73" pos:end="77:73">&amp;</operator><name pos:start="77:74" pos:end="77:78"><name pos:start="77:74" pos:end="77:74">s</name><operator pos:start="77:75" pos:end="77:76">-&gt;</operator><name pos:start="77:77" pos:end="77:78">gb</name></name></expr></argument>, <argument pos:start="77:81" pos:end="77:81"><expr pos:start="77:81" pos:end="77:81"><literal type="number" pos:start="77:81" pos:end="77:81">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:41"><expr pos:start="79:17" pos:end="79:40"><call pos:start="79:17" pos:end="79:40"><name pos:start="79:17" pos:end="79:28">UPDATE_CACHE</name><argument_list pos:start="79:29" pos:end="79:40">(<argument pos:start="79:30" pos:end="79:31"><expr pos:start="79:30" pos:end="79:31"><name pos:start="79:30" pos:end="79:31">re</name></expr></argument>, <argument pos:start="79:34" pos:end="79:39"><expr pos:start="79:34" pos:end="79:39"><operator pos:start="79:34" pos:end="79:34">&amp;</operator><name pos:start="79:35" pos:end="79:39"><name pos:start="79:35" pos:end="79:35">s</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:50"><expr pos:start="81:17" pos:end="81:49"><name pos:start="81:17" pos:end="81:21">level</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <call pos:start="81:25" pos:end="81:49"><name pos:start="81:25" pos:end="81:34">SHOW_SBITS</name><argument_list pos:start="81:35" pos:end="81:49">(<argument pos:start="81:36" pos:end="81:37"><expr pos:start="81:36" pos:end="81:37"><name pos:start="81:36" pos:end="81:37">re</name></expr></argument>, <argument pos:start="81:40" pos:end="81:45"><expr pos:start="81:40" pos:end="81:45"><operator pos:start="81:40" pos:end="81:40">&amp;</operator><name pos:start="81:41" pos:end="81:45"><name pos:start="81:41" pos:end="81:41">s</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:45">gb</name></name></expr></argument>, <argument pos:start="81:48" pos:end="81:48"><expr pos:start="81:48" pos:end="81:48"><literal type="number" pos:start="81:48" pos:end="81:48">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="81:52" pos:end="81:76"><expr pos:start="81:52" pos:end="81:75"><call pos:start="81:52" pos:end="81:75"><name pos:start="81:52" pos:end="81:60">SKIP_BITS</name><argument_list pos:start="81:61" pos:end="81:75">(<argument pos:start="81:62" pos:end="81:63"><expr pos:start="81:62" pos:end="81:63"><name pos:start="81:62" pos:end="81:63">re</name></expr></argument>, <argument pos:start="81:66" pos:end="81:71"><expr pos:start="81:66" pos:end="81:71"><operator pos:start="81:66" pos:end="81:66">&amp;</operator><name pos:start="81:67" pos:end="81:71"><name pos:start="81:67" pos:end="81:67">s</name><operator pos:start="81:68" pos:end="81:69">-&gt;</operator><name pos:start="81:70" pos:end="81:71">gb</name></name></expr></argument>, <argument pos:start="81:74" pos:end="81:74"><expr pos:start="81:74" pos:end="81:74"><literal type="number" pos:start="81:74" pos:end="81:74">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="83:17" pos:end="91:17"><if pos:start="83:17" pos:end="87:17">if <condition pos:start="83:20" pos:end="83:34">(<expr pos:start="83:21" pos:end="83:33"><name pos:start="83:21" pos:end="83:25">level</name> <operator pos:start="83:27" pos:end="83:28">==</operator> <operator pos:start="83:30" pos:end="83:30">-</operator><literal type="number" pos:start="83:31" pos:end="83:33">128</literal></expr>)</condition> <block pos:start="83:36" pos:end="87:17">{<block_content pos:start="85:21" pos:end="85:91">

                    <expr_stmt pos:start="85:21" pos:end="85:60"><expr pos:start="85:21" pos:end="85:59"><name pos:start="85:21" pos:end="85:25">level</name> <operator pos:start="85:27" pos:end="85:27">=</operator> <call pos:start="85:29" pos:end="85:53"><name pos:start="85:29" pos:end="85:38">SHOW_UBITS</name><argument_list pos:start="85:39" pos:end="85:53">(<argument pos:start="85:40" pos:end="85:41"><expr pos:start="85:40" pos:end="85:41"><name pos:start="85:40" pos:end="85:41">re</name></expr></argument>, <argument pos:start="85:44" pos:end="85:49"><expr pos:start="85:44" pos:end="85:49"><operator pos:start="85:44" pos:end="85:44">&amp;</operator><name pos:start="85:45" pos:end="85:49"><name pos:start="85:45" pos:end="85:45">s</name><operator pos:start="85:46" pos:end="85:47">-&gt;</operator><name pos:start="85:48" pos:end="85:49">gb</name></name></expr></argument>, <argument pos:start="85:52" pos:end="85:52"><expr pos:start="85:52" pos:end="85:52"><literal type="number" pos:start="85:52" pos:end="85:52">8</literal></expr></argument>)</argument_list></call> <operator pos:start="85:55" pos:end="85:55">-</operator> <literal type="number" pos:start="85:57" pos:end="85:59">256</literal></expr>;</expr_stmt> <expr_stmt pos:start="85:62" pos:end="85:91"><expr pos:start="85:62" pos:end="85:90"><call pos:start="85:62" pos:end="85:90"><name pos:start="85:62" pos:end="85:75">LAST_SKIP_BITS</name><argument_list pos:start="85:76" pos:end="85:90">(<argument pos:start="85:77" pos:end="85:78"><expr pos:start="85:77" pos:end="85:78"><name pos:start="85:77" pos:end="85:78">re</name></expr></argument>, <argument pos:start="85:81" pos:end="85:86"><expr pos:start="85:81" pos:end="85:86"><operator pos:start="85:81" pos:end="85:81">&amp;</operator><name pos:start="85:82" pos:end="85:86"><name pos:start="85:82" pos:end="85:82">s</name><operator pos:start="85:83" pos:end="85:84">-&gt;</operator><name pos:start="85:85" pos:end="85:86">gb</name></name></expr></argument>, <argument pos:start="85:89" pos:end="85:89"><expr pos:start="85:89" pos:end="85:89"><literal type="number" pos:start="85:89" pos:end="85:89">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="87:19" pos:end="91:17">else if <condition pos:start="87:27" pos:end="87:38">(<expr pos:start="87:28" pos:end="87:37"><name pos:start="87:28" pos:end="87:32">level</name> <operator pos:start="87:34" pos:end="87:35">==</operator> <literal type="number" pos:start="87:37" pos:end="87:37">0</literal></expr>)</condition> <block pos:start="87:40" pos:end="91:17">{<block_content pos:start="89:21" pos:end="89:91">

                    <expr_stmt pos:start="89:21" pos:end="89:60"><expr pos:start="89:21" pos:end="89:53"><name pos:start="89:21" pos:end="89:25">level</name> <operator pos:start="89:27" pos:end="89:27">=</operator> <call pos:start="89:29" pos:end="89:53"><name pos:start="89:29" pos:end="89:38">SHOW_UBITS</name><argument_list pos:start="89:39" pos:end="89:53">(<argument pos:start="89:40" pos:end="89:41"><expr pos:start="89:40" pos:end="89:41"><name pos:start="89:40" pos:end="89:41">re</name></expr></argument>, <argument pos:start="89:44" pos:end="89:49"><expr pos:start="89:44" pos:end="89:49"><operator pos:start="89:44" pos:end="89:44">&amp;</operator><name pos:start="89:45" pos:end="89:49"><name pos:start="89:45" pos:end="89:45">s</name><operator pos:start="89:46" pos:end="89:47">-&gt;</operator><name pos:start="89:48" pos:end="89:49">gb</name></name></expr></argument>, <argument pos:start="89:52" pos:end="89:52"><expr pos:start="89:52" pos:end="89:52"><literal type="number" pos:start="89:52" pos:end="89:52">8</literal></expr></argument>)</argument_list></call></expr>      ;</expr_stmt> <expr_stmt pos:start="89:62" pos:end="89:91"><expr pos:start="89:62" pos:end="89:90"><call pos:start="89:62" pos:end="89:90"><name pos:start="89:62" pos:end="89:75">LAST_SKIP_BITS</name><argument_list pos:start="89:76" pos:end="89:90">(<argument pos:start="89:77" pos:end="89:78"><expr pos:start="89:77" pos:end="89:78"><name pos:start="89:77" pos:end="89:78">re</name></expr></argument>, <argument pos:start="89:81" pos:end="89:86"><expr pos:start="89:81" pos:end="89:86"><operator pos:start="89:81" pos:end="89:81">&amp;</operator><name pos:start="89:82" pos:end="89:86"><name pos:start="89:82" pos:end="89:82">s</name><operator pos:start="89:83" pos:end="89:84">-&gt;</operator><name pos:start="89:85" pos:end="89:86">gb</name></name></expr></argument>, <argument pos:start="89:89" pos:end="89:89"><expr pos:start="89:89" pos:end="89:89"><literal type="number" pos:start="89:89" pos:end="89:89">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:25"><expr pos:start="93:17" pos:end="93:24"><name pos:start="93:17" pos:end="93:17">i</name> <operator pos:start="93:19" pos:end="93:20">+=</operator> <name pos:start="93:22" pos:end="93:24">run</name></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:33"><expr pos:start="95:17" pos:end="95:32"><name pos:start="95:17" pos:end="95:17">j</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:32"><name pos:start="95:21" pos:end="95:29">scantable</name><index pos:start="95:30" pos:end="95:32">[<expr pos:start="95:31" pos:end="95:31"><name pos:start="95:31" pos:end="95:31">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="97:17" pos:end="113:17"><if pos:start="97:17" pos:end="107:17">if <condition pos:start="97:20" pos:end="97:30">(<expr pos:start="97:21" pos:end="97:29"><name pos:start="97:21" pos:end="97:25">level</name> <operator pos:start="97:27" pos:end="97:27">&lt;</operator> <literal type="number" pos:start="97:29" pos:end="97:29">0</literal></expr>)</condition> <block pos:start="97:32" pos:end="107:17">{<block_content pos:start="99:21" pos:end="105:35">

                    <expr_stmt pos:start="99:21" pos:end="99:35"><expr pos:start="99:21" pos:end="99:34"><name pos:start="99:21" pos:end="99:25">level</name> <operator pos:start="99:27" pos:end="99:27">=</operator> <operator pos:start="99:29" pos:end="99:29">-</operator><name pos:start="99:30" pos:end="99:34">level</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="101:21" pos:end="101:68"><expr pos:start="101:21" pos:end="101:67"><name pos:start="101:21" pos:end="101:25">level</name> <operator pos:start="101:27" pos:end="101:27">=</operator> <operator pos:start="101:29" pos:end="101:29">(</operator><name pos:start="101:30" pos:end="101:34">level</name> <operator pos:start="101:36" pos:end="101:36">*</operator> <name pos:start="101:38" pos:end="101:43">qscale</name> <operator pos:start="101:45" pos:end="101:45">*</operator> <name pos:start="101:47" pos:end="101:61"><name pos:start="101:47" pos:end="101:58">quant_matrix</name><index pos:start="101:59" pos:end="101:61">[<expr pos:start="101:60" pos:end="101:60"><name pos:start="101:60" pos:end="101:60">j</name></expr>]</index></name><operator pos:start="101:62" pos:end="101:62">)</operator> <operator pos:start="101:64" pos:end="101:65">&gt;&gt;</operator> <literal type="number" pos:start="101:67" pos:end="101:67">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="103:21" pos:end="103:44"><expr pos:start="103:21" pos:end="103:43"><name pos:start="103:21" pos:end="103:25">level</name> <operator pos:start="103:27" pos:end="103:27">=</operator> <operator pos:start="103:29" pos:end="103:29">(</operator><name pos:start="103:30" pos:end="103:34">level</name> <operator pos:start="103:36" pos:end="103:36">-</operator> <literal type="number" pos:start="103:38" pos:end="103:38">1</literal><operator pos:start="103:39" pos:end="103:39">)</operator> <operator pos:start="103:41" pos:end="103:41">|</operator> <literal type="number" pos:start="103:43" pos:end="103:43">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="105:21" pos:end="105:35"><expr pos:start="105:21" pos:end="105:34"><name pos:start="105:21" pos:end="105:25">level</name> <operator pos:start="105:27" pos:end="105:27">=</operator> <operator pos:start="105:29" pos:end="105:29">-</operator><name pos:start="105:30" pos:end="105:34">level</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="107:19" pos:end="113:17">else <block pos:start="107:24" pos:end="113:17">{<block_content pos:start="109:21" pos:end="111:44">

                    <expr_stmt pos:start="109:21" pos:end="109:68"><expr pos:start="109:21" pos:end="109:67"><name pos:start="109:21" pos:end="109:25">level</name> <operator pos:start="109:27" pos:end="109:27">=</operator> <operator pos:start="109:29" pos:end="109:29">(</operator><name pos:start="109:30" pos:end="109:34">level</name> <operator pos:start="109:36" pos:end="109:36">*</operator> <name pos:start="109:38" pos:end="109:43">qscale</name> <operator pos:start="109:45" pos:end="109:45">*</operator> <name pos:start="109:47" pos:end="109:61"><name pos:start="109:47" pos:end="109:58">quant_matrix</name><index pos:start="109:59" pos:end="109:61">[<expr pos:start="109:60" pos:end="109:60"><name pos:start="109:60" pos:end="109:60">j</name></expr>]</index></name><operator pos:start="109:62" pos:end="109:62">)</operator> <operator pos:start="109:64" pos:end="109:65">&gt;&gt;</operator> <literal type="number" pos:start="109:67" pos:end="109:67">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:44"><expr pos:start="111:21" pos:end="111:43"><name pos:start="111:21" pos:end="111:25">level</name> <operator pos:start="111:27" pos:end="111:27">=</operator> <operator pos:start="111:29" pos:end="111:29">(</operator><name pos:start="111:30" pos:end="111:34">level</name> <operator pos:start="111:36" pos:end="111:36">-</operator> <literal type="number" pos:start="111:38" pos:end="111:38">1</literal><operator pos:start="111:39" pos:end="111:39">)</operator> <operator pos:start="111:41" pos:end="111:41">|</operator> <literal type="number" pos:start="111:43" pos:end="111:43">1</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="117:13" pos:end="123:13"><if pos:start="117:13" pos:end="123:13">if <condition pos:start="117:16" pos:end="117:23">(<expr pos:start="117:17" pos:end="117:22"><name pos:start="117:17" pos:end="117:17">i</name> <operator pos:start="117:19" pos:end="117:19">&gt;</operator> <literal type="number" pos:start="117:21" pos:end="117:22">63</literal></expr>)</condition> <block pos:start="117:25" pos:end="123:13">{<block_content pos:start="119:17" pos:end="121:26">

                <expr_stmt pos:start="119:17" pos:end="119:94"><expr pos:start="119:17" pos:end="119:93"><call pos:start="119:17" pos:end="119:93"><name pos:start="119:17" pos:end="119:22">av_log</name><argument_list pos:start="119:23" pos:end="119:93">(<argument pos:start="119:24" pos:end="119:31"><expr pos:start="119:24" pos:end="119:31"><name pos:start="119:24" pos:end="119:31"><name pos:start="119:24" pos:end="119:24">s</name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:31">avctx</name></name></expr></argument>, <argument pos:start="119:34" pos:end="119:45"><expr pos:start="119:34" pos:end="119:45"><name pos:start="119:34" pos:end="119:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:48" pos:end="119:74"><expr pos:start="119:48" pos:end="119:74"><literal type="string" pos:start="119:48" pos:end="119:74">"ac-tex damaged at %d %d\n"</literal></expr></argument>, <argument pos:start="119:77" pos:end="119:83"><expr pos:start="119:77" pos:end="119:83"><name pos:start="119:77" pos:end="119:83"><name pos:start="119:77" pos:end="119:77">s</name><operator pos:start="119:78" pos:end="119:79">-&gt;</operator><name pos:start="119:80" pos:end="119:83">mb_x</name></name></expr></argument>, <argument pos:start="119:86" pos:end="119:92"><expr pos:start="119:86" pos:end="119:92"><name pos:start="119:86" pos:end="119:92"><name pos:start="119:86" pos:end="119:86">s</name><operator pos:start="119:87" pos:end="119:88">-&gt;</operator><name pos:start="119:89" pos:end="119:92">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="121:17" pos:end="121:26">return <expr pos:start="121:24" pos:end="121:25"><operator pos:start="121:24" pos:end="121:24">-</operator><literal type="number" pos:start="121:25" pos:end="121:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="127:13" pos:end="127:29"><expr pos:start="127:13" pos:end="127:28"><name pos:start="127:13" pos:end="127:20"><name pos:start="127:13" pos:end="127:17">block</name><index pos:start="127:18" pos:end="127:20">[<expr pos:start="127:19" pos:end="127:19"><name pos:start="127:19" pos:end="127:19">j</name></expr>]</index></name> <operator pos:start="127:22" pos:end="127:22">=</operator> <name pos:start="127:24" pos:end="127:28">level</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="131:9" pos:end="131:33"><expr pos:start="131:9" pos:end="131:32"><call pos:start="131:9" pos:end="131:32"><name pos:start="131:9" pos:end="131:20">CLOSE_READER</name><argument_list pos:start="131:21" pos:end="131:32">(<argument pos:start="131:22" pos:end="131:23"><expr pos:start="131:22" pos:end="131:23"><name pos:start="131:22" pos:end="131:23">re</name></expr></argument>, <argument pos:start="131:26" pos:end="131:31"><expr pos:start="131:26" pos:end="131:31"><operator pos:start="131:26" pos:end="131:26">&amp;</operator><name pos:start="131:27" pos:end="131:31"><name pos:start="131:27" pos:end="131:27">s</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="135:5" pos:end="135:31"><expr pos:start="135:5" pos:end="135:30"><name pos:start="135:5" pos:end="135:26"><name pos:start="135:5" pos:end="135:5">s</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:23">block_last_index</name><index pos:start="135:24" pos:end="135:26">[<expr pos:start="135:25" pos:end="135:25"><name pos:start="135:25" pos:end="135:25">n</name></expr>]</index></name> <operator pos:start="135:28" pos:end="135:28">=</operator> <name pos:start="135:30" pos:end="135:30">i</name></expr>;</expr_stmt>

   <return pos:start="137:4" pos:end="137:12">return <expr pos:start="137:11" pos:end="137:11"><literal type="number" pos:start="137:11" pos:end="137:11">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
