<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4356.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">nbd_client_co_preadv</name><parameter_list pos:start="1:25" pos:end="3:71">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:41">BlockDriverState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">bs</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:62"><decl pos:start="1:48" pos:end="1:62"><type pos:start="1:48" pos:end="1:62"><name pos:start="1:48" pos:end="1:55">uint64_t</name></type> <name pos:start="1:57" pos:end="1:62">offset</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:39"><decl pos:start="3:26" pos:end="3:39"><type pos:start="3:26" pos:end="3:39"><name pos:start="3:26" pos:end="3:33">uint64_t</name></type> <name pos:start="3:35" pos:end="3:39">bytes</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:59"><decl pos:start="3:42" pos:end="3:59"><type pos:start="3:42" pos:end="3:59"><name pos:start="3:42" pos:end="3:53">QEMUIOVector</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:59">qiov</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:70"><decl pos:start="3:62" pos:end="3:70"><type pos:start="3:62" pos:end="3:70"><name pos:start="3:62" pos:end="3:64">int</name></type> <name pos:start="3:66" pos:end="3:70">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="27:1">{<block_content pos:start="7:5" pos:end="25:46">

    <decl_stmt pos:start="7:5" pos:end="15:6"><decl pos:start="7:5" pos:end="15:5"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">NBDRequest</name></type> <name pos:start="7:16" pos:end="7:22">request</name> <init pos:start="7:24" pos:end="15:5">= <expr pos:start="7:26" pos:end="15:5"><block pos:start="7:26" pos:end="15:5">{

        <expr pos:start="9:9" pos:end="9:28"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:13">type</name> <operator pos:start="9:15" pos:end="9:15">=</operator> <name pos:start="9:17" pos:end="9:28">NBD_CMD_READ</name></expr>,

        <expr pos:start="11:9" pos:end="11:22"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:13">from</name> <operator pos:start="11:15" pos:end="11:15">=</operator> <name pos:start="11:17" pos:end="11:22">offset</name></expr>,

        <expr pos:start="13:9" pos:end="13:20"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:12">len</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:20">bytes</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><call pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:10">assert</name><argument_list pos:start="19:11" pos:end="19:40">(<argument pos:start="19:12" pos:end="19:39"><expr pos:start="19:12" pos:end="19:39"><name pos:start="19:12" pos:end="19:16">bytes</name> <operator pos:start="19:18" pos:end="19:19">&lt;=</operator> <name pos:start="19:21" pos:end="19:39">NBD_MAX_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><call pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:10">assert</name><argument_list pos:start="21:11" pos:end="21:18">(<argument pos:start="21:12" pos:end="21:17"><expr pos:start="21:12" pos:end="21:17"><operator pos:start="21:12" pos:end="21:12">!</operator><name pos:start="21:13" pos:end="21:17">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="25:5" pos:end="25:46">return <expr pos:start="25:12" pos:end="25:45"><call pos:start="25:12" pos:end="25:45"><name pos:start="25:12" pos:end="25:25">nbd_co_request</name><argument_list pos:start="25:26" pos:end="25:45">(<argument pos:start="25:27" pos:end="25:28"><expr pos:start="25:27" pos:end="25:28"><name pos:start="25:27" pos:end="25:28">bs</name></expr></argument>, <argument pos:start="25:31" pos:end="25:38"><expr pos:start="25:31" pos:end="25:38"><operator pos:start="25:31" pos:end="25:31">&amp;</operator><name pos:start="25:32" pos:end="25:38">request</name></expr></argument>, <argument pos:start="25:41" pos:end="25:44"><expr pos:start="25:41" pos:end="25:44"><name pos:start="25:41" pos:end="25:44">qiov</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
