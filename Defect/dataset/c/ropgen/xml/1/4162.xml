<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4162.c" pos:tabs="8"><function pos:start="1:1" pos:end="449:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">liveness_pass_1</name><parameter_list pos:start="1:28" pos:end="1:42">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:38">TCGContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="449:1">{<block_content pos:start="5:5" pos:end="447:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">nb_globals</name> <init pos:start="5:20" pos:end="5:34">= <expr pos:start="5:22" pos:end="5:34"><name pos:start="5:22" pos:end="5:34"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:34">nb_globals</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">oi</name></decl>, <decl pos:start="7:13" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:19">oi_prev</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><call pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:19">tcg_la_func_end</name><argument_list pos:start="11:20" pos:end="11:22">(<argument pos:start="11:21" pos:end="11:21"><expr pos:start="11:21" pos:end="11:21"><name pos:start="11:21" pos:end="11:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="15:5" pos:end="447:5">for <control pos:start="15:9" pos:end="15:59">(<init pos:start="15:10" pos:end="15:36"><expr pos:start="15:10" pos:end="15:35"><name pos:start="15:10" pos:end="15:11">oi</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:30"><name pos:start="15:15" pos:end="15:15">s</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:27">gen_op_buf</name><index pos:start="15:28" pos:end="15:30">[<expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr>]</index></name><operator pos:start="15:31" pos:end="15:31">.</operator><name pos:start="15:32" pos:end="15:35">prev</name></expr>;</init> <condition pos:start="15:38" pos:end="15:45"><expr pos:start="15:38" pos:end="15:44"><name pos:start="15:38" pos:end="15:39">oi</name> <operator pos:start="15:41" pos:end="15:42">!=</operator> <literal type="number" pos:start="15:44" pos:end="15:44">0</literal></expr>;</condition> <incr pos:start="15:47" pos:end="15:58"><expr pos:start="15:47" pos:end="15:58"><name pos:start="15:47" pos:end="15:48">oi</name> <operator pos:start="15:50" pos:end="15:50">=</operator> <name pos:start="15:52" pos:end="15:58">oi_prev</name></expr></incr>)</control> <block pos:start="15:61" pos:end="447:5">{<block_content pos:start="17:9" pos:end="445:28">

        <decl_stmt pos:start="17:9" pos:end="17:34"><decl pos:start="17:9" pos:end="17:13"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">i</name></decl>, <decl pos:start="17:16" pos:end="17:23"><type ref="prev" pos:start="17:9" pos:end="17:11"/><name pos:start="17:16" pos:end="17:23">nb_iargs</name></decl>, <decl pos:start="17:26" pos:end="17:33"><type ref="prev" pos:start="17:9" pos:end="17:11"/><name pos:start="17:26" pos:end="17:33">nb_oargs</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:36"><decl pos:start="19:9" pos:end="19:25"><type pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:17">TCGOpcode</name></type> <name pos:start="19:19" pos:end="19:25">opc_new</name></decl>, <decl pos:start="19:28" pos:end="19:35"><type ref="prev" pos:start="19:9" pos:end="19:17"/><name pos:start="19:28" pos:end="19:35">opc_new2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:27"><decl pos:start="21:9" pos:end="21:26"><type pos:start="21:9" pos:end="21:12"><name pos:start="21:9" pos:end="21:12">bool</name></type> <name pos:start="21:14" pos:end="21:26">have_opc_new2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:33"><decl pos:start="23:9" pos:end="23:32"><type pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:19">TCGLifeData</name></type> <name pos:start="23:21" pos:end="23:28">arg_life</name> <init pos:start="23:30" pos:end="23:32">= <expr pos:start="23:32" pos:end="23:32"><literal type="number" pos:start="23:32" pos:end="23:32">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:24"><decl pos:start="25:9" pos:end="25:23"><type pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:15">TCGTemp</name> <modifier pos:start="25:17" pos:end="25:17">*</modifier></type><name pos:start="25:18" pos:end="25:23">arg_ts</name></decl>;</decl_stmt>



        <decl_stmt pos:start="29:9" pos:end="29:46"><decl pos:start="29:9" pos:end="29:45"><type pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:13">TCGOp</name> <modifier pos:start="29:15" pos:end="29:15">*</modifier> <specifier pos:start="29:17" pos:end="29:21">const</specifier></type> <name pos:start="29:23" pos:end="29:24">op</name> <init pos:start="29:26" pos:end="29:45">= <expr pos:start="29:28" pos:end="29:45"><operator pos:start="29:28" pos:end="29:28">&amp;</operator><name pos:start="29:29" pos:end="29:45"><name pos:start="29:29" pos:end="29:29">s</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:41">gen_op_buf</name><index pos:start="29:42" pos:end="29:45">[<expr pos:start="29:43" pos:end="29:44"><name pos:start="29:43" pos:end="29:44">oi</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:32"><decl pos:start="31:9" pos:end="31:31"><type pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:17">TCGOpcode</name></type> <name pos:start="31:19" pos:end="31:21">opc</name> <init pos:start="31:23" pos:end="31:31">= <expr pos:start="31:25" pos:end="31:31"><name pos:start="31:25" pos:end="31:31"><name pos:start="31:25" pos:end="31:26">op</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:31">opc</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:48"><decl pos:start="33:9" pos:end="33:47"><type pos:start="33:9" pos:end="33:24"><specifier pos:start="33:9" pos:end="33:13">const</specifier> <name pos:start="33:15" pos:end="33:22">TCGOpDef</name> <modifier pos:start="33:24" pos:end="33:24">*</modifier></type><name pos:start="33:25" pos:end="33:27">def</name> <init pos:start="33:29" pos:end="33:47">= <expr pos:start="33:31" pos:end="33:47"><operator pos:start="33:31" pos:end="33:31">&amp;</operator><name pos:start="33:32" pos:end="33:47"><name pos:start="33:32" pos:end="33:42">tcg_op_defs</name><index pos:start="33:43" pos:end="33:47">[<expr pos:start="33:44" pos:end="33:46"><name pos:start="33:44" pos:end="33:46">opc</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:15">oi_prev</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:26"><name pos:start="37:19" pos:end="37:20">op</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:26">prev</name></name></expr>;</expr_stmt>



        <switch pos:start="41:9" pos:end="443:9">switch <condition pos:start="41:16" pos:end="41:20">(<expr pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">opc</name></expr>)</condition> <block pos:start="41:22" pos:end="443:9">{<block_content pos:start="43:9" pos:end="441:18">

        <case pos:start="43:9" pos:end="43:27">case <expr pos:start="43:14" pos:end="43:26"><name pos:start="43:14" pos:end="43:26">INDEX_op_call</name></expr>:</case>

            <block pos:start="45:13" pos:end="163:13">{<block_content pos:start="47:17" pos:end="161:17">

                <decl_stmt pos:start="47:17" pos:end="47:31"><decl pos:start="47:17" pos:end="47:30"><type pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:19">int</name></type> <name pos:start="47:21" pos:end="47:30">call_flags</name></decl>;</decl_stmt>



                <expr_stmt pos:start="51:17" pos:end="51:37"><expr pos:start="51:17" pos:end="51:36"><name pos:start="51:17" pos:end="51:24">nb_oargs</name> <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:36"><name pos:start="51:28" pos:end="51:29">op</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:36">callo</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:37"><expr pos:start="53:17" pos:end="53:36"><name pos:start="53:17" pos:end="53:24">nb_iargs</name> <operator pos:start="53:26" pos:end="53:26">=</operator> <name pos:start="53:28" pos:end="53:36"><name pos:start="53:28" pos:end="53:29">op</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:36">calli</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:63"><expr pos:start="55:17" pos:end="55:62"><name pos:start="55:17" pos:end="55:26">call_flags</name> <operator pos:start="55:28" pos:end="55:28">=</operator> <name pos:start="55:30" pos:end="55:62"><name pos:start="55:30" pos:end="55:31">op</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:37">args</name><index pos:start="55:38" pos:end="55:62">[<expr pos:start="55:39" pos:end="55:61"><name pos:start="55:39" pos:end="55:46">nb_oargs</name> <operator pos:start="55:48" pos:end="55:48">+</operator> <name pos:start="55:50" pos:end="55:57">nb_iargs</name> <operator pos:start="55:59" pos:end="55:59">+</operator> <literal type="number" pos:start="55:61" pos:end="55:61">1</literal></expr>]</index></name></expr>;</expr_stmt>



                <comment type="block" pos:start="59:17" pos:end="59:77">/* pure functions can be removed if their result is unused */</comment>

                <if_stmt pos:start="61:17" pos:end="161:17"><if pos:start="61:17" pos:end="77:17">if <condition pos:start="61:20" pos:end="61:58">(<expr pos:start="61:21" pos:end="61:57"><name pos:start="61:21" pos:end="61:30">call_flags</name> <operator pos:start="61:32" pos:end="61:32">&amp;</operator> <name pos:start="61:34" pos:end="61:57">TCG_CALL_NO_SIDE_EFFECTS</name></expr>)</condition> <block pos:start="61:60" pos:end="77:17">{<block_content pos:start="63:21" pos:end="75:35">

                    <for pos:start="63:21" pos:end="73:21">for <control pos:start="63:25" pos:end="63:50">(<init pos:start="63:26" pos:end="63:31"><expr pos:start="63:26" pos:end="63:30"><name pos:start="63:26" pos:end="63:26">i</name> <operator pos:start="63:28" pos:end="63:28">=</operator> <literal type="number" pos:start="63:30" pos:end="63:30">0</literal></expr>;</init> <condition pos:start="63:33" pos:end="63:45"><expr pos:start="63:33" pos:end="63:44"><name pos:start="63:33" pos:end="63:33">i</name> <operator pos:start="63:35" pos:end="63:35">&lt;</operator> <name pos:start="63:37" pos:end="63:44">nb_oargs</name></expr>;</condition> <incr pos:start="63:47" pos:end="63:49"><expr pos:start="63:47" pos:end="63:49"><name pos:start="63:47" pos:end="63:47">i</name><operator pos:start="63:48" pos:end="63:49">++</operator></expr></incr>)</control> <block pos:start="63:52" pos:end="73:21">{<block_content pos:start="65:25" pos:end="71:25">

                        <expr_stmt pos:start="65:25" pos:end="65:55"><expr pos:start="65:25" pos:end="65:54"><name pos:start="65:25" pos:end="65:30">arg_ts</name> <operator pos:start="65:32" pos:end="65:32">=</operator> <call pos:start="65:34" pos:end="65:54"><name pos:start="65:34" pos:end="65:41">arg_temp</name><argument_list pos:start="65:42" pos:end="65:54">(<argument pos:start="65:43" pos:end="65:53"><expr pos:start="65:43" pos:end="65:53"><name pos:start="65:43" pos:end="65:53"><name pos:start="65:43" pos:end="65:44">op</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:50">args</name><index pos:start="65:51" pos:end="65:53">[<expr pos:start="65:52" pos:end="65:52"><name pos:start="65:52" pos:end="65:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="67:25" pos:end="71:25"><if pos:start="67:25" pos:end="71:25">if <condition pos:start="67:28" pos:end="67:53">(<expr pos:start="67:29" pos:end="67:52"><name pos:start="67:29" pos:end="67:41"><name pos:start="67:29" pos:end="67:34">arg_ts</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:41">state</name></name> <operator pos:start="67:43" pos:end="67:44">!=</operator> <name pos:start="67:46" pos:end="67:52">TS_DEAD</name></expr>)</condition> <block pos:start="67:55" pos:end="71:25">{<block_content pos:start="69:29" pos:end="69:52">

                            <goto pos:start="69:29" pos:end="69:52">goto <name pos:start="69:34" pos:end="69:51">do_not_remove_call</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                    <goto pos:start="75:21" pos:end="75:35">goto <name pos:start="75:26" pos:end="75:34">do_remove</name>;</goto>

                </block_content>}</block></if> <else pos:start="77:19" pos:end="161:17">else <block pos:start="77:24" pos:end="161:17">{<block_content pos:start="79:17" pos:end="159:21">

                <label pos:start="79:17" pos:end="79:35"><name pos:start="79:17" pos:end="79:34">do_not_remove_call</name>:</label>



                    <comment type="block" pos:start="83:21" pos:end="83:46">/* output args are dead */</comment>

                    <for pos:start="85:21" pos:end="103:21">for <control pos:start="85:25" pos:end="85:50">(<init pos:start="85:26" pos:end="85:31"><expr pos:start="85:26" pos:end="85:30"><name pos:start="85:26" pos:end="85:26">i</name> <operator pos:start="85:28" pos:end="85:28">=</operator> <literal type="number" pos:start="85:30" pos:end="85:30">0</literal></expr>;</init> <condition pos:start="85:33" pos:end="85:45"><expr pos:start="85:33" pos:end="85:44"><name pos:start="85:33" pos:end="85:33">i</name> <operator pos:start="85:35" pos:end="85:35">&lt;</operator> <name pos:start="85:37" pos:end="85:44">nb_oargs</name></expr>;</condition> <incr pos:start="85:47" pos:end="85:49"><expr pos:start="85:47" pos:end="85:49"><name pos:start="85:47" pos:end="85:47">i</name><operator pos:start="85:48" pos:end="85:49">++</operator></expr></incr>)</control> <block pos:start="85:52" pos:end="103:21">{<block_content pos:start="87:25" pos:end="101:48">

                        <expr_stmt pos:start="87:25" pos:end="87:55"><expr pos:start="87:25" pos:end="87:54"><name pos:start="87:25" pos:end="87:30">arg_ts</name> <operator pos:start="87:32" pos:end="87:32">=</operator> <call pos:start="87:34" pos:end="87:54"><name pos:start="87:34" pos:end="87:41">arg_temp</name><argument_list pos:start="87:42" pos:end="87:54">(<argument pos:start="87:43" pos:end="87:53"><expr pos:start="87:43" pos:end="87:53"><name pos:start="87:43" pos:end="87:53"><name pos:start="87:43" pos:end="87:44">op</name><operator pos:start="87:45" pos:end="87:46">-&gt;</operator><name pos:start="87:47" pos:end="87:50">args</name><index pos:start="87:51" pos:end="87:53">[<expr pos:start="87:52" pos:end="87:52"><name pos:start="87:52" pos:end="87:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="89:25" pos:end="93:25"><if pos:start="89:25" pos:end="93:25">if <condition pos:start="89:28" pos:end="89:52">(<expr pos:start="89:29" pos:end="89:51"><name pos:start="89:29" pos:end="89:41"><name pos:start="89:29" pos:end="89:34">arg_ts</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:41">state</name></name> <operator pos:start="89:43" pos:end="89:43">&amp;</operator> <name pos:start="89:45" pos:end="89:51">TS_DEAD</name></expr>)</condition> <block pos:start="89:54" pos:end="93:25">{<block_content pos:start="91:29" pos:end="91:54">

                            <expr_stmt pos:start="91:29" pos:end="91:54"><expr pos:start="91:29" pos:end="91:53"><name pos:start="91:29" pos:end="91:36">arg_life</name> <operator pos:start="91:38" pos:end="91:39">|=</operator> <name pos:start="91:41" pos:end="91:48">DEAD_ARG</name> <operator pos:start="91:50" pos:end="91:51">&lt;&lt;</operator> <name pos:start="91:53" pos:end="91:53">i</name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="95:25" pos:end="99:25"><if pos:start="95:25" pos:end="99:25">if <condition pos:start="95:28" pos:end="95:51">(<expr pos:start="95:29" pos:end="95:50"><name pos:start="95:29" pos:end="95:41"><name pos:start="95:29" pos:end="95:34">arg_ts</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:41">state</name></name> <operator pos:start="95:43" pos:end="95:43">&amp;</operator> <name pos:start="95:45" pos:end="95:50">TS_MEM</name></expr>)</condition> <block pos:start="95:53" pos:end="99:25">{<block_content pos:start="97:29" pos:end="97:54">

                            <expr_stmt pos:start="97:29" pos:end="97:54"><expr pos:start="97:29" pos:end="97:53"><name pos:start="97:29" pos:end="97:36">arg_life</name> <operator pos:start="97:38" pos:end="97:39">|=</operator> <name pos:start="97:41" pos:end="97:48">SYNC_ARG</name> <operator pos:start="97:50" pos:end="97:51">&lt;&lt;</operator> <name pos:start="97:53" pos:end="97:53">i</name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="101:25" pos:end="101:48"><expr pos:start="101:25" pos:end="101:47"><name pos:start="101:25" pos:end="101:37"><name pos:start="101:25" pos:end="101:30">arg_ts</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:37">state</name></name> <operator pos:start="101:39" pos:end="101:39">=</operator> <name pos:start="101:41" pos:end="101:47">TS_DEAD</name></expr>;</expr_stmt>

                    </block_content>}</block></for>



                    <if_stmt pos:start="107:21" pos:end="129:21"><if pos:start="107:21" pos:end="119:21">if <condition pos:start="107:24" pos:end="109:67">(<expr pos:start="107:25" pos:end="109:66"><operator pos:start="107:25" pos:end="107:25">!</operator><operator pos:start="107:26" pos:end="107:26">(</operator><name pos:start="107:27" pos:end="107:36">call_flags</name> <operator pos:start="107:38" pos:end="107:38">&amp;</operator> <operator pos:start="107:40" pos:end="107:40">(</operator><name pos:start="107:41" pos:end="107:65">TCG_CALL_NO_WRITE_GLOBALS</name> <operator pos:start="107:67" pos:end="107:67">|</operator>

                                        <name pos:start="109:41" pos:end="109:64">TCG_CALL_NO_READ_GLOBALS</name><operator pos:start="109:65" pos:end="109:65">)</operator><operator pos:start="109:66" pos:end="109:66">)</operator></expr>)</condition> <block pos:start="109:69" pos:end="119:21">{<block_content pos:start="113:25" pos:end="117:25">

                        <comment type="block" pos:start="111:25" pos:end="111:62">/* globals should go back to memory */</comment>

                        <for pos:start="113:25" pos:end="117:25">for <control pos:start="113:29" pos:end="113:56">(<init pos:start="113:30" pos:end="113:35"><expr pos:start="113:30" pos:end="113:34"><name pos:start="113:30" pos:end="113:30">i</name> <operator pos:start="113:32" pos:end="113:32">=</operator> <literal type="number" pos:start="113:34" pos:end="113:34">0</literal></expr>;</init> <condition pos:start="113:37" pos:end="113:51"><expr pos:start="113:37" pos:end="113:50"><name pos:start="113:37" pos:end="113:37">i</name> <operator pos:start="113:39" pos:end="113:39">&lt;</operator> <name pos:start="113:41" pos:end="113:50">nb_globals</name></expr>;</condition> <incr pos:start="113:53" pos:end="113:55"><expr pos:start="113:53" pos:end="113:55"><name pos:start="113:53" pos:end="113:53">i</name><operator pos:start="113:54" pos:end="113:55">++</operator></expr></incr>)</control> <block pos:start="113:58" pos:end="117:25">{<block_content pos:start="115:29" pos:end="115:65">

                            <expr_stmt pos:start="115:29" pos:end="115:65"><expr pos:start="115:29" pos:end="115:64"><name pos:start="115:29" pos:end="115:39"><name pos:start="115:29" pos:end="115:29">s</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:36">temps</name><index pos:start="115:37" pos:end="115:39">[<expr pos:start="115:38" pos:end="115:38"><name pos:start="115:38" pos:end="115:38">i</name></expr>]</index></name><operator pos:start="115:40" pos:end="115:40">.</operator><name pos:start="115:41" pos:end="115:45">state</name> <operator pos:start="115:47" pos:end="115:47">=</operator> <name pos:start="115:49" pos:end="115:55">TS_DEAD</name> <operator pos:start="115:57" pos:end="115:57">|</operator> <name pos:start="115:59" pos:end="115:64">TS_MEM</name></expr>;</expr_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if> <if type="elseif" pos:start="119:23" pos:end="129:21">else if <condition pos:start="119:31" pos:end="119:72">(<expr pos:start="119:32" pos:end="119:71"><operator pos:start="119:32" pos:end="119:32">!</operator><operator pos:start="119:33" pos:end="119:33">(</operator><name pos:start="119:34" pos:end="119:43">call_flags</name> <operator pos:start="119:45" pos:end="119:45">&amp;</operator> <name pos:start="119:47" pos:end="119:70">TCG_CALL_NO_READ_GLOBALS</name><operator pos:start="119:71" pos:end="119:71">)</operator></expr>)</condition> <block pos:start="119:74" pos:end="129:21">{<block_content pos:start="123:25" pos:end="127:25">

                        <comment type="block" pos:start="121:25" pos:end="121:64">/* globals should be synced to memory */</comment>

                        <for pos:start="123:25" pos:end="127:25">for <control pos:start="123:29" pos:end="123:56">(<init pos:start="123:30" pos:end="123:35"><expr pos:start="123:30" pos:end="123:34"><name pos:start="123:30" pos:end="123:30">i</name> <operator pos:start="123:32" pos:end="123:32">=</operator> <literal type="number" pos:start="123:34" pos:end="123:34">0</literal></expr>;</init> <condition pos:start="123:37" pos:end="123:51"><expr pos:start="123:37" pos:end="123:50"><name pos:start="123:37" pos:end="123:37">i</name> <operator pos:start="123:39" pos:end="123:39">&lt;</operator> <name pos:start="123:41" pos:end="123:50">nb_globals</name></expr>;</condition> <incr pos:start="123:53" pos:end="123:55"><expr pos:start="123:53" pos:end="123:55"><name pos:start="123:53" pos:end="123:53">i</name><operator pos:start="123:54" pos:end="123:55">++</operator></expr></incr>)</control> <block pos:start="123:58" pos:end="127:25">{<block_content pos:start="125:29" pos:end="125:56">

                            <expr_stmt pos:start="125:29" pos:end="125:56"><expr pos:start="125:29" pos:end="125:55"><name pos:start="125:29" pos:end="125:39"><name pos:start="125:29" pos:end="125:29">s</name><operator pos:start="125:30" pos:end="125:31">-&gt;</operator><name pos:start="125:32" pos:end="125:36">temps</name><index pos:start="125:37" pos:end="125:39">[<expr pos:start="125:38" pos:end="125:38"><name pos:start="125:38" pos:end="125:38">i</name></expr>]</index></name><operator pos:start="125:40" pos:end="125:40">.</operator><name pos:start="125:41" pos:end="125:45">state</name> <operator pos:start="125:47" pos:end="125:48">|=</operator> <name pos:start="125:50" pos:end="125:55">TS_MEM</name></expr>;</expr_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if></if_stmt>



                    <comment type="block" pos:start="133:21" pos:end="133:66">/* record arguments that die in this helper */</comment>

                    <for pos:start="135:21" pos:end="145:21">for <control pos:start="135:25" pos:end="135:68">(<init pos:start="135:26" pos:end="135:38"><expr pos:start="135:26" pos:end="135:37"><name pos:start="135:26" pos:end="135:26">i</name> <operator pos:start="135:28" pos:end="135:28">=</operator> <name pos:start="135:30" pos:end="135:37">nb_oargs</name></expr>;</init> <condition pos:start="135:40" pos:end="135:63"><expr pos:start="135:40" pos:end="135:62"><name pos:start="135:40" pos:end="135:40">i</name> <operator pos:start="135:42" pos:end="135:42">&lt;</operator> <name pos:start="135:44" pos:end="135:51">nb_iargs</name> <operator pos:start="135:53" pos:end="135:53">+</operator> <name pos:start="135:55" pos:end="135:62">nb_oargs</name></expr>;</condition> <incr pos:start="135:65" pos:end="135:67"><expr pos:start="135:65" pos:end="135:67"><name pos:start="135:65" pos:end="135:65">i</name><operator pos:start="135:66" pos:end="135:67">++</operator></expr></incr>)</control> <block pos:start="135:70" pos:end="145:21">{<block_content pos:start="137:25" pos:end="143:25">

                        <expr_stmt pos:start="137:25" pos:end="137:55"><expr pos:start="137:25" pos:end="137:54"><name pos:start="137:25" pos:end="137:30">arg_ts</name> <operator pos:start="137:32" pos:end="137:32">=</operator> <call pos:start="137:34" pos:end="137:54"><name pos:start="137:34" pos:end="137:41">arg_temp</name><argument_list pos:start="137:42" pos:end="137:54">(<argument pos:start="137:43" pos:end="137:53"><expr pos:start="137:43" pos:end="137:53"><name pos:start="137:43" pos:end="137:53"><name pos:start="137:43" pos:end="137:44">op</name><operator pos:start="137:45" pos:end="137:46">-&gt;</operator><name pos:start="137:47" pos:end="137:50">args</name><index pos:start="137:51" pos:end="137:53">[<expr pos:start="137:52" pos:end="137:52"><name pos:start="137:52" pos:end="137:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="139:25" pos:end="143:25"><if pos:start="139:25" pos:end="143:25">if <condition pos:start="139:28" pos:end="139:62">(<expr pos:start="139:29" pos:end="139:61"><name pos:start="139:29" pos:end="139:34">arg_ts</name> <operator pos:start="139:36" pos:end="139:37">&amp;&amp;</operator> <name pos:start="139:39" pos:end="139:51"><name pos:start="139:39" pos:end="139:44">arg_ts</name><operator pos:start="139:45" pos:end="139:46">-&gt;</operator><name pos:start="139:47" pos:end="139:51">state</name></name> <operator pos:start="139:53" pos:end="139:53">&amp;</operator> <name pos:start="139:55" pos:end="139:61">TS_DEAD</name></expr>)</condition> <block pos:start="139:64" pos:end="143:25">{<block_content pos:start="141:29" pos:end="141:54">

                            <expr_stmt pos:start="141:29" pos:end="141:54"><expr pos:start="141:29" pos:end="141:53"><name pos:start="141:29" pos:end="141:36">arg_life</name> <operator pos:start="141:38" pos:end="141:39">|=</operator> <name pos:start="141:41" pos:end="141:48">DEAD_ARG</name> <operator pos:start="141:50" pos:end="141:51">&lt;&lt;</operator> <name pos:start="141:53" pos:end="141:53">i</name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                    <comment type="block" pos:start="147:21" pos:end="147:72">/* input arguments are live for preceding opcodes */</comment>

                    <for pos:start="149:21" pos:end="159:21">for <control pos:start="149:25" pos:end="149:68">(<init pos:start="149:26" pos:end="149:38"><expr pos:start="149:26" pos:end="149:37"><name pos:start="149:26" pos:end="149:26">i</name> <operator pos:start="149:28" pos:end="149:28">=</operator> <name pos:start="149:30" pos:end="149:37">nb_oargs</name></expr>;</init> <condition pos:start="149:40" pos:end="149:63"><expr pos:start="149:40" pos:end="149:62"><name pos:start="149:40" pos:end="149:40">i</name> <operator pos:start="149:42" pos:end="149:42">&lt;</operator> <name pos:start="149:44" pos:end="149:51">nb_iargs</name> <operator pos:start="149:53" pos:end="149:53">+</operator> <name pos:start="149:55" pos:end="149:62">nb_oargs</name></expr>;</condition> <incr pos:start="149:65" pos:end="149:67"><expr pos:start="149:65" pos:end="149:67"><name pos:start="149:65" pos:end="149:65">i</name><operator pos:start="149:66" pos:end="149:67">++</operator></expr></incr>)</control> <block pos:start="149:70" pos:end="159:21">{<block_content pos:start="151:25" pos:end="157:25">

                        <expr_stmt pos:start="151:25" pos:end="151:55"><expr pos:start="151:25" pos:end="151:54"><name pos:start="151:25" pos:end="151:30">arg_ts</name> <operator pos:start="151:32" pos:end="151:32">=</operator> <call pos:start="151:34" pos:end="151:54"><name pos:start="151:34" pos:end="151:41">arg_temp</name><argument_list pos:start="151:42" pos:end="151:54">(<argument pos:start="151:43" pos:end="151:53"><expr pos:start="151:43" pos:end="151:53"><name pos:start="151:43" pos:end="151:53"><name pos:start="151:43" pos:end="151:44">op</name><operator pos:start="151:45" pos:end="151:46">-&gt;</operator><name pos:start="151:47" pos:end="151:50">args</name><index pos:start="151:51" pos:end="151:53">[<expr pos:start="151:52" pos:end="151:52"><name pos:start="151:52" pos:end="151:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="153:25" pos:end="157:25"><if pos:start="153:25" pos:end="157:25">if <condition pos:start="153:28" pos:end="153:35">(<expr pos:start="153:29" pos:end="153:34"><name pos:start="153:29" pos:end="153:34">arg_ts</name></expr>)</condition> <block pos:start="153:37" pos:end="157:25">{<block_content pos:start="155:29" pos:end="155:54">

                            <expr_stmt pos:start="155:29" pos:end="155:54"><expr pos:start="155:29" pos:end="155:53"><name pos:start="155:29" pos:end="155:41"><name pos:start="155:29" pos:end="155:34">arg_ts</name><operator pos:start="155:35" pos:end="155:36">-&gt;</operator><name pos:start="155:37" pos:end="155:41">state</name></name> <operator pos:start="155:43" pos:end="155:44">&amp;=</operator> <operator pos:start="155:46" pos:end="155:46">~</operator><name pos:start="155:47" pos:end="155:53">TS_DEAD</name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block>

            <break pos:start="165:13" pos:end="165:18">break;</break>

        <case pos:start="167:9" pos:end="167:33">case <expr pos:start="167:14" pos:end="167:32"><name pos:start="167:14" pos:end="167:32">INDEX_op_insn_start</name></expr>:</case>

            <break pos:start="169:13" pos:end="169:18">break;</break>

        <case pos:start="171:9" pos:end="171:30">case <expr pos:start="171:14" pos:end="171:29"><name pos:start="171:14" pos:end="171:29">INDEX_op_discard</name></expr>:</case>

            <comment type="block" pos:start="173:13" pos:end="173:44">/* mark the temporary as dead */</comment>

            <expr_stmt pos:start="175:13" pos:end="175:51"><expr pos:start="175:13" pos:end="175:50"><call pos:start="175:13" pos:end="175:33"><name pos:start="175:13" pos:end="175:20">arg_temp</name><argument_list pos:start="175:21" pos:end="175:33">(<argument pos:start="175:22" pos:end="175:32"><expr pos:start="175:22" pos:end="175:32"><name pos:start="175:22" pos:end="175:32"><name pos:start="175:22" pos:end="175:23">op</name><operator pos:start="175:24" pos:end="175:25">-&gt;</operator><name pos:start="175:26" pos:end="175:29">args</name><index pos:start="175:30" pos:end="175:32">[<expr pos:start="175:31" pos:end="175:31"><literal type="number" pos:start="175:31" pos:end="175:31">0</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="175:34" pos:end="175:35">-&gt;</operator><name pos:start="175:36" pos:end="175:40">state</name> <operator pos:start="175:42" pos:end="175:42">=</operator> <name pos:start="175:44" pos:end="175:50">TS_DEAD</name></expr>;</expr_stmt>

            <break pos:start="177:13" pos:end="177:18">break;</break>



        <case pos:start="181:9" pos:end="181:31">case <expr pos:start="181:14" pos:end="181:30"><name pos:start="181:14" pos:end="181:30">INDEX_op_add2_i32</name></expr>:</case>

            <expr_stmt pos:start="183:13" pos:end="183:39"><expr pos:start="183:13" pos:end="183:38"><name pos:start="183:13" pos:end="183:19">opc_new</name> <operator pos:start="183:21" pos:end="183:21">=</operator> <name pos:start="183:23" pos:end="183:38">INDEX_op_add_i32</name></expr>;</expr_stmt>

            <goto pos:start="185:13" pos:end="185:28">goto <name pos:start="185:18" pos:end="185:27">do_addsub2</name>;</goto>

        <case pos:start="187:9" pos:end="187:31">case <expr pos:start="187:14" pos:end="187:30"><name pos:start="187:14" pos:end="187:30">INDEX_op_sub2_i32</name></expr>:</case>

            <expr_stmt pos:start="189:13" pos:end="189:39"><expr pos:start="189:13" pos:end="189:38"><name pos:start="189:13" pos:end="189:19">opc_new</name> <operator pos:start="189:21" pos:end="189:21">=</operator> <name pos:start="189:23" pos:end="189:38">INDEX_op_sub_i32</name></expr>;</expr_stmt>

            <goto pos:start="191:13" pos:end="191:28">goto <name pos:start="191:18" pos:end="191:27">do_addsub2</name>;</goto>

        <case pos:start="193:9" pos:end="193:31">case <expr pos:start="193:14" pos:end="193:30"><name pos:start="193:14" pos:end="193:30">INDEX_op_add2_i64</name></expr>:</case>

            <expr_stmt pos:start="195:13" pos:end="195:39"><expr pos:start="195:13" pos:end="195:38"><name pos:start="195:13" pos:end="195:19">opc_new</name> <operator pos:start="195:21" pos:end="195:21">=</operator> <name pos:start="195:23" pos:end="195:38">INDEX_op_add_i64</name></expr>;</expr_stmt>

            <goto pos:start="197:13" pos:end="197:28">goto <name pos:start="197:18" pos:end="197:27">do_addsub2</name>;</goto>

        <case pos:start="199:9" pos:end="199:31">case <expr pos:start="199:14" pos:end="199:30"><name pos:start="199:14" pos:end="199:30">INDEX_op_sub2_i64</name></expr>:</case>

            <expr_stmt pos:start="201:13" pos:end="201:39"><expr pos:start="201:13" pos:end="201:38"><name pos:start="201:13" pos:end="201:19">opc_new</name> <operator pos:start="201:21" pos:end="201:21">=</operator> <name pos:start="201:23" pos:end="201:38">INDEX_op_sub_i64</name></expr>;</expr_stmt>

        <label pos:start="203:9" pos:end="203:19"><name pos:start="203:9" pos:end="203:18">do_addsub2</name>:</label>

            <expr_stmt pos:start="205:13" pos:end="205:25"><expr pos:start="205:13" pos:end="205:24"><name pos:start="205:13" pos:end="205:20">nb_iargs</name> <operator pos:start="205:22" pos:end="205:22">=</operator> <literal type="number" pos:start="205:24" pos:end="205:24">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:25"><expr pos:start="207:13" pos:end="207:24"><name pos:start="207:13" pos:end="207:20">nb_oargs</name> <operator pos:start="207:22" pos:end="207:22">=</operator> <literal type="number" pos:start="207:24" pos:end="207:24">2</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="209:13" pos:end="215:45">/* Test if the high part of the operation is dead, but not

               the low part.  The result can be optimized to a simple

               add or sub.  This happens often for x86_64 guest when the

               cpu mode is set to 32 bit.  */</comment>

            <if_stmt pos:start="217:13" pos:end="241:13"><if pos:start="217:13" pos:end="241:13">if <condition pos:start="217:16" pos:end="217:56">(<expr pos:start="217:17" pos:end="217:55"><call pos:start="217:17" pos:end="217:37"><name pos:start="217:17" pos:end="217:24">arg_temp</name><argument_list pos:start="217:25" pos:end="217:37">(<argument pos:start="217:26" pos:end="217:36"><expr pos:start="217:26" pos:end="217:36"><name pos:start="217:26" pos:end="217:36"><name pos:start="217:26" pos:end="217:27">op</name><operator pos:start="217:28" pos:end="217:29">-&gt;</operator><name pos:start="217:30" pos:end="217:33">args</name><index pos:start="217:34" pos:end="217:36">[<expr pos:start="217:35" pos:end="217:35"><literal type="number" pos:start="217:35" pos:end="217:35">1</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="217:38" pos:end="217:39">-&gt;</operator><name pos:start="217:40" pos:end="217:44">state</name> <operator pos:start="217:46" pos:end="217:47">==</operator> <name pos:start="217:49" pos:end="217:55">TS_DEAD</name></expr>)</condition> <block pos:start="217:58" pos:end="241:13">{<block_content pos:start="219:17" pos:end="239:29">

                <if_stmt pos:start="219:17" pos:end="223:17"><if pos:start="219:17" pos:end="223:17">if <condition pos:start="219:20" pos:end="219:60">(<expr pos:start="219:21" pos:end="219:59"><call pos:start="219:21" pos:end="219:41"><name pos:start="219:21" pos:end="219:28">arg_temp</name><argument_list pos:start="219:29" pos:end="219:41">(<argument pos:start="219:30" pos:end="219:40"><expr pos:start="219:30" pos:end="219:40"><name pos:start="219:30" pos:end="219:40"><name pos:start="219:30" pos:end="219:31">op</name><operator pos:start="219:32" pos:end="219:33">-&gt;</operator><name pos:start="219:34" pos:end="219:37">args</name><index pos:start="219:38" pos:end="219:40">[<expr pos:start="219:39" pos:end="219:39"><literal type="number" pos:start="219:39" pos:end="219:39">0</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="219:42" pos:end="219:43">-&gt;</operator><name pos:start="219:44" pos:end="219:48">state</name> <operator pos:start="219:50" pos:end="219:51">==</operator> <name pos:start="219:53" pos:end="219:59">TS_DEAD</name></expr>)</condition> <block pos:start="219:62" pos:end="223:17">{<block_content pos:start="221:21" pos:end="221:35">

                    <goto pos:start="221:21" pos:end="221:35">goto <name pos:start="221:26" pos:end="221:34">do_remove</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="225:17" pos:end="227:56">/* Replace the opcode and adjust the args in place,

                   leaving 3 unused args at the end.  */</comment>

                <expr_stmt pos:start="229:17" pos:end="229:40"><expr pos:start="229:17" pos:end="229:39"><name pos:start="229:17" pos:end="229:23"><name pos:start="229:17" pos:end="229:18">op</name><operator pos:start="229:19" pos:end="229:20">-&gt;</operator><name pos:start="229:21" pos:end="229:23">opc</name></name> <operator pos:start="229:25" pos:end="229:25">=</operator> <name pos:start="229:27" pos:end="229:29">opc</name> <operator pos:start="229:31" pos:end="229:31">=</operator> <name pos:start="229:33" pos:end="229:39">opc_new</name></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:42"><expr pos:start="231:17" pos:end="231:41"><name pos:start="231:17" pos:end="231:27"><name pos:start="231:17" pos:end="231:18">op</name><operator pos:start="231:19" pos:end="231:20">-&gt;</operator><name pos:start="231:21" pos:end="231:24">args</name><index pos:start="231:25" pos:end="231:27">[<expr pos:start="231:26" pos:end="231:26"><literal type="number" pos:start="231:26" pos:end="231:26">1</literal></expr>]</index></name> <operator pos:start="231:29" pos:end="231:29">=</operator> <name pos:start="231:31" pos:end="231:41"><name pos:start="231:31" pos:end="231:32">op</name><operator pos:start="231:33" pos:end="231:34">-&gt;</operator><name pos:start="231:35" pos:end="231:38">args</name><index pos:start="231:39" pos:end="231:41">[<expr pos:start="231:40" pos:end="231:40"><literal type="number" pos:start="231:40" pos:end="231:40">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:42"><expr pos:start="233:17" pos:end="233:41"><name pos:start="233:17" pos:end="233:27"><name pos:start="233:17" pos:end="233:18">op</name><operator pos:start="233:19" pos:end="233:20">-&gt;</operator><name pos:start="233:21" pos:end="233:24">args</name><index pos:start="233:25" pos:end="233:27">[<expr pos:start="233:26" pos:end="233:26"><literal type="number" pos:start="233:26" pos:end="233:26">2</literal></expr>]</index></name> <operator pos:start="233:29" pos:end="233:29">=</operator> <name pos:start="233:31" pos:end="233:41"><name pos:start="233:31" pos:end="233:32">op</name><operator pos:start="233:33" pos:end="233:34">-&gt;</operator><name pos:start="233:35" pos:end="233:38">args</name><index pos:start="233:39" pos:end="233:41">[<expr pos:start="233:40" pos:end="233:40"><literal type="number" pos:start="233:40" pos:end="233:40">4</literal></expr>]</index></name></expr>;</expr_stmt>

                <comment type="block" pos:start="235:17" pos:end="235:76">/* Fall through and mark the single-word operation live.  */</comment>

                <expr_stmt pos:start="237:17" pos:end="237:29"><expr pos:start="237:17" pos:end="237:28"><name pos:start="237:17" pos:end="237:24">nb_iargs</name> <operator pos:start="237:26" pos:end="237:26">=</operator> <literal type="number" pos:start="237:28" pos:end="237:28">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="239:17" pos:end="239:29"><expr pos:start="239:17" pos:end="239:28"><name pos:start="239:17" pos:end="239:24">nb_oargs</name> <operator pos:start="239:26" pos:end="239:26">=</operator> <literal type="number" pos:start="239:28" pos:end="239:28">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="243:13" pos:end="243:31">goto <name pos:start="243:18" pos:end="243:30">do_not_remove</name>;</goto>



        <case pos:start="247:9" pos:end="247:32">case <expr pos:start="247:14" pos:end="247:31"><name pos:start="247:14" pos:end="247:31">INDEX_op_mulu2_i32</name></expr>:</case>

            <expr_stmt pos:start="249:13" pos:end="249:39"><expr pos:start="249:13" pos:end="249:38"><name pos:start="249:13" pos:end="249:19">opc_new</name> <operator pos:start="249:21" pos:end="249:21">=</operator> <name pos:start="249:23" pos:end="249:38">INDEX_op_mul_i32</name></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:42"><expr pos:start="251:13" pos:end="251:41"><name pos:start="251:13" pos:end="251:20">opc_new2</name> <operator pos:start="251:22" pos:end="251:22">=</operator> <name pos:start="251:24" pos:end="251:41">INDEX_op_muluh_i32</name></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:53"><expr pos:start="253:13" pos:end="253:52"><name pos:start="253:13" pos:end="253:25">have_opc_new2</name> <operator pos:start="253:27" pos:end="253:27">=</operator> <name pos:start="253:29" pos:end="253:52">TCG_TARGET_HAS_muluh_i32</name></expr>;</expr_stmt>

            <goto pos:start="255:13" pos:end="255:25">goto <name pos:start="255:18" pos:end="255:24">do_mul2</name>;</goto>

        <case pos:start="257:9" pos:end="257:32">case <expr pos:start="257:14" pos:end="257:31"><name pos:start="257:14" pos:end="257:31">INDEX_op_muls2_i32</name></expr>:</case>

            <expr_stmt pos:start="259:13" pos:end="259:39"><expr pos:start="259:13" pos:end="259:38"><name pos:start="259:13" pos:end="259:19">opc_new</name> <operator pos:start="259:21" pos:end="259:21">=</operator> <name pos:start="259:23" pos:end="259:38">INDEX_op_mul_i32</name></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:42"><expr pos:start="261:13" pos:end="261:41"><name pos:start="261:13" pos:end="261:20">opc_new2</name> <operator pos:start="261:22" pos:end="261:22">=</operator> <name pos:start="261:24" pos:end="261:41">INDEX_op_mulsh_i32</name></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:53"><expr pos:start="263:13" pos:end="263:52"><name pos:start="263:13" pos:end="263:25">have_opc_new2</name> <operator pos:start="263:27" pos:end="263:27">=</operator> <name pos:start="263:29" pos:end="263:52">TCG_TARGET_HAS_mulsh_i32</name></expr>;</expr_stmt>

            <goto pos:start="265:13" pos:end="265:25">goto <name pos:start="265:18" pos:end="265:24">do_mul2</name>;</goto>

        <case pos:start="267:9" pos:end="267:32">case <expr pos:start="267:14" pos:end="267:31"><name pos:start="267:14" pos:end="267:31">INDEX_op_mulu2_i64</name></expr>:</case>

            <expr_stmt pos:start="269:13" pos:end="269:39"><expr pos:start="269:13" pos:end="269:38"><name pos:start="269:13" pos:end="269:19">opc_new</name> <operator pos:start="269:21" pos:end="269:21">=</operator> <name pos:start="269:23" pos:end="269:38">INDEX_op_mul_i64</name></expr>;</expr_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:42"><expr pos:start="271:13" pos:end="271:41"><name pos:start="271:13" pos:end="271:20">opc_new2</name> <operator pos:start="271:22" pos:end="271:22">=</operator> <name pos:start="271:24" pos:end="271:41">INDEX_op_muluh_i64</name></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:53"><expr pos:start="273:13" pos:end="273:52"><name pos:start="273:13" pos:end="273:25">have_opc_new2</name> <operator pos:start="273:27" pos:end="273:27">=</operator> <name pos:start="273:29" pos:end="273:52">TCG_TARGET_HAS_muluh_i64</name></expr>;</expr_stmt>

            <goto pos:start="275:13" pos:end="275:25">goto <name pos:start="275:18" pos:end="275:24">do_mul2</name>;</goto>

        <case pos:start="277:9" pos:end="277:32">case <expr pos:start="277:14" pos:end="277:31"><name pos:start="277:14" pos:end="277:31">INDEX_op_muls2_i64</name></expr>:</case>

            <expr_stmt pos:start="279:13" pos:end="279:39"><expr pos:start="279:13" pos:end="279:38"><name pos:start="279:13" pos:end="279:19">opc_new</name> <operator pos:start="279:21" pos:end="279:21">=</operator> <name pos:start="279:23" pos:end="279:38">INDEX_op_mul_i64</name></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:42"><expr pos:start="281:13" pos:end="281:41"><name pos:start="281:13" pos:end="281:20">opc_new2</name> <operator pos:start="281:22" pos:end="281:22">=</operator> <name pos:start="281:24" pos:end="281:41">INDEX_op_mulsh_i64</name></expr>;</expr_stmt>

            <expr_stmt pos:start="283:13" pos:end="283:53"><expr pos:start="283:13" pos:end="283:52"><name pos:start="283:13" pos:end="283:25">have_opc_new2</name> <operator pos:start="283:27" pos:end="283:27">=</operator> <name pos:start="283:29" pos:end="283:52">TCG_TARGET_HAS_mulsh_i64</name></expr>;</expr_stmt>

            <goto pos:start="285:13" pos:end="285:25">goto <name pos:start="285:18" pos:end="285:24">do_mul2</name>;</goto>

        <label pos:start="287:9" pos:end="287:16"><name pos:start="287:9" pos:end="287:15">do_mul2</name>:</label>

            <expr_stmt pos:start="289:13" pos:end="289:25"><expr pos:start="289:13" pos:end="289:24"><name pos:start="289:13" pos:end="289:20">nb_iargs</name> <operator pos:start="289:22" pos:end="289:22">=</operator> <literal type="number" pos:start="289:24" pos:end="289:24">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:25"><expr pos:start="291:13" pos:end="291:24"><name pos:start="291:13" pos:end="291:20">nb_oargs</name> <operator pos:start="291:22" pos:end="291:22">=</operator> <literal type="number" pos:start="291:24" pos:end="291:24">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="293:13" pos:end="327:13"><if pos:start="293:13" pos:end="311:13">if <condition pos:start="293:16" pos:end="293:56">(<expr pos:start="293:17" pos:end="293:55"><call pos:start="293:17" pos:end="293:37"><name pos:start="293:17" pos:end="293:24">arg_temp</name><argument_list pos:start="293:25" pos:end="293:37">(<argument pos:start="293:26" pos:end="293:36"><expr pos:start="293:26" pos:end="293:36"><name pos:start="293:26" pos:end="293:36"><name pos:start="293:26" pos:end="293:27">op</name><operator pos:start="293:28" pos:end="293:29">-&gt;</operator><name pos:start="293:30" pos:end="293:33">args</name><index pos:start="293:34" pos:end="293:36">[<expr pos:start="293:35" pos:end="293:35"><literal type="number" pos:start="293:35" pos:end="293:35">1</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="293:38" pos:end="293:39">-&gt;</operator><name pos:start="293:40" pos:end="293:44">state</name> <operator pos:start="293:46" pos:end="293:47">==</operator> <name pos:start="293:49" pos:end="293:55">TS_DEAD</name></expr>)</condition> <block pos:start="293:58" pos:end="311:13">{<block_content pos:start="295:17" pos:end="309:42">

                <if_stmt pos:start="295:17" pos:end="301:17"><if pos:start="295:17" pos:end="301:17">if <condition pos:start="295:20" pos:end="295:60">(<expr pos:start="295:21" pos:end="295:59"><call pos:start="295:21" pos:end="295:41"><name pos:start="295:21" pos:end="295:28">arg_temp</name><argument_list pos:start="295:29" pos:end="295:41">(<argument pos:start="295:30" pos:end="295:40"><expr pos:start="295:30" pos:end="295:40"><name pos:start="295:30" pos:end="295:40"><name pos:start="295:30" pos:end="295:31">op</name><operator pos:start="295:32" pos:end="295:33">-&gt;</operator><name pos:start="295:34" pos:end="295:37">args</name><index pos:start="295:38" pos:end="295:40">[<expr pos:start="295:39" pos:end="295:39"><literal type="number" pos:start="295:39" pos:end="295:39">0</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="295:42" pos:end="295:43">-&gt;</operator><name pos:start="295:44" pos:end="295:48">state</name> <operator pos:start="295:50" pos:end="295:51">==</operator> <name pos:start="295:53" pos:end="295:59">TS_DEAD</name></expr>)</condition> <block pos:start="295:62" pos:end="301:17">{<block_content pos:start="299:21" pos:end="299:35">

                    <comment type="block" pos:start="297:21" pos:end="297:64">/* Both parts of the operation are dead.  */</comment>

                    <goto pos:start="299:21" pos:end="299:35">goto <name pos:start="299:26" pos:end="299:34">do_remove</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="303:17" pos:end="303:79">/* The high part of the operation is dead; generate the low. */</comment>

                <expr_stmt pos:start="305:17" pos:end="305:40"><expr pos:start="305:17" pos:end="305:39"><name pos:start="305:17" pos:end="305:23"><name pos:start="305:17" pos:end="305:18">op</name><operator pos:start="305:19" pos:end="305:20">-&gt;</operator><name pos:start="305:21" pos:end="305:23">opc</name></name> <operator pos:start="305:25" pos:end="305:25">=</operator> <name pos:start="305:27" pos:end="305:29">opc</name> <operator pos:start="305:31" pos:end="305:31">=</operator> <name pos:start="305:33" pos:end="305:39">opc_new</name></expr>;</expr_stmt>

                <expr_stmt pos:start="307:17" pos:end="307:42"><expr pos:start="307:17" pos:end="307:41"><name pos:start="307:17" pos:end="307:27"><name pos:start="307:17" pos:end="307:18">op</name><operator pos:start="307:19" pos:end="307:20">-&gt;</operator><name pos:start="307:21" pos:end="307:24">args</name><index pos:start="307:25" pos:end="307:27">[<expr pos:start="307:26" pos:end="307:26"><literal type="number" pos:start="307:26" pos:end="307:26">1</literal></expr>]</index></name> <operator pos:start="307:29" pos:end="307:29">=</operator> <name pos:start="307:31" pos:end="307:41"><name pos:start="307:31" pos:end="307:32">op</name><operator pos:start="307:33" pos:end="307:34">-&gt;</operator><name pos:start="307:35" pos:end="307:38">args</name><index pos:start="307:39" pos:end="307:41">[<expr pos:start="307:40" pos:end="307:40"><literal type="number" pos:start="307:40" pos:end="307:40">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="309:17" pos:end="309:42"><expr pos:start="309:17" pos:end="309:41"><name pos:start="309:17" pos:end="309:27"><name pos:start="309:17" pos:end="309:18">op</name><operator pos:start="309:19" pos:end="309:20">-&gt;</operator><name pos:start="309:21" pos:end="309:24">args</name><index pos:start="309:25" pos:end="309:27">[<expr pos:start="309:26" pos:end="309:26"><literal type="number" pos:start="309:26" pos:end="309:26">2</literal></expr>]</index></name> <operator pos:start="309:29" pos:end="309:29">=</operator> <name pos:start="309:31" pos:end="309:41"><name pos:start="309:31" pos:end="309:32">op</name><operator pos:start="309:33" pos:end="309:34">-&gt;</operator><name pos:start="309:35" pos:end="309:38">args</name><index pos:start="309:39" pos:end="309:41">[<expr pos:start="309:40" pos:end="309:40"><literal type="number" pos:start="309:40" pos:end="309:40">3</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="311:15" pos:end="323:13">else if <condition pos:start="311:23" pos:end="311:80">(<expr pos:start="311:24" pos:end="311:79"><call pos:start="311:24" pos:end="311:44"><name pos:start="311:24" pos:end="311:31">arg_temp</name><argument_list pos:start="311:32" pos:end="311:44">(<argument pos:start="311:33" pos:end="311:43"><expr pos:start="311:33" pos:end="311:43"><name pos:start="311:33" pos:end="311:43"><name pos:start="311:33" pos:end="311:34">op</name><operator pos:start="311:35" pos:end="311:36">-&gt;</operator><name pos:start="311:37" pos:end="311:40">args</name><index pos:start="311:41" pos:end="311:43">[<expr pos:start="311:42" pos:end="311:42"><literal type="number" pos:start="311:42" pos:end="311:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="311:45" pos:end="311:46">-&gt;</operator><name pos:start="311:47" pos:end="311:51">state</name> <operator pos:start="311:53" pos:end="311:54">==</operator> <name pos:start="311:56" pos:end="311:62">TS_DEAD</name> <operator pos:start="311:64" pos:end="311:65">&amp;&amp;</operator> <name pos:start="311:67" pos:end="311:79">have_opc_new2</name></expr>)</condition> <block pos:start="311:82" pos:end="323:13">{<block_content pos:start="315:17" pos:end="321:42">

                <comment type="block" pos:start="313:17" pos:end="313:79">/* The low part of the operation is dead; generate the high. */</comment>

                <expr_stmt pos:start="315:17" pos:end="315:41"><expr pos:start="315:17" pos:end="315:40"><name pos:start="315:17" pos:end="315:23"><name pos:start="315:17" pos:end="315:18">op</name><operator pos:start="315:19" pos:end="315:20">-&gt;</operator><name pos:start="315:21" pos:end="315:23">opc</name></name> <operator pos:start="315:25" pos:end="315:25">=</operator> <name pos:start="315:27" pos:end="315:29">opc</name> <operator pos:start="315:31" pos:end="315:31">=</operator> <name pos:start="315:33" pos:end="315:40">opc_new2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="317:17" pos:end="317:42"><expr pos:start="317:17" pos:end="317:41"><name pos:start="317:17" pos:end="317:27"><name pos:start="317:17" pos:end="317:18">op</name><operator pos:start="317:19" pos:end="317:20">-&gt;</operator><name pos:start="317:21" pos:end="317:24">args</name><index pos:start="317:25" pos:end="317:27">[<expr pos:start="317:26" pos:end="317:26"><literal type="number" pos:start="317:26" pos:end="317:26">0</literal></expr>]</index></name> <operator pos:start="317:29" pos:end="317:29">=</operator> <name pos:start="317:31" pos:end="317:41"><name pos:start="317:31" pos:end="317:32">op</name><operator pos:start="317:33" pos:end="317:34">-&gt;</operator><name pos:start="317:35" pos:end="317:38">args</name><index pos:start="317:39" pos:end="317:41">[<expr pos:start="317:40" pos:end="317:40"><literal type="number" pos:start="317:40" pos:end="317:40">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="319:17" pos:end="319:42"><expr pos:start="319:17" pos:end="319:41"><name pos:start="319:17" pos:end="319:27"><name pos:start="319:17" pos:end="319:18">op</name><operator pos:start="319:19" pos:end="319:20">-&gt;</operator><name pos:start="319:21" pos:end="319:24">args</name><index pos:start="319:25" pos:end="319:27">[<expr pos:start="319:26" pos:end="319:26"><literal type="number" pos:start="319:26" pos:end="319:26">1</literal></expr>]</index></name> <operator pos:start="319:29" pos:end="319:29">=</operator> <name pos:start="319:31" pos:end="319:41"><name pos:start="319:31" pos:end="319:32">op</name><operator pos:start="319:33" pos:end="319:34">-&gt;</operator><name pos:start="319:35" pos:end="319:38">args</name><index pos:start="319:39" pos:end="319:41">[<expr pos:start="319:40" pos:end="319:40"><literal type="number" pos:start="319:40" pos:end="319:40">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="321:17" pos:end="321:42"><expr pos:start="321:17" pos:end="321:41"><name pos:start="321:17" pos:end="321:27"><name pos:start="321:17" pos:end="321:18">op</name><operator pos:start="321:19" pos:end="321:20">-&gt;</operator><name pos:start="321:21" pos:end="321:24">args</name><index pos:start="321:25" pos:end="321:27">[<expr pos:start="321:26" pos:end="321:26"><literal type="number" pos:start="321:26" pos:end="321:26">2</literal></expr>]</index></name> <operator pos:start="321:29" pos:end="321:29">=</operator> <name pos:start="321:31" pos:end="321:41"><name pos:start="321:31" pos:end="321:32">op</name><operator pos:start="321:33" pos:end="321:34">-&gt;</operator><name pos:start="321:35" pos:end="321:38">args</name><index pos:start="321:39" pos:end="321:41">[<expr pos:start="321:40" pos:end="321:40"><literal type="number" pos:start="321:40" pos:end="321:40">3</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="323:15" pos:end="327:13">else <block pos:start="323:20" pos:end="327:13">{<block_content pos:start="325:17" pos:end="325:35">

                <goto pos:start="325:17" pos:end="325:35">goto <name pos:start="325:22" pos:end="325:34">do_not_remove</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <comment type="block" pos:start="329:13" pos:end="329:55">/* Mark the single-word operation live.  */</comment>

            <expr_stmt pos:start="331:13" pos:end="331:25"><expr pos:start="331:13" pos:end="331:24"><name pos:start="331:13" pos:end="331:20">nb_oargs</name> <operator pos:start="331:22" pos:end="331:22">=</operator> <literal type="number" pos:start="331:24" pos:end="331:24">1</literal></expr>;</expr_stmt>

            <goto pos:start="333:13" pos:end="333:31">goto <name pos:start="333:18" pos:end="333:30">do_not_remove</name>;</goto>



        <default pos:start="337:9" pos:end="337:16">default:</default>

            <comment type="block" pos:start="339:13" pos:end="339:77">/* XXX: optimize by hardcoding common cases (e.g. triadic ops) */</comment>

            <expr_stmt pos:start="341:13" pos:end="341:37"><expr pos:start="341:13" pos:end="341:36"><name pos:start="341:13" pos:end="341:20">nb_iargs</name> <operator pos:start="341:22" pos:end="341:22">=</operator> <name pos:start="341:24" pos:end="341:36"><name pos:start="341:24" pos:end="341:26">def</name><operator pos:start="341:27" pos:end="341:28">-&gt;</operator><name pos:start="341:29" pos:end="341:36">nb_iargs</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:37"><expr pos:start="343:13" pos:end="343:36"><name pos:start="343:13" pos:end="343:20">nb_oargs</name> <operator pos:start="343:22" pos:end="343:22">=</operator> <name pos:start="343:24" pos:end="343:36"><name pos:start="343:24" pos:end="343:26">def</name><operator pos:start="343:27" pos:end="343:28">-&gt;</operator><name pos:start="343:29" pos:end="343:36">nb_oargs</name></name></expr>;</expr_stmt>



            <comment type="block" pos:start="347:13" pos:end="351:38">/* Test if the operation can be removed because all

               its outputs are dead. We assume that nb_oargs == 0

               implies side effects */</comment>

            <if_stmt pos:start="353:13" pos:end="439:13"><if pos:start="353:13" pos:end="369:13">if <condition pos:start="353:16" pos:end="353:70">(<expr pos:start="353:17" pos:end="353:69"><operator pos:start="353:17" pos:end="353:17">!</operator><operator pos:start="353:18" pos:end="353:18">(</operator><name pos:start="353:19" pos:end="353:28"><name pos:start="353:19" pos:end="353:21">def</name><operator pos:start="353:22" pos:end="353:23">-&gt;</operator><name pos:start="353:24" pos:end="353:28">flags</name></name> <operator pos:start="353:30" pos:end="353:30">&amp;</operator> <name pos:start="353:32" pos:end="353:51">TCG_OPF_SIDE_EFFECTS</name><operator pos:start="353:52" pos:end="353:52">)</operator> <operator pos:start="353:54" pos:end="353:55">&amp;&amp;</operator> <name pos:start="353:57" pos:end="353:64">nb_oargs</name> <operator pos:start="353:66" pos:end="353:67">!=</operator> <literal type="number" pos:start="353:69" pos:end="353:69">0</literal></expr>)</condition> <block pos:start="353:72" pos:end="369:13">{<block_content pos:start="355:17" pos:end="367:37">

                <for pos:start="355:17" pos:end="363:17">for <control pos:start="355:21" pos:end="355:46">(<init pos:start="355:22" pos:end="355:27"><expr pos:start="355:22" pos:end="355:26"><name pos:start="355:22" pos:end="355:22">i</name> <operator pos:start="355:24" pos:end="355:24">=</operator> <literal type="number" pos:start="355:26" pos:end="355:26">0</literal></expr>;</init> <condition pos:start="355:29" pos:end="355:41"><expr pos:start="355:29" pos:end="355:40"><name pos:start="355:29" pos:end="355:29">i</name> <operator pos:start="355:31" pos:end="355:31">&lt;</operator> <name pos:start="355:33" pos:end="355:40">nb_oargs</name></expr>;</condition> <incr pos:start="355:43" pos:end="355:45"><expr pos:start="355:43" pos:end="355:45"><name pos:start="355:43" pos:end="355:43">i</name><operator pos:start="355:44" pos:end="355:45">++</operator></expr></incr>)</control> <block pos:start="355:48" pos:end="363:17">{<block_content pos:start="357:21" pos:end="361:21">

                    <if_stmt pos:start="357:21" pos:end="361:21"><if pos:start="357:21" pos:end="361:21">if <condition pos:start="357:24" pos:end="357:64">(<expr pos:start="357:25" pos:end="357:63"><call pos:start="357:25" pos:end="357:45"><name pos:start="357:25" pos:end="357:32">arg_temp</name><argument_list pos:start="357:33" pos:end="357:45">(<argument pos:start="357:34" pos:end="357:44"><expr pos:start="357:34" pos:end="357:44"><name pos:start="357:34" pos:end="357:44"><name pos:start="357:34" pos:end="357:35">op</name><operator pos:start="357:36" pos:end="357:37">-&gt;</operator><name pos:start="357:38" pos:end="357:41">args</name><index pos:start="357:42" pos:end="357:44">[<expr pos:start="357:43" pos:end="357:43"><name pos:start="357:43" pos:end="357:43">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="357:46" pos:end="357:47">-&gt;</operator><name pos:start="357:48" pos:end="357:52">state</name> <operator pos:start="357:54" pos:end="357:55">!=</operator> <name pos:start="357:57" pos:end="357:63">TS_DEAD</name></expr>)</condition> <block pos:start="357:66" pos:end="361:21">{<block_content pos:start="359:25" pos:end="359:43">

                        <goto pos:start="359:25" pos:end="359:43">goto <name pos:start="359:30" pos:end="359:42">do_not_remove</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            <label pos:start="365:13" pos:end="365:22"><name pos:start="365:13" pos:end="365:21">do_remove</name>:</label>

                <expr_stmt pos:start="367:17" pos:end="367:37"><expr pos:start="367:17" pos:end="367:36"><call pos:start="367:17" pos:end="367:36"><name pos:start="367:17" pos:end="367:29">tcg_op_remove</name><argument_list pos:start="367:30" pos:end="367:36">(<argument pos:start="367:31" pos:end="367:31"><expr pos:start="367:31" pos:end="367:31"><name pos:start="367:31" pos:end="367:31">s</name></expr></argument>, <argument pos:start="367:34" pos:end="367:35"><expr pos:start="367:34" pos:end="367:35"><name pos:start="367:34" pos:end="367:35">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="369:15" pos:end="439:13">else <block pos:start="369:20" pos:end="439:13">{<block_content pos:start="371:13" pos:end="437:17">

            <label pos:start="371:13" pos:end="371:26"><name pos:start="371:13" pos:end="371:25">do_not_remove</name>:</label>

                <comment type="block" pos:start="373:17" pos:end="373:42">/* output args are dead */</comment>

                <for pos:start="375:17" pos:end="393:17">for <control pos:start="375:21" pos:end="375:46">(<init pos:start="375:22" pos:end="375:27"><expr pos:start="375:22" pos:end="375:26"><name pos:start="375:22" pos:end="375:22">i</name> <operator pos:start="375:24" pos:end="375:24">=</operator> <literal type="number" pos:start="375:26" pos:end="375:26">0</literal></expr>;</init> <condition pos:start="375:29" pos:end="375:41"><expr pos:start="375:29" pos:end="375:40"><name pos:start="375:29" pos:end="375:29">i</name> <operator pos:start="375:31" pos:end="375:31">&lt;</operator> <name pos:start="375:33" pos:end="375:40">nb_oargs</name></expr>;</condition> <incr pos:start="375:43" pos:end="375:45"><expr pos:start="375:43" pos:end="375:45"><name pos:start="375:43" pos:end="375:43">i</name><operator pos:start="375:44" pos:end="375:45">++</operator></expr></incr>)</control> <block pos:start="375:48" pos:end="393:17">{<block_content pos:start="377:21" pos:end="391:44">

                    <expr_stmt pos:start="377:21" pos:end="377:51"><expr pos:start="377:21" pos:end="377:50"><name pos:start="377:21" pos:end="377:26">arg_ts</name> <operator pos:start="377:28" pos:end="377:28">=</operator> <call pos:start="377:30" pos:end="377:50"><name pos:start="377:30" pos:end="377:37">arg_temp</name><argument_list pos:start="377:38" pos:end="377:50">(<argument pos:start="377:39" pos:end="377:49"><expr pos:start="377:39" pos:end="377:49"><name pos:start="377:39" pos:end="377:49"><name pos:start="377:39" pos:end="377:40">op</name><operator pos:start="377:41" pos:end="377:42">-&gt;</operator><name pos:start="377:43" pos:end="377:46">args</name><index pos:start="377:47" pos:end="377:49">[<expr pos:start="377:48" pos:end="377:48"><name pos:start="377:48" pos:end="377:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="379:21" pos:end="383:21"><if pos:start="379:21" pos:end="383:21">if <condition pos:start="379:24" pos:end="379:48">(<expr pos:start="379:25" pos:end="379:47"><name pos:start="379:25" pos:end="379:37"><name pos:start="379:25" pos:end="379:30">arg_ts</name><operator pos:start="379:31" pos:end="379:32">-&gt;</operator><name pos:start="379:33" pos:end="379:37">state</name></name> <operator pos:start="379:39" pos:end="379:39">&amp;</operator> <name pos:start="379:41" pos:end="379:47">TS_DEAD</name></expr>)</condition> <block pos:start="379:50" pos:end="383:21">{<block_content pos:start="381:25" pos:end="381:50">

                        <expr_stmt pos:start="381:25" pos:end="381:50"><expr pos:start="381:25" pos:end="381:49"><name pos:start="381:25" pos:end="381:32">arg_life</name> <operator pos:start="381:34" pos:end="381:35">|=</operator> <name pos:start="381:37" pos:end="381:44">DEAD_ARG</name> <operator pos:start="381:46" pos:end="381:47">&lt;&lt;</operator> <name pos:start="381:49" pos:end="381:49">i</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="385:21" pos:end="389:21"><if pos:start="385:21" pos:end="389:21">if <condition pos:start="385:24" pos:end="385:47">(<expr pos:start="385:25" pos:end="385:46"><name pos:start="385:25" pos:end="385:37"><name pos:start="385:25" pos:end="385:30">arg_ts</name><operator pos:start="385:31" pos:end="385:32">-&gt;</operator><name pos:start="385:33" pos:end="385:37">state</name></name> <operator pos:start="385:39" pos:end="385:39">&amp;</operator> <name pos:start="385:41" pos:end="385:46">TS_MEM</name></expr>)</condition> <block pos:start="385:49" pos:end="389:21">{<block_content pos:start="387:25" pos:end="387:50">

                        <expr_stmt pos:start="387:25" pos:end="387:50"><expr pos:start="387:25" pos:end="387:49"><name pos:start="387:25" pos:end="387:32">arg_life</name> <operator pos:start="387:34" pos:end="387:35">|=</operator> <name pos:start="387:37" pos:end="387:44">SYNC_ARG</name> <operator pos:start="387:46" pos:end="387:47">&lt;&lt;</operator> <name pos:start="387:49" pos:end="387:49">i</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="391:21" pos:end="391:44"><expr pos:start="391:21" pos:end="391:43"><name pos:start="391:21" pos:end="391:33"><name pos:start="391:21" pos:end="391:26">arg_ts</name><operator pos:start="391:27" pos:end="391:28">-&gt;</operator><name pos:start="391:29" pos:end="391:33">state</name></name> <operator pos:start="391:35" pos:end="391:35">=</operator> <name pos:start="391:37" pos:end="391:43">TS_DEAD</name></expr>;</expr_stmt>

                </block_content>}</block></for>



                <comment type="block" pos:start="397:17" pos:end="397:51">/* if end of basic block, update */</comment>

                <if_stmt pos:start="399:17" pos:end="413:17"><if pos:start="399:17" pos:end="403:17">if <condition pos:start="399:20" pos:end="399:48">(<expr pos:start="399:21" pos:end="399:47"><name pos:start="399:21" pos:end="399:30"><name pos:start="399:21" pos:end="399:23">def</name><operator pos:start="399:24" pos:end="399:25">-&gt;</operator><name pos:start="399:26" pos:end="399:30">flags</name></name> <operator pos:start="399:32" pos:end="399:32">&amp;</operator> <name pos:start="399:34" pos:end="399:47">TCG_OPF_BB_END</name></expr>)</condition> <block pos:start="399:50" pos:end="403:17">{<block_content pos:start="401:21" pos:end="401:37">

                    <expr_stmt pos:start="401:21" pos:end="401:37"><expr pos:start="401:21" pos:end="401:36"><call pos:start="401:21" pos:end="401:36"><name pos:start="401:21" pos:end="401:33">tcg_la_bb_end</name><argument_list pos:start="401:34" pos:end="401:36">(<argument pos:start="401:35" pos:end="401:35"><expr pos:start="401:35" pos:end="401:35"><name pos:start="401:35" pos:end="401:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="403:19" pos:end="413:17">else if <condition pos:start="403:27" pos:end="403:61">(<expr pos:start="403:28" pos:end="403:60"><name pos:start="403:28" pos:end="403:37"><name pos:start="403:28" pos:end="403:30">def</name><operator pos:start="403:31" pos:end="403:32">-&gt;</operator><name pos:start="403:33" pos:end="403:37">flags</name></name> <operator pos:start="403:39" pos:end="403:39">&amp;</operator> <name pos:start="403:41" pos:end="403:60">TCG_OPF_SIDE_EFFECTS</name></expr>)</condition> <block pos:start="403:63" pos:end="413:17">{<block_content pos:start="407:21" pos:end="411:21">

                    <comment type="block" pos:start="405:21" pos:end="405:60">/* globals should be synced to memory */</comment>

                    <for pos:start="407:21" pos:end="411:21">for <control pos:start="407:25" pos:end="407:52">(<init pos:start="407:26" pos:end="407:31"><expr pos:start="407:26" pos:end="407:30"><name pos:start="407:26" pos:end="407:26">i</name> <operator pos:start="407:28" pos:end="407:28">=</operator> <literal type="number" pos:start="407:30" pos:end="407:30">0</literal></expr>;</init> <condition pos:start="407:33" pos:end="407:47"><expr pos:start="407:33" pos:end="407:46"><name pos:start="407:33" pos:end="407:33">i</name> <operator pos:start="407:35" pos:end="407:35">&lt;</operator> <name pos:start="407:37" pos:end="407:46">nb_globals</name></expr>;</condition> <incr pos:start="407:49" pos:end="407:51"><expr pos:start="407:49" pos:end="407:51"><name pos:start="407:49" pos:end="407:49">i</name><operator pos:start="407:50" pos:end="407:51">++</operator></expr></incr>)</control> <block pos:start="407:54" pos:end="411:21">{<block_content pos:start="409:25" pos:end="409:52">

                        <expr_stmt pos:start="409:25" pos:end="409:52"><expr pos:start="409:25" pos:end="409:51"><name pos:start="409:25" pos:end="409:35"><name pos:start="409:25" pos:end="409:25">s</name><operator pos:start="409:26" pos:end="409:27">-&gt;</operator><name pos:start="409:28" pos:end="409:32">temps</name><index pos:start="409:33" pos:end="409:35">[<expr pos:start="409:34" pos:end="409:34"><name pos:start="409:34" pos:end="409:34">i</name></expr>]</index></name><operator pos:start="409:36" pos:end="409:36">.</operator><name pos:start="409:37" pos:end="409:41">state</name> <operator pos:start="409:43" pos:end="409:44">|=</operator> <name pos:start="409:46" pos:end="409:51">TS_MEM</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="417:17" pos:end="417:62">/* record arguments that die in this opcode */</comment>

                <for pos:start="419:17" pos:end="429:17">for <control pos:start="419:21" pos:end="419:64">(<init pos:start="419:22" pos:end="419:34"><expr pos:start="419:22" pos:end="419:33"><name pos:start="419:22" pos:end="419:22">i</name> <operator pos:start="419:24" pos:end="419:24">=</operator> <name pos:start="419:26" pos:end="419:33">nb_oargs</name></expr>;</init> <condition pos:start="419:36" pos:end="419:59"><expr pos:start="419:36" pos:end="419:58"><name pos:start="419:36" pos:end="419:36">i</name> <operator pos:start="419:38" pos:end="419:38">&lt;</operator> <name pos:start="419:40" pos:end="419:47">nb_oargs</name> <operator pos:start="419:49" pos:end="419:49">+</operator> <name pos:start="419:51" pos:end="419:58">nb_iargs</name></expr>;</condition> <incr pos:start="419:61" pos:end="419:63"><expr pos:start="419:61" pos:end="419:63"><name pos:start="419:61" pos:end="419:61">i</name><operator pos:start="419:62" pos:end="419:63">++</operator></expr></incr>)</control> <block pos:start="419:66" pos:end="429:17">{<block_content pos:start="421:21" pos:end="427:21">

                    <expr_stmt pos:start="421:21" pos:end="421:51"><expr pos:start="421:21" pos:end="421:50"><name pos:start="421:21" pos:end="421:26">arg_ts</name> <operator pos:start="421:28" pos:end="421:28">=</operator> <call pos:start="421:30" pos:end="421:50"><name pos:start="421:30" pos:end="421:37">arg_temp</name><argument_list pos:start="421:38" pos:end="421:50">(<argument pos:start="421:39" pos:end="421:49"><expr pos:start="421:39" pos:end="421:49"><name pos:start="421:39" pos:end="421:49"><name pos:start="421:39" pos:end="421:40">op</name><operator pos:start="421:41" pos:end="421:42">-&gt;</operator><name pos:start="421:43" pos:end="421:46">args</name><index pos:start="421:47" pos:end="421:49">[<expr pos:start="421:48" pos:end="421:48"><name pos:start="421:48" pos:end="421:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="423:21" pos:end="427:21"><if pos:start="423:21" pos:end="427:21">if <condition pos:start="423:24" pos:end="423:48">(<expr pos:start="423:25" pos:end="423:47"><name pos:start="423:25" pos:end="423:37"><name pos:start="423:25" pos:end="423:30">arg_ts</name><operator pos:start="423:31" pos:end="423:32">-&gt;</operator><name pos:start="423:33" pos:end="423:37">state</name></name> <operator pos:start="423:39" pos:end="423:39">&amp;</operator> <name pos:start="423:41" pos:end="423:47">TS_DEAD</name></expr>)</condition> <block pos:start="423:50" pos:end="427:21">{<block_content pos:start="425:25" pos:end="425:50">

                        <expr_stmt pos:start="425:25" pos:end="425:50"><expr pos:start="425:25" pos:end="425:49"><name pos:start="425:25" pos:end="425:32">arg_life</name> <operator pos:start="425:34" pos:end="425:35">|=</operator> <name pos:start="425:37" pos:end="425:44">DEAD_ARG</name> <operator pos:start="425:46" pos:end="425:47">&lt;&lt;</operator> <name pos:start="425:49" pos:end="425:49">i</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <comment type="block" pos:start="431:17" pos:end="431:68">/* input arguments are live for preceding opcodes */</comment>

                <for pos:start="433:17" pos:end="437:17">for <control pos:start="433:21" pos:end="433:64">(<init pos:start="433:22" pos:end="433:34"><expr pos:start="433:22" pos:end="433:33"><name pos:start="433:22" pos:end="433:22">i</name> <operator pos:start="433:24" pos:end="433:24">=</operator> <name pos:start="433:26" pos:end="433:33">nb_oargs</name></expr>;</init> <condition pos:start="433:36" pos:end="433:59"><expr pos:start="433:36" pos:end="433:58"><name pos:start="433:36" pos:end="433:36">i</name> <operator pos:start="433:38" pos:end="433:38">&lt;</operator> <name pos:start="433:40" pos:end="433:47">nb_oargs</name> <operator pos:start="433:49" pos:end="433:49">+</operator> <name pos:start="433:51" pos:end="433:58">nb_iargs</name></expr>;</condition> <incr pos:start="433:61" pos:end="433:63"><expr pos:start="433:61" pos:end="433:63"><name pos:start="433:61" pos:end="433:61">i</name><operator pos:start="433:62" pos:end="433:63">++</operator></expr></incr>)</control> <block pos:start="433:66" pos:end="437:17">{<block_content pos:start="435:21" pos:end="435:61">

                    <expr_stmt pos:start="435:21" pos:end="435:61"><expr pos:start="435:21" pos:end="435:60"><call pos:start="435:21" pos:end="435:41"><name pos:start="435:21" pos:end="435:28">arg_temp</name><argument_list pos:start="435:29" pos:end="435:41">(<argument pos:start="435:30" pos:end="435:40"><expr pos:start="435:30" pos:end="435:40"><name pos:start="435:30" pos:end="435:40"><name pos:start="435:30" pos:end="435:31">op</name><operator pos:start="435:32" pos:end="435:33">-&gt;</operator><name pos:start="435:34" pos:end="435:37">args</name><index pos:start="435:38" pos:end="435:40">[<expr pos:start="435:39" pos:end="435:39"><name pos:start="435:39" pos:end="435:39">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="435:42" pos:end="435:43">-&gt;</operator><name pos:start="435:44" pos:end="435:48">state</name> <operator pos:start="435:50" pos:end="435:51">&amp;=</operator> <operator pos:start="435:53" pos:end="435:53">~</operator><name pos:start="435:54" pos:end="435:60">TS_DEAD</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

            <break pos:start="441:13" pos:end="441:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="445:9" pos:end="445:28"><expr pos:start="445:9" pos:end="445:27"><name pos:start="445:9" pos:end="445:16"><name pos:start="445:9" pos:end="445:10">op</name><operator pos:start="445:11" pos:end="445:12">-&gt;</operator><name pos:start="445:13" pos:end="445:16">life</name></name> <operator pos:start="445:18" pos:end="445:18">=</operator> <name pos:start="445:20" pos:end="445:27">arg_life</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
