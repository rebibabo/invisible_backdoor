<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8776.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">xen_init</name><parameter_list pos:start="1:20" pos:end="1:37">(<parameter pos:start="1:21" pos:end="1:36"><decl pos:start="1:21" pos:end="1:36"><type pos:start="1:21" pos:end="1:34"><name pos:start="1:21" pos:end="1:32">MachineState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">ms</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:13">{<block_content pos:start="5:5" pos:end="31:13">

    <expr_stmt pos:start="5:5" pos:end="5:44"><expr pos:start="5:5" pos:end="5:43"><name pos:start="5:5" pos:end="5:10">xen_xc</name> <operator pos:start="5:12" pos:end="5:12">=</operator> <call pos:start="5:14" pos:end="5:43"><name pos:start="5:14" pos:end="5:34">xen_xc_interface_open</name><argument_list pos:start="5:35" pos:end="5:43">(<argument pos:start="5:36" pos:end="5:36"><expr pos:start="5:36" pos:end="5:36"><literal type="number" pos:start="5:36" pos:end="5:36">0</literal></expr></argument>, <argument pos:start="5:39" pos:end="5:39"><expr pos:start="5:39" pos:end="5:39"><literal type="number" pos:start="5:39" pos:end="5:39">0</literal></expr></argument>, <argument pos:start="5:42" pos:end="5:42"><expr pos:start="5:42" pos:end="5:42"><literal type="number" pos:start="5:42" pos:end="5:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="7:5" pos:end="31:13"><if pos:start="7:5" pos:end="31:13">if <condition pos:start="7:8" pos:end="7:43">(<expr pos:start="7:9" pos:end="7:42"><name pos:start="7:9" pos:end="7:14">xen_xc</name> <operator pos:start="7:16" pos:end="7:17">==</operator> <name pos:start="7:19" pos:end="7:42">XC_HANDLER_INITIAL_VALUE</name></expr>)</condition> <block pos:start="7:45" pos:end="31:13">{<block_content pos:start="9:9" pos:end="31:13">

        <expr_stmt pos:start="9:9" pos:end="9:61"><expr pos:start="9:9" pos:end="9:60"><call pos:start="9:9" pos:end="9:60"><name pos:start="9:9" pos:end="9:21">xen_be_printf</name><argument_list pos:start="9:22" pos:end="9:60">(<argument pos:start="9:23" pos:end="9:26"><expr pos:start="9:23" pos:end="9:26"><name pos:start="9:23" pos:end="9:26">NULL</name></expr></argument>, <argument pos:start="9:29" pos:end="9:29"><expr pos:start="9:29" pos:end="9:29"><literal type="number" pos:start="9:29" pos:end="9:29">0</literal></expr></argument>, <argument pos:start="9:32" pos:end="9:59"><expr pos:start="9:32" pos:end="9:59"><literal type="string" pos:start="9:32" pos:end="9:59">"can't open xen interface\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>









    <expr_stmt pos:start="19:5" pos:end="19:69"><expr pos:start="19:5" pos:end="19:68"><call pos:start="19:5" pos:end="19:68"><name pos:start="19:5" pos:end="19:36">qemu_add_vm_change_state_handler</name><argument_list pos:start="19:37" pos:end="19:68">(<argument pos:start="19:38" pos:end="19:61"><expr pos:start="19:38" pos:end="19:61"><name pos:start="19:38" pos:end="19:61">xen_change_state_handler</name></expr></argument>, <argument pos:start="19:64" pos:end="19:67"><expr pos:start="19:64" pos:end="19:67"><name pos:start="19:64" pos:end="19:67">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><call pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:29">global_state_set_optional</name><argument_list pos:start="23:30" pos:end="23:31">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><call pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:29">savevm_skip_configuration</name><argument_list pos:start="25:30" pos:end="25:31">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><call pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:31">savevm_skip_section_footers</name><argument_list pos:start="27:32" pos:end="27:33">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></function>
</unit>
