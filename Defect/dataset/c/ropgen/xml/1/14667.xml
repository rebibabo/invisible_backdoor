<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14667.c" pos:tabs="8"><function pos:start="1:1" pos:end="245:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">esp_reg_write</name><parameter_list pos:start="1:19" pos:end="1:61">(<parameter pos:start="1:20" pos:end="1:30"><decl pos:start="1:20" pos:end="1:30"><type pos:start="1:20" pos:end="1:30"><name pos:start="1:20" pos:end="1:27">ESPState</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:30">s</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:46"><decl pos:start="1:33" pos:end="1:46"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:40">uint32_t</name></type> <name pos:start="1:42" pos:end="1:46">saddr</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:56">uint64_t</name></type> <name pos:start="1:58" pos:end="1:60">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="245:1">{<block_content pos:start="5:5" pos:end="243:26">

    <expr_stmt pos:start="5:5" pos:end="5:54"><expr pos:start="5:5" pos:end="5:53"><call pos:start="5:5" pos:end="5:53"><name pos:start="5:5" pos:end="5:24">trace_esp_mem_writeb</name><argument_list pos:start="5:25" pos:end="5:53">(<argument pos:start="5:26" pos:end="5:30"><expr pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:30">saddr</name></expr></argument>, <argument pos:start="5:33" pos:end="5:47"><expr pos:start="5:33" pos:end="5:47"><name pos:start="5:33" pos:end="5:47"><name pos:start="5:33" pos:end="5:33">s</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:40">wregs</name><index pos:start="5:41" pos:end="5:47">[<expr pos:start="5:42" pos:end="5:46"><name pos:start="5:42" pos:end="5:46">saddr</name></expr>]</index></name></expr></argument>, <argument pos:start="5:50" pos:end="5:52"><expr pos:start="5:50" pos:end="5:52"><name pos:start="5:50" pos:end="5:52">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="7:5" pos:end="241:5">switch <condition pos:start="7:12" pos:end="7:18">(<expr pos:start="7:13" pos:end="7:17"><name pos:start="7:13" pos:end="7:17">saddr</name></expr>)</condition> <block pos:start="7:20" pos:end="241:5">{<block_content pos:start="9:5" pos:end="239:15">

    <case pos:start="9:5" pos:end="9:18">case <expr pos:start="9:10" pos:end="9:17"><name pos:start="9:10" pos:end="9:17">ESP_TCHI</name></expr>:</case>

        <expr_stmt pos:start="11:9" pos:end="11:31"><expr pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:23">tchi_written</name></name> <operator pos:start="11:25" pos:end="11:25">=</operator> <name pos:start="11:27" pos:end="11:30">true</name></expr>;</expr_stmt>

        <comment type="block" pos:start="13:9" pos:end="13:26">/* fall through */</comment>

    <case pos:start="15:5" pos:end="15:18">case <expr pos:start="15:10" pos:end="15:17"><name pos:start="15:10" pos:end="15:17">ESP_TCLO</name></expr>:</case>

    <case pos:start="17:5" pos:end="17:19">case <expr pos:start="17:10" pos:end="17:18"><name pos:start="17:10" pos:end="17:18">ESP_TCMID</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:40"><expr pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:16">rregs</name><index pos:start="19:17" pos:end="19:27">[<expr pos:start="19:18" pos:end="19:26"><name pos:start="19:18" pos:end="19:26">ESP_RSTAT</name></expr>]</index></name> <operator pos:start="19:29" pos:end="19:30">&amp;=</operator> <operator pos:start="19:32" pos:end="19:32">~</operator><name pos:start="19:33" pos:end="19:39">STAT_TC</name></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:18">case <expr pos:start="23:10" pos:end="23:17"><name pos:start="23:10" pos:end="23:17">ESP_FIFO</name></expr>:</case>

        <if_stmt pos:start="25:9" pos:end="39:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:22">(<expr pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:21">do_cmd</name></name></expr>)</condition> <block pos:start="25:24" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:48">

            <expr_stmt pos:start="27:13" pos:end="27:48"><expr pos:start="27:13" pos:end="27:47"><name pos:start="27:13" pos:end="27:34"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:21">cmdbuf</name><index pos:start="27:22" pos:end="27:34">[<expr pos:start="27:23" pos:end="27:33"><name pos:start="27:23" pos:end="27:31"><name pos:start="27:23" pos:end="27:23">s</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:31">cmdlen</name></name><operator pos:start="27:32" pos:end="27:33">++</operator></expr>]</index></name> <operator pos:start="27:36" pos:end="27:36">=</operator> <name pos:start="27:38" pos:end="27:40">val</name> <operator pos:start="27:42" pos:end="27:42">&amp;</operator> <literal type="number" pos:start="27:44" pos:end="27:47">0xff</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="29:11" pos:end="33:9">else if <condition pos:start="29:19" pos:end="29:46">(<expr pos:start="29:20" pos:end="29:45"><name pos:start="29:20" pos:end="29:29"><name pos:start="29:20" pos:end="29:20">s</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:29">ti_size</name></name> <operator pos:start="29:31" pos:end="29:32">==</operator> <name pos:start="29:34" pos:end="29:41">TI_BUFSZ</name> <operator pos:start="29:43" pos:end="29:43">-</operator> <literal type="number" pos:start="29:45" pos:end="29:45">1</literal></expr>)</condition> <block pos:start="29:48" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:43">

            <expr_stmt pos:start="31:13" pos:end="31:43"><expr pos:start="31:13" pos:end="31:42"><call pos:start="31:13" pos:end="31:42"><name pos:start="31:13" pos:end="31:40">trace_esp_error_fifo_overrun</name><argument_list pos:start="31:41" pos:end="31:42">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="39:9">else <block pos:start="33:16" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:49">

            <expr_stmt pos:start="35:13" pos:end="35:25"><expr pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:22">ti_size</name></name><operator pos:start="35:23" pos:end="35:24">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:49"><expr pos:start="37:13" pos:end="37:48"><name pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:21">ti_buf</name><index pos:start="37:22" pos:end="37:35">[<expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:32"><name pos:start="37:23" pos:end="37:23">s</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:32">ti_wptr</name></name><operator pos:start="37:33" pos:end="37:34">++</operator></expr>]</index></name> <operator pos:start="37:37" pos:end="37:37">=</operator> <name pos:start="37:39" pos:end="37:41">val</name> <operator pos:start="37:43" pos:end="37:43">&amp;</operator> <literal type="number" pos:start="37:45" pos:end="37:48">0xff</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:17">case <expr pos:start="43:10" pos:end="43:16"><name pos:start="43:10" pos:end="43:16">ESP_CMD</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:16">rregs</name><index pos:start="45:17" pos:end="45:23">[<expr pos:start="45:18" pos:end="45:22"><name pos:start="45:18" pos:end="45:22">saddr</name></expr>]</index></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:29">val</name></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="63:9"><if pos:start="47:9" pos:end="59:9">if <condition pos:start="47:12" pos:end="47:26">(<expr pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:15">val</name> <operator pos:start="47:17" pos:end="47:17">&amp;</operator> <name pos:start="47:19" pos:end="47:25">CMD_DMA</name></expr>)</condition> <block pos:start="47:28" pos:end="59:9">{<block_content pos:start="49:13" pos:end="57:52">

            <expr_stmt pos:start="49:13" pos:end="49:23"><expr pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:18"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:18">dma</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">1</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="51:13" pos:end="51:38">/* Reload DMA counter.  */</comment>

            <expr_stmt pos:start="53:13" pos:end="53:52"><expr pos:start="53:13" pos:end="53:51"><name pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:20">rregs</name><index pos:start="53:21" pos:end="53:30">[<expr pos:start="53:22" pos:end="53:29"><name pos:start="53:22" pos:end="53:29">ESP_TCLO</name></expr>]</index></name> <operator pos:start="53:32" pos:end="53:32">=</operator> <name pos:start="53:34" pos:end="53:51"><name pos:start="53:34" pos:end="53:34">s</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:41">wregs</name><index pos:start="53:42" pos:end="53:51">[<expr pos:start="53:43" pos:end="53:50"><name pos:start="53:43" pos:end="53:50">ESP_TCLO</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:54"><expr pos:start="55:13" pos:end="55:53"><name pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:20">rregs</name><index pos:start="55:21" pos:end="55:31">[<expr pos:start="55:22" pos:end="55:30"><name pos:start="55:22" pos:end="55:30">ESP_TCMID</name></expr>]</index></name> <operator pos:start="55:33" pos:end="55:33">=</operator> <name pos:start="55:35" pos:end="55:53"><name pos:start="55:35" pos:end="55:35">s</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:42">wregs</name><index pos:start="55:43" pos:end="55:53">[<expr pos:start="55:44" pos:end="55:52"><name pos:start="55:44" pos:end="55:52">ESP_TCMID</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:52"><expr pos:start="57:13" pos:end="57:51"><name pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:20">rregs</name><index pos:start="57:21" pos:end="57:30">[<expr pos:start="57:22" pos:end="57:29"><name pos:start="57:22" pos:end="57:29">ESP_TCHI</name></expr>]</index></name> <operator pos:start="57:32" pos:end="57:32">=</operator> <name pos:start="57:34" pos:end="57:51"><name pos:start="57:34" pos:end="57:34">s</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:41">wregs</name><index pos:start="57:42" pos:end="57:51">[<expr pos:start="57:43" pos:end="57:50"><name pos:start="57:43" pos:end="57:50">ESP_TCHI</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="63:9">else <block pos:start="59:16" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:23">

            <expr_stmt pos:start="61:13" pos:end="61:23"><expr pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:18"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:18">dma</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <switch pos:start="65:9" pos:end="213:9">switch<condition pos:start="65:15" pos:end="65:29">(<expr pos:start="65:16" pos:end="65:28"><name pos:start="65:16" pos:end="65:18">val</name> <operator pos:start="65:20" pos:end="65:20">&amp;</operator> <name pos:start="65:22" pos:end="65:28">CMD_CMD</name></expr>)</condition> <block pos:start="65:31" pos:end="213:9">{<block_content pos:start="67:9" pos:end="211:18">

        <case pos:start="67:9" pos:end="67:21">case <expr pos:start="67:14" pos:end="67:20"><name pos:start="67:14" pos:end="67:20">CMD_NOP</name></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:46"><expr pos:start="69:13" pos:end="69:45"><call pos:start="69:13" pos:end="69:45"><name pos:start="69:13" pos:end="69:40">trace_esp_mem_writeb_cmd_nop</name><argument_list pos:start="69:41" pos:end="69:45">(<argument pos:start="69:42" pos:end="69:44"><expr pos:start="69:42" pos:end="69:44"><name pos:start="69:42" pos:end="69:44">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        <case pos:start="73:9" pos:end="73:23">case <expr pos:start="73:14" pos:end="73:22"><name pos:start="73:14" pos:end="73:22">CMD_FLUSH</name></expr>:</case>

            <expr_stmt pos:start="75:13" pos:end="75:48"><expr pos:start="75:13" pos:end="75:47"><call pos:start="75:13" pos:end="75:47"><name pos:start="75:13" pos:end="75:42">trace_esp_mem_writeb_cmd_flush</name><argument_list pos:start="75:43" pos:end="75:47">(<argument pos:start="75:44" pos:end="75:46"><expr pos:start="75:44" pos:end="75:46"><name pos:start="75:44" pos:end="75:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="77:13" pos:end="77:29">//s-&gt;ti_size = 0;</comment>

            <expr_stmt pos:start="79:13" pos:end="79:42"><expr pos:start="79:13" pos:end="79:41"><name pos:start="79:13" pos:end="79:31"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:20">rregs</name><index pos:start="79:21" pos:end="79:31">[<expr pos:start="79:22" pos:end="79:30"><name pos:start="79:22" pos:end="79:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="79:33" pos:end="79:33">=</operator> <name pos:start="79:35" pos:end="79:41">INTR_FC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:35"><expr pos:start="81:13" pos:end="81:34"><name pos:start="81:13" pos:end="81:30"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:20">rregs</name><index pos:start="81:21" pos:end="81:30">[<expr pos:start="81:22" pos:end="81:29"><name pos:start="81:22" pos:end="81:29">ESP_RSEQ</name></expr>]</index></name> <operator pos:start="81:32" pos:end="81:32">=</operator> <literal type="number" pos:start="81:34" pos:end="81:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:37"><expr pos:start="83:13" pos:end="83:36"><name pos:start="83:13" pos:end="83:32"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:20">rregs</name><index pos:start="83:21" pos:end="83:32">[<expr pos:start="83:22" pos:end="83:31"><name pos:start="83:22" pos:end="83:31">ESP_RFLAGS</name></expr>]</index></name> <operator pos:start="83:34" pos:end="83:34">=</operator> <literal type="number" pos:start="83:36" pos:end="83:36">0</literal></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="87:23">case <expr pos:start="87:14" pos:end="87:22"><name pos:start="87:14" pos:end="87:22">CMD_RESET</name></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="89:48"><expr pos:start="89:13" pos:end="89:47"><call pos:start="89:13" pos:end="89:47"><name pos:start="89:13" pos:end="89:42">trace_esp_mem_writeb_cmd_reset</name><argument_list pos:start="89:43" pos:end="89:47">(<argument pos:start="89:44" pos:end="89:46"><expr pos:start="89:44" pos:end="89:46"><name pos:start="89:44" pos:end="89:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:30"><expr pos:start="91:13" pos:end="91:29"><call pos:start="91:13" pos:end="91:29"><name pos:start="91:13" pos:end="91:26">esp_soft_reset</name><argument_list pos:start="91:27" pos:end="91:29">(<argument pos:start="91:28" pos:end="91:28"><expr pos:start="91:28" pos:end="91:28"><name pos:start="91:28" pos:end="91:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:26">case <expr pos:start="95:14" pos:end="95:25"><name pos:start="95:14" pos:end="95:25">CMD_BUSRESET</name></expr>:</case>

            <expr_stmt pos:start="97:13" pos:end="97:52"><expr pos:start="97:13" pos:end="97:51"><call pos:start="97:13" pos:end="97:51"><name pos:start="97:13" pos:end="97:46">trace_esp_mem_writeb_cmd_bus_reset</name><argument_list pos:start="97:47" pos:end="97:51">(<argument pos:start="97:48" pos:end="97:50"><expr pos:start="97:48" pos:end="97:50"><name pos:start="97:48" pos:end="97:50">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:43"><expr pos:start="99:13" pos:end="99:42"><name pos:start="99:13" pos:end="99:31"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:20">rregs</name><index pos:start="99:21" pos:end="99:31">[<expr pos:start="99:22" pos:end="99:30"><name pos:start="99:22" pos:end="99:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="99:33" pos:end="99:33">=</operator> <name pos:start="99:35" pos:end="99:42">INTR_RST</name></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="105:13"><if pos:start="101:13" pos:end="105:13">if <condition pos:start="101:16" pos:end="101:53">(<expr pos:start="101:17" pos:end="101:52"><operator pos:start="101:17" pos:end="101:17">!</operator><operator pos:start="101:18" pos:end="101:18">(</operator><name pos:start="101:19" pos:end="101:36"><name pos:start="101:19" pos:end="101:19">s</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:26">wregs</name><index pos:start="101:27" pos:end="101:36">[<expr pos:start="101:28" pos:end="101:35"><name pos:start="101:28" pos:end="101:35">ESP_CFG1</name></expr>]</index></name> <operator pos:start="101:38" pos:end="101:38">&amp;</operator> <name pos:start="101:40" pos:end="101:51">CFG1_RESREPT</name><operator pos:start="101:52" pos:end="101:52">)</operator></expr>)</condition> <block pos:start="101:55" pos:end="105:13">{<block_content pos:start="103:17" pos:end="103:33">

                <expr_stmt pos:start="103:17" pos:end="103:33"><expr pos:start="103:17" pos:end="103:32"><call pos:start="103:17" pos:end="103:32"><name pos:start="103:17" pos:end="103:29">esp_raise_irq</name><argument_list pos:start="103:30" pos:end="103:32">(<argument pos:start="103:31" pos:end="103:31"><expr pos:start="103:31" pos:end="103:31"><name pos:start="103:31" pos:end="103:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:20">case <expr pos:start="109:14" pos:end="109:19"><name pos:start="109:14" pos:end="109:19">CMD_TI</name></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="111:25"><expr pos:start="111:13" pos:end="111:24"><call pos:start="111:13" pos:end="111:24"><name pos:start="111:13" pos:end="111:21">handle_ti</name><argument_list pos:start="111:22" pos:end="111:24">(<argument pos:start="111:23" pos:end="111:23"><expr pos:start="111:23" pos:end="111:23"><name pos:start="111:23" pos:end="111:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        <case pos:start="115:9" pos:end="115:22">case <expr pos:start="115:14" pos:end="115:21"><name pos:start="115:14" pos:end="115:21">CMD_ICCS</name></expr>:</case>

            <expr_stmt pos:start="117:13" pos:end="117:47"><expr pos:start="117:13" pos:end="117:46"><call pos:start="117:13" pos:end="117:46"><name pos:start="117:13" pos:end="117:41">trace_esp_mem_writeb_cmd_iccs</name><argument_list pos:start="117:42" pos:end="117:46">(<argument pos:start="117:43" pos:end="117:45"><expr pos:start="117:43" pos:end="117:45"><name pos:start="117:43" pos:end="117:45">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:30"><expr pos:start="119:13" pos:end="119:29"><call pos:start="119:13" pos:end="119:29"><name pos:start="119:13" pos:end="119:26">write_response</name><argument_list pos:start="119:27" pos:end="119:29">(<argument pos:start="119:28" pos:end="119:28"><expr pos:start="119:28" pos:end="119:28"><name pos:start="119:28" pos:end="119:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:42"><expr pos:start="121:13" pos:end="121:41"><name pos:start="121:13" pos:end="121:31"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:20">rregs</name><index pos:start="121:21" pos:end="121:31">[<expr pos:start="121:22" pos:end="121:30"><name pos:start="121:22" pos:end="121:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="121:33" pos:end="121:33">=</operator> <name pos:start="121:35" pos:end="121:41">INTR_FC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:43"><expr pos:start="123:13" pos:end="123:42"><name pos:start="123:13" pos:end="123:31"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:20">rregs</name><index pos:start="123:21" pos:end="123:31">[<expr pos:start="123:22" pos:end="123:30"><name pos:start="123:22" pos:end="123:30">ESP_RSTAT</name></expr>]</index></name> <operator pos:start="123:33" pos:end="123:34">|=</operator> <name pos:start="123:36" pos:end="123:42">STAT_MI</name></expr>;</expr_stmt>

            <break pos:start="125:13" pos:end="125:18">break;</break>

        <case pos:start="127:9" pos:end="127:24">case <expr pos:start="127:14" pos:end="127:23"><name pos:start="127:14" pos:end="127:23">CMD_MSGACC</name></expr>:</case>

            <expr_stmt pos:start="129:13" pos:end="129:49"><expr pos:start="129:13" pos:end="129:48"><call pos:start="129:13" pos:end="129:48"><name pos:start="129:13" pos:end="129:43">trace_esp_mem_writeb_cmd_msgacc</name><argument_list pos:start="129:44" pos:end="129:48">(<argument pos:start="129:45" pos:end="129:47"><expr pos:start="129:45" pos:end="129:47"><name pos:start="129:45" pos:end="129:47">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:42"><expr pos:start="131:13" pos:end="131:41"><name pos:start="131:13" pos:end="131:31"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:20">rregs</name><index pos:start="131:21" pos:end="131:31">[<expr pos:start="131:22" pos:end="131:30"><name pos:start="131:22" pos:end="131:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="131:33" pos:end="131:33">=</operator> <name pos:start="131:35" pos:end="131:41">INTR_DC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:35"><expr pos:start="133:13" pos:end="133:34"><name pos:start="133:13" pos:end="133:30"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:20">rregs</name><index pos:start="133:21" pos:end="133:30">[<expr pos:start="133:22" pos:end="133:29"><name pos:start="133:22" pos:end="133:29">ESP_RSEQ</name></expr>]</index></name> <operator pos:start="133:32" pos:end="133:32">=</operator> <literal type="number" pos:start="133:34" pos:end="133:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:37"><expr pos:start="135:13" pos:end="135:36"><name pos:start="135:13" pos:end="135:32"><name pos:start="135:13" pos:end="135:13">s</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:20">rregs</name><index pos:start="135:21" pos:end="135:32">[<expr pos:start="135:22" pos:end="135:31"><name pos:start="135:22" pos:end="135:31">ESP_RFLAGS</name></expr>]</index></name> <operator pos:start="135:34" pos:end="135:34">=</operator> <literal type="number" pos:start="135:36" pos:end="135:36">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:29"><expr pos:start="137:13" pos:end="137:28"><call pos:start="137:13" pos:end="137:28"><name pos:start="137:13" pos:end="137:25">esp_raise_irq</name><argument_list pos:start="137:26" pos:end="137:28">(<argument pos:start="137:27" pos:end="137:27"><expr pos:start="137:27" pos:end="137:27"><name pos:start="137:27" pos:end="137:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:21">case <expr pos:start="141:14" pos:end="141:20"><name pos:start="141:14" pos:end="141:20">CMD_PAD</name></expr>:</case>

            <expr_stmt pos:start="143:13" pos:end="143:46"><expr pos:start="143:13" pos:end="143:45"><call pos:start="143:13" pos:end="143:45"><name pos:start="143:13" pos:end="143:40">trace_esp_mem_writeb_cmd_pad</name><argument_list pos:start="143:41" pos:end="143:45">(<argument pos:start="143:42" pos:end="143:44"><expr pos:start="143:42" pos:end="143:44"><name pos:start="143:42" pos:end="143:44">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:42"><expr pos:start="145:13" pos:end="145:41"><name pos:start="145:13" pos:end="145:31"><name pos:start="145:13" pos:end="145:13">s</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:20">rregs</name><index pos:start="145:21" pos:end="145:31">[<expr pos:start="145:22" pos:end="145:30"><name pos:start="145:22" pos:end="145:30">ESP_RSTAT</name></expr>]</index></name> <operator pos:start="145:33" pos:end="145:33">=</operator> <name pos:start="145:35" pos:end="145:41">STAT_TC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:42"><expr pos:start="147:13" pos:end="147:41"><name pos:start="147:13" pos:end="147:31"><name pos:start="147:13" pos:end="147:13">s</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:20">rregs</name><index pos:start="147:21" pos:end="147:31">[<expr pos:start="147:22" pos:end="147:30"><name pos:start="147:22" pos:end="147:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="147:33" pos:end="147:33">=</operator> <name pos:start="147:35" pos:end="147:41">INTR_FC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:35"><expr pos:start="149:13" pos:end="149:34"><name pos:start="149:13" pos:end="149:30"><name pos:start="149:13" pos:end="149:13">s</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:20">rregs</name><index pos:start="149:21" pos:end="149:30">[<expr pos:start="149:22" pos:end="149:29"><name pos:start="149:22" pos:end="149:29">ESP_RSEQ</name></expr>]</index></name> <operator pos:start="149:32" pos:end="149:32">=</operator> <literal type="number" pos:start="149:34" pos:end="149:34">0</literal></expr>;</expr_stmt>

            <break pos:start="151:13" pos:end="151:18">break;</break>

        <case pos:start="153:9" pos:end="153:22">case <expr pos:start="153:14" pos:end="153:21"><name pos:start="153:14" pos:end="153:21">CMD_SATN</name></expr>:</case>

            <expr_stmt pos:start="155:13" pos:end="155:47"><expr pos:start="155:13" pos:end="155:46"><call pos:start="155:13" pos:end="155:46"><name pos:start="155:13" pos:end="155:41">trace_esp_mem_writeb_cmd_satn</name><argument_list pos:start="155:42" pos:end="155:46">(<argument pos:start="155:43" pos:end="155:45"><expr pos:start="155:43" pos:end="155:45"><name pos:start="155:43" pos:end="155:45">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="157:13" pos:end="157:18">break;</break>

        <case pos:start="159:9" pos:end="159:24">case <expr pos:start="159:14" pos:end="159:23"><name pos:start="159:14" pos:end="159:23">CMD_RSTATN</name></expr>:</case>

            <expr_stmt pos:start="161:13" pos:end="161:49"><expr pos:start="161:13" pos:end="161:48"><call pos:start="161:13" pos:end="161:48"><name pos:start="161:13" pos:end="161:43">trace_esp_mem_writeb_cmd_rstatn</name><argument_list pos:start="161:44" pos:end="161:48">(<argument pos:start="161:45" pos:end="161:47"><expr pos:start="161:45" pos:end="161:47"><name pos:start="161:45" pos:end="161:47">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="163:13" pos:end="163:18">break;</break>

        <case pos:start="165:9" pos:end="165:21">case <expr pos:start="165:14" pos:end="165:20"><name pos:start="165:14" pos:end="165:20">CMD_SEL</name></expr>:</case>

            <expr_stmt pos:start="167:13" pos:end="167:46"><expr pos:start="167:13" pos:end="167:45"><call pos:start="167:13" pos:end="167:45"><name pos:start="167:13" pos:end="167:40">trace_esp_mem_writeb_cmd_sel</name><argument_list pos:start="167:41" pos:end="167:45">(<argument pos:start="167:42" pos:end="167:44"><expr pos:start="167:42" pos:end="167:44"><name pos:start="167:42" pos:end="167:44">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:36"><expr pos:start="169:13" pos:end="169:35"><call pos:start="169:13" pos:end="169:35"><name pos:start="169:13" pos:end="169:32">handle_s_without_atn</name><argument_list pos:start="169:33" pos:end="169:35">(<argument pos:start="169:34" pos:end="169:34"><expr pos:start="169:34" pos:end="169:34"><name pos:start="169:34" pos:end="169:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="171:13" pos:end="171:18">break;</break>

        <case pos:start="173:9" pos:end="173:24">case <expr pos:start="173:14" pos:end="173:23"><name pos:start="173:14" pos:end="173:23">CMD_SELATN</name></expr>:</case>

            <expr_stmt pos:start="175:13" pos:end="175:49"><expr pos:start="175:13" pos:end="175:48"><call pos:start="175:13" pos:end="175:48"><name pos:start="175:13" pos:end="175:43">trace_esp_mem_writeb_cmd_selatn</name><argument_list pos:start="175:44" pos:end="175:48">(<argument pos:start="175:45" pos:end="175:47"><expr pos:start="175:45" pos:end="175:47"><name pos:start="175:45" pos:end="175:47">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:27"><expr pos:start="177:13" pos:end="177:26"><call pos:start="177:13" pos:end="177:26"><name pos:start="177:13" pos:end="177:23">handle_satn</name><argument_list pos:start="177:24" pos:end="177:26">(<argument pos:start="177:25" pos:end="177:25"><expr pos:start="177:25" pos:end="177:25"><name pos:start="177:25" pos:end="177:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="179:13" pos:end="179:18">break;</break>

        <case pos:start="181:9" pos:end="181:25">case <expr pos:start="181:14" pos:end="181:24"><name pos:start="181:14" pos:end="181:24">CMD_SELATNS</name></expr>:</case>

            <expr_stmt pos:start="183:13" pos:end="183:50"><expr pos:start="183:13" pos:end="183:49"><call pos:start="183:13" pos:end="183:49"><name pos:start="183:13" pos:end="183:44">trace_esp_mem_writeb_cmd_selatns</name><argument_list pos:start="183:45" pos:end="183:49">(<argument pos:start="183:46" pos:end="183:48"><expr pos:start="183:46" pos:end="183:48"><name pos:start="183:46" pos:end="183:48">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:32"><expr pos:start="185:13" pos:end="185:31"><call pos:start="185:13" pos:end="185:31"><name pos:start="185:13" pos:end="185:28">handle_satn_stop</name><argument_list pos:start="185:29" pos:end="185:31">(<argument pos:start="185:30" pos:end="185:30"><expr pos:start="185:30" pos:end="185:30"><name pos:start="185:30" pos:end="185:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="187:13" pos:end="187:18">break;</break>

        <case pos:start="189:9" pos:end="189:23">case <expr pos:start="189:14" pos:end="189:22"><name pos:start="189:14" pos:end="189:22">CMD_ENSEL</name></expr>:</case>

            <expr_stmt pos:start="191:13" pos:end="191:48"><expr pos:start="191:13" pos:end="191:47"><call pos:start="191:13" pos:end="191:47"><name pos:start="191:13" pos:end="191:42">trace_esp_mem_writeb_cmd_ensel</name><argument_list pos:start="191:43" pos:end="191:47">(<argument pos:start="191:44" pos:end="191:46"><expr pos:start="191:44" pos:end="191:46"><name pos:start="191:44" pos:end="191:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:36"><expr pos:start="193:13" pos:end="193:35"><name pos:start="193:13" pos:end="193:31"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:20">rregs</name><index pos:start="193:21" pos:end="193:31">[<expr pos:start="193:22" pos:end="193:30"><name pos:start="193:22" pos:end="193:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="193:33" pos:end="193:33">=</operator> <literal type="number" pos:start="193:35" pos:end="193:35">0</literal></expr>;</expr_stmt>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        <case pos:start="197:9" pos:end="197:24">case <expr pos:start="197:14" pos:end="197:23"><name pos:start="197:14" pos:end="197:23">CMD_DISSEL</name></expr>:</case>

            <expr_stmt pos:start="199:13" pos:end="199:49"><expr pos:start="199:13" pos:end="199:48"><call pos:start="199:13" pos:end="199:48"><name pos:start="199:13" pos:end="199:43">trace_esp_mem_writeb_cmd_dissel</name><argument_list pos:start="199:44" pos:end="199:48">(<argument pos:start="199:45" pos:end="199:47"><expr pos:start="199:45" pos:end="199:47"><name pos:start="199:45" pos:end="199:47">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:36"><expr pos:start="201:13" pos:end="201:35"><name pos:start="201:13" pos:end="201:31"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:20">rregs</name><index pos:start="201:21" pos:end="201:31">[<expr pos:start="201:22" pos:end="201:30"><name pos:start="201:22" pos:end="201:30">ESP_RINTR</name></expr>]</index></name> <operator pos:start="201:33" pos:end="201:33">=</operator> <literal type="number" pos:start="201:35" pos:end="201:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:29"><expr pos:start="203:13" pos:end="203:28"><call pos:start="203:13" pos:end="203:28"><name pos:start="203:13" pos:end="203:25">esp_raise_irq</name><argument_list pos:start="203:26" pos:end="203:28">(<argument pos:start="203:27" pos:end="203:27"><expr pos:start="203:27" pos:end="203:27"><name pos:start="203:27" pos:end="203:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="205:13" pos:end="205:18">break;</break>

        <default pos:start="207:9" pos:end="207:16">default:</default>

            <expr_stmt pos:start="209:13" pos:end="209:51"><expr pos:start="209:13" pos:end="209:50"><call pos:start="209:13" pos:end="209:50"><name pos:start="209:13" pos:end="209:45">trace_esp_error_unhandled_command</name><argument_list pos:start="209:46" pos:end="209:50">(<argument pos:start="209:47" pos:end="209:49"><expr pos:start="209:47" pos:end="209:49"><name pos:start="209:47" pos:end="209:49">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="211:13" pos:end="211:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="215:9" pos:end="215:14">break;</break>

    <case pos:start="217:5" pos:end="217:34">case <expr pos:start="217:10" pos:end="217:33"><name pos:start="217:10" pos:end="217:19">ESP_WBUSID</name> <operator pos:start="217:21" pos:end="217:23">...</operator> <name pos:start="217:25" pos:end="217:33">ESP_WSYNO</name></expr>:</case>

        <break pos:start="219:9" pos:end="219:14">break;</break>

    <case pos:start="221:5" pos:end="221:18">case <expr pos:start="221:10" pos:end="221:17"><name pos:start="221:10" pos:end="221:17">ESP_CFG1</name></expr>:</case>

    <case pos:start="223:5" pos:end="223:18">case <expr pos:start="223:10" pos:end="223:17"><name pos:start="223:10" pos:end="223:17">ESP_CFG2</name></expr>:</case> <case pos:start="223:20" pos:end="223:33">case <expr pos:start="223:25" pos:end="223:32"><name pos:start="223:25" pos:end="223:32">ESP_CFG3</name></expr>:</case>

    <case pos:start="225:5" pos:end="225:18">case <expr pos:start="225:10" pos:end="225:17"><name pos:start="225:10" pos:end="225:17">ESP_RES3</name></expr>:</case> <case pos:start="225:20" pos:end="225:33">case <expr pos:start="225:25" pos:end="225:32"><name pos:start="225:25" pos:end="225:32">ESP_RES4</name></expr>:</case>

        <expr_stmt pos:start="227:9" pos:end="227:30"><expr pos:start="227:9" pos:end="227:29"><name pos:start="227:9" pos:end="227:23"><name pos:start="227:9" pos:end="227:9">s</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:16">rregs</name><index pos:start="227:17" pos:end="227:23">[<expr pos:start="227:18" pos:end="227:22"><name pos:start="227:18" pos:end="227:22">saddr</name></expr>]</index></name> <operator pos:start="227:25" pos:end="227:25">=</operator> <name pos:start="227:27" pos:end="227:29">val</name></expr>;</expr_stmt>

        <break pos:start="229:9" pos:end="229:14">break;</break>

    <case pos:start="231:5" pos:end="231:32">case <expr pos:start="231:10" pos:end="231:31"><name pos:start="231:10" pos:end="231:17">ESP_WCCF</name> <operator pos:start="231:19" pos:end="231:21">...</operator> <name pos:start="231:23" pos:end="231:31">ESP_WTEST</name></expr>:</case>

        <break pos:start="233:9" pos:end="233:14">break;</break>

    <default pos:start="235:5" pos:end="235:12">default:</default>

        <expr_stmt pos:start="237:9" pos:end="237:50"><expr pos:start="237:9" pos:end="237:49"><call pos:start="237:9" pos:end="237:49"><name pos:start="237:9" pos:end="237:37">trace_esp_error_invalid_write</name><argument_list pos:start="237:38" pos:end="237:49">(<argument pos:start="237:39" pos:end="237:41"><expr pos:start="237:39" pos:end="237:41"><name pos:start="237:39" pos:end="237:41">val</name></expr></argument>, <argument pos:start="237:44" pos:end="237:48"><expr pos:start="237:44" pos:end="237:48"><name pos:start="237:44" pos:end="237:48">saddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="239:9" pos:end="239:15">return;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="243:5" pos:end="243:26"><expr pos:start="243:5" pos:end="243:25"><name pos:start="243:5" pos:end="243:19"><name pos:start="243:5" pos:end="243:5">s</name><operator pos:start="243:6" pos:end="243:7">-&gt;</operator><name pos:start="243:8" pos:end="243:12">wregs</name><index pos:start="243:13" pos:end="243:19">[<expr pos:start="243:14" pos:end="243:18"><name pos:start="243:14" pos:end="243:18">saddr</name></expr>]</index></name> <operator pos:start="243:21" pos:end="243:21">=</operator> <name pos:start="243:23" pos:end="243:25">val</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
