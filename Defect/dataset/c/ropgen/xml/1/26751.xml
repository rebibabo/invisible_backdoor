<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26751.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">encode_block</name><parameter_list pos:start="1:25" pos:end="1:92">(<parameter pos:start="1:26" pos:end="1:51"><decl pos:start="1:26" pos:end="1:51"><type pos:start="1:26" pos:end="1:51"><name pos:start="1:26" pos:end="1:48">NellyMoserEncodeContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:74"><decl pos:start="1:54" pos:end="1:74"><type pos:start="1:54" pos:end="1:74"><name pos:start="1:54" pos:end="1:61">unsigned</name> <name pos:start="1:63" pos:end="1:66">char</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:74">output</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:91"><decl pos:start="1:77" pos:end="1:91"><type pos:start="1:77" pos:end="1:91"><name pos:start="1:77" pos:end="1:79">int</name></type> <name pos:start="1:81" pos:end="1:91">output_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:75">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:17">PutBitContext</name></type> <name pos:start="5:19" pos:end="5:20">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">band</name></decl>, <decl pos:start="7:21" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:25">block</name></decl>, <decl pos:start="7:28" pos:end="7:35"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:35">best_idx</name></decl>, <decl pos:start="7:38" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:38" pos:end="7:46">power_idx</name> <init pos:start="7:48" pos:end="7:50">= <expr pos:start="7:50" pos:end="7:50"><literal type="number" pos:start="7:50" pos:end="7:50">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">float</name></type> <name pos:start="9:11" pos:end="9:19">power_val</name></decl>, <decl pos:start="9:22" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="9:22" pos:end="9:26">coeff</name></decl>, <decl pos:start="9:29" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="9:29" pos:end="9:37">coeff_sum</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">float</name></type> <name pos:start="11:11" pos:end="11:30"><name pos:start="11:11" pos:end="11:14">pows</name><index pos:start="11:15" pos:end="11:30">[<expr pos:start="11:16" pos:end="11:29"><name pos:start="11:16" pos:end="11:29">NELLY_FILL_LEN</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:12">bits</name><index pos:start="13:13" pos:end="13:27">[<expr pos:start="13:14" pos:end="13:26"><name pos:start="13:14" pos:end="13:26">NELLY_BUF_LEN</name></expr>]</index></name></decl>, <decl pos:start="13:30" pos:end="13:51"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:30" pos:end="13:51"><name pos:start="13:30" pos:end="13:38">idx_table</name><index pos:start="13:39" pos:end="13:51">[<expr pos:start="13:40" pos:end="13:50"><name pos:start="13:40" pos:end="13:50">NELLY_BANDS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:9">float</name></type> <name pos:start="15:11" pos:end="15:27"><name pos:start="15:11" pos:end="15:14">cand</name><index pos:start="15:15" pos:end="15:27">[<expr pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:26">NELLY_BANDS</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:18"><expr pos:start="19:5" pos:end="19:17"><call pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:14">apply_mdct</name><argument_list pos:start="19:15" pos:end="19:17">(<argument pos:start="19:16" pos:end="19:16"><expr pos:start="19:16" pos:end="19:16"><name pos:start="19:16" pos:end="19:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:48"><expr pos:start="23:5" pos:end="23:47"><call pos:start="23:5" pos:end="23:47"><name pos:start="23:5" pos:end="23:17">init_put_bits</name><argument_list pos:start="23:18" pos:end="23:47">(<argument pos:start="23:19" pos:end="23:21"><expr pos:start="23:19" pos:end="23:21"><operator pos:start="23:19" pos:end="23:19">&amp;</operator><name pos:start="23:20" pos:end="23:21">pb</name></expr></argument>, <argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">output</name></expr></argument>, <argument pos:start="23:32" pos:end="23:46"><expr pos:start="23:32" pos:end="23:46"><name pos:start="23:32" pos:end="23:42">output_size</name> <operator pos:start="23:44" pos:end="23:44">*</operator> <literal type="number" pos:start="23:46" pos:end="23:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:10"><expr pos:start="27:5" pos:end="27:9"><name pos:start="27:5" pos:end="27:5">i</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <literal type="number" pos:start="27:9" pos:end="27:9">0</literal></expr>;</expr_stmt>

    <for pos:start="29:5" pos:end="45:5">for <control pos:start="29:9" pos:end="29:46">(<init pos:start="29:10" pos:end="29:18"><expr pos:start="29:10" pos:end="29:17"><name pos:start="29:10" pos:end="29:13">band</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>;</init> <condition pos:start="29:20" pos:end="29:38"><expr pos:start="29:20" pos:end="29:37"><name pos:start="29:20" pos:end="29:23">band</name> <operator pos:start="29:25" pos:end="29:25">&lt;</operator> <name pos:start="29:27" pos:end="29:37">NELLY_BANDS</name></expr>;</condition> <incr pos:start="29:40" pos:end="29:45"><expr pos:start="29:40" pos:end="29:45"><name pos:start="29:40" pos:end="29:43">band</name><operator pos:start="29:44" pos:end="29:45">++</operator></expr></incr>)</control> <block pos:start="29:48" pos:end="45:5">{<block_content pos:start="31:9" pos:end="43:97">

        <expr_stmt pos:start="31:9" pos:end="31:22"><expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:17">coeff_sum</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr>;</expr_stmt>

        <for pos:start="33:9" pos:end="39:9">for <control pos:start="33:13" pos:end="33:66">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">j</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:56"><expr pos:start="33:21" pos:end="33:55"><name pos:start="33:21" pos:end="33:21">j</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <name pos:start="33:25" pos:end="33:55"><name pos:start="33:25" pos:end="33:49">ff_nelly_band_sizes_table</name><index pos:start="33:50" pos:end="33:55">[<expr pos:start="33:51" pos:end="33:54"><name pos:start="33:51" pos:end="33:54">band</name></expr>]</index></name></expr>;</condition> <incr pos:start="33:58" pos:end="33:65"><expr pos:start="33:58" pos:end="33:60"><name pos:start="33:58" pos:end="33:58">i</name><operator pos:start="33:59" pos:end="33:60">++</operator></expr><operator pos:start="33:61" pos:end="33:61">,</operator> <expr pos:start="33:63" pos:end="33:65"><name pos:start="33:63" pos:end="33:63">j</name><operator pos:start="33:64" pos:end="33:65">++</operator></expr></incr>)</control> <block pos:start="33:68" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:89">

            <expr_stmt pos:start="35:13" pos:end="37:89"><expr pos:start="35:13" pos:end="37:88"><name pos:start="35:13" pos:end="35:21">coeff_sum</name> <operator pos:start="35:23" pos:end="35:24">+=</operator> <name pos:start="35:26" pos:end="35:55"><name pos:start="35:26" pos:end="35:26">s</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:36">mdct_out</name><index pos:start="35:37" pos:end="35:55">[<expr pos:start="35:38" pos:end="35:38"><name pos:start="35:38" pos:end="35:38">i</name></expr>                ]</index></name> <operator pos:start="35:57" pos:end="35:57">*</operator> <name pos:start="35:59" pos:end="35:88"><name pos:start="35:59" pos:end="35:59">s</name><operator pos:start="35:60" pos:end="35:61">-&gt;</operator><name pos:start="35:62" pos:end="35:69">mdct_out</name><index pos:start="35:70" pos:end="35:88">[<expr pos:start="35:71" pos:end="35:71"><name pos:start="35:71" pos:end="35:71">i</name></expr>                ]</index></name>

                       <operator pos:start="37:24" pos:end="37:24">+</operator> <name pos:start="37:26" pos:end="37:55"><name pos:start="37:26" pos:end="37:26">s</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:36">mdct_out</name><index pos:start="37:37" pos:end="37:55">[<expr pos:start="37:38" pos:end="37:54"><name pos:start="37:38" pos:end="37:38">i</name> <operator pos:start="37:40" pos:end="37:40">+</operator> <name pos:start="37:42" pos:end="37:54">NELLY_BUF_LEN</name></expr>]</index></name> <operator pos:start="37:57" pos:end="37:57">*</operator> <name pos:start="37:59" pos:end="37:88"><name pos:start="37:59" pos:end="37:59">s</name><operator pos:start="37:60" pos:end="37:61">-&gt;</operator><name pos:start="37:62" pos:end="37:69">mdct_out</name><index pos:start="37:70" pos:end="37:88">[<expr pos:start="37:71" pos:end="37:87"><name pos:start="37:71" pos:end="37:71">i</name> <operator pos:start="37:73" pos:end="37:73">+</operator> <name pos:start="37:75" pos:end="37:87">NELLY_BUF_LEN</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="41:9" pos:end="43:97"><expr pos:start="41:9" pos:end="43:96"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:12">cand</name><index pos:start="41:13" pos:end="41:18">[<expr pos:start="41:14" pos:end="41:17"><name pos:start="41:14" pos:end="41:17">band</name></expr>]</index></name> <operator pos:start="41:20" pos:end="41:20">=</operator>

            <call pos:start="43:13" pos:end="43:79"><name pos:start="43:13" pos:end="43:15">log</name><argument_list pos:start="43:16" pos:end="43:79">(<argument pos:start="43:17" pos:end="43:78"><expr pos:start="43:17" pos:end="43:78"><call pos:start="43:17" pos:end="43:78"><name pos:start="43:17" pos:end="43:21">FFMAX</name><argument_list pos:start="43:22" pos:end="43:78">(<argument pos:start="43:23" pos:end="43:25"><expr pos:start="43:23" pos:end="43:25"><literal type="number" pos:start="43:23" pos:end="43:25">1.0</literal></expr></argument>, <argument pos:start="43:28" pos:end="43:77"><expr pos:start="43:28" pos:end="43:77"><name pos:start="43:28" pos:end="43:36">coeff_sum</name> <operator pos:start="43:38" pos:end="43:38">/</operator> <operator pos:start="43:40" pos:end="43:40">(</operator><name pos:start="43:41" pos:end="43:71"><name pos:start="43:41" pos:end="43:65">ff_nelly_band_sizes_table</name><index pos:start="43:66" pos:end="43:71">[<expr pos:start="43:67" pos:end="43:70"><name pos:start="43:67" pos:end="43:70">band</name></expr>]</index></name> <operator pos:start="43:73" pos:end="43:74">&lt;&lt;</operator> <literal type="number" pos:start="43:76" pos:end="43:76">7</literal><operator pos:start="43:77" pos:end="43:77">)</operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="43:81" pos:end="43:81">*</operator> <literal type="number" pos:start="43:83" pos:end="43:88">1024.0</literal> <operator pos:start="43:90" pos:end="43:90">/</operator> <name pos:start="43:92" pos:end="43:96">M_LN2</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:26">(<expr pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:16">avctx</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:25">trellis</name></name></expr>)</condition> <block pos:start="49:28" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:49">

        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><call pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:28">get_exponent_dynamic</name><argument_list pos:start="51:29" pos:end="51:48">(<argument pos:start="51:30" pos:end="51:30"><expr pos:start="51:30" pos:end="51:30"><name pos:start="51:30" pos:end="51:30">s</name></expr></argument>, <argument pos:start="51:33" pos:end="51:36"><expr pos:start="51:33" pos:end="51:36"><name pos:start="51:33" pos:end="51:36">cand</name></expr></argument>, <argument pos:start="51:39" pos:end="51:47"><expr pos:start="51:39" pos:end="51:47"><name pos:start="51:39" pos:end="51:47">idx_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="57:5">else <block pos:start="53:12" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:48">

        <expr_stmt pos:start="55:9" pos:end="55:48"><expr pos:start="55:9" pos:end="55:47"><call pos:start="55:9" pos:end="55:47"><name pos:start="55:9" pos:end="55:27">get_exponent_greedy</name><argument_list pos:start="55:28" pos:end="55:47">(<argument pos:start="55:29" pos:end="55:29"><expr pos:start="55:29" pos:end="55:29"><name pos:start="55:29" pos:end="55:29">s</name></expr></argument>, <argument pos:start="55:32" pos:end="55:35"><expr pos:start="55:32" pos:end="55:35"><name pos:start="55:32" pos:end="55:35">cand</name></expr></argument>, <argument pos:start="55:38" pos:end="55:46"><expr pos:start="55:38" pos:end="55:46"><name pos:start="55:38" pos:end="55:46">idx_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:10"><expr pos:start="61:5" pos:end="61:9"><name pos:start="61:5" pos:end="61:5">i</name> <operator pos:start="61:7" pos:end="61:7">=</operator> <literal type="number" pos:start="61:9" pos:end="61:9">0</literal></expr>;</expr_stmt>

    <for pos:start="63:5" pos:end="91:5">for <control pos:start="63:9" pos:end="63:46">(<init pos:start="63:10" pos:end="63:18"><expr pos:start="63:10" pos:end="63:17"><name pos:start="63:10" pos:end="63:13">band</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <literal type="number" pos:start="63:17" pos:end="63:17">0</literal></expr>;</init> <condition pos:start="63:20" pos:end="63:38"><expr pos:start="63:20" pos:end="63:37"><name pos:start="63:20" pos:end="63:23">band</name> <operator pos:start="63:25" pos:end="63:25">&lt;</operator> <name pos:start="63:27" pos:end="63:37">NELLY_BANDS</name></expr>;</condition> <incr pos:start="63:40" pos:end="63:45"><expr pos:start="63:40" pos:end="63:45"><name pos:start="63:40" pos:end="63:43">band</name><operator pos:start="63:44" pos:end="63:45">++</operator></expr></incr>)</control> <block pos:start="63:48" pos:end="91:5">{<block_content pos:start="65:9" pos:end="89:9">

        <if_stmt pos:start="65:9" pos:end="77:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:17">(<expr pos:start="65:13" pos:end="65:16"><name pos:start="65:13" pos:end="65:16">band</name></expr>)</condition> <block pos:start="65:19" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:46">

            <expr_stmt pos:start="67:13" pos:end="67:63"><expr pos:start="67:13" pos:end="67:62"><name pos:start="67:13" pos:end="67:21">power_idx</name> <operator pos:start="67:23" pos:end="67:24">+=</operator> <name pos:start="67:26" pos:end="67:62"><name pos:start="67:26" pos:end="67:45">ff_nelly_delta_table</name><index pos:start="67:46" pos:end="67:62">[<expr pos:start="67:47" pos:end="67:61"><name pos:start="67:47" pos:end="67:61"><name pos:start="67:47" pos:end="67:55">idx_table</name><index pos:start="67:56" pos:end="67:61">[<expr pos:start="67:57" pos:end="67:60"><name pos:start="67:57" pos:end="67:60">band</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:46"><expr pos:start="69:13" pos:end="69:45"><call pos:start="69:13" pos:end="69:45"><name pos:start="69:13" pos:end="69:20">put_bits</name><argument_list pos:start="69:21" pos:end="69:45">(<argument pos:start="69:22" pos:end="69:24"><expr pos:start="69:22" pos:end="69:24"><operator pos:start="69:22" pos:end="69:22">&amp;</operator><name pos:start="69:23" pos:end="69:24">pb</name></expr></argument>, <argument pos:start="69:27" pos:end="69:27"><expr pos:start="69:27" pos:end="69:27"><literal type="number" pos:start="69:27" pos:end="69:27">5</literal></expr></argument>, <argument pos:start="69:30" pos:end="69:44"><expr pos:start="69:30" pos:end="69:44"><name pos:start="69:30" pos:end="69:44"><name pos:start="69:30" pos:end="69:38">idx_table</name><index pos:start="69:39" pos:end="69:44">[<expr pos:start="69:40" pos:end="69:43"><name pos:start="69:40" pos:end="69:43">band</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="71:11" pos:end="77:9">else <block pos:start="71:16" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:43">

            <expr_stmt pos:start="73:13" pos:end="73:58"><expr pos:start="73:13" pos:end="73:57"><name pos:start="73:13" pos:end="73:21">power_idx</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:57"><name pos:start="73:25" pos:end="73:43">ff_nelly_init_table</name><index pos:start="73:44" pos:end="73:57">[<expr pos:start="73:45" pos:end="73:56"><name pos:start="73:45" pos:end="73:56"><name pos:start="73:45" pos:end="73:53">idx_table</name><index pos:start="73:54" pos:end="73:56">[<expr pos:start="73:55" pos:end="73:55"><literal type="number" pos:start="73:55" pos:end="73:55">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:43"><expr pos:start="75:13" pos:end="75:42"><call pos:start="75:13" pos:end="75:42"><name pos:start="75:13" pos:end="75:20">put_bits</name><argument_list pos:start="75:21" pos:end="75:42">(<argument pos:start="75:22" pos:end="75:24"><expr pos:start="75:22" pos:end="75:24"><operator pos:start="75:22" pos:end="75:22">&amp;</operator><name pos:start="75:23" pos:end="75:24">pb</name></expr></argument>, <argument pos:start="75:27" pos:end="75:27"><expr pos:start="75:27" pos:end="75:27"><literal type="number" pos:start="75:27" pos:end="75:27">6</literal></expr></argument>, <argument pos:start="75:30" pos:end="75:41"><expr pos:start="75:30" pos:end="75:41"><name pos:start="75:30" pos:end="75:41"><name pos:start="75:30" pos:end="75:38">idx_table</name><index pos:start="75:39" pos:end="75:41">[<expr pos:start="75:40" pos:end="75:40"><literal type="number" pos:start="75:40" pos:end="75:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:97"><expr pos:start="79:9" pos:end="79:96"><name pos:start="79:9" pos:end="79:17">power_val</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <name pos:start="79:21" pos:end="79:48"><name pos:start="79:21" pos:end="79:29">pow_table</name><index pos:start="79:30" pos:end="79:48">[<expr pos:start="79:31" pos:end="79:47"><name pos:start="79:31" pos:end="79:39">power_idx</name> <operator pos:start="79:41" pos:end="79:41">&amp;</operator> <literal type="number" pos:start="79:43" pos:end="79:47">0x7FF</literal></expr>]</index></name> <operator pos:start="79:50" pos:end="79:50">/</operator> <operator pos:start="79:52" pos:end="79:52">(</operator><literal type="number" pos:start="79:53" pos:end="79:53">1</literal> <operator pos:start="79:55" pos:end="79:56">&lt;&lt;</operator> <operator pos:start="79:58" pos:end="79:58">(</operator><operator pos:start="79:59" pos:end="79:59">(</operator><name pos:start="79:60" pos:end="79:68">power_idx</name> <operator pos:start="79:70" pos:end="79:71">&gt;&gt;</operator> <literal type="number" pos:start="79:73" pos:end="79:74">11</literal><operator pos:start="79:75" pos:end="79:75">)</operator> <operator pos:start="79:77" pos:end="79:77">+</operator> <name pos:start="79:79" pos:end="79:94">POW_TABLE_OFFSET</name><operator pos:start="79:95" pos:end="79:95">)</operator><operator pos:start="79:96" pos:end="79:96">)</operator></expr>;</expr_stmt>

        <for pos:start="81:9" pos:end="89:9">for <control pos:start="81:13" pos:end="81:66">(<init pos:start="81:14" pos:end="81:19"><expr pos:start="81:14" pos:end="81:18"><name pos:start="81:14" pos:end="81:14">j</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>;</init> <condition pos:start="81:21" pos:end="81:56"><expr pos:start="81:21" pos:end="81:55"><name pos:start="81:21" pos:end="81:21">j</name> <operator pos:start="81:23" pos:end="81:23">&lt;</operator> <name pos:start="81:25" pos:end="81:55"><name pos:start="81:25" pos:end="81:49">ff_nelly_band_sizes_table</name><index pos:start="81:50" pos:end="81:55">[<expr pos:start="81:51" pos:end="81:54"><name pos:start="81:51" pos:end="81:54">band</name></expr>]</index></name></expr>;</condition> <incr pos:start="81:58" pos:end="81:65"><expr pos:start="81:58" pos:end="81:60"><name pos:start="81:58" pos:end="81:58">i</name><operator pos:start="81:59" pos:end="81:60">++</operator></expr><operator pos:start="81:61" pos:end="81:61">,</operator> <expr pos:start="81:63" pos:end="81:65"><name pos:start="81:63" pos:end="81:63">j</name><operator pos:start="81:64" pos:end="81:65">++</operator></expr></incr>)</control> <block pos:start="81:68" pos:end="89:9">{<block_content pos:start="83:13" pos:end="87:32">

            <expr_stmt pos:start="83:13" pos:end="83:40"><expr pos:start="83:13" pos:end="83:39"><name pos:start="83:13" pos:end="83:26"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:23">mdct_out</name><index pos:start="83:24" pos:end="83:26">[<expr pos:start="83:25" pos:end="83:25"><name pos:start="83:25" pos:end="83:25">i</name></expr>]</index></name> <operator pos:start="83:28" pos:end="83:29">*=</operator> <name pos:start="83:31" pos:end="83:39">power_val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:56"><expr pos:start="85:13" pos:end="85:55"><name pos:start="85:13" pos:end="85:42"><name pos:start="85:13" pos:end="85:13">s</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:23">mdct_out</name><index pos:start="85:24" pos:end="85:42">[<expr pos:start="85:25" pos:end="85:41"><name pos:start="85:25" pos:end="85:25">i</name> <operator pos:start="85:27" pos:end="85:27">+</operator> <name pos:start="85:29" pos:end="85:41">NELLY_BUF_LEN</name></expr>]</index></name> <operator pos:start="85:44" pos:end="85:45">*=</operator> <name pos:start="85:47" pos:end="85:55">power_val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:32"><expr pos:start="87:13" pos:end="87:31"><name pos:start="87:13" pos:end="87:19"><name pos:start="87:13" pos:end="87:16">pows</name><index pos:start="87:17" pos:end="87:19">[<expr pos:start="87:18" pos:end="87:18"><name pos:start="87:18" pos:end="87:18">i</name></expr>]</index></name> <operator pos:start="87:21" pos:end="87:21">=</operator> <name pos:start="87:23" pos:end="87:31">power_idx</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="95:5" pos:end="95:41"><expr pos:start="95:5" pos:end="95:40"><call pos:start="95:5" pos:end="95:40"><name pos:start="95:5" pos:end="95:28">ff_nelly_get_sample_bits</name><argument_list pos:start="95:29" pos:end="95:40">(<argument pos:start="95:30" pos:end="95:33"><expr pos:start="95:30" pos:end="95:33"><name pos:start="95:30" pos:end="95:33">pows</name></expr></argument>, <argument pos:start="95:36" pos:end="95:39"><expr pos:start="95:36" pos:end="95:39"><name pos:start="95:36" pos:end="95:39">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="99:5" pos:end="137:5">for <control pos:start="99:9" pos:end="99:39">(<init pos:start="99:10" pos:end="99:19"><expr pos:start="99:10" pos:end="99:18"><name pos:start="99:10" pos:end="99:14">block</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <literal type="number" pos:start="99:18" pos:end="99:18">0</literal></expr>;</init> <condition pos:start="99:21" pos:end="99:30"><expr pos:start="99:21" pos:end="99:29"><name pos:start="99:21" pos:end="99:25">block</name> <operator pos:start="99:27" pos:end="99:27">&lt;</operator> <literal type="number" pos:start="99:29" pos:end="99:29">2</literal></expr>;</condition> <incr pos:start="99:32" pos:end="99:38"><expr pos:start="99:32" pos:end="99:38"><name pos:start="99:32" pos:end="99:36">block</name><operator pos:start="99:37" pos:end="99:38">++</operator></expr></incr>)</control> <block pos:start="99:41" pos:end="137:5">{<block_content pos:start="101:9" pos:end="135:90">

        <for pos:start="101:9" pos:end="131:9">for <control pos:start="101:13" pos:end="101:44">(<init pos:start="101:14" pos:end="101:19"><expr pos:start="101:14" pos:end="101:18"><name pos:start="101:14" pos:end="101:14">i</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <literal type="number" pos:start="101:18" pos:end="101:18">0</literal></expr>;</init> <condition pos:start="101:21" pos:end="101:39"><expr pos:start="101:21" pos:end="101:38"><name pos:start="101:21" pos:end="101:21">i</name> <operator pos:start="101:23" pos:end="101:23">&lt;</operator> <name pos:start="101:25" pos:end="101:38">NELLY_FILL_LEN</name></expr>;</condition> <incr pos:start="101:41" pos:end="101:43"><expr pos:start="101:41" pos:end="101:43"><name pos:start="101:41" pos:end="101:41">i</name><operator pos:start="101:42" pos:end="101:43">++</operator></expr></incr>)</control> <block pos:start="101:46" pos:end="131:9">{<block_content pos:start="103:13" pos:end="129:13">

            <if_stmt pos:start="103:13" pos:end="129:13"><if pos:start="103:13" pos:end="129:13">if <condition pos:start="103:16" pos:end="103:28">(<expr pos:start="103:17" pos:end="103:27"><name pos:start="103:17" pos:end="103:23"><name pos:start="103:17" pos:end="103:20">bits</name><index pos:start="103:21" pos:end="103:23">[<expr pos:start="103:22" pos:end="103:22"><name pos:start="103:22" pos:end="103:22">i</name></expr>]</index></name> <operator pos:start="103:25" pos:end="103:25">&gt;</operator> <literal type="number" pos:start="103:27" pos:end="103:27">0</literal></expr>)</condition> <block pos:start="103:30" pos:end="129:13">{<block_content pos:start="105:17" pos:end="127:49">

                <decl_stmt pos:start="105:17" pos:end="105:88"><decl pos:start="105:17" pos:end="105:87"><type pos:start="105:17" pos:end="105:29"><specifier pos:start="105:17" pos:end="105:21">const</specifier> <name pos:start="105:23" pos:end="105:27">float</name> <modifier pos:start="105:29" pos:end="105:29">*</modifier></type><name pos:start="105:30" pos:end="105:34">table</name> <init pos:start="105:36" pos:end="105:87">= <expr pos:start="105:38" pos:end="105:87"><name pos:start="105:38" pos:end="105:66">ff_nelly_dequantization_table</name> <operator pos:start="105:68" pos:end="105:68">+</operator> <operator pos:start="105:70" pos:end="105:70">(</operator><literal type="number" pos:start="105:71" pos:end="105:71">1</literal> <operator pos:start="105:73" pos:end="105:74">&lt;&lt;</operator> <name pos:start="105:76" pos:end="105:82"><name pos:start="105:76" pos:end="105:79">bits</name><index pos:start="105:80" pos:end="105:82">[<expr pos:start="105:81" pos:end="105:81"><name pos:start="105:81" pos:end="105:81">i</name></expr>]</index></name><operator pos:start="105:83" pos:end="105:83">)</operator> <operator pos:start="105:85" pos:end="105:85">-</operator> <literal type="number" pos:start="105:87" pos:end="105:87">1</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:63"><expr pos:start="107:17" pos:end="107:62"><name pos:start="107:17" pos:end="107:21">coeff</name> <operator pos:start="107:23" pos:end="107:23">=</operator> <name pos:start="107:25" pos:end="107:62"><name pos:start="107:25" pos:end="107:25">s</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:35">mdct_out</name><index pos:start="107:36" pos:end="107:62">[<expr pos:start="107:37" pos:end="107:61"><name pos:start="107:37" pos:end="107:41">block</name> <operator pos:start="107:43" pos:end="107:43">*</operator> <name pos:start="107:45" pos:end="107:57">NELLY_BUF_LEN</name> <operator pos:start="107:59" pos:end="107:59">+</operator> <name pos:start="107:61" pos:end="107:61">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="119:31"><expr pos:start="109:17" pos:end="119:30"><name pos:start="109:17" pos:end="109:24">best_idx</name> <operator pos:start="109:26" pos:end="109:26">=</operator>

                    <name pos:start="111:21" pos:end="119:30"><name pos:start="111:21" pos:end="111:29">quant_lut</name><index pos:start="111:30" pos:end="119:30">[<expr pos:start="111:31" pos:end="119:29"><call pos:start="111:31" pos:end="119:29"><name pos:start="111:31" pos:end="111:37">av_clip</name> <argument_list pos:start="111:39" pos:end="119:29">(

                            <argument pos:start="113:29" pos:end="113:83"><expr pos:start="113:29" pos:end="113:83"><name pos:start="113:29" pos:end="113:33">coeff</name> <operator pos:start="113:35" pos:end="113:35">*</operator> <name pos:start="113:37" pos:end="113:58"><name pos:start="113:37" pos:end="113:49">quant_lut_mul</name><index pos:start="113:50" pos:end="113:58">[<expr pos:start="113:51" pos:end="113:57"><name pos:start="113:51" pos:end="113:57"><name pos:start="113:51" pos:end="113:54">bits</name><index pos:start="113:55" pos:end="113:57">[<expr pos:start="113:56" pos:end="113:56"><name pos:start="113:56" pos:end="113:56">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="113:60" pos:end="113:60">+</operator> <name pos:start="113:62" pos:end="113:83"><name pos:start="113:62" pos:end="113:74">quant_lut_add</name><index pos:start="113:75" pos:end="113:83">[<expr pos:start="113:76" pos:end="113:82"><name pos:start="113:76" pos:end="113:82"><name pos:start="113:76" pos:end="113:79">bits</name><index pos:start="113:80" pos:end="113:82">[<expr pos:start="113:81" pos:end="113:81"><name pos:start="113:81" pos:end="113:81">i</name></expr>]</index></name></expr>]</index></name></expr></argument>,

                            <argument pos:start="115:29" pos:end="115:53"><expr pos:start="115:29" pos:end="115:53"><name pos:start="115:29" pos:end="115:53"><name pos:start="115:29" pos:end="115:44">quant_lut_offset</name><index pos:start="115:45" pos:end="115:53">[<expr pos:start="115:46" pos:end="115:52"><name pos:start="115:46" pos:end="115:52"><name pos:start="115:46" pos:end="115:49">bits</name><index pos:start="115:50" pos:end="115:52">[<expr pos:start="115:51" pos:end="115:51"><name pos:start="115:51" pos:end="115:51">i</name></expr>]</index></name></expr>]</index></name></expr></argument>,

                            <argument pos:start="117:29" pos:end="117:59"><expr pos:start="117:29" pos:end="117:59"><name pos:start="117:29" pos:end="117:55"><name pos:start="117:29" pos:end="117:44">quant_lut_offset</name><index pos:start="117:45" pos:end="117:55">[<expr pos:start="117:46" pos:end="117:54"><name pos:start="117:46" pos:end="117:52"><name pos:start="117:46" pos:end="117:49">bits</name><index pos:start="117:50" pos:end="117:52">[<expr pos:start="117:51" pos:end="117:51"><name pos:start="117:51" pos:end="117:51">i</name></expr>]</index></name><operator pos:start="117:53" pos:end="117:53">+</operator><literal type="number" pos:start="117:54" pos:end="117:54">1</literal></expr>]</index></name> <operator pos:start="117:57" pos:end="117:57">-</operator> <literal type="number" pos:start="117:59" pos:end="117:59">1</literal></expr></argument>

                            )</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="121:17" pos:end="123:31"><if pos:start="121:17" pos:end="123:31">if <condition pos:start="121:20" pos:end="121:86">(<expr pos:start="121:21" pos:end="121:85"><call pos:start="121:21" pos:end="121:49"><name pos:start="121:21" pos:end="121:24">fabs</name><argument_list pos:start="121:25" pos:end="121:49">(<argument pos:start="121:26" pos:end="121:48"><expr pos:start="121:26" pos:end="121:48"><name pos:start="121:26" pos:end="121:30">coeff</name> <operator pos:start="121:32" pos:end="121:32">-</operator> <name pos:start="121:34" pos:end="121:48"><name pos:start="121:34" pos:end="121:38">table</name><index pos:start="121:39" pos:end="121:48">[<expr pos:start="121:40" pos:end="121:47"><name pos:start="121:40" pos:end="121:47">best_idx</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="121:51" pos:end="121:51">&gt;</operator> <call pos:start="121:53" pos:end="121:85"><name pos:start="121:53" pos:end="121:56">fabs</name><argument_list pos:start="121:57" pos:end="121:85">(<argument pos:start="121:58" pos:end="121:84"><expr pos:start="121:58" pos:end="121:84"><name pos:start="121:58" pos:end="121:62">coeff</name> <operator pos:start="121:64" pos:end="121:64">-</operator> <name pos:start="121:66" pos:end="121:84"><name pos:start="121:66" pos:end="121:70">table</name><index pos:start="121:71" pos:end="121:84">[<expr pos:start="121:72" pos:end="121:83"><name pos:start="121:72" pos:end="121:79">best_idx</name> <operator pos:start="121:81" pos:end="121:81">+</operator> <literal type="number" pos:start="121:83" pos:end="121:83">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="123:21" pos:end="123:31"><block_content pos:start="123:21" pos:end="123:31">

                    <expr_stmt pos:start="123:21" pos:end="123:31"><expr pos:start="123:21" pos:end="123:30"><name pos:start="123:21" pos:end="123:28">best_idx</name><operator pos:start="123:29" pos:end="123:30">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="127:17" pos:end="127:49"><expr pos:start="127:17" pos:end="127:48"><call pos:start="127:17" pos:end="127:48"><name pos:start="127:17" pos:end="127:24">put_bits</name><argument_list pos:start="127:25" pos:end="127:48">(<argument pos:start="127:26" pos:end="127:28"><expr pos:start="127:26" pos:end="127:28"><operator pos:start="127:26" pos:end="127:26">&amp;</operator><name pos:start="127:27" pos:end="127:28">pb</name></expr></argument>, <argument pos:start="127:31" pos:end="127:37"><expr pos:start="127:31" pos:end="127:37"><name pos:start="127:31" pos:end="127:37"><name pos:start="127:31" pos:end="127:34">bits</name><index pos:start="127:35" pos:end="127:37">[<expr pos:start="127:36" pos:end="127:36"><name pos:start="127:36" pos:end="127:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="127:40" pos:end="127:47"><expr pos:start="127:40" pos:end="127:47"><name pos:start="127:40" pos:end="127:47">best_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="133:9" pos:end="135:90"><if pos:start="133:9" pos:end="135:90">if <condition pos:start="133:12" pos:end="133:19">(<expr pos:start="133:13" pos:end="133:18"><operator pos:start="133:13" pos:end="133:13">!</operator><name pos:start="133:14" pos:end="133:18">block</name></expr>)</condition><block type="pseudo" pos:start="135:13" pos:end="135:90"><block_content pos:start="135:13" pos:end="135:90">

            <expr_stmt pos:start="135:13" pos:end="135:90"><expr pos:start="135:13" pos:end="135:89"><call pos:start="135:13" pos:end="135:89"><name pos:start="135:13" pos:end="135:20">put_bits</name><argument_list pos:start="135:21" pos:end="135:89">(<argument pos:start="135:22" pos:end="135:24"><expr pos:start="135:22" pos:end="135:24"><operator pos:start="135:22" pos:end="135:22">&amp;</operator><name pos:start="135:23" pos:end="135:24">pb</name></expr></argument>, <argument pos:start="135:27" pos:end="135:85"><expr pos:start="135:27" pos:end="135:85"><name pos:start="135:27" pos:end="135:43">NELLY_HEADER_BITS</name> <operator pos:start="135:45" pos:end="135:45">+</operator> <name pos:start="135:47" pos:end="135:63">NELLY_DETAIL_BITS</name> <operator pos:start="135:65" pos:end="135:65">-</operator> <call pos:start="135:67" pos:end="135:85"><name pos:start="135:67" pos:end="135:80">put_bits_count</name><argument_list pos:start="135:81" pos:end="135:85">(<argument pos:start="135:82" pos:end="135:84"><expr pos:start="135:82" pos:end="135:84"><operator pos:start="135:82" pos:end="135:82">&amp;</operator><name pos:start="135:83" pos:end="135:84">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="135:88" pos:end="135:88"><expr pos:start="135:88" pos:end="135:88"><literal type="number" pos:start="135:88" pos:end="135:88">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="141:5" pos:end="141:24"><expr pos:start="141:5" pos:end="141:23"><call pos:start="141:5" pos:end="141:23"><name pos:start="141:5" pos:end="141:18">flush_put_bits</name><argument_list pos:start="141:19" pos:end="141:23">(<argument pos:start="141:20" pos:end="141:22"><expr pos:start="141:20" pos:end="141:22"><operator pos:start="141:20" pos:end="141:20">&amp;</operator><name pos:start="141:21" pos:end="141:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:75"><expr pos:start="143:5" pos:end="143:74"><call pos:start="143:5" pos:end="143:74"><name pos:start="143:5" pos:end="143:10">memset</name><argument_list pos:start="143:11" pos:end="143:74">(<argument pos:start="143:12" pos:end="143:28"><expr pos:start="143:12" pos:end="143:28"><call pos:start="143:12" pos:end="143:28"><name pos:start="143:12" pos:end="143:23">put_bits_ptr</name><argument_list pos:start="143:24" pos:end="143:28">(<argument pos:start="143:25" pos:end="143:27"><expr pos:start="143:25" pos:end="143:27"><operator pos:start="143:25" pos:end="143:25">&amp;</operator><name pos:start="143:26" pos:end="143:27">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="143:31" pos:end="143:31"><expr pos:start="143:31" pos:end="143:31"><literal type="number" pos:start="143:31" pos:end="143:31">0</literal></expr></argument>, <argument pos:start="143:34" pos:end="143:73"><expr pos:start="143:34" pos:end="143:73"><name pos:start="143:34" pos:end="143:39">output</name> <operator pos:start="143:41" pos:end="143:41">+</operator> <name pos:start="143:43" pos:end="143:53">output_size</name> <operator pos:start="143:55" pos:end="143:55">-</operator> <call pos:start="143:57" pos:end="143:73"><name pos:start="143:57" pos:end="143:68">put_bits_ptr</name><argument_list pos:start="143:69" pos:end="143:73">(<argument pos:start="143:70" pos:end="143:72"><expr pos:start="143:70" pos:end="143:72"><operator pos:start="143:70" pos:end="143:70">&amp;</operator><name pos:start="143:71" pos:end="143:72">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
