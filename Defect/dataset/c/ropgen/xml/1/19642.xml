<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19642.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">ssize_t</name></type> <name pos:start="1:9" pos:end="1:27">vnc_client_read_buf</name><parameter_list pos:start="1:28" pos:end="1:72">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:36">VncState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">vs</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:49">uint8_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">data</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:71"><decl pos:start="1:58" pos:end="1:71"><type pos:start="1:58" pos:end="1:71"><name pos:start="1:58" pos:end="1:63">size_t</name></type> <name pos:start="1:65" pos:end="1:71">datalen</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:56">

    <decl_stmt pos:start="5:5" pos:end="8:0"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">ssize_t</name></type> <name pos:start="5:13" pos:end="5:15">ret</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="7:1" pos:end="7:21">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:21">CONFIG_VNC_TLS</name></cpp:ifdef>

    <if_stmt pos:start="9:5" pos:end="24:0"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:24">(<expr pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:10">vs</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:15">tls</name><operator pos:start="9:16" pos:end="9:16">.</operator><name pos:start="9:17" pos:end="9:23">session</name></name></expr>)</condition> <block pos:start="9:26" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:67">

        <expr_stmt pos:start="11:9" pos:end="11:67"><expr pos:start="11:9" pos:end="11:66"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <call pos:start="11:15" pos:end="11:66"><name pos:start="11:15" pos:end="11:33">vnc_client_read_tls</name><argument_list pos:start="11:34" pos:end="11:66">(<argument pos:start="11:35" pos:end="11:50"><expr pos:start="11:35" pos:end="11:50"><operator pos:start="11:35" pos:end="11:35">&amp;</operator><name pos:start="11:36" pos:end="11:50"><name pos:start="11:36" pos:end="11:37">vs</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:42">tls</name><operator pos:start="11:43" pos:end="11:43">.</operator><name pos:start="11:44" pos:end="11:50">session</name></name></expr></argument>, <argument pos:start="11:53" pos:end="11:56"><expr pos:start="11:53" pos:end="11:56"><name pos:start="11:53" pos:end="11:56">data</name></expr></argument>, <argument pos:start="11:59" pos:end="11:65"><expr pos:start="11:59" pos:end="11:65"><name pos:start="11:59" pos:end="11:65">datalen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="24:0">else <block pos:start="13:12" pos:end="24:0">{<block_content pos:start="17:9" pos:end="20:0">

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="15:8" pos:end="15:27">/* CONFIG_VNC_TLS */</comment>

        <expr_stmt pos:start="17:9" pos:end="20:0"><expr pos:start="17:9" pos:end="17:52"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:52"><name pos:start="17:15" pos:end="17:23">qemu_recv</name><argument_list pos:start="17:24" pos:end="17:52">(<argument pos:start="17:25" pos:end="17:33"><expr pos:start="17:25" pos:end="17:33"><name pos:start="17:25" pos:end="17:33"><name pos:start="17:25" pos:end="17:26">vs</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:33">csock</name></name></expr></argument>, <argument pos:start="17:36" pos:end="17:39"><expr pos:start="17:36" pos:end="17:39"><name pos:start="17:36" pos:end="17:39">data</name></expr></argument>, <argument pos:start="17:42" pos:end="17:48"><expr pos:start="17:42" pos:end="17:48"><name pos:start="17:42" pos:end="17:48">datalen</name></expr></argument>, <argument pos:start="17:51" pos:end="17:51"><expr pos:start="17:51" pos:end="17:51"><literal type="number" pos:start="17:51" pos:end="17:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="19:1" pos:end="19:21">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:21">CONFIG_VNC_TLS</name></cpp:ifdef>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="23:8" pos:end="23:27">/* CONFIG_VNC_TLS */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:63"><expr pos:start="25:5" pos:end="25:62"><call pos:start="25:5" pos:end="25:62"><name pos:start="25:5" pos:end="25:13">VNC_DEBUG</name><argument_list pos:start="25:14" pos:end="25:62">(<argument pos:start="25:15" pos:end="25:41"><expr pos:start="25:15" pos:end="25:41"><literal type="string" pos:start="25:15" pos:end="25:41">"Read wire %p %zd -&gt; %ld\n"</literal></expr></argument>, <argument pos:start="25:44" pos:end="25:47"><expr pos:start="25:44" pos:end="25:47"><name pos:start="25:44" pos:end="25:47">data</name></expr></argument>, <argument pos:start="25:50" pos:end="25:56"><expr pos:start="25:50" pos:end="25:56"><name pos:start="25:50" pos:end="25:56">datalen</name></expr></argument>, <argument pos:start="25:59" pos:end="25:61"><expr pos:start="25:59" pos:end="25:61"><name pos:start="25:59" pos:end="25:61">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="27:5" pos:end="27:56">return <expr pos:start="27:12" pos:end="27:55"><call pos:start="27:12" pos:end="27:55"><name pos:start="27:12" pos:end="27:30">vnc_client_io_error</name><argument_list pos:start="27:31" pos:end="27:55">(<argument pos:start="27:32" pos:end="27:33"><expr pos:start="27:32" pos:end="27:33"><name pos:start="27:32" pos:end="27:33">vs</name></expr></argument>, <argument pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:38">ret</name></expr></argument>, <argument pos:start="27:41" pos:end="27:54"><expr pos:start="27:41" pos:end="27:54"><call pos:start="27:41" pos:end="27:54"><name pos:start="27:41" pos:end="27:52">socket_error</name><argument_list pos:start="27:53" pos:end="27:54">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
