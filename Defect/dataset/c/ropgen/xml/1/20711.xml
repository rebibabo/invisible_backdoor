<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20711.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">a64multi_encode_frame</name><parameter_list pos:start="1:33" pos:end="3:70">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:69"><decl pos:start="1:57" pos:end="1:69"><type pos:start="1:57" pos:end="1:69"><name pos:start="1:57" pos:end="1:64">AVPacket</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">pkt</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:52"><decl pos:start="3:34" pos:end="3:52"><type pos:start="3:34" pos:end="3:52"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:46">AVFrame</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:52">pict</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:69"><decl pos:start="3:55" pos:end="3:69"><type pos:start="3:55" pos:end="3:69"><name pos:start="3:55" pos:end="3:57">int</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:69">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="253:1">{<block_content pos:start="7:5" pos:end="251:13">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">A64Context</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">c</name> <init pos:start="7:19" pos:end="7:36">= <expr pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:25">avctx</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:47"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier><specifier pos:start="9:14" pos:end="9:18">const</specifier></type> <name pos:start="9:20" pos:end="9:20">p</name> <init pos:start="9:22" pos:end="9:47">= <expr pos:start="9:24" pos:end="9:47"><operator pos:start="9:24" pos:end="9:24">(</operator><name pos:start="9:25" pos:end="9:31">AVFrame</name> <operator pos:start="9:33" pos:end="9:33">*</operator><operator pos:start="9:34" pos:end="9:34">)</operator> <operator pos:start="9:36" pos:end="9:36">&amp;</operator> <name pos:start="9:38" pos:end="9:47"><name pos:start="9:38" pos:end="9:38">c</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:47">picture</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">x</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">b_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:15">b_width</name></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="23:22"><decl pos:start="23:5" pos:end="23:16"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:16">req_size</name></decl>, <decl pos:start="23:19" pos:end="23:21"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:19" pos:end="23:21">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:16"><type pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:11">uint8_t</name> <modifier pos:start="25:13" pos:end="25:13">*</modifier></type><name pos:start="25:14" pos:end="25:16">buf</name></decl>;</decl_stmt>



    <decl_stmt pos:start="29:5" pos:end="29:37"><decl pos:start="29:5" pos:end="29:36"><type pos:start="29:5" pos:end="29:9"><name pos:start="29:5" pos:end="29:7">int</name> <modifier pos:start="29:9" pos:end="29:9">*</modifier></type><name pos:start="29:10" pos:end="29:16">charmap</name>     <init pos:start="29:22" pos:end="29:36">= <expr pos:start="29:24" pos:end="29:36"><name pos:start="29:24" pos:end="29:36"><name pos:start="29:24" pos:end="29:24">c</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:36">mc_charmap</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:36"><decl pos:start="31:5" pos:end="31:35"><type pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:11">uint8_t</name> <modifier pos:start="31:13" pos:end="31:13">*</modifier></type><name pos:start="31:14" pos:end="31:19">colram</name>  <init pos:start="31:22" pos:end="31:35">= <expr pos:start="31:24" pos:end="31:35"><name pos:start="31:24" pos:end="31:35"><name pos:start="31:24" pos:end="31:24">c</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:35">mc_colram</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:37"><decl pos:start="33:5" pos:end="33:36"><type pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:11">uint8_t</name> <modifier pos:start="33:13" pos:end="33:13">*</modifier></type><name pos:start="33:14" pos:end="33:20">charset</name> <init pos:start="33:22" pos:end="33:36">= <expr pos:start="33:24" pos:end="33:36"><name pos:start="33:24" pos:end="33:36"><name pos:start="33:24" pos:end="33:24">c</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:36">mc_charset</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:42"><decl pos:start="35:5" pos:end="35:41"><type pos:start="35:5" pos:end="35:9"><name pos:start="35:5" pos:end="35:7">int</name> <modifier pos:start="35:9" pos:end="35:9">*</modifier></type><name pos:start="35:10" pos:end="35:13">meta</name>        <init pos:start="35:22" pos:end="35:41">= <expr pos:start="35:24" pos:end="35:41"><name pos:start="35:24" pos:end="35:41"><name pos:start="35:24" pos:end="35:24">c</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:41">mc_meta_charset</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:37"><decl pos:start="37:5" pos:end="37:36"><type pos:start="37:5" pos:end="37:9"><name pos:start="37:5" pos:end="37:7">int</name> <modifier pos:start="37:9" pos:end="37:9">*</modifier></type><name pos:start="37:10" pos:end="37:16">best_cb</name>     <init pos:start="37:22" pos:end="37:36">= <expr pos:start="37:24" pos:end="37:36"><name pos:start="37:24" pos:end="37:36"><name pos:start="37:24" pos:end="37:24">c</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:36">mc_best_cb</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="41:5" pos:end="41:48"><decl pos:start="41:5" pos:end="41:47"><type pos:start="41:5" pos:end="41:7"><name pos:start="41:5" pos:end="41:7">int</name></type> <name pos:start="41:9" pos:end="41:20">charset_size</name> <init pos:start="41:22" pos:end="41:47">= <expr pos:start="41:24" pos:end="41:47"><literal type="number" pos:start="41:24" pos:end="41:28">0x800</literal> <operator pos:start="41:30" pos:end="41:30">*</operator> <operator pos:start="41:32" pos:end="41:32">(</operator><name pos:start="41:33" pos:end="41:42">INTERLACED</name> <operator pos:start="41:44" pos:end="41:44">+</operator> <literal type="number" pos:start="41:46" pos:end="41:46">1</literal><operator pos:start="41:47" pos:end="41:47">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:46"><decl pos:start="43:5" pos:end="43:45"><type pos:start="43:5" pos:end="43:7"><name pos:start="43:5" pos:end="43:7">int</name></type> <name pos:start="43:9" pos:end="43:19">colram_size</name>  <init pos:start="43:22" pos:end="43:45">= <expr pos:start="43:24" pos:end="43:45"><literal type="number" pos:start="43:24" pos:end="43:28">0x100</literal> <operator pos:start="43:30" pos:end="43:30">*</operator> <name pos:start="43:32" pos:end="43:45"><name pos:start="43:32" pos:end="43:32">c</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:45">mc_use_5col</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:20"><decl pos:start="45:5" pos:end="45:19"><type pos:start="45:5" pos:end="45:7"><name pos:start="45:5" pos:end="45:7">int</name></type> <name pos:start="45:9" pos:end="45:19">screen_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="49:5" pos:end="65:5"><if pos:start="49:5" pos:end="57:5">if<condition pos:start="49:7" pos:end="49:20">(<expr pos:start="49:8" pos:end="49:19"><name pos:start="49:8" pos:end="49:19">CROP_SCREENS</name></expr>)</condition> <block pos:start="49:22" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:41">

        <expr_stmt pos:start="51:9" pos:end="51:53"><expr pos:start="51:9" pos:end="51:52"><name pos:start="51:9" pos:end="51:16">b_height</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <call pos:start="51:20" pos:end="51:47"><name pos:start="51:20" pos:end="51:24">FFMIN</name><argument_list pos:start="51:25" pos:end="51:47">(<argument pos:start="51:26" pos:end="51:38"><expr pos:start="51:26" pos:end="51:38"><name pos:start="51:26" pos:end="51:38"><name pos:start="51:26" pos:end="51:30">avctx</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:38">height</name></name></expr></argument>,<argument pos:start="51:40" pos:end="51:46"><expr pos:start="51:40" pos:end="51:46"><name pos:start="51:40" pos:end="51:46">C64YRES</name></expr></argument>)</argument_list></call> <operator pos:start="51:49" pos:end="51:50">&gt;&gt;</operator> <literal type="number" pos:start="51:52" pos:end="51:52">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:53"><expr pos:start="53:9" pos:end="53:52"><name pos:start="53:9" pos:end="53:15">b_width</name>  <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="53:47"><name pos:start="53:20" pos:end="53:24">FFMIN</name><argument_list pos:start="53:25" pos:end="53:47">(<argument pos:start="53:26" pos:end="53:37"><expr pos:start="53:26" pos:end="53:37"><name pos:start="53:26" pos:end="53:37"><name pos:start="53:26" pos:end="53:30">avctx</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:37">width</name></name></expr></argument> ,<argument pos:start="53:40" pos:end="53:46"><expr pos:start="53:40" pos:end="53:46"><name pos:start="53:40" pos:end="53:46">C64XRES</name></expr></argument>)</argument_list></call> <operator pos:start="53:49" pos:end="53:50">&gt;&gt;</operator> <literal type="number" pos:start="53:52" pos:end="53:52">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:19">screen_size</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:29">b_width</name> <operator pos:start="55:31" pos:end="55:31">*</operator> <name pos:start="55:33" pos:end="55:40">b_height</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="65:5">else <block pos:start="57:12" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:28">

        <expr_stmt pos:start="59:9" pos:end="59:32"><expr pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:16">b_height</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:26">C64YRES</name> <operator pos:start="59:28" pos:end="59:29">&gt;&gt;</operator> <literal type="number" pos:start="59:31" pos:end="59:31">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:15">b_width</name>  <operator pos:start="61:18" pos:end="61:18">=</operator> <name pos:start="61:20" pos:end="61:26">C64XRES</name> <operator pos:start="61:28" pos:end="61:29">&gt;&gt;</operator> <literal type="number" pos:start="61:31" pos:end="61:31">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:28"><expr pos:start="63:9" pos:end="63:27"><name pos:start="63:9" pos:end="63:19">screen_size</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <literal type="number" pos:start="63:23" pos:end="63:27">0x400</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:42">/* no data, means end encoding asap */</comment>

    <if_stmt pos:start="71:5" pos:end="117:5"><if pos:start="71:5" pos:end="91:5">if <condition pos:start="71:8" pos:end="71:14">(<expr pos:start="71:9" pos:end="71:13"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:13">pict</name></expr>)</condition> <block pos:start="71:16" pos:end="91:5">{<block_content pos:start="75:9" pos:end="87:50">

        <comment type="block" pos:start="73:9" pos:end="73:36">/* all done, end encoding */</comment>

        <if_stmt pos:start="75:9" pos:end="75:38"><if pos:start="75:9" pos:end="75:38">if <condition pos:start="75:12" pos:end="75:28">(<expr pos:start="75:13" pos:end="75:27"><operator pos:start="75:13" pos:end="75:13">!</operator><name pos:start="75:14" pos:end="75:27"><name pos:start="75:14" pos:end="75:14">c</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:27">mc_lifetime</name></name></expr>)</condition><block type="pseudo" pos:start="75:30" pos:end="75:38"><block_content pos:start="75:30" pos:end="75:38"> <return pos:start="75:30" pos:end="75:38">return <expr pos:start="75:37" pos:end="75:37"><literal type="number" pos:start="75:37" pos:end="75:37">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="77:9" pos:end="77:72">/* no more frames in queue, prepare to flush remaining frames */</comment>

        <if_stmt pos:start="79:9" pos:end="87:50"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:33">(<expr pos:start="79:13" pos:end="79:32"><operator pos:start="79:13" pos:end="79:13">!</operator><name pos:start="79:14" pos:end="79:32"><name pos:start="79:14" pos:end="79:14">c</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:32">mc_frame_counter</name></name></expr>)</condition> <block pos:start="79:35" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:31">

            <expr_stmt pos:start="81:13" pos:end="81:31"><expr pos:start="81:13" pos:end="81:30"><name pos:start="81:13" pos:end="81:26"><name pos:start="81:13" pos:end="81:13">c</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:26">mc_lifetime</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <literal type="number" pos:start="81:30" pos:end="81:30">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if>

        <comment type="block" pos:start="85:9" pos:end="85:73">/* still frames in queue so limit lifetime to remaining frames */</comment>

        <else pos:start="87:9" pos:end="87:50">else<block type="pseudo" pos:start="87:14" pos:end="87:50"><block_content pos:start="87:14" pos:end="87:50"> <expr_stmt pos:start="87:14" pos:end="87:50"><expr pos:start="87:14" pos:end="87:49"><name pos:start="87:14" pos:end="87:27"><name pos:start="87:14" pos:end="87:14">c</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:27">mc_lifetime</name></name> <operator pos:start="87:29" pos:end="87:29">=</operator> <name pos:start="87:31" pos:end="87:49"><name pos:start="87:31" pos:end="87:31">c</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:49">mc_frame_counter</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <comment type="block" pos:start="89:5" pos:end="89:34">/* still new data available */</comment>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="117:5">else <block pos:start="91:12" pos:end="117:5">{<block_content pos:start="95:9" pos:end="115:9">

        <comment type="block" pos:start="93:9" pos:end="93:70">/* fill up mc_meta_charset with data until lifetime exceeds */</comment>

        <if_stmt pos:start="95:9" pos:end="115:9"><if pos:start="95:9" pos:end="115:9">if <condition pos:start="95:12" pos:end="95:49">(<expr pos:start="95:13" pos:end="95:48"><name pos:start="95:13" pos:end="95:31"><name pos:start="95:13" pos:end="95:13">c</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:31">mc_frame_counter</name></name> <operator pos:start="95:33" pos:end="95:33">&lt;</operator> <name pos:start="95:35" pos:end="95:48"><name pos:start="95:35" pos:end="95:35">c</name><operator pos:start="95:36" pos:end="95:37">-&gt;</operator><name pos:start="95:38" pos:end="95:48">mc_lifetime</name></name></expr>)</condition> <block pos:start="95:51" pos:end="115:9">{<block_content pos:start="97:13" pos:end="113:21">

            <expr_stmt pos:start="97:13" pos:end="97:23"><expr pos:start="97:13" pos:end="97:22"><operator pos:start="97:13" pos:end="97:13">*</operator><name pos:start="97:14" pos:end="97:14">p</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <operator pos:start="97:18" pos:end="97:18">*</operator><name pos:start="97:19" pos:end="97:22">pict</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:45"><expr pos:start="99:13" pos:end="99:44"><name pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:13">p</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:24">pict_type</name></name> <operator pos:start="99:26" pos:end="99:26">=</operator> <name pos:start="99:28" pos:end="99:44">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:29"><expr pos:start="101:13" pos:end="101:28"><name pos:start="101:13" pos:end="101:24"><name pos:start="101:13" pos:end="101:13">p</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:24">key_frame</name></name> <operator pos:start="101:26" pos:end="101:26">=</operator> <literal type="number" pos:start="101:28" pos:end="101:28">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:76"><expr pos:start="103:13" pos:end="103:75"><call pos:start="103:13" pos:end="103:75"><name pos:start="103:13" pos:end="103:29">to_meta_with_crop</name><argument_list pos:start="103:30" pos:end="103:75">(<argument pos:start="103:31" pos:end="103:35"><expr pos:start="103:31" pos:end="103:35"><name pos:start="103:31" pos:end="103:35">avctx</name></expr></argument>, <argument pos:start="103:38" pos:end="103:38"><expr pos:start="103:38" pos:end="103:38"><name pos:start="103:38" pos:end="103:38">p</name></expr></argument>, <argument pos:start="103:41" pos:end="103:74"><expr pos:start="103:41" pos:end="103:74"><name pos:start="103:41" pos:end="103:44">meta</name> <operator pos:start="103:46" pos:end="103:46">+</operator> <literal type="number" pos:start="103:48" pos:end="103:52">32000</literal> <operator pos:start="103:54" pos:end="103:54">*</operator> <name pos:start="103:56" pos:end="103:74"><name pos:start="103:56" pos:end="103:56">c</name><operator pos:start="103:57" pos:end="103:58">-&gt;</operator><name pos:start="103:59" pos:end="103:74">mc_frame_counter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:34"><expr pos:start="105:13" pos:end="105:33"><name pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:13">c</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:31">mc_frame_counter</name></name><operator pos:start="105:32" pos:end="105:33">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="109:40"><if pos:start="107:13" pos:end="109:40">if <condition pos:start="107:16" pos:end="107:46">(<expr pos:start="107:17" pos:end="107:45"><name pos:start="107:17" pos:end="107:27"><name pos:start="107:17" pos:end="107:17">c</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:27">next_pts</name></name> <operator pos:start="107:29" pos:end="107:30">==</operator> <name pos:start="107:32" pos:end="107:45">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:40"><block_content pos:start="109:17" pos:end="109:40">

                <expr_stmt pos:start="109:17" pos:end="109:40"><expr pos:start="109:17" pos:end="109:39"><name pos:start="109:17" pos:end="109:27"><name pos:start="109:17" pos:end="109:17">c</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:27">next_pts</name></name> <operator pos:start="109:29" pos:end="109:29">=</operator> <name pos:start="109:31" pos:end="109:39"><name pos:start="109:31" pos:end="109:34">pict</name><operator pos:start="109:35" pos:end="109:36">-&gt;</operator><name pos:start="109:37" pos:end="109:39">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="111:13" pos:end="111:70">/* lifetime is not reached so wait for next frame first */</comment>

            <return pos:start="113:13" pos:end="113:21">return <expr pos:start="113:20" pos:end="113:20"><literal type="number" pos:start="113:20" pos:end="113:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="121:5" pos:end="121:58">/* lifetime reached so now convert X frames at once */</comment>

    <if_stmt pos:start="123:5" pos:end="249:5"><if pos:start="123:5" pos:end="249:5">if <condition pos:start="123:8" pos:end="123:46">(<expr pos:start="123:9" pos:end="123:45"><name pos:start="123:9" pos:end="123:27"><name pos:start="123:9" pos:end="123:9">c</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:27">mc_frame_counter</name></name> <operator pos:start="123:29" pos:end="123:30">==</operator> <name pos:start="123:32" pos:end="123:45"><name pos:start="123:32" pos:end="123:32">c</name><operator pos:start="123:33" pos:end="123:34">-&gt;</operator><name pos:start="123:35" pos:end="123:45">mc_lifetime</name></name></expr>)</condition> <block pos:start="123:48" pos:end="249:5">{<block_content pos:start="125:9" pos:end="247:33">

        <expr_stmt pos:start="125:9" pos:end="125:21"><expr pos:start="125:9" pos:end="125:20"><name pos:start="125:9" pos:end="125:16">req_size</name> <operator pos:start="125:18" pos:end="125:18">=</operator> <literal type="number" pos:start="125:20" pos:end="125:20">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="127:9" pos:end="127:35">/* any frames to encode? */</comment>

        <if_stmt pos:start="129:9" pos:end="171:9"><if pos:start="129:9" pos:end="171:9">if <condition pos:start="129:12" pos:end="129:27">(<expr pos:start="129:13" pos:end="129:26"><name pos:start="129:13" pos:end="129:26"><name pos:start="129:13" pos:end="129:13">c</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:26">mc_lifetime</name></name></expr>)</condition> <block pos:start="129:29" pos:end="171:9">{<block_content pos:start="131:13" pos:end="169:37">

            <expr_stmt pos:start="131:13" pos:end="131:81"><expr pos:start="131:13" pos:end="131:80"><name pos:start="131:13" pos:end="131:20">req_size</name> <operator pos:start="131:22" pos:end="131:22">=</operator> <name pos:start="131:24" pos:end="131:35">charset_size</name> <operator pos:start="131:37" pos:end="131:37">+</operator> <name pos:start="131:39" pos:end="131:52"><name pos:start="131:39" pos:end="131:39">c</name><operator pos:start="131:40" pos:end="131:41">-&gt;</operator><name pos:start="131:42" pos:end="131:52">mc_lifetime</name></name><operator pos:start="131:53" pos:end="131:53">*</operator><operator pos:start="131:54" pos:end="131:54">(</operator><name pos:start="131:55" pos:end="131:65">screen_size</name> <operator pos:start="131:67" pos:end="131:67">+</operator> <name pos:start="131:69" pos:end="131:79">colram_size</name><operator pos:start="131:80" pos:end="131:80">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="133:13" pos:end="139:13"><if pos:start="133:13" pos:end="139:13">if <condition pos:start="133:16" pos:end="133:59">(<expr pos:start="133:17" pos:end="133:58"><operator pos:start="133:17" pos:end="133:17">(</operator><name pos:start="133:18" pos:end="133:20">ret</name> <operator pos:start="133:22" pos:end="133:22">=</operator> <call pos:start="133:24" pos:end="133:53"><name pos:start="133:24" pos:end="133:38">ff_alloc_packet</name><argument_list pos:start="133:39" pos:end="133:53">(<argument pos:start="133:40" pos:end="133:42"><expr pos:start="133:40" pos:end="133:42"><name pos:start="133:40" pos:end="133:42">pkt</name></expr></argument>, <argument pos:start="133:45" pos:end="133:52"><expr pos:start="133:45" pos:end="133:52"><name pos:start="133:45" pos:end="133:52">req_size</name></expr></argument>)</argument_list></call><operator pos:start="133:54" pos:end="133:54">)</operator> <operator pos:start="133:56" pos:end="133:56">&lt;</operator> <literal type="number" pos:start="133:58" pos:end="133:58">0</literal></expr>)</condition> <block pos:start="133:61" pos:end="139:13">{<block_content pos:start="135:17" pos:end="137:27">

                <expr_stmt pos:start="135:17" pos:end="135:99"><expr pos:start="135:17" pos:end="135:98"><call pos:start="135:17" pos:end="135:98"><name pos:start="135:17" pos:end="135:22">av_log</name><argument_list pos:start="135:23" pos:end="135:98">(<argument pos:start="135:24" pos:end="135:28"><expr pos:start="135:24" pos:end="135:28"><name pos:start="135:24" pos:end="135:28">avctx</name></expr></argument>, <argument pos:start="135:31" pos:end="135:42"><expr pos:start="135:31" pos:end="135:42"><name pos:start="135:31" pos:end="135:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="135:45" pos:end="135:87"><expr pos:start="135:45" pos:end="135:87"><literal type="string" pos:start="135:45" pos:end="135:87">"Error getting output packet of size %d.\n"</literal></expr></argument>, <argument pos:start="135:90" pos:end="135:97"><expr pos:start="135:90" pos:end="135:97"><name pos:start="135:90" pos:end="135:97">req_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="137:17" pos:end="137:27">return <expr pos:start="137:24" pos:end="137:26"><name pos:start="137:24" pos:end="137:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:28"><expr pos:start="141:13" pos:end="141:27"><name pos:start="141:13" pos:end="141:15">buf</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <name pos:start="141:19" pos:end="141:27"><name pos:start="141:19" pos:end="141:21">pkt</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:27">data</name></name></expr>;</expr_stmt>



            <comment type="block" pos:start="145:13" pos:end="145:53">/* calc optimal new charset + charmaps */</comment>

            <expr_stmt pos:start="147:13" pos:end="147:108"><expr pos:start="147:13" pos:end="147:107"><call pos:start="147:13" pos:end="147:107"><name pos:start="147:13" pos:end="147:24">ff_init_elbg</name><argument_list pos:start="147:25" pos:end="147:107">(<argument pos:start="147:26" pos:end="147:29"><expr pos:start="147:26" pos:end="147:29"><name pos:start="147:26" pos:end="147:29">meta</name></expr></argument>, <argument pos:start="147:32" pos:end="147:33"><expr pos:start="147:32" pos:end="147:33"><literal type="number" pos:start="147:32" pos:end="147:33">32</literal></expr></argument>, <argument pos:start="147:36" pos:end="147:56"><expr pos:start="147:36" pos:end="147:56"><literal type="number" pos:start="147:36" pos:end="147:39">1000</literal> <operator pos:start="147:41" pos:end="147:41">*</operator> <name pos:start="147:43" pos:end="147:56"><name pos:start="147:43" pos:end="147:43">c</name><operator pos:start="147:44" pos:end="147:45">-&gt;</operator><name pos:start="147:46" pos:end="147:56">mc_lifetime</name></name></expr></argument>, <argument pos:start="147:59" pos:end="147:65"><expr pos:start="147:59" pos:end="147:65"><name pos:start="147:59" pos:end="147:65">best_cb</name></expr></argument>, <argument pos:start="147:68" pos:end="147:80"><expr pos:start="147:68" pos:end="147:80"><name pos:start="147:68" pos:end="147:80">CHARSET_CHARS</name></expr></argument>, <argument pos:start="147:83" pos:end="147:84"><expr pos:start="147:83" pos:end="147:84"><literal type="number" pos:start="147:83" pos:end="147:84">50</literal></expr></argument>, <argument pos:start="147:87" pos:end="147:93"><expr pos:start="147:87" pos:end="147:93"><name pos:start="147:87" pos:end="147:93">charmap</name></expr></argument>, <argument pos:start="147:96" pos:end="147:106"><expr pos:start="147:96" pos:end="147:106"><operator pos:start="147:96" pos:end="147:96">&amp;</operator><name pos:start="147:97" pos:end="147:106"><name pos:start="147:97" pos:end="147:97">c</name><operator pos:start="147:98" pos:end="147:99">-&gt;</operator><name pos:start="147:100" pos:end="147:106">randctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:108"><expr pos:start="149:13" pos:end="149:107"><call pos:start="149:13" pos:end="149:107"><name pos:start="149:13" pos:end="149:22">ff_do_elbg</name>  <argument_list pos:start="149:25" pos:end="149:107">(<argument pos:start="149:26" pos:end="149:29"><expr pos:start="149:26" pos:end="149:29"><name pos:start="149:26" pos:end="149:29">meta</name></expr></argument>, <argument pos:start="149:32" pos:end="149:33"><expr pos:start="149:32" pos:end="149:33"><literal type="number" pos:start="149:32" pos:end="149:33">32</literal></expr></argument>, <argument pos:start="149:36" pos:end="149:56"><expr pos:start="149:36" pos:end="149:56"><literal type="number" pos:start="149:36" pos:end="149:39">1000</literal> <operator pos:start="149:41" pos:end="149:41">*</operator> <name pos:start="149:43" pos:end="149:56"><name pos:start="149:43" pos:end="149:43">c</name><operator pos:start="149:44" pos:end="149:45">-&gt;</operator><name pos:start="149:46" pos:end="149:56">mc_lifetime</name></name></expr></argument>, <argument pos:start="149:59" pos:end="149:65"><expr pos:start="149:59" pos:end="149:65"><name pos:start="149:59" pos:end="149:65">best_cb</name></expr></argument>, <argument pos:start="149:68" pos:end="149:80"><expr pos:start="149:68" pos:end="149:80"><name pos:start="149:68" pos:end="149:80">CHARSET_CHARS</name></expr></argument>, <argument pos:start="149:83" pos:end="149:84"><expr pos:start="149:83" pos:end="149:84"><literal type="number" pos:start="149:83" pos:end="149:84">50</literal></expr></argument>, <argument pos:start="149:87" pos:end="149:93"><expr pos:start="149:87" pos:end="149:93"><name pos:start="149:87" pos:end="149:93">charmap</name></expr></argument>, <argument pos:start="149:96" pos:end="149:106"><expr pos:start="149:96" pos:end="149:106"><operator pos:start="149:96" pos:end="149:96">&amp;</operator><name pos:start="149:97" pos:end="149:106"><name pos:start="149:97" pos:end="149:97">c</name><operator pos:start="149:98" pos:end="149:99">-&gt;</operator><name pos:start="149:100" pos:end="149:106">randctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="153:13" pos:end="153:64">/* create colorram map and a c64 readable charset */</comment>

            <expr_stmt pos:start="155:13" pos:end="155:51"><expr pos:start="155:13" pos:end="155:50"><call pos:start="155:13" pos:end="155:50"><name pos:start="155:13" pos:end="155:26">render_charset</name><argument_list pos:start="155:27" pos:end="155:50">(<argument pos:start="155:28" pos:end="155:32"><expr pos:start="155:28" pos:end="155:32"><name pos:start="155:28" pos:end="155:32">avctx</name></expr></argument>, <argument pos:start="155:35" pos:end="155:41"><expr pos:start="155:35" pos:end="155:41"><name pos:start="155:35" pos:end="155:41">charset</name></expr></argument>, <argument pos:start="155:44" pos:end="155:49"><expr pos:start="155:44" pos:end="155:49"><name pos:start="155:44" pos:end="155:49">colram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="159:13" pos:end="159:37">/* copy charset to buf */</comment>

            <expr_stmt pos:start="161:13" pos:end="161:47"><expr pos:start="161:13" pos:end="161:46"><call pos:start="161:13" pos:end="161:46"><name pos:start="161:13" pos:end="161:18">memcpy</name><argument_list pos:start="161:19" pos:end="161:46">(<argument pos:start="161:20" pos:end="161:22"><expr pos:start="161:20" pos:end="161:22"><name pos:start="161:20" pos:end="161:22">buf</name></expr></argument>, <argument pos:start="161:25" pos:end="161:31"><expr pos:start="161:25" pos:end="161:31"><name pos:start="161:25" pos:end="161:31">charset</name></expr></argument>, <argument pos:start="161:34" pos:end="161:45"><expr pos:start="161:34" pos:end="161:45"><name pos:start="161:34" pos:end="161:45">charset_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="165:13" pos:end="165:34">/* advance pointers */</comment>

            <expr_stmt pos:start="167:13" pos:end="167:37"><expr pos:start="167:13" pos:end="167:36"><name pos:start="167:13" pos:end="167:15">buf</name>      <operator pos:start="167:22" pos:end="167:23">+=</operator> <name pos:start="167:25" pos:end="167:36">charset_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:37"><expr pos:start="169:13" pos:end="169:36"><name pos:start="169:13" pos:end="169:19">charset</name>  <operator pos:start="169:22" pos:end="169:23">+=</operator> <name pos:start="169:25" pos:end="169:36">charset_size</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="175:9" pos:end="175:35">/* write x frames to buf */</comment>

        <for pos:start="177:9" pos:end="219:9">for <control pos:start="177:13" pos:end="177:56">(<init pos:start="177:14" pos:end="177:23"><expr pos:start="177:14" pos:end="177:22"><name pos:start="177:14" pos:end="177:18">frame</name> <operator pos:start="177:20" pos:end="177:20">=</operator> <literal type="number" pos:start="177:22" pos:end="177:22">0</literal></expr>;</init> <condition pos:start="177:25" pos:end="177:47"><expr pos:start="177:25" pos:end="177:46"><name pos:start="177:25" pos:end="177:29">frame</name> <operator pos:start="177:31" pos:end="177:31">&lt;</operator> <name pos:start="177:33" pos:end="177:46"><name pos:start="177:33" pos:end="177:33">c</name><operator pos:start="177:34" pos:end="177:35">-&gt;</operator><name pos:start="177:36" pos:end="177:46">mc_lifetime</name></name></expr>;</condition> <incr pos:start="177:49" pos:end="177:55"><expr pos:start="177:49" pos:end="177:55"><name pos:start="177:49" pos:end="177:53">frame</name><operator pos:start="177:54" pos:end="177:55">++</operator></expr></incr>)</control> <block pos:start="177:58" pos:end="219:9">{<block_content pos:start="181:13" pos:end="217:28">

            <comment type="block" pos:start="179:13" pos:end="179:95">/* copy charmap to buf. buf is uchar*, charmap is int*, so no memcpy here, sorry */</comment>

            <for pos:start="181:13" pos:end="189:13">for <control pos:start="181:17" pos:end="181:42">(<init pos:start="181:18" pos:end="181:23"><expr pos:start="181:18" pos:end="181:22"><name pos:start="181:18" pos:end="181:18">y</name> <operator pos:start="181:20" pos:end="181:20">=</operator> <literal type="number" pos:start="181:22" pos:end="181:22">0</literal></expr>;</init> <condition pos:start="181:25" pos:end="181:37"><expr pos:start="181:25" pos:end="181:36"><name pos:start="181:25" pos:end="181:25">y</name> <operator pos:start="181:27" pos:end="181:27">&lt;</operator> <name pos:start="181:29" pos:end="181:36">b_height</name></expr>;</condition> <incr pos:start="181:39" pos:end="181:41"><expr pos:start="181:39" pos:end="181:41"><name pos:start="181:39" pos:end="181:39">y</name><operator pos:start="181:40" pos:end="181:41">++</operator></expr></incr>)</control> <block pos:start="181:44" pos:end="189:13">{<block_content pos:start="183:17" pos:end="187:17">

                <for pos:start="183:17" pos:end="187:17">for <control pos:start="183:21" pos:end="183:45">(<init pos:start="183:22" pos:end="183:27"><expr pos:start="183:22" pos:end="183:26"><name pos:start="183:22" pos:end="183:22">x</name> <operator pos:start="183:24" pos:end="183:24">=</operator> <literal type="number" pos:start="183:26" pos:end="183:26">0</literal></expr>;</init> <condition pos:start="183:29" pos:end="183:40"><expr pos:start="183:29" pos:end="183:39"><name pos:start="183:29" pos:end="183:29">x</name> <operator pos:start="183:31" pos:end="183:31">&lt;</operator> <name pos:start="183:33" pos:end="183:39">b_width</name></expr>;</condition> <incr pos:start="183:42" pos:end="183:44"><expr pos:start="183:42" pos:end="183:44"><name pos:start="183:42" pos:end="183:42">x</name><operator pos:start="183:43" pos:end="183:44">++</operator></expr></incr>)</control> <block pos:start="183:47" pos:end="187:17">{<block_content pos:start="185:21" pos:end="185:68">

                    <expr_stmt pos:start="185:21" pos:end="185:68"><expr pos:start="185:21" pos:end="185:67"><name pos:start="185:21" pos:end="185:40"><name pos:start="185:21" pos:end="185:23">buf</name><index pos:start="185:24" pos:end="185:40">[<expr pos:start="185:25" pos:end="185:39"><name pos:start="185:25" pos:end="185:25">y</name> <operator pos:start="185:27" pos:end="185:27">*</operator> <name pos:start="185:29" pos:end="185:35">b_width</name> <operator pos:start="185:37" pos:end="185:37">+</operator> <name pos:start="185:39" pos:end="185:39">x</name></expr>]</index></name> <operator pos:start="185:42" pos:end="185:42">=</operator> <name pos:start="185:44" pos:end="185:67"><name pos:start="185:44" pos:end="185:50">charmap</name><index pos:start="185:51" pos:end="185:67">[<expr pos:start="185:52" pos:end="185:66"><name pos:start="185:52" pos:end="185:52">y</name> <operator pos:start="185:54" pos:end="185:54">*</operator> <name pos:start="185:56" pos:end="185:62">b_width</name> <operator pos:start="185:64" pos:end="185:64">+</operator> <name pos:start="185:66" pos:end="185:66">x</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <comment type="block" pos:start="191:13" pos:end="191:34">/* advance pointers */</comment>

            <expr_stmt pos:start="193:13" pos:end="193:31"><expr pos:start="193:13" pos:end="193:30"><name pos:start="193:13" pos:end="193:15">buf</name> <operator pos:start="193:17" pos:end="193:18">+=</operator> <name pos:start="193:20" pos:end="193:30">screen_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:36"><expr pos:start="195:13" pos:end="195:35"><name pos:start="195:13" pos:end="195:20">req_size</name> <operator pos:start="195:22" pos:end="195:23">+=</operator> <name pos:start="195:25" pos:end="195:35">screen_size</name></expr>;</expr_stmt>



            <comment type="block" pos:start="199:13" pos:end="199:49">/* compress and copy colram to buf */</comment>

            <if_stmt pos:start="201:13" pos:end="211:13"><if pos:start="201:13" pos:end="211:13">if <condition pos:start="201:16" pos:end="201:31">(<expr pos:start="201:17" pos:end="201:30"><name pos:start="201:17" pos:end="201:30"><name pos:start="201:17" pos:end="201:17">c</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:30">mc_use_5col</name></name></expr>)</condition> <block pos:start="201:33" pos:end="211:13">{<block_content pos:start="203:17" pos:end="209:40">

                <expr_stmt pos:start="203:17" pos:end="203:58"><expr pos:start="203:17" pos:end="203:57"><call pos:start="203:17" pos:end="203:57"><name pos:start="203:17" pos:end="203:35">a64_compress_colram</name><argument_list pos:start="203:36" pos:end="203:57">(<argument pos:start="203:37" pos:end="203:39"><expr pos:start="203:37" pos:end="203:39"><name pos:start="203:37" pos:end="203:39">buf</name></expr></argument>, <argument pos:start="203:42" pos:end="203:48"><expr pos:start="203:42" pos:end="203:48"><name pos:start="203:42" pos:end="203:48">charmap</name></expr></argument>, <argument pos:start="203:51" pos:end="203:56"><expr pos:start="203:51" pos:end="203:56"><name pos:start="203:51" pos:end="203:56">colram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="205:17" pos:end="205:38">/* advance pointers */</comment>

                <expr_stmt pos:start="207:17" pos:end="207:35"><expr pos:start="207:17" pos:end="207:34"><name pos:start="207:17" pos:end="207:19">buf</name> <operator pos:start="207:21" pos:end="207:22">+=</operator> <name pos:start="207:24" pos:end="207:34">colram_size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:40"><expr pos:start="209:17" pos:end="209:39"><name pos:start="209:17" pos:end="209:24">req_size</name> <operator pos:start="209:26" pos:end="209:27">+=</operator> <name pos:start="209:29" pos:end="209:39">colram_size</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="215:13" pos:end="215:41">/* advance to next charmap */</comment>

            <expr_stmt pos:start="217:13" pos:end="217:28"><expr pos:start="217:13" pos:end="217:27"><name pos:start="217:13" pos:end="217:19">charmap</name> <operator pos:start="217:21" pos:end="217:22">+=</operator> <literal type="number" pos:start="217:24" pos:end="217:27">1000</literal></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="223:9" pos:end="223:60"><expr pos:start="223:9" pos:end="223:59"><call pos:start="223:9" pos:end="223:59"><name pos:start="223:9" pos:end="223:15">AV_WB32</name><argument_list pos:start="223:16" pos:end="223:59">(<argument pos:start="223:17" pos:end="223:36"><expr pos:start="223:17" pos:end="223:36"><name pos:start="223:17" pos:end="223:32"><name pos:start="223:17" pos:end="223:21">avctx</name><operator pos:start="223:22" pos:end="223:23">-&gt;</operator><name pos:start="223:24" pos:end="223:32">extradata</name></name> <operator pos:start="223:34" pos:end="223:34">+</operator> <literal type="number" pos:start="223:36" pos:end="223:36">4</literal></expr></argument>,  <argument pos:start="223:40" pos:end="223:58"><expr pos:start="223:40" pos:end="223:58"><name pos:start="223:40" pos:end="223:58"><name pos:start="223:40" pos:end="223:40">c</name><operator pos:start="223:41" pos:end="223:42">-&gt;</operator><name pos:start="223:43" pos:end="223:58">mc_frame_counter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:53"><expr pos:start="225:9" pos:end="225:52"><call pos:start="225:9" pos:end="225:52"><name pos:start="225:9" pos:end="225:15">AV_WB32</name><argument_list pos:start="225:16" pos:end="225:52">(<argument pos:start="225:17" pos:end="225:36"><expr pos:start="225:17" pos:end="225:36"><name pos:start="225:17" pos:end="225:32"><name pos:start="225:17" pos:end="225:21">avctx</name><operator pos:start="225:22" pos:end="225:23">-&gt;</operator><name pos:start="225:24" pos:end="225:32">extradata</name></name> <operator pos:start="225:34" pos:end="225:34">+</operator> <literal type="number" pos:start="225:36" pos:end="225:36">8</literal></expr></argument>,  <argument pos:start="225:40" pos:end="225:51"><expr pos:start="225:40" pos:end="225:51"><name pos:start="225:40" pos:end="225:51">charset_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:66"><expr pos:start="227:9" pos:end="227:65"><call pos:start="227:9" pos:end="227:65"><name pos:start="227:9" pos:end="227:15">AV_WB32</name><argument_list pos:start="227:16" pos:end="227:65">(<argument pos:start="227:17" pos:end="227:37"><expr pos:start="227:17" pos:end="227:37"><name pos:start="227:17" pos:end="227:32"><name pos:start="227:17" pos:end="227:21">avctx</name><operator pos:start="227:22" pos:end="227:23">-&gt;</operator><name pos:start="227:24" pos:end="227:32">extradata</name></name> <operator pos:start="227:34" pos:end="227:34">+</operator> <literal type="number" pos:start="227:36" pos:end="227:37">12</literal></expr></argument>, <argument pos:start="227:40" pos:end="227:64"><expr pos:start="227:40" pos:end="227:64"><name pos:start="227:40" pos:end="227:50">screen_size</name> <operator pos:start="227:52" pos:end="227:52">+</operator> <name pos:start="227:54" pos:end="227:64">colram_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="231:9" pos:end="231:27">/* reset counter */</comment>

        <expr_stmt pos:start="233:9" pos:end="233:32"><expr pos:start="233:9" pos:end="233:31"><name pos:start="233:9" pos:end="233:27"><name pos:start="233:9" pos:end="233:9">c</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:27">mc_frame_counter</name></name> <operator pos:start="233:29" pos:end="233:29">=</operator> <literal type="number" pos:start="233:31" pos:end="233:31">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="237:9" pos:end="237:42"><expr pos:start="237:9" pos:end="237:41"><name pos:start="237:9" pos:end="237:16"><name pos:start="237:9" pos:end="237:11">pkt</name><operator pos:start="237:12" pos:end="237:13">-&gt;</operator><name pos:start="237:14" pos:end="237:16">pts</name></name> <operator pos:start="237:18" pos:end="237:18">=</operator> <name pos:start="237:20" pos:end="237:27"><name pos:start="237:20" pos:end="237:22">pkt</name><operator pos:start="237:23" pos:end="237:24">-&gt;</operator><name pos:start="237:25" pos:end="237:27">dts</name></name> <operator pos:start="237:29" pos:end="237:29">=</operator> <name pos:start="237:31" pos:end="237:41"><name pos:start="237:31" pos:end="237:31">c</name><operator pos:start="237:32" pos:end="237:33">-&gt;</operator><name pos:start="237:34" pos:end="237:41">next_pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:45"><expr pos:start="239:9" pos:end="239:44"><name pos:start="239:9" pos:end="239:19"><name pos:start="239:9" pos:end="239:9">c</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:19">next_pts</name></name>         <operator pos:start="239:29" pos:end="239:29">=</operator> <name pos:start="239:31" pos:end="239:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



        <expr_stmt pos:start="243:9" pos:end="243:31"><expr pos:start="243:9" pos:end="243:30"><name pos:start="243:9" pos:end="243:17"><name pos:start="243:9" pos:end="243:11">pkt</name><operator pos:start="243:12" pos:end="243:13">-&gt;</operator><name pos:start="243:14" pos:end="243:17">size</name></name>   <operator pos:start="243:21" pos:end="243:21">=</operator> <name pos:start="243:23" pos:end="243:30">req_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:38"><expr pos:start="245:9" pos:end="245:37"><name pos:start="245:9" pos:end="245:18"><name pos:start="245:9" pos:end="245:11">pkt</name><operator pos:start="245:12" pos:end="245:13">-&gt;</operator><name pos:start="245:14" pos:end="245:18">flags</name></name> <operator pos:start="245:20" pos:end="245:21">|=</operator> <name pos:start="245:23" pos:end="245:37">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:33"><expr pos:start="247:9" pos:end="247:32"><operator pos:start="247:9" pos:end="247:9">*</operator><name pos:start="247:10" pos:end="247:19">got_packet</name> <operator pos:start="247:21" pos:end="247:21">=</operator> <operator pos:start="247:23" pos:end="247:23">!</operator><operator pos:start="247:24" pos:end="247:24">!</operator><name pos:start="247:25" pos:end="247:32">req_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="251:5" pos:end="251:13">return <expr pos:start="251:12" pos:end="251:12"><literal type="number" pos:start="251:12" pos:end="251:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
