<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15302.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">ir2_decode_plane</name><parameter_list pos:start="1:29" pos:end="3:50">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:44"><name pos:start="1:30" pos:end="1:39">Ir2Context</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">ctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:55"><decl pos:start="1:47" pos:end="1:55"><type pos:start="1:47" pos:end="1:55"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:55">width</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:67"><decl pos:start="1:58" pos:end="1:67"><type pos:start="1:58" pos:end="1:67"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:67">height</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:81"><decl pos:start="1:70" pos:end="1:81"><type pos:start="1:70" pos:end="1:81"><name pos:start="1:70" pos:end="1:76">uint8_t</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:81">dst</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:93"><decl pos:start="1:84" pos:end="1:93"><type pos:start="1:84" pos:end="1:93"><name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:93">stride</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:49"><decl pos:start="3:30" pos:end="3:49"><type pos:start="3:30" pos:end="3:49"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">uint8_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:49">table</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:5">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">out</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">t</name></decl>;</decl_stmt>

    

    <comment type="block" pos:start="19:5" pos:end="19:72">/* first line contain absolute values, other lines contain deltas */</comment>

    <while pos:start="21:5" pos:end="41:5">while <condition pos:start="21:11" pos:end="21:23">(<expr pos:start="21:12" pos:end="21:22"><name pos:start="21:12" pos:end="21:14">out</name> <operator pos:start="21:16" pos:end="21:16">&lt;</operator> <name pos:start="21:18" pos:end="21:22">width</name></expr>)</condition><block pos:start="21:24" pos:end="41:5">{<block_content pos:start="23:9" pos:end="39:9">

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:9">c</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:34"><name pos:start="23:13" pos:end="23:24">ir2_get_code</name><argument_list pos:start="23:25" pos:end="23:34">(<argument pos:start="23:26" pos:end="23:33"><expr pos:start="23:26" pos:end="23:33"><operator pos:start="23:26" pos:end="23:26">&amp;</operator><name pos:start="23:27" pos:end="23:33"><name pos:start="23:27" pos:end="23:29">ctx</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="39:9"><if pos:start="25:9" pos:end="33:9">if<condition pos:start="25:11" pos:end="25:20">(<expr pos:start="25:12" pos:end="25:19"><name pos:start="25:12" pos:end="25:12">c</name> <operator pos:start="25:14" pos:end="25:14">&gt;</operator> <literal type="number" pos:start="25:16" pos:end="25:19">0x80</literal></expr>)</condition> <block pos:start="25:22" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:34"> <comment type="block" pos:start="25:24" pos:end="25:42">/* we have a run */</comment>

            <expr_stmt pos:start="27:13" pos:end="27:22"><expr pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:13">c</name> <operator pos:start="27:15" pos:end="27:16">-=</operator> <literal type="number" pos:start="27:18" pos:end="27:21">0x80</literal></expr>;</expr_stmt>

            <for pos:start="29:13" pos:end="31:34">for <control pos:start="29:17" pos:end="29:39">(<init pos:start="29:18" pos:end="29:23"><expr pos:start="29:18" pos:end="29:22"><name pos:start="29:18" pos:end="29:18">i</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>;</init> <condition pos:start="29:25" pos:end="29:34"><expr pos:start="29:25" pos:end="29:33"><name pos:start="29:25" pos:end="29:25">i</name> <operator pos:start="29:27" pos:end="29:27">&lt;</operator> <name pos:start="29:29" pos:end="29:29">c</name> <operator pos:start="29:31" pos:end="29:31">*</operator> <literal type="number" pos:start="29:33" pos:end="29:33">2</literal></expr>;</condition> <incr pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:36">i</name><operator pos:start="29:37" pos:end="29:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:17" pos:end="31:34"><block_content pos:start="31:17" pos:end="31:34">

                <expr_stmt pos:start="31:17" pos:end="31:34"><expr pos:start="31:17" pos:end="31:33"><name pos:start="31:17" pos:end="31:26"><name pos:start="31:17" pos:end="31:19">dst</name><index pos:start="31:20" pos:end="31:26">[<expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:23">out</name><operator pos:start="31:24" pos:end="31:25">++</operator></expr>]</index></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <literal type="number" pos:start="31:30" pos:end="31:33">0x80</literal></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="39:9">else <block pos:start="33:16" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:44"> <comment type="block" pos:start="33:18" pos:end="33:49">/* copy two values from table */</comment>

            <expr_stmt pos:start="35:13" pos:end="35:38"><expr pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:15">dst</name><index pos:start="35:16" pos:end="35:22">[<expr pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:19">out</name><operator pos:start="35:20" pos:end="35:21">++</operator></expr>]</index></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <name pos:start="35:26" pos:end="35:37"><name pos:start="35:26" pos:end="35:30">table</name><index pos:start="35:31" pos:end="35:37">[<expr pos:start="35:32" pos:end="35:36"><name pos:start="35:32" pos:end="35:32">c</name> <operator pos:start="35:34" pos:end="35:34">*</operator> <literal type="number" pos:start="35:36" pos:end="35:36">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:44"><expr pos:start="37:13" pos:end="37:43"><name pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:15">dst</name><index pos:start="37:16" pos:end="37:22">[<expr pos:start="37:17" pos:end="37:21"><name pos:start="37:17" pos:end="37:19">out</name><operator pos:start="37:20" pos:end="37:21">++</operator></expr>]</index></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:43"><name pos:start="37:26" pos:end="37:30">table</name><index pos:start="37:31" pos:end="37:43">[<expr pos:start="37:32" pos:end="37:42"><operator pos:start="37:32" pos:end="37:32">(</operator><name pos:start="37:33" pos:end="37:33">c</name> <operator pos:start="37:35" pos:end="37:35">*</operator> <literal type="number" pos:start="37:37" pos:end="37:37">2</literal><operator pos:start="37:38" pos:end="37:38">)</operator> <operator pos:start="37:40" pos:end="37:40">+</operator> <literal type="number" pos:start="37:42" pos:end="37:42">1</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="43:5" pos:end="43:18"><expr pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:7">dst</name> <operator pos:start="43:9" pos:end="43:10">+=</operator> <name pos:start="43:12" pos:end="43:17">stride</name></expr>;</expr_stmt>

    

    <for pos:start="47:5" pos:end="91:5">for <control pos:start="47:9" pos:end="47:32">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">j</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">1</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:27"><expr pos:start="47:17" pos:end="47:26"><name pos:start="47:17" pos:end="47:17">j</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:26">height</name></expr>;</condition> <incr pos:start="47:29" pos:end="47:31"><expr pos:start="47:29" pos:end="47:31"><name pos:start="47:29" pos:end="47:29">j</name><operator pos:start="47:30" pos:end="47:31">++</operator></expr></incr>)</control><block pos:start="47:33" pos:end="91:5">{<block_content pos:start="49:9" pos:end="89:22">

        <expr_stmt pos:start="49:9" pos:end="49:16"><expr pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:11">out</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <literal type="number" pos:start="49:15" pos:end="49:15">0</literal></expr>;</expr_stmt>

        <while pos:start="51:9" pos:end="87:9">while <condition pos:start="51:15" pos:end="51:27">(<expr pos:start="51:16" pos:end="51:26"><name pos:start="51:16" pos:end="51:18">out</name> <operator pos:start="51:20" pos:end="51:20">&lt;</operator> <name pos:start="51:22" pos:end="51:26">width</name></expr>)</condition><block pos:start="51:28" pos:end="87:9">{<block_content pos:start="53:13" pos:end="85:13">

            <expr_stmt pos:start="53:13" pos:end="53:39"><expr pos:start="53:13" pos:end="53:38"><name pos:start="53:13" pos:end="53:13">c</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:38"><name pos:start="53:17" pos:end="53:28">ir2_get_code</name><argument_list pos:start="53:29" pos:end="53:38">(<argument pos:start="53:30" pos:end="53:37"><expr pos:start="53:30" pos:end="53:37"><operator pos:start="53:30" pos:end="53:30">&amp;</operator><name pos:start="53:31" pos:end="53:37"><name pos:start="53:31" pos:end="53:33">ctx</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="85:13"><if pos:start="55:13" pos:end="67:13">if<condition pos:start="55:15" pos:end="55:24">(<expr pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:16">c</name> <operator pos:start="55:18" pos:end="55:18">&gt;</operator> <literal type="number" pos:start="55:20" pos:end="55:23">0x80</literal></expr>)</condition> <block pos:start="55:26" pos:end="67:13">{<block_content pos:start="57:17" pos:end="65:17"> <comment type="block" pos:start="55:28" pos:end="55:47">/* we have a skip */</comment>

                <expr_stmt pos:start="57:17" pos:end="57:26"><expr pos:start="57:17" pos:end="57:25"><name pos:start="57:17" pos:end="57:17">c</name> <operator pos:start="57:19" pos:end="57:20">-=</operator> <literal type="number" pos:start="57:22" pos:end="57:25">0x80</literal></expr>;</expr_stmt>

                <for pos:start="59:17" pos:end="65:17">for <control pos:start="59:21" pos:end="59:43">(<init pos:start="59:22" pos:end="59:27"><expr pos:start="59:22" pos:end="59:26"><name pos:start="59:22" pos:end="59:22">i</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <literal type="number" pos:start="59:26" pos:end="59:26">0</literal></expr>;</init> <condition pos:start="59:29" pos:end="59:38"><expr pos:start="59:29" pos:end="59:37"><name pos:start="59:29" pos:end="59:29">i</name> <operator pos:start="59:31" pos:end="59:31">&lt;</operator> <name pos:start="59:33" pos:end="59:33">c</name> <operator pos:start="59:35" pos:end="59:35">*</operator> <literal type="number" pos:start="59:37" pos:end="59:37">2</literal></expr>;</condition> <incr pos:start="59:40" pos:end="59:42"><expr pos:start="59:40" pos:end="59:42"><name pos:start="59:40" pos:end="59:40">i</name><operator pos:start="59:41" pos:end="59:42">++</operator></expr></incr>)</control> <block pos:start="59:45" pos:end="65:17">{<block_content pos:start="61:21" pos:end="63:26">

                    <expr_stmt pos:start="61:21" pos:end="61:49"><expr pos:start="61:21" pos:end="61:48"><name pos:start="61:21" pos:end="61:28"><name pos:start="61:21" pos:end="61:23">dst</name><index pos:start="61:24" pos:end="61:28">[<expr pos:start="61:25" pos:end="61:27"><name pos:start="61:25" pos:end="61:27">out</name></expr>]</index></name> <operator pos:start="61:30" pos:end="61:30">=</operator> <name pos:start="61:32" pos:end="61:48"><name pos:start="61:32" pos:end="61:34">dst</name><index pos:start="61:35" pos:end="61:48">[<expr pos:start="61:36" pos:end="61:47"><name pos:start="61:36" pos:end="61:38">out</name> <operator pos:start="61:40" pos:end="61:40">-</operator> <name pos:start="61:42" pos:end="61:47">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="63:21" pos:end="63:26"><expr pos:start="63:21" pos:end="63:25"><name pos:start="63:21" pos:end="63:23">out</name><operator pos:start="63:24" pos:end="63:25">++</operator></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="67:15" pos:end="85:13">else <block pos:start="67:20" pos:end="85:13">{<block_content pos:start="69:17" pos:end="83:22"> <comment type="block" pos:start="67:22" pos:end="67:52">/* add two deltas from table */</comment>

                <expr_stmt pos:start="69:17" pos:end="69:61"><expr pos:start="69:17" pos:end="69:60"><name pos:start="69:17" pos:end="69:17">t</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:37"><name pos:start="69:21" pos:end="69:23">dst</name><index pos:start="69:24" pos:end="69:37">[<expr pos:start="69:25" pos:end="69:36"><name pos:start="69:25" pos:end="69:27">out</name> <operator pos:start="69:29" pos:end="69:29">-</operator> <name pos:start="69:31" pos:end="69:36">stride</name></expr>]</index></name> <operator pos:start="69:39" pos:end="69:39">+</operator> <operator pos:start="69:41" pos:end="69:41">(</operator><name pos:start="69:42" pos:end="69:53"><name pos:start="69:42" pos:end="69:46">table</name><index pos:start="69:47" pos:end="69:53">[<expr pos:start="69:48" pos:end="69:52"><name pos:start="69:48" pos:end="69:48">c</name> <operator pos:start="69:50" pos:end="69:50">*</operator> <literal type="number" pos:start="69:52" pos:end="69:52">2</literal></expr>]</index></name> <operator pos:start="69:55" pos:end="69:55">-</operator> <literal type="number" pos:start="69:57" pos:end="69:59">128</literal><operator pos:start="69:60" pos:end="69:60">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:33"><expr pos:start="71:17" pos:end="71:32"><call pos:start="71:17" pos:end="71:32"><name pos:start="71:17" pos:end="71:29">CLAMP_TO_BYTE</name><argument_list pos:start="71:30" pos:end="71:32">(<argument pos:start="71:31" pos:end="71:31"><expr pos:start="71:31" pos:end="71:31"><name pos:start="71:31" pos:end="71:31">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:29"><expr pos:start="73:17" pos:end="73:28"><name pos:start="73:17" pos:end="73:24"><name pos:start="73:17" pos:end="73:19">dst</name><index pos:start="73:20" pos:end="73:24">[<expr pos:start="73:21" pos:end="73:23"><name pos:start="73:21" pos:end="73:23">out</name></expr>]</index></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <name pos:start="73:28" pos:end="73:28">t</name></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:22"><expr pos:start="75:17" pos:end="75:21"><name pos:start="75:17" pos:end="75:19">out</name><operator pos:start="75:20" pos:end="75:21">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:67"><expr pos:start="77:17" pos:end="77:66"><name pos:start="77:17" pos:end="77:17">t</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <name pos:start="77:21" pos:end="77:37"><name pos:start="77:21" pos:end="77:23">dst</name><index pos:start="77:24" pos:end="77:37">[<expr pos:start="77:25" pos:end="77:36"><name pos:start="77:25" pos:end="77:27">out</name> <operator pos:start="77:29" pos:end="77:29">-</operator> <name pos:start="77:31" pos:end="77:36">stride</name></expr>]</index></name> <operator pos:start="77:39" pos:end="77:39">+</operator> <operator pos:start="77:41" pos:end="77:41">(</operator><name pos:start="77:42" pos:end="77:59"><name pos:start="77:42" pos:end="77:46">table</name><index pos:start="77:47" pos:end="77:59">[<expr pos:start="77:48" pos:end="77:58"><operator pos:start="77:48" pos:end="77:48">(</operator><name pos:start="77:49" pos:end="77:49">c</name> <operator pos:start="77:51" pos:end="77:51">*</operator> <literal type="number" pos:start="77:53" pos:end="77:53">2</literal><operator pos:start="77:54" pos:end="77:54">)</operator> <operator pos:start="77:56" pos:end="77:56">+</operator> <literal type="number" pos:start="77:58" pos:end="77:58">1</literal></expr>]</index></name> <operator pos:start="77:61" pos:end="77:61">-</operator> <literal type="number" pos:start="77:63" pos:end="77:65">128</literal><operator pos:start="77:66" pos:end="77:66">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:33"><expr pos:start="79:17" pos:end="79:32"><call pos:start="79:17" pos:end="79:32"><name pos:start="79:17" pos:end="79:29">CLAMP_TO_BYTE</name><argument_list pos:start="79:30" pos:end="79:32">(<argument pos:start="79:31" pos:end="79:31"><expr pos:start="79:31" pos:end="79:31"><name pos:start="79:31" pos:end="79:31">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:29"><expr pos:start="81:17" pos:end="81:28"><name pos:start="81:17" pos:end="81:24"><name pos:start="81:17" pos:end="81:19">dst</name><index pos:start="81:20" pos:end="81:24">[<expr pos:start="81:21" pos:end="81:23"><name pos:start="81:21" pos:end="81:23">out</name></expr>]</index></name> <operator pos:start="81:26" pos:end="81:26">=</operator> <name pos:start="81:28" pos:end="81:28">t</name></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:22"><expr pos:start="83:17" pos:end="83:21"><name pos:start="83:17" pos:end="83:19">out</name><operator pos:start="83:20" pos:end="83:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="89:9" pos:end="89:22"><expr pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:11">dst</name> <operator pos:start="89:13" pos:end="89:14">+=</operator> <name pos:start="89:16" pos:end="89:21">stride</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
