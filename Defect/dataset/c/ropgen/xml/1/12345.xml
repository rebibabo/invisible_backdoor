<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12345.c" pos:tabs="8"><function pos:start="1:1" pos:end="417:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">cpu_loop</name><parameter_list pos:start="1:14" pos:end="1:31">(<parameter pos:start="1:15" pos:end="1:30"><decl pos:start="1:15" pos:end="1:30"><type pos:start="1:15" pos:end="1:27"><name pos:start="1:15" pos:end="1:25">CPUARMState</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:30">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="417:1">{<block_content pos:start="5:5" pos:end="415:5">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">trapnr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:18">n</name></decl>, <decl pos:start="7:21" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:21" pos:end="7:24">insn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:20">target_siginfo_t</name></type> <name pos:start="9:22" pos:end="9:25">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:17">addr</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="415:5">for<control pos:start="15:8" pos:end="15:11">(<init pos:start="15:9" pos:end="15:9">;</init><condition pos:start="15:10" pos:end="15:10">;</condition><incr/>)</control> <block pos:start="15:13" pos:end="415:5">{<block_content pos:start="17:9" pos:end="413:37">

        <expr_stmt pos:start="17:9" pos:end="17:28"><expr pos:start="17:9" pos:end="17:27"><call pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:22">cpu_exec_start</name><argument_list pos:start="17:23" pos:end="17:27">(<argument pos:start="17:24" pos:end="17:26"><expr pos:start="17:24" pos:end="17:26"><name pos:start="17:24" pos:end="17:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:14">trapnr</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:34"><name pos:start="19:18" pos:end="19:29">cpu_arm_exec</name><argument_list pos:start="19:30" pos:end="19:34">(<argument pos:start="19:31" pos:end="19:33"><expr pos:start="19:31" pos:end="19:33"><name pos:start="19:31" pos:end="19:33">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><call pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:20">cpu_exec_end</name><argument_list pos:start="21:21" pos:end="21:25">(<argument pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><name pos:start="21:22" pos:end="21:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="23:9" pos:end="411:9">switch<condition pos:start="23:15" pos:end="23:22">(<expr pos:start="23:16" pos:end="23:21"><name pos:start="23:16" pos:end="23:21">trapnr</name></expr>)</condition> <block pos:start="23:24" pos:end="411:9">{<block_content pos:start="25:9" pos:end="409:20">

        <case pos:start="25:9" pos:end="25:23">case <expr pos:start="25:14" pos:end="25:22"><name pos:start="25:14" pos:end="25:22">EXCP_UDEF</name></expr>:</case>

            <block pos:start="27:13" pos:end="163:13">{<block_content pos:start="29:17" pos:end="161:17">

                <decl_stmt pos:start="29:17" pos:end="29:44"><decl pos:start="29:17" pos:end="29:43"><type pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:25">TaskState</name> <modifier pos:start="29:27" pos:end="29:27">*</modifier></type><name pos:start="29:28" pos:end="29:29">ts</name> <init pos:start="29:31" pos:end="29:43">= <expr pos:start="29:33" pos:end="29:43"><name pos:start="29:33" pos:end="29:43"><name pos:start="29:33" pos:end="29:35">env</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:43">opaque</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="31:17" pos:end="31:32"><decl pos:start="31:17" pos:end="31:31"><type pos:start="31:17" pos:end="31:24"><name pos:start="31:17" pos:end="31:24">uint32_t</name></type> <name pos:start="31:26" pos:end="31:31">opcode</name></decl>;</decl_stmt>

                <decl_stmt pos:start="33:17" pos:end="33:23"><decl pos:start="33:17" pos:end="33:22"><type pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:19">int</name></type> <name pos:start="33:21" pos:end="33:22">rc</name></decl>;</decl_stmt>



                <comment type="block" pos:start="37:17" pos:end="37:64">/* we handle the FPU emulation here, as Linux */</comment>

                <comment type="block" pos:start="39:17" pos:end="39:39">/* we get the opcode */</comment>

                <comment type="block" pos:start="41:17" pos:end="41:61">/* FIXME - what to do if get_user() fails? */</comment>

                <expr_stmt pos:start="43:17" pos:end="43:52"><expr pos:start="43:17" pos:end="43:51"><call pos:start="43:17" pos:end="43:51"><name pos:start="43:17" pos:end="43:28">get_user_u32</name><argument_list pos:start="43:29" pos:end="43:51">(<argument pos:start="43:30" pos:end="43:35"><expr pos:start="43:30" pos:end="43:35"><name pos:start="43:30" pos:end="43:35">opcode</name></expr></argument>, <argument pos:start="43:38" pos:end="43:50"><expr pos:start="43:38" pos:end="43:50"><name pos:start="43:38" pos:end="43:50"><name pos:start="43:38" pos:end="43:40">env</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:46">regs</name><index pos:start="43:47" pos:end="43:50">[<expr pos:start="43:48" pos:end="43:49"><literal type="number" pos:start="43:48" pos:end="43:49">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="47:17" pos:end="47:55"><expr pos:start="47:17" pos:end="47:54"><name pos:start="47:17" pos:end="47:18">rc</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <call pos:start="47:22" pos:end="47:54"><name pos:start="47:22" pos:end="47:31">EmulateAll</name><argument_list pos:start="47:32" pos:end="47:54">(<argument pos:start="47:33" pos:end="47:38"><expr pos:start="47:33" pos:end="47:38"><name pos:start="47:33" pos:end="47:38">opcode</name></expr></argument>, <argument pos:start="47:41" pos:end="47:48"><expr pos:start="47:41" pos:end="47:48"><operator pos:start="47:41" pos:end="47:41">&amp;</operator><name pos:start="47:42" pos:end="47:48"><name pos:start="47:42" pos:end="47:43">ts</name><operator pos:start="47:44" pos:end="47:45">-&gt;</operator><name pos:start="47:46" pos:end="47:48">fpa</name></name></expr></argument>, <argument pos:start="47:51" pos:end="47:53"><expr pos:start="47:51" pos:end="47:53"><name pos:start="47:51" pos:end="47:53">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="49:17" pos:end="161:17"><if pos:start="49:17" pos:end="61:17">if <condition pos:start="49:20" pos:end="49:28">(<expr pos:start="49:21" pos:end="49:27"><name pos:start="49:21" pos:end="49:22">rc</name> <operator pos:start="49:24" pos:end="49:25">==</operator> <literal type="number" pos:start="49:27" pos:end="49:27">0</literal></expr>)</condition> <block pos:start="49:30" pos:end="61:17">{<block_content pos:start="51:21" pos:end="59:60"> <comment type="block" pos:start="49:32" pos:end="49:56">/* illegal instruction */</comment>

                    <expr_stmt pos:start="51:21" pos:end="51:43"><expr pos:start="51:21" pos:end="51:42"><name pos:start="51:21" pos:end="51:33"><name pos:start="51:21" pos:end="51:24">info</name><operator pos:start="51:25" pos:end="51:25">.</operator><name pos:start="51:26" pos:end="51:33">si_signo</name></name> <operator pos:start="51:35" pos:end="51:35">=</operator> <name pos:start="51:37" pos:end="51:42">SIGILL</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="53:21" pos:end="53:38"><expr pos:start="53:21" pos:end="53:37"><name pos:start="53:21" pos:end="53:33"><name pos:start="53:21" pos:end="53:24">info</name><operator pos:start="53:25" pos:end="53:25">.</operator><name pos:start="53:26" pos:end="53:33">si_errno</name></name> <operator pos:start="53:35" pos:end="53:35">=</operator> <literal type="number" pos:start="53:37" pos:end="53:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="55:21" pos:end="55:53"><expr pos:start="55:21" pos:end="55:52"><name pos:start="55:21" pos:end="55:32"><name pos:start="55:21" pos:end="55:24">info</name><operator pos:start="55:25" pos:end="55:25">.</operator><name pos:start="55:26" pos:end="55:32">si_code</name></name> <operator pos:start="55:34" pos:end="55:34">=</operator> <name pos:start="55:36" pos:end="55:52">TARGET_ILL_ILLOPN</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:67"><expr pos:start="57:21" pos:end="57:66"><name pos:start="57:21" pos:end="57:50"><name pos:start="57:21" pos:end="57:24">info</name><operator pos:start="57:25" pos:end="57:25">.</operator><name pos:start="57:26" pos:end="57:34">_sifields</name><operator pos:start="57:35" pos:end="57:35">.</operator><name pos:start="57:36" pos:end="57:44">_sigfault</name><operator pos:start="57:45" pos:end="57:45">.</operator><name pos:start="57:46" pos:end="57:50">_addr</name></name> <operator pos:start="57:52" pos:end="57:52">=</operator> <name pos:start="57:54" pos:end="57:66"><name pos:start="57:54" pos:end="57:56">env</name><operator pos:start="57:57" pos:end="57:58">-&gt;</operator><name pos:start="57:59" pos:end="57:62">regs</name><index pos:start="57:63" pos:end="57:66">[<expr pos:start="57:64" pos:end="57:65"><literal type="number" pos:start="57:64" pos:end="57:65">15</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:60"><expr pos:start="59:21" pos:end="59:59"><call pos:start="59:21" pos:end="59:59"><name pos:start="59:21" pos:end="59:32">queue_signal</name><argument_list pos:start="59:33" pos:end="59:59">(<argument pos:start="59:34" pos:end="59:36"><expr pos:start="59:34" pos:end="59:36"><name pos:start="59:34" pos:end="59:36">env</name></expr></argument>, <argument pos:start="59:39" pos:end="59:51"><expr pos:start="59:39" pos:end="59:51"><name pos:start="59:39" pos:end="59:51"><name pos:start="59:39" pos:end="59:42">info</name><operator pos:start="59:43" pos:end="59:43">.</operator><name pos:start="59:44" pos:end="59:51">si_signo</name></name></expr></argument>, <argument pos:start="59:54" pos:end="59:58"><expr pos:start="59:54" pos:end="59:58"><operator pos:start="59:54" pos:end="59:54">&amp;</operator><name pos:start="59:55" pos:end="59:58">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="61:19" pos:end="155:17">else if <condition pos:start="61:27" pos:end="61:34">(<expr pos:start="61:28" pos:end="61:33"><name pos:start="61:28" pos:end="61:29">rc</name> <operator pos:start="61:31" pos:end="61:31">&lt;</operator> <literal type="number" pos:start="61:33" pos:end="61:33">0</literal></expr>)</condition> <block pos:start="61:36" pos:end="155:17">{<block_content pos:start="63:21" pos:end="153:38"> <comment type="block" pos:start="61:38" pos:end="61:55">/* FP exception */</comment>

                    <decl_stmt pos:start="63:21" pos:end="63:34"><decl pos:start="63:21" pos:end="63:33"><type pos:start="63:21" pos:end="63:23"><name pos:start="63:21" pos:end="63:23">int</name></type> <name pos:start="63:25" pos:end="63:31">arm_fpe</name><init pos:start="63:32" pos:end="63:33">=<expr pos:start="63:33" pos:end="63:33"><literal type="number" pos:start="63:33" pos:end="63:33">0</literal></expr></init></decl>;</decl_stmt>



                    <comment type="block" pos:start="67:21" pos:end="67:65">/* translate softfloat flags to FPSR flags */</comment>

                    <if_stmt pos:start="69:21" pos:end="71:41"><if pos:start="69:21" pos:end="71:41">if <condition pos:start="69:24" pos:end="69:49">(<expr pos:start="69:25" pos:end="69:48"><operator pos:start="69:25" pos:end="69:25">-</operator><name pos:start="69:26" pos:end="69:27">rc</name> <operator pos:start="69:29" pos:end="69:29">&amp;</operator> <name pos:start="69:31" pos:end="69:48">float_flag_invalid</name></expr>)</condition><block type="pseudo" pos:start="71:23" pos:end="71:41"><block_content pos:start="71:23" pos:end="71:41">

                      <expr_stmt pos:start="71:23" pos:end="71:41"><expr pos:start="71:23" pos:end="71:40"><name pos:start="71:23" pos:end="71:29">arm_fpe</name> <operator pos:start="71:31" pos:end="71:32">|=</operator> <name pos:start="71:34" pos:end="71:40">BIT_IOC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="73:21" pos:end="75:41"><if pos:start="73:21" pos:end="75:41">if <condition pos:start="73:24" pos:end="73:51">(<expr pos:start="73:25" pos:end="73:50"><operator pos:start="73:25" pos:end="73:25">-</operator><name pos:start="73:26" pos:end="73:27">rc</name> <operator pos:start="73:29" pos:end="73:29">&amp;</operator> <name pos:start="73:31" pos:end="73:50">float_flag_divbyzero</name></expr>)</condition><block type="pseudo" pos:start="75:23" pos:end="75:41"><block_content pos:start="75:23" pos:end="75:41">

                      <expr_stmt pos:start="75:23" pos:end="75:41"><expr pos:start="75:23" pos:end="75:40"><name pos:start="75:23" pos:end="75:29">arm_fpe</name> <operator pos:start="75:31" pos:end="75:32">|=</operator> <name pos:start="75:34" pos:end="75:40">BIT_DZC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="77:21" pos:end="79:41"><if pos:start="77:21" pos:end="79:41">if <condition pos:start="77:24" pos:end="77:50">(<expr pos:start="77:25" pos:end="77:49"><operator pos:start="77:25" pos:end="77:25">-</operator><name pos:start="77:26" pos:end="77:27">rc</name> <operator pos:start="77:29" pos:end="77:29">&amp;</operator> <name pos:start="77:31" pos:end="77:49">float_flag_overflow</name></expr>)</condition><block type="pseudo" pos:start="79:23" pos:end="79:41"><block_content pos:start="79:23" pos:end="79:41">

                      <expr_stmt pos:start="79:23" pos:end="79:41"><expr pos:start="79:23" pos:end="79:40"><name pos:start="79:23" pos:end="79:29">arm_fpe</name> <operator pos:start="79:31" pos:end="79:32">|=</operator> <name pos:start="79:34" pos:end="79:40">BIT_OFC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="81:21" pos:end="83:41"><if pos:start="81:21" pos:end="83:41">if <condition pos:start="81:24" pos:end="81:51">(<expr pos:start="81:25" pos:end="81:50"><operator pos:start="81:25" pos:end="81:25">-</operator><name pos:start="81:26" pos:end="81:27">rc</name> <operator pos:start="81:29" pos:end="81:29">&amp;</operator> <name pos:start="81:31" pos:end="81:50">float_flag_underflow</name></expr>)</condition><block type="pseudo" pos:start="83:23" pos:end="83:41"><block_content pos:start="83:23" pos:end="83:41">

                      <expr_stmt pos:start="83:23" pos:end="83:41"><expr pos:start="83:23" pos:end="83:40"><name pos:start="83:23" pos:end="83:29">arm_fpe</name> <operator pos:start="83:31" pos:end="83:32">|=</operator> <name pos:start="83:34" pos:end="83:40">BIT_UFC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="85:21" pos:end="87:41"><if pos:start="85:21" pos:end="87:41">if <condition pos:start="85:24" pos:end="85:49">(<expr pos:start="85:25" pos:end="85:48"><operator pos:start="85:25" pos:end="85:25">-</operator><name pos:start="85:26" pos:end="85:27">rc</name> <operator pos:start="85:29" pos:end="85:29">&amp;</operator> <name pos:start="85:31" pos:end="85:48">float_flag_inexact</name></expr>)</condition><block type="pseudo" pos:start="87:23" pos:end="87:41"><block_content pos:start="87:23" pos:end="87:41">

                      <expr_stmt pos:start="87:23" pos:end="87:41"><expr pos:start="87:23" pos:end="87:40"><name pos:start="87:23" pos:end="87:29">arm_fpe</name> <operator pos:start="87:31" pos:end="87:32">|=</operator> <name pos:start="87:34" pos:end="87:40">BIT_IXC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <decl_stmt pos:start="91:21" pos:end="91:45"><decl pos:start="91:21" pos:end="91:44"><type pos:start="91:21" pos:end="91:24"><name pos:start="91:21" pos:end="91:24">FPSR</name></type> <name pos:start="91:26" pos:end="91:29">fpsr</name> <init pos:start="91:31" pos:end="91:44">= <expr pos:start="91:33" pos:end="91:44"><name pos:start="91:33" pos:end="91:44"><name pos:start="91:33" pos:end="91:34">ts</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:39">fpa</name><operator pos:start="91:40" pos:end="91:40">.</operator><name pos:start="91:41" pos:end="91:44">fpsr</name></name></expr></init></decl>;</decl_stmt>

                    <comment type="line" pos:start="93:21" pos:end="93:71">//printf("fpsr 0x%x, arm_fpe 0x%x\n",fpsr,arm_fpe);</comment>



                    <if_stmt pos:start="97:21" pos:end="127:21"><if pos:start="97:21" pos:end="123:21">if <condition pos:start="97:24" pos:end="97:47">(<expr pos:start="97:25" pos:end="97:46"><name pos:start="97:25" pos:end="97:28">fpsr</name> <operator pos:start="97:30" pos:end="97:30">&amp;</operator> <operator pos:start="97:32" pos:end="97:32">(</operator><name pos:start="97:33" pos:end="97:39">arm_fpe</name> <operator pos:start="97:41" pos:end="97:42">&lt;&lt;</operator> <literal type="number" pos:start="97:44" pos:end="97:45">16</literal><operator pos:start="97:46" pos:end="97:46">)</operator></expr>)</condition> <block pos:start="97:49" pos:end="123:21">{<block_content pos:start="99:23" pos:end="121:62"> <comment type="block" pos:start="97:51" pos:end="97:74">/* exception enabled? */</comment>

                      <expr_stmt pos:start="99:23" pos:end="99:45"><expr pos:start="99:23" pos:end="99:44"><name pos:start="99:23" pos:end="99:35"><name pos:start="99:23" pos:end="99:26">info</name><operator pos:start="99:27" pos:end="99:27">.</operator><name pos:start="99:28" pos:end="99:35">si_signo</name></name> <operator pos:start="99:37" pos:end="99:37">=</operator> <name pos:start="99:39" pos:end="99:44">SIGFPE</name></expr>;</expr_stmt>

                      <expr_stmt pos:start="101:23" pos:end="101:40"><expr pos:start="101:23" pos:end="101:39"><name pos:start="101:23" pos:end="101:35"><name pos:start="101:23" pos:end="101:26">info</name><operator pos:start="101:27" pos:end="101:27">.</operator><name pos:start="101:28" pos:end="101:35">si_errno</name></name> <operator pos:start="101:37" pos:end="101:37">=</operator> <literal type="number" pos:start="101:39" pos:end="101:39">0</literal></expr>;</expr_stmt>



                      <comment type="block" pos:start="105:23" pos:end="105:60">/* ordered by priority, least first */</comment>

                      <if_stmt pos:start="107:23" pos:end="107:78"><if pos:start="107:23" pos:end="107:78">if <condition pos:start="107:26" pos:end="107:44">(<expr pos:start="107:27" pos:end="107:43"><name pos:start="107:27" pos:end="107:33">arm_fpe</name> <operator pos:start="107:35" pos:end="107:35">&amp;</operator> <name pos:start="107:37" pos:end="107:43">BIT_IXC</name></expr>)</condition><block type="pseudo" pos:start="107:46" pos:end="107:78"><block_content pos:start="107:46" pos:end="107:78"> <expr_stmt pos:start="107:46" pos:end="107:78"><expr pos:start="107:46" pos:end="107:77"><name pos:start="107:46" pos:end="107:57"><name pos:start="107:46" pos:end="107:49">info</name><operator pos:start="107:50" pos:end="107:50">.</operator><name pos:start="107:51" pos:end="107:57">si_code</name></name> <operator pos:start="107:59" pos:end="107:59">=</operator> <name pos:start="107:61" pos:end="107:77">TARGET_FPE_FLTRES</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                      <if_stmt pos:start="109:23" pos:end="109:78"><if pos:start="109:23" pos:end="109:78">if <condition pos:start="109:26" pos:end="109:44">(<expr pos:start="109:27" pos:end="109:43"><name pos:start="109:27" pos:end="109:33">arm_fpe</name> <operator pos:start="109:35" pos:end="109:35">&amp;</operator> <name pos:start="109:37" pos:end="109:43">BIT_UFC</name></expr>)</condition><block type="pseudo" pos:start="109:46" pos:end="109:78"><block_content pos:start="109:46" pos:end="109:78"> <expr_stmt pos:start="109:46" pos:end="109:78"><expr pos:start="109:46" pos:end="109:77"><name pos:start="109:46" pos:end="109:57"><name pos:start="109:46" pos:end="109:49">info</name><operator pos:start="109:50" pos:end="109:50">.</operator><name pos:start="109:51" pos:end="109:57">si_code</name></name> <operator pos:start="109:59" pos:end="109:59">=</operator> <name pos:start="109:61" pos:end="109:77">TARGET_FPE_FLTUND</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                      <if_stmt pos:start="111:23" pos:end="111:78"><if pos:start="111:23" pos:end="111:78">if <condition pos:start="111:26" pos:end="111:44">(<expr pos:start="111:27" pos:end="111:43"><name pos:start="111:27" pos:end="111:33">arm_fpe</name> <operator pos:start="111:35" pos:end="111:35">&amp;</operator> <name pos:start="111:37" pos:end="111:43">BIT_OFC</name></expr>)</condition><block type="pseudo" pos:start="111:46" pos:end="111:78"><block_content pos:start="111:46" pos:end="111:78"> <expr_stmt pos:start="111:46" pos:end="111:78"><expr pos:start="111:46" pos:end="111:77"><name pos:start="111:46" pos:end="111:57"><name pos:start="111:46" pos:end="111:49">info</name><operator pos:start="111:50" pos:end="111:50">.</operator><name pos:start="111:51" pos:end="111:57">si_code</name></name> <operator pos:start="111:59" pos:end="111:59">=</operator> <name pos:start="111:61" pos:end="111:77">TARGET_FPE_FLTOVF</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                      <if_stmt pos:start="113:23" pos:end="113:78"><if pos:start="113:23" pos:end="113:78">if <condition pos:start="113:26" pos:end="113:44">(<expr pos:start="113:27" pos:end="113:43"><name pos:start="113:27" pos:end="113:33">arm_fpe</name> <operator pos:start="113:35" pos:end="113:35">&amp;</operator> <name pos:start="113:37" pos:end="113:43">BIT_DZC</name></expr>)</condition><block type="pseudo" pos:start="113:46" pos:end="113:78"><block_content pos:start="113:46" pos:end="113:78"> <expr_stmt pos:start="113:46" pos:end="113:78"><expr pos:start="113:46" pos:end="113:77"><name pos:start="113:46" pos:end="113:57"><name pos:start="113:46" pos:end="113:49">info</name><operator pos:start="113:50" pos:end="113:50">.</operator><name pos:start="113:51" pos:end="113:57">si_code</name></name> <operator pos:start="113:59" pos:end="113:59">=</operator> <name pos:start="113:61" pos:end="113:77">TARGET_FPE_FLTDIV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                      <if_stmt pos:start="115:23" pos:end="115:78"><if pos:start="115:23" pos:end="115:78">if <condition pos:start="115:26" pos:end="115:44">(<expr pos:start="115:27" pos:end="115:43"><name pos:start="115:27" pos:end="115:33">arm_fpe</name> <operator pos:start="115:35" pos:end="115:35">&amp;</operator> <name pos:start="115:37" pos:end="115:43">BIT_IOC</name></expr>)</condition><block type="pseudo" pos:start="115:46" pos:end="115:78"><block_content pos:start="115:46" pos:end="115:78"> <expr_stmt pos:start="115:46" pos:end="115:78"><expr pos:start="115:46" pos:end="115:77"><name pos:start="115:46" pos:end="115:57"><name pos:start="115:46" pos:end="115:49">info</name><operator pos:start="115:50" pos:end="115:50">.</operator><name pos:start="115:51" pos:end="115:57">si_code</name></name> <operator pos:start="115:59" pos:end="115:59">=</operator> <name pos:start="115:61" pos:end="115:77">TARGET_FPE_FLTINV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                      <expr_stmt pos:start="119:23" pos:end="119:69"><expr pos:start="119:23" pos:end="119:68"><name pos:start="119:23" pos:end="119:52"><name pos:start="119:23" pos:end="119:26">info</name><operator pos:start="119:27" pos:end="119:27">.</operator><name pos:start="119:28" pos:end="119:36">_sifields</name><operator pos:start="119:37" pos:end="119:37">.</operator><name pos:start="119:38" pos:end="119:46">_sigfault</name><operator pos:start="119:47" pos:end="119:47">.</operator><name pos:start="119:48" pos:end="119:52">_addr</name></name> <operator pos:start="119:54" pos:end="119:54">=</operator> <name pos:start="119:56" pos:end="119:68"><name pos:start="119:56" pos:end="119:58">env</name><operator pos:start="119:59" pos:end="119:60">-&gt;</operator><name pos:start="119:61" pos:end="119:64">regs</name><index pos:start="119:65" pos:end="119:68">[<expr pos:start="119:66" pos:end="119:67"><literal type="number" pos:start="119:66" pos:end="119:67">15</literal></expr>]</index></name></expr>;</expr_stmt>

                      <expr_stmt pos:start="121:23" pos:end="121:62"><expr pos:start="121:23" pos:end="121:61"><call pos:start="121:23" pos:end="121:61"><name pos:start="121:23" pos:end="121:34">queue_signal</name><argument_list pos:start="121:35" pos:end="121:61">(<argument pos:start="121:36" pos:end="121:38"><expr pos:start="121:36" pos:end="121:38"><name pos:start="121:36" pos:end="121:38">env</name></expr></argument>, <argument pos:start="121:41" pos:end="121:53"><expr pos:start="121:41" pos:end="121:53"><name pos:start="121:41" pos:end="121:53"><name pos:start="121:41" pos:end="121:44">info</name><operator pos:start="121:45" pos:end="121:45">.</operator><name pos:start="121:46" pos:end="121:53">si_signo</name></name></expr></argument>, <argument pos:start="121:56" pos:end="121:60"><expr pos:start="121:56" pos:end="121:60"><operator pos:start="121:56" pos:end="121:56">&amp;</operator><name pos:start="121:57" pos:end="121:60">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="123:23" pos:end="127:21">else <block pos:start="123:28" pos:end="127:21">{<block_content pos:start="125:23" pos:end="125:41">

                      <expr_stmt pos:start="125:23" pos:end="125:41"><expr pos:start="125:23" pos:end="125:40"><name pos:start="125:23" pos:end="125:35"><name pos:start="125:23" pos:end="125:25">env</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:31">regs</name><index pos:start="125:32" pos:end="125:35">[<expr pos:start="125:33" pos:end="125:34"><literal type="number" pos:start="125:33" pos:end="125:34">15</literal></expr>]</index></name> <operator pos:start="125:37" pos:end="125:38">+=</operator> <literal type="number" pos:start="125:40" pos:end="125:40">4</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>



                    <comment type="block" pos:start="131:21" pos:end="131:57">/* accumulate unenabled exceptions */</comment>

                    <if_stmt pos:start="133:21" pos:end="135:38"><if pos:start="133:21" pos:end="135:38">if <condition pos:start="133:24" pos:end="133:67">(<expr pos:start="133:25" pos:end="133:66"><operator pos:start="133:25" pos:end="133:25">(</operator><operator pos:start="133:26" pos:end="133:26">!</operator><operator pos:start="133:27" pos:end="133:27">(</operator><name pos:start="133:28" pos:end="133:31">fpsr</name> <operator pos:start="133:33" pos:end="133:33">&amp;</operator> <name pos:start="133:35" pos:end="133:41">BIT_IXE</name><operator pos:start="133:42" pos:end="133:42">)</operator><operator pos:start="133:43" pos:end="133:43">)</operator> <operator pos:start="133:45" pos:end="133:46">&amp;&amp;</operator> <operator pos:start="133:48" pos:end="133:48">(</operator><name pos:start="133:49" pos:end="133:55">arm_fpe</name> <operator pos:start="133:57" pos:end="133:57">&amp;</operator> <name pos:start="133:59" pos:end="133:65">BIT_IXC</name><operator pos:start="133:66" pos:end="133:66">)</operator></expr>)</condition><block type="pseudo" pos:start="135:23" pos:end="135:38"><block_content pos:start="135:23" pos:end="135:38">

                      <expr_stmt pos:start="135:23" pos:end="135:38"><expr pos:start="135:23" pos:end="135:37"><name pos:start="135:23" pos:end="135:26">fpsr</name> <operator pos:start="135:28" pos:end="135:29">|=</operator> <name pos:start="135:31" pos:end="135:37">BIT_IXC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="137:21" pos:end="139:38"><if pos:start="137:21" pos:end="139:38">if <condition pos:start="137:24" pos:end="137:67">(<expr pos:start="137:25" pos:end="137:66"><operator pos:start="137:25" pos:end="137:25">(</operator><operator pos:start="137:26" pos:end="137:26">!</operator><operator pos:start="137:27" pos:end="137:27">(</operator><name pos:start="137:28" pos:end="137:31">fpsr</name> <operator pos:start="137:33" pos:end="137:33">&amp;</operator> <name pos:start="137:35" pos:end="137:41">BIT_UFE</name><operator pos:start="137:42" pos:end="137:42">)</operator><operator pos:start="137:43" pos:end="137:43">)</operator> <operator pos:start="137:45" pos:end="137:46">&amp;&amp;</operator> <operator pos:start="137:48" pos:end="137:48">(</operator><name pos:start="137:49" pos:end="137:55">arm_fpe</name> <operator pos:start="137:57" pos:end="137:57">&amp;</operator> <name pos:start="137:59" pos:end="137:65">BIT_UFC</name><operator pos:start="137:66" pos:end="137:66">)</operator></expr>)</condition><block type="pseudo" pos:start="139:23" pos:end="139:38"><block_content pos:start="139:23" pos:end="139:38">

                      <expr_stmt pos:start="139:23" pos:end="139:38"><expr pos:start="139:23" pos:end="139:37"><name pos:start="139:23" pos:end="139:26">fpsr</name> <operator pos:start="139:28" pos:end="139:29">|=</operator> <name pos:start="139:31" pos:end="139:37">BIT_UFC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="141:21" pos:end="143:38"><if pos:start="141:21" pos:end="143:38">if <condition pos:start="141:24" pos:end="141:67">(<expr pos:start="141:25" pos:end="141:66"><operator pos:start="141:25" pos:end="141:25">(</operator><operator pos:start="141:26" pos:end="141:26">!</operator><operator pos:start="141:27" pos:end="141:27">(</operator><name pos:start="141:28" pos:end="141:31">fpsr</name> <operator pos:start="141:33" pos:end="141:33">&amp;</operator> <name pos:start="141:35" pos:end="141:41">BIT_OFE</name><operator pos:start="141:42" pos:end="141:42">)</operator><operator pos:start="141:43" pos:end="141:43">)</operator> <operator pos:start="141:45" pos:end="141:46">&amp;&amp;</operator> <operator pos:start="141:48" pos:end="141:48">(</operator><name pos:start="141:49" pos:end="141:55">arm_fpe</name> <operator pos:start="141:57" pos:end="141:57">&amp;</operator> <name pos:start="141:59" pos:end="141:65">BIT_OFC</name><operator pos:start="141:66" pos:end="141:66">)</operator></expr>)</condition><block type="pseudo" pos:start="143:23" pos:end="143:38"><block_content pos:start="143:23" pos:end="143:38">

                      <expr_stmt pos:start="143:23" pos:end="143:38"><expr pos:start="143:23" pos:end="143:37"><name pos:start="143:23" pos:end="143:26">fpsr</name> <operator pos:start="143:28" pos:end="143:29">|=</operator> <name pos:start="143:31" pos:end="143:37">BIT_OFC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="145:21" pos:end="147:38"><if pos:start="145:21" pos:end="147:38">if <condition pos:start="145:24" pos:end="145:67">(<expr pos:start="145:25" pos:end="145:66"><operator pos:start="145:25" pos:end="145:25">(</operator><operator pos:start="145:26" pos:end="145:26">!</operator><operator pos:start="145:27" pos:end="145:27">(</operator><name pos:start="145:28" pos:end="145:31">fpsr</name> <operator pos:start="145:33" pos:end="145:33">&amp;</operator> <name pos:start="145:35" pos:end="145:41">BIT_DZE</name><operator pos:start="145:42" pos:end="145:42">)</operator><operator pos:start="145:43" pos:end="145:43">)</operator> <operator pos:start="145:45" pos:end="145:46">&amp;&amp;</operator> <operator pos:start="145:48" pos:end="145:48">(</operator><name pos:start="145:49" pos:end="145:55">arm_fpe</name> <operator pos:start="145:57" pos:end="145:57">&amp;</operator> <name pos:start="145:59" pos:end="145:65">BIT_DZC</name><operator pos:start="145:66" pos:end="145:66">)</operator></expr>)</condition><block type="pseudo" pos:start="147:23" pos:end="147:38"><block_content pos:start="147:23" pos:end="147:38">

                      <expr_stmt pos:start="147:23" pos:end="147:38"><expr pos:start="147:23" pos:end="147:37"><name pos:start="147:23" pos:end="147:26">fpsr</name> <operator pos:start="147:28" pos:end="147:29">|=</operator> <name pos:start="147:31" pos:end="147:37">BIT_DZC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="149:21" pos:end="151:38"><if pos:start="149:21" pos:end="151:38">if <condition pos:start="149:24" pos:end="149:67">(<expr pos:start="149:25" pos:end="149:66"><operator pos:start="149:25" pos:end="149:25">(</operator><operator pos:start="149:26" pos:end="149:26">!</operator><operator pos:start="149:27" pos:end="149:27">(</operator><name pos:start="149:28" pos:end="149:31">fpsr</name> <operator pos:start="149:33" pos:end="149:33">&amp;</operator> <name pos:start="149:35" pos:end="149:41">BIT_IOE</name><operator pos:start="149:42" pos:end="149:42">)</operator><operator pos:start="149:43" pos:end="149:43">)</operator> <operator pos:start="149:45" pos:end="149:46">&amp;&amp;</operator> <operator pos:start="149:48" pos:end="149:48">(</operator><name pos:start="149:49" pos:end="149:55">arm_fpe</name> <operator pos:start="149:57" pos:end="149:57">&amp;</operator> <name pos:start="149:59" pos:end="149:65">BIT_IOC</name><operator pos:start="149:66" pos:end="149:66">)</operator></expr>)</condition><block type="pseudo" pos:start="151:23" pos:end="151:38"><block_content pos:start="151:23" pos:end="151:38">

                      <expr_stmt pos:start="151:23" pos:end="151:38"><expr pos:start="151:23" pos:end="151:37"><name pos:start="151:23" pos:end="151:26">fpsr</name> <operator pos:start="151:28" pos:end="151:29">|=</operator> <name pos:start="151:31" pos:end="151:37">BIT_IOC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="153:21" pos:end="153:38"><expr pos:start="153:21" pos:end="153:37"><name pos:start="153:21" pos:end="153:32"><name pos:start="153:21" pos:end="153:22">ts</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:27">fpa</name><operator pos:start="153:28" pos:end="153:28">.</operator><name pos:start="153:29" pos:end="153:32">fpsr</name></name><operator pos:start="153:33" pos:end="153:33">=</operator><name pos:start="153:34" pos:end="153:37">fpsr</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="155:19" pos:end="161:17">else <block pos:start="155:24" pos:end="161:17">{<block_content pos:start="159:21" pos:end="159:39"> <comment type="block" pos:start="155:26" pos:end="155:44">/* everything OK */</comment>

                    <comment type="block" pos:start="157:21" pos:end="157:38">/* increment PC */</comment>

                    <expr_stmt pos:start="159:21" pos:end="159:39"><expr pos:start="159:21" pos:end="159:38"><name pos:start="159:21" pos:end="159:33"><name pos:start="159:21" pos:end="159:23">env</name><operator pos:start="159:24" pos:end="159:25">-&gt;</operator><name pos:start="159:26" pos:end="159:29">regs</name><index pos:start="159:30" pos:end="159:33">[<expr pos:start="159:31" pos:end="159:32"><literal type="number" pos:start="159:31" pos:end="159:32">15</literal></expr>]</index></name> <operator pos:start="159:35" pos:end="159:36">+=</operator> <literal type="number" pos:start="159:38" pos:end="159:38">4</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block>

            <break pos:start="165:13" pos:end="165:18">break;</break>

        <case pos:start="167:9" pos:end="167:22">case <expr pos:start="167:14" pos:end="167:21"><name pos:start="167:14" pos:end="167:21">EXCP_SWI</name></expr>:</case>

        <case pos:start="169:9" pos:end="169:23">case <expr pos:start="169:14" pos:end="169:22"><name pos:start="169:14" pos:end="169:22">EXCP_BKPT</name></expr>:</case>

            <block pos:start="171:13" pos:end="311:13">{<block_content pos:start="173:17" pos:end="309:17">

                <expr_stmt pos:start="173:17" pos:end="173:30"><expr pos:start="173:17" pos:end="173:29"><name pos:start="173:17" pos:end="173:25"><name pos:start="173:17" pos:end="173:19">env</name><operator pos:start="173:20" pos:end="173:21">-&gt;</operator><name pos:start="173:22" pos:end="173:25">eabi</name></name> <operator pos:start="173:27" pos:end="173:27">=</operator> <literal type="number" pos:start="173:29" pos:end="173:29">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="175:17" pos:end="175:33">/* system call */</comment>

                <if_stmt pos:start="177:17" pos:end="221:17"><if pos:start="177:17" pos:end="201:17">if <condition pos:start="177:20" pos:end="177:40">(<expr pos:start="177:21" pos:end="177:39"><name pos:start="177:21" pos:end="177:26">trapnr</name> <operator pos:start="177:28" pos:end="177:29">==</operator> <name pos:start="177:31" pos:end="177:39">EXCP_BKPT</name></expr>)</condition> <block pos:start="177:42" pos:end="201:17">{<block_content pos:start="179:21" pos:end="199:21">

                    <if_stmt pos:start="179:21" pos:end="199:21"><if pos:start="179:21" pos:end="189:21">if <condition pos:start="179:24" pos:end="179:35">(<expr pos:start="179:25" pos:end="179:34"><name pos:start="179:25" pos:end="179:34"><name pos:start="179:25" pos:end="179:27">env</name><operator pos:start="179:28" pos:end="179:29">-&gt;</operator><name pos:start="179:30" pos:end="179:34">thumb</name></name></expr>)</condition> <block pos:start="179:37" pos:end="189:21">{<block_content pos:start="183:25" pos:end="187:43">

                        <comment type="block" pos:start="181:25" pos:end="181:69">/* FIXME - what to do if get_user() fails? */</comment>

                        <expr_stmt pos:start="183:25" pos:end="183:58"><expr pos:start="183:25" pos:end="183:57"><call pos:start="183:25" pos:end="183:57"><name pos:start="183:25" pos:end="183:36">get_user_u16</name><argument_list pos:start="183:37" pos:end="183:57">(<argument pos:start="183:38" pos:end="183:41"><expr pos:start="183:38" pos:end="183:41"><name pos:start="183:38" pos:end="183:41">insn</name></expr></argument>, <argument pos:start="183:44" pos:end="183:56"><expr pos:start="183:44" pos:end="183:56"><name pos:start="183:44" pos:end="183:56"><name pos:start="183:44" pos:end="183:46">env</name><operator pos:start="183:47" pos:end="183:48">-&gt;</operator><name pos:start="183:49" pos:end="183:52">regs</name><index pos:start="183:53" pos:end="183:56">[<expr pos:start="183:54" pos:end="183:55"><literal type="number" pos:start="183:54" pos:end="183:55">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="185:25" pos:end="185:40"><expr pos:start="185:25" pos:end="185:39"><name pos:start="185:25" pos:end="185:25">n</name> <operator pos:start="185:27" pos:end="185:27">=</operator> <name pos:start="185:29" pos:end="185:32">insn</name> <operator pos:start="185:34" pos:end="185:34">&amp;</operator> <literal type="number" pos:start="185:36" pos:end="185:39">0xff</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="187:25" pos:end="187:43"><expr pos:start="187:25" pos:end="187:42"><name pos:start="187:25" pos:end="187:37"><name pos:start="187:25" pos:end="187:27">env</name><operator pos:start="187:28" pos:end="187:29">-&gt;</operator><name pos:start="187:30" pos:end="187:33">regs</name><index pos:start="187:34" pos:end="187:37">[<expr pos:start="187:35" pos:end="187:36"><literal type="number" pos:start="187:35" pos:end="187:36">15</literal></expr>]</index></name> <operator pos:start="187:39" pos:end="187:40">+=</operator> <literal type="number" pos:start="187:42" pos:end="187:42">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="189:23" pos:end="199:21">else <block pos:start="189:28" pos:end="199:21">{<block_content pos:start="193:25" pos:end="197:43">

                        <comment type="block" pos:start="191:25" pos:end="191:69">/* FIXME - what to do if get_user() fails? */</comment>

                        <expr_stmt pos:start="193:25" pos:end="193:58"><expr pos:start="193:25" pos:end="193:57"><call pos:start="193:25" pos:end="193:57"><name pos:start="193:25" pos:end="193:36">get_user_u32</name><argument_list pos:start="193:37" pos:end="193:57">(<argument pos:start="193:38" pos:end="193:41"><expr pos:start="193:38" pos:end="193:41"><name pos:start="193:38" pos:end="193:41">insn</name></expr></argument>, <argument pos:start="193:44" pos:end="193:56"><expr pos:start="193:44" pos:end="193:56"><name pos:start="193:44" pos:end="193:56"><name pos:start="193:44" pos:end="193:46">env</name><operator pos:start="193:47" pos:end="193:48">-&gt;</operator><name pos:start="193:49" pos:end="193:52">regs</name><index pos:start="193:53" pos:end="193:56">[<expr pos:start="193:54" pos:end="193:55"><literal type="number" pos:start="193:54" pos:end="193:55">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="195:25" pos:end="195:65"><expr pos:start="195:25" pos:end="195:64"><name pos:start="195:25" pos:end="195:25">n</name> <operator pos:start="195:27" pos:end="195:27">=</operator> <operator pos:start="195:29" pos:end="195:29">(</operator><name pos:start="195:30" pos:end="195:33">insn</name> <operator pos:start="195:35" pos:end="195:35">&amp;</operator> <literal type="number" pos:start="195:37" pos:end="195:39">0xf</literal><operator pos:start="195:40" pos:end="195:40">)</operator> <operator pos:start="195:42" pos:end="195:42">|</operator> <operator pos:start="195:44" pos:end="195:44">(</operator><operator pos:start="195:45" pos:end="195:45">(</operator><name pos:start="195:46" pos:end="195:49">insn</name> <operator pos:start="195:51" pos:end="195:52">&gt;&gt;</operator> <literal type="number" pos:start="195:54" pos:end="195:54">4</literal><operator pos:start="195:55" pos:end="195:55">)</operator> <operator pos:start="195:57" pos:end="195:57">&amp;</operator> <literal type="number" pos:start="195:59" pos:end="195:63">0xff0</literal><operator pos:start="195:64" pos:end="195:64">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="197:25" pos:end="197:43"><expr pos:start="197:25" pos:end="197:42"><name pos:start="197:25" pos:end="197:37"><name pos:start="197:25" pos:end="197:27">env</name><operator pos:start="197:28" pos:end="197:29">-&gt;</operator><name pos:start="197:30" pos:end="197:33">regs</name><index pos:start="197:34" pos:end="197:37">[<expr pos:start="197:35" pos:end="197:36"><literal type="number" pos:start="197:35" pos:end="197:36">15</literal></expr>]</index></name> <operator pos:start="197:39" pos:end="197:40">+=</operator> <literal type="number" pos:start="197:42" pos:end="197:42">4</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="201:19" pos:end="221:17">else <block pos:start="201:24" pos:end="221:17">{<block_content pos:start="203:21" pos:end="219:21">

                    <if_stmt pos:start="203:21" pos:end="219:21"><if pos:start="203:21" pos:end="211:21">if <condition pos:start="203:24" pos:end="203:35">(<expr pos:start="203:25" pos:end="203:34"><name pos:start="203:25" pos:end="203:34"><name pos:start="203:25" pos:end="203:27">env</name><operator pos:start="203:28" pos:end="203:29">-&gt;</operator><name pos:start="203:30" pos:end="203:34">thumb</name></name></expr>)</condition> <block pos:start="203:37" pos:end="211:21">{<block_content pos:start="207:25" pos:end="209:40">

                        <comment type="block" pos:start="205:25" pos:end="205:69">/* FIXME - what to do if get_user() fails? */</comment>

                        <expr_stmt pos:start="207:25" pos:end="207:62"><expr pos:start="207:25" pos:end="207:61"><call pos:start="207:25" pos:end="207:61"><name pos:start="207:25" pos:end="207:36">get_user_u16</name><argument_list pos:start="207:37" pos:end="207:61">(<argument pos:start="207:38" pos:end="207:41"><expr pos:start="207:38" pos:end="207:41"><name pos:start="207:38" pos:end="207:41">insn</name></expr></argument>, <argument pos:start="207:44" pos:end="207:60"><expr pos:start="207:44" pos:end="207:60"><name pos:start="207:44" pos:end="207:56"><name pos:start="207:44" pos:end="207:46">env</name><operator pos:start="207:47" pos:end="207:48">-&gt;</operator><name pos:start="207:49" pos:end="207:52">regs</name><index pos:start="207:53" pos:end="207:56">[<expr pos:start="207:54" pos:end="207:55"><literal type="number" pos:start="207:54" pos:end="207:55">15</literal></expr>]</index></name> <operator pos:start="207:58" pos:end="207:58">-</operator> <literal type="number" pos:start="207:60" pos:end="207:60">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="209:25" pos:end="209:40"><expr pos:start="209:25" pos:end="209:39"><name pos:start="209:25" pos:end="209:25">n</name> <operator pos:start="209:27" pos:end="209:27">=</operator> <name pos:start="209:29" pos:end="209:32">insn</name> <operator pos:start="209:34" pos:end="209:34">&amp;</operator> <literal type="number" pos:start="209:36" pos:end="209:39">0xff</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="211:23" pos:end="219:21">else <block pos:start="211:28" pos:end="219:21">{<block_content pos:start="215:25" pos:end="217:44">

                        <comment type="block" pos:start="213:25" pos:end="213:69">/* FIXME - what to do if get_user() fails? */</comment>

                        <expr_stmt pos:start="215:25" pos:end="215:62"><expr pos:start="215:25" pos:end="215:61"><call pos:start="215:25" pos:end="215:61"><name pos:start="215:25" pos:end="215:36">get_user_u32</name><argument_list pos:start="215:37" pos:end="215:61">(<argument pos:start="215:38" pos:end="215:41"><expr pos:start="215:38" pos:end="215:41"><name pos:start="215:38" pos:end="215:41">insn</name></expr></argument>, <argument pos:start="215:44" pos:end="215:60"><expr pos:start="215:44" pos:end="215:60"><name pos:start="215:44" pos:end="215:56"><name pos:start="215:44" pos:end="215:46">env</name><operator pos:start="215:47" pos:end="215:48">-&gt;</operator><name pos:start="215:49" pos:end="215:52">regs</name><index pos:start="215:53" pos:end="215:56">[<expr pos:start="215:54" pos:end="215:55"><literal type="number" pos:start="215:54" pos:end="215:55">15</literal></expr>]</index></name> <operator pos:start="215:58" pos:end="215:58">-</operator> <literal type="number" pos:start="215:60" pos:end="215:60">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="217:25" pos:end="217:44"><expr pos:start="217:25" pos:end="217:43"><name pos:start="217:25" pos:end="217:25">n</name> <operator pos:start="217:27" pos:end="217:27">=</operator> <name pos:start="217:29" pos:end="217:32">insn</name> <operator pos:start="217:34" pos:end="217:34">&amp;</operator> <literal type="number" pos:start="217:36" pos:end="217:43">0xffffff</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="225:17" pos:end="309:17"><if pos:start="225:17" pos:end="229:17">if <condition pos:start="225:20" pos:end="225:43">(<expr pos:start="225:21" pos:end="225:42"><name pos:start="225:21" pos:end="225:21">n</name> <operator pos:start="225:23" pos:end="225:24">==</operator> <name pos:start="225:26" pos:end="225:42">ARM_NR_cacheflush</name></expr>)</condition> <block pos:start="225:45" pos:end="229:17">{<block_content>

                    <comment type="block" pos:start="227:21" pos:end="227:29">/* nop */</comment>

                </block_content>}</block></if> <if type="elseif" pos:start="229:19" pos:end="235:17">else if <condition pos:start="229:27" pos:end="231:60">(<expr pos:start="229:28" pos:end="231:59"><name pos:start="229:28" pos:end="229:28">n</name> <operator pos:start="229:30" pos:end="229:31">==</operator> <name pos:start="229:33" pos:end="229:50">ARM_NR_semihosting</name>

                           <operator pos:start="231:28" pos:end="231:29">||</operator> <name pos:start="231:31" pos:end="231:31">n</name> <operator pos:start="231:33" pos:end="231:34">==</operator> <name pos:start="231:36" pos:end="231:59">ARM_NR_thumb_semihosting</name></expr>)</condition> <block pos:start="231:62" pos:end="235:17">{<block_content pos:start="233:21" pos:end="233:60">

                    <expr_stmt pos:start="233:21" pos:end="233:60"><expr pos:start="233:21" pos:end="233:59"><name pos:start="233:21" pos:end="233:32"><name pos:start="233:21" pos:end="233:23">env</name><operator pos:start="233:24" pos:end="233:25">-&gt;</operator><name pos:start="233:26" pos:end="233:29">regs</name><index pos:start="233:30" pos:end="233:32">[<expr pos:start="233:31" pos:end="233:31"><literal type="number" pos:start="233:31" pos:end="233:31">0</literal></expr>]</index></name> <operator pos:start="233:34" pos:end="233:34">=</operator> <call pos:start="233:36" pos:end="233:59"><name pos:start="233:36" pos:end="233:53">do_arm_semihosting</name> <argument_list pos:start="233:55" pos:end="233:59">(<argument pos:start="233:56" pos:end="233:58"><expr pos:start="233:56" pos:end="233:58"><name pos:start="233:56" pos:end="233:58">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="235:19" pos:end="305:17">else if <condition pos:start="235:27" pos:end="237:69">(<expr pos:start="235:28" pos:end="237:68"><name pos:start="235:28" pos:end="235:28">n</name> <operator pos:start="235:30" pos:end="235:31">==</operator> <literal type="number" pos:start="235:33" pos:end="235:33">0</literal> <operator pos:start="235:35" pos:end="235:36">||</operator> <name pos:start="235:38" pos:end="235:38">n</name> <operator pos:start="235:40" pos:end="235:41">&gt;=</operator> <name pos:start="235:43" pos:end="235:58">ARM_SYSCALL_BASE</name>

                           <operator pos:start="237:28" pos:end="237:29">||</operator> <operator pos:start="237:31" pos:end="237:31">(</operator><name pos:start="237:32" pos:end="237:41"><name pos:start="237:32" pos:end="237:34">env</name><operator pos:start="237:35" pos:end="237:36">-&gt;</operator><name pos:start="237:37" pos:end="237:41">thumb</name></name> <operator pos:start="237:43" pos:end="237:44">&amp;&amp;</operator> <name pos:start="237:46" pos:end="237:46">n</name> <operator pos:start="237:48" pos:end="237:49">==</operator> <name pos:start="237:51" pos:end="237:67">ARM_THUMB_SYSCALL</name><operator pos:start="237:68" pos:end="237:68">)</operator></expr>)</condition> <block pos:start="237:71" pos:end="305:17">{<block_content pos:start="241:21" pos:end="303:21">

                    <comment type="block" pos:start="239:21" pos:end="239:39">/* linux syscall */</comment>

                    <if_stmt pos:start="241:21" pos:end="251:21"><if pos:start="241:21" pos:end="245:21">if <condition pos:start="241:24" pos:end="241:45">(<expr pos:start="241:25" pos:end="241:44"><name pos:start="241:25" pos:end="241:34"><name pos:start="241:25" pos:end="241:27">env</name><operator pos:start="241:28" pos:end="241:29">-&gt;</operator><name pos:start="241:30" pos:end="241:34">thumb</name></name> <operator pos:start="241:36" pos:end="241:37">||</operator> <name pos:start="241:39" pos:end="241:39">n</name> <operator pos:start="241:41" pos:end="241:42">==</operator> <literal type="number" pos:start="241:44" pos:end="241:44">0</literal></expr>)</condition> <block pos:start="241:47" pos:end="245:21">{<block_content pos:start="243:25" pos:end="243:41">

                        <expr_stmt pos:start="243:25" pos:end="243:41"><expr pos:start="243:25" pos:end="243:40"><name pos:start="243:25" pos:end="243:25">n</name> <operator pos:start="243:27" pos:end="243:27">=</operator> <name pos:start="243:29" pos:end="243:40"><name pos:start="243:29" pos:end="243:31">env</name><operator pos:start="243:32" pos:end="243:33">-&gt;</operator><name pos:start="243:34" pos:end="243:37">regs</name><index pos:start="243:38" pos:end="243:40">[<expr pos:start="243:39" pos:end="243:39"><literal type="number" pos:start="243:39" pos:end="243:39">7</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="245:23" pos:end="251:21">else <block pos:start="245:28" pos:end="251:21">{<block_content pos:start="247:25" pos:end="249:38">

                        <expr_stmt pos:start="247:25" pos:end="247:46"><expr pos:start="247:25" pos:end="247:45"><name pos:start="247:25" pos:end="247:25">n</name> <operator pos:start="247:27" pos:end="247:28">-=</operator> <name pos:start="247:30" pos:end="247:45">ARM_SYSCALL_BASE</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="249:25" pos:end="249:38"><expr pos:start="249:25" pos:end="249:37"><name pos:start="249:25" pos:end="249:33"><name pos:start="249:25" pos:end="249:27">env</name><operator pos:start="249:28" pos:end="249:29">-&gt;</operator><name pos:start="249:30" pos:end="249:33">eabi</name></name> <operator pos:start="249:35" pos:end="249:35">=</operator> <literal type="number" pos:start="249:37" pos:end="249:37">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="253:21" pos:end="303:21"><if pos:start="253:21" pos:end="283:21">if <condition pos:start="253:24" pos:end="253:41">( <expr pos:start="253:26" pos:end="253:40"><name pos:start="253:26" pos:end="253:26">n</name> <operator pos:start="253:28" pos:end="253:28">&gt;</operator> <name pos:start="253:30" pos:end="253:40">ARM_NR_BASE</name></expr>)</condition> <block pos:start="253:43" pos:end="283:21">{<block_content pos:start="255:25" pos:end="281:25">

                        <switch pos:start="255:25" pos:end="281:25">switch <condition pos:start="255:32" pos:end="255:34">(<expr pos:start="255:33" pos:end="255:33"><name pos:start="255:33" pos:end="255:33">n</name></expr>)</condition> <block pos:start="255:36" pos:end="281:25">{<block_content pos:start="257:25" pos:end="279:34">

                        <case pos:start="257:25" pos:end="257:47">case <expr pos:start="257:30" pos:end="257:46"><name pos:start="257:30" pos:end="257:46">ARM_NR_cacheflush</name></expr>:</case>

                            <comment type="block" pos:start="259:29" pos:end="259:37">/* nop */</comment>

                            <break pos:start="261:29" pos:end="261:34">break;</break>

                        <case pos:start="263:25" pos:end="263:44">case <expr pos:start="263:30" pos:end="263:43"><name pos:start="263:30" pos:end="263:43">ARM_NR_set_tls</name></expr>:</case>

                            <expr_stmt pos:start="265:29" pos:end="265:59"><expr pos:start="265:29" pos:end="265:58"><call pos:start="265:29" pos:end="265:58"><name pos:start="265:29" pos:end="265:39">cpu_set_tls</name><argument_list pos:start="265:40" pos:end="265:58">(<argument pos:start="265:41" pos:end="265:43"><expr pos:start="265:41" pos:end="265:43"><name pos:start="265:41" pos:end="265:43">env</name></expr></argument>, <argument pos:start="265:46" pos:end="265:57"><expr pos:start="265:46" pos:end="265:57"><name pos:start="265:46" pos:end="265:57"><name pos:start="265:46" pos:end="265:48">env</name><operator pos:start="265:49" pos:end="265:50">-&gt;</operator><name pos:start="265:51" pos:end="265:54">regs</name><index pos:start="265:55" pos:end="265:57">[<expr pos:start="265:56" pos:end="265:56"><literal type="number" pos:start="265:56" pos:end="265:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="267:29" pos:end="267:45"><expr pos:start="267:29" pos:end="267:44"><name pos:start="267:29" pos:end="267:40"><name pos:start="267:29" pos:end="267:31">env</name><operator pos:start="267:32" pos:end="267:33">-&gt;</operator><name pos:start="267:34" pos:end="267:37">regs</name><index pos:start="267:38" pos:end="267:40">[<expr pos:start="267:39" pos:end="267:39"><literal type="number" pos:start="267:39" pos:end="267:39">0</literal></expr>]</index></name> <operator pos:start="267:42" pos:end="267:42">=</operator> <literal type="number" pos:start="267:44" pos:end="267:44">0</literal></expr>;</expr_stmt>

                            <break pos:start="269:29" pos:end="269:34">break;</break>

                        <default pos:start="271:25" pos:end="271:32">default:</default>

                            <expr_stmt pos:start="273:29" pos:end="275:40"><expr pos:start="273:29" pos:end="275:39"><call pos:start="273:29" pos:end="275:39"><name pos:start="273:29" pos:end="273:36">gemu_log</name><argument_list pos:start="273:37" pos:end="275:39">(<argument pos:start="273:38" pos:end="273:76"><expr pos:start="273:38" pos:end="273:76"><literal type="string" pos:start="273:38" pos:end="273:76">"qemu: Unsupported ARM syscall: 0x%x\n"</literal></expr></argument>,

                                     <argument pos:start="275:38" pos:end="275:38"><expr pos:start="275:38" pos:end="275:38"><name pos:start="275:38" pos:end="275:38">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="277:29" pos:end="277:58"><expr pos:start="277:29" pos:end="277:57"><name pos:start="277:29" pos:end="277:40"><name pos:start="277:29" pos:end="277:31">env</name><operator pos:start="277:32" pos:end="277:33">-&gt;</operator><name pos:start="277:34" pos:end="277:37">regs</name><index pos:start="277:38" pos:end="277:40">[<expr pos:start="277:39" pos:end="277:39"><literal type="number" pos:start="277:39" pos:end="277:39">0</literal></expr>]</index></name> <operator pos:start="277:42" pos:end="277:42">=</operator> <operator pos:start="277:44" pos:end="277:44">-</operator><name pos:start="277:45" pos:end="277:57">TARGET_ENOSYS</name></expr>;</expr_stmt>

                            <break pos:start="279:29" pos:end="279:34">break;</break>

                        </block_content>}</block></switch>

                    </block_content>}</block></if> <else pos:start="283:23" pos:end="303:21">else <block pos:start="283:28" pos:end="303:21">{<block_content pos:start="285:25" pos:end="301:56">

                        <expr_stmt pos:start="285:25" pos:end="301:56"><expr pos:start="285:25" pos:end="301:55"><name pos:start="285:25" pos:end="285:36"><name pos:start="285:25" pos:end="285:27">env</name><operator pos:start="285:28" pos:end="285:29">-&gt;</operator><name pos:start="285:30" pos:end="285:33">regs</name><index pos:start="285:34" pos:end="285:36">[<expr pos:start="285:35" pos:end="285:35"><literal type="number" pos:start="285:35" pos:end="285:35">0</literal></expr>]</index></name> <operator pos:start="285:38" pos:end="285:38">=</operator> <call pos:start="285:40" pos:end="301:55"><name pos:start="285:40" pos:end="285:49">do_syscall</name><argument_list pos:start="285:50" pos:end="301:55">(<argument pos:start="285:51" pos:end="285:53"><expr pos:start="285:51" pos:end="285:53"><name pos:start="285:51" pos:end="285:53">env</name></expr></argument>,

                                                  <argument pos:start="287:51" pos:end="287:51"><expr pos:start="287:51" pos:end="287:51"><name pos:start="287:51" pos:end="287:51">n</name></expr></argument>,

                                                  <argument pos:start="289:51" pos:end="289:62"><expr pos:start="289:51" pos:end="289:62"><name pos:start="289:51" pos:end="289:62"><name pos:start="289:51" pos:end="289:53">env</name><operator pos:start="289:54" pos:end="289:55">-&gt;</operator><name pos:start="289:56" pos:end="289:59">regs</name><index pos:start="289:60" pos:end="289:62">[<expr pos:start="289:61" pos:end="289:61"><literal type="number" pos:start="289:61" pos:end="289:61">0</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="291:51" pos:end="291:62"><expr pos:start="291:51" pos:end="291:62"><name pos:start="291:51" pos:end="291:62"><name pos:start="291:51" pos:end="291:53">env</name><operator pos:start="291:54" pos:end="291:55">-&gt;</operator><name pos:start="291:56" pos:end="291:59">regs</name><index pos:start="291:60" pos:end="291:62">[<expr pos:start="291:61" pos:end="291:61"><literal type="number" pos:start="291:61" pos:end="291:61">1</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="293:51" pos:end="293:62"><expr pos:start="293:51" pos:end="293:62"><name pos:start="293:51" pos:end="293:62"><name pos:start="293:51" pos:end="293:53">env</name><operator pos:start="293:54" pos:end="293:55">-&gt;</operator><name pos:start="293:56" pos:end="293:59">regs</name><index pos:start="293:60" pos:end="293:62">[<expr pos:start="293:61" pos:end="293:61"><literal type="number" pos:start="293:61" pos:end="293:61">2</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="295:51" pos:end="295:62"><expr pos:start="295:51" pos:end="295:62"><name pos:start="295:51" pos:end="295:62"><name pos:start="295:51" pos:end="295:53">env</name><operator pos:start="295:54" pos:end="295:55">-&gt;</operator><name pos:start="295:56" pos:end="295:59">regs</name><index pos:start="295:60" pos:end="295:62">[<expr pos:start="295:61" pos:end="295:61"><literal type="number" pos:start="295:61" pos:end="295:61">3</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="297:51" pos:end="297:62"><expr pos:start="297:51" pos:end="297:62"><name pos:start="297:51" pos:end="297:62"><name pos:start="297:51" pos:end="297:53">env</name><operator pos:start="297:54" pos:end="297:55">-&gt;</operator><name pos:start="297:56" pos:end="297:59">regs</name><index pos:start="297:60" pos:end="297:62">[<expr pos:start="297:61" pos:end="297:61"><literal type="number" pos:start="297:61" pos:end="297:61">4</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="299:51" pos:end="299:62"><expr pos:start="299:51" pos:end="299:62"><name pos:start="299:51" pos:end="299:62"><name pos:start="299:51" pos:end="299:53">env</name><operator pos:start="299:54" pos:end="299:55">-&gt;</operator><name pos:start="299:56" pos:end="299:59">regs</name><index pos:start="299:60" pos:end="299:62">[<expr pos:start="299:61" pos:end="299:61"><literal type="number" pos:start="299:61" pos:end="299:61">5</literal></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="301:51" pos:end="301:51"><expr pos:start="301:51" pos:end="301:51"><literal type="number" pos:start="301:51" pos:end="301:51">0</literal></expr></argument>, <argument pos:start="301:54" pos:end="301:54"><expr pos:start="301:54" pos:end="301:54"><literal type="number" pos:start="301:54" pos:end="301:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="305:19" pos:end="309:17">else <block pos:start="305:24" pos:end="309:17">{<block_content pos:start="307:21" pos:end="307:31">

                    <goto pos:start="307:21" pos:end="307:31">goto <name pos:start="307:26" pos:end="307:30">error</name>;</goto>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block>

            <break pos:start="313:13" pos:end="313:18">break;</break>

        <case pos:start="315:9" pos:end="315:28">case <expr pos:start="315:14" pos:end="315:27"><name pos:start="315:14" pos:end="315:27">EXCP_INTERRUPT</name></expr>:</case>

            <comment type="block" pos:start="317:13" pos:end="317:67">/* just indicate that signals should be handled asap */</comment>

            <break pos:start="319:13" pos:end="319:18">break;</break>

        <case pos:start="321:9" pos:end="321:33">case <expr pos:start="321:14" pos:end="321:32"><name pos:start="321:14" pos:end="321:32">EXCP_PREFETCH_ABORT</name></expr>:</case>

            <expr_stmt pos:start="323:13" pos:end="323:37"><expr pos:start="323:13" pos:end="323:36"><name pos:start="323:13" pos:end="323:16">addr</name> <operator pos:start="323:18" pos:end="323:18">=</operator> <name pos:start="323:20" pos:end="323:36"><name pos:start="323:20" pos:end="323:22">env</name><operator pos:start="323:23" pos:end="323:24">-&gt;</operator><name pos:start="323:25" pos:end="323:28">cp15</name><operator pos:start="323:29" pos:end="323:29">.</operator><name pos:start="323:30" pos:end="323:36">c6_insn</name></name></expr>;</expr_stmt>

            <goto pos:start="325:13" pos:end="325:25">goto <name pos:start="325:18" pos:end="325:24">do_segv</name>;</goto>

        <case pos:start="327:9" pos:end="327:29">case <expr pos:start="327:14" pos:end="327:28"><name pos:start="327:14" pos:end="327:28">EXCP_DATA_ABORT</name></expr>:</case>

            <expr_stmt pos:start="329:13" pos:end="329:37"><expr pos:start="329:13" pos:end="329:36"><name pos:start="329:13" pos:end="329:16">addr</name> <operator pos:start="329:18" pos:end="329:18">=</operator> <name pos:start="329:20" pos:end="329:36"><name pos:start="329:20" pos:end="329:22">env</name><operator pos:start="329:23" pos:end="329:24">-&gt;</operator><name pos:start="329:25" pos:end="329:28">cp15</name><operator pos:start="329:29" pos:end="329:29">.</operator><name pos:start="329:30" pos:end="329:36">c6_data</name></name></expr>;</expr_stmt>

        <label pos:start="331:9" pos:end="331:16"><name pos:start="331:9" pos:end="331:15">do_segv</name>:</label>

            <block pos:start="333:13" pos:end="347:13">{<block_content pos:start="335:17" pos:end="345:56">

                <expr_stmt pos:start="335:17" pos:end="335:40"><expr pos:start="335:17" pos:end="335:39"><name pos:start="335:17" pos:end="335:29"><name pos:start="335:17" pos:end="335:20">info</name><operator pos:start="335:21" pos:end="335:21">.</operator><name pos:start="335:22" pos:end="335:29">si_signo</name></name> <operator pos:start="335:31" pos:end="335:31">=</operator> <name pos:start="335:33" pos:end="335:39">SIGSEGV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="337:17" pos:end="337:34"><expr pos:start="337:17" pos:end="337:33"><name pos:start="337:17" pos:end="337:29"><name pos:start="337:17" pos:end="337:20">info</name><operator pos:start="337:21" pos:end="337:21">.</operator><name pos:start="337:22" pos:end="337:29">si_errno</name></name> <operator pos:start="337:31" pos:end="337:31">=</operator> <literal type="number" pos:start="337:33" pos:end="337:33">0</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="339:17" pos:end="339:48">/* XXX: check env-&gt;error_code */</comment>

                <expr_stmt pos:start="341:17" pos:end="341:50"><expr pos:start="341:17" pos:end="341:49"><name pos:start="341:17" pos:end="341:28"><name pos:start="341:17" pos:end="341:20">info</name><operator pos:start="341:21" pos:end="341:21">.</operator><name pos:start="341:22" pos:end="341:28">si_code</name></name> <operator pos:start="341:30" pos:end="341:30">=</operator> <name pos:start="341:32" pos:end="341:49">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

                <expr_stmt pos:start="343:17" pos:end="343:54"><expr pos:start="343:17" pos:end="343:53"><name pos:start="343:17" pos:end="343:46"><name pos:start="343:17" pos:end="343:20">info</name><operator pos:start="343:21" pos:end="343:21">.</operator><name pos:start="343:22" pos:end="343:30">_sifields</name><operator pos:start="343:31" pos:end="343:31">.</operator><name pos:start="343:32" pos:end="343:40">_sigfault</name><operator pos:start="343:41" pos:end="343:41">.</operator><name pos:start="343:42" pos:end="343:46">_addr</name></name> <operator pos:start="343:48" pos:end="343:48">=</operator> <name pos:start="343:50" pos:end="343:53">addr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="345:17" pos:end="345:56"><expr pos:start="345:17" pos:end="345:55"><call pos:start="345:17" pos:end="345:55"><name pos:start="345:17" pos:end="345:28">queue_signal</name><argument_list pos:start="345:29" pos:end="345:55">(<argument pos:start="345:30" pos:end="345:32"><expr pos:start="345:30" pos:end="345:32"><name pos:start="345:30" pos:end="345:32">env</name></expr></argument>, <argument pos:start="345:35" pos:end="345:47"><expr pos:start="345:35" pos:end="345:47"><name pos:start="345:35" pos:end="345:47"><name pos:start="345:35" pos:end="345:38">info</name><operator pos:start="345:39" pos:end="345:39">.</operator><name pos:start="345:40" pos:end="345:47">si_signo</name></name></expr></argument>, <argument pos:start="345:50" pos:end="345:54"><expr pos:start="345:50" pos:end="345:54"><operator pos:start="345:50" pos:end="345:50">&amp;</operator><name pos:start="345:51" pos:end="345:54">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="349:13" pos:end="349:18">break;</break>

        <case pos:start="351:9" pos:end="351:24">case <expr pos:start="351:14" pos:end="351:23"><name pos:start="351:14" pos:end="351:23">EXCP_DEBUG</name></expr>:</case>

            <block pos:start="353:13" pos:end="375:13">{<block_content pos:start="355:17" pos:end="373:19">

                <decl_stmt pos:start="355:17" pos:end="355:24"><decl pos:start="355:17" pos:end="355:23"><type pos:start="355:17" pos:end="355:19"><name pos:start="355:17" pos:end="355:19">int</name></type> <name pos:start="355:21" pos:end="355:23">sig</name></decl>;</decl_stmt>



                <expr_stmt pos:start="359:17" pos:end="359:58"><expr pos:start="359:17" pos:end="359:57"><name pos:start="359:17" pos:end="359:19">sig</name> <operator pos:start="359:21" pos:end="359:21">=</operator> <call pos:start="359:23" pos:end="359:57"><name pos:start="359:23" pos:end="359:35">gdb_handlesig</name> <argument_list pos:start="359:37" pos:end="359:57">(<argument pos:start="359:38" pos:end="359:40"><expr pos:start="359:38" pos:end="359:40"><name pos:start="359:38" pos:end="359:40">env</name></expr></argument>, <argument pos:start="359:43" pos:end="359:56"><expr pos:start="359:43" pos:end="359:56"><name pos:start="359:43" pos:end="359:56">TARGET_SIGTRAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="361:17" pos:end="373:19"><if pos:start="361:17" pos:end="373:19">if <condition pos:start="361:20" pos:end="361:24">(<expr pos:start="361:21" pos:end="361:23"><name pos:start="361:21" pos:end="361:23">sig</name></expr>)</condition>

                  <block pos:start="363:19" pos:end="373:19">{<block_content pos:start="365:21" pos:end="371:60">

                    <expr_stmt pos:start="365:21" pos:end="365:40"><expr pos:start="365:21" pos:end="365:39"><name pos:start="365:21" pos:end="365:33"><name pos:start="365:21" pos:end="365:24">info</name><operator pos:start="365:25" pos:end="365:25">.</operator><name pos:start="365:26" pos:end="365:33">si_signo</name></name> <operator pos:start="365:35" pos:end="365:35">=</operator> <name pos:start="365:37" pos:end="365:39">sig</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="367:21" pos:end="367:38"><expr pos:start="367:21" pos:end="367:37"><name pos:start="367:21" pos:end="367:33"><name pos:start="367:21" pos:end="367:24">info</name><operator pos:start="367:25" pos:end="367:25">.</operator><name pos:start="367:26" pos:end="367:33">si_errno</name></name> <operator pos:start="367:35" pos:end="367:35">=</operator> <literal type="number" pos:start="367:37" pos:end="367:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="369:21" pos:end="369:53"><expr pos:start="369:21" pos:end="369:52"><name pos:start="369:21" pos:end="369:32"><name pos:start="369:21" pos:end="369:24">info</name><operator pos:start="369:25" pos:end="369:25">.</operator><name pos:start="369:26" pos:end="369:32">si_code</name></name> <operator pos:start="369:34" pos:end="369:34">=</operator> <name pos:start="369:36" pos:end="369:52">TARGET_TRAP_BRKPT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="371:21" pos:end="371:60"><expr pos:start="371:21" pos:end="371:59"><call pos:start="371:21" pos:end="371:59"><name pos:start="371:21" pos:end="371:32">queue_signal</name><argument_list pos:start="371:33" pos:end="371:59">(<argument pos:start="371:34" pos:end="371:36"><expr pos:start="371:34" pos:end="371:36"><name pos:start="371:34" pos:end="371:36">env</name></expr></argument>, <argument pos:start="371:39" pos:end="371:51"><expr pos:start="371:39" pos:end="371:51"><name pos:start="371:39" pos:end="371:51"><name pos:start="371:39" pos:end="371:42">info</name><operator pos:start="371:43" pos:end="371:43">.</operator><name pos:start="371:44" pos:end="371:51">si_signo</name></name></expr></argument>, <argument pos:start="371:54" pos:end="371:58"><expr pos:start="371:54" pos:end="371:58"><operator pos:start="371:54" pos:end="371:54">&amp;</operator><name pos:start="371:55" pos:end="371:58">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="377:13" pos:end="377:18">break;</break>

        <case pos:start="379:9" pos:end="379:30">case <expr pos:start="379:14" pos:end="379:29"><name pos:start="379:14" pos:end="379:29">EXCP_KERNEL_TRAP</name></expr>:</case>

            <if_stmt pos:start="381:13" pos:end="383:25"><if pos:start="381:13" pos:end="383:25">if <condition pos:start="381:16" pos:end="381:36">(<expr pos:start="381:17" pos:end="381:35"><call pos:start="381:17" pos:end="381:35"><name pos:start="381:17" pos:end="381:30">do_kernel_trap</name><argument_list pos:start="381:31" pos:end="381:35">(<argument pos:start="381:32" pos:end="381:34"><expr pos:start="381:32" pos:end="381:34"><name pos:start="381:32" pos:end="381:34">env</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="383:15" pos:end="383:25"><block_content pos:start="383:15" pos:end="383:25">

              <goto pos:start="383:15" pos:end="383:25">goto <name pos:start="383:20" pos:end="383:24">error</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="385:13" pos:end="385:18">break;</break>

        <case pos:start="387:9" pos:end="387:24">case <expr pos:start="387:14" pos:end="387:23"><name pos:start="387:14" pos:end="387:23">EXCP_STREX</name></expr>:</case>

            <if_stmt pos:start="389:13" pos:end="395:13"><if pos:start="389:13" pos:end="395:13">if <condition pos:start="389:16" pos:end="389:30">(<expr pos:start="389:17" pos:end="389:29"><call pos:start="389:17" pos:end="389:29"><name pos:start="389:17" pos:end="389:24">do_strex</name><argument_list pos:start="389:25" pos:end="389:29">(<argument pos:start="389:26" pos:end="389:28"><expr pos:start="389:26" pos:end="389:28"><name pos:start="389:26" pos:end="389:28">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="389:32" pos:end="395:13">{<block_content pos:start="391:17" pos:end="393:29">

                <expr_stmt pos:start="391:17" pos:end="391:41"><expr pos:start="391:17" pos:end="391:40"><name pos:start="391:17" pos:end="391:20">addr</name> <operator pos:start="391:22" pos:end="391:22">=</operator> <name pos:start="391:24" pos:end="391:40"><name pos:start="391:24" pos:end="391:26">env</name><operator pos:start="391:27" pos:end="391:28">-&gt;</operator><name pos:start="391:29" pos:end="391:32">cp15</name><operator pos:start="391:33" pos:end="391:33">.</operator><name pos:start="391:34" pos:end="391:40">c6_data</name></name></expr>;</expr_stmt>

                <goto pos:start="393:17" pos:end="393:29">goto <name pos:start="393:22" pos:end="393:28">do_segv</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="397:13" pos:end="397:18">break;</break>

        <default pos:start="399:9" pos:end="399:16">default:</default>

        <label pos:start="401:9" pos:end="401:14"><name pos:start="401:9" pos:end="401:13">error</name>:</label>

            <expr_stmt pos:start="403:13" pos:end="405:28"><expr pos:start="403:13" pos:end="405:27"><call pos:start="403:13" pos:end="405:27"><name pos:start="403:13" pos:end="403:19">fprintf</name><argument_list pos:start="403:20" pos:end="405:27">(<argument pos:start="403:21" pos:end="403:26"><expr pos:start="403:21" pos:end="403:26"><name pos:start="403:21" pos:end="403:26">stderr</name></expr></argument>, <argument pos:start="403:29" pos:end="403:77"><expr pos:start="403:29" pos:end="403:77"><literal type="string" pos:start="403:29" pos:end="403:77">"qemu: unhandled CPU exception 0x%x - aborting\n"</literal></expr></argument>,

                    <argument pos:start="405:21" pos:end="405:26"><expr pos:start="405:21" pos:end="405:26"><name pos:start="405:21" pos:end="405:26">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="407:13" pos:end="407:52"><expr pos:start="407:13" pos:end="407:51"><call pos:start="407:13" pos:end="407:51"><name pos:start="407:13" pos:end="407:26">cpu_dump_state</name><argument_list pos:start="407:27" pos:end="407:51">(<argument pos:start="407:28" pos:end="407:30"><expr pos:start="407:28" pos:end="407:30"><name pos:start="407:28" pos:end="407:30">env</name></expr></argument>, <argument pos:start="407:33" pos:end="407:38"><expr pos:start="407:33" pos:end="407:38"><name pos:start="407:33" pos:end="407:38">stderr</name></expr></argument>, <argument pos:start="407:41" pos:end="407:47"><expr pos:start="407:41" pos:end="407:47"><name pos:start="407:41" pos:end="407:47">fprintf</name></expr></argument>, <argument pos:start="407:50" pos:end="407:50"><expr pos:start="407:50" pos:end="407:50"><literal type="number" pos:start="407:50" pos:end="407:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="409:13" pos:end="409:20"><expr pos:start="409:13" pos:end="409:19"><call pos:start="409:13" pos:end="409:19"><name pos:start="409:13" pos:end="409:17">abort</name><argument_list pos:start="409:18" pos:end="409:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="413:9" pos:end="413:37"><expr pos:start="413:9" pos:end="413:36"><call pos:start="413:9" pos:end="413:36"><name pos:start="413:9" pos:end="413:31">process_pending_signals</name><argument_list pos:start="413:32" pos:end="413:36">(<argument pos:start="413:33" pos:end="413:35"><expr pos:start="413:33" pos:end="413:35"><name pos:start="413:33" pos:end="413:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
