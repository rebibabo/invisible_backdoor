<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2443.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">iscsi_create</name><parameter_list pos:start="1:24" pos:end="1:75">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:44">filename</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:60"><decl pos:start="1:47" pos:end="1:60"><type pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:54">QemuOpts</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">opts</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:67">Error</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier><modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:74">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:22">total_size</name> <init pos:start="7:24" pos:end="7:26">= <expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">BlockDriverState</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">IscsiLun</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:22">iscsilun</name> <init pos:start="11:24" pos:end="11:29">= <expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">QDict</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:21">bs_options</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:6">bs</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:35"><name pos:start="17:10" pos:end="17:17">bdrv_new</name><argument_list pos:start="17:18" pos:end="17:35">(<argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><literal type="string" pos:start="17:19" pos:end="17:20">""</literal></expr></argument>, <argument pos:start="17:23" pos:end="17:34"><expr pos:start="17:23" pos:end="17:34"><operator pos:start="17:23" pos:end="17:23">&amp;</operator><name pos:start="17:24" pos:end="17:34">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:26">/* Read out options */</comment>

    <expr_stmt pos:start="23:5" pos:end="25:74"><expr pos:start="23:5" pos:end="25:73"><name pos:start="23:5" pos:end="23:14">total_size</name> <operator pos:start="23:16" pos:end="23:16">=</operator>

        <call pos:start="25:9" pos:end="25:54"><name pos:start="25:9" pos:end="25:29">qemu_opt_get_size_del</name><argument_list pos:start="25:30" pos:end="25:54">(<argument pos:start="25:31" pos:end="25:34"><expr pos:start="25:31" pos:end="25:34"><name pos:start="25:31" pos:end="25:34">opts</name></expr></argument>, <argument pos:start="25:37" pos:end="25:50"><expr pos:start="25:37" pos:end="25:50"><name pos:start="25:37" pos:end="25:50">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="25:53" pos:end="25:53"><expr pos:start="25:53" pos:end="25:53"><literal type="number" pos:start="25:53" pos:end="25:53">0</literal></expr></argument>)</argument_list></call> <operator pos:start="25:56" pos:end="25:56">/</operator> <name pos:start="25:58" pos:end="25:73">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:52"><expr pos:start="27:5" pos:end="27:51"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:6">bs</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:14">opaque</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:51"><name pos:start="27:18" pos:end="27:26">g_malloc0</name><argument_list pos:start="27:27" pos:end="27:51">(<argument pos:start="27:28" pos:end="27:50"><expr pos:start="27:28" pos:end="27:50"><sizeof pos:start="27:28" pos:end="27:50">sizeof<argument_list pos:start="27:34" pos:end="27:50">(<argument pos:start="27:35" pos:end="27:49"><expr pos:start="27:35" pos:end="27:49">struct <name pos:start="27:42" pos:end="27:49">IscsiLun</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:12">iscsilun</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:25"><name pos:start="29:16" pos:end="29:17">bs</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:25">opaque</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:14">bs_options</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:28"><name pos:start="33:18" pos:end="33:26">qdict_new</name><argument_list pos:start="33:27" pos:end="33:28">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:66"><expr pos:start="35:5" pos:end="35:65"><call pos:start="35:5" pos:end="35:65"><name pos:start="35:5" pos:end="35:13">qdict_put</name><argument_list pos:start="35:14" pos:end="35:65">(<argument pos:start="35:15" pos:end="35:24"><expr pos:start="35:15" pos:end="35:24"><name pos:start="35:15" pos:end="35:24">bs_options</name></expr></argument>, <argument pos:start="35:27" pos:end="35:36"><expr pos:start="35:27" pos:end="35:36"><literal type="string" pos:start="35:27" pos:end="35:36">"filename"</literal></expr></argument>, <argument pos:start="35:39" pos:end="35:64"><expr pos:start="35:39" pos:end="35:64"><call pos:start="35:39" pos:end="35:64"><name pos:start="35:39" pos:end="35:54">qstring_from_str</name><argument_list pos:start="35:55" pos:end="35:64">(<argument pos:start="35:56" pos:end="35:63"><expr pos:start="35:56" pos:end="35:63"><name pos:start="35:56" pos:end="35:63">filename</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:46"><expr pos:start="37:5" pos:end="37:45"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:45"><name pos:start="37:11" pos:end="37:20">iscsi_open</name><argument_list pos:start="37:21" pos:end="37:45">(<argument pos:start="37:22" pos:end="37:23"><expr pos:start="37:22" pos:end="37:23"><name pos:start="37:22" pos:end="37:23">bs</name></expr></argument>, <argument pos:start="37:26" pos:end="37:35"><expr pos:start="37:26" pos:end="37:35"><name pos:start="37:26" pos:end="37:35">bs_options</name></expr></argument>, <argument pos:start="37:38" pos:end="37:38"><expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">0</literal></expr></argument>, <argument pos:start="37:41" pos:end="37:44"><expr pos:start="37:41" pos:end="37:44"><name pos:start="37:41" pos:end="37:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><call pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:11">QDECREF</name><argument_list pos:start="39:12" pos:end="39:23">(<argument pos:start="39:13" pos:end="39:22"><expr pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:22">bs_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:17">(<expr pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:14">!=</operator> <literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>)</condition> <block pos:start="43:19" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:17">

        <goto pos:start="45:9" pos:end="45:17">goto <name pos:start="45:14" pos:end="45:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><call pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:28">iscsi_detach_aio_context</name><argument_list pos:start="49:29" pos:end="49:32">(<argument pos:start="49:30" pos:end="49:31"><expr pos:start="49:30" pos:end="49:31"><name pos:start="49:30" pos:end="49:31">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:36">(<expr pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:16">iscsilun</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:22">type</name></name> <operator pos:start="51:24" pos:end="51:25">!=</operator> <name pos:start="51:27" pos:end="51:35">TYPE_DISK</name></expr>)</condition> <block pos:start="51:38" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:17">

        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <operator pos:start="53:15" pos:end="53:15">-</operator><name pos:start="53:16" pos:end="53:21">ENODEV</name></expr>;</expr_stmt>

        <goto pos:start="55:9" pos:end="55:17">goto <name pos:start="55:14" pos:end="55:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:39">(<expr pos:start="59:9" pos:end="59:38"><name pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:10">bs</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:25">total_sectors</name></name> <operator pos:start="59:27" pos:end="59:27">&lt;</operator> <name pos:start="59:29" pos:end="59:38">total_size</name></expr>)</condition> <block pos:start="59:41" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:17">

        <expr_stmt pos:start="61:9" pos:end="61:22"><expr pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <operator pos:start="61:15" pos:end="61:15">-</operator><name pos:start="61:16" pos:end="61:21">ENOSPC</name></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:17">goto <name pos:start="63:14" pos:end="63:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:12"><expr pos:start="69:5" pos:end="69:11"><name pos:start="69:5" pos:end="69:7">ret</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <literal type="number" pos:start="69:11" pos:end="69:11">0</literal></expr>;</expr_stmt>

<label pos:start="71:1" pos:end="71:4"><name pos:start="71:1" pos:end="71:3">out</name>:</label>

    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:32">(<expr pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:16">iscsilun</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:23">iscsi</name></name> <operator pos:start="73:25" pos:end="73:26">!=</operator> <name pos:start="73:28" pos:end="73:31">NULL</name></expr>)</condition> <block pos:start="73:34" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:47">

        <expr_stmt pos:start="75:9" pos:end="75:47"><expr pos:start="75:9" pos:end="75:46"><call pos:start="75:9" pos:end="75:46"><name pos:start="75:9" pos:end="75:29">iscsi_destroy_context</name><argument_list pos:start="75:30" pos:end="75:46">(<argument pos:start="75:31" pos:end="75:45"><expr pos:start="75:31" pos:end="75:45"><name pos:start="75:31" pos:end="75:45"><name pos:start="75:31" pos:end="75:38">iscsilun</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:45">iscsi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:23"><expr pos:start="79:5" pos:end="79:22"><call pos:start="79:5" pos:end="79:22"><name pos:start="79:5" pos:end="79:10">g_free</name><argument_list pos:start="79:11" pos:end="79:22">(<argument pos:start="79:12" pos:end="79:21"><expr pos:start="79:12" pos:end="79:21"><name pos:start="79:12" pos:end="79:21"><name pos:start="79:12" pos:end="79:13">bs</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:21">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:22"><expr pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:14"><name pos:start="81:5" pos:end="81:6">bs</name><operator pos:start="81:7" pos:end="81:8">-&gt;</operator><name pos:start="81:9" pos:end="81:14">opaque</name></name> <operator pos:start="81:16" pos:end="81:16">=</operator> <name pos:start="81:18" pos:end="81:21">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:19"><expr pos:start="83:5" pos:end="83:18"><call pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:14">bdrv_unref</name><argument_list pos:start="83:15" pos:end="83:18">(<argument pos:start="83:16" pos:end="83:17"><expr pos:start="83:16" pos:end="83:17"><name pos:start="83:16" pos:end="83:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="85:5" pos:end="85:15">return <expr pos:start="85:12" pos:end="85:14"><name pos:start="85:12" pos:end="85:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
