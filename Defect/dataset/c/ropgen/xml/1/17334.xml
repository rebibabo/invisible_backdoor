<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17334.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">dv_read_header</name><parameter_list pos:start="1:26" pos:end="3:49">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:48"><decl pos:start="3:27" pos:end="3:48"><type pos:start="3:27" pos:end="3:48"><name pos:start="3:27" pos:end="3:44">AVFormatParameters</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:48">ap</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:13">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:18">state</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">RawDVContext</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">c</name> <init pos:start="9:21" pos:end="9:34">= <expr pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:34">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:5">c</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:15">dv_demux</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <call pos:start="13:19" pos:end="13:34"><name pos:start="13:19" pos:end="13:31">dv_init_demux</name><argument_list pos:start="13:32" pos:end="13:34">(<argument pos:start="13:33" pos:end="13:33"><expr pos:start="13:33" pos:end="13:33"><name pos:start="13:33" pos:end="13:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:21">(<expr pos:start="15:9" pos:end="15:20"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:20"><name pos:start="15:10" pos:end="15:10">c</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:20">dv_demux</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:9">state</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:20">get_be32</name><argument_list pos:start="21:21" pos:end="21:27">(<argument pos:start="21:22" pos:end="21:26"><expr pos:start="21:22" pos:end="21:26"><name pos:start="21:22" pos:end="21:26"><name pos:start="21:22" pos:end="21:22">s</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:26">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="23:5" pos:end="35:5">while <condition pos:start="23:11" pos:end="23:46">(<expr pos:start="23:12" pos:end="23:45"><operator pos:start="23:12" pos:end="23:12">(</operator><name pos:start="23:13" pos:end="23:17">state</name> <operator pos:start="23:19" pos:end="23:19">&amp;</operator> <literal type="number" pos:start="23:21" pos:end="23:30">0xffffff7f</literal><operator pos:start="23:31" pos:end="23:31">)</operator> <operator pos:start="23:33" pos:end="23:34">!=</operator> <literal type="number" pos:start="23:36" pos:end="23:45">0x1f07003f</literal></expr>)</condition> <block pos:start="23:48" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:47">

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:28">(<expr pos:start="25:13" pos:end="25:27"><call pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:20">url_feof</name><argument_list pos:start="25:21" pos:end="25:27">(<argument pos:start="25:22" pos:end="25:26"><expr pos:start="25:22" pos:end="25:26"><name pos:start="25:22" pos:end="25:26"><name pos:start="25:22" pos:end="25:22">s</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:26">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:30" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:22">

            <expr_stmt pos:start="27:13" pos:end="27:64"><expr pos:start="27:13" pos:end="27:63"><call pos:start="27:13" pos:end="27:63"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="27:63">(<argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">s</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:62"><expr pos:start="27:37" pos:end="27:62"><literal type="string" pos:start="27:37" pos:end="27:62">"Cannot find DV header.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:22">return <expr pos:start="29:20" pos:end="29:21"><operator pos:start="29:20" pos:end="29:20">-</operator><literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:47"><expr pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:13">state</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:22">state</name> <operator pos:start="33:24" pos:end="33:25">&lt;&lt;</operator> <literal type="number" pos:start="33:27" pos:end="33:27">8</literal><operator pos:start="33:28" pos:end="33:28">)</operator> <operator pos:start="33:30" pos:end="33:30">|</operator> <call pos:start="33:32" pos:end="33:46"><name pos:start="33:32" pos:end="33:39">get_byte</name><argument_list pos:start="33:40" pos:end="33:46">(<argument pos:start="33:41" pos:end="33:45"><expr pos:start="33:41" pos:end="33:45"><name pos:start="33:41" pos:end="33:45"><name pos:start="33:41" pos:end="33:41">s</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:45">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><call pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:11">AV_WB32</name><argument_list pos:start="37:12" pos:end="37:26">(<argument pos:start="37:13" pos:end="37:18"><expr pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:13">c</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:18">buf</name></name></expr></argument>, <argument pos:start="37:21" pos:end="37:25"><expr pos:start="37:21" pos:end="37:25"><name pos:start="37:21" pos:end="37:25">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="45:28"><if pos:start="41:5" pos:end="45:28">if <condition pos:start="41:8" pos:end="43:58">(<expr pos:start="41:9" pos:end="43:57"><call pos:start="41:9" pos:end="41:59"><name pos:start="41:9" pos:end="41:18">get_buffer</name><argument_list pos:start="41:19" pos:end="41:59">(<argument pos:start="41:20" pos:end="41:24"><expr pos:start="41:20" pos:end="41:24"><name pos:start="41:20" pos:end="41:24"><name pos:start="41:20" pos:end="41:20">s</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:24">pb</name></name></expr></argument>, <argument pos:start="41:27" pos:end="41:36"><expr pos:start="41:27" pos:end="41:36"><name pos:start="41:27" pos:end="41:32"><name pos:start="41:27" pos:end="41:27">c</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:32">buf</name></name> <operator pos:start="41:34" pos:end="41:34">+</operator> <literal type="number" pos:start="41:36" pos:end="41:36">4</literal></expr></argument>, <argument pos:start="41:39" pos:end="41:58"><expr pos:start="41:39" pos:end="41:58"><name pos:start="41:39" pos:end="41:54">DV_PROFILE_BYTES</name> <operator pos:start="41:56" pos:end="41:56">-</operator> <literal type="number" pos:start="41:58" pos:end="41:58">4</literal></expr></argument>)</argument_list></call> <operator pos:start="41:61" pos:end="41:62">&lt;=</operator> <literal type="number" pos:start="41:64" pos:end="41:64">0</literal> <operator pos:start="41:66" pos:end="41:67">||</operator>

        <call pos:start="43:9" pos:end="43:53"><name pos:start="43:9" pos:end="43:17">url_fseek</name><argument_list pos:start="43:18" pos:end="43:53">(<argument pos:start="43:19" pos:end="43:23"><expr pos:start="43:19" pos:end="43:23"><name pos:start="43:19" pos:end="43:23"><name pos:start="43:19" pos:end="43:19">s</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:23">pb</name></name></expr></argument>, <argument pos:start="43:26" pos:end="43:42"><expr pos:start="43:26" pos:end="43:42"><operator pos:start="43:26" pos:end="43:26">-</operator><name pos:start="43:27" pos:end="43:42">DV_PROFILE_BYTES</name></expr></argument>, <argument pos:start="43:45" pos:end="43:52"><expr pos:start="43:45" pos:end="43:52"><name pos:start="43:45" pos:end="43:52">SEEK_CUR</name></expr></argument>)</argument_list></call> <operator pos:start="43:55" pos:end="43:55">&lt;</operator> <literal type="number" pos:start="43:57" pos:end="43:57">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:28"><block_content pos:start="45:9" pos:end="45:28">

        <return pos:start="45:9" pos:end="45:28">return <expr pos:start="45:16" pos:end="45:27"><call pos:start="45:16" pos:end="45:27"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:27">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:48"><expr pos:start="49:5" pos:end="49:47"><name pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:5">c</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:15">dv_demux</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:20">sys</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <call pos:start="49:24" pos:end="49:47"><name pos:start="49:24" pos:end="49:39">dv_frame_profile</name><argument_list pos:start="49:40" pos:end="49:47">(<argument pos:start="49:41" pos:end="49:46"><expr pos:start="49:41" pos:end="49:46"><name pos:start="49:41" pos:end="49:46"><name pos:start="49:41" pos:end="49:41">c</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:46">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:26">(<expr pos:start="51:9" pos:end="51:25"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:25"><name pos:start="51:10" pos:end="51:10">c</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:20">dv_demux</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:25">sys</name></name></expr>)</condition> <block pos:start="51:28" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:18">

        <expr_stmt pos:start="53:9" pos:end="53:81"><expr pos:start="53:9" pos:end="53:80"><call pos:start="53:9" pos:end="53:80"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:80">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">s</name></expr></argument>, <argument pos:start="53:19" pos:end="53:30"><expr pos:start="53:19" pos:end="53:30"><name pos:start="53:19" pos:end="53:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:33" pos:end="53:79"><expr pos:start="53:33" pos:end="53:79"><literal type="string" pos:start="53:33" pos:end="53:79">"Can't determine profile of DV input stream.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:18">return <expr pos:start="55:16" pos:end="55:17"><operator pos:start="55:16" pos:end="55:16">-</operator><literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="63:60"><expr pos:start="61:5" pos:end="63:59"><name pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:15">bit_rate</name></name> <operator pos:start="61:17" pos:end="61:17">=</operator> <macro pos:start="61:19" pos:end="63:59"><name pos:start="61:19" pos:end="61:30">av_rescale_q</name><argument_list pos:start="61:31" pos:end="63:59">(<argument pos:start="61:32" pos:end="61:59">c-&gt;dv_demux-&gt;sys-&gt;frame_size</argument>, <argument pos:start="61:62" pos:end="61:75">(AVRational){<literal type="number" pos:start="61:75" pos:end="61:75">8</literal></argument>,<argument pos:start="61:77" pos:end="61:78"><literal type="number" pos:start="61:77" pos:end="61:77">1</literal>}</argument>,

                               <argument pos:start="63:32" pos:end="63:58">c-&gt;dv_demux-&gt;sys-&gt;time_base</argument>)</argument_list></macro></expr>;</expr_stmt>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
