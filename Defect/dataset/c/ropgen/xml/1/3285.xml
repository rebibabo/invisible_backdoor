<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3285.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">vfio_msi_enable</name><parameter_list pos:start="1:28" pos:end="1:48">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:41">VFIOPCIDevice</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:65">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><call pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:27">vfio_disable_interrupts</name><argument_list pos:start="9:28" pos:end="9:33">(<argument pos:start="9:29" pos:end="9:32"><expr pos:start="9:29" pos:end="9:32"><name pos:start="9:29" pos:end="9:32">vdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:61"><expr pos:start="13:5" pos:end="13:60"><name pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:8">vdev</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:20">nr_vectors</name></name> <operator pos:start="13:22" pos:end="13:22">=</operator> <call pos:start="13:24" pos:end="13:60"><name pos:start="13:24" pos:end="13:47">msi_nr_vectors_allocated</name><argument_list pos:start="13:48" pos:end="13:60">(<argument pos:start="13:49" pos:end="13:59"><expr pos:start="13:49" pos:end="13:59"><operator pos:start="13:49" pos:end="13:49">&amp;</operator><name pos:start="13:50" pos:end="13:59"><name pos:start="13:50" pos:end="13:53">vdev</name><operator pos:start="13:54" pos:end="13:55">-&gt;</operator><name pos:start="13:56" pos:end="13:59">pdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="15:1" pos:end="15:6"><name pos:start="15:1" pos:end="15:5">retry</name>:</label>

    <expr_stmt pos:start="17:5" pos:end="17:76"><expr pos:start="17:5" pos:end="17:75"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:8">vdev</name><operator pos:start="17:9" pos:end="17:10">-&gt;</operator><name pos:start="17:11" pos:end="17:21">msi_vectors</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <call pos:start="17:25" pos:end="17:75"><name pos:start="17:25" pos:end="17:33">g_malloc0</name><argument_list pos:start="17:34" pos:end="17:75">(<argument pos:start="17:35" pos:end="17:74"><expr pos:start="17:35" pos:end="17:74"><name pos:start="17:35" pos:end="17:50"><name pos:start="17:35" pos:end="17:38">vdev</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:50">nr_vectors</name></name> <operator pos:start="17:52" pos:end="17:52">*</operator> <sizeof pos:start="17:54" pos:end="17:74">sizeof<argument_list pos:start="17:60" pos:end="17:74">(<argument pos:start="17:61" pos:end="17:73"><expr pos:start="17:61" pos:end="17:73"><name pos:start="17:61" pos:end="17:73">VFIOMSIVector</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="61:5">for <control pos:start="21:9" pos:end="21:42">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:37"><expr pos:start="21:17" pos:end="21:36"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:36"><name pos:start="21:21" pos:end="21:24">vdev</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:36">nr_vectors</name></name></expr>;</condition> <incr pos:start="21:39" pos:end="21:41"><expr pos:start="21:39" pos:end="21:41"><name pos:start="21:39" pos:end="21:39">i</name><operator pos:start="21:40" pos:end="21:41">++</operator></expr></incr>)</control> <block pos:start="21:44" pos:end="61:5">{<block_content pos:start="23:9" pos:end="59:57">

        <decl_stmt pos:start="23:9" pos:end="23:54"><decl pos:start="23:9" pos:end="23:53"><type pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:21">VFIOMSIVector</name> <modifier pos:start="23:23" pos:end="23:23">*</modifier></type><name pos:start="23:24" pos:end="23:29">vector</name> <init pos:start="23:31" pos:end="23:53">= <expr pos:start="23:33" pos:end="23:53"><operator pos:start="23:33" pos:end="23:33">&amp;</operator><name pos:start="23:34" pos:end="23:53"><name pos:start="23:34" pos:end="23:37">vdev</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:50">msi_vectors</name><index pos:start="23:51" pos:end="23:53">[<expr pos:start="23:52" pos:end="23:52"><name pos:start="23:52" pos:end="23:52">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:57"><decl pos:start="25:9" pos:end="25:56"><type pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:18">MSIMessage</name></type> <name pos:start="25:20" pos:end="25:22">msg</name> <init pos:start="25:24" pos:end="25:56">= <expr pos:start="25:26" pos:end="25:56"><call pos:start="25:26" pos:end="25:56"><name pos:start="25:26" pos:end="25:40">msi_get_message</name><argument_list pos:start="25:41" pos:end="25:56">(<argument pos:start="25:42" pos:end="25:52"><expr pos:start="25:42" pos:end="25:52"><operator pos:start="25:42" pos:end="25:42">&amp;</operator><name pos:start="25:43" pos:end="25:52"><name pos:start="25:43" pos:end="25:46">vdev</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:52">pdev</name></name></expr></argument>, <argument pos:start="25:55" pos:end="25:55"><expr pos:start="25:55" pos:end="25:55"><name pos:start="25:55" pos:end="25:55">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:14">vector</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:20">vdev</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:27">vdev</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:26"><expr pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:14">vector</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:20">virq</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <operator pos:start="31:24" pos:end="31:24">-</operator><literal type="number" pos:start="31:25" pos:end="31:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:27"><expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:14">vector</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:19">use</name></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:26">true</name></expr>;</expr_stmt>



        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:55">(<expr pos:start="37:13" pos:end="37:54"><call pos:start="37:13" pos:end="37:54"><name pos:start="37:13" pos:end="37:31">event_notifier_init</name><argument_list pos:start="37:32" pos:end="37:54">(<argument pos:start="37:33" pos:end="37:50"><expr pos:start="37:33" pos:end="37:50"><operator pos:start="37:33" pos:end="37:33">&amp;</operator><name pos:start="37:34" pos:end="37:50"><name pos:start="37:34" pos:end="37:39">vector</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:50">interrupt</name></name></expr></argument>, <argument pos:start="37:53" pos:end="37:53"><expr pos:start="37:53" pos:end="37:53"><literal type="number" pos:start="37:53" pos:end="37:53">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:57" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:68">

            <expr_stmt pos:start="39:13" pos:end="39:68"><expr pos:start="39:13" pos:end="39:67"><call pos:start="39:13" pos:end="39:67"><name pos:start="39:13" pos:end="39:24">error_report</name><argument_list pos:start="39:25" pos:end="39:67">(<argument pos:start="39:26" pos:end="39:66"><expr pos:start="39:26" pos:end="39:66"><literal type="string" pos:start="39:26" pos:end="39:66">"vfio: Error: event_notifier_init failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="45:9" pos:end="47:62"><expr pos:start="45:9" pos:end="47:61"><call pos:start="45:9" pos:end="47:61"><name pos:start="45:9" pos:end="45:27">qemu_set_fd_handler</name><argument_list pos:start="45:28" pos:end="47:61">(<argument pos:start="45:29" pos:end="45:69"><expr pos:start="45:29" pos:end="45:69"><call pos:start="45:29" pos:end="45:69"><name pos:start="45:29" pos:end="45:49">event_notifier_get_fd</name><argument_list pos:start="45:50" pos:end="45:69">(<argument pos:start="45:51" pos:end="45:68"><expr pos:start="45:51" pos:end="45:68"><operator pos:start="45:51" pos:end="45:51">&amp;</operator><name pos:start="45:52" pos:end="45:68"><name pos:start="45:52" pos:end="45:57">vector</name><operator pos:start="45:58" pos:end="45:59">-&gt;</operator><name pos:start="45:60" pos:end="45:68">interrupt</name></name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="47:29" pos:end="47:46"><expr pos:start="47:29" pos:end="47:46"><name pos:start="47:29" pos:end="47:46">vfio_msi_interrupt</name></expr></argument>, <argument pos:start="47:49" pos:end="47:52"><expr pos:start="47:49" pos:end="47:52"><name pos:start="47:49" pos:end="47:52">NULL</name></expr></argument>, <argument pos:start="47:55" pos:end="47:60"><expr pos:start="47:55" pos:end="47:60"><name pos:start="47:55" pos:end="47:60">vector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="51:9" pos:end="57:11">/*

         * Attempt to enable route through KVM irqchip,

         * default to userspace handling if unavailable.

         */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:57"><expr pos:start="59:9" pos:end="59:56"><call pos:start="59:9" pos:end="59:56"><name pos:start="59:9" pos:end="59:29">vfio_add_kvm_msi_virq</name><argument_list pos:start="59:30" pos:end="59:56">(<argument pos:start="59:31" pos:end="59:34"><expr pos:start="59:31" pos:end="59:34"><name pos:start="59:31" pos:end="59:34">vdev</name></expr></argument>, <argument pos:start="59:37" pos:end="59:42"><expr pos:start="59:37" pos:end="59:42"><name pos:start="59:37" pos:end="59:42">vector</name></expr></argument>, <argument pos:start="59:45" pos:end="59:48"><expr pos:start="59:45" pos:end="59:48"><operator pos:start="59:45" pos:end="59:45">&amp;</operator><name pos:start="59:46" pos:end="59:48">msg</name></expr></argument>, <argument pos:start="59:51" pos:end="59:55"><expr pos:start="59:51" pos:end="59:55"><name pos:start="59:51" pos:end="59:55">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="65:5" pos:end="65:57">/* Set interrupt type prior to possible interrupts */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:35"><expr pos:start="67:5" pos:end="67:34"><name pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:8">vdev</name><operator pos:start="67:9" pos:end="67:10">-&gt;</operator><name pos:start="67:11" pos:end="67:19">interrupt</name></name> <operator pos:start="67:21" pos:end="67:21">=</operator> <name pos:start="67:23" pos:end="67:34">VFIO_INT_MSI</name></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:43"><expr pos:start="71:5" pos:end="71:42"><name pos:start="71:5" pos:end="71:7">ret</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="71:42"><name pos:start="71:11" pos:end="71:29">vfio_enable_vectors</name><argument_list pos:start="71:30" pos:end="71:42">(<argument pos:start="71:31" pos:end="71:34"><expr pos:start="71:31" pos:end="71:34"><name pos:start="71:31" pos:end="71:34">vdev</name></expr></argument>, <argument pos:start="71:37" pos:end="71:41"><expr pos:start="71:37" pos:end="71:41"><name pos:start="71:37" pos:end="71:41">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="143:5"><if pos:start="73:5" pos:end="143:5">if <condition pos:start="73:8" pos:end="73:12">(<expr pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">ret</name></expr>)</condition> <block pos:start="73:14" pos:end="143:5">{<block_content pos:start="75:9" pos:end="141:15">

        <if_stmt pos:start="75:9" pos:end="85:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:20">(<expr pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">&lt;</operator> <literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr>)</condition> <block pos:start="75:22" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:69">

            <expr_stmt pos:start="77:13" pos:end="77:69"><expr pos:start="77:13" pos:end="77:68"><call pos:start="77:13" pos:end="77:68"><name pos:start="77:13" pos:end="77:24">error_report</name><argument_list pos:start="77:25" pos:end="77:68">(<argument pos:start="77:26" pos:end="77:67"><expr pos:start="77:26" pos:end="77:67"><literal type="string" pos:start="77:26" pos:end="77:67">"vfio: Error: Failed to setup MSI fds: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="79:11" pos:end="85:9">else if <condition pos:start="79:19" pos:end="79:43">(<expr pos:start="79:20" pos:end="79:42"><name pos:start="79:20" pos:end="79:22">ret</name> <operator pos:start="79:24" pos:end="79:25">!=</operator> <name pos:start="79:27" pos:end="79:42"><name pos:start="79:27" pos:end="79:30">vdev</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:42">nr_vectors</name></name></expr>)</condition> <block pos:start="79:45" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:78">

            <expr_stmt pos:start="81:13" pos:end="83:78"><expr pos:start="81:13" pos:end="83:77"><call pos:start="81:13" pos:end="83:77"><name pos:start="81:13" pos:end="81:24">error_report</name><argument_list pos:start="81:25" pos:end="83:77">(<argument pos:start="81:26" pos:end="83:53"><expr pos:start="81:26" pos:end="83:53"><literal type="string" pos:start="81:26" pos:end="81:60">"vfio: Error: Failed to enable %d "</literal>

                         <literal type="string" pos:start="83:26" pos:end="83:53">"MSI vectors, retry with %d"</literal></expr></argument>, <argument pos:start="83:56" pos:end="83:71"><expr pos:start="83:56" pos:end="83:71"><name pos:start="83:56" pos:end="83:71"><name pos:start="83:56" pos:end="83:59">vdev</name><operator pos:start="83:60" pos:end="83:61">-&gt;</operator><name pos:start="83:62" pos:end="83:71">nr_vectors</name></name></expr></argument>, <argument pos:start="83:74" pos:end="83:76"><expr pos:start="83:74" pos:end="83:76"><name pos:start="83:74" pos:end="83:76">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="89:9" pos:end="105:9">for <control pos:start="89:13" pos:end="89:46">(<init pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">i</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">0</literal></expr>;</init> <condition pos:start="89:21" pos:end="89:41"><expr pos:start="89:21" pos:end="89:40"><name pos:start="89:21" pos:end="89:21">i</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <name pos:start="89:25" pos:end="89:40"><name pos:start="89:25" pos:end="89:28">vdev</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:40">nr_vectors</name></name></expr>;</condition> <incr pos:start="89:43" pos:end="89:45"><expr pos:start="89:43" pos:end="89:45"><name pos:start="89:43" pos:end="89:43">i</name><operator pos:start="89:44" pos:end="89:45">++</operator></expr></incr>)</control> <block pos:start="89:48" pos:end="105:9">{<block_content pos:start="91:13" pos:end="103:55">

            <decl_stmt pos:start="91:13" pos:end="91:58"><decl pos:start="91:13" pos:end="91:57"><type pos:start="91:13" pos:end="91:27"><name pos:start="91:13" pos:end="91:25">VFIOMSIVector</name> <modifier pos:start="91:27" pos:end="91:27">*</modifier></type><name pos:start="91:28" pos:end="91:33">vector</name> <init pos:start="91:35" pos:end="91:57">= <expr pos:start="91:37" pos:end="91:57"><operator pos:start="91:37" pos:end="91:37">&amp;</operator><name pos:start="91:38" pos:end="91:57"><name pos:start="91:38" pos:end="91:41">vdev</name><operator pos:start="91:42" pos:end="91:43">-&gt;</operator><name pos:start="91:44" pos:end="91:54">msi_vectors</name><index pos:start="91:55" pos:end="91:57">[<expr pos:start="91:56" pos:end="91:56"><name pos:start="91:56" pos:end="91:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="93:13" pos:end="97:13"><if pos:start="93:13" pos:end="97:13">if <condition pos:start="93:16" pos:end="93:34">(<expr pos:start="93:17" pos:end="93:33"><name pos:start="93:17" pos:end="93:28"><name pos:start="93:17" pos:end="93:22">vector</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:28">virq</name></name> <operator pos:start="93:30" pos:end="93:31">&gt;=</operator> <literal type="number" pos:start="93:33" pos:end="93:33">0</literal></expr>)</condition> <block pos:start="93:36" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:49">

                <expr_stmt pos:start="95:17" pos:end="95:49"><expr pos:start="95:17" pos:end="95:48"><call pos:start="95:17" pos:end="95:48"><name pos:start="95:17" pos:end="95:40">vfio_remove_kvm_msi_virq</name><argument_list pos:start="95:41" pos:end="95:48">(<argument pos:start="95:42" pos:end="95:47"><expr pos:start="95:42" pos:end="95:47"><name pos:start="95:42" pos:end="95:47">vector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="99:13" pos:end="101:50"><expr pos:start="99:13" pos:end="101:49"><call pos:start="99:13" pos:end="101:49"><name pos:start="99:13" pos:end="99:31">qemu_set_fd_handler</name><argument_list pos:start="99:32" pos:end="101:49">(<argument pos:start="99:33" pos:end="99:73"><expr pos:start="99:33" pos:end="99:73"><call pos:start="99:33" pos:end="99:73"><name pos:start="99:33" pos:end="99:53">event_notifier_get_fd</name><argument_list pos:start="99:54" pos:end="99:73">(<argument pos:start="99:55" pos:end="99:72"><expr pos:start="99:55" pos:end="99:72"><operator pos:start="99:55" pos:end="99:55">&amp;</operator><name pos:start="99:56" pos:end="99:72"><name pos:start="99:56" pos:end="99:61">vector</name><operator pos:start="99:62" pos:end="99:63">-&gt;</operator><name pos:start="99:64" pos:end="99:72">interrupt</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="101:33" pos:end="101:36"><expr pos:start="101:33" pos:end="101:36"><name pos:start="101:33" pos:end="101:36">NULL</name></expr></argument>, <argument pos:start="101:39" pos:end="101:42"><expr pos:start="101:39" pos:end="101:42"><name pos:start="101:39" pos:end="101:42">NULL</name></expr></argument>, <argument pos:start="101:45" pos:end="101:48"><expr pos:start="101:45" pos:end="101:48"><name pos:start="101:45" pos:end="101:48">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:55"><expr pos:start="103:13" pos:end="103:54"><call pos:start="103:13" pos:end="103:54"><name pos:start="103:13" pos:end="103:34">event_notifier_cleanup</name><argument_list pos:start="103:35" pos:end="103:54">(<argument pos:start="103:36" pos:end="103:53"><expr pos:start="103:36" pos:end="103:53"><operator pos:start="103:36" pos:end="103:36">&amp;</operator><name pos:start="103:37" pos:end="103:53"><name pos:start="103:37" pos:end="103:42">vector</name><operator pos:start="103:43" pos:end="103:44">-&gt;</operator><name pos:start="103:45" pos:end="103:53">interrupt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="109:9" pos:end="109:34"><expr pos:start="109:9" pos:end="109:33"><call pos:start="109:9" pos:end="109:33"><name pos:start="109:9" pos:end="109:14">g_free</name><argument_list pos:start="109:15" pos:end="109:33">(<argument pos:start="109:16" pos:end="109:32"><expr pos:start="109:16" pos:end="109:32"><name pos:start="109:16" pos:end="109:32"><name pos:start="109:16" pos:end="109:19">vdev</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:32">msi_vectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="113:9" pos:end="119:9"><if pos:start="113:9" pos:end="119:9">if <condition pos:start="113:12" pos:end="113:47">(<expr pos:start="113:13" pos:end="113:46"><name pos:start="113:13" pos:end="113:15">ret</name> <operator pos:start="113:17" pos:end="113:17">&gt;</operator> <literal type="number" pos:start="113:19" pos:end="113:19">0</literal> <operator pos:start="113:21" pos:end="113:22">&amp;&amp;</operator> <name pos:start="113:24" pos:end="113:26">ret</name> <operator pos:start="113:28" pos:end="113:29">!=</operator> <name pos:start="113:31" pos:end="113:46"><name pos:start="113:31" pos:end="113:34">vdev</name><operator pos:start="113:35" pos:end="113:36">-&gt;</operator><name pos:start="113:37" pos:end="113:46">nr_vectors</name></name></expr>)</condition> <block pos:start="113:49" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:23">

            <expr_stmt pos:start="115:13" pos:end="115:35"><expr pos:start="115:13" pos:end="115:34"><name pos:start="115:13" pos:end="115:28"><name pos:start="115:13" pos:end="115:16">vdev</name><operator pos:start="115:17" pos:end="115:18">-&gt;</operator><name pos:start="115:19" pos:end="115:28">nr_vectors</name></name> <operator pos:start="115:30" pos:end="115:30">=</operator> <name pos:start="115:32" pos:end="115:34">ret</name></expr>;</expr_stmt>

            <goto pos:start="117:13" pos:end="117:23">goto <name pos:start="117:18" pos:end="117:22">retry</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:29"><expr pos:start="121:9" pos:end="121:28"><name pos:start="121:9" pos:end="121:24"><name pos:start="121:9" pos:end="121:12">vdev</name><operator pos:start="121:13" pos:end="121:14">-&gt;</operator><name pos:start="121:15" pos:end="121:24">nr_vectors</name></name> <operator pos:start="121:26" pos:end="121:26">=</operator> <literal type="number" pos:start="121:28" pos:end="121:28">0</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="125:9" pos:end="133:11">/*

         * Failing to setup MSI doesn't really fall within any specification.

         * Let's try leaving interrupts disabled and hope the guest figures

         * out to fall back to INTx for this device.

         */</comment>

        <expr_stmt pos:start="135:9" pos:end="135:58"><expr pos:start="135:9" pos:end="135:57"><call pos:start="135:9" pos:end="135:57"><name pos:start="135:9" pos:end="135:20">error_report</name><argument_list pos:start="135:21" pos:end="135:57">(<argument pos:start="135:22" pos:end="135:56"><expr pos:start="135:22" pos:end="135:56"><literal type="string" pos:start="135:22" pos:end="135:56">"vfio: Error: Failed to enable MSI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:40"><expr pos:start="137:9" pos:end="137:39"><name pos:start="137:9" pos:end="137:23"><name pos:start="137:9" pos:end="137:12">vdev</name><operator pos:start="137:13" pos:end="137:14">-&gt;</operator><name pos:start="137:15" pos:end="137:23">interrupt</name></name> <operator pos:start="137:25" pos:end="137:25">=</operator> <name pos:start="137:27" pos:end="137:39">VFIO_INT_NONE</name></expr>;</expr_stmt>



        <return pos:start="141:9" pos:end="141:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:65"><expr pos:start="147:5" pos:end="147:64"><call pos:start="147:5" pos:end="147:64"><name pos:start="147:5" pos:end="147:25">trace_vfio_msi_enable</name><argument_list pos:start="147:26" pos:end="147:64">(<argument pos:start="147:27" pos:end="147:45"><expr pos:start="147:27" pos:end="147:45"><name pos:start="147:27" pos:end="147:45"><name pos:start="147:27" pos:end="147:30">vdev</name><operator pos:start="147:31" pos:end="147:32">-&gt;</operator><name pos:start="147:33" pos:end="147:40">vbasedev</name><operator pos:start="147:41" pos:end="147:41">.</operator><name pos:start="147:42" pos:end="147:45">name</name></name></expr></argument>, <argument pos:start="147:48" pos:end="147:63"><expr pos:start="147:48" pos:end="147:63"><name pos:start="147:48" pos:end="147:63"><name pos:start="147:48" pos:end="147:51">vdev</name><operator pos:start="147:52" pos:end="147:53">-&gt;</operator><name pos:start="147:54" pos:end="147:63">nr_vectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
