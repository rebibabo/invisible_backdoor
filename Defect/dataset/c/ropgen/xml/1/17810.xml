<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17810.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">DisplayType</name></type> <name pos:start="1:20" pos:end="1:33">select_display</name><parameter_list pos:start="1:34" pos:end="1:48">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:46"><specifier pos:start="1:35" pos:end="1:39">const</specifier> <name pos:start="1:41" pos:end="1:44">char</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="183:1">{<block_content pos:start="5:5" pos:end="181:19">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15">DisplayType</name></type> <name pos:start="7:17" pos:end="7:23">display</name> <init pos:start="7:25" pos:end="7:36">= <expr pos:start="7:27" pos:end="7:36"><name pos:start="7:27" pos:end="7:36">DT_DEFAULT</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="177:5"><if pos:start="11:5" pos:end="113:5">if <condition pos:start="11:8" pos:end="11:34">(<expr pos:start="11:9" pos:end="11:33"><call pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:16">strstart</name><argument_list pos:start="11:17" pos:end="11:33">(<argument pos:start="11:18" pos:end="11:18"><expr pos:start="11:18" pos:end="11:18"><name pos:start="11:18" pos:end="11:18">p</name></expr></argument>, <argument pos:start="11:21" pos:end="11:25"><expr pos:start="11:21" pos:end="11:25"><literal type="string" pos:start="11:21" pos:end="11:25">"sdl"</literal></expr></argument>, <argument pos:start="11:28" pos:end="11:32"><expr pos:start="11:28" pos:end="11:32"><operator pos:start="11:28" pos:end="11:28">&amp;</operator><name pos:start="11:29" pos:end="11:32">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:36" pos:end="113:5">{<block_content pos:start="15:9" pos:end="112:0">

<cpp:ifdef pos:start="13:1" pos:end="13:17">#<cpp:directive pos:start="13:2" pos:end="13:6">ifdef</cpp:directive> <name pos:start="13:8" pos:end="13:17">CONFIG_SDL</name></cpp:ifdef>

        <expr_stmt pos:start="15:9" pos:end="15:25"><expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:15">display</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:24">DT_SDL</name></expr>;</expr_stmt>

        <while pos:start="17:9" pos:end="106:0">while <condition pos:start="17:15" pos:end="17:21">(<expr pos:start="17:16" pos:end="17:20"><operator pos:start="17:16" pos:end="17:16">*</operator><name pos:start="17:17" pos:end="17:20">opts</name></expr>)</condition> <block pos:start="17:23" pos:end="106:0">{<block_content pos:start="19:13" pos:end="101:27">

            <decl_stmt pos:start="19:13" pos:end="19:32"><decl pos:start="19:13" pos:end="19:31"><type pos:start="19:13" pos:end="19:24"><specifier pos:start="19:13" pos:end="19:17">const</specifier> <name pos:start="19:19" pos:end="19:22">char</name> <modifier pos:start="19:24" pos:end="19:24">*</modifier></type><name pos:start="19:25" pos:end="19:31">nextopt</name></decl>;</decl_stmt>



            <if_stmt pos:start="23:13" pos:end="99:13"><if pos:start="23:13" pos:end="41:13">if <condition pos:start="23:16" pos:end="23:52">(<expr pos:start="23:17" pos:end="23:51"><call pos:start="23:17" pos:end="23:51"><name pos:start="23:17" pos:end="23:24">strstart</name><argument_list pos:start="23:25" pos:end="23:51">(<argument pos:start="23:26" pos:end="23:29"><expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">opts</name></expr></argument>, <argument pos:start="23:32" pos:end="23:40"><expr pos:start="23:32" pos:end="23:40"><literal type="string" pos:start="23:32" pos:end="23:40">",frame="</literal></expr></argument>, <argument pos:start="23:43" pos:end="23:50"><expr pos:start="23:43" pos:end="23:50"><operator pos:start="23:43" pos:end="23:43">&amp;</operator><name pos:start="23:44" pos:end="23:50">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:54" pos:end="41:13">{<block_content pos:start="25:17" pos:end="39:17">

                <expr_stmt pos:start="25:17" pos:end="25:31"><expr pos:start="25:17" pos:end="25:30"><name pos:start="25:17" pos:end="25:20">opts</name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:30">nextopt</name></expr>;</expr_stmt>

                <if_stmt pos:start="27:17" pos:end="39:17"><if pos:start="27:17" pos:end="31:17">if <condition pos:start="27:20" pos:end="27:51">(<expr pos:start="27:21" pos:end="27:50"><call pos:start="27:21" pos:end="27:50"><name pos:start="27:21" pos:end="27:28">strstart</name><argument_list pos:start="27:29" pos:end="27:50">(<argument pos:start="27:30" pos:end="27:33"><expr pos:start="27:30" pos:end="27:33"><name pos:start="27:30" pos:end="27:33">opts</name></expr></argument>, <argument pos:start="27:36" pos:end="27:39"><expr pos:start="27:36" pos:end="27:39"><literal type="string" pos:start="27:36" pos:end="27:39">"on"</literal></expr></argument>, <argument pos:start="27:42" pos:end="27:49"><expr pos:start="27:42" pos:end="27:49"><operator pos:start="27:42" pos:end="27:42">&amp;</operator><name pos:start="27:43" pos:end="27:49">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:53" pos:end="31:17">{<block_content pos:start="29:21" pos:end="29:33">

                    <expr_stmt pos:start="29:21" pos:end="29:33"><expr pos:start="29:21" pos:end="29:32"><name pos:start="29:21" pos:end="29:28">no_frame</name> <operator pos:start="29:30" pos:end="29:30">=</operator> <literal type="number" pos:start="29:32" pos:end="29:32">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="31:19" pos:end="35:17">else if <condition pos:start="31:27" pos:end="31:59">(<expr pos:start="31:28" pos:end="31:58"><call pos:start="31:28" pos:end="31:58"><name pos:start="31:28" pos:end="31:35">strstart</name><argument_list pos:start="31:36" pos:end="31:58">(<argument pos:start="31:37" pos:end="31:40"><expr pos:start="31:37" pos:end="31:40"><name pos:start="31:37" pos:end="31:40">opts</name></expr></argument>, <argument pos:start="31:43" pos:end="31:47"><expr pos:start="31:43" pos:end="31:47"><literal type="string" pos:start="31:43" pos:end="31:47">"off"</literal></expr></argument>, <argument pos:start="31:50" pos:end="31:57"><expr pos:start="31:50" pos:end="31:57"><operator pos:start="31:50" pos:end="31:50">&amp;</operator><name pos:start="31:51" pos:end="31:57">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:61" pos:end="35:17">{<block_content pos:start="33:21" pos:end="33:33">

                    <expr_stmt pos:start="33:21" pos:end="33:33"><expr pos:start="33:21" pos:end="33:32"><name pos:start="33:21" pos:end="33:28">no_frame</name> <operator pos:start="33:30" pos:end="33:30">=</operator> <literal type="number" pos:start="33:32" pos:end="33:32">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="35:19" pos:end="39:17">else <block pos:start="35:24" pos:end="39:17">{<block_content pos:start="37:21" pos:end="37:41">

                    <goto pos:start="37:21" pos:end="37:41">goto <name pos:start="37:26" pos:end="37:40">invalid_display</name>;</goto>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="41:15" pos:end="59:13">else if <condition pos:start="41:23" pos:end="41:62">(<expr pos:start="41:24" pos:end="41:61"><call pos:start="41:24" pos:end="41:61"><name pos:start="41:24" pos:end="41:31">strstart</name><argument_list pos:start="41:32" pos:end="41:61">(<argument pos:start="41:33" pos:end="41:36"><expr pos:start="41:33" pos:end="41:36"><name pos:start="41:33" pos:end="41:36">opts</name></expr></argument>, <argument pos:start="41:39" pos:end="41:50"><expr pos:start="41:39" pos:end="41:50"><literal type="string" pos:start="41:39" pos:end="41:50">",alt_grab="</literal></expr></argument>, <argument pos:start="41:53" pos:end="41:60"><expr pos:start="41:53" pos:end="41:60"><operator pos:start="41:53" pos:end="41:53">&amp;</operator><name pos:start="41:54" pos:end="41:60">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:64" pos:end="59:13">{<block_content pos:start="43:17" pos:end="57:17">

                <expr_stmt pos:start="43:17" pos:end="43:31"><expr pos:start="43:17" pos:end="43:30"><name pos:start="43:17" pos:end="43:20">opts</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:30">nextopt</name></expr>;</expr_stmt>

                <if_stmt pos:start="45:17" pos:end="57:17"><if pos:start="45:17" pos:end="49:17">if <condition pos:start="45:20" pos:end="45:51">(<expr pos:start="45:21" pos:end="45:50"><call pos:start="45:21" pos:end="45:50"><name pos:start="45:21" pos:end="45:28">strstart</name><argument_list pos:start="45:29" pos:end="45:50">(<argument pos:start="45:30" pos:end="45:33"><expr pos:start="45:30" pos:end="45:33"><name pos:start="45:30" pos:end="45:33">opts</name></expr></argument>, <argument pos:start="45:36" pos:end="45:39"><expr pos:start="45:36" pos:end="45:39"><literal type="string" pos:start="45:36" pos:end="45:39">"on"</literal></expr></argument>, <argument pos:start="45:42" pos:end="45:49"><expr pos:start="45:42" pos:end="45:49"><operator pos:start="45:42" pos:end="45:42">&amp;</operator><name pos:start="45:43" pos:end="45:49">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:53" pos:end="49:17">{<block_content pos:start="47:21" pos:end="47:33">

                    <expr_stmt pos:start="47:21" pos:end="47:33"><expr pos:start="47:21" pos:end="47:32"><name pos:start="47:21" pos:end="47:28">alt_grab</name> <operator pos:start="47:30" pos:end="47:30">=</operator> <literal type="number" pos:start="47:32" pos:end="47:32">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="49:19" pos:end="53:17">else if <condition pos:start="49:27" pos:end="49:59">(<expr pos:start="49:28" pos:end="49:58"><call pos:start="49:28" pos:end="49:58"><name pos:start="49:28" pos:end="49:35">strstart</name><argument_list pos:start="49:36" pos:end="49:58">(<argument pos:start="49:37" pos:end="49:40"><expr pos:start="49:37" pos:end="49:40"><name pos:start="49:37" pos:end="49:40">opts</name></expr></argument>, <argument pos:start="49:43" pos:end="49:47"><expr pos:start="49:43" pos:end="49:47"><literal type="string" pos:start="49:43" pos:end="49:47">"off"</literal></expr></argument>, <argument pos:start="49:50" pos:end="49:57"><expr pos:start="49:50" pos:end="49:57"><operator pos:start="49:50" pos:end="49:50">&amp;</operator><name pos:start="49:51" pos:end="49:57">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:61" pos:end="53:17">{<block_content pos:start="51:21" pos:end="51:33">

                    <expr_stmt pos:start="51:21" pos:end="51:33"><expr pos:start="51:21" pos:end="51:32"><name pos:start="51:21" pos:end="51:28">alt_grab</name> <operator pos:start="51:30" pos:end="51:30">=</operator> <literal type="number" pos:start="51:32" pos:end="51:32">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="53:19" pos:end="57:17">else <block pos:start="53:24" pos:end="57:17">{<block_content pos:start="55:21" pos:end="55:41">

                    <goto pos:start="55:21" pos:end="55:41">goto <name pos:start="55:26" pos:end="55:40">invalid_display</name>;</goto>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="59:15" pos:end="77:13">else if <condition pos:start="59:23" pos:end="59:63">(<expr pos:start="59:24" pos:end="59:62"><call pos:start="59:24" pos:end="59:62"><name pos:start="59:24" pos:end="59:31">strstart</name><argument_list pos:start="59:32" pos:end="59:62">(<argument pos:start="59:33" pos:end="59:36"><expr pos:start="59:33" pos:end="59:36"><name pos:start="59:33" pos:end="59:36">opts</name></expr></argument>, <argument pos:start="59:39" pos:end="59:51"><expr pos:start="59:39" pos:end="59:51"><literal type="string" pos:start="59:39" pos:end="59:51">",ctrl_grab="</literal></expr></argument>, <argument pos:start="59:54" pos:end="59:61"><expr pos:start="59:54" pos:end="59:61"><operator pos:start="59:54" pos:end="59:54">&amp;</operator><name pos:start="59:55" pos:end="59:61">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:65" pos:end="77:13">{<block_content pos:start="61:17" pos:end="75:17">

                <expr_stmt pos:start="61:17" pos:end="61:31"><expr pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:20">opts</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:30">nextopt</name></expr>;</expr_stmt>

                <if_stmt pos:start="63:17" pos:end="75:17"><if pos:start="63:17" pos:end="67:17">if <condition pos:start="63:20" pos:end="63:51">(<expr pos:start="63:21" pos:end="63:50"><call pos:start="63:21" pos:end="63:50"><name pos:start="63:21" pos:end="63:28">strstart</name><argument_list pos:start="63:29" pos:end="63:50">(<argument pos:start="63:30" pos:end="63:33"><expr pos:start="63:30" pos:end="63:33"><name pos:start="63:30" pos:end="63:33">opts</name></expr></argument>, <argument pos:start="63:36" pos:end="63:39"><expr pos:start="63:36" pos:end="63:39"><literal type="string" pos:start="63:36" pos:end="63:39">"on"</literal></expr></argument>, <argument pos:start="63:42" pos:end="63:49"><expr pos:start="63:42" pos:end="63:49"><operator pos:start="63:42" pos:end="63:42">&amp;</operator><name pos:start="63:43" pos:end="63:49">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:53" pos:end="67:17">{<block_content pos:start="65:21" pos:end="65:34">

                    <expr_stmt pos:start="65:21" pos:end="65:34"><expr pos:start="65:21" pos:end="65:33"><name pos:start="65:21" pos:end="65:29">ctrl_grab</name> <operator pos:start="65:31" pos:end="65:31">=</operator> <literal type="number" pos:start="65:33" pos:end="65:33">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="67:19" pos:end="71:17">else if <condition pos:start="67:27" pos:end="67:59">(<expr pos:start="67:28" pos:end="67:58"><call pos:start="67:28" pos:end="67:58"><name pos:start="67:28" pos:end="67:35">strstart</name><argument_list pos:start="67:36" pos:end="67:58">(<argument pos:start="67:37" pos:end="67:40"><expr pos:start="67:37" pos:end="67:40"><name pos:start="67:37" pos:end="67:40">opts</name></expr></argument>, <argument pos:start="67:43" pos:end="67:47"><expr pos:start="67:43" pos:end="67:47"><literal type="string" pos:start="67:43" pos:end="67:47">"off"</literal></expr></argument>, <argument pos:start="67:50" pos:end="67:57"><expr pos:start="67:50" pos:end="67:57"><operator pos:start="67:50" pos:end="67:50">&amp;</operator><name pos:start="67:51" pos:end="67:57">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:61" pos:end="71:17">{<block_content pos:start="69:21" pos:end="69:34">

                    <expr_stmt pos:start="69:21" pos:end="69:34"><expr pos:start="69:21" pos:end="69:33"><name pos:start="69:21" pos:end="69:29">ctrl_grab</name> <operator pos:start="69:31" pos:end="69:31">=</operator> <literal type="number" pos:start="69:33" pos:end="69:33">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="71:19" pos:end="75:17">else <block pos:start="71:24" pos:end="75:17">{<block_content pos:start="73:21" pos:end="73:41">

                    <goto pos:start="73:21" pos:end="73:41">goto <name pos:start="73:26" pos:end="73:40">invalid_display</name>;</goto>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="77:15" pos:end="95:13">else if <condition pos:start="77:23" pos:end="77:66">(<expr pos:start="77:24" pos:end="77:65"><call pos:start="77:24" pos:end="77:65"><name pos:start="77:24" pos:end="77:31">strstart</name><argument_list pos:start="77:32" pos:end="77:65">(<argument pos:start="77:33" pos:end="77:36"><expr pos:start="77:33" pos:end="77:36"><name pos:start="77:33" pos:end="77:36">opts</name></expr></argument>, <argument pos:start="77:39" pos:end="77:54"><expr pos:start="77:39" pos:end="77:54"><literal type="string" pos:start="77:39" pos:end="77:54">",window_close="</literal></expr></argument>, <argument pos:start="77:57" pos:end="77:64"><expr pos:start="77:57" pos:end="77:64"><operator pos:start="77:57" pos:end="77:57">&amp;</operator><name pos:start="77:58" pos:end="77:64">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:68" pos:end="95:13">{<block_content pos:start="79:17" pos:end="93:17">

                <expr_stmt pos:start="79:17" pos:end="79:31"><expr pos:start="79:17" pos:end="79:30"><name pos:start="79:17" pos:end="79:20">opts</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:30">nextopt</name></expr>;</expr_stmt>

                <if_stmt pos:start="81:17" pos:end="93:17"><if pos:start="81:17" pos:end="85:17">if <condition pos:start="81:20" pos:end="81:51">(<expr pos:start="81:21" pos:end="81:50"><call pos:start="81:21" pos:end="81:50"><name pos:start="81:21" pos:end="81:28">strstart</name><argument_list pos:start="81:29" pos:end="81:50">(<argument pos:start="81:30" pos:end="81:33"><expr pos:start="81:30" pos:end="81:33"><name pos:start="81:30" pos:end="81:33">opts</name></expr></argument>, <argument pos:start="81:36" pos:end="81:39"><expr pos:start="81:36" pos:end="81:39"><literal type="string" pos:start="81:36" pos:end="81:39">"on"</literal></expr></argument>, <argument pos:start="81:42" pos:end="81:49"><expr pos:start="81:42" pos:end="81:49"><operator pos:start="81:42" pos:end="81:42">&amp;</operator><name pos:start="81:43" pos:end="81:49">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:53" pos:end="85:17">{<block_content pos:start="83:21" pos:end="83:32">

                    <expr_stmt pos:start="83:21" pos:end="83:32"><expr pos:start="83:21" pos:end="83:31"><name pos:start="83:21" pos:end="83:27">no_quit</name> <operator pos:start="83:29" pos:end="83:29">=</operator> <literal type="number" pos:start="83:31" pos:end="83:31">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="85:19" pos:end="89:17">else if <condition pos:start="85:27" pos:end="85:59">(<expr pos:start="85:28" pos:end="85:58"><call pos:start="85:28" pos:end="85:58"><name pos:start="85:28" pos:end="85:35">strstart</name><argument_list pos:start="85:36" pos:end="85:58">(<argument pos:start="85:37" pos:end="85:40"><expr pos:start="85:37" pos:end="85:40"><name pos:start="85:37" pos:end="85:40">opts</name></expr></argument>, <argument pos:start="85:43" pos:end="85:47"><expr pos:start="85:43" pos:end="85:47"><literal type="string" pos:start="85:43" pos:end="85:47">"off"</literal></expr></argument>, <argument pos:start="85:50" pos:end="85:57"><expr pos:start="85:50" pos:end="85:57"><operator pos:start="85:50" pos:end="85:50">&amp;</operator><name pos:start="85:51" pos:end="85:57">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:61" pos:end="89:17">{<block_content pos:start="87:21" pos:end="87:32">

                    <expr_stmt pos:start="87:21" pos:end="87:32"><expr pos:start="87:21" pos:end="87:31"><name pos:start="87:21" pos:end="87:27">no_quit</name> <operator pos:start="87:29" pos:end="87:29">=</operator> <literal type="number" pos:start="87:31" pos:end="87:31">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="89:19" pos:end="93:17">else <block pos:start="89:24" pos:end="93:17">{<block_content pos:start="91:21" pos:end="91:41">

                    <goto pos:start="91:21" pos:end="91:41">goto <name pos:start="91:26" pos:end="91:40">invalid_display</name>;</goto>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="95:15" pos:end="99:13">else <block pos:start="95:20" pos:end="99:13">{<block_content pos:start="97:17" pos:end="97:37">

                <goto pos:start="97:17" pos:end="97:37">goto <name pos:start="97:22" pos:end="97:36">invalid_display</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:27"><expr pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:16">opts</name> <operator pos:start="101:18" pos:end="101:18">=</operator> <name pos:start="101:20" pos:end="101:26">nextopt</name></expr>;</expr_stmt>

        </block_content>}</block></while>

<cpp:else pos:start="105:1" pos:end="105:5">#<cpp:directive pos:start="105:2" pos:end="105:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="107:9" pos:end="107:53"><expr pos:start="107:9" pos:end="107:52"><call pos:start="107:9" pos:end="107:52"><name pos:start="107:9" pos:end="107:15">fprintf</name><argument_list pos:start="107:16" pos:end="107:52">(<argument pos:start="107:17" pos:end="107:22"><expr pos:start="107:17" pos:end="107:22"><name pos:start="107:17" pos:end="107:22">stderr</name></expr></argument>, <argument pos:start="107:25" pos:end="107:51"><expr pos:start="107:25" pos:end="107:51"><literal type="string" pos:start="107:25" pos:end="107:51">"SDL support is disabled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="112:0"><expr pos:start="109:9" pos:end="109:15"><call pos:start="109:9" pos:end="109:15"><name pos:start="109:9" pos:end="109:12">exit</name><argument_list pos:start="109:13" pos:end="109:15">(<argument pos:start="109:14" pos:end="109:14"><expr pos:start="109:14" pos:end="109:14"><literal type="number" pos:start="109:14" pos:end="109:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="111:1" pos:end="111:6">#<cpp:directive pos:start="111:2" pos:end="111:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <if type="elseif" pos:start="113:7" pos:end="151:5">else if <condition pos:start="113:15" pos:end="113:41">(<expr pos:start="113:16" pos:end="113:40"><call pos:start="113:16" pos:end="113:40"><name pos:start="113:16" pos:end="113:23">strstart</name><argument_list pos:start="113:24" pos:end="113:40">(<argument pos:start="113:25" pos:end="113:25"><expr pos:start="113:25" pos:end="113:25"><name pos:start="113:25" pos:end="113:25">p</name></expr></argument>, <argument pos:start="113:28" pos:end="113:32"><expr pos:start="113:28" pos:end="113:32"><literal type="string" pos:start="113:28" pos:end="113:32">"vnc"</literal></expr></argument>, <argument pos:start="113:35" pos:end="113:39"><expr pos:start="113:35" pos:end="113:39"><operator pos:start="113:35" pos:end="113:35">&amp;</operator><name pos:start="113:36" pos:end="113:39">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:43" pos:end="151:5">{<block_content pos:start="117:9" pos:end="150:0">

<cpp:ifdef pos:start="115:1" pos:end="115:17">#<cpp:directive pos:start="115:2" pos:end="115:6">ifdef</cpp:directive> <name pos:start="115:8" pos:end="115:17">CONFIG_VNC</name></cpp:ifdef>

        <expr_stmt pos:start="117:9" pos:end="117:25"><expr pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:22">display_remote</name><operator pos:start="117:23" pos:end="117:24">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="121:9" pos:end="133:9"><if pos:start="121:9" pos:end="133:9">if <condition pos:start="121:12" pos:end="121:18">(<expr pos:start="121:13" pos:end="121:17"><operator pos:start="121:13" pos:end="121:13">*</operator><name pos:start="121:14" pos:end="121:17">opts</name></expr>)</condition> <block pos:start="121:20" pos:end="133:9">{<block_content pos:start="123:13" pos:end="131:13">

            <decl_stmt pos:start="123:13" pos:end="123:32"><decl pos:start="123:13" pos:end="123:31"><type pos:start="123:13" pos:end="123:24"><specifier pos:start="123:13" pos:end="123:17">const</specifier> <name pos:start="123:19" pos:end="123:22">char</name> <modifier pos:start="123:24" pos:end="123:24">*</modifier></type><name pos:start="123:25" pos:end="123:31">nextopt</name></decl>;</decl_stmt>



            <if_stmt pos:start="127:13" pos:end="131:13"><if pos:start="127:13" pos:end="131:13">if <condition pos:start="127:16" pos:end="127:46">(<expr pos:start="127:17" pos:end="127:45"><call pos:start="127:17" pos:end="127:45"><name pos:start="127:17" pos:end="127:24">strstart</name><argument_list pos:start="127:25" pos:end="127:45">(<argument pos:start="127:26" pos:end="127:29"><expr pos:start="127:26" pos:end="127:29"><name pos:start="127:26" pos:end="127:29">opts</name></expr></argument>, <argument pos:start="127:32" pos:end="127:34"><expr pos:start="127:32" pos:end="127:34"><literal type="string" pos:start="127:32" pos:end="127:34">"="</literal></expr></argument>, <argument pos:start="127:37" pos:end="127:44"><expr pos:start="127:37" pos:end="127:44"><operator pos:start="127:37" pos:end="127:37">&amp;</operator><name pos:start="127:38" pos:end="127:44">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:48" pos:end="131:13">{<block_content pos:start="129:17" pos:end="129:38">

                <expr_stmt pos:start="129:17" pos:end="129:38"><expr pos:start="129:17" pos:end="129:37"><name pos:start="129:17" pos:end="129:27">vnc_display</name> <operator pos:start="129:29" pos:end="129:29">=</operator> <name pos:start="129:31" pos:end="129:37">nextopt</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="135:9" pos:end="144:0"><if pos:start="135:9" pos:end="144:0">if <condition pos:start="135:12" pos:end="135:25">(<expr pos:start="135:13" pos:end="135:24"><operator pos:start="135:13" pos:end="135:13">!</operator><name pos:start="135:14" pos:end="135:24">vnc_display</name></expr>)</condition> <block pos:start="135:27" pos:end="144:0">{<block_content pos:start="137:13" pos:end="139:20">

            <expr_stmt pos:start="137:13" pos:end="137:79"><expr pos:start="137:13" pos:end="137:78"><call pos:start="137:13" pos:end="137:78"><name pos:start="137:13" pos:end="137:19">fprintf</name><argument_list pos:start="137:20" pos:end="137:78">(<argument pos:start="137:21" pos:end="137:26"><expr pos:start="137:21" pos:end="137:26"><name pos:start="137:21" pos:end="137:26">stderr</name></expr></argument>, <argument pos:start="137:29" pos:end="137:77"><expr pos:start="137:29" pos:end="137:77"><literal type="string" pos:start="137:29" pos:end="137:77">"VNC requires a display argument vnc=&lt;display&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:20"><expr pos:start="139:13" pos:end="139:19"><call pos:start="139:13" pos:end="139:19"><name pos:start="139:13" pos:end="139:16">exit</name><argument_list pos:start="139:17" pos:end="139:19">(<argument pos:start="139:18" pos:end="139:18"><expr pos:start="139:18" pos:end="139:18"><literal type="number" pos:start="139:18" pos:end="139:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:else pos:start="143:1" pos:end="143:5">#<cpp:directive pos:start="143:2" pos:end="143:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="145:9" pos:end="145:53"><expr pos:start="145:9" pos:end="145:52"><call pos:start="145:9" pos:end="145:52"><name pos:start="145:9" pos:end="145:15">fprintf</name><argument_list pos:start="145:16" pos:end="145:52">(<argument pos:start="145:17" pos:end="145:22"><expr pos:start="145:17" pos:end="145:22"><name pos:start="145:17" pos:end="145:22">stderr</name></expr></argument>, <argument pos:start="145:25" pos:end="145:51"><expr pos:start="145:25" pos:end="145:51"><literal type="string" pos:start="145:25" pos:end="145:51">"VNC support is disabled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="150:0"><expr pos:start="147:9" pos:end="147:15"><call pos:start="147:9" pos:end="147:15"><name pos:start="147:9" pos:end="147:12">exit</name><argument_list pos:start="147:13" pos:end="147:15">(<argument pos:start="147:14" pos:end="147:14"><expr pos:start="147:14" pos:end="147:14"><literal type="number" pos:start="147:14" pos:end="147:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="149:1" pos:end="149:6">#<cpp:directive pos:start="149:2" pos:end="149:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <if type="elseif" pos:start="151:7" pos:end="165:5">else if <condition pos:start="151:15" pos:end="151:44">(<expr pos:start="151:16" pos:end="151:43"><call pos:start="151:16" pos:end="151:43"><name pos:start="151:16" pos:end="151:23">strstart</name><argument_list pos:start="151:24" pos:end="151:43">(<argument pos:start="151:25" pos:end="151:25"><expr pos:start="151:25" pos:end="151:25"><name pos:start="151:25" pos:end="151:25">p</name></expr></argument>, <argument pos:start="151:28" pos:end="151:35"><expr pos:start="151:28" pos:end="151:35"><literal type="string" pos:start="151:28" pos:end="151:35">"curses"</literal></expr></argument>, <argument pos:start="151:38" pos:end="151:42"><expr pos:start="151:38" pos:end="151:42"><operator pos:start="151:38" pos:end="151:38">&amp;</operator><name pos:start="151:39" pos:end="151:42">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="151:46" pos:end="165:5">{<block_content pos:start="155:9" pos:end="164:0">

<cpp:ifdef pos:start="153:1" pos:end="153:20">#<cpp:directive pos:start="153:2" pos:end="153:6">ifdef</cpp:directive> <name pos:start="153:8" pos:end="153:20">CONFIG_CURSES</name></cpp:ifdef>

        <expr_stmt pos:start="155:9" pos:end="158:0"><expr pos:start="155:9" pos:end="155:27"><name pos:start="155:9" pos:end="155:15">display</name> <operator pos:start="155:17" pos:end="155:17">=</operator> <name pos:start="155:19" pos:end="155:27">DT_CURSES</name></expr>;</expr_stmt>

<cpp:else pos:start="157:1" pos:end="157:5">#<cpp:directive pos:start="157:2" pos:end="157:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="159:9" pos:end="159:56"><expr pos:start="159:9" pos:end="159:55"><call pos:start="159:9" pos:end="159:55"><name pos:start="159:9" pos:end="159:15">fprintf</name><argument_list pos:start="159:16" pos:end="159:55">(<argument pos:start="159:17" pos:end="159:22"><expr pos:start="159:17" pos:end="159:22"><name pos:start="159:17" pos:end="159:22">stderr</name></expr></argument>, <argument pos:start="159:25" pos:end="159:54"><expr pos:start="159:25" pos:end="159:54"><literal type="string" pos:start="159:25" pos:end="159:54">"Curses support is disabled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="164:0"><expr pos:start="161:9" pos:end="161:15"><call pos:start="161:9" pos:end="161:15"><name pos:start="161:9" pos:end="161:12">exit</name><argument_list pos:start="161:13" pos:end="161:15">(<argument pos:start="161:14" pos:end="161:14"><expr pos:start="161:14" pos:end="161:14"><literal type="number" pos:start="161:14" pos:end="161:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="163:1" pos:end="163:6">#<cpp:directive pos:start="163:2" pos:end="163:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <if type="elseif" pos:start="165:7" pos:end="169:5">else if <condition pos:start="165:15" pos:end="165:42">(<expr pos:start="165:16" pos:end="165:41"><call pos:start="165:16" pos:end="165:41"><name pos:start="165:16" pos:end="165:23">strstart</name><argument_list pos:start="165:24" pos:end="165:41">(<argument pos:start="165:25" pos:end="165:25"><expr pos:start="165:25" pos:end="165:25"><name pos:start="165:25" pos:end="165:25">p</name></expr></argument>, <argument pos:start="165:28" pos:end="165:33"><expr pos:start="165:28" pos:end="165:33"><literal type="string" pos:start="165:28" pos:end="165:33">"none"</literal></expr></argument>, <argument pos:start="165:36" pos:end="165:40"><expr pos:start="165:36" pos:end="165:40"><operator pos:start="165:36" pos:end="165:36">&amp;</operator><name pos:start="165:37" pos:end="165:40">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="165:44" pos:end="169:5">{<block_content pos:start="167:9" pos:end="167:26">

        <expr_stmt pos:start="167:9" pos:end="167:26"><expr pos:start="167:9" pos:end="167:25"><name pos:start="167:9" pos:end="167:15">display</name> <operator pos:start="167:17" pos:end="167:17">=</operator> <name pos:start="167:19" pos:end="167:25">DT_NONE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="169:7" pos:end="177:5">else <block pos:start="169:12" pos:end="177:5">{<block_content pos:start="171:5" pos:end="175:16">

    <label pos:start="171:5" pos:end="171:20"><name pos:start="171:5" pos:end="171:19">invalid_display</name>:</label>

        <expr_stmt pos:start="173:9" pos:end="173:57"><expr pos:start="173:9" pos:end="173:56"><call pos:start="173:9" pos:end="173:56"><name pos:start="173:9" pos:end="173:15">fprintf</name><argument_list pos:start="173:16" pos:end="173:56">(<argument pos:start="173:17" pos:end="173:22"><expr pos:start="173:17" pos:end="173:22"><name pos:start="173:17" pos:end="173:22">stderr</name></expr></argument>, <argument pos:start="173:25" pos:end="173:52"><expr pos:start="173:25" pos:end="173:52"><literal type="string" pos:start="173:25" pos:end="173:52">"Unknown display type: %s\n"</literal></expr></argument>, <argument pos:start="173:55" pos:end="173:55"><expr pos:start="173:55" pos:end="173:55"><name pos:start="173:55" pos:end="173:55">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:16"><expr pos:start="175:9" pos:end="175:15"><call pos:start="175:9" pos:end="175:15"><name pos:start="175:9" pos:end="175:12">exit</name><argument_list pos:start="175:13" pos:end="175:15">(<argument pos:start="175:14" pos:end="175:14"><expr pos:start="175:14" pos:end="175:14"><literal type="number" pos:start="175:14" pos:end="175:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="181:5" pos:end="181:19">return <expr pos:start="181:12" pos:end="181:18"><name pos:start="181:12" pos:end="181:18">display</name></expr>;</return>

</block_content>}</block></function>
</unit>
