<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5614.c" pos:tabs="8"><function pos:start="1:1" pos:end="38:26"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">unregister_savevm</name><parameter_list pos:start="1:23" pos:end="1:73">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:34">DeviceState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">dev</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:58"><decl pos:start="1:42" pos:end="1:58"><type pos:start="1:42" pos:end="1:58"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">idstr</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:64">void</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:72">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="38:26">{<block_content pos:start="5:5" pos:end="38:26">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SaveStateEntry</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">se</name></decl>, <decl pos:start="5:25" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:20"><modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:31">new_se</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:16"><name pos:start="7:10" pos:end="7:11">id</name><index pos:start="7:12" pos:end="7:16">[<expr pos:start="7:13" pos:end="7:15"><literal type="number" pos:start="7:13" pos:end="7:15">256</literal></expr>]</index></name> <init pos:start="7:18" pos:end="7:21">= <expr pos:start="7:20" pos:end="7:21"><literal type="string" pos:start="7:20" pos:end="7:21">""</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="38:26"><if pos:start="11:5" pos:end="38:26">if <condition pos:start="11:8" pos:end="11:70">(<expr pos:start="11:9" pos:end="11:69"><name pos:start="11:9" pos:end="11:11">dev</name> <operator pos:start="11:13" pos:end="11:14">&amp;&amp;</operator> <name pos:start="11:16" pos:end="11:30"><name pos:start="11:16" pos:end="11:18">dev</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:30">parent_bus</name></name> <operator pos:start="11:32" pos:end="11:33">&amp;&amp;</operator> <name pos:start="11:35" pos:end="11:69"><name pos:start="11:35" pos:end="11:37">dev</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:49">parent_bus</name><operator pos:start="11:50" pos:end="11:51">-&gt;</operator><name pos:start="11:52" pos:end="11:55">info</name><operator pos:start="11:56" pos:end="11:57">-&gt;</operator><name pos:start="11:58" pos:end="11:69">get_dev_path</name></name></expr>)</condition> <block pos:start="11:72" pos:end="38:26">{<block_content pos:start="13:9" pos:end="38:26">

        <decl_stmt pos:start="13:9" pos:end="13:62"><decl pos:start="13:9" pos:end="13:61"><type pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:12">char</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:18">path</name> <init pos:start="13:20" pos:end="13:61">= <expr pos:start="13:22" pos:end="13:61"><call pos:start="13:22" pos:end="13:61"><name pos:start="13:22" pos:end="13:56"><name pos:start="13:22" pos:end="13:24">dev</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:36">parent_bus</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:42">info</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:56">get_dev_path</name></name><argument_list pos:start="13:57" pos:end="13:61">(<argument pos:start="13:58" pos:end="13:60"><expr pos:start="13:58" pos:end="13:60"><name pos:start="13:58" pos:end="13:60">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="15:9" pos:end="38:26"><if pos:start="15:9" pos:end="38:26">if <condition pos:start="15:12" pos:end="15:17">(<expr pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:16">path</name></expr>)</condition> <block pos:start="15:19" pos:end="38:26">{<block_content pos:start="17:13" pos:end="38:26">

            <expr_stmt pos:start="17:13" pos:end="17:42"><expr pos:start="17:13" pos:end="17:41"><call pos:start="17:13" pos:end="17:41"><name pos:start="17:13" pos:end="17:19">pstrcpy</name><argument_list pos:start="17:20" pos:end="17:41">(<argument pos:start="17:21" pos:end="17:22"><expr pos:start="17:21" pos:end="17:22"><name pos:start="17:21" pos:end="17:22">id</name></expr></argument>, <argument pos:start="17:25" pos:end="17:34"><expr pos:start="17:25" pos:end="17:34"><sizeof pos:start="17:25" pos:end="17:34">sizeof<argument_list pos:start="17:31" pos:end="17:34">(<argument pos:start="17:32" pos:end="17:33"><expr pos:start="17:32" pos:end="17:33"><name pos:start="17:32" pos:end="17:33">id</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:37" pos:end="17:40"><expr pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:40">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:41"><expr pos:start="19:13" pos:end="19:40"><call pos:start="19:13" pos:end="19:40"><name pos:start="19:13" pos:end="19:19">pstrcat</name><argument_list pos:start="19:20" pos:end="19:40">(<argument pos:start="19:21" pos:end="19:22"><expr pos:start="19:21" pos:end="19:22"><name pos:start="19:21" pos:end="19:22">id</name></expr></argument>, <argument pos:start="19:25" pos:end="19:34"><expr pos:start="19:25" pos:end="19:34"><sizeof pos:start="19:25" pos:end="19:34">sizeof<argument_list pos:start="19:31" pos:end="19:34">(<argument pos:start="19:32" pos:end="19:33"><expr pos:start="19:32" pos:end="19:33"><name pos:start="19:32" pos:end="19:33">id</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="19:37" pos:end="19:39"><expr pos:start="19:37" pos:end="19:39"><literal type="string" pos:start="19:37" pos:end="19:39">"/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:28"><expr pos:start="21:13" pos:end="21:27"><call pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:21">qemu_free</name><argument_list pos:start="21:22" pos:end="21:27">(<argument pos:start="21:23" pos:end="21:26"><expr pos:start="21:23" pos:end="21:26"><name pos:start="21:23" pos:end="21:26">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><call pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:11">pstrcat</name><argument_list pos:start="25:12" pos:end="25:34">(<argument pos:start="25:13" pos:end="25:14"><expr pos:start="25:13" pos:end="25:14"><name pos:start="25:13" pos:end="25:14">id</name></expr></argument>, <argument pos:start="25:17" pos:end="25:26"><expr pos:start="25:17" pos:end="25:26"><sizeof pos:start="25:17" pos:end="25:26">sizeof<argument_list pos:start="25:23" pos:end="25:26">(<argument pos:start="25:24" pos:end="25:25"><expr pos:start="25:24" pos:end="25:25"><name pos:start="25:24" pos:end="25:25">id</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:29" pos:end="25:33"><expr pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:33">idstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="29:5" pos:end="29:60"><name pos:start="29:5" pos:end="29:23">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="29:24" pos:end="29:60">(<argument pos:start="29:25" pos:end="29:26">se</argument>, <argument pos:start="29:29" pos:end="29:44">&amp;savevm_handlers</argument>, <argument pos:start="29:47" pos:end="29:51">entry</argument>, <argument pos:start="29:54" pos:end="29:59">new_se</argument>)</argument_list></macro> <block pos:start="29:62" pos:end="38:26">{<block_content pos:start="31:9" pos:end="38:26">

        <if_stmt pos:start="31:9" pos:end="38:26"><if pos:start="31:9" pos:end="38:26">if <condition pos:start="31:12" pos:end="31:63">(<expr pos:start="31:13" pos:end="31:62"><call pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:18">strcmp</name><argument_list pos:start="31:19" pos:end="31:33">(<argument pos:start="31:20" pos:end="31:28"><expr pos:start="31:20" pos:end="31:28"><name pos:start="31:20" pos:end="31:28"><name pos:start="31:20" pos:end="31:21">se</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:28">idstr</name></name></expr></argument>, <argument pos:start="31:31" pos:end="31:32"><expr pos:start="31:31" pos:end="31:32"><name pos:start="31:31" pos:end="31:32">id</name></expr></argument>)</argument_list></call> <operator pos:start="31:35" pos:end="31:36">==</operator> <literal type="number" pos:start="31:38" pos:end="31:38">0</literal> <operator pos:start="31:40" pos:end="31:41">&amp;&amp;</operator> <name pos:start="31:43" pos:end="31:52"><name pos:start="31:43" pos:end="31:44">se</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:52">opaque</name></name> <operator pos:start="31:54" pos:end="31:55">==</operator> <name pos:start="31:57" pos:end="31:62">opaque</name></expr>)</condition> <block pos:start="31:65" pos:end="38:26">{<block_content pos:start="33:13" pos:end="38:26">

            <expr_stmt pos:start="33:13" pos:end="33:55"><expr pos:start="33:13" pos:end="33:54"><call pos:start="33:13" pos:end="33:54"><name pos:start="33:13" pos:end="33:25">QTAILQ_REMOVE</name><argument_list pos:start="33:26" pos:end="33:54">(<argument pos:start="33:27" pos:end="33:42"><expr pos:start="33:27" pos:end="33:42"><operator pos:start="33:27" pos:end="33:27">&amp;</operator><name pos:start="33:28" pos:end="33:42">savevm_handlers</name></expr></argument>, <argument pos:start="33:45" pos:end="33:46"><expr pos:start="33:45" pos:end="33:46"><name pos:start="33:45" pos:end="33:46">se</name></expr></argument>, <argument pos:start="33:49" pos:end="33:53"><expr pos:start="33:49" pos:end="33:53"><name pos:start="33:49" pos:end="33:53">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




            <expr_stmt pos:start="38:13" pos:end="38:26"><expr pos:start="38:13" pos:end="38:25"><call pos:start="38:13" pos:end="38:25"><name pos:start="38:13" pos:end="38:21">qemu_free</name><argument_list pos:start="38:22" pos:end="38:25">(<argument pos:start="38:23" pos:end="38:24"><expr pos:start="38:23" pos:end="38:24"><name pos:start="38:23" pos:end="38:24">se</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>


</unit>
