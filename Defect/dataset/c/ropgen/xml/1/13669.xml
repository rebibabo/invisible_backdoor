<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13669.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:91"><name pos:start="1:1" pos:end="1:21">yuv2yuvX_altivec_real</name><argument_list pos:start="1:22" pos:end="5:91">(<argument pos:start="1:23" pos:end="1:40">int16_t *lumFilter</argument>, <argument pos:start="1:43" pos:end="1:58">int16_t **lumSrc</argument>, <argument pos:start="1:61" pos:end="1:77">int lumFilterSize</argument>,

		      <argument pos:start="3:23" pos:end="3:40">int16_t *chrFilter</argument>, <argument pos:start="3:43" pos:end="3:58">int16_t **chrSrc</argument>, <argument pos:start="3:61" pos:end="3:77">int chrFilterSize</argument>,

		      <argument pos:start="5:23" pos:end="5:35">uint8_t *dest</argument>, <argument pos:start="5:38" pos:end="5:51">uint8_t *uDest</argument>, <argument pos:start="5:54" pos:end="5:67">uint8_t *vDest</argument>, <argument pos:start="5:70" pos:end="5:77">int dstW</argument>, <argument pos:start="5:80" pos:end="5:90">int chrDstW</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="243:1">{<block_content pos:start="9:3" pos:end="241:3">

  <decl_stmt pos:start="9:3" pos:end="9:78"><decl pos:start="9:3" pos:end="9:77"><type pos:start="9:3" pos:end="9:25"><specifier pos:start="9:3" pos:end="9:7">const</specifier> <name pos:start="9:9" pos:end="9:14">vector</name> <name pos:start="9:16" pos:end="9:21">signed</name> <name pos:start="9:23" pos:end="9:25">int</name></type> <name pos:start="9:27" pos:end="9:30">vini</name> <init pos:start="9:32" pos:end="9:77">= <expr pos:start="9:34" pos:end="9:77"><block pos:start="9:34" pos:end="9:77">{<expr pos:start="9:35" pos:end="9:43"><operator pos:start="9:35" pos:end="9:35">(</operator><literal type="number" pos:start="9:36" pos:end="9:36">1</literal> <operator pos:start="9:38" pos:end="9:39">&lt;&lt;</operator> <literal type="number" pos:start="9:41" pos:end="9:42">18</literal><operator pos:start="9:43" pos:end="9:43">)</operator></expr>, <expr pos:start="9:46" pos:end="9:54"><operator pos:start="9:46" pos:end="9:46">(</operator><literal type="number" pos:start="9:47" pos:end="9:47">1</literal> <operator pos:start="9:49" pos:end="9:50">&lt;&lt;</operator> <literal type="number" pos:start="9:52" pos:end="9:53">18</literal><operator pos:start="9:54" pos:end="9:54">)</operator></expr>, <expr pos:start="9:57" pos:end="9:65"><operator pos:start="9:57" pos:end="9:57">(</operator><literal type="number" pos:start="9:58" pos:end="9:58">1</literal> <operator pos:start="9:60" pos:end="9:61">&lt;&lt;</operator> <literal type="number" pos:start="9:63" pos:end="9:64">18</literal><operator pos:start="9:65" pos:end="9:65">)</operator></expr>, <expr pos:start="9:68" pos:end="9:76"><operator pos:start="9:68" pos:end="9:68">(</operator><literal type="number" pos:start="9:69" pos:end="9:69">1</literal> <operator pos:start="9:71" pos:end="9:72">&lt;&lt;</operator> <literal type="number" pos:start="9:74" pos:end="9:75">18</literal><operator pos:start="9:76" pos:end="9:76">)</operator></expr>}</block></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="11:3" pos:end="11:20"><decl pos:start="11:3" pos:end="11:16"><type pos:start="11:3" pos:end="11:14"><specifier pos:start="11:3" pos:end="11:10">register</specifier> <name pos:start="11:12" pos:end="11:14">int</name></type> <name pos:start="11:16" pos:end="11:16">i</name></decl>, <decl pos:start="11:19" pos:end="11:19"><type ref="prev" pos:start="11:3" pos:end="11:14"/><name pos:start="11:19" pos:end="11:19">j</name></decl>;</decl_stmt>

  <block pos:start="13:3" pos:end="107:3">{<block_content pos:start="15:5" pos:end="105:51">

    <decl_stmt pos:start="15:5" pos:end="15:49"><decl pos:start="15:5" pos:end="15:48"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:21">__attribute__</name> <argument_list pos:start="15:23" pos:end="15:38">(<argument pos:start="15:24" pos:end="15:37"><expr pos:start="15:24" pos:end="15:37"><operator pos:start="15:24" pos:end="15:24">(</operator><call pos:start="15:25" pos:end="15:36"><name pos:start="15:25" pos:end="15:31">aligned</name> <argument_list pos:start="15:33" pos:end="15:36">(<argument pos:start="15:34" pos:end="15:35"><expr pos:start="15:34" pos:end="15:35"><literal type="number" pos:start="15:34" pos:end="15:35">16</literal></expr></argument>)</argument_list></call><operator pos:start="15:37" pos:end="15:37">)</operator></expr></argument>)</argument_list> <name pos:start="15:40" pos:end="15:48"><name pos:start="15:40" pos:end="15:42">val</name><index pos:start="15:43" pos:end="15:48">[<expr pos:start="15:44" pos:end="15:47"><name pos:start="15:44" pos:end="15:47">dstW</name></expr>]</index></name></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="23:5">for <control pos:start="19:9" pos:end="19:36">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:30"><expr pos:start="19:17" pos:end="19:29"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <operator pos:start="19:21" pos:end="19:21">(</operator><name pos:start="19:22" pos:end="19:25">dstW</name> <operator pos:start="19:27" pos:end="19:27">-</operator><literal type="number" pos:start="19:28" pos:end="19:28">7</literal><operator pos:start="19:29" pos:end="19:29">)</operator></expr>;</condition> <incr pos:start="19:32" pos:end="19:35"><expr pos:start="19:32" pos:end="19:35"><name pos:start="19:32" pos:end="19:32">i</name><operator pos:start="19:33" pos:end="19:34">+=</operator><literal type="number" pos:start="19:35" pos:end="19:35">4</literal></expr></incr>)</control> <block pos:start="19:38" pos:end="23:5">{<block_content pos:start="21:7" pos:end="21:32">

      <expr_stmt pos:start="21:7" pos:end="21:32"><expr pos:start="21:7" pos:end="21:31"><call pos:start="21:7" pos:end="21:31"><name pos:start="21:7" pos:end="21:12">vec_st</name><argument_list pos:start="21:13" pos:end="21:31">(<argument pos:start="21:14" pos:end="21:17"><expr pos:start="21:14" pos:end="21:17"><name pos:start="21:14" pos:end="21:17">vini</name></expr></argument>, <argument pos:start="21:20" pos:end="21:25"><expr pos:start="21:20" pos:end="21:25"><name pos:start="21:20" pos:end="21:20">i</name> <operator pos:start="21:22" pos:end="21:23">&lt;&lt;</operator> <literal type="number" pos:start="21:25" pos:end="21:25">2</literal></expr></argument>, <argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="25:5" pos:end="29:5">for <control pos:start="25:9" pos:end="25:25">(<init pos:start="25:10" pos:end="25:10">;</init> <condition pos:start="25:12" pos:end="25:20"><expr pos:start="25:12" pos:end="25:19"><name pos:start="25:12" pos:end="25:12">i</name> <operator pos:start="25:14" pos:end="25:14">&lt;</operator> <name pos:start="25:16" pos:end="25:19">dstW</name></expr>;</condition> <incr pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:22">i</name><operator pos:start="25:23" pos:end="25:24">++</operator></expr></incr>)</control> <block pos:start="25:27" pos:end="29:5">{<block_content pos:start="27:7" pos:end="27:25">

      <expr_stmt pos:start="27:7" pos:end="27:25"><expr pos:start="27:7" pos:end="27:24"><name pos:start="27:7" pos:end="27:12"><name pos:start="27:7" pos:end="27:9">val</name><index pos:start="27:10" pos:end="27:12">[<expr pos:start="27:11" pos:end="27:11"><name pos:start="27:11" pos:end="27:11">i</name></expr>]</index></name> <operator pos:start="27:14" pos:end="27:14">=</operator> <operator pos:start="27:16" pos:end="27:16">(</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal> <operator pos:start="27:19" pos:end="27:20">&lt;&lt;</operator> <literal type="number" pos:start="27:22" pos:end="27:23">18</literal><operator pos:start="27:24" pos:end="27:24">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="33:5" pos:end="103:5">for <control pos:start="33:9" pos:end="33:39">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">j</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:34"><expr pos:start="33:17" pos:end="33:33"><name pos:start="33:17" pos:end="33:17">j</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:33">lumFilterSize</name></expr>;</condition> <incr pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><name pos:start="33:36" pos:end="33:36">j</name><operator pos:start="33:37" pos:end="33:38">++</operator></expr></incr>)</control> <block pos:start="33:41" pos:end="103:5">{<block_content pos:start="35:7" pos:end="101:7">

      <decl_stmt pos:start="35:7" pos:end="35:69"><decl pos:start="35:7" pos:end="35:28"><type pos:start="35:7" pos:end="35:25"><name pos:start="35:7" pos:end="35:12">vector</name> <name pos:start="35:14" pos:end="35:19">signed</name> <name pos:start="35:21" pos:end="35:25">short</name></type> <name pos:start="35:27" pos:end="35:28">l1</name></decl>, <decl pos:start="35:31" pos:end="35:68"><type ref="prev" pos:start="35:7" pos:end="35:25"/><name pos:start="35:31" pos:end="35:40">vLumFilter</name> <init pos:start="35:42" pos:end="35:68">= <expr pos:start="35:44" pos:end="35:68"><call pos:start="35:44" pos:end="35:68"><name pos:start="35:44" pos:end="35:49">vec_ld</name><argument_list pos:start="35:50" pos:end="35:68">(<argument pos:start="35:51" pos:end="35:56"><expr pos:start="35:51" pos:end="35:56"><name pos:start="35:51" pos:end="35:51">j</name> <operator pos:start="35:53" pos:end="35:54">&lt;&lt;</operator> <literal type="number" pos:start="35:56" pos:end="35:56">1</literal></expr></argument>, <argument pos:start="35:59" pos:end="35:67"><expr pos:start="35:59" pos:end="35:67"><name pos:start="35:59" pos:end="35:67">lumFilter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <decl_stmt pos:start="37:7" pos:end="37:69"><decl pos:start="37:7" pos:end="37:31"><type pos:start="37:7" pos:end="37:26"><name pos:start="37:7" pos:end="37:12">vector</name> <name pos:start="37:14" pos:end="37:21">unsigned</name> <name pos:start="37:23" pos:end="37:26">char</name></type> <name pos:start="37:28" pos:end="37:31">perm</name></decl>, <decl pos:start="37:34" pos:end="37:68"><type ref="prev" pos:start="37:7" pos:end="37:26"/><name pos:start="37:34" pos:end="37:38">perm0</name> <init pos:start="37:40" pos:end="37:68">= <expr pos:start="37:42" pos:end="37:68"><call pos:start="37:42" pos:end="37:68"><name pos:start="37:42" pos:end="37:49">vec_lvsl</name><argument_list pos:start="37:50" pos:end="37:68">(<argument pos:start="37:51" pos:end="37:56"><expr pos:start="37:51" pos:end="37:56"><name pos:start="37:51" pos:end="37:51">j</name> <operator pos:start="37:53" pos:end="37:54">&lt;&lt;</operator> <literal type="number" pos:start="37:56" pos:end="37:56">1</literal></expr></argument>, <argument pos:start="37:59" pos:end="37:67"><expr pos:start="37:59" pos:end="37:67"><name pos:start="37:59" pos:end="37:67">lumFilter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <expr_stmt pos:start="39:7" pos:end="39:59"><expr pos:start="39:7" pos:end="39:58"><name pos:start="39:7" pos:end="39:16">vLumFilter</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:58"><name pos:start="39:20" pos:end="39:27">vec_perm</name><argument_list pos:start="39:28" pos:end="39:58">(<argument pos:start="39:29" pos:end="39:38"><expr pos:start="39:29" pos:end="39:38"><name pos:start="39:29" pos:end="39:38">vLumFilter</name></expr></argument>, <argument pos:start="39:41" pos:end="39:50"><expr pos:start="39:41" pos:end="39:50"><name pos:start="39:41" pos:end="39:50">vLumFilter</name></expr></argument>, <argument pos:start="39:53" pos:end="39:57"><expr pos:start="39:53" pos:end="39:57"><name pos:start="39:53" pos:end="39:57">perm0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="41:7" pos:end="41:44"><expr pos:start="41:7" pos:end="41:43"><name pos:start="41:7" pos:end="41:16">vLumFilter</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <call pos:start="41:20" pos:end="41:43"><name pos:start="41:20" pos:end="41:28">vec_splat</name><argument_list pos:start="41:29" pos:end="41:43">(<argument pos:start="41:30" pos:end="41:39"><expr pos:start="41:30" pos:end="41:39"><name pos:start="41:30" pos:end="41:39">vLumFilter</name></expr></argument>, <argument pos:start="41:42" pos:end="41:42"><expr pos:start="41:42" pos:end="41:42"><literal type="number" pos:start="41:42" pos:end="41:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="41:46" pos:end="41:92">// lumFilter[j] is loaded 8 times in vLumFilter</comment>



      <expr_stmt pos:start="45:7" pos:end="45:36"><expr pos:start="45:7" pos:end="45:35"><name pos:start="45:7" pos:end="45:10">perm</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="45:35"><name pos:start="45:14" pos:end="45:21">vec_lvsl</name><argument_list pos:start="45:22" pos:end="45:35">(<argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr></argument>, <argument pos:start="45:26" pos:end="45:34"><expr pos:start="45:26" pos:end="45:34"><name pos:start="45:26" pos:end="45:34"><name pos:start="45:26" pos:end="45:31">lumSrc</name><index pos:start="45:32" pos:end="45:34">[<expr pos:start="45:33" pos:end="45:33"><name pos:start="45:33" pos:end="45:33">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="47:7" pos:end="47:32"><expr pos:start="47:7" pos:end="47:31"><name pos:start="47:7" pos:end="47:8">l1</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <call pos:start="47:12" pos:end="47:31"><name pos:start="47:12" pos:end="47:17">vec_ld</name><argument_list pos:start="47:18" pos:end="47:31">(<argument pos:start="47:19" pos:end="47:19"><expr pos:start="47:19" pos:end="47:19"><literal type="number" pos:start="47:19" pos:end="47:19">0</literal></expr></argument>, <argument pos:start="47:22" pos:end="47:30"><expr pos:start="47:22" pos:end="47:30"><name pos:start="47:22" pos:end="47:30"><name pos:start="47:22" pos:end="47:27">lumSrc</name><index pos:start="47:28" pos:end="47:30">[<expr pos:start="47:29" pos:end="47:29"><name pos:start="47:29" pos:end="47:29">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



      <for pos:start="51:7" pos:end="95:7">for <control pos:start="51:11" pos:end="51:39">(<init pos:start="51:12" pos:end="51:17"><expr pos:start="51:12" pos:end="51:16"><name pos:start="51:12" pos:end="51:12">i</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr>;</init> <condition pos:start="51:19" pos:end="51:33"><expr pos:start="51:19" pos:end="51:32"><name pos:start="51:19" pos:end="51:19">i</name> <operator pos:start="51:21" pos:end="51:21">&lt;</operator> <operator pos:start="51:23" pos:end="51:23">(</operator><name pos:start="51:24" pos:end="51:27">dstW</name> <operator pos:start="51:29" pos:end="51:29">-</operator> <literal type="number" pos:start="51:31" pos:end="51:31">7</literal><operator pos:start="51:32" pos:end="51:32">)</operator></expr>;</condition> <incr pos:start="51:35" pos:end="51:38"><expr pos:start="51:35" pos:end="51:38"><name pos:start="51:35" pos:end="51:35">i</name><operator pos:start="51:36" pos:end="51:37">+=</operator><literal type="number" pos:start="51:38" pos:end="51:38">8</literal></expr></incr>)</control> <block pos:start="51:41" pos:end="95:7">{<block_content pos:start="53:9" pos:end="93:16">

	<decl_stmt pos:start="53:9" pos:end="53:28"><decl pos:start="53:9" pos:end="53:27"><type pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">int</name></type> <name pos:start="53:13" pos:end="53:18">offset</name> <init pos:start="53:20" pos:end="53:27">= <expr pos:start="53:22" pos:end="53:27"><name pos:start="53:22" pos:end="53:22">i</name> <operator pos:start="53:24" pos:end="53:25">&lt;&lt;</operator> <literal type="number" pos:start="53:27" pos:end="53:27">2</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="55:9" pos:end="55:66"><decl pos:start="55:9" pos:end="55:65"><type pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:14">vector</name> <name pos:start="55:16" pos:end="55:21">signed</name> <name pos:start="55:23" pos:end="55:27">short</name></type> <name pos:start="55:29" pos:end="55:30">l2</name> <init pos:start="55:32" pos:end="55:65">= <expr pos:start="55:34" pos:end="55:65"><call pos:start="55:34" pos:end="55:65"><name pos:start="55:34" pos:end="55:39">vec_ld</name><argument_list pos:start="55:40" pos:end="55:65">(<argument pos:start="55:41" pos:end="55:53"><expr pos:start="55:41" pos:end="55:53"><operator pos:start="55:41" pos:end="55:41">(</operator><name pos:start="55:42" pos:end="55:42">i</name> <operator pos:start="55:44" pos:end="55:45">&lt;&lt;</operator> <literal type="number" pos:start="55:47" pos:end="55:47">1</literal><operator pos:start="55:48" pos:end="55:48">)</operator> <operator pos:start="55:50" pos:end="55:50">+</operator> <literal type="number" pos:start="55:52" pos:end="55:53">16</literal></expr></argument>, <argument pos:start="55:56" pos:end="55:64"><expr pos:start="55:56" pos:end="55:64"><name pos:start="55:56" pos:end="55:64"><name pos:start="55:56" pos:end="55:61">lumSrc</name><index pos:start="55:62" pos:end="55:64">[<expr pos:start="55:63" pos:end="55:63"><name pos:start="55:63" pos:end="55:63">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



	<decl_stmt pos:start="59:9" pos:end="59:51"><decl pos:start="59:9" pos:end="59:50"><type pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:14">vector</name> <name pos:start="59:16" pos:end="59:21">signed</name> <name pos:start="59:23" pos:end="59:25">int</name></type> <name pos:start="59:27" pos:end="59:28">v1</name> <init pos:start="59:30" pos:end="59:50">= <expr pos:start="59:32" pos:end="59:50"><call pos:start="59:32" pos:end="59:50"><name pos:start="59:32" pos:end="59:37">vec_ld</name><argument_list pos:start="59:38" pos:end="59:50">(<argument pos:start="59:39" pos:end="59:44"><expr pos:start="59:39" pos:end="59:44"><name pos:start="59:39" pos:end="59:44">offset</name></expr></argument>, <argument pos:start="59:47" pos:end="59:49"><expr pos:start="59:47" pos:end="59:49"><name pos:start="59:47" pos:end="59:49">val</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="61:9" pos:end="61:56"><decl pos:start="61:9" pos:end="61:55"><type pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:14">vector</name> <name pos:start="61:16" pos:end="61:21">signed</name> <name pos:start="61:23" pos:end="61:25">int</name></type> <name pos:start="61:27" pos:end="61:28">v2</name> <init pos:start="61:30" pos:end="61:55">= <expr pos:start="61:32" pos:end="61:55"><call pos:start="61:32" pos:end="61:55"><name pos:start="61:32" pos:end="61:37">vec_ld</name><argument_list pos:start="61:38" pos:end="61:55">(<argument pos:start="61:39" pos:end="61:49"><expr pos:start="61:39" pos:end="61:49"><name pos:start="61:39" pos:end="61:44">offset</name> <operator pos:start="61:46" pos:end="61:46">+</operator> <literal type="number" pos:start="61:48" pos:end="61:49">16</literal></expr></argument>, <argument pos:start="61:52" pos:end="61:54"><expr pos:start="61:52" pos:end="61:54"><name pos:start="61:52" pos:end="61:54">val</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



	<decl_stmt pos:start="65:9" pos:end="65:56"><decl pos:start="65:9" pos:end="65:55"><type pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:14">vector</name> <name pos:start="65:16" pos:end="65:21">signed</name> <name pos:start="65:23" pos:end="65:27">short</name></type> <name pos:start="65:29" pos:end="65:30">ls</name> <init pos:start="65:32" pos:end="65:55">= <expr pos:start="65:34" pos:end="65:55"><call pos:start="65:34" pos:end="65:55"><name pos:start="65:34" pos:end="65:41">vec_perm</name><argument_list pos:start="65:42" pos:end="65:55">(<argument pos:start="65:43" pos:end="65:44"><expr pos:start="65:43" pos:end="65:44"><name pos:start="65:43" pos:end="65:44">l1</name></expr></argument>, <argument pos:start="65:47" pos:end="65:48"><expr pos:start="65:47" pos:end="65:48"><name pos:start="65:47" pos:end="65:48">l2</name></expr></argument>, <argument pos:start="65:51" pos:end="65:54"><expr pos:start="65:51" pos:end="65:54"><name pos:start="65:51" pos:end="65:54">perm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="65:58" pos:end="65:91">// lumSrc[j][i] ... lumSrc[j][i+7]</comment>



	<decl_stmt pos:start="69:9" pos:end="69:56"><decl pos:start="69:9" pos:end="69:55"><type pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:14">vector</name> <name pos:start="69:16" pos:end="69:21">signed</name> <name pos:start="69:23" pos:end="69:25">int</name></type> <name pos:start="69:27" pos:end="69:28">i1</name> <init pos:start="69:30" pos:end="69:55">= <expr pos:start="69:32" pos:end="69:55"><call pos:start="69:32" pos:end="69:55"><name pos:start="69:32" pos:end="69:39">vec_mule</name><argument_list pos:start="69:40" pos:end="69:55">(<argument pos:start="69:41" pos:end="69:50"><expr pos:start="69:41" pos:end="69:50"><name pos:start="69:41" pos:end="69:50">vLumFilter</name></expr></argument>, <argument pos:start="69:53" pos:end="69:54"><expr pos:start="69:53" pos:end="69:54"><name pos:start="69:53" pos:end="69:54">ls</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="71:9" pos:end="71:56"><decl pos:start="71:9" pos:end="71:55"><type pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:14">vector</name> <name pos:start="71:16" pos:end="71:21">signed</name> <name pos:start="71:23" pos:end="71:25">int</name></type> <name pos:start="71:27" pos:end="71:28">i2</name> <init pos:start="71:30" pos:end="71:55">= <expr pos:start="71:32" pos:end="71:55"><call pos:start="71:32" pos:end="71:55"><name pos:start="71:32" pos:end="71:39">vec_mulo</name><argument_list pos:start="71:40" pos:end="71:55">(<argument pos:start="71:41" pos:end="71:50"><expr pos:start="71:41" pos:end="71:50"><name pos:start="71:41" pos:end="71:50">vLumFilter</name></expr></argument>, <argument pos:start="71:53" pos:end="71:54"><expr pos:start="71:53" pos:end="71:54"><name pos:start="71:53" pos:end="71:54">ls</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



	<decl_stmt pos:start="75:9" pos:end="75:51"><decl pos:start="75:9" pos:end="75:50"><type pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:14">vector</name> <name pos:start="75:16" pos:end="75:21">signed</name> <name pos:start="75:23" pos:end="75:25">int</name></type> <name pos:start="75:27" pos:end="75:29">vf1</name> <init pos:start="75:31" pos:end="75:50">= <expr pos:start="75:33" pos:end="75:50"><call pos:start="75:33" pos:end="75:50"><name pos:start="75:33" pos:end="75:42">vec_mergeh</name><argument_list pos:start="75:43" pos:end="75:50">(<argument pos:start="75:44" pos:end="75:45"><expr pos:start="75:44" pos:end="75:45"><name pos:start="75:44" pos:end="75:45">i1</name></expr></argument>, <argument pos:start="75:48" pos:end="75:49"><expr pos:start="75:48" pos:end="75:49"><name pos:start="75:48" pos:end="75:49">i2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="77:9" pos:end="77:51"><decl pos:start="77:9" pos:end="77:50"><type pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:14">vector</name> <name pos:start="77:16" pos:end="77:21">signed</name> <name pos:start="77:23" pos:end="77:25">int</name></type> <name pos:start="77:27" pos:end="77:29">vf2</name> <init pos:start="77:31" pos:end="77:50">= <expr pos:start="77:33" pos:end="77:50"><call pos:start="77:33" pos:end="77:50"><name pos:start="77:33" pos:end="77:42">vec_mergel</name><argument_list pos:start="77:43" pos:end="77:50">(<argument pos:start="77:44" pos:end="77:45"><expr pos:start="77:44" pos:end="77:45"><name pos:start="77:44" pos:end="77:45">i1</name></expr></argument>, <argument pos:start="77:48" pos:end="77:49"><expr pos:start="77:48" pos:end="77:49"><name pos:start="77:48" pos:end="77:49">i2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="77:53" pos:end="77:116">// lumSrc[j][i] * lumFilter[j] ... lumSrc[j][i+7] * lumFilter[j]</comment>



	<decl_stmt pos:start="81:9" pos:end="81:49"><decl pos:start="81:9" pos:end="81:48"><type pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:14">vector</name> <name pos:start="81:16" pos:end="81:21">signed</name> <name pos:start="81:23" pos:end="81:25">int</name></type> <name pos:start="81:27" pos:end="81:29">vo1</name> <init pos:start="81:31" pos:end="81:48">= <expr pos:start="81:33" pos:end="81:48"><call pos:start="81:33" pos:end="81:48"><name pos:start="81:33" pos:end="81:39">vec_add</name><argument_list pos:start="81:40" pos:end="81:48">(<argument pos:start="81:41" pos:end="81:42"><expr pos:start="81:41" pos:end="81:42"><name pos:start="81:41" pos:end="81:42">v1</name></expr></argument>, <argument pos:start="81:45" pos:end="81:47"><expr pos:start="81:45" pos:end="81:47"><name pos:start="81:45" pos:end="81:47">vf1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="83:9" pos:end="83:49"><decl pos:start="83:9" pos:end="83:48"><type pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:14">vector</name> <name pos:start="83:16" pos:end="83:21">signed</name> <name pos:start="83:23" pos:end="83:25">int</name></type> <name pos:start="83:27" pos:end="83:29">vo2</name> <init pos:start="83:31" pos:end="83:48">= <expr pos:start="83:33" pos:end="83:48"><call pos:start="83:33" pos:end="83:48"><name pos:start="83:33" pos:end="83:39">vec_add</name><argument_list pos:start="83:40" pos:end="83:48">(<argument pos:start="83:41" pos:end="83:42"><expr pos:start="83:41" pos:end="83:42"><name pos:start="83:41" pos:end="83:42">v2</name></expr></argument>, <argument pos:start="83:45" pos:end="83:47"><expr pos:start="83:45" pos:end="83:47"><name pos:start="83:45" pos:end="83:47">vf2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



	<expr_stmt pos:start="87:9" pos:end="87:33"><expr pos:start="87:9" pos:end="87:32"><call pos:start="87:9" pos:end="87:32"><name pos:start="87:9" pos:end="87:14">vec_st</name><argument_list pos:start="87:15" pos:end="87:32">(<argument pos:start="87:16" pos:end="87:18"><expr pos:start="87:16" pos:end="87:18"><name pos:start="87:16" pos:end="87:18">vo1</name></expr></argument>, <argument pos:start="87:21" pos:end="87:26"><expr pos:start="87:21" pos:end="87:26"><name pos:start="87:21" pos:end="87:26">offset</name></expr></argument>, <argument pos:start="87:29" pos:end="87:31"><expr pos:start="87:29" pos:end="87:31"><name pos:start="87:29" pos:end="87:31">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="89:9" pos:end="89:38"><expr pos:start="89:9" pos:end="89:37"><call pos:start="89:9" pos:end="89:37"><name pos:start="89:9" pos:end="89:14">vec_st</name><argument_list pos:start="89:15" pos:end="89:37">(<argument pos:start="89:16" pos:end="89:18"><expr pos:start="89:16" pos:end="89:18"><name pos:start="89:16" pos:end="89:18">vo2</name></expr></argument>, <argument pos:start="89:21" pos:end="89:31"><expr pos:start="89:21" pos:end="89:31"><name pos:start="89:21" pos:end="89:26">offset</name> <operator pos:start="89:28" pos:end="89:28">+</operator> <literal type="number" pos:start="89:30" pos:end="89:31">16</literal></expr></argument>, <argument pos:start="89:34" pos:end="89:36"><expr pos:start="89:34" pos:end="89:36"><name pos:start="89:34" pos:end="89:36">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="93:9" pos:end="93:16"><expr pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:10">l1</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <name pos:start="93:14" pos:end="93:15">l2</name></expr>;</expr_stmt>

      </block_content>}</block></for>

      <for pos:start="97:7" pos:end="101:7">for <control pos:start="97:11" pos:end="97:28">( <init pos:start="97:13" pos:end="97:13">;</init> <condition pos:start="97:15" pos:end="97:23"><expr pos:start="97:15" pos:end="97:22"><name pos:start="97:15" pos:end="97:15">i</name> <operator pos:start="97:17" pos:end="97:17">&lt;</operator> <name pos:start="97:19" pos:end="97:22">dstW</name></expr>;</condition> <incr pos:start="97:25" pos:end="97:27"><expr pos:start="97:25" pos:end="97:27"><name pos:start="97:25" pos:end="97:25">i</name><operator pos:start="97:26" pos:end="97:27">++</operator></expr></incr>)</control> <block pos:start="97:30" pos:end="101:7">{<block_content pos:start="99:9" pos:end="99:46">

	<expr_stmt pos:start="99:9" pos:end="99:46"><expr pos:start="99:9" pos:end="99:45"><name pos:start="99:9" pos:end="99:14"><name pos:start="99:9" pos:end="99:11">val</name><index pos:start="99:12" pos:end="99:14">[<expr pos:start="99:13" pos:end="99:13"><name pos:start="99:13" pos:end="99:13">i</name></expr>]</index></name> <operator pos:start="99:16" pos:end="99:17">+=</operator> <name pos:start="99:19" pos:end="99:30"><name pos:start="99:19" pos:end="99:24">lumSrc</name><index pos:start="99:25" pos:end="99:27">[<expr pos:start="99:26" pos:end="99:26"><name pos:start="99:26" pos:end="99:26">j</name></expr>]</index><index pos:start="99:28" pos:end="99:30">[<expr pos:start="99:29" pos:end="99:29"><name pos:start="99:29" pos:end="99:29">i</name></expr>]</index></name> <operator pos:start="99:32" pos:end="99:32">*</operator> <name pos:start="99:34" pos:end="99:45"><name pos:start="99:34" pos:end="99:42">lumFilter</name><index pos:start="99:43" pos:end="99:45">[<expr pos:start="99:44" pos:end="99:44"><name pos:start="99:44" pos:end="99:44">j</name></expr>]</index></name></expr>;</expr_stmt>

      </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="105:5" pos:end="105:51"><expr pos:start="105:5" pos:end="105:50"><call pos:start="105:5" pos:end="105:50"><name pos:start="105:5" pos:end="105:35">altivec_packIntArrayToCharArray</name><argument_list pos:start="105:36" pos:end="105:50">(<argument pos:start="105:37" pos:end="105:39"><expr pos:start="105:37" pos:end="105:39"><name pos:start="105:37" pos:end="105:39">val</name></expr></argument>,<argument pos:start="105:41" pos:end="105:44"><expr pos:start="105:41" pos:end="105:44"><name pos:start="105:41" pos:end="105:44">dest</name></expr></argument>,<argument pos:start="105:46" pos:end="105:49"><expr pos:start="105:46" pos:end="105:49"><name pos:start="105:46" pos:end="105:49">dstW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block>

  <if_stmt pos:start="109:3" pos:end="241:3"><if pos:start="109:3" pos:end="241:3">if <condition pos:start="109:6" pos:end="109:17">(<expr pos:start="109:7" pos:end="109:16"><name pos:start="109:7" pos:end="109:11">uDest</name> <operator pos:start="109:13" pos:end="109:14">!=</operator> <literal type="number" pos:start="109:16" pos:end="109:16">0</literal></expr>)</condition> <block pos:start="109:19" pos:end="241:3">{<block_content pos:start="111:5" pos:end="239:53">

    <decl_stmt pos:start="111:5" pos:end="111:51"><decl pos:start="111:5" pos:end="111:50"><type pos:start="111:5" pos:end="111:7"><name pos:start="111:5" pos:end="111:7">int</name></type>  <name pos:start="111:10" pos:end="111:22">__attribute__</name> <argument_list pos:start="111:24" pos:end="111:39">(<argument pos:start="111:25" pos:end="111:38"><expr pos:start="111:25" pos:end="111:38"><operator pos:start="111:25" pos:end="111:25">(</operator><call pos:start="111:26" pos:end="111:37"><name pos:start="111:26" pos:end="111:32">aligned</name> <argument_list pos:start="111:34" pos:end="111:37">(<argument pos:start="111:35" pos:end="111:36"><expr pos:start="111:35" pos:end="111:36"><literal type="number" pos:start="111:35" pos:end="111:36">16</literal></expr></argument>)</argument_list></call><operator pos:start="111:38" pos:end="111:38">)</operator></expr></argument>)</argument_list> <name pos:start="111:41" pos:end="111:50"><name pos:start="111:41" pos:end="111:41">u</name><index pos:start="111:42" pos:end="111:50">[<expr pos:start="111:43" pos:end="111:49"><name pos:start="111:43" pos:end="111:49">chrDstW</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="113:5" pos:end="113:51"><decl pos:start="113:5" pos:end="113:50"><type pos:start="113:5" pos:end="113:7"><name pos:start="113:5" pos:end="113:7">int</name></type>  <name pos:start="113:10" pos:end="113:22">__attribute__</name> <argument_list pos:start="113:24" pos:end="113:39">(<argument pos:start="113:25" pos:end="113:38"><expr pos:start="113:25" pos:end="113:38"><operator pos:start="113:25" pos:end="113:25">(</operator><call pos:start="113:26" pos:end="113:37"><name pos:start="113:26" pos:end="113:32">aligned</name> <argument_list pos:start="113:34" pos:end="113:37">(<argument pos:start="113:35" pos:end="113:36"><expr pos:start="113:35" pos:end="113:36"><literal type="number" pos:start="113:35" pos:end="113:36">16</literal></expr></argument>)</argument_list></call><operator pos:start="113:38" pos:end="113:38">)</operator></expr></argument>)</argument_list> <name pos:start="113:41" pos:end="113:50"><name pos:start="113:41" pos:end="113:41">v</name><index pos:start="113:42" pos:end="113:50">[<expr pos:start="113:43" pos:end="113:49"><name pos:start="113:43" pos:end="113:49">chrDstW</name></expr>]</index></name></decl>;</decl_stmt>



    <for pos:start="117:5" pos:end="123:5">for <control pos:start="117:9" pos:end="117:39">(<init pos:start="117:10" pos:end="117:15"><expr pos:start="117:10" pos:end="117:14"><name pos:start="117:10" pos:end="117:10">i</name> <operator pos:start="117:12" pos:end="117:12">=</operator> <literal type="number" pos:start="117:14" pos:end="117:14">0</literal></expr>;</init> <condition pos:start="117:17" pos:end="117:33"><expr pos:start="117:17" pos:end="117:32"><name pos:start="117:17" pos:end="117:17">i</name> <operator pos:start="117:19" pos:end="117:19">&lt;</operator> <operator pos:start="117:21" pos:end="117:21">(</operator><name pos:start="117:22" pos:end="117:28">chrDstW</name> <operator pos:start="117:30" pos:end="117:30">-</operator><literal type="number" pos:start="117:31" pos:end="117:31">7</literal><operator pos:start="117:32" pos:end="117:32">)</operator></expr>;</condition> <incr pos:start="117:35" pos:end="117:38"><expr pos:start="117:35" pos:end="117:38"><name pos:start="117:35" pos:end="117:35">i</name><operator pos:start="117:36" pos:end="117:37">+=</operator><literal type="number" pos:start="117:38" pos:end="117:38">4</literal></expr></incr>)</control> <block pos:start="117:41" pos:end="123:5">{<block_content pos:start="119:7" pos:end="121:30">

      <expr_stmt pos:start="119:7" pos:end="119:30"><expr pos:start="119:7" pos:end="119:29"><call pos:start="119:7" pos:end="119:29"><name pos:start="119:7" pos:end="119:12">vec_st</name><argument_list pos:start="119:13" pos:end="119:29">(<argument pos:start="119:14" pos:end="119:17"><expr pos:start="119:14" pos:end="119:17"><name pos:start="119:14" pos:end="119:17">vini</name></expr></argument>, <argument pos:start="119:20" pos:end="119:25"><expr pos:start="119:20" pos:end="119:25"><name pos:start="119:20" pos:end="119:20">i</name> <operator pos:start="119:22" pos:end="119:23">&lt;&lt;</operator> <literal type="number" pos:start="119:25" pos:end="119:25">2</literal></expr></argument>, <argument pos:start="119:28" pos:end="119:28"><expr pos:start="119:28" pos:end="119:28"><name pos:start="119:28" pos:end="119:28">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="121:7" pos:end="121:30"><expr pos:start="121:7" pos:end="121:29"><call pos:start="121:7" pos:end="121:29"><name pos:start="121:7" pos:end="121:12">vec_st</name><argument_list pos:start="121:13" pos:end="121:29">(<argument pos:start="121:14" pos:end="121:17"><expr pos:start="121:14" pos:end="121:17"><name pos:start="121:14" pos:end="121:17">vini</name></expr></argument>, <argument pos:start="121:20" pos:end="121:25"><expr pos:start="121:20" pos:end="121:25"><name pos:start="121:20" pos:end="121:20">i</name> <operator pos:start="121:22" pos:end="121:23">&lt;&lt;</operator> <literal type="number" pos:start="121:25" pos:end="121:25">2</literal></expr></argument>, <argument pos:start="121:28" pos:end="121:28"><expr pos:start="121:28" pos:end="121:28"><name pos:start="121:28" pos:end="121:28">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="125:5" pos:end="131:5">for <control pos:start="125:9" pos:end="125:28">(<init pos:start="125:10" pos:end="125:10">;</init> <condition pos:start="125:12" pos:end="125:23"><expr pos:start="125:12" pos:end="125:22"><name pos:start="125:12" pos:end="125:12">i</name> <operator pos:start="125:14" pos:end="125:14">&lt;</operator> <name pos:start="125:16" pos:end="125:22">chrDstW</name></expr>;</condition> <incr pos:start="125:25" pos:end="125:27"><expr pos:start="125:25" pos:end="125:27"><name pos:start="125:25" pos:end="125:25">i</name><operator pos:start="125:26" pos:end="125:27">++</operator></expr></incr>)</control> <block pos:start="125:30" pos:end="131:5">{<block_content pos:start="127:7" pos:end="129:23">

      <expr_stmt pos:start="127:7" pos:end="127:23"><expr pos:start="127:7" pos:end="127:22"><name pos:start="127:7" pos:end="127:10"><name pos:start="127:7" pos:end="127:7">u</name><index pos:start="127:8" pos:end="127:10">[<expr pos:start="127:9" pos:end="127:9"><name pos:start="127:9" pos:end="127:9">i</name></expr>]</index></name> <operator pos:start="127:12" pos:end="127:12">=</operator> <operator pos:start="127:14" pos:end="127:14">(</operator><literal type="number" pos:start="127:15" pos:end="127:15">1</literal> <operator pos:start="127:17" pos:end="127:18">&lt;&lt;</operator> <literal type="number" pos:start="127:20" pos:end="127:21">18</literal><operator pos:start="127:22" pos:end="127:22">)</operator></expr>;</expr_stmt>

      <expr_stmt pos:start="129:7" pos:end="129:23"><expr pos:start="129:7" pos:end="129:22"><name pos:start="129:7" pos:end="129:10"><name pos:start="129:7" pos:end="129:7">v</name><index pos:start="129:8" pos:end="129:10">[<expr pos:start="129:9" pos:end="129:9"><name pos:start="129:9" pos:end="129:9">i</name></expr>]</index></name> <operator pos:start="129:12" pos:end="129:12">=</operator> <operator pos:start="129:14" pos:end="129:14">(</operator><literal type="number" pos:start="129:15" pos:end="129:15">1</literal> <operator pos:start="129:17" pos:end="129:18">&lt;&lt;</operator> <literal type="number" pos:start="129:20" pos:end="129:21">18</literal><operator pos:start="129:22" pos:end="129:22">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="135:5" pos:end="235:5">for <control pos:start="135:9" pos:end="135:39">(<init pos:start="135:10" pos:end="135:15"><expr pos:start="135:10" pos:end="135:14"><name pos:start="135:10" pos:end="135:10">j</name> <operator pos:start="135:12" pos:end="135:12">=</operator> <literal type="number" pos:start="135:14" pos:end="135:14">0</literal></expr>;</init> <condition pos:start="135:17" pos:end="135:34"><expr pos:start="135:17" pos:end="135:33"><name pos:start="135:17" pos:end="135:17">j</name> <operator pos:start="135:19" pos:end="135:19">&lt;</operator> <name pos:start="135:21" pos:end="135:33">chrFilterSize</name></expr>;</condition> <incr pos:start="135:36" pos:end="135:38"><expr pos:start="135:36" pos:end="135:38"><name pos:start="135:36" pos:end="135:36">j</name><operator pos:start="135:37" pos:end="135:38">++</operator></expr></incr>)</control> <block pos:start="135:41" pos:end="235:5">{<block_content pos:start="137:7" pos:end="233:7">

      <decl_stmt pos:start="137:7" pos:end="137:75"><decl pos:start="137:7" pos:end="137:28"><type pos:start="137:7" pos:end="137:25"><name pos:start="137:7" pos:end="137:12">vector</name> <name pos:start="137:14" pos:end="137:19">signed</name> <name pos:start="137:21" pos:end="137:25">short</name></type> <name pos:start="137:27" pos:end="137:28">l1</name></decl>, <decl pos:start="137:31" pos:end="137:34"><type ref="prev" pos:start="137:7" pos:end="137:25"/><name pos:start="137:31" pos:end="137:34">l1_V</name></decl>, <decl pos:start="137:37" pos:end="137:74"><type ref="prev" pos:start="137:7" pos:end="137:25"/><name pos:start="137:37" pos:end="137:46">vChrFilter</name> <init pos:start="137:48" pos:end="137:74">= <expr pos:start="137:50" pos:end="137:74"><call pos:start="137:50" pos:end="137:74"><name pos:start="137:50" pos:end="137:55">vec_ld</name><argument_list pos:start="137:56" pos:end="137:74">(<argument pos:start="137:57" pos:end="137:62"><expr pos:start="137:57" pos:end="137:62"><name pos:start="137:57" pos:end="137:57">j</name> <operator pos:start="137:59" pos:end="137:60">&lt;&lt;</operator> <literal type="number" pos:start="137:62" pos:end="137:62">1</literal></expr></argument>, <argument pos:start="137:65" pos:end="137:73"><expr pos:start="137:65" pos:end="137:73"><name pos:start="137:65" pos:end="137:73">chrFilter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <decl_stmt pos:start="139:7" pos:end="139:69"><decl pos:start="139:7" pos:end="139:31"><type pos:start="139:7" pos:end="139:26"><name pos:start="139:7" pos:end="139:12">vector</name> <name pos:start="139:14" pos:end="139:21">unsigned</name> <name pos:start="139:23" pos:end="139:26">char</name></type> <name pos:start="139:28" pos:end="139:31">perm</name></decl>, <decl pos:start="139:34" pos:end="139:68"><type ref="prev" pos:start="139:7" pos:end="139:26"/><name pos:start="139:34" pos:end="139:38">perm0</name> <init pos:start="139:40" pos:end="139:68">= <expr pos:start="139:42" pos:end="139:68"><call pos:start="139:42" pos:end="139:68"><name pos:start="139:42" pos:end="139:49">vec_lvsl</name><argument_list pos:start="139:50" pos:end="139:68">(<argument pos:start="139:51" pos:end="139:56"><expr pos:start="139:51" pos:end="139:56"><name pos:start="139:51" pos:end="139:51">j</name> <operator pos:start="139:53" pos:end="139:54">&lt;&lt;</operator> <literal type="number" pos:start="139:56" pos:end="139:56">1</literal></expr></argument>, <argument pos:start="139:59" pos:end="139:67"><expr pos:start="139:59" pos:end="139:67"><name pos:start="139:59" pos:end="139:67">chrFilter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

      <expr_stmt pos:start="141:7" pos:end="141:59"><expr pos:start="141:7" pos:end="141:58"><name pos:start="141:7" pos:end="141:16">vChrFilter</name> <operator pos:start="141:18" pos:end="141:18">=</operator> <call pos:start="141:20" pos:end="141:58"><name pos:start="141:20" pos:end="141:27">vec_perm</name><argument_list pos:start="141:28" pos:end="141:58">(<argument pos:start="141:29" pos:end="141:38"><expr pos:start="141:29" pos:end="141:38"><name pos:start="141:29" pos:end="141:38">vChrFilter</name></expr></argument>, <argument pos:start="141:41" pos:end="141:50"><expr pos:start="141:41" pos:end="141:50"><name pos:start="141:41" pos:end="141:50">vChrFilter</name></expr></argument>, <argument pos:start="141:53" pos:end="141:57"><expr pos:start="141:53" pos:end="141:57"><name pos:start="141:53" pos:end="141:57">perm0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="143:7" pos:end="143:44"><expr pos:start="143:7" pos:end="143:43"><name pos:start="143:7" pos:end="143:16">vChrFilter</name> <operator pos:start="143:18" pos:end="143:18">=</operator> <call pos:start="143:20" pos:end="143:43"><name pos:start="143:20" pos:end="143:28">vec_splat</name><argument_list pos:start="143:29" pos:end="143:43">(<argument pos:start="143:30" pos:end="143:39"><expr pos:start="143:30" pos:end="143:39"><name pos:start="143:30" pos:end="143:39">vChrFilter</name></expr></argument>, <argument pos:start="143:42" pos:end="143:42"><expr pos:start="143:42" pos:end="143:42"><literal type="number" pos:start="143:42" pos:end="143:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="143:46" pos:end="143:92">// chrFilter[j] is loaded 8 times in vChrFilter</comment>



      <expr_stmt pos:start="147:7" pos:end="147:36"><expr pos:start="147:7" pos:end="147:35"><name pos:start="147:7" pos:end="147:10">perm</name> <operator pos:start="147:12" pos:end="147:12">=</operator> <call pos:start="147:14" pos:end="147:35"><name pos:start="147:14" pos:end="147:21">vec_lvsl</name><argument_list pos:start="147:22" pos:end="147:35">(<argument pos:start="147:23" pos:end="147:23"><expr pos:start="147:23" pos:end="147:23"><literal type="number" pos:start="147:23" pos:end="147:23">0</literal></expr></argument>, <argument pos:start="147:26" pos:end="147:34"><expr pos:start="147:26" pos:end="147:34"><name pos:start="147:26" pos:end="147:34"><name pos:start="147:26" pos:end="147:31">chrSrc</name><index pos:start="147:32" pos:end="147:34">[<expr pos:start="147:33" pos:end="147:33"><name pos:start="147:33" pos:end="147:33">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="149:7" pos:end="149:32"><expr pos:start="149:7" pos:end="149:31"><name pos:start="149:7" pos:end="149:8">l1</name> <operator pos:start="149:10" pos:end="149:10">=</operator> <call pos:start="149:12" pos:end="149:31"><name pos:start="149:12" pos:end="149:17">vec_ld</name><argument_list pos:start="149:18" pos:end="149:31">(<argument pos:start="149:19" pos:end="149:19"><expr pos:start="149:19" pos:end="149:19"><literal type="number" pos:start="149:19" pos:end="149:19">0</literal></expr></argument>, <argument pos:start="149:22" pos:end="149:30"><expr pos:start="149:22" pos:end="149:30"><name pos:start="149:22" pos:end="149:30"><name pos:start="149:22" pos:end="149:27">chrSrc</name><index pos:start="149:28" pos:end="149:30">[<expr pos:start="149:29" pos:end="149:29"><name pos:start="149:29" pos:end="149:29">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="151:7" pos:end="151:42"><expr pos:start="151:7" pos:end="151:41"><name pos:start="151:7" pos:end="151:10">l1_V</name> <operator pos:start="151:12" pos:end="151:12">=</operator> <call pos:start="151:14" pos:end="151:41"><name pos:start="151:14" pos:end="151:19">vec_ld</name><argument_list pos:start="151:20" pos:end="151:41">(<argument pos:start="151:21" pos:end="151:29"><expr pos:start="151:21" pos:end="151:29"><literal type="number" pos:start="151:21" pos:end="151:24">2048</literal> <operator pos:start="151:26" pos:end="151:27">&lt;&lt;</operator> <literal type="number" pos:start="151:29" pos:end="151:29">1</literal></expr></argument>, <argument pos:start="151:32" pos:end="151:40"><expr pos:start="151:32" pos:end="151:40"><name pos:start="151:32" pos:end="151:40"><name pos:start="151:32" pos:end="151:37">chrSrc</name><index pos:start="151:38" pos:end="151:40">[<expr pos:start="151:39" pos:end="151:39"><name pos:start="151:39" pos:end="151:39">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



      <for pos:start="155:7" pos:end="225:7">for <control pos:start="155:11" pos:end="155:42">(<init pos:start="155:12" pos:end="155:17"><expr pos:start="155:12" pos:end="155:16"><name pos:start="155:12" pos:end="155:12">i</name> <operator pos:start="155:14" pos:end="155:14">=</operator> <literal type="number" pos:start="155:16" pos:end="155:16">0</literal></expr>;</init> <condition pos:start="155:19" pos:end="155:36"><expr pos:start="155:19" pos:end="155:35"><name pos:start="155:19" pos:end="155:19">i</name> <operator pos:start="155:21" pos:end="155:21">&lt;</operator> <operator pos:start="155:23" pos:end="155:23">(</operator><name pos:start="155:24" pos:end="155:30">chrDstW</name> <operator pos:start="155:32" pos:end="155:32">-</operator> <literal type="number" pos:start="155:34" pos:end="155:34">7</literal><operator pos:start="155:35" pos:end="155:35">)</operator></expr>;</condition> <incr pos:start="155:38" pos:end="155:41"><expr pos:start="155:38" pos:end="155:41"><name pos:start="155:38" pos:end="155:38">i</name><operator pos:start="155:39" pos:end="155:40">+=</operator><literal type="number" pos:start="155:41" pos:end="155:41">8</literal></expr></incr>)</control> <block pos:start="155:44" pos:end="225:7">{<block_content pos:start="157:9" pos:end="223:20">

	<decl_stmt pos:start="157:9" pos:end="157:28"><decl pos:start="157:9" pos:end="157:27"><type pos:start="157:9" pos:end="157:11"><name pos:start="157:9" pos:end="157:11">int</name></type> <name pos:start="157:13" pos:end="157:18">offset</name> <init pos:start="157:20" pos:end="157:27">= <expr pos:start="157:22" pos:end="157:27"><name pos:start="157:22" pos:end="157:22">i</name> <operator pos:start="157:24" pos:end="157:25">&lt;&lt;</operator> <literal type="number" pos:start="157:27" pos:end="157:27">2</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="159:9" pos:end="159:66"><decl pos:start="159:9" pos:end="159:65"><type pos:start="159:9" pos:end="159:27"><name pos:start="159:9" pos:end="159:14">vector</name> <name pos:start="159:16" pos:end="159:21">signed</name> <name pos:start="159:23" pos:end="159:27">short</name></type> <name pos:start="159:29" pos:end="159:30">l2</name> <init pos:start="159:32" pos:end="159:65">= <expr pos:start="159:34" pos:end="159:65"><call pos:start="159:34" pos:end="159:65"><name pos:start="159:34" pos:end="159:39">vec_ld</name><argument_list pos:start="159:40" pos:end="159:65">(<argument pos:start="159:41" pos:end="159:53"><expr pos:start="159:41" pos:end="159:53"><operator pos:start="159:41" pos:end="159:41">(</operator><name pos:start="159:42" pos:end="159:42">i</name> <operator pos:start="159:44" pos:end="159:45">&lt;&lt;</operator> <literal type="number" pos:start="159:47" pos:end="159:47">1</literal><operator pos:start="159:48" pos:end="159:48">)</operator> <operator pos:start="159:50" pos:end="159:50">+</operator> <literal type="number" pos:start="159:52" pos:end="159:53">16</literal></expr></argument>, <argument pos:start="159:56" pos:end="159:64"><expr pos:start="159:56" pos:end="159:64"><name pos:start="159:56" pos:end="159:64"><name pos:start="159:56" pos:end="159:61">chrSrc</name><index pos:start="159:62" pos:end="159:64">[<expr pos:start="159:63" pos:end="159:63"><name pos:start="159:63" pos:end="159:63">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="161:9" pos:end="161:77"><decl pos:start="161:9" pos:end="161:76"><type pos:start="161:9" pos:end="161:27"><name pos:start="161:9" pos:end="161:14">vector</name> <name pos:start="161:16" pos:end="161:21">signed</name> <name pos:start="161:23" pos:end="161:27">short</name></type> <name pos:start="161:29" pos:end="161:32">l2_V</name> <init pos:start="161:34" pos:end="161:76">= <expr pos:start="161:36" pos:end="161:76"><call pos:start="161:36" pos:end="161:76"><name pos:start="161:36" pos:end="161:41">vec_ld</name><argument_list pos:start="161:42" pos:end="161:76">(<argument pos:start="161:43" pos:end="161:64"><expr pos:start="161:43" pos:end="161:64"><operator pos:start="161:43" pos:end="161:43">(</operator><operator pos:start="161:44" pos:end="161:44">(</operator><name pos:start="161:45" pos:end="161:45">i</name> <operator pos:start="161:47" pos:end="161:47">+</operator> <literal type="number" pos:start="161:49" pos:end="161:52">2048</literal><operator pos:start="161:53" pos:end="161:53">)</operator> <operator pos:start="161:55" pos:end="161:56">&lt;&lt;</operator> <literal type="number" pos:start="161:58" pos:end="161:58">1</literal><operator pos:start="161:59" pos:end="161:59">)</operator> <operator pos:start="161:61" pos:end="161:61">+</operator> <literal type="number" pos:start="161:63" pos:end="161:64">16</literal></expr></argument>, <argument pos:start="161:67" pos:end="161:75"><expr pos:start="161:67" pos:end="161:75"><name pos:start="161:67" pos:end="161:75"><name pos:start="161:67" pos:end="161:72">chrSrc</name><index pos:start="161:73" pos:end="161:75">[<expr pos:start="161:74" pos:end="161:74"><name pos:start="161:74" pos:end="161:74">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



	<decl_stmt pos:start="165:9" pos:end="165:49"><decl pos:start="165:9" pos:end="165:48"><type pos:start="165:9" pos:end="165:25"><name pos:start="165:9" pos:end="165:14">vector</name> <name pos:start="165:16" pos:end="165:21">signed</name> <name pos:start="165:23" pos:end="165:25">int</name></type> <name pos:start="165:27" pos:end="165:28">v1</name> <init pos:start="165:30" pos:end="165:48">= <expr pos:start="165:32" pos:end="165:48"><call pos:start="165:32" pos:end="165:48"><name pos:start="165:32" pos:end="165:37">vec_ld</name><argument_list pos:start="165:38" pos:end="165:48">(<argument pos:start="165:39" pos:end="165:44"><expr pos:start="165:39" pos:end="165:44"><name pos:start="165:39" pos:end="165:44">offset</name></expr></argument>, <argument pos:start="165:47" pos:end="165:47"><expr pos:start="165:47" pos:end="165:47"><name pos:start="165:47" pos:end="165:47">u</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="167:9" pos:end="167:54"><decl pos:start="167:9" pos:end="167:53"><type pos:start="167:9" pos:end="167:25"><name pos:start="167:9" pos:end="167:14">vector</name> <name pos:start="167:16" pos:end="167:21">signed</name> <name pos:start="167:23" pos:end="167:25">int</name></type> <name pos:start="167:27" pos:end="167:28">v2</name> <init pos:start="167:30" pos:end="167:53">= <expr pos:start="167:32" pos:end="167:53"><call pos:start="167:32" pos:end="167:53"><name pos:start="167:32" pos:end="167:37">vec_ld</name><argument_list pos:start="167:38" pos:end="167:53">(<argument pos:start="167:39" pos:end="167:49"><expr pos:start="167:39" pos:end="167:49"><name pos:start="167:39" pos:end="167:44">offset</name> <operator pos:start="167:46" pos:end="167:46">+</operator> <literal type="number" pos:start="167:48" pos:end="167:49">16</literal></expr></argument>, <argument pos:start="167:52" pos:end="167:52"><expr pos:start="167:52" pos:end="167:52"><name pos:start="167:52" pos:end="167:52">u</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="169:9" pos:end="169:51"><decl pos:start="169:9" pos:end="169:50"><type pos:start="169:9" pos:end="169:25"><name pos:start="169:9" pos:end="169:14">vector</name> <name pos:start="169:16" pos:end="169:21">signed</name> <name pos:start="169:23" pos:end="169:25">int</name></type> <name pos:start="169:27" pos:end="169:30">v1_V</name> <init pos:start="169:32" pos:end="169:50">= <expr pos:start="169:34" pos:end="169:50"><call pos:start="169:34" pos:end="169:50"><name pos:start="169:34" pos:end="169:39">vec_ld</name><argument_list pos:start="169:40" pos:end="169:50">(<argument pos:start="169:41" pos:end="169:46"><expr pos:start="169:41" pos:end="169:46"><name pos:start="169:41" pos:end="169:46">offset</name></expr></argument>, <argument pos:start="169:49" pos:end="169:49"><expr pos:start="169:49" pos:end="169:49"><name pos:start="169:49" pos:end="169:49">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="171:9" pos:end="171:56"><decl pos:start="171:9" pos:end="171:55"><type pos:start="171:9" pos:end="171:25"><name pos:start="171:9" pos:end="171:14">vector</name> <name pos:start="171:16" pos:end="171:21">signed</name> <name pos:start="171:23" pos:end="171:25">int</name></type> <name pos:start="171:27" pos:end="171:30">v2_V</name> <init pos:start="171:32" pos:end="171:55">= <expr pos:start="171:34" pos:end="171:55"><call pos:start="171:34" pos:end="171:55"><name pos:start="171:34" pos:end="171:39">vec_ld</name><argument_list pos:start="171:40" pos:end="171:55">(<argument pos:start="171:41" pos:end="171:51"><expr pos:start="171:41" pos:end="171:51"><name pos:start="171:41" pos:end="171:46">offset</name> <operator pos:start="171:48" pos:end="171:48">+</operator> <literal type="number" pos:start="171:50" pos:end="171:51">16</literal></expr></argument>, <argument pos:start="171:54" pos:end="171:54"><expr pos:start="171:54" pos:end="171:54"><name pos:start="171:54" pos:end="171:54">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



	<decl_stmt pos:start="175:9" pos:end="175:56"><decl pos:start="175:9" pos:end="175:55"><type pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:14">vector</name> <name pos:start="175:16" pos:end="175:21">signed</name> <name pos:start="175:23" pos:end="175:27">short</name></type> <name pos:start="175:29" pos:end="175:30">ls</name> <init pos:start="175:32" pos:end="175:55">= <expr pos:start="175:34" pos:end="175:55"><call pos:start="175:34" pos:end="175:55"><name pos:start="175:34" pos:end="175:41">vec_perm</name><argument_list pos:start="175:42" pos:end="175:55">(<argument pos:start="175:43" pos:end="175:44"><expr pos:start="175:43" pos:end="175:44"><name pos:start="175:43" pos:end="175:44">l1</name></expr></argument>, <argument pos:start="175:47" pos:end="175:48"><expr pos:start="175:47" pos:end="175:48"><name pos:start="175:47" pos:end="175:48">l2</name></expr></argument>, <argument pos:start="175:51" pos:end="175:54"><expr pos:start="175:51" pos:end="175:54"><name pos:start="175:51" pos:end="175:54">perm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="175:58" pos:end="175:91">// chrSrc[j][i] ... chrSrc[j][i+7]</comment>

	<decl_stmt pos:start="177:9" pos:end="177:62"><decl pos:start="177:9" pos:end="177:61"><type pos:start="177:9" pos:end="177:27"><name pos:start="177:9" pos:end="177:14">vector</name> <name pos:start="177:16" pos:end="177:21">signed</name> <name pos:start="177:23" pos:end="177:27">short</name></type> <name pos:start="177:29" pos:end="177:32">ls_V</name> <init pos:start="177:34" pos:end="177:61">= <expr pos:start="177:36" pos:end="177:61"><call pos:start="177:36" pos:end="177:61"><name pos:start="177:36" pos:end="177:43">vec_perm</name><argument_list pos:start="177:44" pos:end="177:61">(<argument pos:start="177:45" pos:end="177:48"><expr pos:start="177:45" pos:end="177:48"><name pos:start="177:45" pos:end="177:48">l1_V</name></expr></argument>, <argument pos:start="177:51" pos:end="177:54"><expr pos:start="177:51" pos:end="177:54"><name pos:start="177:51" pos:end="177:54">l2_V</name></expr></argument>, <argument pos:start="177:57" pos:end="177:60"><expr pos:start="177:57" pos:end="177:60"><name pos:start="177:57" pos:end="177:60">perm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="177:64" pos:end="177:105">// chrSrc[j][i+2048] ... chrSrc[j][i+2055]</comment>



	<decl_stmt pos:start="181:9" pos:end="181:56"><decl pos:start="181:9" pos:end="181:55"><type pos:start="181:9" pos:end="181:25"><name pos:start="181:9" pos:end="181:14">vector</name> <name pos:start="181:16" pos:end="181:21">signed</name> <name pos:start="181:23" pos:end="181:25">int</name></type> <name pos:start="181:27" pos:end="181:28">i1</name> <init pos:start="181:30" pos:end="181:55">= <expr pos:start="181:32" pos:end="181:55"><call pos:start="181:32" pos:end="181:55"><name pos:start="181:32" pos:end="181:39">vec_mule</name><argument_list pos:start="181:40" pos:end="181:55">(<argument pos:start="181:41" pos:end="181:50"><expr pos:start="181:41" pos:end="181:50"><name pos:start="181:41" pos:end="181:50">vChrFilter</name></expr></argument>, <argument pos:start="181:53" pos:end="181:54"><expr pos:start="181:53" pos:end="181:54"><name pos:start="181:53" pos:end="181:54">ls</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="183:9" pos:end="183:56"><decl pos:start="183:9" pos:end="183:55"><type pos:start="183:9" pos:end="183:25"><name pos:start="183:9" pos:end="183:14">vector</name> <name pos:start="183:16" pos:end="183:21">signed</name> <name pos:start="183:23" pos:end="183:25">int</name></type> <name pos:start="183:27" pos:end="183:28">i2</name> <init pos:start="183:30" pos:end="183:55">= <expr pos:start="183:32" pos:end="183:55"><call pos:start="183:32" pos:end="183:55"><name pos:start="183:32" pos:end="183:39">vec_mulo</name><argument_list pos:start="183:40" pos:end="183:55">(<argument pos:start="183:41" pos:end="183:50"><expr pos:start="183:41" pos:end="183:50"><name pos:start="183:41" pos:end="183:50">vChrFilter</name></expr></argument>, <argument pos:start="183:53" pos:end="183:54"><expr pos:start="183:53" pos:end="183:54"><name pos:start="183:53" pos:end="183:54">ls</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="185:9" pos:end="185:60"><decl pos:start="185:9" pos:end="185:59"><type pos:start="185:9" pos:end="185:25"><name pos:start="185:9" pos:end="185:14">vector</name> <name pos:start="185:16" pos:end="185:21">signed</name> <name pos:start="185:23" pos:end="185:25">int</name></type> <name pos:start="185:27" pos:end="185:30">i1_V</name> <init pos:start="185:32" pos:end="185:59">= <expr pos:start="185:34" pos:end="185:59"><call pos:start="185:34" pos:end="185:59"><name pos:start="185:34" pos:end="185:41">vec_mule</name><argument_list pos:start="185:42" pos:end="185:59">(<argument pos:start="185:43" pos:end="185:52"><expr pos:start="185:43" pos:end="185:52"><name pos:start="185:43" pos:end="185:52">vChrFilter</name></expr></argument>, <argument pos:start="185:55" pos:end="185:58"><expr pos:start="185:55" pos:end="185:58"><name pos:start="185:55" pos:end="185:58">ls_V</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="187:9" pos:end="187:60"><decl pos:start="187:9" pos:end="187:59"><type pos:start="187:9" pos:end="187:25"><name pos:start="187:9" pos:end="187:14">vector</name> <name pos:start="187:16" pos:end="187:21">signed</name> <name pos:start="187:23" pos:end="187:25">int</name></type> <name pos:start="187:27" pos:end="187:30">i2_V</name> <init pos:start="187:32" pos:end="187:59">= <expr pos:start="187:34" pos:end="187:59"><call pos:start="187:34" pos:end="187:59"><name pos:start="187:34" pos:end="187:41">vec_mulo</name><argument_list pos:start="187:42" pos:end="187:59">(<argument pos:start="187:43" pos:end="187:52"><expr pos:start="187:43" pos:end="187:52"><name pos:start="187:43" pos:end="187:52">vChrFilter</name></expr></argument>, <argument pos:start="187:55" pos:end="187:58"><expr pos:start="187:55" pos:end="187:58"><name pos:start="187:55" pos:end="187:58">ls_V</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



	<decl_stmt pos:start="191:9" pos:end="191:51"><decl pos:start="191:9" pos:end="191:50"><type pos:start="191:9" pos:end="191:25"><name pos:start="191:9" pos:end="191:14">vector</name> <name pos:start="191:16" pos:end="191:21">signed</name> <name pos:start="191:23" pos:end="191:25">int</name></type> <name pos:start="191:27" pos:end="191:29">vf1</name> <init pos:start="191:31" pos:end="191:50">= <expr pos:start="191:33" pos:end="191:50"><call pos:start="191:33" pos:end="191:50"><name pos:start="191:33" pos:end="191:42">vec_mergeh</name><argument_list pos:start="191:43" pos:end="191:50">(<argument pos:start="191:44" pos:end="191:45"><expr pos:start="191:44" pos:end="191:45"><name pos:start="191:44" pos:end="191:45">i1</name></expr></argument>, <argument pos:start="191:48" pos:end="191:49"><expr pos:start="191:48" pos:end="191:49"><name pos:start="191:48" pos:end="191:49">i2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="193:9" pos:end="193:51"><decl pos:start="193:9" pos:end="193:50"><type pos:start="193:9" pos:end="193:25"><name pos:start="193:9" pos:end="193:14">vector</name> <name pos:start="193:16" pos:end="193:21">signed</name> <name pos:start="193:23" pos:end="193:25">int</name></type> <name pos:start="193:27" pos:end="193:29">vf2</name> <init pos:start="193:31" pos:end="193:50">= <expr pos:start="193:33" pos:end="193:50"><call pos:start="193:33" pos:end="193:50"><name pos:start="193:33" pos:end="193:42">vec_mergel</name><argument_list pos:start="193:43" pos:end="193:50">(<argument pos:start="193:44" pos:end="193:45"><expr pos:start="193:44" pos:end="193:45"><name pos:start="193:44" pos:end="193:45">i1</name></expr></argument>, <argument pos:start="193:48" pos:end="193:49"><expr pos:start="193:48" pos:end="193:49"><name pos:start="193:48" pos:end="193:49">i2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="193:53" pos:end="193:116">// chrSrc[j][i] * chrFilter[j] ... chrSrc[j][i+7] * chrFilter[j]</comment>

	<decl_stmt pos:start="195:9" pos:end="195:57"><decl pos:start="195:9" pos:end="195:56"><type pos:start="195:9" pos:end="195:25"><name pos:start="195:9" pos:end="195:14">vector</name> <name pos:start="195:16" pos:end="195:21">signed</name> <name pos:start="195:23" pos:end="195:25">int</name></type> <name pos:start="195:27" pos:end="195:31">vf1_V</name> <init pos:start="195:33" pos:end="195:56">= <expr pos:start="195:35" pos:end="195:56"><call pos:start="195:35" pos:end="195:56"><name pos:start="195:35" pos:end="195:44">vec_mergeh</name><argument_list pos:start="195:45" pos:end="195:56">(<argument pos:start="195:46" pos:end="195:49"><expr pos:start="195:46" pos:end="195:49"><name pos:start="195:46" pos:end="195:49">i1_V</name></expr></argument>, <argument pos:start="195:52" pos:end="195:55"><expr pos:start="195:52" pos:end="195:55"><name pos:start="195:52" pos:end="195:55">i2_V</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="197:9" pos:end="197:57"><decl pos:start="197:9" pos:end="197:56"><type pos:start="197:9" pos:end="197:25"><name pos:start="197:9" pos:end="197:14">vector</name> <name pos:start="197:16" pos:end="197:21">signed</name> <name pos:start="197:23" pos:end="197:25">int</name></type> <name pos:start="197:27" pos:end="197:31">vf2_V</name> <init pos:start="197:33" pos:end="197:56">= <expr pos:start="197:35" pos:end="197:56"><call pos:start="197:35" pos:end="197:56"><name pos:start="197:35" pos:end="197:44">vec_mergel</name><argument_list pos:start="197:45" pos:end="197:56">(<argument pos:start="197:46" pos:end="197:49"><expr pos:start="197:46" pos:end="197:49"><name pos:start="197:46" pos:end="197:49">i1_V</name></expr></argument>, <argument pos:start="197:52" pos:end="197:55"><expr pos:start="197:52" pos:end="197:55"><name pos:start="197:52" pos:end="197:55">i2_V</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="197:59" pos:end="197:122">// chrSrc[j][i] * chrFilter[j] ... chrSrc[j][i+7] * chrFilter[j]</comment>



	<decl_stmt pos:start="201:9" pos:end="201:49"><decl pos:start="201:9" pos:end="201:48"><type pos:start="201:9" pos:end="201:25"><name pos:start="201:9" pos:end="201:14">vector</name> <name pos:start="201:16" pos:end="201:21">signed</name> <name pos:start="201:23" pos:end="201:25">int</name></type> <name pos:start="201:27" pos:end="201:29">vo1</name> <init pos:start="201:31" pos:end="201:48">= <expr pos:start="201:33" pos:end="201:48"><call pos:start="201:33" pos:end="201:48"><name pos:start="201:33" pos:end="201:39">vec_add</name><argument_list pos:start="201:40" pos:end="201:48">(<argument pos:start="201:41" pos:end="201:42"><expr pos:start="201:41" pos:end="201:42"><name pos:start="201:41" pos:end="201:42">v1</name></expr></argument>, <argument pos:start="201:45" pos:end="201:47"><expr pos:start="201:45" pos:end="201:47"><name pos:start="201:45" pos:end="201:47">vf1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="203:9" pos:end="203:49"><decl pos:start="203:9" pos:end="203:48"><type pos:start="203:9" pos:end="203:25"><name pos:start="203:9" pos:end="203:14">vector</name> <name pos:start="203:16" pos:end="203:21">signed</name> <name pos:start="203:23" pos:end="203:25">int</name></type> <name pos:start="203:27" pos:end="203:29">vo2</name> <init pos:start="203:31" pos:end="203:48">= <expr pos:start="203:33" pos:end="203:48"><call pos:start="203:33" pos:end="203:48"><name pos:start="203:33" pos:end="203:39">vec_add</name><argument_list pos:start="203:40" pos:end="203:48">(<argument pos:start="203:41" pos:end="203:42"><expr pos:start="203:41" pos:end="203:42"><name pos:start="203:41" pos:end="203:42">v2</name></expr></argument>, <argument pos:start="203:45" pos:end="203:47"><expr pos:start="203:45" pos:end="203:47"><name pos:start="203:45" pos:end="203:47">vf2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="205:9" pos:end="205:55"><decl pos:start="205:9" pos:end="205:54"><type pos:start="205:9" pos:end="205:25"><name pos:start="205:9" pos:end="205:14">vector</name> <name pos:start="205:16" pos:end="205:21">signed</name> <name pos:start="205:23" pos:end="205:25">int</name></type> <name pos:start="205:27" pos:end="205:31">vo1_V</name> <init pos:start="205:33" pos:end="205:54">= <expr pos:start="205:35" pos:end="205:54"><call pos:start="205:35" pos:end="205:54"><name pos:start="205:35" pos:end="205:41">vec_add</name><argument_list pos:start="205:42" pos:end="205:54">(<argument pos:start="205:43" pos:end="205:46"><expr pos:start="205:43" pos:end="205:46"><name pos:start="205:43" pos:end="205:46">v1_V</name></expr></argument>, <argument pos:start="205:49" pos:end="205:53"><expr pos:start="205:49" pos:end="205:53"><name pos:start="205:49" pos:end="205:53">vf1_V</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="207:9" pos:end="207:55"><decl pos:start="207:9" pos:end="207:54"><type pos:start="207:9" pos:end="207:25"><name pos:start="207:9" pos:end="207:14">vector</name> <name pos:start="207:16" pos:end="207:21">signed</name> <name pos:start="207:23" pos:end="207:25">int</name></type> <name pos:start="207:27" pos:end="207:31">vo2_V</name> <init pos:start="207:33" pos:end="207:54">= <expr pos:start="207:35" pos:end="207:54"><call pos:start="207:35" pos:end="207:54"><name pos:start="207:35" pos:end="207:41">vec_add</name><argument_list pos:start="207:42" pos:end="207:54">(<argument pos:start="207:43" pos:end="207:46"><expr pos:start="207:43" pos:end="207:46"><name pos:start="207:43" pos:end="207:46">v2_V</name></expr></argument>, <argument pos:start="207:49" pos:end="207:53"><expr pos:start="207:49" pos:end="207:53"><name pos:start="207:49" pos:end="207:53">vf2_V</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



	<expr_stmt pos:start="211:9" pos:end="211:31"><expr pos:start="211:9" pos:end="211:30"><call pos:start="211:9" pos:end="211:30"><name pos:start="211:9" pos:end="211:14">vec_st</name><argument_list pos:start="211:15" pos:end="211:30">(<argument pos:start="211:16" pos:end="211:18"><expr pos:start="211:16" pos:end="211:18"><name pos:start="211:16" pos:end="211:18">vo1</name></expr></argument>, <argument pos:start="211:21" pos:end="211:26"><expr pos:start="211:21" pos:end="211:26"><name pos:start="211:21" pos:end="211:26">offset</name></expr></argument>, <argument pos:start="211:29" pos:end="211:29"><expr pos:start="211:29" pos:end="211:29"><name pos:start="211:29" pos:end="211:29">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="213:9" pos:end="213:36"><expr pos:start="213:9" pos:end="213:35"><call pos:start="213:9" pos:end="213:35"><name pos:start="213:9" pos:end="213:14">vec_st</name><argument_list pos:start="213:15" pos:end="213:35">(<argument pos:start="213:16" pos:end="213:18"><expr pos:start="213:16" pos:end="213:18"><name pos:start="213:16" pos:end="213:18">vo2</name></expr></argument>, <argument pos:start="213:21" pos:end="213:31"><expr pos:start="213:21" pos:end="213:31"><name pos:start="213:21" pos:end="213:26">offset</name> <operator pos:start="213:28" pos:end="213:28">+</operator> <literal type="number" pos:start="213:30" pos:end="213:31">16</literal></expr></argument>, <argument pos:start="213:34" pos:end="213:34"><expr pos:start="213:34" pos:end="213:34"><name pos:start="213:34" pos:end="213:34">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="215:9" pos:end="215:33"><expr pos:start="215:9" pos:end="215:32"><call pos:start="215:9" pos:end="215:32"><name pos:start="215:9" pos:end="215:14">vec_st</name><argument_list pos:start="215:15" pos:end="215:32">(<argument pos:start="215:16" pos:end="215:20"><expr pos:start="215:16" pos:end="215:20"><name pos:start="215:16" pos:end="215:20">vo1_V</name></expr></argument>, <argument pos:start="215:23" pos:end="215:28"><expr pos:start="215:23" pos:end="215:28"><name pos:start="215:23" pos:end="215:28">offset</name></expr></argument>, <argument pos:start="215:31" pos:end="215:31"><expr pos:start="215:31" pos:end="215:31"><name pos:start="215:31" pos:end="215:31">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="217:9" pos:end="217:38"><expr pos:start="217:9" pos:end="217:37"><call pos:start="217:9" pos:end="217:37"><name pos:start="217:9" pos:end="217:14">vec_st</name><argument_list pos:start="217:15" pos:end="217:37">(<argument pos:start="217:16" pos:end="217:20"><expr pos:start="217:16" pos:end="217:20"><name pos:start="217:16" pos:end="217:20">vo2_V</name></expr></argument>, <argument pos:start="217:23" pos:end="217:33"><expr pos:start="217:23" pos:end="217:33"><name pos:start="217:23" pos:end="217:28">offset</name> <operator pos:start="217:30" pos:end="217:30">+</operator> <literal type="number" pos:start="217:32" pos:end="217:33">16</literal></expr></argument>, <argument pos:start="217:36" pos:end="217:36"><expr pos:start="217:36" pos:end="217:36"><name pos:start="217:36" pos:end="217:36">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="221:9" pos:end="221:16"><expr pos:start="221:9" pos:end="221:15"><name pos:start="221:9" pos:end="221:10">l1</name> <operator pos:start="221:12" pos:end="221:12">=</operator> <name pos:start="221:14" pos:end="221:15">l2</name></expr>;</expr_stmt>

	<expr_stmt pos:start="223:9" pos:end="223:20"><expr pos:start="223:9" pos:end="223:19"><name pos:start="223:9" pos:end="223:12">l1_V</name> <operator pos:start="223:14" pos:end="223:14">=</operator> <name pos:start="223:16" pos:end="223:19">l2_V</name></expr>;</expr_stmt>

      </block_content>}</block></for>

      <for pos:start="227:7" pos:end="233:7">for <control pos:start="227:11" pos:end="227:31">( <init pos:start="227:13" pos:end="227:13">;</init> <condition pos:start="227:15" pos:end="227:26"><expr pos:start="227:15" pos:end="227:25"><name pos:start="227:15" pos:end="227:15">i</name> <operator pos:start="227:17" pos:end="227:17">&lt;</operator> <name pos:start="227:19" pos:end="227:25">chrDstW</name></expr>;</condition> <incr pos:start="227:28" pos:end="227:30"><expr pos:start="227:28" pos:end="227:30"><name pos:start="227:28" pos:end="227:28">i</name><operator pos:start="227:29" pos:end="227:30">++</operator></expr></incr>)</control> <block pos:start="227:33" pos:end="233:7">{<block_content pos:start="229:9" pos:end="231:51">

	<expr_stmt pos:start="229:9" pos:end="229:44"><expr pos:start="229:9" pos:end="229:43"><name pos:start="229:9" pos:end="229:12"><name pos:start="229:9" pos:end="229:9">u</name><index pos:start="229:10" pos:end="229:12">[<expr pos:start="229:11" pos:end="229:11"><name pos:start="229:11" pos:end="229:11">i</name></expr>]</index></name> <operator pos:start="229:14" pos:end="229:15">+=</operator> <name pos:start="229:17" pos:end="229:28"><name pos:start="229:17" pos:end="229:22">chrSrc</name><index pos:start="229:23" pos:end="229:25">[<expr pos:start="229:24" pos:end="229:24"><name pos:start="229:24" pos:end="229:24">j</name></expr>]</index><index pos:start="229:26" pos:end="229:28">[<expr pos:start="229:27" pos:end="229:27"><name pos:start="229:27" pos:end="229:27">i</name></expr>]</index></name> <operator pos:start="229:30" pos:end="229:30">*</operator> <name pos:start="229:32" pos:end="229:43"><name pos:start="229:32" pos:end="229:40">chrFilter</name><index pos:start="229:41" pos:end="229:43">[<expr pos:start="229:42" pos:end="229:42"><name pos:start="229:42" pos:end="229:42">j</name></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt pos:start="231:9" pos:end="231:51"><expr pos:start="231:9" pos:end="231:50"><name pos:start="231:9" pos:end="231:12"><name pos:start="231:9" pos:end="231:9">v</name><index pos:start="231:10" pos:end="231:12">[<expr pos:start="231:11" pos:end="231:11"><name pos:start="231:11" pos:end="231:11">i</name></expr>]</index></name> <operator pos:start="231:14" pos:end="231:15">+=</operator> <name pos:start="231:17" pos:end="231:35"><name pos:start="231:17" pos:end="231:22">chrSrc</name><index pos:start="231:23" pos:end="231:25">[<expr pos:start="231:24" pos:end="231:24"><name pos:start="231:24" pos:end="231:24">j</name></expr>]</index><index pos:start="231:26" pos:end="231:35">[<expr pos:start="231:27" pos:end="231:34"><name pos:start="231:27" pos:end="231:27">i</name> <operator pos:start="231:29" pos:end="231:29">+</operator> <literal type="number" pos:start="231:31" pos:end="231:34">2048</literal></expr>]</index></name> <operator pos:start="231:37" pos:end="231:37">*</operator> <name pos:start="231:39" pos:end="231:50"><name pos:start="231:39" pos:end="231:47">chrFilter</name><index pos:start="231:48" pos:end="231:50">[<expr pos:start="231:49" pos:end="231:49"><name pos:start="231:49" pos:end="231:49">j</name></expr>]</index></name></expr>;</expr_stmt>

      </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="237:5" pos:end="237:53"><expr pos:start="237:5" pos:end="237:52"><call pos:start="237:5" pos:end="237:52"><name pos:start="237:5" pos:end="237:35">altivec_packIntArrayToCharArray</name><argument_list pos:start="237:36" pos:end="237:52">(<argument pos:start="237:37" pos:end="237:37"><expr pos:start="237:37" pos:end="237:37"><name pos:start="237:37" pos:end="237:37">u</name></expr></argument>,<argument pos:start="237:39" pos:end="237:43"><expr pos:start="237:39" pos:end="237:43"><name pos:start="237:39" pos:end="237:43">uDest</name></expr></argument>,<argument pos:start="237:45" pos:end="237:51"><expr pos:start="237:45" pos:end="237:51"><name pos:start="237:45" pos:end="237:51">chrDstW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:53"><expr pos:start="239:5" pos:end="239:52"><call pos:start="239:5" pos:end="239:52"><name pos:start="239:5" pos:end="239:35">altivec_packIntArrayToCharArray</name><argument_list pos:start="239:36" pos:end="239:52">(<argument pos:start="239:37" pos:end="239:37"><expr pos:start="239:37" pos:end="239:37"><name pos:start="239:37" pos:end="239:37">v</name></expr></argument>,<argument pos:start="239:39" pos:end="239:43"><expr pos:start="239:39" pos:end="239:43"><name pos:start="239:39" pos:end="239:43">vDest</name></expr></argument>,<argument pos:start="239:45" pos:end="239:51"><expr pos:start="239:45" pos:end="239:51"><name pos:start="239:45" pos:end="239:51">chrDstW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></if></if_stmt>

</block_content>}</block>
</unit>
