<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20868.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:27"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">device_set_realized</name><parameter_list pos:start="1:32" pos:end="1:70">(<parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:38">Object</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">obj</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:55"><decl pos:start="1:46" pos:end="1:55"><type pos:start="1:46" pos:end="1:55"><name pos:start="1:46" pos:end="1:49">bool</name></type> <name pos:start="1:51" pos:end="1:55">value</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:62">Error</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier><modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">errp</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="77:27">{<block_content pos:start="3:5" pos:end="77:27">
    <decl_stmt pos:start="3:5" pos:end="3:35"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:15">DeviceState</name> <modifier pos:start="3:17" pos:end="3:17">*</modifier></type><name pos:start="3:18" pos:end="3:20">dev</name> <init pos:start="3:22" pos:end="3:34">= <expr pos:start="3:24" pos:end="3:34"><call pos:start="3:24" pos:end="3:34"><name pos:start="3:24" pos:end="3:29">DEVICE</name><argument_list pos:start="3:30" pos:end="3:34">(<argument pos:start="3:31" pos:end="3:33"><expr pos:start="3:31" pos:end="3:33"><name pos:start="3:31" pos:end="3:33">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:44"><decl pos:start="4:5" pos:end="4:43"><type pos:start="4:5" pos:end="4:17"><name pos:start="4:5" pos:end="4:15">DeviceClass</name> <modifier pos:start="4:17" pos:end="4:17">*</modifier></type><name pos:start="4:18" pos:end="4:19">dc</name> <init pos:start="4:21" pos:end="4:43">= <expr pos:start="4:23" pos:end="4:43"><call pos:start="4:23" pos:end="4:43"><name pos:start="4:23" pos:end="4:38">DEVICE_GET_CLASS</name><argument_list pos:start="4:39" pos:end="4:43">(<argument pos:start="4:40" pos:end="4:42"><expr pos:start="4:40" pos:end="4:42"><name pos:start="4:40" pos:end="4:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">HotplugHandler</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:32">hotplug_ctrl</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:18"><decl pos:start="6:5" pos:end="6:17"><type pos:start="6:5" pos:end="6:14"><name pos:start="6:5" pos:end="6:12">BusState</name> <modifier pos:start="6:14" pos:end="6:14">*</modifier></type><name pos:start="6:15" pos:end="6:17">bus</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:20">local_err</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:35"><decl pos:start="8:5" pos:end="8:34"><type pos:start="8:5" pos:end="8:8"><name pos:start="8:5" pos:end="8:8">bool</name></type> <name pos:start="8:10" pos:end="8:26">unattached_parent</name> <init pos:start="8:28" pos:end="8:34">= <expr pos:start="8:30" pos:end="8:34"><name pos:start="8:30" pos:end="8:34">false</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:14"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <name pos:start="9:12" pos:end="9:14">int</name></type> <name pos:start="9:16" pos:end="9:31">unattached_count</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:12"><decl pos:start="10:5" pos:end="10:11"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:11">ret</name></decl>;</decl_stmt>
    <if_stmt pos:start="11:5" pos:end="77:27"><if pos:start="11:5" pos:end="77:27">if <condition pos:start="11:8" pos:end="11:45">(<expr pos:start="11:9" pos:end="11:44"><name pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:11">dev</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:23">hotplugged</name></name> <operator pos:start="11:25" pos:end="11:26">&amp;&amp;</operator> <operator pos:start="11:28" pos:end="11:28">!</operator><name pos:start="11:29" pos:end="11:44"><name pos:start="11:29" pos:end="11:30">dc</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:44">hotpluggable</name></name></expr>)</condition> <block pos:start="11:47" pos:end="77:27">{<block_content pos:start="12:9" pos:end="77:27">
        <expr_stmt pos:start="12:9" pos:end="12:75"><expr pos:start="12:9" pos:end="12:74"><call pos:start="12:9" pos:end="12:74"><name pos:start="12:9" pos:end="12:18">error_setg</name><argument_list pos:start="12:19" pos:end="12:74">(<argument pos:start="12:20" pos:end="12:23"><expr pos:start="12:20" pos:end="12:23"><name pos:start="12:20" pos:end="12:23">errp</name></expr></argument>, <argument pos:start="12:26" pos:end="12:47"><expr pos:start="12:26" pos:end="12:47"><name pos:start="12:26" pos:end="12:47">QERR_DEVICE_NO_HOTPLUG</name></expr></argument>, <argument pos:start="12:50" pos:end="12:73"><expr pos:start="12:50" pos:end="12:73"><call pos:start="12:50" pos:end="12:73"><name pos:start="12:50" pos:end="12:68">object_get_typename</name><argument_list pos:start="12:69" pos:end="12:73">(<argument pos:start="12:70" pos:end="12:72"><expr pos:start="12:70" pos:end="12:72"><name pos:start="12:70" pos:end="12:72">obj</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="13:9" pos:end="13:15">return;</return>
    <if_stmt pos:start="14:5" pos:end="77:27"><if pos:start="14:5" pos:end="77:27">if <condition pos:start="14:8" pos:end="14:32">(<expr pos:start="14:9" pos:end="14:31"><name pos:start="14:9" pos:end="14:13">value</name> <operator pos:start="14:15" pos:end="14:16">&amp;&amp;</operator> <operator pos:start="14:18" pos:end="14:18">!</operator><name pos:start="14:19" pos:end="14:31"><name pos:start="14:19" pos:end="14:21">dev</name><operator pos:start="14:22" pos:end="14:23">-&gt;</operator><name pos:start="14:24" pos:end="14:31">realized</name></name></expr>)</condition> <block pos:start="14:34" pos:end="77:27">{<block_content pos:start="15:9" pos:end="77:27">
        <if_stmt pos:start="15:9" pos:end="77:27"><if pos:start="15:9" pos:end="77:27">if <condition pos:start="15:12" pos:end="15:25">(<expr pos:start="15:13" pos:end="15:24"><operator pos:start="15:13" pos:end="15:13">!</operator><name pos:start="15:14" pos:end="15:24"><name pos:start="15:14" pos:end="15:16">obj</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:24">parent</name></name></expr>)</condition> <block pos:start="15:27" pos:end="77:27">{<block_content pos:start="16:13" pos:end="77:27">
            <decl_stmt pos:start="16:13" pos:end="16:76"><decl pos:start="16:13" pos:end="16:75"><type pos:start="16:13" pos:end="16:19"><name pos:start="16:13" pos:end="16:17">gchar</name> <modifier pos:start="16:19" pos:end="16:19">*</modifier></type><name pos:start="16:20" pos:end="16:23">name</name> <init pos:start="16:25" pos:end="16:75">= <expr pos:start="16:27" pos:end="16:75"><call pos:start="16:27" pos:end="16:75"><name pos:start="16:27" pos:end="16:41">g_strdup_printf</name><argument_list pos:start="16:42" pos:end="16:75">(<argument pos:start="16:43" pos:end="16:54"><expr pos:start="16:43" pos:end="16:54"><literal type="string" pos:start="16:43" pos:end="16:54">"device[%d]"</literal></expr></argument>, <argument pos:start="16:57" pos:end="16:74"><expr pos:start="16:57" pos:end="16:74"><name pos:start="16:57" pos:end="16:72">unattached_count</name><operator pos:start="16:73" pos:end="16:74">++</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="17:13" pos:end="19:63"><expr pos:start="17:13" pos:end="19:62"><call pos:start="17:13" pos:end="19:62"><name pos:start="17:13" pos:end="17:37">object_property_add_child</name><argument_list pos:start="17:38" pos:end="19:62">(<argument pos:start="17:39" pos:end="18:66"><expr pos:start="17:39" pos:end="18:66"><call pos:start="17:39" pos:end="18:66"><name pos:start="17:39" pos:end="17:51">container_get</name><argument_list pos:start="17:52" pos:end="18:66">(<argument pos:start="17:53" pos:end="17:70"><expr pos:start="17:53" pos:end="17:70"><call pos:start="17:53" pos:end="17:70"><name pos:start="17:53" pos:end="17:68">qdev_get_machine</name><argument_list pos:start="17:69" pos:end="17:70">()</argument_list></call></expr></argument>,
                                                    <argument pos:start="18:53" pos:end="18:65"><expr pos:start="18:53" pos:end="18:65"><literal type="string" pos:start="18:53" pos:end="18:65">"/unattached"</literal></expr></argument>)</argument_list></call></expr></argument>,
                                      <argument pos:start="19:39" pos:end="19:42"><expr pos:start="19:39" pos:end="19:42"><name pos:start="19:39" pos:end="19:42">name</name></expr></argument>, <argument pos:start="19:45" pos:end="19:47"><expr pos:start="19:45" pos:end="19:47"><name pos:start="19:45" pos:end="19:47">obj</name></expr></argument>, <argument pos:start="19:50" pos:end="19:61"><expr pos:start="19:50" pos:end="19:61"><operator pos:start="19:50" pos:end="19:50">&amp;</operator><name pos:start="19:51" pos:end="19:61">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:37"><expr pos:start="20:13" pos:end="20:36"><name pos:start="20:13" pos:end="20:29">unattached_parent</name> <operator pos:start="20:31" pos:end="20:31">=</operator> <name pos:start="20:33" pos:end="20:36">true</name></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:25"><expr pos:start="21:13" pos:end="21:24"><call pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:18">g_free</name><argument_list pos:start="21:19" pos:end="21:24">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:53"><expr pos:start="22:9" pos:end="22:52"><name pos:start="22:9" pos:end="22:20">hotplug_ctrl</name> <operator pos:start="22:22" pos:end="22:22">=</operator> <call pos:start="22:24" pos:end="22:52"><name pos:start="22:24" pos:end="22:47">qdev_get_hotplug_handler</name><argument_list pos:start="22:48" pos:end="22:52">(<argument pos:start="22:49" pos:end="22:51"><expr pos:start="22:49" pos:end="22:51"><name pos:start="22:49" pos:end="22:51">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="23:9" pos:end="77:27"><if pos:start="23:9" pos:end="77:27">if <condition pos:start="23:12" pos:end="23:25">(<expr pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:24">hotplug_ctrl</name></expr>)</condition> <block pos:start="23:27" pos:end="77:27">{<block_content pos:start="24:13" pos:end="77:27">
            <expr_stmt pos:start="24:13" pos:end="24:68"><expr pos:start="24:13" pos:end="24:67"><call pos:start="24:13" pos:end="24:67"><name pos:start="24:13" pos:end="24:36">hotplug_handler_pre_plug</name><argument_list pos:start="24:37" pos:end="24:67">(<argument pos:start="24:38" pos:end="24:49"><expr pos:start="24:38" pos:end="24:49"><name pos:start="24:38" pos:end="24:49">hotplug_ctrl</name></expr></argument>, <argument pos:start="24:52" pos:end="24:54"><expr pos:start="24:52" pos:end="24:54"><name pos:start="24:52" pos:end="24:54">dev</name></expr></argument>, <argument pos:start="24:57" pos:end="24:66"><expr pos:start="24:57" pos:end="24:66"><operator pos:start="24:57" pos:end="24:57">&amp;</operator><name pos:start="24:58" pos:end="24:66">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="25:13" pos:end="77:27"><if pos:start="25:13" pos:end="77:27">if <condition pos:start="25:16" pos:end="25:34">(<expr pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:25">local_err</name> <operator pos:start="25:27" pos:end="25:28">!=</operator> <name pos:start="25:30" pos:end="25:33">NULL</name></expr>)</condition> <block pos:start="25:36" pos:end="77:27">{<block_content pos:start="26:9" pos:end="77:27">
        <if_stmt pos:start="26:9" pos:end="77:27"><if pos:start="26:9" pos:end="77:27">if <condition pos:start="26:12" pos:end="26:24">(<expr pos:start="26:13" pos:end="26:23"><name pos:start="26:13" pos:end="26:23"><name pos:start="26:13" pos:end="26:14">dc</name><operator pos:start="26:15" pos:end="26:16">-&gt;</operator><name pos:start="26:17" pos:end="26:23">realize</name></name></expr>)</condition> <block pos:start="26:26" pos:end="77:27">{<block_content pos:start="27:13" pos:end="77:27">
            <expr_stmt pos:start="27:13" pos:end="27:41"><expr pos:start="27:13" pos:end="27:40"><call pos:start="27:13" pos:end="27:40"><name pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:14">dc</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:23">realize</name></name><argument_list pos:start="27:24" pos:end="27:40">(<argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">dev</name></expr></argument>, <argument pos:start="27:30" pos:end="27:39"><expr pos:start="27:30" pos:end="27:39"><operator pos:start="27:30" pos:end="27:30">&amp;</operator><name pos:start="27:31" pos:end="27:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="28:9" pos:end="77:27"><if pos:start="28:9" pos:end="77:27">if <condition pos:start="28:12" pos:end="28:30">(<expr pos:start="28:13" pos:end="28:29"><name pos:start="28:13" pos:end="28:21">local_err</name> <operator pos:start="28:23" pos:end="28:24">!=</operator> <name pos:start="28:26" pos:end="28:29">NULL</name></expr>)</condition> <block pos:start="28:32" pos:end="77:27">{<block_content pos:start="29:9" pos:end="77:27">
        <expr_stmt pos:start="29:9" pos:end="29:52"><expr pos:start="29:9" pos:end="29:51"><call pos:start="29:9" pos:end="29:51"><name pos:start="29:9" pos:end="29:28">DEVICE_LISTENER_CALL</name><argument_list pos:start="29:29" pos:end="29:51">(<argument pos:start="29:30" pos:end="29:36"><expr pos:start="29:30" pos:end="29:36"><name pos:start="29:30" pos:end="29:36">realize</name></expr></argument>, <argument pos:start="29:39" pos:end="29:45"><expr pos:start="29:39" pos:end="29:45"><name pos:start="29:39" pos:end="29:45">Forward</name></expr></argument>, <argument pos:start="29:48" pos:end="29:50"><expr pos:start="29:48" pos:end="29:50"><name pos:start="29:48" pos:end="29:50">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="30:9" pos:end="77:27"><if pos:start="30:9" pos:end="77:27">if <condition pos:start="30:12" pos:end="30:25">(<expr pos:start="30:13" pos:end="30:24"><name pos:start="30:13" pos:end="30:24">hotplug_ctrl</name></expr>)</condition> <block pos:start="30:27" pos:end="77:27">{<block_content pos:start="31:13" pos:end="77:27">
            <expr_stmt pos:start="31:13" pos:end="31:64"><expr pos:start="31:13" pos:end="31:63"><call pos:start="31:13" pos:end="31:63"><name pos:start="31:13" pos:end="31:32">hotplug_handler_plug</name><argument_list pos:start="31:33" pos:end="31:63">(<argument pos:start="31:34" pos:end="31:45"><expr pos:start="31:34" pos:end="31:45"><name pos:start="31:34" pos:end="31:45">hotplug_ctrl</name></expr></argument>, <argument pos:start="31:48" pos:end="31:50"><expr pos:start="31:48" pos:end="31:50"><name pos:start="31:48" pos:end="31:50">dev</name></expr></argument>, <argument pos:start="31:53" pos:end="31:62"><expr pos:start="31:53" pos:end="31:62"><operator pos:start="31:53" pos:end="31:53">&amp;</operator><name pos:start="31:54" pos:end="31:62">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="32:9" pos:end="77:27"><if pos:start="32:9" pos:end="77:27">if <condition pos:start="32:12" pos:end="32:30">(<expr pos:start="32:13" pos:end="32:29"><name pos:start="32:13" pos:end="32:21">local_err</name> <operator pos:start="32:23" pos:end="32:24">!=</operator> <name pos:start="32:26" pos:end="32:29">NULL</name></expr>)</condition> <block pos:start="32:32" pos:end="77:27">{<block_content pos:start="33:13" pos:end="77:27">
            <goto pos:start="33:13" pos:end="33:35">goto <name pos:start="33:18" pos:end="33:34">post_realize_fail</name>;</goto>
        <if_stmt pos:start="34:9" pos:end="77:27"><if pos:start="34:9" pos:end="77:27">if <condition pos:start="34:12" pos:end="34:31">(<expr pos:start="34:13" pos:end="34:30"><call pos:start="34:13" pos:end="34:30"><name pos:start="34:13" pos:end="34:25">qdev_get_vmsd</name><argument_list pos:start="34:26" pos:end="34:30">(<argument pos:start="34:27" pos:end="34:29"><expr pos:start="34:27" pos:end="34:29"><name pos:start="34:27" pos:end="34:29">dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="34:33" pos:end="77:27">{<block_content pos:start="35:13" pos:end="77:27">
            <if_stmt pos:start="35:13" pos:end="77:27"><if pos:start="35:13" pos:end="77:27">if <condition pos:start="35:16" pos:end="38:63">(<expr pos:start="35:17" pos:end="38:62"><call pos:start="35:17" pos:end="38:58"><name pos:start="35:17" pos:end="35:46">vmstate_register_with_alias_id</name><argument_list pos:start="35:47" pos:end="38:58">(<argument pos:start="35:48" pos:end="35:50"><expr pos:start="35:48" pos:end="35:50"><name pos:start="35:48" pos:end="35:50">dev</name></expr></argument>, <argument pos:start="35:53" pos:end="35:54"><expr pos:start="35:53" pos:end="35:54"><operator pos:start="35:53" pos:end="35:53">-</operator><literal type="number" pos:start="35:54" pos:end="35:54">1</literal></expr></argument>, <argument pos:start="35:57" pos:end="35:74"><expr pos:start="35:57" pos:end="35:74"><call pos:start="35:57" pos:end="35:74"><name pos:start="35:57" pos:end="35:69">qdev_get_vmsd</name><argument_list pos:start="35:70" pos:end="35:74">(<argument pos:start="35:71" pos:end="35:73"><expr pos:start="35:71" pos:end="35:73"><name pos:start="35:71" pos:end="35:73">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:77" pos:end="35:79"><expr pos:start="35:77" pos:end="35:79"><name pos:start="35:77" pos:end="35:79">dev</name></expr></argument>,
                                               <argument pos:start="36:48" pos:end="36:69"><expr pos:start="36:48" pos:end="36:69"><name pos:start="36:48" pos:end="36:69"><name pos:start="36:48" pos:end="36:50">dev</name><operator pos:start="36:51" pos:end="36:52">-&gt;</operator><name pos:start="36:53" pos:end="36:69">instance_id_alias</name></name></expr></argument>,
                                               <argument pos:start="37:48" pos:end="37:78"><expr pos:start="37:48" pos:end="37:78"><name pos:start="37:48" pos:end="37:78"><name pos:start="37:48" pos:end="37:50">dev</name><operator pos:start="37:51" pos:end="37:52">-&gt;</operator><name pos:start="37:53" pos:end="37:78">alias_required_for_version</name></name></expr></argument>,
                                               <argument pos:start="38:48" pos:end="38:57"><expr pos:start="38:48" pos:end="38:57"><operator pos:start="38:48" pos:end="38:48">&amp;</operator><name pos:start="38:49" pos:end="38:57">local_err</name></expr></argument>)</argument_list></call> <operator pos:start="38:60" pos:end="38:60">&lt;</operator> <literal type="number" pos:start="38:62" pos:end="38:62">0</literal></expr>)</condition> <block pos:start="38:65" pos:end="77:27">{<block_content pos:start="39:17" pos:end="77:27">
                <goto pos:start="39:17" pos:end="39:39">goto <name pos:start="39:22" pos:end="39:38">post_realize_fail</name>;</goto>
        <macro pos:start="40:9" pos:end="40:52"><name pos:start="40:9" pos:end="40:21">QLIST_FOREACH</name><argument_list pos:start="40:22" pos:end="40:52">(<argument pos:start="40:23" pos:end="40:25">bus</argument>, <argument pos:start="40:28" pos:end="40:42">&amp;dev-&gt;child_bus</argument>, <argument pos:start="40:45" pos:end="40:51">sibling</argument>)</argument_list></macro> <block pos:start="40:54" pos:end="77:27">{<block_content pos:start="41:13" pos:end="77:27">
            <expr_stmt pos:start="41:13" pos:end="42:53"><expr pos:start="41:13" pos:end="42:52"><call pos:start="41:13" pos:end="42:52"><name pos:start="41:13" pos:end="41:36">object_property_set_bool</name><argument_list pos:start="41:37" pos:end="42:52">(<argument pos:start="41:38" pos:end="41:48"><expr pos:start="41:38" pos:end="41:48"><call pos:start="41:38" pos:end="41:48"><name pos:start="41:38" pos:end="41:43">OBJECT</name><argument_list pos:start="41:44" pos:end="41:48">(<argument pos:start="41:45" pos:end="41:47"><expr pos:start="41:45" pos:end="41:47"><name pos:start="41:45" pos:end="41:47">bus</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:51" pos:end="41:54"><expr pos:start="41:51" pos:end="41:54"><name pos:start="41:51" pos:end="41:54">true</name></expr></argument>, <argument pos:start="41:57" pos:end="41:66"><expr pos:start="41:57" pos:end="41:66"><literal type="string" pos:start="41:57" pos:end="41:66">"realized"</literal></expr></argument>,
                                         <argument pos:start="42:42" pos:end="42:51"><expr pos:start="42:42" pos:end="42:51"><operator pos:start="42:42" pos:end="42:42">&amp;</operator><name pos:start="42:43" pos:end="42:51">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="43:13" pos:end="77:27"><if pos:start="43:13" pos:end="77:27">if <condition pos:start="43:16" pos:end="43:34">(<expr pos:start="43:17" pos:end="43:33"><name pos:start="43:17" pos:end="43:25">local_err</name> <operator pos:start="43:27" pos:end="43:28">!=</operator> <name pos:start="43:30" pos:end="43:33">NULL</name></expr>)</condition> <block pos:start="43:36" pos:end="77:27">{<block_content pos:start="44:17" pos:end="77:27">
                <goto pos:start="44:17" pos:end="44:40">goto <name pos:start="44:22" pos:end="44:39">child_realize_fail</name>;</goto>
        <if_stmt pos:start="45:9" pos:end="77:27"><if pos:start="45:9" pos:end="48:5">if <condition pos:start="45:12" pos:end="45:28">(<expr pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:15">dev</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:27">hotplugged</name></name></expr>)</condition> <block pos:start="45:30" pos:end="48:5">{<block_content pos:start="46:13" pos:end="47:43">
            <expr_stmt pos:start="46:13" pos:end="46:30"><expr pos:start="46:13" pos:end="46:29"><call pos:start="46:13" pos:end="46:29"><name pos:start="46:13" pos:end="46:24">device_reset</name><argument_list pos:start="46:25" pos:end="46:29">(<argument pos:start="46:26" pos:end="46:28"><expr pos:start="46:26" pos:end="46:28"><name pos:start="46:26" pos:end="46:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="47:9" pos:end="47:43"><expr pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:34"><name pos:start="47:9" pos:end="47:11">dev</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:34">pending_deleted_event</name></name> <operator pos:start="47:36" pos:end="47:36">=</operator> <name pos:start="47:38" pos:end="47:42">false</name></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="48:7" pos:end="77:27">else if <condition pos:start="48:15" pos:end="48:39">(<expr pos:start="48:16" pos:end="48:38"><operator pos:start="48:16" pos:end="48:16">!</operator><name pos:start="48:17" pos:end="48:21">value</name> <operator pos:start="48:23" pos:end="48:24">&amp;&amp;</operator> <name pos:start="48:26" pos:end="48:38"><name pos:start="48:26" pos:end="48:28">dev</name><operator pos:start="48:29" pos:end="48:30">-&gt;</operator><name pos:start="48:31" pos:end="48:38">realized</name></name></expr>)</condition> <block pos:start="48:41" pos:end="77:27">{<block_content pos:start="49:9" pos:end="77:27">
        <decl_stmt pos:start="49:9" pos:end="49:34"><decl pos:start="49:9" pos:end="49:33"><type pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:13">Error</name> <modifier pos:start="49:15" pos:end="49:15">*</modifier><modifier pos:start="49:16" pos:end="49:16">*</modifier></type><name pos:start="49:17" pos:end="49:26">local_errp</name> <init pos:start="49:28" pos:end="49:33">= <expr pos:start="49:30" pos:end="49:33"><name pos:start="49:30" pos:end="49:33">NULL</name></expr></init></decl>;</decl_stmt>
        <macro pos:start="50:9" pos:end="50:52"><name pos:start="50:9" pos:end="50:21">QLIST_FOREACH</name><argument_list pos:start="50:22" pos:end="50:52">(<argument pos:start="50:23" pos:end="50:25">bus</argument>, <argument pos:start="50:28" pos:end="50:42">&amp;dev-&gt;child_bus</argument>, <argument pos:start="50:45" pos:end="50:51">sibling</argument>)</argument_list></macro> <block pos:start="50:54" pos:end="77:27">{<block_content pos:start="51:13" pos:end="77:27">
            <expr_stmt pos:start="51:13" pos:end="51:55"><expr pos:start="51:13" pos:end="51:54"><name pos:start="51:13" pos:end="51:22">local_errp</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <ternary pos:start="51:26" pos:end="51:54"><condition pos:start="51:26" pos:end="51:36"><expr pos:start="51:26" pos:end="51:34"><name pos:start="51:26" pos:end="51:34">local_err</name></expr> ?</condition><then pos:start="51:38" pos:end="51:41"> <expr pos:start="51:38" pos:end="51:41"><name pos:start="51:38" pos:end="51:41">NULL</name></expr> </then><else pos:start="51:43" pos:end="51:54">: <expr pos:start="51:45" pos:end="51:54"><operator pos:start="51:45" pos:end="51:45">&amp;</operator><name pos:start="51:46" pos:end="51:54">local_err</name></expr></else></ternary></expr>;</expr_stmt>
            <expr_stmt pos:start="52:13" pos:end="53:49"><expr pos:start="52:13" pos:end="53:48"><call pos:start="52:13" pos:end="53:48"><name pos:start="52:13" pos:end="52:36">object_property_set_bool</name><argument_list pos:start="52:37" pos:end="53:48">(<argument pos:start="52:38" pos:end="52:48"><expr pos:start="52:38" pos:end="52:48"><call pos:start="52:38" pos:end="52:48"><name pos:start="52:38" pos:end="52:43">OBJECT</name><argument_list pos:start="52:44" pos:end="52:48">(<argument pos:start="52:45" pos:end="52:47"><expr pos:start="52:45" pos:end="52:47"><name pos:start="52:45" pos:end="52:47">bus</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="52:51" pos:end="52:55"><expr pos:start="52:51" pos:end="52:55"><name pos:start="52:51" pos:end="52:55">false</name></expr></argument>, <argument pos:start="52:58" pos:end="52:67"><expr pos:start="52:58" pos:end="52:67"><literal type="string" pos:start="52:58" pos:end="52:67">"realized"</literal></expr></argument>,
                                     <argument pos:start="53:38" pos:end="53:47"><expr pos:start="53:38" pos:end="53:47"><name pos:start="53:38" pos:end="53:47">local_errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="54:9" pos:end="77:27"><if pos:start="54:9" pos:end="77:27">if <condition pos:start="54:12" pos:end="54:31">(<expr pos:start="54:13" pos:end="54:30"><call pos:start="54:13" pos:end="54:30"><name pos:start="54:13" pos:end="54:25">qdev_get_vmsd</name><argument_list pos:start="54:26" pos:end="54:30">(<argument pos:start="54:27" pos:end="54:29"><expr pos:start="54:27" pos:end="54:29"><name pos:start="54:27" pos:end="54:29">dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="54:33" pos:end="77:27">{<block_content pos:start="55:13" pos:end="77:27">
            <expr_stmt pos:start="55:13" pos:end="55:61"><expr pos:start="55:13" pos:end="55:60"><call pos:start="55:13" pos:end="55:60"><name pos:start="55:13" pos:end="55:30">vmstate_unregister</name><argument_list pos:start="55:31" pos:end="55:60">(<argument pos:start="55:32" pos:end="55:34"><expr pos:start="55:32" pos:end="55:34"><name pos:start="55:32" pos:end="55:34">dev</name></expr></argument>, <argument pos:start="55:37" pos:end="55:54"><expr pos:start="55:37" pos:end="55:54"><call pos:start="55:37" pos:end="55:54"><name pos:start="55:37" pos:end="55:49">qdev_get_vmsd</name><argument_list pos:start="55:50" pos:end="55:54">(<argument pos:start="55:51" pos:end="55:53"><expr pos:start="55:51" pos:end="55:53"><name pos:start="55:51" pos:end="55:53">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:57" pos:end="55:59"><expr pos:start="55:57" pos:end="55:59"><name pos:start="55:57" pos:end="55:59">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="56:9" pos:end="77:27"><if pos:start="56:9" pos:end="77:27">if <condition pos:start="56:12" pos:end="56:26">(<expr pos:start="56:13" pos:end="56:25"><name pos:start="56:13" pos:end="56:25"><name pos:start="56:13" pos:end="56:14">dc</name><operator pos:start="56:15" pos:end="56:16">-&gt;</operator><name pos:start="56:17" pos:end="56:25">unrealize</name></name></expr>)</condition> <block pos:start="56:28" pos:end="77:27">{<block_content pos:start="57:13" pos:end="77:27">
            <expr_stmt pos:start="57:13" pos:end="57:55"><expr pos:start="57:13" pos:end="57:54"><name pos:start="57:13" pos:end="57:22">local_errp</name> <operator pos:start="57:24" pos:end="57:24">=</operator> <ternary pos:start="57:26" pos:end="57:54"><condition pos:start="57:26" pos:end="57:36"><expr pos:start="57:26" pos:end="57:34"><name pos:start="57:26" pos:end="57:34">local_err</name></expr> ?</condition><then pos:start="57:38" pos:end="57:41"> <expr pos:start="57:38" pos:end="57:41"><name pos:start="57:38" pos:end="57:41">NULL</name></expr> </then><else pos:start="57:43" pos:end="57:54">: <expr pos:start="57:45" pos:end="57:54"><operator pos:start="57:45" pos:end="57:45">&amp;</operator><name pos:start="57:46" pos:end="57:54">local_err</name></expr></else></ternary></expr>;</expr_stmt>
            <expr_stmt pos:start="58:13" pos:end="58:43"><expr pos:start="58:13" pos:end="58:42"><call pos:start="58:13" pos:end="58:42"><name pos:start="58:13" pos:end="58:25"><name pos:start="58:13" pos:end="58:14">dc</name><operator pos:start="58:15" pos:end="58:16">-&gt;</operator><name pos:start="58:17" pos:end="58:25">unrealize</name></name><argument_list pos:start="58:26" pos:end="58:42">(<argument pos:start="58:27" pos:end="58:29"><expr pos:start="58:27" pos:end="58:29"><name pos:start="58:27" pos:end="58:29">dev</name></expr></argument>, <argument pos:start="58:32" pos:end="58:41"><expr pos:start="58:32" pos:end="58:41"><name pos:start="58:32" pos:end="58:41">local_errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="59:9" pos:end="59:42"><expr pos:start="59:9" pos:end="59:41"><name pos:start="59:9" pos:end="59:34"><name pos:start="59:9" pos:end="59:11">dev</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:34">pending_deleted_event</name></name> <operator pos:start="59:36" pos:end="59:36">=</operator> <name pos:start="59:38" pos:end="59:41">true</name></expr>;</expr_stmt>
        <expr_stmt pos:start="60:9" pos:end="60:54"><expr pos:start="60:9" pos:end="60:53"><call pos:start="60:9" pos:end="60:53"><name pos:start="60:9" pos:end="60:28">DEVICE_LISTENER_CALL</name><argument_list pos:start="60:29" pos:end="60:53">(<argument pos:start="60:30" pos:end="60:38"><expr pos:start="60:30" pos:end="60:38"><name pos:start="60:30" pos:end="60:38">unrealize</name></expr></argument>, <argument pos:start="60:41" pos:end="60:47"><expr pos:start="60:41" pos:end="60:47"><name pos:start="60:41" pos:end="60:47">Reverse</name></expr></argument>, <argument pos:start="60:50" pos:end="60:52"><expr pos:start="60:50" pos:end="60:52"><name pos:start="60:50" pos:end="60:52">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="61:5" pos:end="77:27"><if pos:start="61:5" pos:end="77:27">if <condition pos:start="61:8" pos:end="61:26">(<expr pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:17">local_err</name> <operator pos:start="61:19" pos:end="61:20">!=</operator> <name pos:start="61:22" pos:end="61:25">NULL</name></expr>)</condition> <block pos:start="61:28" pos:end="77:27">{<block_content pos:start="62:5" pos:end="77:27">
    <expr_stmt pos:start="62:5" pos:end="62:26"><expr pos:start="62:5" pos:end="62:25"><name pos:start="62:5" pos:end="62:17"><name pos:start="62:5" pos:end="62:7">dev</name><operator pos:start="62:8" pos:end="62:9">-&gt;</operator><name pos:start="62:10" pos:end="62:17">realized</name></name> <operator pos:start="62:19" pos:end="62:19">=</operator> <name pos:start="62:21" pos:end="62:25">value</name></expr>;</expr_stmt>
    <return pos:start="63:5" pos:end="63:11">return;</return>
<label pos:start="64:1" pos:end="64:19"><name pos:start="64:1" pos:end="64:18">child_realize_fail</name>:</label>
    <macro pos:start="65:5" pos:end="65:48"><name pos:start="65:5" pos:end="65:17">QLIST_FOREACH</name><argument_list pos:start="65:18" pos:end="65:48">(<argument pos:start="65:19" pos:end="65:21">bus</argument>, <argument pos:start="65:24" pos:end="65:38">&amp;dev-&gt;child_bus</argument>, <argument pos:start="65:41" pos:end="65:47">sibling</argument>)</argument_list></macro> <block pos:start="65:50" pos:end="77:27">{<block_content pos:start="66:9" pos:end="77:27">
        <expr_stmt pos:start="66:9" pos:end="67:39"><expr pos:start="66:9" pos:end="67:38"><call pos:start="66:9" pos:end="67:38"><name pos:start="66:9" pos:end="66:32">object_property_set_bool</name><argument_list pos:start="66:33" pos:end="67:38">(<argument pos:start="66:34" pos:end="66:44"><expr pos:start="66:34" pos:end="66:44"><call pos:start="66:34" pos:end="66:44"><name pos:start="66:34" pos:end="66:39">OBJECT</name><argument_list pos:start="66:40" pos:end="66:44">(<argument pos:start="66:41" pos:end="66:43"><expr pos:start="66:41" pos:end="66:43"><name pos:start="66:41" pos:end="66:43">bus</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="66:47" pos:end="66:51"><expr pos:start="66:47" pos:end="66:51"><name pos:start="66:47" pos:end="66:51">false</name></expr></argument>, <argument pos:start="66:54" pos:end="66:63"><expr pos:start="66:54" pos:end="66:63"><literal type="string" pos:start="66:54" pos:end="66:63">"realized"</literal></expr></argument>,
                                 <argument pos:start="67:34" pos:end="67:37"><expr pos:start="67:34" pos:end="67:37"><name pos:start="67:34" pos:end="67:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="68:5" pos:end="77:27"><if pos:start="68:5" pos:end="77:27">if <condition pos:start="68:8" pos:end="68:27">(<expr pos:start="68:9" pos:end="68:26"><call pos:start="68:9" pos:end="68:26"><name pos:start="68:9" pos:end="68:21">qdev_get_vmsd</name><argument_list pos:start="68:22" pos:end="68:26">(<argument pos:start="68:23" pos:end="68:25"><expr pos:start="68:23" pos:end="68:25"><name pos:start="68:23" pos:end="68:25">dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="68:29" pos:end="77:27">{<block_content pos:start="69:9" pos:end="77:27">
        <expr_stmt pos:start="69:9" pos:end="69:57"><expr pos:start="69:9" pos:end="69:56"><call pos:start="69:9" pos:end="69:56"><name pos:start="69:9" pos:end="69:26">vmstate_unregister</name><argument_list pos:start="69:27" pos:end="69:56">(<argument pos:start="69:28" pos:end="69:30"><expr pos:start="69:28" pos:end="69:30"><name pos:start="69:28" pos:end="69:30">dev</name></expr></argument>, <argument pos:start="69:33" pos:end="69:50"><expr pos:start="69:33" pos:end="69:50"><call pos:start="69:33" pos:end="69:50"><name pos:start="69:33" pos:end="69:45">qdev_get_vmsd</name><argument_list pos:start="69:46" pos:end="69:50">(<argument pos:start="69:47" pos:end="69:49"><expr pos:start="69:47" pos:end="69:49"><name pos:start="69:47" pos:end="69:49">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:53" pos:end="69:55"><expr pos:start="69:53" pos:end="69:55"><name pos:start="69:53" pos:end="69:55">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label pos:start="70:1" pos:end="70:18"><name pos:start="70:1" pos:end="70:17">post_realize_fail</name>:</label>
    <if_stmt pos:start="71:5" pos:end="77:27"><if pos:start="71:5" pos:end="77:27">if <condition pos:start="71:8" pos:end="71:22">(<expr pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:10">dc</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:21">unrealize</name></name></expr>)</condition> <block pos:start="71:24" pos:end="77:27">{<block_content pos:start="72:9" pos:end="77:27">
        <expr_stmt pos:start="72:9" pos:end="72:33"><expr pos:start="72:9" pos:end="72:32"><call pos:start="72:9" pos:end="72:32"><name pos:start="72:9" pos:end="72:21"><name pos:start="72:9" pos:end="72:10">dc</name><operator pos:start="72:11" pos:end="72:12">-&gt;</operator><name pos:start="72:13" pos:end="72:21">unrealize</name></name><argument_list pos:start="72:22" pos:end="72:32">(<argument pos:start="72:23" pos:end="72:25"><expr pos:start="72:23" pos:end="72:25"><name pos:start="72:23" pos:end="72:25">dev</name></expr></argument>, <argument pos:start="72:28" pos:end="72:31"><expr pos:start="72:28" pos:end="72:31"><name pos:start="72:28" pos:end="72:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label pos:start="73:1" pos:end="73:5"><name pos:start="73:1" pos:end="73:4">fail</name>:</label>
    <expr_stmt pos:start="74:5" pos:end="74:37"><expr pos:start="74:5" pos:end="74:36"><call pos:start="74:5" pos:end="74:36"><name pos:start="74:5" pos:end="74:19">error_propagate</name><argument_list pos:start="74:20" pos:end="74:36">(<argument pos:start="74:21" pos:end="74:24"><expr pos:start="74:21" pos:end="74:24"><name pos:start="74:21" pos:end="74:24">errp</name></expr></argument>, <argument pos:start="74:27" pos:end="74:35"><expr pos:start="74:27" pos:end="74:35"><name pos:start="74:27" pos:end="74:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="75:5" pos:end="77:27"><if pos:start="75:5" pos:end="77:27">if <condition pos:start="75:8" pos:end="75:26">(<expr pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:25">unattached_parent</name></expr>)</condition> <block pos:start="75:28" pos:end="77:27">{<block_content pos:start="76:9" pos:end="77:27">
        <expr_stmt pos:start="76:9" pos:end="76:37"><expr pos:start="76:9" pos:end="76:36"><call pos:start="76:9" pos:end="76:36"><name pos:start="76:9" pos:end="76:23">object_unparent</name><argument_list pos:start="76:24" pos:end="76:36">(<argument pos:start="76:25" pos:end="76:35"><expr pos:start="76:25" pos:end="76:35"><call pos:start="76:25" pos:end="76:35"><name pos:start="76:25" pos:end="76:30">OBJECT</name><argument_list pos:start="76:31" pos:end="76:35">(<argument pos:start="76:32" pos:end="76:34"><expr pos:start="76:32" pos:end="76:34"><name pos:start="76:32" pos:end="76:34">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="77:9" pos:end="77:27"><expr pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:24">unattached_count</name><operator pos:start="77:25" pos:end="77:26">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
