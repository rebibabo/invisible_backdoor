<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17875.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">ssize_t</name></type> <name pos:start="1:9" pos:end="1:25">qemu_sendv_packet</name><parameter_list pos:start="1:26" pos:end="3:37">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:41">VLANClientState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">vc1</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:71"><decl pos:start="1:49" pos:end="1:71"><type pos:start="1:49" pos:end="1:71"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:60">struct</name> <name pos:start="1:62" pos:end="1:66">iovec</name></name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">iov</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:36"><decl pos:start="3:27" pos:end="3:36"><type pos:start="3:27" pos:end="3:36"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:36">iovcnt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:19">

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">VLANState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:19">vlan</name> <init pos:start="7:21" pos:end="7:31">= <expr pos:start="7:23" pos:end="7:31"><name pos:start="7:23" pos:end="7:31"><name pos:start="7:23" pos:end="7:25">vc1</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:31">vlan</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">VLANClientState</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:23">vc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">ssize_t</name></type> <name pos:start="11:13" pos:end="11:19">max_len</name> <init pos:start="11:21" pos:end="11:23">= <expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:44"><if pos:start="15:5" pos:end="17:44">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:11">vc1</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:22">link_down</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:44"><block_content pos:start="17:9" pos:end="17:44">

        <return pos:start="17:9" pos:end="17:44">return <expr pos:start="17:16" pos:end="17:43"><call pos:start="17:16" pos:end="17:43"><name pos:start="17:16" pos:end="17:30">calc_iov_length</name><argument_list pos:start="17:31" pos:end="17:43">(<argument pos:start="17:32" pos:end="17:34"><expr pos:start="17:32" pos:end="17:34"><name pos:start="17:32" pos:end="17:34">iov</name></expr></argument>, <argument pos:start="17:37" pos:end="17:42"><expr pos:start="17:37" pos:end="17:42"><name pos:start="17:37" pos:end="17:42">iovcnt</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="21:5" pos:end="49:5">for <control pos:start="21:9" pos:end="21:60">(<init pos:start="21:10" pos:end="21:33"><expr pos:start="21:10" pos:end="21:32"><name pos:start="21:10" pos:end="21:11">vc</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:32"><name pos:start="21:15" pos:end="21:18">vlan</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:32">first_client</name></name></expr>;</init> <condition pos:start="21:35" pos:end="21:45"><expr pos:start="21:35" pos:end="21:44"><name pos:start="21:35" pos:end="21:36">vc</name> <operator pos:start="21:38" pos:end="21:39">!=</operator> <name pos:start="21:41" pos:end="21:44">NULL</name></expr>;</condition> <incr pos:start="21:47" pos:end="21:59"><expr pos:start="21:47" pos:end="21:59"><name pos:start="21:47" pos:end="21:48">vc</name> <operator pos:start="21:50" pos:end="21:50">=</operator> <name pos:start="21:52" pos:end="21:59"><name pos:start="21:52" pos:end="21:53">vc</name><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:59">next</name></name></expr></incr>)</control> <block pos:start="21:62" pos:end="49:5">{<block_content pos:start="23:9" pos:end="47:36">

        <decl_stmt pos:start="23:9" pos:end="23:24"><decl pos:start="23:9" pos:end="23:23"><type pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:15">ssize_t</name></type> <name pos:start="23:17" pos:end="23:19">len</name> <init pos:start="23:21" pos:end="23:23">= <expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if <condition pos:start="27:12" pos:end="27:22">(<expr pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:14">vc</name> <operator pos:start="27:16" pos:end="27:17">==</operator> <name pos:start="27:19" pos:end="27:21">vc1</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <continue pos:start="29:13" pos:end="29:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="33:9" pos:end="43:51"><if pos:start="33:9" pos:end="35:47">if <condition pos:start="33:12" pos:end="33:26">(<expr pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:14">vc</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:25">link_down</name></name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:47"><block_content pos:start="35:13" pos:end="35:47">

            <expr_stmt pos:start="35:13" pos:end="35:47"><expr pos:start="35:13" pos:end="35:46"><name pos:start="35:13" pos:end="35:15">len</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:46"><name pos:start="35:19" pos:end="35:33">calc_iov_length</name><argument_list pos:start="35:34" pos:end="35:46">(<argument pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><name pos:start="35:35" pos:end="35:37">iov</name></expr></argument>, <argument pos:start="35:40" pos:end="35:45"><expr pos:start="35:40" pos:end="35:45"><name pos:start="35:40" pos:end="35:45">iovcnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="37:9" pos:end="39:56">else if <condition pos:start="37:17" pos:end="37:30">(<expr pos:start="37:18" pos:end="37:29"><name pos:start="37:18" pos:end="37:29"><name pos:start="37:18" pos:end="37:19">vc</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:29">fd_readv</name></name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:56"><block_content pos:start="39:13" pos:end="39:56">

            <expr_stmt pos:start="39:13" pos:end="39:56"><expr pos:start="39:13" pos:end="39:55"><name pos:start="39:13" pos:end="39:15">len</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:55"><name pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:20">vc</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:30">fd_readv</name></name><argument_list pos:start="39:31" pos:end="39:55">(<argument pos:start="39:32" pos:end="39:41"><expr pos:start="39:32" pos:end="39:41"><name pos:start="39:32" pos:end="39:41"><name pos:start="39:32" pos:end="39:33">vc</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:41">opaque</name></name></expr></argument>, <argument pos:start="39:44" pos:end="39:46"><expr pos:start="39:44" pos:end="39:46"><name pos:start="39:44" pos:end="39:46">iov</name></expr></argument>, <argument pos:start="39:49" pos:end="39:54"><expr pos:start="39:49" pos:end="39:54"><name pos:start="39:49" pos:end="39:54">iovcnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="41:9" pos:end="43:51">else if <condition pos:start="41:17" pos:end="41:29">(<expr pos:start="41:18" pos:end="41:28"><name pos:start="41:18" pos:end="41:28"><name pos:start="41:18" pos:end="41:19">vc</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:28">fd_read</name></name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:51"><block_content pos:start="43:13" pos:end="43:51">

            <expr_stmt pos:start="43:13" pos:end="43:51"><expr pos:start="43:13" pos:end="43:50"><name pos:start="43:13" pos:end="43:15">len</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:50"><name pos:start="43:19" pos:end="43:33">vc_sendv_compat</name><argument_list pos:start="43:34" pos:end="43:50">(<argument pos:start="43:35" pos:end="43:36"><expr pos:start="43:35" pos:end="43:36"><name pos:start="43:35" pos:end="43:36">vc</name></expr></argument>, <argument pos:start="43:39" pos:end="43:41"><expr pos:start="43:39" pos:end="43:41"><name pos:start="43:39" pos:end="43:41">iov</name></expr></argument>, <argument pos:start="43:44" pos:end="43:49"><expr pos:start="43:44" pos:end="43:49"><name pos:start="43:44" pos:end="43:49">iovcnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:36"><expr pos:start="47:9" pos:end="47:35"><name pos:start="47:9" pos:end="47:15">max_len</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <call pos:start="47:19" pos:end="47:35"><name pos:start="47:19" pos:end="47:21">MAX</name><argument_list pos:start="47:22" pos:end="47:35">(<argument pos:start="47:23" pos:end="47:29"><expr pos:start="47:23" pos:end="47:29"><name pos:start="47:23" pos:end="47:29">max_len</name></expr></argument>, <argument pos:start="47:32" pos:end="47:34"><expr pos:start="47:32" pos:end="47:34"><name pos:start="47:32" pos:end="47:34">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="53:5" pos:end="53:19">return <expr pos:start="53:12" pos:end="53:18"><name pos:start="53:12" pos:end="53:18">max_len</name></expr>;</return>

</block_content>}</block></function>
</unit>
