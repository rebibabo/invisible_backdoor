<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26297.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:21"><name pos:start="1:1" pos:end="1:10">DISAS_INSN</name><argument_list pos:start="1:11" pos:end="1:21">(<argument pos:start="1:12" pos:end="1:20">shift_reg</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:30">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:12">reg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">TCGv</name></type> <name pos:start="7:10" pos:end="7:14">shift</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:7">reg</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:23"><name pos:start="11:11" pos:end="11:14">DREG</name><argument_list pos:start="11:15" pos:end="11:23">(<argument pos:start="11:16" pos:end="11:19"><expr pos:start="11:16" pos:end="11:19"><name pos:start="11:16" pos:end="11:19">insn</name></expr></argument>, <argument pos:start="11:22" pos:end="11:22"><expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:26"><expr pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:9">shift</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:25"><name pos:start="13:13" pos:end="13:16">DREG</name><argument_list pos:start="13:17" pos:end="13:25">(<argument pos:start="13:18" pos:end="13:21"><expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:21">insn</name></expr></argument>, <argument pos:start="13:24" pos:end="13:24"><expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="31:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:21">(<expr pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:12">insn</name> <operator pos:start="15:14" pos:end="15:14">&amp;</operator> <literal type="number" pos:start="15:16" pos:end="15:20">0x100</literal></expr>)</condition> <block pos:start="15:23" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:52">

        <expr_stmt pos:start="17:9" pos:end="17:52"><expr pos:start="17:9" pos:end="17:51"><call pos:start="17:9" pos:end="17:51"><name pos:start="17:9" pos:end="17:25">gen_helper_shl_cc</name><argument_list pos:start="17:26" pos:end="17:51">(<argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:29">reg</name></expr></argument>, <argument pos:start="17:32" pos:end="17:38"><expr pos:start="17:32" pos:end="17:38"><name pos:start="17:32" pos:end="17:38">cpu_env</name></expr></argument>, <argument pos:start="17:41" pos:end="17:43"><expr pos:start="17:41" pos:end="17:43"><name pos:start="17:41" pos:end="17:43">reg</name></expr></argument>, <argument pos:start="17:46" pos:end="17:50"><expr pos:start="17:46" pos:end="17:50"><name pos:start="17:46" pos:end="17:50">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="31:5">else <block pos:start="19:12" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:9">

        <if_stmt pos:start="21:9" pos:end="29:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:21">(<expr pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:16">insn</name> <operator pos:start="21:18" pos:end="21:18">&amp;</operator> <literal type="number" pos:start="21:20" pos:end="21:20">8</literal></expr>)</condition> <block pos:start="21:23" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:56">

            <expr_stmt pos:start="23:13" pos:end="23:56"><expr pos:start="23:13" pos:end="23:55"><call pos:start="23:13" pos:end="23:55"><name pos:start="23:13" pos:end="23:29">gen_helper_shr_cc</name><argument_list pos:start="23:30" pos:end="23:55">(<argument pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:33">reg</name></expr></argument>, <argument pos:start="23:36" pos:end="23:42"><expr pos:start="23:36" pos:end="23:42"><name pos:start="23:36" pos:end="23:42">cpu_env</name></expr></argument>, <argument pos:start="23:45" pos:end="23:47"><expr pos:start="23:45" pos:end="23:47"><name pos:start="23:45" pos:end="23:47">reg</name></expr></argument>, <argument pos:start="23:50" pos:end="23:54"><expr pos:start="23:50" pos:end="23:54"><name pos:start="23:50" pos:end="23:54">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="25:11" pos:end="29:9">else <block pos:start="25:16" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:56">

            <expr_stmt pos:start="27:13" pos:end="27:56"><expr pos:start="27:13" pos:end="27:55"><call pos:start="27:13" pos:end="27:55"><name pos:start="27:13" pos:end="27:29">gen_helper_sar_cc</name><argument_list pos:start="27:30" pos:end="27:55">(<argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><name pos:start="27:31" pos:end="27:33">reg</name></expr></argument>, <argument pos:start="27:36" pos:end="27:42"><expr pos:start="27:36" pos:end="27:42"><name pos:start="27:36" pos:end="27:42">cpu_env</name></expr></argument>, <argument pos:start="27:45" pos:end="27:47"><expr pos:start="27:45" pos:end="27:47"><name pos:start="27:45" pos:end="27:47">reg</name></expr></argument>, <argument pos:start="27:50" pos:end="27:54"><expr pos:start="27:50" pos:end="27:54"><name pos:start="27:50" pos:end="27:54">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><call pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:13">set_cc_op</name><argument_list pos:start="33:14" pos:end="33:29">(<argument pos:start="33:15" pos:end="33:15"><expr pos:start="33:15" pos:end="33:15"><name pos:start="33:15" pos:end="33:15">s</name></expr></argument>, <argument pos:start="33:18" pos:end="33:28"><expr pos:start="33:18" pos:end="33:28"><name pos:start="33:18" pos:end="33:28">CC_OP_FLAGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
