<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3674.c" pos:tabs="8"><function pos:start="1:1" pos:end="277:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:41">yuvPlanartoyuy2</name>)<parameter_list pos:start="1:43" pos:end="5:80">(<parameter pos:start="1:44" pos:end="1:62"><decl pos:start="1:44" pos:end="1:62"><type pos:start="1:44" pos:end="1:62"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">ysrc</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:83"><decl pos:start="1:65" pos:end="1:83"><type pos:start="1:65" pos:end="1:83"><specifier pos:start="1:65" pos:end="1:69">const</specifier> <name pos:start="1:71" pos:end="1:77">uint8_t</name> <modifier pos:start="1:79" pos:end="1:79">*</modifier></type><name pos:start="1:80" pos:end="1:83">usrc</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:104"><decl pos:start="1:86" pos:end="1:104"><type pos:start="1:86" pos:end="1:104"><specifier pos:start="1:86" pos:end="1:90">const</specifier> <name pos:start="1:92" pos:end="1:98">uint8_t</name> <modifier pos:start="1:100" pos:end="1:100">*</modifier></type><name pos:start="1:101" pos:end="1:104">vsrc</name></decl></parameter>, <parameter pos:start="1:107" pos:end="1:118"><decl pos:start="1:107" pos:end="1:118"><type pos:start="1:107" pos:end="1:118"><name pos:start="1:107" pos:end="1:113">uint8_t</name> <modifier pos:start="1:115" pos:end="1:115">*</modifier></type><name pos:start="1:116" pos:end="1:118">dst</name></decl></parameter>,

	<parameter pos:start="3:9" pos:end="3:18"><decl pos:start="3:9" pos:end="3:18"><type pos:start="3:9" pos:end="3:18"><name pos:start="3:9" pos:end="3:12">long</name></type> <name pos:start="3:14" pos:end="3:18">width</name></decl></parameter>, <parameter pos:start="3:21" pos:end="3:31"><decl pos:start="3:21" pos:end="3:31"><type pos:start="3:21" pos:end="3:31"><name pos:start="3:21" pos:end="3:24">long</name></type> <name pos:start="3:26" pos:end="3:31">height</name></decl></parameter>,

	<parameter pos:start="5:9" pos:end="5:22"><decl pos:start="5:9" pos:end="5:22"><type pos:start="5:9" pos:end="5:22"><name pos:start="5:9" pos:end="5:12">long</name></type> <name pos:start="5:14" pos:end="5:22">lumStride</name></decl></parameter>, <parameter pos:start="5:25" pos:end="5:40"><decl pos:start="5:25" pos:end="5:40"><type pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:28">long</name></type> <name pos:start="5:30" pos:end="5:40">chromStride</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:56"><decl pos:start="5:43" pos:end="5:56"><type pos:start="5:43" pos:end="5:56"><name pos:start="5:43" pos:end="5:46">long</name></type> <name pos:start="5:48" pos:end="5:56">dstStride</name></decl></parameter>, <parameter pos:start="5:59" pos:end="5:79"><decl pos:start="5:59" pos:end="5:79"><type pos:start="5:59" pos:end="5:79"><name pos:start="5:59" pos:end="5:62">long</name></type> <name pos:start="5:64" pos:end="5:79">vertLumPerChroma</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="277:1">{<block_content pos:start="9:9" pos:end="276:0">

	<decl_stmt pos:start="9:9" pos:end="9:15"><decl pos:start="9:9" pos:end="9:14"><type pos:start="9:9" pos:end="9:12"><name pos:start="9:9" pos:end="9:12">long</name></type> <name pos:start="9:14" pos:end="9:14">y</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:40"><decl pos:start="11:9" pos:end="11:39"><type pos:start="11:9" pos:end="11:18"><specifier pos:start="11:9" pos:end="11:13">const</specifier> <name pos:start="11:15" pos:end="11:18">long</name></type> <name pos:start="11:20" pos:end="11:29">chromWidth</name><init pos:start="11:30" pos:end="11:39">= <expr pos:start="11:32" pos:end="11:39"><name pos:start="11:32" pos:end="11:36">width</name><operator pos:start="11:37" pos:end="11:38">&gt;&gt;</operator><literal type="number" pos:start="11:39" pos:end="11:39">1</literal></expr></init></decl>;</decl_stmt>

	<for pos:start="13:9" pos:end="268:0">for<control pos:start="13:12" pos:end="13:31">(<init pos:start="13:13" pos:end="13:16"><expr pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:13">y</name><operator pos:start="13:14" pos:end="13:14">=</operator><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>;</init> <condition pos:start="13:18" pos:end="13:26"><expr pos:start="13:18" pos:end="13:25"><name pos:start="13:18" pos:end="13:18">y</name><operator pos:start="13:19" pos:end="13:19">&lt;</operator><name pos:start="13:20" pos:end="13:25">height</name></expr>;</condition> <incr pos:start="13:28" pos:end="13:30"><expr pos:start="13:28" pos:end="13:30"><name pos:start="13:28" pos:end="13:28">y</name><operator pos:start="13:29" pos:end="13:30">++</operator></expr></incr>)</control>

	<block pos:start="15:9" pos:end="268:0">{<block_content pos:start="21:17" pos:end="263:33">

<cpp:ifdef pos:start="17:1" pos:end="17:15">#<cpp:directive pos:start="17:2" pos:end="17:6">ifdef</cpp:directive> <name pos:start="17:8" pos:end="17:15">HAVE_MMX</name></cpp:ifdef>

<comment type="line" pos:start="19:1" pos:end="19:103">//FIXME handle 2 lines a once (fewer prefetch, reuse some chrom, but very likely limited by mem anyway)</comment>

		<asm pos:start="21:17" pos:end="120:0">asm <specifier pos:start="21:21" pos:end="21:28">volatile</specifier>(

			"xor %%"REG_a", %%"REG_a"	\n\t"

			ASMALIGN(4)

			"1:				\n\t"

			PREFETCH" 32(%1, %%"REG_a", 2)	\n\t"

			PREFETCH" 32(%2, %%"REG_a")	\n\t"

			PREFETCH" 32(%3, %%"REG_a")	\n\t"

			"movq (%2, %%"REG_a"), %%mm0	\n\t" <comment type="line" pos:start="35:63" pos:end="35:69">// U(0)</comment>

			"movq %%mm0, %%mm2		\n\t" <comment type="line" pos:start="37:63" pos:end="37:69">// U(0)</comment>

			"movq (%3, %%"REG_a"), %%mm1	\n\t" <comment type="line" pos:start="39:63" pos:end="39:69">// V(0)</comment>

			"punpcklbw %%mm1, %%mm0		\n\t" <comment type="line" pos:start="41:63" pos:end="41:77">// UVUV UVUV(0)</comment>

			"punpckhbw %%mm1, %%mm2		\n\t" <comment type="line" pos:start="43:63" pos:end="43:77">// UVUV UVUV(8)</comment>



			"movq (%1, %%"REG_a",2), %%mm3	\n\t" <comment type="line" pos:start="47:63" pos:end="47:69">// Y(0)</comment>

			"movq 8(%1, %%"REG_a",2), %%mm5	\n\t" <comment type="line" pos:start="49:63" pos:end="49:69">// Y(8)</comment>

			"movq %%mm3, %%mm4		\n\t" <comment type="line" pos:start="51:63" pos:end="51:69">// Y(0)</comment>

			"movq %%mm5, %%mm6		\n\t" <comment type="line" pos:start="53:63" pos:end="53:69">// Y(8)</comment>

			"punpcklbw %%mm0, %%mm3		\n\t" <comment type="line" pos:start="55:63" pos:end="55:77">// YUYV YUYV(0)</comment>

			"punpckhbw %%mm0, %%mm4		\n\t" <comment type="line" pos:start="57:63" pos:end="57:77">// YUYV YUYV(4)</comment>

			"punpcklbw %%mm2, %%mm5		\n\t" <comment type="line" pos:start="59:63" pos:end="59:77">// YUYV YUYV(8)</comment>

			"punpckhbw %%mm2, %%mm6		\n\t" <comment type="line" pos:start="61:63" pos:end="61:78">// YUYV YUYV(12)</comment>



			MOVNTQ" %%mm3, (%0, %%"REG_a", 4)\n\t"

			MOVNTQ" %%mm4, 8(%0, %%"REG_a", 4)\n\t"

			MOVNTQ" %%mm5, 16(%0, %%"REG_a", 4)\n\t"

			MOVNTQ" %%mm6, 24(%0, %%"REG_a", 4)\n\t"



			"add $8, %%"REG_a"		\n\t"

			"cmp %4, %%"REG_a"		\n\t"

			" jb 1b				\n\t"

			::"r"(dst), "r"(ysrc), "r"(usrc), "r"(vsrc), "g" (chromWidth)

			: "%"REG_a

		);</asm>

<cpp:else pos:start="87:1" pos:end="87:5">#<cpp:directive pos:start="87:2" pos:end="87:5">else</cpp:directive></cpp:else>



<cpp:if pos:start="91:1" pos:end="91:42">#<cpp:directive pos:start="91:2" pos:end="91:3">if</cpp:directive> <expr pos:start="91:5" pos:end="91:42"><name pos:start="91:5" pos:end="91:11">defined</name> <name pos:start="91:13" pos:end="91:22">ARCH_ALPHA</name> <operator pos:start="91:24" pos:end="91:25">&amp;&amp;</operator> <name pos:start="91:27" pos:end="91:33">defined</name> <name pos:start="91:35" pos:end="91:42">HAVE_MVI</name></expr></cpp:if>

<cpp:define pos:start="93:1" pos:end="119:24">#<cpp:directive pos:start="93:2" pos:end="93:7">define</cpp:directive> <cpp:macro pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:15">pl2yuy2</name><parameter_list pos:start="93:16" pos:end="93:18">(<parameter pos:start="93:17" pos:end="93:17"><type pos:start="93:17" pos:end="93:17"><name pos:start="93:17" pos:end="93:17">n</name></type></parameter>)</parameter_list></cpp:macro>					\

	<cpp:value pos:start="95:9" pos:end="119:24">y1 = yc[n];					\

	y2 = yc2[n];					\

	u = uc[n];					\

	v = vc[n];					\

	asm("unpkbw %1, %0" : "=r"(y1) : "r"(y1));	\

	asm("unpkbw %1, %0" : "=r"(y2) : "r"(y2));	\

	asm("unpkbl %1, %0" : "=r"(u) : "r"(u));	\

	asm("unpkbl %1, %0" : "=r"(v) : "r"(v));	\

	yuv1 = (u &lt;&lt; 8) + (v &lt;&lt; 24);			\

	yuv2 = yuv1 + y2;				\

	yuv1 += y1;					\

	qdst[n] = yuv1;					\

	qdst2[n] = yuv2;</cpp:value></cpp:define>



		<decl_stmt pos:start="123:17" pos:end="123:22"><decl pos:start="123:17" pos:end="123:21"><type pos:start="123:17" pos:end="123:19"><name pos:start="123:17" pos:end="123:19">int</name></type> <name pos:start="123:21" pos:end="123:21">i</name></decl>;</decl_stmt>

		<decl_stmt pos:start="125:17" pos:end="125:50"><decl pos:start="125:17" pos:end="125:49"><type pos:start="125:17" pos:end="125:26"><name pos:start="125:17" pos:end="125:24">uint64_t</name> <modifier pos:start="125:26" pos:end="125:26">*</modifier></type><name pos:start="125:27" pos:end="125:30">qdst</name> <init pos:start="125:32" pos:end="125:49">= <expr pos:start="125:34" pos:end="125:49"><operator pos:start="125:34" pos:end="125:34">(</operator><name pos:start="125:35" pos:end="125:42">uint64_t</name> <operator pos:start="125:44" pos:end="125:44">*</operator><operator pos:start="125:45" pos:end="125:45">)</operator> <name pos:start="125:47" pos:end="125:49">dst</name></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="127:17" pos:end="127:65"><decl pos:start="127:17" pos:end="127:64"><type pos:start="127:17" pos:end="127:26"><name pos:start="127:17" pos:end="127:24">uint64_t</name> <modifier pos:start="127:26" pos:end="127:26">*</modifier></type><name pos:start="127:27" pos:end="127:31">qdst2</name> <init pos:start="127:33" pos:end="127:64">= <expr pos:start="127:35" pos:end="127:64"><operator pos:start="127:35" pos:end="127:35">(</operator><name pos:start="127:36" pos:end="127:43">uint64_t</name> <operator pos:start="127:45" pos:end="127:45">*</operator><operator pos:start="127:46" pos:end="127:46">)</operator> <operator pos:start="127:48" pos:end="127:48">(</operator><name pos:start="127:49" pos:end="127:51">dst</name> <operator pos:start="127:53" pos:end="127:53">+</operator> <name pos:start="127:55" pos:end="127:63">dstStride</name><operator pos:start="127:64" pos:end="127:64">)</operator></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="129:17" pos:end="129:55"><decl pos:start="129:17" pos:end="129:54"><type pos:start="129:17" pos:end="129:32"><specifier pos:start="129:17" pos:end="129:21">const</specifier> <name pos:start="129:23" pos:end="129:30">uint32_t</name> <modifier pos:start="129:32" pos:end="129:32">*</modifier></type><name pos:start="129:33" pos:end="129:34">yc</name> <init pos:start="129:36" pos:end="129:54">= <expr pos:start="129:38" pos:end="129:54"><operator pos:start="129:38" pos:end="129:38">(</operator><name pos:start="129:39" pos:end="129:46">uint32_t</name> <operator pos:start="129:48" pos:end="129:48">*</operator><operator pos:start="129:49" pos:end="129:49">)</operator> <name pos:start="129:51" pos:end="129:54">ysrc</name></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="131:17" pos:end="131:70"><decl pos:start="131:17" pos:end="131:69"><type pos:start="131:17" pos:end="131:32"><specifier pos:start="131:17" pos:end="131:21">const</specifier> <name pos:start="131:23" pos:end="131:30">uint32_t</name> <modifier pos:start="131:32" pos:end="131:32">*</modifier></type><name pos:start="131:33" pos:end="131:35">yc2</name> <init pos:start="131:37" pos:end="131:69">= <expr pos:start="131:39" pos:end="131:69"><operator pos:start="131:39" pos:end="131:39">(</operator><name pos:start="131:40" pos:end="131:47">uint32_t</name> <operator pos:start="131:49" pos:end="131:49">*</operator><operator pos:start="131:50" pos:end="131:50">)</operator> <operator pos:start="131:52" pos:end="131:52">(</operator><name pos:start="131:53" pos:end="131:56">ysrc</name> <operator pos:start="131:58" pos:end="131:58">+</operator> <name pos:start="131:60" pos:end="131:68">lumStride</name><operator pos:start="131:69" pos:end="131:69">)</operator></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="133:17" pos:end="133:78"><decl pos:start="133:17" pos:end="133:53"><type pos:start="133:17" pos:end="133:32"><specifier pos:start="133:17" pos:end="133:21">const</specifier> <name pos:start="133:23" pos:end="133:30">uint16_t</name> <modifier pos:start="133:32" pos:end="133:32">*</modifier></type><name pos:start="133:33" pos:end="133:34">uc</name> <init pos:start="133:36" pos:end="133:53">= <expr pos:start="133:38" pos:end="133:53"><operator pos:start="133:38" pos:end="133:38">(</operator><name pos:start="133:39" pos:end="133:46">uint16_t</name><operator pos:start="133:47" pos:end="133:47">*</operator><operator pos:start="133:48" pos:end="133:48">)</operator> <name pos:start="133:50" pos:end="133:53">usrc</name></expr></init></decl>, <decl pos:start="133:56" pos:end="133:77"><type ref="prev" pos:start="133:17" pos:end="133:32"><modifier pos:start="133:56" pos:end="133:56">*</modifier></type><name pos:start="133:57" pos:end="133:58">vc</name> <init pos:start="133:60" pos:end="133:77">= <expr pos:start="133:62" pos:end="133:77"><operator pos:start="133:62" pos:end="133:62">(</operator><name pos:start="133:63" pos:end="133:70">uint16_t</name><operator pos:start="133:71" pos:end="133:71">*</operator><operator pos:start="133:72" pos:end="133:72">)</operator> <name pos:start="133:74" pos:end="133:77">vsrc</name></expr></init></decl>;</decl_stmt>

		<for pos:start="135:17" pos:end="175:17">for<control pos:start="135:20" pos:end="135:50">(<init pos:start="135:21" pos:end="135:26"><expr pos:start="135:21" pos:end="135:25"><name pos:start="135:21" pos:end="135:21">i</name> <operator pos:start="135:23" pos:end="135:23">=</operator> <literal type="number" pos:start="135:25" pos:end="135:25">0</literal></expr>;</init> <condition pos:start="135:28" pos:end="135:42"><expr pos:start="135:28" pos:end="135:41"><name pos:start="135:28" pos:end="135:28">i</name> <operator pos:start="135:30" pos:end="135:30">&lt;</operator> <name pos:start="135:32" pos:end="135:41">chromWidth</name></expr>;</condition> <incr pos:start="135:44" pos:end="135:49"><expr pos:start="135:44" pos:end="135:49"><name pos:start="135:44" pos:end="135:44">i</name> <operator pos:start="135:46" pos:end="135:47">+=</operator> <literal type="number" pos:start="135:49" pos:end="135:49">8</literal></expr></incr>)</control><block pos:start="135:51" pos:end="175:17">{<block_content pos:start="137:25" pos:end="173:35">

			<decl_stmt pos:start="137:25" pos:end="137:52"><decl pos:start="137:25" pos:end="137:35"><type pos:start="137:25" pos:end="137:32"><name pos:start="137:25" pos:end="137:32">uint64_t</name></type> <name pos:start="137:34" pos:end="137:35">y1</name></decl>, <decl pos:start="137:38" pos:end="137:39"><type ref="prev" pos:start="137:25" pos:end="137:32"/><name pos:start="137:38" pos:end="137:39">y2</name></decl>, <decl pos:start="137:42" pos:end="137:45"><type ref="prev" pos:start="137:25" pos:end="137:32"/><name pos:start="137:42" pos:end="137:45">yuv1</name></decl>, <decl pos:start="137:48" pos:end="137:51"><type ref="prev" pos:start="137:25" pos:end="137:32"/><name pos:start="137:48" pos:end="137:51">yuv2</name></decl>;</decl_stmt>

			<decl_stmt pos:start="139:25" pos:end="139:38"><decl pos:start="139:25" pos:end="139:34"><type pos:start="139:25" pos:end="139:32"><name pos:start="139:25" pos:end="139:32">uint64_t</name></type> <name pos:start="139:34" pos:end="139:34">u</name></decl>, <decl pos:start="139:37" pos:end="139:37"><type ref="prev" pos:start="139:25" pos:end="139:32"/><name pos:start="139:37" pos:end="139:37">v</name></decl>;</decl_stmt>

			<comment type="block" pos:start="141:25" pos:end="141:38">/* Prefetch */</comment>

			<asm pos:start="143:25" pos:end="143:57">asm("ldq $31,64(%0)" :: "r"(yc));</asm>

			<asm pos:start="145:25" pos:end="145:58">asm("ldq $31,64(%0)" :: "r"(yc2));</asm>

			<asm pos:start="147:25" pos:end="147:57">asm("ldq $31,64(%0)" :: "r"(uc));</asm>

			<asm pos:start="149:25" pos:end="149:57">asm("ldq $31,64(%0)" :: "r"(vc));</asm>



			<expr_stmt pos:start="153:25" pos:end="153:35"><expr pos:start="153:25" pos:end="153:34"><call pos:start="153:25" pos:end="153:34"><name pos:start="153:25" pos:end="153:31">pl2yuy2</name><argument_list pos:start="153:32" pos:end="153:34">(<argument pos:start="153:33" pos:end="153:33"><expr pos:start="153:33" pos:end="153:33"><literal type="number" pos:start="153:33" pos:end="153:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="155:25" pos:end="155:35"><expr pos:start="155:25" pos:end="155:34"><call pos:start="155:25" pos:end="155:34"><name pos:start="155:25" pos:end="155:31">pl2yuy2</name><argument_list pos:start="155:32" pos:end="155:34">(<argument pos:start="155:33" pos:end="155:33"><expr pos:start="155:33" pos:end="155:33"><literal type="number" pos:start="155:33" pos:end="155:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="157:25" pos:end="157:35"><expr pos:start="157:25" pos:end="157:34"><call pos:start="157:25" pos:end="157:34"><name pos:start="157:25" pos:end="157:31">pl2yuy2</name><argument_list pos:start="157:32" pos:end="157:34">(<argument pos:start="157:33" pos:end="157:33"><expr pos:start="157:33" pos:end="157:33"><literal type="number" pos:start="157:33" pos:end="157:33">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="159:25" pos:end="159:35"><expr pos:start="159:25" pos:end="159:34"><call pos:start="159:25" pos:end="159:34"><name pos:start="159:25" pos:end="159:31">pl2yuy2</name><argument_list pos:start="159:32" pos:end="159:34">(<argument pos:start="159:33" pos:end="159:33"><expr pos:start="159:33" pos:end="159:33"><literal type="number" pos:start="159:33" pos:end="159:33">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



			<expr_stmt pos:start="163:25" pos:end="163:32"><expr pos:start="163:25" pos:end="163:31"><name pos:start="163:25" pos:end="163:26">yc</name> <operator pos:start="163:28" pos:end="163:29">+=</operator> <literal type="number" pos:start="163:31" pos:end="163:31">4</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="165:25" pos:end="165:33"><expr pos:start="165:25" pos:end="165:32"><name pos:start="165:25" pos:end="165:27">yc2</name> <operator pos:start="165:29" pos:end="165:30">+=</operator> <literal type="number" pos:start="165:32" pos:end="165:32">4</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="167:25" pos:end="167:32"><expr pos:start="167:25" pos:end="167:31"><name pos:start="167:25" pos:end="167:26">uc</name> <operator pos:start="167:28" pos:end="167:29">+=</operator> <literal type="number" pos:start="167:31" pos:end="167:31">4</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="169:25" pos:end="169:32"><expr pos:start="169:25" pos:end="169:31"><name pos:start="169:25" pos:end="169:26">vc</name> <operator pos:start="169:28" pos:end="169:29">+=</operator> <literal type="number" pos:start="169:31" pos:end="169:31">4</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="171:25" pos:end="171:34"><expr pos:start="171:25" pos:end="171:33"><name pos:start="171:25" pos:end="171:28">qdst</name> <operator pos:start="171:30" pos:end="171:31">+=</operator> <literal type="number" pos:start="171:33" pos:end="171:33">4</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="173:25" pos:end="173:35"><expr pos:start="173:25" pos:end="173:34"><name pos:start="173:25" pos:end="173:29">qdst2</name> <operator pos:start="173:31" pos:end="173:32">+=</operator> <literal type="number" pos:start="173:34" pos:end="173:34">4</literal></expr>;</expr_stmt>

		</block_content>}</block></for>

		<expr_stmt pos:start="177:17" pos:end="177:20"><expr pos:start="177:17" pos:end="177:19"><name pos:start="177:17" pos:end="177:17">y</name><operator pos:start="177:18" pos:end="177:19">++</operator></expr>;</expr_stmt>

		<expr_stmt pos:start="179:17" pos:end="179:34"><expr pos:start="179:17" pos:end="179:33"><name pos:start="179:17" pos:end="179:20">ysrc</name> <operator pos:start="179:22" pos:end="179:23">+=</operator> <name pos:start="179:25" pos:end="179:33">lumStride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="181:17" pos:end="186:0"><expr pos:start="181:17" pos:end="181:32"><name pos:start="181:17" pos:end="181:19">dst</name> <operator pos:start="181:21" pos:end="181:22">+=</operator> <name pos:start="181:24" pos:end="181:32">dstStride</name></expr>;</expr_stmt>



<cpp:elif pos:start="185:1" pos:end="185:22">#<cpp:directive pos:start="185:2" pos:end="185:5">elif</cpp:directive> <expr pos:start="185:7" pos:end="185:22"><name pos:start="185:7" pos:end="185:16">__WORDSIZE</name> <operator pos:start="185:18" pos:end="185:19">&gt;=</operator> <literal type="number" pos:start="185:21" pos:end="185:22">64</literal></expr></cpp:elif>

		<decl_stmt pos:start="187:17" pos:end="187:22"><decl pos:start="187:17" pos:end="187:21"><type pos:start="187:17" pos:end="187:19"><name pos:start="187:17" pos:end="187:19">int</name></type> <name pos:start="187:21" pos:end="187:21">i</name></decl>;</decl_stmt>

		<decl_stmt pos:start="189:17" pos:end="189:50"><decl pos:start="189:17" pos:end="189:49"><type pos:start="189:17" pos:end="189:26"><name pos:start="189:17" pos:end="189:24">uint64_t</name> <modifier pos:start="189:26" pos:end="189:26">*</modifier></type><name pos:start="189:27" pos:end="189:30">ldst</name> <init pos:start="189:32" pos:end="189:49">= <expr pos:start="189:34" pos:end="189:49"><operator pos:start="189:34" pos:end="189:34">(</operator><name pos:start="189:35" pos:end="189:42">uint64_t</name> <operator pos:start="189:44" pos:end="189:44">*</operator><operator pos:start="189:45" pos:end="189:45">)</operator> <name pos:start="189:47" pos:end="189:49">dst</name></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="191:17" pos:end="191:65"><decl pos:start="191:17" pos:end="191:40"><type pos:start="191:17" pos:end="191:31"><specifier pos:start="191:17" pos:end="191:21">const</specifier> <name pos:start="191:23" pos:end="191:29">uint8_t</name> <modifier pos:start="191:31" pos:end="191:31">*</modifier></type><name pos:start="191:32" pos:end="191:33">yc</name> <init pos:start="191:35" pos:end="191:40">= <expr pos:start="191:37" pos:end="191:40"><name pos:start="191:37" pos:end="191:40">ysrc</name></expr></init></decl>, <decl pos:start="191:43" pos:end="191:52"><type ref="prev" pos:start="191:17" pos:end="191:31"><modifier pos:start="191:43" pos:end="191:43">*</modifier></type><name pos:start="191:44" pos:end="191:45">uc</name> <init pos:start="191:47" pos:end="191:52">= <expr pos:start="191:49" pos:end="191:52"><name pos:start="191:49" pos:end="191:52">usrc</name></expr></init></decl>, <decl pos:start="191:55" pos:end="191:64"><type ref="prev" pos:start="191:17" pos:end="191:31"><modifier pos:start="191:55" pos:end="191:55">*</modifier></type><name pos:start="191:56" pos:end="191:57">vc</name> <init pos:start="191:59" pos:end="191:64">= <expr pos:start="191:61" pos:end="191:64"><name pos:start="191:61" pos:end="191:64">vsrc</name></expr></init></decl>;</decl_stmt>

		<for pos:start="193:17" pos:end="218:0">for<control pos:start="193:20" pos:end="193:50">(<init pos:start="193:21" pos:end="193:26"><expr pos:start="193:21" pos:end="193:25"><name pos:start="193:21" pos:end="193:21">i</name> <operator pos:start="193:23" pos:end="193:23">=</operator> <literal type="number" pos:start="193:25" pos:end="193:25">0</literal></expr>;</init> <condition pos:start="193:28" pos:end="193:42"><expr pos:start="193:28" pos:end="193:41"><name pos:start="193:28" pos:end="193:28">i</name> <operator pos:start="193:30" pos:end="193:30">&lt;</operator> <name pos:start="193:32" pos:end="193:41">chromWidth</name></expr>;</condition> <incr pos:start="193:44" pos:end="193:49"><expr pos:start="193:44" pos:end="193:49"><name pos:start="193:44" pos:end="193:44">i</name> <operator pos:start="193:46" pos:end="193:47">+=</operator> <literal type="number" pos:start="193:49" pos:end="193:49">2</literal></expr></incr>)</control><block pos:start="193:51" pos:end="218:0">{<block_content pos:start="195:25" pos:end="211:32">

			<decl_stmt pos:start="195:25" pos:end="195:38"><decl pos:start="195:25" pos:end="195:34"><type pos:start="195:25" pos:end="195:32"><name pos:start="195:25" pos:end="195:32">uint64_t</name></type> <name pos:start="195:34" pos:end="195:34">k</name></decl>, <decl pos:start="195:37" pos:end="195:37"><type ref="prev" pos:start="195:25" pos:end="195:32"/><name pos:start="195:37" pos:end="195:37">l</name></decl>;</decl_stmt>

			<expr_stmt pos:start="197:25" pos:end="199:58"><expr pos:start="197:25" pos:end="199:57"><name pos:start="197:25" pos:end="197:25">k</name> <operator pos:start="197:27" pos:end="197:27">=</operator> <name pos:start="197:29" pos:end="197:33"><name pos:start="197:29" pos:end="197:30">yc</name><index pos:start="197:31" pos:end="197:33">[<expr pos:start="197:32" pos:end="197:32"><literal type="number" pos:start="197:32" pos:end="197:32">0</literal></expr>]</index></name> <operator pos:start="197:35" pos:end="197:35">+</operator> <operator pos:start="197:37" pos:end="197:37">(</operator><name pos:start="197:38" pos:end="197:42"><name pos:start="197:38" pos:end="197:39">uc</name><index pos:start="197:40" pos:end="197:42">[<expr pos:start="197:41" pos:end="197:41"><literal type="number" pos:start="197:41" pos:end="197:41">0</literal></expr>]</index></name> <operator pos:start="197:44" pos:end="197:45">&lt;&lt;</operator> <literal type="number" pos:start="197:47" pos:end="197:47">8</literal><operator pos:start="197:48" pos:end="197:48">)</operator> <operator pos:start="197:50" pos:end="197:50">+</operator>

			    <operator pos:start="199:29" pos:end="199:29">(</operator><name pos:start="199:30" pos:end="199:34"><name pos:start="199:30" pos:end="199:31">yc</name><index pos:start="199:32" pos:end="199:34">[<expr pos:start="199:33" pos:end="199:33"><literal type="number" pos:start="199:33" pos:end="199:33">1</literal></expr>]</index></name> <operator pos:start="199:36" pos:end="199:37">&lt;&lt;</operator> <literal type="number" pos:start="199:39" pos:end="199:40">16</literal><operator pos:start="199:41" pos:end="199:41">)</operator> <operator pos:start="199:43" pos:end="199:43">+</operator> <operator pos:start="199:45" pos:end="199:45">(</operator><name pos:start="199:46" pos:end="199:50"><name pos:start="199:46" pos:end="199:47">vc</name><index pos:start="199:48" pos:end="199:50">[<expr pos:start="199:49" pos:end="199:49"><literal type="number" pos:start="199:49" pos:end="199:49">0</literal></expr>]</index></name> <operator pos:start="199:52" pos:end="199:53">&lt;&lt;</operator> <literal type="number" pos:start="199:55" pos:end="199:56">24</literal><operator pos:start="199:57" pos:end="199:57">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="201:25" pos:end="203:58"><expr pos:start="201:25" pos:end="203:57"><name pos:start="201:25" pos:end="201:25">l</name> <operator pos:start="201:27" pos:end="201:27">=</operator> <name pos:start="201:29" pos:end="201:33"><name pos:start="201:29" pos:end="201:30">yc</name><index pos:start="201:31" pos:end="201:33">[<expr pos:start="201:32" pos:end="201:32"><literal type="number" pos:start="201:32" pos:end="201:32">2</literal></expr>]</index></name> <operator pos:start="201:35" pos:end="201:35">+</operator> <operator pos:start="201:37" pos:end="201:37">(</operator><name pos:start="201:38" pos:end="201:42"><name pos:start="201:38" pos:end="201:39">uc</name><index pos:start="201:40" pos:end="201:42">[<expr pos:start="201:41" pos:end="201:41"><literal type="number" pos:start="201:41" pos:end="201:41">1</literal></expr>]</index></name> <operator pos:start="201:44" pos:end="201:45">&lt;&lt;</operator> <literal type="number" pos:start="201:47" pos:end="201:47">8</literal><operator pos:start="201:48" pos:end="201:48">)</operator> <operator pos:start="201:50" pos:end="201:50">+</operator>

			    <operator pos:start="203:29" pos:end="203:29">(</operator><name pos:start="203:30" pos:end="203:34"><name pos:start="203:30" pos:end="203:31">yc</name><index pos:start="203:32" pos:end="203:34">[<expr pos:start="203:33" pos:end="203:33"><literal type="number" pos:start="203:33" pos:end="203:33">3</literal></expr>]</index></name> <operator pos:start="203:36" pos:end="203:37">&lt;&lt;</operator> <literal type="number" pos:start="203:39" pos:end="203:40">16</literal><operator pos:start="203:41" pos:end="203:41">)</operator> <operator pos:start="203:43" pos:end="203:43">+</operator> <operator pos:start="203:45" pos:end="203:45">(</operator><name pos:start="203:46" pos:end="203:50"><name pos:start="203:46" pos:end="203:47">vc</name><index pos:start="203:48" pos:end="203:50">[<expr pos:start="203:49" pos:end="203:49"><literal type="number" pos:start="203:49" pos:end="203:49">1</literal></expr>]</index></name> <operator pos:start="203:52" pos:end="203:53">&lt;&lt;</operator> <literal type="number" pos:start="203:55" pos:end="203:56">24</literal><operator pos:start="203:57" pos:end="203:57">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="205:25" pos:end="205:48"><expr pos:start="205:25" pos:end="205:47"><operator pos:start="205:25" pos:end="205:25">*</operator><name pos:start="205:26" pos:end="205:29">ldst</name><operator pos:start="205:30" pos:end="205:31">++</operator> <operator pos:start="205:33" pos:end="205:33">=</operator> <name pos:start="205:35" pos:end="205:35">k</name> <operator pos:start="205:37" pos:end="205:37">+</operator> <operator pos:start="205:39" pos:end="205:39">(</operator><name pos:start="205:40" pos:end="205:40">l</name> <operator pos:start="205:42" pos:end="205:43">&lt;&lt;</operator> <literal type="number" pos:start="205:45" pos:end="205:46">32</literal><operator pos:start="205:47" pos:end="205:47">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="207:25" pos:end="207:32"><expr pos:start="207:25" pos:end="207:31"><name pos:start="207:25" pos:end="207:26">yc</name> <operator pos:start="207:28" pos:end="207:29">+=</operator> <literal type="number" pos:start="207:31" pos:end="207:31">4</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="209:25" pos:end="209:32"><expr pos:start="209:25" pos:end="209:31"><name pos:start="209:25" pos:end="209:26">uc</name> <operator pos:start="209:28" pos:end="209:29">+=</operator> <literal type="number" pos:start="209:31" pos:end="209:31">2</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="211:25" pos:end="211:32"><expr pos:start="211:25" pos:end="211:31"><name pos:start="211:25" pos:end="211:26">vc</name> <operator pos:start="211:28" pos:end="211:29">+=</operator> <literal type="number" pos:start="211:31" pos:end="211:31">2</literal></expr>;</expr_stmt>

		</block_content>}</block></for>



<cpp:else pos:start="217:1" pos:end="217:5">#<cpp:directive pos:start="217:2" pos:end="217:5">else</cpp:directive></cpp:else>

		<decl_stmt pos:start="219:17" pos:end="219:47"><decl pos:start="219:17" pos:end="219:21"><type pos:start="219:17" pos:end="219:19"><name pos:start="219:17" pos:end="219:19">int</name></type> <name pos:start="219:21" pos:end="219:21">i</name></decl>, <decl pos:start="219:24" pos:end="219:46"><type ref="prev" pos:start="219:17" pos:end="219:19"><modifier pos:start="219:24" pos:end="219:24">*</modifier></type><name pos:start="219:25" pos:end="219:28">idst</name> <init pos:start="219:30" pos:end="219:46">= <expr pos:start="219:32" pos:end="219:46"><operator pos:start="219:32" pos:end="219:32">(</operator><name pos:start="219:33" pos:end="219:39">int32_t</name> <operator pos:start="219:41" pos:end="219:41">*</operator><operator pos:start="219:42" pos:end="219:42">)</operator> <name pos:start="219:44" pos:end="219:46">dst</name></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="221:17" pos:end="221:65"><decl pos:start="221:17" pos:end="221:40"><type pos:start="221:17" pos:end="221:31"><specifier pos:start="221:17" pos:end="221:21">const</specifier> <name pos:start="221:23" pos:end="221:29">uint8_t</name> <modifier pos:start="221:31" pos:end="221:31">*</modifier></type><name pos:start="221:32" pos:end="221:33">yc</name> <init pos:start="221:35" pos:end="221:40">= <expr pos:start="221:37" pos:end="221:40"><name pos:start="221:37" pos:end="221:40">ysrc</name></expr></init></decl>, <decl pos:start="221:43" pos:end="221:52"><type ref="prev" pos:start="221:17" pos:end="221:31"><modifier pos:start="221:43" pos:end="221:43">*</modifier></type><name pos:start="221:44" pos:end="221:45">uc</name> <init pos:start="221:47" pos:end="221:52">= <expr pos:start="221:49" pos:end="221:52"><name pos:start="221:49" pos:end="221:52">usrc</name></expr></init></decl>, <decl pos:start="221:55" pos:end="221:64"><type ref="prev" pos:start="221:17" pos:end="221:31"><modifier pos:start="221:55" pos:end="221:55">*</modifier></type><name pos:start="221:56" pos:end="221:57">vc</name> <init pos:start="221:59" pos:end="221:64">= <expr pos:start="221:61" pos:end="221:64"><name pos:start="221:61" pos:end="221:64">vsrc</name></expr></init></decl>;</decl_stmt>

		<for pos:start="223:17" pos:end="250:0">for<control pos:start="223:20" pos:end="223:47">(<init pos:start="223:21" pos:end="223:26"><expr pos:start="223:21" pos:end="223:25"><name pos:start="223:21" pos:end="223:21">i</name> <operator pos:start="223:23" pos:end="223:23">=</operator> <literal type="number" pos:start="223:25" pos:end="223:25">0</literal></expr>;</init> <condition pos:start="223:28" pos:end="223:42"><expr pos:start="223:28" pos:end="223:41"><name pos:start="223:28" pos:end="223:28">i</name> <operator pos:start="223:30" pos:end="223:30">&lt;</operator> <name pos:start="223:32" pos:end="223:41">chromWidth</name></expr>;</condition> <incr pos:start="223:44" pos:end="223:46"><expr pos:start="223:44" pos:end="223:46"><name pos:start="223:44" pos:end="223:44">i</name><operator pos:start="223:45" pos:end="223:46">++</operator></expr></incr>)</control><block pos:start="223:48" pos:end="250:0">{<block_content pos:start="227:25" pos:end="243:29">

<cpp:ifdef pos:start="225:1" pos:end="225:22">#<cpp:directive pos:start="225:2" pos:end="225:6">ifdef</cpp:directive> <name pos:start="225:8" pos:end="225:22">WORDS_BIGENDIAN</name></cpp:ifdef>

			<expr_stmt pos:start="227:25" pos:end="232:0"><expr pos:start="227:25" pos:end="229:55"><operator pos:start="227:25" pos:end="227:25">*</operator><name pos:start="227:26" pos:end="227:29">idst</name><operator pos:start="227:30" pos:end="227:31">++</operator> <operator pos:start="227:33" pos:end="227:33">=</operator> <operator pos:start="227:35" pos:end="227:35">(</operator><name pos:start="227:36" pos:end="227:40"><name pos:start="227:36" pos:end="227:37">yc</name><index pos:start="227:38" pos:end="227:40">[<expr pos:start="227:39" pos:end="227:39"><literal type="number" pos:start="227:39" pos:end="227:39">0</literal></expr>]</index></name> <operator pos:start="227:42" pos:end="227:43">&lt;&lt;</operator> <literal type="number" pos:start="227:45" pos:end="227:46">24</literal><operator pos:start="227:47" pos:end="227:47">)</operator><operator pos:start="227:48" pos:end="227:48">+</operator> <operator pos:start="227:50" pos:end="227:50">(</operator><name pos:start="227:51" pos:end="227:55"><name pos:start="227:51" pos:end="227:52">uc</name><index pos:start="227:53" pos:end="227:55">[<expr pos:start="227:54" pos:end="227:54"><literal type="number" pos:start="227:54" pos:end="227:54">0</literal></expr>]</index></name> <operator pos:start="227:57" pos:end="227:58">&lt;&lt;</operator> <literal type="number" pos:start="227:60" pos:end="227:61">16</literal><operator pos:start="227:62" pos:end="227:62">)</operator> <operator pos:start="227:64" pos:end="227:64">+</operator>

			    <operator pos:start="229:29" pos:end="229:29">(</operator><name pos:start="229:30" pos:end="229:34"><name pos:start="229:30" pos:end="229:31">yc</name><index pos:start="229:32" pos:end="229:34">[<expr pos:start="229:33" pos:end="229:33"><literal type="number" pos:start="229:33" pos:end="229:33">1</literal></expr>]</index></name> <operator pos:start="229:36" pos:end="229:37">&lt;&lt;</operator> <literal type="number" pos:start="229:39" pos:end="229:39">8</literal><operator pos:start="229:40" pos:end="229:40">)</operator> <operator pos:start="229:42" pos:end="229:42">+</operator> <operator pos:start="229:44" pos:end="229:44">(</operator><name pos:start="229:45" pos:end="229:49"><name pos:start="229:45" pos:end="229:46">vc</name><index pos:start="229:47" pos:end="229:49">[<expr pos:start="229:48" pos:end="229:48"><literal type="number" pos:start="229:48" pos:end="229:48">0</literal></expr>]</index></name> <operator pos:start="229:51" pos:end="229:52">&lt;&lt;</operator> <literal type="number" pos:start="229:54" pos:end="229:54">0</literal><operator pos:start="229:55" pos:end="229:55">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="231:1" pos:end="231:5">#<cpp:directive pos:start="231:2" pos:end="231:5">else</cpp:directive></cpp:else>

			<expr_stmt pos:start="233:25" pos:end="238:0"><expr pos:start="233:25" pos:end="235:57"><operator pos:start="233:25" pos:end="233:25">*</operator><name pos:start="233:26" pos:end="233:29">idst</name><operator pos:start="233:30" pos:end="233:31">++</operator> <operator pos:start="233:33" pos:end="233:33">=</operator> <name pos:start="233:35" pos:end="233:39"><name pos:start="233:35" pos:end="233:36">yc</name><index pos:start="233:37" pos:end="233:39">[<expr pos:start="233:38" pos:end="233:38"><literal type="number" pos:start="233:38" pos:end="233:38">0</literal></expr>]</index></name> <operator pos:start="233:41" pos:end="233:41">+</operator> <operator pos:start="233:43" pos:end="233:43">(</operator><name pos:start="233:44" pos:end="233:48"><name pos:start="233:44" pos:end="233:45">uc</name><index pos:start="233:46" pos:end="233:48">[<expr pos:start="233:47" pos:end="233:47"><literal type="number" pos:start="233:47" pos:end="233:47">0</literal></expr>]</index></name> <operator pos:start="233:50" pos:end="233:51">&lt;&lt;</operator> <literal type="number" pos:start="233:53" pos:end="233:53">8</literal><operator pos:start="233:54" pos:end="233:54">)</operator> <operator pos:start="233:56" pos:end="233:56">+</operator>

			    <operator pos:start="235:29" pos:end="235:29">(</operator><name pos:start="235:30" pos:end="235:34"><name pos:start="235:30" pos:end="235:31">yc</name><index pos:start="235:32" pos:end="235:34">[<expr pos:start="235:33" pos:end="235:33"><literal type="number" pos:start="235:33" pos:end="235:33">1</literal></expr>]</index></name> <operator pos:start="235:36" pos:end="235:37">&lt;&lt;</operator> <literal type="number" pos:start="235:39" pos:end="235:40">16</literal><operator pos:start="235:41" pos:end="235:41">)</operator> <operator pos:start="235:43" pos:end="235:43">+</operator> <operator pos:start="235:45" pos:end="235:45">(</operator><name pos:start="235:46" pos:end="235:50"><name pos:start="235:46" pos:end="235:47">vc</name><index pos:start="235:48" pos:end="235:50">[<expr pos:start="235:49" pos:end="235:49"><literal type="number" pos:start="235:49" pos:end="235:49">0</literal></expr>]</index></name> <operator pos:start="235:52" pos:end="235:53">&lt;&lt;</operator> <literal type="number" pos:start="235:55" pos:end="235:56">24</literal><operator pos:start="235:57" pos:end="235:57">)</operator></expr>;</expr_stmt>

<cpp:endif pos:start="237:1" pos:end="237:6">#<cpp:directive pos:start="237:2" pos:end="237:6">endif</cpp:directive></cpp:endif>

			<expr_stmt pos:start="239:25" pos:end="239:32"><expr pos:start="239:25" pos:end="239:31"><name pos:start="239:25" pos:end="239:26">yc</name> <operator pos:start="239:28" pos:end="239:29">+=</operator> <literal type="number" pos:start="239:31" pos:end="239:31">2</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="241:25" pos:end="241:29"><expr pos:start="241:25" pos:end="241:28"><name pos:start="241:25" pos:end="241:26">uc</name><operator pos:start="241:27" pos:end="241:28">++</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="243:25" pos:end="243:29"><expr pos:start="243:25" pos:end="243:28"><name pos:start="243:25" pos:end="243:26">vc</name><operator pos:start="243:27" pos:end="243:28">++</operator></expr>;</expr_stmt>

		</block_content>}</block></for>

<cpp:endif pos:start="247:1" pos:end="247:6">#<cpp:directive pos:start="247:2" pos:end="247:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="249:1" pos:end="249:6">#<cpp:directive pos:start="249:2" pos:end="249:6">endif</cpp:directive></cpp:endif>

		<if_stmt pos:start="251:17" pos:end="259:17"><if pos:start="251:17" pos:end="259:17">if<condition pos:start="251:19" pos:end="251:67">(<expr pos:start="251:20" pos:end="251:65"><operator pos:start="251:20" pos:end="251:20">(</operator><name pos:start="251:21" pos:end="251:21">y</name><operator pos:start="251:22" pos:end="251:22">&amp;</operator><operator pos:start="251:23" pos:end="251:23">(</operator><name pos:start="251:24" pos:end="251:39">vertLumPerChroma</name><operator pos:start="251:40" pos:end="251:40">-</operator><literal type="number" pos:start="251:41" pos:end="251:41">1</literal><operator pos:start="251:42" pos:end="251:42">)</operator><operator pos:start="251:43" pos:end="251:43">)</operator><operator pos:start="251:44" pos:end="251:45">==</operator><operator pos:start="251:46" pos:end="251:46">(</operator><name pos:start="251:47" pos:end="251:62">vertLumPerChroma</name><operator pos:start="251:63" pos:end="251:63">-</operator><literal type="number" pos:start="251:64" pos:end="251:64">1</literal><operator pos:start="251:65" pos:end="251:65">)</operator></expr> )</condition>

		<block pos:start="253:17" pos:end="259:17">{<block_content pos:start="255:25" pos:end="257:44">

			<expr_stmt pos:start="255:25" pos:end="255:44"><expr pos:start="255:25" pos:end="255:43"><name pos:start="255:25" pos:end="255:28">usrc</name> <operator pos:start="255:30" pos:end="255:31">+=</operator> <name pos:start="255:33" pos:end="255:43">chromStride</name></expr>;</expr_stmt>

			<expr_stmt pos:start="257:25" pos:end="257:44"><expr pos:start="257:25" pos:end="257:43"><name pos:start="257:25" pos:end="257:28">vsrc</name> <operator pos:start="257:30" pos:end="257:31">+=</operator> <name pos:start="257:33" pos:end="257:43">chromStride</name></expr>;</expr_stmt>

		</block_content>}</block></if></if_stmt>

		<expr_stmt pos:start="261:17" pos:end="261:34"><expr pos:start="261:17" pos:end="261:33"><name pos:start="261:17" pos:end="261:20">ysrc</name> <operator pos:start="261:22" pos:end="261:23">+=</operator> <name pos:start="261:25" pos:end="261:33">lumStride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="263:17" pos:end="263:33"><expr pos:start="263:17" pos:end="263:32"><name pos:start="263:17" pos:end="263:19">dst</name> <operator pos:start="263:21" pos:end="263:22">+=</operator> <name pos:start="263:24" pos:end="263:32">dstStride</name></expr>;</expr_stmt>

	</block_content>}</block></for>

<cpp:ifdef pos:start="267:1" pos:end="267:15">#<cpp:directive pos:start="267:2" pos:end="267:6">ifdef</cpp:directive> <name pos:start="267:8" pos:end="267:15">HAVE_MMX</name></cpp:ifdef>

<asm pos:start="269:1" pos:end="276:0">asm(    EMMS" \n\t"

        SFENCE" \n\t"

        :::"memory");</asm>

<cpp:endif pos:start="275:1" pos:end="275:6">#<cpp:directive pos:start="275:2" pos:end="275:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
