<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11397.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">encode_frame</name><parameter_list pos:start="1:24" pos:end="3:49">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:54">uint8_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">buf</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:36"><decl pos:start="3:25" pos:end="3:36"><type pos:start="3:25" pos:end="3:36"><name pos:start="3:25" pos:end="3:27">int</name></type> <name pos:start="3:29" pos:end="3:36">buf_size</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:48"><decl pos:start="3:39" pos:end="3:48"><type pos:start="3:39" pos:end="3:48"><name pos:start="3:39" pos:end="3:42">void</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:48">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="81:1">{<block_content pos:start="7:5" pos:end="79:45">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">pic</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:21">aligned_width</name> <init pos:start="11:23" pos:end="11:49">= <expr pos:start="11:25" pos:end="11:49"><call pos:start="11:25" pos:end="11:49"><name pos:start="11:25" pos:end="11:31">FFALIGN</name><argument_list pos:start="11:32" pos:end="11:49">(<argument pos:start="11:33" pos:end="11:44"><expr pos:start="11:33" pos:end="11:44"><name pos:start="11:33" pos:end="11:44"><name pos:start="11:33" pos:end="11:37">avctx</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:44">width</name></name></expr></argument>, <argument pos:start="11:47" pos:end="11:48"><expr pos:start="11:47" pos:end="11:48"><literal type="number" pos:start="11:47" pos:end="11:48">64</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:21">src_line</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:16">dst</name> <init pos:start="15:18" pos:end="15:22">= <expr pos:start="15:20" pos:end="15:22"><name pos:start="15:20" pos:end="15:22">buf</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:53">(<expr pos:start="19:9" pos:end="19:52"><name pos:start="19:9" pos:end="19:16">buf_size</name> <operator pos:start="19:18" pos:end="19:18">&lt;</operator> <literal type="number" pos:start="19:20" pos:end="19:20">4</literal> <operator pos:start="19:22" pos:end="19:22">*</operator> <name pos:start="19:24" pos:end="19:36">aligned_width</name> <operator pos:start="19:38" pos:end="19:38">*</operator> <name pos:start="19:40" pos:end="19:52"><name pos:start="19:40" pos:end="19:44">avctx</name><operator pos:start="19:45" pos:end="19:46">-&gt;</operator><name pos:start="19:47" pos:end="19:52">height</name></name></expr>)</condition> <block pos:start="19:55" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:31">

        <expr_stmt pos:start="21:9" pos:end="21:65"><expr pos:start="21:9" pos:end="21:64"><call pos:start="21:9" pos:end="21:64"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:64">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:63"><expr pos:start="21:37" pos:end="21:63"><literal type="string" pos:start="21:37" pos:end="21:63">"output buffer too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:9">avctx</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:22">coded_frame</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:33">reference</name></name> <operator pos:start="29:35" pos:end="29:35">=</operator> <literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:38"><expr pos:start="31:5" pos:end="31:37"><name pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:9">avctx</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:22">coded_frame</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:33">key_frame</name></name> <operator pos:start="31:35" pos:end="31:35">=</operator> <literal type="number" pos:start="31:37" pos:end="31:37">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:54"><expr pos:start="33:5" pos:end="33:53"><name pos:start="33:5" pos:end="33:33"><name pos:start="33:5" pos:end="33:9">avctx</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:22">coded_frame</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:33">pict_type</name></name> <operator pos:start="33:35" pos:end="33:35">=</operator> <name pos:start="33:37" pos:end="33:53">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:28"><expr pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:12">src_line</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:27"><name pos:start="35:16" pos:end="35:18">pic</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:24">data</name><index pos:start="35:25" pos:end="35:27">[<expr pos:start="35:26" pos:end="35:26"><literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <for pos:start="39:5" pos:end="75:5">for <control pos:start="39:9" pos:end="39:39">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:34"><expr pos:start="39:17" pos:end="39:33"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:33"><name pos:start="39:21" pos:end="39:25">avctx</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:33">height</name></name></expr>;</condition> <incr pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><name pos:start="39:36" pos:end="39:36">i</name><operator pos:start="39:37" pos:end="39:38">++</operator></expr></incr>)</control> <block pos:start="39:41" pos:end="75:5">{<block_content pos:start="41:9" pos:end="73:37">

        <decl_stmt pos:start="41:9" pos:end="41:45"><decl pos:start="41:9" pos:end="41:44"><type pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:16">uint16_t</name> <modifier pos:start="41:18" pos:end="41:18">*</modifier></type><name pos:start="41:19" pos:end="41:21">src</name> <init pos:start="41:23" pos:end="41:44">= <expr pos:start="41:25" pos:end="41:44"><operator pos:start="41:25" pos:end="41:25">(</operator><name pos:start="41:26" pos:end="41:33">uint16_t</name> <operator pos:start="41:35" pos:end="41:35">*</operator><operator pos:start="41:36" pos:end="41:36">)</operator><name pos:start="41:37" pos:end="41:44">src_line</name></expr></init></decl>;</decl_stmt>

        <for pos:start="43:9" pos:end="69:9">for <control pos:start="43:13" pos:end="43:42">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">j</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:37"><expr pos:start="43:21" pos:end="43:36"><name pos:start="43:21" pos:end="43:21">j</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <name pos:start="43:25" pos:end="43:36"><name pos:start="43:25" pos:end="43:29">avctx</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:36">width</name></name></expr>;</condition> <incr pos:start="43:39" pos:end="43:41"><expr pos:start="43:39" pos:end="43:41"><name pos:start="43:39" pos:end="43:39">j</name><operator pos:start="43:40" pos:end="43:41">++</operator></expr></incr>)</control> <block pos:start="43:44" pos:end="69:9">{<block_content pos:start="45:13" pos:end="67:49">

            <decl_stmt pos:start="45:13" pos:end="45:27"><decl pos:start="45:13" pos:end="45:26"><type pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:20">uint32_t</name></type> <name pos:start="45:22" pos:end="45:26">pixel</name></decl>;</decl_stmt>

            <decl_stmt pos:start="47:13" pos:end="47:37"><decl pos:start="47:13" pos:end="47:36"><type pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:20">uint16_t</name></type> <name pos:start="47:22" pos:end="47:22">r</name> <init pos:start="47:24" pos:end="47:36">= <expr pos:start="47:26" pos:end="47:36"><operator pos:start="47:26" pos:end="47:26">*</operator><name pos:start="47:27" pos:end="47:29">src</name><operator pos:start="47:30" pos:end="47:31">++</operator> <operator pos:start="47:33" pos:end="47:34">&gt;&gt;</operator> <literal type="number" pos:start="47:36" pos:end="47:36">6</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:37"><decl pos:start="49:13" pos:end="49:36"><type pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:20">uint16_t</name></type> <name pos:start="49:22" pos:end="49:22">g</name> <init pos:start="49:24" pos:end="49:36">= <expr pos:start="49:26" pos:end="49:36"><operator pos:start="49:26" pos:end="49:26">*</operator><name pos:start="49:27" pos:end="49:29">src</name><operator pos:start="49:30" pos:end="49:31">++</operator> <operator pos:start="49:33" pos:end="49:34">&gt;&gt;</operator> <literal type="number" pos:start="49:36" pos:end="49:36">6</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:37"><decl pos:start="51:13" pos:end="51:36"><type pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:20">uint16_t</name></type> <name pos:start="51:22" pos:end="51:22">b</name> <init pos:start="51:24" pos:end="51:36">= <expr pos:start="51:26" pos:end="51:36"><operator pos:start="51:26" pos:end="51:26">*</operator><name pos:start="51:27" pos:end="51:29">src</name><operator pos:start="51:30" pos:end="51:31">++</operator> <operator pos:start="51:33" pos:end="51:34">&gt;&gt;</operator> <literal type="number" pos:start="51:36" pos:end="51:36">4</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="53:13" pos:end="59:50"><if pos:start="53:13" pos:end="55:55">if <condition pos:start="53:16" pos:end="53:49">(<expr pos:start="53:17" pos:end="53:48"><name pos:start="53:17" pos:end="53:31"><name pos:start="53:17" pos:end="53:21">avctx</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:31">codec_id</name></name> <operator pos:start="53:33" pos:end="53:34">==</operator> <name pos:start="53:36" pos:end="53:48">CODEC_ID_R210</name></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:55"><block_content pos:start="55:17" pos:end="55:55">

                <expr_stmt pos:start="55:17" pos:end="55:55"><expr pos:start="55:17" pos:end="55:54"><name pos:start="55:17" pos:end="55:21">pixel</name> <operator pos:start="55:23" pos:end="55:23">=</operator> <operator pos:start="55:25" pos:end="55:25">(</operator><name pos:start="55:26" pos:end="55:26">r</name> <operator pos:start="55:28" pos:end="55:29">&lt;&lt;</operator> <literal type="number" pos:start="55:31" pos:end="55:32">20</literal><operator pos:start="55:33" pos:end="55:33">)</operator> <operator pos:start="55:35" pos:end="55:35">|</operator> <operator pos:start="55:37" pos:end="55:37">(</operator><name pos:start="55:38" pos:end="55:38">g</name> <operator pos:start="55:40" pos:end="55:41">&lt;&lt;</operator> <literal type="number" pos:start="55:43" pos:end="55:44">10</literal><operator pos:start="55:45" pos:end="55:45">)</operator> <operator pos:start="55:47" pos:end="55:47">|</operator> <name pos:start="55:49" pos:end="55:49">b</name> <operator pos:start="55:51" pos:end="55:52">&gt;&gt;</operator> <literal type="number" pos:start="55:54" pos:end="55:54">2</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="57:13" pos:end="59:50">else<block type="pseudo" pos:start="59:17" pos:end="59:50"><block_content pos:start="59:17" pos:end="59:50">

                <expr_stmt pos:start="59:17" pos:end="59:50"><expr pos:start="59:17" pos:end="59:49"><name pos:start="59:17" pos:end="59:21">pixel</name> <operator pos:start="59:23" pos:end="59:23">=</operator> <operator pos:start="59:25" pos:end="59:25">(</operator><name pos:start="59:26" pos:end="59:26">r</name> <operator pos:start="59:28" pos:end="59:29">&lt;&lt;</operator> <literal type="number" pos:start="59:31" pos:end="59:32">22</literal><operator pos:start="59:33" pos:end="59:33">)</operator> <operator pos:start="59:35" pos:end="59:35">|</operator> <operator pos:start="59:37" pos:end="59:37">(</operator><name pos:start="59:38" pos:end="59:38">g</name> <operator pos:start="59:40" pos:end="59:41">&lt;&lt;</operator> <literal type="number" pos:start="59:43" pos:end="59:44">12</literal><operator pos:start="59:45" pos:end="59:45">)</operator> <operator pos:start="59:47" pos:end="59:47">|</operator> <name pos:start="59:49" pos:end="59:49">b</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="61:13" pos:end="67:49"><if pos:start="61:13" pos:end="63:49">if <condition pos:start="61:16" pos:end="61:49">(<expr pos:start="61:17" pos:end="61:48"><name pos:start="61:17" pos:end="61:31"><name pos:start="61:17" pos:end="61:21">avctx</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:31">codec_id</name></name> <operator pos:start="61:33" pos:end="61:34">==</operator> <name pos:start="61:36" pos:end="61:48">CODEC_ID_AVRP</name></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:49"><block_content pos:start="63:17" pos:end="63:49">

                <expr_stmt pos:start="63:17" pos:end="63:49"><expr pos:start="63:17" pos:end="63:48"><call pos:start="63:17" pos:end="63:48"><name pos:start="63:17" pos:end="63:35">bytestream_put_le32</name><argument_list pos:start="63:36" pos:end="63:48">(<argument pos:start="63:37" pos:end="63:40"><expr pos:start="63:37" pos:end="63:40"><operator pos:start="63:37" pos:end="63:37">&amp;</operator><name pos:start="63:38" pos:end="63:40">dst</name></expr></argument>, <argument pos:start="63:43" pos:end="63:47"><expr pos:start="63:43" pos:end="63:47"><name pos:start="63:43" pos:end="63:47">pixel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="65:13" pos:end="67:49">else<block type="pseudo" pos:start="67:17" pos:end="67:49"><block_content pos:start="67:17" pos:end="67:49">

                <expr_stmt pos:start="67:17" pos:end="67:49"><expr pos:start="67:17" pos:end="67:48"><call pos:start="67:17" pos:end="67:48"><name pos:start="67:17" pos:end="67:35">bytestream_put_be32</name><argument_list pos:start="67:36" pos:end="67:48">(<argument pos:start="67:37" pos:end="67:40"><expr pos:start="67:37" pos:end="67:40"><operator pos:start="67:37" pos:end="67:37">&amp;</operator><name pos:start="67:38" pos:end="67:40">dst</name></expr></argument>, <argument pos:start="67:43" pos:end="67:47"><expr pos:start="67:43" pos:end="67:47"><name pos:start="67:43" pos:end="67:47">pixel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="71:9" pos:end="71:50"><expr pos:start="71:9" pos:end="71:49"><name pos:start="71:9" pos:end="71:11">dst</name> <operator pos:start="71:13" pos:end="71:14">+=</operator> <operator pos:start="71:16" pos:end="71:16">(</operator><name pos:start="71:17" pos:end="71:29">aligned_width</name> <operator pos:start="71:31" pos:end="71:31">-</operator> <name pos:start="71:33" pos:end="71:44"><name pos:start="71:33" pos:end="71:37">avctx</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:44">width</name></name><operator pos:start="71:45" pos:end="71:45">)</operator> <operator pos:start="71:47" pos:end="71:47">*</operator> <literal type="number" pos:start="71:49" pos:end="71:49">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:37"><expr pos:start="73:9" pos:end="73:36"><name pos:start="73:9" pos:end="73:16">src_line</name> <operator pos:start="73:18" pos:end="73:19">+=</operator> <name pos:start="73:21" pos:end="73:36"><name pos:start="73:21" pos:end="73:23">pic</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:33">linesize</name><index pos:start="73:34" pos:end="73:36">[<expr pos:start="73:35" pos:end="73:35"><literal type="number" pos:start="73:35" pos:end="73:35">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="79:5" pos:end="79:45">return <expr pos:start="79:12" pos:end="79:44"><literal type="number" pos:start="79:12" pos:end="79:12">4</literal> <operator pos:start="79:14" pos:end="79:14">*</operator> <name pos:start="79:16" pos:end="79:28">aligned_width</name> <operator pos:start="79:30" pos:end="79:30">*</operator> <name pos:start="79:32" pos:end="79:44"><name pos:start="79:32" pos:end="79:36">avctx</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:44">height</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
