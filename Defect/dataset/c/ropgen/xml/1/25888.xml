<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25888.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">advanced_decode_i_mbs</name><parameter_list pos:start="1:33" pos:end="1:47">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:43">VC9Context</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:32">= <expr pos:start="7:25" pos:end="7:32"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:32"><name pos:start="7:26" pos:end="7:26">v</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:30">.</operator><name pos:start="7:31" pos:end="7:32">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">mqdiff</name></decl>, <decl pos:start="9:17" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:22">mquant</name></decl>, <decl pos:start="9:25" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:34">current_mb</name> <init pos:start="9:36" pos:end="9:38">= <expr pos:start="9:38" pos:end="9:38"><literal type="number" pos:start="9:38" pos:end="9:38">0</literal></expr></init></decl>, <decl pos:start="9:41" pos:end="9:57"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:41" pos:end="9:53">over_flags_mb</name> <init pos:start="9:55" pos:end="9:57">= <expr pos:start="9:57" pos:end="9:57"><literal type="number" pos:start="9:57" pos:end="9:57">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="43:5">for <control pos:start="13:9" pos:end="13:52">(<init pos:start="13:10" pos:end="13:19"><expr pos:start="13:10" pos:end="13:18"><name pos:start="13:10" pos:end="13:16"><name pos:start="13:10" pos:end="13:10">s</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:16">mb_y</name></name><operator pos:start="13:17" pos:end="13:17">=</operator><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>;</init> <condition pos:start="13:21" pos:end="13:41"><expr pos:start="13:21" pos:end="13:40"><name pos:start="13:21" pos:end="13:27"><name pos:start="13:21" pos:end="13:21">s</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:27">mb_y</name></name><operator pos:start="13:28" pos:end="13:28">&lt;</operator><name pos:start="13:29" pos:end="13:40"><name pos:start="13:29" pos:end="13:29">s</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:40">mb_height</name></name></expr>;</condition> <incr pos:start="13:43" pos:end="13:51"><expr pos:start="13:43" pos:end="13:51"><name pos:start="13:43" pos:end="13:49"><name pos:start="13:43" pos:end="13:43">s</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:49">mb_y</name></name><operator pos:start="13:50" pos:end="13:51">++</operator></expr></incr>)</control>

    <block pos:start="15:5" pos:end="43:5">{<block_content pos:start="17:9" pos:end="41:21">

        <for pos:start="17:9" pos:end="39:9">for <control pos:start="17:13" pos:end="17:55">(<init pos:start="17:14" pos:end="17:23"><expr pos:start="17:14" pos:end="17:22"><name pos:start="17:14" pos:end="17:20"><name pos:start="17:14" pos:end="17:14">s</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:20">mb_x</name></name><operator pos:start="17:21" pos:end="17:21">=</operator><literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr>;</init> <condition pos:start="17:25" pos:end="17:44"><expr pos:start="17:25" pos:end="17:43"><name pos:start="17:25" pos:end="17:31"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:31">mb_x</name></name><operator pos:start="17:32" pos:end="17:32">&lt;</operator><name pos:start="17:33" pos:end="17:43"><name pos:start="17:33" pos:end="17:33">s</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:43">mb_width</name></name></expr>;</condition> <incr pos:start="17:46" pos:end="17:54"><expr pos:start="17:46" pos:end="17:54"><name pos:start="17:46" pos:end="17:52"><name pos:start="17:46" pos:end="17:46">s</name><operator pos:start="17:47" pos:end="17:48">-&gt;</operator><name pos:start="17:49" pos:end="17:52">mb_x</name></name><operator pos:start="17:53" pos:end="17:54">++</operator></expr></incr>)</control>

        <block pos:start="19:9" pos:end="39:9">{<block_content pos:start="21:13" pos:end="33:25">

            <if_stmt pos:start="21:13" pos:end="27:63"><if pos:start="21:13" pos:end="23:45">if <condition pos:start="21:16" pos:end="21:40">(<expr pos:start="21:17" pos:end="21:39"><name pos:start="21:17" pos:end="21:39"><name pos:start="21:17" pos:end="21:17">v</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:32">ac_pred_plane</name><operator pos:start="21:33" pos:end="21:33">.</operator><name pos:start="21:34" pos:end="21:39">is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:45"><block_content pos:start="23:17" pos:end="23:45">

                <expr_stmt pos:start="23:17" pos:end="23:45"><expr pos:start="23:17" pos:end="23:44"><name pos:start="23:17" pos:end="23:26"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:26">ac_pred</name></name> <operator pos:start="23:28" pos:end="23:28">=</operator> <call pos:start="23:30" pos:end="23:44"><name pos:start="23:30" pos:end="23:37">get_bits</name><argument_list pos:start="23:38" pos:end="23:44">(<argument pos:start="23:39" pos:end="23:40"><expr pos:start="23:39" pos:end="23:40"><name pos:start="23:39" pos:end="23:40">gb</name></expr></argument>, <argument pos:start="23:43" pos:end="23:43"><expr pos:start="23:43" pos:end="23:43"><literal type="number" pos:start="23:43" pos:end="23:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="25:13" pos:end="27:63">else<block type="pseudo" pos:start="27:17" pos:end="27:63"><block_content pos:start="27:17" pos:end="27:63">

                <expr_stmt pos:start="27:17" pos:end="27:63"><expr pos:start="27:17" pos:end="27:62"><name pos:start="27:17" pos:end="27:26"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:26">ac_pred</name></name> <operator pos:start="27:28" pos:end="27:28">=</operator> <name pos:start="27:30" pos:end="27:62"><name pos:start="27:30" pos:end="27:30">v</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:45">ac_pred_plane</name><operator pos:start="27:46" pos:end="27:46">.</operator><name pos:start="27:47" pos:end="27:50">data</name><index pos:start="27:51" pos:end="27:62">[<expr pos:start="27:52" pos:end="27:61"><name pos:start="27:52" pos:end="27:61">current_mb</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="29:13" pos:end="31:48"><if pos:start="29:13" pos:end="31:48">if <condition pos:start="29:16" pos:end="29:63">(<expr pos:start="29:17" pos:end="29:62"><name pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:17">v</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:27">condover</name></name> <operator pos:start="29:29" pos:end="29:30">==</operator> <literal type="number" pos:start="29:32" pos:end="29:32">3</literal> <operator pos:start="29:34" pos:end="29:35">&amp;&amp;</operator> <name pos:start="29:37" pos:end="29:62"><name pos:start="29:37" pos:end="29:37">v</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:55">over_flags_plane</name><operator pos:start="29:56" pos:end="29:56">.</operator><name pos:start="29:57" pos:end="29:62">is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:48"><block_content pos:start="31:17" pos:end="31:48">

                <expr_stmt pos:start="31:17" pos:end="31:48"><expr pos:start="31:17" pos:end="31:47"><name pos:start="31:17" pos:end="31:29">over_flags_mb</name> <operator pos:start="31:31" pos:end="31:31">=</operator> <call pos:start="31:33" pos:end="31:47"><name pos:start="31:33" pos:end="31:40">get_bits</name><argument_list pos:start="31:41" pos:end="31:47">(<argument pos:start="31:42" pos:end="31:43"><expr pos:start="31:42" pos:end="31:43"><name pos:start="31:42" pos:end="31:43">gb</name></expr></argument>, <argument pos:start="31:46" pos:end="31:46"><expr pos:start="31:46" pos:end="31:46"><literal type="number" pos:start="31:46" pos:end="31:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:25"><expr pos:start="33:13" pos:end="33:24"><call pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:22">GET_MQUANT</name><argument_list pos:start="33:23" pos:end="33:24">()</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="37:13" pos:end="37:28">/* TODO: lots */</comment>

        </block_content>}</block></for>

        <expr_stmt pos:start="41:9" pos:end="41:21"><expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:18">current_mb</name><operator pos:start="41:19" pos:end="41:20">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
