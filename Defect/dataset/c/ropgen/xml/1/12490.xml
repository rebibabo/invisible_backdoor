<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12490.c" pos:tabs="8"><function pos:start="1:1" pos:end="36:15"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:29">vfio_rom_read</name><parameter_list pos:start="1:30" pos:end="1:71">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:50">hwaddr</name></type> <name pos:start="1:52" pos:end="1:55">addr</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:70"><decl pos:start="1:58" pos:end="1:70"><type pos:start="1:58" pos:end="1:70"><name pos:start="1:58" pos:end="1:65">unsigned</name></type> <name pos:start="1:67" pos:end="1:70">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="36:15">{<block_content pos:start="5:5" pos:end="36:15">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VFIODevice</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">vdev</name> <init pos:start="5:22" pos:end="5:29">= <expr pos:start="5:24" pos:end="5:29"><name pos:start="5:24" pos:end="5:29">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:16">val</name> <init pos:start="7:18" pos:end="7:50">= <expr pos:start="7:20" pos:end="7:50"><operator pos:start="7:20" pos:end="7:20">(</operator><operator pos:start="7:21" pos:end="7:21">(</operator><name pos:start="7:22" pos:end="7:29">uint64_t</name><operator pos:start="7:30" pos:end="7:30">)</operator><literal type="number" pos:start="7:31" pos:end="7:31">1</literal> <operator pos:start="7:33" pos:end="7:34">&lt;&lt;</operator> <operator pos:start="7:36" pos:end="7:36">(</operator><name pos:start="7:37" pos:end="7:40">size</name> <operator pos:start="7:42" pos:end="7:42">*</operator> <literal type="number" pos:start="7:44" pos:end="7:44">8</literal><operator pos:start="7:45" pos:end="7:45">)</operator><operator pos:start="7:46" pos:end="7:46">)</operator> <operator pos:start="7:48" pos:end="7:48">-</operator> <literal type="number" pos:start="7:50" pos:end="7:50">1</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:61">/* Load the ROM lazily when the guest tries to read it */</comment>

    <if_stmt pos:start="13:5" pos:end="36:15"><if pos:start="13:5" pos:end="36:15">if <condition pos:start="13:8" pos:end="13:29">(<expr pos:start="13:9" pos:end="13:28"><call pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:16">unlikely</name><argument_list pos:start="13:17" pos:end="13:28">(<argument pos:start="13:18" pos:end="13:27"><expr pos:start="13:18" pos:end="13:27"><operator pos:start="13:18" pos:end="13:18">!</operator><name pos:start="13:19" pos:end="13:27"><name pos:start="13:19" pos:end="13:22">vdev</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:27">rom</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:31" pos:end="36:15">{<block_content pos:start="22:5" pos:end="36:15">








    <expr_stmt pos:start="22:5" pos:end="24:75"><expr pos:start="22:5" pos:end="24:74"><call pos:start="22:5" pos:end="24:74"><name pos:start="22:5" pos:end="22:10">memcpy</name><argument_list pos:start="22:11" pos:end="24:74">(<argument pos:start="22:12" pos:end="22:15"><expr pos:start="22:12" pos:end="22:15"><operator pos:start="22:12" pos:end="22:12">&amp;</operator><name pos:start="22:13" pos:end="22:15">val</name></expr></argument>, <argument pos:start="22:18" pos:end="22:33"><expr pos:start="22:18" pos:end="22:33"><name pos:start="22:18" pos:end="22:26"><name pos:start="22:18" pos:end="22:21">vdev</name><operator pos:start="22:22" pos:end="22:23">-&gt;</operator><name pos:start="22:24" pos:end="22:26">rom</name></name> <operator pos:start="22:28" pos:end="22:28">+</operator> <name pos:start="22:30" pos:end="22:33">addr</name></expr></argument>,

           <argument pos:start="24:12" pos:end="24:73"><expr pos:start="24:12" pos:end="24:73"><ternary pos:start="24:12" pos:end="24:73"><condition pos:start="24:12" pos:end="24:36"><expr pos:start="24:12" pos:end="24:34"><operator pos:start="24:12" pos:end="24:12">(</operator><name pos:start="24:13" pos:end="24:16">addr</name> <operator pos:start="24:18" pos:end="24:18">&lt;</operator> <name pos:start="24:20" pos:end="24:33"><name pos:start="24:20" pos:end="24:23">vdev</name><operator pos:start="24:24" pos:end="24:25">-&gt;</operator><name pos:start="24:26" pos:end="24:33">rom_size</name></name><operator pos:start="24:34" pos:end="24:34">)</operator></expr> ?</condition><then pos:start="24:38" pos:end="24:69"> <expr pos:start="24:38" pos:end="24:69"><call pos:start="24:38" pos:end="24:69"><name pos:start="24:38" pos:end="24:40">MIN</name><argument_list pos:start="24:41" pos:end="24:69">(<argument pos:start="24:42" pos:end="24:45"><expr pos:start="24:42" pos:end="24:45"><name pos:start="24:42" pos:end="24:45">size</name></expr></argument>, <argument pos:start="24:48" pos:end="24:68"><expr pos:start="24:48" pos:end="24:68"><name pos:start="24:48" pos:end="24:61"><name pos:start="24:48" pos:end="24:51">vdev</name><operator pos:start="24:52" pos:end="24:53">-&gt;</operator><name pos:start="24:54" pos:end="24:61">rom_size</name></name> <operator pos:start="24:63" pos:end="24:63">-</operator> <name pos:start="24:65" pos:end="24:68">addr</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="24:71" pos:end="24:73">: <expr pos:start="24:73" pos:end="24:73"><literal type="number" pos:start="24:73" pos:end="24:73">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="28:5" pos:end="32:50"><expr pos:start="28:5" pos:end="32:49"><call pos:start="28:5" pos:end="32:49"><name pos:start="28:5" pos:end="28:11">DPRINTF</name><argument_list pos:start="28:12" pos:end="32:49">(<argument pos:start="28:13" pos:end="28:75"><expr pos:start="28:13" pos:end="28:75"><literal type="string" pos:start="28:13" pos:end="28:39">"%s(%04x:%02x:%02x.%x, 0x%"</literal><name pos:start="28:40" pos:end="28:50">HWADDR_PRIx</name><literal type="string" pos:start="28:51" pos:end="28:65">", 0x%x) = 0x%"</literal><name pos:start="28:66" pos:end="28:71">PRIx64</name><literal type="string" pos:start="28:72" pos:end="28:75">"\n"</literal></expr></argument>,

            <argument pos:start="30:13" pos:end="30:20"><expr pos:start="30:13" pos:end="30:20"><name pos:start="30:13" pos:end="30:20">__func__</name></expr></argument>, <argument pos:start="30:23" pos:end="30:39"><expr pos:start="30:23" pos:end="30:39"><name pos:start="30:23" pos:end="30:39"><name pos:start="30:23" pos:end="30:26">vdev</name><operator pos:start="30:27" pos:end="30:28">-&gt;</operator><name pos:start="30:29" pos:end="30:32">host</name><operator pos:start="30:33" pos:end="30:33">.</operator><name pos:start="30:34" pos:end="30:39">domain</name></name></expr></argument>, <argument pos:start="30:42" pos:end="30:55"><expr pos:start="30:42" pos:end="30:55"><name pos:start="30:42" pos:end="30:55"><name pos:start="30:42" pos:end="30:45">vdev</name><operator pos:start="30:46" pos:end="30:47">-&gt;</operator><name pos:start="30:48" pos:end="30:51">host</name><operator pos:start="30:52" pos:end="30:52">.</operator><name pos:start="30:53" pos:end="30:55">bus</name></name></expr></argument>, <argument pos:start="30:58" pos:end="30:72"><expr pos:start="30:58" pos:end="30:72"><name pos:start="30:58" pos:end="30:72"><name pos:start="30:58" pos:end="30:61">vdev</name><operator pos:start="30:62" pos:end="30:63">-&gt;</operator><name pos:start="30:64" pos:end="30:67">host</name><operator pos:start="30:68" pos:end="30:68">.</operator><name pos:start="30:69" pos:end="30:72">slot</name></name></expr></argument>,

            <argument pos:start="32:13" pos:end="32:31"><expr pos:start="32:13" pos:end="32:31"><name pos:start="32:13" pos:end="32:31"><name pos:start="32:13" pos:end="32:16">vdev</name><operator pos:start="32:17" pos:end="32:18">-&gt;</operator><name pos:start="32:19" pos:end="32:22">host</name><operator pos:start="32:23" pos:end="32:23">.</operator><name pos:start="32:24" pos:end="32:31">function</name></name></expr></argument>, <argument pos:start="32:34" pos:end="32:37"><expr pos:start="32:34" pos:end="32:37"><name pos:start="32:34" pos:end="32:37">addr</name></expr></argument>, <argument pos:start="32:40" pos:end="32:43"><expr pos:start="32:40" pos:end="32:43"><name pos:start="32:40" pos:end="32:43">size</name></expr></argument>, <argument pos:start="32:46" pos:end="32:48"><expr pos:start="32:46" pos:end="32:48"><name pos:start="32:46" pos:end="32:48">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="36:5" pos:end="36:15">return <expr pos:start="36:12" pos:end="36:14"><name pos:start="36:12" pos:end="36:14">val</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></function>
</unit>
