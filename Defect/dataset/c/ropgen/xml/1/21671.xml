<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21671.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">CharDriverState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:47">qmp_chardev_open_socket</name><parameter_list pos:start="1:48" pos:end="7:61">(<parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">id</name></decl></parameter>,

                                                <parameter pos:start="3:49" pos:end="3:71"><decl pos:start="3:49" pos:end="3:71"><type pos:start="3:49" pos:end="3:71"><name pos:start="3:49" pos:end="3:62">ChardevBackend</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:71">backend</name></decl></parameter>,

                                                <parameter pos:start="5:49" pos:end="5:66"><decl pos:start="5:49" pos:end="5:66"><type pos:start="5:49" pos:end="5:66"><name pos:start="5:49" pos:end="5:61">ChardevReturn</name> <modifier pos:start="5:63" pos:end="5:63">*</modifier></type><name pos:start="5:64" pos:end="5:66">ret</name></decl></parameter>,

                                                <parameter pos:start="7:49" pos:end="7:60"><decl pos:start="7:49" pos:end="7:60"><type pos:start="7:49" pos:end="7:60"><name pos:start="7:49" pos:end="7:53">Error</name> <modifier pos:start="7:55" pos:end="7:55">*</modifier><modifier pos:start="7:56" pos:end="7:56">*</modifier></type><name pos:start="7:57" pos:end="7:60">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="135:1">{<block_content pos:start="11:5" pos:end="133:15">

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">CharDriverState</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:24">chr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">TCPCharDriver</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:20">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:43"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">ChardevSocket</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:23">sock</name> <init pos:start="15:25" pos:end="15:43">= <expr pos:start="15:27" pos:end="15:43"><name pos:start="15:27" pos:end="15:43"><name pos:start="15:27" pos:end="15:33">backend</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:36">u</name><operator pos:start="15:37" pos:end="15:37">.</operator><name pos:start="15:38" pos:end="15:43">socket</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:36"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:17">SocketAddress</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:23">addr</name> <init pos:start="17:25" pos:end="17:36">= <expr pos:start="17:27" pos:end="17:36"><name pos:start="17:27" pos:end="17:36"><name pos:start="17:27" pos:end="17:30">sock</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:36">addr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:68"><decl pos:start="19:5" pos:end="19:67"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">bool</name></type> <name pos:start="19:10" pos:end="19:19">do_nodelay</name>     <init pos:start="19:25" pos:end="19:67">= <expr pos:start="19:27" pos:end="19:67"><ternary pos:start="19:27" pos:end="19:67"><condition pos:start="19:27" pos:end="19:45"><expr pos:start="19:27" pos:end="19:43"><name pos:start="19:27" pos:end="19:43"><name pos:start="19:27" pos:end="19:30">sock</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:43">has_nodelay</name></name></expr> ?</condition><then pos:start="19:47" pos:end="19:59"> <expr pos:start="19:47" pos:end="19:59"><name pos:start="19:47" pos:end="19:59"><name pos:start="19:47" pos:end="19:50">sock</name><operator pos:start="19:51" pos:end="19:52">-&gt;</operator><name pos:start="19:53" pos:end="19:59">nodelay</name></name></expr> </then><else pos:start="19:61" pos:end="19:67">: <expr pos:start="19:63" pos:end="19:67"><name pos:start="19:63" pos:end="19:67">false</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:67"><decl pos:start="21:5" pos:end="21:66"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">bool</name></type> <name pos:start="21:10" pos:end="21:18">is_listen</name>      <init pos:start="21:25" pos:end="21:66">= <expr pos:start="21:27" pos:end="21:66"><ternary pos:start="21:27" pos:end="21:66"><condition pos:start="21:27" pos:end="21:45"><expr pos:start="21:27" pos:end="21:42"><name pos:start="21:27" pos:end="21:42"><name pos:start="21:27" pos:end="21:30">sock</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:42">has_server</name></name></expr>  ?</condition><then pos:start="21:47" pos:end="21:58"> <expr pos:start="21:47" pos:end="21:58"><name pos:start="21:47" pos:end="21:58"><name pos:start="21:47" pos:end="21:50">sock</name><operator pos:start="21:51" pos:end="21:52">-&gt;</operator><name pos:start="21:53" pos:end="21:58">server</name></name></expr>  </then><else pos:start="21:61" pos:end="21:66">: <expr pos:start="21:63" pos:end="21:66"><name pos:start="21:63" pos:end="21:66">true</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:68"><decl pos:start="23:5" pos:end="23:67"><type pos:start="23:5" pos:end="23:8"><name pos:start="23:5" pos:end="23:8">bool</name></type> <name pos:start="23:10" pos:end="23:18">is_telnet</name>      <init pos:start="23:25" pos:end="23:67">= <expr pos:start="23:27" pos:end="23:67"><ternary pos:start="23:27" pos:end="23:67"><condition pos:start="23:27" pos:end="23:45"><expr pos:start="23:27" pos:end="23:42"><name pos:start="23:27" pos:end="23:42"><name pos:start="23:27" pos:end="23:30">sock</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:42">has_telnet</name></name></expr>  ?</condition><then pos:start="23:47" pos:end="23:58"> <expr pos:start="23:47" pos:end="23:58"><name pos:start="23:47" pos:end="23:58"><name pos:start="23:47" pos:end="23:50">sock</name><operator pos:start="23:51" pos:end="23:52">-&gt;</operator><name pos:start="23:53" pos:end="23:58">telnet</name></name></expr>  </then><else pos:start="23:61" pos:end="23:67">: <expr pos:start="23:63" pos:end="23:67"><name pos:start="23:63" pos:end="23:67">false</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:68"><decl pos:start="25:5" pos:end="25:67"><type pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:8">bool</name></type> <name pos:start="25:10" pos:end="25:23">is_waitconnect</name> <init pos:start="25:25" pos:end="25:67">= <expr pos:start="25:27" pos:end="25:67"><ternary pos:start="25:27" pos:end="25:67"><condition pos:start="25:27" pos:end="25:45"><expr pos:start="25:27" pos:end="25:40"><name pos:start="25:27" pos:end="25:40"><name pos:start="25:27" pos:end="25:30">sock</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:40">has_wait</name></name></expr>    ?</condition><then pos:start="25:47" pos:end="25:56"> <expr pos:start="25:47" pos:end="25:56"><name pos:start="25:47" pos:end="25:56"><name pos:start="25:47" pos:end="25:50">sock</name><operator pos:start="25:51" pos:end="25:52">-&gt;</operator><name pos:start="25:53" pos:end="25:56">wait</name></name></expr>    </then><else pos:start="25:61" pos:end="25:67">: <expr pos:start="25:63" pos:end="25:67"><name pos:start="25:63" pos:end="25:67">false</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:68"><decl pos:start="27:5" pos:end="27:67"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:11">int64_t</name></type> <name pos:start="27:13" pos:end="27:21">reconnect</name>   <init pos:start="27:25" pos:end="27:67">= <expr pos:start="27:27" pos:end="27:67"><ternary pos:start="27:27" pos:end="27:67"><condition pos:start="27:27" pos:end="27:47"><expr pos:start="27:27" pos:end="27:45"><name pos:start="27:27" pos:end="27:45"><name pos:start="27:27" pos:end="27:30">sock</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:45">has_reconnect</name></name></expr> ?</condition><then pos:start="27:49" pos:end="27:63"> <expr pos:start="27:49" pos:end="27:63"><name pos:start="27:49" pos:end="27:63"><name pos:start="27:49" pos:end="27:52">sock</name><operator pos:start="27:53" pos:end="27:54">-&gt;</operator><name pos:start="27:55" pos:end="27:63">reconnect</name></name></expr> </then><else pos:start="27:65" pos:end="27:67">: <expr pos:start="27:67" pos:end="27:67"><literal type="number" pos:start="27:67" pos:end="27:67">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:71"><decl pos:start="29:5" pos:end="29:70"><type pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:17">ChardevCommon</name> <modifier pos:start="29:19" pos:end="29:19">*</modifier></type><name pos:start="29:20" pos:end="29:25">common</name> <init pos:start="29:27" pos:end="29:70">= <expr pos:start="29:29" pos:end="29:70"><call pos:start="29:29" pos:end="29:70"><name pos:start="29:29" pos:end="29:51">qapi_ChardevSocket_base</name><argument_list pos:start="29:52" pos:end="29:70">(<argument pos:start="29:53" pos:end="29:69"><expr pos:start="29:53" pos:end="29:69"><name pos:start="29:53" pos:end="29:69"><name pos:start="29:53" pos:end="29:59">backend</name><operator pos:start="29:60" pos:end="29:61">-&gt;</operator><name pos:start="29:62" pos:end="29:62">u</name><operator pos:start="29:63" pos:end="29:63">.</operator><name pos:start="29:64" pos:end="29:69">socket</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:7">chr</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:38"><name pos:start="33:11" pos:end="33:24">qemu_chr_alloc</name><argument_list pos:start="33:25" pos:end="33:38">(<argument pos:start="33:26" pos:end="33:31"><expr pos:start="33:26" pos:end="33:31"><name pos:start="33:26" pos:end="33:31">common</name></expr></argument>, <argument pos:start="33:34" pos:end="33:37"><expr pos:start="33:34" pos:end="33:37"><name pos:start="33:34" pos:end="33:37">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:13">(<expr pos:start="35:9" pos:end="35:12"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:12">chr</name></expr>)</condition> <block pos:start="35:15" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:20">

        <return pos:start="37:9" pos:end="37:20">return <expr pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:5">s</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <call pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:14">g_new0</name><argument_list pos:start="41:15" pos:end="41:32">(<argument pos:start="41:16" pos:end="41:28"><expr pos:start="41:16" pos:end="41:28"><name pos:start="41:16" pos:end="41:28">TCPCharDriver</name></expr></argument>, <argument pos:start="41:31" pos:end="41:31"><expr pos:start="41:31" pos:end="41:31"><literal type="number" pos:start="41:31" pos:end="41:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:56"><expr pos:start="45:5" pos:end="45:55"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:14">is_unix</name></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:27"><name pos:start="45:18" pos:end="45:21">addr</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:27">type</name></name> <operator pos:start="45:29" pos:end="45:30">==</operator> <name pos:start="45:32" pos:end="45:55">SOCKET_ADDRESS_KIND_UNIX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:16">is_listen</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:28">is_listen</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:16">is_telnet</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:28">is_telnet</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:17">do_nodelay</name></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:30">do_nodelay</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:50"><expr pos:start="53:5" pos:end="53:49"><call pos:start="53:5" pos:end="53:49"><name pos:start="53:5" pos:end="53:27">qapi_copy_SocketAddress</name><argument_list pos:start="53:28" pos:end="53:49">(<argument pos:start="53:29" pos:end="53:36"><expr pos:start="53:29" pos:end="53:36"><operator pos:start="53:29" pos:end="53:29">&amp;</operator><name pos:start="53:30" pos:end="53:36"><name pos:start="53:30" pos:end="53:30">s</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:36">addr</name></name></expr></argument>, <argument pos:start="53:39" pos:end="53:48"><expr pos:start="53:39" pos:end="53:48"><name pos:start="53:39" pos:end="53:48"><name pos:start="53:39" pos:end="53:42">sock</name><operator pos:start="53:43" pos:end="53:44">-&gt;</operator><name pos:start="53:45" pos:end="53:48">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:20"><expr pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:15"><name pos:start="57:5" pos:end="57:7">chr</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:15">opaque</name></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:19">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:35"><expr pos:start="59:5" pos:end="59:34"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:7">chr</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:18">chr_write</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:34">tcp_chr_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:43"><expr pos:start="61:5" pos:end="61:42"><name pos:start="61:5" pos:end="61:22"><name pos:start="61:5" pos:end="61:7">chr</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:22">chr_sync_read</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:42">tcp_chr_sync_read</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:35"><expr pos:start="63:5" pos:end="63:34"><name pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:7">chr</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:18">chr_close</name></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:34">tcp_chr_close</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:37"><expr pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:7">chr</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:19">get_msgfds</name></name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:36">tcp_get_msgfds</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:37"><expr pos:start="67:5" pos:end="67:36"><name pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:7">chr</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:19">set_msgfds</name></name> <operator pos:start="67:21" pos:end="67:21">=</operator> <name pos:start="67:23" pos:end="67:36">tcp_set_msgfds</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:45"><expr pos:start="69:5" pos:end="69:44"><name pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:7">chr</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:23">chr_add_client</name></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:44">tcp_chr_add_client</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:43"><expr pos:start="71:5" pos:end="71:42"><name pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:7">chr</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:22">chr_add_watch</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <name pos:start="71:26" pos:end="71:42">tcp_chr_add_watch</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:63"><expr pos:start="73:5" pos:end="73:62"><name pos:start="73:5" pos:end="73:32"><name pos:start="73:5" pos:end="73:7">chr</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:32">chr_update_read_handler</name></name> <operator pos:start="73:34" pos:end="73:34">=</operator> <name pos:start="73:36" pos:end="73:62">tcp_chr_update_read_handler</name></expr>;</expr_stmt>

    <comment type="block" pos:start="75:5" pos:end="75:51">/* be isn't opened until we get a connection */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:33"><expr pos:start="77:5" pos:end="77:32"><name pos:start="77:5" pos:end="77:25"><name pos:start="77:5" pos:end="77:7">chr</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:25">explicit_be_open</name></name> <operator pos:start="77:27" pos:end="77:27">=</operator> <name pos:start="77:29" pos:end="77:32">true</name></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="83:69"><expr pos:start="81:5" pos:end="83:68"><name pos:start="81:5" pos:end="81:17"><name pos:start="81:5" pos:end="81:7">chr</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:17">filename</name></name> <operator pos:start="81:19" pos:end="81:19">=</operator> <call pos:start="81:21" pos:end="83:68"><name pos:start="81:21" pos:end="81:40">SocketAddress_to_str</name><argument_list pos:start="81:41" pos:end="83:68">(<argument pos:start="81:42" pos:end="81:56"><expr pos:start="81:42" pos:end="81:56"><literal type="string" pos:start="81:42" pos:end="81:56">"disconnected:"</literal></expr></argument>,

                                         <argument pos:start="83:42" pos:end="83:45"><expr pos:start="83:42" pos:end="83:45"><name pos:start="83:42" pos:end="83:45">addr</name></expr></argument>, <argument pos:start="83:48" pos:end="83:56"><expr pos:start="83:48" pos:end="83:56"><name pos:start="83:48" pos:end="83:56">is_listen</name></expr></argument>, <argument pos:start="83:59" pos:end="83:67"><expr pos:start="83:59" pos:end="83:67"><name pos:start="83:59" pos:end="83:67">is_telnet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="99:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:18">(<expr pos:start="87:9" pos:end="87:17"><name pos:start="87:9" pos:end="87:17">is_listen</name></expr>)</condition> <block pos:start="87:20" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:9">

        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:22">(<expr pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:21">is_telnet</name></expr>)</condition> <block pos:start="89:24" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:32">

            <expr_stmt pos:start="91:13" pos:end="91:32"><expr pos:start="91:13" pos:end="91:31"><name pos:start="91:13" pos:end="91:27"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:27">do_telnetopt</name></name> <operator pos:start="91:29" pos:end="91:29">=</operator> <literal type="number" pos:start="91:31" pos:end="91:31">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="95:7" pos:end="99:5">else if <condition pos:start="95:15" pos:end="95:29">(<expr pos:start="95:16" pos:end="95:28"><name pos:start="95:16" pos:end="95:24">reconnect</name> <operator pos:start="95:26" pos:end="95:26">&gt;</operator> <literal type="number" pos:start="95:28" pos:end="95:28">0</literal></expr>)</condition> <block pos:start="95:31" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:38">

        <expr_stmt pos:start="97:9" pos:end="97:38"><expr pos:start="97:9" pos:end="97:37"><name pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:25">reconnect_time</name></name> <operator pos:start="97:27" pos:end="97:27">=</operator> <name pos:start="97:29" pos:end="97:37">reconnect</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="115:5"><if pos:start="103:5" pos:end="107:5">if <condition pos:start="103:8" pos:end="103:26">(<expr pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:25">reconnect_time</name></name></expr>)</condition> <block pos:start="103:28" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:32">

        <expr_stmt pos:start="105:9" pos:end="105:32"><expr pos:start="105:9" pos:end="105:31"><call pos:start="105:9" pos:end="105:31"><name pos:start="105:9" pos:end="105:26">socket_try_connect</name><argument_list pos:start="105:27" pos:end="105:31">(<argument pos:start="105:28" pos:end="105:30"><expr pos:start="105:28" pos:end="105:30"><name pos:start="105:28" pos:end="105:30">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="107:7" pos:end="115:5">else if <condition pos:start="107:15" pos:end="107:51">(<expr pos:start="107:16" pos:end="107:50"><operator pos:start="107:16" pos:end="107:16">!</operator><call pos:start="107:17" pos:end="107:50"><name pos:start="107:17" pos:end="107:39">qemu_chr_open_socket_fd</name><argument_list pos:start="107:40" pos:end="107:50">(<argument pos:start="107:41" pos:end="107:43"><expr pos:start="107:41" pos:end="107:43"><name pos:start="107:41" pos:end="107:43">chr</name></expr></argument>, <argument pos:start="107:46" pos:end="107:49"><expr pos:start="107:46" pos:end="107:49"><name pos:start="107:46" pos:end="107:49">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:53" pos:end="115:5">{<block_content pos:start="109:9" pos:end="113:20">

        <expr_stmt pos:start="109:9" pos:end="109:18"><expr pos:start="109:9" pos:end="109:17"><call pos:start="109:9" pos:end="109:17"><name pos:start="109:9" pos:end="109:14">g_free</name><argument_list pos:start="109:15" pos:end="109:17">(<argument pos:start="109:16" pos:end="109:16"><expr pos:start="109:16" pos:end="109:16"><name pos:start="109:16" pos:end="109:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:34"><expr pos:start="111:9" pos:end="111:33"><call pos:start="111:9" pos:end="111:33"><name pos:start="111:9" pos:end="111:28">qemu_chr_free_common</name><argument_list pos:start="111:29" pos:end="111:33">(<argument pos:start="111:30" pos:end="111:32"><expr pos:start="111:30" pos:end="111:32"><name pos:start="111:30" pos:end="111:32">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="113:9" pos:end="113:20">return <expr pos:start="113:16" pos:end="113:19"><name pos:start="113:16" pos:end="113:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="119:5" pos:end="129:5"><if pos:start="119:5" pos:end="129:5">if <condition pos:start="119:8" pos:end="119:36">(<expr pos:start="119:9" pos:end="119:35"><name pos:start="119:9" pos:end="119:17">is_listen</name> <operator pos:start="119:19" pos:end="119:20">&amp;&amp;</operator> <name pos:start="119:22" pos:end="119:35">is_waitconnect</name></expr>)</condition> <block pos:start="119:38" pos:end="129:5">{<block_content pos:start="121:9" pos:end="127:74">

        <expr_stmt pos:start="121:9" pos:end="123:31"><expr pos:start="121:9" pos:end="123:30"><call pos:start="121:9" pos:end="123:30"><name pos:start="121:9" pos:end="121:15">fprintf</name><argument_list pos:start="121:16" pos:end="123:30">(<argument pos:start="121:17" pos:end="121:22"><expr pos:start="121:17" pos:end="121:22"><name pos:start="121:17" pos:end="121:22">stderr</name></expr></argument>, <argument pos:start="121:25" pos:end="121:62"><expr pos:start="121:25" pos:end="121:62"><literal type="string" pos:start="121:25" pos:end="121:62">"QEMU waiting for connection on: %s\n"</literal></expr></argument>,

                <argument pos:start="123:17" pos:end="123:29"><expr pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:19">chr</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:29">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:65"><expr pos:start="125:9" pos:end="125:64"><call pos:start="125:9" pos:end="125:64"><name pos:start="125:9" pos:end="125:22">tcp_chr_accept</name><argument_list pos:start="125:23" pos:end="125:64">(<argument pos:start="125:24" pos:end="125:49"><expr pos:start="125:24" pos:end="125:49"><call pos:start="125:24" pos:end="125:49"><name pos:start="125:24" pos:end="125:34">QIO_CHANNEL</name><argument_list pos:start="125:35" pos:end="125:49">(<argument pos:start="125:36" pos:end="125:48"><expr pos:start="125:36" pos:end="125:48"><name pos:start="125:36" pos:end="125:48"><name pos:start="125:36" pos:end="125:36">s</name><operator pos:start="125:37" pos:end="125:38">-&gt;</operator><name pos:start="125:39" pos:end="125:48">listen_ioc</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="125:52" pos:end="125:58"><expr pos:start="125:52" pos:end="125:58"><name pos:start="125:52" pos:end="125:58">G_IO_IN</name></expr></argument>, <argument pos:start="125:61" pos:end="125:63"><expr pos:start="125:61" pos:end="125:63"><name pos:start="125:61" pos:end="125:63">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:74"><expr pos:start="127:9" pos:end="127:73"><call pos:start="127:9" pos:end="127:73"><name pos:start="127:9" pos:end="127:32">qio_channel_set_blocking</name><argument_list pos:start="127:33" pos:end="127:73">(<argument pos:start="127:34" pos:end="127:59"><expr pos:start="127:34" pos:end="127:59"><call pos:start="127:34" pos:end="127:59"><name pos:start="127:34" pos:end="127:44">QIO_CHANNEL</name><argument_list pos:start="127:45" pos:end="127:59">(<argument pos:start="127:46" pos:end="127:58"><expr pos:start="127:46" pos:end="127:58"><name pos:start="127:46" pos:end="127:58"><name pos:start="127:46" pos:end="127:46">s</name><operator pos:start="127:47" pos:end="127:48">-&gt;</operator><name pos:start="127:49" pos:end="127:58">listen_ioc</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="127:62" pos:end="127:66"><expr pos:start="127:62" pos:end="127:66"><name pos:start="127:62" pos:end="127:66">false</name></expr></argument>, <argument pos:start="127:69" pos:end="127:72"><expr pos:start="127:69" pos:end="127:72"><name pos:start="127:69" pos:end="127:72">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="133:5" pos:end="133:15">return <expr pos:start="133:12" pos:end="133:14"><name pos:start="133:12" pos:end="133:14">chr</name></expr>;</return>

</block_content>}</block></function>
</unit>
