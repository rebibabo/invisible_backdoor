<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10845.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:12">const</specifier> <name pos:start="1:14" pos:end="1:20">uint8_t</name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type><name pos:start="1:23" pos:end="1:36">pcx_rle_decode</name><parameter_list pos:start="1:37" pos:end="3:76">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">src</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">uint8_t</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">dst</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:59"><decl pos:start="3:29" pos:end="3:59"><type pos:start="3:29" pos:end="3:59"><name pos:start="3:29" pos:end="3:36">unsigned</name> <name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:59">bytes_per_scanline</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:75"><decl pos:start="3:62" pos:end="3:75"><type pos:start="3:62" pos:end="3:75"><name pos:start="3:62" pos:end="3:64">int</name></type> <name pos:start="3:66" pos:end="3:75">compressed</name></decl></parameter>)</parameter_list> <block pos:start="3:78" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:15">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:18">i</name> <init pos:start="5:20" pos:end="5:22">= <expr pos:start="5:22" pos:end="5:22"><literal type="number" pos:start="5:22" pos:end="5:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name></type> <name pos:start="7:19" pos:end="7:21">run</name></decl>, <decl pos:start="7:24" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:17"/><name pos:start="7:24" pos:end="7:28">value</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="39:5"><if pos:start="11:5" pos:end="33:5">if <condition pos:start="11:8" pos:end="11:19">(<expr pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:18">compressed</name></expr>)</condition> <block pos:start="11:21" pos:end="33:5">{<block_content pos:start="13:9" pos:end="31:9">

        <while pos:start="13:9" pos:end="31:9">while <condition pos:start="13:15" pos:end="13:36">(<expr pos:start="13:16" pos:end="13:35"><name pos:start="13:16" pos:end="13:16">i</name><operator pos:start="13:17" pos:end="13:17">&lt;</operator><name pos:start="13:18" pos:end="13:35">bytes_per_scanline</name></expr>)</condition> <block pos:start="13:38" pos:end="31:9">{<block_content pos:start="15:13" pos:end="29:33">

            <expr_stmt pos:start="15:13" pos:end="15:20"><expr pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:15">run</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <literal type="number" pos:start="15:19" pos:end="15:19">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="17:13" pos:end="17:27"><expr pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:17">value</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <operator pos:start="17:21" pos:end="17:21">*</operator><name pos:start="17:22" pos:end="17:24">src</name><operator pos:start="17:25" pos:end="17:26">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="19:13" pos:end="25:13"><if pos:start="19:13" pos:end="25:13">if <condition pos:start="19:16" pos:end="19:30">(<expr pos:start="19:17" pos:end="19:29"><name pos:start="19:17" pos:end="19:21">value</name> <operator pos:start="19:23" pos:end="19:24">&gt;=</operator> <literal type="number" pos:start="19:26" pos:end="19:29">0xc0</literal></expr>)</condition> <block pos:start="19:32" pos:end="25:13">{<block_content pos:start="21:17" pos:end="23:31">

                <expr_stmt pos:start="21:17" pos:end="21:35"><expr pos:start="21:17" pos:end="21:34"><name pos:start="21:17" pos:end="21:19">run</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:27">value</name> <operator pos:start="21:29" pos:end="21:29">&amp;</operator> <literal type="number" pos:start="21:31" pos:end="21:34">0x3f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="23:17" pos:end="23:31"><expr pos:start="23:17" pos:end="23:30"><name pos:start="23:17" pos:end="23:21">value</name> <operator pos:start="23:23" pos:end="23:23">=</operator> <operator pos:start="23:25" pos:end="23:25">*</operator><name pos:start="23:26" pos:end="23:28">src</name><operator pos:start="23:29" pos:end="23:30">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <while pos:start="27:13" pos:end="29:33">while <condition pos:start="27:19" pos:end="27:49">(<expr pos:start="27:20" pos:end="27:48"><name pos:start="27:20" pos:end="27:20">i</name><operator pos:start="27:21" pos:end="27:21">&lt;</operator><name pos:start="27:22" pos:end="27:39">bytes_per_scanline</name> <operator pos:start="27:41" pos:end="27:42">&amp;&amp;</operator> <name pos:start="27:44" pos:end="27:46">run</name><operator pos:start="27:47" pos:end="27:48">--</operator></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:33"><block_content pos:start="29:17" pos:end="29:33">

                <expr_stmt pos:start="29:17" pos:end="29:33"><expr pos:start="29:17" pos:end="29:32"><name pos:start="29:17" pos:end="29:24"><name pos:start="29:17" pos:end="29:19">dst</name><index pos:start="29:20" pos:end="29:24">[<expr pos:start="29:21" pos:end="29:23"><name pos:start="29:21" pos:end="29:21">i</name><operator pos:start="29:22" pos:end="29:23">++</operator></expr>]</index></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <name pos:start="29:28" pos:end="29:32">value</name></expr>;</expr_stmt></block_content></block></while>

        </block_content>}</block></while>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="39:5">else <block pos:start="33:12" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:34">

        <expr_stmt pos:start="35:9" pos:end="35:45"><expr pos:start="35:9" pos:end="35:44"><call pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:14">memcpy</name><argument_list pos:start="35:15" pos:end="35:44">(<argument pos:start="35:16" pos:end="35:18"><expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">dst</name></expr></argument>, <argument pos:start="35:21" pos:end="35:23"><expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:23">src</name></expr></argument>, <argument pos:start="35:26" pos:end="35:43"><expr pos:start="35:26" pos:end="35:43"><name pos:start="35:26" pos:end="35:43">bytes_per_scanline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:34"><expr pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:11">src</name> <operator pos:start="37:13" pos:end="37:14">+=</operator> <name pos:start="37:16" pos:end="37:33">bytes_per_scanline</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="43:5" pos:end="43:15">return <expr pos:start="43:12" pos:end="43:14"><name pos:start="43:12" pos:end="43:14">src</name></expr>;</return>

</block_content>}</block></function>
</unit>
