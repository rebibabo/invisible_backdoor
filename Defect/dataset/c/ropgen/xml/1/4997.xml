<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4997.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">find_best_state</name><parameter_list pos:start="1:28" pos:end="3:57">(<parameter pos:start="1:29" pos:end="1:56"><decl pos:start="1:29" pos:end="1:56"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:35">uint8_t</name></type> <name pos:start="1:37" pos:end="1:56"><name pos:start="1:37" pos:end="1:46">best_state</name><index pos:start="1:47" pos:end="1:51">[<expr pos:start="1:48" pos:end="1:50"><literal type="number" pos:start="1:48" pos:end="1:50">256</literal></expr>]</index><index pos:start="1:52" pos:end="1:56">[<expr pos:start="1:53" pos:end="1:55"><literal type="number" pos:start="1:53" pos:end="1:55">256</literal></expr>]</index></name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:56"><decl pos:start="3:29" pos:end="3:56"><type pos:start="3:29" pos:end="3:51"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:41">uint8_t</name></type> <name pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:51">one_state</name><index pos:start="3:52" pos:end="3:56">[<expr pos:start="3:53" pos:end="3:55"><literal type="number" pos:start="3:53" pos:end="3:55">256</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="81:1">{<block_content pos:start="7:5" pos:end="79:5">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">k</name></decl>, <decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:18">m</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">double</name></type> <name pos:start="9:12" pos:end="9:21"><name pos:start="9:12" pos:end="9:16">l2tab</name><index pos:start="9:17" pos:end="9:21">[<expr pos:start="9:18" pos:end="9:20"><literal type="number" pos:start="9:18" pos:end="9:20">256</literal></expr>]</index></name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="15:35">for <control pos:start="13:9" pos:end="13:29">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">1</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:24"><expr pos:start="13:17" pos:end="13:23"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <literal type="number" pos:start="13:21" pos:end="13:23">256</literal></expr>;</condition> <incr pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:26">i</name><operator pos:start="13:27" pos:end="13:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="15:9" pos:end="15:35"><block_content pos:start="15:9" pos:end="15:35">

        <expr_stmt pos:start="15:9" pos:end="15:35"><expr pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:13">l2tab</name><index pos:start="15:14" pos:end="15:16">[<expr pos:start="15:15" pos:end="15:15"><name pos:start="15:15" pos:end="15:15">i</name></expr>]</index></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <call pos:start="15:20" pos:end="15:34"><name pos:start="15:20" pos:end="15:23">log2</name><argument_list pos:start="15:24" pos:end="15:34">(<argument pos:start="15:25" pos:end="15:33"><expr pos:start="15:25" pos:end="15:33"><name pos:start="15:25" pos:end="15:25">i</name> <operator pos:start="15:27" pos:end="15:27">/</operator> <literal type="number" pos:start="15:29" pos:end="15:33">256.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="19:5" pos:end="79:5">for <control pos:start="19:9" pos:end="19:29">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:24"><expr pos:start="19:17" pos:end="19:23"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <literal type="number" pos:start="19:21" pos:end="19:23">256</literal></expr>;</condition> <incr pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:26">i</name><operator pos:start="19:27" pos:end="19:28">++</operator></expr></incr>)</control> <block pos:start="19:31" pos:end="79:5">{<block_content pos:start="21:9" pos:end="77:9">

        <decl_stmt pos:start="21:9" pos:end="21:29"><decl pos:start="21:9" pos:end="21:28"><type pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:14">double</name></type> <name pos:start="21:16" pos:end="21:28"><name pos:start="21:16" pos:end="21:23">best_len</name><index pos:start="21:24" pos:end="21:28">[<expr pos:start="21:25" pos:end="21:27"><literal type="number" pos:start="21:25" pos:end="21:27">256</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:29"><decl pos:start="23:9" pos:end="23:28"><type pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:14">double</name></type> <name pos:start="23:16" pos:end="23:16">p</name> <init pos:start="23:18" pos:end="23:28">= <expr pos:start="23:20" pos:end="23:28"><name pos:start="23:20" pos:end="23:20">i</name> <operator pos:start="23:22" pos:end="23:22">/</operator> <literal type="number" pos:start="23:24" pos:end="23:28">256.0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="27:9" pos:end="29:34">for <control pos:start="27:13" pos:end="27:33">(<init pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">j</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:28"><expr pos:start="27:21" pos:end="27:27"><name pos:start="27:21" pos:end="27:21">j</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <literal type="number" pos:start="27:25" pos:end="27:27">256</literal></expr>;</condition> <incr pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:30">j</name><operator pos:start="27:31" pos:end="27:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:13" pos:end="29:34"><block_content pos:start="29:13" pos:end="29:34">

            <expr_stmt pos:start="29:13" pos:end="29:34"><expr pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:20">best_len</name><index pos:start="29:21" pos:end="29:23">[<expr pos:start="29:22" pos:end="29:22"><name pos:start="29:22" pos:end="29:22">j</name></expr>]</index></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <literal type="number" pos:start="29:27" pos:end="29:27">1</literal> <operator pos:start="29:29" pos:end="29:30">&lt;&lt;</operator> <literal type="number" pos:start="29:32" pos:end="29:33">30</literal></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="33:9" pos:end="77:9">for <control pos:start="33:13" pos:end="33:63">(<init pos:start="33:14" pos:end="33:34"><expr pos:start="33:14" pos:end="33:33"><name pos:start="33:14" pos:end="33:14">j</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:33"><name pos:start="33:18" pos:end="33:22">FFMAX</name><argument_list pos:start="33:23" pos:end="33:33">(<argument pos:start="33:24" pos:end="33:29"><expr pos:start="33:24" pos:end="33:29"><name pos:start="33:24" pos:end="33:24">i</name> <operator pos:start="33:26" pos:end="33:26">-</operator> <literal type="number" pos:start="33:28" pos:end="33:29">10</literal></expr></argument>, <argument pos:start="33:32" pos:end="33:32"><expr pos:start="33:32" pos:end="33:32"><literal type="number" pos:start="33:32" pos:end="33:32">1</literal></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="33:36" pos:end="33:58"><expr pos:start="33:36" pos:end="33:57"><name pos:start="33:36" pos:end="33:36">j</name> <operator pos:start="33:38" pos:end="33:38">&lt;</operator> <call pos:start="33:40" pos:end="33:57"><name pos:start="33:40" pos:end="33:44">FFMIN</name><argument_list pos:start="33:45" pos:end="33:57">(<argument pos:start="33:46" pos:end="33:51"><expr pos:start="33:46" pos:end="33:51"><name pos:start="33:46" pos:end="33:46">i</name> <operator pos:start="33:48" pos:end="33:48">+</operator> <literal type="number" pos:start="33:50" pos:end="33:51">11</literal></expr></argument>, <argument pos:start="33:54" pos:end="33:56"><expr pos:start="33:54" pos:end="33:56"><literal type="number" pos:start="33:54" pos:end="33:56">256</literal></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="33:60" pos:end="33:62"><expr pos:start="33:60" pos:end="33:62"><name pos:start="33:60" pos:end="33:60">j</name><operator pos:start="33:61" pos:end="33:62">++</operator></expr></incr>)</control> <block pos:start="33:65" pos:end="77:9">{<block_content pos:start="35:13" pos:end="75:13">

            <decl_stmt pos:start="35:13" pos:end="35:36"><decl pos:start="35:13" pos:end="35:35"><type pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:18">double</name></type> <name pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:22">occ</name><index pos:start="35:23" pos:end="35:27">[<expr pos:start="35:24" pos:end="35:26"><literal type="number" pos:start="35:24" pos:end="35:26">256</literal></expr>]</index></name> <init pos:start="35:29" pos:end="35:35">= <expr pos:start="35:31" pos:end="35:35"><block pos:start="35:31" pos:end="35:35">{ <expr pos:start="35:33" pos:end="35:33"><literal type="number" pos:start="35:33" pos:end="35:33">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:32"><decl pos:start="37:13" pos:end="37:31"><type pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:18">double</name></type> <name pos:start="37:20" pos:end="37:22">len</name>      <init pos:start="37:29" pos:end="37:31">= <expr pos:start="37:31" pos:end="37:31"><literal type="number" pos:start="37:31" pos:end="37:31">0</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:25"><expr pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:15">occ</name><index pos:start="39:16" pos:end="39:18">[<expr pos:start="39:17" pos:end="39:17"><name pos:start="39:17" pos:end="39:17">j</name></expr>]</index></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <literal type="number" pos:start="39:22" pos:end="39:24">1.0</literal></expr>;</expr_stmt>

            <for pos:start="41:13" pos:end="75:13">for <control pos:start="41:17" pos:end="41:37">(<init pos:start="41:18" pos:end="41:23"><expr pos:start="41:18" pos:end="41:22"><name pos:start="41:18" pos:end="41:18">k</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">0</literal></expr>;</init> <condition pos:start="41:25" pos:end="41:32"><expr pos:start="41:25" pos:end="41:31"><name pos:start="41:25" pos:end="41:25">k</name> <operator pos:start="41:27" pos:end="41:27">&lt;</operator> <literal type="number" pos:start="41:29" pos:end="41:31">256</literal></expr>;</condition> <incr pos:start="41:34" pos:end="41:36"><expr pos:start="41:34" pos:end="41:36"><name pos:start="41:34" pos:end="41:34">k</name><operator pos:start="41:35" pos:end="41:36">++</operator></expr></incr>)</control> <block pos:start="41:39" pos:end="75:13">{<block_content pos:start="43:17" pos:end="73:49">

                <decl_stmt pos:start="43:17" pos:end="43:43"><decl pos:start="43:17" pos:end="43:42"><type pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:22">double</name></type> <name pos:start="43:24" pos:end="43:34"><name pos:start="43:24" pos:end="43:29">newocc</name><index pos:start="43:30" pos:end="43:34">[<expr pos:start="43:31" pos:end="43:33"><literal type="number" pos:start="43:31" pos:end="43:33">256</literal></expr>]</index></name> <init pos:start="43:36" pos:end="43:42">= <expr pos:start="43:38" pos:end="43:42"><block pos:start="43:38" pos:end="43:42">{ <expr pos:start="43:40" pos:end="43:40"><literal type="number" pos:start="43:40" pos:end="43:40">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

                <for pos:start="45:17" pos:end="53:21">for <control pos:start="45:21" pos:end="45:41">(<init pos:start="45:22" pos:end="45:27"><expr pos:start="45:22" pos:end="45:26"><name pos:start="45:22" pos:end="45:22">m</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <literal type="number" pos:start="45:26" pos:end="45:26">1</literal></expr>;</init> <condition pos:start="45:29" pos:end="45:36"><expr pos:start="45:29" pos:end="45:35"><name pos:start="45:29" pos:end="45:29">m</name> <operator pos:start="45:31" pos:end="45:31">&lt;</operator> <literal type="number" pos:start="45:33" pos:end="45:35">256</literal></expr>;</condition> <incr pos:start="45:38" pos:end="45:40"><expr pos:start="45:38" pos:end="45:40"><name pos:start="45:38" pos:end="45:38">m</name><operator pos:start="45:39" pos:end="45:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:21" pos:end="53:21"><block_content pos:start="47:21" pos:end="53:21">

                    <if_stmt pos:start="47:21" pos:end="53:21"><if pos:start="47:21" pos:end="53:21">if <condition pos:start="47:24" pos:end="47:31">(<expr pos:start="47:25" pos:end="47:30"><name pos:start="47:25" pos:end="47:30"><name pos:start="47:25" pos:end="47:27">occ</name><index pos:start="47:28" pos:end="47:30">[<expr pos:start="47:29" pos:end="47:29"><name pos:start="47:29" pos:end="47:29">m</name></expr>]</index></name></expr>)</condition> <block pos:start="47:33" pos:end="53:21">{<block_content pos:start="49:25" pos:end="51:66">

                        <expr_stmt pos:start="49:25" pos:end="51:66"><expr pos:start="49:25" pos:end="51:65"><name pos:start="49:25" pos:end="49:27">len</name> <operator pos:start="49:29" pos:end="49:30">-=</operator> <name pos:start="49:32" pos:end="49:37"><name pos:start="49:32" pos:end="49:34">occ</name><index pos:start="49:35" pos:end="49:37">[<expr pos:start="49:36" pos:end="49:36"><name pos:start="49:36" pos:end="49:36">m</name></expr>]</index></name> <operator pos:start="49:39" pos:end="49:39">*</operator>     <operator pos:start="49:45" pos:end="49:45">(</operator><name pos:start="49:46" pos:end="49:46">p</name>  <operator pos:start="49:49" pos:end="49:49">*</operator> <name pos:start="49:51" pos:end="49:58"><name pos:start="49:51" pos:end="49:55">l2tab</name><index pos:start="49:56" pos:end="49:58">[<expr pos:start="49:57" pos:end="49:57"><name pos:start="49:57" pos:end="49:57">m</name></expr>]</index></name> <operator pos:start="49:60" pos:end="49:60">+</operator>

                                        <operator pos:start="51:41" pos:end="51:41">(</operator><literal type="number" pos:start="51:42" pos:end="51:44">1</literal> <operator pos:start="51:44" pos:end="51:44">-</operator> <name pos:start="51:46" pos:end="51:46">p</name><operator pos:start="51:47" pos:end="51:47">)</operator> <operator pos:start="51:49" pos:end="51:49">*</operator> <name pos:start="51:51" pos:end="51:64"><name pos:start="51:51" pos:end="51:55">l2tab</name><index pos:start="51:56" pos:end="51:64">[<expr pos:start="51:57" pos:end="51:63"><literal type="number" pos:start="51:57" pos:end="51:61">256</literal> <operator pos:start="51:61" pos:end="51:61">-</operator> <name pos:start="51:63" pos:end="51:63">m</name></expr>]</index></name><operator pos:start="51:65" pos:end="51:65">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

                <if_stmt pos:start="55:17" pos:end="61:17"><if pos:start="55:17" pos:end="61:17">if <condition pos:start="55:20" pos:end="55:38">(<expr pos:start="55:21" pos:end="55:37"><name pos:start="55:21" pos:end="55:23">len</name> <operator pos:start="55:25" pos:end="55:25">&lt;</operator> <name pos:start="55:27" pos:end="55:37"><name pos:start="55:27" pos:end="55:34">best_len</name><index pos:start="55:35" pos:end="55:37">[<expr pos:start="55:36" pos:end="55:36"><name pos:start="55:36" pos:end="55:36">k</name></expr>]</index></name></expr>)</condition> <block pos:start="55:40" pos:end="61:17">{<block_content pos:start="57:21" pos:end="59:41">

                    <expr_stmt pos:start="57:21" pos:end="57:43"><expr pos:start="57:21" pos:end="57:42"><name pos:start="57:21" pos:end="57:31"><name pos:start="57:21" pos:end="57:28">best_len</name><index pos:start="57:29" pos:end="57:31">[<expr pos:start="57:30" pos:end="57:30"><name pos:start="57:30" pos:end="57:30">k</name></expr>]</index></name>      <operator pos:start="57:38" pos:end="57:38">=</operator> <name pos:start="57:40" pos:end="57:42">len</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:41"><expr pos:start="59:21" pos:end="59:40"><name pos:start="59:21" pos:end="59:36"><name pos:start="59:21" pos:end="59:30">best_state</name><index pos:start="59:31" pos:end="59:33">[<expr pos:start="59:32" pos:end="59:32"><name pos:start="59:32" pos:end="59:32">i</name></expr>]</index><index pos:start="59:34" pos:end="59:36">[<expr pos:start="59:35" pos:end="59:35"><name pos:start="59:35" pos:end="59:35">k</name></expr>]</index></name> <operator pos:start="59:38" pos:end="59:38">=</operator> <name pos:start="59:40" pos:end="59:40">j</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <for pos:start="63:17" pos:end="71:21">for <control pos:start="63:21" pos:end="63:41">(<init pos:start="63:22" pos:end="63:27"><expr pos:start="63:22" pos:end="63:26"><name pos:start="63:22" pos:end="63:22">m</name> <operator pos:start="63:24" pos:end="63:24">=</operator> <literal type="number" pos:start="63:26" pos:end="63:26">0</literal></expr>;</init> <condition pos:start="63:29" pos:end="63:36"><expr pos:start="63:29" pos:end="63:35"><name pos:start="63:29" pos:end="63:29">m</name> <operator pos:start="63:31" pos:end="63:31">&lt;</operator> <literal type="number" pos:start="63:33" pos:end="63:35">256</literal></expr>;</condition> <incr pos:start="63:38" pos:end="63:40"><expr pos:start="63:38" pos:end="63:40"><name pos:start="63:38" pos:end="63:38">m</name><operator pos:start="63:39" pos:end="63:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="65:21" pos:end="71:21"><block_content pos:start="65:21" pos:end="71:21">

                    <if_stmt pos:start="65:21" pos:end="71:21"><if pos:start="65:21" pos:end="71:21">if <condition pos:start="65:24" pos:end="65:31">(<expr pos:start="65:25" pos:end="65:30"><name pos:start="65:25" pos:end="65:30"><name pos:start="65:25" pos:end="65:27">occ</name><index pos:start="65:28" pos:end="65:30">[<expr pos:start="65:29" pos:end="65:29"><name pos:start="65:29" pos:end="65:29">m</name></expr>]</index></name></expr>)</condition> <block pos:start="65:33" pos:end="71:21">{<block_content pos:start="67:25" pos:end="69:77">

                        <expr_stmt pos:start="67:25" pos:end="67:71"><expr pos:start="67:25" pos:end="67:70"><name pos:start="67:25" pos:end="67:44"><name pos:start="67:25" pos:end="67:30">newocc</name><index pos:start="67:31" pos:end="67:44">[<expr pos:start="67:32" pos:end="67:43"><name pos:start="67:32" pos:end="67:43"><name pos:start="67:32" pos:end="67:40">one_state</name><index pos:start="67:41" pos:end="67:43">[<expr pos:start="67:42" pos:end="67:42"><name pos:start="67:42" pos:end="67:42">m</name></expr>]</index></name></expr>]</index></name>             <operator pos:start="67:58" pos:end="67:59">+=</operator> <name pos:start="67:61" pos:end="67:66"><name pos:start="67:61" pos:end="67:63">occ</name><index pos:start="67:64" pos:end="67:66">[<expr pos:start="67:65" pos:end="67:65"><name pos:start="67:65" pos:end="67:65">m</name></expr>]</index></name> <operator pos:start="67:68" pos:end="67:68">*</operator> <name pos:start="67:70" pos:end="67:70">p</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="69:25" pos:end="69:77"><expr pos:start="69:25" pos:end="69:76"><name pos:start="69:25" pos:end="69:56"><name pos:start="69:25" pos:end="69:30">newocc</name><index pos:start="69:31" pos:end="69:56">[<expr pos:start="69:32" pos:end="69:55"><literal type="number" pos:start="69:32" pos:end="69:36">256</literal> <operator pos:start="69:36" pos:end="69:36">-</operator> <name pos:start="69:38" pos:end="69:55"><name pos:start="69:38" pos:end="69:46">one_state</name><index pos:start="69:47" pos:end="69:55">[<expr pos:start="69:48" pos:end="69:54"><literal type="number" pos:start="69:48" pos:end="69:52">256</literal> <operator pos:start="69:52" pos:end="69:52">-</operator> <name pos:start="69:54" pos:end="69:54">m</name></expr>]</index></name></expr>]</index></name> <operator pos:start="69:58" pos:end="69:59">+=</operator> <name pos:start="69:61" pos:end="69:66"><name pos:start="69:61" pos:end="69:63">occ</name><index pos:start="69:64" pos:end="69:66">[<expr pos:start="69:65" pos:end="69:65"><name pos:start="69:65" pos:end="69:65">m</name></expr>]</index></name> <operator pos:start="69:68" pos:end="69:68">*</operator> <operator pos:start="69:70" pos:end="69:70">(</operator><literal type="number" pos:start="69:71" pos:end="69:73">1</literal> <operator pos:start="69:73" pos:end="69:73">-</operator> <name pos:start="69:75" pos:end="69:75">p</name><operator pos:start="69:76" pos:end="69:76">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

                <expr_stmt pos:start="73:17" pos:end="73:49"><expr pos:start="73:17" pos:end="73:48"><call pos:start="73:17" pos:end="73:48"><name pos:start="73:17" pos:end="73:22">memcpy</name><argument_list pos:start="73:23" pos:end="73:48">(<argument pos:start="73:24" pos:end="73:26"><expr pos:start="73:24" pos:end="73:26"><name pos:start="73:24" pos:end="73:26">occ</name></expr></argument>, <argument pos:start="73:29" pos:end="73:34"><expr pos:start="73:29" pos:end="73:34"><name pos:start="73:29" pos:end="73:34">newocc</name></expr></argument>, <argument pos:start="73:37" pos:end="73:47"><expr pos:start="73:37" pos:end="73:47"><sizeof pos:start="73:37" pos:end="73:47">sizeof<argument_list pos:start="73:43" pos:end="73:47">(<argument pos:start="73:44" pos:end="73:46"><expr pos:start="73:44" pos:end="73:46"><name pos:start="73:44" pos:end="73:46">occ</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
