<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8025.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:23">attribute_align_arg</name></type> <name pos:start="1:25" pos:end="1:45">avcodec_decode_video2</name><parameter_list pos:start="1:46" pos:end="5:68">(<parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avctx</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:85"><decl pos:start="1:70" pos:end="1:85"><type pos:start="1:70" pos:end="1:85"><name pos:start="1:70" pos:end="1:76">AVFrame</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:85">picture</name></decl></parameter>,

                                              <parameter pos:start="3:47" pos:end="3:66"><decl pos:start="3:47" pos:end="3:66"><type pos:start="3:47" pos:end="3:66"><name pos:start="3:47" pos:end="3:49">int</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:66">got_picture_ptr</name></decl></parameter>,

                                              <parameter pos:start="5:47" pos:end="5:67"><decl pos:start="5:47" pos:end="5:67"><type pos:start="5:47" pos:end="5:67"><specifier pos:start="5:47" pos:end="5:51">const</specifier> <name pos:start="5:53" pos:end="5:60">AVPacket</name> <modifier pos:start="5:62" pos:end="5:62">*</modifier></type><name pos:start="5:63" pos:end="5:67">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="165:1">{<block_content pos:start="9:5" pos:end="163:15">

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVCodecInternal</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:25">avci</name> <init pos:start="9:27" pos:end="9:43">= <expr pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:33">avctx</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:43">internal</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <comment type="line" pos:start="13:5" pos:end="13:44">// copy to ensure we do not change avpkt</comment>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">AVPacket</name></type> <name pos:start="15:14" pos:end="15:16">tmp</name> <init pos:start="15:18" pos:end="15:25">= <expr pos:start="15:20" pos:end="15:25"><operator pos:start="15:20" pos:end="15:20">*</operator><name pos:start="15:21" pos:end="15:25">avpkt</name></expr></init></decl>;</decl_stmt>





    <if_stmt pos:start="21:5" pos:end="26:5"><if pos:start="21:5" pos:end="26:5">if <condition pos:start="21:8" pos:end="21:49">(<expr pos:start="21:9" pos:end="21:48"><name pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:13">avctx</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:20">codec</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:26">type</name></name> <operator pos:start="21:28" pos:end="21:29">!=</operator> <name pos:start="21:31" pos:end="21:48">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="21:51" pos:end="26:5">{<block_content pos:start="23:9" pos:end="23:70">

        <expr_stmt pos:start="23:9" pos:end="23:70"><expr pos:start="23:9" pos:end="23:69"><call pos:start="23:9" pos:end="23:69"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:69">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">avctx</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><name pos:start="23:23" pos:end="23:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:37" pos:end="23:68"><expr pos:start="23:37" pos:end="23:68"><literal type="string" pos:start="23:37" pos:end="23:68">"Invalid media type for video\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="30:5" pos:end="30:25"><expr pos:start="30:5" pos:end="30:24"><operator pos:start="30:5" pos:end="30:5">*</operator><name pos:start="30:6" pos:end="30:20">got_picture_ptr</name> <operator pos:start="30:22" pos:end="30:22">=</operator> <literal type="number" pos:start="30:24" pos:end="30:24">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="32:5" pos:end="37:40"><if pos:start="32:5" pos:end="37:40">if <condition pos:start="32:8" pos:end="32:126">(<expr pos:start="32:9" pos:end="32:125"><operator pos:start="32:9" pos:end="32:9">(</operator><name pos:start="32:10" pos:end="32:27"><name pos:start="32:10" pos:end="32:14">avctx</name><operator pos:start="32:15" pos:end="32:16">-&gt;</operator><name pos:start="32:17" pos:end="32:27">coded_width</name></name> <operator pos:start="32:29" pos:end="32:30">||</operator> <name pos:start="32:32" pos:end="32:50"><name pos:start="32:32" pos:end="32:36">avctx</name><operator pos:start="32:37" pos:end="32:38">-&gt;</operator><name pos:start="32:39" pos:end="32:50">coded_height</name></name><operator pos:start="32:51" pos:end="32:51">)</operator> <operator pos:start="32:53" pos:end="32:54">&amp;&amp;</operator> <call pos:start="32:56" pos:end="32:125"><name pos:start="32:56" pos:end="32:74">av_image_check_size</name><argument_list pos:start="32:75" pos:end="32:125">(<argument pos:start="32:76" pos:end="32:93"><expr pos:start="32:76" pos:end="32:93"><name pos:start="32:76" pos:end="32:93"><name pos:start="32:76" pos:end="32:80">avctx</name><operator pos:start="32:81" pos:end="32:82">-&gt;</operator><name pos:start="32:83" pos:end="32:93">coded_width</name></name></expr></argument>, <argument pos:start="32:96" pos:end="32:114"><expr pos:start="32:96" pos:end="32:114"><name pos:start="32:96" pos:end="32:114"><name pos:start="32:96" pos:end="32:100">avctx</name><operator pos:start="32:101" pos:end="32:102">-&gt;</operator><name pos:start="32:103" pos:end="32:114">coded_height</name></name></expr></argument>, <argument pos:start="32:117" pos:end="32:117"><expr pos:start="32:117" pos:end="32:117"><literal type="number" pos:start="32:117" pos:end="32:117">0</literal></expr></argument>, <argument pos:start="32:120" pos:end="32:124"><expr pos:start="32:120" pos:end="32:124"><name pos:start="32:120" pos:end="32:124">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:5" pos:end="37:40"><block_content pos:start="37:5" pos:end="37:40">




    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><call pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:30">avcodec_get_frame_defaults</name><argument_list pos:start="37:31" pos:end="37:39">(<argument pos:start="37:32" pos:end="37:38"><expr pos:start="37:32" pos:end="37:38"><name pos:start="37:32" pos:end="37:38">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="43:39"><if pos:start="41:5" pos:end="43:39">if <condition pos:start="41:8" pos:end="41:34">(<expr pos:start="41:9" pos:end="41:33"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:33"><name pos:start="41:10" pos:end="41:14">avctx</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:33">refcounted_frames</name></name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:39"><block_content pos:start="43:9" pos:end="43:39">

        <expr_stmt pos:start="43:9" pos:end="43:39"><expr pos:start="43:9" pos:end="43:38"><call pos:start="43:9" pos:end="43:38"><name pos:start="43:9" pos:end="43:22">av_frame_unref</name><argument_list pos:start="43:23" pos:end="43:38">(<argument pos:start="43:24" pos:end="43:37"><expr pos:start="43:24" pos:end="43:37"><operator pos:start="43:24" pos:end="43:24">&amp;</operator><name pos:start="43:25" pos:end="43:37"><name pos:start="43:25" pos:end="43:28">avci</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:37">to_free</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="151:16"><if pos:start="47:5" pos:end="149:5">if <condition pos:start="47:8" pos:end="47:119">(<expr pos:start="47:9" pos:end="47:118"><operator pos:start="47:9" pos:end="47:9">(</operator><name pos:start="47:10" pos:end="47:35"><name pos:start="47:10" pos:end="47:14">avctx</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:21">codec</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:35">capabilities</name></name> <operator pos:start="47:37" pos:end="47:37">&amp;</operator> <name pos:start="47:39" pos:end="47:53">CODEC_CAP_DELAY</name><operator pos:start="47:54" pos:end="47:54">)</operator> <operator pos:start="47:56" pos:end="47:57">||</operator> <name pos:start="47:59" pos:end="47:69"><name pos:start="47:59" pos:end="47:63">avpkt</name><operator pos:start="47:64" pos:end="47:65">-&gt;</operator><name pos:start="47:66" pos:end="47:69">size</name></name> <operator pos:start="47:71" pos:end="47:72">||</operator> <operator pos:start="47:74" pos:end="47:74">(</operator><name pos:start="47:75" pos:end="47:99"><name pos:start="47:75" pos:end="47:79">avctx</name><operator pos:start="47:80" pos:end="47:81">-&gt;</operator><name pos:start="47:82" pos:end="47:99">active_thread_type</name></name> <operator pos:start="47:101" pos:end="47:101">&amp;</operator> <name pos:start="47:103" pos:end="47:117">FF_THREAD_FRAME</name><operator pos:start="47:118" pos:end="47:118">)</operator></expr>)</condition> <block pos:start="47:121" pos:end="149:5">{<block_content pos:start="49:9" pos:end="147:9">

        <decl_stmt pos:start="49:9" pos:end="49:56"><decl pos:start="49:9" pos:end="49:55"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:21">did_split</name> <init pos:start="49:23" pos:end="49:55">= <expr pos:start="49:25" pos:end="49:55"><call pos:start="49:25" pos:end="49:55"><name pos:start="49:25" pos:end="49:49">av_packet_split_side_data</name><argument_list pos:start="49:50" pos:end="49:55">(<argument pos:start="49:51" pos:end="49:54"><expr pos:start="49:51" pos:end="49:54"><operator pos:start="49:51" pos:end="49:51">&amp;</operator><name pos:start="49:52" pos:end="49:54">tmp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:40"><expr pos:start="51:9" pos:end="51:39"><call pos:start="51:9" pos:end="51:39"><name pos:start="51:9" pos:end="51:26">apply_param_change</name><argument_list pos:start="51:27" pos:end="51:39">(<argument pos:start="51:28" pos:end="51:32"><expr pos:start="51:28" pos:end="51:32"><name pos:start="51:28" pos:end="51:32">avctx</name></expr></argument>, <argument pos:start="51:35" pos:end="51:38"><expr pos:start="51:35" pos:end="51:38"><operator pos:start="51:35" pos:end="51:35">&amp;</operator><name pos:start="51:36" pos:end="51:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:26"><expr pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:13">avctx</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:18">pkt</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <operator pos:start="53:22" pos:end="53:22">&amp;</operator><name pos:start="53:23" pos:end="53:25">tmp</name></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="93:9"><if pos:start="55:9" pos:end="59:47">if <condition pos:start="55:12" pos:end="55:72">(<expr pos:start="55:13" pos:end="55:71"><name pos:start="55:13" pos:end="55:24">HAVE_THREADS</name> <operator pos:start="55:26" pos:end="55:27">&amp;&amp;</operator> <name pos:start="55:29" pos:end="55:53"><name pos:start="55:29" pos:end="55:33">avctx</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:53">active_thread_type</name></name> <operator pos:start="55:55" pos:end="55:55">&amp;</operator> <name pos:start="55:57" pos:end="55:71">FF_THREAD_FRAME</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="59:47"><block_content pos:start="57:13" pos:end="59:47">

            <expr_stmt pos:start="57:13" pos:end="59:47"><expr pos:start="57:13" pos:end="59:46"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <call pos:start="57:19" pos:end="59:46"><name pos:start="57:19" pos:end="57:40">ff_thread_decode_frame</name><argument_list pos:start="57:41" pos:end="59:46">(<argument pos:start="57:42" pos:end="57:46"><expr pos:start="57:42" pos:end="57:46"><name pos:start="57:42" pos:end="57:46">avctx</name></expr></argument>, <argument pos:start="57:49" pos:end="57:55"><expr pos:start="57:49" pos:end="57:55"><name pos:start="57:49" pos:end="57:55">picture</name></expr></argument>, <argument pos:start="57:58" pos:end="57:72"><expr pos:start="57:58" pos:end="57:72"><name pos:start="57:58" pos:end="57:72">got_picture_ptr</name></expr></argument>,

                                         <argument pos:start="59:42" pos:end="59:45"><expr pos:start="59:42" pos:end="59:45"><operator pos:start="59:42" pos:end="59:42">&amp;</operator><name pos:start="59:43" pos:end="59:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="61:9" pos:end="93:9">else <block pos:start="61:14" pos:end="93:9">{<block_content pos:start="63:13" pos:end="91:13">

            <expr_stmt pos:start="63:13" pos:end="65:45"><expr pos:start="63:13" pos:end="65:44"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="65:44"><name pos:start="63:19" pos:end="63:38"><name pos:start="63:19" pos:end="63:23">avctx</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:30">codec</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:38">decode</name></name><argument_list pos:start="63:39" pos:end="65:44">(<argument pos:start="63:40" pos:end="63:44"><expr pos:start="63:40" pos:end="63:44"><name pos:start="63:40" pos:end="63:44">avctx</name></expr></argument>, <argument pos:start="63:47" pos:end="63:53"><expr pos:start="63:47" pos:end="63:53"><name pos:start="63:47" pos:end="63:53">picture</name></expr></argument>, <argument pos:start="63:56" pos:end="63:70"><expr pos:start="63:56" pos:end="63:70"><name pos:start="63:56" pos:end="63:70">got_picture_ptr</name></expr></argument>,

                                       <argument pos:start="65:40" pos:end="65:43"><expr pos:start="65:40" pos:end="65:43"><operator pos:start="65:40" pos:end="65:40">&amp;</operator><name pos:start="65:41" pos:end="65:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:42"><expr pos:start="67:13" pos:end="67:41"><name pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:19">picture</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:28">pkt_dts</name></name> <operator pos:start="67:30" pos:end="67:30">=</operator> <name pos:start="67:32" pos:end="67:41"><name pos:start="67:32" pos:end="67:36">avpkt</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:41">dts</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="71:13" pos:end="75:13"><if pos:start="71:13" pos:end="75:13">if<condition pos:start="71:15" pos:end="71:36">(<expr pos:start="71:16" pos:end="71:35"><operator pos:start="71:16" pos:end="71:16">!</operator><name pos:start="71:17" pos:end="71:35"><name pos:start="71:17" pos:end="71:21">avctx</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:35">has_b_frames</name></name></expr>)</condition><block pos:start="71:37" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:58">

                <expr_stmt pos:start="73:17" pos:end="73:58"><expr pos:start="73:17" pos:end="73:57"><call pos:start="73:17" pos:end="73:57"><name pos:start="73:17" pos:end="73:36">av_frame_set_pkt_pos</name><argument_list pos:start="73:37" pos:end="73:57">(<argument pos:start="73:38" pos:end="73:44"><expr pos:start="73:38" pos:end="73:44"><name pos:start="73:38" pos:end="73:44">picture</name></expr></argument>, <argument pos:start="73:47" pos:end="73:56"><expr pos:start="73:47" pos:end="73:56"><name pos:start="73:47" pos:end="73:56"><name pos:start="73:47" pos:end="73:51">avpkt</name><operator pos:start="73:52" pos:end="73:53">-&gt;</operator><name pos:start="73:54" pos:end="73:56">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="77:13" pos:end="77:66">//FIXME these should be under if(!avctx-&gt;has_b_frames)</comment>

            <comment type="block" pos:start="79:13" pos:end="79:64">/* get_buffer is supposed to set frame parameters */</comment>

            <if_stmt pos:start="81:13" pos:end="91:13"><if pos:start="81:13" pos:end="91:13">if <condition pos:start="81:16" pos:end="81:62">(<expr pos:start="81:17" pos:end="81:61"><operator pos:start="81:17" pos:end="81:17">!</operator><operator pos:start="81:18" pos:end="81:18">(</operator><name pos:start="81:19" pos:end="81:44"><name pos:start="81:19" pos:end="81:23">avctx</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:30">codec</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:44">capabilities</name></name> <operator pos:start="81:46" pos:end="81:46">&amp;</operator> <name pos:start="81:48" pos:end="81:60">CODEC_CAP_DR1</name><operator pos:start="81:61" pos:end="81:61">)</operator></expr>)</condition> <block pos:start="81:64" pos:end="91:13">{<block_content pos:start="83:17" pos:end="89:104">

                <if_stmt pos:start="83:17" pos:end="83:116"><if pos:start="83:17" pos:end="83:116">if <condition pos:start="83:20" pos:end="83:54">(<expr pos:start="83:21" pos:end="83:53"><operator pos:start="83:21" pos:end="83:21">!</operator><name pos:start="83:22" pos:end="83:53"><name pos:start="83:22" pos:end="83:28">picture</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:49">sample_aspect_ratio</name><operator pos:start="83:50" pos:end="83:50">.</operator><name pos:start="83:51" pos:end="83:53">num</name></name></expr>)</condition><block type="pseudo" pos:start="83:59" pos:end="83:116"><block_content pos:start="83:59" pos:end="83:116">    <expr_stmt pos:start="83:59" pos:end="83:116"><expr pos:start="83:59" pos:end="83:115"><name pos:start="83:59" pos:end="83:86"><name pos:start="83:59" pos:end="83:65">picture</name><operator pos:start="83:66" pos:end="83:67">-&gt;</operator><name pos:start="83:68" pos:end="83:86">sample_aspect_ratio</name></name> <operator pos:start="83:88" pos:end="83:88">=</operator> <name pos:start="83:90" pos:end="83:115"><name pos:start="83:90" pos:end="83:94">avctx</name><operator pos:start="83:95" pos:end="83:96">-&gt;</operator><name pos:start="83:97" pos:end="83:115">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="85:17" pos:end="85:102"><if pos:start="85:17" pos:end="85:102">if <condition pos:start="85:20" pos:end="85:36">(<expr pos:start="85:21" pos:end="85:35"><operator pos:start="85:21" pos:end="85:21">!</operator><name pos:start="85:22" pos:end="85:35"><name pos:start="85:22" pos:end="85:28">picture</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:35">width</name></name></expr>)</condition><block type="pseudo" pos:start="85:59" pos:end="85:102"><block_content pos:start="85:59" pos:end="85:102">                      <expr_stmt pos:start="85:59" pos:end="85:102"><expr pos:start="85:59" pos:end="85:101"><name pos:start="85:59" pos:end="85:72"><name pos:start="85:59" pos:end="85:65">picture</name><operator pos:start="85:66" pos:end="85:67">-&gt;</operator><name pos:start="85:68" pos:end="85:72">width</name></name>               <operator pos:start="85:88" pos:end="85:88">=</operator> <name pos:start="85:90" pos:end="85:101"><name pos:start="85:90" pos:end="85:94">avctx</name><operator pos:start="85:95" pos:end="85:96">-&gt;</operator><name pos:start="85:97" pos:end="85:101">width</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="87:17" pos:end="87:103"><if pos:start="87:17" pos:end="87:103">if <condition pos:start="87:20" pos:end="87:37">(<expr pos:start="87:21" pos:end="87:36"><operator pos:start="87:21" pos:end="87:21">!</operator><name pos:start="87:22" pos:end="87:36"><name pos:start="87:22" pos:end="87:28">picture</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:36">height</name></name></expr>)</condition><block type="pseudo" pos:start="87:59" pos:end="87:103"><block_content pos:start="87:59" pos:end="87:103">                     <expr_stmt pos:start="87:59" pos:end="87:103"><expr pos:start="87:59" pos:end="87:102"><name pos:start="87:59" pos:end="87:73"><name pos:start="87:59" pos:end="87:65">picture</name><operator pos:start="87:66" pos:end="87:67">-&gt;</operator><name pos:start="87:68" pos:end="87:73">height</name></name>              <operator pos:start="87:88" pos:end="87:88">=</operator> <name pos:start="87:90" pos:end="87:102"><name pos:start="87:90" pos:end="87:94">avctx</name><operator pos:start="87:95" pos:end="87:96">-&gt;</operator><name pos:start="87:97" pos:end="87:102">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="89:17" pos:end="89:104"><if pos:start="89:17" pos:end="89:104">if <condition pos:start="89:20" pos:end="89:55">(<expr pos:start="89:21" pos:end="89:54"><name pos:start="89:21" pos:end="89:35"><name pos:start="89:21" pos:end="89:27">picture</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:35">format</name></name> <operator pos:start="89:37" pos:end="89:38">==</operator> <name pos:start="89:40" pos:end="89:54">AV_PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="89:59" pos:end="89:104"><block_content pos:start="89:59" pos:end="89:104">   <expr_stmt pos:start="89:59" pos:end="89:104"><expr pos:start="89:59" pos:end="89:103"><name pos:start="89:59" pos:end="89:73"><name pos:start="89:59" pos:end="89:65">picture</name><operator pos:start="89:66" pos:end="89:67">-&gt;</operator><name pos:start="89:68" pos:end="89:73">format</name></name>              <operator pos:start="89:88" pos:end="89:88">=</operator> <name pos:start="89:90" pos:end="89:103"><name pos:start="89:90" pos:end="89:94">avctx</name><operator pos:start="89:95" pos:end="89:96">-&gt;</operator><name pos:start="89:97" pos:end="89:103">pix_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:52"><expr pos:start="95:9" pos:end="95:51"><call pos:start="95:9" pos:end="95:51"><name pos:start="95:9" pos:end="95:35">add_metadata_from_side_data</name><argument_list pos:start="95:36" pos:end="95:51">(<argument pos:start="95:37" pos:end="95:41"><expr pos:start="95:37" pos:end="95:41"><name pos:start="95:37" pos:end="95:41">avctx</name></expr></argument>, <argument pos:start="95:44" pos:end="95:50"><expr pos:start="95:44" pos:end="95:50"><name pos:start="95:44" pos:end="95:50">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:17"><expr pos:start="99:9" pos:end="99:16"><call pos:start="99:9" pos:end="99:16"><name pos:start="99:9" pos:end="99:14">emms_c</name><argument_list pos:start="99:15" pos:end="99:16">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="99:19" pos:end="99:73">//needed to avoid an emms_c() call before every return;</comment>



        <expr_stmt pos:start="103:9" pos:end="103:26"><expr pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:18"><name pos:start="103:9" pos:end="103:13">avctx</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:18">pkt</name></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:25">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="113:9"><if pos:start="105:9" pos:end="113:9">if <condition pos:start="105:12" pos:end="105:22">(<expr pos:start="105:13" pos:end="105:21"><name pos:start="105:13" pos:end="105:21">did_split</name></expr>)</condition> <block pos:start="105:24" pos:end="113:9">{<block_content pos:start="107:13" pos:end="111:34">

            <expr_stmt pos:start="107:13" pos:end="107:43"><expr pos:start="107:13" pos:end="107:42"><call pos:start="107:13" pos:end="107:42"><name pos:start="107:13" pos:end="107:36">ff_packet_free_side_data</name><argument_list pos:start="107:37" pos:end="107:42">(<argument pos:start="107:38" pos:end="107:41"><expr pos:start="107:38" pos:end="107:41"><operator pos:start="107:38" pos:end="107:38">&amp;</operator><name pos:start="107:39" pos:end="107:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="109:13" pos:end="111:34"><if pos:start="109:13" pos:end="111:34">if<condition pos:start="109:15" pos:end="109:31">(<expr pos:start="109:16" pos:end="109:30"><name pos:start="109:16" pos:end="109:18">ret</name> <operator pos:start="109:20" pos:end="109:21">==</operator> <name pos:start="109:23" pos:end="109:30"><name pos:start="109:23" pos:end="109:25">tmp</name><operator pos:start="109:26" pos:end="109:26">.</operator><name pos:start="109:27" pos:end="109:30">size</name></name></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="111:34"><block_content pos:start="111:17" pos:end="111:34">

                <expr_stmt pos:start="111:17" pos:end="111:34"><expr pos:start="111:17" pos:end="111:33"><name pos:start="111:17" pos:end="111:19">ret</name> <operator pos:start="111:21" pos:end="111:21">=</operator> <name pos:start="111:23" pos:end="111:33"><name pos:start="111:23" pos:end="111:27">avpkt</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:33">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="117:9" pos:end="119:36"><if pos:start="117:9" pos:end="119:36">if <condition pos:start="117:12" pos:end="117:40">(<expr pos:start="117:13" pos:end="117:39"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">&lt;</operator> <literal type="number" pos:start="117:19" pos:end="117:19">0</literal> <operator pos:start="117:21" pos:end="117:22">&amp;&amp;</operator> <name pos:start="117:24" pos:end="117:39"><name pos:start="117:24" pos:end="117:30">picture</name><operator pos:start="117:31" pos:end="117:32">-&gt;</operator><name pos:start="117:33" pos:end="117:36">data</name><index pos:start="117:37" pos:end="117:39">[<expr pos:start="117:38" pos:end="117:38"><literal type="number" pos:start="117:38" pos:end="117:38">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:36"><block_content pos:start="119:13" pos:end="119:36">

            <expr_stmt pos:start="119:13" pos:end="119:36"><expr pos:start="119:13" pos:end="119:35"><call pos:start="119:13" pos:end="119:35"><name pos:start="119:13" pos:end="119:26">av_frame_unref</name><argument_list pos:start="119:27" pos:end="119:35">(<argument pos:start="119:28" pos:end="119:34"><expr pos:start="119:28" pos:end="119:34"><name pos:start="119:28" pos:end="119:34">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="123:9" pos:end="147:9"><if pos:start="123:9" pos:end="147:9">if <condition pos:start="123:12" pos:end="123:29">(<expr pos:start="123:13" pos:end="123:28"><operator pos:start="123:13" pos:end="123:13">*</operator><name pos:start="123:14" pos:end="123:28">got_picture_ptr</name></expr>)</condition> <block pos:start="123:31" pos:end="147:9">{<block_content pos:start="125:13" pos:end="145:84">

            <if_stmt pos:start="125:13" pos:end="133:13"><if pos:start="125:13" pos:end="133:13">if <condition pos:start="125:16" pos:end="125:42">(<expr pos:start="125:17" pos:end="125:41"><operator pos:start="125:17" pos:end="125:17">!</operator><name pos:start="125:18" pos:end="125:41"><name pos:start="125:18" pos:end="125:22">avctx</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:41">refcounted_frames</name></name></expr>)</condition> <block pos:start="125:44" pos:end="133:13">{<block_content pos:start="127:17" pos:end="131:62">

                <expr_stmt pos:start="127:17" pos:end="127:41"><expr pos:start="127:17" pos:end="127:40"><name pos:start="127:17" pos:end="127:29"><name pos:start="127:17" pos:end="127:20">avci</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:29">to_free</name></name> <operator pos:start="127:31" pos:end="127:31">=</operator> <operator pos:start="127:33" pos:end="127:33">*</operator><name pos:start="127:34" pos:end="127:40">picture</name></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:65"><expr pos:start="129:17" pos:end="129:64"><name pos:start="129:17" pos:end="129:43"><name pos:start="129:17" pos:end="129:20">avci</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:29">to_free</name><operator pos:start="129:30" pos:end="129:30">.</operator><name pos:start="129:31" pos:end="129:43">extended_data</name></name> <operator pos:start="129:45" pos:end="129:45">=</operator> <name pos:start="129:47" pos:end="129:64"><name pos:start="129:47" pos:end="129:50">avci</name><operator pos:start="129:51" pos:end="129:52">-&gt;</operator><name pos:start="129:53" pos:end="129:59">to_free</name><operator pos:start="129:60" pos:end="129:60">.</operator><name pos:start="129:61" pos:end="129:64">data</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:62"><expr pos:start="131:17" pos:end="131:61"><call pos:start="131:17" pos:end="131:61"><name pos:start="131:17" pos:end="131:22">memset</name><argument_list pos:start="131:23" pos:end="131:61">(<argument pos:start="131:24" pos:end="131:35"><expr pos:start="131:24" pos:end="131:35"><name pos:start="131:24" pos:end="131:35"><name pos:start="131:24" pos:end="131:30">picture</name><operator pos:start="131:31" pos:end="131:32">-&gt;</operator><name pos:start="131:33" pos:end="131:35">buf</name></name></expr></argument>, <argument pos:start="131:38" pos:end="131:38"><expr pos:start="131:38" pos:end="131:38"><literal type="number" pos:start="131:38" pos:end="131:38">0</literal></expr></argument>, <argument pos:start="131:41" pos:end="131:60"><expr pos:start="131:41" pos:end="131:60"><sizeof pos:start="131:41" pos:end="131:60">sizeof<argument_list pos:start="131:47" pos:end="131:60">(<argument pos:start="131:48" pos:end="131:59"><expr pos:start="131:48" pos:end="131:59"><name pos:start="131:48" pos:end="131:59"><name pos:start="131:48" pos:end="131:54">picture</name><operator pos:start="131:55" pos:end="131:56">-&gt;</operator><name pos:start="131:57" pos:end="131:59">buf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="137:13" pos:end="137:34"><expr pos:start="137:13" pos:end="137:33"><name pos:start="137:13" pos:end="137:31"><name pos:start="137:13" pos:end="137:17">avctx</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:31">frame_number</name></name><operator pos:start="137:32" pos:end="137:33">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="145:84"><expr pos:start="139:13" pos:end="145:83"><call pos:start="139:13" pos:end="145:83"><name pos:start="139:13" pos:end="139:46">av_frame_set_best_effort_timestamp</name><argument_list pos:start="139:47" pos:end="145:83">(<argument pos:start="139:48" pos:end="139:54"><expr pos:start="139:48" pos:end="139:54"><name pos:start="139:48" pos:end="139:54">picture</name></expr></argument>,

                                               <argument pos:start="141:48" pos:end="145:82"><expr pos:start="141:48" pos:end="145:82"><call pos:start="141:48" pos:end="145:82"><name pos:start="141:48" pos:end="141:64">guess_correct_pts</name><argument_list pos:start="141:65" pos:end="145:82">(<argument pos:start="141:66" pos:end="141:70"><expr pos:start="141:66" pos:end="141:70"><name pos:start="141:66" pos:end="141:70">avctx</name></expr></argument>,

                                                                 <argument pos:start="143:66" pos:end="143:81"><expr pos:start="143:66" pos:end="143:81"><name pos:start="143:66" pos:end="143:81"><name pos:start="143:66" pos:end="143:72">picture</name><operator pos:start="143:73" pos:end="143:74">-&gt;</operator><name pos:start="143:75" pos:end="143:81">pkt_pts</name></name></expr></argument>,

                                                                 <argument pos:start="145:66" pos:end="145:81"><expr pos:start="145:66" pos:end="145:81"><name pos:start="145:66" pos:end="145:81"><name pos:start="145:66" pos:end="145:72">picture</name><operator pos:start="145:73" pos:end="145:74">-&gt;</operator><name pos:start="145:75" pos:end="145:81">pkt_dts</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="149:7" pos:end="151:16">else<block type="pseudo" pos:start="151:9" pos:end="151:16"><block_content pos:start="151:9" pos:end="151:16">

        <expr_stmt pos:start="151:9" pos:end="151:16"><expr pos:start="151:9" pos:end="151:15"><name pos:start="151:9" pos:end="151:11">ret</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <literal type="number" pos:start="151:15" pos:end="151:15">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="155:5" pos:end="157:38">/* many decoders assign whole AVFrames, thus overwriting extended_data;

     * make sure it's set correctly */</comment>

    <expr_stmt pos:start="159:5" pos:end="159:43"><expr pos:start="159:5" pos:end="159:42"><name pos:start="159:5" pos:end="159:26"><name pos:start="159:5" pos:end="159:11">picture</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:26">extended_data</name></name> <operator pos:start="159:28" pos:end="159:28">=</operator> <name pos:start="159:30" pos:end="159:42"><name pos:start="159:30" pos:end="159:36">picture</name><operator pos:start="159:37" pos:end="159:38">-&gt;</operator><name pos:start="159:39" pos:end="159:42">data</name></name></expr>;</expr_stmt>



    <return pos:start="163:5" pos:end="163:15">return <expr pos:start="163:12" pos:end="163:14"><name pos:start="163:12" pos:end="163:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
