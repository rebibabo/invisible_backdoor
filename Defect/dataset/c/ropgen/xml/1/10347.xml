<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10347.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">calculate_refcounts</name><parameter_list pos:start="1:31" pos:end="5:52">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:47">BlockDriverState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">bs</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:73"><decl pos:start="1:54" pos:end="1:73"><type pos:start="1:54" pos:end="1:73"><name pos:start="1:54" pos:end="1:68">BdrvCheckResult</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">res</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:48"><decl pos:start="3:32" pos:end="3:48"><type pos:start="3:32" pos:end="3:48"><name pos:start="3:32" pos:end="3:44">BdrvCheckMode</name></type> <name pos:start="3:46" pos:end="3:48">fix</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:75"><decl pos:start="3:51" pos:end="3:75"><type pos:start="3:51" pos:end="3:75"><name pos:start="3:51" pos:end="3:58">uint16_t</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier><modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:75">refcount_table</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:51"><decl pos:start="5:32" pos:end="5:51"><type pos:start="5:32" pos:end="5:51"><name pos:start="5:32" pos:end="5:38">int64_t</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:51">nb_clusters</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="111:1">{<block_content pos:start="9:5" pos:end="109:70">

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">BDRVQcowState</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:20">s</name> <init pos:start="9:22" pos:end="9:33">= <expr pos:start="9:24" pos:end="9:33"><name pos:start="9:24" pos:end="9:33"><name pos:start="9:24" pos:end="9:25">bs</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:13">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">QCowSnapshot</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:20">sn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="31:5"><if pos:start="19:5" pos:end="31:5">if <condition pos:start="19:8" pos:end="19:25">(<expr pos:start="19:9" pos:end="19:24"><operator pos:start="19:9" pos:end="19:9">!</operator><operator pos:start="19:10" pos:end="19:10">*</operator><name pos:start="19:11" pos:end="19:24">refcount_table</name></expr>)</condition> <block pos:start="19:27" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:9">

        <expr_stmt pos:start="21:9" pos:end="21:61"><expr pos:start="21:9" pos:end="21:60"><operator pos:start="21:9" pos:end="21:9">*</operator><name pos:start="21:10" pos:end="21:23">refcount_table</name> <operator pos:start="21:25" pos:end="21:25">=</operator> <call pos:start="21:27" pos:end="21:60"><name pos:start="21:27" pos:end="21:36">g_try_new0</name><argument_list pos:start="21:37" pos:end="21:60">(<argument pos:start="21:38" pos:end="21:45"><expr pos:start="21:38" pos:end="21:45"><name pos:start="21:38" pos:end="21:45">uint16_t</name></expr></argument>, <argument pos:start="21:48" pos:end="21:59"><expr pos:start="21:48" pos:end="21:59"><operator pos:start="21:48" pos:end="21:48">*</operator><name pos:start="21:49" pos:end="21:59">nb_clusters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:52">(<expr pos:start="23:13" pos:end="23:51"><operator pos:start="23:13" pos:end="23:13">*</operator><name pos:start="23:14" pos:end="23:24">nb_clusters</name> <operator pos:start="23:26" pos:end="23:27">&amp;&amp;</operator> <operator pos:start="23:29" pos:end="23:29">*</operator><name pos:start="23:30" pos:end="23:43">refcount_table</name> <operator pos:start="23:45" pos:end="23:46">==</operator> <name pos:start="23:48" pos:end="23:51">NULL</name></expr>)</condition> <block pos:start="23:54" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:27">

            <expr_stmt pos:start="25:13" pos:end="25:32"><expr pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:15">res</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:29">check_errors</name></name><operator pos:start="25:30" pos:end="25:31">++</operator></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:27">return <expr pos:start="27:20" pos:end="27:26"><operator pos:start="27:20" pos:end="27:20">-</operator><name pos:start="27:21" pos:end="27:26">ENOMEM</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:16">/* header */</comment>

    <expr_stmt pos:start="37:5" pos:end="39:44"><expr pos:start="37:5" pos:end="39:43"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="39:43"><name pos:start="37:11" pos:end="37:23">inc_refcounts</name><argument_list pos:start="37:24" pos:end="39:43">(<argument pos:start="37:25" pos:end="37:26"><expr pos:start="37:25" pos:end="37:26"><name pos:start="37:25" pos:end="37:26">bs</name></expr></argument>, <argument pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:31">res</name></expr></argument>, <argument pos:start="37:34" pos:end="37:47"><expr pos:start="37:34" pos:end="37:47"><name pos:start="37:34" pos:end="37:47">refcount_table</name></expr></argument>, <argument pos:start="37:50" pos:end="37:60"><expr pos:start="37:50" pos:end="37:60"><name pos:start="37:50" pos:end="37:60">nb_clusters</name></expr></argument>,

                        <argument pos:start="39:25" pos:end="39:25"><expr pos:start="39:25" pos:end="39:25"><literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr></argument>, <argument pos:start="39:28" pos:end="39:42"><expr pos:start="39:28" pos:end="39:42"><name pos:start="39:28" pos:end="39:42"><name pos:start="39:28" pos:end="39:28">s</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:42">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">&lt;</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>)</condition> <block pos:start="41:18" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:19">

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:26">/* current L1 table */</comment>

    <expr_stmt pos:start="51:5" pos:end="53:78"><expr pos:start="51:5" pos:end="53:77"><name pos:start="51:5" pos:end="51:7">ret</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="53:77"><name pos:start="51:11" pos:end="51:28">check_refcounts_l1</name><argument_list pos:start="51:29" pos:end="53:77">(<argument pos:start="51:30" pos:end="51:31"><expr pos:start="51:30" pos:end="51:31"><name pos:start="51:30" pos:end="51:31">bs</name></expr></argument>, <argument pos:start="51:34" pos:end="51:36"><expr pos:start="51:34" pos:end="51:36"><name pos:start="51:34" pos:end="51:36">res</name></expr></argument>, <argument pos:start="51:39" pos:end="51:52"><expr pos:start="51:39" pos:end="51:52"><name pos:start="51:39" pos:end="51:52">refcount_table</name></expr></argument>, <argument pos:start="51:55" pos:end="51:65"><expr pos:start="51:55" pos:end="51:65"><name pos:start="51:55" pos:end="51:65">nb_clusters</name></expr></argument>,

                             <argument pos:start="53:30" pos:end="53:47"><expr pos:start="53:30" pos:end="53:47"><name pos:start="53:30" pos:end="53:47"><name pos:start="53:30" pos:end="53:30">s</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:47">l1_table_offset</name></name></expr></argument>, <argument pos:start="53:50" pos:end="53:59"><expr pos:start="53:50" pos:end="53:59"><name pos:start="53:50" pos:end="53:59"><name pos:start="53:50" pos:end="53:50">s</name><operator pos:start="53:51" pos:end="53:52">-&gt;</operator><name pos:start="53:53" pos:end="53:59">l1_size</name></name></expr></argument>, <argument pos:start="53:62" pos:end="53:76"><expr pos:start="53:62" pos:end="53:76"><name pos:start="53:62" pos:end="53:76">CHECK_FRAG_INFO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:16">(<expr pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:13">&lt;</operator> <literal type="number" pos:start="55:15" pos:end="55:15">0</literal></expr>)</condition> <block pos:start="55:18" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:19">

        <return pos:start="57:9" pos:end="57:19">return <expr pos:start="57:16" pos:end="57:18"><name pos:start="57:16" pos:end="57:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:19">/* snapshots */</comment>

    <for pos:start="65:5" pos:end="79:5">for <control pos:start="65:9" pos:end="65:41">(<init pos:start="65:10" pos:end="65:15"><expr pos:start="65:10" pos:end="65:14"><name pos:start="65:10" pos:end="65:10">i</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>;</init> <condition pos:start="65:17" pos:end="65:36"><expr pos:start="65:17" pos:end="65:35"><name pos:start="65:17" pos:end="65:17">i</name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <name pos:start="65:21" pos:end="65:35"><name pos:start="65:21" pos:end="65:21">s</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:35">nb_snapshots</name></name></expr>;</condition> <incr pos:start="65:38" pos:end="65:40"><expr pos:start="65:38" pos:end="65:40"><name pos:start="65:38" pos:end="65:38">i</name><operator pos:start="65:39" pos:end="65:40">++</operator></expr></incr>)</control> <block pos:start="65:43" pos:end="79:5">{<block_content pos:start="67:9" pos:end="77:9">

        <expr_stmt pos:start="67:9" pos:end="67:30"><expr pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:10">sn</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <name pos:start="67:14" pos:end="67:25"><name pos:start="67:14" pos:end="67:14">s</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:25">snapshots</name></name> <operator pos:start="67:27" pos:end="67:27">+</operator> <name pos:start="67:29" pos:end="67:29">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="71:70"><expr pos:start="69:9" pos:end="71:69"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="71:69"><name pos:start="69:15" pos:end="69:32">check_refcounts_l1</name><argument_list pos:start="69:33" pos:end="71:69">(<argument pos:start="69:34" pos:end="69:35"><expr pos:start="69:34" pos:end="69:35"><name pos:start="69:34" pos:end="69:35">bs</name></expr></argument>, <argument pos:start="69:38" pos:end="69:40"><expr pos:start="69:38" pos:end="69:40"><name pos:start="69:38" pos:end="69:40">res</name></expr></argument>, <argument pos:start="69:43" pos:end="69:56"><expr pos:start="69:43" pos:end="69:56"><name pos:start="69:43" pos:end="69:56">refcount_table</name></expr></argument>, <argument pos:start="69:59" pos:end="69:69"><expr pos:start="69:59" pos:end="69:69"><name pos:start="69:59" pos:end="69:69">nb_clusters</name></expr></argument>,

                                 <argument pos:start="71:34" pos:end="71:52"><expr pos:start="71:34" pos:end="71:52"><name pos:start="71:34" pos:end="71:52"><name pos:start="71:34" pos:end="71:35">sn</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:52">l1_table_offset</name></name></expr></argument>, <argument pos:start="71:55" pos:end="71:65"><expr pos:start="71:55" pos:end="71:65"><name pos:start="71:55" pos:end="71:65"><name pos:start="71:55" pos:end="71:56">sn</name><operator pos:start="71:57" pos:end="71:58">-&gt;</operator><name pos:start="71:59" pos:end="71:65">l1_size</name></name></expr></argument>, <argument pos:start="71:68" pos:end="71:68"><expr pos:start="71:68" pos:end="71:68"><literal type="number" pos:start="71:68" pos:end="71:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="77:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:20">(<expr pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:15">ret</name> <operator pos:start="73:17" pos:end="73:17">&lt;</operator> <literal type="number" pos:start="73:19" pos:end="73:19">0</literal></expr>)</condition> <block pos:start="73:22" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:23">

            <return pos:start="75:13" pos:end="75:23">return <expr pos:start="75:20" pos:end="75:22"><name pos:start="75:20" pos:end="75:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="81:5" pos:end="83:64"><expr pos:start="81:5" pos:end="83:63"><name pos:start="81:5" pos:end="81:7">ret</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <call pos:start="81:11" pos:end="83:63"><name pos:start="81:11" pos:end="81:23">inc_refcounts</name><argument_list pos:start="81:24" pos:end="83:63">(<argument pos:start="81:25" pos:end="81:26"><expr pos:start="81:25" pos:end="81:26"><name pos:start="81:25" pos:end="81:26">bs</name></expr></argument>, <argument pos:start="81:29" pos:end="81:31"><expr pos:start="81:29" pos:end="81:31"><name pos:start="81:29" pos:end="81:31">res</name></expr></argument>, <argument pos:start="81:34" pos:end="81:47"><expr pos:start="81:34" pos:end="81:47"><name pos:start="81:34" pos:end="81:47">refcount_table</name></expr></argument>, <argument pos:start="81:50" pos:end="81:60"><expr pos:start="81:50" pos:end="81:60"><name pos:start="81:50" pos:end="81:60">nb_clusters</name></expr></argument>,

                        <argument pos:start="83:25" pos:end="83:43"><expr pos:start="83:25" pos:end="83:43"><name pos:start="83:25" pos:end="83:43"><name pos:start="83:25" pos:end="83:25">s</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:43">snapshots_offset</name></name></expr></argument>, <argument pos:start="83:46" pos:end="83:62"><expr pos:start="83:46" pos:end="83:62"><name pos:start="83:46" pos:end="83:62"><name pos:start="83:46" pos:end="83:46">s</name><operator pos:start="83:47" pos:end="83:48">-&gt;</operator><name pos:start="83:49" pos:end="83:62">snapshots_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:16">(<expr pos:start="85:9" pos:end="85:15"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">&lt;</operator> <literal type="number" pos:start="85:15" pos:end="85:15">0</literal></expr>)</condition> <block pos:start="85:18" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:19">

        <return pos:start="87:9" pos:end="87:19">return <expr pos:start="87:16" pos:end="87:18"><name pos:start="87:16" pos:end="87:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:23">/* refcount data */</comment>

    <expr_stmt pos:start="95:5" pos:end="99:67"><expr pos:start="95:5" pos:end="99:66"><name pos:start="95:5" pos:end="95:7">ret</name> <operator pos:start="95:9" pos:end="95:9">=</operator> <call pos:start="95:11" pos:end="99:66"><name pos:start="95:11" pos:end="95:23">inc_refcounts</name><argument_list pos:start="95:24" pos:end="99:66">(<argument pos:start="95:25" pos:end="95:26"><expr pos:start="95:25" pos:end="95:26"><name pos:start="95:25" pos:end="95:26">bs</name></expr></argument>, <argument pos:start="95:29" pos:end="95:31"><expr pos:start="95:29" pos:end="95:31"><name pos:start="95:29" pos:end="95:31">res</name></expr></argument>, <argument pos:start="95:34" pos:end="95:47"><expr pos:start="95:34" pos:end="95:47"><name pos:start="95:34" pos:end="95:47">refcount_table</name></expr></argument>, <argument pos:start="95:50" pos:end="95:60"><expr pos:start="95:50" pos:end="95:60"><name pos:start="95:50" pos:end="95:60">nb_clusters</name></expr></argument>,

                        <argument pos:start="97:25" pos:end="97:48"><expr pos:start="97:25" pos:end="97:48"><name pos:start="97:25" pos:end="97:48"><name pos:start="97:25" pos:end="97:25">s</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:48">refcount_table_offset</name></name></expr></argument>,

                        <argument pos:start="99:25" pos:end="99:65"><expr pos:start="99:25" pos:end="99:65"><name pos:start="99:25" pos:end="99:46"><name pos:start="99:25" pos:end="99:25">s</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:46">refcount_table_size</name></name> <operator pos:start="99:48" pos:end="99:48">*</operator> <sizeof pos:start="99:50" pos:end="99:65">sizeof<argument_list pos:start="99:56" pos:end="99:65">(<argument pos:start="99:57" pos:end="99:64"><expr pos:start="99:57" pos:end="99:64"><name pos:start="99:57" pos:end="99:64">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="105:5"><if pos:start="101:5" pos:end="105:5">if <condition pos:start="101:8" pos:end="101:16">(<expr pos:start="101:9" pos:end="101:15"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">&lt;</operator> <literal type="number" pos:start="101:15" pos:end="101:15">0</literal></expr>)</condition> <block pos:start="101:18" pos:end="105:5">{<block_content pos:start="103:9" pos:end="103:19">

        <return pos:start="103:9" pos:end="103:19">return <expr pos:start="103:16" pos:end="103:18"><name pos:start="103:16" pos:end="103:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="109:5" pos:end="109:70">return <expr pos:start="109:12" pos:end="109:69"><call pos:start="109:12" pos:end="109:69"><name pos:start="109:12" pos:end="109:26">check_refblocks</name><argument_list pos:start="109:27" pos:end="109:69">(<argument pos:start="109:28" pos:end="109:29"><expr pos:start="109:28" pos:end="109:29"><name pos:start="109:28" pos:end="109:29">bs</name></expr></argument>, <argument pos:start="109:32" pos:end="109:34"><expr pos:start="109:32" pos:end="109:34"><name pos:start="109:32" pos:end="109:34">res</name></expr></argument>, <argument pos:start="109:37" pos:end="109:39"><expr pos:start="109:37" pos:end="109:39"><name pos:start="109:37" pos:end="109:39">fix</name></expr></argument>, <argument pos:start="109:42" pos:end="109:55"><expr pos:start="109:42" pos:end="109:55"><name pos:start="109:42" pos:end="109:55">refcount_table</name></expr></argument>, <argument pos:start="109:58" pos:end="109:68"><expr pos:start="109:58" pos:end="109:68"><name pos:start="109:58" pos:end="109:68">nb_clusters</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
