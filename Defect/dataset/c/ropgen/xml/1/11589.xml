<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11589.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">virtio_pci_realize</name><parameter_list pos:start="1:31" pos:end="1:64">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:40">PCIDevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:49">pci_dev</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:56">Error</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier><modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:5">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VirtIOPCIProxy</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">proxy</name> <init pos:start="5:27" pos:end="5:47">= <expr pos:start="5:29" pos:end="5:47"><call pos:start="5:29" pos:end="5:47"><name pos:start="5:29" pos:end="5:38">VIRTIO_PCI</name><argument_list pos:start="5:39" pos:end="5:47">(<argument pos:start="5:40" pos:end="5:46"><expr pos:start="5:40" pos:end="5:46"><name pos:start="5:40" pos:end="5:46">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:53"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtioPCIClass</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">k</name> <init pos:start="7:23" pos:end="7:53">= <expr pos:start="7:25" pos:end="7:53"><call pos:start="7:25" pos:end="7:53"><name pos:start="7:25" pos:end="7:44">VIRTIO_PCI_GET_CLASS</name><argument_list pos:start="7:45" pos:end="7:53">(<argument pos:start="7:46" pos:end="7:52"><expr pos:start="7:46" pos:end="7:52"><name pos:start="7:46" pos:end="7:52">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="27:7">/*

     * virtio pci bar layout used by default.

     * subclasses can re-arrange things if needed.

     *

     *   region 0   --  virtio legacy io bar

     *   region 1   --  msi-x bar

     *   region 4+5 --  virtio modern memory (64bit) bar

     *

     */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:9">proxy</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:24">legacy_io_bar</name></name>  <operator pos:start="29:27" pos:end="29:27">=</operator> <literal type="number" pos:start="29:29" pos:end="29:29">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:9">proxy</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:19">msix_bar</name></name>       <operator pos:start="31:27" pos:end="31:27">=</operator> <literal type="number" pos:start="31:29" pos:end="31:29">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:9">proxy</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:24">modern_io_bar</name></name>  <operator pos:start="33:27" pos:end="33:27">=</operator> <literal type="number" pos:start="33:29" pos:end="33:29">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:9">proxy</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:25">modern_mem_bar</name></name> <operator pos:start="35:27" pos:end="35:27">=</operator> <literal type="number" pos:start="35:29" pos:end="35:29">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:9">proxy</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:17">common</name><operator pos:start="39:18" pos:end="39:18">.</operator><name pos:start="39:19" pos:end="39:24">offset</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <literal type="number" pos:start="39:28" pos:end="39:30">0x0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:9">proxy</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:17">common</name><operator pos:start="41:18" pos:end="41:18">.</operator><name pos:start="41:19" pos:end="41:22">size</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <literal type="number" pos:start="41:26" pos:end="41:31">0x1000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:51"><expr pos:start="43:5" pos:end="43:50"><name pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:9">proxy</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:17">common</name><operator pos:start="43:18" pos:end="43:18">.</operator><name pos:start="43:19" pos:end="43:22">type</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:50">VIRTIO_PCI_CAP_COMMON_CFG</name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:31"><expr pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:9">proxy</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:14">isr</name><operator pos:start="47:15" pos:end="47:15">.</operator><name pos:start="47:16" pos:end="47:21">offset</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <literal type="number" pos:start="47:25" pos:end="47:30">0x1000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:9">proxy</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:14">isr</name><operator pos:start="49:15" pos:end="49:15">.</operator><name pos:start="49:16" pos:end="49:19">size</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <literal type="number" pos:start="49:23" pos:end="49:28">0x1000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:45"><expr pos:start="51:5" pos:end="51:44"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:9">proxy</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:14">isr</name><operator pos:start="51:15" pos:end="51:15">.</operator><name pos:start="51:16" pos:end="51:19">type</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:44">VIRTIO_PCI_CAP_ISR_CFG</name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:34"><expr pos:start="55:5" pos:end="55:33"><name pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:9">proxy</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:17">device</name><operator pos:start="55:18" pos:end="55:18">.</operator><name pos:start="55:19" pos:end="55:24">offset</name></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <literal type="number" pos:start="55:28" pos:end="55:33">0x2000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:32"><expr pos:start="57:5" pos:end="57:31"><name pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:9">proxy</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:17">device</name><operator pos:start="57:18" pos:end="57:18">.</operator><name pos:start="57:19" pos:end="57:22">size</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <literal type="number" pos:start="57:26" pos:end="57:31">0x1000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:51"><expr pos:start="59:5" pos:end="59:50"><name pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:9">proxy</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:17">device</name><operator pos:start="59:18" pos:end="59:18">.</operator><name pos:start="59:19" pos:end="59:22">type</name></name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:50">VIRTIO_PCI_CAP_DEVICE_CFG</name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:34"><expr pos:start="63:5" pos:end="63:33"><name pos:start="63:5" pos:end="63:24"><name pos:start="63:5" pos:end="63:9">proxy</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:17">notify</name><operator pos:start="63:18" pos:end="63:18">.</operator><name pos:start="63:19" pos:end="63:24">offset</name></name> <operator pos:start="63:26" pos:end="63:26">=</operator> <literal type="number" pos:start="63:28" pos:end="63:33">0x3000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="67:58"><expr pos:start="65:5" pos:end="67:57"><name pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:9">proxy</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:17">notify</name><operator pos:start="65:18" pos:end="65:18">.</operator><name pos:start="65:19" pos:end="65:22">size</name></name> <operator pos:start="65:24" pos:end="65:24">=</operator>

        <name pos:start="67:9" pos:end="67:38">QEMU_VIRTIO_PCI_QUEUE_MEM_MULT</name> <operator pos:start="67:40" pos:end="67:40">*</operator> <name pos:start="67:42" pos:end="67:57">VIRTIO_QUEUE_MAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:51"><expr pos:start="69:5" pos:end="69:50"><name pos:start="69:5" pos:end="69:22"><name pos:start="69:5" pos:end="69:9">proxy</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:17">notify</name><operator pos:start="69:18" pos:end="69:18">.</operator><name pos:start="69:19" pos:end="69:22">type</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:50">VIRTIO_PCI_CAP_NOTIFY_CFG</name></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:35"><expr pos:start="73:5" pos:end="73:34"><name pos:start="73:5" pos:end="73:28"><name pos:start="73:5" pos:end="73:9">proxy</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:21">notify_pio</name><operator pos:start="73:22" pos:end="73:22">.</operator><name pos:start="73:23" pos:end="73:28">offset</name></name> <operator pos:start="73:30" pos:end="73:30">=</operator> <literal type="number" pos:start="73:32" pos:end="73:34">0x0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:33"><expr pos:start="75:5" pos:end="75:32"><name pos:start="75:5" pos:end="75:26"><name pos:start="75:5" pos:end="75:9">proxy</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:21">notify_pio</name><operator pos:start="75:22" pos:end="75:22">.</operator><name pos:start="75:23" pos:end="75:26">size</name></name> <operator pos:start="75:28" pos:end="75:28">=</operator> <literal type="number" pos:start="75:30" pos:end="75:32">0x4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:55"><expr pos:start="77:5" pos:end="77:54"><name pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:9">proxy</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:21">notify_pio</name><operator pos:start="77:22" pos:end="77:22">.</operator><name pos:start="77:23" pos:end="77:26">type</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <name pos:start="77:30" pos:end="77:54">VIRTIO_PCI_CAP_NOTIFY_CFG</name></expr>;</expr_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:67">/* subclasses can enforce modern, so do this unconditionally */</comment>

    <expr_stmt pos:start="83:5" pos:end="87:41"><expr pos:start="83:5" pos:end="87:40"><call pos:start="83:5" pos:end="87:40"><name pos:start="83:5" pos:end="83:22">memory_region_init</name><argument_list pos:start="83:23" pos:end="87:40">(<argument pos:start="83:24" pos:end="83:41"><expr pos:start="83:24" pos:end="83:41"><operator pos:start="83:24" pos:end="83:24">&amp;</operator><name pos:start="83:25" pos:end="83:41"><name pos:start="83:25" pos:end="83:29">proxy</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:41">modern_bar</name></name></expr></argument>, <argument pos:start="83:44" pos:end="83:56"><expr pos:start="83:44" pos:end="83:56"><call pos:start="83:44" pos:end="83:56"><name pos:start="83:44" pos:end="83:49">OBJECT</name><argument_list pos:start="83:50" pos:end="83:56">(<argument pos:start="83:51" pos:end="83:55"><expr pos:start="83:51" pos:end="83:55"><name pos:start="83:51" pos:end="83:55">proxy</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="83:59" pos:end="83:70"><expr pos:start="83:59" pos:end="83:70"><literal type="string" pos:start="83:59" pos:end="83:70">"virtio-pci"</literal></expr></argument>,

                       <argument pos:start="85:24" pos:end="87:39"><expr pos:start="85:24" pos:end="87:39"><literal type="number" pos:start="85:24" pos:end="85:24">2</literal> <operator pos:start="85:26" pos:end="85:26">*</operator> <name pos:start="85:28" pos:end="85:57">QEMU_VIRTIO_PCI_QUEUE_MEM_MULT</name> <operator pos:start="85:59" pos:end="85:59">*</operator>

                       <name pos:start="87:24" pos:end="87:39">VIRTIO_QUEUE_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="101:69"><expr pos:start="91:5" pos:end="101:68"><call pos:start="91:5" pos:end="101:68"><name pos:start="91:5" pos:end="91:28">memory_region_init_alias</name><argument_list pos:start="91:29" pos:end="101:68">(<argument pos:start="91:30" pos:end="91:47"><expr pos:start="91:30" pos:end="91:47"><operator pos:start="91:30" pos:end="91:30">&amp;</operator><name pos:start="91:31" pos:end="91:47"><name pos:start="91:31" pos:end="91:35">proxy</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:47">modern_cfg</name></name></expr></argument>,

                             <argument pos:start="93:30" pos:end="93:42"><expr pos:start="93:30" pos:end="93:42"><call pos:start="93:30" pos:end="93:42"><name pos:start="93:30" pos:end="93:35">OBJECT</name><argument_list pos:start="93:36" pos:end="93:42">(<argument pos:start="93:37" pos:end="93:41"><expr pos:start="93:37" pos:end="93:41"><name pos:start="93:37" pos:end="93:41">proxy</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="95:30" pos:end="95:45"><expr pos:start="95:30" pos:end="95:45"><literal type="string" pos:start="95:30" pos:end="95:45">"virtio-pci-cfg"</literal></expr></argument>,

                             <argument pos:start="97:30" pos:end="97:47"><expr pos:start="97:30" pos:end="97:47"><operator pos:start="97:30" pos:end="97:30">&amp;</operator><name pos:start="97:31" pos:end="97:47"><name pos:start="97:31" pos:end="97:35">proxy</name><operator pos:start="97:36" pos:end="97:37">-&gt;</operator><name pos:start="97:38" pos:end="97:47">modern_bar</name></name></expr></argument>,

                             <argument pos:start="99:30" pos:end="99:30"><expr pos:start="99:30" pos:end="99:30"><literal type="number" pos:start="99:30" pos:end="99:30">0</literal></expr></argument>,

                             <argument pos:start="101:30" pos:end="101:67"><expr pos:start="101:30" pos:end="101:67"><call pos:start="101:30" pos:end="101:67"><name pos:start="101:30" pos:end="101:47">memory_region_size</name><argument_list pos:start="101:48" pos:end="101:67">(<argument pos:start="101:49" pos:end="101:66"><expr pos:start="101:49" pos:end="101:66"><operator pos:start="101:49" pos:end="101:49">&amp;</operator><name pos:start="101:50" pos:end="101:66"><name pos:start="101:50" pos:end="101:54">proxy</name><operator pos:start="101:55" pos:end="101:56">-&gt;</operator><name pos:start="101:57" pos:end="101:66">modern_bar</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:83"><expr pos:start="105:5" pos:end="105:82"><call pos:start="105:5" pos:end="105:82"><name pos:start="105:5" pos:end="105:22">address_space_init</name><argument_list pos:start="105:23" pos:end="105:82">(<argument pos:start="105:24" pos:end="105:40"><expr pos:start="105:24" pos:end="105:40"><operator pos:start="105:24" pos:end="105:24">&amp;</operator><name pos:start="105:25" pos:end="105:40"><name pos:start="105:25" pos:end="105:29">proxy</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:40">modern_as</name></name></expr></argument>, <argument pos:start="105:43" pos:end="105:60"><expr pos:start="105:43" pos:end="105:60"><operator pos:start="105:43" pos:end="105:43">&amp;</operator><name pos:start="105:44" pos:end="105:60"><name pos:start="105:44" pos:end="105:48">proxy</name><operator pos:start="105:49" pos:end="105:50">-&gt;</operator><name pos:start="105:51" pos:end="105:60">modern_cfg</name></name></expr></argument>, <argument pos:start="105:63" pos:end="105:81"><expr pos:start="105:63" pos:end="105:81"><literal type="string" pos:start="105:63" pos:end="105:81">"virtio-pci-cfg-as"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="145:5"><if pos:start="109:5" pos:end="145:5">if <condition pos:start="109:8" pos:end="115:42">(<expr pos:start="109:9" pos:end="115:41"><operator pos:start="109:9" pos:end="109:9">!</operator><operator pos:start="109:10" pos:end="109:10">(</operator><name pos:start="109:11" pos:end="109:22"><name pos:start="109:11" pos:end="109:15">proxy</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:22">flags</name></name> <operator pos:start="109:24" pos:end="109:24">&amp;</operator> <name pos:start="109:26" pos:end="109:53">VIRTIO_PCI_FLAG_DISABLE_PCIE</name><operator pos:start="109:54" pos:end="109:54">)</operator>

        <operator pos:start="111:9" pos:end="111:10">&amp;&amp;</operator> <operator pos:start="111:12" pos:end="111:12">!</operator><operator pos:start="111:13" pos:end="111:13">(</operator><name pos:start="111:14" pos:end="111:25"><name pos:start="111:14" pos:end="111:18">proxy</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:25">flags</name></name> <operator pos:start="111:27" pos:end="111:27">&amp;</operator> <name pos:start="111:29" pos:end="111:58">VIRTIO_PCI_FLAG_DISABLE_MODERN</name><operator pos:start="111:59" pos:end="111:59">)</operator>

        <operator pos:start="113:9" pos:end="113:10">&amp;&amp;</operator> <call pos:start="113:12" pos:end="113:43"><name pos:start="113:12" pos:end="113:29">pci_bus_is_express</name><argument_list pos:start="113:30" pos:end="113:43">(<argument pos:start="113:31" pos:end="113:42"><expr pos:start="113:31" pos:end="113:42"><name pos:start="113:31" pos:end="113:42"><name pos:start="113:31" pos:end="113:37">pci_dev</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:42">bus</name></name></expr></argument>)</argument_list></call>

        <operator pos:start="115:9" pos:end="115:10">&amp;&amp;</operator> <operator pos:start="115:12" pos:end="115:12">!</operator><call pos:start="115:13" pos:end="115:41"><name pos:start="115:13" pos:end="115:27">pci_bus_is_root</name><argument_list pos:start="115:28" pos:end="115:41">(<argument pos:start="115:29" pos:end="115:40"><expr pos:start="115:29" pos:end="115:40"><name pos:start="115:29" pos:end="115:40"><name pos:start="115:29" pos:end="115:35">pci_dev</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:40">bus</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:44" pos:end="145:5">{<block_content pos:start="117:9" pos:end="143:62">

        <decl_stmt pos:start="117:9" pos:end="117:16"><decl pos:start="117:9" pos:end="117:15"><type pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">int</name></type> <name pos:start="117:13" pos:end="117:15">pos</name></decl>;</decl_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:53"><expr pos:start="121:9" pos:end="121:52"><name pos:start="121:9" pos:end="121:28"><name pos:start="121:9" pos:end="121:15">pci_dev</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:28">cap_present</name></name> <operator pos:start="121:30" pos:end="121:31">|=</operator> <name pos:start="121:33" pos:end="121:52">QEMU_PCI_CAP_EXPRESS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:49"><expr pos:start="123:9" pos:end="123:48"><name pos:start="123:9" pos:end="123:11">pos</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <call pos:start="123:15" pos:end="123:48"><name pos:start="123:15" pos:end="123:36">pcie_endpoint_cap_init</name><argument_list pos:start="123:37" pos:end="123:48">(<argument pos:start="123:38" pos:end="123:44"><expr pos:start="123:38" pos:end="123:44"><name pos:start="123:38" pos:end="123:44">pci_dev</name></expr></argument>, <argument pos:start="123:47" pos:end="123:47"><expr pos:start="123:47" pos:end="123:47"><literal type="number" pos:start="123:47" pos:end="123:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:24"><expr pos:start="125:9" pos:end="125:23"><call pos:start="125:9" pos:end="125:23"><name pos:start="125:9" pos:end="125:14">assert</name><argument_list pos:start="125:15" pos:end="125:23">(<argument pos:start="125:16" pos:end="125:22"><expr pos:start="125:16" pos:end="125:22"><name pos:start="125:16" pos:end="125:18">pos</name> <operator pos:start="125:20" pos:end="125:20">&gt;</operator> <literal type="number" pos:start="125:22" pos:end="125:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:75"><expr pos:start="129:9" pos:end="129:74"><name pos:start="129:9" pos:end="129:11">pos</name> <operator pos:start="129:13" pos:end="129:13">=</operator> <call pos:start="129:15" pos:end="129:74"><name pos:start="129:15" pos:end="129:32">pci_add_capability</name><argument_list pos:start="129:33" pos:end="129:74">(<argument pos:start="129:34" pos:end="129:40"><expr pos:start="129:34" pos:end="129:40"><name pos:start="129:34" pos:end="129:40">pci_dev</name></expr></argument>, <argument pos:start="129:43" pos:end="129:55"><expr pos:start="129:43" pos:end="129:55"><name pos:start="129:43" pos:end="129:55">PCI_CAP_ID_PM</name></expr></argument>, <argument pos:start="129:58" pos:end="129:58"><expr pos:start="129:58" pos:end="129:58"><literal type="number" pos:start="129:58" pos:end="129:58">0</literal></expr></argument>, <argument pos:start="129:61" pos:end="129:73"><expr pos:start="129:61" pos:end="129:73"><name pos:start="129:61" pos:end="129:73">PCI_PM_SIZEOF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:24"><expr pos:start="131:9" pos:end="131:23"><call pos:start="131:9" pos:end="131:23"><name pos:start="131:9" pos:end="131:14">assert</name><argument_list pos:start="131:15" pos:end="131:23">(<argument pos:start="131:16" pos:end="131:22"><expr pos:start="131:16" pos:end="131:22"><name pos:start="131:16" pos:end="131:18">pos</name> <operator pos:start="131:20" pos:end="131:20">&gt;</operator> <literal type="number" pos:start="131:22" pos:end="131:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="135:9" pos:end="141:11">/*

         * Indicates that this function complies with revision 1.2 of the

         * PCI Power Management Interface Specification.

         */</comment>

        <expr_stmt pos:start="143:9" pos:end="143:62"><expr pos:start="143:9" pos:end="143:61"><call pos:start="143:9" pos:end="143:61"><name pos:start="143:9" pos:end="143:20">pci_set_word</name><argument_list pos:start="143:21" pos:end="143:61">(<argument pos:start="143:22" pos:end="143:55"><expr pos:start="143:22" pos:end="143:55"><name pos:start="143:22" pos:end="143:36"><name pos:start="143:22" pos:end="143:28">pci_dev</name><operator pos:start="143:29" pos:end="143:30">-&gt;</operator><name pos:start="143:31" pos:end="143:36">config</name></name> <operator pos:start="143:38" pos:end="143:38">+</operator> <name pos:start="143:40" pos:end="143:42">pos</name> <operator pos:start="143:44" pos:end="143:44">+</operator> <name pos:start="143:46" pos:end="143:55">PCI_PM_PMC</name></expr></argument>, <argument pos:start="143:58" pos:end="143:60"><expr pos:start="143:58" pos:end="143:60"><literal type="number" pos:start="143:58" pos:end="143:60">0x3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:63"><expr pos:start="149:5" pos:end="149:62"><call pos:start="149:5" pos:end="149:62"><name pos:start="149:5" pos:end="149:22">virtio_pci_bus_new</name><argument_list pos:start="149:23" pos:end="149:62">(<argument pos:start="149:24" pos:end="149:34"><expr pos:start="149:24" pos:end="149:34"><operator pos:start="149:24" pos:end="149:24">&amp;</operator><name pos:start="149:25" pos:end="149:34"><name pos:start="149:25" pos:end="149:29">proxy</name><operator pos:start="149:30" pos:end="149:31">-&gt;</operator><name pos:start="149:32" pos:end="149:34">bus</name></name></expr></argument>, <argument pos:start="149:37" pos:end="149:54"><expr pos:start="149:37" pos:end="149:54"><sizeof pos:start="149:37" pos:end="149:54">sizeof<argument_list pos:start="149:43" pos:end="149:54">(<argument pos:start="149:44" pos:end="149:53"><expr pos:start="149:44" pos:end="149:53"><name pos:start="149:44" pos:end="149:53"><name pos:start="149:44" pos:end="149:48">proxy</name><operator pos:start="149:49" pos:end="149:50">-&gt;</operator><name pos:start="149:51" pos:end="149:53">bus</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="149:57" pos:end="149:61"><expr pos:start="149:57" pos:end="149:61"><name pos:start="149:57" pos:end="149:61">proxy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="155:5"><if pos:start="151:5" pos:end="155:5">if <condition pos:start="151:8" pos:end="151:19">(<expr pos:start="151:9" pos:end="151:18"><name pos:start="151:9" pos:end="151:18"><name pos:start="151:9" pos:end="151:9">k</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:18">realize</name></name></expr>)</condition> <block pos:start="151:21" pos:end="155:5">{<block_content pos:start="153:9" pos:end="153:32">

        <expr_stmt pos:start="153:9" pos:end="153:32"><expr pos:start="153:9" pos:end="153:31"><call pos:start="153:9" pos:end="153:31"><name pos:start="153:9" pos:end="153:18"><name pos:start="153:9" pos:end="153:9">k</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:18">realize</name></name><argument_list pos:start="153:19" pos:end="153:31">(<argument pos:start="153:20" pos:end="153:24"><expr pos:start="153:20" pos:end="153:24"><name pos:start="153:20" pos:end="153:24">proxy</name></expr></argument>, <argument pos:start="153:27" pos:end="153:30"><expr pos:start="153:27" pos:end="153:30"><name pos:start="153:27" pos:end="153:30">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
