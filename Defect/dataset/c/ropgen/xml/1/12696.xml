<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12696.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">hevc_decode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">HEVCContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:26">avctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:43"><expr pos:start="11:5" pos:end="11:42"><name pos:start="11:5" pos:end="11:38"><name pos:start="11:5" pos:end="11:9">avctx</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:19">internal</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:38">allocate_progress</name></name> <operator pos:start="11:40" pos:end="11:40">=</operator> <literal type="number" pos:start="11:42" pos:end="11:42">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:34"><name pos:start="15:11" pos:end="15:27">hevc_init_context</name><argument_list pos:start="15:28" pos:end="15:34">(<argument pos:start="15:29" pos:end="15:33"><expr pos:start="15:29" pos:end="15:33"><name pos:start="15:29" pos:end="15:33">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:19"><if pos:start="17:5" pos:end="19:19">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">&lt;</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:19"><block_content pos:start="19:9" pos:end="19:19">

        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:28">enable_parallel_tiles</name></name> <operator pos:start="23:30" pos:end="23:30">=</operator> <literal type="number" pos:start="23:32" pos:end="23:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:10">sei</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:25">picture_timing</name><operator pos:start="25:26" pos:end="25:26">.</operator><name pos:start="25:27" pos:end="25:40">picture_struct</name></name> <operator pos:start="25:42" pos:end="25:42">=</operator> <literal type="number" pos:start="25:44" pos:end="25:44">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:15"><expr pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:10">eos</name></name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:32"><expr pos:start="31:5" pos:end="31:31"><call pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:15">atomic_init</name><argument_list pos:start="31:16" pos:end="31:31">(<argument pos:start="31:17" pos:end="31:27"><expr pos:start="31:17" pos:end="31:27"><operator pos:start="31:17" pos:end="31:17">&amp;</operator><name pos:start="31:18" pos:end="31:27"><name pos:start="31:18" pos:end="31:18">s</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:27">wpp_err</name></name></expr></argument>, <argument pos:start="31:30" pos:end="31:30"><expr pos:start="31:30" pos:end="31:30"><literal type="number" pos:start="31:30" pos:end="31:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="41:30"><if pos:start="35:5" pos:end="37:48">if<condition pos:start="35:7" pos:end="35:51">(<expr pos:start="35:8" pos:end="35:50"><name pos:start="35:8" pos:end="35:32"><name pos:start="35:8" pos:end="35:12">avctx</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:32">active_thread_type</name></name> <operator pos:start="35:34" pos:end="35:34">&amp;</operator> <name pos:start="35:36" pos:end="35:50">FF_THREAD_SLICE</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:48"><block_content pos:start="37:9" pos:end="37:48">

        <expr_stmt pos:start="37:9" pos:end="37:48"><expr pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:25">threads_number</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <name pos:start="37:29" pos:end="37:47"><name pos:start="37:29" pos:end="37:33">avctx</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:47">thread_count</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="39:5" pos:end="41:30">else<block type="pseudo" pos:start="41:9" pos:end="41:30"><block_content pos:start="41:9" pos:end="41:30">

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:25">threads_number</name></name> <operator pos:start="41:27" pos:end="41:27">=</operator> <literal type="number" pos:start="41:29" pos:end="41:29">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="45:5" pos:end="57:5"><if pos:start="45:5" pos:end="57:5">if <condition pos:start="45:8" pos:end="45:54">(<expr pos:start="45:9" pos:end="45:53"><name pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:13">avctx</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:29">extradata_size</name></name> <operator pos:start="45:31" pos:end="45:31">&gt;</operator> <literal type="number" pos:start="45:33" pos:end="45:33">0</literal> <operator pos:start="45:35" pos:end="45:36">&amp;&amp;</operator> <name pos:start="45:38" pos:end="45:53"><name pos:start="45:38" pos:end="45:42">avctx</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:53">extradata</name></name></expr>)</condition> <block pos:start="45:56" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:9">

        <expr_stmt pos:start="47:9" pos:end="47:80"><expr pos:start="47:9" pos:end="47:79"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:79"><name pos:start="47:15" pos:end="47:35">hevc_decode_extradata</name><argument_list pos:start="47:36" pos:end="47:79">(<argument pos:start="47:37" pos:end="47:37"><expr pos:start="47:37" pos:end="47:37"><name pos:start="47:37" pos:end="47:37">s</name></expr></argument>, <argument pos:start="47:40" pos:end="47:55"><expr pos:start="47:40" pos:end="47:55"><name pos:start="47:40" pos:end="47:55"><name pos:start="47:40" pos:end="47:44">avctx</name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:55">extradata</name></name></expr></argument>, <argument pos:start="47:58" pos:end="47:78"><expr pos:start="47:58" pos:end="47:78"><name pos:start="47:58" pos:end="47:78"><name pos:start="47:58" pos:end="47:62">avctx</name><operator pos:start="47:63" pos:end="47:64">-&gt;</operator><name pos:start="47:65" pos:end="47:78">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:20">(<expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">&lt;</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>)</condition> <block pos:start="49:22" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:23">

            <expr_stmt pos:start="51:13" pos:end="51:36"><expr pos:start="51:13" pos:end="51:35"><call pos:start="51:13" pos:end="51:35"><name pos:start="51:13" pos:end="51:28">hevc_decode_free</name><argument_list pos:start="51:29" pos:end="51:35">(<argument pos:start="51:30" pos:end="51:34"><expr pos:start="51:30" pos:end="51:34"><name pos:start="51:30" pos:end="51:34">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:23">return <expr pos:start="53:20" pos:end="53:22"><name pos:start="53:20" pos:end="53:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="67:46"><if pos:start="61:5" pos:end="63:46">if<condition pos:start="61:7" pos:end="61:80">(<expr pos:start="61:8" pos:end="61:79"><operator pos:start="61:8" pos:end="61:8">(</operator><name pos:start="61:9" pos:end="61:33"><name pos:start="61:9" pos:end="61:13">avctx</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:33">active_thread_type</name></name> <operator pos:start="61:35" pos:end="61:35">&amp;</operator> <name pos:start="61:37" pos:end="61:51">FF_THREAD_FRAME</name><operator pos:start="61:52" pos:end="61:52">)</operator> <operator pos:start="61:54" pos:end="61:55">&amp;&amp;</operator> <name pos:start="61:57" pos:end="61:75"><name pos:start="61:57" pos:end="61:61">avctx</name><operator pos:start="61:62" pos:end="61:63">-&gt;</operator><name pos:start="61:64" pos:end="61:75">thread_count</name></name> <operator pos:start="61:77" pos:end="61:77">&gt;</operator> <literal type="number" pos:start="61:79" pos:end="61:79">1</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:46"><block_content pos:start="63:13" pos:end="63:46">

            <expr_stmt pos:start="63:13" pos:end="63:46"><expr pos:start="63:13" pos:end="63:45"><name pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:27">threads_type</name></name> <operator pos:start="63:29" pos:end="63:29">=</operator> <name pos:start="63:31" pos:end="63:45">FF_THREAD_FRAME</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="65:9" pos:end="67:46">else<block type="pseudo" pos:start="67:13" pos:end="67:46"><block_content pos:start="67:13" pos:end="67:46">

            <expr_stmt pos:start="67:13" pos:end="67:46"><expr pos:start="67:13" pos:end="67:45"><name pos:start="67:13" pos:end="67:27"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:27">threads_type</name></name> <operator pos:start="67:29" pos:end="67:29">=</operator> <name pos:start="67:31" pos:end="67:45">FF_THREAD_SLICE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
