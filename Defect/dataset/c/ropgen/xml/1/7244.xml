<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7244.c" pos:tabs="8"><function pos:start="1:1" pos:end="185:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">ff_aac_search_for_pred</name><parameter_list pos:start="1:28" pos:end="1:72">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:41">AACEncContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:71"><decl pos:start="1:47" pos:end="1:71"><type pos:start="1:47" pos:end="1:71"><name pos:start="1:47" pos:end="1:66">SingleChannelElement</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">sce</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="185:1">{<block_content pos:start="5:5" pos:end="183:41">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">sfb</name></decl>, <decl pos:start="5:14" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:14">i</name></decl>, <decl pos:start="5:17" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:21">count</name> <init pos:start="5:23" pos:end="5:25">= <expr pos:start="5:25" pos:end="5:25"><literal type="number" pos:start="5:25" pos:end="5:25">0</literal></expr></init></decl>, <decl pos:start="5:28" pos:end="5:42"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:28" pos:end="5:38">cost_coeffs</name> <init pos:start="5:40" pos:end="5:42">= <expr pos:start="5:42" pos:end="5:42"><literal type="number" pos:start="5:42" pos:end="5:42">0</literal></expr></init></decl>, <decl pos:start="5:45" pos:end="5:57"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:45" pos:end="5:53">cost_pred</name> <init pos:start="5:55" pos:end="5:57">= <expr pos:start="5:57" pos:end="5:57"><literal type="number" pos:start="5:57" pos:end="5:57">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:87"><decl pos:start="7:5" pos:end="7:86"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:18">pmax</name> <init pos:start="7:20" pos:end="7:86">= <expr pos:start="7:22" pos:end="7:86"><call pos:start="7:22" pos:end="7:86"><name pos:start="7:22" pos:end="7:26">FFMIN</name><argument_list pos:start="7:27" pos:end="7:86">(<argument pos:start="7:28" pos:end="7:43"><expr pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:30">sce</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:35">ics</name><operator pos:start="7:36" pos:end="7:36">.</operator><name pos:start="7:37" pos:end="7:43">max_sfb</name></name></expr></argument>, <argument pos:start="7:46" pos:end="7:85"><expr pos:start="7:46" pos:end="7:85"><name pos:start="7:46" pos:end="7:85"><name pos:start="7:46" pos:end="7:64">ff_aac_pred_sfb_max</name><index pos:start="7:65" pos:end="7:85">[<expr pos:start="7:66" pos:end="7:84"><name pos:start="7:66" pos:end="7:84"><name pos:start="7:66" pos:end="7:66">s</name><operator pos:start="7:67" pos:end="7:68">-&gt;</operator><name pos:start="7:69" pos:end="7:84">samplerate_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:62"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">float</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">O34</name>  <init pos:start="9:17" pos:end="9:35">= <expr pos:start="9:19" pos:end="9:35"><operator pos:start="9:19" pos:end="9:19">&amp;</operator><name pos:start="9:20" pos:end="9:35"><name pos:start="9:20" pos:end="9:20">s</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:28">scoefs</name><index pos:start="9:29" pos:end="9:35">[<expr pos:start="9:30" pos:end="9:34"><literal type="number" pos:start="9:30" pos:end="9:32">128</literal><operator pos:start="9:33" pos:end="9:33">*</operator><literal type="number" pos:start="9:34" pos:end="9:34">0</literal></expr>]</index></name></expr></init></decl>, <decl pos:start="9:38" pos:end="9:61"><type ref="prev" pos:start="9:5" pos:end="9:11"><modifier pos:start="9:38" pos:end="9:38">*</modifier></type><name pos:start="9:39" pos:end="9:41">P34</name> <init pos:start="9:43" pos:end="9:61">= <expr pos:start="9:45" pos:end="9:61"><operator pos:start="9:45" pos:end="9:45">&amp;</operator><name pos:start="9:46" pos:end="9:61"><name pos:start="9:46" pos:end="9:46">s</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:54">scoefs</name><index pos:start="9:55" pos:end="9:61">[<expr pos:start="9:56" pos:end="9:60"><literal type="number" pos:start="9:56" pos:end="9:58">128</literal><operator pos:start="9:59" pos:end="9:59">*</operator><literal type="number" pos:start="9:60" pos:end="9:60">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:62"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">float</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:15">SENT</name> <init pos:start="11:17" pos:end="11:35">= <expr pos:start="11:19" pos:end="11:35"><operator pos:start="11:19" pos:end="11:19">&amp;</operator><name pos:start="11:20" pos:end="11:35"><name pos:start="11:20" pos:end="11:20">s</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:28">scoefs</name><index pos:start="11:29" pos:end="11:35">[<expr pos:start="11:30" pos:end="11:34"><literal type="number" pos:start="11:30" pos:end="11:32">128</literal><operator pos:start="11:33" pos:end="11:33">*</operator><literal type="number" pos:start="11:34" pos:end="11:34">2</literal></expr>]</index></name></expr></init></decl>, <decl pos:start="11:38" pos:end="11:61"><type ref="prev" pos:start="11:5" pos:end="11:11"><modifier pos:start="11:38" pos:end="11:38">*</modifier></type><name pos:start="11:39" pos:end="11:41">S34</name> <init pos:start="11:43" pos:end="11:61">= <expr pos:start="11:45" pos:end="11:61"><operator pos:start="11:45" pos:end="11:45">&amp;</operator><name pos:start="11:46" pos:end="11:61"><name pos:start="11:46" pos:end="11:46">s</name><operator pos:start="11:47" pos:end="11:48">-&gt;</operator><name pos:start="11:49" pos:end="11:54">scoefs</name><index pos:start="11:55" pos:end="11:61">[<expr pos:start="11:56" pos:end="11:60"><literal type="number" pos:start="11:56" pos:end="11:58">128</literal><operator pos:start="11:59" pos:end="11:59">*</operator><literal type="number" pos:start="11:60" pos:end="11:60">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">float</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:15">QERR</name> <init pos:start="13:17" pos:end="13:35">= <expr pos:start="13:19" pos:end="13:35"><operator pos:start="13:19" pos:end="13:19">&amp;</operator><name pos:start="13:20" pos:end="13:35"><name pos:start="13:20" pos:end="13:20">s</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:28">scoefs</name><index pos:start="13:29" pos:end="13:35">[<expr pos:start="13:30" pos:end="13:34"><literal type="number" pos:start="13:30" pos:end="13:32">128</literal><operator pos:start="13:33" pos:end="13:33">*</operator><literal type="number" pos:start="13:34" pos:end="13:34">4</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:60">(<expr pos:start="17:9" pos:end="17:59"><name pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:11">sce</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:16">ics</name><operator pos:start="17:17" pos:end="17:17">.</operator><name pos:start="17:18" pos:end="17:32">window_sequence</name><index pos:start="17:33" pos:end="17:35">[<expr pos:start="17:34" pos:end="17:34"><literal type="number" pos:start="17:34" pos:end="17:34">0</literal></expr>]</index></name> <operator pos:start="17:37" pos:end="17:38">==</operator> <name pos:start="17:40" pos:end="17:59">EIGHT_SHORT_SEQUENCE</name></expr>)</condition> <block pos:start="17:62" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:15">

        <expr_stmt pos:start="19:9" pos:end="19:39"><expr pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:11">sce</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:16">ics</name><operator pos:start="19:17" pos:end="19:17">.</operator><name pos:start="19:18" pos:end="19:34">predictor_present</name></name> <operator pos:start="19:36" pos:end="19:36">=</operator> <literal type="number" pos:start="19:38" pos:end="19:38">0</literal></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="39:5"><if pos:start="27:5" pos:end="39:5">if <condition pos:start="27:8" pos:end="27:40">(<expr pos:start="27:9" pos:end="27:39"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:39"><name pos:start="27:10" pos:end="27:12">sce</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:17">ics</name><operator pos:start="27:18" pos:end="27:18">.</operator><name pos:start="27:19" pos:end="27:39">predictor_initialized</name></name></expr>)</condition> <block pos:start="27:42" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:50">

        <expr_stmt pos:start="29:9" pos:end="29:51"><expr pos:start="29:9" pos:end="29:50"><call pos:start="29:9" pos:end="29:50"><name pos:start="29:9" pos:end="29:28">reset_all_predictors</name><argument_list pos:start="29:29" pos:end="29:50">(<argument pos:start="29:30" pos:end="29:49"><expr pos:start="29:30" pos:end="29:49"><name pos:start="29:30" pos:end="29:49"><name pos:start="29:30" pos:end="29:32">sce</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:49">predictor_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:43"><expr pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:11">sce</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:16">ics</name><operator pos:start="31:17" pos:end="31:17">.</operator><name pos:start="31:18" pos:end="31:38">predictor_initialized</name></name> <operator pos:start="31:40" pos:end="31:40">=</operator> <literal type="number" pos:start="31:42" pos:end="31:42">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:63"><expr pos:start="33:9" pos:end="33:62"><call pos:start="33:9" pos:end="33:62"><name pos:start="33:9" pos:end="33:14">memcpy</name><argument_list pos:start="33:15" pos:end="33:62">(<argument pos:start="33:16" pos:end="33:28"><expr pos:start="33:16" pos:end="33:28"><name pos:start="33:16" pos:end="33:28"><name pos:start="33:16" pos:end="33:18">sce</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:28">prcoeffs</name></name></expr></argument>, <argument pos:start="33:31" pos:end="33:41"><expr pos:start="33:31" pos:end="33:41"><name pos:start="33:31" pos:end="33:41"><name pos:start="33:31" pos:end="33:33">sce</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:41">coeffs</name></name></expr></argument>, <argument pos:start="33:44" pos:end="33:61"><expr pos:start="33:44" pos:end="33:61"><literal type="number" pos:start="33:44" pos:end="33:47">1024</literal><operator pos:start="33:48" pos:end="33:48">*</operator><sizeof pos:start="33:49" pos:end="33:61">sizeof<argument_list pos:start="33:55" pos:end="33:61">(<argument pos:start="33:56" pos:end="33:60"><expr pos:start="33:56" pos:end="33:60"><name pos:start="33:56" pos:end="33:60">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="35:9" pos:end="37:50">for <control pos:start="35:13" pos:end="35:32">(<init pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">i</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">1</literal></expr>;</init> <condition pos:start="35:21" pos:end="35:27"><expr pos:start="35:21" pos:end="35:26"><name pos:start="35:21" pos:end="35:21">i</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <literal type="number" pos:start="35:25" pos:end="35:26">31</literal></expr>;</condition> <incr pos:start="35:29" pos:end="35:31"><expr pos:start="35:29" pos:end="35:31"><name pos:start="35:29" pos:end="35:29">i</name><operator pos:start="35:30" pos:end="35:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:13" pos:end="37:50"><block_content pos:start="37:13" pos:end="37:50">

            <expr_stmt pos:start="37:13" pos:end="37:50"><expr pos:start="37:13" pos:end="37:49"><name pos:start="37:13" pos:end="37:45"><name pos:start="37:13" pos:end="37:15">sce</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:20">ics</name><operator pos:start="37:21" pos:end="37:21">.</operator><name pos:start="37:22" pos:end="37:42">predictor_reset_count</name><index pos:start="37:43" pos:end="37:45">[<expr pos:start="37:44" pos:end="37:44"><name pos:start="37:44" pos:end="37:44">i</name></expr>]</index></name> <operator pos:start="37:47" pos:end="37:47">=</operator> <name pos:start="37:49" pos:end="37:49">i</name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><call pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:22">update_pred_resets</name><argument_list pos:start="43:23" pos:end="43:27">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">sce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:66"><expr pos:start="45:5" pos:end="45:65"><call pos:start="45:5" pos:end="45:65"><name pos:start="45:5" pos:end="45:10">memcpy</name><argument_list pos:start="45:11" pos:end="45:65">(<argument pos:start="45:12" pos:end="45:24"><expr pos:start="45:12" pos:end="45:24"><name pos:start="45:12" pos:end="45:24"><name pos:start="45:12" pos:end="45:14">sce</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:24">band_alt</name></name></expr></argument>, <argument pos:start="45:27" pos:end="45:40"><expr pos:start="45:27" pos:end="45:40"><name pos:start="45:27" pos:end="45:40"><name pos:start="45:27" pos:end="45:29">sce</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:40">band_type</name></name></expr></argument>, <argument pos:start="45:43" pos:end="45:64"><expr pos:start="45:43" pos:end="45:64"><sizeof pos:start="45:43" pos:end="45:64">sizeof<argument_list pos:start="45:49" pos:end="45:64">(<argument pos:start="45:50" pos:end="45:63"><expr pos:start="45:50" pos:end="45:63"><name pos:start="45:50" pos:end="45:63"><name pos:start="45:50" pos:end="45:52">sce</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:63">band_type</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="49:5" pos:end="165:5">for <control pos:start="49:9" pos:end="49:49">(<init pos:start="49:10" pos:end="49:30"><expr pos:start="49:10" pos:end="49:29"><name pos:start="49:10" pos:end="49:12">sfb</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <name pos:start="49:16" pos:end="49:29">PRED_SFB_START</name></expr>;</init> <condition pos:start="49:32" pos:end="49:42"><expr pos:start="49:32" pos:end="49:41"><name pos:start="49:32" pos:end="49:34">sfb</name> <operator pos:start="49:36" pos:end="49:36">&lt;</operator> <name pos:start="49:38" pos:end="49:41">pmax</name></expr>;</condition> <incr pos:start="49:44" pos:end="49:48"><expr pos:start="49:44" pos:end="49:48"><name pos:start="49:44" pos:end="49:46">sfb</name><operator pos:start="49:47" pos:end="49:48">++</operator></expr></incr>)</control> <block pos:start="49:51" pos:end="165:5">{<block_content pos:start="51:9" pos:end="163:9">

        <decl_stmt pos:start="51:9" pos:end="51:31"><decl pos:start="51:9" pos:end="51:17"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:17">cost1</name></decl>, <decl pos:start="51:20" pos:end="51:24"><type ref="prev" pos:start="51:9" pos:end="51:11"/><name pos:start="51:20" pos:end="51:24">cost2</name></decl>, <decl pos:start="51:27" pos:end="51:30"><type ref="prev" pos:start="51:9" pos:end="51:11"/><name pos:start="51:27" pos:end="51:30">cb_p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:49"><decl pos:start="53:9" pos:end="53:19"><type pos:start="53:9" pos:end="53:13"><name pos:start="53:9" pos:end="53:13">float</name></type> <name pos:start="53:15" pos:end="53:19">dist1</name></decl>, <decl pos:start="53:22" pos:end="53:26"><type ref="prev" pos:start="53:9" pos:end="53:13"/><name pos:start="53:22" pos:end="53:26">dist2</name></decl>, <decl pos:start="53:29" pos:end="53:48"><type ref="prev" pos:start="53:9" pos:end="53:13"/><name pos:start="53:29" pos:end="53:41">dist_spec_err</name> <init pos:start="53:43" pos:end="53:48">= <expr pos:start="53:45" pos:end="53:48"><literal type="number" pos:start="53:45" pos:end="53:48">0.0f</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="55:9" pos:end="55:45"><decl pos:start="55:9" pos:end="55:44"><type pos:start="55:9" pos:end="55:17"><specifier pos:start="55:9" pos:end="55:13">const</specifier> <name pos:start="55:15" pos:end="55:17">int</name></type> <name pos:start="55:19" pos:end="55:22">cb_n</name> <init pos:start="55:24" pos:end="55:44">= <expr pos:start="55:26" pos:end="55:44"><name pos:start="55:26" pos:end="55:44"><name pos:start="55:26" pos:end="55:28">sce</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:39">band_type</name><index pos:start="55:40" pos:end="55:44">[<expr pos:start="55:41" pos:end="55:43"><name pos:start="55:41" pos:end="55:43">sfb</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:56"><decl pos:start="57:9" pos:end="57:55"><type pos:start="57:9" pos:end="57:17"><specifier pos:start="57:9" pos:end="57:13">const</specifier> <name pos:start="57:15" pos:end="57:17">int</name></type> <name pos:start="57:19" pos:end="57:28">start_coef</name> <init pos:start="57:30" pos:end="57:55">= <expr pos:start="57:32" pos:end="57:55"><name pos:start="57:32" pos:end="57:55"><name pos:start="57:32" pos:end="57:34">sce</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:39">ics</name><operator pos:start="57:40" pos:end="57:40">.</operator><name pos:start="57:41" pos:end="57:50">swb_offset</name><index pos:start="57:51" pos:end="57:55">[<expr pos:start="57:52" pos:end="57:54"><name pos:start="57:52" pos:end="57:54">sfb</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:73"><decl pos:start="59:9" pos:end="59:72"><type pos:start="59:9" pos:end="59:17"><specifier pos:start="59:9" pos:end="59:13">const</specifier> <name pos:start="59:15" pos:end="59:17">int</name></type> <name pos:start="59:19" pos:end="59:28">num_coeffs</name> <init pos:start="59:30" pos:end="59:72">= <expr pos:start="59:32" pos:end="59:72"><name pos:start="59:32" pos:end="59:59"><name pos:start="59:32" pos:end="59:34">sce</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:39">ics</name><operator pos:start="59:40" pos:end="59:40">.</operator><name pos:start="59:41" pos:end="59:50">swb_offset</name><index pos:start="59:51" pos:end="59:59">[<expr pos:start="59:52" pos:end="59:58"><name pos:start="59:52" pos:end="59:54">sfb</name> <operator pos:start="59:56" pos:end="59:56">+</operator> <literal type="number" pos:start="59:58" pos:end="59:58">1</literal></expr>]</index></name> <operator pos:start="59:61" pos:end="59:61">-</operator> <name pos:start="59:63" pos:end="59:72">start_coef</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:74"><decl pos:start="61:9" pos:end="61:73"><type pos:start="61:9" pos:end="61:25"><specifier pos:start="61:9" pos:end="61:13">const</specifier> <name pos:start="61:15" pos:end="61:23">FFPsyBand</name> <modifier pos:start="61:25" pos:end="61:25">*</modifier></type><name pos:start="61:26" pos:end="61:29">band</name> <init pos:start="61:31" pos:end="61:73">= <expr pos:start="61:33" pos:end="61:73"><operator pos:start="61:33" pos:end="61:33">&amp;</operator><name pos:start="61:34" pos:end="61:58"><name pos:start="61:34" pos:end="61:34">s</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:39">psy</name><operator pos:start="61:40" pos:end="61:40">.</operator><name pos:start="61:41" pos:end="61:42">ch</name><index pos:start="61:43" pos:end="61:58">[<expr pos:start="61:44" pos:end="61:57"><name pos:start="61:44" pos:end="61:57"><name pos:start="61:44" pos:end="61:44">s</name><operator pos:start="61:45" pos:end="61:46">-&gt;</operator><name pos:start="61:47" pos:end="61:57">cur_channel</name></name></expr>]</index></name><operator pos:start="61:59" pos:end="61:59">.</operator><name pos:start="61:60" pos:end="61:73"><name pos:start="61:60" pos:end="61:68">psy_bands</name><index pos:start="61:69" pos:end="61:73">[<expr pos:start="61:70" pos:end="61:72"><name pos:start="61:70" pos:end="61:72">sfb</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="65:9" pos:end="71:21"><if pos:start="65:9" pos:end="71:21">if <condition pos:start="65:12" pos:end="69:44">(<expr pos:start="65:13" pos:end="69:43"><name pos:start="65:13" pos:end="65:22">start_coef</name> <operator pos:start="65:24" pos:end="65:24">+</operator> <name pos:start="65:26" pos:end="65:35">num_coeffs</name> <operator pos:start="65:37" pos:end="65:37">&gt;</operator> <name pos:start="65:39" pos:end="65:52">MAX_PREDICTORS</name> <operator pos:start="65:54" pos:end="65:55">||</operator>

            <operator pos:start="67:13" pos:end="67:13">(</operator><name pos:start="67:14" pos:end="67:27"><name pos:start="67:14" pos:end="67:14">s</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:27">cur_channel</name></name> <operator pos:start="67:29" pos:end="67:30">&amp;&amp;</operator> <name pos:start="67:32" pos:end="67:50"><name pos:start="67:32" pos:end="67:34">sce</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:45">band_type</name><index pos:start="67:46" pos:end="67:50">[<expr pos:start="67:47" pos:end="67:49"><name pos:start="67:47" pos:end="67:49">sfb</name></expr>]</index></name> <operator pos:start="67:52" pos:end="67:53">&gt;=</operator> <name pos:start="67:55" pos:end="67:67">INTENSITY_BT2</name><operator pos:start="67:68" pos:end="67:68">)</operator> <operator pos:start="67:70" pos:end="67:71">||</operator>

            <name pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:15">sce</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:26">band_type</name><index pos:start="69:27" pos:end="69:31">[<expr pos:start="69:28" pos:end="69:30"><name pos:start="69:28" pos:end="69:30">sfb</name></expr>]</index></name> <operator pos:start="69:33" pos:end="69:34">==</operator> <name pos:start="69:36" pos:end="69:43">NOISE_BT</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:21"><block_content pos:start="71:13" pos:end="71:21">

            <continue pos:start="71:13" pos:end="71:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="block" pos:start="75:9" pos:end="75:33">/* Normal coefficients */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:63"><expr pos:start="77:9" pos:end="77:62"><call pos:start="77:9" pos:end="77:62"><name pos:start="77:9" pos:end="77:19">abs_pow34_v</name><argument_list pos:start="77:20" pos:end="77:62">(<argument pos:start="77:21" pos:end="77:23"><expr pos:start="77:21" pos:end="77:23"><name pos:start="77:21" pos:end="77:23">O34</name></expr></argument>, <argument pos:start="77:26" pos:end="77:49"><expr pos:start="77:26" pos:end="77:49"><operator pos:start="77:26" pos:end="77:26">&amp;</operator><name pos:start="77:27" pos:end="77:49"><name pos:start="77:27" pos:end="77:29">sce</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:37">coeffs</name><index pos:start="77:38" pos:end="77:49">[<expr pos:start="77:39" pos:end="77:48"><name pos:start="77:39" pos:end="77:48">start_coef</name></expr>]</index></name></expr></argument>, <argument pos:start="77:52" pos:end="77:61"><expr pos:start="77:52" pos:end="77:61"><name pos:start="77:52" pos:end="77:61">num_coeffs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="83:102"><expr pos:start="79:9" pos:end="83:101"><name pos:start="79:9" pos:end="79:13">dist1</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <call pos:start="79:17" pos:end="83:101"><name pos:start="79:17" pos:end="79:45">quantize_and_encode_band_cost</name><argument_list pos:start="79:46" pos:end="83:101">(<argument pos:start="79:47" pos:end="79:47"><expr pos:start="79:47" pos:end="79:47"><name pos:start="79:47" pos:end="79:47">s</name></expr></argument>, <argument pos:start="79:50" pos:end="79:53"><expr pos:start="79:50" pos:end="79:53"><name pos:start="79:50" pos:end="79:53">NULL</name></expr></argument>, <argument pos:start="79:56" pos:end="79:79"><expr pos:start="79:56" pos:end="79:79"><operator pos:start="79:56" pos:end="79:56">&amp;</operator><name pos:start="79:57" pos:end="79:79"><name pos:start="79:57" pos:end="79:59">sce</name><operator pos:start="79:60" pos:end="79:61">-&gt;</operator><name pos:start="79:62" pos:end="79:67">coeffs</name><index pos:start="79:68" pos:end="79:79">[<expr pos:start="79:69" pos:end="79:78"><name pos:start="79:69" pos:end="79:78">start_coef</name></expr>]</index></name></expr></argument>, <argument pos:start="79:82" pos:end="79:85"><expr pos:start="79:82" pos:end="79:85"><name pos:start="79:82" pos:end="79:85">NULL</name></expr></argument>,

                                              <argument pos:start="81:47" pos:end="81:49"><expr pos:start="81:47" pos:end="81:49"><name pos:start="81:47" pos:end="81:49">O34</name></expr></argument>, <argument pos:start="81:52" pos:end="81:61"><expr pos:start="81:52" pos:end="81:61"><name pos:start="81:52" pos:end="81:61">num_coeffs</name></expr></argument>, <argument pos:start="81:64" pos:end="81:79"><expr pos:start="81:64" pos:end="81:79"><name pos:start="81:64" pos:end="81:79"><name pos:start="81:64" pos:end="81:66">sce</name><operator pos:start="81:67" pos:end="81:68">-&gt;</operator><name pos:start="81:69" pos:end="81:74">sf_idx</name><index pos:start="81:75" pos:end="81:79">[<expr pos:start="81:76" pos:end="81:78"><name pos:start="81:76" pos:end="81:78">sfb</name></expr>]</index></name></expr></argument>,

                                              <argument pos:start="83:47" pos:end="83:50"><expr pos:start="83:47" pos:end="83:50"><name pos:start="83:47" pos:end="83:50">cb_n</name></expr></argument>, <argument pos:start="83:53" pos:end="83:79"><expr pos:start="83:53" pos:end="83:79"><name pos:start="83:53" pos:end="83:61"><name pos:start="83:53" pos:end="83:53">s</name><operator pos:start="83:54" pos:end="83:55">-&gt;</operator><name pos:start="83:56" pos:end="83:61">lambda</name></name> <operator pos:start="83:63" pos:end="83:63">/</operator> <name pos:start="83:65" pos:end="83:79"><name pos:start="83:65" pos:end="83:68">band</name><operator pos:start="83:69" pos:end="83:70">-&gt;</operator><name pos:start="83:71" pos:end="83:79">threshold</name></name></expr></argument>, <argument pos:start="83:82" pos:end="83:89"><expr pos:start="83:82" pos:end="83:89"><name pos:start="83:82" pos:end="83:89">INFINITY</name></expr></argument>, <argument pos:start="83:92" pos:end="83:97"><expr pos:start="83:92" pos:end="83:97"><operator pos:start="83:92" pos:end="83:92">&amp;</operator><name pos:start="83:93" pos:end="83:97">cost1</name></expr></argument>, <argument pos:start="83:100" pos:end="83:100"><expr pos:start="83:100" pos:end="83:100"><literal type="number" pos:start="83:100" pos:end="83:100">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:29"><expr pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:19">cost_coeffs</name> <operator pos:start="85:21" pos:end="85:22">+=</operator> <name pos:start="85:24" pos:end="85:28">cost1</name></expr>;</expr_stmt>



        <comment type="block" pos:start="89:9" pos:end="89:81">/* Encoded coefficients - needed for #bits, band type and quant. error */</comment>

        <for pos:start="91:9" pos:end="93:82">for <control pos:start="91:13" pos:end="91:40">(<init pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:18"><name pos:start="91:14" pos:end="91:14">i</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:18">0</literal></expr>;</init> <condition pos:start="91:21" pos:end="91:35"><expr pos:start="91:21" pos:end="91:34"><name pos:start="91:21" pos:end="91:21">i</name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <name pos:start="91:25" pos:end="91:34">num_coeffs</name></expr>;</condition> <incr pos:start="91:37" pos:end="91:39"><expr pos:start="91:37" pos:end="91:39"><name pos:start="91:37" pos:end="91:37">i</name><operator pos:start="91:38" pos:end="91:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="93:13" pos:end="93:82"><block_content pos:start="93:13" pos:end="93:82">

            <expr_stmt pos:start="93:13" pos:end="93:82"><expr pos:start="93:13" pos:end="93:81"><name pos:start="93:13" pos:end="93:19"><name pos:start="93:13" pos:end="93:16">SENT</name><index pos:start="93:17" pos:end="93:19">[<expr pos:start="93:18" pos:end="93:18"><name pos:start="93:18" pos:end="93:18">i</name></expr>]</index></name> <operator pos:start="93:21" pos:end="93:21">=</operator> <name pos:start="93:23" pos:end="93:49"><name pos:start="93:23" pos:end="93:25">sce</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:33">coeffs</name><index pos:start="93:34" pos:end="93:49">[<expr pos:start="93:35" pos:end="93:48"><name pos:start="93:35" pos:end="93:44">start_coef</name> <operator pos:start="93:46" pos:end="93:46">+</operator> <name pos:start="93:48" pos:end="93:48">i</name></expr>]</index></name> <operator pos:start="93:51" pos:end="93:51">-</operator> <name pos:start="93:53" pos:end="93:81"><name pos:start="93:53" pos:end="93:55">sce</name><operator pos:start="93:56" pos:end="93:57">-&gt;</operator><name pos:start="93:58" pos:end="93:65">prcoeffs</name><index pos:start="93:66" pos:end="93:81">[<expr pos:start="93:67" pos:end="93:80"><name pos:start="93:67" pos:end="93:76">start_coef</name> <operator pos:start="93:78" pos:end="93:78">+</operator> <name pos:start="93:80" pos:end="93:80">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="95:9" pos:end="95:43"><expr pos:start="95:9" pos:end="95:42"><call pos:start="95:9" pos:end="95:42"><name pos:start="95:9" pos:end="95:19">abs_pow34_v</name><argument_list pos:start="95:20" pos:end="95:42">(<argument pos:start="95:21" pos:end="95:23"><expr pos:start="95:21" pos:end="95:23"><name pos:start="95:21" pos:end="95:23">S34</name></expr></argument>, <argument pos:start="95:26" pos:end="95:29"><expr pos:start="95:26" pos:end="95:29"><name pos:start="95:26" pos:end="95:29">SENT</name></expr></argument>, <argument pos:start="95:32" pos:end="95:41"><expr pos:start="95:32" pos:end="95:41"><name pos:start="95:32" pos:end="95:41">num_coeffs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="103:24"><if pos:start="97:9" pos:end="99:85">if <condition pos:start="97:12" pos:end="97:31">(<expr pos:start="97:13" pos:end="97:30"><name pos:start="97:13" pos:end="97:16">cb_n</name> <operator pos:start="97:18" pos:end="97:18">&lt;</operator> <name pos:start="97:20" pos:end="97:30">RESERVED_BT</name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:85"><block_content pos:start="99:13" pos:end="99:85">

            <expr_stmt pos:start="99:13" pos:end="99:85"><expr pos:start="99:13" pos:end="99:84"><name pos:start="99:13" pos:end="99:16">cb_p</name> <operator pos:start="99:18" pos:end="99:18">=</operator> <call pos:start="99:20" pos:end="99:84"><name pos:start="99:20" pos:end="99:32">find_min_book</name><argument_list pos:start="99:33" pos:end="99:84">(<argument pos:start="99:34" pos:end="99:65"><expr pos:start="99:34" pos:end="99:65"><call pos:start="99:34" pos:end="99:65"><name pos:start="99:34" pos:end="99:45">find_max_val</name><argument_list pos:start="99:46" pos:end="99:65">(<argument pos:start="99:47" pos:end="99:47"><expr pos:start="99:47" pos:end="99:47"><literal type="number" pos:start="99:47" pos:end="99:47">1</literal></expr></argument>, <argument pos:start="99:50" pos:end="99:59"><expr pos:start="99:50" pos:end="99:59"><name pos:start="99:50" pos:end="99:59">num_coeffs</name></expr></argument>, <argument pos:start="99:62" pos:end="99:64"><expr pos:start="99:62" pos:end="99:64"><name pos:start="99:62" pos:end="99:64">S34</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:68" pos:end="99:83"><expr pos:start="99:68" pos:end="99:83"><name pos:start="99:68" pos:end="99:83"><name pos:start="99:68" pos:end="99:70">sce</name><operator pos:start="99:71" pos:end="99:72">-&gt;</operator><name pos:start="99:73" pos:end="99:78">sf_idx</name><index pos:start="99:79" pos:end="99:83">[<expr pos:start="99:80" pos:end="99:82"><name pos:start="99:80" pos:end="99:82">sfb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="101:9" pos:end="103:24">else<block type="pseudo" pos:start="103:13" pos:end="103:24"><block_content pos:start="103:13" pos:end="103:24">

            <expr_stmt pos:start="103:13" pos:end="103:24"><expr pos:start="103:13" pos:end="103:23"><name pos:start="103:13" pos:end="103:16">cb_p</name> <operator pos:start="103:18" pos:end="103:18">=</operator> <name pos:start="103:20" pos:end="103:23">cb_n</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="109:49"><expr pos:start="105:9" pos:end="109:48"><call pos:start="105:9" pos:end="109:48"><name pos:start="105:9" pos:end="105:37">quantize_and_encode_band_cost</name><argument_list pos:start="105:38" pos:end="109:48">(<argument pos:start="105:39" pos:end="105:39"><expr pos:start="105:39" pos:end="105:39"><name pos:start="105:39" pos:end="105:39">s</name></expr></argument>, <argument pos:start="105:42" pos:end="105:45"><expr pos:start="105:42" pos:end="105:45"><name pos:start="105:42" pos:end="105:45">NULL</name></expr></argument>, <argument pos:start="105:48" pos:end="105:51"><expr pos:start="105:48" pos:end="105:51"><name pos:start="105:48" pos:end="105:51">SENT</name></expr></argument>, <argument pos:start="105:54" pos:end="105:57"><expr pos:start="105:54" pos:end="105:57"><name pos:start="105:54" pos:end="105:57">QERR</name></expr></argument>, <argument pos:start="105:60" pos:end="105:62"><expr pos:start="105:60" pos:end="105:62"><name pos:start="105:60" pos:end="105:62">S34</name></expr></argument>, <argument pos:start="105:65" pos:end="105:74"><expr pos:start="105:65" pos:end="105:74"><name pos:start="105:65" pos:end="105:74">num_coeffs</name></expr></argument>,

                                      <argument pos:start="107:39" pos:end="107:54"><expr pos:start="107:39" pos:end="107:54"><name pos:start="107:39" pos:end="107:54"><name pos:start="107:39" pos:end="107:41">sce</name><operator pos:start="107:42" pos:end="107:43">-&gt;</operator><name pos:start="107:44" pos:end="107:49">sf_idx</name><index pos:start="107:50" pos:end="107:54">[<expr pos:start="107:51" pos:end="107:53"><name pos:start="107:51" pos:end="107:53">sfb</name></expr>]</index></name></expr></argument>, <argument pos:start="107:57" pos:end="107:60"><expr pos:start="107:57" pos:end="107:60"><name pos:start="107:57" pos:end="107:60">cb_p</name></expr></argument>, <argument pos:start="107:63" pos:end="107:89"><expr pos:start="107:63" pos:end="107:89"><name pos:start="107:63" pos:end="107:71"><name pos:start="107:63" pos:end="107:63">s</name><operator pos:start="107:64" pos:end="107:65">-&gt;</operator><name pos:start="107:66" pos:end="107:71">lambda</name></name> <operator pos:start="107:73" pos:end="107:73">/</operator> <name pos:start="107:75" pos:end="107:89"><name pos:start="107:75" pos:end="107:78">band</name><operator pos:start="107:79" pos:end="107:80">-&gt;</operator><name pos:start="107:81" pos:end="107:89">threshold</name></name></expr></argument>, <argument pos:start="107:92" pos:end="107:99"><expr pos:start="107:92" pos:end="107:99"><name pos:start="107:92" pos:end="107:99">INFINITY</name></expr></argument>,

                                      <argument pos:start="109:39" pos:end="109:44"><expr pos:start="109:39" pos:end="109:44"><operator pos:start="109:39" pos:end="109:39">&amp;</operator><name pos:start="109:40" pos:end="109:44">cost2</name></expr></argument>, <argument pos:start="109:47" pos:end="109:47"><expr pos:start="109:47" pos:end="109:47"><literal type="number" pos:start="109:47" pos:end="109:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="113:9" pos:end="113:77">/* Reconstructed coefficients - needed for distortion measurements */</comment>

        <for pos:start="115:9" pos:end="117:112">for <control pos:start="115:13" pos:end="115:40">(<init pos:start="115:14" pos:end="115:19"><expr pos:start="115:14" pos:end="115:18"><name pos:start="115:14" pos:end="115:14">i</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <literal type="number" pos:start="115:18" pos:end="115:18">0</literal></expr>;</init> <condition pos:start="115:21" pos:end="115:35"><expr pos:start="115:21" pos:end="115:34"><name pos:start="115:21" pos:end="115:21">i</name> <operator pos:start="115:23" pos:end="115:23">&lt;</operator> <name pos:start="115:25" pos:end="115:34">num_coeffs</name></expr>;</condition> <incr pos:start="115:37" pos:end="115:39"><expr pos:start="115:37" pos:end="115:39"><name pos:start="115:37" pos:end="115:37">i</name><operator pos:start="115:38" pos:end="115:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="117:13" pos:end="117:112"><block_content pos:start="117:13" pos:end="117:112">

            <expr_stmt pos:start="117:13" pos:end="117:112"><expr pos:start="117:13" pos:end="117:111"><name pos:start="117:13" pos:end="117:41"><name pos:start="117:13" pos:end="117:15">sce</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:25">prcoeffs</name><index pos:start="117:26" pos:end="117:41">[<expr pos:start="117:27" pos:end="117:40"><name pos:start="117:27" pos:end="117:36">start_coef</name> <operator pos:start="117:38" pos:end="117:38">+</operator> <name pos:start="117:40" pos:end="117:40">i</name></expr>]</index></name> <operator pos:start="117:43" pos:end="117:44">+=</operator> <ternary pos:start="117:46" pos:end="117:111"><condition pos:start="117:46" pos:end="117:62"><expr pos:start="117:46" pos:end="117:60"><name pos:start="117:46" pos:end="117:52"><name pos:start="117:46" pos:end="117:49">QERR</name><index pos:start="117:50" pos:end="117:52">[<expr pos:start="117:51" pos:end="117:51"><name pos:start="117:51" pos:end="117:51">i</name></expr>]</index></name> <operator pos:start="117:54" pos:end="117:55">!=</operator> <literal type="number" pos:start="117:57" pos:end="117:60">0.0f</literal></expr> ?</condition><then pos:start="117:64" pos:end="117:104"> <expr pos:start="117:64" pos:end="117:104"><operator pos:start="117:64" pos:end="117:64">(</operator><name pos:start="117:65" pos:end="117:93"><name pos:start="117:65" pos:end="117:67">sce</name><operator pos:start="117:68" pos:end="117:69">-&gt;</operator><name pos:start="117:70" pos:end="117:77">prcoeffs</name><index pos:start="117:78" pos:end="117:93">[<expr pos:start="117:79" pos:end="117:92"><name pos:start="117:79" pos:end="117:88">start_coef</name> <operator pos:start="117:90" pos:end="117:90">+</operator> <name pos:start="117:92" pos:end="117:92">i</name></expr>]</index></name> <operator pos:start="117:95" pos:end="117:95">-</operator> <name pos:start="117:97" pos:end="117:103"><name pos:start="117:97" pos:end="117:100">QERR</name><index pos:start="117:101" pos:end="117:103">[<expr pos:start="117:102" pos:end="117:102"><name pos:start="117:102" pos:end="117:102">i</name></expr>]</index></name><operator pos:start="117:104" pos:end="117:104">)</operator></expr> </then><else pos:start="117:106" pos:end="117:111">: <expr pos:start="117:108" pos:end="117:111"><literal type="number" pos:start="117:108" pos:end="117:111">0.0f</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="119:9" pos:end="119:65"><expr pos:start="119:9" pos:end="119:64"><call pos:start="119:9" pos:end="119:64"><name pos:start="119:9" pos:end="119:19">abs_pow34_v</name><argument_list pos:start="119:20" pos:end="119:64">(<argument pos:start="119:21" pos:end="119:23"><expr pos:start="119:21" pos:end="119:23"><name pos:start="119:21" pos:end="119:23">P34</name></expr></argument>, <argument pos:start="119:26" pos:end="119:51"><expr pos:start="119:26" pos:end="119:51"><operator pos:start="119:26" pos:end="119:26">&amp;</operator><name pos:start="119:27" pos:end="119:51"><name pos:start="119:27" pos:end="119:29">sce</name><operator pos:start="119:30" pos:end="119:31">-&gt;</operator><name pos:start="119:32" pos:end="119:39">prcoeffs</name><index pos:start="119:40" pos:end="119:51">[<expr pos:start="119:41" pos:end="119:50"><name pos:start="119:41" pos:end="119:50">start_coef</name></expr>]</index></name></expr></argument>, <argument pos:start="119:54" pos:end="119:63"><expr pos:start="119:54" pos:end="119:63"><name pos:start="119:54" pos:end="119:63">num_coeffs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="127:24"><if pos:start="121:9" pos:end="123:85">if <condition pos:start="121:12" pos:end="121:31">(<expr pos:start="121:13" pos:end="121:30"><name pos:start="121:13" pos:end="121:16">cb_n</name> <operator pos:start="121:18" pos:end="121:18">&lt;</operator> <name pos:start="121:20" pos:end="121:30">RESERVED_BT</name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:85"><block_content pos:start="123:13" pos:end="123:85">

            <expr_stmt pos:start="123:13" pos:end="123:85"><expr pos:start="123:13" pos:end="123:84"><name pos:start="123:13" pos:end="123:16">cb_p</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <call pos:start="123:20" pos:end="123:84"><name pos:start="123:20" pos:end="123:32">find_min_book</name><argument_list pos:start="123:33" pos:end="123:84">(<argument pos:start="123:34" pos:end="123:65"><expr pos:start="123:34" pos:end="123:65"><call pos:start="123:34" pos:end="123:65"><name pos:start="123:34" pos:end="123:45">find_max_val</name><argument_list pos:start="123:46" pos:end="123:65">(<argument pos:start="123:47" pos:end="123:47"><expr pos:start="123:47" pos:end="123:47"><literal type="number" pos:start="123:47" pos:end="123:47">1</literal></expr></argument>, <argument pos:start="123:50" pos:end="123:59"><expr pos:start="123:50" pos:end="123:59"><name pos:start="123:50" pos:end="123:59">num_coeffs</name></expr></argument>, <argument pos:start="123:62" pos:end="123:64"><expr pos:start="123:62" pos:end="123:64"><name pos:start="123:62" pos:end="123:64">P34</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="123:68" pos:end="123:83"><expr pos:start="123:68" pos:end="123:83"><name pos:start="123:68" pos:end="123:83"><name pos:start="123:68" pos:end="123:70">sce</name><operator pos:start="123:71" pos:end="123:72">-&gt;</operator><name pos:start="123:73" pos:end="123:78">sf_idx</name><index pos:start="123:79" pos:end="123:83">[<expr pos:start="123:80" pos:end="123:82"><name pos:start="123:80" pos:end="123:82">sfb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="125:9" pos:end="127:24">else<block type="pseudo" pos:start="127:13" pos:end="127:24"><block_content pos:start="127:13" pos:end="127:24">

            <expr_stmt pos:start="127:13" pos:end="127:24"><expr pos:start="127:13" pos:end="127:23"><name pos:start="127:13" pos:end="127:16">cb_p</name> <operator pos:start="127:18" pos:end="127:18">=</operator> <name pos:start="127:20" pos:end="127:23">cb_n</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="133:100"><expr pos:start="129:9" pos:end="133:99"><name pos:start="129:9" pos:end="129:13">dist2</name> <operator pos:start="129:15" pos:end="129:15">=</operator> <call pos:start="129:17" pos:end="133:99"><name pos:start="129:17" pos:end="129:45">quantize_and_encode_band_cost</name><argument_list pos:start="129:46" pos:end="133:99">(<argument pos:start="129:47" pos:end="129:47"><expr pos:start="129:47" pos:end="129:47"><name pos:start="129:47" pos:end="129:47">s</name></expr></argument>, <argument pos:start="129:50" pos:end="129:53"><expr pos:start="129:50" pos:end="129:53"><name pos:start="129:50" pos:end="129:53">NULL</name></expr></argument>, <argument pos:start="129:56" pos:end="129:81"><expr pos:start="129:56" pos:end="129:81"><operator pos:start="129:56" pos:end="129:56">&amp;</operator><name pos:start="129:57" pos:end="129:81"><name pos:start="129:57" pos:end="129:59">sce</name><operator pos:start="129:60" pos:end="129:61">-&gt;</operator><name pos:start="129:62" pos:end="129:69">prcoeffs</name><index pos:start="129:70" pos:end="129:81">[<expr pos:start="129:71" pos:end="129:80"><name pos:start="129:71" pos:end="129:80">start_coef</name></expr>]</index></name></expr></argument>, <argument pos:start="129:84" pos:end="129:87"><expr pos:start="129:84" pos:end="129:87"><name pos:start="129:84" pos:end="129:87">NULL</name></expr></argument>,

                                              <argument pos:start="131:47" pos:end="131:49"><expr pos:start="131:47" pos:end="131:49"><name pos:start="131:47" pos:end="131:49">P34</name></expr></argument>, <argument pos:start="131:52" pos:end="131:61"><expr pos:start="131:52" pos:end="131:61"><name pos:start="131:52" pos:end="131:61">num_coeffs</name></expr></argument>, <argument pos:start="131:64" pos:end="131:79"><expr pos:start="131:64" pos:end="131:79"><name pos:start="131:64" pos:end="131:79"><name pos:start="131:64" pos:end="131:66">sce</name><operator pos:start="131:67" pos:end="131:68">-&gt;</operator><name pos:start="131:69" pos:end="131:74">sf_idx</name><index pos:start="131:75" pos:end="131:79">[<expr pos:start="131:76" pos:end="131:78"><name pos:start="131:76" pos:end="131:78">sfb</name></expr>]</index></name></expr></argument>,

                                              <argument pos:start="133:47" pos:end="133:50"><expr pos:start="133:47" pos:end="133:50"><name pos:start="133:47" pos:end="133:50">cb_p</name></expr></argument>, <argument pos:start="133:53" pos:end="133:79"><expr pos:start="133:53" pos:end="133:79"><name pos:start="133:53" pos:end="133:61"><name pos:start="133:53" pos:end="133:53">s</name><operator pos:start="133:54" pos:end="133:55">-&gt;</operator><name pos:start="133:56" pos:end="133:61">lambda</name></name> <operator pos:start="133:63" pos:end="133:63">/</operator> <name pos:start="133:65" pos:end="133:79"><name pos:start="133:65" pos:end="133:68">band</name><operator pos:start="133:69" pos:end="133:70">-&gt;</operator><name pos:start="133:71" pos:end="133:79">threshold</name></name></expr></argument>, <argument pos:start="133:82" pos:end="133:89"><expr pos:start="133:82" pos:end="133:89"><name pos:start="133:82" pos:end="133:89">INFINITY</name></expr></argument>, <argument pos:start="133:92" pos:end="133:95"><expr pos:start="133:92" pos:end="133:95"><name pos:start="133:92" pos:end="133:95">NULL</name></expr></argument>, <argument pos:start="133:98" pos:end="133:98"><expr pos:start="133:98" pos:end="133:98"><literal type="number" pos:start="133:98" pos:end="133:98">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="135:9" pos:end="137:65">for <control pos:start="135:13" pos:end="135:40">(<init pos:start="135:14" pos:end="135:19"><expr pos:start="135:14" pos:end="135:18"><name pos:start="135:14" pos:end="135:14">i</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <literal type="number" pos:start="135:18" pos:end="135:18">0</literal></expr>;</init> <condition pos:start="135:21" pos:end="135:35"><expr pos:start="135:21" pos:end="135:34"><name pos:start="135:21" pos:end="135:21">i</name> <operator pos:start="135:23" pos:end="135:23">&lt;</operator> <name pos:start="135:25" pos:end="135:34">num_coeffs</name></expr>;</condition> <incr pos:start="135:37" pos:end="135:39"><expr pos:start="135:37" pos:end="135:39"><name pos:start="135:37" pos:end="135:37">i</name><operator pos:start="135:38" pos:end="135:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="137:13" pos:end="137:65"><block_content pos:start="137:13" pos:end="137:65">

            <expr_stmt pos:start="137:13" pos:end="137:65"><expr pos:start="137:13" pos:end="137:64"><name pos:start="137:13" pos:end="137:25">dist_spec_err</name> <operator pos:start="137:27" pos:end="137:28">+=</operator> <operator pos:start="137:30" pos:end="137:30">(</operator><name pos:start="137:31" pos:end="137:36"><name pos:start="137:31" pos:end="137:33">O34</name><index pos:start="137:34" pos:end="137:36">[<expr pos:start="137:35" pos:end="137:35"><name pos:start="137:35" pos:end="137:35">i</name></expr>]</index></name> <operator pos:start="137:38" pos:end="137:38">-</operator> <name pos:start="137:40" pos:end="137:45"><name pos:start="137:40" pos:end="137:42">P34</name><index pos:start="137:43" pos:end="137:45">[<expr pos:start="137:44" pos:end="137:44"><name pos:start="137:44" pos:end="137:44">i</name></expr>]</index></name><operator pos:start="137:46" pos:end="137:46">)</operator><operator pos:start="137:47" pos:end="137:47">*</operator><operator pos:start="137:48" pos:end="137:48">(</operator><name pos:start="137:49" pos:end="137:54"><name pos:start="137:49" pos:end="137:51">O34</name><index pos:start="137:52" pos:end="137:54">[<expr pos:start="137:53" pos:end="137:53"><name pos:start="137:53" pos:end="137:53">i</name></expr>]</index></name> <operator pos:start="137:56" pos:end="137:56">-</operator> <name pos:start="137:58" pos:end="137:63"><name pos:start="137:58" pos:end="137:60">P34</name><index pos:start="137:61" pos:end="137:63">[<expr pos:start="137:62" pos:end="137:62"><name pos:start="137:62" pos:end="137:62">i</name></expr>]</index></name><operator pos:start="137:64" pos:end="137:64">)</operator></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="139:9" pos:end="139:53"><expr pos:start="139:9" pos:end="139:52"><name pos:start="139:9" pos:end="139:21">dist_spec_err</name> <operator pos:start="139:23" pos:end="139:24">*=</operator> <name pos:start="139:26" pos:end="139:34"><name pos:start="139:26" pos:end="139:26">s</name><operator pos:start="139:27" pos:end="139:28">-&gt;</operator><name pos:start="139:29" pos:end="139:34">lambda</name></name> <operator pos:start="139:36" pos:end="139:36">/</operator> <name pos:start="139:38" pos:end="139:52"><name pos:start="139:38" pos:end="139:41">band</name><operator pos:start="139:42" pos:end="139:43">-&gt;</operator><name pos:start="139:44" pos:end="139:52">threshold</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:31"><expr pos:start="141:9" pos:end="141:30"><name pos:start="141:9" pos:end="141:13">dist2</name> <operator pos:start="141:15" pos:end="141:16">+=</operator> <name pos:start="141:18" pos:end="141:30">dist_spec_err</name></expr>;</expr_stmt>



        <if_stmt pos:start="145:9" pos:end="163:9"><if pos:start="145:9" pos:end="157:9">if <condition pos:start="145:12" pos:end="145:43">(<expr pos:start="145:13" pos:end="145:42"><name pos:start="145:13" pos:end="145:17">dist2</name> <operator pos:start="145:19" pos:end="145:20">&lt;=</operator> <name pos:start="145:22" pos:end="145:26">dist1</name> <operator pos:start="145:28" pos:end="145:29">&amp;&amp;</operator> <name pos:start="145:31" pos:end="145:34">cb_p</name> <operator pos:start="145:36" pos:end="145:37">&lt;=</operator> <name pos:start="145:39" pos:end="145:42">cb_n</name></expr>)</condition> <block pos:start="145:45" pos:end="157:9">{<block_content pos:start="147:13" pos:end="155:20">

            <expr_stmt pos:start="147:13" pos:end="147:31"><expr pos:start="147:13" pos:end="147:30"><name pos:start="147:13" pos:end="147:21">cost_pred</name> <operator pos:start="147:23" pos:end="147:24">+=</operator> <name pos:start="147:26" pos:end="147:30">cost2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:46"><expr pos:start="149:13" pos:end="149:45"><name pos:start="149:13" pos:end="149:41"><name pos:start="149:13" pos:end="149:15">sce</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:20">ics</name><operator pos:start="149:21" pos:end="149:21">.</operator><name pos:start="149:22" pos:end="149:36">prediction_used</name><index pos:start="149:37" pos:end="149:41">[<expr pos:start="149:38" pos:end="149:40"><name pos:start="149:38" pos:end="149:40">sfb</name></expr>]</index></name> <operator pos:start="149:43" pos:end="149:43">=</operator> <literal type="number" pos:start="149:45" pos:end="149:45">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:39"><expr pos:start="151:13" pos:end="151:38"><name pos:start="151:13" pos:end="151:30"><name pos:start="151:13" pos:end="151:15">sce</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:25">band_alt</name><index pos:start="151:26" pos:end="151:30">[<expr pos:start="151:27" pos:end="151:29"><name pos:start="151:27" pos:end="151:29">sfb</name></expr>]</index></name>  <operator pos:start="151:33" pos:end="151:33">=</operator> <name pos:start="151:35" pos:end="151:38">cb_n</name></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:39"><expr pos:start="153:13" pos:end="153:38"><name pos:start="153:13" pos:end="153:31"><name pos:start="153:13" pos:end="153:15">sce</name><operator pos:start="153:16" pos:end="153:17">-&gt;</operator><name pos:start="153:18" pos:end="153:26">band_type</name><index pos:start="153:27" pos:end="153:31">[<expr pos:start="153:28" pos:end="153:30"><name pos:start="153:28" pos:end="153:30">sfb</name></expr>]</index></name> <operator pos:start="153:33" pos:end="153:33">=</operator> <name pos:start="153:35" pos:end="153:38">cb_p</name></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:20"><expr pos:start="155:13" pos:end="155:19"><name pos:start="155:13" pos:end="155:17">count</name><operator pos:start="155:18" pos:end="155:19">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="157:11" pos:end="163:9">else <block pos:start="157:16" pos:end="163:9">{<block_content pos:start="159:13" pos:end="161:38">

            <expr_stmt pos:start="159:13" pos:end="159:31"><expr pos:start="159:13" pos:end="159:30"><name pos:start="159:13" pos:end="159:21">cost_pred</name> <operator pos:start="159:23" pos:end="159:24">+=</operator> <name pos:start="159:26" pos:end="159:30">cost1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:38"><expr pos:start="161:13" pos:end="161:37"><name pos:start="161:13" pos:end="161:30"><name pos:start="161:13" pos:end="161:15">sce</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:25">band_alt</name><index pos:start="161:26" pos:end="161:30">[<expr pos:start="161:27" pos:end="161:29"><name pos:start="161:27" pos:end="161:29">sfb</name></expr>]</index></name> <operator pos:start="161:32" pos:end="161:32">=</operator> <name pos:start="161:34" pos:end="161:37">cb_p</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="169:5" pos:end="179:5"><if pos:start="169:5" pos:end="179:5">if <condition pos:start="169:8" pos:end="169:41">(<expr pos:start="169:9" pos:end="169:40"><name pos:start="169:9" pos:end="169:13">count</name> <operator pos:start="169:15" pos:end="169:16">&amp;&amp;</operator> <name pos:start="169:18" pos:end="169:28">cost_coeffs</name> <operator pos:start="169:30" pos:end="169:30">&lt;</operator> <name pos:start="169:32" pos:end="169:40">cost_pred</name></expr>)</condition> <block pos:start="169:43" pos:end="179:5">{<block_content pos:start="171:9" pos:end="177:79">

        <expr_stmt pos:start="171:9" pos:end="171:18"><expr pos:start="171:9" pos:end="171:17"><name pos:start="171:9" pos:end="171:13">count</name> <operator pos:start="171:15" pos:end="171:15">=</operator> <literal type="number" pos:start="171:17" pos:end="171:17">0</literal></expr>;</expr_stmt>

        <for pos:start="173:9" pos:end="175:35">for <control pos:start="173:13" pos:end="173:53">(<init pos:start="173:14" pos:end="173:34"><expr pos:start="173:14" pos:end="173:33"><name pos:start="173:14" pos:end="173:16">sfb</name> <operator pos:start="173:18" pos:end="173:18">=</operator> <name pos:start="173:20" pos:end="173:33">PRED_SFB_START</name></expr>;</init> <condition pos:start="173:36" pos:end="173:46"><expr pos:start="173:36" pos:end="173:45"><name pos:start="173:36" pos:end="173:38">sfb</name> <operator pos:start="173:40" pos:end="173:40">&lt;</operator> <name pos:start="173:42" pos:end="173:45">pmax</name></expr>;</condition> <incr pos:start="173:48" pos:end="173:52"><expr pos:start="173:48" pos:end="173:52"><name pos:start="173:48" pos:end="173:50">sfb</name><operator pos:start="173:51" pos:end="173:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="175:13" pos:end="175:35"><block_content pos:start="175:13" pos:end="175:35">

            <expr_stmt pos:start="175:13" pos:end="175:35"><expr pos:start="175:13" pos:end="175:34"><call pos:start="175:13" pos:end="175:34"><name pos:start="175:13" pos:end="175:24">RESTORE_PRED</name><argument_list pos:start="175:25" pos:end="175:34">(<argument pos:start="175:26" pos:end="175:28"><expr pos:start="175:26" pos:end="175:28"><name pos:start="175:26" pos:end="175:28">sce</name></expr></argument>, <argument pos:start="175:31" pos:end="175:33"><expr pos:start="175:31" pos:end="175:33"><name pos:start="175:31" pos:end="175:33">sfb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="177:9" pos:end="177:79"><expr pos:start="177:9" pos:end="177:78"><call pos:start="177:9" pos:end="177:78"><name pos:start="177:9" pos:end="177:14">memset</name><argument_list pos:start="177:15" pos:end="177:78">(<argument pos:start="177:16" pos:end="177:40"><expr pos:start="177:16" pos:end="177:40"><operator pos:start="177:16" pos:end="177:16">&amp;</operator><name pos:start="177:17" pos:end="177:40"><name pos:start="177:17" pos:end="177:19">sce</name><operator pos:start="177:20" pos:end="177:21">-&gt;</operator><name pos:start="177:22" pos:end="177:24">ics</name><operator pos:start="177:25" pos:end="177:25">.</operator><name pos:start="177:26" pos:end="177:40">prediction_used</name></name></expr></argument>, <argument pos:start="177:43" pos:end="177:43"><expr pos:start="177:43" pos:end="177:43"><literal type="number" pos:start="177:43" pos:end="177:43">0</literal></expr></argument>, <argument pos:start="177:46" pos:end="177:77"><expr pos:start="177:46" pos:end="177:77"><sizeof pos:start="177:46" pos:end="177:77">sizeof<argument_list pos:start="177:52" pos:end="177:77">(<argument pos:start="177:53" pos:end="177:76"><expr pos:start="177:53" pos:end="177:76"><name pos:start="177:53" pos:end="177:76"><name pos:start="177:53" pos:end="177:55">sce</name><operator pos:start="177:56" pos:end="177:57">-&gt;</operator><name pos:start="177:58" pos:end="177:60">ics</name><operator pos:start="177:61" pos:end="177:61">.</operator><name pos:start="177:62" pos:end="177:76">prediction_used</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:41"><expr pos:start="183:5" pos:end="183:40"><name pos:start="183:5" pos:end="183:30"><name pos:start="183:5" pos:end="183:7">sce</name><operator pos:start="183:8" pos:end="183:9">-&gt;</operator><name pos:start="183:10" pos:end="183:12">ics</name><operator pos:start="183:13" pos:end="183:13">.</operator><name pos:start="183:14" pos:end="183:30">predictor_present</name></name> <operator pos:start="183:32" pos:end="183:32">=</operator> <operator pos:start="183:34" pos:end="183:34">!</operator><operator pos:start="183:35" pos:end="183:35">!</operator><name pos:start="183:36" pos:end="183:40">count</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
