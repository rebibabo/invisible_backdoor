<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19242.c" pos:tabs="8"><function pos:start="1:1" pos:end="1479:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:31">ff_h264_decode_slice_header</name><parameter_list pos:start="1:32" pos:end="1:64">(<parameter pos:start="1:33" pos:end="1:46"><decl pos:start="1:33" pos:end="1:46"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:43">H264Context</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">h</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:59">H264Context</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">h0</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1479:1">{<block_content pos:start="5:5" pos:end="1477:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:34">first_mb_in_slice</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:23">pps_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:27">slice_type</name></decl>, <decl pos:start="11:30" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:30" pos:end="11:32">tmp</name></decl>, <decl pos:start="11:35" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:35" pos:end="11:35">i</name></decl>, <decl pos:start="11:38" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:38" pos:end="11:38">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:26">last_pic_structure</name></decl>, <decl pos:start="13:29" pos:end="13:46"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:29" pos:end="13:46">last_pic_droppable</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">must_reinit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:20">needs_reinit</name> <init pos:start="17:22" pos:end="17:24">= <expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:42"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:22">field_pic_flag</name></decl>, <decl pos:start="19:25" pos:end="19:41"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:25" pos:end="19:41">bottom_field_flag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:52"><decl pos:start="21:5" pos:end="21:51"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:19">first_slice</name> <init pos:start="21:21" pos:end="21:51">= <expr pos:start="21:23" pos:end="21:51"><name pos:start="21:23" pos:end="21:23">h</name> <operator pos:start="21:25" pos:end="21:26">==</operator> <name pos:start="21:28" pos:end="21:29">h0</name> <operator pos:start="21:31" pos:end="21:32">&amp;&amp;</operator> <operator pos:start="21:34" pos:end="21:34">!</operator><name pos:start="21:35" pos:end="21:51"><name pos:start="21:35" pos:end="21:36">h0</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:51">current_slice</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:48"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">frame_num</name></decl>, <decl pos:start="23:20" pos:end="23:36"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:20" pos:end="23:36">picture_structure</name></decl>, <decl pos:start="23:39" pos:end="23:47"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:39" pos:end="23:47">droppable</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:13"><decl pos:start="25:5" pos:end="25:12"><type pos:start="25:5" pos:end="25:9"><name pos:start="25:5" pos:end="25:7">PPS</name> <modifier pos:start="25:9" pos:end="25:9">*</modifier></type><name pos:start="25:10" pos:end="25:12">pps</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:55"><expr pos:start="29:5" pos:end="29:54"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:5">h</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:15">qpel_put</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:54"><name pos:start="29:19" pos:end="29:19">h</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:29">h264qpel</name><operator pos:start="29:30" pos:end="29:30">.</operator><name pos:start="29:31" pos:end="29:54">put_h264_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:55"><expr pos:start="31:5" pos:end="31:54"><name pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:5">h</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:15">qpel_avg</name></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:54"><name pos:start="31:19" pos:end="31:19">h</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:29">h264qpel</name><operator pos:start="31:30" pos:end="31:30">.</operator><name pos:start="31:31" pos:end="31:54">avg_h264_qpel_pixels_tab</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:51"><expr pos:start="35:5" pos:end="35:50"><name pos:start="35:5" pos:end="35:21">first_mb_in_slice</name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:50"><name pos:start="35:25" pos:end="35:42">get_ue_golomb_long</name><argument_list pos:start="35:43" pos:end="35:50">(<argument pos:start="35:44" pos:end="35:49"><expr pos:start="35:44" pos:end="35:49"><operator pos:start="35:44" pos:end="35:44">&amp;</operator><name pos:start="35:45" pos:end="35:49"><name pos:start="35:45" pos:end="35:45">h</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="65:5"><if pos:start="39:5" pos:end="65:5">if <condition pos:start="39:8" pos:end="39:31">(<expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:25">first_mb_in_slice</name> <operator pos:start="39:27" pos:end="39:28">==</operator> <literal type="number" pos:start="39:30" pos:end="39:30">0</literal></expr>)</condition> <block pos:start="39:33" pos:end="65:5">{<block_content pos:start="41:9" pos:end="63:9"> <comment type="line" pos:start="39:35" pos:end="39:74">// FIXME better field boundary detection</comment>

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:68">(<expr pos:start="41:13" pos:end="41:67"><name pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:14">h0</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:29">current_slice</name></name> <operator pos:start="41:31" pos:end="41:32">&amp;&amp;</operator> <name pos:start="41:34" pos:end="41:47"><name pos:start="41:34" pos:end="41:34">h</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:47">cur_pic_ptr</name></name> <operator pos:start="41:49" pos:end="41:50">&amp;&amp;</operator> <call pos:start="41:52" pos:end="41:67"><name pos:start="41:52" pos:end="41:64">FIELD_PICTURE</name><argument_list pos:start="41:65" pos:end="41:67">(<argument pos:start="41:66" pos:end="41:66"><expr pos:start="41:66" pos:end="41:66"><name pos:start="41:66" pos:end="41:66">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:70" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:36">

            <expr_stmt pos:start="43:13" pos:end="43:36"><expr pos:start="43:13" pos:end="43:35"><call pos:start="43:13" pos:end="43:35"><name pos:start="43:13" pos:end="43:29">ff_h264_field_end</name><argument_list pos:start="43:30" pos:end="43:35">(<argument pos:start="43:31" pos:end="43:31"><expr pos:start="43:31" pos:end="43:31"><name pos:start="43:31" pos:end="43:31">h</name></expr></argument>, <argument pos:start="43:34" pos:end="43:34"><expr pos:start="43:34" pos:end="43:34"><literal type="number" pos:start="43:34" pos:end="43:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:30"><expr pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:10">h0</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:25">current_slice</name></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <literal type="number" pos:start="49:29" pos:end="49:29">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="63:9"><if pos:start="51:9" pos:end="63:9">if <condition pos:start="51:12" pos:end="51:29">(<expr pos:start="51:13" pos:end="51:28"><operator pos:start="51:13" pos:end="51:13">!</operator><name pos:start="51:14" pos:end="51:28"><name pos:start="51:14" pos:end="51:15">h0</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:28">first_field</name></name></expr>)</condition> <block pos:start="51:31" pos:end="63:9">{<block_content pos:start="53:13" pos:end="61:34">

            <if_stmt pos:start="53:13" pos:end="59:13"><if pos:start="53:13" pos:end="59:13">if <condition pos:start="53:16" pos:end="53:48">(<expr pos:start="53:17" pos:end="53:47"><name pos:start="53:17" pos:end="53:30"><name pos:start="53:17" pos:end="53:17">h</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:30">cur_pic_ptr</name></name> <operator pos:start="53:32" pos:end="53:33">&amp;&amp;</operator> <operator pos:start="53:35" pos:end="53:35">!</operator><name pos:start="53:36" pos:end="53:47"><name pos:start="53:36" pos:end="53:36">h</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:47">droppable</name></name></expr>)</condition> <block pos:start="53:50" pos:end="59:13">{<block_content pos:start="55:17" pos:end="57:85">

                <expr_stmt pos:start="55:17" pos:end="57:85"><expr pos:start="55:17" pos:end="57:84"><call pos:start="55:17" pos:end="57:84"><name pos:start="55:17" pos:end="55:41">ff_thread_report_progress</name><argument_list pos:start="55:42" pos:end="57:84">(<argument pos:start="55:43" pos:end="55:61"><expr pos:start="55:43" pos:end="55:61"><operator pos:start="55:43" pos:end="55:43">&amp;</operator><name pos:start="55:44" pos:end="55:61"><name pos:start="55:44" pos:end="55:44">h</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:57">cur_pic_ptr</name><operator pos:start="55:58" pos:end="55:59">-&gt;</operator><name pos:start="55:60" pos:end="55:61">tf</name></name></expr></argument>, <argument pos:start="55:64" pos:end="55:70"><expr pos:start="55:64" pos:end="55:70"><name pos:start="55:64" pos:end="55:70">INT_MAX</name></expr></argument>,

                                          <argument pos:start="57:43" pos:end="57:83"><expr pos:start="57:43" pos:end="57:83"><name pos:start="57:43" pos:end="57:62"><name pos:start="57:43" pos:end="57:43">h</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:62">picture_structure</name></name> <operator pos:start="57:64" pos:end="57:65">==</operator> <name pos:start="57:67" pos:end="57:83">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:34"><expr pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:13">h</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:26">cur_pic_ptr</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:33">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:42"><expr pos:start="69:5" pos:end="69:41"><name pos:start="69:5" pos:end="69:14">slice_type</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <call pos:start="69:18" pos:end="69:41"><name pos:start="69:18" pos:end="69:33">get_ue_golomb_31</name><argument_list pos:start="69:34" pos:end="69:41">(<argument pos:start="69:35" pos:end="69:40"><expr pos:start="69:35" pos:end="69:40"><operator pos:start="69:35" pos:end="69:35">&amp;</operator><name pos:start="69:36" pos:end="69:40"><name pos:start="69:36" pos:end="69:36">h</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:40">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="81:5"><if pos:start="71:5" pos:end="81:5">if <condition pos:start="71:8" pos:end="71:23">(<expr pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:18">slice_type</name> <operator pos:start="71:20" pos:end="71:20">&gt;</operator> <literal type="number" pos:start="71:22" pos:end="71:22">9</literal></expr>)</condition> <block pos:start="71:25" pos:end="81:5">{<block_content pos:start="73:9" pos:end="79:35">

        <expr_stmt pos:start="73:9" pos:end="77:45"><expr pos:start="73:9" pos:end="77:44"><call pos:start="73:9" pos:end="77:44"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="77:44">(<argument pos:start="73:16" pos:end="73:23"><expr pos:start="73:16" pos:end="73:23"><name pos:start="73:16" pos:end="73:23"><name pos:start="73:16" pos:end="73:16">h</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:23">avctx</name></name></expr></argument>, <argument pos:start="73:26" pos:end="73:37"><expr pos:start="73:26" pos:end="73:37"><name pos:start="73:26" pos:end="73:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="75:16" pos:end="75:51"><expr pos:start="75:16" pos:end="75:51"><literal type="string" pos:start="75:16" pos:end="75:51">"slice type %d too large at %d %d\n"</literal></expr></argument>,

               <argument pos:start="77:16" pos:end="77:25"><expr pos:start="77:16" pos:end="77:25"><name pos:start="77:16" pos:end="77:25">slice_type</name></expr></argument>, <argument pos:start="77:28" pos:end="77:34"><expr pos:start="77:28" pos:end="77:34"><name pos:start="77:28" pos:end="77:34"><name pos:start="77:28" pos:end="77:28">h</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:34">mb_x</name></name></expr></argument>, <argument pos:start="77:37" pos:end="77:43"><expr pos:start="77:37" pos:end="77:43"><name pos:start="77:37" pos:end="77:43"><name pos:start="77:37" pos:end="77:37">h</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:43">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:35">return <expr pos:start="79:16" pos:end="79:34"><name pos:start="79:16" pos:end="79:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="83:5" pos:end="91:32"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:23">(<expr pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:18">slice_type</name> <operator pos:start="83:20" pos:end="83:20">&gt;</operator> <literal type="number" pos:start="83:22" pos:end="83:22">4</literal></expr>)</condition> <block pos:start="83:25" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:32">

        <expr_stmt pos:start="85:9" pos:end="85:24"><expr pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:18">slice_type</name> <operator pos:start="85:20" pos:end="85:21">-=</operator> <literal type="number" pos:start="85:23" pos:end="85:23">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:32"><expr pos:start="87:9" pos:end="87:31"><name pos:start="87:9" pos:end="87:27"><name pos:start="87:9" pos:end="87:9">h</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:27">slice_type_fixed</name></name> <operator pos:start="87:29" pos:end="87:29">=</operator> <literal type="number" pos:start="87:31" pos:end="87:31">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="91:32">else<block type="pseudo" pos:start="91:9" pos:end="91:32"><block_content pos:start="91:9" pos:end="91:32">

        <expr_stmt pos:start="91:9" pos:end="91:32"><expr pos:start="91:9" pos:end="91:31"><name pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:9">h</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:27">slice_type_fixed</name></name> <operator pos:start="91:29" pos:end="91:29">=</operator> <literal type="number" pos:start="91:31" pos:end="91:31">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:49"><expr pos:start="95:5" pos:end="95:48"><name pos:start="95:5" pos:end="95:14">slice_type</name> <operator pos:start="95:16" pos:end="95:16">=</operator> <name pos:start="95:18" pos:end="95:48"><name pos:start="95:18" pos:end="95:36">golomb_to_pict_type</name><index pos:start="95:37" pos:end="95:48">[<expr pos:start="95:38" pos:end="95:47"><name pos:start="95:38" pos:end="95:47">slice_type</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:35"><expr pos:start="97:5" pos:end="97:34"><name pos:start="97:5" pos:end="97:17"><name pos:start="97:5" pos:end="97:5">h</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:17">slice_type</name></name>     <operator pos:start="97:23" pos:end="97:23">=</operator> <name pos:start="97:25" pos:end="97:34">slice_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:39"><expr pos:start="99:5" pos:end="99:38"><name pos:start="99:5" pos:end="99:21"><name pos:start="99:5" pos:end="99:5">h</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:21">slice_type_nos</name></name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:34">slice_type</name> <operator pos:start="99:36" pos:end="99:36">&amp;</operator> <literal type="number" pos:start="99:38" pos:end="99:38">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="103:5" pos:end="111:5"><if pos:start="103:5" pos:end="111:5">if <condition pos:start="103:8" pos:end="105:47">(<expr pos:start="103:9" pos:end="105:46"><name pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:9">h</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:24">nal_unit_type</name></name>  <operator pos:start="103:27" pos:end="103:28">==</operator> <name pos:start="103:30" pos:end="103:42">NAL_IDR_SLICE</name> <operator pos:start="103:44" pos:end="103:45">&amp;&amp;</operator>

        <name pos:start="105:9" pos:end="105:25"><name pos:start="105:9" pos:end="105:9">h</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:25">slice_type_nos</name></name> <operator pos:start="105:27" pos:end="105:28">!=</operator> <name pos:start="105:30" pos:end="105:46">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="105:49" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:35">

        <expr_stmt pos:start="107:9" pos:end="107:82"><expr pos:start="107:9" pos:end="107:81"><call pos:start="107:9" pos:end="107:81"><name pos:start="107:9" pos:end="107:14">av_log</name><argument_list pos:start="107:15" pos:end="107:81">(<argument pos:start="107:16" pos:end="107:23"><expr pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:16">h</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:23">avctx</name></name></expr></argument>, <argument pos:start="107:26" pos:end="107:37"><expr pos:start="107:26" pos:end="107:37"><name pos:start="107:26" pos:end="107:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:40" pos:end="107:80"><expr pos:start="107:40" pos:end="107:80"><literal type="string" pos:start="107:40" pos:end="107:80">"A non-intra slice in an IDR NAL unit.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="109:9" pos:end="109:35">return <expr pos:start="109:16" pos:end="109:34"><name pos:start="109:16" pos:end="109:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="115:5" pos:end="129:6"><if pos:start="115:5" pos:end="129:6">if <condition pos:start="115:8" pos:end="125:47">(

        <expr pos:start="117:9" pos:end="125:46"><operator pos:start="117:9" pos:end="117:9">(</operator><name pos:start="117:10" pos:end="117:29"><name pos:start="117:10" pos:end="117:10">h</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:17">avctx</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:29">skip_frame</name></name> <operator pos:start="117:31" pos:end="117:32">&gt;=</operator> <name pos:start="117:34" pos:end="117:49">AVDISCARD_NONREF</name> <operator pos:start="117:51" pos:end="117:52">&amp;&amp;</operator> <operator pos:start="117:54" pos:end="117:54">!</operator><name pos:start="117:55" pos:end="117:68"><name pos:start="117:55" pos:end="117:55">h</name><operator pos:start="117:56" pos:end="117:57">-&gt;</operator><name pos:start="117:58" pos:end="117:68">nal_ref_idc</name></name><operator pos:start="117:69" pos:end="117:69">)</operator> <operator pos:start="117:71" pos:end="117:72">||</operator>

        <operator pos:start="119:9" pos:end="119:9">(</operator><name pos:start="119:10" pos:end="119:29"><name pos:start="119:10" pos:end="119:10">h</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:17">avctx</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:29">skip_frame</name></name> <operator pos:start="119:31" pos:end="119:32">&gt;=</operator> <name pos:start="119:34" pos:end="119:48">AVDISCARD_BIDIR</name>  <operator pos:start="119:51" pos:end="119:52">&amp;&amp;</operator> <name pos:start="119:54" pos:end="119:70"><name pos:start="119:54" pos:end="119:54">h</name><operator pos:start="119:55" pos:end="119:56">-&gt;</operator><name pos:start="119:57" pos:end="119:70">slice_type_nos</name></name> <operator pos:start="119:72" pos:end="119:73">==</operator> <name pos:start="119:75" pos:end="119:91">AV_PICTURE_TYPE_B</name><operator pos:start="119:92" pos:end="119:92">)</operator> <operator pos:start="119:94" pos:end="119:95">||</operator>

        <operator pos:start="121:9" pos:end="121:9">(</operator><name pos:start="121:10" pos:end="121:29"><name pos:start="121:10" pos:end="121:10">h</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:17">avctx</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:29">skip_frame</name></name> <operator pos:start="121:31" pos:end="121:32">&gt;=</operator> <name pos:start="121:34" pos:end="121:51">AVDISCARD_NONINTRA</name> <operator pos:start="121:53" pos:end="121:54">&amp;&amp;</operator> <name pos:start="121:56" pos:end="121:72"><name pos:start="121:56" pos:end="121:56">h</name><operator pos:start="121:57" pos:end="121:58">-&gt;</operator><name pos:start="121:59" pos:end="121:72">slice_type_nos</name></name> <operator pos:start="121:74" pos:end="121:75">!=</operator> <name pos:start="121:77" pos:end="121:93">AV_PICTURE_TYPE_I</name><operator pos:start="121:94" pos:end="121:94">)</operator> <operator pos:start="121:96" pos:end="121:97">||</operator>

        <operator pos:start="123:9" pos:end="123:9">(</operator><name pos:start="123:10" pos:end="123:29"><name pos:start="123:10" pos:end="123:10">h</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:17">avctx</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:29">skip_frame</name></name> <operator pos:start="123:31" pos:end="123:32">&gt;=</operator> <name pos:start="123:34" pos:end="123:49">AVDISCARD_NONKEY</name> <operator pos:start="123:51" pos:end="123:52">&amp;&amp;</operator> <name pos:start="123:54" pos:end="123:69"><name pos:start="123:54" pos:end="123:54">h</name><operator pos:start="123:55" pos:end="123:56">-&gt;</operator><name pos:start="123:57" pos:end="123:69">nal_unit_type</name></name> <operator pos:start="123:71" pos:end="123:72">!=</operator> <name pos:start="123:74" pos:end="123:86">NAL_IDR_SLICE</name><operator pos:start="123:87" pos:end="123:87">)</operator> <operator pos:start="123:89" pos:end="123:90">||</operator>

         <name pos:start="125:10" pos:end="125:29"><name pos:start="125:10" pos:end="125:10">h</name><operator pos:start="125:11" pos:end="125:12">-&gt;</operator><name pos:start="125:13" pos:end="125:17">avctx</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:29">skip_frame</name></name> <operator pos:start="125:31" pos:end="125:32">&gt;=</operator> <name pos:start="125:34" pos:end="125:46">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="125:49" pos:end="129:6">{<block_content pos:start="127:10" pos:end="127:29">

         <return pos:start="127:10" pos:end="127:29">return <expr pos:start="127:17" pos:end="127:28"><name pos:start="127:17" pos:end="127:28">SLICE_SKIPED</name></expr>;</return>

     </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="133:5" pos:end="133:59">// to make a few old functions happy, it's wrong though</comment>

    <expr_stmt pos:start="135:5" pos:end="135:33"><expr pos:start="135:5" pos:end="135:32"><name pos:start="135:5" pos:end="135:16"><name pos:start="135:5" pos:end="135:5">h</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:16">pict_type</name></name> <operator pos:start="135:18" pos:end="135:18">=</operator> <name pos:start="135:20" pos:end="135:32"><name pos:start="135:20" pos:end="135:20">h</name><operator pos:start="135:21" pos:end="135:22">-&gt;</operator><name pos:start="135:23" pos:end="135:32">slice_type</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:35"><expr pos:start="139:5" pos:end="139:34"><name pos:start="139:5" pos:end="139:10">pps_id</name> <operator pos:start="139:12" pos:end="139:12">=</operator> <call pos:start="139:14" pos:end="139:34"><name pos:start="139:14" pos:end="139:26">get_ue_golomb</name><argument_list pos:start="139:27" pos:end="139:34">(<argument pos:start="139:28" pos:end="139:33"><expr pos:start="139:28" pos:end="139:33"><operator pos:start="139:28" pos:end="139:28">&amp;</operator><name pos:start="139:29" pos:end="139:33"><name pos:start="139:29" pos:end="139:29">h</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="147:5"><if pos:start="141:5" pos:end="147:5">if <condition pos:start="141:8" pos:end="141:32">(<expr pos:start="141:9" pos:end="141:31"><name pos:start="141:9" pos:end="141:14">pps_id</name> <operator pos:start="141:16" pos:end="141:17">&gt;=</operator> <name pos:start="141:19" pos:end="141:31">MAX_PPS_COUNT</name></expr>)</condition> <block pos:start="141:34" pos:end="147:5">{<block_content pos:start="143:9" pos:end="145:35">

        <expr_stmt pos:start="143:9" pos:end="143:75"><expr pos:start="143:9" pos:end="143:74"><call pos:start="143:9" pos:end="143:74"><name pos:start="143:9" pos:end="143:14">av_log</name><argument_list pos:start="143:15" pos:end="143:74">(<argument pos:start="143:16" pos:end="143:23"><expr pos:start="143:16" pos:end="143:23"><name pos:start="143:16" pos:end="143:23"><name pos:start="143:16" pos:end="143:16">h</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:23">avctx</name></name></expr></argument>, <argument pos:start="143:26" pos:end="143:37"><expr pos:start="143:26" pos:end="143:37"><name pos:start="143:26" pos:end="143:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="143:40" pos:end="143:65"><expr pos:start="143:40" pos:end="143:65"><literal type="string" pos:start="143:40" pos:end="143:65">"pps_id %u out of range\n"</literal></expr></argument>, <argument pos:start="143:68" pos:end="143:73"><expr pos:start="143:68" pos:end="143:73"><name pos:start="143:68" pos:end="143:73">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="145:9" pos:end="145:35">return <expr pos:start="145:16" pos:end="145:34"><name pos:start="145:16" pos:end="145:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="149:5" pos:end="159:5"><if pos:start="149:5" pos:end="159:5">if <condition pos:start="149:8" pos:end="149:33">(<expr pos:start="149:9" pos:end="149:32"><operator pos:start="149:9" pos:end="149:9">!</operator><name pos:start="149:10" pos:end="149:32"><name pos:start="149:10" pos:end="149:11">h0</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:24">pps_buffers</name><index pos:start="149:25" pos:end="149:32">[<expr pos:start="149:26" pos:end="149:31"><name pos:start="149:26" pos:end="149:31">pps_id</name></expr>]</index></name></expr>)</condition> <block pos:start="149:35" pos:end="159:5">{<block_content pos:start="151:9" pos:end="157:35">

        <expr_stmt pos:start="151:9" pos:end="155:23"><expr pos:start="151:9" pos:end="155:22"><call pos:start="151:9" pos:end="155:22"><name pos:start="151:9" pos:end="151:14">av_log</name><argument_list pos:start="151:15" pos:end="155:22">(<argument pos:start="151:16" pos:end="151:23"><expr pos:start="151:16" pos:end="151:23"><name pos:start="151:16" pos:end="151:23"><name pos:start="151:16" pos:end="151:16">h</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:23">avctx</name></name></expr></argument>, <argument pos:start="151:26" pos:end="151:37"><expr pos:start="151:26" pos:end="151:37"><name pos:start="151:26" pos:end="151:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="153:16" pos:end="153:49"><expr pos:start="153:16" pos:end="153:49"><literal type="string" pos:start="153:16" pos:end="153:49">"non-existing PPS %u referenced\n"</literal></expr></argument>,

               <argument pos:start="155:16" pos:end="155:21"><expr pos:start="155:16" pos:end="155:21"><name pos:start="155:16" pos:end="155:21">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="157:9" pos:end="157:35">return <expr pos:start="157:16" pos:end="157:34"><name pos:start="157:16" pos:end="157:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="161:5" pos:end="171:5"><if pos:start="161:5" pos:end="171:5">if <condition pos:start="161:8" pos:end="161:54">(<expr pos:start="161:9" pos:end="161:53"><name pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:10">h0</name><operator pos:start="161:11" pos:end="161:12">-&gt;</operator><name pos:start="161:13" pos:end="161:21">au_pps_id</name></name> <operator pos:start="161:23" pos:end="161:24">&gt;=</operator> <literal type="number" pos:start="161:26" pos:end="161:26">0</literal> <operator pos:start="161:28" pos:end="161:29">&amp;&amp;</operator> <name pos:start="161:31" pos:end="161:36">pps_id</name> <operator pos:start="161:38" pos:end="161:39">!=</operator> <name pos:start="161:41" pos:end="161:53"><name pos:start="161:41" pos:end="161:42">h0</name><operator pos:start="161:43" pos:end="161:44">-&gt;</operator><name pos:start="161:45" pos:end="161:53">au_pps_id</name></name></expr>)</condition> <block pos:start="161:56" pos:end="171:5">{<block_content pos:start="163:9" pos:end="169:35">

        <expr_stmt pos:start="163:9" pos:end="167:38"><expr pos:start="163:9" pos:end="167:37"><call pos:start="163:9" pos:end="167:37"><name pos:start="163:9" pos:end="163:14">av_log</name><argument_list pos:start="163:15" pos:end="167:37">(<argument pos:start="163:16" pos:end="163:23"><expr pos:start="163:16" pos:end="163:23"><name pos:start="163:16" pos:end="163:23"><name pos:start="163:16" pos:end="163:16">h</name><operator pos:start="163:17" pos:end="163:18">-&gt;</operator><name pos:start="163:19" pos:end="163:23">avctx</name></name></expr></argument>, <argument pos:start="163:26" pos:end="163:37"><expr pos:start="163:26" pos:end="163:37"><name pos:start="163:26" pos:end="163:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="165:16" pos:end="165:53"><expr pos:start="165:16" pos:end="165:53"><literal type="string" pos:start="165:16" pos:end="165:53">"PPS change from %d to %d forbidden\n"</literal></expr></argument>,

               <argument pos:start="167:16" pos:end="167:28"><expr pos:start="167:16" pos:end="167:28"><name pos:start="167:16" pos:end="167:28"><name pos:start="167:16" pos:end="167:17">h0</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:28">au_pps_id</name></name></expr></argument>, <argument pos:start="167:31" pos:end="167:36"><expr pos:start="167:31" pos:end="167:36"><name pos:start="167:31" pos:end="167:36">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="169:9" pos:end="169:35">return <expr pos:start="169:16" pos:end="169:34"><name pos:start="169:16" pos:end="169:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:34"><expr pos:start="175:5" pos:end="175:33"><name pos:start="175:5" pos:end="175:7">pps</name> <operator pos:start="175:9" pos:end="175:9">=</operator> <name pos:start="175:11" pos:end="175:33"><name pos:start="175:11" pos:end="175:12">h0</name><operator pos:start="175:13" pos:end="175:14">-&gt;</operator><name pos:start="175:15" pos:end="175:25">pps_buffers</name><index pos:start="175:26" pos:end="175:33">[<expr pos:start="175:27" pos:end="175:32"><name pos:start="175:27" pos:end="175:32">pps_id</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="179:5" pos:end="189:5"><if pos:start="179:5" pos:end="189:5">if <condition pos:start="179:8" pos:end="179:38">(<expr pos:start="179:9" pos:end="179:37"><operator pos:start="179:9" pos:end="179:9">!</operator><name pos:start="179:10" pos:end="179:37"><name pos:start="179:10" pos:end="179:11">h0</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:24">sps_buffers</name><index pos:start="179:25" pos:end="179:37">[<expr pos:start="179:26" pos:end="179:36"><name pos:start="179:26" pos:end="179:36"><name pos:start="179:26" pos:end="179:28">pps</name><operator pos:start="179:29" pos:end="179:30">-&gt;</operator><name pos:start="179:31" pos:end="179:36">sps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="179:40" pos:end="189:5">{<block_content pos:start="181:9" pos:end="187:35">

        <expr_stmt pos:start="181:9" pos:end="185:30"><expr pos:start="181:9" pos:end="185:29"><call pos:start="181:9" pos:end="185:29"><name pos:start="181:9" pos:end="181:14">av_log</name><argument_list pos:start="181:15" pos:end="185:29">(<argument pos:start="181:16" pos:end="181:23"><expr pos:start="181:16" pos:end="181:23"><name pos:start="181:16" pos:end="181:23"><name pos:start="181:16" pos:end="181:16">h</name><operator pos:start="181:17" pos:end="181:18">-&gt;</operator><name pos:start="181:19" pos:end="181:23">avctx</name></name></expr></argument>, <argument pos:start="181:26" pos:end="181:37"><expr pos:start="181:26" pos:end="181:37"><name pos:start="181:26" pos:end="181:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="183:16" pos:end="183:49"><expr pos:start="183:16" pos:end="183:49"><literal type="string" pos:start="183:16" pos:end="183:49">"non-existing SPS %u referenced\n"</literal></expr></argument>,

               <argument pos:start="185:16" pos:end="185:28"><expr pos:start="185:16" pos:end="185:28"><name pos:start="185:16" pos:end="185:28"><name pos:start="185:16" pos:end="185:16">h</name><operator pos:start="185:17" pos:end="185:18">-&gt;</operator><name pos:start="185:19" pos:end="185:21">pps</name><operator pos:start="185:22" pos:end="185:22">.</operator><name pos:start="185:23" pos:end="185:28">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="187:9" pos:end="187:35">return <expr pos:start="187:16" pos:end="187:34"><name pos:start="187:16" pos:end="187:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="191:5" pos:end="193:42"><if pos:start="191:5" pos:end="193:42">if <condition pos:start="191:8" pos:end="191:20">(<expr pos:start="191:9" pos:end="191:19"><name pos:start="191:9" pos:end="191:19">first_slice</name></expr>)</condition><block type="pseudo" pos:start="193:9" pos:end="193:42"><block_content pos:start="193:9" pos:end="193:42">

        <expr_stmt pos:start="193:9" pos:end="193:42"><expr pos:start="193:9" pos:end="193:41"><name pos:start="193:9" pos:end="193:14"><name pos:start="193:9" pos:end="193:9">h</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:14">pps</name></name> <operator pos:start="193:16" pos:end="193:16">=</operator> <operator pos:start="193:18" pos:end="193:18">*</operator><name pos:start="193:19" pos:end="193:41"><name pos:start="193:19" pos:end="193:20">h0</name><operator pos:start="193:21" pos:end="193:22">-&gt;</operator><name pos:start="193:23" pos:end="193:33">pps_buffers</name><index pos:start="193:34" pos:end="193:41">[<expr pos:start="193:35" pos:end="193:40"><name pos:start="193:35" pos:end="193:40">pps_id</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="197:5" pos:end="251:5"><if pos:start="197:5" pos:end="251:5">if <condition pos:start="197:8" pos:end="201:42">(<expr pos:start="197:9" pos:end="201:41"><name pos:start="197:9" pos:end="197:19"><name pos:start="197:9" pos:end="197:11">pps</name><operator pos:start="197:12" pos:end="197:13">-&gt;</operator><name pos:start="197:14" pos:end="197:19">sps_id</name></name> <operator pos:start="197:21" pos:end="197:22">!=</operator> <name pos:start="197:24" pos:end="197:36"><name pos:start="197:24" pos:end="197:24">h</name><operator pos:start="197:25" pos:end="197:26">-&gt;</operator><name pos:start="197:27" pos:end="197:29">sps</name><operator pos:start="197:30" pos:end="197:30">.</operator><name pos:start="197:31" pos:end="197:36">sps_id</name></name> <operator pos:start="197:38" pos:end="197:39">||</operator>

        <name pos:start="199:9" pos:end="199:19"><name pos:start="199:9" pos:end="199:11">pps</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:19">sps_id</name></name> <operator pos:start="199:21" pos:end="199:22">!=</operator> <name pos:start="199:24" pos:end="199:40"><name pos:start="199:24" pos:end="199:24">h</name><operator pos:start="199:25" pos:end="199:26">-&gt;</operator><name pos:start="199:27" pos:end="199:40">current_sps_id</name></name> <operator pos:start="199:42" pos:end="199:43">||</operator>

        <name pos:start="201:9" pos:end="201:36"><name pos:start="201:9" pos:end="201:10">h0</name><operator pos:start="201:11" pos:end="201:12">-&gt;</operator><name pos:start="201:13" pos:end="201:23">sps_buffers</name><index pos:start="201:24" pos:end="201:36">[<expr pos:start="201:25" pos:end="201:35"><name pos:start="201:25" pos:end="201:35"><name pos:start="201:25" pos:end="201:27">pps</name><operator pos:start="201:28" pos:end="201:29">-&gt;</operator><name pos:start="201:30" pos:end="201:35">sps_id</name></name></expr>]</index></name><operator pos:start="201:37" pos:end="201:38">-&gt;</operator><name pos:start="201:39" pos:end="201:41">new</name></expr>)</condition> <block pos:start="201:44" pos:end="251:5">{<block_content pos:start="205:9" pos:end="249:23">



        <if_stmt pos:start="205:9" pos:end="213:9"><if pos:start="205:9" pos:end="213:9">if <condition pos:start="205:12" pos:end="205:25">(<expr pos:start="205:13" pos:end="205:24"><operator pos:start="205:13" pos:end="205:13">!</operator><name pos:start="205:14" pos:end="205:24">first_slice</name></expr>)</condition> <block pos:start="205:27" pos:end="213:9">{<block_content pos:start="207:13" pos:end="211:39">

            <expr_stmt pos:start="207:13" pos:end="209:59"><expr pos:start="207:13" pos:end="209:58"><call pos:start="207:13" pos:end="209:58"><name pos:start="207:13" pos:end="207:18">av_log</name><argument_list pos:start="207:19" pos:end="209:58">(<argument pos:start="207:20" pos:end="207:27"><expr pos:start="207:20" pos:end="207:27"><name pos:start="207:20" pos:end="207:27"><name pos:start="207:20" pos:end="207:20">h</name><operator pos:start="207:21" pos:end="207:22">-&gt;</operator><name pos:start="207:23" pos:end="207:27">avctx</name></name></expr></argument>, <argument pos:start="207:30" pos:end="207:41"><expr pos:start="207:30" pos:end="207:41"><name pos:start="207:30" pos:end="207:41">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="209:16" pos:end="209:57"><expr pos:start="209:16" pos:end="209:57"><literal type="string" pos:start="209:16" pos:end="209:57">"SPS changed in the middle of the frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="211:13" pos:end="211:39">return <expr pos:start="211:20" pos:end="211:38"><name pos:start="211:20" pos:end="211:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="217:9" pos:end="217:49"><expr pos:start="217:9" pos:end="217:48"><name pos:start="217:9" pos:end="217:14"><name pos:start="217:9" pos:end="217:9">h</name><operator pos:start="217:10" pos:end="217:11">-&gt;</operator><name pos:start="217:12" pos:end="217:14">sps</name></name> <operator pos:start="217:16" pos:end="217:16">=</operator> <operator pos:start="217:18" pos:end="217:18">*</operator><name pos:start="217:19" pos:end="217:48"><name pos:start="217:19" pos:end="217:20">h0</name><operator pos:start="217:21" pos:end="217:22">-&gt;</operator><name pos:start="217:23" pos:end="217:33">sps_buffers</name><index pos:start="217:34" pos:end="217:48">[<expr pos:start="217:35" pos:end="217:47"><name pos:start="217:35" pos:end="217:47"><name pos:start="217:35" pos:end="217:35">h</name><operator pos:start="217:36" pos:end="217:37">-&gt;</operator><name pos:start="217:38" pos:end="217:40">pps</name><operator pos:start="217:41" pos:end="217:41">.</operator><name pos:start="217:42" pos:end="217:47">sps_id</name></name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="221:9" pos:end="231:29"><if pos:start="221:9" pos:end="231:29">if <condition pos:start="221:12" pos:end="229:9">(<expr pos:start="221:13" pos:end="227:64"><name pos:start="221:13" pos:end="221:23"><name pos:start="221:13" pos:end="221:13">h</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:23">mb_width</name></name>  <operator pos:start="221:26" pos:end="221:27">!=</operator> <name pos:start="221:29" pos:end="221:43"><name pos:start="221:29" pos:end="221:29">h</name><operator pos:start="221:30" pos:end="221:31">-&gt;</operator><name pos:start="221:32" pos:end="221:34">sps</name><operator pos:start="221:35" pos:end="221:35">.</operator><name pos:start="221:36" pos:end="221:43">mb_width</name></name> <operator pos:start="221:45" pos:end="221:46">||</operator>

            <name pos:start="223:13" pos:end="223:24"><name pos:start="223:13" pos:end="223:13">h</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:24">mb_height</name></name> <operator pos:start="223:26" pos:end="223:27">!=</operator> <name pos:start="223:29" pos:end="223:44"><name pos:start="223:29" pos:end="223:29">h</name><operator pos:start="223:30" pos:end="223:31">-&gt;</operator><name pos:start="223:32" pos:end="223:34">sps</name><operator pos:start="223:35" pos:end="223:35">.</operator><name pos:start="223:36" pos:end="223:44">mb_height</name></name> <operator pos:start="223:46" pos:end="223:46">*</operator> <operator pos:start="223:48" pos:end="223:48">(</operator><literal type="number" pos:start="223:49" pos:end="223:51">2</literal> <operator pos:start="223:51" pos:end="223:51">-</operator> <name pos:start="223:53" pos:end="223:78"><name pos:start="223:53" pos:end="223:53">h</name><operator pos:start="223:54" pos:end="223:55">-&gt;</operator><name pos:start="223:56" pos:end="223:58">sps</name><operator pos:start="223:59" pos:end="223:59">.</operator><name pos:start="223:60" pos:end="223:78">frame_mbs_only_flag</name></name><operator pos:start="223:79" pos:end="223:79">)</operator> <operator pos:start="223:81" pos:end="223:82">||</operator>

            <name pos:start="225:13" pos:end="225:41"><name pos:start="225:13" pos:end="225:13">h</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:20">avctx</name><operator pos:start="225:21" pos:end="225:22">-&gt;</operator><name pos:start="225:23" pos:end="225:41">bits_per_raw_sample</name></name> <operator pos:start="225:43" pos:end="225:44">!=</operator> <name pos:start="225:46" pos:end="225:66"><name pos:start="225:46" pos:end="225:46">h</name><operator pos:start="225:47" pos:end="225:48">-&gt;</operator><name pos:start="225:49" pos:end="225:51">sps</name><operator pos:start="225:52" pos:end="225:52">.</operator><name pos:start="225:53" pos:end="225:66">bit_depth_luma</name></name> <operator pos:start="225:68" pos:end="225:69">||</operator>

            <name pos:start="227:13" pos:end="227:36"><name pos:start="227:13" pos:end="227:13">h</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:36">cur_chroma_format_idc</name></name> <operator pos:start="227:38" pos:end="227:39">!=</operator> <name pos:start="227:41" pos:end="227:64"><name pos:start="227:41" pos:end="227:41">h</name><operator pos:start="227:42" pos:end="227:43">-&gt;</operator><name pos:start="227:44" pos:end="227:46">sps</name><operator pos:start="227:47" pos:end="227:47">.</operator><name pos:start="227:48" pos:end="227:64">chroma_format_idc</name></name></expr>

        )</condition><block type="pseudo" pos:start="231:13" pos:end="231:29"><block_content pos:start="231:13" pos:end="231:29">

            <expr_stmt pos:start="231:13" pos:end="231:29"><expr pos:start="231:13" pos:end="231:28"><name pos:start="231:13" pos:end="231:24">needs_reinit</name> <operator pos:start="231:26" pos:end="231:26">=</operator> <literal type="number" pos:start="231:28" pos:end="231:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="235:9" pos:end="245:9"><if pos:start="235:9" pos:end="245:9">if <condition pos:start="235:12" pos:end="237:61">(<expr pos:start="235:13" pos:end="237:60"><name pos:start="235:13" pos:end="235:29"><name pos:start="235:13" pos:end="235:13">h</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:29">bit_depth_luma</name></name>    <operator pos:start="235:34" pos:end="235:35">!=</operator> <name pos:start="235:37" pos:end="235:57"><name pos:start="235:37" pos:end="235:37">h</name><operator pos:start="235:38" pos:end="235:39">-&gt;</operator><name pos:start="235:40" pos:end="235:42">sps</name><operator pos:start="235:43" pos:end="235:43">.</operator><name pos:start="235:44" pos:end="235:57">bit_depth_luma</name></name> <operator pos:start="235:59" pos:end="235:60">||</operator>

            <name pos:start="237:13" pos:end="237:32"><name pos:start="237:13" pos:end="237:13">h</name><operator pos:start="237:14" pos:end="237:15">-&gt;</operator><name pos:start="237:16" pos:end="237:32">chroma_format_idc</name></name> <operator pos:start="237:34" pos:end="237:35">!=</operator> <name pos:start="237:37" pos:end="237:60"><name pos:start="237:37" pos:end="237:37">h</name><operator pos:start="237:38" pos:end="237:39">-&gt;</operator><name pos:start="237:40" pos:end="237:42">sps</name><operator pos:start="237:43" pos:end="237:43">.</operator><name pos:start="237:44" pos:end="237:60">chroma_format_idc</name></name></expr>)</condition> <block pos:start="237:63" pos:end="245:9">{<block_content pos:start="239:13" pos:end="243:37">

            <expr_stmt pos:start="239:13" pos:end="239:57"><expr pos:start="239:13" pos:end="239:56"><name pos:start="239:13" pos:end="239:29"><name pos:start="239:13" pos:end="239:13">h</name><operator pos:start="239:14" pos:end="239:15">-&gt;</operator><name pos:start="239:16" pos:end="239:29">bit_depth_luma</name></name>    <operator pos:start="239:34" pos:end="239:34">=</operator> <name pos:start="239:36" pos:end="239:56"><name pos:start="239:36" pos:end="239:36">h</name><operator pos:start="239:37" pos:end="239:38">-&gt;</operator><name pos:start="239:39" pos:end="239:41">sps</name><operator pos:start="239:42" pos:end="239:42">.</operator><name pos:start="239:43" pos:end="239:56">bit_depth_luma</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:60"><expr pos:start="241:13" pos:end="241:59"><name pos:start="241:13" pos:end="241:32"><name pos:start="241:13" pos:end="241:13">h</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:32">chroma_format_idc</name></name> <operator pos:start="241:34" pos:end="241:34">=</operator> <name pos:start="241:36" pos:end="241:59"><name pos:start="241:36" pos:end="241:36">h</name><operator pos:start="241:37" pos:end="241:38">-&gt;</operator><name pos:start="241:39" pos:end="241:41">sps</name><operator pos:start="241:42" pos:end="241:42">.</operator><name pos:start="241:43" pos:end="241:59">chroma_format_idc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:37"><expr pos:start="243:13" pos:end="243:36"><name pos:start="243:13" pos:end="243:24">needs_reinit</name>         <operator pos:start="243:34" pos:end="243:34">=</operator> <literal type="number" pos:start="243:36" pos:end="243:36">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="247:9" pos:end="249:23"><if pos:start="247:9" pos:end="249:23">if <condition pos:start="247:12" pos:end="247:58">(<expr pos:start="247:13" pos:end="247:57"><operator pos:start="247:13" pos:end="247:13">(</operator><name pos:start="247:14" pos:end="247:16">ret</name> <operator pos:start="247:18" pos:end="247:18">=</operator> <call pos:start="247:20" pos:end="247:52"><name pos:start="247:20" pos:end="247:49">ff_h264_set_parameter_from_sps</name><argument_list pos:start="247:50" pos:end="247:52">(<argument pos:start="247:51" pos:end="247:51"><expr pos:start="247:51" pos:end="247:51"><name pos:start="247:51" pos:end="247:51">h</name></expr></argument>)</argument_list></call><operator pos:start="247:53" pos:end="247:53">)</operator> <operator pos:start="247:55" pos:end="247:55">&lt;</operator> <literal type="number" pos:start="247:57" pos:end="247:57">0</literal></expr>)</condition><block type="pseudo" pos:start="249:13" pos:end="249:23"><block_content pos:start="249:13" pos:end="249:23">

            <return pos:start="249:13" pos:end="249:23">return <expr pos:start="249:20" pos:end="249:22"><name pos:start="249:20" pos:end="249:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="255:5" pos:end="255:53"><expr pos:start="255:5" pos:end="255:52"><name pos:start="255:5" pos:end="255:21"><name pos:start="255:5" pos:end="255:5">h</name><operator pos:start="255:6" pos:end="255:7">-&gt;</operator><name pos:start="255:8" pos:end="255:12">avctx</name><operator pos:start="255:13" pos:end="255:14">-&gt;</operator><name pos:start="255:15" pos:end="255:21">profile</name></name> <operator pos:start="255:23" pos:end="255:23">=</operator> <call pos:start="255:25" pos:end="255:52"><name pos:start="255:25" pos:end="255:43">ff_h264_get_profile</name><argument_list pos:start="255:44" pos:end="255:52">(<argument pos:start="255:45" pos:end="255:51"><expr pos:start="255:45" pos:end="255:51"><operator pos:start="255:45" pos:end="255:45">&amp;</operator><name pos:start="255:46" pos:end="255:51"><name pos:start="255:46" pos:end="255:46">h</name><operator pos:start="255:47" pos:end="255:48">-&gt;</operator><name pos:start="255:49" pos:end="255:51">sps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:41"><expr pos:start="257:5" pos:end="257:40"><name pos:start="257:5" pos:end="257:19"><name pos:start="257:5" pos:end="257:5">h</name><operator pos:start="257:6" pos:end="257:7">-&gt;</operator><name pos:start="257:8" pos:end="257:12">avctx</name><operator pos:start="257:13" pos:end="257:14">-&gt;</operator><name pos:start="257:15" pos:end="257:19">level</name></name>   <operator pos:start="257:23" pos:end="257:23">=</operator> <name pos:start="257:25" pos:end="257:40"><name pos:start="257:25" pos:end="257:25">h</name><operator pos:start="257:26" pos:end="257:27">-&gt;</operator><name pos:start="257:28" pos:end="257:30">sps</name><operator pos:start="257:31" pos:end="257:31">.</operator><name pos:start="257:32" pos:end="257:40">level_idc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:47"><expr pos:start="259:5" pos:end="259:46"><name pos:start="259:5" pos:end="259:18"><name pos:start="259:5" pos:end="259:5">h</name><operator pos:start="259:6" pos:end="259:7">-&gt;</operator><name pos:start="259:8" pos:end="259:12">avctx</name><operator pos:start="259:13" pos:end="259:14">-&gt;</operator><name pos:start="259:15" pos:end="259:18">refs</name></name>    <operator pos:start="259:23" pos:end="259:23">=</operator> <name pos:start="259:25" pos:end="259:46"><name pos:start="259:25" pos:end="259:25">h</name><operator pos:start="259:26" pos:end="259:27">-&gt;</operator><name pos:start="259:28" pos:end="259:30">sps</name><operator pos:start="259:31" pos:end="259:31">.</operator><name pos:start="259:32" pos:end="259:46">ref_frame_count</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="263:5" pos:end="277:23"><expr pos:start="263:5" pos:end="277:22"><name pos:start="263:5" pos:end="263:15">must_reinit</name> <operator pos:start="263:17" pos:end="263:17">=</operator> <operator pos:start="263:19" pos:end="263:19">(</operator><name pos:start="263:20" pos:end="263:41"><name pos:start="263:20" pos:end="263:20">h</name><operator pos:start="263:21" pos:end="263:22">-&gt;</operator><name pos:start="263:23" pos:end="263:41">context_initialized</name></name> <operator pos:start="263:43" pos:end="263:44">&amp;&amp;</operator>

                    <operator pos:start="265:21" pos:end="265:21">(</operator>   <literal type="number" pos:start="265:25" pos:end="265:26">16</literal><operator pos:start="265:27" pos:end="265:27">*</operator><name pos:start="265:28" pos:end="265:42"><name pos:start="265:28" pos:end="265:28">h</name><operator pos:start="265:29" pos:end="265:30">-&gt;</operator><name pos:start="265:31" pos:end="265:33">sps</name><operator pos:start="265:34" pos:end="265:34">.</operator><name pos:start="265:35" pos:end="265:42">mb_width</name></name> <operator pos:start="265:44" pos:end="265:45">!=</operator> <name pos:start="265:47" pos:end="265:67"><name pos:start="265:47" pos:end="265:47">h</name><operator pos:start="265:48" pos:end="265:49">-&gt;</operator><name pos:start="265:50" pos:end="265:54">avctx</name><operator pos:start="265:55" pos:end="265:56">-&gt;</operator><name pos:start="265:57" pos:end="265:67">coded_width</name></name>

                     <operator pos:start="267:22" pos:end="267:23">||</operator> <literal type="number" pos:start="267:25" pos:end="267:26">16</literal><operator pos:start="267:27" pos:end="267:27">*</operator><name pos:start="267:28" pos:end="267:43"><name pos:start="267:28" pos:end="267:28">h</name><operator pos:start="267:29" pos:end="267:30">-&gt;</operator><name pos:start="267:31" pos:end="267:33">sps</name><operator pos:start="267:34" pos:end="267:34">.</operator><name pos:start="267:35" pos:end="267:43">mb_height</name></name> <operator pos:start="267:45" pos:end="267:45">*</operator> <operator pos:start="267:47" pos:end="267:47">(</operator><literal type="number" pos:start="267:48" pos:end="267:50">2</literal> <operator pos:start="267:50" pos:end="267:50">-</operator> <name pos:start="267:52" pos:end="267:77"><name pos:start="267:52" pos:end="267:52">h</name><operator pos:start="267:53" pos:end="267:54">-&gt;</operator><name pos:start="267:55" pos:end="267:57">sps</name><operator pos:start="267:58" pos:end="267:58">.</operator><name pos:start="267:59" pos:end="267:77">frame_mbs_only_flag</name></name><operator pos:start="267:78" pos:end="267:78">)</operator> <operator pos:start="267:80" pos:end="267:81">!=</operator> <name pos:start="267:83" pos:end="267:104"><name pos:start="267:83" pos:end="267:83">h</name><operator pos:start="267:84" pos:end="267:85">-&gt;</operator><name pos:start="267:86" pos:end="267:90">avctx</name><operator pos:start="267:91" pos:end="267:92">-&gt;</operator><name pos:start="267:93" pos:end="267:104">coded_height</name></name>

                     <operator pos:start="269:22" pos:end="269:23">||</operator> <name pos:start="269:25" pos:end="269:53"><name pos:start="269:25" pos:end="269:25">h</name><operator pos:start="269:26" pos:end="269:27">-&gt;</operator><name pos:start="269:28" pos:end="269:32">avctx</name><operator pos:start="269:33" pos:end="269:34">-&gt;</operator><name pos:start="269:35" pos:end="269:53">bits_per_raw_sample</name></name> <operator pos:start="269:55" pos:end="269:56">!=</operator> <name pos:start="269:58" pos:end="269:78"><name pos:start="269:58" pos:end="269:58">h</name><operator pos:start="269:59" pos:end="269:60">-&gt;</operator><name pos:start="269:61" pos:end="269:63">sps</name><operator pos:start="269:64" pos:end="269:64">.</operator><name pos:start="269:65" pos:end="269:78">bit_depth_luma</name></name>

                     <operator pos:start="271:22" pos:end="271:23">||</operator> <name pos:start="271:25" pos:end="271:48"><name pos:start="271:25" pos:end="271:25">h</name><operator pos:start="271:26" pos:end="271:27">-&gt;</operator><name pos:start="271:28" pos:end="271:48">cur_chroma_format_idc</name></name> <operator pos:start="271:50" pos:end="271:51">!=</operator> <name pos:start="271:53" pos:end="271:76"><name pos:start="271:53" pos:end="271:53">h</name><operator pos:start="271:54" pos:end="271:55">-&gt;</operator><name pos:start="271:56" pos:end="271:58">sps</name><operator pos:start="271:59" pos:end="271:59">.</operator><name pos:start="271:60" pos:end="271:76">chroma_format_idc</name></name>

                     <operator pos:start="273:22" pos:end="273:23">||</operator> <name pos:start="273:25" pos:end="273:35"><name pos:start="273:25" pos:end="273:25">h</name><operator pos:start="273:26" pos:end="273:27">-&gt;</operator><name pos:start="273:28" pos:end="273:35">mb_width</name></name>  <operator pos:start="273:38" pos:end="273:39">!=</operator> <name pos:start="273:41" pos:end="273:55"><name pos:start="273:41" pos:end="273:41">h</name><operator pos:start="273:42" pos:end="273:43">-&gt;</operator><name pos:start="273:44" pos:end="273:46">sps</name><operator pos:start="273:47" pos:end="273:47">.</operator><name pos:start="273:48" pos:end="273:55">mb_width</name></name>

                     <operator pos:start="275:22" pos:end="275:23">||</operator> <name pos:start="275:25" pos:end="275:36"><name pos:start="275:25" pos:end="275:25">h</name><operator pos:start="275:26" pos:end="275:27">-&gt;</operator><name pos:start="275:28" pos:end="275:36">mb_height</name></name> <operator pos:start="275:38" pos:end="275:39">!=</operator> <name pos:start="275:41" pos:end="275:56"><name pos:start="275:41" pos:end="275:41">h</name><operator pos:start="275:42" pos:end="275:43">-&gt;</operator><name pos:start="275:44" pos:end="275:46">sps</name><operator pos:start="275:47" pos:end="275:47">.</operator><name pos:start="275:48" pos:end="275:56">mb_height</name></name> <operator pos:start="275:58" pos:end="275:58">*</operator> <operator pos:start="275:60" pos:end="275:60">(</operator><literal type="number" pos:start="275:61" pos:end="275:63">2</literal> <operator pos:start="275:63" pos:end="275:63">-</operator> <name pos:start="275:65" pos:end="275:90"><name pos:start="275:65" pos:end="275:65">h</name><operator pos:start="275:66" pos:end="275:67">-&gt;</operator><name pos:start="275:68" pos:end="275:70">sps</name><operator pos:start="275:71" pos:end="275:71">.</operator><name pos:start="275:72" pos:end="275:90">frame_mbs_only_flag</name></name><operator pos:start="275:91" pos:end="275:91">)</operator>

                    <operator pos:start="277:21" pos:end="277:21">)</operator><operator pos:start="277:22" pos:end="277:22">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="279:5" pos:end="281:24"><if pos:start="279:5" pos:end="281:24">if <condition pos:start="279:8" pos:end="279:82">(<expr pos:start="279:9" pos:end="279:81"><call pos:start="279:9" pos:end="279:40"><name pos:start="279:9" pos:end="279:20">non_j_pixfmt</name><argument_list pos:start="279:21" pos:end="279:40">(<argument pos:start="279:22" pos:end="279:39"><expr pos:start="279:22" pos:end="279:39"><name pos:start="279:22" pos:end="279:39"><name pos:start="279:22" pos:end="279:23">h0</name><operator pos:start="279:24" pos:end="279:25">-&gt;</operator><name pos:start="279:26" pos:end="279:30">avctx</name><operator pos:start="279:31" pos:end="279:32">-&gt;</operator><name pos:start="279:33" pos:end="279:39">pix_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="279:42" pos:end="279:43">!=</operator> <call pos:start="279:45" pos:end="279:81"><name pos:start="279:45" pos:end="279:56">non_j_pixfmt</name><argument_list pos:start="279:57" pos:end="279:81">(<argument pos:start="279:58" pos:end="279:80"><expr pos:start="279:58" pos:end="279:80"><call pos:start="279:58" pos:end="279:80"><name pos:start="279:58" pos:end="279:73">get_pixel_format</name><argument_list pos:start="279:74" pos:end="279:80">(<argument pos:start="279:75" pos:end="279:76"><expr pos:start="279:75" pos:end="279:76"><name pos:start="279:75" pos:end="279:76">h0</name></expr></argument>, <argument pos:start="279:79" pos:end="279:79"><expr pos:start="279:79" pos:end="279:79"><literal type="number" pos:start="279:79" pos:end="279:79">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="281:9" pos:end="281:24"><block_content pos:start="281:9" pos:end="281:24">

        <expr_stmt pos:start="281:9" pos:end="281:24"><expr pos:start="281:9" pos:end="281:23"><name pos:start="281:9" pos:end="281:19">must_reinit</name> <operator pos:start="281:21" pos:end="281:21">=</operator> <literal type="number" pos:start="281:23" pos:end="281:23">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="285:5" pos:end="287:24"><if pos:start="285:5" pos:end="287:24">if <condition pos:start="285:8" pos:end="285:75">(<expr pos:start="285:9" pos:end="285:74"><name pos:start="285:9" pos:end="285:19">first_slice</name> <operator pos:start="285:21" pos:end="285:22">&amp;&amp;</operator> <call pos:start="285:24" pos:end="285:74"><name pos:start="285:24" pos:end="285:31">av_cmp_q</name><argument_list pos:start="285:32" pos:end="285:74">(<argument pos:start="285:33" pos:end="285:42"><expr pos:start="285:33" pos:end="285:42"><name pos:start="285:33" pos:end="285:42"><name pos:start="285:33" pos:end="285:33">h</name><operator pos:start="285:34" pos:end="285:35">-&gt;</operator><name pos:start="285:36" pos:end="285:38">sps</name><operator pos:start="285:39" pos:end="285:39">.</operator><name pos:start="285:40" pos:end="285:42">sar</name></name></expr></argument>, <argument pos:start="285:45" pos:end="285:73"><expr pos:start="285:45" pos:end="285:73"><name pos:start="285:45" pos:end="285:73"><name pos:start="285:45" pos:end="285:45">h</name><operator pos:start="285:46" pos:end="285:47">-&gt;</operator><name pos:start="285:48" pos:end="285:52">avctx</name><operator pos:start="285:53" pos:end="285:54">-&gt;</operator><name pos:start="285:55" pos:end="285:73">sample_aspect_ratio</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="287:9" pos:end="287:24"><block_content pos:start="287:9" pos:end="287:24">

        <expr_stmt pos:start="287:9" pos:end="287:24"><expr pos:start="287:9" pos:end="287:23"><name pos:start="287:9" pos:end="287:19">must_reinit</name> <operator pos:start="287:21" pos:end="287:21">=</operator> <literal type="number" pos:start="287:23" pos:end="287:23">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="291:5" pos:end="291:35"><expr pos:start="291:5" pos:end="291:34"><name pos:start="291:5" pos:end="291:15"><name pos:start="291:5" pos:end="291:5">h</name><operator pos:start="291:6" pos:end="291:7">-&gt;</operator><name pos:start="291:8" pos:end="291:15">mb_width</name></name>  <operator pos:start="291:18" pos:end="291:18">=</operator> <name pos:start="291:20" pos:end="291:34"><name pos:start="291:20" pos:end="291:20">h</name><operator pos:start="291:21" pos:end="291:22">-&gt;</operator><name pos:start="291:23" pos:end="291:25">sps</name><operator pos:start="291:26" pos:end="291:26">.</operator><name pos:start="291:27" pos:end="291:34">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:71"><expr pos:start="293:5" pos:end="293:70"><name pos:start="293:5" pos:end="293:16"><name pos:start="293:5" pos:end="293:5">h</name><operator pos:start="293:6" pos:end="293:7">-&gt;</operator><name pos:start="293:8" pos:end="293:16">mb_height</name></name> <operator pos:start="293:18" pos:end="293:18">=</operator> <name pos:start="293:20" pos:end="293:35"><name pos:start="293:20" pos:end="293:20">h</name><operator pos:start="293:21" pos:end="293:22">-&gt;</operator><name pos:start="293:23" pos:end="293:25">sps</name><operator pos:start="293:26" pos:end="293:26">.</operator><name pos:start="293:27" pos:end="293:35">mb_height</name></name> <operator pos:start="293:37" pos:end="293:37">*</operator> <operator pos:start="293:39" pos:end="293:39">(</operator><literal type="number" pos:start="293:40" pos:end="293:42">2</literal> <operator pos:start="293:42" pos:end="293:42">-</operator> <name pos:start="293:44" pos:end="293:69"><name pos:start="293:44" pos:end="293:44">h</name><operator pos:start="293:45" pos:end="293:46">-&gt;</operator><name pos:start="293:47" pos:end="293:49">sps</name><operator pos:start="293:50" pos:end="293:50">.</operator><name pos:start="293:51" pos:end="293:69">frame_mbs_only_flag</name></name><operator pos:start="293:70" pos:end="293:70">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="295:5" pos:end="295:46"><expr pos:start="295:5" pos:end="295:45"><name pos:start="295:5" pos:end="295:13"><name pos:start="295:5" pos:end="295:5">h</name><operator pos:start="295:6" pos:end="295:7">-&gt;</operator><name pos:start="295:8" pos:end="295:13">mb_num</name></name>    <operator pos:start="295:18" pos:end="295:18">=</operator> <name pos:start="295:20" pos:end="295:30"><name pos:start="295:20" pos:end="295:20">h</name><operator pos:start="295:21" pos:end="295:22">-&gt;</operator><name pos:start="295:23" pos:end="295:30">mb_width</name></name> <operator pos:start="295:32" pos:end="295:32">*</operator> <name pos:start="295:34" pos:end="295:45"><name pos:start="295:34" pos:end="295:34">h</name><operator pos:start="295:35" pos:end="295:36">-&gt;</operator><name pos:start="295:37" pos:end="295:45">mb_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:35"><expr pos:start="297:5" pos:end="297:34"><name pos:start="297:5" pos:end="297:16"><name pos:start="297:5" pos:end="297:5">h</name><operator pos:start="297:6" pos:end="297:7">-&gt;</operator><name pos:start="297:8" pos:end="297:16">mb_stride</name></name> <operator pos:start="297:18" pos:end="297:18">=</operator> <name pos:start="297:20" pos:end="297:30"><name pos:start="297:20" pos:end="297:20">h</name><operator pos:start="297:21" pos:end="297:22">-&gt;</operator><name pos:start="297:23" pos:end="297:30">mb_width</name></name> <operator pos:start="297:32" pos:end="297:32">+</operator> <literal type="number" pos:start="297:34" pos:end="297:34">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="301:5" pos:end="301:34"><expr pos:start="301:5" pos:end="301:33"><name pos:start="301:5" pos:end="301:15"><name pos:start="301:5" pos:end="301:5">h</name><operator pos:start="301:6" pos:end="301:7">-&gt;</operator><name pos:start="301:8" pos:end="301:15">b_stride</name></name> <operator pos:start="301:17" pos:end="301:17">=</operator> <name pos:start="301:19" pos:end="301:29"><name pos:start="301:19" pos:end="301:19">h</name><operator pos:start="301:20" pos:end="301:21">-&gt;</operator><name pos:start="301:22" pos:end="301:29">mb_width</name></name> <operator pos:start="301:31" pos:end="301:31">*</operator> <literal type="number" pos:start="301:33" pos:end="301:33">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="305:5" pos:end="305:54"><expr pos:start="305:5" pos:end="305:53"><name pos:start="305:5" pos:end="305:21"><name pos:start="305:5" pos:end="305:5">h</name><operator pos:start="305:6" pos:end="305:7">-&gt;</operator><name pos:start="305:8" pos:end="305:21">chroma_y_shift</name></name> <operator pos:start="305:23" pos:end="305:23">=</operator> <name pos:start="305:25" pos:end="305:48"><name pos:start="305:25" pos:end="305:25">h</name><operator pos:start="305:26" pos:end="305:27">-&gt;</operator><name pos:start="305:28" pos:end="305:30">sps</name><operator pos:start="305:31" pos:end="305:31">.</operator><name pos:start="305:32" pos:end="305:48">chroma_format_idc</name></name> <operator pos:start="305:50" pos:end="305:51">&lt;=</operator> <literal type="number" pos:start="305:53" pos:end="305:53">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="305:56" pos:end="305:74">// 400 uses yuv420p</comment>



    <expr_stmt pos:start="309:5" pos:end="309:33"><expr pos:start="309:5" pos:end="309:32"><name pos:start="309:5" pos:end="309:12"><name pos:start="309:5" pos:end="309:5">h</name><operator pos:start="309:6" pos:end="309:7">-&gt;</operator><name pos:start="309:8" pos:end="309:12">width</name></name>  <operator pos:start="309:15" pos:end="309:15">=</operator> <literal type="number" pos:start="309:17" pos:end="309:18">16</literal> <operator pos:start="309:20" pos:end="309:20">*</operator> <name pos:start="309:22" pos:end="309:32"><name pos:start="309:22" pos:end="309:22">h</name><operator pos:start="309:23" pos:end="309:24">-&gt;</operator><name pos:start="309:25" pos:end="309:32">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="311:5" pos:end="311:34"><expr pos:start="311:5" pos:end="311:33"><name pos:start="311:5" pos:end="311:13"><name pos:start="311:5" pos:end="311:5">h</name><operator pos:start="311:6" pos:end="311:7">-&gt;</operator><name pos:start="311:8" pos:end="311:13">height</name></name> <operator pos:start="311:15" pos:end="311:15">=</operator> <literal type="number" pos:start="311:17" pos:end="311:18">16</literal> <operator pos:start="311:20" pos:end="311:20">*</operator> <name pos:start="311:22" pos:end="311:33"><name pos:start="311:22" pos:end="311:22">h</name><operator pos:start="311:23" pos:end="311:24">-&gt;</operator><name pos:start="311:25" pos:end="311:33">mb_height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="315:5" pos:end="315:29"><expr pos:start="315:5" pos:end="315:28"><name pos:start="315:5" pos:end="315:7">ret</name> <operator pos:start="315:9" pos:end="315:9">=</operator> <call pos:start="315:11" pos:end="315:28"><name pos:start="315:11" pos:end="315:25">init_dimensions</name><argument_list pos:start="315:26" pos:end="315:28">(<argument pos:start="315:27" pos:end="315:27"><expr pos:start="315:27" pos:end="315:27"><name pos:start="315:27" pos:end="315:27">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="317:5" pos:end="319:19"><if pos:start="317:5" pos:end="319:19">if <condition pos:start="317:8" pos:end="317:16">(<expr pos:start="317:9" pos:end="317:15"><name pos:start="317:9" pos:end="317:11">ret</name> <operator pos:start="317:13" pos:end="317:13">&lt;</operator> <literal type="number" pos:start="317:15" pos:end="317:15">0</literal></expr>)</condition><block type="pseudo" pos:start="319:9" pos:end="319:19"><block_content pos:start="319:9" pos:end="319:19">

        <return pos:start="319:9" pos:end="319:19">return <expr pos:start="319:16" pos:end="319:18"><name pos:start="319:16" pos:end="319:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="323:5" pos:end="343:5"><if pos:start="323:5" pos:end="343:5">if <condition pos:start="323:8" pos:end="323:46">(<expr pos:start="323:9" pos:end="323:45"><name pos:start="323:9" pos:end="323:45"><name pos:start="323:9" pos:end="323:9">h</name><operator pos:start="323:10" pos:end="323:11">-&gt;</operator><name pos:start="323:12" pos:end="323:14">sps</name><operator pos:start="323:15" pos:end="323:15">.</operator><name pos:start="323:16" pos:end="323:45">video_signal_type_present_flag</name></name></expr>)</condition> <block pos:start="323:48" pos:end="343:5">{<block_content pos:start="325:9" pos:end="341:9">

        <expr_stmt pos:start="325:9" pos:end="327:71"><expr pos:start="325:9" pos:end="327:70"><name pos:start="325:9" pos:end="325:29"><name pos:start="325:9" pos:end="325:9">h</name><operator pos:start="325:10" pos:end="325:11">-&gt;</operator><name pos:start="325:12" pos:end="325:16">avctx</name><operator pos:start="325:17" pos:end="325:18">-&gt;</operator><name pos:start="325:19" pos:end="325:29">color_range</name></name> <operator pos:start="325:31" pos:end="325:31">=</operator> <ternary pos:start="325:33" pos:end="327:70"><condition pos:start="325:33" pos:end="325:53"><expr pos:start="325:33" pos:end="325:51"><name pos:start="325:33" pos:end="325:49"><name pos:start="325:33" pos:end="325:33">h</name><operator pos:start="325:34" pos:end="325:35">-&gt;</operator><name pos:start="325:36" pos:end="325:38">sps</name><operator pos:start="325:39" pos:end="325:39">.</operator><name pos:start="325:40" pos:end="325:49">full_range</name></name><operator pos:start="325:50" pos:end="325:50">&gt;</operator><literal type="number" pos:start="325:51" pos:end="325:51">0</literal></expr> ?</condition><then pos:start="325:55" pos:end="325:70"> <expr pos:start="325:55" pos:end="325:70"><name pos:start="325:55" pos:end="325:70">AVCOL_RANGE_JPEG</name></expr>

                                                    </then><else pos:start="327:53" pos:end="327:70">: <expr pos:start="327:55" pos:end="327:70"><name pos:start="327:55" pos:end="327:70">AVCOL_RANGE_MPEG</name></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="329:9" pos:end="341:9"><if pos:start="329:9" pos:end="341:9">if <condition pos:start="329:12" pos:end="329:51">(<expr pos:start="329:13" pos:end="329:50"><name pos:start="329:13" pos:end="329:50"><name pos:start="329:13" pos:end="329:13">h</name><operator pos:start="329:14" pos:end="329:15">-&gt;</operator><name pos:start="329:16" pos:end="329:18">sps</name><operator pos:start="329:19" pos:end="329:19">.</operator><name pos:start="329:20" pos:end="329:50">colour_description_present_flag</name></name></expr>)</condition> <block pos:start="329:53" pos:end="341:9">{<block_content pos:start="331:13" pos:end="339:58">

            <if_stmt pos:start="331:13" pos:end="333:33"><if pos:start="331:13" pos:end="333:33">if <condition pos:start="331:16" pos:end="331:58">(<expr pos:start="331:17" pos:end="331:57"><name pos:start="331:17" pos:end="331:36"><name pos:start="331:17" pos:end="331:17">h</name><operator pos:start="331:18" pos:end="331:19">-&gt;</operator><name pos:start="331:20" pos:end="331:24">avctx</name><operator pos:start="331:25" pos:end="331:26">-&gt;</operator><name pos:start="331:27" pos:end="331:36">colorspace</name></name> <operator pos:start="331:38" pos:end="331:39">!=</operator> <name pos:start="331:41" pos:end="331:57"><name pos:start="331:41" pos:end="331:41">h</name><operator pos:start="331:42" pos:end="331:43">-&gt;</operator><name pos:start="331:44" pos:end="331:46">sps</name><operator pos:start="331:47" pos:end="331:47">.</operator><name pos:start="331:48" pos:end="331:57">colorspace</name></name></expr>)</condition><block type="pseudo" pos:start="333:17" pos:end="333:33"><block_content pos:start="333:17" pos:end="333:33">

                <expr_stmt pos:start="333:17" pos:end="333:33"><expr pos:start="333:17" pos:end="333:32"><name pos:start="333:17" pos:end="333:28">needs_reinit</name> <operator pos:start="333:30" pos:end="333:30">=</operator> <literal type="number" pos:start="333:32" pos:end="333:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="335:13" pos:end="335:63"><expr pos:start="335:13" pos:end="335:62"><name pos:start="335:13" pos:end="335:37"><name pos:start="335:13" pos:end="335:13">h</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:20">avctx</name><operator pos:start="335:21" pos:end="335:22">-&gt;</operator><name pos:start="335:23" pos:end="335:37">color_primaries</name></name> <operator pos:start="335:39" pos:end="335:39">=</operator> <name pos:start="335:41" pos:end="335:62"><name pos:start="335:41" pos:end="335:41">h</name><operator pos:start="335:42" pos:end="335:43">-&gt;</operator><name pos:start="335:44" pos:end="335:46">sps</name><operator pos:start="335:47" pos:end="335:47">.</operator><name pos:start="335:48" pos:end="335:62">color_primaries</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:57"><expr pos:start="337:13" pos:end="337:56"><name pos:start="337:13" pos:end="337:31"><name pos:start="337:13" pos:end="337:13">h</name><operator pos:start="337:14" pos:end="337:15">-&gt;</operator><name pos:start="337:16" pos:end="337:20">avctx</name><operator pos:start="337:21" pos:end="337:22">-&gt;</operator><name pos:start="337:23" pos:end="337:31">color_trc</name></name>       <operator pos:start="337:39" pos:end="337:39">=</operator> <name pos:start="337:41" pos:end="337:56"><name pos:start="337:41" pos:end="337:41">h</name><operator pos:start="337:42" pos:end="337:43">-&gt;</operator><name pos:start="337:44" pos:end="337:46">sps</name><operator pos:start="337:47" pos:end="337:47">.</operator><name pos:start="337:48" pos:end="337:56">color_trc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:58"><expr pos:start="339:13" pos:end="339:57"><name pos:start="339:13" pos:end="339:32"><name pos:start="339:13" pos:end="339:13">h</name><operator pos:start="339:14" pos:end="339:15">-&gt;</operator><name pos:start="339:16" pos:end="339:20">avctx</name><operator pos:start="339:21" pos:end="339:22">-&gt;</operator><name pos:start="339:23" pos:end="339:32">colorspace</name></name>      <operator pos:start="339:39" pos:end="339:39">=</operator> <name pos:start="339:41" pos:end="339:57"><name pos:start="339:41" pos:end="339:41">h</name><operator pos:start="339:42" pos:end="339:43">-&gt;</operator><name pos:start="339:44" pos:end="339:46">sps</name><operator pos:start="339:47" pos:end="339:47">.</operator><name pos:start="339:48" pos:end="339:57">colorspace</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="347:5" pos:end="403:5"><if pos:start="347:5" pos:end="403:5">if <condition pos:start="347:8" pos:end="349:38">(<expr pos:start="347:9" pos:end="349:37"><name pos:start="347:9" pos:end="347:30"><name pos:start="347:9" pos:end="347:9">h</name><operator pos:start="347:10" pos:end="347:11">-&gt;</operator><name pos:start="347:12" pos:end="347:30">context_initialized</name></name> <operator pos:start="347:32" pos:end="347:33">&amp;&amp;</operator>

        <operator pos:start="349:9" pos:end="349:9">(</operator><name pos:start="349:10" pos:end="349:20">must_reinit</name> <operator pos:start="349:22" pos:end="349:23">||</operator> <name pos:start="349:25" pos:end="349:36">needs_reinit</name><operator pos:start="349:37" pos:end="349:37">)</operator></expr>)</condition> <block pos:start="349:40" pos:end="403:5">{<block_content pos:start="351:9" pos:end="401:9">

        <if_stmt pos:start="351:9" pos:end="367:9"><if pos:start="351:9" pos:end="367:9">if <condition pos:start="351:12" pos:end="351:20">(<expr pos:start="351:13" pos:end="351:19"><name pos:start="351:13" pos:end="351:13">h</name> <operator pos:start="351:15" pos:end="351:16">!=</operator> <name pos:start="351:18" pos:end="351:19">h0</name></expr>)</condition> <block pos:start="351:22" pos:end="367:9">{<block_content pos:start="353:13" pos:end="365:39">

            <expr_stmt pos:start="353:13" pos:end="363:42"><expr pos:start="353:13" pos:end="363:41"><call pos:start="353:13" pos:end="363:41"><name pos:start="353:13" pos:end="353:18">av_log</name><argument_list pos:start="353:19" pos:end="363:41">(<argument pos:start="353:20" pos:end="353:27"><expr pos:start="353:20" pos:end="353:27"><name pos:start="353:20" pos:end="353:27"><name pos:start="353:20" pos:end="353:20">h</name><operator pos:start="353:21" pos:end="353:22">-&gt;</operator><name pos:start="353:23" pos:end="353:27">avctx</name></name></expr></argument>, <argument pos:start="353:30" pos:end="353:41"><expr pos:start="353:30" pos:end="353:41"><name pos:start="353:30" pos:end="353:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="355:20" pos:end="357:31"><expr pos:start="355:20" pos:end="357:31"><literal type="string" pos:start="355:20" pos:end="355:66">"changing width %d -&gt; %d / height %d -&gt; %d on "</literal>

                   <literal type="string" pos:start="357:20" pos:end="357:31">"slice %d\n"</literal></expr></argument>,

                   <argument pos:start="359:20" pos:end="359:27"><expr pos:start="359:20" pos:end="359:27"><name pos:start="359:20" pos:end="359:27"><name pos:start="359:20" pos:end="359:20">h</name><operator pos:start="359:21" pos:end="359:22">-&gt;</operator><name pos:start="359:23" pos:end="359:27">width</name></name></expr></argument>, <argument pos:start="359:30" pos:end="359:50"><expr pos:start="359:30" pos:end="359:50"><name pos:start="359:30" pos:end="359:50"><name pos:start="359:30" pos:end="359:30">h</name><operator pos:start="359:31" pos:end="359:32">-&gt;</operator><name pos:start="359:33" pos:end="359:37">avctx</name><operator pos:start="359:38" pos:end="359:39">-&gt;</operator><name pos:start="359:40" pos:end="359:50">coded_width</name></name></expr></argument>,

                   <argument pos:start="361:20" pos:end="361:28"><expr pos:start="361:20" pos:end="361:28"><name pos:start="361:20" pos:end="361:28"><name pos:start="361:20" pos:end="361:20">h</name><operator pos:start="361:21" pos:end="361:22">-&gt;</operator><name pos:start="361:23" pos:end="361:28">height</name></name></expr></argument>, <argument pos:start="361:31" pos:end="361:52"><expr pos:start="361:31" pos:end="361:52"><name pos:start="361:31" pos:end="361:52"><name pos:start="361:31" pos:end="361:31">h</name><operator pos:start="361:32" pos:end="361:33">-&gt;</operator><name pos:start="361:34" pos:end="361:38">avctx</name><operator pos:start="361:39" pos:end="361:40">-&gt;</operator><name pos:start="361:41" pos:end="361:52">coded_height</name></name></expr></argument>,

                   <argument pos:start="363:20" pos:end="363:40"><expr pos:start="363:20" pos:end="363:40"><name pos:start="363:20" pos:end="363:36"><name pos:start="363:20" pos:end="363:21">h0</name><operator pos:start="363:22" pos:end="363:23">-&gt;</operator><name pos:start="363:24" pos:end="363:36">current_slice</name></name> <operator pos:start="363:38" pos:end="363:38">+</operator> <literal type="number" pos:start="363:40" pos:end="363:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="365:13" pos:end="365:39">return <expr pos:start="365:20" pos:end="365:38"><name pos:start="365:20" pos:end="365:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="371:9" pos:end="371:32"><expr pos:start="371:9" pos:end="371:31"><call pos:start="371:9" pos:end="371:31"><name pos:start="371:9" pos:end="371:18">av_assert1</name><argument_list pos:start="371:19" pos:end="371:31">(<argument pos:start="371:20" pos:end="371:30"><expr pos:start="371:20" pos:end="371:30"><name pos:start="371:20" pos:end="371:30">first_slice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="375:9" pos:end="375:32"><expr pos:start="375:9" pos:end="375:31"><call pos:start="375:9" pos:end="375:31"><name pos:start="375:9" pos:end="375:28">ff_h264_flush_change</name><argument_list pos:start="375:29" pos:end="375:31">(<argument pos:start="375:30" pos:end="375:30"><expr pos:start="375:30" pos:end="375:30"><name pos:start="375:30" pos:end="375:30">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="379:9" pos:end="381:23"><if pos:start="379:9" pos:end="381:23">if <condition pos:start="379:12" pos:end="379:47">(<expr pos:start="379:13" pos:end="379:46"><operator pos:start="379:13" pos:end="379:13">(</operator><name pos:start="379:14" pos:end="379:16">ret</name> <operator pos:start="379:18" pos:end="379:18">=</operator> <call pos:start="379:20" pos:end="379:41"><name pos:start="379:20" pos:end="379:35">get_pixel_format</name><argument_list pos:start="379:36" pos:end="379:41">(<argument pos:start="379:37" pos:end="379:37"><expr pos:start="379:37" pos:end="379:37"><name pos:start="379:37" pos:end="379:37">h</name></expr></argument>, <argument pos:start="379:40" pos:end="379:40"><expr pos:start="379:40" pos:end="379:40"><literal type="number" pos:start="379:40" pos:end="379:40">1</literal></expr></argument>)</argument_list></call><operator pos:start="379:42" pos:end="379:42">)</operator> <operator pos:start="379:44" pos:end="379:44">&lt;</operator> <literal type="number" pos:start="379:46" pos:end="379:46">0</literal></expr>)</condition><block type="pseudo" pos:start="381:13" pos:end="381:23"><block_content pos:start="381:13" pos:end="381:23">

            <return pos:start="381:13" pos:end="381:23">return <expr pos:start="381:20" pos:end="381:22"><name pos:start="381:20" pos:end="381:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="383:9" pos:end="383:32"><expr pos:start="383:9" pos:end="383:31"><name pos:start="383:9" pos:end="383:25"><name pos:start="383:9" pos:end="383:9">h</name><operator pos:start="383:10" pos:end="383:11">-&gt;</operator><name pos:start="383:12" pos:end="383:16">avctx</name><operator pos:start="383:17" pos:end="383:18">-&gt;</operator><name pos:start="383:19" pos:end="383:25">pix_fmt</name></name> <operator pos:start="383:27" pos:end="383:27">=</operator> <name pos:start="383:29" pos:end="383:31">ret</name></expr>;</expr_stmt>



        <expr_stmt pos:start="387:9" pos:end="389:93"><expr pos:start="387:9" pos:end="389:92"><call pos:start="387:9" pos:end="389:92"><name pos:start="387:9" pos:end="387:14">av_log</name><argument_list pos:start="387:15" pos:end="389:92">(<argument pos:start="387:16" pos:end="387:23"><expr pos:start="387:16" pos:end="387:23"><name pos:start="387:16" pos:end="387:23"><name pos:start="387:16" pos:end="387:16">h</name><operator pos:start="387:17" pos:end="387:18">-&gt;</operator><name pos:start="387:19" pos:end="387:23">avctx</name></name></expr></argument>, <argument pos:start="387:26" pos:end="387:36"><expr pos:start="387:26" pos:end="387:36"><name pos:start="387:26" pos:end="387:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="387:39" pos:end="389:30"><expr pos:start="387:39" pos:end="389:30"><literal type="string" pos:start="387:39" pos:end="387:65">"Reinit context to %dx%d, "</literal>

               <literal type="string" pos:start="389:16" pos:end="389:30">"pix_fmt: %s\n"</literal></expr></argument>, <argument pos:start="389:33" pos:end="389:40"><expr pos:start="389:33" pos:end="389:40"><name pos:start="389:33" pos:end="389:40"><name pos:start="389:33" pos:end="389:33">h</name><operator pos:start="389:34" pos:end="389:35">-&gt;</operator><name pos:start="389:36" pos:end="389:40">width</name></name></expr></argument>, <argument pos:start="389:43" pos:end="389:51"><expr pos:start="389:43" pos:end="389:51"><name pos:start="389:43" pos:end="389:51"><name pos:start="389:43" pos:end="389:43">h</name><operator pos:start="389:44" pos:end="389:45">-&gt;</operator><name pos:start="389:46" pos:end="389:51">height</name></name></expr></argument>, <argument pos:start="389:54" pos:end="389:91"><expr pos:start="389:54" pos:end="389:91"><call pos:start="389:54" pos:end="389:91"><name pos:start="389:54" pos:end="389:72">av_get_pix_fmt_name</name><argument_list pos:start="389:73" pos:end="389:91">(<argument pos:start="389:74" pos:end="389:90"><expr pos:start="389:74" pos:end="389:90"><name pos:start="389:74" pos:end="389:90"><name pos:start="389:74" pos:end="389:74">h</name><operator pos:start="389:75" pos:end="389:76">-&gt;</operator><name pos:start="389:77" pos:end="389:81">avctx</name><operator pos:start="389:82" pos:end="389:83">-&gt;</operator><name pos:start="389:84" pos:end="389:90">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="393:9" pos:end="401:9"><if pos:start="393:9" pos:end="401:9">if <condition pos:start="393:12" pos:end="393:53">(<expr pos:start="393:13" pos:end="393:52"><operator pos:start="393:13" pos:end="393:13">(</operator><name pos:start="393:14" pos:end="393:16">ret</name> <operator pos:start="393:18" pos:end="393:18">=</operator> <call pos:start="393:20" pos:end="393:47"><name pos:start="393:20" pos:end="393:41">h264_slice_header_init</name><argument_list pos:start="393:42" pos:end="393:47">(<argument pos:start="393:43" pos:end="393:43"><expr pos:start="393:43" pos:end="393:43"><name pos:start="393:43" pos:end="393:43">h</name></expr></argument>, <argument pos:start="393:46" pos:end="393:46"><expr pos:start="393:46" pos:end="393:46"><literal type="number" pos:start="393:46" pos:end="393:46">1</literal></expr></argument>)</argument_list></call><operator pos:start="393:48" pos:end="393:48">)</operator> <operator pos:start="393:50" pos:end="393:50">&lt;</operator> <literal type="number" pos:start="393:52" pos:end="393:52">0</literal></expr>)</condition> <block pos:start="393:55" pos:end="401:9">{<block_content pos:start="395:13" pos:end="399:23">

            <expr_stmt pos:start="395:13" pos:end="397:56"><expr pos:start="395:13" pos:end="397:55"><call pos:start="395:13" pos:end="397:55"><name pos:start="395:13" pos:end="395:18">av_log</name><argument_list pos:start="395:19" pos:end="397:55">(<argument pos:start="395:20" pos:end="395:27"><expr pos:start="395:20" pos:end="395:27"><name pos:start="395:20" pos:end="395:27"><name pos:start="395:20" pos:end="395:20">h</name><operator pos:start="395:21" pos:end="395:22">-&gt;</operator><name pos:start="395:23" pos:end="395:27">avctx</name></name></expr></argument>, <argument pos:start="395:30" pos:end="395:41"><expr pos:start="395:30" pos:end="395:41"><name pos:start="395:30" pos:end="395:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="397:20" pos:end="397:54"><expr pos:start="397:20" pos:end="397:54"><literal type="string" pos:start="397:20" pos:end="397:54">"h264_slice_header_init() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="399:13" pos:end="399:23">return <expr pos:start="399:20" pos:end="399:22"><name pos:start="399:20" pos:end="399:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="405:5" pos:end="437:5"><if pos:start="405:5" pos:end="437:5">if <condition pos:start="405:8" pos:end="405:32">(<expr pos:start="405:9" pos:end="405:31"><operator pos:start="405:9" pos:end="405:9">!</operator><name pos:start="405:10" pos:end="405:31"><name pos:start="405:10" pos:end="405:10">h</name><operator pos:start="405:11" pos:end="405:12">-&gt;</operator><name pos:start="405:13" pos:end="405:31">context_initialized</name></name></expr>)</condition> <block pos:start="405:34" pos:end="437:5">{<block_content pos:start="407:9" pos:end="435:9">

        <if_stmt pos:start="407:9" pos:end="415:9"><if pos:start="407:9" pos:end="415:9">if <condition pos:start="407:12" pos:end="407:20">(<expr pos:start="407:13" pos:end="407:19"><name pos:start="407:13" pos:end="407:13">h</name> <operator pos:start="407:15" pos:end="407:16">!=</operator> <name pos:start="407:18" pos:end="407:19">h0</name></expr>)</condition> <block pos:start="407:22" pos:end="415:9">{<block_content pos:start="409:13" pos:end="413:40">

            <expr_stmt pos:start="409:13" pos:end="411:81"><expr pos:start="409:13" pos:end="411:80"><call pos:start="409:13" pos:end="411:80"><name pos:start="409:13" pos:end="409:18">av_log</name><argument_list pos:start="409:19" pos:end="411:80">(<argument pos:start="409:20" pos:end="409:27"><expr pos:start="409:20" pos:end="409:27"><name pos:start="409:20" pos:end="409:27"><name pos:start="409:20" pos:end="409:20">h</name><operator pos:start="409:21" pos:end="409:22">-&gt;</operator><name pos:start="409:23" pos:end="409:27">avctx</name></name></expr></argument>, <argument pos:start="409:30" pos:end="409:41"><expr pos:start="409:30" pos:end="409:41"><name pos:start="409:30" pos:end="409:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="411:20" pos:end="411:79"><expr pos:start="411:20" pos:end="411:79"><literal type="string" pos:start="411:20" pos:end="411:79">"Cannot (re-)initialize context during parallel decoding.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="413:13" pos:end="413:40">return <expr pos:start="413:20" pos:end="413:39"><name pos:start="413:20" pos:end="413:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="419:9" pos:end="421:23"><if pos:start="419:9" pos:end="421:23">if <condition pos:start="419:12" pos:end="419:47">(<expr pos:start="419:13" pos:end="419:46"><operator pos:start="419:13" pos:end="419:13">(</operator><name pos:start="419:14" pos:end="419:16">ret</name> <operator pos:start="419:18" pos:end="419:18">=</operator> <call pos:start="419:20" pos:end="419:41"><name pos:start="419:20" pos:end="419:35">get_pixel_format</name><argument_list pos:start="419:36" pos:end="419:41">(<argument pos:start="419:37" pos:end="419:37"><expr pos:start="419:37" pos:end="419:37"><name pos:start="419:37" pos:end="419:37">h</name></expr></argument>, <argument pos:start="419:40" pos:end="419:40"><expr pos:start="419:40" pos:end="419:40"><literal type="number" pos:start="419:40" pos:end="419:40">1</literal></expr></argument>)</argument_list></call><operator pos:start="419:42" pos:end="419:42">)</operator> <operator pos:start="419:44" pos:end="419:44">&lt;</operator> <literal type="number" pos:start="419:46" pos:end="419:46">0</literal></expr>)</condition><block type="pseudo" pos:start="421:13" pos:end="421:23"><block_content pos:start="421:13" pos:end="421:23">

            <return pos:start="421:13" pos:end="421:23">return <expr pos:start="421:20" pos:end="421:22"><name pos:start="421:20" pos:end="421:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="423:9" pos:end="423:32"><expr pos:start="423:9" pos:end="423:31"><name pos:start="423:9" pos:end="423:25"><name pos:start="423:9" pos:end="423:9">h</name><operator pos:start="423:10" pos:end="423:11">-&gt;</operator><name pos:start="423:12" pos:end="423:16">avctx</name><operator pos:start="423:17" pos:end="423:18">-&gt;</operator><name pos:start="423:19" pos:end="423:25">pix_fmt</name></name> <operator pos:start="423:27" pos:end="423:27">=</operator> <name pos:start="423:29" pos:end="423:31">ret</name></expr>;</expr_stmt>



        <if_stmt pos:start="427:9" pos:end="435:9"><if pos:start="427:9" pos:end="435:9">if <condition pos:start="427:12" pos:end="427:53">(<expr pos:start="427:13" pos:end="427:52"><operator pos:start="427:13" pos:end="427:13">(</operator><name pos:start="427:14" pos:end="427:16">ret</name> <operator pos:start="427:18" pos:end="427:18">=</operator> <call pos:start="427:20" pos:end="427:47"><name pos:start="427:20" pos:end="427:41">h264_slice_header_init</name><argument_list pos:start="427:42" pos:end="427:47">(<argument pos:start="427:43" pos:end="427:43"><expr pos:start="427:43" pos:end="427:43"><name pos:start="427:43" pos:end="427:43">h</name></expr></argument>, <argument pos:start="427:46" pos:end="427:46"><expr pos:start="427:46" pos:end="427:46"><literal type="number" pos:start="427:46" pos:end="427:46">0</literal></expr></argument>)</argument_list></call><operator pos:start="427:48" pos:end="427:48">)</operator> <operator pos:start="427:50" pos:end="427:50">&lt;</operator> <literal type="number" pos:start="427:52" pos:end="427:52">0</literal></expr>)</condition> <block pos:start="427:55" pos:end="435:9">{<block_content pos:start="429:13" pos:end="433:23">

            <expr_stmt pos:start="429:13" pos:end="431:56"><expr pos:start="429:13" pos:end="431:55"><call pos:start="429:13" pos:end="431:55"><name pos:start="429:13" pos:end="429:18">av_log</name><argument_list pos:start="429:19" pos:end="431:55">(<argument pos:start="429:20" pos:end="429:27"><expr pos:start="429:20" pos:end="429:27"><name pos:start="429:20" pos:end="429:27"><name pos:start="429:20" pos:end="429:20">h</name><operator pos:start="429:21" pos:end="429:22">-&gt;</operator><name pos:start="429:23" pos:end="429:27">avctx</name></name></expr></argument>, <argument pos:start="429:30" pos:end="429:41"><expr pos:start="429:30" pos:end="429:41"><name pos:start="429:30" pos:end="429:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="431:20" pos:end="431:54"><expr pos:start="431:20" pos:end="431:54"><literal type="string" pos:start="431:20" pos:end="431:54">"h264_slice_header_init() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="433:13" pos:end="433:23">return <expr pos:start="433:20" pos:end="433:22"><name pos:start="433:20" pos:end="433:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="441:5" pos:end="447:5"><if pos:start="441:5" pos:end="447:5">if <condition pos:start="441:8" pos:end="441:50">(<expr pos:start="441:9" pos:end="441:49"><name pos:start="441:9" pos:end="441:9">h</name> <operator pos:start="441:11" pos:end="441:12">==</operator> <name pos:start="441:14" pos:end="441:15">h0</name> <operator pos:start="441:17" pos:end="441:18">&amp;&amp;</operator> <name pos:start="441:20" pos:end="441:39"><name pos:start="441:20" pos:end="441:20">h</name><operator pos:start="441:21" pos:end="441:22">-&gt;</operator><name pos:start="441:23" pos:end="441:39">dequant_coeff_pps</name></name> <operator pos:start="441:41" pos:end="441:42">!=</operator> <name pos:start="441:44" pos:end="441:49">pps_id</name></expr>)</condition> <block pos:start="441:52" pos:end="447:5">{<block_content pos:start="443:9" pos:end="445:36">

        <expr_stmt pos:start="443:9" pos:end="443:38"><expr pos:start="443:9" pos:end="443:37"><name pos:start="443:9" pos:end="443:28"><name pos:start="443:9" pos:end="443:9">h</name><operator pos:start="443:10" pos:end="443:11">-&gt;</operator><name pos:start="443:12" pos:end="443:28">dequant_coeff_pps</name></name> <operator pos:start="443:30" pos:end="443:30">=</operator> <name pos:start="443:32" pos:end="443:37">pps_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="445:9" pos:end="445:36"><expr pos:start="445:9" pos:end="445:35"><call pos:start="445:9" pos:end="445:35"><name pos:start="445:9" pos:end="445:32">h264_init_dequant_tables</name><argument_list pos:start="445:33" pos:end="445:35">(<argument pos:start="445:34" pos:end="445:34"><expr pos:start="445:34" pos:end="445:34"><name pos:start="445:34" pos:end="445:34">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="451:5" pos:end="451:60"><expr pos:start="451:5" pos:end="451:59"><name pos:start="451:5" pos:end="451:13">frame_num</name> <operator pos:start="451:15" pos:end="451:15">=</operator> <call pos:start="451:17" pos:end="451:59"><name pos:start="451:17" pos:end="451:24">get_bits</name><argument_list pos:start="451:25" pos:end="451:59">(<argument pos:start="451:26" pos:end="451:31"><expr pos:start="451:26" pos:end="451:31"><operator pos:start="451:26" pos:end="451:26">&amp;</operator><name pos:start="451:27" pos:end="451:31"><name pos:start="451:27" pos:end="451:27">h</name><operator pos:start="451:28" pos:end="451:29">-&gt;</operator><name pos:start="451:30" pos:end="451:31">gb</name></name></expr></argument>, <argument pos:start="451:34" pos:end="451:58"><expr pos:start="451:34" pos:end="451:58"><name pos:start="451:34" pos:end="451:58"><name pos:start="451:34" pos:end="451:34">h</name><operator pos:start="451:35" pos:end="451:36">-&gt;</operator><name pos:start="451:37" pos:end="451:39">sps</name><operator pos:start="451:40" pos:end="451:40">.</operator><name pos:start="451:41" pos:end="451:58">log2_max_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="453:5" pos:end="465:5"><if pos:start="453:5" pos:end="465:5">if <condition pos:start="453:8" pos:end="453:21">(<expr pos:start="453:9" pos:end="453:20"><operator pos:start="453:9" pos:end="453:9">!</operator><name pos:start="453:10" pos:end="453:20">first_slice</name></expr>)</condition> <block pos:start="453:23" pos:end="465:5">{<block_content pos:start="455:9" pos:end="463:9">

        <if_stmt pos:start="455:9" pos:end="463:9"><if pos:start="455:9" pos:end="463:9">if <condition pos:start="455:12" pos:end="455:39">(<expr pos:start="455:13" pos:end="455:38"><name pos:start="455:13" pos:end="455:25"><name pos:start="455:13" pos:end="455:14">h0</name><operator pos:start="455:15" pos:end="455:16">-&gt;</operator><name pos:start="455:17" pos:end="455:25">frame_num</name></name> <operator pos:start="455:27" pos:end="455:28">!=</operator> <name pos:start="455:30" pos:end="455:38">frame_num</name></expr>)</condition> <block pos:start="455:41" pos:end="463:9">{<block_content pos:start="457:13" pos:end="461:39">

            <expr_stmt pos:start="457:13" pos:end="459:45"><expr pos:start="457:13" pos:end="459:44"><call pos:start="457:13" pos:end="459:44"><name pos:start="457:13" pos:end="457:18">av_log</name><argument_list pos:start="457:19" pos:end="459:44">(<argument pos:start="457:20" pos:end="457:27"><expr pos:start="457:20" pos:end="457:27"><name pos:start="457:20" pos:end="457:27"><name pos:start="457:20" pos:end="457:20">h</name><operator pos:start="457:21" pos:end="457:22">-&gt;</operator><name pos:start="457:23" pos:end="457:27">avctx</name></name></expr></argument>, <argument pos:start="457:30" pos:end="457:41"><expr pos:start="457:30" pos:end="457:41"><name pos:start="457:30" pos:end="457:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="457:44" pos:end="457:77"><expr pos:start="457:44" pos:end="457:77"><literal type="string" pos:start="457:44" pos:end="457:77">"Frame num change from %d to %d\n"</literal></expr></argument>,

                   <argument pos:start="459:20" pos:end="459:32"><expr pos:start="459:20" pos:end="459:32"><name pos:start="459:20" pos:end="459:32"><name pos:start="459:20" pos:end="459:21">h0</name><operator pos:start="459:22" pos:end="459:23">-&gt;</operator><name pos:start="459:24" pos:end="459:32">frame_num</name></name></expr></argument>, <argument pos:start="459:35" pos:end="459:43"><expr pos:start="459:35" pos:end="459:43"><name pos:start="459:35" pos:end="459:43">frame_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="461:13" pos:end="461:39">return <expr pos:start="461:20" pos:end="461:38"><name pos:start="461:20" pos:end="461:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="469:5" pos:end="469:27"><expr pos:start="469:5" pos:end="469:26"><name pos:start="469:5" pos:end="469:15"><name pos:start="469:5" pos:end="469:5">h</name><operator pos:start="469:6" pos:end="469:7">-&gt;</operator><name pos:start="469:8" pos:end="469:15">mb_mbaff</name></name>        <operator pos:start="469:24" pos:end="469:24">=</operator> <literal type="number" pos:start="469:26" pos:end="469:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="471:5" pos:end="471:27"><expr pos:start="471:5" pos:end="471:26"><name pos:start="471:5" pos:end="471:19"><name pos:start="471:5" pos:end="471:5">h</name><operator pos:start="471:6" pos:end="471:7">-&gt;</operator><name pos:start="471:8" pos:end="471:19">mb_aff_frame</name></name>    <operator pos:start="471:24" pos:end="471:24">=</operator> <literal type="number" pos:start="471:26" pos:end="471:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="473:5" pos:end="473:47"><expr pos:start="473:5" pos:end="473:46"><name pos:start="473:5" pos:end="473:22">last_pic_structure</name> <operator pos:start="473:24" pos:end="473:24">=</operator> <name pos:start="473:26" pos:end="473:46"><name pos:start="473:26" pos:end="473:27">h0</name><operator pos:start="473:28" pos:end="473:29">-&gt;</operator><name pos:start="473:30" pos:end="473:46">picture_structure</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="475:5" pos:end="475:39"><expr pos:start="475:5" pos:end="475:38"><name pos:start="475:5" pos:end="475:22">last_pic_droppable</name> <operator pos:start="475:24" pos:end="475:24">=</operator> <name pos:start="475:26" pos:end="475:38"><name pos:start="475:26" pos:end="475:27">h0</name><operator pos:start="475:28" pos:end="475:29">-&gt;</operator><name pos:start="475:30" pos:end="475:38">droppable</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="477:5" pos:end="477:45"><expr pos:start="477:5" pos:end="477:44"><name pos:start="477:5" pos:end="477:13">droppable</name>          <operator pos:start="477:24" pos:end="477:24">=</operator> <name pos:start="477:26" pos:end="477:39"><name pos:start="477:26" pos:end="477:26">h</name><operator pos:start="477:27" pos:end="477:28">-&gt;</operator><name pos:start="477:29" pos:end="477:39">nal_ref_idc</name></name> <operator pos:start="477:41" pos:end="477:42">==</operator> <literal type="number" pos:start="477:44" pos:end="477:44">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="479:5" pos:end="511:5"><if pos:start="479:5" pos:end="483:5">if <condition pos:start="479:8" pos:end="479:35">(<expr pos:start="479:9" pos:end="479:34"><name pos:start="479:9" pos:end="479:34"><name pos:start="479:9" pos:end="479:9">h</name><operator pos:start="479:10" pos:end="479:11">-&gt;</operator><name pos:start="479:12" pos:end="479:14">sps</name><operator pos:start="479:15" pos:end="479:15">.</operator><name pos:start="479:16" pos:end="479:34">frame_mbs_only_flag</name></name></expr>)</condition> <block pos:start="479:37" pos:end="483:5">{<block_content pos:start="481:9" pos:end="481:39">

        <expr_stmt pos:start="481:9" pos:end="481:39"><expr pos:start="481:9" pos:end="481:38"><name pos:start="481:9" pos:end="481:25">picture_structure</name> <operator pos:start="481:27" pos:end="481:27">=</operator> <name pos:start="481:29" pos:end="481:38">PICT_FRAME</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="483:7" pos:end="511:5">else <block pos:start="483:12" pos:end="511:5">{<block_content pos:start="485:9" pos:end="509:9">

        <if_stmt pos:start="485:9" pos:end="491:9"><if pos:start="485:9" pos:end="491:9">if <condition pos:start="485:12" pos:end="485:81">(<expr pos:start="485:13" pos:end="485:80"><operator pos:start="485:13" pos:end="485:13">!</operator><name pos:start="485:14" pos:end="485:45"><name pos:start="485:14" pos:end="485:14">h</name><operator pos:start="485:15" pos:end="485:16">-&gt;</operator><name pos:start="485:17" pos:end="485:19">sps</name><operator pos:start="485:20" pos:end="485:20">.</operator><name pos:start="485:21" pos:end="485:45">direct_8x8_inference_flag</name></name> <operator pos:start="485:47" pos:end="485:48">&amp;&amp;</operator> <name pos:start="485:50" pos:end="485:59">slice_type</name> <operator pos:start="485:61" pos:end="485:62">==</operator> <name pos:start="485:64" pos:end="485:80">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="485:83" pos:end="491:9">{<block_content pos:start="487:13" pos:end="489:22">

            <expr_stmt pos:start="487:13" pos:end="487:117"><expr pos:start="487:13" pos:end="487:116"><call pos:start="487:13" pos:end="487:116"><name pos:start="487:13" pos:end="487:18">av_log</name><argument_list pos:start="487:19" pos:end="487:116">(<argument pos:start="487:20" pos:end="487:27"><expr pos:start="487:20" pos:end="487:27"><name pos:start="487:20" pos:end="487:27"><name pos:start="487:20" pos:end="487:20">h</name><operator pos:start="487:21" pos:end="487:22">-&gt;</operator><name pos:start="487:23" pos:end="487:27">avctx</name></name></expr></argument>, <argument pos:start="487:30" pos:end="487:41"><expr pos:start="487:30" pos:end="487:41"><name pos:start="487:30" pos:end="487:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="487:44" pos:end="487:115"><expr pos:start="487:44" pos:end="487:115"><literal type="string" pos:start="487:44" pos:end="487:115">"This stream was generated by a broken encoder, invalid 8x8 inference\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="489:13" pos:end="489:22">return <expr pos:start="489:20" pos:end="489:21"><operator pos:start="489:20" pos:end="489:20">-</operator><literal type="number" pos:start="489:21" pos:end="489:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="493:9" pos:end="493:43"><expr pos:start="493:9" pos:end="493:42"><name pos:start="493:9" pos:end="493:22">field_pic_flag</name> <operator pos:start="493:24" pos:end="493:24">=</operator> <call pos:start="493:26" pos:end="493:42"><name pos:start="493:26" pos:end="493:34">get_bits1</name><argument_list pos:start="493:35" pos:end="493:42">(<argument pos:start="493:36" pos:end="493:41"><expr pos:start="493:36" pos:end="493:41"><operator pos:start="493:36" pos:end="493:36">&amp;</operator><name pos:start="493:37" pos:end="493:41"><name pos:start="493:37" pos:end="493:37">h</name><operator pos:start="493:38" pos:end="493:39">-&gt;</operator><name pos:start="493:40" pos:end="493:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="497:9" pos:end="509:9"><if pos:start="497:9" pos:end="503:9">if <condition pos:start="497:12" pos:end="497:27">(<expr pos:start="497:13" pos:end="497:26"><name pos:start="497:13" pos:end="497:26">field_pic_flag</name></expr>)</condition> <block pos:start="497:29" pos:end="503:9">{<block_content pos:start="499:13" pos:end="501:67">

            <expr_stmt pos:start="499:13" pos:end="499:50"><expr pos:start="499:13" pos:end="499:49"><name pos:start="499:13" pos:end="499:29">bottom_field_flag</name> <operator pos:start="499:31" pos:end="499:31">=</operator> <call pos:start="499:33" pos:end="499:49"><name pos:start="499:33" pos:end="499:41">get_bits1</name><argument_list pos:start="499:42" pos:end="499:49">(<argument pos:start="499:43" pos:end="499:48"><expr pos:start="499:43" pos:end="499:48"><operator pos:start="499:43" pos:end="499:43">&amp;</operator><name pos:start="499:44" pos:end="499:48"><name pos:start="499:44" pos:end="499:44">h</name><operator pos:start="499:45" pos:end="499:46">-&gt;</operator><name pos:start="499:47" pos:end="499:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="501:13" pos:end="501:67"><expr pos:start="501:13" pos:end="501:66"><name pos:start="501:13" pos:end="501:29">picture_structure</name> <operator pos:start="501:31" pos:end="501:31">=</operator> <name pos:start="501:33" pos:end="501:46">PICT_TOP_FIELD</name> <operator pos:start="501:48" pos:end="501:48">+</operator> <name pos:start="501:50" pos:end="501:66">bottom_field_flag</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="503:11" pos:end="509:9">else <block pos:start="503:16" pos:end="509:9">{<block_content pos:start="505:13" pos:end="507:49">

            <expr_stmt pos:start="505:13" pos:end="505:43"><expr pos:start="505:13" pos:end="505:42"><name pos:start="505:13" pos:end="505:29">picture_structure</name> <operator pos:start="505:31" pos:end="505:31">=</operator> <name pos:start="505:33" pos:end="505:42">PICT_FRAME</name></expr>;</expr_stmt>

            <expr_stmt pos:start="507:13" pos:end="507:49"><expr pos:start="507:13" pos:end="507:48"><name pos:start="507:13" pos:end="507:27"><name pos:start="507:13" pos:end="507:13">h</name><operator pos:start="507:14" pos:end="507:15">-&gt;</operator><name pos:start="507:16" pos:end="507:27">mb_aff_frame</name></name>      <operator pos:start="507:34" pos:end="507:34">=</operator> <name pos:start="507:36" pos:end="507:48"><name pos:start="507:36" pos:end="507:36">h</name><operator pos:start="507:37" pos:end="507:38">-&gt;</operator><name pos:start="507:39" pos:end="507:41">sps</name><operator pos:start="507:42" pos:end="507:42">.</operator><name pos:start="507:43" pos:end="507:48">mb_aff</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="513:5" pos:end="539:5"><if pos:start="513:5" pos:end="539:5">if <condition pos:start="513:8" pos:end="513:26">(<expr pos:start="513:9" pos:end="513:25"><name pos:start="513:9" pos:end="513:25"><name pos:start="513:9" pos:end="513:10">h0</name><operator pos:start="513:11" pos:end="513:12">-&gt;</operator><name pos:start="513:13" pos:end="513:25">current_slice</name></name></expr>)</condition> <block pos:start="513:28" pos:end="539:5">{<block_content pos:start="515:9" pos:end="537:9">

        <if_stmt pos:start="515:9" pos:end="537:9"><if pos:start="515:9" pos:end="527:9">if <condition pos:start="515:12" pos:end="517:44">(<expr pos:start="515:13" pos:end="517:43"><name pos:start="515:13" pos:end="515:30">last_pic_structure</name> <operator pos:start="515:32" pos:end="515:33">!=</operator> <name pos:start="515:35" pos:end="515:51">picture_structure</name> <operator pos:start="515:53" pos:end="515:54">||</operator>

            <name pos:start="517:13" pos:end="517:30">last_pic_droppable</name> <operator pos:start="517:32" pos:end="517:33">!=</operator> <name pos:start="517:35" pos:end="517:43">droppable</name></expr>)</condition> <block pos:start="517:46" pos:end="527:9">{<block_content pos:start="519:13" pos:end="525:39">

            <expr_stmt pos:start="519:13" pos:end="523:61"><expr pos:start="519:13" pos:end="523:60"><call pos:start="519:13" pos:end="523:60"><name pos:start="519:13" pos:end="519:18">av_log</name><argument_list pos:start="519:19" pos:end="523:60">(<argument pos:start="519:20" pos:end="519:27"><expr pos:start="519:20" pos:end="519:27"><name pos:start="519:20" pos:end="519:27"><name pos:start="519:20" pos:end="519:20">h</name><operator pos:start="519:21" pos:end="519:22">-&gt;</operator><name pos:start="519:23" pos:end="519:27">avctx</name></name></expr></argument>, <argument pos:start="519:30" pos:end="519:41"><expr pos:start="519:30" pos:end="519:41"><name pos:start="519:30" pos:end="519:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="521:20" pos:end="521:83"><expr pos:start="521:20" pos:end="521:83"><literal type="string" pos:start="521:20" pos:end="521:83">"Changing field mode (%d -&gt; %d) between slices is not allowed\n"</literal></expr></argument>,

                   <argument pos:start="523:20" pos:end="523:37"><expr pos:start="523:20" pos:end="523:37"><name pos:start="523:20" pos:end="523:37">last_pic_structure</name></expr></argument>, <argument pos:start="523:40" pos:end="523:59"><expr pos:start="523:40" pos:end="523:59"><name pos:start="523:40" pos:end="523:59"><name pos:start="523:40" pos:end="523:40">h</name><operator pos:start="523:41" pos:end="523:42">-&gt;</operator><name pos:start="523:43" pos:end="523:59">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="525:13" pos:end="525:39">return <expr pos:start="525:20" pos:end="525:38"><name pos:start="525:20" pos:end="525:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="527:11" pos:end="537:9">else if <condition pos:start="527:19" pos:end="527:36">(<expr pos:start="527:20" pos:end="527:35"><operator pos:start="527:20" pos:end="527:20">!</operator><name pos:start="527:21" pos:end="527:35"><name pos:start="527:21" pos:end="527:22">h0</name><operator pos:start="527:23" pos:end="527:24">-&gt;</operator><name pos:start="527:25" pos:end="527:35">cur_pic_ptr</name></name></expr>)</condition> <block pos:start="527:38" pos:end="537:9">{<block_content pos:start="529:13" pos:end="535:39">

            <expr_stmt pos:start="529:13" pos:end="533:42"><expr pos:start="529:13" pos:end="533:41"><call pos:start="529:13" pos:end="533:41"><name pos:start="529:13" pos:end="529:18">av_log</name><argument_list pos:start="529:19" pos:end="533:41">(<argument pos:start="529:20" pos:end="529:27"><expr pos:start="529:20" pos:end="529:27"><name pos:start="529:20" pos:end="529:27"><name pos:start="529:20" pos:end="529:20">h</name><operator pos:start="529:21" pos:end="529:22">-&gt;</operator><name pos:start="529:23" pos:end="529:27">avctx</name></name></expr></argument>, <argument pos:start="529:30" pos:end="529:41"><expr pos:start="529:30" pos:end="529:41"><name pos:start="529:30" pos:end="529:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="531:20" pos:end="531:52"><expr pos:start="531:20" pos:end="531:52"><literal type="string" pos:start="531:20" pos:end="531:52">"unset cur_pic_ptr on slice %d\n"</literal></expr></argument>,

                   <argument pos:start="533:20" pos:end="533:40"><expr pos:start="533:20" pos:end="533:40"><name pos:start="533:20" pos:end="533:36"><name pos:start="533:20" pos:end="533:21">h0</name><operator pos:start="533:22" pos:end="533:23">-&gt;</operator><name pos:start="533:24" pos:end="533:36">current_slice</name></name> <operator pos:start="533:38" pos:end="533:38">+</operator> <literal type="number" pos:start="533:40" pos:end="533:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="535:13" pos:end="535:39">return <expr pos:start="535:20" pos:end="535:38"><name pos:start="535:20" pos:end="535:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="543:5" pos:end="543:45"><expr pos:start="543:5" pos:end="543:44"><name pos:start="543:5" pos:end="543:24"><name pos:start="543:5" pos:end="543:5">h</name><operator pos:start="543:6" pos:end="543:7">-&gt;</operator><name pos:start="543:8" pos:end="543:24">picture_structure</name></name> <operator pos:start="543:26" pos:end="543:26">=</operator> <name pos:start="543:28" pos:end="543:44">picture_structure</name></expr>;</expr_stmt>

    <expr_stmt pos:start="545:5" pos:end="545:37"><expr pos:start="545:5" pos:end="545:36"><name pos:start="545:5" pos:end="545:16"><name pos:start="545:5" pos:end="545:5">h</name><operator pos:start="545:6" pos:end="545:7">-&gt;</operator><name pos:start="545:8" pos:end="545:16">droppable</name></name>         <operator pos:start="545:26" pos:end="545:26">=</operator> <name pos:start="545:28" pos:end="545:36">droppable</name></expr>;</expr_stmt>

    <expr_stmt pos:start="547:5" pos:end="547:37"><expr pos:start="547:5" pos:end="547:36"><name pos:start="547:5" pos:end="547:16"><name pos:start="547:5" pos:end="547:5">h</name><operator pos:start="547:6" pos:end="547:7">-&gt;</operator><name pos:start="547:8" pos:end="547:16">frame_num</name></name>         <operator pos:start="547:26" pos:end="547:26">=</operator> <name pos:start="547:28" pos:end="547:36">frame_num</name></expr>;</expr_stmt>

    <expr_stmt pos:start="549:5" pos:end="549:64"><expr pos:start="549:5" pos:end="549:63"><name pos:start="549:5" pos:end="549:29"><name pos:start="549:5" pos:end="549:5">h</name><operator pos:start="549:6" pos:end="549:7">-&gt;</operator><name pos:start="549:8" pos:end="549:29">mb_field_decoding_flag</name></name> <operator pos:start="549:31" pos:end="549:31">=</operator> <name pos:start="549:33" pos:end="549:49">picture_structure</name> <operator pos:start="549:51" pos:end="549:52">!=</operator> <name pos:start="549:54" pos:end="549:63">PICT_FRAME</name></expr>;</expr_stmt>



    <if_stmt pos:start="553:5" pos:end="907:5"><if pos:start="553:5" pos:end="907:5">if <condition pos:start="553:8" pos:end="553:31">(<expr pos:start="553:9" pos:end="553:30"><name pos:start="553:9" pos:end="553:25"><name pos:start="553:9" pos:end="553:10">h0</name><operator pos:start="553:11" pos:end="553:12">-&gt;</operator><name pos:start="553:13" pos:end="553:25">current_slice</name></name> <operator pos:start="553:27" pos:end="553:28">==</operator> <literal type="number" pos:start="553:30" pos:end="553:30">0</literal></expr>)</condition> <block pos:start="553:33" pos:end="907:5">{<block_content pos:start="559:9" pos:end="905:33">

        <comment type="block" pos:start="555:9" pos:end="557:44">/* Shorten frame num gaps so we don't have to allocate reference

         * frames just to throw them away */</comment>

        <if_stmt pos:start="559:9" pos:end="587:9"><if pos:start="559:9" pos:end="587:9">if <condition pos:start="559:12" pos:end="559:46">(<expr pos:start="559:13" pos:end="559:45"><name pos:start="559:13" pos:end="559:24"><name pos:start="559:13" pos:end="559:13">h</name><operator pos:start="559:14" pos:end="559:15">-&gt;</operator><name pos:start="559:16" pos:end="559:24">frame_num</name></name> <operator pos:start="559:26" pos:end="559:27">!=</operator> <name pos:start="559:29" pos:end="559:45"><name pos:start="559:29" pos:end="559:29">h</name><operator pos:start="559:30" pos:end="559:31">-&gt;</operator><name pos:start="559:32" pos:end="559:45">prev_frame_num</name></name></expr>)</condition> <block pos:start="559:48" pos:end="587:9">{<block_content pos:start="561:13" pos:end="585:13">

            <decl_stmt pos:start="561:13" pos:end="561:58"><decl pos:start="561:13" pos:end="561:57"><type pos:start="561:13" pos:end="561:15"><name pos:start="561:13" pos:end="561:15">int</name></type> <name pos:start="561:17" pos:end="561:37">unwrap_prev_frame_num</name> <init pos:start="561:39" pos:end="561:57">= <expr pos:start="561:41" pos:end="561:57"><name pos:start="561:41" pos:end="561:57"><name pos:start="561:41" pos:end="561:41">h</name><operator pos:start="561:42" pos:end="561:43">-&gt;</operator><name pos:start="561:44" pos:end="561:57">prev_frame_num</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="563:13" pos:end="563:71"><decl pos:start="563:13" pos:end="563:70"><type pos:start="563:13" pos:end="563:15"><name pos:start="563:13" pos:end="563:15">int</name></type> <name pos:start="563:17" pos:end="563:29">max_frame_num</name>         <init pos:start="563:39" pos:end="563:70">= <expr pos:start="563:41" pos:end="563:70"><literal type="number" pos:start="563:41" pos:end="563:41">1</literal> <operator pos:start="563:43" pos:end="563:44">&lt;&lt;</operator> <name pos:start="563:46" pos:end="563:70"><name pos:start="563:46" pos:end="563:46">h</name><operator pos:start="563:47" pos:end="563:48">-&gt;</operator><name pos:start="563:49" pos:end="563:51">sps</name><operator pos:start="563:52" pos:end="563:52">.</operator><name pos:start="563:53" pos:end="563:70">log2_max_frame_num</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="567:13" pos:end="569:55"><if pos:start="567:13" pos:end="569:55">if <condition pos:start="567:16" pos:end="567:53">(<expr pos:start="567:17" pos:end="567:52"><name pos:start="567:17" pos:end="567:37">unwrap_prev_frame_num</name> <operator pos:start="567:39" pos:end="567:39">&gt;</operator> <name pos:start="567:41" pos:end="567:52"><name pos:start="567:41" pos:end="567:41">h</name><operator pos:start="567:42" pos:end="567:43">-&gt;</operator><name pos:start="567:44" pos:end="567:52">frame_num</name></name></expr>)</condition><block type="pseudo" pos:start="569:17" pos:end="569:55"><block_content pos:start="569:17" pos:end="569:55">

                <expr_stmt pos:start="569:17" pos:end="569:55"><expr pos:start="569:17" pos:end="569:54"><name pos:start="569:17" pos:end="569:37">unwrap_prev_frame_num</name> <operator pos:start="569:39" pos:end="569:40">-=</operator> <name pos:start="569:42" pos:end="569:54">max_frame_num</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="573:13" pos:end="585:13"><if pos:start="573:13" pos:end="585:13">if <condition pos:start="573:16" pos:end="573:80">(<expr pos:start="573:17" pos:end="573:79"><operator pos:start="573:17" pos:end="573:17">(</operator><name pos:start="573:18" pos:end="573:29"><name pos:start="573:18" pos:end="573:18">h</name><operator pos:start="573:19" pos:end="573:20">-&gt;</operator><name pos:start="573:21" pos:end="573:29">frame_num</name></name> <operator pos:start="573:31" pos:end="573:31">-</operator> <name pos:start="573:33" pos:end="573:53">unwrap_prev_frame_num</name><operator pos:start="573:54" pos:end="573:54">)</operator> <operator pos:start="573:56" pos:end="573:56">&gt;</operator> <name pos:start="573:58" pos:end="573:79"><name pos:start="573:58" pos:end="573:58">h</name><operator pos:start="573:59" pos:end="573:60">-&gt;</operator><name pos:start="573:61" pos:end="573:63">sps</name><operator pos:start="573:64" pos:end="573:64">.</operator><name pos:start="573:65" pos:end="573:79">ref_frame_count</name></name></expr>)</condition> <block pos:start="573:82" pos:end="585:13">{<block_content pos:start="575:17" pos:end="583:58">

                <expr_stmt pos:start="575:17" pos:end="575:84"><expr pos:start="575:17" pos:end="575:83"><name pos:start="575:17" pos:end="575:37">unwrap_prev_frame_num</name> <operator pos:start="575:39" pos:end="575:39">=</operator> <operator pos:start="575:41" pos:end="575:41">(</operator><name pos:start="575:42" pos:end="575:53"><name pos:start="575:42" pos:end="575:42">h</name><operator pos:start="575:43" pos:end="575:44">-&gt;</operator><name pos:start="575:45" pos:end="575:53">frame_num</name></name> <operator pos:start="575:55" pos:end="575:55">-</operator> <name pos:start="575:57" pos:end="575:78"><name pos:start="575:57" pos:end="575:57">h</name><operator pos:start="575:58" pos:end="575:59">-&gt;</operator><name pos:start="575:60" pos:end="575:62">sps</name><operator pos:start="575:63" pos:end="575:63">.</operator><name pos:start="575:64" pos:end="575:78">ref_frame_count</name></name><operator pos:start="575:79" pos:end="575:79">)</operator> <operator pos:start="575:81" pos:end="575:81">-</operator> <literal type="number" pos:start="575:83" pos:end="575:83">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="577:17" pos:end="579:59"><if pos:start="577:17" pos:end="579:59">if <condition pos:start="577:20" pos:end="577:46">(<expr pos:start="577:21" pos:end="577:45"><name pos:start="577:21" pos:end="577:41">unwrap_prev_frame_num</name> <operator pos:start="577:43" pos:end="577:43">&lt;</operator> <literal type="number" pos:start="577:45" pos:end="577:45">0</literal></expr>)</condition><block type="pseudo" pos:start="579:21" pos:end="579:59"><block_content pos:start="579:21" pos:end="579:59">

                    <expr_stmt pos:start="579:21" pos:end="579:59"><expr pos:start="579:21" pos:end="579:58"><name pos:start="579:21" pos:end="579:41">unwrap_prev_frame_num</name> <operator pos:start="579:43" pos:end="579:44">+=</operator> <name pos:start="579:46" pos:end="579:58">max_frame_num</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="583:17" pos:end="583:58"><expr pos:start="583:17" pos:end="583:57"><name pos:start="583:17" pos:end="583:33"><name pos:start="583:17" pos:end="583:17">h</name><operator pos:start="583:18" pos:end="583:19">-&gt;</operator><name pos:start="583:20" pos:end="583:33">prev_frame_num</name></name> <operator pos:start="583:35" pos:end="583:35">=</operator> <name pos:start="583:37" pos:end="583:57">unwrap_prev_frame_num</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="591:9" pos:end="599:51">/* See if we have a decoded first field looking for a pair...

         * Here, we're using that to see if we should mark previously

         * decode frames as "finished".

         * We have to do that before the "dummy" in-between frame allocation,

         * since that can modify h-&gt;cur_pic_ptr. */</comment>

        <if_stmt pos:start="601:9" pos:end="701:9"><if pos:start="601:9" pos:end="701:9">if <condition pos:start="601:12" pos:end="601:28">(<expr pos:start="601:13" pos:end="601:27"><name pos:start="601:13" pos:end="601:27"><name pos:start="601:13" pos:end="601:14">h0</name><operator pos:start="601:15" pos:end="601:16">-&gt;</operator><name pos:start="601:17" pos:end="601:27">first_field</name></name></expr>)</condition> <block pos:start="601:30" pos:end="701:9">{<block_content pos:start="603:13" pos:end="699:13">

            <expr_stmt pos:start="603:13" pos:end="603:36"><expr pos:start="603:13" pos:end="603:35"><call pos:start="603:13" pos:end="603:35"><name pos:start="603:13" pos:end="603:18">assert</name><argument_list pos:start="603:19" pos:end="603:35">(<argument pos:start="603:20" pos:end="603:34"><expr pos:start="603:20" pos:end="603:34"><name pos:start="603:20" pos:end="603:34"><name pos:start="603:20" pos:end="603:21">h0</name><operator pos:start="603:22" pos:end="603:23">-&gt;</operator><name pos:start="603:24" pos:end="603:34">cur_pic_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="605:13" pos:end="605:46"><expr pos:start="605:13" pos:end="605:45"><call pos:start="605:13" pos:end="605:45"><name pos:start="605:13" pos:end="605:18">assert</name><argument_list pos:start="605:19" pos:end="605:45">(<argument pos:start="605:20" pos:end="605:44"><expr pos:start="605:20" pos:end="605:44"><name pos:start="605:20" pos:end="605:44"><name pos:start="605:20" pos:end="605:21">h0</name><operator pos:start="605:22" pos:end="605:23">-&gt;</operator><name pos:start="605:24" pos:end="605:34">cur_pic_ptr</name><operator pos:start="605:35" pos:end="605:36">-&gt;</operator><name pos:start="605:37" pos:end="605:37">f</name><operator pos:start="605:38" pos:end="605:38">.</operator><name pos:start="605:39" pos:end="605:41">buf</name><index pos:start="605:42" pos:end="605:44">[<expr pos:start="605:43" pos:end="605:43"><literal type="number" pos:start="605:43" pos:end="605:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="607:13" pos:end="607:66"><expr pos:start="607:13" pos:end="607:65"><call pos:start="607:13" pos:end="607:65"><name pos:start="607:13" pos:end="607:18">assert</name><argument_list pos:start="607:19" pos:end="607:65">(<argument pos:start="607:20" pos:end="607:64"><expr pos:start="607:20" pos:end="607:64"><name pos:start="607:20" pos:end="607:45"><name pos:start="607:20" pos:end="607:21">h0</name><operator pos:start="607:22" pos:end="607:23">-&gt;</operator><name pos:start="607:24" pos:end="607:34">cur_pic_ptr</name><operator pos:start="607:35" pos:end="607:36">-&gt;</operator><name pos:start="607:37" pos:end="607:45">reference</name></name> <operator pos:start="607:47" pos:end="607:48">!=</operator> <name pos:start="607:50" pos:end="607:64">DELAYED_PIC_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="611:13" pos:end="611:51">/* Mark old field/frame as completed */</comment>

            <if_stmt pos:start="613:13" pos:end="619:13"><if pos:start="613:13" pos:end="619:13">if <condition pos:start="613:16" pos:end="613:55">(<expr pos:start="613:17" pos:end="613:54"><name pos:start="613:17" pos:end="613:41"><name pos:start="613:17" pos:end="613:18">h0</name><operator pos:start="613:19" pos:end="613:20">-&gt;</operator><name pos:start="613:21" pos:end="613:31">cur_pic_ptr</name><operator pos:start="613:32" pos:end="613:33">-&gt;</operator><name pos:start="613:34" pos:end="613:35">tf</name><operator pos:start="613:36" pos:end="613:36">.</operator><name pos:start="613:37" pos:end="613:41">owner</name></name> <operator pos:start="613:43" pos:end="613:44">==</operator> <name pos:start="613:46" pos:end="613:54"><name pos:start="613:46" pos:end="613:47">h0</name><operator pos:start="613:48" pos:end="613:49">-&gt;</operator><name pos:start="613:50" pos:end="613:54">avctx</name></name></expr>)</condition> <block pos:start="613:57" pos:end="619:13">{<block_content pos:start="615:17" pos:end="617:83">

                <expr_stmt pos:start="615:17" pos:end="617:83"><expr pos:start="615:17" pos:end="617:82"><call pos:start="615:17" pos:end="617:82"><name pos:start="615:17" pos:end="615:41">ff_thread_report_progress</name><argument_list pos:start="615:42" pos:end="617:82">(<argument pos:start="615:43" pos:end="615:62"><expr pos:start="615:43" pos:end="615:62"><operator pos:start="615:43" pos:end="615:43">&amp;</operator><name pos:start="615:44" pos:end="615:62"><name pos:start="615:44" pos:end="615:45">h0</name><operator pos:start="615:46" pos:end="615:47">-&gt;</operator><name pos:start="615:48" pos:end="615:58">cur_pic_ptr</name><operator pos:start="615:59" pos:end="615:60">-&gt;</operator><name pos:start="615:61" pos:end="615:62">tf</name></name></expr></argument>, <argument pos:start="615:65" pos:end="615:71"><expr pos:start="615:65" pos:end="615:71"><name pos:start="615:65" pos:end="615:71">INT_MAX</name></expr></argument>,

                                          <argument pos:start="617:43" pos:end="617:81"><expr pos:start="617:43" pos:end="617:81"><name pos:start="617:43" pos:end="617:60">last_pic_structure</name> <operator pos:start="617:62" pos:end="617:63">==</operator> <name pos:start="617:65" pos:end="617:81">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="623:13" pos:end="623:66">/* figure out if we have a complementary field pair */</comment>

            <if_stmt pos:start="625:13" pos:end="699:13"><if pos:start="625:13" pos:end="639:13">if <condition pos:start="625:16" pos:end="625:80">(<expr pos:start="625:17" pos:end="625:79"><operator pos:start="625:17" pos:end="625:17">!</operator><call pos:start="625:18" pos:end="625:33"><name pos:start="625:18" pos:end="625:30">FIELD_PICTURE</name><argument_list pos:start="625:31" pos:end="625:33">(<argument pos:start="625:32" pos:end="625:32"><expr pos:start="625:32" pos:end="625:32"><name pos:start="625:32" pos:end="625:32">h</name></expr></argument>)</argument_list></call> <operator pos:start="625:35" pos:end="625:36">||</operator> <name pos:start="625:38" pos:end="625:57"><name pos:start="625:38" pos:end="625:38">h</name><operator pos:start="625:39" pos:end="625:40">-&gt;</operator><name pos:start="625:41" pos:end="625:57">picture_structure</name></name> <operator pos:start="625:59" pos:end="625:60">==</operator> <name pos:start="625:62" pos:end="625:79">last_pic_structure</name></expr>)</condition> <block pos:start="625:82" pos:end="639:13">{<block_content pos:start="631:17" pos:end="637:17">

                <comment type="block" pos:start="627:17" pos:end="629:61">/* Previous field is unmatched. Don't display it, but let it

                 * remain for reference if marked as such. */</comment>

                <if_stmt pos:start="631:17" pos:end="637:17"><if pos:start="631:17" pos:end="637:17">if <condition pos:start="631:20" pos:end="631:53">(<expr pos:start="631:21" pos:end="631:52"><name pos:start="631:21" pos:end="631:38">last_pic_structure</name> <operator pos:start="631:40" pos:end="631:41">!=</operator> <name pos:start="631:43" pos:end="631:52">PICT_FRAME</name></expr>)</condition> <block pos:start="631:55" pos:end="637:17">{<block_content pos:start="633:21" pos:end="635:84">

                    <expr_stmt pos:start="633:21" pos:end="635:84"><expr pos:start="633:21" pos:end="635:83"><call pos:start="633:21" pos:end="635:83"><name pos:start="633:21" pos:end="633:45">ff_thread_report_progress</name><argument_list pos:start="633:46" pos:end="635:83">(<argument pos:start="633:47" pos:end="633:66"><expr pos:start="633:47" pos:end="633:66"><operator pos:start="633:47" pos:end="633:47">&amp;</operator><name pos:start="633:48" pos:end="633:66"><name pos:start="633:48" pos:end="633:49">h0</name><operator pos:start="633:50" pos:end="633:51">-&gt;</operator><name pos:start="633:52" pos:end="633:62">cur_pic_ptr</name><operator pos:start="633:63" pos:end="633:64">-&gt;</operator><name pos:start="633:65" pos:end="633:66">tf</name></name></expr></argument>, <argument pos:start="633:69" pos:end="633:75"><expr pos:start="633:69" pos:end="633:75"><name pos:start="633:69" pos:end="633:75">INT_MAX</name></expr></argument>,

                                              <argument pos:start="635:47" pos:end="635:82"><expr pos:start="635:47" pos:end="635:82"><name pos:start="635:47" pos:end="635:64">last_pic_structure</name> <operator pos:start="635:66" pos:end="635:67">==</operator> <name pos:start="635:69" pos:end="635:82">PICT_TOP_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="639:15" pos:end="699:13">else <block pos:start="639:20" pos:end="699:13">{<block_content pos:start="641:17" pos:end="697:17">

                <if_stmt pos:start="641:17" pos:end="697:17"><if pos:start="641:17" pos:end="659:17">if <condition pos:start="641:20" pos:end="641:63">(<expr pos:start="641:21" pos:end="641:62"><name pos:start="641:21" pos:end="641:46"><name pos:start="641:21" pos:end="641:22">h0</name><operator pos:start="641:23" pos:end="641:24">-&gt;</operator><name pos:start="641:25" pos:end="641:35">cur_pic_ptr</name><operator pos:start="641:36" pos:end="641:37">-&gt;</operator><name pos:start="641:38" pos:end="641:46">frame_num</name></name> <operator pos:start="641:48" pos:end="641:49">!=</operator> <name pos:start="641:51" pos:end="641:62"><name pos:start="641:51" pos:end="641:51">h</name><operator pos:start="641:52" pos:end="641:53">-&gt;</operator><name pos:start="641:54" pos:end="641:62">frame_num</name></name></expr>)</condition> <block pos:start="641:65" pos:end="659:17">{<block_content pos:start="651:21" pos:end="657:21">

                    <comment type="block" pos:start="643:21" pos:end="649:35">/* This and previous field were reference, but had

                     * different frame_nums. Consider this field first in

                     * pair. Throw away previous field except for reference

                     * purposes. */</comment>

                    <if_stmt pos:start="651:21" pos:end="657:21"><if pos:start="651:21" pos:end="657:21">if <condition pos:start="651:24" pos:end="651:57">(<expr pos:start="651:25" pos:end="651:56"><name pos:start="651:25" pos:end="651:42">last_pic_structure</name> <operator pos:start="651:44" pos:end="651:45">!=</operator> <name pos:start="651:47" pos:end="651:56">PICT_FRAME</name></expr>)</condition> <block pos:start="651:59" pos:end="657:21">{<block_content pos:start="653:25" pos:end="655:88">

                        <expr_stmt pos:start="653:25" pos:end="655:88"><expr pos:start="653:25" pos:end="655:87"><call pos:start="653:25" pos:end="655:87"><name pos:start="653:25" pos:end="653:49">ff_thread_report_progress</name><argument_list pos:start="653:50" pos:end="655:87">(<argument pos:start="653:51" pos:end="653:70"><expr pos:start="653:51" pos:end="653:70"><operator pos:start="653:51" pos:end="653:51">&amp;</operator><name pos:start="653:52" pos:end="653:70"><name pos:start="653:52" pos:end="653:53">h0</name><operator pos:start="653:54" pos:end="653:55">-&gt;</operator><name pos:start="653:56" pos:end="653:66">cur_pic_ptr</name><operator pos:start="653:67" pos:end="653:68">-&gt;</operator><name pos:start="653:69" pos:end="653:70">tf</name></name></expr></argument>, <argument pos:start="653:73" pos:end="653:79"><expr pos:start="653:73" pos:end="653:79"><name pos:start="653:73" pos:end="653:79">INT_MAX</name></expr></argument>,

                                                  <argument pos:start="655:51" pos:end="655:86"><expr pos:start="655:51" pos:end="655:86"><name pos:start="655:51" pos:end="655:68">last_pic_structure</name> <operator pos:start="655:70" pos:end="655:71">==</operator> <name pos:start="655:73" pos:end="655:86">PICT_TOP_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="659:19" pos:end="697:17">else <block pos:start="659:24" pos:end="697:17">{<block_content pos:start="663:21" pos:end="695:21">

                    <comment type="block" pos:start="661:21" pos:end="661:60">/* Second field in complementary pair */</comment>

                    <if_stmt pos:start="663:21" pos:end="695:21"><if pos:start="663:21" pos:end="683:21">if <condition pos:start="663:24" pos:end="669:68">(<expr pos:start="663:25" pos:end="669:67"><operator pos:start="663:25" pos:end="663:25">!</operator><operator pos:start="663:26" pos:end="663:26">(</operator><operator pos:start="663:27" pos:end="663:27">(</operator><name pos:start="663:28" pos:end="663:45">last_pic_structure</name>   <operator pos:start="663:49" pos:end="663:50">==</operator> <name pos:start="663:52" pos:end="663:65">PICT_TOP_FIELD</name> <operator pos:start="663:67" pos:end="663:68">&amp;&amp;</operator>

                           <name pos:start="665:28" pos:end="665:47"><name pos:start="665:28" pos:end="665:28">h</name><operator pos:start="665:29" pos:end="665:30">-&gt;</operator><name pos:start="665:31" pos:end="665:47">picture_structure</name></name> <operator pos:start="665:49" pos:end="665:50">==</operator> <name pos:start="665:52" pos:end="665:68">PICT_BOTTOM_FIELD</name><operator pos:start="665:69" pos:end="665:69">)</operator> <operator pos:start="665:71" pos:end="665:72">||</operator>

                          <operator pos:start="667:27" pos:end="667:27">(</operator><name pos:start="667:28" pos:end="667:45">last_pic_structure</name>   <operator pos:start="667:49" pos:end="667:50">==</operator> <name pos:start="667:52" pos:end="667:68">PICT_BOTTOM_FIELD</name> <operator pos:start="667:70" pos:end="667:71">&amp;&amp;</operator>

                           <name pos:start="669:28" pos:end="669:47"><name pos:start="669:28" pos:end="669:28">h</name><operator pos:start="669:29" pos:end="669:30">-&gt;</operator><name pos:start="669:31" pos:end="669:47">picture_structure</name></name> <operator pos:start="669:49" pos:end="669:50">==</operator> <name pos:start="669:52" pos:end="669:65">PICT_TOP_FIELD</name><operator pos:start="669:66" pos:end="669:66">)</operator><operator pos:start="669:67" pos:end="669:67">)</operator></expr>)</condition> <block pos:start="669:70" pos:end="683:21">{<block_content pos:start="671:25" pos:end="681:51">

                        <expr_stmt pos:start="671:25" pos:end="675:73"><expr pos:start="671:25" pos:end="675:72"><call pos:start="671:25" pos:end="675:72"><name pos:start="671:25" pos:end="671:30">av_log</name><argument_list pos:start="671:31" pos:end="675:72">(<argument pos:start="671:32" pos:end="671:39"><expr pos:start="671:32" pos:end="671:39"><name pos:start="671:32" pos:end="671:39"><name pos:start="671:32" pos:end="671:32">h</name><operator pos:start="671:33" pos:end="671:34">-&gt;</operator><name pos:start="671:35" pos:end="671:39">avctx</name></name></expr></argument>, <argument pos:start="671:42" pos:end="671:53"><expr pos:start="671:42" pos:end="671:53"><name pos:start="671:42" pos:end="671:53">AV_LOG_ERROR</name></expr></argument>,

                               <argument pos:start="673:32" pos:end="673:71"><expr pos:start="673:32" pos:end="673:71"><literal type="string" pos:start="673:32" pos:end="673:71">"Invalid field mode combination %d/%d\n"</literal></expr></argument>,

                               <argument pos:start="675:32" pos:end="675:49"><expr pos:start="675:32" pos:end="675:49"><name pos:start="675:32" pos:end="675:49">last_pic_structure</name></expr></argument>, <argument pos:start="675:52" pos:end="675:71"><expr pos:start="675:52" pos:end="675:71"><name pos:start="675:52" pos:end="675:71"><name pos:start="675:52" pos:end="675:52">h</name><operator pos:start="675:53" pos:end="675:54">-&gt;</operator><name pos:start="675:55" pos:end="675:71">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="677:25" pos:end="677:66"><expr pos:start="677:25" pos:end="677:65"><name pos:start="677:25" pos:end="677:44"><name pos:start="677:25" pos:end="677:25">h</name><operator pos:start="677:26" pos:end="677:27">-&gt;</operator><name pos:start="677:28" pos:end="677:44">picture_structure</name></name> <operator pos:start="677:46" pos:end="677:46">=</operator> <name pos:start="677:48" pos:end="677:65">last_pic_structure</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="679:25" pos:end="679:66"><expr pos:start="679:25" pos:end="679:65"><name pos:start="679:25" pos:end="679:36"><name pos:start="679:25" pos:end="679:25">h</name><operator pos:start="679:26" pos:end="679:27">-&gt;</operator><name pos:start="679:28" pos:end="679:36">droppable</name></name>         <operator pos:start="679:46" pos:end="679:46">=</operator> <name pos:start="679:48" pos:end="679:65">last_pic_droppable</name></expr>;</expr_stmt>

                        <return pos:start="681:25" pos:end="681:51">return <expr pos:start="681:32" pos:end="681:50"><name pos:start="681:32" pos:end="681:50">AVERROR_INVALIDDATA</name></expr>;</return>

                    </block_content>}</block></if> <if type="elseif" pos:start="683:23" pos:end="695:21">else if <condition pos:start="683:31" pos:end="683:66">(<expr pos:start="683:32" pos:end="683:65"><name pos:start="683:32" pos:end="683:49">last_pic_droppable</name> <operator pos:start="683:51" pos:end="683:52">!=</operator> <name pos:start="683:54" pos:end="683:65"><name pos:start="683:54" pos:end="683:54">h</name><operator pos:start="683:55" pos:end="683:56">-&gt;</operator><name pos:start="683:57" pos:end="683:65">droppable</name></name></expr>)</condition> <block pos:start="683:68" pos:end="695:21">{<block_content pos:start="685:25" pos:end="693:52">

                        <expr_stmt pos:start="685:25" pos:end="687:115"><expr pos:start="685:25" pos:end="687:114"><call pos:start="685:25" pos:end="687:114"><name pos:start="685:25" pos:end="685:45">avpriv_request_sample</name><argument_list pos:start="685:46" pos:end="687:114">(<argument pos:start="685:47" pos:end="685:54"><expr pos:start="685:47" pos:end="685:54"><name pos:start="685:47" pos:end="685:54"><name pos:start="685:47" pos:end="685:47">h</name><operator pos:start="685:48" pos:end="685:49">-&gt;</operator><name pos:start="685:50" pos:end="685:54">avctx</name></name></expr></argument>,

                                              <argument pos:start="687:47" pos:end="687:113"><expr pos:start="687:47" pos:end="687:113"><literal type="string" pos:start="687:47" pos:end="687:113">"Found reference and non-reference fields in the same frame, which"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="689:25" pos:end="689:66"><expr pos:start="689:25" pos:end="689:65"><name pos:start="689:25" pos:end="689:44"><name pos:start="689:25" pos:end="689:25">h</name><operator pos:start="689:26" pos:end="689:27">-&gt;</operator><name pos:start="689:28" pos:end="689:44">picture_structure</name></name> <operator pos:start="689:46" pos:end="689:46">=</operator> <name pos:start="689:48" pos:end="689:65">last_pic_structure</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="691:25" pos:end="691:66"><expr pos:start="691:25" pos:end="691:65"><name pos:start="691:25" pos:end="691:36"><name pos:start="691:25" pos:end="691:25">h</name><operator pos:start="691:26" pos:end="691:27">-&gt;</operator><name pos:start="691:28" pos:end="691:36">droppable</name></name>         <operator pos:start="691:46" pos:end="691:46">=</operator> <name pos:start="691:48" pos:end="691:65">last_pic_droppable</name></expr>;</expr_stmt>

                        <return pos:start="693:25" pos:end="693:52">return <expr pos:start="693:32" pos:end="693:51"><name pos:start="693:32" pos:end="693:51">AVERROR_PATCHWELCOME</name></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <while pos:start="705:9" pos:end="797:9">while <condition pos:start="705:15" pos:end="707:90">(<expr pos:start="705:16" pos:end="707:89"><name pos:start="705:16" pos:end="705:27"><name pos:start="705:16" pos:end="705:16">h</name><operator pos:start="705:17" pos:end="705:18">-&gt;</operator><name pos:start="705:19" pos:end="705:27">frame_num</name></name> <operator pos:start="705:29" pos:end="705:30">!=</operator> <name pos:start="705:32" pos:end="705:48"><name pos:start="705:32" pos:end="705:32">h</name><operator pos:start="705:33" pos:end="705:34">-&gt;</operator><name pos:start="705:35" pos:end="705:48">prev_frame_num</name></name> <operator pos:start="705:50" pos:end="705:51">&amp;&amp;</operator> <operator pos:start="705:53" pos:end="705:53">!</operator><name pos:start="705:54" pos:end="705:68"><name pos:start="705:54" pos:end="705:55">h0</name><operator pos:start="705:56" pos:end="705:57">-&gt;</operator><name pos:start="705:58" pos:end="705:68">first_field</name></name> <operator pos:start="705:70" pos:end="705:71">&amp;&amp;</operator>

               <name pos:start="707:16" pos:end="707:27"><name pos:start="707:16" pos:end="707:16">h</name><operator pos:start="707:17" pos:end="707:18">-&gt;</operator><name pos:start="707:19" pos:end="707:27">frame_num</name></name> <operator pos:start="707:29" pos:end="707:30">!=</operator> <operator pos:start="707:32" pos:end="707:32">(</operator><name pos:start="707:33" pos:end="707:49"><name pos:start="707:33" pos:end="707:33">h</name><operator pos:start="707:34" pos:end="707:35">-&gt;</operator><name pos:start="707:36" pos:end="707:49">prev_frame_num</name></name> <operator pos:start="707:51" pos:end="707:51">+</operator> <literal type="number" pos:start="707:53" pos:end="707:53">1</literal><operator pos:start="707:54" pos:end="707:54">)</operator> <operator pos:start="707:56" pos:end="707:56">%</operator> <operator pos:start="707:58" pos:end="707:58">(</operator><literal type="number" pos:start="707:59" pos:end="707:59">1</literal> <operator pos:start="707:61" pos:end="707:62">&lt;&lt;</operator> <name pos:start="707:64" pos:end="707:88"><name pos:start="707:64" pos:end="707:64">h</name><operator pos:start="707:65" pos:end="707:66">-&gt;</operator><name pos:start="707:67" pos:end="707:69">sps</name><operator pos:start="707:70" pos:end="707:70">.</operator><name pos:start="707:71" pos:end="707:88">log2_max_frame_num</name></name><operator pos:start="707:89" pos:end="707:89">)</operator></expr>)</condition> <block pos:start="707:92" pos:end="797:9">{<block_content pos:start="709:13" pos:end="795:13">

            <decl_stmt pos:start="709:13" pos:end="709:76"><decl pos:start="709:13" pos:end="709:75"><type pos:start="709:13" pos:end="709:25"><name pos:start="709:13" pos:end="709:23">H264Picture</name> <modifier pos:start="709:25" pos:end="709:25">*</modifier></type><name pos:start="709:26" pos:end="709:29">prev</name> <init pos:start="709:31" pos:end="709:75">= <expr pos:start="709:33" pos:end="709:75"><ternary pos:start="709:33" pos:end="709:75"><condition pos:start="709:33" pos:end="709:52"><expr pos:start="709:33" pos:end="709:50"><name pos:start="709:33" pos:end="709:50"><name pos:start="709:33" pos:end="709:33">h</name><operator pos:start="709:34" pos:end="709:35">-&gt;</operator><name pos:start="709:36" pos:end="709:50">short_ref_count</name></name></expr> ?</condition><then pos:start="709:54" pos:end="709:68"> <expr pos:start="709:54" pos:end="709:68"><name pos:start="709:54" pos:end="709:68"><name pos:start="709:54" pos:end="709:54">h</name><operator pos:start="709:55" pos:end="709:56">-&gt;</operator><name pos:start="709:57" pos:end="709:65">short_ref</name><index pos:start="709:66" pos:end="709:68">[<expr pos:start="709:67" pos:end="709:67"><literal type="number" pos:start="709:67" pos:end="709:67">0</literal></expr>]</index></name></expr> </then><else pos:start="709:70" pos:end="709:75">: <expr pos:start="709:72" pos:end="709:75"><name pos:start="709:72" pos:end="709:75">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="711:13" pos:end="713:52"><expr pos:start="711:13" pos:end="713:51"><call pos:start="711:13" pos:end="713:51"><name pos:start="711:13" pos:end="711:18">av_log</name><argument_list pos:start="711:19" pos:end="713:51">(<argument pos:start="711:20" pos:end="711:27"><expr pos:start="711:20" pos:end="711:27"><name pos:start="711:20" pos:end="711:27"><name pos:start="711:20" pos:end="711:20">h</name><operator pos:start="711:21" pos:end="711:22">-&gt;</operator><name pos:start="711:23" pos:end="711:27">avctx</name></name></expr></argument>, <argument pos:start="711:30" pos:end="711:41"><expr pos:start="711:30" pos:end="711:41"><name pos:start="711:30" pos:end="711:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="711:44" pos:end="711:66"><expr pos:start="711:44" pos:end="711:66"><literal type="string" pos:start="711:44" pos:end="711:66">"Frame num gap %d %d\n"</literal></expr></argument>,

                   <argument pos:start="713:20" pos:end="713:31"><expr pos:start="713:20" pos:end="713:31"><name pos:start="713:20" pos:end="713:31"><name pos:start="713:20" pos:end="713:20">h</name><operator pos:start="713:21" pos:end="713:22">-&gt;</operator><name pos:start="713:23" pos:end="713:31">frame_num</name></name></expr></argument>, <argument pos:start="713:34" pos:end="713:50"><expr pos:start="713:34" pos:end="713:50"><name pos:start="713:34" pos:end="713:50"><name pos:start="713:34" pos:end="713:34">h</name><operator pos:start="713:35" pos:end="713:36">-&gt;</operator><name pos:start="713:37" pos:end="713:50">prev_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="715:13" pos:end="719:46"><if pos:start="715:13" pos:end="719:46">if <condition pos:start="715:16" pos:end="715:55">(<expr pos:start="715:17" pos:end="715:54"><operator pos:start="715:17" pos:end="715:17">!</operator><name pos:start="715:18" pos:end="715:54"><name pos:start="715:18" pos:end="715:18">h</name><operator pos:start="715:19" pos:end="715:20">-&gt;</operator><name pos:start="715:21" pos:end="715:23">sps</name><operator pos:start="715:24" pos:end="715:24">.</operator><name pos:start="715:25" pos:end="715:54">gaps_in_frame_num_allowed_flag</name></name></expr>)</condition><block type="pseudo" pos:start="717:17" pos:end="719:46"><block_content pos:start="717:17" pos:end="719:46">

                <for pos:start="717:17" pos:end="719:46">for<control pos:start="717:20" pos:end="717:61">(<init pos:start="717:21" pos:end="717:24"><expr pos:start="717:21" pos:end="717:23"><name pos:start="717:21" pos:end="717:21">i</name><operator pos:start="717:22" pos:end="717:22">=</operator><literal type="number" pos:start="717:23" pos:end="717:23">0</literal></expr>;</init> <condition pos:start="717:26" pos:end="717:56"><expr pos:start="717:26" pos:end="717:55"><name pos:start="717:26" pos:end="717:26">i</name><operator pos:start="717:27" pos:end="717:27">&lt;</operator><call pos:start="717:28" pos:end="717:55"><name pos:start="717:28" pos:end="717:41">FF_ARRAY_ELEMS</name><argument_list pos:start="717:42" pos:end="717:55">(<argument pos:start="717:43" pos:end="717:54"><expr pos:start="717:43" pos:end="717:54"><name pos:start="717:43" pos:end="717:54"><name pos:start="717:43" pos:end="717:43">h</name><operator pos:start="717:44" pos:end="717:45">-&gt;</operator><name pos:start="717:46" pos:end="717:54">last_pocs</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="717:58" pos:end="717:60"><expr pos:start="717:58" pos:end="717:60"><name pos:start="717:58" pos:end="717:58">i</name><operator pos:start="717:59" pos:end="717:60">++</operator></expr></incr>)</control><block type="pseudo" pos:start="719:21" pos:end="719:46"><block_content pos:start="719:21" pos:end="719:46">

                    <expr_stmt pos:start="719:21" pos:end="719:46"><expr pos:start="719:21" pos:end="719:45"><name pos:start="719:21" pos:end="719:35"><name pos:start="719:21" pos:end="719:21">h</name><operator pos:start="719:22" pos:end="719:23">-&gt;</operator><name pos:start="719:24" pos:end="719:32">last_pocs</name><index pos:start="719:33" pos:end="719:35">[<expr pos:start="719:34" pos:end="719:34"><name pos:start="719:34" pos:end="719:34">i</name></expr>]</index></name> <operator pos:start="719:37" pos:end="719:37">=</operator> <name pos:start="719:39" pos:end="719:45">INT_MIN</name></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

            <expr_stmt pos:start="721:13" pos:end="721:38"><expr pos:start="721:13" pos:end="721:37"><name pos:start="721:13" pos:end="721:15">ret</name> <operator pos:start="721:17" pos:end="721:17">=</operator> <call pos:start="721:19" pos:end="721:37"><name pos:start="721:19" pos:end="721:34">h264_frame_start</name><argument_list pos:start="721:35" pos:end="721:37">(<argument pos:start="721:36" pos:end="721:36"><expr pos:start="721:36" pos:end="721:36"><name pos:start="721:36" pos:end="721:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="723:13" pos:end="729:13"><if pos:start="723:13" pos:end="729:13">if <condition pos:start="723:16" pos:end="723:24">(<expr pos:start="723:17" pos:end="723:23"><name pos:start="723:17" pos:end="723:19">ret</name> <operator pos:start="723:21" pos:end="723:21">&lt;</operator> <literal type="number" pos:start="723:23" pos:end="723:23">0</literal></expr>)</condition> <block pos:start="723:26" pos:end="729:13">{<block_content pos:start="725:17" pos:end="727:27">

                <expr_stmt pos:start="725:17" pos:end="725:36"><expr pos:start="725:17" pos:end="725:35"><name pos:start="725:17" pos:end="725:31"><name pos:start="725:17" pos:end="725:18">h0</name><operator pos:start="725:19" pos:end="725:20">-&gt;</operator><name pos:start="725:21" pos:end="725:31">first_field</name></name> <operator pos:start="725:33" pos:end="725:33">=</operator> <literal type="number" pos:start="725:35" pos:end="725:35">0</literal></expr>;</expr_stmt>

                <return pos:start="727:17" pos:end="727:27">return <expr pos:start="727:24" pos:end="727:26"><name pos:start="727:24" pos:end="727:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="733:13" pos:end="733:32"><expr pos:start="733:13" pos:end="733:31"><name pos:start="733:13" pos:end="733:29"><name pos:start="733:13" pos:end="733:13">h</name><operator pos:start="733:14" pos:end="733:15">-&gt;</operator><name pos:start="733:16" pos:end="733:29">prev_frame_num</name></name><operator pos:start="733:30" pos:end="733:31">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="735:13" pos:end="735:71"><expr pos:start="735:13" pos:end="735:70"><name pos:start="735:13" pos:end="735:29"><name pos:start="735:13" pos:end="735:13">h</name><operator pos:start="735:14" pos:end="735:15">-&gt;</operator><name pos:start="735:16" pos:end="735:29">prev_frame_num</name></name>        <operator pos:start="735:38" pos:end="735:39">%=</operator> <literal type="number" pos:start="735:41" pos:end="735:41">1</literal> <operator pos:start="735:43" pos:end="735:44">&lt;&lt;</operator> <name pos:start="735:46" pos:end="735:70"><name pos:start="735:46" pos:end="735:46">h</name><operator pos:start="735:47" pos:end="735:48">-&gt;</operator><name pos:start="735:49" pos:end="735:51">sps</name><operator pos:start="735:52" pos:end="735:52">.</operator><name pos:start="735:53" pos:end="735:70">log2_max_frame_num</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="737:13" pos:end="737:58"><expr pos:start="737:13" pos:end="737:57"><name pos:start="737:13" pos:end="737:37"><name pos:start="737:13" pos:end="737:13">h</name><operator pos:start="737:14" pos:end="737:15">-&gt;</operator><name pos:start="737:16" pos:end="737:26">cur_pic_ptr</name><operator pos:start="737:27" pos:end="737:28">-&gt;</operator><name pos:start="737:29" pos:end="737:37">frame_num</name></name> <operator pos:start="737:39" pos:end="737:39">=</operator> <name pos:start="737:41" pos:end="737:57"><name pos:start="737:41" pos:end="737:41">h</name><operator pos:start="737:42" pos:end="737:43">-&gt;</operator><name pos:start="737:44" pos:end="737:57">prev_frame_num</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="739:13" pos:end="739:81"><expr pos:start="739:13" pos:end="739:80"><name pos:start="739:13" pos:end="739:39"><name pos:start="739:13" pos:end="739:13">h</name><operator pos:start="739:14" pos:end="739:15">-&gt;</operator><name pos:start="739:16" pos:end="739:26">cur_pic_ptr</name><operator pos:start="739:27" pos:end="739:28">-&gt;</operator><name pos:start="739:29" pos:end="739:39">invalid_gap</name></name> <operator pos:start="739:41" pos:end="739:41">=</operator> <operator pos:start="739:43" pos:end="739:43">!</operator><name pos:start="739:44" pos:end="739:80"><name pos:start="739:44" pos:end="739:44">h</name><operator pos:start="739:45" pos:end="739:46">-&gt;</operator><name pos:start="739:47" pos:end="739:49">sps</name><operator pos:start="739:50" pos:end="739:50">.</operator><name pos:start="739:51" pos:end="739:80">gaps_in_frame_num_allowed_flag</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="741:13" pos:end="741:71"><expr pos:start="741:13" pos:end="741:70"><call pos:start="741:13" pos:end="741:70"><name pos:start="741:13" pos:end="741:37">ff_thread_report_progress</name><argument_list pos:start="741:38" pos:end="741:70">(<argument pos:start="741:39" pos:end="741:57"><expr pos:start="741:39" pos:end="741:57"><operator pos:start="741:39" pos:end="741:39">&amp;</operator><name pos:start="741:40" pos:end="741:57"><name pos:start="741:40" pos:end="741:40">h</name><operator pos:start="741:41" pos:end="741:42">-&gt;</operator><name pos:start="741:43" pos:end="741:53">cur_pic_ptr</name><operator pos:start="741:54" pos:end="741:55">-&gt;</operator><name pos:start="741:56" pos:end="741:57">tf</name></name></expr></argument>, <argument pos:start="741:60" pos:end="741:66"><expr pos:start="741:60" pos:end="741:66"><name pos:start="741:60" pos:end="741:66">INT_MAX</name></expr></argument>, <argument pos:start="741:69" pos:end="741:69"><expr pos:start="741:69" pos:end="741:69"><literal type="number" pos:start="741:69" pos:end="741:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="743:13" pos:end="743:71"><expr pos:start="743:13" pos:end="743:70"><call pos:start="743:13" pos:end="743:70"><name pos:start="743:13" pos:end="743:37">ff_thread_report_progress</name><argument_list pos:start="743:38" pos:end="743:70">(<argument pos:start="743:39" pos:end="743:57"><expr pos:start="743:39" pos:end="743:57"><operator pos:start="743:39" pos:end="743:39">&amp;</operator><name pos:start="743:40" pos:end="743:57"><name pos:start="743:40" pos:end="743:40">h</name><operator pos:start="743:41" pos:end="743:42">-&gt;</operator><name pos:start="743:43" pos:end="743:53">cur_pic_ptr</name><operator pos:start="743:54" pos:end="743:55">-&gt;</operator><name pos:start="743:56" pos:end="743:57">tf</name></name></expr></argument>, <argument pos:start="743:60" pos:end="743:66"><expr pos:start="743:60" pos:end="743:66"><name pos:start="743:60" pos:end="743:66">INT_MAX</name></expr></argument>, <argument pos:start="743:69" pos:end="743:69"><expr pos:start="743:69" pos:end="743:69"><literal type="number" pos:start="743:69" pos:end="743:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="745:13" pos:end="745:57"><expr pos:start="745:13" pos:end="745:56"><name pos:start="745:13" pos:end="745:15">ret</name> <operator pos:start="745:17" pos:end="745:17">=</operator> <call pos:start="745:19" pos:end="745:56"><name pos:start="745:19" pos:end="745:50">ff_generate_sliding_window_mmcos</name><argument_list pos:start="745:51" pos:end="745:56">(<argument pos:start="745:52" pos:end="745:52"><expr pos:start="745:52" pos:end="745:52"><name pos:start="745:52" pos:end="745:52">h</name></expr></argument>, <argument pos:start="745:55" pos:end="745:55"><expr pos:start="745:55" pos:end="745:55"><literal type="number" pos:start="745:55" pos:end="745:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="747:13" pos:end="749:27"><if pos:start="747:13" pos:end="749:27">if <condition pos:start="747:16" pos:end="747:71">(<expr pos:start="747:17" pos:end="747:70"><name pos:start="747:17" pos:end="747:19">ret</name> <operator pos:start="747:21" pos:end="747:21">&lt;</operator> <literal type="number" pos:start="747:23" pos:end="747:23">0</literal> <operator pos:start="747:25" pos:end="747:26">&amp;&amp;</operator> <operator pos:start="747:28" pos:end="747:28">(</operator><name pos:start="747:29" pos:end="747:53"><name pos:start="747:29" pos:end="747:29">h</name><operator pos:start="747:30" pos:end="747:31">-&gt;</operator><name pos:start="747:32" pos:end="747:36">avctx</name><operator pos:start="747:37" pos:end="747:38">-&gt;</operator><name pos:start="747:39" pos:end="747:53">err_recognition</name></name> <operator pos:start="747:55" pos:end="747:55">&amp;</operator> <name pos:start="747:57" pos:end="747:69">AV_EF_EXPLODE</name><operator pos:start="747:70" pos:end="747:70">)</operator></expr>)</condition><block type="pseudo" pos:start="749:17" pos:end="749:27"><block_content pos:start="749:17" pos:end="749:27">

                <return pos:start="749:17" pos:end="749:27">return <expr pos:start="749:24" pos:end="749:26"><name pos:start="749:24" pos:end="749:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="751:13" pos:end="751:77"><expr pos:start="751:13" pos:end="751:76"><name pos:start="751:13" pos:end="751:15">ret</name> <operator pos:start="751:17" pos:end="751:17">=</operator> <call pos:start="751:19" pos:end="751:76"><name pos:start="751:19" pos:end="751:49">ff_h264_execute_ref_pic_marking</name><argument_list pos:start="751:50" pos:end="751:76">(<argument pos:start="751:51" pos:end="751:51"><expr pos:start="751:51" pos:end="751:51"><name pos:start="751:51" pos:end="751:51">h</name></expr></argument>, <argument pos:start="751:54" pos:end="751:60"><expr pos:start="751:54" pos:end="751:60"><name pos:start="751:54" pos:end="751:60"><name pos:start="751:54" pos:end="751:54">h</name><operator pos:start="751:55" pos:end="751:56">-&gt;</operator><name pos:start="751:57" pos:end="751:60">mmco</name></name></expr></argument>, <argument pos:start="751:63" pos:end="751:75"><expr pos:start="751:63" pos:end="751:75"><name pos:start="751:63" pos:end="751:75"><name pos:start="751:63" pos:end="751:63">h</name><operator pos:start="751:64" pos:end="751:65">-&gt;</operator><name pos:start="751:66" pos:end="751:75">mmco_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="753:13" pos:end="755:27"><if pos:start="753:13" pos:end="755:27">if <condition pos:start="753:16" pos:end="753:71">(<expr pos:start="753:17" pos:end="753:70"><name pos:start="753:17" pos:end="753:19">ret</name> <operator pos:start="753:21" pos:end="753:21">&lt;</operator> <literal type="number" pos:start="753:23" pos:end="753:23">0</literal> <operator pos:start="753:25" pos:end="753:26">&amp;&amp;</operator> <operator pos:start="753:28" pos:end="753:28">(</operator><name pos:start="753:29" pos:end="753:53"><name pos:start="753:29" pos:end="753:29">h</name><operator pos:start="753:30" pos:end="753:31">-&gt;</operator><name pos:start="753:32" pos:end="753:36">avctx</name><operator pos:start="753:37" pos:end="753:38">-&gt;</operator><name pos:start="753:39" pos:end="753:53">err_recognition</name></name> <operator pos:start="753:55" pos:end="753:55">&amp;</operator> <name pos:start="753:57" pos:end="753:69">AV_EF_EXPLODE</name><operator pos:start="753:70" pos:end="753:70">)</operator></expr>)</condition><block type="pseudo" pos:start="755:17" pos:end="755:27"><block_content pos:start="755:17" pos:end="755:27">

                <return pos:start="755:17" pos:end="755:27">return <expr pos:start="755:24" pos:end="755:26"><name pos:start="755:24" pos:end="755:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <comment type="block" pos:start="757:13" pos:end="769:74">/* Error concealment: If a ref is missing, copy the previous ref

             * in its place.

             * FIXME: Avoiding a memcpy would be nice, but ref handling makes

             * many assumptions about there being no actual duplicates.

             * FIXME: This does not copy padding for out-of-frame motion

             * vectors.  Given we are concealing a lost frame, this probably

             * is not noticeable by comparison, but it should be fixed. */</comment>

            <if_stmt pos:start="771:13" pos:end="795:13"><if pos:start="771:13" pos:end="795:13">if <condition pos:start="771:16" pos:end="771:35">(<expr pos:start="771:17" pos:end="771:34"><name pos:start="771:17" pos:end="771:34"><name pos:start="771:17" pos:end="771:17">h</name><operator pos:start="771:18" pos:end="771:19">-&gt;</operator><name pos:start="771:20" pos:end="771:34">short_ref_count</name></name></expr>)</condition> <block pos:start="771:37" pos:end="795:13">{<block_content pos:start="773:17" pos:end="793:63">

                <if_stmt pos:start="773:17" pos:end="791:17"><if pos:start="773:17" pos:end="791:17">if <condition pos:start="773:20" pos:end="773:25">(<expr pos:start="773:21" pos:end="773:24"><name pos:start="773:21" pos:end="773:24">prev</name></expr>)</condition> <block pos:start="773:27" pos:end="791:17">{<block_content pos:start="775:21" pos:end="789:57">

                    <expr_stmt pos:start="775:21" pos:end="787:53"><expr pos:start="775:21" pos:end="787:52"><call pos:start="775:21" pos:end="787:52"><name pos:start="775:21" pos:end="775:33">av_image_copy</name><argument_list pos:start="775:34" pos:end="787:52">(<argument pos:start="775:35" pos:end="775:57"><expr pos:start="775:35" pos:end="775:57"><name pos:start="775:35" pos:end="775:49"><name pos:start="775:35" pos:end="775:35">h</name><operator pos:start="775:36" pos:end="775:37">-&gt;</operator><name pos:start="775:38" pos:end="775:46">short_ref</name><index pos:start="775:47" pos:end="775:49">[<expr pos:start="775:48" pos:end="775:48"><literal type="number" pos:start="775:48" pos:end="775:48">0</literal></expr>]</index></name><operator pos:start="775:50" pos:end="775:51">-&gt;</operator><name pos:start="775:52" pos:end="775:57"><name pos:start="775:52" pos:end="775:52">f</name><operator pos:start="775:53" pos:end="775:53">.</operator><name pos:start="775:54" pos:end="775:57">data</name></name></expr></argument>,

                                  <argument pos:start="777:35" pos:end="777:61"><expr pos:start="777:35" pos:end="777:61"><name pos:start="777:35" pos:end="777:49"><name pos:start="777:35" pos:end="777:35">h</name><operator pos:start="777:36" pos:end="777:37">-&gt;</operator><name pos:start="777:38" pos:end="777:46">short_ref</name><index pos:start="777:47" pos:end="777:49">[<expr pos:start="777:48" pos:end="777:48"><literal type="number" pos:start="777:48" pos:end="777:48">0</literal></expr>]</index></name><operator pos:start="777:50" pos:end="777:51">-&gt;</operator><name pos:start="777:52" pos:end="777:61"><name pos:start="777:52" pos:end="777:52">f</name><operator pos:start="777:53" pos:end="777:53">.</operator><name pos:start="777:54" pos:end="777:61">linesize</name></name></expr></argument>,

                                  <argument pos:start="779:35" pos:end="779:64"><expr pos:start="779:35" pos:end="779:64"><operator pos:start="779:35" pos:end="779:35">(</operator><specifier pos:start="779:36" pos:end="779:40">const</specifier> <name pos:start="779:42" pos:end="779:48">uint8_t</name> <operator pos:start="779:50" pos:end="779:50">*</operator><operator pos:start="779:51" pos:end="779:51">*</operator><operator pos:start="779:52" pos:end="779:52">)</operator><name pos:start="779:53" pos:end="779:64"><name pos:start="779:53" pos:end="779:56">prev</name><operator pos:start="779:57" pos:end="779:58">-&gt;</operator><name pos:start="779:59" pos:end="779:59">f</name><operator pos:start="779:60" pos:end="779:60">.</operator><name pos:start="779:61" pos:end="779:64">data</name></name></expr></argument>,

                                  <argument pos:start="781:35" pos:end="781:50"><expr pos:start="781:35" pos:end="781:50"><name pos:start="781:35" pos:end="781:50"><name pos:start="781:35" pos:end="781:38">prev</name><operator pos:start="781:39" pos:end="781:40">-&gt;</operator><name pos:start="781:41" pos:end="781:41">f</name><operator pos:start="781:42" pos:end="781:42">.</operator><name pos:start="781:43" pos:end="781:50">linesize</name></name></expr></argument>,

                                  <argument pos:start="783:35" pos:end="783:51"><expr pos:start="783:35" pos:end="783:51"><name pos:start="783:35" pos:end="783:51"><name pos:start="783:35" pos:end="783:35">h</name><operator pos:start="783:36" pos:end="783:37">-&gt;</operator><name pos:start="783:38" pos:end="783:42">avctx</name><operator pos:start="783:43" pos:end="783:44">-&gt;</operator><name pos:start="783:45" pos:end="783:51">pix_fmt</name></name></expr></argument>,

                                  <argument pos:start="785:35" pos:end="785:51"><expr pos:start="785:35" pos:end="785:51"><name pos:start="785:35" pos:end="785:45"><name pos:start="785:35" pos:end="785:35">h</name><operator pos:start="785:36" pos:end="785:37">-&gt;</operator><name pos:start="785:38" pos:end="785:45">mb_width</name></name>  <operator pos:start="785:48" pos:end="785:48">*</operator> <literal type="number" pos:start="785:50" pos:end="785:51">16</literal></expr></argument>,

                                  <argument pos:start="787:35" pos:end="787:51"><expr pos:start="787:35" pos:end="787:51"><name pos:start="787:35" pos:end="787:46"><name pos:start="787:35" pos:end="787:35">h</name><operator pos:start="787:36" pos:end="787:37">-&gt;</operator><name pos:start="787:38" pos:end="787:46">mb_height</name></name> <operator pos:start="787:48" pos:end="787:48">*</operator> <literal type="number" pos:start="787:50" pos:end="787:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="789:21" pos:end="789:57"><expr pos:start="789:21" pos:end="789:56"><name pos:start="789:21" pos:end="789:35"><name pos:start="789:21" pos:end="789:21">h</name><operator pos:start="789:22" pos:end="789:23">-&gt;</operator><name pos:start="789:24" pos:end="789:32">short_ref</name><index pos:start="789:33" pos:end="789:35">[<expr pos:start="789:34" pos:end="789:34"><literal type="number" pos:start="789:34" pos:end="789:34">0</literal></expr>]</index></name><operator pos:start="789:36" pos:end="789:37">-&gt;</operator><name pos:start="789:38" pos:end="789:40">poc</name> <operator pos:start="789:42" pos:end="789:42">=</operator> <name pos:start="789:44" pos:end="789:52"><name pos:start="789:44" pos:end="789:47">prev</name><operator pos:start="789:48" pos:end="789:49">-&gt;</operator><name pos:start="789:50" pos:end="789:52">poc</name></name> <operator pos:start="789:54" pos:end="789:54">+</operator> <literal type="number" pos:start="789:56" pos:end="789:56">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="793:17" pos:end="793:63"><expr pos:start="793:17" pos:end="793:62"><name pos:start="793:17" pos:end="793:31"><name pos:start="793:17" pos:end="793:17">h</name><operator pos:start="793:18" pos:end="793:19">-&gt;</operator><name pos:start="793:20" pos:end="793:28">short_ref</name><index pos:start="793:29" pos:end="793:31">[<expr pos:start="793:30" pos:end="793:30"><literal type="number" pos:start="793:30" pos:end="793:30">0</literal></expr>]</index></name><operator pos:start="793:32" pos:end="793:33">-&gt;</operator><name pos:start="793:34" pos:end="793:42">frame_num</name> <operator pos:start="793:44" pos:end="793:44">=</operator> <name pos:start="793:46" pos:end="793:62"><name pos:start="793:46" pos:end="793:46">h</name><operator pos:start="793:47" pos:end="793:48">-&gt;</operator><name pos:start="793:49" pos:end="793:62">prev_frame_num</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>



        <comment type="block" pos:start="801:9" pos:end="805:46">/* See if we have a decoded first field looking for a pair...

         * We're using that to see whether to continue decoding in that

         * frame, or to allocate a new one. */</comment>

        <if_stmt pos:start="807:9" pos:end="867:9"><if pos:start="807:9" pos:end="861:9">if <condition pos:start="807:12" pos:end="807:28">(<expr pos:start="807:13" pos:end="807:27"><name pos:start="807:13" pos:end="807:27"><name pos:start="807:13" pos:end="807:14">h0</name><operator pos:start="807:15" pos:end="807:16">-&gt;</operator><name pos:start="807:17" pos:end="807:27">first_field</name></name></expr>)</condition> <block pos:start="807:30" pos:end="861:9">{<block_content pos:start="809:13" pos:end="859:13">

            <expr_stmt pos:start="809:13" pos:end="809:36"><expr pos:start="809:13" pos:end="809:35"><call pos:start="809:13" pos:end="809:35"><name pos:start="809:13" pos:end="809:18">assert</name><argument_list pos:start="809:19" pos:end="809:35">(<argument pos:start="809:20" pos:end="809:34"><expr pos:start="809:20" pos:end="809:34"><name pos:start="809:20" pos:end="809:34"><name pos:start="809:20" pos:end="809:21">h0</name><operator pos:start="809:22" pos:end="809:23">-&gt;</operator><name pos:start="809:24" pos:end="809:34">cur_pic_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="811:13" pos:end="811:46"><expr pos:start="811:13" pos:end="811:45"><call pos:start="811:13" pos:end="811:45"><name pos:start="811:13" pos:end="811:18">assert</name><argument_list pos:start="811:19" pos:end="811:45">(<argument pos:start="811:20" pos:end="811:44"><expr pos:start="811:20" pos:end="811:44"><name pos:start="811:20" pos:end="811:44"><name pos:start="811:20" pos:end="811:21">h0</name><operator pos:start="811:22" pos:end="811:23">-&gt;</operator><name pos:start="811:24" pos:end="811:34">cur_pic_ptr</name><operator pos:start="811:35" pos:end="811:36">-&gt;</operator><name pos:start="811:37" pos:end="811:37">f</name><operator pos:start="811:38" pos:end="811:38">.</operator><name pos:start="811:39" pos:end="811:41">buf</name><index pos:start="811:42" pos:end="811:44">[<expr pos:start="811:43" pos:end="811:43"><literal type="number" pos:start="811:43" pos:end="811:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="813:13" pos:end="813:66"><expr pos:start="813:13" pos:end="813:65"><call pos:start="813:13" pos:end="813:65"><name pos:start="813:13" pos:end="813:18">assert</name><argument_list pos:start="813:19" pos:end="813:65">(<argument pos:start="813:20" pos:end="813:64"><expr pos:start="813:20" pos:end="813:64"><name pos:start="813:20" pos:end="813:45"><name pos:start="813:20" pos:end="813:21">h0</name><operator pos:start="813:22" pos:end="813:23">-&gt;</operator><name pos:start="813:24" pos:end="813:34">cur_pic_ptr</name><operator pos:start="813:35" pos:end="813:36">-&gt;</operator><name pos:start="813:37" pos:end="813:45">reference</name></name> <operator pos:start="813:47" pos:end="813:48">!=</operator> <name pos:start="813:50" pos:end="813:64">DELAYED_PIC_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="817:13" pos:end="817:66">/* figure out if we have a complementary field pair */</comment>

            <if_stmt pos:start="819:13" pos:end="859:13"><if pos:start="819:13" pos:end="831:13">if <condition pos:start="819:16" pos:end="819:80">(<expr pos:start="819:17" pos:end="819:79"><operator pos:start="819:17" pos:end="819:17">!</operator><call pos:start="819:18" pos:end="819:33"><name pos:start="819:18" pos:end="819:30">FIELD_PICTURE</name><argument_list pos:start="819:31" pos:end="819:33">(<argument pos:start="819:32" pos:end="819:32"><expr pos:start="819:32" pos:end="819:32"><name pos:start="819:32" pos:end="819:32">h</name></expr></argument>)</argument_list></call> <operator pos:start="819:35" pos:end="819:36">||</operator> <name pos:start="819:38" pos:end="819:57"><name pos:start="819:38" pos:end="819:38">h</name><operator pos:start="819:39" pos:end="819:40">-&gt;</operator><name pos:start="819:41" pos:end="819:57">picture_structure</name></name> <operator pos:start="819:59" pos:end="819:60">==</operator> <name pos:start="819:62" pos:end="819:79">last_pic_structure</name></expr>)</condition> <block pos:start="819:82" pos:end="831:13">{<block_content pos:start="825:17" pos:end="829:51">

                <comment type="block" pos:start="821:17" pos:end="823:61">/* Previous field is unmatched. Don't display it, but let it

                 * remain for reference if marked as such. */</comment>

                <expr_stmt pos:start="825:17" pos:end="825:38"><expr pos:start="825:17" pos:end="825:37"><name pos:start="825:17" pos:end="825:34"><name pos:start="825:17" pos:end="825:18">h0</name><operator pos:start="825:19" pos:end="825:20">-&gt;</operator><name pos:start="825:21" pos:end="825:34">missing_fields</name></name> <operator pos:start="825:36" pos:end="825:37">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="827:17" pos:end="827:39"><expr pos:start="827:17" pos:end="827:38"><name pos:start="827:17" pos:end="827:31"><name pos:start="827:17" pos:end="827:18">h0</name><operator pos:start="827:19" pos:end="827:20">-&gt;</operator><name pos:start="827:21" pos:end="827:31">cur_pic_ptr</name></name> <operator pos:start="827:33" pos:end="827:33">=</operator> <name pos:start="827:35" pos:end="827:38">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="829:17" pos:end="829:51"><expr pos:start="829:17" pos:end="829:50"><name pos:start="829:17" pos:end="829:31"><name pos:start="829:17" pos:end="829:18">h0</name><operator pos:start="829:19" pos:end="829:20">-&gt;</operator><name pos:start="829:21" pos:end="829:31">first_field</name></name> <operator pos:start="829:33" pos:end="829:33">=</operator> <call pos:start="829:35" pos:end="829:50"><name pos:start="829:35" pos:end="829:47">FIELD_PICTURE</name><argument_list pos:start="829:48" pos:end="829:50">(<argument pos:start="829:49" pos:end="829:49"><expr pos:start="829:49" pos:end="829:49"><name pos:start="829:49" pos:end="829:49">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="831:15" pos:end="859:13">else <block pos:start="831:20" pos:end="859:13">{<block_content pos:start="833:17" pos:end="857:17">

                <expr_stmt pos:start="833:17" pos:end="833:39"><expr pos:start="833:17" pos:end="833:38"><name pos:start="833:17" pos:end="833:34"><name pos:start="833:17" pos:end="833:18">h0</name><operator pos:start="833:19" pos:end="833:20">-&gt;</operator><name pos:start="833:21" pos:end="833:34">missing_fields</name></name> <operator pos:start="833:36" pos:end="833:36">=</operator> <literal type="number" pos:start="833:38" pos:end="833:38">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="835:17" pos:end="857:17"><if pos:start="835:17" pos:end="851:17">if <condition pos:start="835:20" pos:end="835:63">(<expr pos:start="835:21" pos:end="835:62"><name pos:start="835:21" pos:end="835:46"><name pos:start="835:21" pos:end="835:22">h0</name><operator pos:start="835:23" pos:end="835:24">-&gt;</operator><name pos:start="835:25" pos:end="835:35">cur_pic_ptr</name><operator pos:start="835:36" pos:end="835:37">-&gt;</operator><name pos:start="835:38" pos:end="835:46">frame_num</name></name> <operator pos:start="835:48" pos:end="835:49">!=</operator> <name pos:start="835:51" pos:end="835:62"><name pos:start="835:51" pos:end="835:51">h</name><operator pos:start="835:52" pos:end="835:53">-&gt;</operator><name pos:start="835:54" pos:end="835:62">frame_num</name></name></expr>)</condition> <block pos:start="835:65" pos:end="851:17">{<block_content pos:start="837:21" pos:end="849:43">

                    <expr_stmt pos:start="837:21" pos:end="839:88"><expr pos:start="837:21" pos:end="839:87"><call pos:start="837:21" pos:end="839:87"><name pos:start="837:21" pos:end="837:45">ff_thread_report_progress</name><argument_list pos:start="837:46" pos:end="839:87">(<argument pos:start="837:47" pos:end="837:66"><expr pos:start="837:47" pos:end="837:66"><operator pos:start="837:47" pos:end="837:47">&amp;</operator><name pos:start="837:48" pos:end="837:66"><name pos:start="837:48" pos:end="837:49">h0</name><operator pos:start="837:50" pos:end="837:51">-&gt;</operator><name pos:start="837:52" pos:end="837:62">cur_pic_ptr</name><operator pos:start="837:63" pos:end="837:64">-&gt;</operator><name pos:start="837:65" pos:end="837:66">tf</name></name></expr></argument>, <argument pos:start="837:69" pos:end="837:75"><expr pos:start="837:69" pos:end="837:75"><name pos:start="837:69" pos:end="837:75">INT_MAX</name></expr></argument>,

                                              <argument pos:start="839:47" pos:end="839:86"><expr pos:start="839:47" pos:end="839:86"><name pos:start="839:47" pos:end="839:67"><name pos:start="839:47" pos:end="839:48">h0</name><operator pos:start="839:49" pos:end="839:50">-&gt;</operator><name pos:start="839:51" pos:end="839:67">picture_structure</name></name><operator pos:start="839:68" pos:end="839:69">==</operator><name pos:start="839:70" pos:end="839:86">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="841:21" pos:end="845:60">/* This and the previous field had different frame_nums.

                     * Consider this field first in pair. Throw away previous

                     * one except for reference purposes. */</comment>

                    <expr_stmt pos:start="847:21" pos:end="847:40"><expr pos:start="847:21" pos:end="847:39"><name pos:start="847:21" pos:end="847:35"><name pos:start="847:21" pos:end="847:22">h0</name><operator pos:start="847:23" pos:end="847:24">-&gt;</operator><name pos:start="847:25" pos:end="847:35">first_field</name></name> <operator pos:start="847:37" pos:end="847:37">=</operator> <literal type="number" pos:start="847:39" pos:end="847:39">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="849:21" pos:end="849:43"><expr pos:start="849:21" pos:end="849:42"><name pos:start="849:21" pos:end="849:35"><name pos:start="849:21" pos:end="849:22">h0</name><operator pos:start="849:23" pos:end="849:24">-&gt;</operator><name pos:start="849:25" pos:end="849:35">cur_pic_ptr</name></name> <operator pos:start="849:37" pos:end="849:37">=</operator> <name pos:start="849:39" pos:end="849:42">NULL</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="851:19" pos:end="857:17">else <block pos:start="851:24" pos:end="857:17">{<block_content pos:start="855:21" pos:end="855:40">

                    <comment type="block" pos:start="853:21" pos:end="853:60">/* Second field in complementary pair */</comment>

                    <expr_stmt pos:start="855:21" pos:end="855:40"><expr pos:start="855:21" pos:end="855:39"><name pos:start="855:21" pos:end="855:35"><name pos:start="855:21" pos:end="855:22">h0</name><operator pos:start="855:23" pos:end="855:24">-&gt;</operator><name pos:start="855:25" pos:end="855:35">first_field</name></name> <operator pos:start="855:37" pos:end="855:37">=</operator> <literal type="number" pos:start="855:39" pos:end="855:39">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="861:11" pos:end="867:9">else <block pos:start="861:16" pos:end="867:9">{<block_content pos:start="865:13" pos:end="865:47">

            <comment type="block" pos:start="863:13" pos:end="863:74">/* Frame or first field in a potentially complementary pair */</comment>

            <expr_stmt pos:start="865:13" pos:end="865:47"><expr pos:start="865:13" pos:end="865:46"><name pos:start="865:13" pos:end="865:27"><name pos:start="865:13" pos:end="865:14">h0</name><operator pos:start="865:15" pos:end="865:16">-&gt;</operator><name pos:start="865:17" pos:end="865:27">first_field</name></name> <operator pos:start="865:29" pos:end="865:29">=</operator> <call pos:start="865:31" pos:end="865:46"><name pos:start="865:31" pos:end="865:43">FIELD_PICTURE</name><argument_list pos:start="865:44" pos:end="865:46">(<argument pos:start="865:45" pos:end="865:45"><expr pos:start="865:45" pos:end="865:45"><name pos:start="865:45" pos:end="865:45">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="871:9" pos:end="885:9"><if pos:start="871:9" pos:end="881:9">if <condition pos:start="871:12" pos:end="871:49">(<expr pos:start="871:13" pos:end="871:48"><operator pos:start="871:13" pos:end="871:13">!</operator><call pos:start="871:14" pos:end="871:29"><name pos:start="871:14" pos:end="871:26">FIELD_PICTURE</name><argument_list pos:start="871:27" pos:end="871:29">(<argument pos:start="871:28" pos:end="871:28"><expr pos:start="871:28" pos:end="871:28"><name pos:start="871:28" pos:end="871:28">h</name></expr></argument>)</argument_list></call> <operator pos:start="871:31" pos:end="871:32">||</operator> <name pos:start="871:34" pos:end="871:48"><name pos:start="871:34" pos:end="871:35">h0</name><operator pos:start="871:36" pos:end="871:37">-&gt;</operator><name pos:start="871:38" pos:end="871:48">first_field</name></name></expr>)</condition> <block pos:start="871:51" pos:end="881:9">{<block_content pos:start="873:13" pos:end="879:13">

            <if_stmt pos:start="873:13" pos:end="879:13"><if pos:start="873:13" pos:end="879:13">if <condition pos:start="873:16" pos:end="873:40">(<expr pos:start="873:17" pos:end="873:39"><call pos:start="873:17" pos:end="873:35"><name pos:start="873:17" pos:end="873:32">h264_frame_start</name><argument_list pos:start="873:33" pos:end="873:35">(<argument pos:start="873:34" pos:end="873:34"><expr pos:start="873:34" pos:end="873:34"><name pos:start="873:34" pos:end="873:34">h</name></expr></argument>)</argument_list></call> <operator pos:start="873:37" pos:end="873:37">&lt;</operator> <literal type="number" pos:start="873:39" pos:end="873:39">0</literal></expr>)</condition> <block pos:start="873:42" pos:end="879:13">{<block_content pos:start="875:17" pos:end="877:43">

                <expr_stmt pos:start="875:17" pos:end="875:36"><expr pos:start="875:17" pos:end="875:35"><name pos:start="875:17" pos:end="875:31"><name pos:start="875:17" pos:end="875:18">h0</name><operator pos:start="875:19" pos:end="875:20">-&gt;</operator><name pos:start="875:21" pos:end="875:31">first_field</name></name> <operator pos:start="875:33" pos:end="875:33">=</operator> <literal type="number" pos:start="875:35" pos:end="875:35">0</literal></expr>;</expr_stmt>

                <return pos:start="877:17" pos:end="877:43">return <expr pos:start="877:24" pos:end="877:42"><name pos:start="877:24" pos:end="877:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="881:11" pos:end="885:9">else <block pos:start="881:16" pos:end="885:9">{<block_content pos:start="883:13" pos:end="883:42">

            <expr_stmt pos:start="883:13" pos:end="883:42"><expr pos:start="883:13" pos:end="883:41"><call pos:start="883:13" pos:end="883:41"><name pos:start="883:13" pos:end="883:35">release_unused_pictures</name><argument_list pos:start="883:36" pos:end="883:41">(<argument pos:start="883:37" pos:end="883:37"><expr pos:start="883:37" pos:end="883:37"><name pos:start="883:37" pos:end="883:37">h</name></expr></argument>, <argument pos:start="883:40" pos:end="883:40"><expr pos:start="883:40" pos:end="883:40"><literal type="number" pos:start="883:40" pos:end="883:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="887:9" pos:end="889:48">/* Some macroblocks can be accessed before they're available in case

        * of lost slices, MBAFF or threading. */</comment>

        <if_stmt pos:start="891:9" pos:end="903:9"><if pos:start="891:9" pos:end="897:9">if <condition pos:start="891:12" pos:end="891:29">(<expr pos:start="891:13" pos:end="891:28"><call pos:start="891:13" pos:end="891:28"><name pos:start="891:13" pos:end="891:25">FIELD_PICTURE</name><argument_list pos:start="891:26" pos:end="891:28">(<argument pos:start="891:27" pos:end="891:27"><expr pos:start="891:27" pos:end="891:27"><name pos:start="891:27" pos:end="891:27">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="891:31" pos:end="897:9">{<block_content pos:start="893:13" pos:end="895:124">

            <for pos:start="893:13" pos:end="895:124">for<control pos:start="893:16" pos:end="893:85">(<init pos:start="893:17" pos:end="893:64"><expr pos:start="893:17" pos:end="893:63"><name pos:start="893:17" pos:end="893:17">i</name> <operator pos:start="893:19" pos:end="893:19">=</operator> <operator pos:start="893:21" pos:end="893:21">(</operator><name pos:start="893:22" pos:end="893:41"><name pos:start="893:22" pos:end="893:22">h</name><operator pos:start="893:23" pos:end="893:24">-&gt;</operator><name pos:start="893:25" pos:end="893:41">picture_structure</name></name> <operator pos:start="893:43" pos:end="893:44">==</operator> <name pos:start="893:46" pos:end="893:62">PICT_BOTTOM_FIELD</name><operator pos:start="893:63" pos:end="893:63">)</operator></expr>;</init> <condition pos:start="893:66" pos:end="893:80"><expr pos:start="893:66" pos:end="893:79"><name pos:start="893:66" pos:end="893:66">i</name><operator pos:start="893:67" pos:end="893:67">&lt;</operator><name pos:start="893:68" pos:end="893:79"><name pos:start="893:68" pos:end="893:68">h</name><operator pos:start="893:69" pos:end="893:70">-&gt;</operator><name pos:start="893:71" pos:end="893:79">mb_height</name></name></expr>;</condition> <incr pos:start="893:82" pos:end="893:84"><expr pos:start="893:82" pos:end="893:84"><name pos:start="893:82" pos:end="893:82">i</name><operator pos:start="893:83" pos:end="893:84">++</operator></expr></incr>)</control><block type="pseudo" pos:start="895:17" pos:end="895:124"><block_content pos:start="895:17" pos:end="895:124">

                <expr_stmt pos:start="895:17" pos:end="895:124"><expr pos:start="895:17" pos:end="895:123"><call pos:start="895:17" pos:end="895:123"><name pos:start="895:17" pos:end="895:22">memset</name><argument_list pos:start="895:23" pos:end="895:123">(<argument pos:start="895:24" pos:end="895:54"><expr pos:start="895:24" pos:end="895:54"><name pos:start="895:24" pos:end="895:37"><name pos:start="895:24" pos:end="895:24">h</name><operator pos:start="895:25" pos:end="895:26">-&gt;</operator><name pos:start="895:27" pos:end="895:37">slice_table</name></name> <operator pos:start="895:39" pos:end="895:39">+</operator> <name pos:start="895:41" pos:end="895:41">i</name><operator pos:start="895:42" pos:end="895:42">*</operator><name pos:start="895:43" pos:end="895:54"><name pos:start="895:43" pos:end="895:43">h</name><operator pos:start="895:44" pos:end="895:45">-&gt;</operator><name pos:start="895:46" pos:end="895:54">mb_stride</name></name></expr></argument>, <argument pos:start="895:57" pos:end="895:58"><expr pos:start="895:57" pos:end="895:58"><operator pos:start="895:57" pos:end="895:57">-</operator><literal type="number" pos:start="895:58" pos:end="895:58">1</literal></expr></argument>, <argument pos:start="895:61" pos:end="895:122"><expr pos:start="895:61" pos:end="895:122"><operator pos:start="895:61" pos:end="895:61">(</operator><name pos:start="895:62" pos:end="895:73"><name pos:start="895:62" pos:end="895:62">h</name><operator pos:start="895:63" pos:end="895:64">-&gt;</operator><name pos:start="895:65" pos:end="895:73">mb_stride</name></name> <operator pos:start="895:75" pos:end="895:75">-</operator> <operator pos:start="895:77" pos:end="895:77">(</operator><name pos:start="895:78" pos:end="895:78">i</name><operator pos:start="895:79" pos:end="895:79">+</operator><literal type="number" pos:start="895:80" pos:end="895:80">1</literal><operator pos:start="895:81" pos:end="895:82">==</operator><name pos:start="895:83" pos:end="895:94"><name pos:start="895:83" pos:end="895:83">h</name><operator pos:start="895:84" pos:end="895:85">-&gt;</operator><name pos:start="895:86" pos:end="895:94">mb_height</name></name><operator pos:start="895:95" pos:end="895:95">)</operator><operator pos:start="895:96" pos:end="895:96">)</operator> <operator pos:start="895:98" pos:end="895:98">*</operator> <sizeof pos:start="895:100" pos:end="895:122">sizeof<argument_list pos:start="895:106" pos:end="895:122">(<argument pos:start="895:107" pos:end="895:121"><expr pos:start="895:107" pos:end="895:121"><operator pos:start="895:107" pos:end="895:107">*</operator><name pos:start="895:108" pos:end="895:121"><name pos:start="895:108" pos:end="895:108">h</name><operator pos:start="895:109" pos:end="895:110">-&gt;</operator><name pos:start="895:111" pos:end="895:121">slice_table</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if> <else pos:start="897:11" pos:end="903:9">else <block pos:start="897:16" pos:end="903:9">{<block_content pos:start="899:13" pos:end="901:77">

            <expr_stmt pos:start="899:13" pos:end="901:77"><expr pos:start="899:13" pos:end="901:76"><call pos:start="899:13" pos:end="901:76"><name pos:start="899:13" pos:end="899:18">memset</name><argument_list pos:start="899:19" pos:end="901:76">(<argument pos:start="899:20" pos:end="899:33"><expr pos:start="899:20" pos:end="899:33"><name pos:start="899:20" pos:end="899:33"><name pos:start="899:20" pos:end="899:20">h</name><operator pos:start="899:21" pos:end="899:22">-&gt;</operator><name pos:start="899:23" pos:end="899:33">slice_table</name></name></expr></argument>, <argument pos:start="899:36" pos:end="899:37"><expr pos:start="899:36" pos:end="899:37"><operator pos:start="899:36" pos:end="899:36">-</operator><literal type="number" pos:start="899:37" pos:end="899:37">1</literal></expr></argument>,

                <argument pos:start="901:17" pos:end="901:75"><expr pos:start="901:17" pos:end="901:75"><operator pos:start="901:17" pos:end="901:17">(</operator><name pos:start="901:18" pos:end="901:29"><name pos:start="901:18" pos:end="901:18">h</name><operator pos:start="901:19" pos:end="901:20">-&gt;</operator><name pos:start="901:21" pos:end="901:29">mb_height</name></name> <operator pos:start="901:31" pos:end="901:31">*</operator> <name pos:start="901:33" pos:end="901:44"><name pos:start="901:33" pos:end="901:33">h</name><operator pos:start="901:34" pos:end="901:35">-&gt;</operator><name pos:start="901:36" pos:end="901:44">mb_stride</name></name> <operator pos:start="901:46" pos:end="901:46">-</operator> <literal type="number" pos:start="901:48" pos:end="901:48">1</literal><operator pos:start="901:49" pos:end="901:49">)</operator> <operator pos:start="901:51" pos:end="901:51">*</operator> <sizeof pos:start="901:53" pos:end="901:75">sizeof<argument_list pos:start="901:59" pos:end="901:75">(<argument pos:start="901:60" pos:end="901:74"><expr pos:start="901:60" pos:end="901:74"><operator pos:start="901:60" pos:end="901:60">*</operator><name pos:start="901:61" pos:end="901:74"><name pos:start="901:61" pos:end="901:61">h</name><operator pos:start="901:62" pos:end="901:63">-&gt;</operator><name pos:start="901:64" pos:end="901:74">slice_table</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="905:9" pos:end="905:33"><expr pos:start="905:9" pos:end="905:32"><name pos:start="905:9" pos:end="905:27"><name pos:start="905:9" pos:end="905:10">h0</name><operator pos:start="905:11" pos:end="905:12">-&gt;</operator><name pos:start="905:13" pos:end="905:27">last_slice_type</name></name> <operator pos:start="905:29" pos:end="905:29">=</operator> <operator pos:start="905:31" pos:end="905:31">-</operator><literal type="number" pos:start="905:32" pos:end="905:32">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="909:5" pos:end="911:19"><if pos:start="909:5" pos:end="911:19">if <condition pos:start="909:8" pos:end="909:50">(<expr pos:start="909:9" pos:end="909:49"><name pos:start="909:9" pos:end="909:9">h</name> <operator pos:start="909:11" pos:end="909:12">!=</operator> <name pos:start="909:14" pos:end="909:15">h0</name> <operator pos:start="909:17" pos:end="909:18">&amp;&amp;</operator> <operator pos:start="909:20" pos:end="909:20">(</operator><name pos:start="909:21" pos:end="909:23">ret</name> <operator pos:start="909:25" pos:end="909:25">=</operator> <call pos:start="909:27" pos:end="909:44"><name pos:start="909:27" pos:end="909:37">clone_slice</name><argument_list pos:start="909:38" pos:end="909:44">(<argument pos:start="909:39" pos:end="909:39"><expr pos:start="909:39" pos:end="909:39"><name pos:start="909:39" pos:end="909:39">h</name></expr></argument>, <argument pos:start="909:42" pos:end="909:43"><expr pos:start="909:42" pos:end="909:43"><name pos:start="909:42" pos:end="909:43">h0</name></expr></argument>)</argument_list></call><operator pos:start="909:45" pos:end="909:45">)</operator> <operator pos:start="909:47" pos:end="909:47">&lt;</operator> <literal type="number" pos:start="909:49" pos:end="909:49">0</literal></expr>)</condition><block type="pseudo" pos:start="911:9" pos:end="911:19"><block_content pos:start="911:9" pos:end="911:19">

        <return pos:start="911:9" pos:end="911:19">return <expr pos:start="911:16" pos:end="911:18"><name pos:start="911:16" pos:end="911:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="915:5" pos:end="917:64">/* can't be in alloc_tables because linesize isn't known there.

     * FIXME: redo bipred weight to not require extra buffer? */</comment>

    <for pos:start="919:5" pos:end="929:9">for <control pos:start="919:9" pos:end="919:48">(<init pos:start="919:10" pos:end="919:15"><expr pos:start="919:10" pos:end="919:14"><name pos:start="919:10" pos:end="919:10">i</name> <operator pos:start="919:12" pos:end="919:12">=</operator> <literal type="number" pos:start="919:14" pos:end="919:14">0</literal></expr>;</init> <condition pos:start="919:17" pos:end="919:43"><expr pos:start="919:17" pos:end="919:42"><name pos:start="919:17" pos:end="919:17">i</name> <operator pos:start="919:19" pos:end="919:19">&lt;</operator> <name pos:start="919:21" pos:end="919:42"><name pos:start="919:21" pos:end="919:21">h</name><operator pos:start="919:22" pos:end="919:23">-&gt;</operator><name pos:start="919:24" pos:end="919:42">slice_context_count</name></name></expr>;</condition> <incr pos:start="919:45" pos:end="919:47"><expr pos:start="919:45" pos:end="919:47"><name pos:start="919:45" pos:end="919:45">i</name><operator pos:start="919:46" pos:end="919:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="921:9" pos:end="929:9"><block_content pos:start="921:9" pos:end="929:9">

        <if_stmt pos:start="921:9" pos:end="929:9"><if pos:start="921:9" pos:end="929:9">if <condition pos:start="921:12" pos:end="921:33">(<expr pos:start="921:13" pos:end="921:32"><name pos:start="921:13" pos:end="921:32"><name pos:start="921:13" pos:end="921:13">h</name><operator pos:start="921:14" pos:end="921:15">-&gt;</operator><name pos:start="921:16" pos:end="921:29">thread_context</name><index pos:start="921:30" pos:end="921:32">[<expr pos:start="921:31" pos:end="921:31"><name pos:start="921:31" pos:end="921:31">i</name></expr>]</index></name></expr>)</condition> <block pos:start="921:35" pos:end="929:9">{<block_content pos:start="923:13" pos:end="927:27">

            <expr_stmt pos:start="923:13" pos:end="923:75"><expr pos:start="923:13" pos:end="923:74"><name pos:start="923:13" pos:end="923:15">ret</name> <operator pos:start="923:17" pos:end="923:17">=</operator> <call pos:start="923:19" pos:end="923:74"><name pos:start="923:19" pos:end="923:39">alloc_scratch_buffers</name><argument_list pos:start="923:40" pos:end="923:74">(<argument pos:start="923:41" pos:end="923:60"><expr pos:start="923:41" pos:end="923:60"><name pos:start="923:41" pos:end="923:60"><name pos:start="923:41" pos:end="923:41">h</name><operator pos:start="923:42" pos:end="923:43">-&gt;</operator><name pos:start="923:44" pos:end="923:57">thread_context</name><index pos:start="923:58" pos:end="923:60">[<expr pos:start="923:59" pos:end="923:59"><name pos:start="923:59" pos:end="923:59">i</name></expr>]</index></name></expr></argument>, <argument pos:start="923:63" pos:end="923:73"><expr pos:start="923:63" pos:end="923:73"><name pos:start="923:63" pos:end="923:73"><name pos:start="923:63" pos:end="923:63">h</name><operator pos:start="923:64" pos:end="923:65">-&gt;</operator><name pos:start="923:66" pos:end="923:73">linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="925:13" pos:end="927:27"><if pos:start="925:13" pos:end="927:27">if <condition pos:start="925:16" pos:end="925:24">(<expr pos:start="925:17" pos:end="925:23"><name pos:start="925:17" pos:end="925:19">ret</name> <operator pos:start="925:21" pos:end="925:21">&lt;</operator> <literal type="number" pos:start="925:23" pos:end="925:23">0</literal></expr>)</condition><block type="pseudo" pos:start="927:17" pos:end="927:27"><block_content pos:start="927:17" pos:end="927:27">

                <return pos:start="927:17" pos:end="927:27">return <expr pos:start="927:24" pos:end="927:26"><name pos:start="927:24" pos:end="927:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="933:5" pos:end="933:45"><expr pos:start="933:5" pos:end="933:44"><name pos:start="933:5" pos:end="933:29"><name pos:start="933:5" pos:end="933:5">h</name><operator pos:start="933:6" pos:end="933:7">-&gt;</operator><name pos:start="933:8" pos:end="933:18">cur_pic_ptr</name><operator pos:start="933:19" pos:end="933:20">-&gt;</operator><name pos:start="933:21" pos:end="933:29">frame_num</name></name> <operator pos:start="933:31" pos:end="933:31">=</operator> <name pos:start="933:33" pos:end="933:44"><name pos:start="933:33" pos:end="933:33">h</name><operator pos:start="933:34" pos:end="933:35">-&gt;</operator><name pos:start="933:36" pos:end="933:44">frame_num</name></name></expr>;</expr_stmt> <comment type="line" pos:start="933:47" pos:end="933:72">// FIXME frame_num cleanup</comment>



    <expr_stmt pos:start="937:5" pos:end="937:56"><expr pos:start="937:5" pos:end="937:55"><call pos:start="937:5" pos:end="937:55"><name pos:start="937:5" pos:end="937:14">av_assert1</name><argument_list pos:start="937:15" pos:end="937:55">(<argument pos:start="937:16" pos:end="937:54"><expr pos:start="937:16" pos:end="937:54"><name pos:start="937:16" pos:end="937:24"><name pos:start="937:16" pos:end="937:16">h</name><operator pos:start="937:17" pos:end="937:18">-&gt;</operator><name pos:start="937:19" pos:end="937:24">mb_num</name></name> <operator pos:start="937:26" pos:end="937:27">==</operator> <name pos:start="937:29" pos:end="937:39"><name pos:start="937:29" pos:end="937:29">h</name><operator pos:start="937:30" pos:end="937:31">-&gt;</operator><name pos:start="937:32" pos:end="937:39">mb_width</name></name> <operator pos:start="937:41" pos:end="937:41">*</operator> <name pos:start="937:43" pos:end="937:54"><name pos:start="937:43" pos:end="937:43">h</name><operator pos:start="937:44" pos:end="937:45">-&gt;</operator><name pos:start="937:46" pos:end="937:54">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="939:5" pos:end="947:5"><if pos:start="939:5" pos:end="947:5">if <condition pos:start="939:8" pos:end="941:39">(<expr pos:start="939:9" pos:end="941:38"><name pos:start="939:9" pos:end="939:25">first_mb_in_slice</name> <operator pos:start="939:27" pos:end="939:28">&lt;&lt;</operator> <call pos:start="939:30" pos:end="939:54"><name pos:start="939:30" pos:end="939:51">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="939:52" pos:end="939:54">(<argument pos:start="939:53" pos:end="939:53"><expr pos:start="939:53" pos:end="939:53"><name pos:start="939:53" pos:end="939:53">h</name></expr></argument>)</argument_list></call> <operator pos:start="939:56" pos:end="939:57">&gt;=</operator> <name pos:start="939:59" pos:end="939:67"><name pos:start="939:59" pos:end="939:59">h</name><operator pos:start="939:60" pos:end="939:61">-&gt;</operator><name pos:start="939:62" pos:end="939:67">mb_num</name></name> <operator pos:start="939:69" pos:end="939:70">||</operator>

        <name pos:start="941:9" pos:end="941:25">first_mb_in_slice</name> <operator pos:start="941:27" pos:end="941:28">&gt;=</operator> <name pos:start="941:30" pos:end="941:38"><name pos:start="941:30" pos:end="941:30">h</name><operator pos:start="941:31" pos:end="941:32">-&gt;</operator><name pos:start="941:33" pos:end="941:38">mb_num</name></name></expr>)</condition> <block pos:start="941:41" pos:end="947:5">{<block_content pos:start="943:9" pos:end="945:35">

        <expr_stmt pos:start="943:9" pos:end="943:71"><expr pos:start="943:9" pos:end="943:70"><call pos:start="943:9" pos:end="943:70"><name pos:start="943:9" pos:end="943:14">av_log</name><argument_list pos:start="943:15" pos:end="943:70">(<argument pos:start="943:16" pos:end="943:23"><expr pos:start="943:16" pos:end="943:23"><name pos:start="943:16" pos:end="943:23"><name pos:start="943:16" pos:end="943:16">h</name><operator pos:start="943:17" pos:end="943:18">-&gt;</operator><name pos:start="943:19" pos:end="943:23">avctx</name></name></expr></argument>, <argument pos:start="943:26" pos:end="943:37"><expr pos:start="943:26" pos:end="943:37"><name pos:start="943:26" pos:end="943:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="943:40" pos:end="943:69"><expr pos:start="943:40" pos:end="943:69"><literal type="string" pos:start="943:40" pos:end="943:69">"first_mb_in_slice overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="945:9" pos:end="945:35">return <expr pos:start="945:16" pos:end="945:34"><name pos:start="945:16" pos:end="945:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="949:5" pos:end="949:64"><expr pos:start="949:5" pos:end="949:63"><name pos:start="949:5" pos:end="949:18"><name pos:start="949:5" pos:end="949:5">h</name><operator pos:start="949:6" pos:end="949:7">-&gt;</operator><name pos:start="949:8" pos:end="949:18">resync_mb_x</name></name> <operator pos:start="949:20" pos:end="949:20">=</operator> <name pos:start="949:22" pos:end="949:28"><name pos:start="949:22" pos:end="949:22">h</name><operator pos:start="949:23" pos:end="949:24">-&gt;</operator><name pos:start="949:25" pos:end="949:28">mb_x</name></name> <operator pos:start="949:30" pos:end="949:30">=</operator>  <name pos:start="949:33" pos:end="949:49">first_mb_in_slice</name> <operator pos:start="949:51" pos:end="949:51">%</operator> <name pos:start="949:53" pos:end="949:63"><name pos:start="949:53" pos:end="949:53">h</name><operator pos:start="949:54" pos:end="949:55">-&gt;</operator><name pos:start="949:56" pos:end="949:63">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="951:5" pos:end="953:57"><expr pos:start="951:5" pos:end="953:56"><name pos:start="951:5" pos:end="951:18"><name pos:start="951:5" pos:end="951:5">h</name><operator pos:start="951:6" pos:end="951:7">-&gt;</operator><name pos:start="951:8" pos:end="951:18">resync_mb_y</name></name> <operator pos:start="951:20" pos:end="951:20">=</operator> <name pos:start="951:22" pos:end="951:28"><name pos:start="951:22" pos:end="951:22">h</name><operator pos:start="951:23" pos:end="951:24">-&gt;</operator><name pos:start="951:25" pos:end="951:28">mb_y</name></name> <operator pos:start="951:30" pos:end="951:30">=</operator> <operator pos:start="951:32" pos:end="951:32">(</operator><name pos:start="951:33" pos:end="951:49">first_mb_in_slice</name> <operator pos:start="951:51" pos:end="951:51">/</operator> <name pos:start="951:53" pos:end="951:63"><name pos:start="951:53" pos:end="951:53">h</name><operator pos:start="951:54" pos:end="951:55">-&gt;</operator><name pos:start="951:56" pos:end="951:63">mb_width</name></name><operator pos:start="951:64" pos:end="951:64">)</operator> <operator pos:start="951:66" pos:end="951:67">&lt;&lt;</operator>

                               <call pos:start="953:32" pos:end="953:56"><name pos:start="953:32" pos:end="953:53">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="953:54" pos:end="953:56">(<argument pos:start="953:55" pos:end="953:55"><expr pos:start="953:55" pos:end="953:55"><name pos:start="953:55" pos:end="953:55">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="955:5" pos:end="957:47"><if pos:start="955:5" pos:end="957:47">if <condition pos:start="955:8" pos:end="955:50">(<expr pos:start="955:9" pos:end="955:49"><name pos:start="955:9" pos:end="955:28"><name pos:start="955:9" pos:end="955:9">h</name><operator pos:start="955:10" pos:end="955:11">-&gt;</operator><name pos:start="955:12" pos:end="955:28">picture_structure</name></name> <operator pos:start="955:30" pos:end="955:31">==</operator> <name pos:start="955:33" pos:end="955:49">PICT_BOTTOM_FIELD</name></expr>)</condition><block type="pseudo" pos:start="957:9" pos:end="957:47"><block_content pos:start="957:9" pos:end="957:47">

        <expr_stmt pos:start="957:9" pos:end="957:47"><expr pos:start="957:9" pos:end="957:46"><name pos:start="957:9" pos:end="957:22"><name pos:start="957:9" pos:end="957:9">h</name><operator pos:start="957:10" pos:end="957:11">-&gt;</operator><name pos:start="957:12" pos:end="957:22">resync_mb_y</name></name> <operator pos:start="957:24" pos:end="957:24">=</operator> <name pos:start="957:26" pos:end="957:32"><name pos:start="957:26" pos:end="957:26">h</name><operator pos:start="957:27" pos:end="957:28">-&gt;</operator><name pos:start="957:29" pos:end="957:32">mb_y</name></name> <operator pos:start="957:34" pos:end="957:34">=</operator> <name pos:start="957:36" pos:end="957:42"><name pos:start="957:36" pos:end="957:36">h</name><operator pos:start="957:37" pos:end="957:38">-&gt;</operator><name pos:start="957:39" pos:end="957:42">mb_y</name></name> <operator pos:start="957:44" pos:end="957:44">+</operator> <literal type="number" pos:start="957:46" pos:end="957:46">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="959:5" pos:end="959:39"><expr pos:start="959:5" pos:end="959:38"><call pos:start="959:5" pos:end="959:38"><name pos:start="959:5" pos:end="959:14">av_assert1</name><argument_list pos:start="959:15" pos:end="959:38">(<argument pos:start="959:16" pos:end="959:37"><expr pos:start="959:16" pos:end="959:37"><name pos:start="959:16" pos:end="959:22"><name pos:start="959:16" pos:end="959:16">h</name><operator pos:start="959:17" pos:end="959:18">-&gt;</operator><name pos:start="959:19" pos:end="959:22">mb_y</name></name> <operator pos:start="959:24" pos:end="959:24">&lt;</operator> <name pos:start="959:26" pos:end="959:37"><name pos:start="959:26" pos:end="959:26">h</name><operator pos:start="959:27" pos:end="959:28">-&gt;</operator><name pos:start="959:29" pos:end="959:37">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="963:5" pos:end="975:5"><if pos:start="963:5" pos:end="969:5">if <condition pos:start="963:8" pos:end="963:43">(<expr pos:start="963:9" pos:end="963:42"><name pos:start="963:9" pos:end="963:28"><name pos:start="963:9" pos:end="963:9">h</name><operator pos:start="963:10" pos:end="963:11">-&gt;</operator><name pos:start="963:12" pos:end="963:28">picture_structure</name></name> <operator pos:start="963:30" pos:end="963:31">==</operator> <name pos:start="963:33" pos:end="963:42">PICT_FRAME</name></expr>)</condition> <block pos:start="963:45" pos:end="969:5">{<block_content pos:start="965:9" pos:end="967:57">

        <expr_stmt pos:start="965:9" pos:end="965:39"><expr pos:start="965:9" pos:end="965:38"><name pos:start="965:9" pos:end="965:23"><name pos:start="965:9" pos:end="965:9">h</name><operator pos:start="965:10" pos:end="965:11">-&gt;</operator><name pos:start="965:12" pos:end="965:23">curr_pic_num</name></name> <operator pos:start="965:25" pos:end="965:25">=</operator> <name pos:start="965:27" pos:end="965:38"><name pos:start="965:27" pos:end="965:27">h</name><operator pos:start="965:28" pos:end="965:29">-&gt;</operator><name pos:start="965:30" pos:end="965:38">frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="967:9" pos:end="967:57"><expr pos:start="967:9" pos:end="967:56"><name pos:start="967:9" pos:end="967:22"><name pos:start="967:9" pos:end="967:9">h</name><operator pos:start="967:10" pos:end="967:11">-&gt;</operator><name pos:start="967:12" pos:end="967:22">max_pic_num</name></name>  <operator pos:start="967:25" pos:end="967:25">=</operator> <literal type="number" pos:start="967:27" pos:end="967:27">1</literal> <operator pos:start="967:29" pos:end="967:30">&lt;&lt;</operator> <name pos:start="967:32" pos:end="967:56"><name pos:start="967:32" pos:end="967:32">h</name><operator pos:start="967:33" pos:end="967:34">-&gt;</operator><name pos:start="967:35" pos:end="967:37">sps</name><operator pos:start="967:38" pos:end="967:38">.</operator><name pos:start="967:39" pos:end="967:56">log2_max_frame_num</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="969:7" pos:end="975:5">else <block pos:start="969:12" pos:end="975:5">{<block_content pos:start="971:9" pos:end="973:63">

        <expr_stmt pos:start="971:9" pos:end="971:47"><expr pos:start="971:9" pos:end="971:46"><name pos:start="971:9" pos:end="971:23"><name pos:start="971:9" pos:end="971:9">h</name><operator pos:start="971:10" pos:end="971:11">-&gt;</operator><name pos:start="971:12" pos:end="971:23">curr_pic_num</name></name> <operator pos:start="971:25" pos:end="971:25">=</operator> <literal type="number" pos:start="971:27" pos:end="971:27">2</literal> <operator pos:start="971:29" pos:end="971:29">*</operator> <name pos:start="971:31" pos:end="971:42"><name pos:start="971:31" pos:end="971:31">h</name><operator pos:start="971:32" pos:end="971:33">-&gt;</operator><name pos:start="971:34" pos:end="971:42">frame_num</name></name> <operator pos:start="971:44" pos:end="971:44">+</operator> <literal type="number" pos:start="971:46" pos:end="971:46">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="973:9" pos:end="973:63"><expr pos:start="973:9" pos:end="973:62"><name pos:start="973:9" pos:end="973:22"><name pos:start="973:9" pos:end="973:9">h</name><operator pos:start="973:10" pos:end="973:11">-&gt;</operator><name pos:start="973:12" pos:end="973:22">max_pic_num</name></name>  <operator pos:start="973:25" pos:end="973:25">=</operator> <literal type="number" pos:start="973:27" pos:end="973:27">1</literal> <operator pos:start="973:29" pos:end="973:30">&lt;&lt;</operator> <operator pos:start="973:32" pos:end="973:32">(</operator><name pos:start="973:33" pos:end="973:57"><name pos:start="973:33" pos:end="973:33">h</name><operator pos:start="973:34" pos:end="973:35">-&gt;</operator><name pos:start="973:36" pos:end="973:38">sps</name><operator pos:start="973:39" pos:end="973:39">.</operator><name pos:start="973:40" pos:end="973:57">log2_max_frame_num</name></name> <operator pos:start="973:59" pos:end="973:59">+</operator> <literal type="number" pos:start="973:61" pos:end="973:61">1</literal><operator pos:start="973:62" pos:end="973:62">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="979:5" pos:end="981:30"><if pos:start="979:5" pos:end="981:30">if <condition pos:start="979:8" pos:end="979:42">(<expr pos:start="979:9" pos:end="979:41"><name pos:start="979:9" pos:end="979:24"><name pos:start="979:9" pos:end="979:9">h</name><operator pos:start="979:10" pos:end="979:11">-&gt;</operator><name pos:start="979:12" pos:end="979:24">nal_unit_type</name></name> <operator pos:start="979:26" pos:end="979:27">==</operator> <name pos:start="979:29" pos:end="979:41">NAL_IDR_SLICE</name></expr>)</condition><block type="pseudo" pos:start="981:9" pos:end="981:30"><block_content pos:start="981:9" pos:end="981:30">

        <expr_stmt pos:start="981:9" pos:end="981:30"><expr pos:start="981:9" pos:end="981:29"><call pos:start="981:9" pos:end="981:29"><name pos:start="981:9" pos:end="981:21">get_ue_golomb</name><argument_list pos:start="981:22" pos:end="981:29">(<argument pos:start="981:23" pos:end="981:28"><expr pos:start="981:23" pos:end="981:28"><operator pos:start="981:23" pos:end="981:23">&amp;</operator><name pos:start="981:24" pos:end="981:28"><name pos:start="981:24" pos:end="981:24">h</name><operator pos:start="981:25" pos:end="981:26">-&gt;</operator><name pos:start="981:27" pos:end="981:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="981:32" pos:end="981:47">/* idr_pic_id */</comment>



    <if_stmt pos:start="985:5" pos:end="995:5"><if pos:start="985:5" pos:end="995:5">if <condition pos:start="985:8" pos:end="985:29">(<expr pos:start="985:9" pos:end="985:28"><name pos:start="985:9" pos:end="985:23"><name pos:start="985:9" pos:end="985:9">h</name><operator pos:start="985:10" pos:end="985:11">-&gt;</operator><name pos:start="985:12" pos:end="985:14">sps</name><operator pos:start="985:15" pos:end="985:15">.</operator><name pos:start="985:16" pos:end="985:23">poc_type</name></name> <operator pos:start="985:25" pos:end="985:26">==</operator> <literal type="number" pos:start="985:28" pos:end="985:28">0</literal></expr>)</condition> <block pos:start="985:31" pos:end="995:5">{<block_content pos:start="987:9" pos:end="993:56">

        <expr_stmt pos:start="987:9" pos:end="987:63"><expr pos:start="987:9" pos:end="987:62"><name pos:start="987:9" pos:end="987:18"><name pos:start="987:9" pos:end="987:9">h</name><operator pos:start="987:10" pos:end="987:11">-&gt;</operator><name pos:start="987:12" pos:end="987:18">poc_lsb</name></name> <operator pos:start="987:20" pos:end="987:20">=</operator> <call pos:start="987:22" pos:end="987:62"><name pos:start="987:22" pos:end="987:29">get_bits</name><argument_list pos:start="987:30" pos:end="987:62">(<argument pos:start="987:31" pos:end="987:36"><expr pos:start="987:31" pos:end="987:36"><operator pos:start="987:31" pos:end="987:31">&amp;</operator><name pos:start="987:32" pos:end="987:36"><name pos:start="987:32" pos:end="987:32">h</name><operator pos:start="987:33" pos:end="987:34">-&gt;</operator><name pos:start="987:35" pos:end="987:36">gb</name></name></expr></argument>, <argument pos:start="987:39" pos:end="987:61"><expr pos:start="987:39" pos:end="987:61"><name pos:start="987:39" pos:end="987:61"><name pos:start="987:39" pos:end="987:39">h</name><operator pos:start="987:40" pos:end="987:41">-&gt;</operator><name pos:start="987:42" pos:end="987:44">sps</name><operator pos:start="987:45" pos:end="987:45">.</operator><name pos:start="987:46" pos:end="987:61">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="991:9" pos:end="993:56"><if pos:start="991:9" pos:end="993:56">if <condition pos:start="991:12" pos:end="991:80">(<expr pos:start="991:13" pos:end="991:79"><name pos:start="991:13" pos:end="991:36"><name pos:start="991:13" pos:end="991:13">h</name><operator pos:start="991:14" pos:end="991:15">-&gt;</operator><name pos:start="991:16" pos:end="991:18">pps</name><operator pos:start="991:19" pos:end="991:19">.</operator><name pos:start="991:20" pos:end="991:36">pic_order_present</name></name> <operator pos:start="991:38" pos:end="991:39">==</operator> <literal type="number" pos:start="991:41" pos:end="991:41">1</literal> <operator pos:start="991:43" pos:end="991:44">&amp;&amp;</operator> <name pos:start="991:46" pos:end="991:65"><name pos:start="991:46" pos:end="991:46">h</name><operator pos:start="991:47" pos:end="991:48">-&gt;</operator><name pos:start="991:49" pos:end="991:65">picture_structure</name></name> <operator pos:start="991:67" pos:end="991:68">==</operator> <name pos:start="991:70" pos:end="991:79">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="993:13" pos:end="993:56"><block_content pos:start="993:13" pos:end="993:56">

            <expr_stmt pos:start="993:13" pos:end="993:56"><expr pos:start="993:13" pos:end="993:55"><name pos:start="993:13" pos:end="993:31"><name pos:start="993:13" pos:end="993:13">h</name><operator pos:start="993:14" pos:end="993:15">-&gt;</operator><name pos:start="993:16" pos:end="993:31">delta_poc_bottom</name></name> <operator pos:start="993:33" pos:end="993:33">=</operator> <call pos:start="993:35" pos:end="993:55"><name pos:start="993:35" pos:end="993:47">get_se_golomb</name><argument_list pos:start="993:48" pos:end="993:55">(<argument pos:start="993:49" pos:end="993:54"><expr pos:start="993:49" pos:end="993:54"><operator pos:start="993:49" pos:end="993:49">&amp;</operator><name pos:start="993:50" pos:end="993:54"><name pos:start="993:50" pos:end="993:50">h</name><operator pos:start="993:51" pos:end="993:52">-&gt;</operator><name pos:start="993:53" pos:end="993:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="999:5" pos:end="1009:5"><if pos:start="999:5" pos:end="1009:5">if <condition pos:start="999:8" pos:end="999:73">(<expr pos:start="999:9" pos:end="999:72"><name pos:start="999:9" pos:end="999:23"><name pos:start="999:9" pos:end="999:9">h</name><operator pos:start="999:10" pos:end="999:11">-&gt;</operator><name pos:start="999:12" pos:end="999:14">sps</name><operator pos:start="999:15" pos:end="999:15">.</operator><name pos:start="999:16" pos:end="999:23">poc_type</name></name> <operator pos:start="999:25" pos:end="999:26">==</operator> <literal type="number" pos:start="999:28" pos:end="999:28">1</literal> <operator pos:start="999:30" pos:end="999:31">&amp;&amp;</operator> <operator pos:start="999:33" pos:end="999:33">!</operator><name pos:start="999:34" pos:end="999:72"><name pos:start="999:34" pos:end="999:34">h</name><operator pos:start="999:35" pos:end="999:36">-&gt;</operator><name pos:start="999:37" pos:end="999:39">sps</name><operator pos:start="999:40" pos:end="999:40">.</operator><name pos:start="999:41" pos:end="999:72">delta_pic_order_always_zero_flag</name></name></expr>)</condition> <block pos:start="999:75" pos:end="1009:5">{<block_content pos:start="1001:9" pos:end="1007:52">

        <expr_stmt pos:start="1001:9" pos:end="1001:48"><expr pos:start="1001:9" pos:end="1001:47"><name pos:start="1001:9" pos:end="1001:23"><name pos:start="1001:9" pos:end="1001:9">h</name><operator pos:start="1001:10" pos:end="1001:11">-&gt;</operator><name pos:start="1001:12" pos:end="1001:20">delta_poc</name><index pos:start="1001:21" pos:end="1001:23">[<expr pos:start="1001:22" pos:end="1001:22"><literal type="number" pos:start="1001:22" pos:end="1001:22">0</literal></expr>]</index></name> <operator pos:start="1001:25" pos:end="1001:25">=</operator> <call pos:start="1001:27" pos:end="1001:47"><name pos:start="1001:27" pos:end="1001:39">get_se_golomb</name><argument_list pos:start="1001:40" pos:end="1001:47">(<argument pos:start="1001:41" pos:end="1001:46"><expr pos:start="1001:41" pos:end="1001:46"><operator pos:start="1001:41" pos:end="1001:41">&amp;</operator><name pos:start="1001:42" pos:end="1001:46"><name pos:start="1001:42" pos:end="1001:42">h</name><operator pos:start="1001:43" pos:end="1001:44">-&gt;</operator><name pos:start="1001:45" pos:end="1001:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="1005:9" pos:end="1007:52"><if pos:start="1005:9" pos:end="1007:52">if <condition pos:start="1005:12" pos:end="1005:80">(<expr pos:start="1005:13" pos:end="1005:79"><name pos:start="1005:13" pos:end="1005:36"><name pos:start="1005:13" pos:end="1005:13">h</name><operator pos:start="1005:14" pos:end="1005:15">-&gt;</operator><name pos:start="1005:16" pos:end="1005:18">pps</name><operator pos:start="1005:19" pos:end="1005:19">.</operator><name pos:start="1005:20" pos:end="1005:36">pic_order_present</name></name> <operator pos:start="1005:38" pos:end="1005:39">==</operator> <literal type="number" pos:start="1005:41" pos:end="1005:41">1</literal> <operator pos:start="1005:43" pos:end="1005:44">&amp;&amp;</operator> <name pos:start="1005:46" pos:end="1005:65"><name pos:start="1005:46" pos:end="1005:46">h</name><operator pos:start="1005:47" pos:end="1005:48">-&gt;</operator><name pos:start="1005:49" pos:end="1005:65">picture_structure</name></name> <operator pos:start="1005:67" pos:end="1005:68">==</operator> <name pos:start="1005:70" pos:end="1005:79">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="1007:13" pos:end="1007:52"><block_content pos:start="1007:13" pos:end="1007:52">

            <expr_stmt pos:start="1007:13" pos:end="1007:52"><expr pos:start="1007:13" pos:end="1007:51"><name pos:start="1007:13" pos:end="1007:27"><name pos:start="1007:13" pos:end="1007:13">h</name><operator pos:start="1007:14" pos:end="1007:15">-&gt;</operator><name pos:start="1007:16" pos:end="1007:24">delta_poc</name><index pos:start="1007:25" pos:end="1007:27">[<expr pos:start="1007:26" pos:end="1007:26"><literal type="number" pos:start="1007:26" pos:end="1007:26">1</literal></expr>]</index></name> <operator pos:start="1007:29" pos:end="1007:29">=</operator> <call pos:start="1007:31" pos:end="1007:51"><name pos:start="1007:31" pos:end="1007:43">get_se_golomb</name><argument_list pos:start="1007:44" pos:end="1007:51">(<argument pos:start="1007:45" pos:end="1007:50"><expr pos:start="1007:45" pos:end="1007:50"><operator pos:start="1007:45" pos:end="1007:45">&amp;</operator><name pos:start="1007:46" pos:end="1007:50"><name pos:start="1007:46" pos:end="1007:46">h</name><operator pos:start="1007:47" pos:end="1007:48">-&gt;</operator><name pos:start="1007:49" pos:end="1007:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="1013:5" pos:end="1013:68"><expr pos:start="1013:5" pos:end="1013:67"><call pos:start="1013:5" pos:end="1013:67"><name pos:start="1013:5" pos:end="1013:15">ff_init_poc</name><argument_list pos:start="1013:16" pos:end="1013:67">(<argument pos:start="1013:17" pos:end="1013:17"><expr pos:start="1013:17" pos:end="1013:17"><name pos:start="1013:17" pos:end="1013:17">h</name></expr></argument>, <argument pos:start="1013:20" pos:end="1013:44"><expr pos:start="1013:20" pos:end="1013:44"><name pos:start="1013:20" pos:end="1013:44"><name pos:start="1013:20" pos:end="1013:20">h</name><operator pos:start="1013:21" pos:end="1013:22">-&gt;</operator><name pos:start="1013:23" pos:end="1013:33">cur_pic_ptr</name><operator pos:start="1013:34" pos:end="1013:35">-&gt;</operator><name pos:start="1013:36" pos:end="1013:44">field_poc</name></name></expr></argument>, <argument pos:start="1013:47" pos:end="1013:66"><expr pos:start="1013:47" pos:end="1013:66"><operator pos:start="1013:47" pos:end="1013:47">&amp;</operator><name pos:start="1013:48" pos:end="1013:66"><name pos:start="1013:48" pos:end="1013:48">h</name><operator pos:start="1013:49" pos:end="1013:50">-&gt;</operator><name pos:start="1013:51" pos:end="1013:61">cur_pic_ptr</name><operator pos:start="1013:62" pos:end="1013:63">-&gt;</operator><name pos:start="1013:64" pos:end="1013:66">poc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1017:5" pos:end="1019:55"><if pos:start="1017:5" pos:end="1019:55">if <condition pos:start="1017:8" pos:end="1017:41">(<expr pos:start="1017:9" pos:end="1017:40"><name pos:start="1017:9" pos:end="1017:40"><name pos:start="1017:9" pos:end="1017:9">h</name><operator pos:start="1017:10" pos:end="1017:11">-&gt;</operator><name pos:start="1017:12" pos:end="1017:14">pps</name><operator pos:start="1017:15" pos:end="1017:15">.</operator><name pos:start="1017:16" pos:end="1017:40">redundant_pic_cnt_present</name></name></expr>)</condition><block type="pseudo" pos:start="1019:9" pos:end="1019:55"><block_content pos:start="1019:9" pos:end="1019:55">

        <expr_stmt pos:start="1019:9" pos:end="1019:55"><expr pos:start="1019:9" pos:end="1019:54"><name pos:start="1019:9" pos:end="1019:30"><name pos:start="1019:9" pos:end="1019:9">h</name><operator pos:start="1019:10" pos:end="1019:11">-&gt;</operator><name pos:start="1019:12" pos:end="1019:30">redundant_pic_count</name></name> <operator pos:start="1019:32" pos:end="1019:32">=</operator> <call pos:start="1019:34" pos:end="1019:54"><name pos:start="1019:34" pos:end="1019:46">get_ue_golomb</name><argument_list pos:start="1019:47" pos:end="1019:54">(<argument pos:start="1019:48" pos:end="1019:53"><expr pos:start="1019:48" pos:end="1019:53"><operator pos:start="1019:48" pos:end="1019:48">&amp;</operator><name pos:start="1019:49" pos:end="1019:53"><name pos:start="1019:49" pos:end="1019:49">h</name><operator pos:start="1019:50" pos:end="1019:51">-&gt;</operator><name pos:start="1019:52" pos:end="1019:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="1023:5" pos:end="1023:30"><expr pos:start="1023:5" pos:end="1023:29"><name pos:start="1023:5" pos:end="1023:7">ret</name> <operator pos:start="1023:9" pos:end="1023:9">=</operator> <call pos:start="1023:11" pos:end="1023:29"><name pos:start="1023:11" pos:end="1023:26">ff_set_ref_count</name><argument_list pos:start="1023:27" pos:end="1023:29">(<argument pos:start="1023:28" pos:end="1023:28"><expr pos:start="1023:28" pos:end="1023:28"><name pos:start="1023:28" pos:end="1023:28">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="1025:5" pos:end="1027:19"><if pos:start="1025:5" pos:end="1027:19">if <condition pos:start="1025:8" pos:end="1025:16">(<expr pos:start="1025:9" pos:end="1025:15"><name pos:start="1025:9" pos:end="1025:11">ret</name> <operator pos:start="1025:13" pos:end="1025:13">&lt;</operator> <literal type="number" pos:start="1025:15" pos:end="1025:15">0</literal></expr>)</condition><block type="pseudo" pos:start="1027:9" pos:end="1027:19"><block_content pos:start="1027:9" pos:end="1027:19">

        <return pos:start="1027:9" pos:end="1027:19">return <expr pos:start="1027:16" pos:end="1027:18"><name pos:start="1027:16" pos:end="1027:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="1031:5" pos:end="1043:5"><if pos:start="1031:5" pos:end="1043:5">if <condition pos:start="1031:8" pos:end="1037:75">(<expr pos:start="1031:9" pos:end="1037:74"><name pos:start="1031:9" pos:end="1031:18">slice_type</name> <operator pos:start="1031:20" pos:end="1031:21">!=</operator> <name pos:start="1031:23" pos:end="1031:39">AV_PICTURE_TYPE_I</name> <operator pos:start="1031:41" pos:end="1031:42">&amp;&amp;</operator>

        <operator pos:start="1033:9" pos:end="1033:9">(</operator><name pos:start="1033:10" pos:end="1033:26"><name pos:start="1033:10" pos:end="1033:11">h0</name><operator pos:start="1033:12" pos:end="1033:13">-&gt;</operator><name pos:start="1033:14" pos:end="1033:26">current_slice</name></name> <operator pos:start="1033:28" pos:end="1033:29">==</operator> <literal type="number" pos:start="1033:31" pos:end="1033:31">0</literal> <operator pos:start="1033:33" pos:end="1033:34">||</operator>

         <name pos:start="1035:10" pos:end="1035:19">slice_type</name> <operator pos:start="1035:21" pos:end="1035:22">!=</operator> <name pos:start="1035:24" pos:end="1035:42"><name pos:start="1035:24" pos:end="1035:25">h0</name><operator pos:start="1035:26" pos:end="1035:27">-&gt;</operator><name pos:start="1035:28" pos:end="1035:42">last_slice_type</name></name> <operator pos:start="1035:44" pos:end="1035:45">||</operator>

         <call pos:start="1037:10" pos:end="1037:73"><name pos:start="1037:10" pos:end="1037:15">memcmp</name><argument_list pos:start="1037:16" pos:end="1037:73">(<argument pos:start="1037:17" pos:end="1037:34"><expr pos:start="1037:17" pos:end="1037:34"><name pos:start="1037:17" pos:end="1037:34"><name pos:start="1037:17" pos:end="1037:18">h0</name><operator pos:start="1037:19" pos:end="1037:20">-&gt;</operator><name pos:start="1037:21" pos:end="1037:34">last_ref_count</name></name></expr></argument>, <argument pos:start="1037:37" pos:end="1037:49"><expr pos:start="1037:37" pos:end="1037:49"><name pos:start="1037:37" pos:end="1037:49"><name pos:start="1037:37" pos:end="1037:38">h0</name><operator pos:start="1037:39" pos:end="1037:40">-&gt;</operator><name pos:start="1037:41" pos:end="1037:49">ref_count</name></name></expr></argument>, <argument pos:start="1037:52" pos:end="1037:72"><expr pos:start="1037:52" pos:end="1037:72"><sizeof pos:start="1037:52" pos:end="1037:72">sizeof<argument_list pos:start="1037:58" pos:end="1037:72">(<argument pos:start="1037:59" pos:end="1037:71"><expr pos:start="1037:59" pos:end="1037:71"><name pos:start="1037:59" pos:end="1037:71"><name pos:start="1037:59" pos:end="1037:60">h0</name><operator pos:start="1037:61" pos:end="1037:62">-&gt;</operator><name pos:start="1037:63" pos:end="1037:71">ref_count</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="1037:74" pos:end="1037:74">)</operator></expr>)</condition> <block pos:start="1037:77" pos:end="1043:5">{<block_content pos:start="1041:9" pos:end="1041:41">



        <expr_stmt pos:start="1041:9" pos:end="1041:41"><expr pos:start="1041:9" pos:end="1041:40"><call pos:start="1041:9" pos:end="1041:40"><name pos:start="1041:9" pos:end="1041:37">ff_h264_fill_default_ref_list</name><argument_list pos:start="1041:38" pos:end="1041:40">(<argument pos:start="1041:39" pos:end="1041:39"><expr pos:start="1041:39" pos:end="1041:39"><name pos:start="1041:39" pos:end="1041:39">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1047:5" pos:end="1059:5"><if pos:start="1047:5" pos:end="1059:5">if <condition pos:start="1047:8" pos:end="1047:47">(<expr pos:start="1047:9" pos:end="1047:46"><name pos:start="1047:9" pos:end="1047:25"><name pos:start="1047:9" pos:end="1047:9">h</name><operator pos:start="1047:10" pos:end="1047:11">-&gt;</operator><name pos:start="1047:12" pos:end="1047:25">slice_type_nos</name></name> <operator pos:start="1047:27" pos:end="1047:28">!=</operator> <name pos:start="1047:30" pos:end="1047:46">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="1047:49" pos:end="1059:5">{<block_content pos:start="1049:8" pos:end="1057:8">

       <expr_stmt pos:start="1049:8" pos:end="1049:55"><expr pos:start="1049:8" pos:end="1049:54"><name pos:start="1049:8" pos:end="1049:10">ret</name> <operator pos:start="1049:12" pos:end="1049:12">=</operator> <call pos:start="1049:14" pos:end="1049:54"><name pos:start="1049:14" pos:end="1049:51">ff_h264_decode_ref_pic_list_reordering</name><argument_list pos:start="1049:52" pos:end="1049:54">(<argument pos:start="1049:53" pos:end="1049:53"><expr pos:start="1049:53" pos:end="1049:53"><name pos:start="1049:53" pos:end="1049:53">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <if_stmt pos:start="1051:8" pos:end="1057:8"><if pos:start="1051:8" pos:end="1057:8">if <condition pos:start="1051:11" pos:end="1051:19">(<expr pos:start="1051:12" pos:end="1051:18"><name pos:start="1051:12" pos:end="1051:14">ret</name> <operator pos:start="1051:16" pos:end="1051:16">&lt;</operator> <literal type="number" pos:start="1051:18" pos:end="1051:18">0</literal></expr>)</condition> <block pos:start="1051:21" pos:end="1057:8">{<block_content pos:start="1053:12" pos:end="1055:22">

           <expr_stmt pos:start="1053:12" pos:end="1053:49"><expr pos:start="1053:12" pos:end="1053:48"><name pos:start="1053:12" pos:end="1053:26"><name pos:start="1053:12" pos:end="1053:12">h</name><operator pos:start="1053:13" pos:end="1053:14">-&gt;</operator><name pos:start="1053:15" pos:end="1053:23">ref_count</name><index pos:start="1053:24" pos:end="1053:26">[<expr pos:start="1053:25" pos:end="1053:25"><literal type="number" pos:start="1053:25" pos:end="1053:25">1</literal></expr>]</index></name> <operator pos:start="1053:28" pos:end="1053:28">=</operator> <name pos:start="1053:30" pos:end="1053:44"><name pos:start="1053:30" pos:end="1053:30">h</name><operator pos:start="1053:31" pos:end="1053:32">-&gt;</operator><name pos:start="1053:33" pos:end="1053:41">ref_count</name><index pos:start="1053:42" pos:end="1053:44">[<expr pos:start="1053:43" pos:end="1053:43"><literal type="number" pos:start="1053:43" pos:end="1053:43">0</literal></expr>]</index></name> <operator pos:start="1053:46" pos:end="1053:46">=</operator> <literal type="number" pos:start="1053:48" pos:end="1053:48">0</literal></expr>;</expr_stmt>

           <return pos:start="1055:12" pos:end="1055:22">return <expr pos:start="1055:19" pos:end="1055:21"><name pos:start="1055:19" pos:end="1055:21">ret</name></expr>;</return>

       </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1063:5" pos:end="1089:5"><if pos:start="1063:5" pos:end="1069:32">if <condition pos:start="1063:8" pos:end="1067:49">(<expr pos:start="1063:9" pos:end="1067:48"><operator pos:start="1063:9" pos:end="1063:9">(</operator><name pos:start="1063:10" pos:end="1063:29"><name pos:start="1063:10" pos:end="1063:10">h</name><operator pos:start="1063:11" pos:end="1063:12">-&gt;</operator><name pos:start="1063:13" pos:end="1063:15">pps</name><operator pos:start="1063:16" pos:end="1063:16">.</operator><name pos:start="1063:17" pos:end="1063:29">weighted_pred</name></name> <operator pos:start="1063:31" pos:end="1063:32">&amp;&amp;</operator> <name pos:start="1063:34" pos:end="1063:50"><name pos:start="1063:34" pos:end="1063:34">h</name><operator pos:start="1063:35" pos:end="1063:36">-&gt;</operator><name pos:start="1063:37" pos:end="1063:50">slice_type_nos</name></name> <operator pos:start="1063:52" pos:end="1063:53">==</operator> <name pos:start="1063:55" pos:end="1063:71">AV_PICTURE_TYPE_P</name><operator pos:start="1063:72" pos:end="1063:72">)</operator> <operator pos:start="1063:74" pos:end="1063:75">||</operator>

        <operator pos:start="1065:9" pos:end="1065:9">(</operator><name pos:start="1065:10" pos:end="1065:35"><name pos:start="1065:10" pos:end="1065:10">h</name><operator pos:start="1065:11" pos:end="1065:12">-&gt;</operator><name pos:start="1065:13" pos:end="1065:15">pps</name><operator pos:start="1065:16" pos:end="1065:16">.</operator><name pos:start="1065:17" pos:end="1065:35">weighted_bipred_idc</name></name> <operator pos:start="1065:37" pos:end="1065:38">==</operator> <literal type="number" pos:start="1065:40" pos:end="1065:40">1</literal> <operator pos:start="1065:42" pos:end="1065:43">&amp;&amp;</operator>

         <name pos:start="1067:10" pos:end="1067:26"><name pos:start="1067:10" pos:end="1067:10">h</name><operator pos:start="1067:11" pos:end="1067:12">-&gt;</operator><name pos:start="1067:13" pos:end="1067:26">slice_type_nos</name></name> <operator pos:start="1067:28" pos:end="1067:29">==</operator> <name pos:start="1067:31" pos:end="1067:47">AV_PICTURE_TYPE_B</name><operator pos:start="1067:48" pos:end="1067:48">)</operator></expr>)</condition><block type="pseudo" pos:start="1069:9" pos:end="1069:32"><block_content pos:start="1069:9" pos:end="1069:32">

        <expr_stmt pos:start="1069:9" pos:end="1069:32"><expr pos:start="1069:9" pos:end="1069:31"><call pos:start="1069:9" pos:end="1069:31"><name pos:start="1069:9" pos:end="1069:28">ff_pred_weight_table</name><argument_list pos:start="1069:29" pos:end="1069:31">(<argument pos:start="1069:30" pos:end="1069:30"><expr pos:start="1069:30" pos:end="1069:30"><name pos:start="1069:30" pos:end="1069:30">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="1071:5" pos:end="1077:5">else if <condition pos:start="1071:13" pos:end="1073:52">(<expr pos:start="1071:14" pos:end="1073:51"><name pos:start="1071:14" pos:end="1071:39"><name pos:start="1071:14" pos:end="1071:14">h</name><operator pos:start="1071:15" pos:end="1071:16">-&gt;</operator><name pos:start="1071:17" pos:end="1071:19">pps</name><operator pos:start="1071:20" pos:end="1071:20">.</operator><name pos:start="1071:21" pos:end="1071:39">weighted_bipred_idc</name></name> <operator pos:start="1071:41" pos:end="1071:42">==</operator> <literal type="number" pos:start="1071:44" pos:end="1071:44">2</literal> <operator pos:start="1071:46" pos:end="1071:47">&amp;&amp;</operator>

             <name pos:start="1073:14" pos:end="1073:30"><name pos:start="1073:14" pos:end="1073:14">h</name><operator pos:start="1073:15" pos:end="1073:16">-&gt;</operator><name pos:start="1073:17" pos:end="1073:30">slice_type_nos</name></name> <operator pos:start="1073:32" pos:end="1073:33">==</operator> <name pos:start="1073:35" pos:end="1073:51">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="1073:54" pos:end="1077:5">{<block_content pos:start="1075:9" pos:end="1075:37">

        <expr_stmt pos:start="1075:9" pos:end="1075:37"><expr pos:start="1075:9" pos:end="1075:36"><call pos:start="1075:9" pos:end="1075:36"><name pos:start="1075:9" pos:end="1075:29">implicit_weight_table</name><argument_list pos:start="1075:30" pos:end="1075:36">(<argument pos:start="1075:31" pos:end="1075:31"><expr pos:start="1075:31" pos:end="1075:31"><name pos:start="1075:31" pos:end="1075:31">h</name></expr></argument>, <argument pos:start="1075:34" pos:end="1075:35"><expr pos:start="1075:34" pos:end="1075:35"><operator pos:start="1075:34" pos:end="1075:34">-</operator><literal type="number" pos:start="1075:35" pos:end="1075:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="1077:7" pos:end="1089:5">else <block pos:start="1077:12" pos:end="1089:5">{<block_content pos:start="1079:9" pos:end="1087:9">

        <expr_stmt pos:start="1079:9" pos:end="1079:26"><expr pos:start="1079:9" pos:end="1079:25"><name pos:start="1079:9" pos:end="1079:21"><name pos:start="1079:9" pos:end="1079:9">h</name><operator pos:start="1079:10" pos:end="1079:11">-&gt;</operator><name pos:start="1079:12" pos:end="1079:21">use_weight</name></name> <operator pos:start="1079:23" pos:end="1079:23">=</operator> <literal type="number" pos:start="1079:25" pos:end="1079:25">0</literal></expr>;</expr_stmt>

        <for pos:start="1081:9" pos:end="1087:9">for <control pos:start="1081:13" pos:end="1081:31">(<init pos:start="1081:14" pos:end="1081:19"><expr pos:start="1081:14" pos:end="1081:18"><name pos:start="1081:14" pos:end="1081:14">i</name> <operator pos:start="1081:16" pos:end="1081:16">=</operator> <literal type="number" pos:start="1081:18" pos:end="1081:18">0</literal></expr>;</init> <condition pos:start="1081:21" pos:end="1081:26"><expr pos:start="1081:21" pos:end="1081:25"><name pos:start="1081:21" pos:end="1081:21">i</name> <operator pos:start="1081:23" pos:end="1081:23">&lt;</operator> <literal type="number" pos:start="1081:25" pos:end="1081:25">2</literal></expr>;</condition> <incr pos:start="1081:28" pos:end="1081:30"><expr pos:start="1081:28" pos:end="1081:30"><name pos:start="1081:28" pos:end="1081:28">i</name><operator pos:start="1081:29" pos:end="1081:30">++</operator></expr></incr>)</control> <block pos:start="1081:33" pos:end="1087:9">{<block_content pos:start="1083:13" pos:end="1085:41">

            <expr_stmt pos:start="1083:13" pos:end="1083:41"><expr pos:start="1083:13" pos:end="1083:40"><name pos:start="1083:13" pos:end="1083:34"><name pos:start="1083:13" pos:end="1083:13">h</name><operator pos:start="1083:14" pos:end="1083:15">-&gt;</operator><name pos:start="1083:16" pos:end="1083:31">luma_weight_flag</name><index pos:start="1083:32" pos:end="1083:34">[<expr pos:start="1083:33" pos:end="1083:33"><name pos:start="1083:33" pos:end="1083:33">i</name></expr>]</index></name>   <operator pos:start="1083:38" pos:end="1083:38">=</operator> <literal type="number" pos:start="1083:40" pos:end="1083:40">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1085:13" pos:end="1085:41"><expr pos:start="1085:13" pos:end="1085:40"><name pos:start="1085:13" pos:end="1085:36"><name pos:start="1085:13" pos:end="1085:13">h</name><operator pos:start="1085:14" pos:end="1085:15">-&gt;</operator><name pos:start="1085:16" pos:end="1085:33">chroma_weight_flag</name><index pos:start="1085:34" pos:end="1085:36">[<expr pos:start="1085:35" pos:end="1085:35"><name pos:start="1085:35" pos:end="1085:35">i</name></expr>]</index></name> <operator pos:start="1085:38" pos:end="1085:38">=</operator> <literal type="number" pos:start="1085:40" pos:end="1085:40">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="1093:5" pos:end="1093:74">// If frame-mt is enabled, only update mmco tables for the first slice</comment>

    <comment type="line" pos:start="1095:5" pos:end="1095:74">// in a field. Subsequent slices can temporarily clobber h-&gt;mmco_index</comment>

    <comment type="line" pos:start="1097:5" pos:end="1097:72">// or h-&gt;mmco, which will cause ref list mix-ups and decoding errors</comment>

    <comment type="line" pos:start="1099:5" pos:end="1099:75">// further down the line. This may break decoding if the first slice is</comment>

    <comment type="line" pos:start="1101:5" pos:end="1101:60">// corrupt, thus we only do this if frame-mt is enabled.</comment>

    <if_stmt pos:start="1103:5" pos:end="1115:5"><if pos:start="1103:5" pos:end="1115:5">if <condition pos:start="1103:8" pos:end="1103:23">(<expr pos:start="1103:9" pos:end="1103:22"><name pos:start="1103:9" pos:end="1103:22"><name pos:start="1103:9" pos:end="1103:9">h</name><operator pos:start="1103:10" pos:end="1103:11">-&gt;</operator><name pos:start="1103:12" pos:end="1103:22">nal_ref_idc</name></name></expr>)</condition> <block pos:start="1103:25" pos:end="1115:5">{<block_content pos:start="1105:9" pos:end="1113:39">

        <expr_stmt pos:start="1105:9" pos:end="1109:69"><expr pos:start="1105:9" pos:end="1109:68"><name pos:start="1105:9" pos:end="1105:11">ret</name> <operator pos:start="1105:13" pos:end="1105:13">=</operator> <call pos:start="1105:15" pos:end="1109:68"><name pos:start="1105:15" pos:end="1105:44">ff_h264_decode_ref_pic_marking</name><argument_list pos:start="1105:45" pos:end="1109:68">(<argument pos:start="1105:46" pos:end="1105:47"><expr pos:start="1105:46" pos:end="1105:47"><name pos:start="1105:46" pos:end="1105:47">h0</name></expr></argument>, <argument pos:start="1105:50" pos:end="1105:55"><expr pos:start="1105:50" pos:end="1105:55"><operator pos:start="1105:50" pos:end="1105:50">&amp;</operator><name pos:start="1105:51" pos:end="1105:55"><name pos:start="1105:51" pos:end="1105:51">h</name><operator pos:start="1105:52" pos:end="1105:53">-&gt;</operator><name pos:start="1105:54" pos:end="1105:55">gb</name></name></expr></argument>,

                                             <argument pos:start="1107:46" pos:end="1109:67"><expr pos:start="1107:46" pos:end="1109:67"><operator pos:start="1107:46" pos:end="1107:46">!</operator><operator pos:start="1107:47" pos:end="1107:47">(</operator><name pos:start="1107:48" pos:end="1107:75"><name pos:start="1107:48" pos:end="1107:48">h</name><operator pos:start="1107:49" pos:end="1107:50">-&gt;</operator><name pos:start="1107:51" pos:end="1107:55">avctx</name><operator pos:start="1107:56" pos:end="1107:57">-&gt;</operator><name pos:start="1107:58" pos:end="1107:75">active_thread_type</name></name> <operator pos:start="1107:77" pos:end="1107:77">&amp;</operator> <name pos:start="1107:79" pos:end="1107:93">FF_THREAD_FRAME</name><operator pos:start="1107:94" pos:end="1107:94">)</operator> <operator pos:start="1107:96" pos:end="1107:97">||</operator>

                                             <name pos:start="1109:46" pos:end="1109:62"><name pos:start="1109:46" pos:end="1109:47">h0</name><operator pos:start="1109:48" pos:end="1109:49">-&gt;</operator><name pos:start="1109:50" pos:end="1109:62">current_slice</name></name> <operator pos:start="1109:64" pos:end="1109:65">==</operator> <literal type="number" pos:start="1109:67" pos:end="1109:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1111:9" pos:end="1113:39"><if pos:start="1111:9" pos:end="1113:39">if <condition pos:start="1111:12" pos:end="1111:67">(<expr pos:start="1111:13" pos:end="1111:66"><name pos:start="1111:13" pos:end="1111:15">ret</name> <operator pos:start="1111:17" pos:end="1111:17">&lt;</operator> <literal type="number" pos:start="1111:19" pos:end="1111:19">0</literal> <operator pos:start="1111:21" pos:end="1111:22">&amp;&amp;</operator> <operator pos:start="1111:24" pos:end="1111:24">(</operator><name pos:start="1111:25" pos:end="1111:49"><name pos:start="1111:25" pos:end="1111:25">h</name><operator pos:start="1111:26" pos:end="1111:27">-&gt;</operator><name pos:start="1111:28" pos:end="1111:32">avctx</name><operator pos:start="1111:33" pos:end="1111:34">-&gt;</operator><name pos:start="1111:35" pos:end="1111:49">err_recognition</name></name> <operator pos:start="1111:51" pos:end="1111:51">&amp;</operator> <name pos:start="1111:53" pos:end="1111:65">AV_EF_EXPLODE</name><operator pos:start="1111:66" pos:end="1111:66">)</operator></expr>)</condition><block type="pseudo" pos:start="1113:13" pos:end="1113:39"><block_content pos:start="1113:13" pos:end="1113:39">

            <return pos:start="1113:13" pos:end="1113:39">return <expr pos:start="1113:20" pos:end="1113:38"><name pos:start="1113:20" pos:end="1113:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1119:5" pos:end="1133:5"><if pos:start="1119:5" pos:end="1133:5">if <condition pos:start="1119:8" pos:end="1119:23">(<expr pos:start="1119:9" pos:end="1119:22"><call pos:start="1119:9" pos:end="1119:22"><name pos:start="1119:9" pos:end="1119:19">FRAME_MBAFF</name><argument_list pos:start="1119:20" pos:end="1119:22">(<argument pos:start="1119:21" pos:end="1119:21"><expr pos:start="1119:21" pos:end="1119:21"><name pos:start="1119:21" pos:end="1119:21">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1119:25" pos:end="1133:5">{<block_content pos:start="1121:9" pos:end="1131:9">

        <expr_stmt pos:start="1121:9" pos:end="1121:39"><expr pos:start="1121:9" pos:end="1121:38"><call pos:start="1121:9" pos:end="1121:38"><name pos:start="1121:9" pos:end="1121:35">ff_h264_fill_mbaff_ref_list</name><argument_list pos:start="1121:36" pos:end="1121:38">(<argument pos:start="1121:37" pos:end="1121:37"><expr pos:start="1121:37" pos:end="1121:37"><name pos:start="1121:37" pos:end="1121:37">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="1125:9" pos:end="1131:9"><if pos:start="1125:9" pos:end="1131:9">if <condition pos:start="1125:12" pos:end="1125:86">(<expr pos:start="1125:13" pos:end="1125:85"><name pos:start="1125:13" pos:end="1125:38"><name pos:start="1125:13" pos:end="1125:13">h</name><operator pos:start="1125:14" pos:end="1125:15">-&gt;</operator><name pos:start="1125:16" pos:end="1125:18">pps</name><operator pos:start="1125:19" pos:end="1125:19">.</operator><name pos:start="1125:20" pos:end="1125:38">weighted_bipred_idc</name></name> <operator pos:start="1125:40" pos:end="1125:41">==</operator> <literal type="number" pos:start="1125:43" pos:end="1125:43">2</literal> <operator pos:start="1125:45" pos:end="1125:46">&amp;&amp;</operator> <name pos:start="1125:48" pos:end="1125:64"><name pos:start="1125:48" pos:end="1125:48">h</name><operator pos:start="1125:49" pos:end="1125:50">-&gt;</operator><name pos:start="1125:51" pos:end="1125:64">slice_type_nos</name></name> <operator pos:start="1125:66" pos:end="1125:67">==</operator> <name pos:start="1125:69" pos:end="1125:85">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="1125:88" pos:end="1131:9">{<block_content pos:start="1127:13" pos:end="1129:40">

            <expr_stmt pos:start="1127:13" pos:end="1127:40"><expr pos:start="1127:13" pos:end="1127:39"><call pos:start="1127:13" pos:end="1127:39"><name pos:start="1127:13" pos:end="1127:33">implicit_weight_table</name><argument_list pos:start="1127:34" pos:end="1127:39">(<argument pos:start="1127:35" pos:end="1127:35"><expr pos:start="1127:35" pos:end="1127:35"><name pos:start="1127:35" pos:end="1127:35">h</name></expr></argument>, <argument pos:start="1127:38" pos:end="1127:38"><expr pos:start="1127:38" pos:end="1127:38"><literal type="number" pos:start="1127:38" pos:end="1127:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1129:13" pos:end="1129:40"><expr pos:start="1129:13" pos:end="1129:39"><call pos:start="1129:13" pos:end="1129:39"><name pos:start="1129:13" pos:end="1129:33">implicit_weight_table</name><argument_list pos:start="1129:34" pos:end="1129:39">(<argument pos:start="1129:35" pos:end="1129:35"><expr pos:start="1129:35" pos:end="1129:35"><name pos:start="1129:35" pos:end="1129:35">h</name></expr></argument>, <argument pos:start="1129:38" pos:end="1129:38"><expr pos:start="1129:38" pos:end="1129:38"><literal type="number" pos:start="1129:38" pos:end="1129:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1137:5" pos:end="1139:44"><if pos:start="1137:5" pos:end="1139:44">if <condition pos:start="1137:8" pos:end="1137:77">(<expr pos:start="1137:9" pos:end="1137:76"><name pos:start="1137:9" pos:end="1137:25"><name pos:start="1137:9" pos:end="1137:9">h</name><operator pos:start="1137:10" pos:end="1137:11">-&gt;</operator><name pos:start="1137:12" pos:end="1137:25">slice_type_nos</name></name> <operator pos:start="1137:27" pos:end="1137:28">==</operator> <name pos:start="1137:30" pos:end="1137:46">AV_PICTURE_TYPE_B</name> <operator pos:start="1137:48" pos:end="1137:49">&amp;&amp;</operator> <operator pos:start="1137:51" pos:end="1137:51">!</operator><name pos:start="1137:52" pos:end="1137:76"><name pos:start="1137:52" pos:end="1137:52">h</name><operator pos:start="1137:53" pos:end="1137:54">-&gt;</operator><name pos:start="1137:55" pos:end="1137:76">direct_spatial_mv_pred</name></name></expr>)</condition><block type="pseudo" pos:start="1139:9" pos:end="1139:44"><block_content pos:start="1139:9" pos:end="1139:44">

        <expr_stmt pos:start="1139:9" pos:end="1139:44"><expr pos:start="1139:9" pos:end="1139:43"><call pos:start="1139:9" pos:end="1139:43"><name pos:start="1139:9" pos:end="1139:40">ff_h264_direct_dist_scale_factor</name><argument_list pos:start="1139:41" pos:end="1139:43">(<argument pos:start="1139:42" pos:end="1139:42"><expr pos:start="1139:42" pos:end="1139:42"><name pos:start="1139:42" pos:end="1139:42">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1141:5" pos:end="1141:36"><expr pos:start="1141:5" pos:end="1141:35"><call pos:start="1141:5" pos:end="1141:35"><name pos:start="1141:5" pos:end="1141:32">ff_h264_direct_ref_list_init</name><argument_list pos:start="1141:33" pos:end="1141:35">(<argument pos:start="1141:34" pos:end="1141:34"><expr pos:start="1141:34" pos:end="1141:34"><name pos:start="1141:34" pos:end="1141:34">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1145:5" pos:end="1159:5"><if pos:start="1145:5" pos:end="1159:5">if <condition pos:start="1145:8" pos:end="1145:63">(<expr pos:start="1145:9" pos:end="1145:62"><name pos:start="1145:9" pos:end="1145:25"><name pos:start="1145:9" pos:end="1145:9">h</name><operator pos:start="1145:10" pos:end="1145:11">-&gt;</operator><name pos:start="1145:12" pos:end="1145:25">slice_type_nos</name></name> <operator pos:start="1145:27" pos:end="1145:28">!=</operator> <name pos:start="1145:30" pos:end="1145:46">AV_PICTURE_TYPE_I</name> <operator pos:start="1145:48" pos:end="1145:49">&amp;&amp;</operator> <name pos:start="1145:51" pos:end="1145:62"><name pos:start="1145:51" pos:end="1145:51">h</name><operator pos:start="1145:52" pos:end="1145:53">-&gt;</operator><name pos:start="1145:54" pos:end="1145:56">pps</name><operator pos:start="1145:57" pos:end="1145:57">.</operator><name pos:start="1145:58" pos:end="1145:62">cabac</name></name></expr>)</condition> <block pos:start="1145:65" pos:end="1159:5">{<block_content pos:start="1147:9" pos:end="1157:32">

        <expr_stmt pos:start="1147:9" pos:end="1147:39"><expr pos:start="1147:9" pos:end="1147:38"><name pos:start="1147:9" pos:end="1147:11">tmp</name> <operator pos:start="1147:13" pos:end="1147:13">=</operator> <call pos:start="1147:15" pos:end="1147:38"><name pos:start="1147:15" pos:end="1147:30">get_ue_golomb_31</name><argument_list pos:start="1147:31" pos:end="1147:38">(<argument pos:start="1147:32" pos:end="1147:37"><expr pos:start="1147:32" pos:end="1147:37"><operator pos:start="1147:32" pos:end="1147:32">&amp;</operator><name pos:start="1147:33" pos:end="1147:37"><name pos:start="1147:33" pos:end="1147:33">h</name><operator pos:start="1147:34" pos:end="1147:35">-&gt;</operator><name pos:start="1147:36" pos:end="1147:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1149:9" pos:end="1155:9"><if pos:start="1149:9" pos:end="1155:9">if <condition pos:start="1149:12" pos:end="1149:20">(<expr pos:start="1149:13" pos:end="1149:19"><name pos:start="1149:13" pos:end="1149:15">tmp</name> <operator pos:start="1149:17" pos:end="1149:17">&gt;</operator> <literal type="number" pos:start="1149:19" pos:end="1149:19">2</literal></expr>)</condition> <block pos:start="1149:22" pos:end="1155:9">{<block_content pos:start="1151:13" pos:end="1153:39">

            <expr_stmt pos:start="1151:13" pos:end="1151:80"><expr pos:start="1151:13" pos:end="1151:79"><call pos:start="1151:13" pos:end="1151:79"><name pos:start="1151:13" pos:end="1151:18">av_log</name><argument_list pos:start="1151:19" pos:end="1151:79">(<argument pos:start="1151:20" pos:end="1151:27"><expr pos:start="1151:20" pos:end="1151:27"><name pos:start="1151:20" pos:end="1151:27"><name pos:start="1151:20" pos:end="1151:20">h</name><operator pos:start="1151:21" pos:end="1151:22">-&gt;</operator><name pos:start="1151:23" pos:end="1151:27">avctx</name></name></expr></argument>, <argument pos:start="1151:30" pos:end="1151:41"><expr pos:start="1151:30" pos:end="1151:41"><name pos:start="1151:30" pos:end="1151:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="1151:44" pos:end="1151:73"><expr pos:start="1151:44" pos:end="1151:73"><literal type="string" pos:start="1151:44" pos:end="1151:73">"cabac_init_idc %u overflow\n"</literal></expr></argument>, <argument pos:start="1151:76" pos:end="1151:78"><expr pos:start="1151:76" pos:end="1151:78"><name pos:start="1151:76" pos:end="1151:78">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1153:13" pos:end="1153:39">return <expr pos:start="1153:20" pos:end="1153:38"><name pos:start="1153:20" pos:end="1153:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1157:9" pos:end="1157:32"><expr pos:start="1157:9" pos:end="1157:31"><name pos:start="1157:9" pos:end="1157:25"><name pos:start="1157:9" pos:end="1157:9">h</name><operator pos:start="1157:10" pos:end="1157:11">-&gt;</operator><name pos:start="1157:12" pos:end="1157:25">cabac_init_idc</name></name> <operator pos:start="1157:27" pos:end="1157:27">=</operator> <name pos:start="1157:29" pos:end="1157:31">tmp</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="1163:5" pos:end="1163:28"><expr pos:start="1163:5" pos:end="1163:27"><name pos:start="1163:5" pos:end="1163:23"><name pos:start="1163:5" pos:end="1163:5">h</name><operator pos:start="1163:6" pos:end="1163:7">-&gt;</operator><name pos:start="1163:8" pos:end="1163:23">last_qscale_diff</name></name> <operator pos:start="1163:25" pos:end="1163:25">=</operator> <literal type="number" pos:start="1163:27" pos:end="1163:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1165:5" pos:end="1165:49"><expr pos:start="1165:5" pos:end="1165:48"><name pos:start="1165:5" pos:end="1165:7">tmp</name> <operator pos:start="1165:9" pos:end="1165:9">=</operator> <name pos:start="1165:11" pos:end="1165:24"><name pos:start="1165:11" pos:end="1165:11">h</name><operator pos:start="1165:12" pos:end="1165:13">-&gt;</operator><name pos:start="1165:14" pos:end="1165:16">pps</name><operator pos:start="1165:17" pos:end="1165:17">.</operator><name pos:start="1165:18" pos:end="1165:24">init_qp</name></name> <operator pos:start="1165:26" pos:end="1165:26">+</operator> <call pos:start="1165:28" pos:end="1165:48"><name pos:start="1165:28" pos:end="1165:40">get_se_golomb</name><argument_list pos:start="1165:41" pos:end="1165:48">(<argument pos:start="1165:42" pos:end="1165:47"><expr pos:start="1165:42" pos:end="1165:47"><operator pos:start="1165:42" pos:end="1165:42">&amp;</operator><name pos:start="1165:43" pos:end="1165:47"><name pos:start="1165:43" pos:end="1165:43">h</name><operator pos:start="1165:44" pos:end="1165:45">-&gt;</operator><name pos:start="1165:46" pos:end="1165:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="1167:5" pos:end="1173:5"><if pos:start="1167:5" pos:end="1173:5">if <condition pos:start="1167:8" pos:end="1167:51">(<expr pos:start="1167:9" pos:end="1167:50"><name pos:start="1167:9" pos:end="1167:11">tmp</name> <operator pos:start="1167:13" pos:end="1167:13">&gt;</operator> <literal type="number" pos:start="1167:15" pos:end="1167:18">51</literal> <operator pos:start="1167:18" pos:end="1167:18">+</operator> <literal type="number" pos:start="1167:20" pos:end="1167:20">6</literal> <operator pos:start="1167:22" pos:end="1167:22">*</operator> <operator pos:start="1167:24" pos:end="1167:24">(</operator><name pos:start="1167:25" pos:end="1167:45"><name pos:start="1167:25" pos:end="1167:25">h</name><operator pos:start="1167:26" pos:end="1167:27">-&gt;</operator><name pos:start="1167:28" pos:end="1167:30">sps</name><operator pos:start="1167:31" pos:end="1167:31">.</operator><name pos:start="1167:32" pos:end="1167:45">bit_depth_luma</name></name> <operator pos:start="1167:47" pos:end="1167:47">-</operator> <literal type="number" pos:start="1167:49" pos:end="1167:49">8</literal><operator pos:start="1167:50" pos:end="1167:50">)</operator></expr>)</condition> <block pos:start="1167:53" pos:end="1173:5">{<block_content pos:start="1169:9" pos:end="1171:35">

        <expr_stmt pos:start="1169:9" pos:end="1169:68"><expr pos:start="1169:9" pos:end="1169:67"><call pos:start="1169:9" pos:end="1169:67"><name pos:start="1169:9" pos:end="1169:14">av_log</name><argument_list pos:start="1169:15" pos:end="1169:67">(<argument pos:start="1169:16" pos:end="1169:23"><expr pos:start="1169:16" pos:end="1169:23"><name pos:start="1169:16" pos:end="1169:23"><name pos:start="1169:16" pos:end="1169:16">h</name><operator pos:start="1169:17" pos:end="1169:18">-&gt;</operator><name pos:start="1169:19" pos:end="1169:23">avctx</name></name></expr></argument>, <argument pos:start="1169:26" pos:end="1169:37"><expr pos:start="1169:26" pos:end="1169:37"><name pos:start="1169:26" pos:end="1169:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="1169:40" pos:end="1169:61"><expr pos:start="1169:40" pos:end="1169:61"><literal type="string" pos:start="1169:40" pos:end="1169:61">"QP %u out of range\n"</literal></expr></argument>, <argument pos:start="1169:64" pos:end="1169:66"><expr pos:start="1169:64" pos:end="1169:66"><name pos:start="1169:64" pos:end="1169:66">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="1171:9" pos:end="1171:35">return <expr pos:start="1171:16" pos:end="1171:34"><name pos:start="1171:16" pos:end="1171:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1175:5" pos:end="1175:26"><expr pos:start="1175:5" pos:end="1175:25"><name pos:start="1175:5" pos:end="1175:13"><name pos:start="1175:5" pos:end="1175:5">h</name><operator pos:start="1175:6" pos:end="1175:7">-&gt;</operator><name pos:start="1175:8" pos:end="1175:13">qscale</name></name>       <operator pos:start="1175:21" pos:end="1175:21">=</operator> <name pos:start="1175:23" pos:end="1175:25">tmp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1177:5" pos:end="1177:53"><expr pos:start="1177:5" pos:end="1177:52"><name pos:start="1177:5" pos:end="1177:19"><name pos:start="1177:5" pos:end="1177:5">h</name><operator pos:start="1177:6" pos:end="1177:7">-&gt;</operator><name pos:start="1177:8" pos:end="1177:16">chroma_qp</name><index pos:start="1177:17" pos:end="1177:19">[<expr pos:start="1177:18" pos:end="1177:18"><literal type="number" pos:start="1177:18" pos:end="1177:18">0</literal></expr>]</index></name> <operator pos:start="1177:21" pos:end="1177:21">=</operator> <call pos:start="1177:23" pos:end="1177:52"><name pos:start="1177:23" pos:end="1177:35">get_chroma_qp</name><argument_list pos:start="1177:36" pos:end="1177:52">(<argument pos:start="1177:37" pos:end="1177:37"><expr pos:start="1177:37" pos:end="1177:37"><name pos:start="1177:37" pos:end="1177:37">h</name></expr></argument>, <argument pos:start="1177:40" pos:end="1177:40"><expr pos:start="1177:40" pos:end="1177:40"><literal type="number" pos:start="1177:40" pos:end="1177:40">0</literal></expr></argument>, <argument pos:start="1177:43" pos:end="1177:51"><expr pos:start="1177:43" pos:end="1177:51"><name pos:start="1177:43" pos:end="1177:51"><name pos:start="1177:43" pos:end="1177:43">h</name><operator pos:start="1177:44" pos:end="1177:45">-&gt;</operator><name pos:start="1177:46" pos:end="1177:51">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1179:5" pos:end="1179:53"><expr pos:start="1179:5" pos:end="1179:52"><name pos:start="1179:5" pos:end="1179:19"><name pos:start="1179:5" pos:end="1179:5">h</name><operator pos:start="1179:6" pos:end="1179:7">-&gt;</operator><name pos:start="1179:8" pos:end="1179:16">chroma_qp</name><index pos:start="1179:17" pos:end="1179:19">[<expr pos:start="1179:18" pos:end="1179:18"><literal type="number" pos:start="1179:18" pos:end="1179:18">1</literal></expr>]</index></name> <operator pos:start="1179:21" pos:end="1179:21">=</operator> <call pos:start="1179:23" pos:end="1179:52"><name pos:start="1179:23" pos:end="1179:35">get_chroma_qp</name><argument_list pos:start="1179:36" pos:end="1179:52">(<argument pos:start="1179:37" pos:end="1179:37"><expr pos:start="1179:37" pos:end="1179:37"><name pos:start="1179:37" pos:end="1179:37">h</name></expr></argument>, <argument pos:start="1179:40" pos:end="1179:40"><expr pos:start="1179:40" pos:end="1179:40"><literal type="number" pos:start="1179:40" pos:end="1179:40">1</literal></expr></argument>, <argument pos:start="1179:43" pos:end="1179:51"><expr pos:start="1179:43" pos:end="1179:51"><name pos:start="1179:43" pos:end="1179:51"><name pos:start="1179:43" pos:end="1179:43">h</name><operator pos:start="1179:44" pos:end="1179:45">-&gt;</operator><name pos:start="1179:46" pos:end="1179:51">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="1181:5" pos:end="1181:34">// FIXME qscale / qp ... stuff</comment>

    <if_stmt pos:start="1183:5" pos:end="1185:26"><if pos:start="1183:5" pos:end="1185:26">if <condition pos:start="1183:8" pos:end="1183:44">(<expr pos:start="1183:9" pos:end="1183:43"><name pos:start="1183:9" pos:end="1183:21"><name pos:start="1183:9" pos:end="1183:9">h</name><operator pos:start="1183:10" pos:end="1183:11">-&gt;</operator><name pos:start="1183:12" pos:end="1183:21">slice_type</name></name> <operator pos:start="1183:23" pos:end="1183:24">==</operator> <name pos:start="1183:26" pos:end="1183:43">AV_PICTURE_TYPE_SP</name></expr>)</condition><block type="pseudo" pos:start="1185:9" pos:end="1185:26"><block_content pos:start="1185:9" pos:end="1185:26">

        <expr_stmt pos:start="1185:9" pos:end="1185:26"><expr pos:start="1185:9" pos:end="1185:25"><call pos:start="1185:9" pos:end="1185:25"><name pos:start="1185:9" pos:end="1185:17">get_bits1</name><argument_list pos:start="1185:18" pos:end="1185:25">(<argument pos:start="1185:19" pos:end="1185:24"><expr pos:start="1185:19" pos:end="1185:24"><operator pos:start="1185:19" pos:end="1185:19">&amp;</operator><name pos:start="1185:20" pos:end="1185:24"><name pos:start="1185:20" pos:end="1185:20">h</name><operator pos:start="1185:21" pos:end="1185:22">-&gt;</operator><name pos:start="1185:23" pos:end="1185:24">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="1185:28" pos:end="1185:51">/* sp_for_switch_flag */</comment>

    <if_stmt pos:start="1187:5" pos:end="1191:30"><if pos:start="1187:5" pos:end="1191:30">if <condition pos:start="1187:8" pos:end="1189:44">(<expr pos:start="1187:9" pos:end="1189:43"><name pos:start="1187:9" pos:end="1187:21"><name pos:start="1187:9" pos:end="1187:9">h</name><operator pos:start="1187:10" pos:end="1187:11">-&gt;</operator><name pos:start="1187:12" pos:end="1187:21">slice_type</name></name> <operator pos:start="1187:23" pos:end="1187:24">==</operator> <name pos:start="1187:26" pos:end="1187:43">AV_PICTURE_TYPE_SP</name> <operator pos:start="1187:45" pos:end="1187:46">||</operator>

        <name pos:start="1189:9" pos:end="1189:21"><name pos:start="1189:9" pos:end="1189:9">h</name><operator pos:start="1189:10" pos:end="1189:11">-&gt;</operator><name pos:start="1189:12" pos:end="1189:21">slice_type</name></name> <operator pos:start="1189:23" pos:end="1189:24">==</operator> <name pos:start="1189:26" pos:end="1189:43">AV_PICTURE_TYPE_SI</name></expr>)</condition><block type="pseudo" pos:start="1191:9" pos:end="1191:30"><block_content pos:start="1191:9" pos:end="1191:30">

        <expr_stmt pos:start="1191:9" pos:end="1191:30"><expr pos:start="1191:9" pos:end="1191:29"><call pos:start="1191:9" pos:end="1191:29"><name pos:start="1191:9" pos:end="1191:21">get_se_golomb</name><argument_list pos:start="1191:22" pos:end="1191:29">(<argument pos:start="1191:23" pos:end="1191:28"><expr pos:start="1191:23" pos:end="1191:28"><operator pos:start="1191:23" pos:end="1191:23">&amp;</operator><name pos:start="1191:24" pos:end="1191:28"><name pos:start="1191:24" pos:end="1191:24">h</name><operator pos:start="1191:25" pos:end="1191:26">-&gt;</operator><name pos:start="1191:27" pos:end="1191:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="1191:32" pos:end="1191:51">/* slice_qs_delta */</comment>



    <expr_stmt pos:start="1195:5" pos:end="1195:33"><expr pos:start="1195:5" pos:end="1195:32"><name pos:start="1195:5" pos:end="1195:24"><name pos:start="1195:5" pos:end="1195:5">h</name><operator pos:start="1195:6" pos:end="1195:7">-&gt;</operator><name pos:start="1195:8" pos:end="1195:24">deblocking_filter</name></name>     <operator pos:start="1195:30" pos:end="1195:30">=</operator> <literal type="number" pos:start="1195:32" pos:end="1195:32">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1197:5" pos:end="1197:33"><expr pos:start="1197:5" pos:end="1197:32"><name pos:start="1197:5" pos:end="1197:28"><name pos:start="1197:5" pos:end="1197:5">h</name><operator pos:start="1197:6" pos:end="1197:7">-&gt;</operator><name pos:start="1197:8" pos:end="1197:28">slice_alpha_c0_offset</name></name> <operator pos:start="1197:30" pos:end="1197:30">=</operator> <literal type="number" pos:start="1197:32" pos:end="1197:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1199:5" pos:end="1199:33"><expr pos:start="1199:5" pos:end="1199:32"><name pos:start="1199:5" pos:end="1199:24"><name pos:start="1199:5" pos:end="1199:5">h</name><operator pos:start="1199:6" pos:end="1199:7">-&gt;</operator><name pos:start="1199:8" pos:end="1199:24">slice_beta_offset</name></name>     <operator pos:start="1199:30" pos:end="1199:30">=</operator> <literal type="number" pos:start="1199:32" pos:end="1199:32">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="1201:5" pos:end="1249:5"><if pos:start="1201:5" pos:end="1249:5">if <condition pos:start="1201:8" pos:end="1201:52">(<expr pos:start="1201:9" pos:end="1201:51"><name pos:start="1201:9" pos:end="1201:51"><name pos:start="1201:9" pos:end="1201:9">h</name><operator pos:start="1201:10" pos:end="1201:11">-&gt;</operator><name pos:start="1201:12" pos:end="1201:14">pps</name><operator pos:start="1201:15" pos:end="1201:15">.</operator><name pos:start="1201:16" pos:end="1201:51">deblocking_filter_parameters_present</name></name></expr>)</condition> <block pos:start="1201:54" pos:end="1249:5">{<block_content pos:start="1203:9" pos:end="1247:9">

        <expr_stmt pos:start="1203:9" pos:end="1203:39"><expr pos:start="1203:9" pos:end="1203:38"><name pos:start="1203:9" pos:end="1203:11">tmp</name> <operator pos:start="1203:13" pos:end="1203:13">=</operator> <call pos:start="1203:15" pos:end="1203:38"><name pos:start="1203:15" pos:end="1203:30">get_ue_golomb_31</name><argument_list pos:start="1203:31" pos:end="1203:38">(<argument pos:start="1203:32" pos:end="1203:37"><expr pos:start="1203:32" pos:end="1203:37"><operator pos:start="1203:32" pos:end="1203:32">&amp;</operator><name pos:start="1203:33" pos:end="1203:37"><name pos:start="1203:33" pos:end="1203:33">h</name><operator pos:start="1203:34" pos:end="1203:35">-&gt;</operator><name pos:start="1203:36" pos:end="1203:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1205:9" pos:end="1213:9"><if pos:start="1205:9" pos:end="1213:9">if <condition pos:start="1205:12" pos:end="1205:20">(<expr pos:start="1205:13" pos:end="1205:19"><name pos:start="1205:13" pos:end="1205:15">tmp</name> <operator pos:start="1205:17" pos:end="1205:17">&gt;</operator> <literal type="number" pos:start="1205:19" pos:end="1205:19">2</literal></expr>)</condition> <block pos:start="1205:22" pos:end="1213:9">{<block_content pos:start="1207:13" pos:end="1211:39">

            <expr_stmt pos:start="1207:13" pos:end="1209:67"><expr pos:start="1207:13" pos:end="1209:66"><call pos:start="1207:13" pos:end="1209:66"><name pos:start="1207:13" pos:end="1207:18">av_log</name><argument_list pos:start="1207:19" pos:end="1209:66">(<argument pos:start="1207:20" pos:end="1207:27"><expr pos:start="1207:20" pos:end="1207:27"><name pos:start="1207:20" pos:end="1207:27"><name pos:start="1207:20" pos:end="1207:20">h</name><operator pos:start="1207:21" pos:end="1207:22">-&gt;</operator><name pos:start="1207:23" pos:end="1207:27">avctx</name></name></expr></argument>, <argument pos:start="1207:30" pos:end="1207:41"><expr pos:start="1207:30" pos:end="1207:41"><name pos:start="1207:30" pos:end="1207:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="1209:20" pos:end="1209:60"><expr pos:start="1209:20" pos:end="1209:60"><literal type="string" pos:start="1209:20" pos:end="1209:60">"deblocking_filter_idc %u out of range\n"</literal></expr></argument>, <argument pos:start="1209:63" pos:end="1209:65"><expr pos:start="1209:63" pos:end="1209:65"><name pos:start="1209:63" pos:end="1209:65">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1211:13" pos:end="1211:39">return <expr pos:start="1211:20" pos:end="1211:38"><name pos:start="1211:20" pos:end="1211:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1215:9" pos:end="1215:35"><expr pos:start="1215:9" pos:end="1215:34"><name pos:start="1215:9" pos:end="1215:28"><name pos:start="1215:9" pos:end="1215:9">h</name><operator pos:start="1215:10" pos:end="1215:11">-&gt;</operator><name pos:start="1215:12" pos:end="1215:28">deblocking_filter</name></name> <operator pos:start="1215:30" pos:end="1215:30">=</operator> <name pos:start="1215:32" pos:end="1215:34">tmp</name></expr>;</expr_stmt>

        <if_stmt pos:start="1217:9" pos:end="1219:38"><if pos:start="1217:9" pos:end="1219:38">if <condition pos:start="1217:12" pos:end="1217:37">(<expr pos:start="1217:13" pos:end="1217:36"><name pos:start="1217:13" pos:end="1217:32"><name pos:start="1217:13" pos:end="1217:13">h</name><operator pos:start="1217:14" pos:end="1217:15">-&gt;</operator><name pos:start="1217:16" pos:end="1217:32">deblocking_filter</name></name> <operator pos:start="1217:34" pos:end="1217:34">&lt;</operator> <literal type="number" pos:start="1217:36" pos:end="1217:36">2</literal></expr>)</condition><block type="pseudo" pos:start="1219:13" pos:end="1219:38"><block_content pos:start="1219:13" pos:end="1219:38">

            <expr_stmt pos:start="1219:13" pos:end="1219:38"><expr pos:start="1219:13" pos:end="1219:37"><name pos:start="1219:13" pos:end="1219:32"><name pos:start="1219:13" pos:end="1219:13">h</name><operator pos:start="1219:14" pos:end="1219:15">-&gt;</operator><name pos:start="1219:16" pos:end="1219:32">deblocking_filter</name></name> <operator pos:start="1219:34" pos:end="1219:35">^=</operator> <literal type="number" pos:start="1219:37" pos:end="1219:37">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="line" pos:start="1219:41" pos:end="1219:48">// 1&lt;-&gt;0</comment>



        <if_stmt pos:start="1223:9" pos:end="1247:9"><if pos:start="1223:9" pos:end="1247:9">if <condition pos:start="1223:12" pos:end="1223:33">(<expr pos:start="1223:13" pos:end="1223:32"><name pos:start="1223:13" pos:end="1223:32"><name pos:start="1223:13" pos:end="1223:13">h</name><operator pos:start="1223:14" pos:end="1223:15">-&gt;</operator><name pos:start="1223:16" pos:end="1223:32">deblocking_filter</name></name></expr>)</condition> <block pos:start="1223:35" pos:end="1247:9">{<block_content pos:start="1225:13" pos:end="1245:13">

            <expr_stmt pos:start="1225:13" pos:end="1225:65"><expr pos:start="1225:13" pos:end="1225:64"><name pos:start="1225:13" pos:end="1225:36"><name pos:start="1225:13" pos:end="1225:13">h</name><operator pos:start="1225:14" pos:end="1225:15">-&gt;</operator><name pos:start="1225:16" pos:end="1225:36">slice_alpha_c0_offset</name></name> <operator pos:start="1225:38" pos:end="1225:38">=</operator> <call pos:start="1225:40" pos:end="1225:60"><name pos:start="1225:40" pos:end="1225:52">get_se_golomb</name><argument_list pos:start="1225:53" pos:end="1225:60">(<argument pos:start="1225:54" pos:end="1225:59"><expr pos:start="1225:54" pos:end="1225:59"><operator pos:start="1225:54" pos:end="1225:54">&amp;</operator><name pos:start="1225:55" pos:end="1225:59"><name pos:start="1225:55" pos:end="1225:55">h</name><operator pos:start="1225:56" pos:end="1225:57">-&gt;</operator><name pos:start="1225:58" pos:end="1225:59">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="1225:62" pos:end="1225:62">*</operator> <literal type="number" pos:start="1225:64" pos:end="1225:64">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1227:13" pos:end="1227:65"><expr pos:start="1227:13" pos:end="1227:64"><name pos:start="1227:13" pos:end="1227:32"><name pos:start="1227:13" pos:end="1227:13">h</name><operator pos:start="1227:14" pos:end="1227:15">-&gt;</operator><name pos:start="1227:16" pos:end="1227:32">slice_beta_offset</name></name>     <operator pos:start="1227:38" pos:end="1227:38">=</operator> <call pos:start="1227:40" pos:end="1227:60"><name pos:start="1227:40" pos:end="1227:52">get_se_golomb</name><argument_list pos:start="1227:53" pos:end="1227:60">(<argument pos:start="1227:54" pos:end="1227:59"><expr pos:start="1227:54" pos:end="1227:59"><operator pos:start="1227:54" pos:end="1227:54">&amp;</operator><name pos:start="1227:55" pos:end="1227:59"><name pos:start="1227:55" pos:end="1227:55">h</name><operator pos:start="1227:56" pos:end="1227:57">-&gt;</operator><name pos:start="1227:58" pos:end="1227:59">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="1227:62" pos:end="1227:62">*</operator> <literal type="number" pos:start="1227:64" pos:end="1227:64">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1229:13" pos:end="1245:13"><if pos:start="1229:13" pos:end="1245:13">if <condition pos:start="1229:16" pos:end="1235:43">(<expr pos:start="1229:17" pos:end="1235:42"><name pos:start="1229:17" pos:end="1229:40"><name pos:start="1229:17" pos:end="1229:17">h</name><operator pos:start="1229:18" pos:end="1229:19">-&gt;</operator><name pos:start="1229:20" pos:end="1229:40">slice_alpha_c0_offset</name></name> <operator pos:start="1229:42" pos:end="1229:42">&gt;</operator>  <literal type="number" pos:start="1229:45" pos:end="1229:46">12</literal> <operator pos:start="1229:48" pos:end="1229:49">||</operator>

                <name pos:start="1231:17" pos:end="1231:40"><name pos:start="1231:17" pos:end="1231:17">h</name><operator pos:start="1231:18" pos:end="1231:19">-&gt;</operator><name pos:start="1231:20" pos:end="1231:40">slice_alpha_c0_offset</name></name> <operator pos:start="1231:42" pos:end="1231:42">&lt;</operator> <operator pos:start="1231:44" pos:end="1231:44">-</operator><literal type="number" pos:start="1231:45" pos:end="1231:46">12</literal> <operator pos:start="1231:48" pos:end="1231:49">||</operator>

                <name pos:start="1233:17" pos:end="1233:36"><name pos:start="1233:17" pos:end="1233:17">h</name><operator pos:start="1233:18" pos:end="1233:19">-&gt;</operator><name pos:start="1233:20" pos:end="1233:36">slice_beta_offset</name></name> <operator pos:start="1233:38" pos:end="1233:38">&gt;</operator>  <literal type="number" pos:start="1233:41" pos:end="1233:42">12</literal>     <operator pos:start="1233:48" pos:end="1233:49">||</operator>

                <name pos:start="1235:17" pos:end="1235:36"><name pos:start="1235:17" pos:end="1235:17">h</name><operator pos:start="1235:18" pos:end="1235:19">-&gt;</operator><name pos:start="1235:20" pos:end="1235:36">slice_beta_offset</name></name> <operator pos:start="1235:38" pos:end="1235:38">&lt;</operator> <operator pos:start="1235:40" pos:end="1235:40">-</operator><literal type="number" pos:start="1235:41" pos:end="1235:42">12</literal></expr>)</condition> <block pos:start="1235:45" pos:end="1245:13">{<block_content pos:start="1237:17" pos:end="1243:43">

                <expr_stmt pos:start="1237:17" pos:end="1241:71"><expr pos:start="1237:17" pos:end="1241:70"><call pos:start="1237:17" pos:end="1241:70"><name pos:start="1237:17" pos:end="1237:22">av_log</name><argument_list pos:start="1237:23" pos:end="1241:70">(<argument pos:start="1237:24" pos:end="1237:31"><expr pos:start="1237:24" pos:end="1237:31"><name pos:start="1237:24" pos:end="1237:31"><name pos:start="1237:24" pos:end="1237:24">h</name><operator pos:start="1237:25" pos:end="1237:26">-&gt;</operator><name pos:start="1237:27" pos:end="1237:31">avctx</name></name></expr></argument>, <argument pos:start="1237:34" pos:end="1237:45"><expr pos:start="1237:34" pos:end="1237:45"><name pos:start="1237:34" pos:end="1237:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="1239:24" pos:end="1239:74"><expr pos:start="1239:24" pos:end="1239:74"><literal type="string" pos:start="1239:24" pos:end="1239:74">"deblocking filter parameters %d %d out of range\n"</literal></expr></argument>,

                       <argument pos:start="1241:24" pos:end="1241:47"><expr pos:start="1241:24" pos:end="1241:47"><name pos:start="1241:24" pos:end="1241:47"><name pos:start="1241:24" pos:end="1241:24">h</name><operator pos:start="1241:25" pos:end="1241:26">-&gt;</operator><name pos:start="1241:27" pos:end="1241:47">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1241:50" pos:end="1241:69"><expr pos:start="1241:50" pos:end="1241:69"><name pos:start="1241:50" pos:end="1241:69"><name pos:start="1241:50" pos:end="1241:50">h</name><operator pos:start="1241:51" pos:end="1241:52">-&gt;</operator><name pos:start="1241:53" pos:end="1241:69">slice_beta_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1243:17" pos:end="1243:43">return <expr pos:start="1243:24" pos:end="1243:42"><name pos:start="1243:24" pos:end="1243:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1253:5" pos:end="1271:33"><if pos:start="1253:5" pos:end="1271:33">if <condition pos:start="1253:8" pos:end="1269:30">(<expr pos:start="1253:9" pos:end="1269:29"><name pos:start="1253:9" pos:end="1253:34"><name pos:start="1253:9" pos:end="1253:9">h</name><operator pos:start="1253:10" pos:end="1253:11">-&gt;</operator><name pos:start="1253:12" pos:end="1253:16">avctx</name><operator pos:start="1253:17" pos:end="1253:18">-&gt;</operator><name pos:start="1253:19" pos:end="1253:34">skip_loop_filter</name></name> <operator pos:start="1253:36" pos:end="1253:37">&gt;=</operator> <name pos:start="1253:39" pos:end="1253:51">AVDISCARD_ALL</name> <operator pos:start="1253:53" pos:end="1253:54">||</operator>

        <operator pos:start="1255:9" pos:end="1255:9">(</operator><name pos:start="1255:10" pos:end="1255:35"><name pos:start="1255:10" pos:end="1255:10">h</name><operator pos:start="1255:11" pos:end="1255:12">-&gt;</operator><name pos:start="1255:13" pos:end="1255:17">avctx</name><operator pos:start="1255:18" pos:end="1255:19">-&gt;</operator><name pos:start="1255:20" pos:end="1255:35">skip_loop_filter</name></name> <operator pos:start="1255:37" pos:end="1255:38">&gt;=</operator> <name pos:start="1255:40" pos:end="1255:55">AVDISCARD_NONKEY</name> <operator pos:start="1255:57" pos:end="1255:58">&amp;&amp;</operator>

         <name pos:start="1257:10" pos:end="1257:25"><name pos:start="1257:10" pos:end="1257:10">h</name><operator pos:start="1257:11" pos:end="1257:12">-&gt;</operator><name pos:start="1257:13" pos:end="1257:25">nal_unit_type</name></name> <operator pos:start="1257:27" pos:end="1257:28">!=</operator> <name pos:start="1257:30" pos:end="1257:42">NAL_IDR_SLICE</name><operator pos:start="1257:43" pos:end="1257:43">)</operator> <operator pos:start="1257:45" pos:end="1257:46">||</operator>

        <operator pos:start="1259:9" pos:end="1259:9">(</operator><name pos:start="1259:10" pos:end="1259:35"><name pos:start="1259:10" pos:end="1259:10">h</name><operator pos:start="1259:11" pos:end="1259:12">-&gt;</operator><name pos:start="1259:13" pos:end="1259:17">avctx</name><operator pos:start="1259:18" pos:end="1259:19">-&gt;</operator><name pos:start="1259:20" pos:end="1259:35">skip_loop_filter</name></name> <operator pos:start="1259:37" pos:end="1259:38">&gt;=</operator> <name pos:start="1259:40" pos:end="1259:57">AVDISCARD_NONINTRA</name> <operator pos:start="1259:59" pos:end="1259:60">&amp;&amp;</operator>

         <name pos:start="1261:10" pos:end="1261:26"><name pos:start="1261:10" pos:end="1261:10">h</name><operator pos:start="1261:11" pos:end="1261:12">-&gt;</operator><name pos:start="1261:13" pos:end="1261:26">slice_type_nos</name></name> <operator pos:start="1261:28" pos:end="1261:29">!=</operator> <name pos:start="1261:31" pos:end="1261:47">AV_PICTURE_TYPE_I</name><operator pos:start="1261:48" pos:end="1261:48">)</operator> <operator pos:start="1261:50" pos:end="1261:51">||</operator>

        <operator pos:start="1263:9" pos:end="1263:9">(</operator><name pos:start="1263:10" pos:end="1263:35"><name pos:start="1263:10" pos:end="1263:10">h</name><operator pos:start="1263:11" pos:end="1263:12">-&gt;</operator><name pos:start="1263:13" pos:end="1263:17">avctx</name><operator pos:start="1263:18" pos:end="1263:19">-&gt;</operator><name pos:start="1263:20" pos:end="1263:35">skip_loop_filter</name></name> <operator pos:start="1263:37" pos:end="1263:38">&gt;=</operator> <name pos:start="1263:40" pos:end="1263:54">AVDISCARD_BIDIR</name>  <operator pos:start="1263:57" pos:end="1263:58">&amp;&amp;</operator>

         <name pos:start="1265:10" pos:end="1265:26"><name pos:start="1265:10" pos:end="1265:10">h</name><operator pos:start="1265:11" pos:end="1265:12">-&gt;</operator><name pos:start="1265:13" pos:end="1265:26">slice_type_nos</name></name> <operator pos:start="1265:28" pos:end="1265:29">==</operator> <name pos:start="1265:31" pos:end="1265:47">AV_PICTURE_TYPE_B</name><operator pos:start="1265:48" pos:end="1265:48">)</operator> <operator pos:start="1265:50" pos:end="1265:51">||</operator>

        <operator pos:start="1267:9" pos:end="1267:9">(</operator><name pos:start="1267:10" pos:end="1267:35"><name pos:start="1267:10" pos:end="1267:10">h</name><operator pos:start="1267:11" pos:end="1267:12">-&gt;</operator><name pos:start="1267:13" pos:end="1267:17">avctx</name><operator pos:start="1267:18" pos:end="1267:19">-&gt;</operator><name pos:start="1267:20" pos:end="1267:35">skip_loop_filter</name></name> <operator pos:start="1267:37" pos:end="1267:38">&gt;=</operator> <name pos:start="1267:40" pos:end="1267:55">AVDISCARD_NONREF</name> <operator pos:start="1267:57" pos:end="1267:58">&amp;&amp;</operator>

         <name pos:start="1269:10" pos:end="1269:23"><name pos:start="1269:10" pos:end="1269:10">h</name><operator pos:start="1269:11" pos:end="1269:12">-&gt;</operator><name pos:start="1269:13" pos:end="1269:23">nal_ref_idc</name></name> <operator pos:start="1269:25" pos:end="1269:26">==</operator> <literal type="number" pos:start="1269:28" pos:end="1269:28">0</literal><operator pos:start="1269:29" pos:end="1269:29">)</operator></expr>)</condition><block type="pseudo" pos:start="1271:9" pos:end="1271:33"><block_content pos:start="1271:9" pos:end="1271:33">

        <expr_stmt pos:start="1271:9" pos:end="1271:33"><expr pos:start="1271:9" pos:end="1271:32"><name pos:start="1271:9" pos:end="1271:28"><name pos:start="1271:9" pos:end="1271:9">h</name><operator pos:start="1271:10" pos:end="1271:11">-&gt;</operator><name pos:start="1271:12" pos:end="1271:28">deblocking_filter</name></name> <operator pos:start="1271:30" pos:end="1271:30">=</operator> <literal type="number" pos:start="1271:32" pos:end="1271:32">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="1275:5" pos:end="1317:5"><if pos:start="1275:5" pos:end="1317:5">if <condition pos:start="1275:8" pos:end="1275:58">(<expr pos:start="1275:9" pos:end="1275:57"><name pos:start="1275:9" pos:end="1275:28"><name pos:start="1275:9" pos:end="1275:9">h</name><operator pos:start="1275:10" pos:end="1275:11">-&gt;</operator><name pos:start="1275:12" pos:end="1275:28">deblocking_filter</name></name> <operator pos:start="1275:30" pos:end="1275:31">==</operator> <literal type="number" pos:start="1275:33" pos:end="1275:33">1</literal> <operator pos:start="1275:35" pos:end="1275:36">&amp;&amp;</operator> <name pos:start="1275:38" pos:end="1275:53"><name pos:start="1275:38" pos:end="1275:39">h0</name><operator pos:start="1275:40" pos:end="1275:41">-&gt;</operator><name pos:start="1275:42" pos:end="1275:53">max_contexts</name></name> <operator pos:start="1275:55" pos:end="1275:55">&gt;</operator> <literal type="number" pos:start="1275:57" pos:end="1275:57">1</literal></expr>)</condition> <block pos:start="1275:60" pos:end="1317:5">{<block_content pos:start="1277:9" pos:end="1315:9">

        <if_stmt pos:start="1277:9" pos:end="1315:9"><if pos:start="1277:9" pos:end="1285:9">if <condition pos:start="1277:12" pos:end="1277:48">(<expr pos:start="1277:13" pos:end="1277:47"><name pos:start="1277:13" pos:end="1277:28"><name pos:start="1277:13" pos:end="1277:13">h</name><operator pos:start="1277:14" pos:end="1277:15">-&gt;</operator><name pos:start="1277:16" pos:end="1277:20">avctx</name><operator pos:start="1277:21" pos:end="1277:22">-&gt;</operator><name pos:start="1277:23" pos:end="1277:28">flags2</name></name> <operator pos:start="1277:30" pos:end="1277:30">&amp;</operator> <name pos:start="1277:32" pos:end="1277:47">CODEC_FLAG2_FAST</name></expr>)</condition> <block pos:start="1277:50" pos:end="1285:9">{<block_content pos:start="1283:13" pos:end="1283:37">

            <comment type="block" pos:start="1279:13" pos:end="1281:57">/* Cheat slightly for speed:

             * Do not bother to deblock across slices. */</comment>

            <expr_stmt pos:start="1283:13" pos:end="1283:37"><expr pos:start="1283:13" pos:end="1283:36"><name pos:start="1283:13" pos:end="1283:32"><name pos:start="1283:13" pos:end="1283:13">h</name><operator pos:start="1283:14" pos:end="1283:15">-&gt;</operator><name pos:start="1283:16" pos:end="1283:32">deblocking_filter</name></name> <operator pos:start="1283:34" pos:end="1283:34">=</operator> <literal type="number" pos:start="1283:36" pos:end="1283:36">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1285:11" pos:end="1315:9">else <block pos:start="1285:16" pos:end="1315:9">{<block_content pos:start="1287:13" pos:end="1313:13">

            <expr_stmt pos:start="1287:13" pos:end="1287:33"><expr pos:start="1287:13" pos:end="1287:32"><name pos:start="1287:13" pos:end="1287:28"><name pos:start="1287:13" pos:end="1287:14">h0</name><operator pos:start="1287:15" pos:end="1287:16">-&gt;</operator><name pos:start="1287:17" pos:end="1287:28">max_contexts</name></name> <operator pos:start="1287:30" pos:end="1287:30">=</operator> <literal type="number" pos:start="1287:32" pos:end="1287:32">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1289:13" pos:end="1303:13"><if pos:start="1289:13" pos:end="1303:13">if <condition pos:start="1289:16" pos:end="1289:43">(<expr pos:start="1289:17" pos:end="1289:42"><operator pos:start="1289:17" pos:end="1289:17">!</operator><name pos:start="1289:18" pos:end="1289:42"><name pos:start="1289:18" pos:end="1289:19">h0</name><operator pos:start="1289:20" pos:end="1289:21">-&gt;</operator><name pos:start="1289:22" pos:end="1289:42">single_decode_warning</name></name></expr>)</condition> <block pos:start="1289:45" pos:end="1303:13">{<block_content pos:start="1291:17" pos:end="1301:46">

                <expr_stmt pos:start="1291:17" pos:end="1299:77"><expr pos:start="1291:17" pos:end="1299:76"><call pos:start="1291:17" pos:end="1299:76"><name pos:start="1291:17" pos:end="1291:22">av_log</name><argument_list pos:start="1291:23" pos:end="1299:76">(<argument pos:start="1291:24" pos:end="1291:31"><expr pos:start="1291:24" pos:end="1291:31"><name pos:start="1291:24" pos:end="1291:31"><name pos:start="1291:24" pos:end="1291:24">h</name><operator pos:start="1291:25" pos:end="1291:26">-&gt;</operator><name pos:start="1291:27" pos:end="1291:31">avctx</name></name></expr></argument>, <argument pos:start="1291:34" pos:end="1291:44"><expr pos:start="1291:34" pos:end="1291:44"><name pos:start="1291:34" pos:end="1291:44">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="1293:24" pos:end="1299:75"><expr pos:start="1293:24" pos:end="1299:75"><literal type="string" pos:start="1293:24" pos:end="1293:132">"Cannot parallelize slice decoding with deblocking filter type 1, decoding such frames in sequential order\n"</literal>

                       <literal type="string" pos:start="1295:24" pos:end="1295:170">"To parallelize slice decoding you need video encoded with disable_deblocking_filter_idc set to 2 (deblock only edges that do not cross slices).\n"</literal>

                       <literal type="string" pos:start="1297:24" pos:end="1297:160">"Setting the flags2 libavcodec option to +fast (-flags2 +fast) will disable deblocking across slices and enable parallel slice decoding "</literal>

                       <literal type="string" pos:start="1299:24" pos:end="1299:75">"but will generate non-standard-compliant output.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1301:17" pos:end="1301:46"><expr pos:start="1301:17" pos:end="1301:45"><name pos:start="1301:17" pos:end="1301:41"><name pos:start="1301:17" pos:end="1301:18">h0</name><operator pos:start="1301:19" pos:end="1301:20">-&gt;</operator><name pos:start="1301:21" pos:end="1301:41">single_decode_warning</name></name> <operator pos:start="1301:43" pos:end="1301:43">=</operator> <literal type="number" pos:start="1301:45" pos:end="1301:45">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1305:13" pos:end="1313:13"><if pos:start="1305:13" pos:end="1313:13">if <condition pos:start="1305:16" pos:end="1305:24">(<expr pos:start="1305:17" pos:end="1305:23"><name pos:start="1305:17" pos:end="1305:17">h</name> <operator pos:start="1305:19" pos:end="1305:20">!=</operator> <name pos:start="1305:22" pos:end="1305:23">h0</name></expr>)</condition> <block pos:start="1305:26" pos:end="1313:13">{<block_content pos:start="1307:17" pos:end="1311:42">

                <expr_stmt pos:start="1307:17" pos:end="1309:62"><expr pos:start="1307:17" pos:end="1309:61"><call pos:start="1307:17" pos:end="1309:61"><name pos:start="1307:17" pos:end="1307:22">av_log</name><argument_list pos:start="1307:23" pos:end="1309:61">(<argument pos:start="1307:24" pos:end="1307:31"><expr pos:start="1307:24" pos:end="1307:31"><name pos:start="1307:24" pos:end="1307:31"><name pos:start="1307:24" pos:end="1307:24">h</name><operator pos:start="1307:25" pos:end="1307:26">-&gt;</operator><name pos:start="1307:27" pos:end="1307:31">avctx</name></name></expr></argument>, <argument pos:start="1307:34" pos:end="1307:45"><expr pos:start="1307:34" pos:end="1307:45"><name pos:start="1307:34" pos:end="1307:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="1309:24" pos:end="1309:60"><expr pos:start="1309:24" pos:end="1309:60"><literal type="string" pos:start="1309:24" pos:end="1309:60">"Deblocking switched inside frame.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1311:17" pos:end="1311:42">return <expr pos:start="1311:24" pos:end="1311:41"><name pos:start="1311:24" pos:end="1311:41">SLICE_SINGLETHREAD</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1319:5" pos:end="1329:51"><expr pos:start="1319:5" pos:end="1329:50"><name pos:start="1319:5" pos:end="1319:16"><name pos:start="1319:5" pos:end="1319:5">h</name><operator pos:start="1319:6" pos:end="1319:7">-&gt;</operator><name pos:start="1319:8" pos:end="1319:16">qp_thresh</name></name> <operator pos:start="1319:18" pos:end="1319:18">=</operator> <literal type="number" pos:start="1319:20" pos:end="1319:23">15</literal> <operator pos:start="1319:23" pos:end="1319:23">-</operator>

                   <call pos:start="1321:20" pos:end="1321:72"><name pos:start="1321:20" pos:end="1321:24">FFMIN</name><argument_list pos:start="1321:25" pos:end="1321:72">(<argument pos:start="1321:26" pos:end="1321:49"><expr pos:start="1321:26" pos:end="1321:49"><name pos:start="1321:26" pos:end="1321:49"><name pos:start="1321:26" pos:end="1321:26">h</name><operator pos:start="1321:27" pos:end="1321:28">-&gt;</operator><name pos:start="1321:29" pos:end="1321:49">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1321:52" pos:end="1321:71"><expr pos:start="1321:52" pos:end="1321:71"><name pos:start="1321:52" pos:end="1321:71"><name pos:start="1321:52" pos:end="1321:52">h</name><operator pos:start="1321:53" pos:end="1321:54">-&gt;</operator><name pos:start="1321:55" pos:end="1321:71">slice_beta_offset</name></name></expr></argument>)</argument_list></call> <operator pos:start="1321:74" pos:end="1321:74">-</operator>

                   <call pos:start="1323:20" pos:end="1327:59"><name pos:start="1323:20" pos:end="1323:25">FFMAX3</name><argument_list pos:start="1323:26" pos:end="1327:59">(<argument pos:start="1323:27" pos:end="1323:27"><expr pos:start="1323:27" pos:end="1323:27"><literal type="number" pos:start="1323:27" pos:end="1323:27">0</literal></expr></argument>,

                          <argument pos:start="1325:27" pos:end="1325:58"><expr pos:start="1325:27" pos:end="1325:58"><name pos:start="1325:27" pos:end="1325:58"><name pos:start="1325:27" pos:end="1325:27">h</name><operator pos:start="1325:28" pos:end="1325:29">-&gt;</operator><name pos:start="1325:30" pos:end="1325:32">pps</name><operator pos:start="1325:33" pos:end="1325:33">.</operator><name pos:start="1325:34" pos:end="1325:55">chroma_qp_index_offset</name><index pos:start="1325:56" pos:end="1325:58">[<expr pos:start="1325:57" pos:end="1325:57"><literal type="number" pos:start="1325:57" pos:end="1325:57">0</literal></expr>]</index></name></expr></argument>,

                          <argument pos:start="1327:27" pos:end="1327:58"><expr pos:start="1327:27" pos:end="1327:58"><name pos:start="1327:27" pos:end="1327:58"><name pos:start="1327:27" pos:end="1327:27">h</name><operator pos:start="1327:28" pos:end="1327:29">-&gt;</operator><name pos:start="1327:30" pos:end="1327:32">pps</name><operator pos:start="1327:33" pos:end="1327:33">.</operator><name pos:start="1327:34" pos:end="1327:55">chroma_qp_index_offset</name><index pos:start="1327:56" pos:end="1327:58">[<expr pos:start="1327:57" pos:end="1327:57"><literal type="number" pos:start="1327:57" pos:end="1327:57">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="1327:61" pos:end="1327:61">+</operator>

                   <literal type="number" pos:start="1329:20" pos:end="1329:20">6</literal> <operator pos:start="1329:22" pos:end="1329:22">*</operator> <operator pos:start="1329:24" pos:end="1329:24">(</operator><name pos:start="1329:25" pos:end="1329:45"><name pos:start="1329:25" pos:end="1329:25">h</name><operator pos:start="1329:26" pos:end="1329:27">-&gt;</operator><name pos:start="1329:28" pos:end="1329:30">sps</name><operator pos:start="1329:31" pos:end="1329:31">.</operator><name pos:start="1329:32" pos:end="1329:45">bit_depth_luma</name></name> <operator pos:start="1329:47" pos:end="1329:47">-</operator> <literal type="number" pos:start="1329:49" pos:end="1329:49">8</literal><operator pos:start="1329:50" pos:end="1329:50">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="1333:5" pos:end="1333:37"><expr pos:start="1333:5" pos:end="1333:36"><name pos:start="1333:5" pos:end="1333:23"><name pos:start="1333:5" pos:end="1333:6">h0</name><operator pos:start="1333:7" pos:end="1333:8">-&gt;</operator><name pos:start="1333:9" pos:end="1333:23">last_slice_type</name></name> <operator pos:start="1333:25" pos:end="1333:25">=</operator> <name pos:start="1333:27" pos:end="1333:36">slice_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1335:5" pos:end="1335:74"><expr pos:start="1335:5" pos:end="1335:73"><call pos:start="1335:5" pos:end="1335:73"><name pos:start="1335:5" pos:end="1335:10">memcpy</name><argument_list pos:start="1335:11" pos:end="1335:73">(<argument pos:start="1335:12" pos:end="1335:29"><expr pos:start="1335:12" pos:end="1335:29"><name pos:start="1335:12" pos:end="1335:29"><name pos:start="1335:12" pos:end="1335:13">h0</name><operator pos:start="1335:14" pos:end="1335:15">-&gt;</operator><name pos:start="1335:16" pos:end="1335:29">last_ref_count</name></name></expr></argument>, <argument pos:start="1335:32" pos:end="1335:44"><expr pos:start="1335:32" pos:end="1335:44"><name pos:start="1335:32" pos:end="1335:44"><name pos:start="1335:32" pos:end="1335:33">h0</name><operator pos:start="1335:34" pos:end="1335:35">-&gt;</operator><name pos:start="1335:36" pos:end="1335:44">ref_count</name></name></expr></argument>, <argument pos:start="1335:47" pos:end="1335:72"><expr pos:start="1335:47" pos:end="1335:72"><sizeof pos:start="1335:47" pos:end="1335:72">sizeof<argument_list pos:start="1335:53" pos:end="1335:72">(<argument pos:start="1335:54" pos:end="1335:71"><expr pos:start="1335:54" pos:end="1335:71"><name pos:start="1335:54" pos:end="1335:71"><name pos:start="1335:54" pos:end="1335:55">h0</name><operator pos:start="1335:56" pos:end="1335:57">-&gt;</operator><name pos:start="1335:58" pos:end="1335:71">last_ref_count</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1337:5" pos:end="1337:46"><expr pos:start="1337:5" pos:end="1337:45"><name pos:start="1337:5" pos:end="1337:16"><name pos:start="1337:5" pos:end="1337:5">h</name><operator pos:start="1337:6" pos:end="1337:7">-&gt;</operator><name pos:start="1337:8" pos:end="1337:16">slice_num</name></name>        <operator pos:start="1337:25" pos:end="1337:25">=</operator> <operator pos:start="1337:27" pos:end="1337:28">++</operator><name pos:start="1337:29" pos:end="1337:45"><name pos:start="1337:29" pos:end="1337:30">h0</name><operator pos:start="1337:31" pos:end="1337:32">-&gt;</operator><name pos:start="1337:33" pos:end="1337:45">current_slice</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="1341:5" pos:end="1343:71"><if pos:start="1341:5" pos:end="1343:71">if <condition pos:start="1341:8" pos:end="1341:21">(<expr pos:start="1341:9" pos:end="1341:20"><name pos:start="1341:9" pos:end="1341:20"><name pos:start="1341:9" pos:end="1341:9">h</name><operator pos:start="1341:10" pos:end="1341:11">-&gt;</operator><name pos:start="1341:12" pos:end="1341:20">slice_num</name></name></expr>)</condition><block type="pseudo" pos:start="1343:9" pos:end="1343:71"><block_content pos:start="1343:9" pos:end="1343:71">

        <expr_stmt pos:start="1343:9" pos:end="1343:71"><expr pos:start="1343:9" pos:end="1343:70"><name pos:start="1343:9" pos:end="1343:54"><name pos:start="1343:9" pos:end="1343:10">h0</name><operator pos:start="1343:11" pos:end="1343:12">-&gt;</operator><name pos:start="1343:13" pos:end="1343:21">slice_row</name><index pos:start="1343:22" pos:end="1343:54">[<expr pos:start="1343:23" pos:end="1343:53"><operator pos:start="1343:23" pos:end="1343:23">(</operator><name pos:start="1343:24" pos:end="1343:35"><name pos:start="1343:24" pos:end="1343:24">h</name><operator pos:start="1343:25" pos:end="1343:26">-&gt;</operator><name pos:start="1343:27" pos:end="1343:35">slice_num</name></name><operator pos:start="1343:36" pos:end="1343:36">-</operator><literal type="number" pos:start="1343:37" pos:end="1343:37">1</literal><operator pos:start="1343:38" pos:end="1343:38">)</operator><operator pos:start="1343:39" pos:end="1343:39">&amp;</operator><operator pos:start="1343:40" pos:end="1343:40">(</operator><name pos:start="1343:41" pos:end="1343:50">MAX_SLICES</name><operator pos:start="1343:51" pos:end="1343:51">-</operator><literal type="number" pos:start="1343:52" pos:end="1343:52">1</literal><operator pos:start="1343:53" pos:end="1343:53">)</operator></expr>]</index></name><operator pos:start="1343:55" pos:end="1343:55">=</operator> <name pos:start="1343:57" pos:end="1343:70"><name pos:start="1343:57" pos:end="1343:57">h</name><operator pos:start="1343:58" pos:end="1343:59">-&gt;</operator><name pos:start="1343:60" pos:end="1343:70">resync_mb_y</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1345:5" pos:end="1355:5"><if pos:start="1345:5" pos:end="1355:5">if <condition pos:start="1345:8" pos:end="1349:38">(   <expr pos:start="1345:12" pos:end="1349:37"><name pos:start="1345:12" pos:end="1345:53"><name pos:start="1345:12" pos:end="1345:13">h0</name><operator pos:start="1345:14" pos:end="1345:15">-&gt;</operator><name pos:start="1345:16" pos:end="1345:24">slice_row</name><index pos:start="1345:25" pos:end="1345:53">[<expr pos:start="1345:26" pos:end="1345:52"><name pos:start="1345:26" pos:end="1345:37"><name pos:start="1345:26" pos:end="1345:26">h</name><operator pos:start="1345:27" pos:end="1345:28">-&gt;</operator><name pos:start="1345:29" pos:end="1345:37">slice_num</name></name><operator pos:start="1345:38" pos:end="1345:38">&amp;</operator><operator pos:start="1345:39" pos:end="1345:39">(</operator><name pos:start="1345:40" pos:end="1345:49">MAX_SLICES</name><operator pos:start="1345:50" pos:end="1345:50">-</operator><literal type="number" pos:start="1345:51" pos:end="1345:51">1</literal><operator pos:start="1345:52" pos:end="1345:52">)</operator></expr>]</index></name> <operator pos:start="1345:55" pos:end="1345:55">+</operator> <literal type="number" pos:start="1345:57" pos:end="1345:57">3</literal> <operator pos:start="1345:59" pos:end="1345:60">&gt;=</operator> <name pos:start="1345:62" pos:end="1345:75"><name pos:start="1345:62" pos:end="1345:62">h</name><operator pos:start="1345:63" pos:end="1345:64">-&gt;</operator><name pos:start="1345:65" pos:end="1345:75">resync_mb_y</name></name>

        <operator pos:start="1347:9" pos:end="1347:10">&amp;&amp;</operator> <name pos:start="1347:12" pos:end="1347:53"><name pos:start="1347:12" pos:end="1347:13">h0</name><operator pos:start="1347:14" pos:end="1347:15">-&gt;</operator><name pos:start="1347:16" pos:end="1347:24">slice_row</name><index pos:start="1347:25" pos:end="1347:53">[<expr pos:start="1347:26" pos:end="1347:52"><name pos:start="1347:26" pos:end="1347:37"><name pos:start="1347:26" pos:end="1347:26">h</name><operator pos:start="1347:27" pos:end="1347:28">-&gt;</operator><name pos:start="1347:29" pos:end="1347:37">slice_num</name></name><operator pos:start="1347:38" pos:end="1347:38">&amp;</operator><operator pos:start="1347:39" pos:end="1347:39">(</operator><name pos:start="1347:40" pos:end="1347:49">MAX_SLICES</name><operator pos:start="1347:50" pos:end="1347:50">-</operator><literal type="number" pos:start="1347:51" pos:end="1347:51">1</literal><operator pos:start="1347:52" pos:end="1347:52">)</operator></expr>]</index></name> <operator pos:start="1347:55" pos:end="1347:56">&lt;=</operator> <name pos:start="1347:58" pos:end="1347:71"><name pos:start="1347:58" pos:end="1347:58">h</name><operator pos:start="1347:59" pos:end="1347:60">-&gt;</operator><name pos:start="1347:61" pos:end="1347:71">resync_mb_y</name></name>

        <operator pos:start="1349:9" pos:end="1349:10">&amp;&amp;</operator> <name pos:start="1349:12" pos:end="1349:23"><name pos:start="1349:12" pos:end="1349:12">h</name><operator pos:start="1349:13" pos:end="1349:14">-&gt;</operator><name pos:start="1349:15" pos:end="1349:23">slice_num</name></name> <operator pos:start="1349:25" pos:end="1349:26">&gt;=</operator> <name pos:start="1349:28" pos:end="1349:37">MAX_SLICES</name></expr>)</condition> <block pos:start="1349:40" pos:end="1355:5">{<block_content pos:start="1353:9" pos:end="1353:166">

        <comment type="line" pos:start="1351:9" pos:end="1351:119">//in case of ASO this check needs to be updated depending on how we decide to assign slice numbers in this case</comment>

        <expr_stmt pos:start="1353:9" pos:end="1353:166"><expr pos:start="1353:9" pos:end="1353:165"><call pos:start="1353:9" pos:end="1353:165"><name pos:start="1353:9" pos:end="1353:14">av_log</name><argument_list pos:start="1353:15" pos:end="1353:165">(<argument pos:start="1353:16" pos:end="1353:23"><expr pos:start="1353:16" pos:end="1353:23"><name pos:start="1353:16" pos:end="1353:23"><name pos:start="1353:16" pos:end="1353:16">h</name><operator pos:start="1353:17" pos:end="1353:18">-&gt;</operator><name pos:start="1353:19" pos:end="1353:23">avctx</name></name></expr></argument>, <argument pos:start="1353:26" pos:end="1353:39"><expr pos:start="1353:26" pos:end="1353:39"><name pos:start="1353:26" pos:end="1353:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="1353:42" pos:end="1353:138"><expr pos:start="1353:42" pos:end="1353:138"><literal type="string" pos:start="1353:42" pos:end="1353:138">"Possibly too many slices (%d &gt;= %d), increase MAX_SLICES and recompile if there are artifacts\n"</literal></expr></argument>, <argument pos:start="1353:141" pos:end="1353:152"><expr pos:start="1353:141" pos:end="1353:152"><name pos:start="1353:141" pos:end="1353:152"><name pos:start="1353:141" pos:end="1353:141">h</name><operator pos:start="1353:142" pos:end="1353:143">-&gt;</operator><name pos:start="1353:144" pos:end="1353:152">slice_num</name></name></expr></argument>, <argument pos:start="1353:155" pos:end="1353:164"><expr pos:start="1353:155" pos:end="1353:164"><name pos:start="1353:155" pos:end="1353:164">MAX_SLICES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="1359:5" pos:end="1421:5">for <control pos:start="1359:9" pos:end="1359:27">(<init pos:start="1359:10" pos:end="1359:15"><expr pos:start="1359:10" pos:end="1359:14"><name pos:start="1359:10" pos:end="1359:10">j</name> <operator pos:start="1359:12" pos:end="1359:12">=</operator> <literal type="number" pos:start="1359:14" pos:end="1359:14">0</literal></expr>;</init> <condition pos:start="1359:17" pos:end="1359:22"><expr pos:start="1359:17" pos:end="1359:21"><name pos:start="1359:17" pos:end="1359:17">j</name> <operator pos:start="1359:19" pos:end="1359:19">&lt;</operator> <literal type="number" pos:start="1359:21" pos:end="1359:21">2</literal></expr>;</condition> <incr pos:start="1359:24" pos:end="1359:26"><expr pos:start="1359:24" pos:end="1359:26"><name pos:start="1359:24" pos:end="1359:24">j</name><operator pos:start="1359:25" pos:end="1359:26">++</operator></expr></incr>)</control> <block pos:start="1359:29" pos:end="1421:5">{<block_content pos:start="1361:9" pos:end="1419:63">

        <decl_stmt pos:start="1361:9" pos:end="1361:24"><decl pos:start="1361:9" pos:end="1361:23"><type pos:start="1361:9" pos:end="1361:11"><name pos:start="1361:9" pos:end="1361:11">int</name></type> <name pos:start="1361:13" pos:end="1361:23"><name pos:start="1361:13" pos:end="1361:19">id_list</name><index pos:start="1361:20" pos:end="1361:23">[<expr pos:start="1361:21" pos:end="1361:22"><literal type="number" pos:start="1361:21" pos:end="1361:22">16</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="1363:9" pos:end="1363:70"><decl pos:start="1363:9" pos:end="1363:69"><type pos:start="1363:9" pos:end="1363:13"><name pos:start="1363:9" pos:end="1363:11">int</name> <modifier pos:start="1363:13" pos:end="1363:13">*</modifier></type><name pos:start="1363:14" pos:end="1363:20">ref2frm</name> <init pos:start="1363:22" pos:end="1363:69">= <expr pos:start="1363:24" pos:end="1363:69"><name pos:start="1363:24" pos:end="1363:69"><name pos:start="1363:24" pos:end="1363:24">h</name><operator pos:start="1363:25" pos:end="1363:26">-&gt;</operator><name pos:start="1363:27" pos:end="1363:33">ref2frm</name><index pos:start="1363:34" pos:end="1363:66">[<expr pos:start="1363:35" pos:end="1363:65"><name pos:start="1363:35" pos:end="1363:46"><name pos:start="1363:35" pos:end="1363:35">h</name><operator pos:start="1363:36" pos:end="1363:37">-&gt;</operator><name pos:start="1363:38" pos:end="1363:46">slice_num</name></name> <operator pos:start="1363:48" pos:end="1363:48">&amp;</operator> <operator pos:start="1363:50" pos:end="1363:50">(</operator><name pos:start="1363:51" pos:end="1363:60">MAX_SLICES</name> <operator pos:start="1363:62" pos:end="1363:62">-</operator> <literal type="number" pos:start="1363:64" pos:end="1363:64">1</literal><operator pos:start="1363:65" pos:end="1363:65">)</operator></expr>]</index><index pos:start="1363:67" pos:end="1363:69">[<expr pos:start="1363:68" pos:end="1363:68"><name pos:start="1363:68" pos:end="1363:68">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="1365:9" pos:end="1399:9">for <control pos:start="1365:13" pos:end="1365:32">(<init pos:start="1365:14" pos:end="1365:19"><expr pos:start="1365:14" pos:end="1365:18"><name pos:start="1365:14" pos:end="1365:14">i</name> <operator pos:start="1365:16" pos:end="1365:16">=</operator> <literal type="number" pos:start="1365:18" pos:end="1365:18">0</literal></expr>;</init> <condition pos:start="1365:21" pos:end="1365:27"><expr pos:start="1365:21" pos:end="1365:26"><name pos:start="1365:21" pos:end="1365:21">i</name> <operator pos:start="1365:23" pos:end="1365:23">&lt;</operator> <literal type="number" pos:start="1365:25" pos:end="1365:26">16</literal></expr>;</condition> <incr pos:start="1365:29" pos:end="1365:31"><expr pos:start="1365:29" pos:end="1365:31"><name pos:start="1365:29" pos:end="1365:29">i</name><operator pos:start="1365:30" pos:end="1365:31">++</operator></expr></incr>)</control> <block pos:start="1365:34" pos:end="1399:9">{<block_content pos:start="1367:13" pos:end="1397:13">

            <expr_stmt pos:start="1367:13" pos:end="1367:28"><expr pos:start="1367:13" pos:end="1367:27"><name pos:start="1367:13" pos:end="1367:22"><name pos:start="1367:13" pos:end="1367:19">id_list</name><index pos:start="1367:20" pos:end="1367:22">[<expr pos:start="1367:21" pos:end="1367:21"><name pos:start="1367:21" pos:end="1367:21">i</name></expr>]</index></name> <operator pos:start="1367:24" pos:end="1367:24">=</operator> <literal type="number" pos:start="1367:26" pos:end="1367:27">60</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1369:13" pos:end="1397:13"><if pos:start="1369:13" pos:end="1397:13">if <condition pos:start="1369:16" pos:end="1371:43">(<expr pos:start="1369:17" pos:end="1371:42"><name pos:start="1369:17" pos:end="1369:17">j</name> <operator pos:start="1369:19" pos:end="1369:19">&lt;</operator> <name pos:start="1369:21" pos:end="1369:33"><name pos:start="1369:21" pos:end="1369:21">h</name><operator pos:start="1369:22" pos:end="1369:23">-&gt;</operator><name pos:start="1369:24" pos:end="1369:33">list_count</name></name> <operator pos:start="1369:35" pos:end="1369:36">&amp;&amp;</operator> <name pos:start="1369:38" pos:end="1369:38">i</name> <operator pos:start="1369:40" pos:end="1369:40">&lt;</operator> <name pos:start="1369:42" pos:end="1369:56"><name pos:start="1369:42" pos:end="1369:42">h</name><operator pos:start="1369:43" pos:end="1369:44">-&gt;</operator><name pos:start="1369:45" pos:end="1369:53">ref_count</name><index pos:start="1369:54" pos:end="1369:56">[<expr pos:start="1369:55" pos:end="1369:55"><name pos:start="1369:55" pos:end="1369:55">j</name></expr>]</index></name> <operator pos:start="1369:58" pos:end="1369:59">&amp;&amp;</operator>

                <name pos:start="1371:17" pos:end="1371:33"><name pos:start="1371:17" pos:end="1371:17">h</name><operator pos:start="1371:18" pos:end="1371:19">-&gt;</operator><name pos:start="1371:20" pos:end="1371:27">ref_list</name><index pos:start="1371:28" pos:end="1371:30">[<expr pos:start="1371:29" pos:end="1371:29"><name pos:start="1371:29" pos:end="1371:29">j</name></expr>]</index><index pos:start="1371:31" pos:end="1371:33">[<expr pos:start="1371:32" pos:end="1371:32"><name pos:start="1371:32" pos:end="1371:32">i</name></expr>]</index></name><operator pos:start="1371:34" pos:end="1371:34">.</operator><name pos:start="1371:35" pos:end="1371:42"><name pos:start="1371:35" pos:end="1371:35">f</name><operator pos:start="1371:36" pos:end="1371:36">.</operator><name pos:start="1371:37" pos:end="1371:39">buf</name><index pos:start="1371:40" pos:end="1371:42">[<expr pos:start="1371:41" pos:end="1371:41"><literal type="number" pos:start="1371:41" pos:end="1371:41">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="1371:45" pos:end="1397:13">{<block_content pos:start="1373:17" pos:end="1395:21">

                <decl_stmt pos:start="1373:17" pos:end="1373:22"><decl pos:start="1373:17" pos:end="1373:21"><type pos:start="1373:17" pos:end="1373:19"><name pos:start="1373:17" pos:end="1373:19">int</name></type> <name pos:start="1373:21" pos:end="1373:21">k</name></decl>;</decl_stmt>

                <decl_stmt pos:start="1375:17" pos:end="1375:67"><decl pos:start="1375:17" pos:end="1375:66"><type pos:start="1375:17" pos:end="1375:26"><name pos:start="1375:17" pos:end="1375:24">AVBuffer</name> <modifier pos:start="1375:26" pos:end="1375:26">*</modifier></type><name pos:start="1375:27" pos:end="1375:29">buf</name> <init pos:start="1375:31" pos:end="1375:66">= <expr pos:start="1375:33" pos:end="1375:66"><name pos:start="1375:33" pos:end="1375:49"><name pos:start="1375:33" pos:end="1375:33">h</name><operator pos:start="1375:34" pos:end="1375:35">-&gt;</operator><name pos:start="1375:36" pos:end="1375:43">ref_list</name><index pos:start="1375:44" pos:end="1375:46">[<expr pos:start="1375:45" pos:end="1375:45"><name pos:start="1375:45" pos:end="1375:45">j</name></expr>]</index><index pos:start="1375:47" pos:end="1375:49">[<expr pos:start="1375:48" pos:end="1375:48"><name pos:start="1375:48" pos:end="1375:48">i</name></expr>]</index></name><operator pos:start="1375:50" pos:end="1375:50">.</operator><name pos:start="1375:51" pos:end="1375:58"><name pos:start="1375:51" pos:end="1375:51">f</name><operator pos:start="1375:52" pos:end="1375:52">.</operator><name pos:start="1375:53" pos:end="1375:55">buf</name><index pos:start="1375:56" pos:end="1375:58">[<expr pos:start="1375:57" pos:end="1375:57"><literal type="number" pos:start="1375:57" pos:end="1375:57">0</literal></expr>]</index></name><operator pos:start="1375:59" pos:end="1375:60">-&gt;</operator><name pos:start="1375:61" pos:end="1375:66">buffer</name></expr></init></decl>;</decl_stmt>

                <for pos:start="1377:17" pos:end="1385:21">for <control pos:start="1377:21" pos:end="1377:56">(<init pos:start="1377:22" pos:end="1377:27"><expr pos:start="1377:22" pos:end="1377:26"><name pos:start="1377:22" pos:end="1377:22">k</name> <operator pos:start="1377:24" pos:end="1377:24">=</operator> <literal type="number" pos:start="1377:26" pos:end="1377:26">0</literal></expr>;</init> <condition pos:start="1377:29" pos:end="1377:51"><expr pos:start="1377:29" pos:end="1377:50"><name pos:start="1377:29" pos:end="1377:29">k</name> <operator pos:start="1377:31" pos:end="1377:31">&lt;</operator> <name pos:start="1377:33" pos:end="1377:50"><name pos:start="1377:33" pos:end="1377:33">h</name><operator pos:start="1377:34" pos:end="1377:35">-&gt;</operator><name pos:start="1377:36" pos:end="1377:50">short_ref_count</name></name></expr>;</condition> <incr pos:start="1377:53" pos:end="1377:55"><expr pos:start="1377:53" pos:end="1377:55"><name pos:start="1377:53" pos:end="1377:53">k</name><operator pos:start="1377:54" pos:end="1377:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1379:21" pos:end="1385:21"><block_content pos:start="1379:21" pos:end="1385:21">

                    <if_stmt pos:start="1379:21" pos:end="1385:21"><if pos:start="1379:21" pos:end="1385:21">if <condition pos:start="1379:24" pos:end="1379:65">(<expr pos:start="1379:25" pos:end="1379:64"><name pos:start="1379:25" pos:end="1379:39"><name pos:start="1379:25" pos:end="1379:25">h</name><operator pos:start="1379:26" pos:end="1379:27">-&gt;</operator><name pos:start="1379:28" pos:end="1379:36">short_ref</name><index pos:start="1379:37" pos:end="1379:39">[<expr pos:start="1379:38" pos:end="1379:38"><name pos:start="1379:38" pos:end="1379:38">k</name></expr>]</index></name><operator pos:start="1379:40" pos:end="1379:41">-&gt;</operator><name pos:start="1379:42" pos:end="1379:49"><name pos:start="1379:42" pos:end="1379:42">f</name><operator pos:start="1379:43" pos:end="1379:43">.</operator><name pos:start="1379:44" pos:end="1379:46">buf</name><index pos:start="1379:47" pos:end="1379:49">[<expr pos:start="1379:48" pos:end="1379:48"><literal type="number" pos:start="1379:48" pos:end="1379:48">0</literal></expr>]</index></name><operator pos:start="1379:50" pos:end="1379:51">-&gt;</operator><name pos:start="1379:52" pos:end="1379:57">buffer</name> <operator pos:start="1379:59" pos:end="1379:60">==</operator> <name pos:start="1379:62" pos:end="1379:64">buf</name></expr>)</condition> <block pos:start="1379:67" pos:end="1385:21">{<block_content pos:start="1381:25" pos:end="1383:30">

                        <expr_stmt pos:start="1381:25" pos:end="1381:39"><expr pos:start="1381:25" pos:end="1381:38"><name pos:start="1381:25" pos:end="1381:34"><name pos:start="1381:25" pos:end="1381:31">id_list</name><index pos:start="1381:32" pos:end="1381:34">[<expr pos:start="1381:33" pos:end="1381:33"><name pos:start="1381:33" pos:end="1381:33">i</name></expr>]</index></name> <operator pos:start="1381:36" pos:end="1381:36">=</operator> <name pos:start="1381:38" pos:end="1381:38">k</name></expr>;</expr_stmt>

                        <break pos:start="1383:25" pos:end="1383:30">break;</break>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

                <for pos:start="1387:17" pos:end="1395:21">for <control pos:start="1387:21" pos:end="1387:55">(<init pos:start="1387:22" pos:end="1387:27"><expr pos:start="1387:22" pos:end="1387:26"><name pos:start="1387:22" pos:end="1387:22">k</name> <operator pos:start="1387:24" pos:end="1387:24">=</operator> <literal type="number" pos:start="1387:26" pos:end="1387:26">0</literal></expr>;</init> <condition pos:start="1387:29" pos:end="1387:50"><expr pos:start="1387:29" pos:end="1387:49"><name pos:start="1387:29" pos:end="1387:29">k</name> <operator pos:start="1387:31" pos:end="1387:31">&lt;</operator> <name pos:start="1387:33" pos:end="1387:49"><name pos:start="1387:33" pos:end="1387:33">h</name><operator pos:start="1387:34" pos:end="1387:35">-&gt;</operator><name pos:start="1387:36" pos:end="1387:49">long_ref_count</name></name></expr>;</condition> <incr pos:start="1387:52" pos:end="1387:54"><expr pos:start="1387:52" pos:end="1387:54"><name pos:start="1387:52" pos:end="1387:52">k</name><operator pos:start="1387:53" pos:end="1387:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1389:21" pos:end="1395:21"><block_content pos:start="1389:21" pos:end="1395:21">

                    <if_stmt pos:start="1389:21" pos:end="1395:21"><if pos:start="1389:21" pos:end="1395:21">if <condition pos:start="1389:24" pos:end="1389:82">(<expr pos:start="1389:25" pos:end="1389:81"><name pos:start="1389:25" pos:end="1389:38"><name pos:start="1389:25" pos:end="1389:25">h</name><operator pos:start="1389:26" pos:end="1389:27">-&gt;</operator><name pos:start="1389:28" pos:end="1389:35">long_ref</name><index pos:start="1389:36" pos:end="1389:38">[<expr pos:start="1389:37" pos:end="1389:37"><name pos:start="1389:37" pos:end="1389:37">k</name></expr>]</index></name> <operator pos:start="1389:40" pos:end="1389:41">&amp;&amp;</operator> <name pos:start="1389:43" pos:end="1389:56"><name pos:start="1389:43" pos:end="1389:43">h</name><operator pos:start="1389:44" pos:end="1389:45">-&gt;</operator><name pos:start="1389:46" pos:end="1389:53">long_ref</name><index pos:start="1389:54" pos:end="1389:56">[<expr pos:start="1389:55" pos:end="1389:55"><name pos:start="1389:55" pos:end="1389:55">k</name></expr>]</index></name><operator pos:start="1389:57" pos:end="1389:58">-&gt;</operator><name pos:start="1389:59" pos:end="1389:66"><name pos:start="1389:59" pos:end="1389:59">f</name><operator pos:start="1389:60" pos:end="1389:60">.</operator><name pos:start="1389:61" pos:end="1389:63">buf</name><index pos:start="1389:64" pos:end="1389:66">[<expr pos:start="1389:65" pos:end="1389:65"><literal type="number" pos:start="1389:65" pos:end="1389:65">0</literal></expr>]</index></name><operator pos:start="1389:67" pos:end="1389:68">-&gt;</operator><name pos:start="1389:69" pos:end="1389:74">buffer</name> <operator pos:start="1389:76" pos:end="1389:77">==</operator> <name pos:start="1389:79" pos:end="1389:81">buf</name></expr>)</condition> <block pos:start="1389:84" pos:end="1395:21">{<block_content pos:start="1391:25" pos:end="1393:30">

                        <expr_stmt pos:start="1391:25" pos:end="1391:60"><expr pos:start="1391:25" pos:end="1391:59"><name pos:start="1391:25" pos:end="1391:34"><name pos:start="1391:25" pos:end="1391:31">id_list</name><index pos:start="1391:32" pos:end="1391:34">[<expr pos:start="1391:33" pos:end="1391:33"><name pos:start="1391:33" pos:end="1391:33">i</name></expr>]</index></name> <operator pos:start="1391:36" pos:end="1391:36">=</operator> <name pos:start="1391:38" pos:end="1391:55"><name pos:start="1391:38" pos:end="1391:38">h</name><operator pos:start="1391:39" pos:end="1391:40">-&gt;</operator><name pos:start="1391:41" pos:end="1391:55">short_ref_count</name></name> <operator pos:start="1391:57" pos:end="1391:57">+</operator> <name pos:start="1391:59" pos:end="1391:59">k</name></expr>;</expr_stmt>

                        <break pos:start="1393:25" pos:end="1393:30">break;</break>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="1403:9" pos:end="1405:24"><expr pos:start="1403:9" pos:end="1405:23"><name pos:start="1403:9" pos:end="1403:18"><name pos:start="1403:9" pos:end="1403:15">ref2frm</name><index pos:start="1403:16" pos:end="1403:18">[<expr pos:start="1403:17" pos:end="1403:17"><literal type="number" pos:start="1403:17" pos:end="1403:17">0</literal></expr>]</index></name> <operator pos:start="1403:20" pos:end="1403:20">=</operator>

        <name pos:start="1405:9" pos:end="1405:18"><name pos:start="1405:9" pos:end="1405:15">ref2frm</name><index pos:start="1405:16" pos:end="1405:18">[<expr pos:start="1405:17" pos:end="1405:17"><literal type="number" pos:start="1405:17" pos:end="1405:17">1</literal></expr>]</index></name> <operator pos:start="1405:20" pos:end="1405:20">=</operator> <operator pos:start="1405:22" pos:end="1405:22">-</operator><literal type="number" pos:start="1405:23" pos:end="1405:23">1</literal></expr>;</expr_stmt>

        <for pos:start="1407:9" pos:end="1409:80">for <control pos:start="1407:13" pos:end="1407:32">(<init pos:start="1407:14" pos:end="1407:19"><expr pos:start="1407:14" pos:end="1407:18"><name pos:start="1407:14" pos:end="1407:14">i</name> <operator pos:start="1407:16" pos:end="1407:16">=</operator> <literal type="number" pos:start="1407:18" pos:end="1407:18">0</literal></expr>;</init> <condition pos:start="1407:21" pos:end="1407:27"><expr pos:start="1407:21" pos:end="1407:26"><name pos:start="1407:21" pos:end="1407:21">i</name> <operator pos:start="1407:23" pos:end="1407:23">&lt;</operator> <literal type="number" pos:start="1407:25" pos:end="1407:26">16</literal></expr>;</condition> <incr pos:start="1407:29" pos:end="1407:31"><expr pos:start="1407:29" pos:end="1407:31"><name pos:start="1407:29" pos:end="1407:29">i</name><operator pos:start="1407:30" pos:end="1407:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1409:13" pos:end="1409:80"><block_content pos:start="1409:13" pos:end="1409:80">

            <expr_stmt pos:start="1409:13" pos:end="1409:80"><expr pos:start="1409:13" pos:end="1409:79"><name pos:start="1409:13" pos:end="1409:26"><name pos:start="1409:13" pos:end="1409:19">ref2frm</name><index pos:start="1409:20" pos:end="1409:26">[<expr pos:start="1409:21" pos:end="1409:25"><name pos:start="1409:21" pos:end="1409:21">i</name> <operator pos:start="1409:23" pos:end="1409:23">+</operator> <literal type="number" pos:start="1409:25" pos:end="1409:25">2</literal></expr>]</index></name> <operator pos:start="1409:28" pos:end="1409:28">=</operator> <literal type="number" pos:start="1409:30" pos:end="1409:30">4</literal> <operator pos:start="1409:32" pos:end="1409:32">*</operator> <name pos:start="1409:34" pos:end="1409:43"><name pos:start="1409:34" pos:end="1409:40">id_list</name><index pos:start="1409:41" pos:end="1409:43">[<expr pos:start="1409:42" pos:end="1409:42"><name pos:start="1409:42" pos:end="1409:42">i</name></expr>]</index></name> <operator pos:start="1409:45" pos:end="1409:45">+</operator> <operator pos:start="1409:47" pos:end="1409:47">(</operator><name pos:start="1409:48" pos:end="1409:64"><name pos:start="1409:48" pos:end="1409:48">h</name><operator pos:start="1409:49" pos:end="1409:50">-&gt;</operator><name pos:start="1409:51" pos:end="1409:58">ref_list</name><index pos:start="1409:59" pos:end="1409:61">[<expr pos:start="1409:60" pos:end="1409:60"><name pos:start="1409:60" pos:end="1409:60">j</name></expr>]</index><index pos:start="1409:62" pos:end="1409:64">[<expr pos:start="1409:63" pos:end="1409:63"><name pos:start="1409:63" pos:end="1409:63">i</name></expr>]</index></name><operator pos:start="1409:65" pos:end="1409:65">.</operator><name pos:start="1409:66" pos:end="1409:74">reference</name> <operator pos:start="1409:76" pos:end="1409:76">&amp;</operator> <literal type="number" pos:start="1409:78" pos:end="1409:78">3</literal><operator pos:start="1409:79" pos:end="1409:79">)</operator></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="1411:9" pos:end="1413:29"><expr pos:start="1411:9" pos:end="1413:28"><name pos:start="1411:9" pos:end="1411:23"><name pos:start="1411:9" pos:end="1411:15">ref2frm</name><index pos:start="1411:16" pos:end="1411:23">[<expr pos:start="1411:17" pos:end="1411:22"><literal type="number" pos:start="1411:17" pos:end="1411:18">18</literal> <operator pos:start="1411:20" pos:end="1411:20">+</operator> <literal type="number" pos:start="1411:22" pos:end="1411:22">0</literal></expr>]</index></name> <operator pos:start="1411:25" pos:end="1411:25">=</operator>

        <name pos:start="1413:9" pos:end="1413:23"><name pos:start="1413:9" pos:end="1413:15">ref2frm</name><index pos:start="1413:16" pos:end="1413:23">[<expr pos:start="1413:17" pos:end="1413:22"><literal type="number" pos:start="1413:17" pos:end="1413:20">18</literal> <operator pos:start="1413:20" pos:end="1413:20">+</operator> <literal type="number" pos:start="1413:22" pos:end="1413:22">1</literal></expr>]</index></name> <operator pos:start="1413:25" pos:end="1413:25">=</operator> <operator pos:start="1413:27" pos:end="1413:27">-</operator><literal type="number" pos:start="1413:28" pos:end="1413:28">1</literal></expr>;</expr_stmt>

        <for pos:start="1415:9" pos:end="1419:63">for <control pos:start="1415:13" pos:end="1415:33">(<init pos:start="1415:14" pos:end="1415:20"><expr pos:start="1415:14" pos:end="1415:19"><name pos:start="1415:14" pos:end="1415:14">i</name> <operator pos:start="1415:16" pos:end="1415:16">=</operator> <literal type="number" pos:start="1415:18" pos:end="1415:19">16</literal></expr>;</init> <condition pos:start="1415:22" pos:end="1415:28"><expr pos:start="1415:22" pos:end="1415:27"><name pos:start="1415:22" pos:end="1415:22">i</name> <operator pos:start="1415:24" pos:end="1415:24">&lt;</operator> <literal type="number" pos:start="1415:26" pos:end="1415:27">48</literal></expr>;</condition> <incr pos:start="1415:30" pos:end="1415:32"><expr pos:start="1415:30" pos:end="1415:32"><name pos:start="1415:30" pos:end="1415:30">i</name><operator pos:start="1415:31" pos:end="1415:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1417:13" pos:end="1419:63"><block_content pos:start="1417:13" pos:end="1419:63">

            <expr_stmt pos:start="1417:13" pos:end="1419:63"><expr pos:start="1417:13" pos:end="1419:62"><name pos:start="1417:13" pos:end="1417:26"><name pos:start="1417:13" pos:end="1417:19">ref2frm</name><index pos:start="1417:20" pos:end="1417:26">[<expr pos:start="1417:21" pos:end="1417:25"><name pos:start="1417:21" pos:end="1417:21">i</name> <operator pos:start="1417:23" pos:end="1417:23">+</operator> <literal type="number" pos:start="1417:25" pos:end="1417:25">4</literal></expr>]</index></name> <operator pos:start="1417:28" pos:end="1417:28">=</operator> <literal type="number" pos:start="1417:30" pos:end="1417:30">4</literal> <operator pos:start="1417:32" pos:end="1417:32">*</operator> <name pos:start="1417:34" pos:end="1417:55"><name pos:start="1417:34" pos:end="1417:40">id_list</name><index pos:start="1417:41" pos:end="1417:55">[<expr pos:start="1417:42" pos:end="1417:54"><operator pos:start="1417:42" pos:end="1417:42">(</operator><name pos:start="1417:43" pos:end="1417:43">i</name> <operator pos:start="1417:45" pos:end="1417:45">-</operator> <literal type="number" pos:start="1417:47" pos:end="1417:48">16</literal><operator pos:start="1417:49" pos:end="1417:49">)</operator> <operator pos:start="1417:51" pos:end="1417:52">&gt;&gt;</operator> <literal type="number" pos:start="1417:54" pos:end="1417:54">1</literal></expr>]</index></name> <operator pos:start="1417:57" pos:end="1417:57">+</operator>

                             <operator pos:start="1419:30" pos:end="1419:30">(</operator><name pos:start="1419:31" pos:end="1419:47"><name pos:start="1419:31" pos:end="1419:31">h</name><operator pos:start="1419:32" pos:end="1419:33">-&gt;</operator><name pos:start="1419:34" pos:end="1419:41">ref_list</name><index pos:start="1419:42" pos:end="1419:44">[<expr pos:start="1419:43" pos:end="1419:43"><name pos:start="1419:43" pos:end="1419:43">j</name></expr>]</index><index pos:start="1419:45" pos:end="1419:47">[<expr pos:start="1419:46" pos:end="1419:46"><name pos:start="1419:46" pos:end="1419:46">i</name></expr>]</index></name><operator pos:start="1419:48" pos:end="1419:48">.</operator><name pos:start="1419:49" pos:end="1419:57">reference</name> <operator pos:start="1419:59" pos:end="1419:59">&amp;</operator> <literal type="number" pos:start="1419:61" pos:end="1419:61">3</literal><operator pos:start="1419:62" pos:end="1419:62">)</operator></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="1425:5" pos:end="1425:27"><expr pos:start="1425:5" pos:end="1425:26"><name pos:start="1425:5" pos:end="1425:17"><name pos:start="1425:5" pos:end="1425:6">h0</name><operator pos:start="1425:7" pos:end="1425:8">-&gt;</operator><name pos:start="1425:9" pos:end="1425:17">au_pps_id</name></name> <operator pos:start="1425:19" pos:end="1425:19">=</operator> <name pos:start="1425:21" pos:end="1425:26">pps_id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1427:5" pos:end="1429:44"><expr pos:start="1427:5" pos:end="1429:43"><name pos:start="1427:5" pos:end="1427:14"><name pos:start="1427:5" pos:end="1427:5">h</name><operator pos:start="1427:6" pos:end="1427:7">-&gt;</operator><name pos:start="1427:8" pos:end="1427:10">sps</name><operator pos:start="1427:11" pos:end="1427:11">.</operator><name pos:start="1427:12" pos:end="1427:14">new</name></name> <operator pos:start="1427:16" pos:end="1427:16">=</operator>

    <name pos:start="1429:5" pos:end="1429:34"><name pos:start="1429:5" pos:end="1429:6">h0</name><operator pos:start="1429:7" pos:end="1429:8">-&gt;</operator><name pos:start="1429:9" pos:end="1429:19">sps_buffers</name><index pos:start="1429:20" pos:end="1429:34">[<expr pos:start="1429:21" pos:end="1429:33"><name pos:start="1429:21" pos:end="1429:33"><name pos:start="1429:21" pos:end="1429:21">h</name><operator pos:start="1429:22" pos:end="1429:23">-&gt;</operator><name pos:start="1429:24" pos:end="1429:26">pps</name><operator pos:start="1429:27" pos:end="1429:27">.</operator><name pos:start="1429:28" pos:end="1429:33">sps_id</name></name></expr>]</index></name><operator pos:start="1429:35" pos:end="1429:36">-&gt;</operator><name pos:start="1429:37" pos:end="1429:39">new</name> <operator pos:start="1429:41" pos:end="1429:41">=</operator> <literal type="number" pos:start="1429:43" pos:end="1429:43">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1431:5" pos:end="1431:38"><expr pos:start="1431:5" pos:end="1431:37"><name pos:start="1431:5" pos:end="1431:21"><name pos:start="1431:5" pos:end="1431:5">h</name><operator pos:start="1431:6" pos:end="1431:7">-&gt;</operator><name pos:start="1431:8" pos:end="1431:21">current_sps_id</name></name> <operator pos:start="1431:23" pos:end="1431:23">=</operator> <name pos:start="1431:25" pos:end="1431:37"><name pos:start="1431:25" pos:end="1431:25">h</name><operator pos:start="1431:26" pos:end="1431:27">-&gt;</operator><name pos:start="1431:28" pos:end="1431:30">pps</name><operator pos:start="1431:31" pos:end="1431:31">.</operator><name pos:start="1431:32" pos:end="1431:37">sps_id</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="1435:5" pos:end="1473:5"><if pos:start="1435:5" pos:end="1473:5">if <condition pos:start="1435:8" pos:end="1435:45">(<expr pos:start="1435:9" pos:end="1435:44"><name pos:start="1435:9" pos:end="1435:23"><name pos:start="1435:9" pos:end="1435:9">h</name><operator pos:start="1435:10" pos:end="1435:11">-&gt;</operator><name pos:start="1435:12" pos:end="1435:16">avctx</name><operator pos:start="1435:17" pos:end="1435:18">-&gt;</operator><name pos:start="1435:19" pos:end="1435:23">debug</name></name> <operator pos:start="1435:25" pos:end="1435:25">&amp;</operator> <name pos:start="1435:27" pos:end="1435:44">FF_DEBUG_PICT_INFO</name></expr>)</condition> <block pos:start="1435:47" pos:end="1473:5">{<block_content pos:start="1437:9" pos:end="1471:104">

        <expr_stmt pos:start="1437:9" pos:end="1471:104"><expr pos:start="1437:9" pos:end="1471:103"><call pos:start="1437:9" pos:end="1471:103"><name pos:start="1437:9" pos:end="1437:14">av_log</name><argument_list pos:start="1437:15" pos:end="1471:103">(<argument pos:start="1437:16" pos:end="1437:23"><expr pos:start="1437:16" pos:end="1437:23"><name pos:start="1437:16" pos:end="1437:23"><name pos:start="1437:16" pos:end="1437:16">h</name><operator pos:start="1437:17" pos:end="1437:18">-&gt;</operator><name pos:start="1437:19" pos:end="1437:23">avctx</name></name></expr></argument>, <argument pos:start="1437:26" pos:end="1437:37"><expr pos:start="1437:26" pos:end="1437:37"><name pos:start="1437:26" pos:end="1437:37">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="1439:16" pos:end="1439:114"><expr pos:start="1439:16" pos:end="1439:114"><literal type="string" pos:start="1439:16" pos:end="1439:114">"slice:%d %s mb:%d %c%s%s pps:%u frame:%d poc:%d/%d ref:%d/%d qp:%d loop:%d:%d:%d weight:%d%s %s\n"</literal></expr></argument>,

               <argument pos:start="1441:16" pos:end="1441:27"><expr pos:start="1441:16" pos:end="1441:27"><name pos:start="1441:16" pos:end="1441:27"><name pos:start="1441:16" pos:end="1441:16">h</name><operator pos:start="1441:17" pos:end="1441:18">-&gt;</operator><name pos:start="1441:19" pos:end="1441:27">slice_num</name></name></expr></argument>,

               <argument pos:start="1443:16" pos:end="1443:110"><expr pos:start="1443:16" pos:end="1443:110"><operator pos:start="1443:16" pos:end="1443:16">(</operator><ternary pos:start="1443:17" pos:end="1443:109"><condition pos:start="1443:17" pos:end="1443:52"><expr pos:start="1443:17" pos:end="1443:50"><name pos:start="1443:17" pos:end="1443:36"><name pos:start="1443:17" pos:end="1443:17">h</name><operator pos:start="1443:18" pos:end="1443:19">-&gt;</operator><name pos:start="1443:20" pos:end="1443:36">picture_structure</name></name> <operator pos:start="1443:38" pos:end="1443:39">==</operator> <name pos:start="1443:41" pos:end="1443:50">PICT_FRAME</name></expr> ?</condition><then pos:start="1443:54" pos:end="1443:56"> <expr pos:start="1443:54" pos:end="1443:56"><literal type="string" pos:start="1443:54" pos:end="1443:56">"F"</literal></expr> </then><else pos:start="1443:58" pos:end="1443:109">: <expr pos:start="1443:60" pos:end="1443:109"><ternary pos:start="1443:60" pos:end="1443:109"><condition pos:start="1443:60" pos:end="1443:99"><expr pos:start="1443:60" pos:end="1443:97"><name pos:start="1443:60" pos:end="1443:79"><name pos:start="1443:60" pos:end="1443:60">h</name><operator pos:start="1443:61" pos:end="1443:62">-&gt;</operator><name pos:start="1443:63" pos:end="1443:79">picture_structure</name></name> <operator pos:start="1443:81" pos:end="1443:82">==</operator> <name pos:start="1443:84" pos:end="1443:97">PICT_TOP_FIELD</name></expr> ?</condition><then pos:start="1443:101" pos:end="1443:103"> <expr pos:start="1443:101" pos:end="1443:103"><literal type="string" pos:start="1443:101" pos:end="1443:103">"T"</literal></expr> </then><else pos:start="1443:105" pos:end="1443:109">: <expr pos:start="1443:107" pos:end="1443:109"><literal type="string" pos:start="1443:107" pos:end="1443:109">"B"</literal></expr></else></ternary></expr></else></ternary><operator pos:start="1443:110" pos:end="1443:110">)</operator></expr></argument>,

               <argument pos:start="1445:16" pos:end="1445:32"><expr pos:start="1445:16" pos:end="1445:32"><name pos:start="1445:16" pos:end="1445:32">first_mb_in_slice</name></expr></argument>,

               <argument pos:start="1447:16" pos:end="1447:54"><expr pos:start="1447:16" pos:end="1447:54"><call pos:start="1447:16" pos:end="1447:54"><name pos:start="1447:16" pos:end="1447:39">av_get_picture_type_char</name><argument_list pos:start="1447:40" pos:end="1447:54">(<argument pos:start="1447:41" pos:end="1447:53"><expr pos:start="1447:41" pos:end="1447:53"><name pos:start="1447:41" pos:end="1447:53"><name pos:start="1447:41" pos:end="1447:41">h</name><operator pos:start="1447:42" pos:end="1447:43">-&gt;</operator><name pos:start="1447:44" pos:end="1447:53">slice_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="1449:16" pos:end="1449:48"><expr pos:start="1449:16" pos:end="1449:48"><ternary pos:start="1449:16" pos:end="1449:48"><condition pos:start="1449:16" pos:end="1449:36"><expr pos:start="1449:16" pos:end="1449:34"><name pos:start="1449:16" pos:end="1449:34"><name pos:start="1449:16" pos:end="1449:16">h</name><operator pos:start="1449:17" pos:end="1449:18">-&gt;</operator><name pos:start="1449:19" pos:end="1449:34">slice_type_fixed</name></name></expr> ?</condition><then pos:start="1449:38" pos:end="1449:43"> <expr pos:start="1449:38" pos:end="1449:43"><literal type="string" pos:start="1449:38" pos:end="1449:43">" fix"</literal></expr> </then><else pos:start="1449:45" pos:end="1449:48">: <expr pos:start="1449:47" pos:end="1449:48"><literal type="string" pos:start="1449:47" pos:end="1449:48">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1451:16" pos:end="1451:62"><expr pos:start="1451:16" pos:end="1451:62"><ternary pos:start="1451:16" pos:end="1451:62"><condition pos:start="1451:16" pos:end="1451:50"><expr pos:start="1451:16" pos:end="1451:48"><name pos:start="1451:16" pos:end="1451:31"><name pos:start="1451:16" pos:end="1451:16">h</name><operator pos:start="1451:17" pos:end="1451:18">-&gt;</operator><name pos:start="1451:19" pos:end="1451:31">nal_unit_type</name></name> <operator pos:start="1451:33" pos:end="1451:34">==</operator> <name pos:start="1451:36" pos:end="1451:48">NAL_IDR_SLICE</name></expr> ?</condition><then pos:start="1451:52" pos:end="1451:57"> <expr pos:start="1451:52" pos:end="1451:57"><literal type="string" pos:start="1451:52" pos:end="1451:57">" IDR"</literal></expr> </then><else pos:start="1451:59" pos:end="1451:62">: <expr pos:start="1451:61" pos:end="1451:62"><literal type="string" pos:start="1451:61" pos:end="1451:62">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1453:16" pos:end="1453:21"><expr pos:start="1453:16" pos:end="1453:21"><name pos:start="1453:16" pos:end="1453:21">pps_id</name></expr></argument>, <argument pos:start="1453:24" pos:end="1453:35"><expr pos:start="1453:24" pos:end="1453:35"><name pos:start="1453:24" pos:end="1453:35"><name pos:start="1453:24" pos:end="1453:24">h</name><operator pos:start="1453:25" pos:end="1453:26">-&gt;</operator><name pos:start="1453:27" pos:end="1453:35">frame_num</name></name></expr></argument>,

               <argument pos:start="1455:16" pos:end="1455:43"><expr pos:start="1455:16" pos:end="1455:43"><name pos:start="1455:16" pos:end="1455:43"><name pos:start="1455:16" pos:end="1455:16">h</name><operator pos:start="1455:17" pos:end="1455:18">-&gt;</operator><name pos:start="1455:19" pos:end="1455:29">cur_pic_ptr</name><operator pos:start="1455:30" pos:end="1455:31">-&gt;</operator><name pos:start="1455:32" pos:end="1455:40">field_poc</name><index pos:start="1455:41" pos:end="1455:43">[<expr pos:start="1455:42" pos:end="1455:42"><literal type="number" pos:start="1455:42" pos:end="1455:42">0</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1457:16" pos:end="1457:43"><expr pos:start="1457:16" pos:end="1457:43"><name pos:start="1457:16" pos:end="1457:43"><name pos:start="1457:16" pos:end="1457:16">h</name><operator pos:start="1457:17" pos:end="1457:18">-&gt;</operator><name pos:start="1457:19" pos:end="1457:29">cur_pic_ptr</name><operator pos:start="1457:30" pos:end="1457:31">-&gt;</operator><name pos:start="1457:32" pos:end="1457:40">field_poc</name><index pos:start="1457:41" pos:end="1457:43">[<expr pos:start="1457:42" pos:end="1457:42"><literal type="number" pos:start="1457:42" pos:end="1457:42">1</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1459:16" pos:end="1459:30"><expr pos:start="1459:16" pos:end="1459:30"><name pos:start="1459:16" pos:end="1459:30"><name pos:start="1459:16" pos:end="1459:16">h</name><operator pos:start="1459:17" pos:end="1459:18">-&gt;</operator><name pos:start="1459:19" pos:end="1459:27">ref_count</name><index pos:start="1459:28" pos:end="1459:30">[<expr pos:start="1459:29" pos:end="1459:29"><literal type="number" pos:start="1459:29" pos:end="1459:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1459:33" pos:end="1459:47"><expr pos:start="1459:33" pos:end="1459:47"><name pos:start="1459:33" pos:end="1459:47"><name pos:start="1459:33" pos:end="1459:33">h</name><operator pos:start="1459:34" pos:end="1459:35">-&gt;</operator><name pos:start="1459:36" pos:end="1459:44">ref_count</name><index pos:start="1459:45" pos:end="1459:47">[<expr pos:start="1459:46" pos:end="1459:46"><literal type="number" pos:start="1459:46" pos:end="1459:46">1</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1461:16" pos:end="1461:24"><expr pos:start="1461:16" pos:end="1461:24"><name pos:start="1461:16" pos:end="1461:24"><name pos:start="1461:16" pos:end="1461:16">h</name><operator pos:start="1461:17" pos:end="1461:18">-&gt;</operator><name pos:start="1461:19" pos:end="1461:24">qscale</name></name></expr></argument>,

               <argument pos:start="1463:16" pos:end="1463:35"><expr pos:start="1463:16" pos:end="1463:35"><name pos:start="1463:16" pos:end="1463:35"><name pos:start="1463:16" pos:end="1463:16">h</name><operator pos:start="1463:17" pos:end="1463:18">-&gt;</operator><name pos:start="1463:19" pos:end="1463:35">deblocking_filter</name></name></expr></argument>,

               <argument pos:start="1465:16" pos:end="1465:39"><expr pos:start="1465:16" pos:end="1465:39"><name pos:start="1465:16" pos:end="1465:39"><name pos:start="1465:16" pos:end="1465:16">h</name><operator pos:start="1465:17" pos:end="1465:18">-&gt;</operator><name pos:start="1465:19" pos:end="1465:39">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1465:42" pos:end="1465:61"><expr pos:start="1465:42" pos:end="1465:61"><name pos:start="1465:42" pos:end="1465:61"><name pos:start="1465:42" pos:end="1465:42">h</name><operator pos:start="1465:43" pos:end="1465:44">-&gt;</operator><name pos:start="1465:45" pos:end="1465:61">slice_beta_offset</name></name></expr></argument>,

               <argument pos:start="1467:16" pos:end="1467:28"><expr pos:start="1467:16" pos:end="1467:28"><name pos:start="1467:16" pos:end="1467:28"><name pos:start="1467:16" pos:end="1467:16">h</name><operator pos:start="1467:17" pos:end="1467:18">-&gt;</operator><name pos:start="1467:19" pos:end="1467:28">use_weight</name></name></expr></argument>,

               <argument pos:start="1469:16" pos:end="1469:68"><expr pos:start="1469:16" pos:end="1469:68"><ternary pos:start="1469:16" pos:end="1469:68"><condition pos:start="1469:16" pos:end="1469:59"><expr pos:start="1469:16" pos:end="1469:57"><name pos:start="1469:16" pos:end="1469:28"><name pos:start="1469:16" pos:end="1469:16">h</name><operator pos:start="1469:17" pos:end="1469:18">-&gt;</operator><name pos:start="1469:19" pos:end="1469:28">use_weight</name></name> <operator pos:start="1469:30" pos:end="1469:31">==</operator> <literal type="number" pos:start="1469:33" pos:end="1469:33">1</literal> <operator pos:start="1469:35" pos:end="1469:36">&amp;&amp;</operator> <name pos:start="1469:38" pos:end="1469:57"><name pos:start="1469:38" pos:end="1469:38">h</name><operator pos:start="1469:39" pos:end="1469:40">-&gt;</operator><name pos:start="1469:41" pos:end="1469:57">use_weight_chroma</name></name></expr> ?</condition><then pos:start="1469:61" pos:end="1469:63"> <expr pos:start="1469:61" pos:end="1469:63"><literal type="string" pos:start="1469:61" pos:end="1469:63">"c"</literal></expr> </then><else pos:start="1469:65" pos:end="1469:68">: <expr pos:start="1469:67" pos:end="1469:68"><literal type="string" pos:start="1469:67" pos:end="1469:68">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1471:16" pos:end="1471:102"><expr pos:start="1471:16" pos:end="1471:102"><ternary pos:start="1471:16" pos:end="1471:102"><condition pos:start="1471:16" pos:end="1471:51"><expr pos:start="1471:16" pos:end="1471:49"><name pos:start="1471:16" pos:end="1471:28"><name pos:start="1471:16" pos:end="1471:16">h</name><operator pos:start="1471:17" pos:end="1471:18">-&gt;</operator><name pos:start="1471:19" pos:end="1471:28">slice_type</name></name> <operator pos:start="1471:30" pos:end="1471:31">==</operator> <name pos:start="1471:33" pos:end="1471:49">AV_PICTURE_TYPE_B</name></expr> ?</condition><then pos:start="1471:53" pos:end="1471:97"> <expr pos:start="1471:53" pos:end="1471:97"><operator pos:start="1471:53" pos:end="1471:53">(</operator><ternary pos:start="1471:54" pos:end="1471:96"><condition pos:start="1471:54" pos:end="1471:80"><expr pos:start="1471:54" pos:end="1471:78"><name pos:start="1471:54" pos:end="1471:78"><name pos:start="1471:54" pos:end="1471:54">h</name><operator pos:start="1471:55" pos:end="1471:56">-&gt;</operator><name pos:start="1471:57" pos:end="1471:78">direct_spatial_mv_pred</name></name></expr> ?</condition><then pos:start="1471:82" pos:end="1471:87"> <expr pos:start="1471:82" pos:end="1471:87"><literal type="string" pos:start="1471:82" pos:end="1471:87">"SPAT"</literal></expr> </then><else pos:start="1471:89" pos:end="1471:96">: <expr pos:start="1471:91" pos:end="1471:96"><literal type="string" pos:start="1471:91" pos:end="1471:96">"TEMP"</literal></expr></else></ternary><operator pos:start="1471:97" pos:end="1471:97">)</operator></expr> </then><else pos:start="1471:99" pos:end="1471:102">: <expr pos:start="1471:101" pos:end="1471:102"><literal type="string" pos:start="1471:101" pos:end="1471:102">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="1477:5" pos:end="1477:13">return <expr pos:start="1477:12" pos:end="1477:12"><literal type="number" pos:start="1477:12" pos:end="1477:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
