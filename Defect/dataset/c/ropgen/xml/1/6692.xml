<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6692.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">address_space_unmap</name><parameter_list pos:start="1:25" pos:end="3:57">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:37">AddressSpace</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">as</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:47">void</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:55">buffer</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:67"><decl pos:start="1:58" pos:end="1:67"><type pos:start="1:58" pos:end="1:67"><name pos:start="1:58" pos:end="1:63">hwaddr</name></type> <name pos:start="1:65" pos:end="1:67">len</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:37"><decl pos:start="3:26" pos:end="3:37"><type pos:start="3:26" pos:end="3:37"><name pos:start="3:26" pos:end="3:28">int</name></type> <name pos:start="3:30" pos:end="3:37">is_write</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:56"><decl pos:start="3:40" pos:end="3:56"><type pos:start="3:40" pos:end="3:56"><name pos:start="3:40" pos:end="3:45">hwaddr</name></type> <name pos:start="3:47" pos:end="3:56">access_len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:29">

    <if_stmt pos:start="7:5" pos:end="41:5"><if pos:start="7:5" pos:end="41:5">if <condition pos:start="7:8" pos:end="7:32">(<expr pos:start="7:9" pos:end="7:31"><name pos:start="7:9" pos:end="7:14">buffer</name> <operator pos:start="7:16" pos:end="7:17">!=</operator> <name pos:start="7:19" pos:end="7:31"><name pos:start="7:19" pos:end="7:24">bounce</name><operator pos:start="7:25" pos:end="7:25">.</operator><name pos:start="7:26" pos:end="7:31">buffer</name></name></expr>)</condition> <block pos:start="7:34" pos:end="41:5">{<block_content pos:start="9:9" pos:end="39:15">

        <if_stmt pos:start="9:9" pos:end="31:9"><if pos:start="9:9" pos:end="31:9">if <condition pos:start="9:12" pos:end="9:21">(<expr pos:start="9:13" pos:end="9:20"><name pos:start="9:13" pos:end="9:20">is_write</name></expr>)</condition> <block pos:start="9:23" pos:end="31:9">{<block_content pos:start="11:13" pos:end="29:13">

            <decl_stmt pos:start="11:13" pos:end="11:70"><decl pos:start="11:13" pos:end="11:69"><type pos:start="11:13" pos:end="11:22"><name pos:start="11:13" pos:end="11:22">ram_addr_t</name></type> <name pos:start="11:24" pos:end="11:28">addr1</name> <init pos:start="11:30" pos:end="11:69">= <expr pos:start="11:32" pos:end="11:69"><call pos:start="11:32" pos:end="11:69"><name pos:start="11:32" pos:end="11:61">qemu_ram_addr_from_host_nofail</name><argument_list pos:start="11:62" pos:end="11:69">(<argument pos:start="11:63" pos:end="11:68"><expr pos:start="11:63" pos:end="11:68"><name pos:start="11:63" pos:end="11:68">buffer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <while pos:start="13:13" pos:end="29:13">while <condition pos:start="13:19" pos:end="13:30">(<expr pos:start="13:20" pos:end="13:29"><name pos:start="13:20" pos:end="13:29">access_len</name></expr>)</condition> <block pos:start="13:32" pos:end="29:13">{<block_content pos:start="15:17" pos:end="27:32">

                <decl_stmt pos:start="15:17" pos:end="15:27"><decl pos:start="15:17" pos:end="15:26"><type pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:24">unsigned</name></type> <name pos:start="15:26" pos:end="15:26">l</name></decl>;</decl_stmt>

                <expr_stmt pos:start="17:17" pos:end="17:37"><expr pos:start="17:17" pos:end="17:36"><name pos:start="17:17" pos:end="17:17">l</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:36">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

                <if_stmt pos:start="19:17" pos:end="21:35"><if pos:start="19:17" pos:end="21:35">if <condition pos:start="19:20" pos:end="19:35">(<expr pos:start="19:21" pos:end="19:34"><name pos:start="19:21" pos:end="19:21">l</name> <operator pos:start="19:23" pos:end="19:23">&gt;</operator> <name pos:start="19:25" pos:end="19:34">access_len</name></expr>)</condition><block type="pseudo" pos:start="21:21" pos:end="21:35"><block_content pos:start="21:21" pos:end="21:35">

                    <expr_stmt pos:start="21:21" pos:end="21:35"><expr pos:start="21:21" pos:end="21:34"><name pos:start="21:21" pos:end="21:21">l</name> <operator pos:start="21:23" pos:end="21:23">=</operator> <name pos:start="21:25" pos:end="21:34">access_len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="23:17" pos:end="23:51"><expr pos:start="23:17" pos:end="23:50"><call pos:start="23:17" pos:end="23:50"><name pos:start="23:17" pos:end="23:40">invalidate_and_set_dirty</name><argument_list pos:start="23:41" pos:end="23:50">(<argument pos:start="23:42" pos:end="23:46"><expr pos:start="23:42" pos:end="23:46"><name pos:start="23:42" pos:end="23:46">addr1</name></expr></argument>, <argument pos:start="23:49" pos:end="23:49"><expr pos:start="23:49" pos:end="23:49"><name pos:start="23:49" pos:end="23:49">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="25:17" pos:end="25:27"><expr pos:start="25:17" pos:end="25:26"><name pos:start="25:17" pos:end="25:21">addr1</name> <operator pos:start="25:23" pos:end="25:24">+=</operator> <name pos:start="25:26" pos:end="25:26">l</name></expr>;</expr_stmt>

                <expr_stmt pos:start="27:17" pos:end="27:32"><expr pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:26">access_len</name> <operator pos:start="27:28" pos:end="27:29">-=</operator> <name pos:start="27:31" pos:end="27:31">l</name></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:26">(<expr pos:start="33:13" pos:end="33:25"><call pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:23">xen_enabled</name><argument_list pos:start="33:24" pos:end="33:25">()</argument_list></call></expr>)</condition> <block pos:start="33:28" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:51">

            <expr_stmt pos:start="35:13" pos:end="35:51"><expr pos:start="35:13" pos:end="35:50"><call pos:start="35:13" pos:end="35:50"><name pos:start="35:13" pos:end="35:42">xen_invalidate_map_cache_entry</name><argument_list pos:start="35:43" pos:end="35:50">(<argument pos:start="35:44" pos:end="35:49"><expr pos:start="35:44" pos:end="35:49"><name pos:start="35:44" pos:end="35:49">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:17">(<expr pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:16">is_write</name></expr>)</condition> <block pos:start="43:19" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:72">

        <expr_stmt pos:start="45:9" pos:end="45:72"><expr pos:start="45:9" pos:end="45:71"><call pos:start="45:9" pos:end="45:71"><name pos:start="45:9" pos:end="45:27">address_space_write</name><argument_list pos:start="45:28" pos:end="45:71">(<argument pos:start="45:29" pos:end="45:30"><expr pos:start="45:29" pos:end="45:30"><name pos:start="45:29" pos:end="45:30">as</name></expr></argument>, <argument pos:start="45:33" pos:end="45:43"><expr pos:start="45:33" pos:end="45:43"><name pos:start="45:33" pos:end="45:43"><name pos:start="45:33" pos:end="45:38">bounce</name><operator pos:start="45:39" pos:end="45:39">.</operator><name pos:start="45:40" pos:end="45:43">addr</name></name></expr></argument>, <argument pos:start="45:46" pos:end="45:58"><expr pos:start="45:46" pos:end="45:58"><name pos:start="45:46" pos:end="45:58"><name pos:start="45:46" pos:end="45:51">bounce</name><operator pos:start="45:52" pos:end="45:52">.</operator><name pos:start="45:53" pos:end="45:58">buffer</name></name></expr></argument>, <argument pos:start="45:61" pos:end="45:70"><expr pos:start="45:61" pos:end="45:70"><name pos:start="45:61" pos:end="45:70">access_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:30"><expr pos:start="49:5" pos:end="49:29"><call pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:14">qemu_vfree</name><argument_list pos:start="49:15" pos:end="49:29">(<argument pos:start="49:16" pos:end="49:28"><expr pos:start="49:16" pos:end="49:28"><name pos:start="49:16" pos:end="49:28"><name pos:start="49:16" pos:end="49:21">bounce</name><operator pos:start="49:22" pos:end="49:22">.</operator><name pos:start="49:23" pos:end="49:28">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:25"><expr pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:10">bounce</name><operator pos:start="51:11" pos:end="51:11">.</operator><name pos:start="51:12" pos:end="51:17">buffer</name></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:24">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><call pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:26">cpu_notify_map_clients</name><argument_list pos:start="53:27" pos:end="53:28">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
