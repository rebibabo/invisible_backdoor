<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11479.c" pos:tabs="8"><function pos:start="1:1" pos:end="383:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">MPV_common_init</name><parameter_list pos:start="1:20" pos:end="1:38">(<parameter pos:start="1:21" pos:end="1:37"><decl pos:start="1:21" pos:end="1:37"><type pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:34">MpegEncContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="383:1">{<block_content pos:start="5:5" pos:end="381:14">

    <decl_stmt pos:start="5:5" pos:end="5:80"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">y_size</name></decl>, <decl pos:start="5:17" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:22">c_size</name></decl>, <decl pos:start="5:25" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:25" pos:end="5:31">yc_size</name></decl>, <decl pos:start="5:34" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:34" pos:end="5:34">i</name></decl>, <decl pos:start="5:37" pos:end="5:49"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:37" pos:end="5:49">mb_array_size</name></decl>, <decl pos:start="5:52" pos:end="5:64"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:52" pos:end="5:64">mv_table_size</name></decl>, <decl pos:start="5:67" pos:end="5:67"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:67" pos:end="5:67">x</name></decl>, <decl pos:start="5:70" pos:end="5:70"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:70" pos:end="5:70">y</name></decl>, <decl pos:start="5:73" pos:end="5:79"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:73" pos:end="5:79">threads</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:41"><expr pos:start="9:5" pos:end="9:40"><name pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:16">mb_height</name></name> <operator pos:start="9:18" pos:end="9:18">=</operator> <operator pos:start="9:20" pos:end="9:20">(</operator><name pos:start="9:21" pos:end="9:29"><name pos:start="9:21" pos:end="9:21">s</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:29">height</name></name> <operator pos:start="9:31" pos:end="9:31">+</operator> <literal type="number" pos:start="9:33" pos:end="9:34">15</literal><operator pos:start="9:35" pos:end="9:35">)</operator> <operator pos:start="9:37" pos:end="9:37">/</operator> <literal type="number" pos:start="9:39" pos:end="9:40">16</literal></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if<condition pos:start="13:7" pos:end="13:103">(<expr pos:start="13:8" pos:end="13:102"><name pos:start="13:8" pos:end="13:29"><name pos:start="13:8" pos:end="13:8">s</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:15">avctx</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:29">thread_count</name></name> <operator pos:start="13:31" pos:end="13:31">&gt;</operator> <name pos:start="13:33" pos:end="13:43">MAX_THREADS</name> <operator pos:start="13:45" pos:end="13:46">||</operator> <operator pos:start="13:48" pos:end="13:48">(</operator><name pos:start="13:49" pos:end="13:70"><name pos:start="13:49" pos:end="13:49">s</name><operator pos:start="13:50" pos:end="13:51">-&gt;</operator><name pos:start="13:52" pos:end="13:56">avctx</name><operator pos:start="13:57" pos:end="13:58">-&gt;</operator><name pos:start="13:59" pos:end="13:70">thread_count</name></name> <operator pos:start="13:72" pos:end="13:72">&gt;</operator> <name pos:start="13:74" pos:end="13:85"><name pos:start="13:74" pos:end="13:74">s</name><operator pos:start="13:75" pos:end="13:76">-&gt;</operator><name pos:start="13:77" pos:end="13:85">mb_height</name></name> <operator pos:start="13:87" pos:end="13:88">&amp;&amp;</operator> <name pos:start="13:90" pos:end="13:101"><name pos:start="13:90" pos:end="13:90">s</name><operator pos:start="13:91" pos:end="13:92">-&gt;</operator><name pos:start="13:93" pos:end="13:101">mb_height</name></name><operator pos:start="13:102" pos:end="13:102">)</operator></expr>)</condition><block pos:start="13:104" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:18">

        <expr_stmt pos:start="15:9" pos:end="15:61"><expr pos:start="15:9" pos:end="15:60"><call pos:start="15:9" pos:end="15:60"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:60">(<argument pos:start="15:16" pos:end="15:23"><expr pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:16">s</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:23">avctx</name></name></expr></argument>, <argument pos:start="15:26" pos:end="15:37"><expr pos:start="15:26" pos:end="15:37"><name pos:start="15:26" pos:end="15:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:40" pos:end="15:59"><expr pos:start="15:40" pos:end="15:59"><literal type="string" pos:start="15:40" pos:end="15:59">"too many threads\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if<condition pos:start="23:7" pos:end="23:90">(<expr pos:start="23:8" pos:end="23:89"><operator pos:start="23:8" pos:end="23:8">(</operator><name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:16">width</name></name> <operator pos:start="23:18" pos:end="23:19">||</operator> <name pos:start="23:21" pos:end="23:29"><name pos:start="23:21" pos:end="23:21">s</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:29">height</name></name><operator pos:start="23:30" pos:end="23:30">)</operator> <operator pos:start="23:32" pos:end="23:33">&amp;&amp;</operator> <call pos:start="23:35" pos:end="23:89"><name pos:start="23:35" pos:end="23:58">avcodec_check_dimensions</name><argument_list pos:start="23:59" pos:end="23:89">(<argument pos:start="23:60" pos:end="23:67"><expr pos:start="23:60" pos:end="23:67"><name pos:start="23:60" pos:end="23:67"><name pos:start="23:60" pos:end="23:60">s</name><operator pos:start="23:61" pos:end="23:62">-&gt;</operator><name pos:start="23:63" pos:end="23:67">avctx</name></name></expr></argument>, <argument pos:start="23:70" pos:end="23:77"><expr pos:start="23:70" pos:end="23:77"><name pos:start="23:70" pos:end="23:77"><name pos:start="23:70" pos:end="23:70">s</name><operator pos:start="23:71" pos:end="23:72">-&gt;</operator><name pos:start="23:73" pos:end="23:77">width</name></name></expr></argument>, <argument pos:start="23:80" pos:end="23:88"><expr pos:start="23:80" pos:end="23:88"><name pos:start="23:80" pos:end="23:88"><name pos:start="23:80" pos:end="23:80">s</name><operator pos:start="23:81" pos:end="23:82">-&gt;</operator><name pos:start="23:83" pos:end="23:88">height</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><call pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:16">dsputil_init</name><argument_list pos:start="29:17" pos:end="29:35">(<argument pos:start="29:18" pos:end="29:24"><expr pos:start="29:18" pos:end="29:24"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:24"><name pos:start="29:19" pos:end="29:19">s</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:24">dsp</name></name></expr></argument>, <argument pos:start="29:27" pos:end="29:34"><expr pos:start="29:27" pos:end="29:34"><name pos:start="29:27" pos:end="29:34"><name pos:start="29:27" pos:end="29:27">s</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:34">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><call pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:22">ff_dct_common_init</name><argument_list pos:start="31:23" pos:end="31:25">(<argument pos:start="31:24" pos:end="31:24"><expr pos:start="31:24" pos:end="31:24"><name pos:start="31:24" pos:end="31:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:12">flags</name></name><operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:29"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:22">avctx</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:29">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:32"><expr pos:start="37:5" pos:end="37:31"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:13">flags2</name></name><operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:31"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">avctx</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:31">flags2</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:41"><expr pos:start="41:5" pos:end="41:40"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:15">mb_width</name></name>  <operator pos:start="41:18" pos:end="41:18">=</operator> <operator pos:start="41:20" pos:end="41:20">(</operator><name pos:start="41:21" pos:end="41:28"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:28">width</name></name>  <operator pos:start="41:31" pos:end="41:31">+</operator> <literal type="number" pos:start="41:33" pos:end="41:34">15</literal><operator pos:start="41:35" pos:end="41:35">)</operator> <operator pos:start="41:37" pos:end="41:37">/</operator> <literal type="number" pos:start="41:39" pos:end="41:40">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:35"><expr pos:start="43:5" pos:end="43:34"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:16">mb_stride</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:30"><name pos:start="43:20" pos:end="43:20">s</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:30">mb_width</name></name> <operator pos:start="43:32" pos:end="43:32">+</operator> <literal type="number" pos:start="43:34" pos:end="43:34">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:16">b8_stride</name></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:30"><name pos:start="45:20" pos:end="45:20">s</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:30">mb_width</name></name><operator pos:start="45:31" pos:end="45:31">*</operator><literal type="number" pos:start="45:32" pos:end="45:34">2</literal> <operator pos:start="45:34" pos:end="45:34">+</operator> <literal type="number" pos:start="45:36" pos:end="45:36">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:37"><expr pos:start="47:5" pos:end="47:36"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:16">b4_stride</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:30"><name pos:start="47:20" pos:end="47:20">s</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:30">mb_width</name></name><operator pos:start="47:31" pos:end="47:31">*</operator><literal type="number" pos:start="47:32" pos:end="47:34">4</literal> <operator pos:start="47:34" pos:end="47:34">+</operator> <literal type="number" pos:start="47:36" pos:end="47:36">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:47"><expr pos:start="49:5" pos:end="49:46"><name pos:start="49:5" pos:end="49:17">mb_array_size</name><operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:31"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:31">mb_height</name></name> <operator pos:start="49:33" pos:end="49:33">*</operator> <name pos:start="49:35" pos:end="49:46"><name pos:start="49:35" pos:end="49:35">s</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:46">mb_stride</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:55"><expr pos:start="51:5" pos:end="51:54"><name pos:start="51:5" pos:end="51:17">mv_table_size</name><operator pos:start="51:18" pos:end="51:18">=</operator> <operator pos:start="51:20" pos:end="51:20">(</operator><name pos:start="51:21" pos:end="51:32"><name pos:start="51:21" pos:end="51:21">s</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:32">mb_height</name></name><operator pos:start="51:33" pos:end="51:33">+</operator><literal type="number" pos:start="51:34" pos:end="51:34">2</literal><operator pos:start="51:35" pos:end="51:35">)</operator> <operator pos:start="51:37" pos:end="51:37">*</operator> <name pos:start="51:39" pos:end="51:50"><name pos:start="51:39" pos:end="51:39">s</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:50">mb_stride</name></name> <operator pos:start="51:52" pos:end="51:52">+</operator> <literal type="number" pos:start="51:54" pos:end="51:54">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:27">/* set chroma shifts */</comment>

    <expr_stmt pos:start="57:5" pos:end="59:75"><expr pos:start="57:5" pos:end="59:74"><call pos:start="57:5" pos:end="59:74"><name pos:start="57:5" pos:end="57:33">avcodec_get_chroma_sub_sample</name><argument_list pos:start="57:34" pos:end="59:74">(<argument pos:start="57:35" pos:end="57:51"><expr pos:start="57:35" pos:end="57:51"><name pos:start="57:35" pos:end="57:51"><name pos:start="57:35" pos:end="57:35">s</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:42">avctx</name><operator pos:start="57:43" pos:end="57:44">-&gt;</operator><name pos:start="57:45" pos:end="57:51">pix_fmt</name></name></expr></argument>,<argument pos:start="57:53" pos:end="57:72"><expr pos:start="57:53" pos:end="57:72"><operator pos:start="57:53" pos:end="57:53">&amp;</operator><operator pos:start="57:54" pos:end="57:54">(</operator><name pos:start="57:55" pos:end="57:71"><name pos:start="57:55" pos:end="57:55">s</name><operator pos:start="57:56" pos:end="57:57">-&gt;</operator><name pos:start="57:58" pos:end="57:71">chroma_x_shift</name></name><operator pos:start="57:72" pos:end="57:72">)</operator></expr></argument>,

                                                    <argument pos:start="59:53" pos:end="59:72"><expr pos:start="59:53" pos:end="59:72"><operator pos:start="59:53" pos:end="59:53">&amp;</operator><operator pos:start="59:54" pos:end="59:54">(</operator><name pos:start="59:55" pos:end="59:71"><name pos:start="59:55" pos:end="59:55">s</name><operator pos:start="59:56" pos:end="59:57">-&gt;</operator><name pos:start="59:58" pos:end="59:71">chroma_y_shift</name></name><operator pos:start="59:72" pos:end="59:72">)</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:76">/* set default edge pos, will be overriden in decode_header if needed */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:34"><expr pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:17">h_edge_pos</name></name><operator pos:start="65:18" pos:end="65:18">=</operator> <name pos:start="65:20" pos:end="65:30"><name pos:start="65:20" pos:end="65:20">s</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:30">mb_width</name></name><operator pos:start="65:31" pos:end="65:31">*</operator><literal type="number" pos:start="65:32" pos:end="65:33">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:35"><expr pos:start="67:5" pos:end="67:34"><name pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:17">v_edge_pos</name></name><operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:31"><name pos:start="67:20" pos:end="67:20">s</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:31">mb_height</name></name><operator pos:start="67:32" pos:end="67:32">*</operator><literal type="number" pos:start="67:33" pos:end="67:34">16</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:43"><expr pos:start="71:5" pos:end="71:42"><name pos:start="71:5" pos:end="71:13"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:13">mb_num</name></name> <operator pos:start="71:15" pos:end="71:15">=</operator> <name pos:start="71:17" pos:end="71:27"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:27">mb_width</name></name> <operator pos:start="71:29" pos:end="71:29">*</operator> <name pos:start="71:31" pos:end="71:42"><name pos:start="71:31" pos:end="71:31">s</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:42">mb_height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="81:35"><expr pos:start="75:5" pos:end="81:34"><name pos:start="75:5" pos:end="75:20"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:17">block_wrap</name><index pos:start="75:18" pos:end="75:20">[<expr pos:start="75:19" pos:end="75:19"><literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr>]</index></name><operator pos:start="75:21" pos:end="75:21">=</operator>

    <name pos:start="77:5" pos:end="77:20"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:17">block_wrap</name><index pos:start="77:18" pos:end="77:20">[<expr pos:start="77:19" pos:end="77:19"><literal type="number" pos:start="77:19" pos:end="77:19">1</literal></expr>]</index></name><operator pos:start="77:21" pos:end="77:21">=</operator>

    <name pos:start="79:5" pos:end="79:20"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:17">block_wrap</name><index pos:start="79:18" pos:end="79:20">[<expr pos:start="79:19" pos:end="79:19"><literal type="number" pos:start="79:19" pos:end="79:19">2</literal></expr>]</index></name><operator pos:start="79:21" pos:end="79:21">=</operator>

    <name pos:start="81:5" pos:end="81:20"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:17">block_wrap</name><index pos:start="81:18" pos:end="81:20">[<expr pos:start="81:19" pos:end="81:19"><literal type="number" pos:start="81:19" pos:end="81:19">3</literal></expr>]</index></name><operator pos:start="81:21" pos:end="81:21">=</operator> <name pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:23">s</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:34">b8_stride</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="85:35"><expr pos:start="83:5" pos:end="85:34"><name pos:start="83:5" pos:end="83:20"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:17">block_wrap</name><index pos:start="83:18" pos:end="83:20">[<expr pos:start="83:19" pos:end="83:19"><literal type="number" pos:start="83:19" pos:end="83:19">4</literal></expr>]</index></name><operator pos:start="83:21" pos:end="83:21">=</operator>

    <name pos:start="85:5" pos:end="85:20"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:17">block_wrap</name><index pos:start="85:18" pos:end="85:20">[<expr pos:start="85:19" pos:end="85:19"><literal type="number" pos:start="85:19" pos:end="85:19">5</literal></expr>]</index></name><operator pos:start="85:21" pos:end="85:21">=</operator> <name pos:start="85:23" pos:end="85:34"><name pos:start="85:23" pos:end="85:23">s</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:34">mb_stride</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:51"><expr pos:start="89:5" pos:end="89:50"><name pos:start="89:5" pos:end="89:10">y_size</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <name pos:start="89:14" pos:end="89:25"><name pos:start="89:14" pos:end="89:14">s</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:25">b8_stride</name></name> <operator pos:start="89:27" pos:end="89:27">*</operator> <operator pos:start="89:29" pos:end="89:29">(</operator><literal type="number" pos:start="89:30" pos:end="89:30">2</literal> <operator pos:start="89:32" pos:end="89:32">*</operator> <name pos:start="89:34" pos:end="89:45"><name pos:start="89:34" pos:end="89:34">s</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:45">mb_height</name></name> <operator pos:start="89:47" pos:end="89:47">+</operator> <literal type="number" pos:start="89:49" pos:end="89:49">1</literal><operator pos:start="89:50" pos:end="89:50">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:47"><expr pos:start="91:5" pos:end="91:46"><name pos:start="91:5" pos:end="91:10">c_size</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <name pos:start="91:14" pos:end="91:25"><name pos:start="91:14" pos:end="91:14">s</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:25">mb_stride</name></name> <operator pos:start="91:27" pos:end="91:27">*</operator> <operator pos:start="91:29" pos:end="91:29">(</operator><name pos:start="91:30" pos:end="91:41"><name pos:start="91:30" pos:end="91:30">s</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:41">mb_height</name></name> <operator pos:start="91:43" pos:end="91:43">+</operator> <literal type="number" pos:start="91:45" pos:end="91:45">1</literal><operator pos:start="91:46" pos:end="91:46">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:34"><expr pos:start="93:5" pos:end="93:33"><name pos:start="93:5" pos:end="93:11">yc_size</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <name pos:start="93:15" pos:end="93:20">y_size</name> <operator pos:start="93:22" pos:end="93:22">+</operator> <literal type="number" pos:start="93:24" pos:end="93:24">2</literal> <operator pos:start="93:26" pos:end="93:26">*</operator> <name pos:start="93:28" pos:end="93:33">c_size</name></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:38">/* convert fourcc to upper case */</comment>

    <expr_stmt pos:start="99:5" pos:end="105:72"><expr pos:start="99:5" pos:end="105:71"><name pos:start="99:5" pos:end="99:16"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:16">codec_tag</name></name><operator pos:start="99:17" pos:end="99:17">=</operator>          <call pos:start="99:28" pos:end="99:66"><name pos:start="99:28" pos:end="99:34">toupper</name><argument_list pos:start="99:35" pos:end="99:66">( <argument pos:start="99:37" pos:end="99:65"><expr pos:start="99:37" pos:end="99:65"><name pos:start="99:37" pos:end="99:55"><name pos:start="99:37" pos:end="99:37">s</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:44">avctx</name><operator pos:start="99:45" pos:end="99:46">-&gt;</operator><name pos:start="99:47" pos:end="99:55">codec_tag</name></name>     <operator pos:start="99:61" pos:end="99:61">&amp;</operator><literal type="number" pos:start="99:62" pos:end="99:65">0xFF</literal></expr></argument>)</argument_list></call>

                        <operator pos:start="101:25" pos:end="101:25">+</operator> <operator pos:start="101:27" pos:end="101:27">(</operator><call pos:start="101:28" pos:end="101:66"><name pos:start="101:28" pos:end="101:34">toupper</name><argument_list pos:start="101:35" pos:end="101:66">(<argument pos:start="101:36" pos:end="101:65"><expr pos:start="101:36" pos:end="101:65"><operator pos:start="101:36" pos:end="101:36">(</operator><name pos:start="101:37" pos:end="101:55"><name pos:start="101:37" pos:end="101:37">s</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:44">avctx</name><operator pos:start="101:45" pos:end="101:46">-&gt;</operator><name pos:start="101:47" pos:end="101:55">codec_tag</name></name><operator pos:start="101:56" pos:end="101:57">&gt;&gt;</operator><literal type="number" pos:start="101:58" pos:end="101:58">8</literal> <operator pos:start="101:60" pos:end="101:60">)</operator><operator pos:start="101:61" pos:end="101:61">&amp;</operator><literal type="number" pos:start="101:62" pos:end="101:65">0xFF</literal></expr></argument>)</argument_list></call><operator pos:start="101:67" pos:end="101:68">&lt;&lt;</operator><literal type="number" pos:start="101:69" pos:end="101:69">8</literal> <operator pos:start="101:71" pos:end="101:71">)</operator>

                        <operator pos:start="103:25" pos:end="103:25">+</operator> <operator pos:start="103:27" pos:end="103:27">(</operator><call pos:start="103:28" pos:end="103:66"><name pos:start="103:28" pos:end="103:34">toupper</name><argument_list pos:start="103:35" pos:end="103:66">(<argument pos:start="103:36" pos:end="103:65"><expr pos:start="103:36" pos:end="103:65"><operator pos:start="103:36" pos:end="103:36">(</operator><name pos:start="103:37" pos:end="103:55"><name pos:start="103:37" pos:end="103:37">s</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:44">avctx</name><operator pos:start="103:45" pos:end="103:46">-&gt;</operator><name pos:start="103:47" pos:end="103:55">codec_tag</name></name><operator pos:start="103:56" pos:end="103:57">&gt;&gt;</operator><literal type="number" pos:start="103:58" pos:end="103:59">16</literal><operator pos:start="103:60" pos:end="103:60">)</operator><operator pos:start="103:61" pos:end="103:61">&amp;</operator><literal type="number" pos:start="103:62" pos:end="103:65">0xFF</literal></expr></argument>)</argument_list></call><operator pos:start="103:67" pos:end="103:68">&lt;&lt;</operator><literal type="number" pos:start="103:69" pos:end="103:70">16</literal><operator pos:start="103:71" pos:end="103:71">)</operator>

                        <operator pos:start="105:25" pos:end="105:25">+</operator> <operator pos:start="105:27" pos:end="105:27">(</operator><call pos:start="105:28" pos:end="105:66"><name pos:start="105:28" pos:end="105:34">toupper</name><argument_list pos:start="105:35" pos:end="105:66">(<argument pos:start="105:36" pos:end="105:65"><expr pos:start="105:36" pos:end="105:65"><operator pos:start="105:36" pos:end="105:36">(</operator><name pos:start="105:37" pos:end="105:55"><name pos:start="105:37" pos:end="105:37">s</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:44">avctx</name><operator pos:start="105:45" pos:end="105:46">-&gt;</operator><name pos:start="105:47" pos:end="105:55">codec_tag</name></name><operator pos:start="105:56" pos:end="105:57">&gt;&gt;</operator><literal type="number" pos:start="105:58" pos:end="105:59">24</literal><operator pos:start="105:60" pos:end="105:60">)</operator><operator pos:start="105:61" pos:end="105:61">&amp;</operator><literal type="number" pos:start="105:62" pos:end="105:65">0xFF</literal></expr></argument>)</argument_list></call><operator pos:start="105:67" pos:end="105:68">&lt;&lt;</operator><literal type="number" pos:start="105:69" pos:end="105:70">24</literal><operator pos:start="105:71" pos:end="105:71">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="115:86"><expr pos:start="109:5" pos:end="115:85"><name pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:23">stream_codec_tag</name></name><operator pos:start="109:24" pos:end="109:24">=</operator>          <call pos:start="109:35" pos:end="109:80"><name pos:start="109:35" pos:end="109:41">toupper</name><argument_list pos:start="109:42" pos:end="109:80">( <argument pos:start="109:44" pos:end="109:79"><expr pos:start="109:44" pos:end="109:79"><name pos:start="109:44" pos:end="109:69"><name pos:start="109:44" pos:end="109:44">s</name><operator pos:start="109:45" pos:end="109:46">-&gt;</operator><name pos:start="109:47" pos:end="109:51">avctx</name><operator pos:start="109:52" pos:end="109:53">-&gt;</operator><name pos:start="109:54" pos:end="109:69">stream_codec_tag</name></name>     <operator pos:start="109:75" pos:end="109:75">&amp;</operator><literal type="number" pos:start="109:76" pos:end="109:79">0xFF</literal></expr></argument>)</argument_list></call>

                               <operator pos:start="111:32" pos:end="111:32">+</operator> <operator pos:start="111:34" pos:end="111:34">(</operator><call pos:start="111:35" pos:end="111:80"><name pos:start="111:35" pos:end="111:41">toupper</name><argument_list pos:start="111:42" pos:end="111:80">(<argument pos:start="111:43" pos:end="111:79"><expr pos:start="111:43" pos:end="111:79"><operator pos:start="111:43" pos:end="111:43">(</operator><name pos:start="111:44" pos:end="111:69"><name pos:start="111:44" pos:end="111:44">s</name><operator pos:start="111:45" pos:end="111:46">-&gt;</operator><name pos:start="111:47" pos:end="111:51">avctx</name><operator pos:start="111:52" pos:end="111:53">-&gt;</operator><name pos:start="111:54" pos:end="111:69">stream_codec_tag</name></name><operator pos:start="111:70" pos:end="111:71">&gt;&gt;</operator><literal type="number" pos:start="111:72" pos:end="111:72">8</literal> <operator pos:start="111:74" pos:end="111:74">)</operator><operator pos:start="111:75" pos:end="111:75">&amp;</operator><literal type="number" pos:start="111:76" pos:end="111:79">0xFF</literal></expr></argument>)</argument_list></call><operator pos:start="111:81" pos:end="111:82">&lt;&lt;</operator><literal type="number" pos:start="111:83" pos:end="111:83">8</literal> <operator pos:start="111:85" pos:end="111:85">)</operator>

                               <operator pos:start="113:32" pos:end="113:32">+</operator> <operator pos:start="113:34" pos:end="113:34">(</operator><call pos:start="113:35" pos:end="113:80"><name pos:start="113:35" pos:end="113:41">toupper</name><argument_list pos:start="113:42" pos:end="113:80">(<argument pos:start="113:43" pos:end="113:79"><expr pos:start="113:43" pos:end="113:79"><operator pos:start="113:43" pos:end="113:43">(</operator><name pos:start="113:44" pos:end="113:69"><name pos:start="113:44" pos:end="113:44">s</name><operator pos:start="113:45" pos:end="113:46">-&gt;</operator><name pos:start="113:47" pos:end="113:51">avctx</name><operator pos:start="113:52" pos:end="113:53">-&gt;</operator><name pos:start="113:54" pos:end="113:69">stream_codec_tag</name></name><operator pos:start="113:70" pos:end="113:71">&gt;&gt;</operator><literal type="number" pos:start="113:72" pos:end="113:73">16</literal><operator pos:start="113:74" pos:end="113:74">)</operator><operator pos:start="113:75" pos:end="113:75">&amp;</operator><literal type="number" pos:start="113:76" pos:end="113:79">0xFF</literal></expr></argument>)</argument_list></call><operator pos:start="113:81" pos:end="113:82">&lt;&lt;</operator><literal type="number" pos:start="113:83" pos:end="113:84">16</literal><operator pos:start="113:85" pos:end="113:85">)</operator>

                               <operator pos:start="115:32" pos:end="115:32">+</operator> <operator pos:start="115:34" pos:end="115:34">(</operator><call pos:start="115:35" pos:end="115:80"><name pos:start="115:35" pos:end="115:41">toupper</name><argument_list pos:start="115:42" pos:end="115:80">(<argument pos:start="115:43" pos:end="115:79"><expr pos:start="115:43" pos:end="115:79"><operator pos:start="115:43" pos:end="115:43">(</operator><name pos:start="115:44" pos:end="115:69"><name pos:start="115:44" pos:end="115:44">s</name><operator pos:start="115:45" pos:end="115:46">-&gt;</operator><name pos:start="115:47" pos:end="115:51">avctx</name><operator pos:start="115:52" pos:end="115:53">-&gt;</operator><name pos:start="115:54" pos:end="115:69">stream_codec_tag</name></name><operator pos:start="115:70" pos:end="115:71">&gt;&gt;</operator><literal type="number" pos:start="115:72" pos:end="115:73">24</literal><operator pos:start="115:74" pos:end="115:74">)</operator><operator pos:start="115:75" pos:end="115:75">&amp;</operator><literal type="number" pos:start="115:76" pos:end="115:79">0xFF</literal></expr></argument>)</argument_list></call><operator pos:start="115:81" pos:end="115:82">&lt;&lt;</operator><literal type="number" pos:start="115:83" pos:end="115:84">24</literal><operator pos:start="115:85" pos:end="115:85">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:57"><expr pos:start="119:5" pos:end="119:56"><name pos:start="119:5" pos:end="119:25"><name pos:start="119:5" pos:end="119:5">s</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:12">avctx</name><operator pos:start="119:13" pos:end="119:14">-&gt;</operator><name pos:start="119:15" pos:end="119:25">coded_frame</name></name><operator pos:start="119:26" pos:end="119:26">=</operator> <operator pos:start="119:28" pos:end="119:28">(</operator><name pos:start="119:29" pos:end="119:35">AVFrame</name><operator pos:start="119:36" pos:end="119:36">*</operator><operator pos:start="119:37" pos:end="119:37">)</operator><operator pos:start="119:38" pos:end="119:38">&amp;</operator><name pos:start="119:39" pos:end="119:56"><name pos:start="119:39" pos:end="119:39">s</name><operator pos:start="119:40" pos:end="119:41">-&gt;</operator><name pos:start="119:42" pos:end="119:56">current_picture</name></name></expr>;</expr_stmt>



    <macro pos:start="123:5" pos:end="123:61"><name pos:start="123:5" pos:end="123:18">CHECKED_ALLOCZ</name><argument_list pos:start="123:19" pos:end="123:61">(<argument pos:start="123:20" pos:end="123:33">s-&gt;mb_index2xy</argument>, <argument pos:start="123:36" pos:end="123:60">(s-&gt;mb_num+<literal type="number" pos:start="123:47" pos:end="123:47">1</literal>)*sizeof(int)</argument>)</argument_list></macro> <comment type="line" pos:start="123:63" pos:end="123:110">//error ressilience code looks cleaner with this</comment>

    <for pos:start="125:5" pos:end="133:5">for<control pos:start="125:8" pos:end="125:33">(<init pos:start="125:9" pos:end="125:12"><expr pos:start="125:9" pos:end="125:11"><name pos:start="125:9" pos:end="125:9">y</name><operator pos:start="125:10" pos:end="125:10">=</operator><literal type="number" pos:start="125:11" pos:end="125:11">0</literal></expr>;</init> <condition pos:start="125:14" pos:end="125:28"><expr pos:start="125:14" pos:end="125:27"><name pos:start="125:14" pos:end="125:14">y</name><operator pos:start="125:15" pos:end="125:15">&lt;</operator><name pos:start="125:16" pos:end="125:27"><name pos:start="125:16" pos:end="125:16">s</name><operator pos:start="125:17" pos:end="125:18">-&gt;</operator><name pos:start="125:19" pos:end="125:27">mb_height</name></name></expr>;</condition> <incr pos:start="125:30" pos:end="125:32"><expr pos:start="125:30" pos:end="125:32"><name pos:start="125:30" pos:end="125:30">y</name><operator pos:start="125:31" pos:end="125:32">++</operator></expr></incr>)</control><block pos:start="125:34" pos:end="133:5">{<block_content pos:start="127:9" pos:end="131:9">

        <for pos:start="127:9" pos:end="131:9">for<control pos:start="127:12" pos:end="127:36">(<init pos:start="127:13" pos:end="127:16"><expr pos:start="127:13" pos:end="127:15"><name pos:start="127:13" pos:end="127:13">x</name><operator pos:start="127:14" pos:end="127:14">=</operator><literal type="number" pos:start="127:15" pos:end="127:15">0</literal></expr>;</init> <condition pos:start="127:18" pos:end="127:31"><expr pos:start="127:18" pos:end="127:30"><name pos:start="127:18" pos:end="127:18">x</name><operator pos:start="127:19" pos:end="127:19">&lt;</operator><name pos:start="127:20" pos:end="127:30"><name pos:start="127:20" pos:end="127:20">s</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:30">mb_width</name></name></expr>;</condition> <incr pos:start="127:33" pos:end="127:35"><expr pos:start="127:33" pos:end="127:35"><name pos:start="127:33" pos:end="127:33">x</name><operator pos:start="127:34" pos:end="127:35">++</operator></expr></incr>)</control><block pos:start="127:37" pos:end="131:9">{<block_content pos:start="129:13" pos:end="129:69">

            <expr_stmt pos:start="129:13" pos:end="129:69"><expr pos:start="129:13" pos:end="129:68"><name pos:start="129:13" pos:end="129:47"><name pos:start="129:13" pos:end="129:13">s</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:26">mb_index2xy</name><index pos:start="129:27" pos:end="129:47">[ <expr pos:start="129:29" pos:end="129:45"><name pos:start="129:29" pos:end="129:29">x</name> <operator pos:start="129:31" pos:end="129:31">+</operator> <name pos:start="129:33" pos:end="129:33">y</name><operator pos:start="129:34" pos:end="129:34">*</operator><name pos:start="129:35" pos:end="129:45"><name pos:start="129:35" pos:end="129:35">s</name><operator pos:start="129:36" pos:end="129:37">-&gt;</operator><name pos:start="129:38" pos:end="129:45">mb_width</name></name></expr> ]</index></name> <operator pos:start="129:49" pos:end="129:49">=</operator> <name pos:start="129:51" pos:end="129:51">x</name> <operator pos:start="129:53" pos:end="129:53">+</operator> <name pos:start="129:55" pos:end="129:55">y</name><operator pos:start="129:56" pos:end="129:56">*</operator><name pos:start="129:57" pos:end="129:68"><name pos:start="129:57" pos:end="129:57">s</name><operator pos:start="129:58" pos:end="129:59">-&gt;</operator><name pos:start="129:60" pos:end="129:68">mb_stride</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="135:5" pos:end="135:93"><expr pos:start="135:5" pos:end="135:92"><name pos:start="135:5" pos:end="135:46"><name pos:start="135:5" pos:end="135:5">s</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:18">mb_index2xy</name><index pos:start="135:19" pos:end="135:46">[ <expr pos:start="135:21" pos:end="135:44"><name pos:start="135:21" pos:end="135:32"><name pos:start="135:21" pos:end="135:21">s</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:32">mb_height</name></name><operator pos:start="135:33" pos:end="135:33">*</operator><name pos:start="135:34" pos:end="135:44"><name pos:start="135:34" pos:end="135:34">s</name><operator pos:start="135:35" pos:end="135:36">-&gt;</operator><name pos:start="135:37" pos:end="135:44">mb_width</name></name></expr> ]</index></name> <operator pos:start="135:48" pos:end="135:48">=</operator> <operator pos:start="135:50" pos:end="135:50">(</operator><name pos:start="135:51" pos:end="135:62"><name pos:start="135:51" pos:end="135:51">s</name><operator pos:start="135:52" pos:end="135:53">-&gt;</operator><name pos:start="135:54" pos:end="135:62">mb_height</name></name><operator pos:start="135:63" pos:end="135:63">-</operator><literal type="number" pos:start="135:64" pos:end="135:64">1</literal><operator pos:start="135:65" pos:end="135:65">)</operator><operator pos:start="135:66" pos:end="135:66">*</operator><name pos:start="135:67" pos:end="135:78"><name pos:start="135:67" pos:end="135:67">s</name><operator pos:start="135:68" pos:end="135:69">-&gt;</operator><name pos:start="135:70" pos:end="135:78">mb_stride</name></name> <operator pos:start="135:80" pos:end="135:80">+</operator> <name pos:start="135:82" pos:end="135:92"><name pos:start="135:82" pos:end="135:82">s</name><operator pos:start="135:83" pos:end="135:84">-&gt;</operator><name pos:start="135:85" pos:end="135:92">mb_width</name></name></expr>;</expr_stmt> <comment type="line" pos:start="135:95" pos:end="135:116">//FIXME really needed?</comment>



    <if_stmt pos:start="139:5" pos:end="209:5"><if pos:start="139:5" pos:end="209:5">if <condition pos:start="139:8" pos:end="139:20">(<expr pos:start="139:9" pos:end="139:19"><name pos:start="139:9" pos:end="139:19"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:19">encoding</name></name></expr>)</condition> <block pos:start="139:22" pos:end="209:5">{<block_content pos:start="143:9" pos:end="207:9">

        <comment type="block" pos:start="141:9" pos:end="141:32">/* Allocate MV tables */</comment>

        <macro pos:start="143:9" pos:end="143:91"><name pos:start="143:9" pos:end="143:22">CHECKED_ALLOCZ</name><argument_list pos:start="143:23" pos:end="143:91">(<argument pos:start="143:24" pos:end="143:41">s-&gt;p_mv_table_base</argument>            , <argument pos:start="143:56" pos:end="143:90">mv_table_size * <literal type="number" pos:start="143:72" pos:end="143:72">2</literal> * sizeof(int16_t)</argument>)</argument_list></macro>

        <macro pos:start="145:9" pos:end="145:91"><name pos:start="145:9" pos:end="145:22">CHECKED_ALLOCZ</name><argument_list pos:start="145:23" pos:end="145:91">(<argument pos:start="145:24" pos:end="145:46">s-&gt;b_forw_mv_table_base</argument>       , <argument pos:start="145:56" pos:end="145:90">mv_table_size * <literal type="number" pos:start="145:72" pos:end="145:72">2</literal> * sizeof(int16_t)</argument>)</argument_list></macro>

        <macro pos:start="147:9" pos:end="147:91"><name pos:start="147:9" pos:end="147:22">CHECKED_ALLOCZ</name><argument_list pos:start="147:23" pos:end="147:91">(<argument pos:start="147:24" pos:end="147:46">s-&gt;b_back_mv_table_base</argument>       , <argument pos:start="147:56" pos:end="147:90">mv_table_size * <literal type="number" pos:start="147:72" pos:end="147:72">2</literal> * sizeof(int16_t)</argument>)</argument_list></macro>

        <macro pos:start="149:9" pos:end="149:91"><name pos:start="149:9" pos:end="149:22">CHECKED_ALLOCZ</name><argument_list pos:start="149:23" pos:end="149:91">(<argument pos:start="149:24" pos:end="149:52">s-&gt;b_bidir_forw_mv_table_base</argument> , <argument pos:start="149:56" pos:end="149:90">mv_table_size * <literal type="number" pos:start="149:72" pos:end="149:72">2</literal> * sizeof(int16_t)</argument>)</argument_list></macro>

        <macro pos:start="151:9" pos:end="151:91"><name pos:start="151:9" pos:end="151:22">CHECKED_ALLOCZ</name><argument_list pos:start="151:23" pos:end="151:91">(<argument pos:start="151:24" pos:end="151:52">s-&gt;b_bidir_back_mv_table_base</argument> , <argument pos:start="151:56" pos:end="151:90">mv_table_size * <literal type="number" pos:start="151:72" pos:end="151:72">2</literal> * sizeof(int16_t)</argument>)</argument_list></macro>

        <macro pos:start="153:9" pos:end="153:91"><name pos:start="153:9" pos:end="153:22">CHECKED_ALLOCZ</name><argument_list pos:start="153:23" pos:end="153:91">(<argument pos:start="153:24" pos:end="153:48">s-&gt;b_direct_mv_table_base</argument>     , <argument pos:start="153:56" pos:end="153:90">mv_table_size * <literal type="number" pos:start="153:72" pos:end="153:72">2</literal> * sizeof(int16_t)</argument>)</argument_list></macro>

        <expr_stmt pos:start="155:9" pos:end="155:83"><expr pos:start="155:9" pos:end="155:82"><name pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:21">p_mv_table</name></name>           <operator pos:start="155:33" pos:end="155:33">=</operator> <name pos:start="155:35" pos:end="155:52"><name pos:start="155:35" pos:end="155:35">s</name><operator pos:start="155:36" pos:end="155:37">-&gt;</operator><name pos:start="155:38" pos:end="155:52">p_mv_table_base</name></name>            <operator pos:start="155:65" pos:end="155:65">+</operator> <name pos:start="155:67" pos:end="155:78"><name pos:start="155:67" pos:end="155:67">s</name><operator pos:start="155:68" pos:end="155:69">-&gt;</operator><name pos:start="155:70" pos:end="155:78">mb_stride</name></name> <operator pos:start="155:80" pos:end="155:80">+</operator> <literal type="number" pos:start="155:82" pos:end="155:82">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:83"><expr pos:start="157:9" pos:end="157:82"><name pos:start="157:9" pos:end="157:26"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:26">b_forw_mv_table</name></name>      <operator pos:start="157:33" pos:end="157:33">=</operator> <name pos:start="157:35" pos:end="157:57"><name pos:start="157:35" pos:end="157:35">s</name><operator pos:start="157:36" pos:end="157:37">-&gt;</operator><name pos:start="157:38" pos:end="157:57">b_forw_mv_table_base</name></name>       <operator pos:start="157:65" pos:end="157:65">+</operator> <name pos:start="157:67" pos:end="157:78"><name pos:start="157:67" pos:end="157:67">s</name><operator pos:start="157:68" pos:end="157:69">-&gt;</operator><name pos:start="157:70" pos:end="157:78">mb_stride</name></name> <operator pos:start="157:80" pos:end="157:80">+</operator> <literal type="number" pos:start="157:82" pos:end="157:82">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:83"><expr pos:start="159:9" pos:end="159:82"><name pos:start="159:9" pos:end="159:26"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:26">b_back_mv_table</name></name>      <operator pos:start="159:33" pos:end="159:33">=</operator> <name pos:start="159:35" pos:end="159:57"><name pos:start="159:35" pos:end="159:35">s</name><operator pos:start="159:36" pos:end="159:37">-&gt;</operator><name pos:start="159:38" pos:end="159:57">b_back_mv_table_base</name></name>       <operator pos:start="159:65" pos:end="159:65">+</operator> <name pos:start="159:67" pos:end="159:78"><name pos:start="159:67" pos:end="159:67">s</name><operator pos:start="159:68" pos:end="159:69">-&gt;</operator><name pos:start="159:70" pos:end="159:78">mb_stride</name></name> <operator pos:start="159:80" pos:end="159:80">+</operator> <literal type="number" pos:start="159:82" pos:end="159:82">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:83"><expr pos:start="161:9" pos:end="161:82"><name pos:start="161:9" pos:end="161:32"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:32">b_bidir_forw_mv_table</name></name><operator pos:start="161:33" pos:end="161:33">=</operator> <name pos:start="161:35" pos:end="161:63"><name pos:start="161:35" pos:end="161:35">s</name><operator pos:start="161:36" pos:end="161:37">-&gt;</operator><name pos:start="161:38" pos:end="161:63">b_bidir_forw_mv_table_base</name></name> <operator pos:start="161:65" pos:end="161:65">+</operator> <name pos:start="161:67" pos:end="161:78"><name pos:start="161:67" pos:end="161:67">s</name><operator pos:start="161:68" pos:end="161:69">-&gt;</operator><name pos:start="161:70" pos:end="161:78">mb_stride</name></name> <operator pos:start="161:80" pos:end="161:80">+</operator> <literal type="number" pos:start="161:82" pos:end="161:82">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:83"><expr pos:start="163:9" pos:end="163:82"><name pos:start="163:9" pos:end="163:32"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:32">b_bidir_back_mv_table</name></name><operator pos:start="163:33" pos:end="163:33">=</operator> <name pos:start="163:35" pos:end="163:63"><name pos:start="163:35" pos:end="163:35">s</name><operator pos:start="163:36" pos:end="163:37">-&gt;</operator><name pos:start="163:38" pos:end="163:63">b_bidir_back_mv_table_base</name></name> <operator pos:start="163:65" pos:end="163:65">+</operator> <name pos:start="163:67" pos:end="163:78"><name pos:start="163:67" pos:end="163:67">s</name><operator pos:start="163:68" pos:end="163:69">-&gt;</operator><name pos:start="163:70" pos:end="163:78">mb_stride</name></name> <operator pos:start="163:80" pos:end="163:80">+</operator> <literal type="number" pos:start="163:82" pos:end="163:82">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:83"><expr pos:start="165:9" pos:end="165:82"><name pos:start="165:9" pos:end="165:28"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:28">b_direct_mv_table</name></name>    <operator pos:start="165:33" pos:end="165:33">=</operator> <name pos:start="165:35" pos:end="165:59"><name pos:start="165:35" pos:end="165:35">s</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:59">b_direct_mv_table_base</name></name>     <operator pos:start="165:65" pos:end="165:65">+</operator> <name pos:start="165:67" pos:end="165:78"><name pos:start="165:67" pos:end="165:67">s</name><operator pos:start="165:68" pos:end="165:69">-&gt;</operator><name pos:start="165:70" pos:end="165:78">mb_stride</name></name> <operator pos:start="165:80" pos:end="165:80">+</operator> <literal type="number" pos:start="165:82" pos:end="165:82">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="169:9" pos:end="173:9"><if pos:start="169:9" pos:end="173:9">if<condition pos:start="169:11" pos:end="169:30">(<expr pos:start="169:12" pos:end="169:29"><name pos:start="169:12" pos:end="169:29"><name pos:start="169:12" pos:end="169:12">s</name><operator pos:start="169:13" pos:end="169:14">-&gt;</operator><name pos:start="169:15" pos:end="169:29">msmpeg4_version</name></name></expr>)</condition><block pos:start="169:31" pos:end="173:9">{<block_content pos:start="171:13" pos:end="171:85">

            <expr_stmt pos:start="171:13" pos:end="171:85"><expr pos:start="171:13" pos:end="171:84"><call pos:start="171:13" pos:end="171:84"><name pos:start="171:13" pos:end="171:26">CHECKED_ALLOCZ</name><argument_list pos:start="171:27" pos:end="171:84">(<argument pos:start="171:28" pos:end="171:38"><expr pos:start="171:28" pos:end="171:38"><name pos:start="171:28" pos:end="171:38"><name pos:start="171:28" pos:end="171:28">s</name><operator pos:start="171:29" pos:end="171:30">-&gt;</operator><name pos:start="171:31" pos:end="171:38">ac_stats</name></name></expr></argument>, <argument pos:start="171:41" pos:end="171:83"><expr pos:start="171:41" pos:end="171:83"><literal type="number" pos:start="171:41" pos:end="171:41">2</literal><operator pos:start="171:42" pos:end="171:42">*</operator><literal type="number" pos:start="171:43" pos:end="171:43">2</literal><operator pos:start="171:44" pos:end="171:44">*</operator><operator pos:start="171:45" pos:end="171:45">(</operator><name pos:start="171:46" pos:end="171:54">MAX_LEVEL</name><operator pos:start="171:55" pos:end="171:55">+</operator><literal type="number" pos:start="171:56" pos:end="171:56">1</literal><operator pos:start="171:57" pos:end="171:57">)</operator><operator pos:start="171:58" pos:end="171:58">*</operator><operator pos:start="171:59" pos:end="171:59">(</operator><name pos:start="171:60" pos:end="171:66">MAX_RUN</name><operator pos:start="171:67" pos:end="171:67">+</operator><literal type="number" pos:start="171:68" pos:end="171:68">1</literal><operator pos:start="171:69" pos:end="171:69">)</operator><operator pos:start="171:70" pos:end="171:70">*</operator><literal type="number" pos:start="171:71" pos:end="171:71">2</literal><operator pos:start="171:72" pos:end="171:72">*</operator><sizeof pos:start="171:73" pos:end="171:83">sizeof<argument_list pos:start="171:79" pos:end="171:83">(<argument pos:start="171:80" pos:end="171:82"><expr pos:start="171:80" pos:end="171:82"><name pos:start="171:80" pos:end="171:82">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:49"><expr pos:start="175:9" pos:end="175:48"><call pos:start="175:9" pos:end="175:48"><name pos:start="175:9" pos:end="175:22">CHECKED_ALLOCZ</name><argument_list pos:start="175:23" pos:end="175:48">(<argument pos:start="175:24" pos:end="175:42"><expr pos:start="175:24" pos:end="175:42"><name pos:start="175:24" pos:end="175:42"><name pos:start="175:24" pos:end="175:24">s</name><operator pos:start="175:25" pos:end="175:26">-&gt;</operator><name pos:start="175:27" pos:end="175:31">avctx</name><operator pos:start="175:32" pos:end="175:33">-&gt;</operator><name pos:start="175:34" pos:end="175:42">stats_out</name></name></expr></argument>, <argument pos:start="175:45" pos:end="175:47"><expr pos:start="175:45" pos:end="175:47"><literal type="number" pos:start="175:45" pos:end="175:47">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="179:9" pos:end="179:36">/* Allocate MB type table */</comment>

        <macro pos:start="181:9" pos:end="181:70"><name pos:start="181:9" pos:end="181:22">CHECKED_ALLOCZ</name><argument_list pos:start="181:23" pos:end="181:70">(<argument pos:start="181:24" pos:end="181:33">s-&gt;mb_type</argument>  , <argument pos:start="181:38" pos:end="181:69">mb_array_size * sizeof(uint16_t)</argument>)</argument_list></macro> <comment type="line" pos:start="181:72" pos:end="181:92">//needed for encoding</comment>



        <macro pos:start="185:9" pos:end="185:68"><name pos:start="185:9" pos:end="185:22">CHECKED_ALLOCZ</name><argument_list pos:start="185:23" pos:end="185:68">(<argument pos:start="185:24" pos:end="185:38">s-&gt;lambda_table</argument>, <argument pos:start="185:41" pos:end="185:67">mb_array_size * sizeof(int)</argument>)</argument_list></macro>



        <macro pos:start="189:9" pos:end="189:62"><name pos:start="189:9" pos:end="189:22">CHECKED_ALLOCZ</name><argument_list pos:start="189:23" pos:end="189:62">(<argument pos:start="189:24" pos:end="189:40">s-&gt;q_intra_matrix</argument>, <argument pos:start="189:43" pos:end="189:61"><literal type="number" pos:start="189:43" pos:end="189:44">64</literal>*<literal type="number" pos:start="189:46" pos:end="189:47">32</literal> * sizeof(int)</argument>)</argument_list></macro>

        <macro pos:start="191:9" pos:end="191:62"><name pos:start="191:9" pos:end="191:22">CHECKED_ALLOCZ</name><argument_list pos:start="191:23" pos:end="191:62">(<argument pos:start="191:24" pos:end="191:40">s-&gt;q_inter_matrix</argument>, <argument pos:start="191:43" pos:end="191:61"><literal type="number" pos:start="191:43" pos:end="191:44">64</literal>*<literal type="number" pos:start="191:46" pos:end="191:47">32</literal> * sizeof(int)</argument>)</argument_list></macro>

        <macro pos:start="193:9" pos:end="193:71"><name pos:start="193:9" pos:end="193:22">CHECKED_ALLOCZ</name><argument_list pos:start="193:23" pos:end="193:71">(<argument pos:start="193:24" pos:end="193:42">s-&gt;q_intra_matrix16</argument>, <argument pos:start="193:45" pos:end="193:70"><literal type="number" pos:start="193:45" pos:end="193:46">64</literal>*<literal type="number" pos:start="193:48" pos:end="193:49">32</literal>*<literal type="number" pos:start="193:51" pos:end="193:51">2</literal> * sizeof(uint16_t)</argument>)</argument_list></macro>

        <macro pos:start="195:9" pos:end="195:71"><name pos:start="195:9" pos:end="195:22">CHECKED_ALLOCZ</name><argument_list pos:start="195:23" pos:end="195:71">(<argument pos:start="195:24" pos:end="195:42">s-&gt;q_inter_matrix16</argument>, <argument pos:start="195:45" pos:end="195:70"><literal type="number" pos:start="195:45" pos:end="195:46">64</literal>*<literal type="number" pos:start="195:48" pos:end="195:49">32</literal>*<literal type="number" pos:start="195:51" pos:end="195:51">2</literal> * sizeof(uint16_t)</argument>)</argument_list></macro>

        <macro pos:start="197:9" pos:end="197:78"><name pos:start="197:9" pos:end="197:22">CHECKED_ALLOCZ</name><argument_list pos:start="197:23" pos:end="197:78">(<argument pos:start="197:24" pos:end="197:39">s-&gt;input_picture</argument>, <argument pos:start="197:42" pos:end="197:77">MAX_PICTURE_COUNT * sizeof(Picture*)</argument>)</argument_list></macro>

        <macro pos:start="199:9" pos:end="199:88"><name pos:start="199:9" pos:end="199:22">CHECKED_ALLOCZ</name><argument_list pos:start="199:23" pos:end="199:88">(<argument pos:start="199:24" pos:end="199:49">s-&gt;reordered_input_picture</argument>, <argument pos:start="199:52" pos:end="199:87">MAX_PICTURE_COUNT * sizeof(Picture*)</argument>)</argument_list></macro>



        <if_stmt pos:start="203:9" pos:end="207:9"><if pos:start="203:9" pos:end="207:9">if<condition pos:start="203:11" pos:end="203:37">(<expr pos:start="203:12" pos:end="203:36"><name pos:start="203:12" pos:end="203:36"><name pos:start="203:12" pos:end="203:12">s</name><operator pos:start="203:13" pos:end="203:14">-&gt;</operator><name pos:start="203:15" pos:end="203:19">avctx</name><operator pos:start="203:20" pos:end="203:21">-&gt;</operator><name pos:start="203:22" pos:end="203:36">noise_reduction</name></name></expr>)</condition><block pos:start="203:38" pos:end="207:9">{<block_content pos:start="205:13" pos:end="205:68">

            <macro pos:start="205:13" pos:end="205:68"><name pos:start="205:13" pos:end="205:26">CHECKED_ALLOCZ</name><argument_list pos:start="205:27" pos:end="205:68">(<argument pos:start="205:28" pos:end="205:40">s-&gt;dct_offset</argument>, <argument pos:start="205:43" pos:end="205:67"><literal type="number" pos:start="205:43" pos:end="205:43">2</literal> * <literal type="number" pos:start="205:47" pos:end="205:48">64</literal> * sizeof(uint16_t)</argument>)</argument_list></macro>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <macro pos:start="211:5" pos:end="211:67"><name pos:start="211:5" pos:end="211:18">CHECKED_ALLOCZ</name><argument_list pos:start="211:19" pos:end="211:67">(<argument pos:start="211:20" pos:end="211:29">s-&gt;picture</argument>, <argument pos:start="211:32" pos:end="211:66">MAX_PICTURE_COUNT * sizeof(Picture)</argument>)</argument_list></macro>



    <macro pos:start="215:5" pos:end="215:72"><name pos:start="215:5" pos:end="215:18">CHECKED_ALLOCZ</name><argument_list pos:start="215:19" pos:end="215:72">(<argument pos:start="215:20" pos:end="215:40">s-&gt;error_status_table</argument>, <argument pos:start="215:43" pos:end="215:71">mb_array_size*sizeof(uint8_t)</argument>)</argument_list></macro>



    <if_stmt pos:start="219:5" pos:end="249:5"><if pos:start="219:5" pos:end="249:5">if<condition pos:start="219:7" pos:end="219:76">(<expr pos:start="219:8" pos:end="219:75"><name pos:start="219:8" pos:end="219:18"><name pos:start="219:8" pos:end="219:8">s</name><operator pos:start="219:9" pos:end="219:10">-&gt;</operator><name pos:start="219:11" pos:end="219:18">codec_id</name></name><operator pos:start="219:19" pos:end="219:20">==</operator><name pos:start="219:21" pos:end="219:34">CODEC_ID_MPEG4</name> <operator pos:start="219:36" pos:end="219:37">||</operator> <operator pos:start="219:39" pos:end="219:39">(</operator><name pos:start="219:40" pos:end="219:47"><name pos:start="219:40" pos:end="219:40">s</name><operator pos:start="219:41" pos:end="219:42">-&gt;</operator><name pos:start="219:43" pos:end="219:47">flags</name></name> <operator pos:start="219:49" pos:end="219:49">&amp;</operator> <name pos:start="219:51" pos:end="219:74">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="219:75" pos:end="219:75">)</operator></expr>)</condition><block pos:start="219:77" pos:end="249:5">{<block_content pos:start="223:13" pos:end="247:13">

        <comment type="block" pos:start="221:9" pos:end="221:52">/* interlaced direct mode decoding tables */</comment>

            <for pos:start="223:13" pos:end="247:13">for<control pos:start="223:16" pos:end="223:30">(<init pos:start="223:17" pos:end="223:20"><expr pos:start="223:17" pos:end="223:19"><name pos:start="223:17" pos:end="223:17">i</name><operator pos:start="223:18" pos:end="223:18">=</operator><literal type="number" pos:start="223:19" pos:end="223:19">0</literal></expr>;</init> <condition pos:start="223:22" pos:end="223:25"><expr pos:start="223:22" pos:end="223:24"><name pos:start="223:22" pos:end="223:22">i</name><operator pos:start="223:23" pos:end="223:23">&lt;</operator><literal type="number" pos:start="223:24" pos:end="223:24">2</literal></expr>;</condition> <incr pos:start="223:27" pos:end="223:29"><expr pos:start="223:27" pos:end="223:29"><name pos:start="223:27" pos:end="223:27">i</name><operator pos:start="223:28" pos:end="223:29">++</operator></expr></incr>)</control><block pos:start="223:31" pos:end="247:13">{<block_content pos:start="225:17" pos:end="245:101">

                <decl_stmt pos:start="225:17" pos:end="225:25"><decl pos:start="225:17" pos:end="225:21"><type pos:start="225:17" pos:end="225:19"><name pos:start="225:17" pos:end="225:19">int</name></type> <name pos:start="225:21" pos:end="225:21">j</name></decl>, <decl pos:start="225:24" pos:end="225:24"><type ref="prev" pos:start="225:17" pos:end="225:19"/><name pos:start="225:24" pos:end="225:24">k</name></decl>;</decl_stmt>

                <for pos:start="227:17" pos:end="243:17">for<control pos:start="227:20" pos:end="227:34">(<init pos:start="227:21" pos:end="227:24"><expr pos:start="227:21" pos:end="227:23"><name pos:start="227:21" pos:end="227:21">j</name><operator pos:start="227:22" pos:end="227:22">=</operator><literal type="number" pos:start="227:23" pos:end="227:23">0</literal></expr>;</init> <condition pos:start="227:26" pos:end="227:29"><expr pos:start="227:26" pos:end="227:28"><name pos:start="227:26" pos:end="227:26">j</name><operator pos:start="227:27" pos:end="227:27">&lt;</operator><literal type="number" pos:start="227:28" pos:end="227:28">2</literal></expr>;</condition> <incr pos:start="227:31" pos:end="227:33"><expr pos:start="227:31" pos:end="227:33"><name pos:start="227:31" pos:end="227:31">j</name><operator pos:start="227:32" pos:end="227:33">++</operator></expr></incr>)</control><block pos:start="227:35" pos:end="243:17">{<block_content pos:start="229:21" pos:end="241:105">

                    <for pos:start="229:21" pos:end="235:21">for<control pos:start="229:24" pos:end="229:38">(<init pos:start="229:25" pos:end="229:28"><expr pos:start="229:25" pos:end="229:27"><name pos:start="229:25" pos:end="229:25">k</name><operator pos:start="229:26" pos:end="229:26">=</operator><literal type="number" pos:start="229:27" pos:end="229:27">0</literal></expr>;</init> <condition pos:start="229:30" pos:end="229:33"><expr pos:start="229:30" pos:end="229:32"><name pos:start="229:30" pos:end="229:30">k</name><operator pos:start="229:31" pos:end="229:31">&lt;</operator><literal type="number" pos:start="229:32" pos:end="229:32">2</literal></expr>;</condition> <incr pos:start="229:35" pos:end="229:37"><expr pos:start="229:35" pos:end="229:37"><name pos:start="229:35" pos:end="229:35">k</name><operator pos:start="229:36" pos:end="229:37">++</operator></expr></incr>)</control><block pos:start="229:39" pos:end="235:21">{<block_content pos:start="231:25" pos:end="233:115">

                        <macro pos:start="231:25" pos:end="231:115"><name pos:start="231:25" pos:end="231:38">CHECKED_ALLOCZ</name><argument_list pos:start="231:39" pos:end="231:115">(<argument pos:start="231:40" pos:end="231:72">s-&gt;b_field_mv_table_base[i][j][k]</argument>     , <argument pos:start="231:80" pos:end="231:114">mv_table_size * <literal type="number" pos:start="231:96" pos:end="231:96">2</literal> * sizeof(int16_t)</argument>)</argument_list></macro>

                        <expr_stmt pos:start="233:25" pos:end="233:115"><expr pos:start="233:25" pos:end="233:114"><name pos:start="233:25" pos:end="233:52"><name pos:start="233:25" pos:end="233:25">s</name><operator pos:start="233:26" pos:end="233:27">-&gt;</operator><name pos:start="233:28" pos:end="233:43">b_field_mv_table</name><index pos:start="233:44" pos:end="233:46">[<expr pos:start="233:45" pos:end="233:45"><name pos:start="233:45" pos:end="233:45">i</name></expr>]</index><index pos:start="233:47" pos:end="233:49">[<expr pos:start="233:48" pos:end="233:48"><name pos:start="233:48" pos:end="233:48">j</name></expr>]</index><index pos:start="233:50" pos:end="233:52">[<expr pos:start="233:51" pos:end="233:51"><name pos:start="233:51" pos:end="233:51">k</name></expr>]</index></name>    <operator pos:start="233:57" pos:end="233:57">=</operator> <name pos:start="233:59" pos:end="233:91"><name pos:start="233:59" pos:end="233:59">s</name><operator pos:start="233:60" pos:end="233:61">-&gt;</operator><name pos:start="233:62" pos:end="233:82">b_field_mv_table_base</name><index pos:start="233:83" pos:end="233:85">[<expr pos:start="233:84" pos:end="233:84"><name pos:start="233:84" pos:end="233:84">i</name></expr>]</index><index pos:start="233:86" pos:end="233:88">[<expr pos:start="233:87" pos:end="233:87"><name pos:start="233:87" pos:end="233:87">j</name></expr>]</index><index pos:start="233:89" pos:end="233:91">[<expr pos:start="233:90" pos:end="233:90"><name pos:start="233:90" pos:end="233:90">k</name></expr>]</index></name>     <operator pos:start="233:97" pos:end="233:97">+</operator> <name pos:start="233:99" pos:end="233:110"><name pos:start="233:99" pos:end="233:99">s</name><operator pos:start="233:100" pos:end="233:101">-&gt;</operator><name pos:start="233:102" pos:end="233:110">mb_stride</name></name> <operator pos:start="233:112" pos:end="233:112">+</operator> <literal type="number" pos:start="233:114" pos:end="233:114">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <macro pos:start="237:21" pos:end="237:107"><name pos:start="237:21" pos:end="237:34">CHECKED_ALLOCZ</name><argument_list pos:start="237:35" pos:end="237:107">(<argument pos:start="237:36" pos:end="237:64">s-&gt;b_field_select_table[i][j]</argument>     , <argument pos:start="237:72" pos:end="237:106">mb_array_size * <literal type="number" pos:start="237:88" pos:end="237:88">2</literal> * sizeof(uint8_t)</argument>)</argument_list></macro>

                    <macro pos:start="239:21" pos:end="239:108"><name pos:start="239:21" pos:end="239:34">CHECKED_ALLOCZ</name><argument_list pos:start="239:35" pos:end="239:108">(<argument pos:start="239:36" pos:end="239:65">s-&gt;p_field_mv_table_base[i][j]</argument>     , <argument pos:start="239:73" pos:end="239:107">mv_table_size * <literal type="number" pos:start="239:89" pos:end="239:89">2</literal> * sizeof(int16_t)</argument>)</argument_list></macro>

                    <expr_stmt pos:start="241:21" pos:end="241:105"><expr pos:start="241:21" pos:end="241:104"><name pos:start="241:21" pos:end="241:45"><name pos:start="241:21" pos:end="241:21">s</name><operator pos:start="241:22" pos:end="241:23">-&gt;</operator><name pos:start="241:24" pos:end="241:39">p_field_mv_table</name><index pos:start="241:40" pos:end="241:42">[<expr pos:start="241:41" pos:end="241:41"><name pos:start="241:41" pos:end="241:41">i</name></expr>]</index><index pos:start="241:43" pos:end="241:45">[<expr pos:start="241:44" pos:end="241:44"><name pos:start="241:44" pos:end="241:44">j</name></expr>]</index></name>    <operator pos:start="241:50" pos:end="241:50">=</operator> <name pos:start="241:52" pos:end="241:81"><name pos:start="241:52" pos:end="241:52">s</name><operator pos:start="241:53" pos:end="241:54">-&gt;</operator><name pos:start="241:55" pos:end="241:75">p_field_mv_table_base</name><index pos:start="241:76" pos:end="241:78">[<expr pos:start="241:77" pos:end="241:77"><name pos:start="241:77" pos:end="241:77">i</name></expr>]</index><index pos:start="241:79" pos:end="241:81">[<expr pos:start="241:80" pos:end="241:80"><name pos:start="241:80" pos:end="241:80">j</name></expr>]</index></name>     <operator pos:start="241:87" pos:end="241:87">+</operator> <name pos:start="241:89" pos:end="241:100"><name pos:start="241:89" pos:end="241:89">s</name><operator pos:start="241:90" pos:end="241:91">-&gt;</operator><name pos:start="241:92" pos:end="241:100">mb_stride</name></name> <operator pos:start="241:102" pos:end="241:102">+</operator> <literal type="number" pos:start="241:104" pos:end="241:104">1</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

                <macro pos:start="245:17" pos:end="245:101"><name pos:start="245:17" pos:end="245:30">CHECKED_ALLOCZ</name><argument_list pos:start="245:31" pos:end="245:101">(<argument pos:start="245:32" pos:end="245:57">s-&gt;p_field_select_table[i]</argument>      , <argument pos:start="245:66" pos:end="245:100">mb_array_size * <literal type="number" pos:start="245:82" pos:end="245:82">2</literal> * sizeof(uint8_t)</argument>)</argument_list></macro>

            </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="251:5" pos:end="279:5"><if pos:start="251:5" pos:end="279:5">if <condition pos:start="251:8" pos:end="251:34">(<expr pos:start="251:9" pos:end="251:33"><name pos:start="251:9" pos:end="251:21"><name pos:start="251:9" pos:end="251:9">s</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:21">out_format</name></name> <operator pos:start="251:23" pos:end="251:24">==</operator> <name pos:start="251:26" pos:end="251:33">FMT_H263</name></expr>)</condition> <block pos:start="251:36" pos:end="279:5">{<block_content pos:start="255:9" pos:end="277:74">

        <comment type="block" pos:start="253:9" pos:end="253:23">/* ac values */</comment>

        <expr_stmt pos:start="255:9" pos:end="255:71"><expr pos:start="255:9" pos:end="255:70"><call pos:start="255:9" pos:end="255:70"><name pos:start="255:9" pos:end="255:22">CHECKED_ALLOCZ</name><argument_list pos:start="255:23" pos:end="255:70">(<argument pos:start="255:24" pos:end="255:37"><expr pos:start="255:24" pos:end="255:37"><name pos:start="255:24" pos:end="255:37"><name pos:start="255:24" pos:end="255:24">s</name><operator pos:start="255:25" pos:end="255:26">-&gt;</operator><name pos:start="255:27" pos:end="255:37">ac_val_base</name></name></expr></argument>, <argument pos:start="255:40" pos:end="255:69"><expr pos:start="255:40" pos:end="255:69"><name pos:start="255:40" pos:end="255:46">yc_size</name> <operator pos:start="255:48" pos:end="255:48">*</operator> <sizeof pos:start="255:50" pos:end="255:64">sizeof<argument_list pos:start="255:56" pos:end="255:64">(<argument pos:start="255:57" pos:end="255:63"><expr pos:start="255:57" pos:end="255:63"><name pos:start="255:57" pos:end="255:63">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="255:66" pos:end="255:66">*</operator> <literal type="number" pos:start="255:68" pos:end="255:69">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:57"><expr pos:start="257:9" pos:end="257:56"><name pos:start="257:9" pos:end="257:20"><name pos:start="257:9" pos:end="257:9">s</name><operator pos:start="257:10" pos:end="257:11">-&gt;</operator><name pos:start="257:12" pos:end="257:17">ac_val</name><index pos:start="257:18" pos:end="257:20">[<expr pos:start="257:19" pos:end="257:19"><literal type="number" pos:start="257:19" pos:end="257:19">0</literal></expr>]</index></name> <operator pos:start="257:22" pos:end="257:22">=</operator> <name pos:start="257:24" pos:end="257:37"><name pos:start="257:24" pos:end="257:24">s</name><operator pos:start="257:25" pos:end="257:26">-&gt;</operator><name pos:start="257:27" pos:end="257:37">ac_val_base</name></name> <operator pos:start="257:39" pos:end="257:39">+</operator> <name pos:start="257:41" pos:end="257:52"><name pos:start="257:41" pos:end="257:41">s</name><operator pos:start="257:42" pos:end="257:43">-&gt;</operator><name pos:start="257:44" pos:end="257:52">b8_stride</name></name> <operator pos:start="257:54" pos:end="257:54">+</operator> <literal type="number" pos:start="257:56" pos:end="257:56">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:66"><expr pos:start="259:9" pos:end="259:65"><name pos:start="259:9" pos:end="259:20"><name pos:start="259:9" pos:end="259:9">s</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:17">ac_val</name><index pos:start="259:18" pos:end="259:20">[<expr pos:start="259:19" pos:end="259:19"><literal type="number" pos:start="259:19" pos:end="259:19">1</literal></expr>]</index></name> <operator pos:start="259:22" pos:end="259:22">=</operator> <name pos:start="259:24" pos:end="259:37"><name pos:start="259:24" pos:end="259:24">s</name><operator pos:start="259:25" pos:end="259:26">-&gt;</operator><name pos:start="259:27" pos:end="259:37">ac_val_base</name></name> <operator pos:start="259:39" pos:end="259:39">+</operator> <name pos:start="259:41" pos:end="259:46">y_size</name> <operator pos:start="259:48" pos:end="259:48">+</operator> <name pos:start="259:50" pos:end="259:61"><name pos:start="259:50" pos:end="259:50">s</name><operator pos:start="259:51" pos:end="259:52">-&gt;</operator><name pos:start="259:53" pos:end="259:61">mb_stride</name></name> <operator pos:start="259:63" pos:end="259:63">+</operator> <literal type="number" pos:start="259:65" pos:end="259:65">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="261:9" pos:end="261:45"><expr pos:start="261:9" pos:end="261:44"><name pos:start="261:9" pos:end="261:20"><name pos:start="261:9" pos:end="261:9">s</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:17">ac_val</name><index pos:start="261:18" pos:end="261:20">[<expr pos:start="261:19" pos:end="261:19"><literal type="number" pos:start="261:19" pos:end="261:19">2</literal></expr>]</index></name> <operator pos:start="261:22" pos:end="261:22">=</operator> <name pos:start="261:24" pos:end="261:35"><name pos:start="261:24" pos:end="261:24">s</name><operator pos:start="261:25" pos:end="261:26">-&gt;</operator><name pos:start="261:27" pos:end="261:32">ac_val</name><index pos:start="261:33" pos:end="261:35">[<expr pos:start="261:34" pos:end="261:34"><literal type="number" pos:start="261:34" pos:end="261:34">1</literal></expr>]</index></name> <operator pos:start="261:37" pos:end="261:37">+</operator> <name pos:start="261:39" pos:end="261:44">c_size</name></expr>;</expr_stmt>



        <comment type="block" pos:start="265:9" pos:end="265:24">/* cbp values */</comment>

        <expr_stmt pos:start="267:9" pos:end="267:52"><expr pos:start="267:9" pos:end="267:51"><call pos:start="267:9" pos:end="267:51"><name pos:start="267:9" pos:end="267:22">CHECKED_ALLOCZ</name><argument_list pos:start="267:23" pos:end="267:51">(<argument pos:start="267:24" pos:end="267:42"><expr pos:start="267:24" pos:end="267:42"><name pos:start="267:24" pos:end="267:42"><name pos:start="267:24" pos:end="267:24">s</name><operator pos:start="267:25" pos:end="267:26">-&gt;</operator><name pos:start="267:27" pos:end="267:42">coded_block_base</name></name></expr></argument>, <argument pos:start="267:45" pos:end="267:50"><expr pos:start="267:45" pos:end="267:50"><name pos:start="267:45" pos:end="267:50">y_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:63"><expr pos:start="269:9" pos:end="269:62"><name pos:start="269:9" pos:end="269:22"><name pos:start="269:9" pos:end="269:9">s</name><operator pos:start="269:10" pos:end="269:11">-&gt;</operator><name pos:start="269:12" pos:end="269:22">coded_block</name></name><operator pos:start="269:23" pos:end="269:23">=</operator> <name pos:start="269:25" pos:end="269:43"><name pos:start="269:25" pos:end="269:25">s</name><operator pos:start="269:26" pos:end="269:27">-&gt;</operator><name pos:start="269:28" pos:end="269:43">coded_block_base</name></name> <operator pos:start="269:45" pos:end="269:45">+</operator> <name pos:start="269:47" pos:end="269:58"><name pos:start="269:47" pos:end="269:47">s</name><operator pos:start="269:48" pos:end="269:49">-&gt;</operator><name pos:start="269:50" pos:end="269:58">b8_stride</name></name> <operator pos:start="269:60" pos:end="269:60">+</operator> <literal type="number" pos:start="269:62" pos:end="269:62">1</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="273:9" pos:end="273:36">/* cbp, ac_pred, pred_dir */</comment>

        <macro pos:start="275:9" pos:end="275:71"><name pos:start="275:9" pos:end="275:22">CHECKED_ALLOCZ</name><argument_list pos:start="275:23" pos:end="275:71">(<argument pos:start="275:24" pos:end="275:35">s-&gt;cbp_table</argument>  , <argument pos:start="275:40" pos:end="275:70">mb_array_size * sizeof(uint8_t)</argument>)</argument_list></macro>

        <macro pos:start="277:9" pos:end="277:74"><name pos:start="277:9" pos:end="277:22">CHECKED_ALLOCZ</name><argument_list pos:start="277:23" pos:end="277:74">(<argument pos:start="277:24" pos:end="277:40">s-&gt;pred_dir_table</argument>, <argument pos:start="277:43" pos:end="277:73">mb_array_size * sizeof(uint8_t)</argument>)</argument_list></macro>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="283:5" pos:end="301:5"><if pos:start="283:5" pos:end="301:5">if <condition pos:start="283:8" pos:end="283:53">(<expr pos:start="283:9" pos:end="283:52"><name pos:start="283:9" pos:end="283:20"><name pos:start="283:9" pos:end="283:9">s</name><operator pos:start="283:10" pos:end="283:11">-&gt;</operator><name pos:start="283:12" pos:end="283:20">h263_pred</name></name> <operator pos:start="283:22" pos:end="283:23">||</operator> <name pos:start="283:25" pos:end="283:36"><name pos:start="283:25" pos:end="283:25">s</name><operator pos:start="283:26" pos:end="283:27">-&gt;</operator><name pos:start="283:28" pos:end="283:36">h263_plus</name></name> <operator pos:start="283:38" pos:end="283:39">||</operator> <operator pos:start="283:41" pos:end="283:41">!</operator><name pos:start="283:42" pos:end="283:52"><name pos:start="283:42" pos:end="283:42">s</name><operator pos:start="283:43" pos:end="283:44">-&gt;</operator><name pos:start="283:45" pos:end="283:52">encoding</name></name></expr>)</condition> <block pos:start="283:55" pos:end="301:5">{<block_content pos:start="289:9" pos:end="299:37">

        <comment type="block" pos:start="285:9" pos:end="285:23">/* dc values */</comment>

        <comment type="line" pos:start="287:9" pos:end="287:64">//MN: we need these for error resilience of intra-frames</comment>

        <expr_stmt pos:start="289:9" pos:end="289:66"><expr pos:start="289:9" pos:end="289:65"><call pos:start="289:9" pos:end="289:65"><name pos:start="289:9" pos:end="289:22">CHECKED_ALLOCZ</name><argument_list pos:start="289:23" pos:end="289:65">(<argument pos:start="289:24" pos:end="289:37"><expr pos:start="289:24" pos:end="289:37"><name pos:start="289:24" pos:end="289:37"><name pos:start="289:24" pos:end="289:24">s</name><operator pos:start="289:25" pos:end="289:26">-&gt;</operator><name pos:start="289:27" pos:end="289:37">dc_val_base</name></name></expr></argument>, <argument pos:start="289:40" pos:end="289:64"><expr pos:start="289:40" pos:end="289:64"><name pos:start="289:40" pos:end="289:46">yc_size</name> <operator pos:start="289:48" pos:end="289:48">*</operator> <sizeof pos:start="289:50" pos:end="289:64">sizeof<argument_list pos:start="289:56" pos:end="289:64">(<argument pos:start="289:57" pos:end="289:63"><expr pos:start="289:57" pos:end="289:63"><name pos:start="289:57" pos:end="289:63">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:57"><expr pos:start="291:9" pos:end="291:56"><name pos:start="291:9" pos:end="291:20"><name pos:start="291:9" pos:end="291:9">s</name><operator pos:start="291:10" pos:end="291:11">-&gt;</operator><name pos:start="291:12" pos:end="291:17">dc_val</name><index pos:start="291:18" pos:end="291:20">[<expr pos:start="291:19" pos:end="291:19"><literal type="number" pos:start="291:19" pos:end="291:19">0</literal></expr>]</index></name> <operator pos:start="291:22" pos:end="291:22">=</operator> <name pos:start="291:24" pos:end="291:37"><name pos:start="291:24" pos:end="291:24">s</name><operator pos:start="291:25" pos:end="291:26">-&gt;</operator><name pos:start="291:27" pos:end="291:37">dc_val_base</name></name> <operator pos:start="291:39" pos:end="291:39">+</operator> <name pos:start="291:41" pos:end="291:52"><name pos:start="291:41" pos:end="291:41">s</name><operator pos:start="291:42" pos:end="291:43">-&gt;</operator><name pos:start="291:44" pos:end="291:52">b8_stride</name></name> <operator pos:start="291:54" pos:end="291:54">+</operator> <literal type="number" pos:start="291:56" pos:end="291:56">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:66"><expr pos:start="293:9" pos:end="293:65"><name pos:start="293:9" pos:end="293:20"><name pos:start="293:9" pos:end="293:9">s</name><operator pos:start="293:10" pos:end="293:11">-&gt;</operator><name pos:start="293:12" pos:end="293:17">dc_val</name><index pos:start="293:18" pos:end="293:20">[<expr pos:start="293:19" pos:end="293:19"><literal type="number" pos:start="293:19" pos:end="293:19">1</literal></expr>]</index></name> <operator pos:start="293:22" pos:end="293:22">=</operator> <name pos:start="293:24" pos:end="293:37"><name pos:start="293:24" pos:end="293:24">s</name><operator pos:start="293:25" pos:end="293:26">-&gt;</operator><name pos:start="293:27" pos:end="293:37">dc_val_base</name></name> <operator pos:start="293:39" pos:end="293:39">+</operator> <name pos:start="293:41" pos:end="293:46">y_size</name> <operator pos:start="293:48" pos:end="293:48">+</operator> <name pos:start="293:50" pos:end="293:61"><name pos:start="293:50" pos:end="293:50">s</name><operator pos:start="293:51" pos:end="293:52">-&gt;</operator><name pos:start="293:53" pos:end="293:61">mb_stride</name></name> <operator pos:start="293:63" pos:end="293:63">+</operator> <literal type="number" pos:start="293:65" pos:end="293:65">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="295:9" pos:end="295:45"><expr pos:start="295:9" pos:end="295:44"><name pos:start="295:9" pos:end="295:20"><name pos:start="295:9" pos:end="295:9">s</name><operator pos:start="295:10" pos:end="295:11">-&gt;</operator><name pos:start="295:12" pos:end="295:17">dc_val</name><index pos:start="295:18" pos:end="295:20">[<expr pos:start="295:19" pos:end="295:19"><literal type="number" pos:start="295:19" pos:end="295:19">2</literal></expr>]</index></name> <operator pos:start="295:22" pos:end="295:22">=</operator> <name pos:start="295:24" pos:end="295:35"><name pos:start="295:24" pos:end="295:24">s</name><operator pos:start="295:25" pos:end="295:26">-&gt;</operator><name pos:start="295:27" pos:end="295:32">dc_val</name><index pos:start="295:33" pos:end="295:35">[<expr pos:start="295:34" pos:end="295:34"><literal type="number" pos:start="295:34" pos:end="295:34">1</literal></expr>]</index></name> <operator pos:start="295:37" pos:end="295:37">+</operator> <name pos:start="295:39" pos:end="295:44">c_size</name></expr>;</expr_stmt>

        <for pos:start="297:9" pos:end="299:37">for<control pos:start="297:12" pos:end="297:30">(<init pos:start="297:13" pos:end="297:16"><expr pos:start="297:13" pos:end="297:15"><name pos:start="297:13" pos:end="297:13">i</name><operator pos:start="297:14" pos:end="297:14">=</operator><literal type="number" pos:start="297:15" pos:end="297:15">0</literal></expr>;</init><condition pos:start="297:17" pos:end="297:26"><expr pos:start="297:17" pos:end="297:25"><name pos:start="297:17" pos:end="297:17">i</name><operator pos:start="297:18" pos:end="297:18">&lt;</operator><name pos:start="297:19" pos:end="297:25">yc_size</name></expr>;</condition><incr pos:start="297:27" pos:end="297:29"><expr pos:start="297:27" pos:end="297:29"><name pos:start="297:27" pos:end="297:27">i</name><operator pos:start="297:28" pos:end="297:29">++</operator></expr></incr>)</control><block type="pseudo" pos:start="299:13" pos:end="299:37"><block_content pos:start="299:13" pos:end="299:37">

            <expr_stmt pos:start="299:13" pos:end="299:37"><expr pos:start="299:13" pos:end="299:36"><name pos:start="299:13" pos:end="299:29"><name pos:start="299:13" pos:end="299:13">s</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:26">dc_val_base</name><index pos:start="299:27" pos:end="299:29">[<expr pos:start="299:28" pos:end="299:28"><name pos:start="299:28" pos:end="299:28">i</name></expr>]</index></name> <operator pos:start="299:31" pos:end="299:31">=</operator> <literal type="number" pos:start="299:33" pos:end="299:36">1024</literal></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="305:5" pos:end="305:35">/* which mb is a intra block */</comment>

    <expr_stmt pos:start="307:5" pos:end="307:52"><expr pos:start="307:5" pos:end="307:51"><call pos:start="307:5" pos:end="307:51"><name pos:start="307:5" pos:end="307:18">CHECKED_ALLOCZ</name><argument_list pos:start="307:19" pos:end="307:51">(<argument pos:start="307:20" pos:end="307:35"><expr pos:start="307:20" pos:end="307:35"><name pos:start="307:20" pos:end="307:35"><name pos:start="307:20" pos:end="307:20">s</name><operator pos:start="307:21" pos:end="307:22">-&gt;</operator><name pos:start="307:23" pos:end="307:35">mbintra_table</name></name></expr></argument>, <argument pos:start="307:38" pos:end="307:50"><expr pos:start="307:38" pos:end="307:50"><name pos:start="307:38" pos:end="307:50">mb_array_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="309:47"><expr pos:start="309:5" pos:end="309:46"><call pos:start="309:5" pos:end="309:46"><name pos:start="309:5" pos:end="309:10">memset</name><argument_list pos:start="309:11" pos:end="309:46">(<argument pos:start="309:12" pos:end="309:27"><expr pos:start="309:12" pos:end="309:27"><name pos:start="309:12" pos:end="309:27"><name pos:start="309:12" pos:end="309:12">s</name><operator pos:start="309:13" pos:end="309:14">-&gt;</operator><name pos:start="309:15" pos:end="309:27">mbintra_table</name></name></expr></argument>, <argument pos:start="309:30" pos:end="309:30"><expr pos:start="309:30" pos:end="309:30"><literal type="number" pos:start="309:30" pos:end="309:30">1</literal></expr></argument>, <argument pos:start="309:33" pos:end="309:45"><expr pos:start="309:33" pos:end="309:45"><name pos:start="309:33" pos:end="309:45">mb_array_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="313:5" pos:end="313:36">/* init macroblock skip table */</comment>

    <expr_stmt pos:start="315:5" pos:end="315:53"><expr pos:start="315:5" pos:end="315:52"><call pos:start="315:5" pos:end="315:52"><name pos:start="315:5" pos:end="315:18">CHECKED_ALLOCZ</name><argument_list pos:start="315:19" pos:end="315:52">(<argument pos:start="315:20" pos:end="315:34"><expr pos:start="315:20" pos:end="315:34"><name pos:start="315:20" pos:end="315:34"><name pos:start="315:20" pos:end="315:20">s</name><operator pos:start="315:21" pos:end="315:22">-&gt;</operator><name pos:start="315:23" pos:end="315:34">mbskip_table</name></name></expr></argument>, <argument pos:start="315:37" pos:end="315:51"><expr pos:start="315:37" pos:end="315:51"><name pos:start="315:37" pos:end="315:49">mb_array_size</name><operator pos:start="315:50" pos:end="315:50">+</operator><literal type="number" pos:start="315:51" pos:end="315:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="317:5" pos:end="317:60">//Note the +1 is for a quicker mpeg4 slice_end detection</comment>

    <expr_stmt pos:start="319:5" pos:end="319:68"><expr pos:start="319:5" pos:end="319:67"><call pos:start="319:5" pos:end="319:67"><name pos:start="319:5" pos:end="319:18">CHECKED_ALLOCZ</name><argument_list pos:start="319:19" pos:end="319:67">(<argument pos:start="319:20" pos:end="319:37"><expr pos:start="319:20" pos:end="319:37"><name pos:start="319:20" pos:end="319:37"><name pos:start="319:20" pos:end="319:20">s</name><operator pos:start="319:21" pos:end="319:22">-&gt;</operator><name pos:start="319:23" pos:end="319:37">prev_pict_types</name></name></expr></argument>, <argument pos:start="319:40" pos:end="319:66"><expr pos:start="319:40" pos:end="319:66"><name pos:start="319:40" pos:end="319:66">PREV_PICT_TYPES_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="323:5" pos:end="323:31"><expr pos:start="323:5" pos:end="323:30"><name pos:start="323:5" pos:end="323:26"><name pos:start="323:5" pos:end="323:5">s</name><operator pos:start="323:6" pos:end="323:7">-&gt;</operator><name pos:start="323:8" pos:end="323:20">parse_context</name><operator pos:start="323:21" pos:end="323:21">.</operator><name pos:start="323:22" pos:end="323:26">state</name></name><operator pos:start="323:27" pos:end="323:27">=</operator> <operator pos:start="323:29" pos:end="323:29">-</operator><literal type="number" pos:start="323:30" pos:end="323:30">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="325:5" pos:end="333:5"><if pos:start="325:5" pos:end="333:5">if<condition pos:start="325:7" pos:end="325:88">(<expr pos:start="325:8" pos:end="325:87"><operator pos:start="325:8" pos:end="325:8">(</operator><name pos:start="325:9" pos:end="325:23"><name pos:start="325:9" pos:end="325:9">s</name><operator pos:start="325:10" pos:end="325:11">-&gt;</operator><name pos:start="325:12" pos:end="325:16">avctx</name><operator pos:start="325:17" pos:end="325:18">-&gt;</operator><name pos:start="325:19" pos:end="325:23">debug</name></name><operator pos:start="325:24" pos:end="325:24">&amp;</operator><operator pos:start="325:25" pos:end="325:25">(</operator><name pos:start="325:26" pos:end="325:40">FF_DEBUG_VIS_QP</name><operator pos:start="325:41" pos:end="325:41">|</operator><name pos:start="325:42" pos:end="325:61">FF_DEBUG_VIS_MB_TYPE</name><operator pos:start="325:62" pos:end="325:62">)</operator><operator pos:start="325:63" pos:end="325:63">)</operator> <operator pos:start="325:65" pos:end="325:66">||</operator> <operator pos:start="325:68" pos:end="325:68">(</operator><name pos:start="325:69" pos:end="325:86"><name pos:start="325:69" pos:end="325:69">s</name><operator pos:start="325:70" pos:end="325:71">-&gt;</operator><name pos:start="325:72" pos:end="325:76">avctx</name><operator pos:start="325:77" pos:end="325:78">-&gt;</operator><name pos:start="325:79" pos:end="325:86">debug_mv</name></name><operator pos:start="325:87" pos:end="325:87">)</operator></expr>)</condition><block pos:start="325:89" pos:end="333:5">{<block_content pos:start="327:8" pos:end="331:106">

       <expr_stmt pos:start="327:8" pos:end="327:112"><expr pos:start="327:8" pos:end="327:111"><name pos:start="327:8" pos:end="327:33"><name pos:start="327:8" pos:end="327:8">s</name><operator pos:start="327:9" pos:end="327:10">-&gt;</operator><name pos:start="327:11" pos:end="327:30">visualization_buffer</name><index pos:start="327:31" pos:end="327:33">[<expr pos:start="327:32" pos:end="327:32"><literal type="number" pos:start="327:32" pos:end="327:32">0</literal></expr>]</index></name> <operator pos:start="327:35" pos:end="327:35">=</operator> <call pos:start="327:37" pos:end="327:111"><name pos:start="327:37" pos:end="327:45">av_malloc</name><argument_list pos:start="327:46" pos:end="327:111">(<argument pos:start="327:47" pos:end="327:110"><expr pos:start="327:47" pos:end="327:110"><operator pos:start="327:47" pos:end="327:47">(</operator><name pos:start="327:48" pos:end="327:58"><name pos:start="327:48" pos:end="327:48">s</name><operator pos:start="327:49" pos:end="327:50">-&gt;</operator><name pos:start="327:51" pos:end="327:58">mb_width</name></name><operator pos:start="327:59" pos:end="327:59">*</operator><literal type="number" pos:start="327:60" pos:end="327:63">16</literal> <operator pos:start="327:63" pos:end="327:63">+</operator> <literal type="number" pos:start="327:65" pos:end="327:65">2</literal><operator pos:start="327:66" pos:end="327:66">*</operator><name pos:start="327:67" pos:end="327:76">EDGE_WIDTH</name><operator pos:start="327:77" pos:end="327:77">)</operator> <operator pos:start="327:79" pos:end="327:79">*</operator> <name pos:start="327:81" pos:end="327:92"><name pos:start="327:81" pos:end="327:81">s</name><operator pos:start="327:82" pos:end="327:83">-&gt;</operator><name pos:start="327:84" pos:end="327:92">mb_height</name></name><operator pos:start="327:93" pos:end="327:93">*</operator><literal type="number" pos:start="327:94" pos:end="327:97">16</literal> <operator pos:start="327:97" pos:end="327:97">+</operator> <literal type="number" pos:start="327:99" pos:end="327:99">2</literal><operator pos:start="327:100" pos:end="327:100">*</operator><name pos:start="327:101" pos:end="327:110">EDGE_WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <expr_stmt pos:start="329:8" pos:end="329:106"><expr pos:start="329:8" pos:end="329:105"><name pos:start="329:8" pos:end="329:33"><name pos:start="329:8" pos:end="329:8">s</name><operator pos:start="329:9" pos:end="329:10">-&gt;</operator><name pos:start="329:11" pos:end="329:30">visualization_buffer</name><index pos:start="329:31" pos:end="329:33">[<expr pos:start="329:32" pos:end="329:32"><literal type="number" pos:start="329:32" pos:end="329:32">1</literal></expr>]</index></name> <operator pos:start="329:35" pos:end="329:35">=</operator> <call pos:start="329:37" pos:end="329:105"><name pos:start="329:37" pos:end="329:45">av_malloc</name><argument_list pos:start="329:46" pos:end="329:105">(<argument pos:start="329:47" pos:end="329:104"><expr pos:start="329:47" pos:end="329:104"><operator pos:start="329:47" pos:end="329:47">(</operator><name pos:start="329:48" pos:end="329:58"><name pos:start="329:48" pos:end="329:48">s</name><operator pos:start="329:49" pos:end="329:50">-&gt;</operator><name pos:start="329:51" pos:end="329:58">mb_width</name></name><operator pos:start="329:59" pos:end="329:59">*</operator><literal type="number" pos:start="329:60" pos:end="329:62">8</literal> <operator pos:start="329:62" pos:end="329:62">+</operator> <name pos:start="329:64" pos:end="329:73">EDGE_WIDTH</name><operator pos:start="329:74" pos:end="329:74">)</operator> <operator pos:start="329:76" pos:end="329:76">*</operator> <name pos:start="329:78" pos:end="329:89"><name pos:start="329:78" pos:end="329:78">s</name><operator pos:start="329:79" pos:end="329:80">-&gt;</operator><name pos:start="329:81" pos:end="329:89">mb_height</name></name><operator pos:start="329:90" pos:end="329:90">*</operator><literal type="number" pos:start="329:91" pos:end="329:93">8</literal> <operator pos:start="329:93" pos:end="329:93">+</operator> <name pos:start="329:95" pos:end="329:104">EDGE_WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <expr_stmt pos:start="331:8" pos:end="331:106"><expr pos:start="331:8" pos:end="331:105"><name pos:start="331:8" pos:end="331:33"><name pos:start="331:8" pos:end="331:8">s</name><operator pos:start="331:9" pos:end="331:10">-&gt;</operator><name pos:start="331:11" pos:end="331:30">visualization_buffer</name><index pos:start="331:31" pos:end="331:33">[<expr pos:start="331:32" pos:end="331:32"><literal type="number" pos:start="331:32" pos:end="331:32">2</literal></expr>]</index></name> <operator pos:start="331:35" pos:end="331:35">=</operator> <call pos:start="331:37" pos:end="331:105"><name pos:start="331:37" pos:end="331:45">av_malloc</name><argument_list pos:start="331:46" pos:end="331:105">(<argument pos:start="331:47" pos:end="331:104"><expr pos:start="331:47" pos:end="331:104"><operator pos:start="331:47" pos:end="331:47">(</operator><name pos:start="331:48" pos:end="331:58"><name pos:start="331:48" pos:end="331:48">s</name><operator pos:start="331:49" pos:end="331:50">-&gt;</operator><name pos:start="331:51" pos:end="331:58">mb_width</name></name><operator pos:start="331:59" pos:end="331:59">*</operator><literal type="number" pos:start="331:60" pos:end="331:62">8</literal> <operator pos:start="331:62" pos:end="331:62">+</operator> <name pos:start="331:64" pos:end="331:73">EDGE_WIDTH</name><operator pos:start="331:74" pos:end="331:74">)</operator> <operator pos:start="331:76" pos:end="331:76">*</operator> <name pos:start="331:78" pos:end="331:89"><name pos:start="331:78" pos:end="331:78">s</name><operator pos:start="331:79" pos:end="331:80">-&gt;</operator><name pos:start="331:81" pos:end="331:89">mb_height</name></name><operator pos:start="331:90" pos:end="331:90">*</operator><literal type="number" pos:start="331:91" pos:end="331:93">8</literal> <operator pos:start="331:93" pos:end="331:93">+</operator> <name pos:start="331:95" pos:end="331:104">EDGE_WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="337:5" pos:end="337:31"><expr pos:start="337:5" pos:end="337:30"><name pos:start="337:5" pos:end="337:26"><name pos:start="337:5" pos:end="337:5">s</name><operator pos:start="337:6" pos:end="337:7">-&gt;</operator><name pos:start="337:8" pos:end="337:26">context_initialized</name></name> <operator pos:start="337:28" pos:end="337:28">=</operator> <literal type="number" pos:start="337:30" pos:end="337:30">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="341:5" pos:end="341:28"><expr pos:start="341:5" pos:end="341:27"><name pos:start="341:5" pos:end="341:24"><name pos:start="341:5" pos:end="341:5">s</name><operator pos:start="341:6" pos:end="341:7">-&gt;</operator><name pos:start="341:8" pos:end="341:21">thread_context</name><index pos:start="341:22" pos:end="341:24">[<expr pos:start="341:23" pos:end="341:23"><literal type="number" pos:start="341:23" pos:end="341:23">0</literal></expr>]</index></name><operator pos:start="341:25" pos:end="341:25">=</operator> <name pos:start="341:27" pos:end="341:27">s</name></expr>;</expr_stmt>

    <comment type="block" pos:start="343:5" pos:end="345:63">/* h264 does thread context setup itself, but it needs context[0]

     * to be fully initialized for the error resilience code */</comment>

    <expr_stmt pos:start="347:5" pos:end="347:72"><expr pos:start="347:5" pos:end="347:71"><name pos:start="347:5" pos:end="347:11">threads</name> <operator pos:start="347:13" pos:end="347:13">=</operator> <ternary pos:start="347:15" pos:end="347:71"><condition pos:start="347:15" pos:end="347:44"><expr pos:start="347:15" pos:end="347:42"><name pos:start="347:15" pos:end="347:25"><name pos:start="347:15" pos:end="347:15">s</name><operator pos:start="347:16" pos:end="347:17">-&gt;</operator><name pos:start="347:18" pos:end="347:25">codec_id</name></name> <operator pos:start="347:27" pos:end="347:28">==</operator> <name pos:start="347:30" pos:end="347:42">CODEC_ID_H264</name></expr> ?</condition><then pos:start="347:46" pos:end="347:46"> <expr pos:start="347:46" pos:end="347:46"><literal type="number" pos:start="347:46" pos:end="347:46">1</literal></expr> </then><else pos:start="347:48" pos:end="347:71">: <expr pos:start="347:50" pos:end="347:71"><name pos:start="347:50" pos:end="347:71"><name pos:start="347:50" pos:end="347:50">s</name><operator pos:start="347:51" pos:end="347:52">-&gt;</operator><name pos:start="347:53" pos:end="347:57">avctx</name><operator pos:start="347:58" pos:end="347:59">-&gt;</operator><name pos:start="347:60" pos:end="347:71">thread_count</name></name></expr></else></ternary></expr>;</expr_stmt>



    <for pos:start="351:5" pos:end="357:5">for<control pos:start="351:8" pos:end="351:28">(<init pos:start="351:9" pos:end="351:12"><expr pos:start="351:9" pos:end="351:11"><name pos:start="351:9" pos:end="351:9">i</name><operator pos:start="351:10" pos:end="351:10">=</operator><literal type="number" pos:start="351:11" pos:end="351:11">1</literal></expr>;</init> <condition pos:start="351:14" pos:end="351:23"><expr pos:start="351:14" pos:end="351:22"><name pos:start="351:14" pos:end="351:14">i</name><operator pos:start="351:15" pos:end="351:15">&lt;</operator><name pos:start="351:16" pos:end="351:22">threads</name></expr>;</condition> <incr pos:start="351:25" pos:end="351:27"><expr pos:start="351:25" pos:end="351:27"><name pos:start="351:25" pos:end="351:25">i</name><operator pos:start="351:26" pos:end="351:27">++</operator></expr></incr>)</control><block pos:start="351:29" pos:end="357:5">{<block_content pos:start="353:9" pos:end="355:64">

        <expr_stmt pos:start="353:9" pos:end="353:64"><expr pos:start="353:9" pos:end="353:63"><name pos:start="353:9" pos:end="353:28"><name pos:start="353:9" pos:end="353:9">s</name><operator pos:start="353:10" pos:end="353:11">-&gt;</operator><name pos:start="353:12" pos:end="353:25">thread_context</name><index pos:start="353:26" pos:end="353:28">[<expr pos:start="353:27" pos:end="353:27"><name pos:start="353:27" pos:end="353:27">i</name></expr>]</index></name><operator pos:start="353:29" pos:end="353:29">=</operator> <call pos:start="353:31" pos:end="353:63"><name pos:start="353:31" pos:end="353:39">av_malloc</name><argument_list pos:start="353:40" pos:end="353:63">(<argument pos:start="353:41" pos:end="353:62"><expr pos:start="353:41" pos:end="353:62"><sizeof pos:start="353:41" pos:end="353:62">sizeof<argument_list pos:start="353:47" pos:end="353:62">(<argument pos:start="353:48" pos:end="353:61"><expr pos:start="353:48" pos:end="353:61"><name pos:start="353:48" pos:end="353:61">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:64"><expr pos:start="355:9" pos:end="355:63"><call pos:start="355:9" pos:end="355:63"><name pos:start="355:9" pos:end="355:14">memcpy</name><argument_list pos:start="355:15" pos:end="355:63">(<argument pos:start="355:16" pos:end="355:35"><expr pos:start="355:16" pos:end="355:35"><name pos:start="355:16" pos:end="355:35"><name pos:start="355:16" pos:end="355:16">s</name><operator pos:start="355:17" pos:end="355:18">-&gt;</operator><name pos:start="355:19" pos:end="355:32">thread_context</name><index pos:start="355:33" pos:end="355:35">[<expr pos:start="355:34" pos:end="355:34"><name pos:start="355:34" pos:end="355:34">i</name></expr>]</index></name></expr></argument>, <argument pos:start="355:38" pos:end="355:38"><expr pos:start="355:38" pos:end="355:38"><name pos:start="355:38" pos:end="355:38">s</name></expr></argument>, <argument pos:start="355:41" pos:end="355:62"><expr pos:start="355:41" pos:end="355:62"><sizeof pos:start="355:41" pos:end="355:62">sizeof<argument_list pos:start="355:47" pos:end="355:62">(<argument pos:start="355:48" pos:end="355:61"><expr pos:start="355:48" pos:end="355:61"><name pos:start="355:48" pos:end="355:61">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="361:5" pos:end="371:5">for<control pos:start="361:8" pos:end="361:28">(<init pos:start="361:9" pos:end="361:12"><expr pos:start="361:9" pos:end="361:11"><name pos:start="361:9" pos:end="361:9">i</name><operator pos:start="361:10" pos:end="361:10">=</operator><literal type="number" pos:start="361:11" pos:end="361:11">0</literal></expr>;</init> <condition pos:start="361:14" pos:end="361:23"><expr pos:start="361:14" pos:end="361:22"><name pos:start="361:14" pos:end="361:14">i</name><operator pos:start="361:15" pos:end="361:15">&lt;</operator><name pos:start="361:16" pos:end="361:22">threads</name></expr>;</condition> <incr pos:start="361:25" pos:end="361:27"><expr pos:start="361:25" pos:end="361:27"><name pos:start="361:25" pos:end="361:25">i</name><operator pos:start="361:26" pos:end="361:27">++</operator></expr></incr>)</control><block pos:start="361:29" pos:end="371:5">{<block_content pos:start="363:9" pos:end="369:115">

        <if_stmt pos:start="363:9" pos:end="365:21"><if pos:start="363:9" pos:end="365:21">if<condition pos:start="363:11" pos:end="363:63">(<expr pos:start="363:12" pos:end="363:62"><call pos:start="363:12" pos:end="363:58"><name pos:start="363:12" pos:end="363:33">init_duplicate_context</name><argument_list pos:start="363:34" pos:end="363:58">(<argument pos:start="363:35" pos:end="363:54"><expr pos:start="363:35" pos:end="363:54"><name pos:start="363:35" pos:end="363:54"><name pos:start="363:35" pos:end="363:35">s</name><operator pos:start="363:36" pos:end="363:37">-&gt;</operator><name pos:start="363:38" pos:end="363:51">thread_context</name><index pos:start="363:52" pos:end="363:54">[<expr pos:start="363:53" pos:end="363:53"><name pos:start="363:53" pos:end="363:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="363:57" pos:end="363:57"><expr pos:start="363:57" pos:end="363:57"><name pos:start="363:57" pos:end="363:57">s</name></expr></argument>)</argument_list></call> <operator pos:start="363:60" pos:end="363:60">&lt;</operator> <literal type="number" pos:start="363:62" pos:end="363:62">0</literal></expr>)</condition><block type="pseudo" pos:start="365:12" pos:end="365:21"><block_content pos:start="365:12" pos:end="365:21">

           <goto pos:start="365:12" pos:end="365:21">goto <name pos:start="365:17" pos:end="365:20">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:115"><expr pos:start="367:9" pos:end="367:114"><name pos:start="367:9" pos:end="367:28"><name pos:start="367:9" pos:end="367:9">s</name><operator pos:start="367:10" pos:end="367:11">-&gt;</operator><name pos:start="367:12" pos:end="367:25">thread_context</name><index pos:start="367:26" pos:end="367:28">[<expr pos:start="367:27" pos:end="367:27"><name pos:start="367:27" pos:end="367:27">i</name></expr>]</index></name><operator pos:start="367:29" pos:end="367:30">-&gt;</operator><name pos:start="367:31" pos:end="367:40">start_mb_y</name><operator pos:start="367:41" pos:end="367:41">=</operator> <operator pos:start="367:43" pos:end="367:43">(</operator><name pos:start="367:44" pos:end="367:55"><name pos:start="367:44" pos:end="367:44">s</name><operator pos:start="367:45" pos:end="367:46">-&gt;</operator><name pos:start="367:47" pos:end="367:55">mb_height</name></name><operator pos:start="367:56" pos:end="367:56">*</operator><operator pos:start="367:57" pos:end="367:57">(</operator><name pos:start="367:58" pos:end="367:58">i</name>  <operator pos:start="367:61" pos:end="367:61">)</operator> <operator pos:start="367:63" pos:end="367:63">+</operator> <name pos:start="367:65" pos:end="367:86"><name pos:start="367:65" pos:end="367:65">s</name><operator pos:start="367:66" pos:end="367:67">-&gt;</operator><name pos:start="367:68" pos:end="367:72">avctx</name><operator pos:start="367:73" pos:end="367:74">-&gt;</operator><name pos:start="367:75" pos:end="367:86">thread_count</name></name><operator pos:start="367:87" pos:end="367:87">/</operator><literal type="number" pos:start="367:88" pos:end="367:88">2</literal><operator pos:start="367:89" pos:end="367:89">)</operator> <operator pos:start="367:91" pos:end="367:91">/</operator> <name pos:start="367:93" pos:end="367:114"><name pos:start="367:93" pos:end="367:93">s</name><operator pos:start="367:94" pos:end="367:95">-&gt;</operator><name pos:start="367:96" pos:end="367:100">avctx</name><operator pos:start="367:101" pos:end="367:102">-&gt;</operator><name pos:start="367:103" pos:end="367:114">thread_count</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="369:9" pos:end="369:115"><expr pos:start="369:9" pos:end="369:114"><name pos:start="369:9" pos:end="369:28"><name pos:start="369:9" pos:end="369:9">s</name><operator pos:start="369:10" pos:end="369:11">-&gt;</operator><name pos:start="369:12" pos:end="369:25">thread_context</name><index pos:start="369:26" pos:end="369:28">[<expr pos:start="369:27" pos:end="369:27"><name pos:start="369:27" pos:end="369:27">i</name></expr>]</index></name><operator pos:start="369:29" pos:end="369:30">-&gt;</operator><name pos:start="369:31" pos:end="369:38">end_mb_y</name>  <operator pos:start="369:41" pos:end="369:41">=</operator> <operator pos:start="369:43" pos:end="369:43">(</operator><name pos:start="369:44" pos:end="369:55"><name pos:start="369:44" pos:end="369:44">s</name><operator pos:start="369:45" pos:end="369:46">-&gt;</operator><name pos:start="369:47" pos:end="369:55">mb_height</name></name><operator pos:start="369:56" pos:end="369:56">*</operator><operator pos:start="369:57" pos:end="369:57">(</operator><name pos:start="369:58" pos:end="369:58">i</name><operator pos:start="369:59" pos:end="369:59">+</operator><literal type="number" pos:start="369:60" pos:end="369:60">1</literal><operator pos:start="369:61" pos:end="369:61">)</operator> <operator pos:start="369:63" pos:end="369:63">+</operator> <name pos:start="369:65" pos:end="369:86"><name pos:start="369:65" pos:end="369:65">s</name><operator pos:start="369:66" pos:end="369:67">-&gt;</operator><name pos:start="369:68" pos:end="369:72">avctx</name><operator pos:start="369:73" pos:end="369:74">-&gt;</operator><name pos:start="369:75" pos:end="369:86">thread_count</name></name><operator pos:start="369:87" pos:end="369:87">/</operator><literal type="number" pos:start="369:88" pos:end="369:88">2</literal><operator pos:start="369:89" pos:end="369:89">)</operator> <operator pos:start="369:91" pos:end="369:91">/</operator> <name pos:start="369:93" pos:end="369:114"><name pos:start="369:93" pos:end="369:93">s</name><operator pos:start="369:94" pos:end="369:95">-&gt;</operator><name pos:start="369:96" pos:end="369:100">avctx</name><operator pos:start="369:101" pos:end="369:102">-&gt;</operator><name pos:start="369:103" pos:end="369:114">thread_count</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="375:5" pos:end="375:13">return <expr pos:start="375:12" pos:end="375:12"><literal type="number" pos:start="375:12" pos:end="375:12">0</literal></expr>;</return>

 <label pos:start="377:2" pos:end="377:6"><name pos:start="377:2" pos:end="377:5">fail</name>:</label>

    <expr_stmt pos:start="379:5" pos:end="379:22"><expr pos:start="379:5" pos:end="379:21"><call pos:start="379:5" pos:end="379:21"><name pos:start="379:5" pos:end="379:18">MPV_common_end</name><argument_list pos:start="379:19" pos:end="379:21">(<argument pos:start="379:20" pos:end="379:20"><expr pos:start="379:20" pos:end="379:20"><name pos:start="379:20" pos:end="379:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="381:5" pos:end="381:14">return <expr pos:start="381:12" pos:end="381:13"><operator pos:start="381:12" pos:end="381:12">-</operator><literal type="number" pos:start="381:13" pos:end="381:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
