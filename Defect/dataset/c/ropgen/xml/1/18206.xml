<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18206.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">process_work_frame</name><parameter_list pos:start="1:30" pos:end="1:51">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:45">AVFilterContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">FrameRateContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name> <init pos:start="5:25" pos:end="5:35">= <expr pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:29">ctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:35">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:20">work_pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">interpolate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if <condition pos:start="15:8" pos:end="15:15">(<expr pos:start="15:9" pos:end="15:14"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:14">f1</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:17"><if pos:start="19:5" pos:end="21:17">if <condition pos:start="19:8" pos:end="19:28">(<expr pos:start="19:9" pos:end="19:27"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">s</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:14">f0</name></name> <operator pos:start="19:16" pos:end="19:17">&amp;&amp;</operator> <operator pos:start="19:19" pos:end="19:19">!</operator><name pos:start="19:20" pos:end="19:27"><name pos:start="19:20" pos:end="19:20">s</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:27">flush</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:17"><block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:98"><expr pos:start="25:5" pos:end="25:97"><name pos:start="25:5" pos:end="25:12">work_pts</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:27">start_pts</name></name> <operator pos:start="25:29" pos:end="25:29">+</operator> <call pos:start="25:31" pos:end="25:97"><name pos:start="25:31" pos:end="25:42">av_rescale_q</name><argument_list pos:start="25:43" pos:end="25:97">(<argument pos:start="25:44" pos:end="25:47"><expr pos:start="25:44" pos:end="25:47"><name pos:start="25:44" pos:end="25:47"><name pos:start="25:44" pos:end="25:44">s</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:47">n</name></name></expr></argument>, <argument pos:start="25:50" pos:end="25:77"><expr pos:start="25:50" pos:end="25:77"><call pos:start="25:50" pos:end="25:77"><name pos:start="25:50" pos:end="25:57">av_inv_q</name><argument_list pos:start="25:58" pos:end="25:77">(<argument pos:start="25:59" pos:end="25:76"><expr pos:start="25:59" pos:end="25:76"><name pos:start="25:59" pos:end="25:76"><name pos:start="25:59" pos:end="25:59">s</name><operator pos:start="25:60" pos:end="25:61">-&gt;</operator><name pos:start="25:62" pos:end="25:76">dest_frame_rate</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:80" pos:end="25:96"><expr pos:start="25:80" pos:end="25:96"><name pos:start="25:80" pos:end="25:96"><name pos:start="25:80" pos:end="25:80">s</name><operator pos:start="25:81" pos:end="25:82">-&gt;</operator><name pos:start="25:83" pos:end="25:96">dest_time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="31:17"><if pos:start="29:5" pos:end="31:17">if <condition pos:start="29:8" pos:end="29:41">(<expr pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:16">work_pts</name> <operator pos:start="29:18" pos:end="29:19">&gt;=</operator> <name pos:start="29:21" pos:end="29:27"><name pos:start="29:21" pos:end="29:21">s</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:27">pts1</name></name> <operator pos:start="29:29" pos:end="29:30">&amp;&amp;</operator> <operator pos:start="29:32" pos:end="29:32">!</operator><name pos:start="29:33" pos:end="29:40"><name pos:start="29:33" pos:end="29:33">s</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:40">flush</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:17"><block_content pos:start="31:9" pos:end="31:17">

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="73:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:15">(<expr pos:start="35:9" pos:end="35:14"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">s</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:14">f0</name></name></expr>)</condition> <block pos:start="35:17" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:40">

        <expr_stmt pos:start="37:9" pos:end="37:40"><expr pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:15">work</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:39"><name pos:start="37:19" pos:end="37:32">av_frame_clone</name><argument_list pos:start="37:33" pos:end="37:39">(<argument pos:start="37:34" pos:end="37:38"><expr pos:start="37:34" pos:end="37:38"><name pos:start="37:34" pos:end="37:38"><name pos:start="37:34" pos:end="37:34">s</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:38">f1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="73:5">else <block pos:start="39:12" pos:end="73:5">{<block_content pos:start="41:9" pos:end="71:9">

        <if_stmt pos:start="41:9" pos:end="43:21"><if pos:start="41:9" pos:end="43:21">if <condition pos:start="41:12" pos:end="41:55">(<expr pos:start="41:13" pos:end="41:54"><name pos:start="41:13" pos:end="41:20">work_pts</name> <operator pos:start="41:22" pos:end="41:23">&gt;=</operator> <name pos:start="41:25" pos:end="41:31"><name pos:start="41:25" pos:end="41:25">s</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:31">pts1</name></name> <operator pos:start="41:33" pos:end="41:33">+</operator> <name pos:start="41:35" pos:end="41:42"><name pos:start="41:35" pos:end="41:35">s</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:42">delta</name></name> <operator pos:start="41:44" pos:end="41:45">&amp;&amp;</operator> <name pos:start="41:47" pos:end="41:54"><name pos:start="41:47" pos:end="41:47">s</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:54">flush</name></name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:21"><block_content pos:start="43:13" pos:end="43:21">

            <return pos:start="43:13" pos:end="43:21">return <expr pos:start="43:20" pos:end="43:20"><literal type="number" pos:start="43:20" pos:end="43:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:71"><expr pos:start="47:9" pos:end="47:70"><name pos:start="47:9" pos:end="47:19">interpolate</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <call pos:start="47:23" pos:end="47:70"><name pos:start="47:23" pos:end="47:32">av_rescale</name><argument_list pos:start="47:33" pos:end="47:70">(<argument pos:start="47:34" pos:end="47:51"><expr pos:start="47:34" pos:end="47:51"><name pos:start="47:34" pos:end="47:41">work_pts</name> <operator pos:start="47:43" pos:end="47:43">-</operator> <name pos:start="47:45" pos:end="47:51"><name pos:start="47:45" pos:end="47:45">s</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:51">pts0</name></name></expr></argument>, <argument pos:start="47:54" pos:end="47:59"><expr pos:start="47:54" pos:end="47:59"><name pos:start="47:54" pos:end="47:59"><name pos:start="47:54" pos:end="47:54">s</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:59">max</name></name></expr></argument>, <argument pos:start="47:62" pos:end="47:69"><expr pos:start="47:62" pos:end="47:69"><name pos:start="47:62" pos:end="47:69"><name pos:start="47:62" pos:end="47:62">s</name><operator pos:start="47:63" pos:end="47:64">-&gt;</operator><name pos:start="47:65" pos:end="47:69">delta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:86"><expr pos:start="49:9" pos:end="49:85"><call pos:start="49:9" pos:end="49:85"><name pos:start="49:9" pos:end="49:15">ff_dlog</name><argument_list pos:start="49:16" pos:end="49:85">(<argument pos:start="49:17" pos:end="49:19"><expr pos:start="49:17" pos:end="49:19"><name pos:start="49:17" pos:end="49:19">ctx</name></expr></argument>, <argument pos:start="49:22" pos:end="49:63"><expr pos:start="49:22" pos:end="49:63"><literal type="string" pos:start="49:22" pos:end="49:63">"process_work_frame() interpolate:%d/%d\n"</literal></expr></argument>, <argument pos:start="49:66" pos:end="49:76"><expr pos:start="49:66" pos:end="49:76"><name pos:start="49:66" pos:end="49:76">interpolate</name></expr></argument>, <argument pos:start="49:79" pos:end="49:84"><expr pos:start="49:79" pos:end="49:84"><name pos:start="49:79" pos:end="49:84"><name pos:start="49:79" pos:end="49:79">s</name><operator pos:start="49:80" pos:end="49:81">-&gt;</operator><name pos:start="49:82" pos:end="49:84">max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="71:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:40">(<expr pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:23">interpolate</name> <operator pos:start="51:25" pos:end="51:25">&gt;</operator> <name pos:start="51:27" pos:end="51:39"><name pos:start="51:27" pos:end="51:27">s</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:39">interp_end</name></name></expr>)</condition> <block pos:start="51:42" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:44">

            <expr_stmt pos:start="53:13" pos:end="53:44"><expr pos:start="53:13" pos:end="53:43"><name pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:19">work</name></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:43"><name pos:start="53:23" pos:end="53:36">av_frame_clone</name><argument_list pos:start="53:37" pos:end="53:43">(<argument pos:start="53:38" pos:end="53:42"><expr pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:38">s</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:42">f1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="55:11" pos:end="59:9">else if <condition pos:start="55:19" pos:end="55:49">(<expr pos:start="55:20" pos:end="55:48"><name pos:start="55:20" pos:end="55:30">interpolate</name> <operator pos:start="55:32" pos:end="55:32">&lt;</operator> <name pos:start="55:34" pos:end="55:48"><name pos:start="55:34" pos:end="55:34">s</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:48">interp_start</name></name></expr>)</condition> <block pos:start="55:51" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:44">

            <expr_stmt pos:start="57:13" pos:end="57:44"><expr pos:start="57:13" pos:end="57:43"><name pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:19">work</name></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <call pos:start="57:23" pos:end="57:43"><name pos:start="57:23" pos:end="57:36">av_frame_clone</name><argument_list pos:start="57:37" pos:end="57:43">(<argument pos:start="57:38" pos:end="57:42"><expr pos:start="57:38" pos:end="57:42"><name pos:start="57:38" pos:end="57:42"><name pos:start="57:38" pos:end="57:38">s</name><operator pos:start="57:39" pos:end="57:40">-&gt;</operator><name pos:start="57:41" pos:end="57:42">f0</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="71:9">else <block pos:start="59:16" pos:end="71:9">{<block_content pos:start="61:13" pos:end="69:86">

            <expr_stmt pos:start="61:13" pos:end="61:49"><expr pos:start="61:13" pos:end="61:48"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="61:48"><name pos:start="61:19" pos:end="61:30">blend_frames</name><argument_list pos:start="61:31" pos:end="61:48">(<argument pos:start="61:32" pos:end="61:34"><expr pos:start="61:32" pos:end="61:34"><name pos:start="61:32" pos:end="61:34">ctx</name></expr></argument>, <argument pos:start="61:37" pos:end="61:47"><expr pos:start="61:37" pos:end="61:47"><name pos:start="61:37" pos:end="61:47">interpolate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="65:27"><if pos:start="63:13" pos:end="65:27">if <condition pos:start="63:16" pos:end="63:24">(<expr pos:start="63:17" pos:end="63:23"><name pos:start="63:17" pos:end="63:19">ret</name> <operator pos:start="63:21" pos:end="63:21">&lt;</operator> <literal type="number" pos:start="63:23" pos:end="63:23">0</literal></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:27"><block_content pos:start="65:17" pos:end="65:27">

                <return pos:start="65:17" pos:end="65:27">return <expr pos:start="65:24" pos:end="65:26"><name pos:start="65:24" pos:end="65:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="67:13" pos:end="69:86"><if pos:start="67:13" pos:end="69:86">if <condition pos:start="67:16" pos:end="67:25">(<expr pos:start="67:17" pos:end="67:24"><name pos:start="67:17" pos:end="67:19">ret</name> <operator pos:start="67:21" pos:end="67:22">==</operator> <literal type="number" pos:start="67:24" pos:end="67:24">0</literal></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:86"><block_content pos:start="69:17" pos:end="69:86">

                <expr_stmt pos:start="69:17" pos:end="69:86"><expr pos:start="69:17" pos:end="69:85"><name pos:start="69:17" pos:end="69:23"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:23">work</name></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <call pos:start="69:27" pos:end="69:85"><name pos:start="69:27" pos:end="69:40">av_frame_clone</name><argument_list pos:start="69:41" pos:end="69:85">(<argument pos:start="69:42" pos:end="69:84"><expr pos:start="69:42" pos:end="69:84"><ternary pos:start="69:42" pos:end="69:84"><condition pos:start="69:42" pos:end="69:70"><expr pos:start="69:42" pos:end="69:68"><name pos:start="69:42" pos:end="69:52">interpolate</name> <operator pos:start="69:54" pos:end="69:54">&gt;</operator> <operator pos:start="69:56" pos:end="69:56">(</operator><name pos:start="69:57" pos:end="69:62"><name pos:start="69:57" pos:end="69:57">s</name><operator pos:start="69:58" pos:end="69:59">-&gt;</operator><name pos:start="69:60" pos:end="69:62">max</name></name> <operator pos:start="69:64" pos:end="69:65">&gt;&gt;</operator> <literal type="number" pos:start="69:67" pos:end="69:67">1</literal><operator pos:start="69:68" pos:end="69:68">)</operator></expr> ?</condition><then pos:start="69:72" pos:end="69:76"> <expr pos:start="69:72" pos:end="69:76"><name pos:start="69:72" pos:end="69:76"><name pos:start="69:72" pos:end="69:72">s</name><operator pos:start="69:73" pos:end="69:74">-&gt;</operator><name pos:start="69:75" pos:end="69:76">f1</name></name></expr> </then><else pos:start="69:78" pos:end="69:84">: <expr pos:start="69:80" pos:end="69:84"><name pos:start="69:80" pos:end="69:84"><name pos:start="69:80" pos:end="69:80">s</name><operator pos:start="69:81" pos:end="69:82">-&gt;</operator><name pos:start="69:83" pos:end="69:84">f0</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="77:5" pos:end="79:31"><if pos:start="77:5" pos:end="79:31">if <condition pos:start="77:8" pos:end="77:17">(<expr pos:start="77:9" pos:end="77:16"><operator pos:start="77:9" pos:end="77:9">!</operator><name pos:start="77:10" pos:end="77:16"><name pos:start="77:10" pos:end="77:10">s</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:16">work</name></name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:31"><block_content pos:start="79:9" pos:end="79:31">

        <return pos:start="79:9" pos:end="79:31">return <expr pos:start="79:16" pos:end="79:30"><call pos:start="79:16" pos:end="79:30"><name pos:start="79:16" pos:end="79:22">AVERROR</name><argument_list pos:start="79:23" pos:end="79:30">(<argument pos:start="79:24" pos:end="79:29"><expr pos:start="79:24" pos:end="79:29"><name pos:start="79:24" pos:end="79:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:28"><expr pos:start="83:5" pos:end="83:27"><name pos:start="83:5" pos:end="83:16"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:11">work</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:16">pts</name></name> <operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:27">work_pts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:11"><expr pos:start="85:5" pos:end="85:10"><name pos:start="85:5" pos:end="85:8"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:8">n</name></name><operator pos:start="85:9" pos:end="85:10">++</operator></expr>;</expr_stmt>



    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
