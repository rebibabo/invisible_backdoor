<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13275.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">error_setv</name><parameter_list pos:start="1:23" pos:end="3:51">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:28">Error</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier><modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:35">errp</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:47">ErrorClass</name></type> <name pos:start="1:49" pos:end="1:57">err_class</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:38"><decl pos:start="3:24" pos:end="3:38"><type pos:start="3:24" pos:end="3:38"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:33">char</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:38">fmt</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:50"><decl pos:start="3:41" pos:end="3:50"><type pos:start="3:41" pos:end="3:50"><name pos:start="3:41" pos:end="3:47">va_list</name></type> <name pos:start="3:49" pos:end="3:50">ap</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:24">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">saved_errno</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27">errno</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:21">(<expr pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:12">errp</name> <operator pos:start="13:14" pos:end="13:15">==</operator> <name pos:start="13:17" pos:end="13:20">NULL</name></expr>)</condition> <block pos:start="13:23" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><call pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:10">assert</name><argument_list pos:start="19:11" pos:end="19:25">(<argument pos:start="19:12" pos:end="19:24"><expr pos:start="19:12" pos:end="19:24"><operator pos:start="19:12" pos:end="19:12">*</operator><name pos:start="19:13" pos:end="19:16">errp</name> <operator pos:start="19:18" pos:end="19:19">==</operator> <name pos:start="19:21" pos:end="19:24">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:7">err</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:33"><name pos:start="23:11" pos:end="23:19">g_malloc0</name><argument_list pos:start="23:20" pos:end="23:33">(<argument pos:start="23:21" pos:end="23:32"><expr pos:start="23:21" pos:end="23:32"><sizeof pos:start="23:21" pos:end="23:32">sizeof<argument_list pos:start="23:27" pos:end="23:32">(<argument pos:start="23:28" pos:end="23:31"><expr pos:start="23:28" pos:end="23:31"><operator pos:start="23:28" pos:end="23:28">*</operator><name pos:start="23:29" pos:end="23:31">err</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:7">err</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:12">msg</name></name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:40"><name pos:start="25:16" pos:end="25:31">g_strdup_vprintf</name><argument_list pos:start="25:32" pos:end="25:40">(<argument pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><name pos:start="25:33" pos:end="25:35">fmt</name></expr></argument>, <argument pos:start="25:38" pos:end="25:39"><expr pos:start="25:38" pos:end="25:39"><name pos:start="25:38" pos:end="25:39">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:31"><expr pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:7">err</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:18">err_class</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:30">err_class</name></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:29">(<expr pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:12">errp</name> <operator pos:start="31:14" pos:end="31:15">==</operator> <operator pos:start="31:17" pos:end="31:17">&amp;</operator><name pos:start="31:18" pos:end="31:28">error_abort</name></expr>)</condition> <block pos:start="31:31" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:16">

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><call pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:24">error_report_err</name><argument_list pos:start="33:25" pos:end="33:29">(<argument pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><name pos:start="33:26" pos:end="33:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:16"><expr pos:start="35:9" pos:end="35:15"><call pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:13">abort</name><argument_list pos:start="35:14" pos:end="35:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:16"><expr pos:start="41:5" pos:end="41:15"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:9">errp</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <name pos:start="41:13" pos:end="41:15">err</name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:24"><expr pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:9">errno</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <name pos:start="45:13" pos:end="45:23">saved_errno</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
