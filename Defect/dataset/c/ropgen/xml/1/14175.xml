<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14175.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">xhci_xfer_report</name><parameter_list pos:start="1:29" pos:end="1:48">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:41">XHCITransfer</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">xfer</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:5">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:18">edtla</name> <init pos:start="5:20" pos:end="5:22">= <expr pos:start="5:22" pos:end="5:22"><literal type="number" pos:start="5:22" pos:end="5:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:21">left</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:17">reported</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:17">shortpkt</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:47"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">XHCIEvent</name></type> <name pos:start="13:15" pos:end="13:19">event</name> <init pos:start="13:21" pos:end="13:47">= <expr pos:start="13:23" pos:end="13:47"><block pos:start="13:23" pos:end="13:47">{<expr pos:start="13:24" pos:end="13:34"><name pos:start="13:24" pos:end="13:34">ER_TRANSFER</name></expr>, <expr pos:start="13:37" pos:end="13:46"><name pos:start="13:37" pos:end="13:46">CC_SUCCESS</name></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">XHCIState</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:19">xhci</name> <init pos:start="15:21" pos:end="15:32">= <expr pos:start="15:23" pos:end="15:32"><name pos:start="15:23" pos:end="15:32"><name pos:start="15:23" pos:end="15:26">xfer</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:32">xhci</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:8">left</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <name pos:start="21:12" pos:end="21:37"><name pos:start="21:12" pos:end="21:15">xfer</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:23">packet</name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:37">actual_length</name></name></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="125:5">for <control pos:start="25:9" pos:end="25:41">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:36"><expr pos:start="25:17" pos:end="25:35"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:35"><name pos:start="25:21" pos:end="25:24">xfer</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:35">trb_count</name></name></expr>;</condition> <incr pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:38">i</name><operator pos:start="25:39" pos:end="25:40">++</operator></expr></incr>)</control> <block pos:start="25:43" pos:end="125:5">{<block_content pos:start="27:9" pos:end="123:9">

        <decl_stmt pos:start="27:9" pos:end="27:38"><decl pos:start="27:9" pos:end="27:37"><type pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:15">XHCITRB</name> <modifier pos:start="27:17" pos:end="27:17">*</modifier></type><name pos:start="27:18" pos:end="27:20">trb</name> <init pos:start="27:22" pos:end="27:37">= <expr pos:start="27:24" pos:end="27:37"><operator pos:start="27:24" pos:end="27:24">&amp;</operator><name pos:start="27:25" pos:end="27:37"><name pos:start="27:25" pos:end="27:28">xfer</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:34">trbs</name><index pos:start="27:35" pos:end="27:37">[<expr pos:start="27:36" pos:end="27:36"><name pos:start="27:36" pos:end="27:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:31"><decl pos:start="29:9" pos:end="29:30"><type pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:16">unsigned</name> <name pos:start="29:18" pos:end="29:20">int</name></type> <name pos:start="29:22" pos:end="29:26">chunk</name> <init pos:start="29:28" pos:end="29:30">= <expr pos:start="29:30" pos:end="29:30"><literal type="number" pos:start="29:30" pos:end="29:30">0</literal></expr></init></decl>;</decl_stmt>



        <switch pos:start="33:9" pos:end="69:9">switch <condition pos:start="33:16" pos:end="33:31">(<expr pos:start="33:17" pos:end="33:30"><call pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:24">TRB_TYPE</name><argument_list pos:start="33:25" pos:end="33:30">(<argument pos:start="33:26" pos:end="33:29"><expr pos:start="33:26" pos:end="33:29"><operator pos:start="33:26" pos:end="33:26">*</operator><name pos:start="33:27" pos:end="33:29">trb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:33" pos:end="69:9">{<block_content pos:start="35:9" pos:end="67:18">

        <case pos:start="35:9" pos:end="35:21">case <expr pos:start="35:14" pos:end="35:20"><name pos:start="35:14" pos:end="35:20">TR_DATA</name></expr>:</case>

        <case pos:start="37:9" pos:end="37:23">case <expr pos:start="37:14" pos:end="37:22"><name pos:start="37:14" pos:end="37:22">TR_NORMAL</name></expr>:</case>

        <case pos:start="39:9" pos:end="39:22">case <expr pos:start="39:14" pos:end="39:21"><name pos:start="39:14" pos:end="39:21">TR_ISOCH</name></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:42"><expr pos:start="41:13" pos:end="41:41"><name pos:start="41:13" pos:end="41:17">chunk</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:31"><name pos:start="41:21" pos:end="41:23">trb</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:31">status</name></name> <operator pos:start="41:33" pos:end="41:33">&amp;</operator> <literal type="number" pos:start="41:35" pos:end="41:41">0x1ffff</literal></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="53:13"><if pos:start="43:13" pos:end="53:13">if <condition pos:start="43:16" pos:end="43:29">(<expr pos:start="43:17" pos:end="43:28"><name pos:start="43:17" pos:end="43:21">chunk</name> <operator pos:start="43:23" pos:end="43:23">&gt;</operator> <name pos:start="43:25" pos:end="43:28">left</name></expr>)</condition> <block pos:start="43:31" pos:end="53:13">{<block_content pos:start="45:17" pos:end="51:17">

                <expr_stmt pos:start="45:17" pos:end="45:29"><expr pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:21">chunk</name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:28">left</name></expr>;</expr_stmt>

                <if_stmt pos:start="47:17" pos:end="51:17"><if pos:start="47:17" pos:end="51:17">if <condition pos:start="47:20" pos:end="47:47">(<expr pos:start="47:21" pos:end="47:46"><name pos:start="47:21" pos:end="47:32"><name pos:start="47:21" pos:end="47:24">xfer</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:32">status</name></name> <operator pos:start="47:34" pos:end="47:35">==</operator> <name pos:start="47:37" pos:end="47:46">CC_SUCCESS</name></expr>)</condition> <block pos:start="47:49" pos:end="51:17">{<block_content pos:start="49:21" pos:end="49:33">

                    <expr_stmt pos:start="49:21" pos:end="49:33"><expr pos:start="49:21" pos:end="49:32"><name pos:start="49:21" pos:end="49:28">shortpkt</name> <operator pos:start="49:30" pos:end="49:30">=</operator> <literal type="number" pos:start="49:32" pos:end="49:32">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:26"><expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:16">left</name> <operator pos:start="55:18" pos:end="55:19">-=</operator> <name pos:start="55:21" pos:end="55:25">chunk</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:27"><expr pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:17">edtla</name> <operator pos:start="57:19" pos:end="57:20">+=</operator> <name pos:start="57:22" pos:end="57:26">chunk</name></expr>;</expr_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>

        <case pos:start="61:9" pos:end="61:23">case <expr pos:start="61:14" pos:end="61:22"><name pos:start="61:14" pos:end="61:22">TR_STATUS</name></expr>:</case>

            <expr_stmt pos:start="63:13" pos:end="63:25"><expr pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:20">reported</name> <operator pos:start="63:22" pos:end="63:22">=</operator> <literal type="number" pos:start="63:24" pos:end="63:24">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:25"><expr pos:start="65:13" pos:end="65:24"><name pos:start="65:13" pos:end="65:20">shortpkt</name> <operator pos:start="65:22" pos:end="65:22">=</operator> <literal type="number" pos:start="65:24" pos:end="65:24">0</literal></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="73:9" pos:end="123:9"><if pos:start="73:9" pos:end="123:9">if <condition pos:start="73:12" pos:end="77:69">(<expr pos:start="73:13" pos:end="77:68"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:21">reported</name> <operator pos:start="73:23" pos:end="73:24">&amp;&amp;</operator> <operator pos:start="73:26" pos:end="73:26">(</operator><operator pos:start="73:27" pos:end="73:27">(</operator><name pos:start="73:28" pos:end="73:39"><name pos:start="73:28" pos:end="73:30">trb</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:39">control</name></name> <operator pos:start="73:41" pos:end="73:41">&amp;</operator> <name pos:start="73:43" pos:end="73:52">TRB_TR_IOC</name><operator pos:start="73:53" pos:end="73:53">)</operator> <operator pos:start="73:55" pos:end="73:56">||</operator>

                          <operator pos:start="75:27" pos:end="75:27">(</operator><name pos:start="75:28" pos:end="75:35">shortpkt</name> <operator pos:start="75:37" pos:end="75:38">&amp;&amp;</operator> <operator pos:start="75:40" pos:end="75:40">(</operator><name pos:start="75:41" pos:end="75:52"><name pos:start="75:41" pos:end="75:43">trb</name><operator pos:start="75:44" pos:end="75:45">-&gt;</operator><name pos:start="75:46" pos:end="75:52">control</name></name> <operator pos:start="75:54" pos:end="75:54">&amp;</operator> <name pos:start="75:56" pos:end="75:65">TRB_TR_ISP</name><operator pos:start="75:66" pos:end="75:66">)</operator><operator pos:start="75:67" pos:end="75:67">)</operator> <operator pos:start="75:69" pos:end="75:70">||</operator>

                          <operator pos:start="77:27" pos:end="77:27">(</operator><name pos:start="77:28" pos:end="77:39"><name pos:start="77:28" pos:end="77:31">xfer</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:39">status</name></name> <operator pos:start="77:41" pos:end="77:42">!=</operator> <name pos:start="77:44" pos:end="77:53">CC_SUCCESS</name> <operator pos:start="77:55" pos:end="77:56">&amp;&amp;</operator> <name pos:start="77:58" pos:end="77:61">left</name> <operator pos:start="77:63" pos:end="77:64">==</operator> <literal type="number" pos:start="77:66" pos:end="77:66">0</literal><operator pos:start="77:67" pos:end="77:67">)</operator><operator pos:start="77:68" pos:end="77:68">)</operator></expr>)</condition> <block pos:start="77:71" pos:end="123:9">{<block_content pos:start="79:13" pos:end="121:13">

            <expr_stmt pos:start="79:13" pos:end="79:40"><expr pos:start="79:13" pos:end="79:39"><name pos:start="79:13" pos:end="79:24"><name pos:start="79:13" pos:end="79:17">event</name><operator pos:start="79:18" pos:end="79:18">.</operator><name pos:start="79:19" pos:end="79:24">slotid</name></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <name pos:start="79:28" pos:end="79:39"><name pos:start="79:28" pos:end="79:31">xfer</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:39">slotid</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:36"><expr pos:start="81:13" pos:end="81:35"><name pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:17">event</name><operator pos:start="81:18" pos:end="81:18">.</operator><name pos:start="81:19" pos:end="81:22">epid</name></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:35"><name pos:start="81:26" pos:end="81:29">xfer</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:35">epid</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:59"><expr pos:start="83:13" pos:end="83:58"><name pos:start="83:13" pos:end="83:24"><name pos:start="83:13" pos:end="83:17">event</name><operator pos:start="83:18" pos:end="83:18">.</operator><name pos:start="83:19" pos:end="83:24">length</name></name> <operator pos:start="83:26" pos:end="83:26">=</operator> <operator pos:start="83:28" pos:end="83:28">(</operator><name pos:start="83:29" pos:end="83:39"><name pos:start="83:29" pos:end="83:31">trb</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:39">status</name></name> <operator pos:start="83:41" pos:end="83:41">&amp;</operator> <literal type="number" pos:start="83:43" pos:end="83:49">0x1ffff</literal><operator pos:start="83:50" pos:end="83:50">)</operator> <operator pos:start="83:52" pos:end="83:52">-</operator> <name pos:start="83:54" pos:end="83:58">chunk</name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:28"><expr pos:start="85:13" pos:end="85:27"><name pos:start="85:13" pos:end="85:23"><name pos:start="85:13" pos:end="85:17">event</name><operator pos:start="85:18" pos:end="85:18">.</operator><name pos:start="85:19" pos:end="85:23">flags</name></name> <operator pos:start="85:25" pos:end="85:25">=</operator> <literal type="number" pos:start="85:27" pos:end="85:27">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:34"><expr pos:start="87:13" pos:end="87:33"><name pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:17">event</name><operator pos:start="87:18" pos:end="87:18">.</operator><name pos:start="87:19" pos:end="87:21">ptr</name></name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:33"><name pos:start="87:25" pos:end="87:27">trb</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:33">addr</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="97:13"><if pos:start="89:13" pos:end="93:13">if <condition pos:start="89:16" pos:end="89:43">(<expr pos:start="89:17" pos:end="89:42"><name pos:start="89:17" pos:end="89:28"><name pos:start="89:17" pos:end="89:20">xfer</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:28">status</name></name> <operator pos:start="89:30" pos:end="89:31">==</operator> <name pos:start="89:33" pos:end="89:42">CC_SUCCESS</name></expr>)</condition> <block pos:start="89:45" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:70">

                <expr_stmt pos:start="91:17" pos:end="91:70"><expr pos:start="91:17" pos:end="91:69"><name pos:start="91:17" pos:end="91:27"><name pos:start="91:17" pos:end="91:21">event</name><operator pos:start="91:22" pos:end="91:22">.</operator><name pos:start="91:23" pos:end="91:27">ccode</name></name> <operator pos:start="91:29" pos:end="91:29">=</operator> <ternary pos:start="91:31" pos:end="91:69"><condition pos:start="91:31" pos:end="91:40"><expr pos:start="91:31" pos:end="91:38"><name pos:start="91:31" pos:end="91:38">shortpkt</name></expr> ?</condition><then pos:start="91:42" pos:end="91:56"> <expr pos:start="91:42" pos:end="91:56"><name pos:start="91:42" pos:end="91:56">CC_SHORT_PACKET</name></expr> </then><else pos:start="91:58" pos:end="91:69">: <expr pos:start="91:60" pos:end="91:69"><name pos:start="91:60" pos:end="91:69">CC_SUCCESS</name></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="93:15" pos:end="97:13">else <block pos:start="93:20" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:43">

                <expr_stmt pos:start="95:17" pos:end="95:43"><expr pos:start="95:17" pos:end="95:42"><name pos:start="95:17" pos:end="95:27"><name pos:start="95:17" pos:end="95:21">event</name><operator pos:start="95:22" pos:end="95:22">.</operator><name pos:start="95:23" pos:end="95:27">ccode</name></name> <operator pos:start="95:29" pos:end="95:29">=</operator> <name pos:start="95:31" pos:end="95:42"><name pos:start="95:31" pos:end="95:34">xfer</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:42">status</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="99:13" pos:end="111:13"><if pos:start="99:13" pos:end="111:13">if <condition pos:start="99:16" pos:end="99:44">(<expr pos:start="99:17" pos:end="99:43"><call pos:start="99:17" pos:end="99:30"><name pos:start="99:17" pos:end="99:24">TRB_TYPE</name><argument_list pos:start="99:25" pos:end="99:30">(<argument pos:start="99:26" pos:end="99:29"><expr pos:start="99:26" pos:end="99:29"><operator pos:start="99:26" pos:end="99:26">*</operator><name pos:start="99:27" pos:end="99:29">trb</name></expr></argument>)</argument_list></call> <operator pos:start="99:32" pos:end="99:33">==</operator> <name pos:start="99:35" pos:end="99:43">TR_EVDATA</name></expr>)</condition> <block pos:start="99:46" pos:end="111:13">{<block_content pos:start="101:17" pos:end="109:26">

                <expr_stmt pos:start="101:17" pos:end="101:43"><expr pos:start="101:17" pos:end="101:42"><name pos:start="101:17" pos:end="101:25"><name pos:start="101:17" pos:end="101:21">event</name><operator pos:start="101:22" pos:end="101:22">.</operator><name pos:start="101:23" pos:end="101:25">ptr</name></name> <operator pos:start="101:27" pos:end="101:27">=</operator> <name pos:start="101:29" pos:end="101:42"><name pos:start="101:29" pos:end="101:31">trb</name><operator pos:start="101:32" pos:end="101:33">-&gt;</operator><name pos:start="101:34" pos:end="101:42">parameter</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:41"><expr pos:start="103:17" pos:end="103:40"><name pos:start="103:17" pos:end="103:27"><name pos:start="103:17" pos:end="103:21">event</name><operator pos:start="103:22" pos:end="103:22">.</operator><name pos:start="103:23" pos:end="103:27">flags</name></name> <operator pos:start="103:29" pos:end="103:30">|=</operator> <name pos:start="103:32" pos:end="103:40">TRB_EV_ED</name></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:48"><expr pos:start="105:17" pos:end="105:47"><name pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:21">event</name><operator pos:start="105:22" pos:end="105:22">.</operator><name pos:start="105:23" pos:end="105:28">length</name></name> <operator pos:start="105:30" pos:end="105:30">=</operator> <name pos:start="105:32" pos:end="105:36">edtla</name> <operator pos:start="105:38" pos:end="105:38">&amp;</operator> <literal type="number" pos:start="105:40" pos:end="105:47">0xffffff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:68"><expr pos:start="107:17" pos:end="107:67"><call pos:start="107:17" pos:end="107:67"><name pos:start="107:17" pos:end="107:23">DPRINTF</name><argument_list pos:start="107:24" pos:end="107:67">(<argument pos:start="107:25" pos:end="107:52"><expr pos:start="107:25" pos:end="107:52"><literal type="string" pos:start="107:25" pos:end="107:52">"xhci_xfer_data: EDTLA=%d\n"</literal></expr></argument>, <argument pos:start="107:55" pos:end="107:66"><expr pos:start="107:55" pos:end="107:66"><name pos:start="107:55" pos:end="107:66"><name pos:start="107:55" pos:end="107:59">event</name><operator pos:start="107:60" pos:end="107:60">.</operator><name pos:start="107:61" pos:end="107:66">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:26"><expr pos:start="109:17" pos:end="109:25"><name pos:start="109:17" pos:end="109:21">edtla</name> <operator pos:start="109:23" pos:end="109:23">=</operator> <literal type="number" pos:start="109:25" pos:end="109:25">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:53"><expr pos:start="113:13" pos:end="113:52"><call pos:start="113:13" pos:end="113:52"><name pos:start="113:13" pos:end="113:22">xhci_event</name><argument_list pos:start="113:23" pos:end="113:52">(<argument pos:start="113:24" pos:end="113:27"><expr pos:start="113:24" pos:end="113:27"><name pos:start="113:24" pos:end="113:27">xhci</name></expr></argument>, <argument pos:start="113:30" pos:end="113:35"><expr pos:start="113:30" pos:end="113:35"><operator pos:start="113:30" pos:end="113:30">&amp;</operator><name pos:start="113:31" pos:end="113:35">event</name></expr></argument>, <argument pos:start="113:38" pos:end="113:51"><expr pos:start="113:38" pos:end="113:51"><call pos:start="113:38" pos:end="113:51"><name pos:start="113:38" pos:end="113:45">TRB_INTR</name><argument_list pos:start="113:46" pos:end="113:51">(<argument pos:start="113:47" pos:end="113:50"><expr pos:start="113:47" pos:end="113:50"><operator pos:start="113:47" pos:end="113:47">*</operator><name pos:start="113:48" pos:end="113:50">trb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:25"><expr pos:start="115:13" pos:end="115:24"><name pos:start="115:13" pos:end="115:20">reported</name> <operator pos:start="115:22" pos:end="115:22">=</operator> <literal type="number" pos:start="115:24" pos:end="115:24">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="117:13" pos:end="121:13"><if pos:start="117:13" pos:end="121:13">if <condition pos:start="117:16" pos:end="117:43">(<expr pos:start="117:17" pos:end="117:42"><name pos:start="117:17" pos:end="117:28"><name pos:start="117:17" pos:end="117:20">xfer</name><operator pos:start="117:21" pos:end="117:22">-&gt;</operator><name pos:start="117:23" pos:end="117:28">status</name></name> <operator pos:start="117:30" pos:end="117:31">!=</operator> <name pos:start="117:33" pos:end="117:42">CC_SUCCESS</name></expr>)</condition> <block pos:start="117:45" pos:end="121:13">{<block_content pos:start="119:17" pos:end="119:23">

                <return pos:start="119:17" pos:end="119:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
