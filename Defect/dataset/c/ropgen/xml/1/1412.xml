<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1412.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">gen_slbmfev</name><parameter_list pos:start="1:24" pos:end="1:42">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:36">DisasContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="24:0">

<cpp:if pos:start="5:1" pos:end="5:29">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:29"><call pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:11">defined</name><argument_list pos:start="5:12" pos:end="5:29">(<argument pos:start="5:13" pos:end="5:28"><expr pos:start="5:13" pos:end="5:28"><name pos:start="5:13" pos:end="5:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="7:5" pos:end="10:0"><expr pos:start="7:5" pos:end="7:51"><call pos:start="7:5" pos:end="7:51"><name pos:start="7:5" pos:end="7:23">gen_inval_exception</name><argument_list pos:start="7:24" pos:end="7:51">(<argument pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:27">ctx</name></expr></argument>, <argument pos:start="7:30" pos:end="7:50"><expr pos:start="7:30" pos:end="7:50"><name pos:start="7:30" pos:end="7:50">POWERPC_EXCP_PRIV_REG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="9:1" pos:end="9:5">#<cpp:directive pos:start="9:2" pos:end="9:5">else</cpp:directive></cpp:else>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:26">(<expr pos:start="11:9" pos:end="11:25"><call pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:16">unlikely</name><argument_list pos:start="11:17" pos:end="11:25">(<argument pos:start="11:18" pos:end="11:24"><expr pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:20">ctx</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:24">pr</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:28" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:56"><expr pos:start="13:9" pos:end="13:55"><call pos:start="13:9" pos:end="13:55"><name pos:start="13:9" pos:end="13:27">gen_inval_exception</name><argument_list pos:start="13:28" pos:end="13:55">(<argument pos:start="13:29" pos:end="13:31"><expr pos:start="13:29" pos:end="13:31"><name pos:start="13:29" pos:end="13:31">ctx</name></expr></argument>, <argument pos:start="13:34" pos:end="13:54"><expr pos:start="13:34" pos:end="13:54"><name pos:start="13:34" pos:end="13:54">POWERPC_EXCP_PRIV_REG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="24:0"><expr pos:start="19:5" pos:end="21:54"><call pos:start="19:5" pos:end="21:54"><name pos:start="19:5" pos:end="19:28">gen_helper_load_slb_vsid</name><argument_list pos:start="19:29" pos:end="21:54">(<argument pos:start="19:30" pos:end="19:53"><expr pos:start="19:30" pos:end="19:53"><name pos:start="19:30" pos:end="19:53"><name pos:start="19:30" pos:end="19:36">cpu_gpr</name><index pos:start="19:37" pos:end="19:53">[<expr pos:start="19:38" pos:end="19:52"><call pos:start="19:38" pos:end="19:52"><name pos:start="19:38" pos:end="19:39">rS</name><argument_list pos:start="19:40" pos:end="19:52">(<argument pos:start="19:41" pos:end="19:51"><expr pos:start="19:41" pos:end="19:51"><name pos:start="19:41" pos:end="19:51"><name pos:start="19:41" pos:end="19:43">ctx</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:51">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="19:56" pos:end="19:62"><expr pos:start="19:56" pos:end="19:62"><name pos:start="19:56" pos:end="19:62">cpu_env</name></expr></argument>,

                             <argument pos:start="21:30" pos:end="21:53"><expr pos:start="21:30" pos:end="21:53"><name pos:start="21:30" pos:end="21:53"><name pos:start="21:30" pos:end="21:36">cpu_gpr</name><index pos:start="21:37" pos:end="21:53">[<expr pos:start="21:38" pos:end="21:52"><call pos:start="21:38" pos:end="21:52"><name pos:start="21:38" pos:end="21:39">rB</name><argument_list pos:start="21:40" pos:end="21:52">(<argument pos:start="21:41" pos:end="21:51"><expr pos:start="21:41" pos:end="21:51"><name pos:start="21:41" pos:end="21:51"><name pos:start="21:41" pos:end="21:43">ctx</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:51">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
