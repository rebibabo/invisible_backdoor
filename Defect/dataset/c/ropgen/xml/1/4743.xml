<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4743.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">mov_read_custom_2plus</name><parameter_list pos:start="1:33" pos:end="1:74">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:43">MOVContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">c</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:59">AVIOContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">pb</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:73"><decl pos:start="1:66" pos:end="1:73"><type pos:start="1:66" pos:end="1:73"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:73">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:15">end</name> <init pos:start="5:17" pos:end="5:38">= <expr pos:start="5:19" pos:end="5:38"><call pos:start="5:19" pos:end="5:31"><name pos:start="5:19" pos:end="5:27">avio_tell</name><argument_list pos:start="5:28" pos:end="5:31">(<argument pos:start="5:29" pos:end="5:30"><expr pos:start="5:29" pos:end="5:30"><name pos:start="5:29" pos:end="5:30">pb</name></expr></argument>)</argument_list></call> <operator pos:start="5:33" pos:end="5:33">+</operator> <name pos:start="5:35" pos:end="5:38">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">key</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>, <decl pos:start="7:26" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:29">val</name> <init pos:start="7:31" pos:end="7:36">= <expr pos:start="7:33" pos:end="7:36"><name pos:start="7:33" pos:end="7:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">MOVStreamContext</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:24">sc</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:30">(<expr pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:13">fc</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:25">nb_streams</name></name> <operator pos:start="17:27" pos:end="17:27">&lt;</operator> <literal type="number" pos:start="17:29" pos:end="17:29">1</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:6">st</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <name pos:start="21:10" pos:end="21:44"><name pos:start="21:10" pos:end="21:10">c</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:14">fc</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:23">streams</name><index pos:start="21:24" pos:end="21:44">[<expr pos:start="21:25" pos:end="21:43"><name pos:start="21:25" pos:end="21:41"><name pos:start="21:25" pos:end="21:25">c</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:29">fc</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:41">nb_streams</name></name><operator pos:start="21:42" pos:end="21:42">-</operator><literal type="number" pos:start="21:43" pos:end="21:43">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:6">sc</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <name pos:start="23:10" pos:end="23:22"><name pos:start="23:10" pos:end="23:11">st</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:22">priv_data</name></name></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="85:5">for <control pos:start="27:9" pos:end="27:27">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:21"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <literal type="number" pos:start="27:21" pos:end="27:21">2</literal></expr>;</condition> <incr pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:24">i</name><operator pos:start="27:25" pos:end="27:26">++</operator></expr></incr>)</control> <block pos:start="27:29" pos:end="85:5">{<block_content pos:start="29:9" pos:end="83:22">

        <decl_stmt pos:start="29:9" pos:end="29:20"><decl pos:start="29:9" pos:end="29:19"><type pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:15">uint8_t</name> <modifier pos:start="29:17" pos:end="29:17">*</modifier><modifier pos:start="29:18" pos:end="29:18">*</modifier></type><name pos:start="29:19" pos:end="29:19">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:26"><decl pos:start="31:9" pos:end="31:20"><type pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:16">uint32_t</name></type> <name pos:start="31:18" pos:end="31:20">len</name></decl>, <decl pos:start="31:23" pos:end="31:25"><type ref="prev" pos:start="31:9" pos:end="31:16"/><name pos:start="31:23" pos:end="31:25">tag</name></decl>;</decl_stmt>



        <if_stmt pos:start="35:9" pos:end="37:18"><if pos:start="35:9" pos:end="37:18">if <condition pos:start="35:12" pos:end="35:38">(<expr pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:15">end</name> <operator pos:start="35:17" pos:end="35:17">-</operator> <call pos:start="35:19" pos:end="35:31"><name pos:start="35:19" pos:end="35:27">avio_tell</name><argument_list pos:start="35:28" pos:end="35:31">(<argument pos:start="35:29" pos:end="35:30"><expr pos:start="35:29" pos:end="35:30"><name pos:start="35:29" pos:end="35:30">pb</name></expr></argument>)</argument_list></call> <operator pos:start="35:33" pos:end="35:34">&lt;=</operator> <literal type="number" pos:start="35:36" pos:end="35:37">12</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:18"><block_content pos:start="37:13" pos:end="37:18">

            <break pos:start="37:13" pos:end="37:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:11">len</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:27"><name pos:start="41:15" pos:end="41:23">avio_rb32</name><argument_list pos:start="41:24" pos:end="41:27">(<argument pos:start="41:25" pos:end="41:26"><expr pos:start="41:25" pos:end="41:26"><name pos:start="41:25" pos:end="41:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:28"><expr pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:11">tag</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:27"><name pos:start="43:15" pos:end="43:23">avio_rl32</name><argument_list pos:start="43:24" pos:end="43:27">(<argument pos:start="43:25" pos:end="43:26"><expr pos:start="43:25" pos:end="43:26"><name pos:start="43:25" pos:end="43:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><call pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:17">avio_skip</name><argument_list pos:start="45:18" pos:end="45:24">(<argument pos:start="45:19" pos:end="45:20"><expr pos:start="45:19" pos:end="45:20"><name pos:start="45:19" pos:end="45:20">pb</name></expr></argument>, <argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><literal type="number" pos:start="45:23" pos:end="45:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="45:27" pos:end="45:34">// flags</comment>



        <if_stmt pos:start="49:9" pos:end="51:18"><if pos:start="49:9" pos:end="51:18">if <condition pos:start="49:12" pos:end="49:55">(<expr pos:start="49:13" pos:end="49:54"><name pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:15">len</name> <argument_list type="generic" pos:start="49:17" pos:end="49:34">&lt; <argument pos:start="49:19" pos:end="49:32"><expr pos:start="49:19" pos:end="49:32"><literal type="number" pos:start="49:19" pos:end="49:20">12</literal> <operator pos:start="49:22" pos:end="49:23">||</operator> <name pos:start="49:25" pos:end="49:27">len</name> <operator pos:start="49:29" pos:end="49:29">-</operator> <literal type="number" pos:start="49:31" pos:end="49:32">12</literal></expr></argument> &gt;</argument_list></name> <name pos:start="49:36" pos:end="49:38">end</name> <operator pos:start="49:40" pos:end="49:40">-</operator> <call pos:start="49:42" pos:end="49:54"><name pos:start="49:42" pos:end="49:50">avio_tell</name><argument_list pos:start="49:51" pos:end="49:54">(<argument pos:start="49:52" pos:end="49:53"><expr pos:start="49:52" pos:end="49:53"><name pos:start="49:52" pos:end="49:53">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:18"><block_content pos:start="51:13" pos:end="51:18">

            <break pos:start="51:13" pos:end="51:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:18"><expr pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:11">len</name> <operator pos:start="53:13" pos:end="53:14">-=</operator> <literal type="number" pos:start="53:16" pos:end="53:17">12</literal></expr>;</expr_stmt>



        <if_stmt pos:start="57:9" pos:end="71:18"><if pos:start="57:9" pos:end="59:21">if <condition pos:start="57:12" pos:end="57:45">(<expr pos:start="57:13" pos:end="57:44"><name pos:start="57:13" pos:end="57:15">tag</name> <operator pos:start="57:17" pos:end="57:18">==</operator> <call pos:start="57:20" pos:end="57:44"><name pos:start="57:20" pos:end="57:24">MKTAG</name><argument_list pos:start="57:25" pos:end="57:44">(<argument pos:start="57:26" pos:end="57:28"><expr pos:start="57:26" pos:end="57:28"><literal type="char" pos:start="57:26" pos:end="57:28">'n'</literal></expr></argument>, <argument pos:start="57:31" pos:end="57:33"><expr pos:start="57:31" pos:end="57:33"><literal type="char" pos:start="57:31" pos:end="57:33">'a'</literal></expr></argument>, <argument pos:start="57:36" pos:end="57:38"><expr pos:start="57:36" pos:end="57:38"><literal type="char" pos:start="57:36" pos:end="57:38">'m'</literal></expr></argument>, <argument pos:start="57:41" pos:end="57:43"><expr pos:start="57:41" pos:end="57:43"><literal type="char" pos:start="57:41" pos:end="57:43">'e'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:21"><block_content pos:start="59:13" pos:end="59:21">

            <expr_stmt pos:start="59:13" pos:end="59:21"><expr pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:13">p</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <operator pos:start="59:17" pos:end="59:17">&amp;</operator><name pos:start="59:18" pos:end="59:20">key</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="61:9" pos:end="69:9">else if <condition pos:start="61:17" pos:end="61:61">(<expr pos:start="61:18" pos:end="61:60"><name pos:start="61:18" pos:end="61:20">tag</name> <operator pos:start="61:22" pos:end="61:23">==</operator> <call pos:start="61:25" pos:end="61:49"><name pos:start="61:25" pos:end="61:29">MKTAG</name><argument_list pos:start="61:30" pos:end="61:49">(<argument pos:start="61:31" pos:end="61:33"><expr pos:start="61:31" pos:end="61:33"><literal type="char" pos:start="61:31" pos:end="61:33">'d'</literal></expr></argument>, <argument pos:start="61:36" pos:end="61:38"><expr pos:start="61:36" pos:end="61:38"><literal type="char" pos:start="61:36" pos:end="61:38">'a'</literal></expr></argument>, <argument pos:start="61:41" pos:end="61:43"><expr pos:start="61:41" pos:end="61:43"><literal type="char" pos:start="61:41" pos:end="61:43">'t'</literal></expr></argument>, <argument pos:start="61:46" pos:end="61:48"><expr pos:start="61:46" pos:end="61:48"><literal type="char" pos:start="61:46" pos:end="61:48">'a'</literal></expr></argument>)</argument_list></call> <operator pos:start="61:51" pos:end="61:52">&amp;&amp;</operator> <name pos:start="61:54" pos:end="61:56">len</name> <operator pos:start="61:58" pos:end="61:58">&gt;</operator> <literal type="number" pos:start="61:60" pos:end="61:60">4</literal></expr>)</condition> <block pos:start="61:63" pos:end="69:9">{<block_content pos:start="63:13" pos:end="67:21">

            <expr_stmt pos:start="63:13" pos:end="63:29"><expr pos:start="63:13" pos:end="63:28"><call pos:start="63:13" pos:end="63:28"><name pos:start="63:13" pos:end="63:21">avio_skip</name><argument_list pos:start="63:22" pos:end="63:28">(<argument pos:start="63:23" pos:end="63:24"><expr pos:start="63:23" pos:end="63:24"><name pos:start="63:23" pos:end="63:24">pb</name></expr></argument>, <argument pos:start="63:27" pos:end="63:27"><expr pos:start="63:27" pos:end="63:27"><literal type="number" pos:start="63:27" pos:end="63:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:21"><expr pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:15">len</name> <operator pos:start="65:17" pos:end="65:18">-=</operator> <literal type="number" pos:start="65:20" pos:end="65:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:21"><expr pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:13">p</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <operator pos:start="67:17" pos:end="67:17">&amp;</operator><name pos:start="67:18" pos:end="67:20">val</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="71:18">else<block type="pseudo" pos:start="71:13" pos:end="71:18"><block_content pos:start="71:13" pos:end="71:18">

            <break pos:start="71:13" pos:end="71:18">break;</break></block_content></block></else></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:32"><expr pos:start="75:9" pos:end="75:31"><operator pos:start="75:9" pos:end="75:9">*</operator><name pos:start="75:10" pos:end="75:10">p</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <call pos:start="75:14" pos:end="75:31"><name pos:start="75:14" pos:end="75:22">av_malloc</name><argument_list pos:start="75:23" pos:end="75:31">(<argument pos:start="75:24" pos:end="75:30"><expr pos:start="75:24" pos:end="75:30"><name pos:start="75:24" pos:end="75:26">len</name> <operator pos:start="75:28" pos:end="75:28">+</operator> <literal type="number" pos:start="75:30" pos:end="75:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="79:18"><if pos:start="77:9" pos:end="79:18">if <condition pos:start="77:12" pos:end="77:16">(<expr pos:start="77:13" pos:end="77:15"><operator pos:start="77:13" pos:end="77:13">!</operator><operator pos:start="77:14" pos:end="77:14">*</operator><name pos:start="77:15" pos:end="77:15">p</name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:18"><block_content pos:start="79:13" pos:end="79:18">

            <break pos:start="79:13" pos:end="79:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:31"><expr pos:start="81:9" pos:end="81:30"><call pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:17">avio_read</name><argument_list pos:start="81:18" pos:end="81:30">(<argument pos:start="81:19" pos:end="81:20"><expr pos:start="81:19" pos:end="81:20"><name pos:start="81:19" pos:end="81:20">pb</name></expr></argument>, <argument pos:start="81:23" pos:end="81:24"><expr pos:start="81:23" pos:end="81:24"><operator pos:start="81:23" pos:end="81:23">*</operator><name pos:start="81:24" pos:end="81:24">p</name></expr></argument>, <argument pos:start="81:27" pos:end="81:29"><expr pos:start="81:27" pos:end="81:29"><name pos:start="81:27" pos:end="81:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:22"><expr pos:start="83:9" pos:end="83:21"><operator pos:start="83:9" pos:end="83:9">(</operator><operator pos:start="83:10" pos:end="83:10">*</operator><name pos:start="83:11" pos:end="83:11">p</name><operator pos:start="83:12" pos:end="83:12">)</operator><index pos:start="83:13" pos:end="83:17">[<expr pos:start="83:14" pos:end="83:16"><name pos:start="83:14" pos:end="83:16">len</name></expr>]</index> <operator pos:start="83:19" pos:end="83:19">=</operator> <literal type="number" pos:start="83:21" pos:end="83:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="89:5" pos:end="115:5"><if pos:start="89:5" pos:end="115:5">if <condition pos:start="89:8" pos:end="89:19">(<expr pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:11">key</name> <operator pos:start="89:13" pos:end="89:14">&amp;&amp;</operator> <name pos:start="89:16" pos:end="89:18">val</name></expr>)</condition> <block pos:start="89:21" pos:end="115:5">{<block_content pos:start="91:9" pos:end="113:9">

        <if_stmt pos:start="91:9" pos:end="103:9"><if pos:start="91:9" pos:end="103:9">if <condition pos:start="91:12" pos:end="91:41">(<expr pos:start="91:13" pos:end="91:40"><call pos:start="91:13" pos:end="91:35"><name pos:start="91:13" pos:end="91:18">strcmp</name><argument_list pos:start="91:19" pos:end="91:35">(<argument pos:start="91:20" pos:end="91:22"><expr pos:start="91:20" pos:end="91:22"><name pos:start="91:20" pos:end="91:22">key</name></expr></argument>, <argument pos:start="91:25" pos:end="91:34"><expr pos:start="91:25" pos:end="91:34"><literal type="string" pos:start="91:25" pos:end="91:34">"iTunSMPB"</literal></expr></argument>)</argument_list></call> <operator pos:start="91:37" pos:end="91:38">==</operator> <literal type="number" pos:start="91:40" pos:end="91:40">0</literal></expr>)</condition> <block pos:start="91:43" pos:end="103:9">{<block_content pos:start="93:13" pos:end="101:13">

            <decl_stmt pos:start="93:13" pos:end="93:44"><decl pos:start="93:13" pos:end="93:23"><type pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:15">int</name></type> <name pos:start="93:17" pos:end="93:23">priming</name></decl>, <decl pos:start="93:26" pos:end="93:34"><type ref="prev" pos:start="93:13" pos:end="93:15"/><name pos:start="93:26" pos:end="93:34">remainder</name></decl>, <decl pos:start="93:37" pos:end="93:43"><type ref="prev" pos:start="93:13" pos:end="93:15"/><name pos:start="93:37" pos:end="93:43">samples</name></decl>;</decl_stmt>

            <if_stmt pos:start="95:13" pos:end="101:13"><if pos:start="95:13" pos:end="101:13">if<condition pos:start="95:15" pos:end="95:80">(<expr pos:start="95:16" pos:end="95:79"><call pos:start="95:16" pos:end="95:74"><name pos:start="95:16" pos:end="95:21">sscanf</name><argument_list pos:start="95:22" pos:end="95:74">(<argument pos:start="95:23" pos:end="95:25"><expr pos:start="95:23" pos:end="95:25"><name pos:start="95:23" pos:end="95:25">val</name></expr></argument>, <argument pos:start="95:28" pos:end="95:41"><expr pos:start="95:28" pos:end="95:41"><literal type="string" pos:start="95:28" pos:end="95:41">"%*X %X %X %X"</literal></expr></argument>, <argument pos:start="95:44" pos:end="95:51"><expr pos:start="95:44" pos:end="95:51"><operator pos:start="95:44" pos:end="95:44">&amp;</operator><name pos:start="95:45" pos:end="95:51">priming</name></expr></argument>, <argument pos:start="95:54" pos:end="95:63"><expr pos:start="95:54" pos:end="95:63"><operator pos:start="95:54" pos:end="95:54">&amp;</operator><name pos:start="95:55" pos:end="95:63">remainder</name></expr></argument>, <argument pos:start="95:66" pos:end="95:73"><expr pos:start="95:66" pos:end="95:73"><operator pos:start="95:66" pos:end="95:66">&amp;</operator><name pos:start="95:67" pos:end="95:73">samples</name></expr></argument>)</argument_list></call> <operator pos:start="95:76" pos:end="95:77">==</operator> <literal type="number" pos:start="95:79" pos:end="95:79">3</literal></expr>)</condition><block pos:start="95:81" pos:end="101:13">{<block_content pos:start="97:17" pos:end="99:44">

                <if_stmt pos:start="97:17" pos:end="99:44"><if pos:start="97:17" pos:end="99:44">if<condition pos:start="97:19" pos:end="97:46">(<expr pos:start="97:20" pos:end="97:45"><name pos:start="97:20" pos:end="97:26">priming</name><operator pos:start="97:27" pos:end="97:27">&gt;</operator><literal type="number" pos:start="97:28" pos:end="97:28">0</literal> <operator pos:start="97:30" pos:end="97:31">&amp;&amp;</operator> <name pos:start="97:33" pos:end="97:39">priming</name><operator pos:start="97:40" pos:end="97:40">&lt;</operator><literal type="number" pos:start="97:41" pos:end="97:45">16384</literal></expr>)</condition><block type="pseudo" pos:start="99:21" pos:end="99:44"><block_content pos:start="99:21" pos:end="99:44">

                    <expr_stmt pos:start="99:21" pos:end="99:44"><expr pos:start="99:21" pos:end="99:43"><name pos:start="99:21" pos:end="99:33"><name pos:start="99:21" pos:end="99:22">sc</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:33">start_pad</name></name> <operator pos:start="99:35" pos:end="99:35">=</operator> <name pos:start="99:37" pos:end="99:43">priming</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="105:9" pos:end="113:9"><if pos:start="105:9" pos:end="113:9">if <condition pos:start="105:12" pos:end="105:37">(<expr pos:start="105:13" pos:end="105:36"><call pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:18">strcmp</name><argument_list pos:start="105:19" pos:end="105:31">(<argument pos:start="105:20" pos:end="105:22"><expr pos:start="105:20" pos:end="105:22"><name pos:start="105:20" pos:end="105:22">key</name></expr></argument>, <argument pos:start="105:25" pos:end="105:30"><expr pos:start="105:25" pos:end="105:30"><literal type="string" pos:start="105:25" pos:end="105:30">"cdec"</literal></expr></argument>)</argument_list></call> <operator pos:start="105:33" pos:end="105:34">!=</operator> <literal type="number" pos:start="105:36" pos:end="105:36">0</literal></expr>)</condition> <block pos:start="105:39" pos:end="113:9">{<block_content pos:start="107:13" pos:end="111:29">

            <expr_stmt pos:start="107:13" pos:end="109:75"><expr pos:start="107:13" pos:end="109:74"><call pos:start="107:13" pos:end="109:74"><name pos:start="107:13" pos:end="107:23">av_dict_set</name><argument_list pos:start="107:24" pos:end="109:74">(<argument pos:start="107:25" pos:end="107:40"><expr pos:start="107:25" pos:end="107:40"><operator pos:start="107:25" pos:end="107:25">&amp;</operator><name pos:start="107:26" pos:end="107:40"><name pos:start="107:26" pos:end="107:26">c</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:30">fc</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:40">metadata</name></name></expr></argument>, <argument pos:start="107:43" pos:end="107:45"><expr pos:start="107:43" pos:end="107:45"><name pos:start="107:43" pos:end="107:45">key</name></expr></argument>, <argument pos:start="107:48" pos:end="107:50"><expr pos:start="107:48" pos:end="107:50"><name pos:start="107:48" pos:end="107:50">val</name></expr></argument>,

                        <argument pos:start="109:25" pos:end="109:73"><expr pos:start="109:25" pos:end="109:73"><name pos:start="109:25" pos:end="109:47">AV_DICT_DONT_STRDUP_KEY</name> <operator pos:start="109:49" pos:end="109:49">|</operator> <name pos:start="109:51" pos:end="109:73">AV_DICT_DONT_STRDUP_VAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:29"><expr pos:start="111:13" pos:end="111:28"><name pos:start="111:13" pos:end="111:15">key</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <name pos:start="111:19" pos:end="111:21">val</name> <operator pos:start="111:23" pos:end="111:23">=</operator> <name pos:start="111:25" pos:end="111:28">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:33"><expr pos:start="119:5" pos:end="119:32"><call pos:start="119:5" pos:end="119:32"><name pos:start="119:5" pos:end="119:13">avio_seek</name><argument_list pos:start="119:14" pos:end="119:32">(<argument pos:start="119:15" pos:end="119:16"><expr pos:start="119:15" pos:end="119:16"><name pos:start="119:15" pos:end="119:16">pb</name></expr></argument>, <argument pos:start="119:19" pos:end="119:21"><expr pos:start="119:19" pos:end="119:21"><name pos:start="119:19" pos:end="119:21">end</name></expr></argument>, <argument pos:start="119:24" pos:end="119:31"><expr pos:start="119:24" pos:end="119:31"><name pos:start="119:24" pos:end="119:31">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:19"><expr pos:start="121:5" pos:end="121:18"><call pos:start="121:5" pos:end="121:18"><name pos:start="121:5" pos:end="121:12">av_freep</name><argument_list pos:start="121:13" pos:end="121:18">(<argument pos:start="121:14" pos:end="121:17"><expr pos:start="121:14" pos:end="121:17"><operator pos:start="121:14" pos:end="121:14">&amp;</operator><name pos:start="121:15" pos:end="121:17">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:19"><expr pos:start="123:5" pos:end="123:18"><call pos:start="123:5" pos:end="123:18"><name pos:start="123:5" pos:end="123:12">av_freep</name><argument_list pos:start="123:13" pos:end="123:18">(<argument pos:start="123:14" pos:end="123:17"><expr pos:start="123:14" pos:end="123:17"><operator pos:start="123:14" pos:end="123:14">&amp;</operator><name pos:start="123:15" pos:end="123:17">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><literal type="number" pos:start="125:12" pos:end="125:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
