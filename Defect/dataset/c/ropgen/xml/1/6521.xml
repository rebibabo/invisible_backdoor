<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6521.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">probe_codec</name><parameter_list pos:start="1:24" pos:end="1:78">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:52">AVStream</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">st</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:77"><decl pos:start="1:59" pos:end="1:77"><type pos:start="1:59" pos:end="1:77"><specifier pos:start="1:59" pos:end="1:63">const</specifier> <name pos:start="1:65" pos:end="1:72">AVPacket</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:77">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:5">

    <if_stmt pos:start="5:5" pos:end="67:5"><if pos:start="5:5" pos:end="67:5">if<condition pos:start="5:7" pos:end="5:27">(<expr pos:start="5:8" pos:end="5:26"><name pos:start="5:8" pos:end="5:24"><name pos:start="5:8" pos:end="5:9">st</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:24">request_probe</name></name><operator pos:start="5:25" pos:end="5:25">&gt;</operator><literal type="number" pos:start="5:26" pos:end="5:26">0</literal></expr>)</condition><block pos:start="5:28" pos:end="67:5">{<block_content pos:start="7:9" pos:end="65:9">

        <decl_stmt pos:start="7:9" pos:end="7:42"><decl pos:start="7:9" pos:end="7:41"><type pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:19">AVProbeData</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">pd</name> <init pos:start="7:25" pos:end="7:41">= <expr pos:start="7:27" pos:end="7:41"><operator pos:start="7:27" pos:end="7:27">&amp;</operator><name pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:29">st</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:41">probe_data</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:16"><decl pos:start="9:9" pos:end="9:15"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:15">end</name></decl>;</decl_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:91"><expr pos:start="11:9" pos:end="11:90"><call pos:start="11:9" pos:end="11:90"><name pos:start="11:9" pos:end="11:14">av_log</name><argument_list pos:start="11:15" pos:end="11:90">(<argument pos:start="11:16" pos:end="11:16"><expr pos:start="11:16" pos:end="11:16"><name pos:start="11:16" pos:end="11:16">s</name></expr></argument>, <argument pos:start="11:19" pos:end="11:30"><expr pos:start="11:19" pos:end="11:30"><name pos:start="11:19" pos:end="11:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="11:33" pos:end="11:59"><expr pos:start="11:33" pos:end="11:59"><literal type="string" pos:start="11:33" pos:end="11:59">"probing stream %d pp:%d\n"</literal></expr></argument>, <argument pos:start="11:62" pos:end="11:70"><expr pos:start="11:62" pos:end="11:70"><name pos:start="11:62" pos:end="11:70"><name pos:start="11:62" pos:end="11:63">st</name><operator pos:start="11:64" pos:end="11:65">-&gt;</operator><name pos:start="11:66" pos:end="11:70">index</name></name></expr></argument>, <argument pos:start="11:73" pos:end="11:89"><expr pos:start="11:73" pos:end="11:89"><name pos:start="11:73" pos:end="11:89"><name pos:start="11:73" pos:end="11:74">st</name><operator pos:start="11:75" pos:end="11:76">-&gt;</operator><name pos:start="11:77" pos:end="11:89">probe_packets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:28"><expr pos:start="13:9" pos:end="13:27"><operator pos:start="13:9" pos:end="13:10">--</operator><name pos:start="13:11" pos:end="13:27"><name pos:start="13:11" pos:end="13:12">st</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:27">probe_packets</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="17:9" pos:end="31:9"><if pos:start="17:9" pos:end="27:9">if <condition pos:start="17:12" pos:end="17:16">(<expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">pkt</name></expr>)</condition> <block pos:start="17:18" pos:end="27:9">{<block_content pos:start="19:13" pos:end="25:66">

            <expr_stmt pos:start="19:13" pos:end="19:87"><expr pos:start="19:13" pos:end="19:86"><name pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:14">pd</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:19">buf</name></name> <operator pos:start="19:21" pos:end="19:21">=</operator> <call pos:start="19:23" pos:end="19:86"><name pos:start="19:23" pos:end="19:32">av_realloc</name><argument_list pos:start="19:33" pos:end="19:86">(<argument pos:start="19:34" pos:end="19:40"><expr pos:start="19:34" pos:end="19:40"><name pos:start="19:34" pos:end="19:40"><name pos:start="19:34" pos:end="19:35">pd</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:40">buf</name></name></expr></argument>, <argument pos:start="19:43" pos:end="19:85"><expr pos:start="19:43" pos:end="19:85"><name pos:start="19:43" pos:end="19:54"><name pos:start="19:43" pos:end="19:44">pd</name><operator pos:start="19:45" pos:end="19:46">-&gt;</operator><name pos:start="19:47" pos:end="19:54">buf_size</name></name><operator pos:start="19:55" pos:end="19:55">+</operator><name pos:start="19:56" pos:end="19:64"><name pos:start="19:56" pos:end="19:58">pkt</name><operator pos:start="19:59" pos:end="19:60">-&gt;</operator><name pos:start="19:61" pos:end="19:64">size</name></name><operator pos:start="19:65" pos:end="19:65">+</operator><name pos:start="19:66" pos:end="19:85">AVPROBE_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:63"><expr pos:start="21:13" pos:end="21:62"><call pos:start="21:13" pos:end="21:62"><name pos:start="21:13" pos:end="21:18">memcpy</name><argument_list pos:start="21:19" pos:end="21:62">(<argument pos:start="21:20" pos:end="21:39"><expr pos:start="21:20" pos:end="21:39"><name pos:start="21:20" pos:end="21:26"><name pos:start="21:20" pos:end="21:21">pd</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:26">buf</name></name><operator pos:start="21:27" pos:end="21:27">+</operator><name pos:start="21:28" pos:end="21:39"><name pos:start="21:28" pos:end="21:29">pd</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:39">buf_size</name></name></expr></argument>, <argument pos:start="21:42" pos:end="21:50"><expr pos:start="21:42" pos:end="21:50"><name pos:start="21:42" pos:end="21:50"><name pos:start="21:42" pos:end="21:44">pkt</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:50">data</name></name></expr></argument>, <argument pos:start="21:53" pos:end="21:61"><expr pos:start="21:53" pos:end="21:61"><name pos:start="21:53" pos:end="21:61"><name pos:start="21:53" pos:end="21:55">pkt</name><operator pos:start="21:56" pos:end="21:57">-&gt;</operator><name pos:start="21:58" pos:end="21:61">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:38"><expr pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:14">pd</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:24">buf_size</name></name> <operator pos:start="23:26" pos:end="23:27">+=</operator> <name pos:start="23:29" pos:end="23:37"><name pos:start="23:29" pos:end="23:31">pkt</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:37">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:66"><expr pos:start="25:13" pos:end="25:65"><call pos:start="25:13" pos:end="25:65"><name pos:start="25:13" pos:end="25:18">memset</name><argument_list pos:start="25:19" pos:end="25:65">(<argument pos:start="25:20" pos:end="25:39"><expr pos:start="25:20" pos:end="25:39"><name pos:start="25:20" pos:end="25:26"><name pos:start="25:20" pos:end="25:21">pd</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:26">buf</name></name><operator pos:start="25:27" pos:end="25:27">+</operator><name pos:start="25:28" pos:end="25:39"><name pos:start="25:28" pos:end="25:29">pd</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:39">buf_size</name></name></expr></argument>, <argument pos:start="25:42" pos:end="25:42"><expr pos:start="25:42" pos:end="25:42"><literal type="number" pos:start="25:42" pos:end="25:42">0</literal></expr></argument>, <argument pos:start="25:45" pos:end="25:64"><expr pos:start="25:45" pos:end="25:64"><name pos:start="25:45" pos:end="25:64">AVPROBE_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="27:11" pos:end="31:9">else <block pos:start="27:16" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:34">

            <expr_stmt pos:start="29:13" pos:end="29:34"><expr pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:29"><name pos:start="29:13" pos:end="29:14">st</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:29">probe_packets</name></name> <operator pos:start="29:31" pos:end="29:31">=</operator> <literal type="number" pos:start="29:33" pos:end="29:33">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="37:40"><expr pos:start="35:9" pos:end="37:39"><name pos:start="35:9" pos:end="35:11">end</name><operator pos:start="35:12" pos:end="35:12">=</operator>    <name pos:start="35:17" pos:end="35:51"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:51">raw_packet_buffer_remaining_size</name></name> <operator pos:start="35:53" pos:end="35:54">&lt;=</operator> <literal type="number" pos:start="35:56" pos:end="35:56">0</literal>

                <operator pos:start="37:17" pos:end="37:18">||</operator> <name pos:start="37:20" pos:end="37:36"><name pos:start="37:20" pos:end="37:21">st</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:36">probe_packets</name></name><operator pos:start="37:37" pos:end="37:38">&lt;=</operator><literal type="number" pos:start="37:39" pos:end="37:39">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="65:9"><if pos:start="41:9" pos:end="65:9">if<condition pos:start="41:11" pos:end="41:77">(<expr pos:start="41:12" pos:end="41:76"><name pos:start="41:12" pos:end="41:14">end</name> <operator pos:start="41:16" pos:end="41:17">||</operator> <call pos:start="41:19" pos:end="41:39"><name pos:start="41:19" pos:end="41:25">av_log2</name><argument_list pos:start="41:26" pos:end="41:39">(<argument pos:start="41:27" pos:end="41:38"><expr pos:start="41:27" pos:end="41:38"><name pos:start="41:27" pos:end="41:38"><name pos:start="41:27" pos:end="41:28">pd</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:38">buf_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="41:41" pos:end="41:42">!=</operator> <call pos:start="41:44" pos:end="41:76"><name pos:start="41:44" pos:end="41:50">av_log2</name><argument_list pos:start="41:51" pos:end="41:76">(<argument pos:start="41:52" pos:end="41:75"><expr pos:start="41:52" pos:end="41:75"><name pos:start="41:52" pos:end="41:63"><name pos:start="41:52" pos:end="41:53">pd</name><operator pos:start="41:54" pos:end="41:55">-&gt;</operator><name pos:start="41:56" pos:end="41:63">buf_size</name></name> <operator pos:start="41:65" pos:end="41:65">-</operator> <name pos:start="41:67" pos:end="41:75"><name pos:start="41:67" pos:end="41:69">pkt</name><operator pos:start="41:70" pos:end="41:71">-&gt;</operator><name pos:start="41:72" pos:end="41:75">size</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="41:78" pos:end="65:9">{<block_content pos:start="43:13" pos:end="63:13">

            <decl_stmt pos:start="43:13" pos:end="43:60"><decl pos:start="43:13" pos:end="43:59"><type pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">int</name></type> <name pos:start="43:17" pos:end="43:21">score</name><init pos:start="43:22" pos:end="43:59">= <expr pos:start="43:24" pos:end="43:59"><call pos:start="43:24" pos:end="43:59"><name pos:start="43:24" pos:end="43:48">set_codec_from_probe_data</name><argument_list pos:start="43:49" pos:end="43:59">(<argument pos:start="43:50" pos:end="43:50"><expr pos:start="43:50" pos:end="43:50"><name pos:start="43:50" pos:end="43:50">s</name></expr></argument>, <argument pos:start="43:53" pos:end="43:54"><expr pos:start="43:53" pos:end="43:54"><name pos:start="43:53" pos:end="43:54">st</name></expr></argument>, <argument pos:start="43:57" pos:end="43:58"><expr pos:start="43:57" pos:end="43:58"><name pos:start="43:57" pos:end="43:58">pd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="45:13" pos:end="63:13"><if pos:start="45:13" pos:end="63:13">if<condition pos:start="45:15" pos:end="47:23">(    <expr pos:start="45:20" pos:end="47:22"><operator pos:start="45:20" pos:end="45:20">(</operator><name pos:start="45:21" pos:end="45:39"><name pos:start="45:21" pos:end="45:22">st</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:29">codec</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:39">codec_id</name></name> <operator pos:start="45:41" pos:end="45:42">!=</operator> <name pos:start="45:44" pos:end="45:56">CODEC_ID_NONE</name> <operator pos:start="45:58" pos:end="45:59">&amp;&amp;</operator> <name pos:start="45:61" pos:end="45:65">score</name> <operator pos:start="45:67" pos:end="45:67">&gt;</operator> <name pos:start="45:69" pos:end="45:85">AVPROBE_SCORE_MAX</name><operator pos:start="45:86" pos:end="45:86">/</operator><literal type="number" pos:start="45:87" pos:end="45:87">4</literal><operator pos:start="45:88" pos:end="45:88">)</operator>

                <operator pos:start="47:17" pos:end="47:18">||</operator> <name pos:start="47:20" pos:end="47:22">end</name></expr>)</condition><block pos:start="47:24" pos:end="63:13">{<block_content pos:start="49:17" pos:end="61:86">

                <expr_stmt pos:start="49:17" pos:end="49:31"><expr pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:28"><name pos:start="49:17" pos:end="49:18">pd</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:28">buf_size</name></name><operator pos:start="49:29" pos:end="49:29">=</operator><literal type="number" pos:start="49:30" pos:end="49:30">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:35"><expr pos:start="51:17" pos:end="51:34"><call pos:start="51:17" pos:end="51:34"><name pos:start="51:17" pos:end="51:24">av_freep</name><argument_list pos:start="51:25" pos:end="51:34">(<argument pos:start="51:26" pos:end="51:33"><expr pos:start="51:26" pos:end="51:33"><operator pos:start="51:26" pos:end="51:26">&amp;</operator><name pos:start="51:27" pos:end="51:33"><name pos:start="51:27" pos:end="51:28">pd</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:33">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:38"><expr pos:start="53:17" pos:end="53:37"><name pos:start="53:17" pos:end="53:33"><name pos:start="53:17" pos:end="53:18">st</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:33">request_probe</name></name><operator pos:start="53:34" pos:end="53:34">=</operator> <operator pos:start="53:36" pos:end="53:36">-</operator><literal type="number" pos:start="53:37" pos:end="53:37">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="55:17" pos:end="61:86"><if pos:start="55:17" pos:end="59:17">if<condition pos:start="55:19" pos:end="55:56">(<expr pos:start="55:20" pos:end="55:55"><name pos:start="55:20" pos:end="55:38"><name pos:start="55:20" pos:end="55:21">st</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:28">codec</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:38">codec_id</name></name> <operator pos:start="55:40" pos:end="55:41">!=</operator> <name pos:start="55:43" pos:end="55:55">CODEC_ID_NONE</name></expr>)</condition><block pos:start="55:57" pos:end="59:17">{<block_content pos:start="57:21" pos:end="57:77">

                    <expr_stmt pos:start="57:21" pos:end="57:77"><expr pos:start="57:21" pos:end="57:76"><call pos:start="57:21" pos:end="57:76"><name pos:start="57:21" pos:end="57:26">av_log</name><argument_list pos:start="57:27" pos:end="57:76">(<argument pos:start="57:28" pos:end="57:28"><expr pos:start="57:28" pos:end="57:28"><name pos:start="57:28" pos:end="57:28">s</name></expr></argument>, <argument pos:start="57:31" pos:end="57:42"><expr pos:start="57:31" pos:end="57:42"><name pos:start="57:31" pos:end="57:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="57:45" pos:end="57:64"><expr pos:start="57:45" pos:end="57:64"><literal type="string" pos:start="57:45" pos:end="57:64">"probed stream %d\n"</literal></expr></argument>, <argument pos:start="57:67" pos:end="57:75"><expr pos:start="57:67" pos:end="57:75"><name pos:start="57:67" pos:end="57:75"><name pos:start="57:67" pos:end="57:68">st</name><operator pos:start="57:69" pos:end="57:70">-&gt;</operator><name pos:start="57:71" pos:end="57:75">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="59:18" pos:end="61:86">else<block type="pseudo" pos:start="61:21" pos:end="61:86"><block_content pos:start="61:21" pos:end="61:86">

                    <expr_stmt pos:start="61:21" pos:end="61:86"><expr pos:start="61:21" pos:end="61:85"><call pos:start="61:21" pos:end="61:85"><name pos:start="61:21" pos:end="61:26">av_log</name><argument_list pos:start="61:27" pos:end="61:85">(<argument pos:start="61:28" pos:end="61:28"><expr pos:start="61:28" pos:end="61:28"><name pos:start="61:28" pos:end="61:28">s</name></expr></argument>, <argument pos:start="61:31" pos:end="61:44"><expr pos:start="61:31" pos:end="61:44"><name pos:start="61:31" pos:end="61:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="61:47" pos:end="61:73"><expr pos:start="61:47" pos:end="61:73"><literal type="string" pos:start="61:47" pos:end="61:73">"probed stream %d failed\n"</literal></expr></argument>, <argument pos:start="61:76" pos:end="61:84"><expr pos:start="61:76" pos:end="61:84"><name pos:start="61:76" pos:end="61:84"><name pos:start="61:76" pos:end="61:77">st</name><operator pos:start="61:78" pos:end="61:79">-&gt;</operator><name pos:start="61:80" pos:end="61:84">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
