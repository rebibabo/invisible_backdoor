<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">r3d_read_rdvo</name><parameter_list pos:start="1:25" pos:end="1:56">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:55"><decl pos:start="1:46" pos:end="1:55"><type pos:start="1:46" pos:end="1:55"><name pos:start="1:46" pos:end="1:49">Atom</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">R3DContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">r3d</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:32">= <expr pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:20">s</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:29">streams</name><index pos:start="7:30" pos:end="7:32">[<expr pos:start="7:31" pos:end="7:31"><literal type="number" pos:start="7:31" pos:end="7:31">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:7">r3d</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:28">video_offsets_count</name></name> <operator pos:start="13:30" pos:end="13:30">=</operator> <operator pos:start="13:32" pos:end="13:32">(</operator><name pos:start="13:33" pos:end="13:42"><name pos:start="13:33" pos:end="13:36">atom</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:42">size</name></name> <operator pos:start="13:44" pos:end="13:44">-</operator> <literal type="number" pos:start="13:46" pos:end="13:46">8</literal><operator pos:start="13:47" pos:end="13:47">)</operator> <operator pos:start="13:49" pos:end="13:49">/</operator> <literal type="number" pos:start="13:51" pos:end="13:51">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:47"><expr pos:start="15:5" pos:end="15:46"><name pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:7">r3d</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:22">video_offsets</name></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <call pos:start="15:26" pos:end="15:46"><name pos:start="15:26" pos:end="15:34">av_malloc</name><argument_list pos:start="15:35" pos:end="15:46">(<argument pos:start="15:36" pos:end="15:45"><expr pos:start="15:36" pos:end="15:45"><name pos:start="15:36" pos:end="15:45"><name pos:start="15:36" pos:end="15:39">atom</name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:45">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:31"><if pos:start="17:5" pos:end="19:31">if <condition pos:start="17:8" pos:end="17:28">(<expr pos:start="17:9" pos:end="17:27"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:27"><name pos:start="17:10" pos:end="17:12">r3d</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:27">video_offsets</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:31"><block_content pos:start="19:9" pos:end="19:31">

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="23:5" pos:end="37:5">for <control pos:start="23:9" pos:end="23:50">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:45"><expr pos:start="23:17" pos:end="23:44"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:44"><name pos:start="23:21" pos:end="23:23">r3d</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:44">video_offsets_count</name></name></expr>;</condition> <incr pos:start="23:47" pos:end="23:49"><expr pos:start="23:47" pos:end="23:49"><name pos:start="23:47" pos:end="23:47">i</name><operator pos:start="23:48" pos:end="23:49">++</operator></expr></incr>)</control> <block pos:start="23:52" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:71">

        <expr_stmt pos:start="25:9" pos:end="25:49"><expr pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:11">r3d</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:26">video_offsets</name><index pos:start="25:27" pos:end="25:29">[<expr pos:start="25:28" pos:end="25:28"><name pos:start="25:28" pos:end="25:28">i</name></expr>]</index></name> <operator pos:start="25:31" pos:end="25:31">=</operator> <call pos:start="25:33" pos:end="25:48"><name pos:start="25:33" pos:end="25:41">avio_rb32</name><argument_list pos:start="25:42" pos:end="25:48">(<argument pos:start="25:43" pos:end="25:47"><expr pos:start="25:43" pos:end="25:47"><name pos:start="25:43" pos:end="25:47"><name pos:start="25:43" pos:end="25:43">s</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:47">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:35">(<expr pos:start="27:13" pos:end="27:34"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:34"><name pos:start="27:14" pos:end="27:16">r3d</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:31">video_offsets</name><index pos:start="27:32" pos:end="27:34">[<expr pos:start="27:33" pos:end="27:33"><name pos:start="27:33" pos:end="27:33">i</name></expr>]</index></name></expr>)</condition> <block pos:start="27:37" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:18">

            <expr_stmt pos:start="29:13" pos:end="29:41"><expr pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:36"><name pos:start="29:13" pos:end="29:15">r3d</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:36">video_offsets_count</name></name> <operator pos:start="29:38" pos:end="29:38">=</operator> <name pos:start="29:40" pos:end="29:40">i</name></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:71"><expr pos:start="35:9" pos:end="35:70"><call pos:start="35:9" pos:end="35:70"><name pos:start="35:9" pos:end="35:15">av_dlog</name><argument_list pos:start="35:16" pos:end="35:70">(<argument pos:start="35:17" pos:end="35:17"><expr pos:start="35:17" pos:end="35:17"><name pos:start="35:17" pos:end="35:17">s</name></expr></argument>, <argument pos:start="35:20" pos:end="35:43"><expr pos:start="35:20" pos:end="35:43"><literal type="string" pos:start="35:20" pos:end="35:43">"video offset %d: %#x\n"</literal></expr></argument>, <argument pos:start="35:46" pos:end="35:46"><expr pos:start="35:46" pos:end="35:46"><name pos:start="35:46" pos:end="35:46">i</name></expr></argument>, <argument pos:start="35:49" pos:end="35:69"><expr pos:start="35:49" pos:end="35:69"><name pos:start="35:49" pos:end="35:69"><name pos:start="35:49" pos:end="35:51">r3d</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:66">video_offsets</name><index pos:start="35:67" pos:end="35:69">[<expr pos:start="35:68" pos:end="35:68"><name pos:start="35:68" pos:end="35:68">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="41:5" pos:end="49:51"><if pos:start="41:5" pos:end="49:51">if <condition pos:start="41:8" pos:end="41:29">(<expr pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:10">st</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:24">r_frame_rate</name><operator pos:start="41:25" pos:end="41:25">.</operator><name pos:start="41:26" pos:end="41:28">num</name></name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="49:51"><block_content pos:start="43:9" pos:end="49:51">

        <expr_stmt pos:start="43:9" pos:end="49:51"><expr pos:start="43:9" pos:end="49:50"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:10">st</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:20">duration</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <macro pos:start="43:24" pos:end="49:50"><name pos:start="43:24" pos:end="43:35">av_rescale_q</name><argument_list pos:start="43:36" pos:end="49:50">(<argument pos:start="43:37" pos:end="43:60">r3d-&gt;video_offsets_count</argument>,

                                    <argument pos:start="45:37" pos:end="45:69">(AVRational){st-&gt;r_frame_rate.den</argument>,

                                                 <argument pos:start="47:50" pos:end="47:70">st-&gt;r_frame_rate.num}</argument>,

                                    <argument pos:start="49:37" pos:end="49:49">st-&gt;time_base</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:53"><expr pos:start="51:5" pos:end="51:52"><call pos:start="51:5" pos:end="51:52"><name pos:start="51:5" pos:end="51:11">av_dlog</name><argument_list pos:start="51:12" pos:end="51:52">(<argument pos:start="51:13" pos:end="51:13"><expr pos:start="51:13" pos:end="51:13"><name pos:start="51:13" pos:end="51:13">s</name></expr></argument>, <argument pos:start="51:16" pos:end="51:37"><expr pos:start="51:16" pos:end="51:37"><literal type="string" pos:start="51:16" pos:end="51:27">"duration %"</literal><name pos:start="51:28" pos:end="51:33">PRId64</name><literal type="string" pos:start="51:34" pos:end="51:37">"\n"</literal></expr></argument>, <argument pos:start="51:40" pos:end="51:51"><expr pos:start="51:40" pos:end="51:51"><name pos:start="51:40" pos:end="51:51"><name pos:start="51:40" pos:end="51:41">st</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:51">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
