<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25689.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">targa_decode_rle</name><parameter_list pos:start="1:29" pos:end="1:137">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:64">TargaContext</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:67">s</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:87"><decl pos:start="1:70" pos:end="1:87"><type pos:start="1:70" pos:end="1:87"><specifier pos:start="1:70" pos:end="1:74">const</specifier> <name pos:start="1:76" pos:end="1:82">uint8_t</name> <modifier pos:start="1:84" pos:end="1:84">*</modifier></type><name pos:start="1:85" pos:end="1:87">src</name></decl></parameter>, <parameter pos:start="1:90" pos:end="1:101"><decl pos:start="1:90" pos:end="1:101"><type pos:start="1:90" pos:end="1:101"><name pos:start="1:90" pos:end="1:96">uint8_t</name> <modifier pos:start="1:98" pos:end="1:98">*</modifier></type><name pos:start="1:99" pos:end="1:101">dst</name></decl></parameter>, <parameter pos:start="1:104" pos:end="1:108"><decl pos:start="1:104" pos:end="1:108"><type pos:start="1:104" pos:end="1:108"><name pos:start="1:104" pos:end="1:106">int</name></type> <name pos:start="1:108" pos:end="1:108">w</name></decl></parameter>, <parameter pos:start="1:111" pos:end="1:115"><decl pos:start="1:111" pos:end="1:115"><type pos:start="1:111" pos:end="1:115"><name pos:start="1:111" pos:end="1:113">int</name></type> <name pos:start="1:115" pos:end="1:115">h</name></decl></parameter>, <parameter pos:start="1:118" pos:end="1:127"><decl pos:start="1:118" pos:end="1:127"><type pos:start="1:118" pos:end="1:127"><name pos:start="1:118" pos:end="1:120">int</name></type> <name pos:start="1:122" pos:end="1:127">stride</name></decl></parameter>, <parameter pos:start="1:130" pos:end="1:136"><decl pos:start="1:130" pos:end="1:136"><type pos:start="1:130" pos:end="1:136"><name pos:start="1:130" pos:end="1:132">int</name></type> <name pos:start="1:134" pos:end="1:136">bpp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:5">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">x</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">depth</name> <init pos:start="7:15" pos:end="7:30">= <expr pos:start="7:17" pos:end="7:30"><operator pos:start="7:17" pos:end="7:17">(</operator><name pos:start="7:18" pos:end="7:20">bpp</name> <operator pos:start="7:22" pos:end="7:22">+</operator> <literal type="number" pos:start="7:24" pos:end="7:24">1</literal><operator pos:start="7:25" pos:end="7:25">)</operator> <operator pos:start="7:27" pos:end="7:28">&gt;&gt;</operator> <literal type="number" pos:start="7:30" pos:end="7:30">3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">type</name></decl>, <decl pos:start="9:15" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:19">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">diff</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:30"><expr pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:8">diff</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <name pos:start="15:12" pos:end="15:17">stride</name> <operator pos:start="15:19" pos:end="15:19">-</operator> <name pos:start="15:21" pos:end="15:21">w</name> <operator pos:start="15:23" pos:end="15:23">*</operator> <name pos:start="15:25" pos:end="15:29">depth</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:14"><expr pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:5">x</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <name pos:start="17:9" pos:end="17:9">y</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <literal type="number" pos:start="17:13" pos:end="17:13">0</literal></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="95:5">while<condition pos:start="19:10" pos:end="19:16">(<expr pos:start="19:11" pos:end="19:15"><name pos:start="19:11" pos:end="19:11">y</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <name pos:start="19:15" pos:end="19:15">h</name></expr>)</condition><block pos:start="19:17" pos:end="95:5">{<block_content pos:start="21:9" pos:end="93:25">

        <expr_stmt pos:start="21:9" pos:end="21:22"><expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:12">type</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <operator pos:start="21:16" pos:end="21:16">*</operator><name pos:start="21:17" pos:end="21:19">src</name><operator pos:start="21:20" pos:end="21:21">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:13">count</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <operator pos:start="23:17" pos:end="23:17">(</operator><name pos:start="23:18" pos:end="23:21">type</name> <operator pos:start="23:23" pos:end="23:23">&amp;</operator> <literal type="number" pos:start="23:25" pos:end="23:28">0x7F</literal><operator pos:start="23:29" pos:end="23:29">)</operator> <operator pos:start="23:31" pos:end="23:31">+</operator> <literal type="number" pos:start="23:33" pos:end="23:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:21"><expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:12">type</name> <operator pos:start="25:14" pos:end="25:15">&amp;=</operator> <literal type="number" pos:start="25:17" pos:end="25:20">0x80</literal></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if<condition pos:start="27:11" pos:end="27:60">(<expr pos:start="27:12" pos:end="27:59"><operator pos:start="27:12" pos:end="27:12">(</operator><name pos:start="27:13" pos:end="27:13">x</name> <operator pos:start="27:15" pos:end="27:15">+</operator> <name pos:start="27:17" pos:end="27:21">count</name> <operator pos:start="27:23" pos:end="27:23">&gt;</operator> <name pos:start="27:25" pos:end="27:25">w</name><operator pos:start="27:26" pos:end="27:26">)</operator> <operator pos:start="27:28" pos:end="27:29">&amp;&amp;</operator> <operator pos:start="27:31" pos:end="27:31">(</operator><name pos:start="27:32" pos:end="27:32">x</name> <operator pos:start="27:34" pos:end="27:34">+</operator> <name pos:start="27:36" pos:end="27:40">count</name> <operator pos:start="27:42" pos:end="27:42">+</operator> <literal type="number" pos:start="27:44" pos:end="27:44">1</literal> <operator pos:start="27:46" pos:end="27:46">&gt;</operator> <operator pos:start="27:48" pos:end="27:48">(</operator><name pos:start="27:49" pos:end="27:49">h</name> <operator pos:start="27:51" pos:end="27:51">-</operator> <name pos:start="27:53" pos:end="27:53">y</name><operator pos:start="27:54" pos:end="27:54">)</operator> <operator pos:start="27:56" pos:end="27:56">*</operator> <name pos:start="27:58" pos:end="27:58">w</name><operator pos:start="27:59" pos:end="27:59">)</operator></expr>)</condition><block pos:start="27:61" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:19">

            <expr_stmt pos:start="29:13" pos:end="29:110"><expr pos:start="29:13" pos:end="29:109"><call pos:start="29:13" pos:end="29:109"><name pos:start="29:13" pos:end="29:18">av_log</name><argument_list pos:start="29:19" pos:end="29:109">(<argument pos:start="29:20" pos:end="29:24"><expr pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:24">avctx</name></expr></argument>, <argument pos:start="29:27" pos:end="29:38"><expr pos:start="29:27" pos:end="29:38"><name pos:start="29:27" pos:end="29:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:41" pos:end="29:95"><expr pos:start="29:41" pos:end="29:95"><literal type="string" pos:start="29:41" pos:end="29:95">"Packet went out of bounds: position (%i,%i) size %i\n"</literal></expr></argument>, <argument pos:start="29:98" pos:end="29:98"><expr pos:start="29:98" pos:end="29:98"><name pos:start="29:98" pos:end="29:98">x</name></expr></argument>, <argument pos:start="29:101" pos:end="29:101"><expr pos:start="29:101" pos:end="29:101"><name pos:start="29:101" pos:end="29:101">y</name></expr></argument>, <argument pos:start="29:104" pos:end="29:108"><expr pos:start="29:104" pos:end="29:108"><name pos:start="29:104" pos:end="29:108">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <for pos:start="35:9" pos:end="89:9">for<control pos:start="35:12" pos:end="35:34">(<init pos:start="35:13" pos:end="35:18"><expr pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:13">i</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <literal type="number" pos:start="35:17" pos:end="35:17">0</literal></expr>;</init> <condition pos:start="35:20" pos:end="35:29"><expr pos:start="35:20" pos:end="35:28"><name pos:start="35:20" pos:end="35:20">i</name> <operator pos:start="35:22" pos:end="35:22">&lt;</operator> <name pos:start="35:24" pos:end="35:28">count</name></expr>;</condition> <incr pos:start="35:31" pos:end="35:33"><expr pos:start="35:31" pos:end="35:33"><name pos:start="35:31" pos:end="35:31">i</name><operator pos:start="35:32" pos:end="35:33">++</operator></expr></incr>)</control><block pos:start="35:35" pos:end="89:9">{<block_content pos:start="37:13" pos:end="87:13">

            <switch pos:start="37:13" pos:end="67:13">switch<condition pos:start="37:19" pos:end="37:25">(<expr pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:24">depth</name></expr>)</condition><block pos:start="37:26" pos:end="67:13">{<block_content pos:start="39:13" pos:end="65:22">

            <case pos:start="39:13" pos:end="39:19">case <expr pos:start="39:18" pos:end="39:18"><literal type="number" pos:start="39:18" pos:end="39:18">1</literal></expr>:</case>

                <expr_stmt pos:start="41:17" pos:end="41:28"><expr pos:start="41:17" pos:end="41:27"><operator pos:start="41:17" pos:end="41:17">*</operator><name pos:start="41:18" pos:end="41:20">dst</name> <operator pos:start="41:22" pos:end="41:22">=</operator> <operator pos:start="41:24" pos:end="41:24">*</operator><name pos:start="41:25" pos:end="41:27">src</name></expr>;</expr_stmt>

                <break pos:start="43:17" pos:end="43:22">break;</break>

            <case pos:start="45:13" pos:end="45:19">case <expr pos:start="45:18" pos:end="45:18"><literal type="number" pos:start="45:18" pos:end="45:18">2</literal></expr>:</case>

                <expr_stmt pos:start="47:17" pos:end="47:49"><expr pos:start="47:17" pos:end="47:48"><operator pos:start="47:17" pos:end="47:17">*</operator><operator pos:start="47:18" pos:end="47:18">(</operator><operator pos:start="47:19" pos:end="47:19">(</operator><name pos:start="47:20" pos:end="47:27">uint16_t</name><operator pos:start="47:28" pos:end="47:28">*</operator><operator pos:start="47:29" pos:end="47:29">)</operator><name pos:start="47:30" pos:end="47:32">dst</name><operator pos:start="47:33" pos:end="47:33">)</operator> <operator pos:start="47:35" pos:end="47:35">=</operator> <call pos:start="47:37" pos:end="47:48"><name pos:start="47:37" pos:end="47:43">AV_RL16</name><argument_list pos:start="47:44" pos:end="47:48">(<argument pos:start="47:45" pos:end="47:47"><expr pos:start="47:45" pos:end="47:47"><name pos:start="47:45" pos:end="47:47">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="49:17" pos:end="49:22">break;</break>

            <case pos:start="51:13" pos:end="51:19">case <expr pos:start="51:18" pos:end="51:18"><literal type="number" pos:start="51:18" pos:end="51:18">3</literal></expr>:</case>

                <expr_stmt pos:start="53:17" pos:end="53:32"><expr pos:start="53:17" pos:end="53:31"><name pos:start="53:17" pos:end="53:22"><name pos:start="53:17" pos:end="53:19">dst</name><index pos:start="53:20" pos:end="53:22">[<expr pos:start="53:21" pos:end="53:21"><literal type="number" pos:start="53:21" pos:end="53:21">0</literal></expr>]</index></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:31"><name pos:start="53:26" pos:end="53:28">src</name><index pos:start="53:29" pos:end="53:31">[<expr pos:start="53:30" pos:end="53:30"><literal type="number" pos:start="53:30" pos:end="53:30">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:32"><expr pos:start="55:17" pos:end="55:31"><name pos:start="55:17" pos:end="55:22"><name pos:start="55:17" pos:end="55:19">dst</name><index pos:start="55:20" pos:end="55:22">[<expr pos:start="55:21" pos:end="55:21"><literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr>]</index></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:31"><name pos:start="55:26" pos:end="55:28">src</name><index pos:start="55:29" pos:end="55:31">[<expr pos:start="55:30" pos:end="55:30"><literal type="number" pos:start="55:30" pos:end="55:30">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:32"><expr pos:start="57:17" pos:end="57:31"><name pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:19">dst</name><index pos:start="57:20" pos:end="57:22">[<expr pos:start="57:21" pos:end="57:21"><literal type="number" pos:start="57:21" pos:end="57:21">2</literal></expr>]</index></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:31"><name pos:start="57:26" pos:end="57:28">src</name><index pos:start="57:29" pos:end="57:31">[<expr pos:start="57:30" pos:end="57:30"><literal type="number" pos:start="57:30" pos:end="57:30">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="59:17" pos:end="59:22">break;</break>

            <case pos:start="61:13" pos:end="61:19">case <expr pos:start="61:18" pos:end="61:18"><literal type="number" pos:start="61:18" pos:end="61:18">4</literal></expr>:</case>

                <expr_stmt pos:start="63:17" pos:end="63:49"><expr pos:start="63:17" pos:end="63:48"><operator pos:start="63:17" pos:end="63:17">*</operator><operator pos:start="63:18" pos:end="63:18">(</operator><operator pos:start="63:19" pos:end="63:19">(</operator><name pos:start="63:20" pos:end="63:27">uint32_t</name><operator pos:start="63:28" pos:end="63:28">*</operator><operator pos:start="63:29" pos:end="63:29">)</operator><name pos:start="63:30" pos:end="63:32">dst</name><operator pos:start="63:33" pos:end="63:33">)</operator> <operator pos:start="63:35" pos:end="63:35">=</operator> <call pos:start="63:37" pos:end="63:48"><name pos:start="63:37" pos:end="63:43">AV_RL32</name><argument_list pos:start="63:44" pos:end="63:48">(<argument pos:start="63:45" pos:end="63:47"><expr pos:start="63:45" pos:end="63:47"><name pos:start="63:45" pos:end="63:47">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="65:17" pos:end="65:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="69:13" pos:end="69:25"><expr pos:start="69:13" pos:end="69:24"><name pos:start="69:13" pos:end="69:15">dst</name> <operator pos:start="69:17" pos:end="69:18">+=</operator> <name pos:start="69:20" pos:end="69:24">depth</name></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="73:29"><if pos:start="71:13" pos:end="73:29">if<condition pos:start="71:15" pos:end="71:21">(<expr pos:start="71:16" pos:end="71:20"><operator pos:start="71:16" pos:end="71:16">!</operator><name pos:start="71:17" pos:end="71:20">type</name></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:29"><block_content pos:start="73:17" pos:end="73:29">

                <expr_stmt pos:start="73:17" pos:end="73:29"><expr pos:start="73:17" pos:end="73:28"><name pos:start="73:17" pos:end="73:19">src</name> <operator pos:start="73:21" pos:end="73:22">+=</operator> <name pos:start="73:24" pos:end="73:28">depth</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="77:13" pos:end="77:16"><expr pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:13">x</name><operator pos:start="77:14" pos:end="77:15">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="87:13"><if pos:start="79:13" pos:end="87:13">if<condition pos:start="79:15" pos:end="79:22">(<expr pos:start="79:16" pos:end="79:21"><name pos:start="79:16" pos:end="79:16">x</name> <operator pos:start="79:18" pos:end="79:19">==</operator> <name pos:start="79:21" pos:end="79:21">w</name></expr>)</condition><block pos:start="79:23" pos:end="87:13">{<block_content pos:start="81:17" pos:end="85:28">

                <expr_stmt pos:start="81:17" pos:end="81:22"><expr pos:start="81:17" pos:end="81:21"><name pos:start="81:17" pos:end="81:17">x</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <literal type="number" pos:start="81:21" pos:end="81:21">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:20"><expr pos:start="83:17" pos:end="83:19"><name pos:start="83:17" pos:end="83:17">y</name><operator pos:start="83:18" pos:end="83:19">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:28"><expr pos:start="85:17" pos:end="85:27"><name pos:start="85:17" pos:end="85:19">dst</name> <operator pos:start="85:21" pos:end="85:22">+=</operator> <name pos:start="85:24" pos:end="85:27">diff</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="91:9" pos:end="93:25"><if pos:start="91:9" pos:end="93:25">if<condition pos:start="91:11" pos:end="91:16">(<expr pos:start="91:12" pos:end="91:15"><name pos:start="91:12" pos:end="91:15">type</name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:25"><block_content pos:start="93:13" pos:end="93:25">

            <expr_stmt pos:start="93:13" pos:end="93:25"><expr pos:start="93:13" pos:end="93:24"><name pos:start="93:13" pos:end="93:15">src</name> <operator pos:start="93:17" pos:end="93:18">+=</operator> <name pos:start="93:20" pos:end="93:24">depth</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
