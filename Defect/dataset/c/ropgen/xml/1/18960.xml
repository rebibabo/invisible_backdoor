<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18960.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:33">av_thread_message_queue_free</name><parameter_list pos:start="1:34" pos:end="1:60">(<parameter pos:start="1:35" pos:end="1:59"><decl pos:start="1:35" pos:end="1:59"><type pos:start="1:35" pos:end="1:57"><name pos:start="1:35" pos:end="1:54">AVThreadMessageQueue</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier><modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:59">mq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="7:5" pos:end="22:0">

<cpp:if pos:start="5:1" pos:end="5:16">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:16">HAVE_THREADS</name></expr></cpp:if>

    <if_stmt pos:start="7:5" pos:end="22:0"><if pos:start="7:5" pos:end="22:0">if <condition pos:start="7:8" pos:end="7:12">(<expr pos:start="7:9" pos:end="7:11"><operator pos:start="7:9" pos:end="7:9">*</operator><name pos:start="7:10" pos:end="7:11">mq</name></expr>)</condition> <block pos:start="7:14" pos:end="22:0">{<block_content pos:start="9:9" pos:end="17:21">

        <expr_stmt pos:start="9:9" pos:end="9:37"><expr pos:start="9:9" pos:end="9:36"><call pos:start="9:9" pos:end="9:36"><name pos:start="9:9" pos:end="9:31">av_thread_message_flush</name><argument_list pos:start="9:32" pos:end="9:36">(<argument pos:start="9:33" pos:end="9:35"><expr pos:start="9:33" pos:end="9:35"><operator pos:start="9:33" pos:end="9:33">*</operator><name pos:start="9:34" pos:end="9:35">mq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:36"><expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:21">av_fifo_freep</name><argument_list pos:start="11:22" pos:end="11:35">(<argument pos:start="11:23" pos:end="11:34"><expr pos:start="11:23" pos:end="11:34"><operator pos:start="11:23" pos:end="11:23">&amp;</operator><name pos:start="11:24" pos:end="11:34"><operator pos:start="11:24" pos:end="11:24">(</operator><operator pos:start="11:25" pos:end="11:25">*</operator><name pos:start="11:26" pos:end="11:27">mq</name><operator pos:start="11:28" pos:end="11:28">)</operator><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:34">fifo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:43"><expr pos:start="13:9" pos:end="13:42"><call pos:start="13:9" pos:end="13:42"><name pos:start="13:9" pos:end="13:28">pthread_cond_destroy</name><argument_list pos:start="13:29" pos:end="13:42">(<argument pos:start="13:30" pos:end="13:41"><expr pos:start="13:30" pos:end="13:41"><operator pos:start="13:30" pos:end="13:30">&amp;</operator><name pos:start="13:31" pos:end="13:41"><operator pos:start="13:31" pos:end="13:31">(</operator><operator pos:start="13:32" pos:end="13:32">*</operator><name pos:start="13:33" pos:end="13:34">mq</name><operator pos:start="13:35" pos:end="13:35">)</operator><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:41">cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:44"><expr pos:start="15:9" pos:end="15:43"><call pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:29">pthread_mutex_destroy</name><argument_list pos:start="15:30" pos:end="15:43">(<argument pos:start="15:31" pos:end="15:42"><expr pos:start="15:31" pos:end="15:42"><operator pos:start="15:31" pos:end="15:31">&amp;</operator><name pos:start="15:32" pos:end="15:42"><operator pos:start="15:32" pos:end="15:32">(</operator><operator pos:start="15:33" pos:end="15:33">*</operator><name pos:start="15:34" pos:end="15:35">mq</name><operator pos:start="15:36" pos:end="15:36">)</operator><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:42">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:21"><expr pos:start="17:9" pos:end="17:20"><call pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:16">av_freep</name><argument_list pos:start="17:17" pos:end="17:20">(<argument pos:start="17:18" pos:end="17:19"><expr pos:start="17:18" pos:end="17:19"><name pos:start="17:18" pos:end="17:19">mq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
