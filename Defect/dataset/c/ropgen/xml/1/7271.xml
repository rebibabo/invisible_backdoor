<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7271.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">build_vlc</name><parameter_list pos:start="1:21" pos:end="1:76">(<parameter pos:start="1:22" pos:end="1:42"><decl pos:start="1:22" pos:end="1:42"><type pos:start="1:22" pos:end="1:42"><name pos:start="1:22" pos:end="1:35">AVCodecContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:42">avctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:52"><decl pos:start="1:45" pos:end="1:52"><type pos:start="1:45" pos:end="1:52"><name pos:start="1:45" pos:end="1:47">VLC</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">vlc</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:75"><decl pos:start="1:55" pos:end="1:75"><type pos:start="1:55" pos:end="1:75"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:68">uint32_t</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:75">table</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:83">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">Node</name></type> <name pos:start="5:10" pos:end="5:19"><name pos:start="5:10" pos:end="5:14">nodes</name><index pos:start="5:15" pos:end="5:19">[<expr pos:start="5:16" pos:end="5:18"><literal type="number" pos:start="5:16" pos:end="5:18">512</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:22"><name pos:start="7:14" pos:end="7:17">bits</name><index pos:start="7:18" pos:end="7:22">[<expr pos:start="7:19" pos:end="7:21"><literal type="number" pos:start="7:19" pos:end="7:21">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int16_t</name></type> <name pos:start="9:13" pos:end="9:21"><name pos:start="9:13" pos:end="9:16">lens</name><index pos:start="9:17" pos:end="9:21">[<expr pos:start="9:18" pos:end="9:20"><literal type="number" pos:start="9:18" pos:end="9:20">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:16">xlat</name><index pos:start="11:17" pos:end="11:21">[<expr pos:start="11:18" pos:end="11:20"><literal type="number" pos:start="11:18" pos:end="11:20">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">cur_node</name></decl>, <decl pos:start="13:19" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:19">i</name></decl>, <decl pos:start="13:22" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:22">j</name></decl>, <decl pos:start="13:25" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:27">pos</name> <init pos:start="13:29" pos:end="13:31">= <expr pos:start="13:31" pos:end="13:31"><literal type="number" pos:start="13:31" pos:end="13:31">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><call pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:15">ff_free_vlc</name><argument_list pos:start="17:16" pos:end="17:20">(<argument pos:start="17:17" pos:end="17:19"><expr pos:start="17:17" pos:end="17:19"><name pos:start="17:17" pos:end="17:19">vlc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="33:5">for <control pos:start="21:9" pos:end="21:29">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:24"><expr pos:start="21:17" pos:end="21:23"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <literal type="number" pos:start="21:21" pos:end="21:23">256</literal></expr>;</condition> <incr pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:26">i</name><operator pos:start="21:27" pos:end="21:28">++</operator></expr></incr>)</control> <block pos:start="21:31" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:27">

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:13">nodes</name><index pos:start="23:14" pos:end="23:16">[<expr pos:start="23:15" pos:end="23:15"><name pos:start="23:15" pos:end="23:15">i</name></expr>]</index></name><operator pos:start="23:17" pos:end="23:17">.</operator><name pos:start="23:18" pos:end="23:22">count</name> <operator pos:start="23:24" pos:end="23:24">=</operator> <name pos:start="23:26" pos:end="23:33"><name pos:start="23:26" pos:end="23:30">table</name><index pos:start="23:31" pos:end="23:33">[<expr pos:start="23:32" pos:end="23:32"><name pos:start="23:32" pos:end="23:32">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:27"><expr pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:13">nodes</name><index pos:start="25:14" pos:end="25:16">[<expr pos:start="25:15" pos:end="25:15"><name pos:start="25:15" pos:end="25:15">i</name></expr>]</index></name><operator pos:start="25:17" pos:end="25:17">.</operator><name pos:start="25:18" pos:end="25:20">sym</name>   <operator pos:start="25:24" pos:end="25:24">=</operator> <name pos:start="25:26" pos:end="25:26">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:13">nodes</name><index pos:start="27:14" pos:end="27:16">[<expr pos:start="27:15" pos:end="27:15"><name pos:start="27:15" pos:end="27:15">i</name></expr>]</index></name><operator pos:start="27:17" pos:end="27:17">.</operator><name pos:start="27:18" pos:end="27:19">n0</name>    <operator pos:start="27:24" pos:end="27:24">=</operator> <operator pos:start="27:26" pos:end="27:26">-</operator><literal type="number" pos:start="27:27" pos:end="27:27">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:13">nodes</name><index pos:start="29:14" pos:end="29:16">[<expr pos:start="29:15" pos:end="29:15"><name pos:start="29:15" pos:end="29:15">i</name></expr>]</index></name><operator pos:start="29:17" pos:end="29:17">.</operator><name pos:start="29:18" pos:end="29:18">l</name>     <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:26">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:27"><expr pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:13">nodes</name><index pos:start="31:14" pos:end="31:16">[<expr pos:start="31:15" pos:end="31:15"><name pos:start="31:15" pos:end="31:15">i</name></expr>]</index></name><operator pos:start="31:17" pos:end="31:17">.</operator><name pos:start="31:18" pos:end="31:18">r</name>     <operator pos:start="31:24" pos:end="31:24">=</operator> <name pos:start="31:26" pos:end="31:26">i</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:12">cur_node</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <literal type="number" pos:start="37:16" pos:end="37:18">256</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:10"><expr pos:start="39:5" pos:end="39:9"><name pos:start="39:5" pos:end="39:5">j</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <literal type="number" pos:start="39:9" pos:end="39:9">0</literal></expr>;</expr_stmt>

    <do pos:start="41:5" pos:end="115:34">do <block pos:start="41:8" pos:end="115:5">{<block_content pos:start="43:9" pos:end="113:12">

        <for pos:start="43:9" pos:end="111:9">for <control pos:start="43:13" pos:end="43:26">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">i</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:21">;</condition> <incr pos:start="43:23" pos:end="43:25"><expr pos:start="43:23" pos:end="43:25"><name pos:start="43:23" pos:end="43:23">i</name><operator pos:start="43:24" pos:end="43:25">++</operator></expr></incr>)</control> <block pos:start="43:28" pos:end="111:9">{<block_content pos:start="45:13" pos:end="109:23">

            <decl_stmt pos:start="45:13" pos:end="45:29"><decl pos:start="45:13" pos:end="45:28"><type pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">int</name></type> <name pos:start="45:17" pos:end="45:24">new_node</name> <init pos:start="45:26" pos:end="45:28">= <expr pos:start="45:28" pos:end="45:28"><name pos:start="45:28" pos:end="45:28">j</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="47:13" pos:end="47:38"><decl pos:start="47:13" pos:end="47:37"><type pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:15">int</name></type> <name pos:start="47:17" pos:end="47:26">first_node</name> <init pos:start="47:28" pos:end="47:37">= <expr pos:start="47:30" pos:end="47:37"><name pos:start="47:30" pos:end="47:37">cur_node</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:39"><decl pos:start="49:13" pos:end="49:38"><type pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">int</name></type> <name pos:start="49:17" pos:end="49:27">second_node</name> <init pos:start="49:29" pos:end="49:38">= <expr pos:start="49:31" pos:end="49:38"><name pos:start="49:31" pos:end="49:38">cur_node</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:23"><decl pos:start="51:13" pos:end="51:18"><type pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:15">int</name></type> <name pos:start="51:17" pos:end="51:18">nd</name></decl>, <decl pos:start="51:21" pos:end="51:22"><type ref="prev" pos:start="51:13" pos:end="51:15"/><name pos:start="51:21" pos:end="51:22">st</name></decl>;</decl_stmt>



            <expr_stmt pos:start="55:13" pos:end="55:39"><expr pos:start="55:13" pos:end="55:38"><name pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:17">nodes</name><index pos:start="55:18" pos:end="55:27">[<expr pos:start="55:19" pos:end="55:26"><name pos:start="55:19" pos:end="55:26">cur_node</name></expr>]</index></name><operator pos:start="55:28" pos:end="55:28">.</operator><name pos:start="55:29" pos:end="55:33">count</name> <operator pos:start="55:35" pos:end="55:35">=</operator> <operator pos:start="55:37" pos:end="55:37">-</operator><literal type="number" pos:start="55:38" pos:end="55:38">1</literal></expr>;</expr_stmt>



            <do pos:start="59:13" pos:end="81:43">do <block pos:start="59:16" pos:end="81:13">{<block_content pos:start="61:17" pos:end="79:30">

                <decl_stmt pos:start="61:17" pos:end="61:48"><decl pos:start="61:17" pos:end="61:47"><type pos:start="61:17" pos:end="61:19"><name pos:start="61:17" pos:end="61:19">int</name></type> <name pos:start="61:21" pos:end="61:23">val</name> <init pos:start="61:25" pos:end="61:47">= <expr pos:start="61:27" pos:end="61:47"><name pos:start="61:27" pos:end="61:41"><name pos:start="61:27" pos:end="61:31">nodes</name><index pos:start="61:32" pos:end="61:41">[<expr pos:start="61:33" pos:end="61:40"><name pos:start="61:33" pos:end="61:40">new_node</name></expr>]</index></name><operator pos:start="61:42" pos:end="61:42">.</operator><name pos:start="61:43" pos:end="61:47">count</name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="63:17" pos:end="77:17"><if pos:start="63:17" pos:end="77:17">if <condition pos:start="63:20" pos:end="63:59">(<expr pos:start="63:21" pos:end="63:58"><name pos:start="63:21" pos:end="63:23">val</name> <operator pos:start="63:25" pos:end="63:26">&amp;&amp;</operator> <operator pos:start="63:28" pos:end="63:28">(</operator><name pos:start="63:29" pos:end="63:31">val</name> <operator pos:start="63:33" pos:end="63:33">&lt;</operator> <name pos:start="63:35" pos:end="63:51"><name pos:start="63:35" pos:end="63:39">nodes</name><index pos:start="63:40" pos:end="63:51">[<expr pos:start="63:41" pos:end="63:50"><name pos:start="63:41" pos:end="63:50">first_node</name></expr>]</index></name><operator pos:start="63:52" pos:end="63:52">.</operator><name pos:start="63:53" pos:end="63:57">count</name><operator pos:start="63:58" pos:end="63:58">)</operator></expr>)</condition> <block pos:start="63:61" pos:end="77:17">{<block_content pos:start="65:21" pos:end="75:21">

                    <if_stmt pos:start="65:21" pos:end="75:21"><if pos:start="65:21" pos:end="69:21">if <condition pos:start="65:24" pos:end="65:56">(<expr pos:start="65:25" pos:end="65:55"><name pos:start="65:25" pos:end="65:27">val</name> <operator pos:start="65:29" pos:end="65:30">&gt;=</operator> <name pos:start="65:32" pos:end="65:49"><name pos:start="65:32" pos:end="65:36">nodes</name><index pos:start="65:37" pos:end="65:49">[<expr pos:start="65:38" pos:end="65:48"><name pos:start="65:38" pos:end="65:48">second_node</name></expr>]</index></name><operator pos:start="65:50" pos:end="65:50">.</operator><name pos:start="65:51" pos:end="65:55">count</name></expr>)</condition> <block pos:start="65:58" pos:end="69:21">{<block_content pos:start="67:25" pos:end="67:46">

                        <expr_stmt pos:start="67:25" pos:end="67:46"><expr pos:start="67:25" pos:end="67:45"><name pos:start="67:25" pos:end="67:34">first_node</name> <operator pos:start="67:36" pos:end="67:36">=</operator> <name pos:start="67:38" pos:end="67:45">new_node</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="69:23" pos:end="75:21">else <block pos:start="69:28" pos:end="75:21">{<block_content pos:start="71:25" pos:end="73:47">

                        <expr_stmt pos:start="71:25" pos:end="71:49"><expr pos:start="71:25" pos:end="71:48"><name pos:start="71:25" pos:end="71:34">first_node</name> <operator pos:start="71:36" pos:end="71:36">=</operator> <name pos:start="71:38" pos:end="71:48">second_node</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="73:25" pos:end="73:47"><expr pos:start="73:25" pos:end="73:46"><name pos:start="73:25" pos:end="73:35">second_node</name> <operator pos:start="73:37" pos:end="73:37">=</operator> <name pos:start="73:39" pos:end="73:46">new_node</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:30"><expr pos:start="79:17" pos:end="79:29"><name pos:start="79:17" pos:end="79:24">new_node</name> <operator pos:start="79:26" pos:end="79:27">+=</operator> <literal type="number" pos:start="79:29" pos:end="79:29">1</literal></expr>;</expr_stmt>

            </block_content>}</block> while <condition pos:start="81:21" pos:end="81:42">(<expr pos:start="81:22" pos:end="81:41"><name pos:start="81:22" pos:end="81:29">new_node</name> <operator pos:start="81:31" pos:end="81:32">!=</operator> <name pos:start="81:34" pos:end="81:41">cur_node</name></expr>)</condition>;</do>



            <if_stmt pos:start="85:13" pos:end="87:22"><if pos:start="85:13" pos:end="87:22">if <condition pos:start="85:16" pos:end="85:39">(<expr pos:start="85:17" pos:end="85:38"><name pos:start="85:17" pos:end="85:26">first_node</name> <operator pos:start="85:28" pos:end="85:29">==</operator> <name pos:start="85:31" pos:end="85:38">cur_node</name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:22"><block_content pos:start="87:17" pos:end="87:22">

                <break pos:start="87:17" pos:end="87:22">break;</break></block_content></block></if></if_stmt>



            <expr_stmt pos:start="91:13" pos:end="91:42"><expr pos:start="91:13" pos:end="91:41"><name pos:start="91:13" pos:end="91:14">nd</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:35"><name pos:start="91:18" pos:end="91:22">nodes</name><index pos:start="91:23" pos:end="91:35">[<expr pos:start="91:24" pos:end="91:34"><name pos:start="91:24" pos:end="91:34">second_node</name></expr>]</index></name><operator pos:start="91:36" pos:end="91:36">.</operator><name pos:start="91:37" pos:end="91:41">count</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:41"><expr pos:start="93:13" pos:end="93:40"><name pos:start="93:13" pos:end="93:14">st</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <name pos:start="93:18" pos:end="93:34"><name pos:start="93:18" pos:end="93:22">nodes</name><index pos:start="93:23" pos:end="93:34">[<expr pos:start="93:24" pos:end="93:33"><name pos:start="93:24" pos:end="93:33">first_node</name></expr>]</index></name><operator pos:start="93:35" pos:end="93:35">.</operator><name pos:start="93:36" pos:end="93:40">count</name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:41"><expr pos:start="95:13" pos:end="95:40"><name pos:start="95:13" pos:end="95:30"><name pos:start="95:13" pos:end="95:17">nodes</name><index pos:start="95:18" pos:end="95:30">[<expr pos:start="95:19" pos:end="95:29"><name pos:start="95:19" pos:end="95:29">second_node</name></expr>]</index></name><operator pos:start="95:31" pos:end="95:31">.</operator><name pos:start="95:32" pos:end="95:36">count</name> <operator pos:start="95:38" pos:end="95:38">=</operator> <literal type="number" pos:start="95:40" pos:end="95:40">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:41"><expr pos:start="97:13" pos:end="97:40"><name pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:17">nodes</name><index pos:start="97:18" pos:end="97:29">[<expr pos:start="97:19" pos:end="97:28"><name pos:start="97:19" pos:end="97:28">first_node</name></expr>]</index></name><operator pos:start="97:30" pos:end="97:30">.</operator><name pos:start="97:31" pos:end="97:35">count</name>  <operator pos:start="97:38" pos:end="97:38">=</operator> <literal type="number" pos:start="97:40" pos:end="97:40">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:44"><expr pos:start="99:13" pos:end="99:43"><name pos:start="99:13" pos:end="99:27"><name pos:start="99:13" pos:end="99:17">nodes</name><index pos:start="99:18" pos:end="99:27">[<expr pos:start="99:19" pos:end="99:26"><name pos:start="99:19" pos:end="99:26">cur_node</name></expr>]</index></name><operator pos:start="99:28" pos:end="99:28">.</operator><name pos:start="99:29" pos:end="99:33">count</name> <operator pos:start="99:35" pos:end="99:35">=</operator> <name pos:start="99:37" pos:end="99:38">nd</name> <operator pos:start="99:40" pos:end="99:40">+</operator> <name pos:start="99:42" pos:end="99:43">st</name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:37"><expr pos:start="101:13" pos:end="101:36"><name pos:start="101:13" pos:end="101:27"><name pos:start="101:13" pos:end="101:17">nodes</name><index pos:start="101:18" pos:end="101:27">[<expr pos:start="101:19" pos:end="101:26"><name pos:start="101:19" pos:end="101:26">cur_node</name></expr>]</index></name><operator pos:start="101:28" pos:end="101:28">.</operator><name pos:start="101:29" pos:end="101:31">sym</name> <operator pos:start="101:33" pos:end="101:33">=</operator> <operator pos:start="101:35" pos:end="101:35">-</operator><literal type="number" pos:start="101:36" pos:end="101:36">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:42"><expr pos:start="103:13" pos:end="103:41"><name pos:start="103:13" pos:end="103:27"><name pos:start="103:13" pos:end="103:17">nodes</name><index pos:start="103:18" pos:end="103:27">[<expr pos:start="103:19" pos:end="103:26"><name pos:start="103:19" pos:end="103:26">cur_node</name></expr>]</index></name><operator pos:start="103:28" pos:end="103:28">.</operator><name pos:start="103:29" pos:end="103:30">n0</name> <operator pos:start="103:32" pos:end="103:32">=</operator> <name pos:start="103:34" pos:end="103:41">cur_node</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:43"><expr pos:start="105:13" pos:end="105:42"><name pos:start="105:13" pos:end="105:27"><name pos:start="105:13" pos:end="105:17">nodes</name><index pos:start="105:18" pos:end="105:27">[<expr pos:start="105:19" pos:end="105:26"><name pos:start="105:19" pos:end="105:26">cur_node</name></expr>]</index></name><operator pos:start="105:28" pos:end="105:28">.</operator><name pos:start="105:29" pos:end="105:29">l</name> <operator pos:start="105:31" pos:end="105:31">=</operator> <name pos:start="105:33" pos:end="105:42">first_node</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:44"><expr pos:start="107:13" pos:end="107:43"><name pos:start="107:13" pos:end="107:27"><name pos:start="107:13" pos:end="107:17">nodes</name><index pos:start="107:18" pos:end="107:27">[<expr pos:start="107:19" pos:end="107:26"><name pos:start="107:19" pos:end="107:26">cur_node</name></expr>]</index></name><operator pos:start="107:28" pos:end="107:28">.</operator><name pos:start="107:29" pos:end="107:29">r</name> <operator pos:start="107:31" pos:end="107:31">=</operator> <name pos:start="107:33" pos:end="107:43">second_node</name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:23"><expr pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:20">cur_node</name><operator pos:start="109:21" pos:end="109:22">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="113:9" pos:end="113:12"><expr pos:start="113:9" pos:end="113:11"><name pos:start="113:9" pos:end="113:9">j</name><operator pos:start="113:10" pos:end="113:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="115:13" pos:end="115:33">(<expr pos:start="115:14" pos:end="115:32"><name pos:start="115:14" pos:end="115:21">cur_node</name> <operator pos:start="115:23" pos:end="115:23">-</operator> <literal type="number" pos:start="115:25" pos:end="115:27">256</literal> <operator pos:start="115:29" pos:end="115:30">==</operator> <name pos:start="115:32" pos:end="115:32">j</name></expr>)</condition>;</do>



    <expr_stmt pos:start="119:5" pos:end="119:70"><expr pos:start="119:5" pos:end="119:69"><call pos:start="119:5" pos:end="119:69"><name pos:start="119:5" pos:end="119:18">get_tree_codes</name><argument_list pos:start="119:19" pos:end="119:69">(<argument pos:start="119:20" pos:end="119:23"><expr pos:start="119:20" pos:end="119:23"><name pos:start="119:20" pos:end="119:23">bits</name></expr></argument>, <argument pos:start="119:26" pos:end="119:29"><expr pos:start="119:26" pos:end="119:29"><name pos:start="119:26" pos:end="119:29">lens</name></expr></argument>, <argument pos:start="119:32" pos:end="119:35"><expr pos:start="119:32" pos:end="119:35"><name pos:start="119:32" pos:end="119:35">xlat</name></expr></argument>, <argument pos:start="119:38" pos:end="119:42"><expr pos:start="119:38" pos:end="119:42"><name pos:start="119:38" pos:end="119:42">nodes</name></expr></argument>, <argument pos:start="119:45" pos:end="119:56"><expr pos:start="119:45" pos:end="119:56"><name pos:start="119:45" pos:end="119:52">cur_node</name> <operator pos:start="119:54" pos:end="119:54">-</operator> <literal type="number" pos:start="119:56" pos:end="119:56">1</literal></expr></argument>, <argument pos:start="119:59" pos:end="119:59"><expr pos:start="119:59" pos:end="119:59"><literal type="number" pos:start="119:59" pos:end="119:59">0</literal></expr></argument>, <argument pos:start="119:62" pos:end="119:62"><expr pos:start="119:62" pos:end="119:62"><literal type="number" pos:start="119:62" pos:end="119:62">0</literal></expr></argument>, <argument pos:start="119:65" pos:end="119:68"><expr pos:start="119:65" pos:end="119:68"><operator pos:start="119:65" pos:end="119:65">&amp;</operator><name pos:start="119:66" pos:end="119:68">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="123:5" pos:end="123:83">return <expr pos:start="123:12" pos:end="123:82"><call pos:start="123:12" pos:end="123:82"><name pos:start="123:12" pos:end="123:29">ff_init_vlc_sparse</name><argument_list pos:start="123:30" pos:end="123:82">(<argument pos:start="123:31" pos:end="123:33"><expr pos:start="123:31" pos:end="123:33"><name pos:start="123:31" pos:end="123:33">vlc</name></expr></argument>, <argument pos:start="123:36" pos:end="123:37"><expr pos:start="123:36" pos:end="123:37"><literal type="number" pos:start="123:36" pos:end="123:37">10</literal></expr></argument>, <argument pos:start="123:40" pos:end="123:42"><expr pos:start="123:40" pos:end="123:42"><name pos:start="123:40" pos:end="123:42">pos</name></expr></argument>, <argument pos:start="123:45" pos:end="123:48"><expr pos:start="123:45" pos:end="123:48"><name pos:start="123:45" pos:end="123:48">lens</name></expr></argument>, <argument pos:start="123:51" pos:end="123:51"><expr pos:start="123:51" pos:end="123:51"><literal type="number" pos:start="123:51" pos:end="123:51">2</literal></expr></argument>, <argument pos:start="123:54" pos:end="123:54"><expr pos:start="123:54" pos:end="123:54"><literal type="number" pos:start="123:54" pos:end="123:54">2</literal></expr></argument>, <argument pos:start="123:57" pos:end="123:60"><expr pos:start="123:57" pos:end="123:60"><name pos:start="123:57" pos:end="123:60">bits</name></expr></argument>, <argument pos:start="123:63" pos:end="123:63"><expr pos:start="123:63" pos:end="123:63"><literal type="number" pos:start="123:63" pos:end="123:63">4</literal></expr></argument>, <argument pos:start="123:66" pos:end="123:66"><expr pos:start="123:66" pos:end="123:66"><literal type="number" pos:start="123:66" pos:end="123:66">4</literal></expr></argument>, <argument pos:start="123:69" pos:end="123:72"><expr pos:start="123:69" pos:end="123:72"><name pos:start="123:69" pos:end="123:72">xlat</name></expr></argument>, <argument pos:start="123:75" pos:end="123:75"><expr pos:start="123:75" pos:end="123:75"><literal type="number" pos:start="123:75" pos:end="123:75">1</literal></expr></argument>, <argument pos:start="123:78" pos:end="123:78"><expr pos:start="123:78" pos:end="123:78"><literal type="number" pos:start="123:78" pos:end="123:78">1</literal></expr></argument>, <argument pos:start="123:81" pos:end="123:81"><expr pos:start="123:81" pos:end="123:81"><literal type="number" pos:start="123:81" pos:end="123:81">0</literal></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
