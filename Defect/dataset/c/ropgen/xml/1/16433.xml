<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16433.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">init_paths</name><parameter_list pos:start="1:16" pos:end="1:35">(<parameter pos:start="1:17" pos:end="1:34"><decl pos:start="1:17" pos:end="1:34"><type pos:start="1:17" pos:end="1:28"><specifier pos:start="1:17" pos:end="1:21">const</specifier> <name pos:start="1:23" pos:end="1:26">char</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:34">prefix</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:27"><name pos:start="5:10" pos:end="5:17">pref_buf</name><index pos:start="5:18" pos:end="5:27">[<expr pos:start="5:19" pos:end="5:26"><name pos:start="5:19" pos:end="5:26">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:15"><if pos:start="9:5" pos:end="13:15">if <condition pos:start="9:8" pos:end="11:29">(<expr pos:start="9:9" pos:end="11:28"><name pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:14">prefix</name><index pos:start="9:15" pos:end="9:17">[<expr pos:start="9:16" pos:end="9:16"><literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>]</index></name> <operator pos:start="9:19" pos:end="9:20">==</operator> <literal type="char" pos:start="9:22" pos:end="9:25">'\0'</literal> <operator pos:start="9:27" pos:end="9:28">||</operator>

        <operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:28"><name pos:start="11:10" pos:end="11:15">strcmp</name><argument_list pos:start="11:16" pos:end="11:28">(<argument pos:start="11:17" pos:end="11:22"><expr pos:start="11:17" pos:end="11:22"><name pos:start="11:17" pos:end="11:22">prefix</name></expr></argument>, <argument pos:start="11:25" pos:end="11:27"><expr pos:start="11:25" pos:end="11:27"><literal type="string" pos:start="11:25" pos:end="11:27">"/"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="39:56"><if pos:start="17:5" pos:end="37:5">if <condition pos:start="17:8" pos:end="17:25">(<expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:14">prefix</name><index pos:start="17:15" pos:end="17:17">[<expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>]</index></name> <operator pos:start="17:19" pos:end="17:20">!=</operator> <literal type="char" pos:start="17:22" pos:end="17:24">'/'</literal></expr>)</condition> <block pos:start="17:27" pos:end="37:5">{<block_content pos:start="19:9" pos:end="35:18">

        <decl_stmt pos:start="19:9" pos:end="19:36"><decl pos:start="19:9" pos:end="19:35"><type pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:12">char</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:17">cwd</name> <init pos:start="19:19" pos:end="19:35">= <expr pos:start="19:21" pos:end="19:35"><call pos:start="19:21" pos:end="19:35"><name pos:start="19:21" pos:end="19:26">getcwd</name><argument_list pos:start="19:27" pos:end="19:35">(<argument pos:start="19:28" pos:end="19:31"><expr pos:start="19:28" pos:end="19:31"><name pos:start="19:28" pos:end="19:31">NULL</name></expr></argument>, <argument pos:start="19:34" pos:end="19:34"><expr pos:start="19:34" pos:end="19:34"><literal type="number" pos:start="19:34" pos:end="19:34">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:47"><decl pos:start="21:9" pos:end="21:46"><type pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:14">size_t</name></type> <name pos:start="21:16" pos:end="21:27">pref_buf_len</name> <init pos:start="21:29" pos:end="21:46">= <expr pos:start="21:31" pos:end="21:46"><sizeof pos:start="21:31" pos:end="21:46">sizeof<argument_list pos:start="21:37" pos:end="21:46">(<argument pos:start="21:38" pos:end="21:45"><expr pos:start="21:38" pos:end="21:45"><name pos:start="21:38" pos:end="21:45">pref_buf</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="25:9" pos:end="27:20"><if pos:start="25:9" pos:end="27:20">if <condition pos:start="25:12" pos:end="25:17">(<expr pos:start="25:13" pos:end="25:16"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:16">cwd</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:20"><block_content pos:start="27:13" pos:end="27:20">

            <expr_stmt pos:start="27:13" pos:end="27:20"><expr pos:start="27:13" pos:end="27:19"><call pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:17">abort</name><argument_list pos:start="27:18" pos:end="27:19">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:49"><expr pos:start="29:9" pos:end="29:48"><call pos:start="29:9" pos:end="29:48"><name pos:start="29:9" pos:end="29:15">pstrcpy</name><argument_list pos:start="29:16" pos:end="29:48">(<argument pos:start="29:17" pos:end="29:24"><expr pos:start="29:17" pos:end="29:24"><name pos:start="29:17" pos:end="29:24">pref_buf</name></expr></argument>, <argument pos:start="29:27" pos:end="29:42"><expr pos:start="29:27" pos:end="29:42"><sizeof pos:start="29:27" pos:end="29:42">sizeof<argument_list pos:start="29:33" pos:end="29:42">(<argument pos:start="29:34" pos:end="29:41"><expr pos:start="29:34" pos:end="29:41"><name pos:start="29:34" pos:end="29:41">pref_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:45" pos:end="29:47"><expr pos:start="29:45" pos:end="29:47"><name pos:start="29:45" pos:end="29:47">cwd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:45"><expr pos:start="31:9" pos:end="31:44"><call pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:15">pstrcat</name><argument_list pos:start="31:16" pos:end="31:44">(<argument pos:start="31:17" pos:end="31:24"><expr pos:start="31:17" pos:end="31:24"><name pos:start="31:17" pos:end="31:24">pref_buf</name></expr></argument>, <argument pos:start="31:27" pos:end="31:38"><expr pos:start="31:27" pos:end="31:38"><name pos:start="31:27" pos:end="31:38">pref_buf_len</name></expr></argument>, <argument pos:start="31:41" pos:end="31:43"><expr pos:start="31:41" pos:end="31:43"><literal type="string" pos:start="31:41" pos:end="31:43">"/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:48"><expr pos:start="33:9" pos:end="33:47"><call pos:start="33:9" pos:end="33:47"><name pos:start="33:9" pos:end="33:15">pstrcat</name><argument_list pos:start="33:16" pos:end="33:47">(<argument pos:start="33:17" pos:end="33:24"><expr pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:24">pref_buf</name></expr></argument>, <argument pos:start="33:27" pos:end="33:38"><expr pos:start="33:27" pos:end="33:38"><name pos:start="33:27" pos:end="33:38">pref_buf_len</name></expr></argument>, <argument pos:start="33:41" pos:end="33:46"><expr pos:start="33:41" pos:end="33:46"><name pos:start="33:41" pos:end="33:46">prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:18"><expr pos:start="35:9" pos:end="35:17"><call pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:12">free</name><argument_list pos:start="35:13" pos:end="35:17">(<argument pos:start="35:14" pos:end="35:16"><expr pos:start="35:14" pos:end="35:16"><name pos:start="35:14" pos:end="35:16">cwd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="39:56">else<block type="pseudo" pos:start="39:9" pos:end="39:56"><block_content pos:start="39:9" pos:end="39:56">

        <expr_stmt pos:start="39:9" pos:end="39:56"><expr pos:start="39:9" pos:end="39:55"><call pos:start="39:9" pos:end="39:55"><name pos:start="39:9" pos:end="39:15">pstrcpy</name><argument_list pos:start="39:16" pos:end="39:55">(<argument pos:start="39:17" pos:end="39:24"><expr pos:start="39:17" pos:end="39:24"><name pos:start="39:17" pos:end="39:24">pref_buf</name></expr></argument>, <argument pos:start="39:27" pos:end="39:42"><expr pos:start="39:27" pos:end="39:42"><sizeof pos:start="39:27" pos:end="39:42">sizeof<argument_list pos:start="39:33" pos:end="39:42">(<argument pos:start="39:34" pos:end="39:41"><expr pos:start="39:34" pos:end="39:41"><name pos:start="39:34" pos:end="39:41">pref_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:45" pos:end="39:54"><expr pos:start="39:45" pos:end="39:54"><name pos:start="39:45" pos:end="39:50">prefix</name> <operator pos:start="39:52" pos:end="39:52">+</operator> <literal type="number" pos:start="39:54" pos:end="39:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:8">base</name> <operator pos:start="43:10" pos:end="43:10">=</operator> <call pos:start="43:12" pos:end="43:40"><name pos:start="43:12" pos:end="43:20">new_entry</name><argument_list pos:start="43:21" pos:end="43:40">(<argument pos:start="43:22" pos:end="43:23"><expr pos:start="43:22" pos:end="43:23"><literal type="string" pos:start="43:22" pos:end="43:23">""</literal></expr></argument>, <argument pos:start="43:26" pos:end="43:29"><expr pos:start="43:26" pos:end="43:29"><name pos:start="43:26" pos:end="43:29">NULL</name></expr></argument>, <argument pos:start="43:32" pos:end="43:39"><expr pos:start="43:32" pos:end="43:39"><name pos:start="43:32" pos:end="43:39">pref_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:31"><expr pos:start="45:5" pos:end="45:30"><name pos:start="45:5" pos:end="45:8">base</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <call pos:start="45:12" pos:end="45:30"><name pos:start="45:12" pos:end="45:24">add_dir_maybe</name><argument_list pos:start="45:25" pos:end="45:30">(<argument pos:start="45:26" pos:end="45:29"><expr pos:start="45:26" pos:end="45:29"><name pos:start="45:26" pos:end="45:29">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="61:5"><if pos:start="47:5" pos:end="57:5">if <condition pos:start="47:8" pos:end="47:31">(<expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:12">base</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:25">num_entries</name></name> <operator pos:start="47:27" pos:end="47:28">==</operator> <literal type="number" pos:start="47:30" pos:end="47:30">0</literal></expr>)</condition> <block pos:start="47:33" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:20">

        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><call pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:14">g_free</name><argument_list pos:start="49:15" pos:end="49:30">(<argument pos:start="49:16" pos:end="49:29"><expr pos:start="49:16" pos:end="49:29"><name pos:start="49:16" pos:end="49:29"><name pos:start="49:16" pos:end="49:19">base</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:29">pathname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:25"><expr pos:start="51:9" pos:end="51:24"><call pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:12">free</name><argument_list pos:start="51:13" pos:end="51:24">(<argument pos:start="51:14" pos:end="51:23"><expr pos:start="51:14" pos:end="51:23"><name pos:start="51:14" pos:end="51:23"><name pos:start="51:14" pos:end="51:17">base</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:23">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:19"><expr pos:start="53:9" pos:end="53:18"><call pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:12">free</name><argument_list pos:start="53:13" pos:end="53:18">(<argument pos:start="53:14" pos:end="53:17"><expr pos:start="53:14" pos:end="53:17"><name pos:start="53:14" pos:end="53:17">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:20"><expr pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:12">base</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:19">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="61:5">else <block pos:start="57:12" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:32">

        <expr_stmt pos:start="59:9" pos:end="59:32"><expr pos:start="59:9" pos:end="59:31"><call pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:19">set_parents</name><argument_list pos:start="59:20" pos:end="59:31">(<argument pos:start="59:21" pos:end="59:24"><expr pos:start="59:21" pos:end="59:24"><name pos:start="59:21" pos:end="59:24">base</name></expr></argument>, <argument pos:start="59:27" pos:end="59:30"><expr pos:start="59:27" pos:end="59:30"><name pos:start="59:27" pos:end="59:30">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
