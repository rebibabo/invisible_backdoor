<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24033.c" pos:tabs="8"><function pos:start="1:1" pos:end="237:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">tx_consume</name><parameter_list pos:start="1:22" pos:end="1:48">(<parameter pos:start="1:23" pos:end="1:31"><decl pos:start="1:23" pos:end="1:31"><type pos:start="1:23" pos:end="1:31"><name pos:start="1:23" pos:end="1:28">Rocker</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:31">r</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:41">DescInfo</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">info</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="237:1">{<block_content pos:start="5:5" pos:end="235:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">dev</name> <init pos:start="5:20" pos:end="5:34">= <expr pos:start="5:22" pos:end="5:34"><call pos:start="5:22" pos:end="5:34"><name pos:start="5:22" pos:end="5:31">PCI_DEVICE</name><argument_list pos:start="5:32" pos:end="5:34">(<argument pos:start="5:33" pos:end="5:33"><expr pos:start="5:33" pos:end="5:33"><name pos:start="5:33" pos:end="5:33">r</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">buf</name> <init pos:start="7:15" pos:end="7:40">= <expr pos:start="7:17" pos:end="7:40"><call pos:start="7:17" pos:end="7:40"><name pos:start="7:17" pos:end="7:28">desc_get_buf</name><argument_list pos:start="7:29" pos:end="7:40">(<argument pos:start="7:30" pos:end="7:33"><expr pos:start="7:30" pos:end="7:33"><name pos:start="7:30" pos:end="7:33">info</name></expr></argument>, <argument pos:start="7:36" pos:end="7:39"><expr pos:start="7:36" pos:end="7:39"><name pos:start="7:36" pos:end="7:39">true</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">RockerTlv</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:23">tlv_frag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">RockerTlv</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:42"><name pos:start="11:16" pos:end="11:19">tlvs</name><index pos:start="11:20" pos:end="11:42">[<expr pos:start="11:21" pos:end="11:41"><name pos:start="11:21" pos:end="11:37">ROCKER_TLV_TX_MAX</name> <operator pos:start="11:39" pos:end="11:39">+</operator> <literal type="number" pos:start="11:41" pos:end="11:41">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:16">iovec</name></name></type> <name pos:start="13:18" pos:end="13:41"><name pos:start="13:18" pos:end="13:20">iov</name><index pos:start="13:21" pos:end="13:41">[<expr pos:start="13:22" pos:end="13:40"><name pos:start="13:22" pos:end="13:40">ROCKER_TX_FRAGS_MAX</name></expr>]</index></name> <init pos:start="13:43" pos:end="13:55">= <expr pos:start="13:45" pos:end="13:55"><block pos:start="13:45" pos:end="13:55">{ <expr pos:start="13:47" pos:end="13:52"><block pos:start="13:47" pos:end="13:52">{ <expr pos:start="13:49" pos:end="13:49"><literal type="number" pos:start="13:49" pos:end="13:49">0</literal></expr>, }</block></expr>, }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:18">pport</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:17">port</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:49"><decl pos:start="19:5" pos:end="19:48"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint16_t</name></type> <name pos:start="19:14" pos:end="19:23">tx_offload</name> <init pos:start="19:25" pos:end="19:48">= <expr pos:start="19:27" pos:end="19:48"><name pos:start="19:27" pos:end="19:48">ROCKER_TX_OFFLOAD_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:32"><decl pos:start="21:5" pos:end="21:31"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint16_t</name></type> <name pos:start="21:14" pos:end="21:27">tx_l3_csum_off</name> <init pos:start="21:29" pos:end="21:31">= <expr pos:start="21:31" pos:end="21:31"><literal type="number" pos:start="21:31" pos:end="21:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:27"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint16_t</name></type> <name pos:start="23:14" pos:end="23:23">tx_tso_mss</name> <init pos:start="23:25" pos:end="23:27">= <expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:32"><decl pos:start="25:5" pos:end="25:31"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint16_t</name></type> <name pos:start="25:14" pos:end="25:27">tx_tso_hdr_len</name> <init pos:start="25:29" pos:end="25:31">= <expr pos:start="25:31" pos:end="25:31"><literal type="number" pos:start="25:31" pos:end="25:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:19"><decl pos:start="27:5" pos:end="27:18"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:14">iovcnt</name> <init pos:start="27:16" pos:end="27:18">= <expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:24"><decl pos:start="29:5" pos:end="29:23"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:11">err</name> <init pos:start="29:13" pos:end="29:23">= <expr pos:start="29:15" pos:end="29:23"><name pos:start="29:15" pos:end="29:23">ROCKER_OK</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:12"><decl pos:start="31:5" pos:end="31:11"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:11">rem</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:10"><decl pos:start="33:5" pos:end="33:9"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:13">(<expr pos:start="37:9" pos:end="37:12"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:12">buf</name></expr>)</condition> <block pos:start="37:15" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:29">

        <return pos:start="39:9" pos:end="39:29">return <expr pos:start="39:16" pos:end="39:28"><operator pos:start="39:16" pos:end="39:16">-</operator><name pos:start="39:17" pos:end="39:28">ROCKER_ENXIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:72"><expr pos:start="45:5" pos:end="45:71"><call pos:start="45:5" pos:end="45:71"><name pos:start="45:5" pos:end="45:20">rocker_tlv_parse</name><argument_list pos:start="45:21" pos:end="45:71">(<argument pos:start="45:22" pos:end="45:25"><expr pos:start="45:22" pos:end="45:25"><name pos:start="45:22" pos:end="45:25">tlvs</name></expr></argument>, <argument pos:start="45:28" pos:end="45:44"><expr pos:start="45:28" pos:end="45:44"><name pos:start="45:28" pos:end="45:44">ROCKER_TLV_TX_MAX</name></expr></argument>, <argument pos:start="45:47" pos:end="45:49"><expr pos:start="45:47" pos:end="45:49"><name pos:start="45:47" pos:end="45:49">buf</name></expr></argument>, <argument pos:start="45:52" pos:end="45:70"><expr pos:start="45:52" pos:end="45:70"><call pos:start="45:52" pos:end="45:70"><name pos:start="45:52" pos:end="45:64">desc_tlv_size</name><argument_list pos:start="45:65" pos:end="45:70">(<argument pos:start="45:66" pos:end="45:69"><expr pos:start="45:66" pos:end="45:69"><name pos:start="45:66" pos:end="45:69">info</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:35">(<expr pos:start="49:9" pos:end="49:34"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:34"><name pos:start="49:10" pos:end="49:13">tlvs</name><index pos:start="49:14" pos:end="49:34">[<expr pos:start="49:15" pos:end="49:33"><name pos:start="49:15" pos:end="49:33">ROCKER_TLV_TX_FRAGS</name></expr>]</index></name></expr>)</condition> <block pos:start="49:37" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:30">

        <return pos:start="51:9" pos:end="51:30">return <expr pos:start="51:16" pos:end="51:29"><operator pos:start="51:16" pos:end="51:16">-</operator><name pos:start="51:17" pos:end="51:29">ROCKER_EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:64"><expr pos:start="57:5" pos:end="57:63"><name pos:start="57:5" pos:end="57:9">pport</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <call pos:start="57:13" pos:end="57:63"><name pos:start="57:13" pos:end="57:39">rocker_get_pport_by_tx_ring</name><argument_list pos:start="57:40" pos:end="57:63">(<argument pos:start="57:41" pos:end="57:41"><expr pos:start="57:41" pos:end="57:41"><name pos:start="57:41" pos:end="57:41">r</name></expr></argument>, <argument pos:start="57:44" pos:end="57:62"><expr pos:start="57:44" pos:end="57:62"><call pos:start="57:44" pos:end="57:62"><name pos:start="57:44" pos:end="57:56">desc_get_ring</name><argument_list pos:start="57:57" pos:end="57:62">(<argument pos:start="57:58" pos:end="57:61"><expr pos:start="57:58" pos:end="57:61"><name pos:start="57:58" pos:end="57:61">info</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:42">(<expr pos:start="59:9" pos:end="59:41"><operator pos:start="59:9" pos:end="59:9">!</operator><call pos:start="59:10" pos:end="59:41"><name pos:start="59:10" pos:end="59:27">fp_port_from_pport</name><argument_list pos:start="59:28" pos:end="59:41">(<argument pos:start="59:29" pos:end="59:33"><expr pos:start="59:29" pos:end="59:33"><name pos:start="59:29" pos:end="59:33">pport</name></expr></argument>, <argument pos:start="59:36" pos:end="59:40"><expr pos:start="59:36" pos:end="59:40"><operator pos:start="59:36" pos:end="59:36">&amp;</operator><name pos:start="59:37" pos:end="59:40">port</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:44" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:30">

        <return pos:start="61:9" pos:end="61:30">return <expr pos:start="61:16" pos:end="61:29"><operator pos:start="61:16" pos:end="61:16">-</operator><name pos:start="61:17" pos:end="61:29">ROCKER_EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:36">(<expr pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:12">tlvs</name><index pos:start="67:13" pos:end="67:35">[<expr pos:start="67:14" pos:end="67:34"><name pos:start="67:14" pos:end="67:34">ROCKER_TLV_TX_OFFLOAD</name></expr>]</index></name></expr>)</condition> <block pos:start="67:38" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:68">

        <expr_stmt pos:start="69:9" pos:end="69:68"><expr pos:start="69:9" pos:end="69:67"><name pos:start="69:9" pos:end="69:18">tx_offload</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <call pos:start="69:22" pos:end="69:67"><name pos:start="69:22" pos:end="69:38">rocker_tlv_get_u8</name><argument_list pos:start="69:39" pos:end="69:67">(<argument pos:start="69:40" pos:end="69:66"><expr pos:start="69:40" pos:end="69:66"><name pos:start="69:40" pos:end="69:66"><name pos:start="69:40" pos:end="69:43">tlvs</name><index pos:start="69:44" pos:end="69:66">[<expr pos:start="69:45" pos:end="69:65"><name pos:start="69:45" pos:end="69:65">ROCKER_TLV_TX_OFFLOAD</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="75:5" pos:end="99:5">switch <condition pos:start="75:12" pos:end="75:23">(<expr pos:start="75:13" pos:end="75:22"><name pos:start="75:13" pos:end="75:22">tx_offload</name></expr>)</condition> <block pos:start="75:25" pos:end="99:5">{<block_content pos:start="77:5" pos:end="97:14">

    <case pos:start="77:5" pos:end="77:35">case <expr pos:start="77:10" pos:end="77:34"><name pos:start="77:10" pos:end="77:34">ROCKER_TX_OFFLOAD_L3_CSUM</name></expr>:</case>

        <if_stmt pos:start="79:9" pos:end="83:9"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:45">(<expr pos:start="79:13" pos:end="79:44"><operator pos:start="79:13" pos:end="79:13">!</operator><name pos:start="79:14" pos:end="79:44"><name pos:start="79:14" pos:end="79:17">tlvs</name><index pos:start="79:18" pos:end="79:44">[<expr pos:start="79:19" pos:end="79:43"><name pos:start="79:19" pos:end="79:43">ROCKER_TLV_TX_L3_CSUM_OFF</name></expr>]</index></name></expr>)</condition> <block pos:start="79:47" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:34">

            <return pos:start="81:13" pos:end="81:34">return <expr pos:start="81:20" pos:end="81:33"><operator pos:start="81:20" pos:end="81:20">-</operator><name pos:start="81:21" pos:end="81:33">ROCKER_EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:31">case <expr pos:start="87:10" pos:end="87:30"><name pos:start="87:10" pos:end="87:30">ROCKER_TX_OFFLOAD_TSO</name></expr>:</case>

        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="91:45">(<expr pos:start="89:13" pos:end="91:44"><operator pos:start="89:13" pos:end="89:13">!</operator><name pos:start="89:14" pos:end="89:40"><name pos:start="89:14" pos:end="89:17">tlvs</name><index pos:start="89:18" pos:end="89:40">[<expr pos:start="89:19" pos:end="89:39"><name pos:start="89:19" pos:end="89:39">ROCKER_TLV_TX_TSO_MSS</name></expr>]</index></name> <operator pos:start="89:42" pos:end="89:43">||</operator>

            <operator pos:start="91:13" pos:end="91:13">!</operator><name pos:start="91:14" pos:end="91:44"><name pos:start="91:14" pos:end="91:17">tlvs</name><index pos:start="91:18" pos:end="91:44">[<expr pos:start="91:19" pos:end="91:43"><name pos:start="91:19" pos:end="91:43">ROCKER_TLV_TX_TSO_HDR_LEN</name></expr>]</index></name></expr>)</condition> <block pos:start="91:47" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:34">

            <return pos:start="93:13" pos:end="93:34">return <expr pos:start="93:20" pos:end="93:33"><operator pos:start="93:20" pos:end="93:20">-</operator><name pos:start="93:21" pos:end="93:33">ROCKER_EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="103:5" pos:end="107:5"><if pos:start="103:5" pos:end="107:5">if <condition pos:start="103:8" pos:end="103:40">(<expr pos:start="103:9" pos:end="103:39"><name pos:start="103:9" pos:end="103:39"><name pos:start="103:9" pos:end="103:12">tlvs</name><index pos:start="103:13" pos:end="103:39">[<expr pos:start="103:14" pos:end="103:38"><name pos:start="103:14" pos:end="103:38">ROCKER_TLV_TX_L3_CSUM_OFF</name></expr>]</index></name></expr>)</condition> <block pos:start="103:42" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:78">

        <expr_stmt pos:start="105:9" pos:end="105:78"><expr pos:start="105:9" pos:end="105:77"><name pos:start="105:9" pos:end="105:22">tx_l3_csum_off</name> <operator pos:start="105:24" pos:end="105:24">=</operator> <call pos:start="105:26" pos:end="105:77"><name pos:start="105:26" pos:end="105:44">rocker_tlv_get_le16</name><argument_list pos:start="105:45" pos:end="105:77">(<argument pos:start="105:46" pos:end="105:76"><expr pos:start="105:46" pos:end="105:76"><name pos:start="105:46" pos:end="105:76"><name pos:start="105:46" pos:end="105:49">tlvs</name><index pos:start="105:50" pos:end="105:76">[<expr pos:start="105:51" pos:end="105:75"><name pos:start="105:51" pos:end="105:75">ROCKER_TLV_TX_L3_CSUM_OFF</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="115:5"><if pos:start="111:5" pos:end="115:5">if <condition pos:start="111:8" pos:end="111:36">(<expr pos:start="111:9" pos:end="111:35"><name pos:start="111:9" pos:end="111:35"><name pos:start="111:9" pos:end="111:12">tlvs</name><index pos:start="111:13" pos:end="111:35">[<expr pos:start="111:14" pos:end="111:34"><name pos:start="111:14" pos:end="111:34">ROCKER_TLV_TX_TSO_MSS</name></expr>]</index></name></expr>)</condition> <block pos:start="111:38" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:70">

        <expr_stmt pos:start="113:9" pos:end="113:70"><expr pos:start="113:9" pos:end="113:69"><name pos:start="113:9" pos:end="113:18">tx_tso_mss</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <call pos:start="113:22" pos:end="113:69"><name pos:start="113:22" pos:end="113:40">rocker_tlv_get_le16</name><argument_list pos:start="113:41" pos:end="113:69">(<argument pos:start="113:42" pos:end="113:68"><expr pos:start="113:42" pos:end="113:68"><name pos:start="113:42" pos:end="113:68"><name pos:start="113:42" pos:end="113:45">tlvs</name><index pos:start="113:46" pos:end="113:68">[<expr pos:start="113:47" pos:end="113:67"><name pos:start="113:47" pos:end="113:67">ROCKER_TLV_TX_TSO_MSS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:40">(<expr pos:start="119:9" pos:end="119:39"><name pos:start="119:9" pos:end="119:39"><name pos:start="119:9" pos:end="119:12">tlvs</name><index pos:start="119:13" pos:end="119:39">[<expr pos:start="119:14" pos:end="119:38"><name pos:start="119:14" pos:end="119:38">ROCKER_TLV_TX_TSO_HDR_LEN</name></expr>]</index></name></expr>)</condition> <block pos:start="119:42" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:78">

        <expr_stmt pos:start="121:9" pos:end="121:78"><expr pos:start="121:9" pos:end="121:77"><name pos:start="121:9" pos:end="121:22">tx_tso_hdr_len</name> <operator pos:start="121:24" pos:end="121:24">=</operator> <call pos:start="121:26" pos:end="121:77"><name pos:start="121:26" pos:end="121:44">rocker_tlv_get_le16</name><argument_list pos:start="121:45" pos:end="121:77">(<argument pos:start="121:46" pos:end="121:76"><expr pos:start="121:46" pos:end="121:76"><name pos:start="121:46" pos:end="121:76"><name pos:start="121:46" pos:end="121:49">tlvs</name><index pos:start="121:50" pos:end="121:76">[<expr pos:start="121:51" pos:end="121:75"><name pos:start="121:51" pos:end="121:75">ROCKER_TLV_TX_TSO_HDR_LEN</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="127:5" pos:end="127:72"><name pos:start="127:5" pos:end="127:30">rocker_tlv_for_each_nested</name><argument_list pos:start="127:31" pos:end="127:72">(<argument pos:start="127:32" pos:end="127:39">tlv_frag</argument>, <argument pos:start="127:42" pos:end="127:66">tlvs[ROCKER_TLV_TX_FRAGS]</argument>, <argument pos:start="127:69" pos:end="127:71">rem</argument>)</argument_list></macro> <block pos:start="127:74" pos:end="199:5">{<block_content pos:start="129:9" pos:end="197:9">

        <decl_stmt pos:start="129:9" pos:end="129:25"><decl pos:start="129:9" pos:end="129:24"><type pos:start="129:9" pos:end="129:14"><name pos:start="129:9" pos:end="129:14">hwaddr</name></type> <name pos:start="129:16" pos:end="129:24">frag_addr</name></decl>;</decl_stmt>

        <decl_stmt pos:start="131:9" pos:end="131:26"><decl pos:start="131:9" pos:end="131:25"><type pos:start="131:9" pos:end="131:16"><name pos:start="131:9" pos:end="131:16">uint16_t</name></type> <name pos:start="131:18" pos:end="131:25">frag_len</name></decl>;</decl_stmt>



        <if_stmt pos:start="135:9" pos:end="141:9"><if pos:start="135:9" pos:end="141:9">if <condition pos:start="135:12" pos:end="135:60">(<expr pos:start="135:13" pos:end="135:59"><call pos:start="135:13" pos:end="135:37"><name pos:start="135:13" pos:end="135:27">rocker_tlv_type</name><argument_list pos:start="135:28" pos:end="135:37">(<argument pos:start="135:29" pos:end="135:36"><expr pos:start="135:29" pos:end="135:36"><name pos:start="135:29" pos:end="135:36">tlv_frag</name></expr></argument>)</argument_list></call> <operator pos:start="135:39" pos:end="135:40">!=</operator> <name pos:start="135:42" pos:end="135:59">ROCKER_TLV_TX_FRAG</name></expr>)</condition> <block pos:start="135:62" pos:end="141:9">{<block_content pos:start="137:13" pos:end="139:30">

            <expr_stmt pos:start="137:13" pos:end="137:33"><expr pos:start="137:13" pos:end="137:32"><name pos:start="137:13" pos:end="137:15">err</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <operator pos:start="137:19" pos:end="137:19">-</operator><name pos:start="137:20" pos:end="137:32">ROCKER_EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="139:13" pos:end="139:30">goto <name pos:start="139:18" pos:end="139:29">err_bad_attr</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="145:9" pos:end="145:77"><expr pos:start="145:9" pos:end="145:76"><call pos:start="145:9" pos:end="145:76"><name pos:start="145:9" pos:end="145:31">rocker_tlv_parse_nested</name><argument_list pos:start="145:32" pos:end="145:76">(<argument pos:start="145:33" pos:end="145:36"><expr pos:start="145:33" pos:end="145:36"><name pos:start="145:33" pos:end="145:36">tlvs</name></expr></argument>, <argument pos:start="145:39" pos:end="145:65"><expr pos:start="145:39" pos:end="145:65"><name pos:start="145:39" pos:end="145:65">ROCKER_TLV_TX_FRAG_ATTR_MAX</name></expr></argument>, <argument pos:start="145:68" pos:end="145:75"><expr pos:start="145:68" pos:end="145:75"><name pos:start="145:68" pos:end="145:75">tlv_frag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="149:9" pos:end="157:9"><if pos:start="149:9" pos:end="157:9">if <condition pos:start="149:12" pos:end="151:47">(<expr pos:start="149:13" pos:end="151:46"><operator pos:start="149:13" pos:end="149:13">!</operator><name pos:start="149:14" pos:end="149:47"><name pos:start="149:14" pos:end="149:17">tlvs</name><index pos:start="149:18" pos:end="149:47">[<expr pos:start="149:19" pos:end="149:46"><name pos:start="149:19" pos:end="149:46">ROCKER_TLV_TX_FRAG_ATTR_ADDR</name></expr>]</index></name> <operator pos:start="149:49" pos:end="149:50">||</operator>

            <operator pos:start="151:13" pos:end="151:13">!</operator><name pos:start="151:14" pos:end="151:46"><name pos:start="151:14" pos:end="151:17">tlvs</name><index pos:start="151:18" pos:end="151:46">[<expr pos:start="151:19" pos:end="151:45"><name pos:start="151:19" pos:end="151:45">ROCKER_TLV_TX_FRAG_ATTR_LEN</name></expr>]</index></name></expr>)</condition> <block pos:start="151:49" pos:end="157:9">{<block_content pos:start="153:13" pos:end="155:30">

            <expr_stmt pos:start="153:13" pos:end="153:33"><expr pos:start="153:13" pos:end="153:32"><name pos:start="153:13" pos:end="153:15">err</name> <operator pos:start="153:17" pos:end="153:17">=</operator> <operator pos:start="153:19" pos:end="153:19">-</operator><name pos:start="153:20" pos:end="153:32">ROCKER_EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="155:13" pos:end="155:30">goto <name pos:start="155:18" pos:end="155:29">err_bad_attr</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:76"><expr pos:start="161:9" pos:end="161:75"><name pos:start="161:9" pos:end="161:17">frag_addr</name> <operator pos:start="161:19" pos:end="161:19">=</operator> <call pos:start="161:21" pos:end="161:75"><name pos:start="161:21" pos:end="161:39">rocker_tlv_get_le64</name><argument_list pos:start="161:40" pos:end="161:75">(<argument pos:start="161:41" pos:end="161:74"><expr pos:start="161:41" pos:end="161:74"><name pos:start="161:41" pos:end="161:74"><name pos:start="161:41" pos:end="161:44">tlvs</name><index pos:start="161:45" pos:end="161:74">[<expr pos:start="161:46" pos:end="161:73"><name pos:start="161:46" pos:end="161:73">ROCKER_TLV_TX_FRAG_ATTR_ADDR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:74"><expr pos:start="163:9" pos:end="163:73"><name pos:start="163:9" pos:end="163:16">frag_len</name> <operator pos:start="163:18" pos:end="163:18">=</operator> <call pos:start="163:20" pos:end="163:73"><name pos:start="163:20" pos:end="163:38">rocker_tlv_get_le16</name><argument_list pos:start="163:39" pos:end="163:73">(<argument pos:start="163:40" pos:end="163:72"><expr pos:start="163:40" pos:end="163:72"><name pos:start="163:40" pos:end="163:72"><name pos:start="163:40" pos:end="163:43">tlvs</name><index pos:start="163:44" pos:end="163:72">[<expr pos:start="163:45" pos:end="163:71"><name pos:start="163:45" pos:end="163:71">ROCKER_TLV_TX_FRAG_ATTR_LEN</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:39"><expr pos:start="167:9" pos:end="167:38"><name pos:start="167:9" pos:end="167:19"><name pos:start="167:9" pos:end="167:11">iov</name><index pos:start="167:12" pos:end="167:19">[<expr pos:start="167:13" pos:end="167:18"><name pos:start="167:13" pos:end="167:18">iovcnt</name></expr>]</index></name><operator pos:start="167:20" pos:end="167:20">.</operator><name pos:start="167:21" pos:end="167:27">iov_len</name> <operator pos:start="167:29" pos:end="167:29">=</operator> <name pos:start="167:31" pos:end="167:38">frag_len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:50"><expr pos:start="169:9" pos:end="169:49"><name pos:start="169:9" pos:end="169:19"><name pos:start="169:9" pos:end="169:11">iov</name><index pos:start="169:12" pos:end="169:19">[<expr pos:start="169:13" pos:end="169:18"><name pos:start="169:13" pos:end="169:18">iovcnt</name></expr>]</index></name><operator pos:start="169:20" pos:end="169:20">.</operator><name pos:start="169:21" pos:end="169:28">iov_base</name> <operator pos:start="169:30" pos:end="169:30">=</operator> <call pos:start="169:32" pos:end="169:49"><name pos:start="169:32" pos:end="169:39">g_malloc</name><argument_list pos:start="169:40" pos:end="169:49">(<argument pos:start="169:41" pos:end="169:48"><expr pos:start="169:41" pos:end="169:48"><name pos:start="169:41" pos:end="169:48">frag_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="171:9" pos:end="177:9"><if pos:start="171:9" pos:end="177:9">if <condition pos:start="171:12" pos:end="171:34">(<expr pos:start="171:13" pos:end="171:33"><operator pos:start="171:13" pos:end="171:13">!</operator><name pos:start="171:14" pos:end="171:24"><name pos:start="171:14" pos:end="171:16">iov</name><index pos:start="171:17" pos:end="171:24">[<expr pos:start="171:18" pos:end="171:23"><name pos:start="171:18" pos:end="171:23">iovcnt</name></expr>]</index></name><operator pos:start="171:25" pos:end="171:25">.</operator><name pos:start="171:26" pos:end="171:33">iov_base</name></expr>)</condition> <block pos:start="171:36" pos:end="177:9">{<block_content pos:start="173:13" pos:end="175:28">

            <expr_stmt pos:start="173:13" pos:end="173:33"><expr pos:start="173:13" pos:end="173:32"><name pos:start="173:13" pos:end="173:15">err</name> <operator pos:start="173:17" pos:end="173:17">=</operator> <operator pos:start="173:19" pos:end="173:19">-</operator><name pos:start="173:20" pos:end="173:32">ROCKER_ENOMEM</name></expr>;</expr_stmt>

            <goto pos:start="175:13" pos:end="175:28">goto <name pos:start="175:18" pos:end="175:27">err_no_mem</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="181:9" pos:end="189:9"><if pos:start="181:9" pos:end="189:9">if <condition pos:start="181:12" pos:end="183:42">(<expr pos:start="181:13" pos:end="183:41"><call pos:start="181:13" pos:end="183:41"><name pos:start="181:13" pos:end="181:24">pci_dma_read</name><argument_list pos:start="181:25" pos:end="183:41">(<argument pos:start="181:26" pos:end="181:28"><expr pos:start="181:26" pos:end="181:28"><name pos:start="181:26" pos:end="181:28">dev</name></expr></argument>, <argument pos:start="181:31" pos:end="181:39"><expr pos:start="181:31" pos:end="181:39"><name pos:start="181:31" pos:end="181:39">frag_addr</name></expr></argument>, <argument pos:start="181:42" pos:end="181:61"><expr pos:start="181:42" pos:end="181:61"><name pos:start="181:42" pos:end="181:52"><name pos:start="181:42" pos:end="181:44">iov</name><index pos:start="181:45" pos:end="181:52">[<expr pos:start="181:46" pos:end="181:51"><name pos:start="181:46" pos:end="181:51">iovcnt</name></expr>]</index></name><operator pos:start="181:53" pos:end="181:53">.</operator><name pos:start="181:54" pos:end="181:61">iov_base</name></expr></argument>,

                     <argument pos:start="183:22" pos:end="183:40"><expr pos:start="183:22" pos:end="183:40"><name pos:start="183:22" pos:end="183:32"><name pos:start="183:22" pos:end="183:24">iov</name><index pos:start="183:25" pos:end="183:32">[<expr pos:start="183:26" pos:end="183:31"><name pos:start="183:26" pos:end="183:31">iovcnt</name></expr>]</index></name><operator pos:start="183:33" pos:end="183:33">.</operator><name pos:start="183:34" pos:end="183:40">iov_len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="183:44" pos:end="189:9">{<block_content pos:start="185:13" pos:end="187:28">

            <expr_stmt pos:start="185:13" pos:end="185:32"><expr pos:start="185:13" pos:end="185:31"><name pos:start="185:13" pos:end="185:15">err</name> <operator pos:start="185:17" pos:end="185:17">=</operator> <operator pos:start="185:19" pos:end="185:19">-</operator><name pos:start="185:20" pos:end="185:31">ROCKER_ENXIO</name></expr>;</expr_stmt>

            <goto pos:start="187:13" pos:end="187:28">goto <name pos:start="187:18" pos:end="187:27">err_bad_io</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="193:9" pos:end="197:9"><if pos:start="193:9" pos:end="197:9">if <condition pos:start="193:12" pos:end="193:43">(<expr pos:start="193:13" pos:end="193:42"><operator pos:start="193:13" pos:end="193:14">++</operator><name pos:start="193:15" pos:end="193:20">iovcnt</name> <operator pos:start="193:22" pos:end="193:22">&gt;</operator> <name pos:start="193:24" pos:end="193:42">ROCKER_TX_FRAGS_MAX</name></expr>)</condition> <block pos:start="193:45" pos:end="197:9">{<block_content pos:start="195:13" pos:end="195:36">

            <goto pos:start="195:13" pos:end="195:36">goto <name pos:start="195:18" pos:end="195:35">err_too_many_frags</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <if_stmt pos:start="203:5" pos:end="211:5"><if pos:start="203:5" pos:end="211:5">if <condition pos:start="203:8" pos:end="203:15">(<expr pos:start="203:9" pos:end="203:14"><name pos:start="203:9" pos:end="203:14">iovcnt</name></expr>)</condition> <block pos:start="203:17" pos:end="211:5">{<block_content pos:start="209:9" pos:end="209:58">

        <comment type="block" pos:start="205:9" pos:end="205:37">/* XXX perform Tx offloads */</comment>

        <comment type="block" pos:start="207:9" pos:end="207:44">/* XXX   silence compiler for now */</comment>

        <expr_stmt pos:start="209:9" pos:end="209:58"><expr pos:start="209:9" pos:end="209:57"><name pos:start="209:9" pos:end="209:22">tx_l3_csum_off</name> <operator pos:start="209:24" pos:end="209:25">+=</operator> <name pos:start="209:27" pos:end="209:36">tx_tso_mss</name> <operator pos:start="209:38" pos:end="209:38">=</operator> <name pos:start="209:40" pos:end="209:53">tx_tso_hdr_len</name> <operator pos:start="209:55" pos:end="209:55">=</operator> <literal type="number" pos:start="209:57" pos:end="209:57">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:52"><expr pos:start="215:5" pos:end="215:51"><name pos:start="215:5" pos:end="215:7">err</name> <operator pos:start="215:9" pos:end="215:9">=</operator> <call pos:start="215:11" pos:end="215:51"><name pos:start="215:11" pos:end="215:20">fp_port_eg</name><argument_list pos:start="215:21" pos:end="215:51">(<argument pos:start="215:22" pos:end="215:37"><expr pos:start="215:22" pos:end="215:37"><name pos:start="215:22" pos:end="215:37"><name pos:start="215:22" pos:end="215:22">r</name><operator pos:start="215:23" pos:end="215:24">-&gt;</operator><name pos:start="215:25" pos:end="215:31">fp_port</name><index pos:start="215:32" pos:end="215:37">[<expr pos:start="215:33" pos:end="215:36"><name pos:start="215:33" pos:end="215:36">port</name></expr>]</index></name></expr></argument>, <argument pos:start="215:40" pos:end="215:42"><expr pos:start="215:40" pos:end="215:42"><name pos:start="215:40" pos:end="215:42">iov</name></expr></argument>, <argument pos:start="215:45" pos:end="215:50"><expr pos:start="215:45" pos:end="215:50"><name pos:start="215:45" pos:end="215:50">iovcnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="219:1" pos:end="219:19"><name pos:start="219:1" pos:end="219:18">err_too_many_frags</name>:</label>

<label pos:start="221:1" pos:end="221:11"><name pos:start="221:1" pos:end="221:10">err_bad_io</name>:</label>

<label pos:start="223:1" pos:end="223:11"><name pos:start="223:1" pos:end="223:10">err_no_mem</name>:</label>

<label pos:start="225:1" pos:end="225:13"><name pos:start="225:1" pos:end="225:12">err_bad_attr</name>:</label>

    <for pos:start="227:5" pos:end="231:5">for <control pos:start="227:9" pos:end="227:45">(<init pos:start="227:10" pos:end="227:15"><expr pos:start="227:10" pos:end="227:14"><name pos:start="227:10" pos:end="227:10">i</name> <operator pos:start="227:12" pos:end="227:12">=</operator> <literal type="number" pos:start="227:14" pos:end="227:14">0</literal></expr>;</init> <condition pos:start="227:17" pos:end="227:40"><expr pos:start="227:17" pos:end="227:39"><name pos:start="227:17" pos:end="227:17">i</name> <operator pos:start="227:19" pos:end="227:19">&lt;</operator> <name pos:start="227:21" pos:end="227:39">ROCKER_TX_FRAGS_MAX</name></expr>;</condition> <incr pos:start="227:42" pos:end="227:44"><expr pos:start="227:42" pos:end="227:44"><name pos:start="227:42" pos:end="227:42">i</name><operator pos:start="227:43" pos:end="227:44">++</operator></expr></incr>)</control> <block pos:start="227:47" pos:end="231:5">{<block_content pos:start="229:9" pos:end="229:32">

        <expr_stmt pos:start="229:9" pos:end="229:32"><expr pos:start="229:9" pos:end="229:31"><call pos:start="229:9" pos:end="229:31"><name pos:start="229:9" pos:end="229:14">g_free</name><argument_list pos:start="229:15" pos:end="229:31">(<argument pos:start="229:16" pos:end="229:30"><expr pos:start="229:16" pos:end="229:30"><name pos:start="229:16" pos:end="229:21"><name pos:start="229:16" pos:end="229:18">iov</name><index pos:start="229:19" pos:end="229:21">[<expr pos:start="229:20" pos:end="229:20"><name pos:start="229:20" pos:end="229:20">i</name></expr>]</index></name><operator pos:start="229:22" pos:end="229:22">.</operator><name pos:start="229:23" pos:end="229:30">iov_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="235:5" pos:end="235:15">return <expr pos:start="235:12" pos:end="235:14"><name pos:start="235:12" pos:end="235:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
