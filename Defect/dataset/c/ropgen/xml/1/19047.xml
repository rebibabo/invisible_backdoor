<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19047.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">ff_hyscale_fast_mmxext</name><parameter_list pos:start="1:28" pos:end="5:52">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:38">SwsContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">c</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:50">int16_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">dst</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:45">dstWidth</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:65"><decl pos:start="3:48" pos:end="3:65"><type pos:start="3:48" pos:end="3:65"><specifier pos:start="3:48" pos:end="3:52">const</specifier> <name pos:start="3:54" pos:end="3:60">uint8_t</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:65">src</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:41"><decl pos:start="5:34" pos:end="5:41"><type pos:start="5:34" pos:end="5:41"><name pos:start="5:34" pos:end="5:36">int</name></type> <name pos:start="5:38" pos:end="5:41">srcW</name></decl></parameter>, <parameter pos:start="5:44" pos:end="5:51"><decl pos:start="5:44" pos:end="5:51"><type pos:start="5:44" pos:end="5:51"><name pos:start="5:44" pos:end="5:46">int</name></type> <name pos:start="5:48" pos:end="5:51">xInc</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="177:1">{<block_content pos:start="9:5" pos:end="175:33">

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int32_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:22">filterPos</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:26">c</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:41">hLumFilterPos</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">int16_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:19">filter</name>    <init pos:start="11:24" pos:end="11:38">= <expr pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:26">c</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:38">hLumFilter</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:55"><decl pos:start="13:5" pos:end="13:54"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:8">void</name>    <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:29">mmxextFilterCode</name> <init pos:start="13:31" pos:end="13:54">= <expr pos:start="13:33" pos:end="13:54"><name pos:start="13:33" pos:end="13:54"><name pos:start="13:33" pos:end="13:33">c</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:54">lumMmxextFilterCode</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="18:0"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

<cpp:if pos:start="17:1" pos:end="17:15">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15">ARCH_X86_64</name></expr></cpp:if>

    <decl_stmt pos:start="19:5" pos:end="24:0"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:20">retsave</name></decl>;</decl_stmt>

<cpp:else pos:start="21:1" pos:end="21:5">#<cpp:directive pos:start="21:2" pos:end="21:5">else</cpp:directive></cpp:else>

<cpp:if pos:start="23:1" pos:end="23:16">#<cpp:directive pos:start="23:2" pos:end="23:3">if</cpp:directive> <expr pos:start="23:5" pos:end="23:16"><call pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:11">defined</name><argument_list pos:start="23:12" pos:end="23:16">(<argument pos:start="23:13" pos:end="23:15"><expr pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="25:5" pos:end="30:0"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint64_t</name></type> <name pos:start="25:14" pos:end="25:20">ebxsave</name></decl>;</decl_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>



    <asm pos:start="33:5" pos:end="169:6">__asm__ <specifier pos:start="33:13" pos:end="33:20">volatile</specifier>(

<cpp:if pos:start="35:1" pos:end="35:15">#<cpp:directive pos:start="35:2" pos:end="35:3">if</cpp:directive> <expr pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:15">ARCH_X86_64</name></expr></cpp:if>

        "mov               -8(%%rsp), %%"FF_REG_a"    \n\t"

        "mov            %%"FF_REG_a", %5              \n\t"  <comment type="line" pos:start="39:62" pos:end="39:71">// retsave</comment>

<cpp:else pos:start="41:1" pos:end="41:5">#<cpp:directive pos:start="41:2" pos:end="41:5">else</cpp:directive></cpp:else>

<cpp:if pos:start="43:1" pos:end="43:16">#<cpp:directive pos:start="43:2" pos:end="43:3">if</cpp:directive> <expr pos:start="43:5" pos:end="43:16"><call pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:11">defined</name><argument_list pos:start="43:12" pos:end="43:16">(<argument pos:start="43:13" pos:end="43:15"><expr pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

        "mov            %%"FF_REG_b", %5              \n\t"  <comment type="line" pos:start="45:62" pos:end="45:71">// ebxsave</comment>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

        "pxor                  %%mm7, %%mm7           \n\t"

        "mov                      %0, %%"FF_REG_c"    \n\t"

        "mov                      %1, %%"FF_REG_D"    \n\t"

        "mov                      %2, %%"FF_REG_d"    \n\t"

        "mov                      %3, %%"FF_REG_b"    \n\t"

        "xor            %%"FF_REG_a", %%"FF_REG_a"    \n\t" <comment type="line" pos:start="61:61" pos:end="61:64">// i</comment>

        PREFETCH"      (%%"FF_REG_c")                 \n\t"

        PREFETCH"    32(%%"FF_REG_c")                 \n\t"

        PREFETCH"    64(%%"FF_REG_c")                 \n\t"



<cpp:if pos:start="71:1" pos:end="71:15">#<cpp:directive pos:start="71:2" pos:end="71:3">if</cpp:directive> <expr pos:start="71:5" pos:end="71:15"><name pos:start="71:5" pos:end="71:15">ARCH_X86_64</name></expr></cpp:if>

<cpp:define pos:start="73:1" pos:end="89:5">#<cpp:directive pos:start="73:2" pos:end="73:7">define</cpp:directive> <cpp:macro pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:31">CALL_MMXEXT_FILTER_CODE</name></cpp:macro> \

        <cpp:value pos:start="75:9" pos:end="89:5">"movl               (%%"FF_REG_b"), %%esi        \n\t"\

        "call                          *%4               \n\t"\

        "movl (%%"FF_REG_b", %%"FF_REG_a"), %%esi        \n\t"\

        "add                  %%"FF_REG_S", %%"FF_REG_c" \n\t"\

        "add                  %%"FF_REG_a", %%"FF_REG_D" \n\t"\

        "xor                  %%"FF_REG_a", %%"FF_REG_a" \n\t"\



#else</cpp:value></cpp:define>

<cpp:define pos:start="91:1" pos:end="105:6">#<cpp:directive pos:start="91:2" pos:end="91:7">define</cpp:directive> <cpp:macro pos:start="91:9" pos:end="91:31"><name pos:start="91:9" pos:end="91:31">CALL_MMXEXT_FILTER_CODE</name></cpp:macro> \

        <cpp:value pos:start="93:9" pos:end="105:6">"movl               (%%"FF_REG_b"), %%esi        \n\t"\

        "call                          *%4               \n\t"\

        "addl (%%"FF_REG_b", %%"FF_REG_a"), %%"FF_REG_c" \n\t"\

        "add                  %%"FF_REG_a", %%"FF_REG_D" \n\t"\

        "xor                  %%"FF_REG_a", %%"FF_REG_a" \n\t"\



#endif</cpp:value></cpp:define> <comment type="block" pos:start="105:8" pos:end="105:24">/* ARCH_X86_64 */</comment>



        CALL_MMXEXT_FILTER_CODE

        CALL_MMXEXT_FILTER_CODE

        CALL_MMXEXT_FILTER_CODE

        CALL_MMXEXT_FILTER_CODE

        CALL_MMXEXT_FILTER_CODE

        CALL_MMXEXT_FILTER_CODE

        CALL_MMXEXT_FILTER_CODE

        CALL_MMXEXT_FILTER_CODE



<cpp:if pos:start="127:1" pos:end="127:15">#<cpp:directive pos:start="127:2" pos:end="127:3">if</cpp:directive> <expr pos:start="127:5" pos:end="127:15"><name pos:start="127:5" pos:end="127:15">ARCH_X86_64</name></expr></cpp:if>

        "mov                      %5, %%"FF_REG_a" \n\t"

        "mov            %%"FF_REG_a", -8(%%rsp)    \n\t"

<cpp:else pos:start="133:1" pos:end="133:5">#<cpp:directive pos:start="133:2" pos:end="133:5">else</cpp:directive></cpp:else>

<cpp:if pos:start="135:1" pos:end="135:16">#<cpp:directive pos:start="135:2" pos:end="135:3">if</cpp:directive> <expr pos:start="135:5" pos:end="135:16"><call pos:start="135:5" pos:end="135:16"><name pos:start="135:5" pos:end="135:11">defined</name><argument_list pos:start="135:12" pos:end="135:16">(<argument pos:start="135:13" pos:end="135:15"><expr pos:start="135:13" pos:end="135:15"><name pos:start="135:13" pos:end="135:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

        "mov                      %5, %%"FF_REG_b" \n\t"

<cpp:endif pos:start="139:1" pos:end="139:6">#<cpp:directive pos:start="139:2" pos:end="139:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="141:1" pos:end="141:6">#<cpp:directive pos:start="141:2" pos:end="141:6">endif</cpp:directive></cpp:endif>

        :: "m" (src), "m" (dst), "m" (filter), "m" (filterPos),

           "m" (mmxextFilterCode)

<cpp:if pos:start="147:1" pos:end="147:15">#<cpp:directive pos:start="147:2" pos:end="147:3">if</cpp:directive> <expr pos:start="147:5" pos:end="147:15"><name pos:start="147:5" pos:end="147:15">ARCH_X86_64</name></expr></cpp:if>

          ,"m"(retsave)

<cpp:else pos:start="151:1" pos:end="151:5">#<cpp:directive pos:start="151:2" pos:end="151:5">else</cpp:directive></cpp:else>

<cpp:if pos:start="153:1" pos:end="153:16">#<cpp:directive pos:start="153:2" pos:end="153:3">if</cpp:directive> <expr pos:start="153:5" pos:end="153:16"><call pos:start="153:5" pos:end="153:16"><name pos:start="153:5" pos:end="153:11">defined</name><argument_list pos:start="153:12" pos:end="153:16">(<argument pos:start="153:13" pos:end="153:15"><expr pos:start="153:13" pos:end="153:15"><name pos:start="153:13" pos:end="153:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

          ,"m" (ebxsave)

<cpp:endif pos:start="157:1" pos:end="157:6">#<cpp:directive pos:start="157:2" pos:end="157:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="159:1" pos:end="159:6">#<cpp:directive pos:start="159:2" pos:end="159:6">endif</cpp:directive></cpp:endif>

        : "%"FF_REG_a, "%"FF_REG_c, "%"FF_REG_d, "%"FF_REG_S, "%"FF_REG_D

<cpp:if pos:start="163:1" pos:end="163:32">#<cpp:directive pos:start="163:2" pos:end="163:3">if</cpp:directive> <expr pos:start="163:5" pos:end="163:32"><name pos:start="163:5" pos:end="163:15">ARCH_X86_64</name> <operator pos:start="163:17" pos:end="163:18">||</operator> <operator pos:start="163:20" pos:end="163:20">!</operator><call pos:start="163:21" pos:end="163:32"><name pos:start="163:21" pos:end="163:27">defined</name><argument_list pos:start="163:28" pos:end="163:32">(<argument pos:start="163:29" pos:end="163:31"><expr pos:start="163:29" pos:end="163:31"><name pos:start="163:29" pos:end="163:31">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

         ,"%"FF_REG_b

<cpp:endif pos:start="167:1" pos:end="167:6">#<cpp:directive pos:start="167:2" pos:end="167:6">endif</cpp:directive></cpp:endif>

    );</asm>



    <for pos:start="173:5" pos:end="175:33">for <control pos:start="173:9" pos:end="173:50">(<init pos:start="173:10" pos:end="173:22"><expr pos:start="173:10" pos:end="173:21"><name pos:start="173:10" pos:end="173:10">i</name><operator pos:start="173:11" pos:end="173:11">=</operator><name pos:start="173:12" pos:end="173:19">dstWidth</name><operator pos:start="173:20" pos:end="173:20">-</operator><literal type="number" pos:start="173:21" pos:end="173:21">1</literal></expr>;</init> <condition pos:start="173:24" pos:end="173:45"><expr pos:start="173:24" pos:end="173:44"><operator pos:start="173:24" pos:end="173:24">(</operator><name pos:start="173:25" pos:end="173:25">i</name><operator pos:start="173:26" pos:end="173:26">*</operator><name pos:start="173:27" pos:end="173:30">xInc</name><operator pos:start="173:31" pos:end="173:31">)</operator><operator pos:start="173:32" pos:end="173:33">&gt;&gt;</operator><literal type="number" pos:start="173:34" pos:end="173:35">16</literal> <operator pos:start="173:37" pos:end="173:38">&gt;=</operator><name pos:start="173:39" pos:end="173:42">srcW</name><operator pos:start="173:43" pos:end="173:43">-</operator><literal type="number" pos:start="173:44" pos:end="173:44">1</literal></expr>;</condition> <incr pos:start="173:47" pos:end="173:49"><expr pos:start="173:47" pos:end="173:49"><name pos:start="173:47" pos:end="173:47">i</name><operator pos:start="173:48" pos:end="173:49">--</operator></expr></incr>)</control><block type="pseudo" pos:start="175:9" pos:end="175:33"><block_content pos:start="175:9" pos:end="175:33">

        <expr_stmt pos:start="175:9" pos:end="175:33"><expr pos:start="175:9" pos:end="175:32"><name pos:start="175:9" pos:end="175:14"><name pos:start="175:9" pos:end="175:11">dst</name><index pos:start="175:12" pos:end="175:14">[<expr pos:start="175:13" pos:end="175:13"><name pos:start="175:13" pos:end="175:13">i</name></expr>]</index></name> <operator pos:start="175:16" pos:end="175:16">=</operator> <name pos:start="175:18" pos:end="175:28"><name pos:start="175:18" pos:end="175:20">src</name><index pos:start="175:21" pos:end="175:28">[<expr pos:start="175:22" pos:end="175:27"><name pos:start="175:22" pos:end="175:25">srcW</name><operator pos:start="175:26" pos:end="175:26">-</operator><literal type="number" pos:start="175:27" pos:end="175:27">1</literal></expr>]</index></name><operator pos:start="175:29" pos:end="175:29">*</operator><literal type="number" pos:start="175:30" pos:end="175:32">128</literal></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></function>
</unit>
