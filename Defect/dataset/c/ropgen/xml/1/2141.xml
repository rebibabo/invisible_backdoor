<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2141.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:36">onenand_prog_spare</name><parameter_list pos:start="1:37" pos:end="3:26">(<parameter pos:start="1:38" pos:end="1:52"><decl pos:start="1:38" pos:end="1:52"><type pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:49">OneNANDState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:61"><decl pos:start="1:55" pos:end="1:61"><type pos:start="1:55" pos:end="1:61"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:61">sec</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:71"><decl pos:start="1:64" pos:end="1:71"><type pos:start="1:64" pos:end="1:71"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:71">secn</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:25"><decl pos:start="3:17" pos:end="3:25"><type pos:start="3:17" pos:end="3:25"><name pos:start="3:17" pos:end="3:20">void</name> <modifier pos:start="3:22" pos:end="3:22">*</modifier></type><name pos:start="3:23" pos:end="3:25">src</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:18">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">result</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="67:5"><if pos:start="9:5" pos:end="67:5">if <condition pos:start="9:8" pos:end="9:17">(<expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:12">secn</name> <operator pos:start="9:14" pos:end="9:14">&gt;</operator> <literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>)</condition> <block pos:start="9:19" pos:end="67:5">{<block_content pos:start="11:9" pos:end="65:19">

        <decl_stmt pos:start="11:9" pos:end="11:49"><decl pos:start="11:9" pos:end="11:48"><type pos:start="11:9" pos:end="11:23"><specifier pos:start="11:9" pos:end="11:13">const</specifier> <name pos:start="11:15" pos:end="11:21">uint8_t</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:25">sp</name> <init pos:start="11:27" pos:end="11:48">= <expr pos:start="11:29" pos:end="11:48"><operator pos:start="11:29" pos:end="11:29">(</operator><specifier pos:start="11:30" pos:end="11:34">const</specifier> <name pos:start="11:36" pos:end="11:42">uint8_t</name> <operator pos:start="11:44" pos:end="11:44">*</operator><operator pos:start="11:45" pos:end="11:45">)</operator><name pos:start="11:46" pos:end="11:48">src</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:34"><decl pos:start="13:9" pos:end="13:23"><type pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:15">uint8_t</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:19">dp</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></init></decl>, <decl pos:start="13:26" pos:end="13:33"><type ref="prev" pos:start="13:9" pos:end="13:17"><modifier pos:start="13:26" pos:end="13:26">*</modifier></type><name pos:start="13:27" pos:end="13:29">dpp</name> <init pos:start="13:31" pos:end="13:33">= <expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="15:9" pos:end="43:9"><if pos:start="15:9" pos:end="31:9">if <condition pos:start="15:12" pos:end="15:23">(<expr pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:22">blk_cur</name></name></expr>)</condition> <block pos:start="15:25" pos:end="31:9">{<block_content pos:start="17:13" pos:end="29:13">

            <expr_stmt pos:start="17:13" pos:end="17:31"><expr pos:start="17:13" pos:end="17:30"><name pos:start="17:13" pos:end="17:14">dp</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:30"><name pos:start="17:18" pos:end="17:25">g_malloc</name><argument_list pos:start="17:26" pos:end="17:30">(<argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><literal type="number" pos:start="17:27" pos:end="17:29">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="19:13" pos:end="29:13"><if pos:start="19:13" pos:end="25:13">if <condition pos:start="19:16" pos:end="21:77">(<expr pos:start="19:17" pos:end="21:76"><operator pos:start="19:17" pos:end="19:17">!</operator><name pos:start="19:18" pos:end="19:19">dp</name>

                <operator pos:start="21:17" pos:end="21:18">||</operator> <call pos:start="21:20" pos:end="21:72"><name pos:start="21:20" pos:end="21:27">blk_read</name><argument_list pos:start="21:28" pos:end="21:72">(<argument pos:start="21:29" pos:end="21:38"><expr pos:start="21:29" pos:end="21:38"><name pos:start="21:29" pos:end="21:38"><name pos:start="21:29" pos:end="21:29">s</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:38">blk_cur</name></name></expr></argument>, <argument pos:start="21:41" pos:end="21:64"><expr pos:start="21:41" pos:end="21:64"><name pos:start="21:41" pos:end="21:51"><name pos:start="21:41" pos:end="21:41">s</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:51">secs_cur</name></name> <operator pos:start="21:53" pos:end="21:53">+</operator> <operator pos:start="21:55" pos:end="21:55">(</operator><name pos:start="21:56" pos:end="21:58">sec</name> <operator pos:start="21:60" pos:end="21:61">&gt;&gt;</operator> <literal type="number" pos:start="21:63" pos:end="21:63">5</literal><operator pos:start="21:64" pos:end="21:64">)</operator></expr></argument>, <argument pos:start="21:67" pos:end="21:68"><expr pos:start="21:67" pos:end="21:68"><name pos:start="21:67" pos:end="21:68">dp</name></expr></argument>, <argument pos:start="21:71" pos:end="21:71"><expr pos:start="21:71" pos:end="21:71"><literal type="number" pos:start="21:71" pos:end="21:71">1</literal></expr></argument>)</argument_list></call> <operator pos:start="21:74" pos:end="21:74">&lt;</operator> <literal type="number" pos:start="21:76" pos:end="21:76">0</literal></expr>)</condition> <block pos:start="21:79" pos:end="25:13">{<block_content pos:start="23:17" pos:end="23:27">

                <expr_stmt pos:start="23:17" pos:end="23:27"><expr pos:start="23:17" pos:end="23:26"><name pos:start="23:17" pos:end="23:22">result</name> <operator pos:start="23:24" pos:end="23:24">=</operator> <literal type="number" pos:start="23:26" pos:end="23:26">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="25:15" pos:end="29:13">else <block pos:start="25:20" pos:end="29:13">{<block_content pos:start="27:17" pos:end="27:45">

                <expr_stmt pos:start="27:17" pos:end="27:45"><expr pos:start="27:17" pos:end="27:44"><name pos:start="27:17" pos:end="27:19">dpp</name> <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:24">dp</name> <operator pos:start="27:26" pos:end="27:26">+</operator> <operator pos:start="27:28" pos:end="27:28">(</operator><operator pos:start="27:29" pos:end="27:29">(</operator><name pos:start="27:30" pos:end="27:32">sec</name> <operator pos:start="27:34" pos:end="27:34">&amp;</operator> <literal type="number" pos:start="27:36" pos:end="27:37">31</literal><operator pos:start="27:38" pos:end="27:38">)</operator> <operator pos:start="27:40" pos:end="27:41">&lt;&lt;</operator> <literal type="number" pos:start="27:43" pos:end="27:43">4</literal><operator pos:start="27:44" pos:end="27:44">)</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="43:9">else <block pos:start="31:16" pos:end="43:9">{<block_content pos:start="33:13" pos:end="41:13">

            <if_stmt pos:start="33:13" pos:end="41:13"><if pos:start="33:13" pos:end="37:13">if <condition pos:start="33:16" pos:end="33:41">(<expr pos:start="33:17" pos:end="33:40"><name pos:start="33:17" pos:end="33:19">sec</name> <operator pos:start="33:21" pos:end="33:21">+</operator> <name pos:start="33:23" pos:end="33:26">secn</name> <operator pos:start="33:28" pos:end="33:28">&gt;</operator> <name pos:start="33:30" pos:end="33:40"><name pos:start="33:30" pos:end="33:30">s</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:40">secs_cur</name></name></expr>)</condition> <block pos:start="33:43" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:27">

                <expr_stmt pos:start="35:17" pos:end="35:27"><expr pos:start="35:17" pos:end="35:26"><name pos:start="35:17" pos:end="35:22">result</name> <operator pos:start="35:24" pos:end="35:24">=</operator> <literal type="number" pos:start="35:26" pos:end="35:26">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="37:15" pos:end="41:13">else <block pos:start="37:20" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:67">

                <expr_stmt pos:start="39:17" pos:end="39:67"><expr pos:start="39:17" pos:end="39:66"><name pos:start="39:17" pos:end="39:19">dpp</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <name pos:start="39:23" pos:end="39:32"><name pos:start="39:23" pos:end="39:23">s</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:32">current</name></name> <operator pos:start="39:34" pos:end="39:34">+</operator> <operator pos:start="39:36" pos:end="39:36">(</operator><name pos:start="39:37" pos:end="39:47"><name pos:start="39:37" pos:end="39:37">s</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:47">secs_cur</name></name> <operator pos:start="39:49" pos:end="39:50">&lt;&lt;</operator> <literal type="number" pos:start="39:52" pos:end="39:52">9</literal><operator pos:start="39:53" pos:end="39:53">)</operator> <operator pos:start="39:55" pos:end="39:55">+</operator> <operator pos:start="39:57" pos:end="39:57">(</operator><name pos:start="39:58" pos:end="39:60">sec</name> <operator pos:start="39:62" pos:end="39:63">&lt;&lt;</operator> <literal type="number" pos:start="39:65" pos:end="39:65">4</literal><operator pos:start="39:66" pos:end="39:66">)</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="45:9" pos:end="63:9"><if pos:start="45:9" pos:end="63:9">if <condition pos:start="45:12" pos:end="45:20">(<expr pos:start="45:13" pos:end="45:19"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:19">result</name></expr>)</condition> <block pos:start="45:22" pos:end="63:9">{<block_content pos:start="47:13" pos:end="61:13">

            <decl_stmt pos:start="47:13" pos:end="47:23"><decl pos:start="47:13" pos:end="47:22"><type pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:20">uint32_t</name></type> <name pos:start="47:22" pos:end="47:22">i</name></decl>;</decl_stmt>

            <for pos:start="49:13" pos:end="53:13">for <control pos:start="49:17" pos:end="49:45">(<init pos:start="49:18" pos:end="49:23"><expr pos:start="49:18" pos:end="49:22"><name pos:start="49:18" pos:end="49:18">i</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">0</literal></expr>;</init> <condition pos:start="49:25" pos:end="49:40"><expr pos:start="49:25" pos:end="49:39"><name pos:start="49:25" pos:end="49:25">i</name> <operator pos:start="49:27" pos:end="49:27">&lt;</operator> <operator pos:start="49:29" pos:end="49:29">(</operator><name pos:start="49:30" pos:end="49:33">secn</name> <operator pos:start="49:35" pos:end="49:36">&lt;&lt;</operator> <literal type="number" pos:start="49:38" pos:end="49:38">4</literal><operator pos:start="49:39" pos:end="49:39">)</operator></expr>;</condition> <incr pos:start="49:42" pos:end="49:44"><expr pos:start="49:42" pos:end="49:44"><name pos:start="49:42" pos:end="49:42">i</name><operator pos:start="49:43" pos:end="49:44">++</operator></expr></incr>)</control> <block pos:start="49:47" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:32">

                <expr_stmt pos:start="51:17" pos:end="51:32"><expr pos:start="51:17" pos:end="51:31"><name pos:start="51:17" pos:end="51:22"><name pos:start="51:17" pos:end="51:19">dpp</name><index pos:start="51:20" pos:end="51:22">[<expr pos:start="51:21" pos:end="51:21"><name pos:start="51:21" pos:end="51:21">i</name></expr>]</index></name> <operator pos:start="51:24" pos:end="51:25">&amp;=</operator> <name pos:start="51:27" pos:end="51:31"><name pos:start="51:27" pos:end="51:28">sp</name><index pos:start="51:29" pos:end="51:31">[<expr pos:start="51:30" pos:end="51:30"><name pos:start="51:30" pos:end="51:30">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="55:13" pos:end="61:13"><if pos:start="55:13" pos:end="61:13">if <condition pos:start="55:16" pos:end="55:27">(<expr pos:start="55:17" pos:end="55:26"><name pos:start="55:17" pos:end="55:26"><name pos:start="55:17" pos:end="55:17">s</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:26">blk_cur</name></name></expr>)</condition> <block pos:start="55:29" pos:end="61:13">{<block_content pos:start="57:17" pos:end="59:46">

                <expr_stmt pos:start="57:17" pos:end="59:46"><expr pos:start="57:17" pos:end="59:45"><name pos:start="57:17" pos:end="57:22">result</name> <operator pos:start="57:24" pos:end="57:24">=</operator> <call pos:start="57:26" pos:end="59:41"><name pos:start="57:26" pos:end="57:34">blk_write</name><argument_list pos:start="57:35" pos:end="59:41">(<argument pos:start="57:36" pos:end="57:45"><expr pos:start="57:36" pos:end="57:45"><name pos:start="57:36" pos:end="57:45"><name pos:start="57:36" pos:end="57:36">s</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:45">blk_cur</name></name></expr></argument>, <argument pos:start="57:48" pos:end="57:71"><expr pos:start="57:48" pos:end="57:71"><name pos:start="57:48" pos:end="57:58"><name pos:start="57:48" pos:end="57:48">s</name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:58">secs_cur</name></name> <operator pos:start="57:60" pos:end="57:60">+</operator> <operator pos:start="57:62" pos:end="57:62">(</operator><name pos:start="57:63" pos:end="57:65">sec</name> <operator pos:start="57:67" pos:end="57:68">&gt;&gt;</operator> <literal type="number" pos:start="57:70" pos:end="57:70">5</literal><operator pos:start="57:71" pos:end="57:71">)</operator></expr></argument>,

                                   <argument pos:start="59:36" pos:end="59:37"><expr pos:start="59:36" pos:end="59:37"><name pos:start="59:36" pos:end="59:37">dp</name></expr></argument>, <argument pos:start="59:40" pos:end="59:40"><expr pos:start="59:40" pos:end="59:40"><literal type="number" pos:start="59:40" pos:end="59:40">1</literal></expr></argument>)</argument_list></call> <operator pos:start="59:43" pos:end="59:43">&lt;</operator> <literal type="number" pos:start="59:45" pos:end="59:45">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:19"><expr pos:start="65:9" pos:end="65:18"><call pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:14">g_free</name><argument_list pos:start="65:15" pos:end="65:18">(<argument pos:start="65:16" pos:end="65:17"><expr pos:start="65:16" pos:end="65:17"><name pos:start="65:16" pos:end="65:17">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="69:5" pos:end="69:18">return <expr pos:start="69:12" pos:end="69:17"><name pos:start="69:12" pos:end="69:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
