<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8910.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">hls_slice_data_wpp</name><parameter_list pos:start="1:30" pos:end="1:65">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:41">HEVCContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:59">HEVCNAL</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">nal</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="193:1">{<block_content pos:start="5:5" pos:end="191:15">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:23">data</name> <init pos:start="5:25" pos:end="5:35">= <expr pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:29">nal</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:35">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">length</name>          <init pos:start="7:25" pos:end="7:35">= <expr pos:start="7:27" pos:end="7:35"><name pos:start="7:27" pos:end="7:35"><name pos:start="7:27" pos:end="7:29">nal</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:35">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">HEVCLocalContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">lc</name> <init pos:start="9:26" pos:end="9:36">= <expr pos:start="9:28" pos:end="9:36"><name pos:start="9:28" pos:end="9:36"><name pos:start="9:28" pos:end="9:28">s</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:36">HEVClc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:79"><decl pos:start="11:5" pos:end="11:78"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:7">int</name> <modifier pos:start="11:9" pos:end="11:9">*</modifier></type><name pos:start="11:10" pos:end="11:12">ret</name> <init pos:start="11:14" pos:end="11:78">= <expr pos:start="11:16" pos:end="11:78"><call pos:start="11:16" pos:end="11:78"><name pos:start="11:16" pos:end="11:30">av_malloc_array</name><argument_list pos:start="11:31" pos:end="11:78">(<argument pos:start="11:32" pos:end="11:64"><expr pos:start="11:32" pos:end="11:64"><name pos:start="11:32" pos:end="11:60"><name pos:start="11:32" pos:end="11:32">s</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:36">sh</name><operator pos:start="11:37" pos:end="11:37">.</operator><name pos:start="11:38" pos:end="11:60">num_entry_point_offsets</name></name> <operator pos:start="11:62" pos:end="11:62">+</operator> <literal type="number" pos:start="11:64" pos:end="11:64">1</literal></expr></argument>, <argument pos:start="11:67" pos:end="11:77"><expr pos:start="11:67" pos:end="11:77"><sizeof pos:start="11:67" pos:end="11:77">sizeof<argument_list pos:start="11:73" pos:end="11:77">(<argument pos:start="11:74" pos:end="11:76"><expr pos:start="11:74" pos:end="11:76"><name pos:start="11:74" pos:end="11:76">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:79"><decl pos:start="13:5" pos:end="13:78"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:7">int</name> <modifier pos:start="13:9" pos:end="13:9">*</modifier></type><name pos:start="13:10" pos:end="13:12">arg</name> <init pos:start="13:14" pos:end="13:78">= <expr pos:start="13:16" pos:end="13:78"><call pos:start="13:16" pos:end="13:78"><name pos:start="13:16" pos:end="13:30">av_malloc_array</name><argument_list pos:start="13:31" pos:end="13:78">(<argument pos:start="13:32" pos:end="13:64"><expr pos:start="13:32" pos:end="13:64"><name pos:start="13:32" pos:end="13:60"><name pos:start="13:32" pos:end="13:32">s</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:36">sh</name><operator pos:start="13:37" pos:end="13:37">.</operator><name pos:start="13:38" pos:end="13:60">num_entry_point_offsets</name></name> <operator pos:start="13:62" pos:end="13:62">+</operator> <literal type="number" pos:start="13:64" pos:end="13:64">1</literal></expr></argument>, <argument pos:start="13:67" pos:end="13:77"><expr pos:start="13:67" pos:end="13:77"><sizeof pos:start="13:67" pos:end="13:77">sizeof<argument_list pos:start="13:73" pos:end="13:77">(<argument pos:start="13:74" pos:end="13:76"><expr pos:start="13:74" pos:end="13:76"><name pos:start="13:74" pos:end="13:76">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:18">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:19">startheader</name></decl>, <decl pos:start="17:22" pos:end="17:29"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:22" pos:end="17:25">cmpt</name> <init pos:start="17:27" pos:end="17:29">= <expr pos:start="17:29" pos:end="17:29"><literal type="number" pos:start="17:29" pos:end="17:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:12"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:12">j</name></decl>, <decl pos:start="19:15" pos:end="19:21"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:15" pos:end="19:17">res</name> <init pos:start="19:19" pos:end="19:21">= <expr pos:start="19:21" pos:end="19:21"><literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:12">ret</name> <operator pos:start="23:14" pos:end="23:15">||</operator> <operator pos:start="23:17" pos:end="23:17">!</operator><name pos:start="23:18" pos:end="23:20">arg</name></expr>)</condition> <block pos:start="23:23" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:31">

        <expr_stmt pos:start="25:9" pos:end="25:21"><expr pos:start="25:9" pos:end="25:20"><call pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:15">av_free</name><argument_list pos:start="25:16" pos:end="25:20">(<argument pos:start="25:17" pos:end="25:19"><expr pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:21"><expr pos:start="27:9" pos:end="27:20"><call pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:15">av_free</name><argument_list pos:start="27:16" pos:end="27:20">(<argument pos:start="27:17" pos:end="27:19"><expr pos:start="27:17" pos:end="27:19"><name pos:start="27:17" pos:end="27:19">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="49:5"><if pos:start="35:5" pos:end="49:5">if <condition pos:start="35:8" pos:end="35:135">(<expr pos:start="35:9" pos:end="35:134"><name pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:13">sh</name><operator pos:start="35:14" pos:end="35:14">.</operator><name pos:start="35:15" pos:end="35:31">slice_ctb_addr_rs</name></name> <operator pos:start="35:33" pos:end="35:33">+</operator> <name pos:start="35:35" pos:end="35:63"><name pos:start="35:35" pos:end="35:35">s</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:39">sh</name><operator pos:start="35:40" pos:end="35:40">.</operator><name pos:start="35:41" pos:end="35:63">num_entry_point_offsets</name></name> <operator pos:start="35:65" pos:end="35:65">*</operator> <name pos:start="35:67" pos:end="35:86"><name pos:start="35:67" pos:end="35:67">s</name><operator pos:start="35:68" pos:end="35:69">-&gt;</operator><name pos:start="35:70" pos:end="35:71">ps</name><operator pos:start="35:72" pos:end="35:72">.</operator><name pos:start="35:73" pos:end="35:75">sps</name><operator pos:start="35:76" pos:end="35:77">-&gt;</operator><name pos:start="35:78" pos:end="35:86">ctb_width</name></name> <operator pos:start="35:88" pos:end="35:89">&gt;=</operator> <name pos:start="35:91" pos:end="35:110"><name pos:start="35:91" pos:end="35:91">s</name><operator pos:start="35:92" pos:end="35:93">-&gt;</operator><name pos:start="35:94" pos:end="35:95">ps</name><operator pos:start="35:96" pos:end="35:96">.</operator><name pos:start="35:97" pos:end="35:99">sps</name><operator pos:start="35:100" pos:end="35:101">-&gt;</operator><name pos:start="35:102" pos:end="35:110">ctb_width</name></name> <operator pos:start="35:112" pos:end="35:112">*</operator> <name pos:start="35:114" pos:end="35:134"><name pos:start="35:114" pos:end="35:114">s</name><operator pos:start="35:115" pos:end="35:116">-&gt;</operator><name pos:start="35:117" pos:end="35:118">ps</name><operator pos:start="35:119" pos:end="35:119">.</operator><name pos:start="35:120" pos:end="35:122">sps</name><operator pos:start="35:123" pos:end="35:124">-&gt;</operator><name pos:start="35:125" pos:end="35:134">ctb_height</name></name></expr>)</condition> <block pos:start="35:137" pos:end="49:5">{<block_content pos:start="37:9" pos:end="47:19">

        <expr_stmt pos:start="37:9" pos:end="43:10"><expr pos:start="37:9" pos:end="43:9"><call pos:start="37:9" pos:end="43:9"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="43:9">(<argument pos:start="37:16" pos:end="37:23"><expr pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">avctx</name></name></expr></argument>, <argument pos:start="37:26" pos:end="37:37"><expr pos:start="37:26" pos:end="37:37"><name pos:start="37:26" pos:end="37:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:40" pos:end="37:84"><expr pos:start="37:40" pos:end="37:84"><literal type="string" pos:start="37:40" pos:end="37:84">"WPP ctb addresses are wrong (%d %d %d %d)\n"</literal></expr></argument>,

            <argument pos:start="39:13" pos:end="39:35"><expr pos:start="39:13" pos:end="39:35"><name pos:start="39:13" pos:end="39:35"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:17">sh</name><operator pos:start="39:18" pos:end="39:18">.</operator><name pos:start="39:19" pos:end="39:35">slice_ctb_addr_rs</name></name></expr></argument>, <argument pos:start="39:38" pos:end="39:66"><expr pos:start="39:38" pos:end="39:66"><name pos:start="39:38" pos:end="39:66"><name pos:start="39:38" pos:end="39:38">s</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:42">sh</name><operator pos:start="39:43" pos:end="39:43">.</operator><name pos:start="39:44" pos:end="39:66">num_entry_point_offsets</name></name></expr></argument>,

            <argument pos:start="41:13" pos:end="41:32"><expr pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:17">ps</name><operator pos:start="41:18" pos:end="41:18">.</operator><name pos:start="41:19" pos:end="41:21">sps</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:32">ctb_width</name></name></expr></argument>, <argument pos:start="41:35" pos:end="41:55"><expr pos:start="41:35" pos:end="41:55"><name pos:start="41:35" pos:end="41:55"><name pos:start="41:35" pos:end="41:35">s</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:39">ps</name><operator pos:start="41:40" pos:end="41:40">.</operator><name pos:start="41:41" pos:end="41:43">sps</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:55">ctb_height</name></name></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:34"><expr pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:11">res</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <name pos:start="45:15" pos:end="45:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:19">goto <name pos:start="47:14" pos:end="47:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:66"><expr pos:start="53:5" pos:end="53:65"><call pos:start="53:5" pos:end="53:65"><name pos:start="53:5" pos:end="53:20">ff_alloc_entries</name><argument_list pos:start="53:21" pos:end="53:65">(<argument pos:start="53:22" pos:end="53:29"><expr pos:start="53:22" pos:end="53:29"><name pos:start="53:22" pos:end="53:29"><name pos:start="53:22" pos:end="53:22">s</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:29">avctx</name></name></expr></argument>, <argument pos:start="53:32" pos:end="53:64"><expr pos:start="53:32" pos:end="53:64"><name pos:start="53:32" pos:end="53:60"><name pos:start="53:32" pos:end="53:32">s</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:36">sh</name><operator pos:start="53:37" pos:end="53:37">.</operator><name pos:start="53:38" pos:end="53:60">num_entry_point_offsets</name></name> <operator pos:start="53:62" pos:end="53:62">+</operator> <literal type="number" pos:start="53:64" pos:end="53:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="71:5"><if pos:start="57:5" pos:end="71:5">if <condition pos:start="57:8" pos:end="57:21">(<expr pos:start="57:9" pos:end="57:20"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:20"><name pos:start="57:10" pos:end="57:10">s</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:17">sList</name><index pos:start="57:18" pos:end="57:20">[<expr pos:start="57:19" pos:end="57:19"><literal type="number" pos:start="57:19" pos:end="57:19">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="57:23" pos:end="71:5">{<block_content pos:start="59:9" pos:end="69:9">

        <for pos:start="59:9" pos:end="69:9">for <control pos:start="59:13" pos:end="59:47">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">i</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">1</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:42"><expr pos:start="59:21" pos:end="59:41"><name pos:start="59:21" pos:end="59:21">i</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <name pos:start="59:25" pos:end="59:41"><name pos:start="59:25" pos:end="59:25">s</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:41">threads_number</name></name></expr>;</condition> <incr pos:start="59:44" pos:end="59:46"><expr pos:start="59:44" pos:end="59:46"><name pos:start="59:44" pos:end="59:44">i</name><operator pos:start="59:45" pos:end="59:46">++</operator></expr></incr>)</control> <block pos:start="59:49" pos:end="69:9">{<block_content pos:start="61:13" pos:end="67:51">

            <expr_stmt pos:start="61:13" pos:end="61:57"><expr pos:start="61:13" pos:end="61:56"><name pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:20">sList</name><index pos:start="61:21" pos:end="61:23">[<expr pos:start="61:22" pos:end="61:22"><name pos:start="61:22" pos:end="61:22">i</name></expr>]</index></name> <operator pos:start="61:25" pos:end="61:25">=</operator> <call pos:start="61:27" pos:end="61:56"><name pos:start="61:27" pos:end="61:35">av_malloc</name><argument_list pos:start="61:36" pos:end="61:56">(<argument pos:start="61:37" pos:end="61:55"><expr pos:start="61:37" pos:end="61:55"><sizeof pos:start="61:37" pos:end="61:55">sizeof<argument_list pos:start="61:43" pos:end="61:55">(<argument pos:start="61:44" pos:end="61:54"><expr pos:start="61:44" pos:end="61:54"><name pos:start="61:44" pos:end="61:54">HEVCContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:56"><expr pos:start="63:13" pos:end="63:55"><call pos:start="63:13" pos:end="63:55"><name pos:start="63:13" pos:end="63:18">memcpy</name><argument_list pos:start="63:19" pos:end="63:55">(<argument pos:start="63:20" pos:end="63:30"><expr pos:start="63:20" pos:end="63:30"><name pos:start="63:20" pos:end="63:30"><name pos:start="63:20" pos:end="63:20">s</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:27">sList</name><index pos:start="63:28" pos:end="63:30">[<expr pos:start="63:29" pos:end="63:29"><name pos:start="63:29" pos:end="63:29">i</name></expr>]</index></name></expr></argument>, <argument pos:start="63:33" pos:end="63:33"><expr pos:start="63:33" pos:end="63:33"><name pos:start="63:33" pos:end="63:33">s</name></expr></argument>, <argument pos:start="63:36" pos:end="63:54"><expr pos:start="63:36" pos:end="63:54"><sizeof pos:start="63:36" pos:end="63:54">sizeof<argument_list pos:start="63:42" pos:end="63:54">(<argument pos:start="63:43" pos:end="63:53"><expr pos:start="63:43" pos:end="63:53"><name pos:start="63:43" pos:end="63:53">HEVCContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:68"><expr pos:start="65:13" pos:end="65:67"><name pos:start="65:13" pos:end="65:28"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:25">HEVClcList</name><index pos:start="65:26" pos:end="65:28">[<expr pos:start="65:27" pos:end="65:27"><name pos:start="65:27" pos:end="65:27">i</name></expr>]</index></name> <operator pos:start="65:30" pos:end="65:30">=</operator> <call pos:start="65:32" pos:end="65:67"><name pos:start="65:32" pos:end="65:41">av_mallocz</name><argument_list pos:start="65:42" pos:end="65:67">(<argument pos:start="65:43" pos:end="65:66"><expr pos:start="65:43" pos:end="65:66"><sizeof pos:start="65:43" pos:end="65:66">sizeof<argument_list pos:start="65:49" pos:end="65:66">(<argument pos:start="65:50" pos:end="65:65"><expr pos:start="65:50" pos:end="65:65"><name pos:start="65:50" pos:end="65:65">HEVCLocalContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:51"><expr pos:start="67:13" pos:end="67:50"><name pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:20">sList</name><index pos:start="67:21" pos:end="67:23">[<expr pos:start="67:22" pos:end="67:22"><name pos:start="67:22" pos:end="67:22">i</name></expr>]</index></name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:31">HEVClc</name> <operator pos:start="67:33" pos:end="67:33">=</operator> <name pos:start="67:35" pos:end="67:50"><name pos:start="67:35" pos:end="67:35">s</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:47">HEVClcList</name><index pos:start="67:48" pos:end="67:50">[<expr pos:start="67:49" pos:end="67:49"><name pos:start="67:49" pos:end="67:49">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:33"><expr pos:start="75:5" pos:end="75:32"><name pos:start="75:5" pos:end="75:10">offset</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <operator pos:start="75:14" pos:end="75:14">(</operator><name pos:start="75:15" pos:end="75:26"><name pos:start="75:15" pos:end="75:16">lc</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:20">gb</name><operator pos:start="75:21" pos:end="75:21">.</operator><name pos:start="75:22" pos:end="75:26">index</name></name> <operator pos:start="75:28" pos:end="75:29">&gt;&gt;</operator> <literal type="number" pos:start="75:31" pos:end="75:31">3</literal><operator pos:start="75:32" pos:end="75:32">)</operator></expr>;</expr_stmt>



    <for pos:start="79:5" pos:end="89:5">for <control pos:start="79:9" pos:end="79:106">(<init pos:start="79:10" pos:end="79:77"><expr pos:start="79:10" pos:end="79:14"><name pos:start="79:10" pos:end="79:10">j</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr><operator pos:start="79:15" pos:end="79:15">,</operator> <expr pos:start="79:17" pos:end="79:24"><name pos:start="79:17" pos:end="79:20">cmpt</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <literal type="number" pos:start="79:24" pos:end="79:24">0</literal></expr><operator pos:start="79:25" pos:end="79:25">,</operator> <expr pos:start="79:27" pos:end="79:76"><name pos:start="79:27" pos:end="79:37">startheader</name> <operator pos:start="79:39" pos:end="79:39">=</operator> <name pos:start="79:41" pos:end="79:46">offset</name> <operator pos:start="79:48" pos:end="79:48">+</operator> <name pos:start="79:50" pos:end="79:76"><name pos:start="79:50" pos:end="79:50">s</name><operator pos:start="79:51" pos:end="79:52">-&gt;</operator><name pos:start="79:53" pos:end="79:54">sh</name><operator pos:start="79:55" pos:end="79:55">.</operator><name pos:start="79:56" pos:end="79:73">entry_point_offset</name><index pos:start="79:74" pos:end="79:76">[<expr pos:start="79:75" pos:end="79:75"><literal type="number" pos:start="79:75" pos:end="79:75">0</literal></expr>]</index></name></expr>;</init> <condition pos:start="79:79" pos:end="79:101"><expr pos:start="79:79" pos:end="79:100"><name pos:start="79:79" pos:end="79:79">j</name> <operator pos:start="79:81" pos:end="79:81">&lt;</operator> <name pos:start="79:83" pos:end="79:100"><name pos:start="79:83" pos:end="79:85">nal</name><operator pos:start="79:86" pos:end="79:87">-&gt;</operator><name pos:start="79:88" pos:end="79:100">skipped_bytes</name></name></expr>;</condition> <incr pos:start="79:103" pos:end="79:105"><expr pos:start="79:103" pos:end="79:105"><name pos:start="79:103" pos:end="79:103">j</name><operator pos:start="79:104" pos:end="79:105">++</operator></expr></incr>)</control> <block pos:start="79:108" pos:end="89:5">{<block_content pos:start="81:9" pos:end="87:9">

        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:91">(<expr pos:start="81:13" pos:end="81:90"><name pos:start="81:13" pos:end="81:37"><name pos:start="81:13" pos:end="81:15">nal</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:34">skipped_bytes_pos</name><index pos:start="81:35" pos:end="81:37">[<expr pos:start="81:36" pos:end="81:36"><name pos:start="81:36" pos:end="81:36">j</name></expr>]</index></name> <operator pos:start="81:39" pos:end="81:40">&gt;=</operator> <name pos:start="81:42" pos:end="81:47">offset</name> <operator pos:start="81:49" pos:end="81:50">&amp;&amp;</operator> <name pos:start="81:52" pos:end="81:76"><name pos:start="81:52" pos:end="81:54">nal</name><operator pos:start="81:55" pos:end="81:56">-&gt;</operator><name pos:start="81:57" pos:end="81:73">skipped_bytes_pos</name><index pos:start="81:74" pos:end="81:76">[<expr pos:start="81:75" pos:end="81:75"><name pos:start="81:75" pos:end="81:75">j</name></expr>]</index></name> <operator pos:start="81:78" pos:end="81:78">&lt;</operator> <name pos:start="81:80" pos:end="81:90">startheader</name></expr>)</condition> <block pos:start="81:93" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:19">

            <expr_stmt pos:start="83:13" pos:end="83:26"><expr pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:23">startheader</name><operator pos:start="83:24" pos:end="83:25">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:19"><expr pos:start="85:13" pos:end="85:18"><name pos:start="85:13" pos:end="85:16">cmpt</name><operator pos:start="85:17" pos:end="85:18">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="93:5" pos:end="117:5">for <control pos:start="93:9" pos:end="93:55">(<init pos:start="93:10" pos:end="93:15"><expr pos:start="93:10" pos:end="93:14"><name pos:start="93:10" pos:end="93:10">i</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <literal type="number" pos:start="93:14" pos:end="93:14">1</literal></expr>;</init> <condition pos:start="93:17" pos:end="93:50"><expr pos:start="93:17" pos:end="93:49"><name pos:start="93:17" pos:end="93:17">i</name> <operator pos:start="93:19" pos:end="93:19">&lt;</operator> <name pos:start="93:21" pos:end="93:49"><name pos:start="93:21" pos:end="93:21">s</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:25">sh</name><operator pos:start="93:26" pos:end="93:26">.</operator><name pos:start="93:27" pos:end="93:49">num_entry_point_offsets</name></name></expr>;</condition> <incr pos:start="93:52" pos:end="93:54"><expr pos:start="93:52" pos:end="93:54"><name pos:start="93:52" pos:end="93:52">i</name><operator pos:start="93:53" pos:end="93:54">++</operator></expr></incr>)</control> <block pos:start="93:57" pos:end="117:5">{<block_content pos:start="95:9" pos:end="113:37">

        <expr_stmt pos:start="95:9" pos:end="95:59"><expr pos:start="95:9" pos:end="95:58"><name pos:start="95:9" pos:end="95:14">offset</name> <operator pos:start="95:16" pos:end="95:17">+=</operator> <operator pos:start="95:19" pos:end="95:19">(</operator><name pos:start="95:20" pos:end="95:50"><name pos:start="95:20" pos:end="95:20">s</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:24">sh</name><operator pos:start="95:25" pos:end="95:25">.</operator><name pos:start="95:26" pos:end="95:43">entry_point_offset</name><index pos:start="95:44" pos:end="95:50">[<expr pos:start="95:45" pos:end="95:49"><name pos:start="95:45" pos:end="95:45">i</name> <operator pos:start="95:47" pos:end="95:47">-</operator> <literal type="number" pos:start="95:49" pos:end="95:49">1</literal></expr>]</index></name> <operator pos:start="95:52" pos:end="95:52">-</operator> <name pos:start="95:54" pos:end="95:57">cmpt</name><operator pos:start="95:58" pos:end="95:58">)</operator></expr>;</expr_stmt>

        <for pos:start="97:9" pos:end="109:9">for <control pos:start="97:13" pos:end="99:72">(<init pos:start="97:14" pos:end="99:43"><expr pos:start="97:14" pos:end="97:18"><name pos:start="97:14" pos:end="97:14">j</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <literal type="number" pos:start="97:18" pos:end="97:18">0</literal></expr><operator pos:start="97:19" pos:end="97:19">,</operator> <expr pos:start="97:21" pos:end="97:28"><name pos:start="97:21" pos:end="97:24">cmpt</name> <operator pos:start="97:26" pos:end="97:26">=</operator> <literal type="number" pos:start="97:28" pos:end="97:28">0</literal></expr><operator pos:start="97:29" pos:end="97:29">,</operator> <expr pos:start="97:31" pos:end="99:42"><name pos:start="97:31" pos:end="97:41">startheader</name> <operator pos:start="97:43" pos:end="97:43">=</operator> <name pos:start="97:45" pos:end="97:50">offset</name>

             <operator pos:start="99:14" pos:end="99:14">+</operator> <name pos:start="99:16" pos:end="99:42"><name pos:start="99:16" pos:end="99:16">s</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:20">sh</name><operator pos:start="99:21" pos:end="99:21">.</operator><name pos:start="99:22" pos:end="99:39">entry_point_offset</name><index pos:start="99:40" pos:end="99:42">[<expr pos:start="99:41" pos:end="99:41"><name pos:start="99:41" pos:end="99:41">i</name></expr>]</index></name></expr>;</init> <condition pos:start="99:45" pos:end="99:67"><expr pos:start="99:45" pos:end="99:66"><name pos:start="99:45" pos:end="99:45">j</name> <operator pos:start="99:47" pos:end="99:47">&lt;</operator> <name pos:start="99:49" pos:end="99:66"><name pos:start="99:49" pos:end="99:51">nal</name><operator pos:start="99:52" pos:end="99:53">-&gt;</operator><name pos:start="99:54" pos:end="99:66">skipped_bytes</name></name></expr>;</condition> <incr pos:start="99:69" pos:end="99:71"><expr pos:start="99:69" pos:end="99:71"><name pos:start="99:69" pos:end="99:69">j</name><operator pos:start="99:70" pos:end="99:71">++</operator></expr></incr>)</control> <block pos:start="99:74" pos:end="109:9">{<block_content pos:start="101:13" pos:end="107:13">

            <if_stmt pos:start="101:13" pos:end="107:13"><if pos:start="101:13" pos:end="107:13">if <condition pos:start="101:16" pos:end="101:95">(<expr pos:start="101:17" pos:end="101:94"><name pos:start="101:17" pos:end="101:41"><name pos:start="101:17" pos:end="101:19">nal</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:38">skipped_bytes_pos</name><index pos:start="101:39" pos:end="101:41">[<expr pos:start="101:40" pos:end="101:40"><name pos:start="101:40" pos:end="101:40">j</name></expr>]</index></name> <operator pos:start="101:43" pos:end="101:44">&gt;=</operator> <name pos:start="101:46" pos:end="101:51">offset</name> <operator pos:start="101:53" pos:end="101:54">&amp;&amp;</operator> <name pos:start="101:56" pos:end="101:80"><name pos:start="101:56" pos:end="101:58">nal</name><operator pos:start="101:59" pos:end="101:60">-&gt;</operator><name pos:start="101:61" pos:end="101:77">skipped_bytes_pos</name><index pos:start="101:78" pos:end="101:80">[<expr pos:start="101:79" pos:end="101:79"><name pos:start="101:79" pos:end="101:79">j</name></expr>]</index></name> <operator pos:start="101:82" pos:end="101:82">&lt;</operator> <name pos:start="101:84" pos:end="101:94">startheader</name></expr>)</condition> <block pos:start="101:97" pos:end="107:13">{<block_content pos:start="103:17" pos:end="105:23">

                <expr_stmt pos:start="103:17" pos:end="103:30"><expr pos:start="103:17" pos:end="103:29"><name pos:start="103:17" pos:end="103:27">startheader</name><operator pos:start="103:28" pos:end="103:29">--</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:23"><expr pos:start="105:17" pos:end="105:22"><name pos:start="105:17" pos:end="105:20">cmpt</name><operator pos:start="105:21" pos:end="105:22">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="111:9" pos:end="111:63"><expr pos:start="111:9" pos:end="111:62"><name pos:start="111:9" pos:end="111:25"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:13">sh</name><operator pos:start="111:14" pos:end="111:14">.</operator><name pos:start="111:15" pos:end="111:18">size</name><index pos:start="111:19" pos:end="111:25">[<expr pos:start="111:20" pos:end="111:24"><name pos:start="111:20" pos:end="111:20">i</name> <operator pos:start="111:22" pos:end="111:22">-</operator> <literal type="number" pos:start="111:24" pos:end="111:24">1</literal></expr>]</index></name> <operator pos:start="111:27" pos:end="111:27">=</operator> <name pos:start="111:29" pos:end="111:55"><name pos:start="111:29" pos:end="111:29">s</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:33">sh</name><operator pos:start="111:34" pos:end="111:34">.</operator><name pos:start="111:35" pos:end="111:52">entry_point_offset</name><index pos:start="111:53" pos:end="111:55">[<expr pos:start="111:54" pos:end="111:54"><name pos:start="111:54" pos:end="111:54">i</name></expr>]</index></name> <operator pos:start="111:57" pos:end="111:57">-</operator> <name pos:start="111:59" pos:end="111:62">cmpt</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:37"><expr pos:start="113:9" pos:end="113:36"><name pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:13">sh</name><operator pos:start="113:14" pos:end="113:14">.</operator><name pos:start="113:15" pos:end="113:20">offset</name><index pos:start="113:21" pos:end="113:27">[<expr pos:start="113:22" pos:end="113:26"><name pos:start="113:22" pos:end="113:22">i</name> <operator pos:start="113:24" pos:end="113:24">-</operator> <literal type="number" pos:start="113:26" pos:end="113:26">1</literal></expr>]</index></name> <operator pos:start="113:29" pos:end="113:29">=</operator> <name pos:start="113:31" pos:end="113:36">offset</name></expr>;</expr_stmt>



    </block_content>}</block></for>

    <if_stmt pos:start="119:5" pos:end="139:5"><if pos:start="119:5" pos:end="139:5">if <condition pos:start="119:8" pos:end="119:43">(<expr pos:start="119:9" pos:end="119:42"><name pos:start="119:9" pos:end="119:37"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:13">sh</name><operator pos:start="119:14" pos:end="119:14">.</operator><name pos:start="119:15" pos:end="119:37">num_entry_point_offsets</name></name> <operator pos:start="119:39" pos:end="119:40">!=</operator> <literal type="number" pos:start="119:42" pos:end="119:42">0</literal></expr>)</condition> <block pos:start="119:45" pos:end="139:5">{<block_content pos:start="121:9" pos:end="135:65">

        <expr_stmt pos:start="121:9" pos:end="121:85"><expr pos:start="121:9" pos:end="121:84"><name pos:start="121:9" pos:end="121:14">offset</name> <operator pos:start="121:16" pos:end="121:17">+=</operator> <name pos:start="121:19" pos:end="121:77"><name pos:start="121:19" pos:end="121:19">s</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:23">sh</name><operator pos:start="121:24" pos:end="121:24">.</operator><name pos:start="121:25" pos:end="121:42">entry_point_offset</name><index pos:start="121:43" pos:end="121:77">[<expr pos:start="121:44" pos:end="121:76"><name pos:start="121:44" pos:end="121:72"><name pos:start="121:44" pos:end="121:44">s</name><operator pos:start="121:45" pos:end="121:46">-&gt;</operator><name pos:start="121:47" pos:end="121:48">sh</name><operator pos:start="121:49" pos:end="121:49">.</operator><name pos:start="121:50" pos:end="121:72">num_entry_point_offsets</name></name> <operator pos:start="121:74" pos:end="121:74">-</operator> <literal type="number" pos:start="121:76" pos:end="121:76">1</literal></expr>]</index></name> <operator pos:start="121:79" pos:end="121:79">-</operator> <name pos:start="121:81" pos:end="121:84">cmpt</name></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="131:9"><if pos:start="123:9" pos:end="131:9">if <condition pos:start="123:12" pos:end="123:28">(<expr pos:start="123:13" pos:end="123:27"><name pos:start="123:13" pos:end="123:18">length</name> <operator pos:start="123:20" pos:end="123:20">&lt;</operator> <name pos:start="123:22" pos:end="123:27">offset</name></expr>)</condition> <block pos:start="123:30" pos:end="131:9">{<block_content pos:start="125:13" pos:end="129:23">

            <expr_stmt pos:start="125:13" pos:end="125:86"><expr pos:start="125:13" pos:end="125:85"><call pos:start="125:13" pos:end="125:85"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="125:85">(<argument pos:start="125:20" pos:end="125:27"><expr pos:start="125:20" pos:end="125:27"><name pos:start="125:20" pos:end="125:27"><name pos:start="125:20" pos:end="125:20">s</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:27">avctx</name></name></expr></argument>, <argument pos:start="125:30" pos:end="125:41"><expr pos:start="125:30" pos:end="125:41"><name pos:start="125:30" pos:end="125:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:44" pos:end="125:84"><expr pos:start="125:44" pos:end="125:84"><literal type="string" pos:start="125:44" pos:end="125:84">"entry_point_offset table is corrupted\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:38"><expr pos:start="127:13" pos:end="127:37"><name pos:start="127:13" pos:end="127:15">res</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <name pos:start="127:19" pos:end="127:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="129:13" pos:end="129:23">goto <name pos:start="129:18" pos:end="129:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:72"><expr pos:start="133:9" pos:end="133:71"><name pos:start="133:9" pos:end="133:53"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:13">sh</name><operator pos:start="133:14" pos:end="133:14">.</operator><name pos:start="133:15" pos:end="133:18">size</name><index pos:start="133:19" pos:end="133:53">[<expr pos:start="133:20" pos:end="133:52"><name pos:start="133:20" pos:end="133:48"><name pos:start="133:20" pos:end="133:20">s</name><operator pos:start="133:21" pos:end="133:22">-&gt;</operator><name pos:start="133:23" pos:end="133:24">sh</name><operator pos:start="133:25" pos:end="133:25">.</operator><name pos:start="133:26" pos:end="133:48">num_entry_point_offsets</name></name> <operator pos:start="133:50" pos:end="133:50">-</operator> <literal type="number" pos:start="133:52" pos:end="133:52">1</literal></expr>]</index></name> <operator pos:start="133:55" pos:end="133:55">=</operator> <name pos:start="133:57" pos:end="133:62">length</name> <operator pos:start="133:64" pos:end="133:64">-</operator> <name pos:start="133:66" pos:end="133:71">offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:65"><expr pos:start="135:9" pos:end="135:64"><name pos:start="135:9" pos:end="135:55"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:13">sh</name><operator pos:start="135:14" pos:end="135:14">.</operator><name pos:start="135:15" pos:end="135:20">offset</name><index pos:start="135:21" pos:end="135:55">[<expr pos:start="135:22" pos:end="135:54"><name pos:start="135:22" pos:end="135:50"><name pos:start="135:22" pos:end="135:22">s</name><operator pos:start="135:23" pos:end="135:24">-&gt;</operator><name pos:start="135:25" pos:end="135:26">sh</name><operator pos:start="135:27" pos:end="135:27">.</operator><name pos:start="135:28" pos:end="135:50">num_entry_point_offsets</name></name> <operator pos:start="135:52" pos:end="135:52">-</operator> <literal type="number" pos:start="135:54" pos:end="135:54">1</literal></expr>]</index></name> <operator pos:start="135:57" pos:end="135:57">=</operator> <name pos:start="135:59" pos:end="135:64">offset</name></expr>;</expr_stmt>



    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:19"><expr pos:start="141:5" pos:end="141:18"><name pos:start="141:5" pos:end="141:11"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:11">data</name></name> <operator pos:start="141:13" pos:end="141:13">=</operator> <name pos:start="141:15" pos:end="141:18">data</name></expr>;</expr_stmt>



    <for pos:start="145:5" pos:end="155:5">for <control pos:start="145:9" pos:end="145:43">(<init pos:start="145:10" pos:end="145:15"><expr pos:start="145:10" pos:end="145:14"><name pos:start="145:10" pos:end="145:10">i</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <literal type="number" pos:start="145:14" pos:end="145:14">1</literal></expr>;</init> <condition pos:start="145:17" pos:end="145:38"><expr pos:start="145:17" pos:end="145:37"><name pos:start="145:17" pos:end="145:17">i</name> <operator pos:start="145:19" pos:end="145:19">&lt;</operator> <name pos:start="145:21" pos:end="145:37"><name pos:start="145:21" pos:end="145:21">s</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:37">threads_number</name></name></expr>;</condition> <incr pos:start="145:40" pos:end="145:42"><expr pos:start="145:40" pos:end="145:42"><name pos:start="145:40" pos:end="145:40">i</name><operator pos:start="145:41" pos:end="145:42">++</operator></expr></incr>)</control> <block pos:start="145:45" pos:end="155:5">{<block_content pos:start="147:9" pos:end="153:47">

        <expr_stmt pos:start="147:9" pos:end="147:48"><expr pos:start="147:9" pos:end="147:47"><name pos:start="147:9" pos:end="147:19"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:16">sList</name><index pos:start="147:17" pos:end="147:19">[<expr pos:start="147:18" pos:end="147:18"><name pos:start="147:18" pos:end="147:18">i</name></expr>]</index></name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:43"><name pos:start="147:22" pos:end="147:27">HEVClc</name><operator pos:start="147:28" pos:end="147:29">-&gt;</operator><name pos:start="147:30" pos:end="147:43">first_qp_group</name></name> <operator pos:start="147:45" pos:end="147:45">=</operator> <literal type="number" pos:start="147:47" pos:end="147:47">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:62"><expr pos:start="149:9" pos:end="149:61"><name pos:start="149:9" pos:end="149:19"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:16">sList</name><index pos:start="149:17" pos:end="149:19">[<expr pos:start="149:18" pos:end="149:18"><name pos:start="149:18" pos:end="149:18">i</name></expr>]</index></name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:33"><name pos:start="149:22" pos:end="149:27">HEVClc</name><operator pos:start="149:28" pos:end="149:29">-&gt;</operator><name pos:start="149:30" pos:end="149:33">qp_y</name></name> <operator pos:start="149:35" pos:end="149:35">=</operator> <name pos:start="149:37" pos:end="149:47"><name pos:start="149:37" pos:end="149:37">s</name><operator pos:start="149:38" pos:end="149:39">-&gt;</operator><name pos:start="149:40" pos:end="149:44">sList</name><index pos:start="149:45" pos:end="149:47">[<expr pos:start="149:46" pos:end="149:46"><literal type="number" pos:start="149:46" pos:end="149:46">0</literal></expr>]</index></name><operator pos:start="149:48" pos:end="149:49">-&gt;</operator><name pos:start="149:50" pos:end="149:61"><name pos:start="149:50" pos:end="149:55">HEVClc</name><operator pos:start="149:56" pos:end="149:57">-&gt;</operator><name pos:start="149:58" pos:end="149:61">qp_y</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:52"><expr pos:start="151:9" pos:end="151:51"><call pos:start="151:9" pos:end="151:51"><name pos:start="151:9" pos:end="151:14">memcpy</name><argument_list pos:start="151:15" pos:end="151:51">(<argument pos:start="151:16" pos:end="151:26"><expr pos:start="151:16" pos:end="151:26"><name pos:start="151:16" pos:end="151:26"><name pos:start="151:16" pos:end="151:16">s</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:23">sList</name><index pos:start="151:24" pos:end="151:26">[<expr pos:start="151:25" pos:end="151:25"><name pos:start="151:25" pos:end="151:25">i</name></expr>]</index></name></expr></argument>, <argument pos:start="151:29" pos:end="151:29"><expr pos:start="151:29" pos:end="151:29"><name pos:start="151:29" pos:end="151:29">s</name></expr></argument>, <argument pos:start="151:32" pos:end="151:50"><expr pos:start="151:32" pos:end="151:50"><sizeof pos:start="151:32" pos:end="151:50">sizeof<argument_list pos:start="151:38" pos:end="151:50">(<argument pos:start="151:39" pos:end="151:49"><expr pos:start="151:39" pos:end="151:49"><name pos:start="151:39" pos:end="151:49">HEVCContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:47"><expr pos:start="153:9" pos:end="153:46"><name pos:start="153:9" pos:end="153:19"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:16">sList</name><index pos:start="153:17" pos:end="153:19">[<expr pos:start="153:18" pos:end="153:18"><name pos:start="153:18" pos:end="153:18">i</name></expr>]</index></name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:27">HEVClc</name> <operator pos:start="153:29" pos:end="153:29">=</operator> <name pos:start="153:31" pos:end="153:46"><name pos:start="153:31" pos:end="153:31">s</name><operator pos:start="153:32" pos:end="153:33">-&gt;</operator><name pos:start="153:34" pos:end="153:43">HEVClcList</name><index pos:start="153:44" pos:end="153:46">[<expr pos:start="153:45" pos:end="153:45"><name pos:start="153:45" pos:end="153:45">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="159:5" pos:end="159:42"><expr pos:start="159:5" pos:end="159:41"><call pos:start="159:5" pos:end="159:41"><name pos:start="159:5" pos:end="159:25">avpriv_atomic_int_set</name><argument_list pos:start="159:26" pos:end="159:41">(<argument pos:start="159:27" pos:end="159:37"><expr pos:start="159:27" pos:end="159:37"><operator pos:start="159:27" pos:end="159:27">&amp;</operator><name pos:start="159:28" pos:end="159:37"><name pos:start="159:28" pos:end="159:28">s</name><operator pos:start="159:29" pos:end="159:30">-&gt;</operator><name pos:start="159:31" pos:end="159:37">wpp_err</name></name></expr></argument>, <argument pos:start="159:40" pos:end="159:40"><expr pos:start="159:40" pos:end="159:40"><literal type="number" pos:start="159:40" pos:end="159:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:31"><expr pos:start="161:5" pos:end="161:30"><call pos:start="161:5" pos:end="161:30"><name pos:start="161:5" pos:end="161:20">ff_reset_entries</name><argument_list pos:start="161:21" pos:end="161:30">(<argument pos:start="161:22" pos:end="161:29"><expr pos:start="161:22" pos:end="161:29"><name pos:start="161:22" pos:end="161:29"><name pos:start="161:22" pos:end="161:22">s</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:29">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="165:5" pos:end="171:5">for <control pos:start="165:9" pos:end="165:56">(<init pos:start="165:10" pos:end="165:15"><expr pos:start="165:10" pos:end="165:14"><name pos:start="165:10" pos:end="165:10">i</name> <operator pos:start="165:12" pos:end="165:12">=</operator> <literal type="number" pos:start="165:14" pos:end="165:14">0</literal></expr>;</init> <condition pos:start="165:17" pos:end="165:51"><expr pos:start="165:17" pos:end="165:50"><name pos:start="165:17" pos:end="165:17">i</name> <operator pos:start="165:19" pos:end="165:20">&lt;=</operator> <name pos:start="165:22" pos:end="165:50"><name pos:start="165:22" pos:end="165:22">s</name><operator pos:start="165:23" pos:end="165:24">-&gt;</operator><name pos:start="165:25" pos:end="165:26">sh</name><operator pos:start="165:27" pos:end="165:27">.</operator><name pos:start="165:28" pos:end="165:50">num_entry_point_offsets</name></name></expr>;</condition> <incr pos:start="165:53" pos:end="165:55"><expr pos:start="165:53" pos:end="165:55"><name pos:start="165:53" pos:end="165:53">i</name><operator pos:start="165:54" pos:end="165:55">++</operator></expr></incr>)</control> <block pos:start="165:58" pos:end="171:5">{<block_content pos:start="167:9" pos:end="169:19">

        <expr_stmt pos:start="167:9" pos:end="167:19"><expr pos:start="167:9" pos:end="167:18"><name pos:start="167:9" pos:end="167:14"><name pos:start="167:9" pos:end="167:11">arg</name><index pos:start="167:12" pos:end="167:14">[<expr pos:start="167:13" pos:end="167:13"><name pos:start="167:13" pos:end="167:13">i</name></expr>]</index></name> <operator pos:start="167:16" pos:end="167:16">=</operator> <name pos:start="167:18" pos:end="167:18">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:19"><expr pos:start="169:9" pos:end="169:18"><name pos:start="169:9" pos:end="169:14"><name pos:start="169:9" pos:end="169:11">ret</name><index pos:start="169:12" pos:end="169:14">[<expr pos:start="169:13" pos:end="169:13"><name pos:start="169:13" pos:end="169:13">i</name></expr>]</index></name> <operator pos:start="169:16" pos:end="169:16">=</operator> <literal type="number" pos:start="169:18" pos:end="169:18">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="175:5" pos:end="177:104"><if pos:start="175:5" pos:end="177:104">if <condition pos:start="175:8" pos:end="175:52">(<expr pos:start="175:9" pos:end="175:51"><name pos:start="175:9" pos:end="175:51"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:13">ps</name><operator pos:start="175:14" pos:end="175:14">.</operator><name pos:start="175:15" pos:end="175:17">pps</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:51">entropy_coding_sync_enabled_flag</name></name></expr>)</condition><block type="pseudo" pos:start="177:9" pos:end="177:104"><block_content pos:start="177:9" pos:end="177:104">

        <expr_stmt pos:start="177:9" pos:end="177:104"><expr pos:start="177:9" pos:end="177:103"><call pos:start="177:9" pos:end="177:103"><name pos:start="177:9" pos:end="177:26"><name pos:start="177:9" pos:end="177:9">s</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:16">avctx</name><operator pos:start="177:17" pos:end="177:18">-&gt;</operator><name pos:start="177:19" pos:end="177:26">execute2</name></name><argument_list pos:start="177:27" pos:end="177:103">(<argument pos:start="177:28" pos:end="177:35"><expr pos:start="177:28" pos:end="177:35"><name pos:start="177:28" pos:end="177:35"><name pos:start="177:28" pos:end="177:28">s</name><operator pos:start="177:29" pos:end="177:30">-&gt;</operator><name pos:start="177:31" pos:end="177:35">avctx</name></name></expr></argument>, <argument pos:start="177:38" pos:end="177:57"><expr pos:start="177:38" pos:end="177:57"><name pos:start="177:38" pos:end="177:57">hls_decode_entry_wpp</name></expr></argument>, <argument pos:start="177:60" pos:end="177:62"><expr pos:start="177:60" pos:end="177:62"><name pos:start="177:60" pos:end="177:62">arg</name></expr></argument>, <argument pos:start="177:65" pos:end="177:67"><expr pos:start="177:65" pos:end="177:67"><name pos:start="177:65" pos:end="177:67">ret</name></expr></argument>, <argument pos:start="177:70" pos:end="177:102"><expr pos:start="177:70" pos:end="177:102"><name pos:start="177:70" pos:end="177:98"><name pos:start="177:70" pos:end="177:70">s</name><operator pos:start="177:71" pos:end="177:72">-&gt;</operator><name pos:start="177:73" pos:end="177:74">sh</name><operator pos:start="177:75" pos:end="177:75">.</operator><name pos:start="177:76" pos:end="177:98">num_entry_point_offsets</name></name> <operator pos:start="177:100" pos:end="177:100">+</operator> <literal type="number" pos:start="177:102" pos:end="177:102">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="181:5" pos:end="183:22">for <control pos:start="181:9" pos:end="181:56">(<init pos:start="181:10" pos:end="181:15"><expr pos:start="181:10" pos:end="181:14"><name pos:start="181:10" pos:end="181:10">i</name> <operator pos:start="181:12" pos:end="181:12">=</operator> <literal type="number" pos:start="181:14" pos:end="181:14">0</literal></expr>;</init> <condition pos:start="181:17" pos:end="181:51"><expr pos:start="181:17" pos:end="181:50"><name pos:start="181:17" pos:end="181:17">i</name> <operator pos:start="181:19" pos:end="181:20">&lt;=</operator> <name pos:start="181:22" pos:end="181:50"><name pos:start="181:22" pos:end="181:22">s</name><operator pos:start="181:23" pos:end="181:24">-&gt;</operator><name pos:start="181:25" pos:end="181:26">sh</name><operator pos:start="181:27" pos:end="181:27">.</operator><name pos:start="181:28" pos:end="181:50">num_entry_point_offsets</name></name></expr>;</condition> <incr pos:start="181:53" pos:end="181:55"><expr pos:start="181:53" pos:end="181:55"><name pos:start="181:53" pos:end="181:53">i</name><operator pos:start="181:54" pos:end="181:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="183:9" pos:end="183:22"><block_content pos:start="183:9" pos:end="183:22">

        <expr_stmt pos:start="183:9" pos:end="183:22"><expr pos:start="183:9" pos:end="183:21"><name pos:start="183:9" pos:end="183:11">res</name> <operator pos:start="183:13" pos:end="183:14">+=</operator> <name pos:start="183:16" pos:end="183:21"><name pos:start="183:16" pos:end="183:18">ret</name><index pos:start="183:19" pos:end="183:21">[<expr pos:start="183:20" pos:end="183:20"><name pos:start="183:20" pos:end="183:20">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<label pos:start="185:1" pos:end="185:6"><name pos:start="185:1" pos:end="185:5">error</name>:</label>

    <expr_stmt pos:start="187:5" pos:end="187:17"><expr pos:start="187:5" pos:end="187:16"><call pos:start="187:5" pos:end="187:16"><name pos:start="187:5" pos:end="187:11">av_free</name><argument_list pos:start="187:12" pos:end="187:16">(<argument pos:start="187:13" pos:end="187:15"><expr pos:start="187:13" pos:end="187:15"><name pos:start="187:13" pos:end="187:15">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:17"><expr pos:start="189:5" pos:end="189:16"><call pos:start="189:5" pos:end="189:16"><name pos:start="189:5" pos:end="189:11">av_free</name><argument_list pos:start="189:12" pos:end="189:16">(<argument pos:start="189:13" pos:end="189:15"><expr pos:start="189:13" pos:end="189:15"><name pos:start="189:13" pos:end="189:15">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="191:5" pos:end="191:15">return <expr pos:start="191:12" pos:end="191:14"><name pos:start="191:12" pos:end="191:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
