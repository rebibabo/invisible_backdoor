<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6713.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:45">qvirtio_pci_get_config_isr_status</name><parameter_list pos:start="1:46" pos:end="1:63">(<parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:59">QVirtioDevice</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:62">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:5">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">QVirtioPCIDevice</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">dev</name> <init pos:start="5:27" pos:end="5:49">= <expr pos:start="5:29" pos:end="5:49"><operator pos:start="5:29" pos:end="5:29">(</operator><name pos:start="5:30" pos:end="5:45">QVirtioPCIDevice</name> <operator pos:start="5:47" pos:end="5:47">*</operator><operator pos:start="5:48" pos:end="5:48">)</operator><name pos:start="5:49" pos:end="5:49">d</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">data</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="35:5"><if pos:start="11:5" pos:end="31:5">if <condition pos:start="11:8" pos:end="11:32">(<expr pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:11">dev</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:17">pdev</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:31">msix_enabled</name></name></expr>)</condition> <block pos:start="11:34" pos:end="31:5">{<block_content pos:start="13:9" pos:end="29:9">

        <expr_stmt pos:start="13:9" pos:end="13:56"><expr pos:start="13:9" pos:end="13:55"><call pos:start="13:9" pos:end="13:55"><name pos:start="13:9" pos:end="13:23">g_assert_cmpint</name><argument_list pos:start="13:24" pos:end="13:55">(<argument pos:start="13:25" pos:end="13:46"><expr pos:start="13:25" pos:end="13:46"><name pos:start="13:25" pos:end="13:46"><name pos:start="13:25" pos:end="13:27">dev</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:46">config_msix_entry</name></name></expr></argument>, <argument pos:start="13:49" pos:end="13:50"><expr pos:start="13:49" pos:end="13:50"><operator pos:start="13:49" pos:end="13:50">!=</operator></expr></argument>, <argument pos:start="13:53" pos:end="13:54"><expr pos:start="13:53" pos:end="13:54"><operator pos:start="13:53" pos:end="13:53">-</operator><literal type="number" pos:start="13:54" pos:end="13:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="29:9"><if pos:start="15:9" pos:end="21:9">if <condition pos:start="15:12" pos:end="15:64">(<expr pos:start="15:13" pos:end="15:63"><call pos:start="15:13" pos:end="15:63"><name pos:start="15:13" pos:end="15:28">qpci_msix_masked</name><argument_list pos:start="15:29" pos:end="15:63">(<argument pos:start="15:30" pos:end="15:38"><expr pos:start="15:30" pos:end="15:38"><name pos:start="15:30" pos:end="15:38"><name pos:start="15:30" pos:end="15:32">dev</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:38">pdev</name></name></expr></argument>, <argument pos:start="15:41" pos:end="15:62"><expr pos:start="15:41" pos:end="15:62"><name pos:start="15:41" pos:end="15:62"><name pos:start="15:41" pos:end="15:43">dev</name><operator pos:start="15:44" pos:end="15:45">-&gt;</operator><name pos:start="15:46" pos:end="15:62">config_msix_entry</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:66" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:72">

            <comment type="block" pos:start="17:13" pos:end="17:75">/* No ISR checking should be done if masked, but read anyway */</comment>

            <return pos:start="19:13" pos:end="19:72">return <expr pos:start="19:20" pos:end="19:71"><call pos:start="19:20" pos:end="19:71"><name pos:start="19:20" pos:end="19:36">qpci_msix_pending</name><argument_list pos:start="19:37" pos:end="19:71">(<argument pos:start="19:38" pos:end="19:46"><expr pos:start="19:38" pos:end="19:46"><name pos:start="19:38" pos:end="19:46"><name pos:start="19:38" pos:end="19:40">dev</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:46">pdev</name></name></expr></argument>, <argument pos:start="19:49" pos:end="19:70"><expr pos:start="19:49" pos:end="19:70"><name pos:start="19:49" pos:end="19:70"><name pos:start="19:49" pos:end="19:51">dev</name><operator pos:start="19:52" pos:end="19:53">-&gt;</operator><name pos:start="19:54" pos:end="19:70">config_msix_entry</name></name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if> <else pos:start="21:11" pos:end="29:9">else <block pos:start="21:16" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:49">

            <expr_stmt pos:start="23:13" pos:end="23:48"><expr pos:start="23:13" pos:end="23:47"><name pos:start="23:13" pos:end="23:16">data</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <call pos:start="23:20" pos:end="23:47"><name pos:start="23:20" pos:end="23:24">readl</name><argument_list pos:start="23:25" pos:end="23:47">(<argument pos:start="23:26" pos:end="23:46"><expr pos:start="23:26" pos:end="23:46"><name pos:start="23:26" pos:end="23:46"><name pos:start="23:26" pos:end="23:28">dev</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:46">config_msix_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:45"><expr pos:start="25:13" pos:end="25:44"><call pos:start="25:13" pos:end="25:44"><name pos:start="25:13" pos:end="25:18">writel</name><argument_list pos:start="25:19" pos:end="25:44">(<argument pos:start="25:20" pos:end="25:40"><expr pos:start="25:20" pos:end="25:40"><name pos:start="25:20" pos:end="25:40"><name pos:start="25:20" pos:end="25:22">dev</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:40">config_msix_addr</name></name></expr></argument>, <argument pos:start="25:43" pos:end="25:43"><expr pos:start="25:43" pos:end="25:43"><literal type="number" pos:start="25:43" pos:end="25:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:49">return <expr pos:start="27:20" pos:end="27:48"><name pos:start="27:20" pos:end="27:23">data</name> <operator pos:start="27:25" pos:end="27:26">==</operator> <name pos:start="27:28" pos:end="27:48"><name pos:start="27:28" pos:end="27:30">dev</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:48">config_msix_data</name></name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="35:5">else <block pos:start="31:12" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:80">

        <return pos:start="33:9" pos:end="33:80">return <expr pos:start="33:16" pos:end="33:79"><call pos:start="33:16" pos:end="33:75"><name pos:start="33:16" pos:end="33:28">qpci_io_readb</name><argument_list pos:start="33:29" pos:end="33:75">(<argument pos:start="33:30" pos:end="33:38"><expr pos:start="33:30" pos:end="33:38"><name pos:start="33:30" pos:end="33:38"><name pos:start="33:30" pos:end="33:32">dev</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:38">pdev</name></name></expr></argument>, <argument pos:start="33:41" pos:end="33:74"><expr pos:start="33:41" pos:end="33:74"><name pos:start="33:41" pos:end="33:49"><name pos:start="33:41" pos:end="33:43">dev</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:49">addr</name></name> <operator pos:start="33:51" pos:end="33:51">+</operator> <name pos:start="33:53" pos:end="33:74">QVIRTIO_PCI_ISR_STATUS</name></expr></argument>)</argument_list></call> <operator pos:start="33:77" pos:end="33:77">&amp;</operator> <literal type="number" pos:start="33:79" pos:end="33:79">2</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
