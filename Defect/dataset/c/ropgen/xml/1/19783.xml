<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19783.c" pos:tabs="8"><function pos:start="1:1" pos:end="251:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:36">movie_common_init</name><parameter_list pos:start="1:37" pos:end="1:58">(<parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:52">AVFilterContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="251:1">{<block_content pos:start="5:5" pos:end="249:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MovieContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">movie</name> <init pos:start="5:25" pos:end="5:35">= <expr pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:29">ctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:35">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AVInputFormat</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:26">iformat</name> <init pos:start="7:28" pos:end="7:33">= <expr pos:start="7:30" pos:end="7:33"><name pos:start="7:30" pos:end="7:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:21">timestamp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">nb_streams</name> <init pos:start="11:20" pos:end="11:22">= <expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">1</literal></expr></init></decl>, <decl pos:start="11:25" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:27">ret</name></decl>, <decl pos:start="11:30" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:30" pos:end="11:30">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:60"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:28"><name pos:start="13:10" pos:end="13:24">default_streams</name><index pos:start="13:25" pos:end="13:28">[<expr pos:start="13:26" pos:end="13:27"><literal type="number" pos:start="13:26" pos:end="13:27">16</literal></expr>]</index></name></decl>, <decl pos:start="13:31" pos:end="13:43"><type ref="prev" pos:start="13:5" pos:end="13:8"><modifier pos:start="13:31" pos:end="13:31">*</modifier></type><name pos:start="13:32" pos:end="13:43">stream_specs</name></decl>, <decl pos:start="13:46" pos:end="13:50"><type ref="prev" pos:start="13:5" pos:end="13:8"><modifier pos:start="13:46" pos:end="13:46">*</modifier></type><name pos:start="13:47" pos:end="13:50">spec</name></decl>, <decl pos:start="13:53" pos:end="13:59"><type ref="prev" pos:start="13:5" pos:end="13:8"><modifier pos:start="13:53" pos:end="13:53">*</modifier></type><name pos:start="13:54" pos:end="13:59">cursor</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:17"><name pos:start="15:10" pos:end="15:13">name</name><index pos:start="15:14" pos:end="15:17">[<expr pos:start="15:15" pos:end="15:16"><literal type="number" pos:start="15:15" pos:end="15:16">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">AVStream</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:16">st</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:25"><name pos:start="21:10" pos:end="21:14">movie</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:25">file_name</name></name></expr>)</condition> <block pos:start="21:28" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:31">

        <expr_stmt pos:start="23:9" pos:end="23:61"><expr pos:start="23:9" pos:end="23:60"><call pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:60">(<argument pos:start="23:16" pos:end="23:18"><expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ctx</name></expr></argument>, <argument pos:start="23:21" pos:end="23:32"><expr pos:start="23:21" pos:end="23:32"><name pos:start="23:21" pos:end="23:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:35" pos:end="23:59"><expr pos:start="23:35" pos:end="23:59"><literal type="string" pos:start="23:35" pos:end="23:59">"No filename provided!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:60"><expr pos:start="31:5" pos:end="31:59"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:9">movie</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:21">seek_point</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <name pos:start="31:25" pos:end="31:43"><name pos:start="31:25" pos:end="31:29">movie</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:43">seek_point_d</name></name> <operator pos:start="31:45" pos:end="31:45">*</operator> <literal type="number" pos:start="31:47" pos:end="31:55">1000000</literal> <operator pos:start="31:55" pos:end="31:55">+</operator> <literal type="number" pos:start="31:57" pos:end="31:59">0.5</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:39"><expr pos:start="35:5" pos:end="35:38"><name pos:start="35:5" pos:end="35:16">stream_specs</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:38"><name pos:start="35:20" pos:end="35:24">movie</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:38">stream_specs</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="47:5"><if pos:start="37:5" pos:end="47:5">if <condition pos:start="37:8" pos:end="37:22">(<expr pos:start="37:9" pos:end="37:21"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:21">stream_specs</name></expr>)</condition> <block pos:start="37:24" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:39">

        <expr_stmt pos:start="39:9" pos:end="43:38"><expr pos:start="39:9" pos:end="43:37"><call pos:start="39:9" pos:end="43:37"><name pos:start="39:9" pos:end="39:16">snprintf</name><argument_list pos:start="39:17" pos:end="43:37">(<argument pos:start="39:18" pos:end="39:32"><expr pos:start="39:18" pos:end="39:32"><name pos:start="39:18" pos:end="39:32">default_streams</name></expr></argument>, <argument pos:start="39:35" pos:end="39:57"><expr pos:start="39:35" pos:end="39:57"><sizeof pos:start="39:35" pos:end="39:57">sizeof<argument_list pos:start="39:41" pos:end="39:57">(<argument pos:start="39:42" pos:end="39:56"><expr pos:start="39:42" pos:end="39:56"><name pos:start="39:42" pos:end="39:56">default_streams</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:60" pos:end="39:66"><expr pos:start="39:60" pos:end="39:66"><literal type="string" pos:start="39:60" pos:end="39:66">"d%c%d"</literal></expr></argument>,

                 <argument pos:start="41:18" pos:end="41:65"><expr pos:start="41:18" pos:end="41:65"><ternary pos:start="41:18" pos:end="41:65"><condition pos:start="41:18" pos:end="41:55"><expr pos:start="41:18" pos:end="41:53"><operator pos:start="41:18" pos:end="41:18">!</operator><call pos:start="41:19" pos:end="41:53"><name pos:start="41:19" pos:end="41:24">strcmp</name><argument_list pos:start="41:25" pos:end="41:53">(<argument pos:start="41:26" pos:end="41:42"><expr pos:start="41:26" pos:end="41:42"><name pos:start="41:26" pos:end="41:42"><name pos:start="41:26" pos:end="41:28">ctx</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:36">filter</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:42">name</name></name></expr></argument>, <argument pos:start="41:45" pos:end="41:52"><expr pos:start="41:45" pos:end="41:52"><literal type="string" pos:start="41:45" pos:end="41:52">"amovie"</literal></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="41:57" pos:end="41:59"> <expr pos:start="41:57" pos:end="41:59"><literal type="char" pos:start="41:57" pos:end="41:59">'a'</literal></expr> </then><else pos:start="41:61" pos:end="41:65">: <expr pos:start="41:63" pos:end="41:65"><literal type="char" pos:start="41:63" pos:end="41:65">'v'</literal></expr></else></ternary></expr></argument>,

                 <argument pos:start="43:18" pos:end="43:36"><expr pos:start="43:18" pos:end="43:36"><name pos:start="43:18" pos:end="43:36"><name pos:start="43:18" pos:end="43:22">movie</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:36">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:39"><expr pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:20">stream_specs</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:38">default_streams</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="49:5" pos:end="53:25">for <control pos:start="49:9" pos:end="49:50">(<init pos:start="49:10" pos:end="49:31"><expr pos:start="49:10" pos:end="49:30"><name pos:start="49:10" pos:end="49:15">cursor</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:30">stream_specs</name></expr>;</init> <condition pos:start="49:33" pos:end="49:40"><expr pos:start="49:33" pos:end="49:39"><operator pos:start="49:33" pos:end="49:33">*</operator><name pos:start="49:34" pos:end="49:39">cursor</name></expr>;</condition> <incr pos:start="49:42" pos:end="49:49"><expr pos:start="49:42" pos:end="49:49"><name pos:start="49:42" pos:end="49:47">cursor</name><operator pos:start="49:48" pos:end="49:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="51:9" pos:end="53:25"><block_content pos:start="51:9" pos:end="53:25">

        <if_stmt pos:start="51:9" pos:end="53:25"><if pos:start="51:9" pos:end="53:25">if <condition pos:start="51:12" pos:end="51:27">(<expr pos:start="51:13" pos:end="51:26"><operator pos:start="51:13" pos:end="51:13">*</operator><name pos:start="51:14" pos:end="51:19">cursor</name> <operator pos:start="51:21" pos:end="51:22">==</operator> <literal type="char" pos:start="51:24" pos:end="51:26">'+'</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:25"><block_content pos:start="53:13" pos:end="53:25">

            <expr_stmt pos:start="53:13" pos:end="53:25"><expr pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:22">nb_streams</name><operator pos:start="53:23" pos:end="53:24">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <if_stmt pos:start="57:5" pos:end="65:5"><if pos:start="57:5" pos:end="65:5">if <condition pos:start="57:8" pos:end="57:50">(<expr pos:start="57:9" pos:end="57:49"><name pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:13">movie</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:25">loop_count</name></name> <operator pos:start="57:27" pos:end="57:28">!=</operator> <literal type="number" pos:start="57:30" pos:end="57:30">1</literal> <operator pos:start="57:32" pos:end="57:33">&amp;&amp;</operator> <name pos:start="57:35" pos:end="57:44">nb_streams</name> <operator pos:start="57:46" pos:end="57:47">!=</operator> <literal type="number" pos:start="57:49" pos:end="57:49">1</literal></expr>)</condition> <block pos:start="57:52" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:36">

        <expr_stmt pos:start="59:9" pos:end="61:71"><expr pos:start="59:9" pos:end="61:70"><call pos:start="59:9" pos:end="61:70"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="61:70">(<argument pos:start="59:16" pos:end="59:18"><expr pos:start="59:16" pos:end="59:18"><name pos:start="59:16" pos:end="59:18">ctx</name></expr></argument>, <argument pos:start="59:21" pos:end="59:32"><expr pos:start="59:21" pos:end="59:32"><name pos:start="59:21" pos:end="59:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="61:16" pos:end="61:69"><expr pos:start="61:16" pos:end="61:69"><literal type="string" pos:start="61:16" pos:end="61:69">"Loop with several streams is currently unsupported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:36">return <expr pos:start="63:16" pos:end="63:35"><name pos:start="63:16" pos:end="63:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:22"><expr pos:start="69:5" pos:end="69:21"><call pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:19">av_register_all</name><argument_list pos:start="69:20" pos:end="69:21">()</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="73:5" pos:end="73:47">// Try to find the movie format (container)</comment>

    <expr_stmt pos:start="75:5" pos:end="75:83"><expr pos:start="75:5" pos:end="75:82"><name pos:start="75:5" pos:end="75:11">iformat</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <ternary pos:start="75:15" pos:end="75:82"><condition pos:start="75:15" pos:end="75:34"><expr pos:start="75:15" pos:end="75:32"><name pos:start="75:15" pos:end="75:32"><name pos:start="75:15" pos:end="75:19">movie</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:32">format_name</name></name></expr> ?</condition><then pos:start="75:36" pos:end="75:75"> <expr pos:start="75:36" pos:end="75:75"><call pos:start="75:36" pos:end="75:75"><name pos:start="75:36" pos:end="75:55">av_find_input_format</name><argument_list pos:start="75:56" pos:end="75:75">(<argument pos:start="75:57" pos:end="75:74"><expr pos:start="75:57" pos:end="75:74"><name pos:start="75:57" pos:end="75:74"><name pos:start="75:57" pos:end="75:61">movie</name><operator pos:start="75:62" pos:end="75:63">-&gt;</operator><name pos:start="75:64" pos:end="75:74">format_name</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="75:77" pos:end="75:82">: <expr pos:start="75:79" pos:end="75:82"><name pos:start="75:79" pos:end="75:82">NULL</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:29"><expr pos:start="79:5" pos:end="79:28"><name pos:start="79:5" pos:end="79:21"><name pos:start="79:5" pos:end="79:9">movie</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:21">format_ctx</name></name> <operator pos:start="79:23" pos:end="79:23">=</operator> <name pos:start="79:25" pos:end="79:28">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="89:5"><if pos:start="81:5" pos:end="89:5">if <condition pos:start="81:8" pos:end="81:93">(<expr pos:start="81:9" pos:end="81:92"><operator pos:start="81:9" pos:end="81:9">(</operator><name pos:start="81:10" pos:end="81:12">ret</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <call pos:start="81:16" pos:end="81:87"><name pos:start="81:16" pos:end="81:34">avformat_open_input</name><argument_list pos:start="81:35" pos:end="81:87">(<argument pos:start="81:36" pos:end="81:53"><expr pos:start="81:36" pos:end="81:53"><operator pos:start="81:36" pos:end="81:36">&amp;</operator><name pos:start="81:37" pos:end="81:53"><name pos:start="81:37" pos:end="81:41">movie</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:53">format_ctx</name></name></expr></argument>, <argument pos:start="81:56" pos:end="81:71"><expr pos:start="81:56" pos:end="81:71"><name pos:start="81:56" pos:end="81:71"><name pos:start="81:56" pos:end="81:60">movie</name><operator pos:start="81:61" pos:end="81:62">-&gt;</operator><name pos:start="81:63" pos:end="81:71">file_name</name></name></expr></argument>, <argument pos:start="81:74" pos:end="81:80"><expr pos:start="81:74" pos:end="81:80"><name pos:start="81:74" pos:end="81:80">iformat</name></expr></argument>, <argument pos:start="81:83" pos:end="81:86"><expr pos:start="81:83" pos:end="81:86"><name pos:start="81:83" pos:end="81:86">NULL</name></expr></argument>)</argument_list></call><operator pos:start="81:88" pos:end="81:88">)</operator> <operator pos:start="81:90" pos:end="81:90">&lt;</operator> <literal type="number" pos:start="81:92" pos:end="81:92">0</literal></expr>)</condition> <block pos:start="81:95" pos:end="89:5">{<block_content pos:start="83:9" pos:end="87:19">

        <expr_stmt pos:start="83:9" pos:end="85:73"><expr pos:start="83:9" pos:end="85:72"><call pos:start="83:9" pos:end="85:72"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="85:72">(<argument pos:start="83:16" pos:end="83:18"><expr pos:start="83:16" pos:end="83:18"><name pos:start="83:16" pos:end="83:18">ctx</name></expr></argument>, <argument pos:start="83:21" pos:end="83:32"><expr pos:start="83:21" pos:end="83:32"><name pos:start="83:21" pos:end="83:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="85:16" pos:end="85:53"><expr pos:start="85:16" pos:end="85:53"><literal type="string" pos:start="85:16" pos:end="85:53">"Failed to avformat_open_input '%s'\n"</literal></expr></argument>, <argument pos:start="85:56" pos:end="85:71"><expr pos:start="85:56" pos:end="85:71"><name pos:start="85:56" pos:end="85:71"><name pos:start="85:56" pos:end="85:60">movie</name><operator pos:start="85:61" pos:end="85:62">-&gt;</operator><name pos:start="85:63" pos:end="85:71">file_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:19">return <expr pos:start="87:16" pos:end="87:18"><name pos:start="87:16" pos:end="87:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="93:68"><if pos:start="91:5" pos:end="93:68">if <condition pos:start="91:8" pos:end="91:71">(<expr pos:start="91:9" pos:end="91:70"><operator pos:start="91:9" pos:end="91:9">(</operator><name pos:start="91:10" pos:end="91:12">ret</name> <operator pos:start="91:14" pos:end="91:14">=</operator> <call pos:start="91:16" pos:end="91:65"><name pos:start="91:16" pos:end="91:40">avformat_find_stream_info</name><argument_list pos:start="91:41" pos:end="91:65">(<argument pos:start="91:42" pos:end="91:58"><expr pos:start="91:42" pos:end="91:58"><name pos:start="91:42" pos:end="91:58"><name pos:start="91:42" pos:end="91:46">movie</name><operator pos:start="91:47" pos:end="91:48">-&gt;</operator><name pos:start="91:49" pos:end="91:58">format_ctx</name></name></expr></argument>, <argument pos:start="91:61" pos:end="91:64"><expr pos:start="91:61" pos:end="91:64"><name pos:start="91:61" pos:end="91:64">NULL</name></expr></argument>)</argument_list></call><operator pos:start="91:66" pos:end="91:66">)</operator> <operator pos:start="91:68" pos:end="91:68">&lt;</operator> <literal type="number" pos:start="91:70" pos:end="91:70">0</literal></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:68"><block_content pos:start="93:9" pos:end="93:68">

        <expr_stmt pos:start="93:9" pos:end="93:68"><expr pos:start="93:9" pos:end="93:67"><call pos:start="93:9" pos:end="93:67"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:67">(<argument pos:start="93:16" pos:end="93:18"><expr pos:start="93:16" pos:end="93:18"><name pos:start="93:16" pos:end="93:18">ctx</name></expr></argument>, <argument pos:start="93:21" pos:end="93:34"><expr pos:start="93:21" pos:end="93:34"><name pos:start="93:21" pos:end="93:34">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="93:37" pos:end="93:66"><expr pos:start="93:37" pos:end="93:66"><literal type="string" pos:start="93:37" pos:end="93:66">"Failed to find stream info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="97:5" pos:end="97:42">// if seeking requested, we execute it</comment>

    <if_stmt pos:start="99:5" pos:end="133:5"><if pos:start="99:5" pos:end="133:5">if <condition pos:start="99:8" pos:end="99:30">(<expr pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:13">movie</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:25">seek_point</name></name> <operator pos:start="99:27" pos:end="99:27">&gt;</operator> <literal type="number" pos:start="99:29" pos:end="99:29">0</literal></expr>)</condition> <block pos:start="99:32" pos:end="133:5">{<block_content pos:start="101:9" pos:end="131:9">

        <expr_stmt pos:start="101:9" pos:end="101:38"><expr pos:start="101:9" pos:end="101:37"><name pos:start="101:9" pos:end="101:17">timestamp</name> <operator pos:start="101:19" pos:end="101:19">=</operator> <name pos:start="101:21" pos:end="101:37"><name pos:start="101:21" pos:end="101:25">movie</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:37">seek_point</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="103:9" pos:end="103:53">// add the stream start time, should it exist</comment>

        <if_stmt pos:start="105:9" pos:end="121:9"><if pos:start="105:9" pos:end="121:9">if <condition pos:start="105:12" pos:end="105:60">(<expr pos:start="105:13" pos:end="105:59"><name pos:start="105:13" pos:end="105:41"><name pos:start="105:13" pos:end="105:17">movie</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:29">format_ctx</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:41">start_time</name></name> <operator pos:start="105:43" pos:end="105:44">!=</operator> <name pos:start="105:46" pos:end="105:59">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="105:62" pos:end="121:9">{<block_content pos:start="107:13" pos:end="119:55">

            <if_stmt pos:start="107:13" pos:end="117:13"><if pos:start="107:13" pos:end="117:13">if <condition pos:start="107:16" pos:end="107:87">(<expr pos:start="107:17" pos:end="107:86"><name pos:start="107:17" pos:end="107:25">timestamp</name> <operator pos:start="107:27" pos:end="107:27">&gt;</operator> <literal type="number" pos:start="107:29" pos:end="107:29">0</literal> <operator pos:start="107:31" pos:end="107:32">&amp;&amp;</operator> <name pos:start="107:34" pos:end="107:62"><name pos:start="107:34" pos:end="107:38">movie</name><operator pos:start="107:39" pos:end="107:40">-&gt;</operator><name pos:start="107:41" pos:end="107:50">format_ctx</name><operator pos:start="107:51" pos:end="107:52">-&gt;</operator><name pos:start="107:53" pos:end="107:62">start_time</name></name> <operator pos:start="107:64" pos:end="107:64">&gt;</operator> <name pos:start="107:66" pos:end="107:74">INT64_MAX</name> <operator pos:start="107:76" pos:end="107:76">-</operator> <name pos:start="107:78" pos:end="107:86">timestamp</name></expr>)</condition> <block pos:start="107:89" pos:end="117:13">{<block_content pos:start="109:17" pos:end="115:39">

                <expr_stmt pos:start="109:17" pos:end="113:91"><expr pos:start="109:17" pos:end="113:90"><call pos:start="109:17" pos:end="113:90"><name pos:start="109:17" pos:end="109:22">av_log</name><argument_list pos:start="109:23" pos:end="113:90">(<argument pos:start="109:24" pos:end="109:26"><expr pos:start="109:24" pos:end="109:26"><name pos:start="109:24" pos:end="109:26">ctx</name></expr></argument>, <argument pos:start="109:29" pos:end="109:40"><expr pos:start="109:29" pos:end="109:40"><name pos:start="109:29" pos:end="109:40">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="111:24" pos:end="111:97"><expr pos:start="111:24" pos:end="111:97"><literal type="string" pos:start="111:24" pos:end="111:66">"%s: seek value overflow with start_time:%"</literal><name pos:start="111:67" pos:end="111:72">PRId64</name><literal type="string" pos:start="111:73" pos:end="111:87">" seek_point:%"</literal><name pos:start="111:88" pos:end="111:93">PRId64</name><literal type="string" pos:start="111:94" pos:end="111:97">"\n"</literal></expr></argument>,

                       <argument pos:start="113:24" pos:end="113:39"><expr pos:start="113:24" pos:end="113:39"><name pos:start="113:24" pos:end="113:39"><name pos:start="113:24" pos:end="113:28">movie</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:39">file_name</name></name></expr></argument>, <argument pos:start="113:42" pos:end="113:70"><expr pos:start="113:42" pos:end="113:70"><name pos:start="113:42" pos:end="113:70"><name pos:start="113:42" pos:end="113:46">movie</name><operator pos:start="113:47" pos:end="113:48">-&gt;</operator><name pos:start="113:49" pos:end="113:58">format_ctx</name><operator pos:start="113:59" pos:end="113:60">-&gt;</operator><name pos:start="113:61" pos:end="113:70">start_time</name></name></expr></argument>, <argument pos:start="113:73" pos:end="113:89"><expr pos:start="113:73" pos:end="113:89"><name pos:start="113:73" pos:end="113:89"><name pos:start="113:73" pos:end="113:77">movie</name><operator pos:start="113:78" pos:end="113:79">-&gt;</operator><name pos:start="113:80" pos:end="113:89">seek_point</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="115:17" pos:end="115:39">return <expr pos:start="115:24" pos:end="115:38"><call pos:start="115:24" pos:end="115:38"><name pos:start="115:24" pos:end="115:30">AVERROR</name><argument_list pos:start="115:31" pos:end="115:38">(<argument pos:start="115:32" pos:end="115:37"><expr pos:start="115:32" pos:end="115:37"><name pos:start="115:32" pos:end="115:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:55"><expr pos:start="119:13" pos:end="119:54"><name pos:start="119:13" pos:end="119:21">timestamp</name> <operator pos:start="119:23" pos:end="119:24">+=</operator> <name pos:start="119:26" pos:end="119:54"><name pos:start="119:26" pos:end="119:30">movie</name><operator pos:start="119:31" pos:end="119:32">-&gt;</operator><name pos:start="119:33" pos:end="119:42">format_ctx</name><operator pos:start="119:43" pos:end="119:44">-&gt;</operator><name pos:start="119:45" pos:end="119:54">start_time</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="123:9" pos:end="131:9"><if pos:start="123:9" pos:end="131:9">if <condition pos:start="123:12" pos:end="123:94">(<expr pos:start="123:13" pos:end="123:93"><operator pos:start="123:13" pos:end="123:13">(</operator><name pos:start="123:14" pos:end="123:16">ret</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <call pos:start="123:20" pos:end="123:88"><name pos:start="123:20" pos:end="123:32">av_seek_frame</name><argument_list pos:start="123:33" pos:end="123:88">(<argument pos:start="123:34" pos:end="123:50"><expr pos:start="123:34" pos:end="123:50"><name pos:start="123:34" pos:end="123:50"><name pos:start="123:34" pos:end="123:38">movie</name><operator pos:start="123:39" pos:end="123:40">-&gt;</operator><name pos:start="123:41" pos:end="123:50">format_ctx</name></name></expr></argument>, <argument pos:start="123:53" pos:end="123:54"><expr pos:start="123:53" pos:end="123:54"><operator pos:start="123:53" pos:end="123:53">-</operator><literal type="number" pos:start="123:54" pos:end="123:54">1</literal></expr></argument>, <argument pos:start="123:57" pos:end="123:65"><expr pos:start="123:57" pos:end="123:65"><name pos:start="123:57" pos:end="123:65">timestamp</name></expr></argument>, <argument pos:start="123:68" pos:end="123:87"><expr pos:start="123:68" pos:end="123:87"><name pos:start="123:68" pos:end="123:87">AVSEEK_FLAG_BACKWARD</name></expr></argument>)</argument_list></call><operator pos:start="123:89" pos:end="123:89">)</operator> <operator pos:start="123:91" pos:end="123:91">&lt;</operator> <literal type="number" pos:start="123:93" pos:end="123:93">0</literal></expr>)</condition> <block pos:start="123:96" pos:end="131:9">{<block_content pos:start="125:13" pos:end="129:23">

            <expr_stmt pos:start="125:13" pos:end="127:48"><expr pos:start="125:13" pos:end="127:47"><call pos:start="125:13" pos:end="127:47"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="127:47">(<argument pos:start="125:20" pos:end="125:22"><expr pos:start="125:20" pos:end="125:22"><name pos:start="125:20" pos:end="125:22">ctx</name></expr></argument>, <argument pos:start="125:25" pos:end="125:36"><expr pos:start="125:25" pos:end="125:36"><name pos:start="125:25" pos:end="125:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:39" pos:end="125:82"><expr pos:start="125:39" pos:end="125:82"><literal type="string" pos:start="125:39" pos:end="125:72">"%s: could not seek to position %"</literal><name pos:start="125:73" pos:end="125:78">PRId64</name><literal type="string" pos:start="125:79" pos:end="125:82">"\n"</literal></expr></argument>,

                   <argument pos:start="127:20" pos:end="127:35"><expr pos:start="127:20" pos:end="127:35"><name pos:start="127:20" pos:end="127:35"><name pos:start="127:20" pos:end="127:24">movie</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:35">file_name</name></name></expr></argument>, <argument pos:start="127:38" pos:end="127:46"><expr pos:start="127:38" pos:end="127:46"><name pos:start="127:38" pos:end="127:46">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="129:13" pos:end="129:23">return <expr pos:start="129:20" pos:end="129:22"><name pos:start="129:20" pos:end="129:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="137:5" pos:end="139:63">for <control pos:start="137:9" pos:end="137:55">(<init pos:start="137:10" pos:end="137:15"><expr pos:start="137:10" pos:end="137:14"><name pos:start="137:10" pos:end="137:10">i</name> <operator pos:start="137:12" pos:end="137:12">=</operator> <literal type="number" pos:start="137:14" pos:end="137:14">0</literal></expr>;</init> <condition pos:start="137:17" pos:end="137:50"><expr pos:start="137:17" pos:end="137:49"><name pos:start="137:17" pos:end="137:17">i</name> <operator pos:start="137:19" pos:end="137:19">&lt;</operator> <name pos:start="137:21" pos:end="137:49"><name pos:start="137:21" pos:end="137:25">movie</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:37">format_ctx</name><operator pos:start="137:38" pos:end="137:39">-&gt;</operator><name pos:start="137:40" pos:end="137:49">nb_streams</name></name></expr>;</condition> <incr pos:start="137:52" pos:end="137:54"><expr pos:start="137:52" pos:end="137:54"><name pos:start="137:52" pos:end="137:52">i</name><operator pos:start="137:53" pos:end="137:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="139:9" pos:end="139:63"><block_content pos:start="139:9" pos:end="139:63">

        <expr_stmt pos:start="139:9" pos:end="139:63"><expr pos:start="139:9" pos:end="139:62"><name pos:start="139:9" pos:end="139:37"><name pos:start="139:9" pos:end="139:13">movie</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:25">format_ctx</name><operator pos:start="139:26" pos:end="139:27">-&gt;</operator><name pos:start="139:28" pos:end="139:34">streams</name><index pos:start="139:35" pos:end="139:37">[<expr pos:start="139:36" pos:end="139:36"><name pos:start="139:36" pos:end="139:36">i</name></expr>]</index></name><operator pos:start="139:38" pos:end="139:39">-&gt;</operator><name pos:start="139:40" pos:end="139:46">discard</name> <operator pos:start="139:48" pos:end="139:48">=</operator> <name pos:start="139:50" pos:end="139:62">AVDISCARD_ALL</name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="143:5" pos:end="143:58"><expr pos:start="143:5" pos:end="143:57"><name pos:start="143:5" pos:end="143:13"><name pos:start="143:5" pos:end="143:9">movie</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:13">st</name></name> <operator pos:start="143:15" pos:end="143:15">=</operator> <call pos:start="143:17" pos:end="143:57"><name pos:start="143:17" pos:end="143:25">av_calloc</name><argument_list pos:start="143:26" pos:end="143:57">(<argument pos:start="143:27" pos:end="143:36"><expr pos:start="143:27" pos:end="143:36"><name pos:start="143:27" pos:end="143:36">nb_streams</name></expr></argument>, <argument pos:start="143:39" pos:end="143:56"><expr pos:start="143:39" pos:end="143:56"><sizeof pos:start="143:39" pos:end="143:56">sizeof<argument_list pos:start="143:45" pos:end="143:56">(<argument pos:start="143:46" pos:end="143:55"><expr pos:start="143:46" pos:end="143:55"><operator pos:start="143:46" pos:end="143:46">*</operator><name pos:start="143:47" pos:end="143:55"><name pos:start="143:47" pos:end="143:51">movie</name><operator pos:start="143:52" pos:end="143:53">-&gt;</operator><name pos:start="143:54" pos:end="143:55">st</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="147:31"><if pos:start="145:5" pos:end="147:31">if <condition pos:start="145:8" pos:end="145:19">(<expr pos:start="145:9" pos:end="145:18"><operator pos:start="145:9" pos:end="145:9">!</operator><name pos:start="145:10" pos:end="145:18"><name pos:start="145:10" pos:end="145:14">movie</name><operator pos:start="145:15" pos:end="145:16">-&gt;</operator><name pos:start="145:17" pos:end="145:18">st</name></name></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:31"><block_content pos:start="147:9" pos:end="147:31">

        <return pos:start="147:9" pos:end="147:31">return <expr pos:start="147:16" pos:end="147:30"><call pos:start="147:16" pos:end="147:30"><name pos:start="147:16" pos:end="147:22">AVERROR</name><argument_list pos:start="147:23" pos:end="147:30">(<argument pos:start="147:24" pos:end="147:29"><expr pos:start="147:24" pos:end="147:29"><name pos:start="147:24" pos:end="147:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="151:5" pos:end="177:5">for <control pos:start="151:9" pos:end="151:36">(<init pos:start="151:10" pos:end="151:15"><expr pos:start="151:10" pos:end="151:14"><name pos:start="151:10" pos:end="151:10">i</name> <operator pos:start="151:12" pos:end="151:12">=</operator> <literal type="number" pos:start="151:14" pos:end="151:14">0</literal></expr>;</init> <condition pos:start="151:17" pos:end="151:31"><expr pos:start="151:17" pos:end="151:30"><name pos:start="151:17" pos:end="151:17">i</name> <operator pos:start="151:19" pos:end="151:19">&lt;</operator> <name pos:start="151:21" pos:end="151:30">nb_streams</name></expr>;</condition> <incr pos:start="151:33" pos:end="151:35"><expr pos:start="151:33" pos:end="151:35"><name pos:start="151:33" pos:end="151:33">i</name><operator pos:start="151:34" pos:end="151:35">++</operator></expr></incr>)</control> <block pos:start="151:38" pos:end="177:5">{<block_content pos:start="153:9" pos:end="175:88">

        <expr_stmt pos:start="153:9" pos:end="153:53"><expr pos:start="153:9" pos:end="153:52"><name pos:start="153:9" pos:end="153:12">spec</name> <operator pos:start="153:14" pos:end="153:14">=</operator> <call pos:start="153:16" pos:end="153:52"><name pos:start="153:16" pos:end="153:24">av_strtok</name><argument_list pos:start="153:25" pos:end="153:52">(<argument pos:start="153:26" pos:end="153:37"><expr pos:start="153:26" pos:end="153:37"><name pos:start="153:26" pos:end="153:37">stream_specs</name></expr></argument>, <argument pos:start="153:40" pos:end="153:42"><expr pos:start="153:40" pos:end="153:42"><literal type="string" pos:start="153:40" pos:end="153:42">"+"</literal></expr></argument>, <argument pos:start="153:45" pos:end="153:51"><expr pos:start="153:45" pos:end="153:51"><operator pos:start="153:45" pos:end="153:45">&amp;</operator><name pos:start="153:46" pos:end="153:51">cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="157:31"><if pos:start="155:9" pos:end="157:31">if <condition pos:start="155:12" pos:end="155:18">(<expr pos:start="155:13" pos:end="155:17"><operator pos:start="155:13" pos:end="155:13">!</operator><name pos:start="155:14" pos:end="155:17">spec</name></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:31"><block_content pos:start="157:13" pos:end="157:31">

            <return pos:start="157:13" pos:end="157:31">return <expr pos:start="157:20" pos:end="157:30"><name pos:start="157:20" pos:end="157:30">AVERROR_BUG</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:28"><expr pos:start="159:9" pos:end="159:27"><name pos:start="159:9" pos:end="159:20">stream_specs</name> <operator pos:start="159:22" pos:end="159:22">=</operator> <name pos:start="159:24" pos:end="159:27">NULL</name></expr>;</expr_stmt> <comment type="block" pos:start="159:30" pos:end="159:50">/* for next strtok */</comment>

        <expr_stmt pos:start="161:9" pos:end="161:55"><expr pos:start="161:9" pos:end="161:54"><name pos:start="161:9" pos:end="161:10">st</name> <operator pos:start="161:12" pos:end="161:12">=</operator> <call pos:start="161:14" pos:end="161:54"><name pos:start="161:14" pos:end="161:24">find_stream</name><argument_list pos:start="161:25" pos:end="161:54">(<argument pos:start="161:26" pos:end="161:28"><expr pos:start="161:26" pos:end="161:28"><name pos:start="161:26" pos:end="161:28">ctx</name></expr></argument>, <argument pos:start="161:31" pos:end="161:47"><expr pos:start="161:31" pos:end="161:47"><name pos:start="161:31" pos:end="161:47"><name pos:start="161:31" pos:end="161:35">movie</name><operator pos:start="161:36" pos:end="161:37">-&gt;</operator><name pos:start="161:38" pos:end="161:47">format_ctx</name></name></expr></argument>, <argument pos:start="161:50" pos:end="161:53"><expr pos:start="161:50" pos:end="161:53"><name pos:start="161:50" pos:end="161:53">spec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="163:9" pos:end="165:35"><if pos:start="163:9" pos:end="165:35">if <condition pos:start="163:12" pos:end="163:16">(<expr pos:start="163:13" pos:end="163:15"><operator pos:start="163:13" pos:end="163:13">!</operator><name pos:start="163:14" pos:end="163:15">st</name></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:35"><block_content pos:start="165:13" pos:end="165:35">

            <return pos:start="165:13" pos:end="165:35">return <expr pos:start="165:20" pos:end="165:34"><call pos:start="165:20" pos:end="165:34"><name pos:start="165:20" pos:end="165:26">AVERROR</name><argument_list pos:start="165:27" pos:end="165:34">(<argument pos:start="165:28" pos:end="165:33"><expr pos:start="165:28" pos:end="165:33"><name pos:start="165:28" pos:end="165:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:40"><expr pos:start="167:9" pos:end="167:39"><name pos:start="167:9" pos:end="167:19"><name pos:start="167:9" pos:end="167:10">st</name><operator pos:start="167:11" pos:end="167:12">-&gt;</operator><name pos:start="167:13" pos:end="167:19">discard</name></name> <operator pos:start="167:21" pos:end="167:21">=</operator> <name pos:start="167:23" pos:end="167:39">AVDISCARD_DEFAULT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:29"><expr pos:start="169:9" pos:end="169:28"><name pos:start="169:9" pos:end="169:20"><name pos:start="169:9" pos:end="169:13">movie</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:17">st</name><index pos:start="169:18" pos:end="169:20">[<expr pos:start="169:19" pos:end="169:19"><name pos:start="169:19" pos:end="169:19">i</name></expr>]</index></name><operator pos:start="169:21" pos:end="169:21">.</operator><name pos:start="169:22" pos:end="169:23">st</name> <operator pos:start="169:25" pos:end="169:25">=</operator> <name pos:start="169:27" pos:end="169:28">st</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:76"><expr pos:start="171:9" pos:end="171:75"><name pos:start="171:9" pos:end="171:31"><name pos:start="171:9" pos:end="171:13">movie</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:31">max_stream_index</name></name> <operator pos:start="171:33" pos:end="171:33">=</operator> <call pos:start="171:35" pos:end="171:75"><name pos:start="171:35" pos:end="171:39">FFMAX</name><argument_list pos:start="171:40" pos:end="171:75">(<argument pos:start="171:41" pos:end="171:63"><expr pos:start="171:41" pos:end="171:63"><name pos:start="171:41" pos:end="171:63"><name pos:start="171:41" pos:end="171:45">movie</name><operator pos:start="171:46" pos:end="171:47">-&gt;</operator><name pos:start="171:48" pos:end="171:63">max_stream_index</name></name></expr></argument>, <argument pos:start="171:66" pos:end="171:74"><expr pos:start="171:66" pos:end="171:74"><name pos:start="171:66" pos:end="171:74"><name pos:start="171:66" pos:end="171:67">st</name><operator pos:start="171:68" pos:end="171:69">-&gt;</operator><name pos:start="171:70" pos:end="171:74">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="175:88"><expr pos:start="173:9" pos:end="175:87"><name pos:start="173:9" pos:end="173:20"><name pos:start="173:9" pos:end="173:13">movie</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:17">st</name><index pos:start="173:18" pos:end="173:20">[<expr pos:start="173:19" pos:end="173:19"><name pos:start="173:19" pos:end="173:19">i</name></expr>]</index></name><operator pos:start="173:21" pos:end="173:21">.</operator><name pos:start="173:22" pos:end="173:44">discontinuity_threshold</name> <operator pos:start="173:46" pos:end="173:46">=</operator>

            <call pos:start="175:13" pos:end="175:87"><name pos:start="175:13" pos:end="175:24">av_rescale_q</name><argument_list pos:start="175:25" pos:end="175:87">(<argument pos:start="175:26" pos:end="175:55"><expr pos:start="175:26" pos:end="175:55"><name pos:start="175:26" pos:end="175:55"><name pos:start="175:26" pos:end="175:30">movie</name><operator pos:start="175:31" pos:end="175:32">-&gt;</operator><name pos:start="175:33" pos:end="175:55">discontinuity_threshold</name></name></expr></argument>, <argument pos:start="175:58" pos:end="175:71"><expr pos:start="175:58" pos:end="175:71"><name pos:start="175:58" pos:end="175:71">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="175:74" pos:end="175:86"><expr pos:start="175:74" pos:end="175:86"><name pos:start="175:74" pos:end="175:86"><name pos:start="175:74" pos:end="175:75">st</name><operator pos:start="175:76" pos:end="175:77">-&gt;</operator><name pos:start="175:78" pos:end="175:86">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="179:5" pos:end="181:27"><if pos:start="179:5" pos:end="181:27">if <condition pos:start="179:8" pos:end="179:38">(<expr pos:start="179:9" pos:end="179:37"><call pos:start="179:9" pos:end="179:37"><name pos:start="179:9" pos:end="179:17">av_strtok</name><argument_list pos:start="179:18" pos:end="179:37">(<argument pos:start="179:19" pos:end="179:22"><expr pos:start="179:19" pos:end="179:22"><name pos:start="179:19" pos:end="179:22">NULL</name></expr></argument>, <argument pos:start="179:25" pos:end="179:27"><expr pos:start="179:25" pos:end="179:27"><literal type="string" pos:start="179:25" pos:end="179:27">"+"</literal></expr></argument>, <argument pos:start="179:30" pos:end="179:36"><expr pos:start="179:30" pos:end="179:36"><operator pos:start="179:30" pos:end="179:30">&amp;</operator><name pos:start="179:31" pos:end="179:36">cursor</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="181:9" pos:end="181:27"><block_content pos:start="181:9" pos:end="181:27">

        <return pos:start="181:9" pos:end="181:27">return <expr pos:start="181:16" pos:end="181:26"><name pos:start="181:16" pos:end="181:26">AVERROR_BUG</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="185:5" pos:end="187:60"><expr pos:start="185:5" pos:end="187:59"><name pos:start="185:5" pos:end="185:20"><name pos:start="185:5" pos:end="185:9">movie</name><operator pos:start="185:10" pos:end="185:11">-&gt;</operator><name pos:start="185:12" pos:end="185:20">out_index</name></name> <operator pos:start="185:22" pos:end="185:22">=</operator> <call pos:start="185:24" pos:end="187:59"><name pos:start="185:24" pos:end="185:32">av_calloc</name><argument_list pos:start="185:33" pos:end="187:59">(<argument pos:start="185:34" pos:end="185:60"><expr pos:start="185:34" pos:end="185:60"><name pos:start="185:34" pos:end="185:56"><name pos:start="185:34" pos:end="185:38">movie</name><operator pos:start="185:39" pos:end="185:40">-&gt;</operator><name pos:start="185:41" pos:end="185:56">max_stream_index</name></name> <operator pos:start="185:58" pos:end="185:58">+</operator> <literal type="number" pos:start="185:60" pos:end="185:60">1</literal></expr></argument>,

                                 <argument pos:start="187:34" pos:end="187:58"><expr pos:start="187:34" pos:end="187:58"><sizeof pos:start="187:34" pos:end="187:58">sizeof<argument_list pos:start="187:40" pos:end="187:58">(<argument pos:start="187:41" pos:end="187:57"><expr pos:start="187:41" pos:end="187:57"><operator pos:start="187:41" pos:end="187:41">*</operator><name pos:start="187:42" pos:end="187:57"><name pos:start="187:42" pos:end="187:46">movie</name><operator pos:start="187:47" pos:end="187:48">-&gt;</operator><name pos:start="187:49" pos:end="187:57">out_index</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="189:5" pos:end="191:31"><if pos:start="189:5" pos:end="191:31">if <condition pos:start="189:8" pos:end="189:26">(<expr pos:start="189:9" pos:end="189:25"><operator pos:start="189:9" pos:end="189:9">!</operator><name pos:start="189:10" pos:end="189:25"><name pos:start="189:10" pos:end="189:14">movie</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:25">out_index</name></name></expr>)</condition><block type="pseudo" pos:start="191:9" pos:end="191:31"><block_content pos:start="191:9" pos:end="191:31">

        <return pos:start="191:9" pos:end="191:31">return <expr pos:start="191:16" pos:end="191:30"><call pos:start="191:16" pos:end="191:30"><name pos:start="191:16" pos:end="191:22">AVERROR</name><argument_list pos:start="191:23" pos:end="191:30">(<argument pos:start="191:24" pos:end="191:29"><expr pos:start="191:24" pos:end="191:29"><name pos:start="191:24" pos:end="191:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="193:5" pos:end="195:33">for <control pos:start="193:9" pos:end="193:50">(<init pos:start="193:10" pos:end="193:15"><expr pos:start="193:10" pos:end="193:14"><name pos:start="193:10" pos:end="193:10">i</name> <operator pos:start="193:12" pos:end="193:12">=</operator> <literal type="number" pos:start="193:14" pos:end="193:14">0</literal></expr>;</init> <condition pos:start="193:17" pos:end="193:45"><expr pos:start="193:17" pos:end="193:44"><name pos:start="193:17" pos:end="193:17">i</name> <operator pos:start="193:19" pos:end="193:20">&lt;=</operator> <name pos:start="193:22" pos:end="193:44"><name pos:start="193:22" pos:end="193:26">movie</name><operator pos:start="193:27" pos:end="193:28">-&gt;</operator><name pos:start="193:29" pos:end="193:44">max_stream_index</name></name></expr>;</condition> <incr pos:start="193:47" pos:end="193:49"><expr pos:start="193:47" pos:end="193:49"><name pos:start="193:47" pos:end="193:47">i</name><operator pos:start="193:48" pos:end="193:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="195:9" pos:end="195:33"><block_content pos:start="195:9" pos:end="195:33">

        <expr_stmt pos:start="195:9" pos:end="195:33"><expr pos:start="195:9" pos:end="195:32"><name pos:start="195:9" pos:end="195:27"><name pos:start="195:9" pos:end="195:13">movie</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:24">out_index</name><index pos:start="195:25" pos:end="195:27">[<expr pos:start="195:26" pos:end="195:26"><name pos:start="195:26" pos:end="195:26">i</name></expr>]</index></name> <operator pos:start="195:29" pos:end="195:29">=</operator> <operator pos:start="195:31" pos:end="195:31">-</operator><literal type="number" pos:start="195:32" pos:end="195:32">1</literal></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="197:5" pos:end="237:5">for <control pos:start="197:9" pos:end="197:36">(<init pos:start="197:10" pos:end="197:15"><expr pos:start="197:10" pos:end="197:14"><name pos:start="197:10" pos:end="197:10">i</name> <operator pos:start="197:12" pos:end="197:12">=</operator> <literal type="number" pos:start="197:14" pos:end="197:14">0</literal></expr>;</init> <condition pos:start="197:17" pos:end="197:31"><expr pos:start="197:17" pos:end="197:30"><name pos:start="197:17" pos:end="197:17">i</name> <operator pos:start="197:19" pos:end="197:19">&lt;</operator> <name pos:start="197:21" pos:end="197:30">nb_streams</name></expr>;</condition> <incr pos:start="197:33" pos:end="197:35"><expr pos:start="197:33" pos:end="197:35"><name pos:start="197:33" pos:end="197:33">i</name><operator pos:start="197:34" pos:end="197:35">++</operator></expr></incr>)</control> <block pos:start="197:38" pos:end="237:5">{<block_content pos:start="199:9" pos:end="235:23">

        <decl_stmt pos:start="199:9" pos:end="199:32"><decl pos:start="199:9" pos:end="199:31"><type pos:start="199:9" pos:end="199:19"><name pos:start="199:9" pos:end="199:19">AVFilterPad</name></type> <name pos:start="199:21" pos:end="199:23">pad</name> <init pos:start="199:25" pos:end="199:31">= <expr pos:start="199:27" pos:end="199:31"><block pos:start="199:27" pos:end="199:31">{ <expr pos:start="199:29" pos:end="199:29"><literal type="number" pos:start="199:29" pos:end="199:29">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:53"><expr pos:start="201:9" pos:end="201:52"><name pos:start="201:9" pos:end="201:48"><name pos:start="201:9" pos:end="201:13">movie</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:24">out_index</name><index pos:start="201:25" pos:end="201:48">[<expr pos:start="201:26" pos:end="201:47"><name pos:start="201:26" pos:end="201:37"><name pos:start="201:26" pos:end="201:30">movie</name><operator pos:start="201:31" pos:end="201:32">-&gt;</operator><name pos:start="201:33" pos:end="201:34">st</name><index pos:start="201:35" pos:end="201:37">[<expr pos:start="201:36" pos:end="201:36"><name pos:start="201:36" pos:end="201:36">i</name></expr>]</index></name><operator pos:start="201:38" pos:end="201:38">.</operator><name pos:start="201:39" pos:end="201:47"><name pos:start="201:39" pos:end="201:40">st</name><operator pos:start="201:41" pos:end="201:42">-&gt;</operator><name pos:start="201:43" pos:end="201:47">index</name></name></expr>]</index></name> <operator pos:start="201:50" pos:end="201:50">=</operator> <name pos:start="201:52" pos:end="201:52">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:49"><expr pos:start="203:9" pos:end="203:48"><call pos:start="203:9" pos:end="203:48"><name pos:start="203:9" pos:end="203:16">snprintf</name><argument_list pos:start="203:17" pos:end="203:48">(<argument pos:start="203:18" pos:end="203:21"><expr pos:start="203:18" pos:end="203:21"><name pos:start="203:18" pos:end="203:21">name</name></expr></argument>, <argument pos:start="203:24" pos:end="203:35"><expr pos:start="203:24" pos:end="203:35"><sizeof pos:start="203:24" pos:end="203:35">sizeof<argument_list pos:start="203:30" pos:end="203:35">(<argument pos:start="203:31" pos:end="203:34"><expr pos:start="203:31" pos:end="203:34"><name pos:start="203:31" pos:end="203:34">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="203:38" pos:end="203:44"><expr pos:start="203:38" pos:end="203:44"><literal type="string" pos:start="203:38" pos:end="203:44">"out%d"</literal></expr></argument>, <argument pos:start="203:47" pos:end="203:47"><expr pos:start="203:47" pos:end="203:47"><name pos:start="203:47" pos:end="203:47">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:66"><expr pos:start="205:9" pos:end="205:65"><name pos:start="205:9" pos:end="205:16"><name pos:start="205:9" pos:end="205:11">pad</name><operator pos:start="205:12" pos:end="205:12">.</operator><name pos:start="205:13" pos:end="205:16">type</name></name>          <operator pos:start="205:27" pos:end="205:27">=</operator> <name pos:start="205:29" pos:end="205:40"><name pos:start="205:29" pos:end="205:33">movie</name><operator pos:start="205:34" pos:end="205:35">-&gt;</operator><name pos:start="205:36" pos:end="205:37">st</name><index pos:start="205:38" pos:end="205:40">[<expr pos:start="205:39" pos:end="205:39"><name pos:start="205:39" pos:end="205:39">i</name></expr>]</index></name><operator pos:start="205:41" pos:end="205:41">.</operator><name pos:start="205:42" pos:end="205:65"><name pos:start="205:42" pos:end="205:43">st</name><operator pos:start="205:44" pos:end="205:45">-&gt;</operator><name pos:start="205:46" pos:end="205:53">codecpar</name><operator pos:start="205:54" pos:end="205:55">-&gt;</operator><name pos:start="205:56" pos:end="205:65">codec_type</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:44"><expr pos:start="207:9" pos:end="207:43"><name pos:start="207:9" pos:end="207:16"><name pos:start="207:9" pos:end="207:11">pad</name><operator pos:start="207:12" pos:end="207:12">.</operator><name pos:start="207:13" pos:end="207:16">name</name></name>          <operator pos:start="207:27" pos:end="207:27">=</operator> <call pos:start="207:29" pos:end="207:43"><name pos:start="207:29" pos:end="207:37">av_strdup</name><argument_list pos:start="207:38" pos:end="207:43">(<argument pos:start="207:39" pos:end="207:42"><expr pos:start="207:39" pos:end="207:42"><name pos:start="207:39" pos:end="207:42">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="209:9" pos:end="211:35"><if pos:start="209:9" pos:end="211:35">if <condition pos:start="209:12" pos:end="209:22">(<expr pos:start="209:13" pos:end="209:21"><operator pos:start="209:13" pos:end="209:13">!</operator><name pos:start="209:14" pos:end="209:21"><name pos:start="209:14" pos:end="209:16">pad</name><operator pos:start="209:17" pos:end="209:17">.</operator><name pos:start="209:18" pos:end="209:21">name</name></name></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="211:35"><block_content pos:start="211:13" pos:end="211:35">

            <return pos:start="211:13" pos:end="211:35">return <expr pos:start="211:20" pos:end="211:34"><call pos:start="211:20" pos:end="211:34"><name pos:start="211:20" pos:end="211:26">AVERROR</name><argument_list pos:start="211:27" pos:end="211:34">(<argument pos:start="211:28" pos:end="211:33"><expr pos:start="211:28" pos:end="211:33"><name pos:start="211:28" pos:end="211:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:54"><expr pos:start="213:9" pos:end="213:53"><name pos:start="213:9" pos:end="213:24"><name pos:start="213:9" pos:end="213:11">pad</name><operator pos:start="213:12" pos:end="213:12">.</operator><name pos:start="213:13" pos:end="213:24">config_props</name></name>  <operator pos:start="213:27" pos:end="213:27">=</operator> <name pos:start="213:29" pos:end="213:53">movie_config_output_props</name></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:48"><expr pos:start="215:9" pos:end="215:47"><name pos:start="215:9" pos:end="215:25"><name pos:start="215:9" pos:end="215:11">pad</name><operator pos:start="215:12" pos:end="215:12">.</operator><name pos:start="215:13" pos:end="215:25">request_frame</name></name> <operator pos:start="215:27" pos:end="215:27">=</operator> <name pos:start="215:29" pos:end="215:47">movie_request_frame</name></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:39"><expr pos:start="217:9" pos:end="217:38"><call pos:start="217:9" pos:end="217:38"><name pos:start="217:9" pos:end="217:24">ff_insert_outpad</name><argument_list pos:start="217:25" pos:end="217:38">(<argument pos:start="217:26" pos:end="217:28"><expr pos:start="217:26" pos:end="217:28"><name pos:start="217:26" pos:end="217:28">ctx</name></expr></argument>, <argument pos:start="217:31" pos:end="217:31"><expr pos:start="217:31" pos:end="217:31"><name pos:start="217:31" pos:end="217:31">i</name></expr></argument>, <argument pos:start="217:34" pos:end="217:37"><expr pos:start="217:34" pos:end="217:37"><operator pos:start="217:34" pos:end="217:34">&amp;</operator><name pos:start="217:35" pos:end="217:37">pad</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="219:9" pos:end="229:9"><if pos:start="219:9" pos:end="229:9">if <condition pos:start="219:12" pos:end="221:55">( <expr pos:start="219:14" pos:end="221:54"><name pos:start="219:14" pos:end="219:25"><name pos:start="219:14" pos:end="219:18">movie</name><operator pos:start="219:19" pos:end="219:20">-&gt;</operator><name pos:start="219:21" pos:end="219:22">st</name><index pos:start="219:23" pos:end="219:25">[<expr pos:start="219:24" pos:end="219:24"><name pos:start="219:24" pos:end="219:24">i</name></expr>]</index></name><operator pos:start="219:26" pos:end="219:26">.</operator><name pos:start="219:27" pos:end="219:50"><name pos:start="219:27" pos:end="219:28">st</name><operator pos:start="219:29" pos:end="219:30">-&gt;</operator><name pos:start="219:31" pos:end="219:38">codecpar</name><operator pos:start="219:39" pos:end="219:40">-&gt;</operator><name pos:start="219:41" pos:end="219:50">codec_type</name></name> <operator pos:start="219:52" pos:end="219:53">==</operator> <name pos:start="219:55" pos:end="219:72">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="219:74" pos:end="219:75">&amp;&amp;</operator>

            <operator pos:start="221:13" pos:end="221:13">!</operator><name pos:start="221:14" pos:end="221:25"><name pos:start="221:14" pos:end="221:18">movie</name><operator pos:start="221:19" pos:end="221:20">-&gt;</operator><name pos:start="221:21" pos:end="221:22">st</name><index pos:start="221:23" pos:end="221:25">[<expr pos:start="221:24" pos:end="221:24"><name pos:start="221:24" pos:end="221:24">i</name></expr>]</index></name><operator pos:start="221:26" pos:end="221:26">.</operator><name pos:start="221:27" pos:end="221:54"><name pos:start="221:27" pos:end="221:28">st</name><operator pos:start="221:29" pos:end="221:30">-&gt;</operator><name pos:start="221:31" pos:end="221:38">codecpar</name><operator pos:start="221:39" pos:end="221:40">-&gt;</operator><name pos:start="221:41" pos:end="221:54">channel_layout</name></name></expr>)</condition> <block pos:start="221:57" pos:end="229:9">{<block_content pos:start="223:13" pos:end="227:27">

            <expr_stmt pos:start="223:13" pos:end="223:62"><expr pos:start="223:13" pos:end="223:61"><name pos:start="223:13" pos:end="223:15">ret</name> <operator pos:start="223:17" pos:end="223:17">=</operator> <call pos:start="223:19" pos:end="223:61"><name pos:start="223:19" pos:end="223:38">guess_channel_layout</name><argument_list pos:start="223:39" pos:end="223:61">(<argument pos:start="223:40" pos:end="223:52"><expr pos:start="223:40" pos:end="223:52"><operator pos:start="223:40" pos:end="223:40">&amp;</operator><name pos:start="223:41" pos:end="223:52"><name pos:start="223:41" pos:end="223:45">movie</name><operator pos:start="223:46" pos:end="223:47">-&gt;</operator><name pos:start="223:48" pos:end="223:49">st</name><index pos:start="223:50" pos:end="223:52">[<expr pos:start="223:51" pos:end="223:51"><name pos:start="223:51" pos:end="223:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="223:55" pos:end="223:55"><expr pos:start="223:55" pos:end="223:55"><name pos:start="223:55" pos:end="223:55">i</name></expr></argument>, <argument pos:start="223:58" pos:end="223:60"><expr pos:start="223:58" pos:end="223:60"><name pos:start="223:58" pos:end="223:60">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="225:13" pos:end="227:27"><if pos:start="225:13" pos:end="227:27">if <condition pos:start="225:16" pos:end="225:24">(<expr pos:start="225:17" pos:end="225:23"><name pos:start="225:17" pos:end="225:19">ret</name> <operator pos:start="225:21" pos:end="225:21">&lt;</operator> <literal type="number" pos:start="225:23" pos:end="225:23">0</literal></expr>)</condition><block type="pseudo" pos:start="227:17" pos:end="227:27"><block_content pos:start="227:17" pos:end="227:27">

                <return pos:start="227:17" pos:end="227:27">return <expr pos:start="227:24" pos:end="227:26"><name pos:start="227:24" pos:end="227:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:46"><expr pos:start="231:9" pos:end="231:45"><name pos:start="231:9" pos:end="231:11">ret</name> <operator pos:start="231:13" pos:end="231:13">=</operator> <call pos:start="231:15" pos:end="231:45"><name pos:start="231:15" pos:end="231:25">open_stream</name><argument_list pos:start="231:26" pos:end="231:45">(<argument pos:start="231:27" pos:end="231:29"><expr pos:start="231:27" pos:end="231:29"><name pos:start="231:27" pos:end="231:29">ctx</name></expr></argument>, <argument pos:start="231:32" pos:end="231:44"><expr pos:start="231:32" pos:end="231:44"><operator pos:start="231:32" pos:end="231:32">&amp;</operator><name pos:start="231:33" pos:end="231:44"><name pos:start="231:33" pos:end="231:37">movie</name><operator pos:start="231:38" pos:end="231:39">-&gt;</operator><name pos:start="231:40" pos:end="231:41">st</name><index pos:start="231:42" pos:end="231:44">[<expr pos:start="231:43" pos:end="231:43"><name pos:start="231:43" pos:end="231:43">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="233:9" pos:end="235:23"><if pos:start="233:9" pos:end="235:23">if <condition pos:start="233:12" pos:end="233:20">(<expr pos:start="233:13" pos:end="233:19"><name pos:start="233:13" pos:end="233:15">ret</name> <operator pos:start="233:17" pos:end="233:17">&lt;</operator> <literal type="number" pos:start="233:19" pos:end="233:19">0</literal></expr>)</condition><block type="pseudo" pos:start="235:13" pos:end="235:23"><block_content pos:start="235:13" pos:end="235:23">

            <return pos:start="235:13" pos:end="235:23">return <expr pos:start="235:20" pos:end="235:22"><name pos:start="235:20" pos:end="235:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="241:5" pos:end="245:32"><expr pos:start="241:5" pos:end="245:31"><call pos:start="241:5" pos:end="245:31"><name pos:start="241:5" pos:end="241:10">av_log</name><argument_list pos:start="241:11" pos:end="245:31">(<argument pos:start="241:12" pos:end="241:14"><expr pos:start="241:12" pos:end="241:14"><name pos:start="241:12" pos:end="241:14">ctx</name></expr></argument>, <argument pos:start="241:17" pos:end="241:30"><expr pos:start="241:17" pos:end="241:30"><name pos:start="241:17" pos:end="241:30">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="241:33" pos:end="241:100"><expr pos:start="241:33" pos:end="241:100"><literal type="string" pos:start="241:33" pos:end="241:46">"seek_point:%"</literal><name pos:start="241:47" pos:end="241:52">PRIi64</name><literal type="string" pos:start="241:53" pos:end="241:100">" format_name:%s file_name:%s stream_index:%d\n"</literal></expr></argument>,

           <argument pos:start="243:12" pos:end="243:28"><expr pos:start="243:12" pos:end="243:28"><name pos:start="243:12" pos:end="243:28"><name pos:start="243:12" pos:end="243:16">movie</name><operator pos:start="243:17" pos:end="243:18">-&gt;</operator><name pos:start="243:19" pos:end="243:28">seek_point</name></name></expr></argument>, <argument pos:start="243:31" pos:end="243:48"><expr pos:start="243:31" pos:end="243:48"><name pos:start="243:31" pos:end="243:48"><name pos:start="243:31" pos:end="243:35">movie</name><operator pos:start="243:36" pos:end="243:37">-&gt;</operator><name pos:start="243:38" pos:end="243:48">format_name</name></name></expr></argument>, <argument pos:start="243:51" pos:end="243:66"><expr pos:start="243:51" pos:end="243:66"><name pos:start="243:51" pos:end="243:66"><name pos:start="243:51" pos:end="243:55">movie</name><operator pos:start="243:56" pos:end="243:57">-&gt;</operator><name pos:start="243:58" pos:end="243:66">file_name</name></name></expr></argument>,

           <argument pos:start="245:12" pos:end="245:30"><expr pos:start="245:12" pos:end="245:30"><name pos:start="245:12" pos:end="245:30"><name pos:start="245:12" pos:end="245:16">movie</name><operator pos:start="245:17" pos:end="245:18">-&gt;</operator><name pos:start="245:19" pos:end="245:30">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="249:5" pos:end="249:13">return <expr pos:start="249:12" pos:end="249:12"><literal type="number" pos:start="249:12" pos:end="249:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
