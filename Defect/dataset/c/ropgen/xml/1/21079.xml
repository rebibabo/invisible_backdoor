<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21079.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:32">ff_mjpeg_decode_init</name><parameter_list pos:start="1:33" pos:end="1:55">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">MJpegDecodeContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:25">s</name> <init pos:start="5:27" pos:end="5:44">= <expr pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:33">avctx</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:44">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="19:5"><if pos:start="9:5" pos:end="19:5">if <condition pos:start="9:8" pos:end="9:24">(<expr pos:start="9:9" pos:end="9:23"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:23"><name pos:start="9:10" pos:end="9:10">s</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:23">picture_ptr</name></name></expr>)</condition> <block pos:start="9:26" pos:end="19:5">{<block_content pos:start="11:9" pos:end="17:36">

        <expr_stmt pos:start="11:9" pos:end="11:38"><expr pos:start="11:9" pos:end="11:37"><name pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:18">picture</name></name> <operator pos:start="11:20" pos:end="11:20">=</operator> <call pos:start="11:22" pos:end="11:37"><name pos:start="11:22" pos:end="11:35">av_frame_alloc</name><argument_list pos:start="11:36" pos:end="11:37">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="13:9" pos:end="15:35"><if pos:start="13:9" pos:end="15:35">if <condition pos:start="13:12" pos:end="13:24">(<expr pos:start="13:13" pos:end="13:23"><operator pos:start="13:13" pos:end="13:13">!</operator><name pos:start="13:14" pos:end="13:23"><name pos:start="13:14" pos:end="13:14">s</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:23">picture</name></name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:35"><block_content pos:start="15:13" pos:end="15:35">

            <return pos:start="15:13" pos:end="15:35">return <expr pos:start="15:20" pos:end="15:34"><call pos:start="15:20" pos:end="15:34"><name pos:start="15:20" pos:end="15:26">AVERROR</name><argument_list pos:start="15:27" pos:end="15:34">(<argument pos:start="15:28" pos:end="15:33"><expr pos:start="15:28" pos:end="15:33"><name pos:start="15:28" pos:end="15:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:36"><expr pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:22">picture_ptr</name></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <name pos:start="17:26" pos:end="17:35"><name pos:start="17:26" pos:end="17:26">s</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:35">picture</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:12">avctx</name></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:20">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><call pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:20">ff_blockdsp_init</name><argument_list pos:start="25:21" pos:end="25:37">(<argument pos:start="25:22" pos:end="25:29"><expr pos:start="25:22" pos:end="25:29"><operator pos:start="25:22" pos:end="25:22">&amp;</operator><name pos:start="25:23" pos:end="25:29"><name pos:start="25:23" pos:end="25:23">s</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:29">bdsp</name></name></expr></argument>, <argument pos:start="25:32" pos:end="25:36"><expr pos:start="25:32" pos:end="25:36"><name pos:start="25:32" pos:end="25:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:44"><expr pos:start="27:5" pos:end="27:43"><call pos:start="27:5" pos:end="27:43"><name pos:start="27:5" pos:end="27:19">ff_hpeldsp_init</name><argument_list pos:start="27:20" pos:end="27:43">(<argument pos:start="27:21" pos:end="27:28"><expr pos:start="27:21" pos:end="27:28"><operator pos:start="27:21" pos:end="27:21">&amp;</operator><name pos:start="27:22" pos:end="27:28"><name pos:start="27:22" pos:end="27:22">s</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:28">hdsp</name></name></expr></argument>, <argument pos:start="27:31" pos:end="27:42"><expr pos:start="27:31" pos:end="27:42"><name pos:start="27:31" pos:end="27:42"><name pos:start="27:31" pos:end="27:35">avctx</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:42">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:37"><expr pos:start="29:5" pos:end="29:36"><call pos:start="29:5" pos:end="29:36"><name pos:start="29:5" pos:end="29:19">ff_idctdsp_init</name><argument_list pos:start="29:20" pos:end="29:36">(<argument pos:start="29:21" pos:end="29:28"><expr pos:start="29:21" pos:end="29:28"><operator pos:start="29:21" pos:end="29:21">&amp;</operator><name pos:start="29:22" pos:end="29:28"><name pos:start="29:22" pos:end="29:22">s</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:28">idsp</name></name></expr></argument>, <argument pos:start="29:31" pos:end="29:35"><expr pos:start="29:31" pos:end="29:35"><name pos:start="29:31" pos:end="29:35">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="33:40"><expr pos:start="31:5" pos:end="33:39"><call pos:start="31:5" pos:end="33:39"><name pos:start="31:5" pos:end="31:21">ff_init_scantable</name><argument_list pos:start="31:22" pos:end="33:39">(<argument pos:start="31:23" pos:end="31:46"><expr pos:start="31:23" pos:end="31:46"><name pos:start="31:23" pos:end="31:46"><name pos:start="31:23" pos:end="31:23">s</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:29">idsp</name><operator pos:start="31:30" pos:end="31:30">.</operator><name pos:start="31:31" pos:end="31:46">idct_permutation</name></name></expr></argument>, <argument pos:start="31:49" pos:end="31:61"><expr pos:start="31:49" pos:end="31:61"><operator pos:start="31:49" pos:end="31:49">&amp;</operator><name pos:start="31:50" pos:end="31:61"><name pos:start="31:50" pos:end="31:50">s</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:61">scantable</name></name></expr></argument>,

                      <argument pos:start="33:23" pos:end="33:38"><expr pos:start="33:23" pos:end="33:38"><name pos:start="33:23" pos:end="33:38">ff_zigzag_direct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:25"><expr pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:18">buffer_size</name></name>   <operator pos:start="35:22" pos:end="35:22">=</operator> <literal type="number" pos:start="35:24" pos:end="35:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:13">buffer</name></name>        <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:27">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:17">start_code</name></name>    <operator pos:start="39:22" pos:end="39:22">=</operator> <operator pos:start="39:24" pos:end="39:24">-</operator><literal type="number" pos:start="39:25" pos:end="39:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:25"><expr pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:20">first_picture</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <literal type="number" pos:start="41:24" pos:end="41:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:43"><expr pos:start="43:5" pos:end="43:42"><name pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:17">org_height</name></name>    <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:42"><name pos:start="43:24" pos:end="43:28">avctx</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:42">coded_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:56"><expr pos:start="45:5" pos:end="45:55"><name pos:start="45:5" pos:end="45:33"><name pos:start="45:5" pos:end="45:9">avctx</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:33">chroma_sample_location</name></name> <operator pos:start="45:35" pos:end="45:35">=</operator> <name pos:start="45:37" pos:end="45:55">AVCHROMA_LOC_CENTER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:42"><expr pos:start="47:5" pos:end="47:41"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:9">avctx</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:21">colorspace</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:41">AVCOL_SPC_BT470BG</name></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><call pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:25">build_basic_mjpeg_vlc</name><argument_list pos:start="51:26" pos:end="51:28">(<argument pos:start="51:27" pos:end="51:27"><expr pos:start="51:27" pos:end="51:27"><name pos:start="51:27" pos:end="51:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="73:5"><if pos:start="55:5" pos:end="73:5">if <condition pos:start="55:8" pos:end="55:23">(<expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:22">extern_huff</name></name></expr>)</condition> <block pos:start="55:25" pos:end="73:5">{<block_content pos:start="57:9" pos:end="71:9">

        <decl_stmt pos:start="57:9" pos:end="57:16"><decl pos:start="57:9" pos:end="57:15"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:15">ret</name></decl>;</decl_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:76"><expr pos:start="59:9" pos:end="59:75"><call pos:start="59:9" pos:end="59:75"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="59:75">(<argument pos:start="59:16" pos:end="59:20"><expr pos:start="59:16" pos:end="59:20"><name pos:start="59:16" pos:end="59:20">avctx</name></expr></argument>, <argument pos:start="59:23" pos:end="59:33"><expr pos:start="59:23" pos:end="59:33"><name pos:start="59:23" pos:end="59:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="59:36" pos:end="59:74"><expr pos:start="59:36" pos:end="59:74"><literal type="string" pos:start="59:36" pos:end="59:74">"mjpeg: using external huffman table\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:75"><expr pos:start="61:9" pos:end="61:74"><call pos:start="61:9" pos:end="61:74"><name pos:start="61:9" pos:end="61:21">init_get_bits</name><argument_list pos:start="61:22" pos:end="61:74">(<argument pos:start="61:23" pos:end="61:28"><expr pos:start="61:23" pos:end="61:28"><operator pos:start="61:23" pos:end="61:23">&amp;</operator><name pos:start="61:24" pos:end="61:28"><name pos:start="61:24" pos:end="61:24">s</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:28">gb</name></name></expr></argument>, <argument pos:start="61:31" pos:end="61:46"><expr pos:start="61:31" pos:end="61:46"><name pos:start="61:31" pos:end="61:46"><name pos:start="61:31" pos:end="61:35">avctx</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:46">extradata</name></name></expr></argument>, <argument pos:start="61:49" pos:end="61:73"><expr pos:start="61:49" pos:end="61:73"><name pos:start="61:49" pos:end="61:69"><name pos:start="61:49" pos:end="61:53">avctx</name><operator pos:start="61:54" pos:end="61:55">-&gt;</operator><name pos:start="61:56" pos:end="61:69">extradata_size</name></name> <operator pos:start="61:71" pos:end="61:71">*</operator> <literal type="number" pos:start="61:73" pos:end="61:73">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="71:9"><if pos:start="63:9" pos:end="71:9">if <condition pos:start="63:12" pos:end="63:43">(<expr pos:start="63:13" pos:end="63:42"><operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:16">ret</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:41"><name pos:start="63:20" pos:end="63:38">ff_mjpeg_decode_dht</name><argument_list pos:start="63:39" pos:end="63:41">(<argument pos:start="63:40" pos:end="63:40"><expr pos:start="63:40" pos:end="63:40"><name pos:start="63:40" pos:end="63:40">s</name></expr></argument>)</argument_list></call><operator pos:start="63:42" pos:end="63:42">)</operator></expr>)</condition> <block pos:start="63:45" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:23">

            <expr_stmt pos:start="65:13" pos:end="67:66"><expr pos:start="65:13" pos:end="67:65"><call pos:start="65:13" pos:end="67:65"><name pos:start="65:13" pos:end="65:18">av_log</name><argument_list pos:start="65:19" pos:end="67:65">(<argument pos:start="65:20" pos:end="65:24"><expr pos:start="65:20" pos:end="65:24"><name pos:start="65:20" pos:end="65:24">avctx</name></expr></argument>, <argument pos:start="65:27" pos:end="65:38"><expr pos:start="65:27" pos:end="65:38"><name pos:start="65:27" pos:end="65:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="67:20" pos:end="67:64"><expr pos:start="67:20" pos:end="67:64"><literal type="string" pos:start="67:20" pos:end="67:64">"mjpeg: error using external huffman table\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:23">return <expr pos:start="69:20" pos:end="69:22"><name pos:start="69:20" pos:end="69:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:42">(<expr pos:start="75:9" pos:end="75:41"><name pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:13">avctx</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:26">field_order</name></name> <operator pos:start="75:28" pos:end="75:29">==</operator> <name pos:start="75:31" pos:end="75:41">AV_FIELD_BB</name></expr>)</condition> <block pos:start="75:44" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:66"> <comment type="block" pos:start="75:46" pos:end="75:72">/* quicktime icefloe 019 */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:34"><expr pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:29">interlace_polarity</name></name> <operator pos:start="77:31" pos:end="77:31">=</operator> <literal type="number" pos:start="77:33" pos:end="77:33">1</literal></expr>;</expr_stmt>           <comment type="block" pos:start="77:46" pos:end="77:69">/* bottom field first */</comment>

        <expr_stmt pos:start="79:9" pos:end="79:66"><expr pos:start="79:9" pos:end="79:65"><call pos:start="79:9" pos:end="79:65"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:65">(<argument pos:start="79:16" pos:end="79:20"><expr pos:start="79:16" pos:end="79:20"><name pos:start="79:16" pos:end="79:20">avctx</name></expr></argument>, <argument pos:start="79:23" pos:end="79:34"><expr pos:start="79:23" pos:end="79:34"><name pos:start="79:23" pos:end="79:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="79:37" pos:end="79:64"><expr pos:start="79:37" pos:end="79:64"><literal type="string" pos:start="79:37" pos:end="79:64">"mjpeg bottom field first\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="83:5" pos:end="85:23"><if pos:start="83:5" pos:end="85:23">if <condition pos:start="83:8" pos:end="83:44">(<expr pos:start="83:9" pos:end="83:43"><name pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:13">avctx</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:20">codec</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:24">id</name></name> <operator pos:start="83:26" pos:end="83:27">==</operator> <name pos:start="83:29" pos:end="83:43">AV_CODEC_ID_AMV</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:23"><block_content pos:start="85:9" pos:end="85:23">

        <expr_stmt pos:start="85:9" pos:end="85:23"><expr pos:start="85:9" pos:end="85:22"><name pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:18">flipped</name></name> <operator pos:start="85:20" pos:end="85:20">=</operator> <literal type="number" pos:start="85:22" pos:end="85:22">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
