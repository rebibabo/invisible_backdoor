<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26366.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">mips_cpu_dump_state</name><parameter_list pos:start="1:25" pos:end="3:35">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:33">CPUState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">cs</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:46"><decl pos:start="1:40" pos:end="1:46"><type pos:start="1:40" pos:end="1:46"><name pos:start="1:40" pos:end="1:43">FILE</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">f</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:76"><decl pos:start="1:49" pos:end="1:76"><type pos:start="1:49" pos:end="1:76"><name pos:start="1:49" pos:end="1:64">fprintf_function</name></type> <name pos:start="1:66" pos:end="1:76">cpu_fprintf</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:34"><decl pos:start="3:26" pos:end="3:34"><type pos:start="3:26" pos:end="3:34"><name pos:start="3:26" pos:end="3:28">int</name></type> <name pos:start="3:30" pos:end="3:34">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="68:0">

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">MIPSCPU</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">cpu</name> <init pos:start="7:18" pos:end="7:31">= <expr pos:start="7:20" pos:end="7:31"><call pos:start="7:20" pos:end="7:31"><name pos:start="7:20" pos:end="7:27">MIPS_CPU</name><argument_list pos:start="7:28" pos:end="7:31">(<argument pos:start="7:29" pos:end="7:30"><expr pos:start="7:29" pos:end="7:30"><name pos:start="7:29" pos:end="7:30">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">CPUMIPSState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">env</name> <init pos:start="9:23" pos:end="9:33">= <expr pos:start="9:25" pos:end="9:33"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:33"><name pos:start="9:26" pos:end="9:28">cpu</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:33">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="23:55"><expr pos:start="15:5" pos:end="23:54"><call pos:start="15:5" pos:end="23:54"><name pos:start="15:5" pos:end="15:15">cpu_fprintf</name><argument_list pos:start="15:16" pos:end="23:54">(<argument pos:start="15:17" pos:end="15:17"><expr pos:start="15:17" pos:end="15:17"><name pos:start="15:17" pos:end="15:17">f</name></expr></argument>, <argument pos:start="15:20" pos:end="19:52"><expr pos:start="15:20" pos:end="19:52"><literal type="string" pos:start="15:20" pos:end="15:26">"pc=0x"</literal> <name pos:start="15:28" pos:end="15:40">TARGET_FMT_lx</name> <literal type="string" pos:start="15:42" pos:end="15:49">" HI=0x"</literal> <name pos:start="15:51" pos:end="15:63">TARGET_FMT_lx</name>

                <literal type="string" pos:start="17:17" pos:end="17:24">" LO=0x"</literal> <name pos:start="17:26" pos:end="17:38">TARGET_FMT_lx</name> <literal type="string" pos:start="17:40" pos:end="17:50">" ds %04x "</literal>

                <name pos:start="19:17" pos:end="19:29">TARGET_FMT_lx</name> <literal type="string" pos:start="19:31" pos:end="19:33">" "</literal> <name pos:start="19:35" pos:end="19:47">TARGET_FMT_ld</name> <literal type="string" pos:start="19:49" pos:end="19:52">"\n"</literal></expr></argument>,

                <argument pos:start="21:17" pos:end="21:33"><expr pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:19">env</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:30">active_tc</name><operator pos:start="21:31" pos:end="21:31">.</operator><name pos:start="21:32" pos:end="21:33">PC</name></name></expr></argument>, <argument pos:start="21:36" pos:end="21:55"><expr pos:start="21:36" pos:end="21:55"><name pos:start="21:36" pos:end="21:55"><name pos:start="21:36" pos:end="21:38">env</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:49">active_tc</name><operator pos:start="21:50" pos:end="21:50">.</operator><name pos:start="21:51" pos:end="21:52">HI</name><index pos:start="21:53" pos:end="21:55">[<expr pos:start="21:54" pos:end="21:54"><literal type="number" pos:start="21:54" pos:end="21:54">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="21:58" pos:end="21:77"><expr pos:start="21:58" pos:end="21:77"><name pos:start="21:58" pos:end="21:77"><name pos:start="21:58" pos:end="21:60">env</name><operator pos:start="21:61" pos:end="21:62">-&gt;</operator><name pos:start="21:63" pos:end="21:71">active_tc</name><operator pos:start="21:72" pos:end="21:72">.</operator><name pos:start="21:73" pos:end="21:74">LO</name><index pos:start="21:75" pos:end="21:77">[<expr pos:start="21:76" pos:end="21:76"><literal type="number" pos:start="21:76" pos:end="21:76">0</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="23:17" pos:end="23:27"><expr pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:19">env</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:27">hflags</name></name></expr></argument>, <argument pos:start="23:30" pos:end="23:41"><expr pos:start="23:30" pos:end="23:41"><name pos:start="23:30" pos:end="23:41"><name pos:start="23:30" pos:end="23:32">env</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:41">btarget</name></name></expr></argument>, <argument pos:start="23:44" pos:end="23:53"><expr pos:start="23:44" pos:end="23:53"><name pos:start="23:44" pos:end="23:53"><name pos:start="23:44" pos:end="23:46">env</name><operator pos:start="23:47" pos:end="23:48">-&gt;</operator><name pos:start="23:49" pos:end="23:53">bcond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="37:5">for <control pos:start="25:9" pos:end="25:28">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:23"><expr pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <literal type="number" pos:start="25:21" pos:end="25:22">32</literal></expr>;</condition> <incr pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:25">i</name><operator pos:start="25:26" pos:end="25:27">++</operator></expr></incr>)</control> <block pos:start="25:30" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:33">

        <if_stmt pos:start="27:9" pos:end="29:42"><if pos:start="27:9" pos:end="29:42">if <condition pos:start="27:12" pos:end="27:25">(<expr pos:start="27:13" pos:end="27:24"><operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:14">i</name> <operator pos:start="27:16" pos:end="27:16">&amp;</operator> <literal type="number" pos:start="27:18" pos:end="27:18">3</literal><operator pos:start="27:19" pos:end="27:19">)</operator> <operator pos:start="27:21" pos:end="27:22">==</operator> <literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:42"><block_content pos:start="29:13" pos:end="29:42">

            <expr_stmt pos:start="29:13" pos:end="29:42"><expr pos:start="29:13" pos:end="29:41"><call pos:start="29:13" pos:end="29:41"><name pos:start="29:13" pos:end="29:23">cpu_fprintf</name><argument_list pos:start="29:24" pos:end="29:41">(<argument pos:start="29:25" pos:end="29:25"><expr pos:start="29:25" pos:end="29:25"><name pos:start="29:25" pos:end="29:25">f</name></expr></argument>, <argument pos:start="29:28" pos:end="29:37"><expr pos:start="29:28" pos:end="29:37"><literal type="string" pos:start="29:28" pos:end="29:37">"GPR%02d:"</literal></expr></argument>, <argument pos:start="29:40" pos:end="29:40"><expr pos:start="29:40" pos:end="29:40"><name pos:start="29:40" pos:end="29:40">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:81"><expr pos:start="31:9" pos:end="31:80"><call pos:start="31:9" pos:end="31:80"><name pos:start="31:9" pos:end="31:19">cpu_fprintf</name><argument_list pos:start="31:20" pos:end="31:80">(<argument pos:start="31:21" pos:end="31:21"><expr pos:start="31:21" pos:end="31:21"><name pos:start="31:21" pos:end="31:21">f</name></expr></argument>, <argument pos:start="31:24" pos:end="31:43"><expr pos:start="31:24" pos:end="31:43"><literal type="string" pos:start="31:24" pos:end="31:29">" %s "</literal> <name pos:start="31:31" pos:end="31:43">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="31:46" pos:end="31:56"><expr pos:start="31:46" pos:end="31:56"><name pos:start="31:46" pos:end="31:56"><name pos:start="31:46" pos:end="31:53">regnames</name><index pos:start="31:54" pos:end="31:56">[<expr pos:start="31:55" pos:end="31:55"><name pos:start="31:55" pos:end="31:55">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:59" pos:end="31:79"><expr pos:start="31:59" pos:end="31:79"><name pos:start="31:59" pos:end="31:79"><name pos:start="31:59" pos:end="31:61">env</name><operator pos:start="31:62" pos:end="31:63">-&gt;</operator><name pos:start="31:64" pos:end="31:72">active_tc</name><operator pos:start="31:73" pos:end="31:73">.</operator><name pos:start="31:74" pos:end="31:76">gpr</name><index pos:start="31:77" pos:end="31:79">[<expr pos:start="31:78" pos:end="31:78"><name pos:start="31:78" pos:end="31:78">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:33"><if pos:start="33:9" pos:end="35:33">if <condition pos:start="33:12" pos:end="33:25">(<expr pos:start="33:13" pos:end="33:24"><operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:14">i</name> <operator pos:start="33:16" pos:end="33:16">&amp;</operator> <literal type="number" pos:start="33:18" pos:end="33:18">3</literal><operator pos:start="33:19" pos:end="33:19">)</operator> <operator pos:start="33:21" pos:end="33:22">==</operator> <literal type="number" pos:start="33:24" pos:end="33:24">3</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:33"><block_content pos:start="35:13" pos:end="35:33">

            <expr_stmt pos:start="35:13" pos:end="35:33"><expr pos:start="35:13" pos:end="35:32"><call pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:23">cpu_fprintf</name><argument_list pos:start="35:24" pos:end="35:32">(<argument pos:start="35:25" pos:end="35:25"><expr pos:start="35:25" pos:end="35:25"><name pos:start="35:25" pos:end="35:25">f</name></expr></argument>, <argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><literal type="string" pos:start="35:28" pos:end="35:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="41:5" pos:end="43:63"><expr pos:start="41:5" pos:end="43:62"><call pos:start="41:5" pos:end="43:62"><name pos:start="41:5" pos:end="41:15">cpu_fprintf</name><argument_list pos:start="41:16" pos:end="43:62">(<argument pos:start="41:17" pos:end="41:17"><expr pos:start="41:17" pos:end="41:17"><name pos:start="41:17" pos:end="41:17">f</name></expr></argument>, <argument pos:start="41:20" pos:end="41:83"><expr pos:start="41:20" pos:end="41:83"><literal type="string" pos:start="41:20" pos:end="41:64">"CP0 Status  0x%08x Cause   0x%08x EPC    0x"</literal> <name pos:start="41:66" pos:end="41:78">TARGET_FMT_lx</name> <literal type="string" pos:start="41:80" pos:end="41:83">"\n"</literal></expr></argument>,

                <argument pos:start="43:17" pos:end="43:31"><expr pos:start="43:17" pos:end="43:31"><name pos:start="43:17" pos:end="43:31"><name pos:start="43:17" pos:end="43:19">env</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:31">CP0_Status</name></name></expr></argument>, <argument pos:start="43:34" pos:end="43:47"><expr pos:start="43:34" pos:end="43:47"><name pos:start="43:34" pos:end="43:47"><name pos:start="43:34" pos:end="43:36">env</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:47">CP0_Cause</name></name></expr></argument>, <argument pos:start="43:50" pos:end="43:61"><expr pos:start="43:50" pos:end="43:61"><name pos:start="43:50" pos:end="43:61"><name pos:start="43:50" pos:end="43:52">env</name><operator pos:start="43:53" pos:end="43:54">-&gt;</operator><name pos:start="43:55" pos:end="43:61">CP0_EPC</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="49:65"><expr pos:start="45:5" pos:end="49:64"><call pos:start="45:5" pos:end="49:64"><name pos:start="45:5" pos:end="45:15">cpu_fprintf</name><argument_list pos:start="45:16" pos:end="49:64">(<argument pos:start="45:17" pos:end="45:17"><expr pos:start="45:17" pos:end="45:17"><name pos:start="45:17" pos:end="45:17">f</name></expr></argument>, <argument pos:start="45:20" pos:end="47:27"><expr pos:start="45:20" pos:end="47:27"><literal type="string" pos:start="45:20" pos:end="45:68">"    Config0 0x%08x Config1 0x%08x LLAddr 0x%016"</literal>

                <name pos:start="47:17" pos:end="47:22">PRIx64</name> <literal type="string" pos:start="47:24" pos:end="47:27">"\n"</literal></expr></argument>,

                <argument pos:start="49:17" pos:end="49:32"><expr pos:start="49:17" pos:end="49:32"><name pos:start="49:17" pos:end="49:32"><name pos:start="49:17" pos:end="49:19">env</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:32">CP0_Config0</name></name></expr></argument>, <argument pos:start="49:35" pos:end="49:50"><expr pos:start="49:35" pos:end="49:50"><name pos:start="49:35" pos:end="49:50"><name pos:start="49:35" pos:end="49:37">env</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:50">CP0_Config1</name></name></expr></argument>, <argument pos:start="49:53" pos:end="49:63"><expr pos:start="49:53" pos:end="49:63"><name pos:start="49:53" pos:end="49:63"><name pos:start="49:53" pos:end="49:55">env</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:63">lladdr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="53:52"><expr pos:start="51:5" pos:end="53:51"><call pos:start="51:5" pos:end="53:51"><name pos:start="51:5" pos:end="51:15">cpu_fprintf</name><argument_list pos:start="51:16" pos:end="53:51">(<argument pos:start="51:17" pos:end="51:17"><expr pos:start="51:17" pos:end="51:17"><name pos:start="51:17" pos:end="51:17">f</name></expr></argument>, <argument pos:start="51:20" pos:end="51:56"><expr pos:start="51:20" pos:end="51:56"><literal type="string" pos:start="51:20" pos:end="51:56">"    Config2 0x%08x Config3 0x%08x\n"</literal></expr></argument>,

                <argument pos:start="53:17" pos:end="53:32"><expr pos:start="53:17" pos:end="53:32"><name pos:start="53:17" pos:end="53:32"><name pos:start="53:17" pos:end="53:19">env</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:32">CP0_Config2</name></name></expr></argument>, <argument pos:start="53:35" pos:end="53:50"><expr pos:start="53:35" pos:end="53:50"><name pos:start="53:35" pos:end="53:50"><name pos:start="53:35" pos:end="53:37">env</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:50">CP0_Config3</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="57:52"><expr pos:start="55:5" pos:end="57:51"><call pos:start="55:5" pos:end="57:51"><name pos:start="55:5" pos:end="55:15">cpu_fprintf</name><argument_list pos:start="55:16" pos:end="57:51">(<argument pos:start="55:17" pos:end="55:17"><expr pos:start="55:17" pos:end="55:17"><name pos:start="55:17" pos:end="55:17">f</name></expr></argument>, <argument pos:start="55:20" pos:end="55:56"><expr pos:start="55:20" pos:end="55:56"><literal type="string" pos:start="55:20" pos:end="55:56">"    Config4 0x%08x Config5 0x%08x\n"</literal></expr></argument>,

                <argument pos:start="57:17" pos:end="57:32"><expr pos:start="57:17" pos:end="57:32"><name pos:start="57:17" pos:end="57:32"><name pos:start="57:17" pos:end="57:19">env</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:32">CP0_Config4</name></name></expr></argument>, <argument pos:start="57:35" pos:end="57:50"><expr pos:start="57:35" pos:end="57:50"><name pos:start="57:35" pos:end="57:50"><name pos:start="57:35" pos:end="57:37">env</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:50">CP0_Config5</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="64:0"><if pos:start="59:5" pos:end="64:0">if <condition pos:start="59:8" pos:end="59:37">(<expr pos:start="59:9" pos:end="59:36"><name pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:11">env</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:19">hflags</name></name> <operator pos:start="59:21" pos:end="59:21">&amp;</operator> <name pos:start="59:23" pos:end="59:36">MIPS_HFLAG_FPU</name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="64:0"><block_content pos:start="61:9" pos:end="64:0">

        <expr_stmt pos:start="61:9" pos:end="64:0"><expr pos:start="61:9" pos:end="61:50"><call pos:start="61:9" pos:end="61:50"><name pos:start="61:9" pos:end="61:22">fpu_dump_state</name><argument_list pos:start="61:23" pos:end="61:50">(<argument pos:start="61:24" pos:end="61:26"><expr pos:start="61:24" pos:end="61:26"><name pos:start="61:24" pos:end="61:26">env</name></expr></argument>, <argument pos:start="61:29" pos:end="61:29"><expr pos:start="61:29" pos:end="61:29"><name pos:start="61:29" pos:end="61:29">f</name></expr></argument>, <argument pos:start="61:32" pos:end="61:42"><expr pos:start="61:32" pos:end="61:42"><name pos:start="61:32" pos:end="61:42">cpu_fprintf</name></expr></argument>, <argument pos:start="61:45" pos:end="61:49"><expr pos:start="61:45" pos:end="61:49"><name pos:start="61:45" pos:end="61:49">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:if pos:start="63:1" pos:end="63:65">#<cpp:directive pos:start="63:2" pos:end="63:3">if</cpp:directive> <expr pos:start="63:5" pos:end="63:65"><call pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:11">defined</name><argument_list pos:start="63:12" pos:end="63:26">(<argument pos:start="63:13" pos:end="63:25"><expr pos:start="63:13" pos:end="63:25"><name pos:start="63:13" pos:end="63:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call> <operator pos:start="63:28" pos:end="63:29">&amp;&amp;</operator> <call pos:start="63:31" pos:end="63:65"><name pos:start="63:31" pos:end="63:37">defined</name><argument_list pos:start="63:38" pos:end="63:65">(<argument pos:start="63:39" pos:end="63:64"><expr pos:start="63:39" pos:end="63:64"><name pos:start="63:39" pos:end="63:64">MIPS_DEBUG_SIGN_EXTENSIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="65:5" pos:end="68:0"><expr pos:start="65:5" pos:end="65:62"><call pos:start="65:5" pos:end="65:62"><name pos:start="65:5" pos:end="65:34">cpu_mips_check_sign_extensions</name><argument_list pos:start="65:35" pos:end="65:62">(<argument pos:start="65:36" pos:end="65:38"><expr pos:start="65:36" pos:end="65:38"><name pos:start="65:36" pos:end="65:38">env</name></expr></argument>, <argument pos:start="65:41" pos:end="65:41"><expr pos:start="65:41" pos:end="65:41"><name pos:start="65:41" pos:end="65:41">f</name></expr></argument>, <argument pos:start="65:44" pos:end="65:54"><expr pos:start="65:44" pos:end="65:54"><name pos:start="65:44" pos:end="65:54">cpu_fprintf</name></expr></argument>, <argument pos:start="65:57" pos:end="65:61"><expr pos:start="65:57" pos:end="65:61"><name pos:start="65:57" pos:end="65:61">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
