<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21953.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">decode_frame_headers</name><parameter_list pos:start="1:32" pos:end="3:65">(<parameter pos:start="1:33" pos:end="1:56"><decl pos:start="1:33" pos:end="1:56"><type pos:start="1:33" pos:end="1:56"><name pos:start="1:33" pos:end="1:51">Indeo3DecodeContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">ctx</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:79"><decl pos:start="1:59" pos:end="1:79"><type pos:start="1:59" pos:end="1:79"><name pos:start="1:59" pos:end="1:72">AVCodecContext</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:79">avctx</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:50">buf</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:64">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="241:1">{<block_content pos:start="7:5" pos:end="239:13">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18">GetByteContext</name></type> <name pos:start="7:20" pos:end="7:21">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:21"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name>   <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:27">bs_hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:59"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type>        <name pos:start="11:21" pos:end="11:29">frame_num</name></decl>, <decl pos:start="11:32" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:32" pos:end="11:36">word2</name></decl>, <decl pos:start="11:39" pos:end="11:47"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:39" pos:end="11:47">check_sum</name></decl>, <decl pos:start="11:50" pos:end="11:58"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:50" pos:end="11:58">data_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:69"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type>        <name pos:start="13:21" pos:end="13:28">y_offset</name></decl>, <decl pos:start="13:31" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:31" pos:end="13:38">u_offset</name></decl>, <decl pos:start="13:41" pos:end="13:48"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:41" pos:end="13:48">v_offset</name></decl>, <decl pos:start="13:51" pos:end="13:59"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:51" pos:end="13:59"><name pos:start="13:51" pos:end="13:56">starts</name><index pos:start="13:57" pos:end="13:59">[<expr pos:start="13:58" pos:end="13:58"><literal type="number" pos:start="13:58" pos:end="13:58">3</literal></expr>]</index></name></decl>, <decl pos:start="13:62" pos:end="13:68"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:62" pos:end="13:68"><name pos:start="13:62" pos:end="13:65">ends</name><index pos:start="13:66" pos:end="13:68">[<expr pos:start="13:67" pos:end="13:67"><literal type="number" pos:start="13:67" pos:end="13:67">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint16_t</name></type>        <name pos:start="15:21" pos:end="15:26">height</name></decl>, <decl pos:start="15:29" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:29" pos:end="15:33">width</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type>             <name pos:start="17:21" pos:end="17:21">i</name></decl>, <decl pos:start="17:24" pos:end="17:24"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:24" pos:end="17:24">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><call pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:20">bytestream2_init</name><argument_list pos:start="21:21" pos:end="21:40">(<argument pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:24">gb</name></expr></argument>, <argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">buf</name></expr></argument>, <argument pos:start="21:32" pos:end="21:39"><expr pos:start="21:32" pos:end="21:39"><name pos:start="21:32" pos:end="21:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:39">/* parse and check the OS header */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:42"><expr pos:start="27:5" pos:end="27:41"><name pos:start="27:5" pos:end="27:13">frame_num</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:41"><name pos:start="27:17" pos:end="27:36">bytestream2_get_le32</name><argument_list pos:start="27:37" pos:end="27:41">(<argument pos:start="27:38" pos:end="27:40"><expr pos:start="27:38" pos:end="27:40"><operator pos:start="27:38" pos:end="27:38">&amp;</operator><name pos:start="27:39" pos:end="27:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:9">word2</name>     <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:41"><name pos:start="29:17" pos:end="29:36">bytestream2_get_le32</name><argument_list pos:start="29:37" pos:end="29:41">(<argument pos:start="29:38" pos:end="29:40"><expr pos:start="29:38" pos:end="29:40"><operator pos:start="29:38" pos:end="29:38">&amp;</operator><name pos:start="29:39" pos:end="29:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:13">check_sum</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:41"><name pos:start="31:17" pos:end="31:36">bytestream2_get_le32</name><argument_list pos:start="31:37" pos:end="31:41">(<argument pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><operator pos:start="31:38" pos:end="31:38">&amp;</operator><name pos:start="31:39" pos:end="31:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:13">data_size</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <call pos:start="33:17" pos:end="33:41"><name pos:start="33:17" pos:end="33:36">bytestream2_get_le32</name><argument_list pos:start="33:37" pos:end="33:41">(<argument pos:start="33:38" pos:end="33:40"><expr pos:start="33:38" pos:end="33:40"><operator pos:start="33:38" pos:end="33:38">&amp;</operator><name pos:start="33:39" pos:end="33:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:65">(<expr pos:start="37:9" pos:end="37:64"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:18">frame_num</name> <operator pos:start="37:20" pos:end="37:20">^</operator> <name pos:start="37:22" pos:end="37:26">word2</name> <operator pos:start="37:28" pos:end="37:28">^</operator> <name pos:start="37:30" pos:end="37:38">data_size</name> <operator pos:start="37:40" pos:end="37:40">^</operator> <name pos:start="37:42" pos:end="37:50">OS_HDR_ID</name><operator pos:start="37:51" pos:end="37:51">)</operator> <operator pos:start="37:53" pos:end="37:54">!=</operator> <name pos:start="37:56" pos:end="37:64">check_sum</name></expr>)</condition> <block pos:start="37:67" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:35">

        <expr_stmt pos:start="39:9" pos:end="39:70"><expr pos:start="39:9" pos:end="39:69"><call pos:start="39:9" pos:end="39:69"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:69">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20">avctx</name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:37" pos:end="39:68"><expr pos:start="39:37" pos:end="39:68"><literal type="string" pos:start="39:37" pos:end="39:68">"OS header checksum mismatch!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:35">return <expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:36">/* parse the bitstream header */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:23"><expr pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:10">bs_hdr</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <name pos:start="49:14" pos:end="49:22"><name pos:start="49:14" pos:end="49:15">gb</name><operator pos:start="49:16" pos:end="49:16">.</operator><name pos:start="49:17" pos:end="49:22">buffer</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:40">(<expr pos:start="53:9" pos:end="53:39"><call pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:28">bytestream2_get_le16</name><argument_list pos:start="53:29" pos:end="53:33">(<argument pos:start="53:30" pos:end="53:32"><expr pos:start="53:30" pos:end="53:32"><operator pos:start="53:30" pos:end="53:30">&amp;</operator><name pos:start="53:31" pos:end="53:32">gb</name></expr></argument>)</argument_list></call> <operator pos:start="53:35" pos:end="53:36">!=</operator> <literal type="number" pos:start="53:38" pos:end="53:39">32</literal></expr>)</condition> <block pos:start="53:42" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:35">

        <expr_stmt pos:start="55:9" pos:end="55:68"><expr pos:start="55:9" pos:end="55:67"><call pos:start="55:9" pos:end="55:67"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:67">(<argument pos:start="55:16" pos:end="55:20"><expr pos:start="55:16" pos:end="55:20"><name pos:start="55:16" pos:end="55:20">avctx</name></expr></argument>, <argument pos:start="55:23" pos:end="55:34"><expr pos:start="55:23" pos:end="55:34"><name pos:start="55:23" pos:end="55:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:37" pos:end="55:66"><expr pos:start="55:37" pos:end="55:66"><literal type="string" pos:start="55:37" pos:end="55:66">"Unsupported codec version!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:35">return <expr pos:start="57:16" pos:end="57:34"><name pos:start="57:16" pos:end="57:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:34"><expr pos:start="63:5" pos:end="63:33"><name pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:7">ctx</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:18">frame_num</name></name>   <operator pos:start="63:22" pos:end="63:22">=</operator>  <name pos:start="63:25" pos:end="63:33">frame_num</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:50"><expr pos:start="65:5" pos:end="65:49"><name pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:7">ctx</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:20">frame_flags</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator>  <call pos:start="65:25" pos:end="65:49"><name pos:start="65:25" pos:end="65:44">bytestream2_get_le16</name><argument_list pos:start="65:45" pos:end="65:49">(<argument pos:start="65:46" pos:end="65:48"><expr pos:start="65:46" pos:end="65:48"><operator pos:start="65:46" pos:end="65:46">&amp;</operator><name pos:start="65:47" pos:end="65:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:60"><expr pos:start="67:5" pos:end="67:59"><name pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:7">ctx</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:18">data_size</name></name>   <operator pos:start="67:22" pos:end="67:22">=</operator> <operator pos:start="67:24" pos:end="67:24">(</operator><call pos:start="67:25" pos:end="67:49"><name pos:start="67:25" pos:end="67:44">bytestream2_get_le32</name><argument_list pos:start="67:45" pos:end="67:49">(<argument pos:start="67:46" pos:end="67:48"><expr pos:start="67:46" pos:end="67:48"><operator pos:start="67:46" pos:end="67:46">&amp;</operator><name pos:start="67:47" pos:end="67:48">gb</name></expr></argument>)</argument_list></call> <operator pos:start="67:51" pos:end="67:51">+</operator> <literal type="number" pos:start="67:53" pos:end="67:53">7</literal><operator pos:start="67:54" pos:end="67:54">)</operator> <operator pos:start="67:56" pos:end="67:57">&gt;&gt;</operator> <literal type="number" pos:start="67:59" pos:end="67:59">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:50"><expr pos:start="69:5" pos:end="69:49"><name pos:start="69:5" pos:end="69:18"><name pos:start="69:5" pos:end="69:7">ctx</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:18">cb_offset</name></name>   <operator pos:start="69:22" pos:end="69:22">=</operator>  <call pos:start="69:25" pos:end="69:49"><name pos:start="69:25" pos:end="69:44">bytestream2_get_byte</name><argument_list pos:start="69:45" pos:end="69:49">(<argument pos:start="69:46" pos:end="69:48"><expr pos:start="69:46" pos:end="69:48"><operator pos:start="69:46" pos:end="69:46">&amp;</operator><name pos:start="69:47" pos:end="69:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="75:17"><if pos:start="73:5" pos:end="75:17">if <condition pos:start="73:8" pos:end="73:29">(<expr pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:11">ctx</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:22">data_size</name></name> <operator pos:start="73:24" pos:end="73:25">==</operator> <literal type="number" pos:start="73:27" pos:end="73:28">16</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:17"><block_content pos:start="75:9" pos:end="75:17">

        <return pos:start="75:9" pos:end="75:17">return <expr pos:start="75:16" pos:end="75:16"><literal type="number" pos:start="75:16" pos:end="75:16">4</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="79:34"><if pos:start="77:5" pos:end="79:34">if <condition pos:start="77:8" pos:end="77:34">(<expr pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:11">ctx</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:22">data_size</name></name> <operator pos:start="77:24" pos:end="77:24">&gt;</operator> <name pos:start="77:26" pos:end="77:33">buf_size</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:34"><block_content pos:start="79:9" pos:end="79:34">

        <expr_stmt pos:start="79:9" pos:end="79:34"><expr pos:start="79:9" pos:end="79:33"><name pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:11">ctx</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:22">data_size</name></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:33">buf_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:29"><expr pos:start="83:5" pos:end="83:28"><call pos:start="83:5" pos:end="83:28"><name pos:start="83:5" pos:end="83:20">bytestream2_skip</name><argument_list pos:start="83:21" pos:end="83:28">(<argument pos:start="83:22" pos:end="83:24"><expr pos:start="83:22" pos:end="83:24"><operator pos:start="83:22" pos:end="83:22">&amp;</operator><name pos:start="83:23" pos:end="83:24">gb</name></expr></argument>, <argument pos:start="83:27" pos:end="83:27"><expr pos:start="83:27" pos:end="83:27"><literal type="number" pos:start="83:27" pos:end="83:27">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="83:31" pos:end="83:64">// skip reserved byte and checksum</comment>



    <comment type="block" pos:start="87:5" pos:end="87:32">/* check frame dimensions */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:39"><expr pos:start="89:5" pos:end="89:38"><name pos:start="89:5" pos:end="89:10">height</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <call pos:start="89:14" pos:end="89:38"><name pos:start="89:14" pos:end="89:33">bytestream2_get_le16</name><argument_list pos:start="89:34" pos:end="89:38">(<argument pos:start="89:35" pos:end="89:37"><expr pos:start="89:35" pos:end="89:37"><operator pos:start="89:35" pos:end="89:35">&amp;</operator><name pos:start="89:36" pos:end="89:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:39"><expr pos:start="91:5" pos:end="91:38"><name pos:start="91:5" pos:end="91:9">width</name>  <operator pos:start="91:12" pos:end="91:12">=</operator> <call pos:start="91:14" pos:end="91:38"><name pos:start="91:14" pos:end="91:33">bytestream2_get_le16</name><argument_list pos:start="91:34" pos:end="91:38">(<argument pos:start="91:35" pos:end="91:37"><expr pos:start="91:35" pos:end="91:37"><operator pos:start="91:35" pos:end="91:35">&amp;</operator><name pos:start="91:36" pos:end="91:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="95:35"><if pos:start="93:5" pos:end="95:35">if <condition pos:start="93:8" pos:end="93:53">(<expr pos:start="93:9" pos:end="93:52"><call pos:start="93:9" pos:end="93:52"><name pos:start="93:9" pos:end="93:27">av_image_check_size</name><argument_list pos:start="93:28" pos:end="93:52">(<argument pos:start="93:29" pos:end="93:33"><expr pos:start="93:29" pos:end="93:33"><name pos:start="93:29" pos:end="93:33">width</name></expr></argument>, <argument pos:start="93:36" pos:end="93:41"><expr pos:start="93:36" pos:end="93:41"><name pos:start="93:36" pos:end="93:41">height</name></expr></argument>, <argument pos:start="93:44" pos:end="93:44"><expr pos:start="93:44" pos:end="93:44"><literal type="number" pos:start="93:44" pos:end="93:44">0</literal></expr></argument>, <argument pos:start="93:47" pos:end="93:51"><expr pos:start="93:47" pos:end="93:51"><name pos:start="93:47" pos:end="93:51">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:35"><block_content pos:start="95:9" pos:end="95:35">

        <return pos:start="95:9" pos:end="95:35">return <expr pos:start="95:16" pos:end="95:34"><name pos:start="95:16" pos:end="95:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="139:5"><if pos:start="99:5" pos:end="139:5">if <condition pos:start="99:8" pos:end="99:53">(<expr pos:start="99:9" pos:end="99:52"><name pos:start="99:9" pos:end="99:13">width</name> <operator pos:start="99:15" pos:end="99:16">!=</operator> <name pos:start="99:18" pos:end="99:27"><name pos:start="99:18" pos:end="99:20">ctx</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:27">width</name></name> <operator pos:start="99:29" pos:end="99:30">||</operator> <name pos:start="99:32" pos:end="99:37">height</name> <operator pos:start="99:39" pos:end="99:40">!=</operator> <name pos:start="99:42" pos:end="99:52"><name pos:start="99:42" pos:end="99:44">ctx</name><operator pos:start="99:45" pos:end="99:46">-&gt;</operator><name pos:start="99:47" pos:end="99:52">height</name></name></expr>)</condition> <block pos:start="99:55" pos:end="139:5">{<block_content pos:start="101:9" pos:end="137:53">

        <decl_stmt pos:start="101:9" pos:end="101:16"><decl pos:start="101:9" pos:end="101:15"><type pos:start="101:9" pos:end="101:11"><name pos:start="101:9" pos:end="101:11">int</name></type> <name pos:start="101:13" pos:end="101:15">res</name></decl>;</decl_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:54"><expr pos:start="105:9" pos:end="105:53"><call pos:start="105:9" pos:end="105:53"><name pos:start="105:9" pos:end="105:15">av_dlog</name><argument_list pos:start="105:16" pos:end="105:53">(<argument pos:start="105:17" pos:end="105:21"><expr pos:start="105:17" pos:end="105:21"><name pos:start="105:17" pos:end="105:21">avctx</name></expr></argument>, <argument pos:start="105:24" pos:end="105:52"><expr pos:start="105:24" pos:end="105:52"><literal type="string" pos:start="105:24" pos:end="105:52">"Frame dimensions changed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="109:9" pos:end="121:9"><if pos:start="109:9" pos:end="121:9">if <condition pos:start="109:12" pos:end="113:40">(<expr pos:start="109:13" pos:end="113:39"><name pos:start="109:13" pos:end="109:35"><name pos:start="109:13" pos:end="109:17">width</name>  <argument_list type="generic" pos:start="109:20" pos:end="109:35">&lt; <argument pos:start="109:22" pos:end="109:32"><expr pos:start="109:22" pos:end="109:32"><literal type="number" pos:start="109:22" pos:end="109:23">16</literal> <operator pos:start="109:25" pos:end="109:26">||</operator> <name pos:start="109:28" pos:end="109:32">width</name></expr></argument>  &gt;</argument_list></name> <literal type="number" pos:start="109:37" pos:end="109:39">640</literal> <operator pos:start="109:41" pos:end="109:42">||</operator>

            <name pos:start="111:13" pos:end="111:35"><name pos:start="111:13" pos:end="111:18">height</name> <argument_list type="generic" pos:start="111:20" pos:end="111:35">&lt; <argument pos:start="111:22" pos:end="111:33"><expr pos:start="111:22" pos:end="111:33"><literal type="number" pos:start="111:22" pos:end="111:23">16</literal> <operator pos:start="111:25" pos:end="111:26">||</operator> <name pos:start="111:28" pos:end="111:33">height</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="111:37" pos:end="111:39">480</literal> <operator pos:start="111:41" pos:end="111:42">||</operator>

            <name pos:start="113:13" pos:end="113:17">width</name>  <operator pos:start="113:20" pos:end="113:20">&amp;</operator>  <literal type="number" pos:start="113:23" pos:end="113:23">3</literal> <operator pos:start="113:25" pos:end="113:26">||</operator> <name pos:start="113:28" pos:end="113:33">height</name> <operator pos:start="113:35" pos:end="113:35">&amp;</operator>   <literal type="number" pos:start="113:39" pos:end="113:39">3</literal></expr>)</condition> <block pos:start="113:42" pos:end="121:9">{<block_content pos:start="115:13" pos:end="119:39">

            <expr_stmt pos:start="115:13" pos:end="117:76"><expr pos:start="115:13" pos:end="117:75"><call pos:start="115:13" pos:end="117:75"><name pos:start="115:13" pos:end="115:18">av_log</name><argument_list pos:start="115:19" pos:end="117:75">(<argument pos:start="115:20" pos:end="115:24"><expr pos:start="115:20" pos:end="115:24"><name pos:start="115:20" pos:end="115:24">avctx</name></expr></argument>, <argument pos:start="115:27" pos:end="115:38"><expr pos:start="115:27" pos:end="115:38"><name pos:start="115:27" pos:end="115:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="117:20" pos:end="117:59"><expr pos:start="117:20" pos:end="117:59"><literal type="string" pos:start="117:20" pos:end="117:59">"Invalid picture dimensions: %d x %d!\n"</literal></expr></argument>, <argument pos:start="117:62" pos:end="117:66"><expr pos:start="117:62" pos:end="117:66"><name pos:start="117:62" pos:end="117:66">width</name></expr></argument>, <argument pos:start="117:69" pos:end="117:74"><expr pos:start="117:69" pos:end="117:74"><name pos:start="117:69" pos:end="117:74">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="119:13" pos:end="119:39">return <expr pos:start="119:20" pos:end="119:38"><name pos:start="119:20" pos:end="119:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:28"><expr pos:start="125:9" pos:end="125:27"><name pos:start="125:9" pos:end="125:18"><name pos:start="125:9" pos:end="125:11">ctx</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:18">width</name></name>  <operator pos:start="125:21" pos:end="125:21">=</operator> <name pos:start="125:23" pos:end="125:27">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:29"><expr pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:19"><name pos:start="127:9" pos:end="127:11">ctx</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:19">height</name></name> <operator pos:start="127:21" pos:end="127:21">=</operator> <name pos:start="127:23" pos:end="127:28">height</name></expr>;</expr_stmt>



        <expr_stmt pos:start="131:9" pos:end="131:32"><expr pos:start="131:9" pos:end="131:31"><call pos:start="131:9" pos:end="131:31"><name pos:start="131:9" pos:end="131:26">free_frame_buffers</name><argument_list pos:start="131:27" pos:end="131:31">(<argument pos:start="131:28" pos:end="131:30"><expr pos:start="131:28" pos:end="131:30"><name pos:start="131:28" pos:end="131:30">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="135:24"><if pos:start="133:9" pos:end="135:24">if <condition pos:start="133:12" pos:end="133:59">(<expr pos:start="133:13" pos:end="133:58"><operator pos:start="133:13" pos:end="133:13">(</operator><name pos:start="133:14" pos:end="133:16">res</name> <operator pos:start="133:18" pos:end="133:18">=</operator> <call pos:start="133:20" pos:end="133:53"><name pos:start="133:20" pos:end="133:41">allocate_frame_buffers</name><argument_list pos:start="133:42" pos:end="133:53">(<argument pos:start="133:43" pos:end="133:45"><expr pos:start="133:43" pos:end="133:45"><name pos:start="133:43" pos:end="133:45">ctx</name></expr></argument>, <argument pos:start="133:48" pos:end="133:52"><expr pos:start="133:48" pos:end="133:52"><name pos:start="133:48" pos:end="133:52">avctx</name></expr></argument>)</argument_list></call><operator pos:start="133:54" pos:end="133:54">)</operator> <operator pos:start="133:56" pos:end="133:56">&lt;</operator> <literal type="number" pos:start="133:58" pos:end="133:58">0</literal></expr>)</condition><block type="pseudo" pos:start="135:14" pos:end="135:24"><block_content pos:start="135:14" pos:end="135:24">

             <return pos:start="135:14" pos:end="135:24">return <expr pos:start="135:21" pos:end="135:23"><name pos:start="135:21" pos:end="135:23">res</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:53"><expr pos:start="137:9" pos:end="137:52"><call pos:start="137:9" pos:end="137:52"><name pos:start="137:9" pos:end="137:30">avcodec_set_dimensions</name><argument_list pos:start="137:31" pos:end="137:52">(<argument pos:start="137:32" pos:end="137:36"><expr pos:start="137:32" pos:end="137:36"><name pos:start="137:32" pos:end="137:36">avctx</name></expr></argument>, <argument pos:start="137:39" pos:end="137:43"><expr pos:start="137:39" pos:end="137:43"><name pos:start="137:39" pos:end="137:43">width</name></expr></argument>, <argument pos:start="137:46" pos:end="137:51"><expr pos:start="137:46" pos:end="137:51"><name pos:start="137:46" pos:end="137:51">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:41"><expr pos:start="143:5" pos:end="143:40"><name pos:start="143:5" pos:end="143:12">y_offset</name> <operator pos:start="143:14" pos:end="143:14">=</operator> <call pos:start="143:16" pos:end="143:40"><name pos:start="143:16" pos:end="143:35">bytestream2_get_le32</name><argument_list pos:start="143:36" pos:end="143:40">(<argument pos:start="143:37" pos:end="143:39"><expr pos:start="143:37" pos:end="143:39"><operator pos:start="143:37" pos:end="143:37">&amp;</operator><name pos:start="143:38" pos:end="143:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:41"><expr pos:start="145:5" pos:end="145:40"><name pos:start="145:5" pos:end="145:12">v_offset</name> <operator pos:start="145:14" pos:end="145:14">=</operator> <call pos:start="145:16" pos:end="145:40"><name pos:start="145:16" pos:end="145:35">bytestream2_get_le32</name><argument_list pos:start="145:36" pos:end="145:40">(<argument pos:start="145:37" pos:end="145:39"><expr pos:start="145:37" pos:end="145:39"><operator pos:start="145:37" pos:end="145:37">&amp;</operator><name pos:start="145:38" pos:end="145:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:41"><expr pos:start="147:5" pos:end="147:40"><name pos:start="147:5" pos:end="147:12">u_offset</name> <operator pos:start="147:14" pos:end="147:14">=</operator> <call pos:start="147:16" pos:end="147:40"><name pos:start="147:16" pos:end="147:35">bytestream2_get_le32</name><argument_list pos:start="147:36" pos:end="147:40">(<argument pos:start="147:37" pos:end="147:39"><expr pos:start="147:37" pos:end="147:39"><operator pos:start="147:37" pos:end="147:37">&amp;</operator><name pos:start="147:38" pos:end="147:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:29"><expr pos:start="149:5" pos:end="149:28"><call pos:start="149:5" pos:end="149:28"><name pos:start="149:5" pos:end="149:20">bytestream2_skip</name><argument_list pos:start="149:21" pos:end="149:28">(<argument pos:start="149:22" pos:end="149:24"><expr pos:start="149:22" pos:end="149:24"><operator pos:start="149:22" pos:end="149:22">&amp;</operator><name pos:start="149:23" pos:end="149:24">gb</name></expr></argument>, <argument pos:start="149:27" pos:end="149:27"><expr pos:start="149:27" pos:end="149:27"><literal type="number" pos:start="149:27" pos:end="149:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="153:5" pos:end="153:72">/* unfortunately there is no common order of planes in the buffer */</comment>

    <comment type="block" pos:start="155:5" pos:end="155:72">/* so we use that sorting algo for determining planes data sizes  */</comment>

    <expr_stmt pos:start="157:5" pos:end="157:25"><expr pos:start="157:5" pos:end="157:24"><name pos:start="157:5" pos:end="157:13"><name pos:start="157:5" pos:end="157:10">starts</name><index pos:start="157:11" pos:end="157:13">[<expr pos:start="157:12" pos:end="157:12"><literal type="number" pos:start="157:12" pos:end="157:12">0</literal></expr>]</index></name> <operator pos:start="157:15" pos:end="157:15">=</operator> <name pos:start="157:17" pos:end="157:24">y_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:25"><expr pos:start="159:5" pos:end="159:24"><name pos:start="159:5" pos:end="159:13"><name pos:start="159:5" pos:end="159:10">starts</name><index pos:start="159:11" pos:end="159:13">[<expr pos:start="159:12" pos:end="159:12"><literal type="number" pos:start="159:12" pos:end="159:12">1</literal></expr>]</index></name> <operator pos:start="159:15" pos:end="159:15">=</operator> <name pos:start="159:17" pos:end="159:24">v_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:25"><expr pos:start="161:5" pos:end="161:24"><name pos:start="161:5" pos:end="161:13"><name pos:start="161:5" pos:end="161:10">starts</name><index pos:start="161:11" pos:end="161:13">[<expr pos:start="161:12" pos:end="161:12"><literal type="number" pos:start="161:12" pos:end="161:12">2</literal></expr>]</index></name> <operator pos:start="161:15" pos:end="161:15">=</operator> <name pos:start="161:17" pos:end="161:24">u_offset</name></expr>;</expr_stmt>



    <for pos:start="165:5" pos:end="175:5">for <control pos:start="165:9" pos:end="165:27">(<init pos:start="165:10" pos:end="165:15"><expr pos:start="165:10" pos:end="165:14"><name pos:start="165:10" pos:end="165:10">j</name> <operator pos:start="165:12" pos:end="165:12">=</operator> <literal type="number" pos:start="165:14" pos:end="165:14">0</literal></expr>;</init> <condition pos:start="165:17" pos:end="165:22"><expr pos:start="165:17" pos:end="165:21"><name pos:start="165:17" pos:end="165:17">j</name> <operator pos:start="165:19" pos:end="165:19">&lt;</operator> <literal type="number" pos:start="165:21" pos:end="165:21">3</literal></expr>;</condition> <incr pos:start="165:24" pos:end="165:26"><expr pos:start="165:24" pos:end="165:26"><name pos:start="165:24" pos:end="165:24">j</name><operator pos:start="165:25" pos:end="165:26">++</operator></expr></incr>)</control> <block pos:start="165:29" pos:end="175:5">{<block_content pos:start="167:9" pos:end="173:36">

        <expr_stmt pos:start="167:9" pos:end="167:33"><expr pos:start="167:9" pos:end="167:32"><name pos:start="167:9" pos:end="167:15"><name pos:start="167:9" pos:end="167:12">ends</name><index pos:start="167:13" pos:end="167:15">[<expr pos:start="167:14" pos:end="167:14"><name pos:start="167:14" pos:end="167:14">j</name></expr>]</index></name> <operator pos:start="167:17" pos:end="167:17">=</operator> <name pos:start="167:19" pos:end="167:32"><name pos:start="167:19" pos:end="167:21">ctx</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:32">data_size</name></name></expr>;</expr_stmt>

        <for pos:start="169:9" pos:end="173:36">for <control pos:start="169:13" pos:end="169:32">(<init pos:start="169:14" pos:end="169:19"><expr pos:start="169:14" pos:end="169:18"><name pos:start="169:14" pos:end="169:14">i</name> <operator pos:start="169:16" pos:end="169:16">=</operator> <literal type="number" pos:start="169:18" pos:end="169:18">2</literal></expr>;</init> <condition pos:start="169:21" pos:end="169:27"><expr pos:start="169:21" pos:end="169:26"><name pos:start="169:21" pos:end="169:21">i</name> <operator pos:start="169:23" pos:end="169:24">&gt;=</operator> <literal type="number" pos:start="169:26" pos:end="169:26">0</literal></expr>;</condition> <incr pos:start="169:29" pos:end="169:31"><expr pos:start="169:29" pos:end="169:31"><name pos:start="169:29" pos:end="169:29">i</name><operator pos:start="169:30" pos:end="169:31">--</operator></expr></incr>)</control><block type="pseudo" pos:start="171:13" pos:end="173:36"><block_content pos:start="171:13" pos:end="173:36">

            <if_stmt pos:start="171:13" pos:end="173:36"><if pos:start="171:13" pos:end="173:36">if <condition pos:start="171:16" pos:end="171:61">(<expr pos:start="171:17" pos:end="171:60"><name pos:start="171:17" pos:end="171:25"><name pos:start="171:17" pos:end="171:22">starts</name><index pos:start="171:23" pos:end="171:25">[<expr pos:start="171:24" pos:end="171:24"><name pos:start="171:24" pos:end="171:24">i</name></expr>]</index></name> <operator pos:start="171:27" pos:end="171:27">&lt;</operator> <name pos:start="171:29" pos:end="171:35"><name pos:start="171:29" pos:end="171:32">ends</name><index pos:start="171:33" pos:end="171:35">[<expr pos:start="171:34" pos:end="171:34"><name pos:start="171:34" pos:end="171:34">j</name></expr>]</index></name> <operator pos:start="171:37" pos:end="171:38">&amp;&amp;</operator> <name pos:start="171:40" pos:end="171:48"><name pos:start="171:40" pos:end="171:45">starts</name><index pos:start="171:46" pos:end="171:48">[<expr pos:start="171:47" pos:end="171:47"><name pos:start="171:47" pos:end="171:47">i</name></expr>]</index></name> <operator pos:start="171:50" pos:end="171:50">&gt;</operator> <name pos:start="171:52" pos:end="171:60"><name pos:start="171:52" pos:end="171:57">starts</name><index pos:start="171:58" pos:end="171:60">[<expr pos:start="171:59" pos:end="171:59"><name pos:start="171:59" pos:end="171:59">j</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:36"><block_content pos:start="173:17" pos:end="173:36">

                <expr_stmt pos:start="173:17" pos:end="173:36"><expr pos:start="173:17" pos:end="173:35"><name pos:start="173:17" pos:end="173:23"><name pos:start="173:17" pos:end="173:20">ends</name><index pos:start="173:21" pos:end="173:23">[<expr pos:start="173:22" pos:end="173:22"><name pos:start="173:22" pos:end="173:22">j</name></expr>]</index></name> <operator pos:start="173:25" pos:end="173:25">=</operator> <name pos:start="173:27" pos:end="173:35"><name pos:start="173:27" pos:end="173:32">starts</name><index pos:start="173:33" pos:end="173:35">[<expr pos:start="173:34" pos:end="173:34"><name pos:start="173:34" pos:end="173:34">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="179:5" pos:end="179:43"><expr pos:start="179:5" pos:end="179:42"><name pos:start="179:5" pos:end="179:20"><name pos:start="179:5" pos:end="179:7">ctx</name><operator pos:start="179:8" pos:end="179:9">-&gt;</operator><name pos:start="179:10" pos:end="179:20">y_data_size</name></name> <operator pos:start="179:22" pos:end="179:22">=</operator> <name pos:start="179:24" pos:end="179:30"><name pos:start="179:24" pos:end="179:27">ends</name><index pos:start="179:28" pos:end="179:30">[<expr pos:start="179:29" pos:end="179:29"><literal type="number" pos:start="179:29" pos:end="179:29">0</literal></expr>]</index></name> <operator pos:start="179:32" pos:end="179:32">-</operator> <name pos:start="179:34" pos:end="179:42"><name pos:start="179:34" pos:end="179:39">starts</name><index pos:start="179:40" pos:end="179:42">[<expr pos:start="179:41" pos:end="179:41"><literal type="number" pos:start="179:41" pos:end="179:41">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:43"><expr pos:start="181:5" pos:end="181:42"><name pos:start="181:5" pos:end="181:20"><name pos:start="181:5" pos:end="181:7">ctx</name><operator pos:start="181:8" pos:end="181:9">-&gt;</operator><name pos:start="181:10" pos:end="181:20">v_data_size</name></name> <operator pos:start="181:22" pos:end="181:22">=</operator> <name pos:start="181:24" pos:end="181:30"><name pos:start="181:24" pos:end="181:27">ends</name><index pos:start="181:28" pos:end="181:30">[<expr pos:start="181:29" pos:end="181:29"><literal type="number" pos:start="181:29" pos:end="181:29">1</literal></expr>]</index></name> <operator pos:start="181:32" pos:end="181:32">-</operator> <name pos:start="181:34" pos:end="181:42"><name pos:start="181:34" pos:end="181:39">starts</name><index pos:start="181:40" pos:end="181:42">[<expr pos:start="181:41" pos:end="181:41"><literal type="number" pos:start="181:41" pos:end="181:41">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:43"><expr pos:start="183:5" pos:end="183:42"><name pos:start="183:5" pos:end="183:20"><name pos:start="183:5" pos:end="183:7">ctx</name><operator pos:start="183:8" pos:end="183:9">-&gt;</operator><name pos:start="183:10" pos:end="183:20">u_data_size</name></name> <operator pos:start="183:22" pos:end="183:22">=</operator> <name pos:start="183:24" pos:end="183:30"><name pos:start="183:24" pos:end="183:27">ends</name><index pos:start="183:28" pos:end="183:30">[<expr pos:start="183:29" pos:end="183:29"><literal type="number" pos:start="183:29" pos:end="183:29">2</literal></expr>]</index></name> <operator pos:start="183:32" pos:end="183:32">-</operator> <name pos:start="183:34" pos:end="183:42"><name pos:start="183:34" pos:end="183:39">starts</name><index pos:start="183:40" pos:end="183:42">[<expr pos:start="183:41" pos:end="183:41"><literal type="number" pos:start="183:41" pos:end="183:41">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="195:5"><if pos:start="185:5" pos:end="195:5">if <condition pos:start="185:8" pos:end="189:74">(<expr pos:start="185:9" pos:end="189:73"><call pos:start="185:9" pos:end="185:44"><name pos:start="185:9" pos:end="185:14">FFMAX3</name><argument_list pos:start="185:15" pos:end="185:44">(<argument pos:start="185:16" pos:end="185:23"><expr pos:start="185:16" pos:end="185:23"><name pos:start="185:16" pos:end="185:23">y_offset</name></expr></argument>, <argument pos:start="185:26" pos:end="185:33"><expr pos:start="185:26" pos:end="185:33"><name pos:start="185:26" pos:end="185:33">v_offset</name></expr></argument>, <argument pos:start="185:36" pos:end="185:43"><expr pos:start="185:36" pos:end="185:43"><name pos:start="185:36" pos:end="185:43">u_offset</name></expr></argument>)</argument_list></call> <operator pos:start="185:46" pos:end="185:47">&gt;=</operator> <name pos:start="185:49" pos:end="185:62"><name pos:start="185:49" pos:end="185:51">ctx</name><operator pos:start="185:52" pos:end="185:53">-&gt;</operator><name pos:start="185:54" pos:end="185:62">data_size</name></name> <operator pos:start="185:64" pos:end="185:64">-</operator> <literal type="number" pos:start="185:66" pos:end="185:67">16</literal> <operator pos:start="185:69" pos:end="185:70">||</operator>

        <call pos:start="187:9" pos:end="187:44"><name pos:start="187:9" pos:end="187:14">FFMIN3</name><argument_list pos:start="187:15" pos:end="187:44">(<argument pos:start="187:16" pos:end="187:23"><expr pos:start="187:16" pos:end="187:23"><name pos:start="187:16" pos:end="187:23">y_offset</name></expr></argument>, <argument pos:start="187:26" pos:end="187:33"><expr pos:start="187:26" pos:end="187:33"><name pos:start="187:26" pos:end="187:33">v_offset</name></expr></argument>, <argument pos:start="187:36" pos:end="187:43"><expr pos:start="187:36" pos:end="187:43"><name pos:start="187:36" pos:end="187:43">u_offset</name></expr></argument>)</argument_list></call> <operator pos:start="187:46" pos:end="187:46">&lt;</operator> <name pos:start="187:48" pos:end="187:56"><name pos:start="187:48" pos:end="187:49">gb</name><operator pos:start="187:50" pos:end="187:50">.</operator><name pos:start="187:51" pos:end="187:56">buffer</name></name> <operator pos:start="187:58" pos:end="187:58">-</operator> <name pos:start="187:60" pos:end="187:65">bs_hdr</name> <operator pos:start="187:67" pos:end="187:67">+</operator> <literal type="number" pos:start="187:69" pos:end="187:70">16</literal> <operator pos:start="187:72" pos:end="187:73">||</operator>

        <call pos:start="189:9" pos:end="189:68"><name pos:start="189:9" pos:end="189:14">FFMIN3</name><argument_list pos:start="189:15" pos:end="189:68">(<argument pos:start="189:16" pos:end="189:31"><expr pos:start="189:16" pos:end="189:31"><name pos:start="189:16" pos:end="189:31"><name pos:start="189:16" pos:end="189:18">ctx</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:31">y_data_size</name></name></expr></argument>, <argument pos:start="189:34" pos:end="189:49"><expr pos:start="189:34" pos:end="189:49"><name pos:start="189:34" pos:end="189:49"><name pos:start="189:34" pos:end="189:36">ctx</name><operator pos:start="189:37" pos:end="189:38">-&gt;</operator><name pos:start="189:39" pos:end="189:49">v_data_size</name></name></expr></argument>, <argument pos:start="189:52" pos:end="189:67"><expr pos:start="189:52" pos:end="189:67"><name pos:start="189:52" pos:end="189:67"><name pos:start="189:52" pos:end="189:54">ctx</name><operator pos:start="189:55" pos:end="189:56">-&gt;</operator><name pos:start="189:57" pos:end="189:67">u_data_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="189:70" pos:end="189:71">&lt;=</operator> <literal type="number" pos:start="189:73" pos:end="189:73">0</literal></expr>)</condition> <block pos:start="189:76" pos:end="195:5">{<block_content pos:start="191:9" pos:end="193:35">

        <expr_stmt pos:start="191:9" pos:end="191:77"><expr pos:start="191:9" pos:end="191:76"><call pos:start="191:9" pos:end="191:76"><name pos:start="191:9" pos:end="191:14">av_log</name><argument_list pos:start="191:15" pos:end="191:76">(<argument pos:start="191:16" pos:end="191:20"><expr pos:start="191:16" pos:end="191:20"><name pos:start="191:16" pos:end="191:20">avctx</name></expr></argument>, <argument pos:start="191:23" pos:end="191:34"><expr pos:start="191:23" pos:end="191:34"><name pos:start="191:23" pos:end="191:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="191:37" pos:end="191:75"><expr pos:start="191:37" pos:end="191:75"><literal type="string" pos:start="191:37" pos:end="191:75">"One of the y/u/v offsets is invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="193:9" pos:end="193:35">return <expr pos:start="193:16" pos:end="193:34"><name pos:start="193:16" pos:end="193:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="199:5" pos:end="199:40"><expr pos:start="199:5" pos:end="199:39"><name pos:start="199:5" pos:end="199:19"><name pos:start="199:5" pos:end="199:7">ctx</name><operator pos:start="199:8" pos:end="199:9">-&gt;</operator><name pos:start="199:10" pos:end="199:19">y_data_ptr</name></name> <operator pos:start="199:21" pos:end="199:21">=</operator> <name pos:start="199:23" pos:end="199:28">bs_hdr</name> <operator pos:start="199:30" pos:end="199:30">+</operator> <name pos:start="199:32" pos:end="199:39">y_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:40"><expr pos:start="201:5" pos:end="201:39"><name pos:start="201:5" pos:end="201:19"><name pos:start="201:5" pos:end="201:7">ctx</name><operator pos:start="201:8" pos:end="201:9">-&gt;</operator><name pos:start="201:10" pos:end="201:19">v_data_ptr</name></name> <operator pos:start="201:21" pos:end="201:21">=</operator> <name pos:start="201:23" pos:end="201:28">bs_hdr</name> <operator pos:start="201:30" pos:end="201:30">+</operator> <name pos:start="201:32" pos:end="201:39">v_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:40"><expr pos:start="203:5" pos:end="203:39"><name pos:start="203:5" pos:end="203:19"><name pos:start="203:5" pos:end="203:7">ctx</name><operator pos:start="203:8" pos:end="203:9">-&gt;</operator><name pos:start="203:10" pos:end="203:19">u_data_ptr</name></name> <operator pos:start="203:21" pos:end="203:21">=</operator> <name pos:start="203:23" pos:end="203:28">bs_hdr</name> <operator pos:start="203:30" pos:end="203:30">+</operator> <name pos:start="203:32" pos:end="203:39">u_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:32"><expr pos:start="205:5" pos:end="205:31"><name pos:start="205:5" pos:end="205:18"><name pos:start="205:5" pos:end="205:7">ctx</name><operator pos:start="205:8" pos:end="205:9">-&gt;</operator><name pos:start="205:10" pos:end="205:18">alt_quant</name></name>  <operator pos:start="205:21" pos:end="205:21">=</operator> <name pos:start="205:23" pos:end="205:31"><name pos:start="205:23" pos:end="205:24">gb</name><operator pos:start="205:25" pos:end="205:25">.</operator><name pos:start="205:26" pos:end="205:31">buffer</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="209:5" pos:end="215:5"><if pos:start="209:5" pos:end="215:5">if <condition pos:start="209:8" pos:end="209:29">(<expr pos:start="209:9" pos:end="209:28"><name pos:start="209:9" pos:end="209:22"><name pos:start="209:9" pos:end="209:11">ctx</name><operator pos:start="209:12" pos:end="209:13">-&gt;</operator><name pos:start="209:14" pos:end="209:22">data_size</name></name> <operator pos:start="209:24" pos:end="209:25">==</operator> <literal type="number" pos:start="209:27" pos:end="209:28">16</literal></expr>)</condition> <block pos:start="209:31" pos:end="215:5">{<block_content pos:start="211:9" pos:end="213:18">

        <expr_stmt pos:start="211:9" pos:end="211:65"><expr pos:start="211:9" pos:end="211:64"><call pos:start="211:9" pos:end="211:64"><name pos:start="211:9" pos:end="211:14">av_log</name><argument_list pos:start="211:15" pos:end="211:64">(<argument pos:start="211:16" pos:end="211:20"><expr pos:start="211:16" pos:end="211:20"><name pos:start="211:16" pos:end="211:20">avctx</name></expr></argument>, <argument pos:start="211:23" pos:end="211:34"><expr pos:start="211:23" pos:end="211:34"><name pos:start="211:23" pos:end="211:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="211:37" pos:end="211:63"><expr pos:start="211:37" pos:end="211:63"><literal type="string" pos:start="211:37" pos:end="211:63">"Sync frame encountered!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="213:9" pos:end="213:18">return <expr pos:start="213:16" pos:end="213:17"><literal type="number" pos:start="213:16" pos:end="213:17">16</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="219:5" pos:end="225:5"><if pos:start="219:5" pos:end="225:5">if <condition pos:start="219:8" pos:end="219:39">(<expr pos:start="219:9" pos:end="219:38"><name pos:start="219:9" pos:end="219:24"><name pos:start="219:9" pos:end="219:11">ctx</name><operator pos:start="219:12" pos:end="219:13">-&gt;</operator><name pos:start="219:14" pos:end="219:24">frame_flags</name></name> <operator pos:start="219:26" pos:end="219:26">&amp;</operator> <name pos:start="219:28" pos:end="219:38">BS_8BIT_PEL</name></expr>)</condition> <block pos:start="219:41" pos:end="225:5">{<block_content pos:start="221:9" pos:end="223:36">

        <expr_stmt pos:start="221:9" pos:end="221:59"><expr pos:start="221:9" pos:end="221:58"><call pos:start="221:9" pos:end="221:58"><name pos:start="221:9" pos:end="221:29">avpriv_request_sample</name><argument_list pos:start="221:30" pos:end="221:58">(<argument pos:start="221:31" pos:end="221:35"><expr pos:start="221:31" pos:end="221:35"><name pos:start="221:31" pos:end="221:35">avctx</name></expr></argument>, <argument pos:start="221:38" pos:end="221:57"><expr pos:start="221:38" pos:end="221:57"><literal type="string" pos:start="221:38" pos:end="221:57">"8-bit pixel format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="223:9" pos:end="223:36">return <expr pos:start="223:16" pos:end="223:35"><name pos:start="223:16" pos:end="223:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="229:5" pos:end="235:5"><if pos:start="229:5" pos:end="235:5">if <condition pos:start="229:8" pos:end="229:75">(<expr pos:start="229:9" pos:end="229:74"><name pos:start="229:9" pos:end="229:24"><name pos:start="229:9" pos:end="229:11">ctx</name><operator pos:start="229:12" pos:end="229:13">-&gt;</operator><name pos:start="229:14" pos:end="229:24">frame_flags</name></name> <operator pos:start="229:26" pos:end="229:26">&amp;</operator> <name pos:start="229:28" pos:end="229:39">BS_MV_X_HALF</name> <operator pos:start="229:41" pos:end="229:42">||</operator> <name pos:start="229:44" pos:end="229:59"><name pos:start="229:44" pos:end="229:46">ctx</name><operator pos:start="229:47" pos:end="229:48">-&gt;</operator><name pos:start="229:49" pos:end="229:59">frame_flags</name></name> <operator pos:start="229:61" pos:end="229:61">&amp;</operator> <name pos:start="229:63" pos:end="229:74">BS_MV_Y_HALF</name></expr>)</condition> <block pos:start="229:77" pos:end="235:5">{<block_content pos:start="231:9" pos:end="233:36">

        <expr_stmt pos:start="231:9" pos:end="231:63"><expr pos:start="231:9" pos:end="231:62"><call pos:start="231:9" pos:end="231:62"><name pos:start="231:9" pos:end="231:29">avpriv_request_sample</name><argument_list pos:start="231:30" pos:end="231:62">(<argument pos:start="231:31" pos:end="231:35"><expr pos:start="231:31" pos:end="231:35"><name pos:start="231:31" pos:end="231:35">avctx</name></expr></argument>, <argument pos:start="231:38" pos:end="231:61"><expr pos:start="231:38" pos:end="231:61"><literal type="string" pos:start="231:38" pos:end="231:61">"Halfpel motion vectors"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="233:9" pos:end="233:36">return <expr pos:start="233:16" pos:end="233:35"><name pos:start="233:16" pos:end="233:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="239:5" pos:end="239:13">return <expr pos:start="239:12" pos:end="239:12"><literal type="number" pos:start="239:12" pos:end="239:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
