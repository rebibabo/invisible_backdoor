<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19717.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">print_report</name><parameter_list pos:start="1:25" pos:end="1:65">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:28">int</name></type> <name pos:start="1:30" pos:end="1:43">is_last_report</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:64"><decl pos:start="1:46" pos:end="1:64"><type pos:start="1:46" pos:end="1:64"><name pos:start="1:46" pos:end="1:52">int64_t</name></type> <name pos:start="1:54" pos:end="1:64">timer_start</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="253:1">{<block_content pos:start="5:5" pos:end="251:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:18"><name pos:start="5:10" pos:end="5:12">buf</name><index pos:start="5:13" pos:end="5:18">[<expr pos:start="5:14" pos:end="5:17"><literal type="number" pos:start="5:14" pos:end="5:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">OutputStream</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVFormatContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:23">oc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:22">total_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">AVCodecContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:23">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">frame_number</name></decl>, <decl pos:start="15:23" pos:end="15:25"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:23" pos:end="15:25">vid</name></decl>, <decl pos:start="15:28" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:28" pos:end="15:28">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">double</name></type> <name pos:start="17:12" pos:end="17:18">bitrate</name></decl>, <decl pos:start="17:21" pos:end="17:23"><type ref="prev" pos:start="17:5" pos:end="17:10"/><name pos:start="17:21" pos:end="17:23">ti1</name></decl>, <decl pos:start="17:26" pos:end="17:28"><type ref="prev" pos:start="17:5" pos:end="17:10"/><name pos:start="17:26" pos:end="17:28">pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:34"><decl pos:start="19:5" pos:end="19:33"><type pos:start="19:5" pos:end="19:18"><specifier pos:start="19:5" pos:end="19:10">static</specifier> <name pos:start="19:12" pos:end="19:18">int64_t</name></type> <name pos:start="19:20" pos:end="19:28">last_time</name> <init pos:start="19:30" pos:end="19:33">= <expr pos:start="19:32" pos:end="19:33"><operator pos:start="19:32" pos:end="19:32">-</operator><literal type="number" pos:start="19:33" pos:end="19:33">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:32"><decl pos:start="21:5" pos:end="21:31"><type pos:start="21:5" pos:end="21:14"><specifier pos:start="21:5" pos:end="21:10">static</specifier> <name pos:start="21:12" pos:end="21:14">int</name></type> <name pos:start="21:16" pos:end="21:31"><name pos:start="21:16" pos:end="21:27">qp_histogram</name><index pos:start="21:28" pos:end="21:31">[<expr pos:start="21:29" pos:end="21:30"><literal type="number" pos:start="21:29" pos:end="21:30">52</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="27:15"><if pos:start="25:5" pos:end="27:15">if <condition pos:start="25:8" pos:end="25:40">(<expr pos:start="25:9" pos:end="25:39"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:20">print_stats</name> <operator pos:start="25:22" pos:end="25:23">&amp;&amp;</operator> <operator pos:start="25:25" pos:end="25:25">!</operator><name pos:start="25:26" pos:end="25:39">is_last_report</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:15"><block_content pos:start="27:9" pos:end="27:15">

        <return pos:start="27:9" pos:end="27:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="53:5"><if pos:start="31:5" pos:end="53:5">if <condition pos:start="31:8" pos:end="31:24">(<expr pos:start="31:9" pos:end="31:23"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:23">is_last_report</name></expr>)</condition> <block pos:start="31:26" pos:end="53:5">{<block_content pos:start="33:9" pos:end="51:29">

        <decl_stmt pos:start="33:9" pos:end="33:25"><decl pos:start="33:9" pos:end="33:24"><type pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:15">int64_t</name></type> <name pos:start="33:17" pos:end="33:24">cur_time</name></decl>;</decl_stmt>

        <comment type="block" pos:start="35:9" pos:end="35:50">/* display the report every 0.5 seconds */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:16">cur_time</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:31"><name pos:start="37:20" pos:end="37:29">av_gettime</name><argument_list pos:start="37:30" pos:end="37:31">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:28">(<expr pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:21">last_time</name> <operator pos:start="39:23" pos:end="39:24">==</operator> <operator pos:start="39:26" pos:end="39:26">-</operator><literal type="number" pos:start="39:27" pos:end="39:27">1</literal></expr>)</condition> <block pos:start="39:30" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:19">

            <expr_stmt pos:start="41:13" pos:end="41:33"><expr pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:21">last_time</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:32">cur_time</name></expr>;</expr_stmt>

            <return pos:start="43:13" pos:end="43:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="49:19"><if pos:start="47:9" pos:end="49:19">if <condition pos:start="47:12" pos:end="47:44">(<expr pos:start="47:13" pos:end="47:43"><operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:21">cur_time</name> <operator pos:start="47:23" pos:end="47:23">-</operator> <name pos:start="47:25" pos:end="47:33">last_time</name><operator pos:start="47:34" pos:end="47:34">)</operator> <operator pos:start="47:36" pos:end="47:36">&lt;</operator> <literal type="number" pos:start="47:38" pos:end="47:43">500000</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:19"><block_content pos:start="49:13" pos:end="49:19">

            <return pos:start="49:13" pos:end="49:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:17">last_time</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:28">cur_time</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>





    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:6">oc</name> <operator pos:start="59:8" pos:end="59:8">=</operator> <name pos:start="59:10" pos:end="59:24"><name pos:start="59:10" pos:end="59:21">output_files</name><index pos:start="59:22" pos:end="59:24">[<expr pos:start="59:23" pos:end="59:23"><literal type="number" pos:start="59:23" pos:end="59:23">0</literal></expr>]</index></name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:29">ctx</name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:35"><expr pos:start="63:5" pos:end="63:34"><name pos:start="63:5" pos:end="63:14">total_size</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:34"><name pos:start="63:18" pos:end="63:26">avio_size</name><argument_list pos:start="63:27" pos:end="63:34">(<argument pos:start="63:28" pos:end="63:33"><expr pos:start="63:28" pos:end="63:33"><name pos:start="63:28" pos:end="63:33"><name pos:start="63:28" pos:end="63:29">oc</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="67:39"><if pos:start="65:5" pos:end="67:39">if <condition pos:start="65:8" pos:end="65:24">(<expr pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:18">total_size</name> <operator pos:start="65:20" pos:end="65:21">&lt;=</operator> <literal type="number" pos:start="65:23" pos:end="65:23">0</literal></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:39"><block_content pos:start="67:9" pos:end="67:39"> <comment type="line" pos:start="65:26" pos:end="65:94">// FIXME improve avio_size() so it works with non seekable output too</comment>

        <expr_stmt pos:start="67:9" pos:end="67:39"><expr pos:start="67:9" pos:end="67:38"><name pos:start="67:9" pos:end="67:18">total_size</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <call pos:start="67:22" pos:end="67:38"><name pos:start="67:22" pos:end="67:30">avio_tell</name><argument_list pos:start="67:31" pos:end="67:38">(<argument pos:start="67:32" pos:end="67:37"><expr pos:start="67:32" pos:end="67:37"><name pos:start="67:32" pos:end="67:37"><name pos:start="67:32" pos:end="67:33">oc</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:37">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="81:5"><if pos:start="69:5" pos:end="81:5">if <condition pos:start="69:8" pos:end="69:23">(<expr pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:18">total_size</name> <operator pos:start="69:20" pos:end="69:20">&lt;</operator> <literal type="number" pos:start="69:22" pos:end="69:22">0</literal></expr>)</condition> <block pos:start="69:25" pos:end="81:5">{<block_content pos:start="71:9" pos:end="79:23">

        <decl_stmt pos:start="71:9" pos:end="71:25"><decl pos:start="71:9" pos:end="71:24"><type pos:start="71:9" pos:end="71:12"><name pos:start="71:9" pos:end="71:12">char</name></type> <name pos:start="71:14" pos:end="71:24"><name pos:start="71:14" pos:end="71:19">errbuf</name><index pos:start="71:20" pos:end="71:24">[<expr pos:start="71:21" pos:end="71:23"><literal type="number" pos:start="71:21" pos:end="71:23">128</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:56"><expr pos:start="73:9" pos:end="73:55"><call pos:start="73:9" pos:end="73:55"><name pos:start="73:9" pos:end="73:19">av_strerror</name><argument_list pos:start="73:20" pos:end="73:55">(<argument pos:start="73:21" pos:end="73:30"><expr pos:start="73:21" pos:end="73:30"><name pos:start="73:21" pos:end="73:30">total_size</name></expr></argument>, <argument pos:start="73:33" pos:end="73:38"><expr pos:start="73:33" pos:end="73:38"><name pos:start="73:33" pos:end="73:38">errbuf</name></expr></argument>, <argument pos:start="73:41" pos:end="73:54"><expr pos:start="73:41" pos:end="73:54"><sizeof pos:start="73:41" pos:end="73:54">sizeof<argument_list pos:start="73:47" pos:end="73:54">(<argument pos:start="73:48" pos:end="73:53"><expr pos:start="73:48" pos:end="73:53"><name pos:start="73:48" pos:end="73:53">errbuf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="77:51"><expr pos:start="75:9" pos:end="77:50"><call pos:start="75:9" pos:end="77:50"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="77:50">(<argument pos:start="75:16" pos:end="75:19"><expr pos:start="75:16" pos:end="75:19"><name pos:start="75:16" pos:end="75:19">NULL</name></expr></argument>, <argument pos:start="75:22" pos:end="75:35"><expr pos:start="75:22" pos:end="75:35"><name pos:start="75:22" pos:end="75:35">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="75:38" pos:end="77:41"><expr pos:start="75:38" pos:end="77:41"><literal type="string" pos:start="75:38" pos:end="75:62">"Bitrate not available, "</literal>

               <literal type="string" pos:start="77:16" pos:end="77:41">"avio_tell() failed: %s\n"</literal></expr></argument>, <argument pos:start="77:44" pos:end="77:49"><expr pos:start="77:44" pos:end="77:49"><name pos:start="77:44" pos:end="77:49">errbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:23"><expr pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:18">total_size</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:18"><expr pos:start="85:5" pos:end="85:17"><name pos:start="85:5" pos:end="85:10"><name pos:start="85:5" pos:end="85:7">buf</name><index pos:start="85:8" pos:end="85:10">[<expr pos:start="85:9" pos:end="85:9"><literal type="number" pos:start="85:9" pos:end="85:9">0</literal></expr>]</index></name> <operator pos:start="85:12" pos:end="85:12">=</operator> <literal type="char" pos:start="85:14" pos:end="85:17">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:15"><expr pos:start="87:5" pos:end="87:14"><name pos:start="87:5" pos:end="87:7">ti1</name> <operator pos:start="87:9" pos:end="87:9">=</operator> <literal type="number" pos:start="87:11" pos:end="87:14">1e10</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:12"><expr pos:start="89:5" pos:end="89:11"><name pos:start="89:5" pos:end="89:7">vid</name> <operator pos:start="89:9" pos:end="89:9">=</operator> <literal type="number" pos:start="89:11" pos:end="89:11">0</literal></expr>;</expr_stmt>

    <for pos:start="91:5" pos:end="197:5">for <control pos:start="91:9" pos:end="91:43">(<init pos:start="91:10" pos:end="91:15"><expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>;</init> <condition pos:start="91:17" pos:end="91:38"><expr pos:start="91:17" pos:end="91:37"><name pos:start="91:17" pos:end="91:17">i</name> <operator pos:start="91:19" pos:end="91:19">&lt;</operator> <name pos:start="91:21" pos:end="91:37">nb_output_streams</name></expr>;</condition> <incr pos:start="91:40" pos:end="91:42"><expr pos:start="91:40" pos:end="91:42"><name pos:start="91:40" pos:end="91:40">i</name><operator pos:start="91:41" pos:end="91:42">++</operator></expr></incr>)</control> <block pos:start="91:45" pos:end="197:5">{<block_content pos:start="93:9" pos:end="195:22">

        <decl_stmt pos:start="93:9" pos:end="93:21"><decl pos:start="93:9" pos:end="93:20"><type pos:start="93:9" pos:end="93:13"><name pos:start="93:9" pos:end="93:13">float</name></type> <name pos:start="93:15" pos:end="93:15">q</name> <init pos:start="93:17" pos:end="93:20">= <expr pos:start="93:19" pos:end="93:20"><operator pos:start="93:19" pos:end="93:19">-</operator><literal type="number" pos:start="93:20" pos:end="93:20">1</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:32"><expr pos:start="95:9" pos:end="95:31"><name pos:start="95:9" pos:end="95:11">ost</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <name pos:start="95:15" pos:end="95:31"><name pos:start="95:15" pos:end="95:28">output_streams</name><index pos:start="95:29" pos:end="95:31">[<expr pos:start="95:30" pos:end="95:30"><name pos:start="95:30" pos:end="95:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:29"><expr pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:11">enc</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <name pos:start="97:15" pos:end="97:28"><name pos:start="97:15" pos:end="97:17">ost</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:21">st</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:28">codec</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="101:64"><if pos:start="99:9" pos:end="101:64">if <condition pos:start="99:12" pos:end="99:50">(<expr pos:start="99:13" pos:end="99:49"><operator pos:start="99:13" pos:end="99:13">!</operator><name pos:start="99:14" pos:end="99:29"><name pos:start="99:14" pos:end="99:16">ost</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:29">stream_copy</name></name> <operator pos:start="99:31" pos:end="99:32">&amp;&amp;</operator> <name pos:start="99:34" pos:end="99:49"><name pos:start="99:34" pos:end="99:36">enc</name><operator pos:start="99:37" pos:end="99:38">-&gt;</operator><name pos:start="99:39" pos:end="99:49">coded_frame</name></name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:64"><block_content pos:start="101:13" pos:end="101:64">

            <expr_stmt pos:start="101:13" pos:end="101:64"><expr pos:start="101:13" pos:end="101:63"><name pos:start="101:13" pos:end="101:13">q</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <name pos:start="101:17" pos:end="101:41"><name pos:start="101:17" pos:end="101:19">enc</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:32">coded_frame</name><operator pos:start="101:33" pos:end="101:34">-&gt;</operator><name pos:start="101:35" pos:end="101:41">quality</name></name> <operator pos:start="101:43" pos:end="101:43">/</operator> <operator pos:start="101:45" pos:end="101:45">(</operator><name pos:start="101:46" pos:end="101:50">float</name><operator pos:start="101:51" pos:end="101:51">)</operator><name pos:start="101:52" pos:end="101:63">FF_QP2LAMBDA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="103:9" pos:end="107:9"><if pos:start="103:9" pos:end="107:9">if <condition pos:start="103:12" pos:end="103:57">(<expr pos:start="103:13" pos:end="103:56"><name pos:start="103:13" pos:end="103:15">vid</name> <operator pos:start="103:17" pos:end="103:18">&amp;&amp;</operator> <name pos:start="103:20" pos:end="103:34"><name pos:start="103:20" pos:end="103:22">enc</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:34">codec_type</name></name> <operator pos:start="103:36" pos:end="103:37">==</operator> <name pos:start="103:39" pos:end="103:56">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="103:59" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:82">

            <expr_stmt pos:start="105:13" pos:end="105:82"><expr pos:start="105:13" pos:end="105:81"><call pos:start="105:13" pos:end="105:81"><name pos:start="105:13" pos:end="105:20">snprintf</name><argument_list pos:start="105:21" pos:end="105:81">(<argument pos:start="105:22" pos:end="105:38"><expr pos:start="105:22" pos:end="105:38"><name pos:start="105:22" pos:end="105:24">buf</name> <operator pos:start="105:26" pos:end="105:26">+</operator> <call pos:start="105:28" pos:end="105:38"><name pos:start="105:28" pos:end="105:33">strlen</name><argument_list pos:start="105:34" pos:end="105:38">(<argument pos:start="105:35" pos:end="105:37"><expr pos:start="105:35" pos:end="105:37"><name pos:start="105:35" pos:end="105:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="105:41" pos:end="105:65"><expr pos:start="105:41" pos:end="105:65"><sizeof pos:start="105:41" pos:end="105:51">sizeof<argument_list pos:start="105:47" pos:end="105:51">(<argument pos:start="105:48" pos:end="105:50"><expr pos:start="105:48" pos:end="105:50"><name pos:start="105:48" pos:end="105:50">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="105:53" pos:end="105:53">-</operator> <call pos:start="105:55" pos:end="105:65"><name pos:start="105:55" pos:end="105:60">strlen</name><argument_list pos:start="105:61" pos:end="105:65">(<argument pos:start="105:62" pos:end="105:64"><expr pos:start="105:62" pos:end="105:64"><name pos:start="105:62" pos:end="105:64">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="105:68" pos:end="105:77"><expr pos:start="105:68" pos:end="105:77"><literal type="string" pos:start="105:68" pos:end="105:77">"q=%2.1f "</literal></expr></argument>, <argument pos:start="105:80" pos:end="105:80"><expr pos:start="105:80" pos:end="105:80"><name pos:start="105:80" pos:end="105:80">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="109:9" pos:end="187:9"><if pos:start="109:9" pos:end="187:9">if <condition pos:start="109:12" pos:end="109:58">(<expr pos:start="109:13" pos:end="109:57"><operator pos:start="109:13" pos:end="109:13">!</operator><name pos:start="109:14" pos:end="109:16">vid</name> <operator pos:start="109:18" pos:end="109:19">&amp;&amp;</operator> <name pos:start="109:21" pos:end="109:35"><name pos:start="109:21" pos:end="109:23">enc</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:35">codec_type</name></name> <operator pos:start="109:37" pos:end="109:38">==</operator> <name pos:start="109:40" pos:end="109:57">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="109:60" pos:end="187:9">{<block_content pos:start="111:13" pos:end="185:20">

            <decl_stmt pos:start="111:13" pos:end="111:63"><decl pos:start="111:13" pos:end="111:62"><type pos:start="111:13" pos:end="111:17"><name pos:start="111:13" pos:end="111:17">float</name></type> <name pos:start="111:19" pos:end="111:19">t</name> <init pos:start="111:21" pos:end="111:62">= <expr pos:start="111:23" pos:end="111:62"><operator pos:start="111:23" pos:end="111:23">(</operator><call pos:start="111:24" pos:end="111:35"><name pos:start="111:24" pos:end="111:33">av_gettime</name><argument_list pos:start="111:34" pos:end="111:35">()</argument_list></call> <operator pos:start="111:37" pos:end="111:37">-</operator> <name pos:start="111:39" pos:end="111:49">timer_start</name><operator pos:start="111:50" pos:end="111:50">)</operator> <operator pos:start="111:52" pos:end="111:52">/</operator> <literal type="number" pos:start="111:54" pos:end="111:62">1000000.0</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:45"><expr pos:start="115:13" pos:end="115:44"><name pos:start="115:13" pos:end="115:24">frame_number</name> <operator pos:start="115:26" pos:end="115:26">=</operator> <name pos:start="115:28" pos:end="115:44"><name pos:start="115:28" pos:end="115:30">ost</name><operator pos:start="115:31" pos:end="115:32">-&gt;</operator><name pos:start="115:33" pos:end="115:44">frame_number</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="119:83"><expr pos:start="117:13" pos:end="119:82"><call pos:start="117:13" pos:end="119:82"><name pos:start="117:13" pos:end="117:20">snprintf</name><argument_list pos:start="117:21" pos:end="119:82">(<argument pos:start="117:22" pos:end="117:38"><expr pos:start="117:22" pos:end="117:38"><name pos:start="117:22" pos:end="117:24">buf</name> <operator pos:start="117:26" pos:end="117:26">+</operator> <call pos:start="117:28" pos:end="117:38"><name pos:start="117:28" pos:end="117:33">strlen</name><argument_list pos:start="117:34" pos:end="117:38">(<argument pos:start="117:35" pos:end="117:37"><expr pos:start="117:35" pos:end="117:37"><name pos:start="117:35" pos:end="117:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="117:41" pos:end="117:65"><expr pos:start="117:41" pos:end="117:65"><sizeof pos:start="117:41" pos:end="117:51">sizeof<argument_list pos:start="117:47" pos:end="117:51">(<argument pos:start="117:48" pos:end="117:50"><expr pos:start="117:48" pos:end="117:50"><name pos:start="117:48" pos:end="117:50">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="117:53" pos:end="117:53">-</operator> <call pos:start="117:55" pos:end="117:65"><name pos:start="117:55" pos:end="117:60">strlen</name><argument_list pos:start="117:61" pos:end="117:65">(<argument pos:start="117:62" pos:end="117:64"><expr pos:start="117:62" pos:end="117:64"><name pos:start="117:62" pos:end="117:64">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="117:68" pos:end="117:95"><expr pos:start="117:68" pos:end="117:95"><literal type="string" pos:start="117:68" pos:end="117:95">"frame=%5d fps=%3d q=%3.1f "</literal></expr></argument>,

                     <argument pos:start="119:22" pos:end="119:33"><expr pos:start="119:22" pos:end="119:33"><name pos:start="119:22" pos:end="119:33">frame_number</name></expr></argument>, <argument pos:start="119:36" pos:end="119:78"><expr pos:start="119:36" pos:end="119:78"><ternary pos:start="119:36" pos:end="119:78"><condition pos:start="119:36" pos:end="119:44"><expr pos:start="119:36" pos:end="119:42"><operator pos:start="119:36" pos:end="119:36">(</operator><name pos:start="119:37" pos:end="119:37">t</name> <operator pos:start="119:39" pos:end="119:39">&gt;</operator> <literal type="number" pos:start="119:41" pos:end="119:41">1</literal><operator pos:start="119:42" pos:end="119:42">)</operator></expr> ?</condition><then pos:start="119:46" pos:end="119:74"> <expr pos:start="119:46" pos:end="119:74"><operator pos:start="119:46" pos:end="119:46">(</operator><name pos:start="119:47" pos:end="119:49">int</name><operator pos:start="119:50" pos:end="119:50">)</operator><operator pos:start="119:51" pos:end="119:51">(</operator><name pos:start="119:52" pos:end="119:63">frame_number</name> <operator pos:start="119:65" pos:end="119:65">/</operator> <name pos:start="119:67" pos:end="119:67">t</name> <operator pos:start="119:69" pos:end="119:69">+</operator> <literal type="number" pos:start="119:71" pos:end="119:73">0.5</literal><operator pos:start="119:74" pos:end="119:74">)</operator></expr> </then><else pos:start="119:76" pos:end="119:78">: <expr pos:start="119:78" pos:end="119:78"><literal type="number" pos:start="119:78" pos:end="119:78">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="119:81" pos:end="119:81"><expr pos:start="119:81" pos:end="119:81"><name pos:start="119:81" pos:end="119:81">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="121:13" pos:end="123:76"><if pos:start="121:13" pos:end="123:76">if <condition pos:start="121:16" pos:end="121:31">(<expr pos:start="121:17" pos:end="121:30"><name pos:start="121:17" pos:end="121:30">is_last_report</name></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:76"><block_content pos:start="123:17" pos:end="123:76">

                <expr_stmt pos:start="123:17" pos:end="123:76"><expr pos:start="123:17" pos:end="123:75"><call pos:start="123:17" pos:end="123:75"><name pos:start="123:17" pos:end="123:24">snprintf</name><argument_list pos:start="123:25" pos:end="123:75">(<argument pos:start="123:26" pos:end="123:42"><expr pos:start="123:26" pos:end="123:42"><name pos:start="123:26" pos:end="123:28">buf</name> <operator pos:start="123:30" pos:end="123:30">+</operator> <call pos:start="123:32" pos:end="123:42"><name pos:start="123:32" pos:end="123:37">strlen</name><argument_list pos:start="123:38" pos:end="123:42">(<argument pos:start="123:39" pos:end="123:41"><expr pos:start="123:39" pos:end="123:41"><name pos:start="123:39" pos:end="123:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="123:45" pos:end="123:69"><expr pos:start="123:45" pos:end="123:69"><sizeof pos:start="123:45" pos:end="123:55">sizeof<argument_list pos:start="123:51" pos:end="123:55">(<argument pos:start="123:52" pos:end="123:54"><expr pos:start="123:52" pos:end="123:54"><name pos:start="123:52" pos:end="123:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="123:57" pos:end="123:57">-</operator> <call pos:start="123:59" pos:end="123:69"><name pos:start="123:59" pos:end="123:64">strlen</name><argument_list pos:start="123:65" pos:end="123:69">(<argument pos:start="123:66" pos:end="123:68"><expr pos:start="123:66" pos:end="123:68"><name pos:start="123:66" pos:end="123:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="123:72" pos:end="123:74"><expr pos:start="123:72" pos:end="123:74"><literal type="string" pos:start="123:72" pos:end="123:74">"L"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="125:13" pos:end="139:13"><if pos:start="125:13" pos:end="139:13">if <condition pos:start="125:16" pos:end="125:24">(<expr pos:start="125:17" pos:end="125:23"><name pos:start="125:17" pos:end="125:23">qp_hist</name></expr>)</condition> <block pos:start="125:26" pos:end="139:13">{<block_content pos:start="127:17" pos:end="137:121">

                <decl_stmt pos:start="127:17" pos:end="127:22"><decl pos:start="127:17" pos:end="127:21"><type pos:start="127:17" pos:end="127:19"><name pos:start="127:17" pos:end="127:19">int</name></type> <name pos:start="127:21" pos:end="127:21">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="129:17" pos:end="129:35"><decl pos:start="129:17" pos:end="129:34"><type pos:start="129:17" pos:end="129:19"><name pos:start="129:17" pos:end="129:19">int</name></type> <name pos:start="129:21" pos:end="129:22">qp</name> <init pos:start="129:24" pos:end="129:34">= <expr pos:start="129:26" pos:end="129:34"><call pos:start="129:26" pos:end="129:34"><name pos:start="129:26" pos:end="129:31">lrintf</name><argument_list pos:start="129:32" pos:end="129:34">(<argument pos:start="129:33" pos:end="129:33"><expr pos:start="129:33" pos:end="129:33"><name pos:start="129:33" pos:end="129:33">q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="131:17" pos:end="133:39"><if pos:start="131:17" pos:end="133:39">if <condition pos:start="131:20" pos:end="131:65">(<expr pos:start="131:21" pos:end="131:64"><name pos:start="131:21" pos:end="131:22">qp</name> <operator pos:start="131:24" pos:end="131:25">&gt;=</operator> <literal type="number" pos:start="131:27" pos:end="131:27">0</literal> <operator pos:start="131:29" pos:end="131:30">&amp;&amp;</operator> <name pos:start="131:32" pos:end="131:33">qp</name> <operator pos:start="131:35" pos:end="131:35">&lt;</operator> <call pos:start="131:37" pos:end="131:64"><name pos:start="131:37" pos:end="131:50">FF_ARRAY_ELEMS</name><argument_list pos:start="131:51" pos:end="131:64">(<argument pos:start="131:52" pos:end="131:63"><expr pos:start="131:52" pos:end="131:63"><name pos:start="131:52" pos:end="131:63">qp_histogram</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="133:21" pos:end="133:39"><block_content pos:start="133:21" pos:end="133:39">

                    <expr_stmt pos:start="133:21" pos:end="133:39"><expr pos:start="133:21" pos:end="133:38"><name pos:start="133:21" pos:end="133:36"><name pos:start="133:21" pos:end="133:32">qp_histogram</name><index pos:start="133:33" pos:end="133:36">[<expr pos:start="133:34" pos:end="133:35"><name pos:start="133:34" pos:end="133:35">qp</name></expr>]</index></name><operator pos:start="133:37" pos:end="133:38">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <for pos:start="135:17" pos:end="137:121">for <control pos:start="135:21" pos:end="135:40">(<init pos:start="135:22" pos:end="135:27"><expr pos:start="135:22" pos:end="135:26"><name pos:start="135:22" pos:end="135:22">j</name> <operator pos:start="135:24" pos:end="135:24">=</operator> <literal type="number" pos:start="135:26" pos:end="135:26">0</literal></expr>;</init> <condition pos:start="135:29" pos:end="135:35"><expr pos:start="135:29" pos:end="135:34"><name pos:start="135:29" pos:end="135:29">j</name> <operator pos:start="135:31" pos:end="135:31">&lt;</operator> <literal type="number" pos:start="135:33" pos:end="135:34">32</literal></expr>;</condition> <incr pos:start="135:37" pos:end="135:39"><expr pos:start="135:37" pos:end="135:39"><name pos:start="135:37" pos:end="135:37">j</name><operator pos:start="135:38" pos:end="135:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="137:21" pos:end="137:121"><block_content pos:start="137:21" pos:end="137:121">

                    <expr_stmt pos:start="137:21" pos:end="137:121"><expr pos:start="137:21" pos:end="137:120"><call pos:start="137:21" pos:end="137:120"><name pos:start="137:21" pos:end="137:28">snprintf</name><argument_list pos:start="137:29" pos:end="137:120">(<argument pos:start="137:30" pos:end="137:46"><expr pos:start="137:30" pos:end="137:46"><name pos:start="137:30" pos:end="137:32">buf</name> <operator pos:start="137:34" pos:end="137:34">+</operator> <call pos:start="137:36" pos:end="137:46"><name pos:start="137:36" pos:end="137:41">strlen</name><argument_list pos:start="137:42" pos:end="137:46">(<argument pos:start="137:43" pos:end="137:45"><expr pos:start="137:43" pos:end="137:45"><name pos:start="137:43" pos:end="137:45">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="137:49" pos:end="137:73"><expr pos:start="137:49" pos:end="137:73"><sizeof pos:start="137:49" pos:end="137:59">sizeof<argument_list pos:start="137:55" pos:end="137:59">(<argument pos:start="137:56" pos:end="137:58"><expr pos:start="137:56" pos:end="137:58"><name pos:start="137:56" pos:end="137:58">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="137:61" pos:end="137:61">-</operator> <call pos:start="137:63" pos:end="137:73"><name pos:start="137:63" pos:end="137:68">strlen</name><argument_list pos:start="137:69" pos:end="137:73">(<argument pos:start="137:70" pos:end="137:72"><expr pos:start="137:70" pos:end="137:72"><name pos:start="137:70" pos:end="137:72">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="137:76" pos:end="137:79"><expr pos:start="137:76" pos:end="137:79"><literal type="string" pos:start="137:76" pos:end="137:79">"%X"</literal></expr></argument>, <argument pos:start="137:82" pos:end="137:119"><expr pos:start="137:82" pos:end="137:119"><operator pos:start="137:82" pos:end="137:82">(</operator><name pos:start="137:83" pos:end="137:85">int</name><operator pos:start="137:86" pos:end="137:86">)</operator><call pos:start="137:87" pos:end="137:119"><name pos:start="137:87" pos:end="137:92">lrintf</name><argument_list pos:start="137:93" pos:end="137:119">(<argument pos:start="137:94" pos:end="137:118"><expr pos:start="137:94" pos:end="137:118"><call pos:start="137:94" pos:end="137:118"><name pos:start="137:94" pos:end="137:97">log2</name><argument_list pos:start="137:98" pos:end="137:118">(<argument pos:start="137:99" pos:end="137:117"><expr pos:start="137:99" pos:end="137:117"><name pos:start="137:99" pos:end="137:113"><name pos:start="137:99" pos:end="137:110">qp_histogram</name><index pos:start="137:111" pos:end="137:113">[<expr pos:start="137:112" pos:end="137:112"><name pos:start="137:112" pos:end="137:112">j</name></expr>]</index></name> <operator pos:start="137:115" pos:end="137:115">+</operator> <literal type="number" pos:start="137:117" pos:end="137:117">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="141:13" pos:end="183:13"><if pos:start="141:13" pos:end="183:13">if <condition pos:start="141:16" pos:end="141:43">(<expr pos:start="141:17" pos:end="141:42"><name pos:start="141:17" pos:end="141:26"><name pos:start="141:17" pos:end="141:19">enc</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:26">flags</name></name><operator pos:start="141:27" pos:end="141:27">&amp;</operator><name pos:start="141:28" pos:end="141:42">CODEC_FLAG_PSNR</name></expr>)</condition> <block pos:start="141:45" pos:end="183:13">{<block_content pos:start="143:17" pos:end="181:112">

                <decl_stmt pos:start="143:17" pos:end="143:22"><decl pos:start="143:17" pos:end="143:21"><type pos:start="143:17" pos:end="143:19"><name pos:start="143:17" pos:end="143:19">int</name></type> <name pos:start="143:21" pos:end="143:21">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="145:17" pos:end="145:44"><decl pos:start="145:17" pos:end="145:28"><type pos:start="145:17" pos:end="145:22"><name pos:start="145:17" pos:end="145:22">double</name></type> <name pos:start="145:24" pos:end="145:28">error</name></decl>, <decl pos:start="145:31" pos:end="145:43"><type ref="prev" pos:start="145:17" pos:end="145:22"/><name pos:start="145:31" pos:end="145:39">error_sum</name> <init pos:start="145:41" pos:end="145:43">= <expr pos:start="145:43" pos:end="145:43"><literal type="number" pos:start="145:43" pos:end="145:43">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="147:17" pos:end="147:44"><decl pos:start="147:17" pos:end="147:28"><type pos:start="147:17" pos:end="147:22"><name pos:start="147:17" pos:end="147:22">double</name></type> <name pos:start="147:24" pos:end="147:28">scale</name></decl>, <decl pos:start="147:31" pos:end="147:43"><type ref="prev" pos:start="147:17" pos:end="147:22"/><name pos:start="147:31" pos:end="147:39">scale_sum</name> <init pos:start="147:41" pos:end="147:43">= <expr pos:start="147:43" pos:end="147:43"><literal type="number" pos:start="147:43" pos:end="147:43">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="149:17" pos:end="149:47"><decl pos:start="149:17" pos:end="149:46"><type pos:start="149:17" pos:end="149:20"><name pos:start="149:17" pos:end="149:20">char</name></type> <name pos:start="149:22" pos:end="149:28"><name pos:start="149:22" pos:end="149:25">type</name><index pos:start="149:26" pos:end="149:28">[<expr pos:start="149:27" pos:end="149:27"><literal type="number" pos:start="149:27" pos:end="149:27">3</literal></expr>]</index></name> <init pos:start="149:30" pos:end="149:46">= <expr pos:start="149:32" pos:end="149:46"><block pos:start="149:32" pos:end="149:46">{ <expr pos:start="149:34" pos:end="149:36"><literal type="char" pos:start="149:34" pos:end="149:36">'Y'</literal></expr>,<expr pos:start="149:38" pos:end="149:40"><literal type="char" pos:start="149:38" pos:end="149:40">'U'</literal></expr>,<expr pos:start="149:42" pos:end="149:44"><literal type="char" pos:start="149:42" pos:end="149:44">'V'</literal></expr> }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:80"><expr pos:start="151:17" pos:end="151:79"><call pos:start="151:17" pos:end="151:79"><name pos:start="151:17" pos:end="151:24">snprintf</name><argument_list pos:start="151:25" pos:end="151:79">(<argument pos:start="151:26" pos:end="151:42"><expr pos:start="151:26" pos:end="151:42"><name pos:start="151:26" pos:end="151:28">buf</name> <operator pos:start="151:30" pos:end="151:30">+</operator> <call pos:start="151:32" pos:end="151:42"><name pos:start="151:32" pos:end="151:37">strlen</name><argument_list pos:start="151:38" pos:end="151:42">(<argument pos:start="151:39" pos:end="151:41"><expr pos:start="151:39" pos:end="151:41"><name pos:start="151:39" pos:end="151:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="151:45" pos:end="151:69"><expr pos:start="151:45" pos:end="151:69"><sizeof pos:start="151:45" pos:end="151:55">sizeof<argument_list pos:start="151:51" pos:end="151:55">(<argument pos:start="151:52" pos:end="151:54"><expr pos:start="151:52" pos:end="151:54"><name pos:start="151:52" pos:end="151:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="151:57" pos:end="151:57">-</operator> <call pos:start="151:59" pos:end="151:69"><name pos:start="151:59" pos:end="151:64">strlen</name><argument_list pos:start="151:65" pos:end="151:69">(<argument pos:start="151:66" pos:end="151:68"><expr pos:start="151:66" pos:end="151:68"><name pos:start="151:66" pos:end="151:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="151:72" pos:end="151:78"><expr pos:start="151:72" pos:end="151:78"><literal type="string" pos:start="151:72" pos:end="151:78">"PSNR="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="153:17" pos:end="179:17">for <control pos:start="153:21" pos:end="153:39">(<init pos:start="153:22" pos:end="153:27"><expr pos:start="153:22" pos:end="153:26"><name pos:start="153:22" pos:end="153:22">j</name> <operator pos:start="153:24" pos:end="153:24">=</operator> <literal type="number" pos:start="153:26" pos:end="153:26">0</literal></expr>;</init> <condition pos:start="153:29" pos:end="153:34"><expr pos:start="153:29" pos:end="153:33"><name pos:start="153:29" pos:end="153:29">j</name> <operator pos:start="153:31" pos:end="153:31">&lt;</operator> <literal type="number" pos:start="153:33" pos:end="153:33">3</literal></expr>;</condition> <incr pos:start="153:36" pos:end="153:38"><expr pos:start="153:36" pos:end="153:38"><name pos:start="153:36" pos:end="153:36">j</name><operator pos:start="153:37" pos:end="153:38">++</operator></expr></incr>)</control> <block pos:start="153:41" pos:end="179:17">{<block_content pos:start="155:21" pos:end="177:118">

                    <if_stmt pos:start="155:21" pos:end="167:21"><if pos:start="155:21" pos:end="161:21">if <condition pos:start="155:24" pos:end="155:39">(<expr pos:start="155:25" pos:end="155:38"><name pos:start="155:25" pos:end="155:38">is_last_report</name></expr>)</condition> <block pos:start="155:41" pos:end="161:21">{<block_content pos:start="157:25" pos:end="159:88">

                        <expr_stmt pos:start="157:25" pos:end="157:46"><expr pos:start="157:25" pos:end="157:45"><name pos:start="157:25" pos:end="157:29">error</name> <operator pos:start="157:31" pos:end="157:31">=</operator> <name pos:start="157:33" pos:end="157:45"><name pos:start="157:33" pos:end="157:35">enc</name><operator pos:start="157:36" pos:end="157:37">-&gt;</operator><name pos:start="157:38" pos:end="157:42">error</name><index pos:start="157:43" pos:end="157:45">[<expr pos:start="157:44" pos:end="157:44"><name pos:start="157:44" pos:end="157:44">j</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="159:25" pos:end="159:88"><expr pos:start="159:25" pos:end="159:87"><name pos:start="159:25" pos:end="159:29">scale</name> <operator pos:start="159:31" pos:end="159:31">=</operator> <name pos:start="159:33" pos:end="159:42"><name pos:start="159:33" pos:end="159:35">enc</name><operator pos:start="159:36" pos:end="159:37">-&gt;</operator><name pos:start="159:38" pos:end="159:42">width</name></name> <operator pos:start="159:44" pos:end="159:44">*</operator> <name pos:start="159:46" pos:end="159:56"><name pos:start="159:46" pos:end="159:48">enc</name><operator pos:start="159:49" pos:end="159:50">-&gt;</operator><name pos:start="159:51" pos:end="159:56">height</name></name> <operator pos:start="159:58" pos:end="159:58">*</operator> <literal type="number" pos:start="159:60" pos:end="159:64">255.0</literal> <operator pos:start="159:66" pos:end="159:66">*</operator> <literal type="number" pos:start="159:68" pos:end="159:72">255.0</literal> <operator pos:start="159:74" pos:end="159:74">*</operator> <name pos:start="159:76" pos:end="159:87">frame_number</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="161:23" pos:end="167:21">else <block pos:start="161:28" pos:end="167:21">{<block_content pos:start="163:25" pos:end="165:73">

                        <expr_stmt pos:start="163:25" pos:end="163:59"><expr pos:start="163:25" pos:end="163:58"><name pos:start="163:25" pos:end="163:29">error</name> <operator pos:start="163:31" pos:end="163:31">=</operator> <name pos:start="163:33" pos:end="163:58"><name pos:start="163:33" pos:end="163:35">enc</name><operator pos:start="163:36" pos:end="163:37">-&gt;</operator><name pos:start="163:38" pos:end="163:48">coded_frame</name><operator pos:start="163:49" pos:end="163:50">-&gt;</operator><name pos:start="163:51" pos:end="163:55">error</name><index pos:start="163:56" pos:end="163:58">[<expr pos:start="163:57" pos:end="163:57"><name pos:start="163:57" pos:end="163:57">j</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="165:25" pos:end="165:73"><expr pos:start="165:25" pos:end="165:72"><name pos:start="165:25" pos:end="165:29">scale</name> <operator pos:start="165:31" pos:end="165:31">=</operator> <name pos:start="165:33" pos:end="165:42"><name pos:start="165:33" pos:end="165:35">enc</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:42">width</name></name> <operator pos:start="165:44" pos:end="165:44">*</operator> <name pos:start="165:46" pos:end="165:56"><name pos:start="165:46" pos:end="165:48">enc</name><operator pos:start="165:49" pos:end="165:50">-&gt;</operator><name pos:start="165:51" pos:end="165:56">height</name></name> <operator pos:start="165:58" pos:end="165:58">*</operator> <literal type="number" pos:start="165:60" pos:end="165:64">255.0</literal> <operator pos:start="165:66" pos:end="165:66">*</operator> <literal type="number" pos:start="165:68" pos:end="165:72">255.0</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="169:21" pos:end="171:35"><if pos:start="169:21" pos:end="171:35">if <condition pos:start="169:24" pos:end="169:26">(<expr pos:start="169:25" pos:end="169:25"><name pos:start="169:25" pos:end="169:25">j</name></expr>)</condition><block type="pseudo" pos:start="171:25" pos:end="171:35"><block_content pos:start="171:25" pos:end="171:35">

                        <expr_stmt pos:start="171:25" pos:end="171:35"><expr pos:start="171:25" pos:end="171:34"><name pos:start="171:25" pos:end="171:29">scale</name> <operator pos:start="171:31" pos:end="171:32">/=</operator> <literal type="number" pos:start="171:34" pos:end="171:34">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="173:21" pos:end="173:39"><expr pos:start="173:21" pos:end="173:38"><name pos:start="173:21" pos:end="173:29">error_sum</name> <operator pos:start="173:31" pos:end="173:32">+=</operator> <name pos:start="173:34" pos:end="173:38">error</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="175:21" pos:end="175:39"><expr pos:start="175:21" pos:end="175:38"><name pos:start="175:21" pos:end="175:29">scale_sum</name> <operator pos:start="175:31" pos:end="175:32">+=</operator> <name pos:start="175:34" pos:end="175:38">scale</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="177:21" pos:end="177:118"><expr pos:start="177:21" pos:end="177:117"><call pos:start="177:21" pos:end="177:117"><name pos:start="177:21" pos:end="177:28">snprintf</name><argument_list pos:start="177:29" pos:end="177:117">(<argument pos:start="177:30" pos:end="177:46"><expr pos:start="177:30" pos:end="177:46"><name pos:start="177:30" pos:end="177:32">buf</name> <operator pos:start="177:34" pos:end="177:34">+</operator> <call pos:start="177:36" pos:end="177:46"><name pos:start="177:36" pos:end="177:41">strlen</name><argument_list pos:start="177:42" pos:end="177:46">(<argument pos:start="177:43" pos:end="177:45"><expr pos:start="177:43" pos:end="177:45"><name pos:start="177:43" pos:end="177:45">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="177:49" pos:end="177:73"><expr pos:start="177:49" pos:end="177:73"><sizeof pos:start="177:49" pos:end="177:59">sizeof<argument_list pos:start="177:55" pos:end="177:59">(<argument pos:start="177:56" pos:end="177:58"><expr pos:start="177:56" pos:end="177:58"><name pos:start="177:56" pos:end="177:58">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="177:61" pos:end="177:61">-</operator> <call pos:start="177:63" pos:end="177:73"><name pos:start="177:63" pos:end="177:68">strlen</name><argument_list pos:start="177:69" pos:end="177:73">(<argument pos:start="177:70" pos:end="177:72"><expr pos:start="177:70" pos:end="177:72"><name pos:start="177:70" pos:end="177:72">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="177:76" pos:end="177:86"><expr pos:start="177:76" pos:end="177:86"><literal type="string" pos:start="177:76" pos:end="177:86">"%c:%2.2f "</literal></expr></argument>, <argument pos:start="177:89" pos:end="177:95"><expr pos:start="177:89" pos:end="177:95"><name pos:start="177:89" pos:end="177:95"><name pos:start="177:89" pos:end="177:92">type</name><index pos:start="177:93" pos:end="177:95">[<expr pos:start="177:94" pos:end="177:94"><name pos:start="177:94" pos:end="177:94">j</name></expr>]</index></name></expr></argument>, <argument pos:start="177:98" pos:end="177:116"><expr pos:start="177:98" pos:end="177:116"><call pos:start="177:98" pos:end="177:116"><name pos:start="177:98" pos:end="177:101">psnr</name><argument_list pos:start="177:102" pos:end="177:116">(<argument pos:start="177:103" pos:end="177:115"><expr pos:start="177:103" pos:end="177:115"><name pos:start="177:103" pos:end="177:107">error</name> <operator pos:start="177:109" pos:end="177:109">/</operator> <name pos:start="177:111" pos:end="177:115">scale</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="181:17" pos:end="181:112"><expr pos:start="181:17" pos:end="181:111"><call pos:start="181:17" pos:end="181:111"><name pos:start="181:17" pos:end="181:24">snprintf</name><argument_list pos:start="181:25" pos:end="181:111">(<argument pos:start="181:26" pos:end="181:42"><expr pos:start="181:26" pos:end="181:42"><name pos:start="181:26" pos:end="181:28">buf</name> <operator pos:start="181:30" pos:end="181:30">+</operator> <call pos:start="181:32" pos:end="181:42"><name pos:start="181:32" pos:end="181:37">strlen</name><argument_list pos:start="181:38" pos:end="181:42">(<argument pos:start="181:39" pos:end="181:41"><expr pos:start="181:39" pos:end="181:41"><name pos:start="181:39" pos:end="181:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="181:45" pos:end="181:69"><expr pos:start="181:45" pos:end="181:69"><sizeof pos:start="181:45" pos:end="181:55">sizeof<argument_list pos:start="181:51" pos:end="181:55">(<argument pos:start="181:52" pos:end="181:54"><expr pos:start="181:52" pos:end="181:54"><name pos:start="181:52" pos:end="181:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="181:57" pos:end="181:57">-</operator> <call pos:start="181:59" pos:end="181:69"><name pos:start="181:59" pos:end="181:64">strlen</name><argument_list pos:start="181:65" pos:end="181:69">(<argument pos:start="181:66" pos:end="181:68"><expr pos:start="181:66" pos:end="181:68"><name pos:start="181:66" pos:end="181:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="181:72" pos:end="181:81"><expr pos:start="181:72" pos:end="181:81"><literal type="string" pos:start="181:72" pos:end="181:81">"*:%2.2f "</literal></expr></argument>, <argument pos:start="181:84" pos:end="181:110"><expr pos:start="181:84" pos:end="181:110"><call pos:start="181:84" pos:end="181:110"><name pos:start="181:84" pos:end="181:87">psnr</name><argument_list pos:start="181:88" pos:end="181:110">(<argument pos:start="181:89" pos:end="181:109"><expr pos:start="181:89" pos:end="181:109"><name pos:start="181:89" pos:end="181:97">error_sum</name> <operator pos:start="181:99" pos:end="181:99">/</operator> <name pos:start="181:101" pos:end="181:109">scale_sum</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:20"><expr pos:start="185:13" pos:end="185:19"><name pos:start="185:13" pos:end="185:15">vid</name> <operator pos:start="185:17" pos:end="185:17">=</operator> <literal type="number" pos:start="185:19" pos:end="185:19">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="189:9" pos:end="189:38">/* compute min output value */</comment>

        <expr_stmt pos:start="191:9" pos:end="191:68"><expr pos:start="191:9" pos:end="191:67"><name pos:start="191:9" pos:end="191:11">pts</name> <operator pos:start="191:13" pos:end="191:13">=</operator> <operator pos:start="191:15" pos:end="191:15">(</operator><name pos:start="191:16" pos:end="191:21">double</name><operator pos:start="191:22" pos:end="191:22">)</operator><name pos:start="191:23" pos:end="191:38"><name pos:start="191:23" pos:end="191:25">ost</name><operator pos:start="191:26" pos:end="191:27">-&gt;</operator><name pos:start="191:28" pos:end="191:29">st</name><operator pos:start="191:30" pos:end="191:31">-&gt;</operator><name pos:start="191:32" pos:end="191:34">pts</name><operator pos:start="191:35" pos:end="191:35">.</operator><name pos:start="191:36" pos:end="191:38">val</name></name> <operator pos:start="191:40" pos:end="191:40">*</operator> <call pos:start="191:42" pos:end="191:67"><name pos:start="191:42" pos:end="191:47">av_q2d</name><argument_list pos:start="191:48" pos:end="191:67">(<argument pos:start="191:49" pos:end="191:66"><expr pos:start="191:49" pos:end="191:66"><name pos:start="191:49" pos:end="191:66"><name pos:start="191:49" pos:end="191:51">ost</name><operator pos:start="191:52" pos:end="191:53">-&gt;</operator><name pos:start="191:54" pos:end="191:55">st</name><operator pos:start="191:56" pos:end="191:57">-&gt;</operator><name pos:start="191:58" pos:end="191:66">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="193:9" pos:end="195:22"><if pos:start="193:9" pos:end="195:22">if <condition pos:start="193:12" pos:end="193:37">(<expr pos:start="193:13" pos:end="193:36"><operator pos:start="193:13" pos:end="193:13">(</operator><name pos:start="193:14" pos:end="193:16">pts</name> <operator pos:start="193:18" pos:end="193:18">&lt;</operator> <name pos:start="193:20" pos:end="193:22">ti1</name><operator pos:start="193:23" pos:end="193:23">)</operator> <operator pos:start="193:25" pos:end="193:26">&amp;&amp;</operator> <operator pos:start="193:28" pos:end="193:28">(</operator><name pos:start="193:29" pos:end="193:31">pts</name> <operator pos:start="193:33" pos:end="193:33">&gt;</operator> <literal type="number" pos:start="193:35" pos:end="193:35">0</literal><operator pos:start="193:36" pos:end="193:36">)</operator></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:22"><block_content pos:start="195:13" pos:end="195:22">

            <expr_stmt pos:start="195:13" pos:end="195:22"><expr pos:start="195:13" pos:end="195:21"><name pos:start="195:13" pos:end="195:15">ti1</name> <operator pos:start="195:17" pos:end="195:17">=</operator> <name pos:start="195:19" pos:end="195:21">pts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="199:5" pos:end="201:19"><if pos:start="199:5" pos:end="201:19">if <condition pos:start="199:8" pos:end="199:19">(<expr pos:start="199:9" pos:end="199:18"><name pos:start="199:9" pos:end="199:11">ti1</name> <operator pos:start="199:13" pos:end="199:13">&lt;</operator> <literal type="number" pos:start="199:15" pos:end="199:18">0.01</literal></expr>)</condition><block type="pseudo" pos:start="201:9" pos:end="201:19"><block_content pos:start="201:9" pos:end="201:19">

        <expr_stmt pos:start="201:9" pos:end="201:19"><expr pos:start="201:9" pos:end="201:18"><name pos:start="201:9" pos:end="201:11">ti1</name> <operator pos:start="201:13" pos:end="201:13">=</operator> <literal type="number" pos:start="201:15" pos:end="201:18">0.01</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="205:5" pos:end="205:54"><expr pos:start="205:5" pos:end="205:53"><name pos:start="205:5" pos:end="205:11">bitrate</name> <operator pos:start="205:13" pos:end="205:13">=</operator> <operator pos:start="205:15" pos:end="205:15">(</operator><name pos:start="205:16" pos:end="205:21">double</name><operator pos:start="205:22" pos:end="205:22">)</operator><operator pos:start="205:23" pos:end="205:23">(</operator><name pos:start="205:24" pos:end="205:33">total_size</name> <operator pos:start="205:35" pos:end="205:35">*</operator> <literal type="number" pos:start="205:37" pos:end="205:37">8</literal><operator pos:start="205:38" pos:end="205:38">)</operator> <operator pos:start="205:40" pos:end="205:40">/</operator> <name pos:start="205:42" pos:end="205:44">ti1</name> <operator pos:start="205:46" pos:end="205:46">/</operator> <literal type="number" pos:start="205:48" pos:end="205:53">1000.0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="209:5" pos:end="213:53"><expr pos:start="209:5" pos:end="213:52"><call pos:start="209:5" pos:end="213:52"><name pos:start="209:5" pos:end="209:12">snprintf</name><argument_list pos:start="209:13" pos:end="213:52">(<argument pos:start="209:14" pos:end="209:30"><expr pos:start="209:14" pos:end="209:30"><name pos:start="209:14" pos:end="209:16">buf</name> <operator pos:start="209:18" pos:end="209:18">+</operator> <call pos:start="209:20" pos:end="209:30"><name pos:start="209:20" pos:end="209:25">strlen</name><argument_list pos:start="209:26" pos:end="209:30">(<argument pos:start="209:27" pos:end="209:29"><expr pos:start="209:27" pos:end="209:29"><name pos:start="209:27" pos:end="209:29">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="209:33" pos:end="209:57"><expr pos:start="209:33" pos:end="209:57"><sizeof pos:start="209:33" pos:end="209:43">sizeof<argument_list pos:start="209:39" pos:end="209:43">(<argument pos:start="209:40" pos:end="209:42"><expr pos:start="209:40" pos:end="209:42"><name pos:start="209:40" pos:end="209:42">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="209:45" pos:end="209:45">-</operator> <call pos:start="209:47" pos:end="209:57"><name pos:start="209:47" pos:end="209:52">strlen</name><argument_list pos:start="209:53" pos:end="209:57">(<argument pos:start="209:54" pos:end="209:56"><expr pos:start="209:54" pos:end="209:56"><name pos:start="209:54" pos:end="209:56">buf</name></expr></argument>)</argument_list></call></expr></argument>,

            <argument pos:start="211:13" pos:end="211:58"><expr pos:start="211:13" pos:end="211:58"><literal type="string" pos:start="211:13" pos:end="211:58">"size=%8.0fkB time=%0.2f bitrate=%6.1fkbits/s"</literal></expr></argument>,

            <argument pos:start="213:13" pos:end="213:37"><expr pos:start="213:13" pos:end="213:37"><operator pos:start="213:13" pos:end="213:13">(</operator><name pos:start="213:14" pos:end="213:19">double</name><operator pos:start="213:20" pos:end="213:20">)</operator><name pos:start="213:21" pos:end="213:30">total_size</name> <operator pos:start="213:32" pos:end="213:32">/</operator> <literal type="number" pos:start="213:34" pos:end="213:37">1024</literal></expr></argument>, <argument pos:start="213:40" pos:end="213:42"><expr pos:start="213:40" pos:end="213:42"><name pos:start="213:40" pos:end="213:42">ti1</name></expr></argument>, <argument pos:start="213:45" pos:end="213:51"><expr pos:start="213:45" pos:end="213:51"><name pos:start="213:45" pos:end="213:51">bitrate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="217:5" pos:end="221:47"><if pos:start="217:5" pos:end="221:47">if <condition pos:start="217:8" pos:end="217:40">(<expr pos:start="217:9" pos:end="217:39"><name pos:start="217:9" pos:end="217:21">nb_frames_dup</name> <operator pos:start="217:23" pos:end="217:24">||</operator> <name pos:start="217:26" pos:end="217:39">nb_frames_drop</name></expr>)</condition><block type="pseudo" pos:start="219:9" pos:end="221:47"><block_content pos:start="219:9" pos:end="221:47">

        <expr_stmt pos:start="219:9" pos:end="221:47"><expr pos:start="219:9" pos:end="221:46"><call pos:start="219:9" pos:end="221:46"><name pos:start="219:9" pos:end="219:16">snprintf</name><argument_list pos:start="219:17" pos:end="221:46">(<argument pos:start="219:18" pos:end="219:34"><expr pos:start="219:18" pos:end="219:34"><name pos:start="219:18" pos:end="219:20">buf</name> <operator pos:start="219:22" pos:end="219:22">+</operator> <call pos:start="219:24" pos:end="219:34"><name pos:start="219:24" pos:end="219:29">strlen</name><argument_list pos:start="219:30" pos:end="219:34">(<argument pos:start="219:31" pos:end="219:33"><expr pos:start="219:31" pos:end="219:33"><name pos:start="219:31" pos:end="219:33">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="219:37" pos:end="219:61"><expr pos:start="219:37" pos:end="219:61"><sizeof pos:start="219:37" pos:end="219:47">sizeof<argument_list pos:start="219:43" pos:end="219:47">(<argument pos:start="219:44" pos:end="219:46"><expr pos:start="219:44" pos:end="219:46"><name pos:start="219:44" pos:end="219:46">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="219:49" pos:end="219:49">-</operator> <call pos:start="219:51" pos:end="219:61"><name pos:start="219:51" pos:end="219:56">strlen</name><argument_list pos:start="219:57" pos:end="219:61">(<argument pos:start="219:58" pos:end="219:60"><expr pos:start="219:58" pos:end="219:60"><name pos:start="219:58" pos:end="219:60">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="219:64" pos:end="219:80"><expr pos:start="219:64" pos:end="219:80"><literal type="string" pos:start="219:64" pos:end="219:80">" dup=%d drop=%d"</literal></expr></argument>,

                <argument pos:start="221:17" pos:end="221:29"><expr pos:start="221:17" pos:end="221:29"><name pos:start="221:17" pos:end="221:29">nb_frames_dup</name></expr></argument>, <argument pos:start="221:32" pos:end="221:45"><expr pos:start="221:32" pos:end="221:45"><name pos:start="221:32" pos:end="221:45">nb_frames_drop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:47"><expr pos:start="225:5" pos:end="225:46"><call pos:start="225:5" pos:end="225:46"><name pos:start="225:5" pos:end="225:10">av_log</name><argument_list pos:start="225:11" pos:end="225:46">(<argument pos:start="225:12" pos:end="225:15"><expr pos:start="225:12" pos:end="225:15"><name pos:start="225:12" pos:end="225:15">NULL</name></expr></argument>, <argument pos:start="225:18" pos:end="225:28"><expr pos:start="225:18" pos:end="225:28"><name pos:start="225:18" pos:end="225:28">AV_LOG_INFO</name></expr></argument>, <argument pos:start="225:31" pos:end="225:40"><expr pos:start="225:31" pos:end="225:40"><literal type="string" pos:start="225:31" pos:end="225:40">"%s    \r"</literal></expr></argument>, <argument pos:start="225:43" pos:end="225:45"><expr pos:start="225:43" pos:end="225:45"><name pos:start="225:43" pos:end="225:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="229:5" pos:end="229:19"><expr pos:start="229:5" pos:end="229:18"><call pos:start="229:5" pos:end="229:18"><name pos:start="229:5" pos:end="229:10">fflush</name><argument_list pos:start="229:11" pos:end="229:18">(<argument pos:start="229:12" pos:end="229:17"><expr pos:start="229:12" pos:end="229:17"><name pos:start="229:12" pos:end="229:17">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="233:5" pos:end="251:5"><if pos:start="233:5" pos:end="251:5">if <condition pos:start="233:8" pos:end="233:23">(<expr pos:start="233:9" pos:end="233:22"><name pos:start="233:9" pos:end="233:22">is_last_report</name></expr>)</condition> <block pos:start="233:25" pos:end="251:5">{<block_content pos:start="235:9" pos:end="249:10">

        <decl_stmt pos:start="235:9" pos:end="235:58"><decl pos:start="235:9" pos:end="235:57"><type pos:start="235:9" pos:end="235:15"><name pos:start="235:9" pos:end="235:15">int64_t</name></type> <name pos:start="235:17" pos:end="235:19">raw</name><init pos:start="235:20" pos:end="235:57">= <expr pos:start="235:22" pos:end="235:57"><name pos:start="235:22" pos:end="235:31">audio_size</name> <operator pos:start="235:33" pos:end="235:33">+</operator> <name pos:start="235:35" pos:end="235:44">video_size</name> <operator pos:start="235:46" pos:end="235:46">+</operator> <name pos:start="235:48" pos:end="235:57">extra_size</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:40"><expr pos:start="237:9" pos:end="237:39"><call pos:start="237:9" pos:end="237:39"><name pos:start="237:9" pos:end="237:14">av_log</name><argument_list pos:start="237:15" pos:end="237:39">(<argument pos:start="237:16" pos:end="237:19"><expr pos:start="237:16" pos:end="237:19"><name pos:start="237:16" pos:end="237:19">NULL</name></expr></argument>, <argument pos:start="237:22" pos:end="237:32"><expr pos:start="237:22" pos:end="237:32"><name pos:start="237:22" pos:end="237:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="237:35" pos:end="237:38"><expr pos:start="237:35" pos:end="237:38"><literal type="string" pos:start="237:35" pos:end="237:38">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="249:10"><expr pos:start="239:9" pos:end="249:9"><call pos:start="239:9" pos:end="249:9"><name pos:start="239:9" pos:end="239:14">av_log</name><argument_list pos:start="239:15" pos:end="249:9">(<argument pos:start="239:16" pos:end="239:19"><expr pos:start="239:16" pos:end="239:19"><name pos:start="239:16" pos:end="239:19">NULL</name></expr></argument>, <argument pos:start="239:22" pos:end="239:32"><expr pos:start="239:22" pos:end="239:32"><name pos:start="239:22" pos:end="239:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="239:35" pos:end="239:109"><expr pos:start="239:35" pos:end="239:109"><literal type="string" pos:start="239:35" pos:end="239:109">"video:%1.0fkB audio:%1.0fkB global headers:%1.0fkB muxing overhead %f%%\n"</literal></expr></argument>,

               <argument pos:start="241:16" pos:end="241:34"><expr pos:start="241:16" pos:end="241:34"><name pos:start="241:16" pos:end="241:25">video_size</name> <operator pos:start="241:27" pos:end="241:27">/</operator> <literal type="number" pos:start="241:29" pos:end="241:34">1024.0</literal></expr></argument>,

               <argument pos:start="243:16" pos:end="243:34"><expr pos:start="243:16" pos:end="243:34"><name pos:start="243:16" pos:end="243:25">audio_size</name> <operator pos:start="243:27" pos:end="243:27">/</operator> <literal type="number" pos:start="243:29" pos:end="243:34">1024.0</literal></expr></argument>,

               <argument pos:start="245:16" pos:end="245:34"><expr pos:start="245:16" pos:end="245:34"><name pos:start="245:16" pos:end="245:25">extra_size</name> <operator pos:start="245:27" pos:end="245:27">/</operator> <literal type="number" pos:start="245:29" pos:end="245:34">1024.0</literal></expr></argument>,

               <argument pos:start="247:16" pos:end="247:47"><expr pos:start="247:16" pos:end="247:47"><literal type="number" pos:start="247:16" pos:end="247:20">100.0</literal> <operator pos:start="247:22" pos:end="247:22">*</operator> <operator pos:start="247:24" pos:end="247:24">(</operator><name pos:start="247:25" pos:end="247:34">total_size</name> <operator pos:start="247:36" pos:end="247:36">-</operator> <name pos:start="247:38" pos:end="247:40">raw</name><operator pos:start="247:41" pos:end="247:41">)</operator> <operator pos:start="247:43" pos:end="247:43">/</operator> <name pos:start="247:45" pos:end="247:47">raw</name></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
