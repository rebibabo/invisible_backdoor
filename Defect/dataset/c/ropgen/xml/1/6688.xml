<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6688.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="129:1"><decl pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">convert_matrix</name><argument_list pos:start="1:27" pos:end="3:97">(<argument pos:start="1:28" pos:end="1:42"><expr pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:37">DSPContext</name> <operator pos:start="1:39" pos:end="1:39">*</operator><name pos:start="1:40" pos:end="1:42">dsp</name></expr></argument>, <argument pos:start="1:45" pos:end="1:59"><expr pos:start="1:45" pos:end="1:59"><call pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:47">int</name> <argument_list pos:start="1:49" pos:end="1:55">(<argument pos:start="1:50" pos:end="1:54"><expr pos:start="1:50" pos:end="1:54"><operator pos:start="1:50" pos:end="1:50">*</operator><name pos:start="1:51" pos:end="1:54">qmat</name></expr></argument>)</argument_list></call><index pos:start="1:56" pos:end="1:59">[<expr pos:start="1:57" pos:end="1:58"><literal type="number" pos:start="1:57" pos:end="1:58">64</literal></expr>]</index></expr></argument>, <argument pos:start="1:62" pos:end="1:86"><expr pos:start="1:62" pos:end="1:86"><call pos:start="1:62" pos:end="1:79"><name pos:start="1:62" pos:end="1:69">uint16_t</name> <argument_list pos:start="1:71" pos:end="1:79">(<argument pos:start="1:72" pos:end="1:78"><expr pos:start="1:72" pos:end="1:78"><operator pos:start="1:72" pos:end="1:72">*</operator><name pos:start="1:73" pos:end="1:78">qmat16</name></expr></argument>)</argument_list></call><index pos:start="1:80" pos:end="1:82">[<expr pos:start="1:81" pos:end="1:81"><literal type="number" pos:start="1:81" pos:end="1:81">2</literal></expr>]</index><index pos:start="1:83" pos:end="1:86">[<expr pos:start="1:84" pos:end="1:85"><literal type="number" pos:start="1:84" pos:end="1:85">64</literal></expr>]</index></expr></argument>,

                           <argument pos:start="3:28" pos:end="3:55"><expr pos:start="3:28" pos:end="3:55"><specifier pos:start="3:28" pos:end="3:32">const</specifier> <name pos:start="3:34" pos:end="3:41">uint16_t</name> <operator pos:start="3:43" pos:end="3:43">*</operator><name pos:start="3:44" pos:end="3:55">quant_matrix</name></expr></argument>, <argument pos:start="3:58" pos:end="3:65"><expr pos:start="3:58" pos:end="3:65"><name pos:start="3:58" pos:end="3:60">int</name> <name pos:start="3:62" pos:end="3:65">bias</name></expr></argument>, <argument pos:start="3:68" pos:end="3:75"><expr pos:start="3:68" pos:end="3:75"><name pos:start="3:68" pos:end="3:70">int</name> <name pos:start="3:72" pos:end="3:75">qmin</name></expr></argument>, <argument pos:start="3:78" pos:end="3:85"><expr pos:start="3:78" pos:end="3:85"><name pos:start="3:78" pos:end="3:80">int</name> <name pos:start="3:82" pos:end="3:85">qmax</name></expr></argument>, <argument pos:start="3:88" pos:end="3:96"><expr pos:start="3:88" pos:end="3:96"><name pos:start="3:88" pos:end="3:90">int</name> <name pos:start="3:92" pos:end="3:96">intra</name></expr></argument>)</argument_list>

<block pos:start="5:1" pos:end="129:1">{<block_content pos:start="7:5" pos:end="127:5">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">qscale</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">shift</name><init pos:start="9:14" pos:end="9:15">=<expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="121:5">for<control pos:start="13:8" pos:end="13:44">(<init pos:start="13:9" pos:end="13:20"><expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:14">qscale</name><operator pos:start="13:15" pos:end="13:15">=</operator><name pos:start="13:16" pos:end="13:19">qmin</name></expr>;</init> <condition pos:start="13:22" pos:end="13:34"><expr pos:start="13:22" pos:end="13:33"><name pos:start="13:22" pos:end="13:27">qscale</name><operator pos:start="13:28" pos:end="13:29">&lt;=</operator><name pos:start="13:30" pos:end="13:33">qmax</name></expr>;</condition> <incr pos:start="13:36" pos:end="13:43"><expr pos:start="13:36" pos:end="13:43"><name pos:start="13:36" pos:end="13:41">qscale</name><operator pos:start="13:42" pos:end="13:43">++</operator></expr></incr>)</control><block pos:start="13:45" pos:end="121:5">{<block_content pos:start="15:9" pos:end="119:9">

        <decl_stmt pos:start="15:9" pos:end="15:14"><decl pos:start="15:9" pos:end="15:13"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">i</name></decl>;</decl_stmt>

        <if_stmt pos:start="17:9" pos:end="107:9"><if pos:start="17:9" pos:end="47:9">if <condition pos:start="17:12" pos:end="25:13">(<expr pos:start="17:13" pos:end="24:0"><name pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:15">dsp</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:21">fdct</name></name> <operator pos:start="17:23" pos:end="17:24">==</operator> <name pos:start="17:26" pos:end="20:0">ff_jpeg_fdct_islow</name> 

<cpp:ifdef pos:start="19:1" pos:end="19:21">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:21">FAAN_POSTSCALE</name></cpp:ifdef>

            <operator pos:start="21:13" pos:end="21:14">||</operator> <name pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:18">dsp</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:24">fdct</name></name> <operator pos:start="21:26" pos:end="21:27">==</operator> <name pos:start="21:29" pos:end="24:0">ff_faandct</name></expr>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

            )</condition> <block pos:start="25:15" pos:end="47:9">{<block_content pos:start="27:13" pos:end="45:13">

            <for pos:start="27:13" pos:end="45:13">for<control pos:start="27:16" pos:end="27:29">(<init pos:start="27:17" pos:end="27:20"><expr pos:start="27:17" pos:end="27:19"><name pos:start="27:17" pos:end="27:17">i</name><operator pos:start="27:18" pos:end="27:18">=</operator><literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>;</init><condition pos:start="27:21" pos:end="27:25"><expr pos:start="27:21" pos:end="27:24"><name pos:start="27:21" pos:end="27:21">i</name><operator pos:start="27:22" pos:end="27:22">&lt;</operator><literal type="number" pos:start="27:23" pos:end="27:24">64</literal></expr>;</condition><incr pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:26">i</name><operator pos:start="27:27" pos:end="27:28">++</operator></expr></incr>)</control> <block pos:start="27:31" pos:end="45:13">{<block_content pos:start="29:17" pos:end="43:60">

                <decl_stmt pos:start="29:17" pos:end="29:54"><decl pos:start="29:17" pos:end="29:53"><type pos:start="29:17" pos:end="29:25"><specifier pos:start="29:17" pos:end="29:21">const</specifier> <name pos:start="29:23" pos:end="29:25">int</name></type> <name pos:start="29:27" pos:end="29:27">j</name><init pos:start="29:28" pos:end="29:53">= <expr pos:start="29:30" pos:end="29:53"><name pos:start="29:30" pos:end="29:53"><name pos:start="29:30" pos:end="29:32">dsp</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:50">idct_permutation</name><index pos:start="29:51" pos:end="29:53">[<expr pos:start="29:52" pos:end="29:52"><name pos:start="29:52" pos:end="29:52">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="31:17" pos:end="31:60">/* 16 &lt;= qscale * quant_matrix[i] &lt;= 7905 */</comment>

                <comment type="block" pos:start="33:17" pos:end="33:101">/* 19952         &lt;= aanscales[i] * qscale * quant_matrix[i]           &lt;= 249205026 */</comment>

                <comment type="block" pos:start="35:17" pos:end="35:109">/* (1&lt;&lt;36)/19952 &gt;= (1&lt;&lt;36)/(aanscales[i] * qscale * quant_matrix[i]) &gt;= (1&lt;&lt;36)/249205026 */</comment>

                <comment type="block" pos:start="37:17" pos:end="37:95">/* 3444240       &gt;= (1&lt;&lt;36)/(aanscales[i] * qscale * quant_matrix[i]) &gt;= 275 */</comment>

                

                <expr_stmt pos:start="41:17" pos:end="43:60"><expr pos:start="41:17" pos:end="43:59"><name pos:start="41:17" pos:end="41:31"><name pos:start="41:17" pos:end="41:20">qmat</name><index pos:start="41:21" pos:end="41:28">[<expr pos:start="41:22" pos:end="41:27"><name pos:start="41:22" pos:end="41:27">qscale</name></expr>]</index><index pos:start="41:29" pos:end="41:31">[<expr pos:start="41:30" pos:end="41:30"><name pos:start="41:30" pos:end="41:30">i</name></expr>]</index></name> <operator pos:start="41:33" pos:end="41:33">=</operator> <operator pos:start="41:35" pos:end="41:35">(</operator><name pos:start="41:36" pos:end="41:38">int</name><operator pos:start="41:39" pos:end="41:39">)</operator><operator pos:start="41:40" pos:end="41:40">(</operator><operator pos:start="41:41" pos:end="41:41">(</operator><call pos:start="41:42" pos:end="41:54"><name pos:start="41:42" pos:end="41:51">uint64_t_C</name><argument_list pos:start="41:52" pos:end="41:54">(<argument pos:start="41:53" pos:end="41:53"><expr pos:start="41:53" pos:end="41:53"><literal type="number" pos:start="41:53" pos:end="41:53">1</literal></expr></argument>)</argument_list></call> <operator pos:start="41:56" pos:end="41:57">&lt;&lt;</operator> <name pos:start="41:59" pos:end="41:68">QMAT_SHIFT</name><operator pos:start="41:69" pos:end="41:69">)</operator> <operator pos:start="41:71" pos:end="41:71">/</operator> 

                                <operator pos:start="43:33" pos:end="43:33">(</operator><name pos:start="43:34" pos:end="43:39">qscale</name> <operator pos:start="43:41" pos:end="43:41">*</operator> <name pos:start="43:43" pos:end="43:57"><name pos:start="43:43" pos:end="43:54">quant_matrix</name><index pos:start="43:55" pos:end="43:57">[<expr pos:start="43:56" pos:end="43:56"><name pos:start="43:56" pos:end="43:56">j</name></expr>]</index></name><operator pos:start="43:58" pos:end="43:58">)</operator><operator pos:start="43:59" pos:end="43:59">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="47:11" pos:end="77:9">else if <condition pos:start="47:19" pos:end="55:20">(<expr pos:start="47:20" pos:end="54:0"><name pos:start="47:20" pos:end="47:28"><name pos:start="47:20" pos:end="47:22">dsp</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:28">fdct</name></name> <operator pos:start="47:30" pos:end="47:31">==</operator> <name pos:start="47:33" pos:end="50:0">fdct_ifast</name>

<cpp:ifndef pos:start="49:1" pos:end="49:22">#<cpp:directive pos:start="49:2" pos:end="49:7">ifndef</cpp:directive> <name pos:start="49:9" pos:end="49:22">FAAN_POSTSCALE</name></cpp:ifndef>

                   <operator pos:start="51:20" pos:end="51:21">||</operator> <name pos:start="51:23" pos:end="51:31"><name pos:start="51:23" pos:end="51:25">dsp</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:31">fdct</name></name> <operator pos:start="51:33" pos:end="51:34">==</operator> <name pos:start="51:36" pos:end="54:0">ff_faandct</name></expr>

<cpp:endif pos:start="53:1" pos:end="53:6">#<cpp:directive pos:start="53:2" pos:end="53:6">endif</cpp:directive></cpp:endif>

                   )</condition> <block pos:start="55:22" pos:end="77:9">{<block_content pos:start="57:13" pos:end="75:13">

            <for pos:start="57:13" pos:end="75:13">for<control pos:start="57:16" pos:end="57:29">(<init pos:start="57:17" pos:end="57:20"><expr pos:start="57:17" pos:end="57:19"><name pos:start="57:17" pos:end="57:17">i</name><operator pos:start="57:18" pos:end="57:18">=</operator><literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>;</init><condition pos:start="57:21" pos:end="57:25"><expr pos:start="57:21" pos:end="57:24"><name pos:start="57:21" pos:end="57:21">i</name><operator pos:start="57:22" pos:end="57:22">&lt;</operator><literal type="number" pos:start="57:23" pos:end="57:24">64</literal></expr>;</condition><incr pos:start="57:26" pos:end="57:28"><expr pos:start="57:26" pos:end="57:28"><name pos:start="57:26" pos:end="57:26">i</name><operator pos:start="57:27" pos:end="57:28">++</operator></expr></incr>)</control> <block pos:start="57:31" pos:end="75:13">{<block_content pos:start="59:17" pos:end="73:75">

                <decl_stmt pos:start="59:17" pos:end="59:54"><decl pos:start="59:17" pos:end="59:53"><type pos:start="59:17" pos:end="59:25"><specifier pos:start="59:17" pos:end="59:21">const</specifier> <name pos:start="59:23" pos:end="59:25">int</name></type> <name pos:start="59:27" pos:end="59:27">j</name><init pos:start="59:28" pos:end="59:53">= <expr pos:start="59:30" pos:end="59:53"><name pos:start="59:30" pos:end="59:53"><name pos:start="59:30" pos:end="59:32">dsp</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:50">idct_permutation</name><index pos:start="59:51" pos:end="59:53">[<expr pos:start="59:52" pos:end="59:52"><name pos:start="59:52" pos:end="59:52">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="61:17" pos:end="61:60">/* 16 &lt;= qscale * quant_matrix[i] &lt;= 7905 */</comment>

                <comment type="block" pos:start="63:17" pos:end="63:101">/* 19952         &lt;= aanscales[i] * qscale * quant_matrix[i]           &lt;= 249205026 */</comment>

                <comment type="block" pos:start="65:17" pos:end="65:109">/* (1&lt;&lt;36)/19952 &gt;= (1&lt;&lt;36)/(aanscales[i] * qscale * quant_matrix[i]) &gt;= (1&lt;&lt;36)/249205026 */</comment>

                <comment type="block" pos:start="67:17" pos:end="67:95">/* 3444240       &gt;= (1&lt;&lt;36)/(aanscales[i] * qscale * quant_matrix[i]) &gt;= 275 */</comment>

                

                <expr_stmt pos:start="71:17" pos:end="73:75"><expr pos:start="71:17" pos:end="73:74"><name pos:start="71:17" pos:end="71:31"><name pos:start="71:17" pos:end="71:20">qmat</name><index pos:start="71:21" pos:end="71:28">[<expr pos:start="71:22" pos:end="71:27"><name pos:start="71:22" pos:end="71:27">qscale</name></expr>]</index><index pos:start="71:29" pos:end="71:31">[<expr pos:start="71:30" pos:end="71:30"><name pos:start="71:30" pos:end="71:30">i</name></expr>]</index></name> <operator pos:start="71:33" pos:end="71:33">=</operator> <operator pos:start="71:35" pos:end="71:35">(</operator><name pos:start="71:36" pos:end="71:38">int</name><operator pos:start="71:39" pos:end="71:39">)</operator><operator pos:start="71:40" pos:end="71:40">(</operator><operator pos:start="71:41" pos:end="71:41">(</operator><call pos:start="71:42" pos:end="71:54"><name pos:start="71:42" pos:end="71:51">uint64_t_C</name><argument_list pos:start="71:52" pos:end="71:54">(<argument pos:start="71:53" pos:end="71:53"><expr pos:start="71:53" pos:end="71:53"><literal type="number" pos:start="71:53" pos:end="71:53">1</literal></expr></argument>)</argument_list></call> <operator pos:start="71:56" pos:end="71:57">&lt;&lt;</operator> <operator pos:start="71:59" pos:end="71:59">(</operator><name pos:start="71:60" pos:end="71:69">QMAT_SHIFT</name> <operator pos:start="71:71" pos:end="71:71">+</operator> <literal type="number" pos:start="71:73" pos:end="71:74">14</literal><operator pos:start="71:75" pos:end="71:75">)</operator><operator pos:start="71:76" pos:end="71:76">)</operator> <operator pos:start="71:78" pos:end="71:78">/</operator> 

                                <operator pos:start="73:33" pos:end="73:33">(</operator><name pos:start="73:34" pos:end="73:45"><name pos:start="73:34" pos:end="73:42">aanscales</name><index pos:start="73:43" pos:end="73:45">[<expr pos:start="73:44" pos:end="73:44"><name pos:start="73:44" pos:end="73:44">i</name></expr>]</index></name> <operator pos:start="73:47" pos:end="73:47">*</operator> <name pos:start="73:49" pos:end="73:54">qscale</name> <operator pos:start="73:56" pos:end="73:56">*</operator> <name pos:start="73:58" pos:end="73:72"><name pos:start="73:58" pos:end="73:69">quant_matrix</name><index pos:start="73:70" pos:end="73:72">[<expr pos:start="73:71" pos:end="73:71"><name pos:start="73:71" pos:end="73:71">j</name></expr>]</index></name><operator pos:start="73:73" pos:end="73:73">)</operator><operator pos:start="73:74" pos:end="73:74">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="107:9">else <block pos:start="77:16" pos:end="107:9">{<block_content pos:start="79:13" pos:end="105:13">

            <for pos:start="79:13" pos:end="105:13">for<control pos:start="79:16" pos:end="79:29">(<init pos:start="79:17" pos:end="79:20"><expr pos:start="79:17" pos:end="79:19"><name pos:start="79:17" pos:end="79:17">i</name><operator pos:start="79:18" pos:end="79:18">=</operator><literal type="number" pos:start="79:19" pos:end="79:19">0</literal></expr>;</init><condition pos:start="79:21" pos:end="79:25"><expr pos:start="79:21" pos:end="79:24"><name pos:start="79:21" pos:end="79:21">i</name><operator pos:start="79:22" pos:end="79:22">&lt;</operator><literal type="number" pos:start="79:23" pos:end="79:24">64</literal></expr>;</condition><incr pos:start="79:26" pos:end="79:28"><expr pos:start="79:26" pos:end="79:28"><name pos:start="79:26" pos:end="79:26">i</name><operator pos:start="79:27" pos:end="79:28">++</operator></expr></incr>)</control> <block pos:start="79:31" pos:end="105:13">{<block_content pos:start="81:17" pos:end="103:101">

                <decl_stmt pos:start="81:17" pos:end="81:54"><decl pos:start="81:17" pos:end="81:53"><type pos:start="81:17" pos:end="81:25"><specifier pos:start="81:17" pos:end="81:21">const</specifier> <name pos:start="81:23" pos:end="81:25">int</name></type> <name pos:start="81:27" pos:end="81:27">j</name><init pos:start="81:28" pos:end="81:53">= <expr pos:start="81:30" pos:end="81:53"><name pos:start="81:30" pos:end="81:53"><name pos:start="81:30" pos:end="81:32">dsp</name><operator pos:start="81:33" pos:end="81:34">-&gt;</operator><name pos:start="81:35" pos:end="81:50">idct_permutation</name><index pos:start="81:51" pos:end="81:53">[<expr pos:start="81:52" pos:end="81:52"><name pos:start="81:52" pos:end="81:52">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="83:17" pos:end="91:18">/* We can safely suppose that 16 &lt;= quant_matrix[i] &lt;= 255

                   So 16           &lt;= qscale * quant_matrix[i]             &lt;= 7905

                   so (1&lt;&lt;19) / 16 &gt;= (1&lt;&lt;19) / (qscale * quant_matrix[i]) &gt;= (1&lt;&lt;19) / 7905

                   so 32768        &gt;= (1&lt;&lt;19) / (qscale * quant_matrix[i]) &gt;= 67

                */</comment>

                <expr_stmt pos:start="93:17" pos:end="93:100"><expr pos:start="93:17" pos:end="93:99"><name pos:start="93:17" pos:end="93:31"><name pos:start="93:17" pos:end="93:20">qmat</name><index pos:start="93:21" pos:end="93:28">[<expr pos:start="93:22" pos:end="93:27"><name pos:start="93:22" pos:end="93:27">qscale</name></expr>]</index><index pos:start="93:29" pos:end="93:31">[<expr pos:start="93:30" pos:end="93:30"><name pos:start="93:30" pos:end="93:30">i</name></expr>]</index></name> <operator pos:start="93:33" pos:end="93:33">=</operator> <operator pos:start="93:35" pos:end="93:35">(</operator><name pos:start="93:36" pos:end="93:38">int</name><operator pos:start="93:39" pos:end="93:39">)</operator><operator pos:start="93:40" pos:end="93:40">(</operator><operator pos:start="93:41" pos:end="93:41">(</operator><call pos:start="93:42" pos:end="93:54"><name pos:start="93:42" pos:end="93:51">uint64_t_C</name><argument_list pos:start="93:52" pos:end="93:54">(<argument pos:start="93:53" pos:end="93:53"><expr pos:start="93:53" pos:end="93:53"><literal type="number" pos:start="93:53" pos:end="93:53">1</literal></expr></argument>)</argument_list></call> <operator pos:start="93:56" pos:end="93:57">&lt;&lt;</operator> <name pos:start="93:59" pos:end="93:68">QMAT_SHIFT</name><operator pos:start="93:69" pos:end="93:69">)</operator> <operator pos:start="93:71" pos:end="93:71">/</operator> <operator pos:start="93:73" pos:end="93:73">(</operator><name pos:start="93:74" pos:end="93:79">qscale</name> <operator pos:start="93:81" pos:end="93:81">*</operator> <name pos:start="93:83" pos:end="93:97"><name pos:start="93:83" pos:end="93:94">quant_matrix</name><index pos:start="93:95" pos:end="93:97">[<expr pos:start="93:96" pos:end="93:96"><name pos:start="93:96" pos:end="93:96">j</name></expr>]</index></name><operator pos:start="93:98" pos:end="93:98">)</operator><operator pos:start="93:99" pos:end="93:99">)</operator></expr>;</expr_stmt>

<comment type="line" pos:start="95:1" pos:end="95:89">//                qmat  [qscale][i] = (1 &lt;&lt; QMAT_SHIFT_MMX) / (qscale * quant_matrix[i]);</comment>

                <expr_stmt pos:start="97:17" pos:end="97:90"><expr pos:start="97:17" pos:end="97:89"><name pos:start="97:17" pos:end="97:36"><name pos:start="97:17" pos:end="97:22">qmat16</name><index pos:start="97:23" pos:end="97:30">[<expr pos:start="97:24" pos:end="97:29"><name pos:start="97:24" pos:end="97:29">qscale</name></expr>]</index><index pos:start="97:31" pos:end="97:33">[<expr pos:start="97:32" pos:end="97:32"><literal type="number" pos:start="97:32" pos:end="97:32">0</literal></expr>]</index><index pos:start="97:34" pos:end="97:36">[<expr pos:start="97:35" pos:end="97:35"><name pos:start="97:35" pos:end="97:35">i</name></expr>]</index></name> <operator pos:start="97:38" pos:end="97:38">=</operator> <operator pos:start="97:40" pos:end="97:40">(</operator><literal type="number" pos:start="97:41" pos:end="97:41">1</literal> <operator pos:start="97:43" pos:end="97:44">&lt;&lt;</operator> <name pos:start="97:46" pos:end="97:59">QMAT_SHIFT_MMX</name><operator pos:start="97:60" pos:end="97:60">)</operator> <operator pos:start="97:62" pos:end="97:62">/</operator> <operator pos:start="97:64" pos:end="97:64">(</operator><name pos:start="97:65" pos:end="97:70">qscale</name> <operator pos:start="97:72" pos:end="97:72">*</operator> <name pos:start="97:74" pos:end="97:88"><name pos:start="97:74" pos:end="97:85">quant_matrix</name><index pos:start="97:86" pos:end="97:88">[<expr pos:start="97:87" pos:end="97:87"><name pos:start="97:87" pos:end="97:87">j</name></expr>]</index></name><operator pos:start="97:89" pos:end="97:89">)</operator></expr>;</expr_stmt>



                <if_stmt pos:start="101:17" pos:end="101:108"><if pos:start="101:17" pos:end="101:108">if<condition pos:start="101:19" pos:end="101:76">(<expr pos:start="101:20" pos:end="101:75"><name pos:start="101:20" pos:end="101:39"><name pos:start="101:20" pos:end="101:25">qmat16</name><index pos:start="101:26" pos:end="101:33">[<expr pos:start="101:27" pos:end="101:32"><name pos:start="101:27" pos:end="101:32">qscale</name></expr>]</index><index pos:start="101:34" pos:end="101:36">[<expr pos:start="101:35" pos:end="101:35"><literal type="number" pos:start="101:35" pos:end="101:35">0</literal></expr>]</index><index pos:start="101:37" pos:end="101:39">[<expr pos:start="101:38" pos:end="101:38"><name pos:start="101:38" pos:end="101:38">i</name></expr>]</index></name><operator pos:start="101:40" pos:end="101:41">==</operator><literal type="number" pos:start="101:42" pos:end="101:42">0</literal> <operator pos:start="101:44" pos:end="101:45">||</operator> <name pos:start="101:47" pos:end="101:66"><name pos:start="101:47" pos:end="101:52">qmat16</name><index pos:start="101:53" pos:end="101:60">[<expr pos:start="101:54" pos:end="101:59"><name pos:start="101:54" pos:end="101:59">qscale</name></expr>]</index><index pos:start="101:61" pos:end="101:63">[<expr pos:start="101:62" pos:end="101:62"><literal type="number" pos:start="101:62" pos:end="101:62">0</literal></expr>]</index><index pos:start="101:64" pos:end="101:66">[<expr pos:start="101:65" pos:end="101:65"><name pos:start="101:65" pos:end="101:65">i</name></expr>]</index></name><operator pos:start="101:67" pos:end="101:68">==</operator><literal type="number" pos:start="101:69" pos:end="101:71">128</literal><operator pos:start="101:72" pos:end="101:72">*</operator><literal type="number" pos:start="101:73" pos:end="101:75">256</literal></expr>)</condition><block type="pseudo" pos:start="101:78" pos:end="101:108"><block_content pos:start="101:78" pos:end="101:108"> <expr_stmt pos:start="101:78" pos:end="101:108"><expr pos:start="101:78" pos:end="101:107"><name pos:start="101:78" pos:end="101:97"><name pos:start="101:78" pos:end="101:83">qmat16</name><index pos:start="101:84" pos:end="101:91">[<expr pos:start="101:85" pos:end="101:90"><name pos:start="101:85" pos:end="101:90">qscale</name></expr>]</index><index pos:start="101:92" pos:end="101:94">[<expr pos:start="101:93" pos:end="101:93"><literal type="number" pos:start="101:93" pos:end="101:93">0</literal></expr>]</index><index pos:start="101:95" pos:end="101:97">[<expr pos:start="101:96" pos:end="101:96"><name pos:start="101:96" pos:end="101:96">i</name></expr>]</index></name><operator pos:start="101:98" pos:end="101:98">=</operator><literal type="number" pos:start="101:99" pos:end="101:101">128</literal><operator pos:start="101:102" pos:end="101:102">*</operator><literal type="number" pos:start="101:103" pos:end="101:106">256</literal><operator pos:start="101:106" pos:end="101:106">-</operator><literal type="number" pos:start="101:107" pos:end="101:107">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:101"><expr pos:start="103:17" pos:end="103:100"><name pos:start="103:17" pos:end="103:36"><name pos:start="103:17" pos:end="103:22">qmat16</name><index pos:start="103:23" pos:end="103:30">[<expr pos:start="103:24" pos:end="103:29"><name pos:start="103:24" pos:end="103:29">qscale</name></expr>]</index><index pos:start="103:31" pos:end="103:33">[<expr pos:start="103:32" pos:end="103:32"><literal type="number" pos:start="103:32" pos:end="103:32">1</literal></expr>]</index><index pos:start="103:34" pos:end="103:36">[<expr pos:start="103:35" pos:end="103:35"><name pos:start="103:35" pos:end="103:35">i</name></expr>]</index></name><operator pos:start="103:37" pos:end="103:37">=</operator> <call pos:start="103:39" pos:end="103:100"><name pos:start="103:39" pos:end="103:49">ROUNDED_DIV</name><argument_list pos:start="103:50" pos:end="103:100">(<argument pos:start="103:51" pos:end="103:77"><expr pos:start="103:51" pos:end="103:77"><name pos:start="103:51" pos:end="103:54">bias</name><operator pos:start="103:55" pos:end="103:56">&lt;&lt;</operator><operator pos:start="103:57" pos:end="103:57">(</operator><literal type="number" pos:start="103:58" pos:end="103:60">16</literal><operator pos:start="103:60" pos:end="103:60">-</operator><name pos:start="103:61" pos:end="103:76">QUANT_BIAS_SHIFT</name><operator pos:start="103:77" pos:end="103:77">)</operator></expr></argument>, <argument pos:start="103:80" pos:end="103:99"><expr pos:start="103:80" pos:end="103:99"><name pos:start="103:80" pos:end="103:99"><name pos:start="103:80" pos:end="103:85">qmat16</name><index pos:start="103:86" pos:end="103:93">[<expr pos:start="103:87" pos:end="103:92"><name pos:start="103:87" pos:end="103:92">qscale</name></expr>]</index><index pos:start="103:94" pos:end="103:96">[<expr pos:start="103:95" pos:end="103:95"><literal type="number" pos:start="103:95" pos:end="103:95">0</literal></expr>]</index><index pos:start="103:97" pos:end="103:99">[<expr pos:start="103:98" pos:end="103:98"><name pos:start="103:98" pos:end="103:98">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        

        <for pos:start="111:9" pos:end="119:9">for<control pos:start="111:12" pos:end="111:31">(<init pos:start="111:13" pos:end="111:20"><expr pos:start="111:13" pos:end="111:19"><name pos:start="111:13" pos:end="111:13">i</name><operator pos:start="111:14" pos:end="111:14">=</operator><name pos:start="111:15" pos:end="111:19">intra</name></expr>;</init> <condition pos:start="111:22" pos:end="111:26"><expr pos:start="111:22" pos:end="111:25"><name pos:start="111:22" pos:end="111:22">i</name><operator pos:start="111:23" pos:end="111:23">&lt;</operator><literal type="number" pos:start="111:24" pos:end="111:25">64</literal></expr>;</condition> <incr pos:start="111:28" pos:end="111:30"><expr pos:start="111:28" pos:end="111:30"><name pos:start="111:28" pos:end="111:28">i</name><operator pos:start="111:29" pos:end="111:30">++</operator></expr></incr>)</control><block pos:start="111:32" pos:end="119:9">{<block_content pos:start="113:13" pos:end="117:13">

            <while pos:start="113:13" pos:end="117:13">while<condition pos:start="113:18" pos:end="113:66">(<expr pos:start="113:19" pos:end="113:65"><operator pos:start="113:19" pos:end="113:19">(</operator><operator pos:start="113:20" pos:end="113:20">(</operator><literal type="number" pos:start="113:21" pos:end="113:26">8191LL</literal> <operator pos:start="113:28" pos:end="113:28">*</operator> <name pos:start="113:30" pos:end="113:44"><name pos:start="113:30" pos:end="113:33">qmat</name><index pos:start="113:34" pos:end="113:41">[<expr pos:start="113:35" pos:end="113:40"><name pos:start="113:35" pos:end="113:40">qscale</name></expr>]</index><index pos:start="113:42" pos:end="113:44">[<expr pos:start="113:43" pos:end="113:43"><name pos:start="113:43" pos:end="113:43">i</name></expr>]</index></name><operator pos:start="113:45" pos:end="113:45">)</operator> <operator pos:start="113:47" pos:end="113:48">&gt;&gt;</operator> <name pos:start="113:50" pos:end="113:54">shift</name><operator pos:start="113:55" pos:end="113:55">)</operator> <operator pos:start="113:57" pos:end="113:57">&gt;</operator> <name pos:start="113:59" pos:end="113:65">INT_MAX</name></expr>)</condition><block pos:start="113:67" pos:end="117:13">{<block_content pos:start="115:17" pos:end="115:24"> 

                <expr_stmt pos:start="115:17" pos:end="115:24"><expr pos:start="115:17" pos:end="115:23"><name pos:start="115:17" pos:end="115:21">shift</name><operator pos:start="115:22" pos:end="115:23">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <if_stmt pos:start="123:5" pos:end="127:5"><if pos:start="123:5" pos:end="127:5">if<condition pos:start="123:7" pos:end="123:13">(<expr pos:start="123:8" pos:end="123:12"><name pos:start="123:8" pos:end="123:12">shift</name></expr>)</condition><block pos:start="123:14" pos:end="127:5">{<block_content pos:start="125:9" pos:end="125:117">

        <expr_stmt pos:start="125:9" pos:end="125:117"><expr pos:start="125:9" pos:end="125:116"><call pos:start="125:9" pos:end="125:116"><name pos:start="125:9" pos:end="125:14">av_log</name><argument_list pos:start="125:15" pos:end="125:116">(<argument pos:start="125:16" pos:end="125:19"><expr pos:start="125:16" pos:end="125:19"><name pos:start="125:16" pos:end="125:19">NULL</name></expr></argument>, <argument pos:start="125:22" pos:end="125:32"><expr pos:start="125:22" pos:end="125:32"><name pos:start="125:22" pos:end="125:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="125:35" pos:end="125:95"><expr pos:start="125:35" pos:end="125:95"><literal type="string" pos:start="125:35" pos:end="125:95">"Warning, QMAT_SHIFT is larger then %d, overflows possible\n"</literal></expr></argument>, <argument pos:start="125:98" pos:end="125:115"><expr pos:start="125:98" pos:end="125:115"><name pos:start="125:98" pos:end="125:107">QMAT_SHIFT</name> <operator pos:start="125:109" pos:end="125:109">-</operator> <name pos:start="125:111" pos:end="125:115">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></decl></decl_stmt>
</unit>
