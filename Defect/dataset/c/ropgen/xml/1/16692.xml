<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16692.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">handle_utimensat</name><parameter_list pos:start="1:28" pos:end="3:55">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:37">FsContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">ctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:61"><decl pos:start="1:45" pos:end="1:61"><type pos:start="1:45" pos:end="1:61"><name pos:start="1:45" pos:end="1:52">V9fsPath</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:61">fs_path</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:54"><decl pos:start="3:29" pos:end="3:54"><type pos:start="3:29" pos:end="3:54"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:49"><name pos:start="3:35" pos:end="3:40">struct</name> <name pos:start="3:42" pos:end="3:49">timespec</name></name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">buf</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:15">

    <decl_stmt pos:start="7:5" pos:end="10:0"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="9:1" pos:end="9:23">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:23">CONFIG_UTIMENSAT</name></cpp:ifdef>

    <decl_stmt pos:start="11:5" pos:end="11:11"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:66"><decl pos:start="13:5" pos:end="13:65"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:22">handle_data</name></name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:28">data</name> <init pos:start="13:30" pos:end="13:65">= <expr pos:start="13:32" pos:end="13:65"><operator pos:start="13:32" pos:end="13:32">(</operator>struct <name pos:start="13:40" pos:end="13:50">handle_data</name> <operator pos:start="13:52" pos:end="13:52">*</operator><operator pos:start="13:53" pos:end="13:53">)</operator><name pos:start="13:54" pos:end="13:65"><name pos:start="13:54" pos:end="13:56">ctx</name><operator pos:start="13:57" pos:end="13:58">-&gt;</operator><name pos:start="13:59" pos:end="13:65">private</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:66"><expr pos:start="17:5" pos:end="17:65"><name pos:start="17:5" pos:end="17:6">fd</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:65"><name pos:start="17:10" pos:end="17:23">open_by_handle</name><argument_list pos:start="17:24" pos:end="17:65">(<argument pos:start="17:25" pos:end="17:37"><expr pos:start="17:25" pos:end="17:37"><name pos:start="17:25" pos:end="17:37"><name pos:start="17:25" pos:end="17:28">data</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:37">mountfd</name></name></expr></argument>, <argument pos:start="17:40" pos:end="17:52"><expr pos:start="17:40" pos:end="17:52"><name pos:start="17:40" pos:end="17:52"><name pos:start="17:40" pos:end="17:46">fs_path</name><operator pos:start="17:47" pos:end="17:48">-&gt;</operator><name pos:start="17:49" pos:end="17:52">data</name></name></expr></argument>, <argument pos:start="17:55" pos:end="17:64"><expr pos:start="17:55" pos:end="17:64"><name pos:start="17:55" pos:end="17:64">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:15">(<expr pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:10">fd</name> <operator pos:start="19:12" pos:end="19:12">&lt;</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>)</condition> <block pos:start="19:17" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><name pos:start="21:16" pos:end="21:17">fd</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:27"><name pos:start="25:11" pos:end="25:18">futimens</name><argument_list pos:start="25:19" pos:end="25:27">(<argument pos:start="25:20" pos:end="25:21"><expr pos:start="25:20" pos:end="25:21"><name pos:start="25:20" pos:end="25:21">fd</name></expr></argument>, <argument pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:26">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="30:0"><expr pos:start="27:5" pos:end="27:13"><call pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:9">close</name><argument_list pos:start="27:10" pos:end="27:13">(<argument pos:start="27:11" pos:end="27:12"><expr pos:start="27:11" pos:end="27:12"><name pos:start="27:11" pos:end="27:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="29:1" pos:end="29:5">#<cpp:directive pos:start="29:2" pos:end="29:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="31:5" pos:end="31:13"><expr pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <operator pos:start="31:11" pos:end="31:11">-</operator><literal type="number" pos:start="31:12" pos:end="31:12">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="36:0"><expr pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:9">errno</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <name pos:start="33:13" pos:end="33:18">ENOSYS</name></expr>;</expr_stmt>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

    <return pos:start="37:5" pos:end="37:15">return <expr pos:start="37:12" pos:end="37:14"><name pos:start="37:12" pos:end="37:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
