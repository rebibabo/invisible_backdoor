<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2444.c" pos:tabs="8"><function pos:start="1:1" pos:end="191:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">dvbsub_parse_clut_segment</name><parameter_list pos:start="1:37" pos:end="3:73">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:58"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">avctx</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:58"><decl pos:start="3:41" pos:end="3:58"><type pos:start="3:41" pos:end="3:58"><specifier pos:start="3:41" pos:end="3:45">const</specifier> <name pos:start="3:47" pos:end="3:53">uint8_t</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:58">buf</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:72"><decl pos:start="3:61" pos:end="3:72"><type pos:start="3:61" pos:end="3:72"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:72">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="191:1">{<block_content pos:start="7:5" pos:end="189:13">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">DVBSubContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">ctx</name> <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:26">buf_end</name> <init pos:start="11:28" pos:end="11:43">= <expr pos:start="11:30" pos:end="11:43"><name pos:start="11:30" pos:end="11:32">buf</name> <operator pos:start="11:34" pos:end="11:34">+</operator> <name pos:start="11:36" pos:end="11:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:18">clut_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">version</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">DVBSubCLUT</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:20">clut</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:37"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">entry_id</name></decl>, <decl pos:start="19:19" pos:end="19:23"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:19" pos:end="19:23">depth</name></decl> , <decl pos:start="19:27" pos:end="19:36"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:27" pos:end="19:36">full_range</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">y</name></decl>, <decl pos:start="21:12" pos:end="21:13"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:13">cr</name></decl>, <decl pos:start="21:16" pos:end="21:17"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:16" pos:end="21:17">cb</name></decl>, <decl pos:start="21:20" pos:end="21:24"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:20" pos:end="21:24">alpha</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:37"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">r</name></decl>, <decl pos:start="23:12" pos:end="23:12"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:12">g</name></decl>, <decl pos:start="23:15" pos:end="23:15"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:15" pos:end="23:15">b</name></decl>, <decl pos:start="23:18" pos:end="23:22"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:18" pos:end="23:22">r_add</name></decl>, <decl pos:start="23:25" pos:end="23:29"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:25" pos:end="23:29">g_add</name></decl>, <decl pos:start="23:32" pos:end="23:36"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:32" pos:end="23:36">b_add</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:41"><expr pos:start="27:5" pos:end="27:40"><call pos:start="27:5" pos:end="27:40"><name pos:start="27:5" pos:end="27:11">av_dlog</name><argument_list pos:start="27:12" pos:end="27:40">(<argument pos:start="27:13" pos:end="27:17"><expr pos:start="27:13" pos:end="27:17"><name pos:start="27:13" pos:end="27:17">avctx</name></expr></argument>, <argument pos:start="27:20" pos:end="27:39"><expr pos:start="27:20" pos:end="27:39"><literal type="string" pos:start="27:20" pos:end="27:39">"DVB clut packet:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="31:5" pos:end="39:5">for <control pos:start="31:9" pos:end="31:32">(<init pos:start="31:10" pos:end="31:13"><expr pos:start="31:10" pos:end="31:12"><name pos:start="31:10" pos:end="31:10">i</name><operator pos:start="31:11" pos:end="31:11">=</operator><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</init> <condition pos:start="31:15" pos:end="31:27"><expr pos:start="31:15" pos:end="31:26"><name pos:start="31:15" pos:end="31:15">i</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <name pos:start="31:19" pos:end="31:26">buf_size</name></expr>;</condition> <incr pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:29">i</name><operator pos:start="31:30" pos:end="31:31">++</operator></expr></incr>)</control> <block pos:start="31:34" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:33">

        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><call pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:15">av_dlog</name><argument_list pos:start="33:16" pos:end="33:39">(<argument pos:start="33:17" pos:end="33:21"><expr pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:21">avctx</name></expr></argument>, <argument pos:start="33:24" pos:end="33:30"><expr pos:start="33:24" pos:end="33:30"><literal type="string" pos:start="33:24" pos:end="33:30">"%02x "</literal></expr></argument>, <argument pos:start="33:33" pos:end="33:38"><expr pos:start="33:33" pos:end="33:38"><name pos:start="33:33" pos:end="33:38"><name pos:start="33:33" pos:end="33:35">buf</name><index pos:start="33:36" pos:end="33:38">[<expr pos:start="33:37" pos:end="33:37"><name pos:start="33:37" pos:end="33:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:33"><if pos:start="35:9" pos:end="37:33">if <condition pos:start="35:12" pos:end="35:25">(<expr pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:13">i</name> <operator pos:start="35:15" pos:end="35:15">%</operator> <literal type="number" pos:start="35:17" pos:end="35:18">16</literal> <operator pos:start="35:20" pos:end="35:21">==</operator> <literal type="number" pos:start="35:23" pos:end="35:24">15</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:33"><block_content pos:start="37:13" pos:end="37:33">

            <expr_stmt pos:start="37:13" pos:end="37:33"><expr pos:start="37:13" pos:end="37:32"><call pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:19">av_dlog</name><argument_list pos:start="37:20" pos:end="37:32">(<argument pos:start="37:21" pos:end="37:25"><expr pos:start="37:21" pos:end="37:25"><name pos:start="37:21" pos:end="37:25">avctx</name></expr></argument>, <argument pos:start="37:28" pos:end="37:31"><expr pos:start="37:28" pos:end="37:31"><literal type="string" pos:start="37:28" pos:end="37:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="43:5" pos:end="45:29"><if pos:start="43:5" pos:end="45:29">if <condition pos:start="43:8" pos:end="43:15">(<expr pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:9">i</name> <operator pos:start="43:11" pos:end="43:11">%</operator> <literal type="number" pos:start="43:13" pos:end="43:14">16</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:29"><block_content pos:start="45:9" pos:end="45:29">

        <expr_stmt pos:start="45:9" pos:end="45:29"><expr pos:start="45:9" pos:end="45:28"><call pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:15">av_dlog</name><argument_list pos:start="45:16" pos:end="45:28">(<argument pos:start="45:17" pos:end="45:21"><expr pos:start="45:17" pos:end="45:21"><name pos:start="45:17" pos:end="45:21">avctx</name></expr></argument>, <argument pos:start="45:24" pos:end="45:27"><expr pos:start="45:24" pos:end="45:27"><literal type="string" pos:start="45:24" pos:end="45:27">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:21"><expr pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:11">clut_id</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <operator pos:start="49:15" pos:end="49:15">*</operator><name pos:start="49:16" pos:end="49:18">buf</name><operator pos:start="49:19" pos:end="49:20">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:11">version</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <operator pos:start="51:15" pos:end="51:15">(</operator><operator pos:start="51:16" pos:end="51:16">(</operator><operator pos:start="51:17" pos:end="51:17">*</operator><name pos:start="51:18" pos:end="51:20">buf</name><operator pos:start="51:21" pos:end="51:21">)</operator><operator pos:start="51:22" pos:end="51:23">&gt;&gt;</operator><literal type="number" pos:start="51:24" pos:end="51:24">4</literal><operator pos:start="51:25" pos:end="51:25">)</operator><operator pos:start="51:26" pos:end="51:26">&amp;</operator><literal type="number" pos:start="51:27" pos:end="51:28">15</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:13"><expr pos:start="53:5" pos:end="53:12"><name pos:start="53:5" pos:end="53:7">buf</name> <operator pos:start="53:9" pos:end="53:10">+=</operator> <literal type="number" pos:start="53:12" pos:end="53:12">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:8">clut</name> <operator pos:start="57:10" pos:end="57:10">=</operator> <call pos:start="57:12" pos:end="57:33"><name pos:start="57:12" pos:end="57:19">get_clut</name><argument_list pos:start="57:20" pos:end="57:33">(<argument pos:start="57:21" pos:end="57:23"><expr pos:start="57:21" pos:end="57:23"><name pos:start="57:21" pos:end="57:23">ctx</name></expr></argument>, <argument pos:start="57:26" pos:end="57:32"><expr pos:start="57:26" pos:end="57:32"><name pos:start="57:26" pos:end="57:32">clut_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="83:5"><if pos:start="61:5" pos:end="83:5">if <condition pos:start="61:8" pos:end="61:14">(<expr pos:start="61:9" pos:end="61:13"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:13">clut</name></expr>)</condition> <block pos:start="61:16" pos:end="83:5">{<block_content pos:start="63:9" pos:end="81:30">

        <expr_stmt pos:start="63:9" pos:end="63:45"><expr pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:12">clut</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <call pos:start="63:16" pos:end="63:44"><name pos:start="63:16" pos:end="63:24">av_malloc</name><argument_list pos:start="63:25" pos:end="63:44">(<argument pos:start="63:26" pos:end="63:43"><expr pos:start="63:26" pos:end="63:43"><sizeof pos:start="63:26" pos:end="63:43">sizeof<argument_list pos:start="63:32" pos:end="63:43">(<argument pos:start="63:33" pos:end="63:42"><expr pos:start="63:33" pos:end="63:42"><name pos:start="63:33" pos:end="63:42">DVBSubCLUT</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>





        <expr_stmt pos:start="69:9" pos:end="69:56"><expr pos:start="69:9" pos:end="69:55"><call pos:start="69:9" pos:end="69:55"><name pos:start="69:9" pos:end="69:14">memcpy</name><argument_list pos:start="69:15" pos:end="69:55">(<argument pos:start="69:16" pos:end="69:19"><expr pos:start="69:16" pos:end="69:19"><name pos:start="69:16" pos:end="69:19">clut</name></expr></argument>, <argument pos:start="69:22" pos:end="69:34"><expr pos:start="69:22" pos:end="69:34"><operator pos:start="69:22" pos:end="69:22">&amp;</operator><name pos:start="69:23" pos:end="69:34">default_clut</name></expr></argument>, <argument pos:start="69:37" pos:end="69:54"><expr pos:start="69:37" pos:end="69:54"><sizeof pos:start="69:37" pos:end="69:54">sizeof<argument_list pos:start="69:43" pos:end="69:54">(<argument pos:start="69:44" pos:end="69:53"><expr pos:start="69:44" pos:end="69:53"><name pos:start="69:44" pos:end="69:53">DVBSubCLUT</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:27"><expr pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:12">clut</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:16">id</name></name> <operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:26">clut_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:27"><expr pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:12">clut</name><operator pos:start="75:13" pos:end="75:14">-&gt;</operator><name pos:start="75:15" pos:end="75:21">version</name></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <operator pos:start="75:25" pos:end="75:25">-</operator><literal type="number" pos:start="75:26" pos:end="75:26">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:36"><expr pos:start="79:9" pos:end="79:35"><name pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:12">clut</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:18">next</name></name> <operator pos:start="79:20" pos:end="79:20">=</operator> <name pos:start="79:22" pos:end="79:35"><name pos:start="79:22" pos:end="79:24">ctx</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:35">clut_list</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:30"><expr pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:11">ctx</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:22">clut_list</name></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:29">clut</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="187:5"><if pos:start="87:5" pos:end="187:5">if <condition pos:start="87:8" pos:end="87:33">(<expr pos:start="87:9" pos:end="87:32"><name pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:12">clut</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:21">version</name></name> <operator pos:start="87:23" pos:end="87:24">!=</operator> <name pos:start="87:26" pos:end="87:32">version</name></expr>)</condition> <block pos:start="87:35" pos:end="187:5">{<block_content pos:start="91:5" pos:end="185:5">



    <expr_stmt pos:start="91:5" pos:end="91:28"><expr pos:start="91:5" pos:end="91:27"><name pos:start="91:5" pos:end="91:17"><name pos:start="91:5" pos:end="91:8">clut</name><operator pos:start="91:9" pos:end="91:10">-&gt;</operator><name pos:start="91:11" pos:end="91:17">version</name></name> <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:27">version</name></expr>;</expr_stmt>



    <while pos:start="95:5" pos:end="185:5">while <condition pos:start="95:11" pos:end="95:29">(<expr pos:start="95:12" pos:end="95:28"><name pos:start="95:12" pos:end="95:14">buf</name> <operator pos:start="95:16" pos:end="95:16">+</operator> <literal type="number" pos:start="95:18" pos:end="95:18">4</literal> <operator pos:start="95:20" pos:end="95:20">&lt;</operator> <name pos:start="95:22" pos:end="95:28">buf_end</name></expr>)</condition> <block pos:start="95:31" pos:end="185:5">{<block_content pos:start="97:9" pos:end="183:62">

        <expr_stmt pos:start="97:9" pos:end="97:26"><expr pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:16">entry_id</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <operator pos:start="97:20" pos:end="97:20">*</operator><name pos:start="97:21" pos:end="97:23">buf</name><operator pos:start="97:24" pos:end="97:25">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:30"><expr pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:13">depth</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <operator pos:start="101:17" pos:end="101:17">(</operator><operator pos:start="101:18" pos:end="101:18">*</operator><name pos:start="101:19" pos:end="101:21">buf</name><operator pos:start="101:22" pos:end="101:22">)</operator> <operator pos:start="101:24" pos:end="101:24">&amp;</operator> <literal type="number" pos:start="101:26" pos:end="101:29">0xe0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:23">(<expr pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:17">depth</name> <operator pos:start="105:19" pos:end="105:20">==</operator> <literal type="number" pos:start="105:22" pos:end="105:22">0</literal></expr>)</condition> <block pos:start="105:25" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:21">

            <expr_stmt pos:start="107:13" pos:end="107:76"><expr pos:start="107:13" pos:end="107:75"><call pos:start="107:13" pos:end="107:75"><name pos:start="107:13" pos:end="107:18">av_log</name><argument_list pos:start="107:19" pos:end="107:75">(<argument pos:start="107:20" pos:end="107:24"><expr pos:start="107:20" pos:end="107:24"><name pos:start="107:20" pos:end="107:24">avctx</name></expr></argument>, <argument pos:start="107:27" pos:end="107:38"><expr pos:start="107:27" pos:end="107:38"><name pos:start="107:27" pos:end="107:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:41" pos:end="107:68"><expr pos:start="107:41" pos:end="107:68"><literal type="string" pos:start="107:41" pos:end="107:68">"Invalid clut depth 0x%x!\n"</literal></expr></argument>, <argument pos:start="107:71" pos:end="107:74"><expr pos:start="107:71" pos:end="107:74"><operator pos:start="107:71" pos:end="107:71">*</operator><name pos:start="107:72" pos:end="107:74">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="109:13" pos:end="109:21">return <expr pos:start="109:20" pos:end="109:20"><literal type="number" pos:start="109:20" pos:end="109:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:34"><expr pos:start="115:9" pos:end="115:33"><name pos:start="115:9" pos:end="115:18">full_range</name> <operator pos:start="115:20" pos:end="115:20">=</operator> <operator pos:start="115:22" pos:end="115:22">(</operator><operator pos:start="115:23" pos:end="115:23">*</operator><name pos:start="115:24" pos:end="115:26">buf</name><operator pos:start="115:27" pos:end="115:28">++</operator><operator pos:start="115:29" pos:end="115:29">)</operator> <operator pos:start="115:31" pos:end="115:31">&amp;</operator> <literal type="number" pos:start="115:33" pos:end="115:33">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="119:9" pos:end="143:9"><if pos:start="119:9" pos:end="129:9">if <condition pos:start="119:12" pos:end="119:23">(<expr pos:start="119:13" pos:end="119:22"><name pos:start="119:13" pos:end="119:22">full_range</name></expr>)</condition> <block pos:start="119:25" pos:end="129:9">{<block_content pos:start="121:13" pos:end="127:27">

            <expr_stmt pos:start="121:13" pos:end="121:23"><expr pos:start="121:13" pos:end="121:22"><name pos:start="121:13" pos:end="121:13">y</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <operator pos:start="121:17" pos:end="121:17">*</operator><name pos:start="121:18" pos:end="121:20">buf</name><operator pos:start="121:21" pos:end="121:22">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:24"><expr pos:start="123:13" pos:end="123:23"><name pos:start="123:13" pos:end="123:14">cr</name> <operator pos:start="123:16" pos:end="123:16">=</operator> <operator pos:start="123:18" pos:end="123:18">*</operator><name pos:start="123:19" pos:end="123:21">buf</name><operator pos:start="123:22" pos:end="123:23">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:24"><expr pos:start="125:13" pos:end="125:23"><name pos:start="125:13" pos:end="125:14">cb</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <operator pos:start="125:18" pos:end="125:18">*</operator><name pos:start="125:19" pos:end="125:21">buf</name><operator pos:start="125:22" pos:end="125:23">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:27"><expr pos:start="127:13" pos:end="127:26"><name pos:start="127:13" pos:end="127:17">alpha</name> <operator pos:start="127:19" pos:end="127:19">=</operator> <operator pos:start="127:21" pos:end="127:21">*</operator><name pos:start="127:22" pos:end="127:24">buf</name><operator pos:start="127:25" pos:end="127:26">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="129:11" pos:end="143:9">else <block pos:start="129:16" pos:end="143:9">{<block_content pos:start="131:13" pos:end="141:21">

            <expr_stmt pos:start="131:13" pos:end="131:30"><expr pos:start="131:13" pos:end="131:29"><name pos:start="131:13" pos:end="131:13">y</name> <operator pos:start="131:15" pos:end="131:15">=</operator> <name pos:start="131:17" pos:end="131:22"><name pos:start="131:17" pos:end="131:19">buf</name><index pos:start="131:20" pos:end="131:22">[<expr pos:start="131:21" pos:end="131:21"><literal type="number" pos:start="131:21" pos:end="131:21">0</literal></expr>]</index></name> <operator pos:start="131:24" pos:end="131:24">&amp;</operator> <literal type="number" pos:start="131:26" pos:end="131:29">0xfc</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:66"><expr pos:start="133:13" pos:end="133:65"><name pos:start="133:13" pos:end="133:14">cr</name> <operator pos:start="133:16" pos:end="133:16">=</operator> <operator pos:start="133:18" pos:end="133:18">(</operator><operator pos:start="133:19" pos:end="133:19">(</operator><operator pos:start="133:20" pos:end="133:20">(</operator><name pos:start="133:21" pos:end="133:26"><name pos:start="133:21" pos:end="133:23">buf</name><index pos:start="133:24" pos:end="133:26">[<expr pos:start="133:25" pos:end="133:25"><literal type="number" pos:start="133:25" pos:end="133:25">0</literal></expr>]</index></name> <operator pos:start="133:28" pos:end="133:28">&amp;</operator> <literal type="number" pos:start="133:30" pos:end="133:30">3</literal><operator pos:start="133:31" pos:end="133:31">)</operator> <operator pos:start="133:33" pos:end="133:34">&lt;&lt;</operator> <literal type="number" pos:start="133:36" pos:end="133:36">2</literal><operator pos:start="133:37" pos:end="133:37">)</operator> <operator pos:start="133:39" pos:end="133:39">|</operator> <operator pos:start="133:41" pos:end="133:41">(</operator><operator pos:start="133:42" pos:end="133:42">(</operator><name pos:start="133:43" pos:end="133:48"><name pos:start="133:43" pos:end="133:45">buf</name><index pos:start="133:46" pos:end="133:48">[<expr pos:start="133:47" pos:end="133:47"><literal type="number" pos:start="133:47" pos:end="133:47">1</literal></expr>]</index></name> <operator pos:start="133:50" pos:end="133:51">&gt;&gt;</operator> <literal type="number" pos:start="133:53" pos:end="133:53">6</literal><operator pos:start="133:54" pos:end="133:54">)</operator> <operator pos:start="133:56" pos:end="133:56">&amp;</operator> <literal type="number" pos:start="133:58" pos:end="133:58">3</literal><operator pos:start="133:59" pos:end="133:59">)</operator><operator pos:start="133:60" pos:end="133:60">)</operator> <operator pos:start="133:62" pos:end="133:63">&lt;&lt;</operator> <literal type="number" pos:start="133:65" pos:end="133:65">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:38"><expr pos:start="135:13" pos:end="135:37"><name pos:start="135:13" pos:end="135:14">cb</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <operator pos:start="135:18" pos:end="135:18">(</operator><name pos:start="135:19" pos:end="135:24"><name pos:start="135:19" pos:end="135:21">buf</name><index pos:start="135:22" pos:end="135:24">[<expr pos:start="135:23" pos:end="135:23"><literal type="number" pos:start="135:23" pos:end="135:23">1</literal></expr>]</index></name> <operator pos:start="135:26" pos:end="135:27">&lt;&lt;</operator> <literal type="number" pos:start="135:29" pos:end="135:29">2</literal><operator pos:start="135:30" pos:end="135:30">)</operator> <operator pos:start="135:32" pos:end="135:32">&amp;</operator> <literal type="number" pos:start="135:34" pos:end="135:37">0xf0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:41"><expr pos:start="137:13" pos:end="137:40"><name pos:start="137:13" pos:end="137:17">alpha</name> <operator pos:start="137:19" pos:end="137:19">=</operator> <operator pos:start="137:21" pos:end="137:21">(</operator><name pos:start="137:22" pos:end="137:27"><name pos:start="137:22" pos:end="137:24">buf</name><index pos:start="137:25" pos:end="137:27">[<expr pos:start="137:26" pos:end="137:26"><literal type="number" pos:start="137:26" pos:end="137:26">1</literal></expr>]</index></name> <operator pos:start="137:29" pos:end="137:30">&lt;&lt;</operator> <literal type="number" pos:start="137:32" pos:end="137:32">6</literal><operator pos:start="137:33" pos:end="137:33">)</operator> <operator pos:start="137:35" pos:end="137:35">&amp;</operator> <literal type="number" pos:start="137:37" pos:end="137:40">0xc0</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="141:13" pos:end="141:21"><expr pos:start="141:13" pos:end="141:20"><name pos:start="141:13" pos:end="141:15">buf</name> <operator pos:start="141:17" pos:end="141:18">+=</operator> <literal type="number" pos:start="141:20" pos:end="141:20">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="147:9" pos:end="149:25"><if pos:start="147:9" pos:end="149:25">if <condition pos:start="147:12" pos:end="147:19">(<expr pos:start="147:13" pos:end="147:18"><name pos:start="147:13" pos:end="147:13">y</name> <operator pos:start="147:15" pos:end="147:16">==</operator> <literal type="number" pos:start="147:18" pos:end="147:18">0</literal></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:25"><block_content pos:start="149:13" pos:end="149:25">

            <expr_stmt pos:start="149:13" pos:end="149:25"><expr pos:start="149:13" pos:end="149:24"><name pos:start="149:13" pos:end="149:17">alpha</name> <operator pos:start="149:19" pos:end="149:19">=</operator> <literal type="number" pos:start="149:21" pos:end="149:24">0xff</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:33"><expr pos:start="153:9" pos:end="153:32"><call pos:start="153:9" pos:end="153:32"><name pos:start="153:9" pos:end="153:24">YUV_TO_RGB1_CCIR</name><argument_list pos:start="153:25" pos:end="153:32">(<argument pos:start="153:26" pos:end="153:27"><expr pos:start="153:26" pos:end="153:27"><name pos:start="153:26" pos:end="153:27">cb</name></expr></argument>, <argument pos:start="153:30" pos:end="153:31"><expr pos:start="153:30" pos:end="153:31"><name pos:start="153:30" pos:end="153:31">cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:37"><expr pos:start="155:9" pos:end="155:36"><call pos:start="155:9" pos:end="155:36"><name pos:start="155:9" pos:end="155:24">YUV_TO_RGB2_CCIR</name><argument_list pos:start="155:25" pos:end="155:36">(<argument pos:start="155:26" pos:end="155:26"><expr pos:start="155:26" pos:end="155:26"><name pos:start="155:26" pos:end="155:26">r</name></expr></argument>, <argument pos:start="155:29" pos:end="155:29"><expr pos:start="155:29" pos:end="155:29"><name pos:start="155:29" pos:end="155:29">g</name></expr></argument>, <argument pos:start="155:32" pos:end="155:32"><expr pos:start="155:32" pos:end="155:32"><name pos:start="155:32" pos:end="155:32">b</name></expr></argument>, <argument pos:start="155:35" pos:end="155:35"><expr pos:start="155:35" pos:end="155:35"><name pos:start="155:35" pos:end="155:35">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="159:9" pos:end="159:79"><expr pos:start="159:9" pos:end="159:78"><call pos:start="159:9" pos:end="159:78"><name pos:start="159:9" pos:end="159:15">av_dlog</name><argument_list pos:start="159:16" pos:end="159:78">(<argument pos:start="159:17" pos:end="159:21"><expr pos:start="159:17" pos:end="159:21"><name pos:start="159:17" pos:end="159:21">avctx</name></expr></argument>, <argument pos:start="159:24" pos:end="159:51"><expr pos:start="159:24" pos:end="159:51"><literal type="string" pos:start="159:24" pos:end="159:51">"clut %d := (%d,%d,%d,%d)\n"</literal></expr></argument>, <argument pos:start="159:54" pos:end="159:61"><expr pos:start="159:54" pos:end="159:61"><name pos:start="159:54" pos:end="159:61">entry_id</name></expr></argument>, <argument pos:start="159:64" pos:end="159:64"><expr pos:start="159:64" pos:end="159:64"><name pos:start="159:64" pos:end="159:64">r</name></expr></argument>, <argument pos:start="159:67" pos:end="159:67"><expr pos:start="159:67" pos:end="159:67"><name pos:start="159:67" pos:end="159:67">g</name></expr></argument>, <argument pos:start="159:70" pos:end="159:70"><expr pos:start="159:70" pos:end="159:70"><name pos:start="159:70" pos:end="159:70">b</name></expr></argument>, <argument pos:start="159:73" pos:end="159:77"><expr pos:start="159:73" pos:end="159:77"><name pos:start="159:73" pos:end="159:77">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="161:9" pos:end="169:9"><if pos:start="161:9" pos:end="169:9">if <condition pos:start="161:12" pos:end="161:71">(<expr pos:start="161:13" pos:end="161:70"><operator pos:start="161:13" pos:end="161:13">!</operator><operator pos:start="161:14" pos:end="161:14">!</operator><operator pos:start="161:15" pos:end="161:15">(</operator><name pos:start="161:16" pos:end="161:20">depth</name> <operator pos:start="161:22" pos:end="161:22">&amp;</operator> <literal type="number" pos:start="161:24" pos:end="161:27">0x80</literal><operator pos:start="161:28" pos:end="161:28">)</operator> <operator pos:start="161:30" pos:end="161:30">+</operator> <operator pos:start="161:32" pos:end="161:32">!</operator><operator pos:start="161:33" pos:end="161:33">!</operator><operator pos:start="161:34" pos:end="161:34">(</operator><name pos:start="161:35" pos:end="161:39">depth</name> <operator pos:start="161:41" pos:end="161:41">&amp;</operator> <literal type="number" pos:start="161:43" pos:end="161:46">0x40</literal><operator pos:start="161:47" pos:end="161:47">)</operator> <operator pos:start="161:49" pos:end="161:49">+</operator> <operator pos:start="161:51" pos:end="161:51">!</operator><operator pos:start="161:52" pos:end="161:52">!</operator><operator pos:start="161:53" pos:end="161:53">(</operator><name pos:start="161:54" pos:end="161:58">depth</name> <operator pos:start="161:60" pos:end="161:60">&amp;</operator> <literal type="number" pos:start="161:62" pos:end="161:65">0x20</literal><operator pos:start="161:66" pos:end="161:66">)</operator> <operator pos:start="161:68" pos:end="161:68">&gt;</operator> <literal type="number" pos:start="161:70" pos:end="161:70">1</literal></expr>)</condition> <block pos:start="161:73" pos:end="169:9">{<block_content pos:start="163:13" pos:end="167:43">

            <expr_stmt pos:start="163:13" pos:end="163:74"><expr pos:start="163:13" pos:end="163:73"><call pos:start="163:13" pos:end="163:73"><name pos:start="163:13" pos:end="163:19">av_dlog</name><argument_list pos:start="163:20" pos:end="163:73">(<argument pos:start="163:21" pos:end="163:25"><expr pos:start="163:21" pos:end="163:25"><name pos:start="163:21" pos:end="163:25">avctx</name></expr></argument>, <argument pos:start="163:28" pos:end="163:65"><expr pos:start="163:28" pos:end="163:65"><literal type="string" pos:start="163:28" pos:end="163:65">"More than one bit level marked: %x\n"</literal></expr></argument>, <argument pos:start="163:68" pos:end="163:72"><expr pos:start="163:68" pos:end="163:72"><name pos:start="163:68" pos:end="163:72">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="165:13" pos:end="167:43"><if pos:start="165:13" pos:end="167:43">if <condition pos:start="165:16" pos:end="165:68">(<expr pos:start="165:17" pos:end="165:67"><name pos:start="165:17" pos:end="165:44"><name pos:start="165:17" pos:end="165:21">avctx</name><operator pos:start="165:22" pos:end="165:23">-&gt;</operator><name pos:start="165:24" pos:end="165:44">strict_std_compliance</name></name> <operator pos:start="165:46" pos:end="165:46">&gt;</operator> <name pos:start="165:48" pos:end="165:67">FF_COMPLIANCE_NORMAL</name></expr>)</condition><block type="pseudo" pos:start="167:17" pos:end="167:43"><block_content pos:start="167:17" pos:end="167:43">

                <return pos:start="167:17" pos:end="167:43">return <expr pos:start="167:24" pos:end="167:42"><name pos:start="167:24" pos:end="167:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="173:9" pos:end="183:62"><if pos:start="173:9" pos:end="175:60">if <condition pos:start="173:12" pos:end="173:25">(<expr pos:start="173:13" pos:end="173:24"><name pos:start="173:13" pos:end="173:17">depth</name> <operator pos:start="173:19" pos:end="173:19">&amp;</operator> <literal type="number" pos:start="173:21" pos:end="173:24">0x80</literal></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:60"><block_content pos:start="175:13" pos:end="175:60">

            <expr_stmt pos:start="175:13" pos:end="175:60"><expr pos:start="175:13" pos:end="175:59"><name pos:start="175:13" pos:end="175:33"><name pos:start="175:13" pos:end="175:16">clut</name><operator pos:start="175:17" pos:end="175:18">-&gt;</operator><name pos:start="175:19" pos:end="175:23">clut4</name><index pos:start="175:24" pos:end="175:33">[<expr pos:start="175:25" pos:end="175:32"><name pos:start="175:25" pos:end="175:32">entry_id</name></expr>]</index></name> <operator pos:start="175:35" pos:end="175:35">=</operator> <call pos:start="175:37" pos:end="175:59"><name pos:start="175:37" pos:end="175:40">RGBA</name><argument_list pos:start="175:41" pos:end="175:59">(<argument pos:start="175:42" pos:end="175:42"><expr pos:start="175:42" pos:end="175:42"><name pos:start="175:42" pos:end="175:42">r</name></expr></argument>,<argument pos:start="175:44" pos:end="175:44"><expr pos:start="175:44" pos:end="175:44"><name pos:start="175:44" pos:end="175:44">g</name></expr></argument>,<argument pos:start="175:46" pos:end="175:46"><expr pos:start="175:46" pos:end="175:46"><name pos:start="175:46" pos:end="175:46">b</name></expr></argument>,<argument pos:start="175:48" pos:end="175:58"><expr pos:start="175:48" pos:end="175:58"><literal type="number" pos:start="175:48" pos:end="175:52">255</literal> <operator pos:start="175:52" pos:end="175:52">-</operator> <name pos:start="175:54" pos:end="175:58">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="177:9" pos:end="179:61">else if <condition pos:start="177:17" pos:end="177:30">(<expr pos:start="177:18" pos:end="177:29"><name pos:start="177:18" pos:end="177:22">depth</name> <operator pos:start="177:24" pos:end="177:24">&amp;</operator> <literal type="number" pos:start="177:26" pos:end="177:29">0x40</literal></expr>)</condition><block type="pseudo" pos:start="179:13" pos:end="179:61"><block_content pos:start="179:13" pos:end="179:61">

            <expr_stmt pos:start="179:13" pos:end="179:61"><expr pos:start="179:13" pos:end="179:60"><name pos:start="179:13" pos:end="179:34"><name pos:start="179:13" pos:end="179:16">clut</name><operator pos:start="179:17" pos:end="179:18">-&gt;</operator><name pos:start="179:19" pos:end="179:24">clut16</name><index pos:start="179:25" pos:end="179:34">[<expr pos:start="179:26" pos:end="179:33"><name pos:start="179:26" pos:end="179:33">entry_id</name></expr>]</index></name> <operator pos:start="179:36" pos:end="179:36">=</operator> <call pos:start="179:38" pos:end="179:60"><name pos:start="179:38" pos:end="179:41">RGBA</name><argument_list pos:start="179:42" pos:end="179:60">(<argument pos:start="179:43" pos:end="179:43"><expr pos:start="179:43" pos:end="179:43"><name pos:start="179:43" pos:end="179:43">r</name></expr></argument>,<argument pos:start="179:45" pos:end="179:45"><expr pos:start="179:45" pos:end="179:45"><name pos:start="179:45" pos:end="179:45">g</name></expr></argument>,<argument pos:start="179:47" pos:end="179:47"><expr pos:start="179:47" pos:end="179:47"><name pos:start="179:47" pos:end="179:47">b</name></expr></argument>,<argument pos:start="179:49" pos:end="179:59"><expr pos:start="179:49" pos:end="179:59"><literal type="number" pos:start="179:49" pos:end="179:53">255</literal> <operator pos:start="179:53" pos:end="179:53">-</operator> <name pos:start="179:55" pos:end="179:59">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="181:9" pos:end="183:62">else if <condition pos:start="181:17" pos:end="181:30">(<expr pos:start="181:18" pos:end="181:29"><name pos:start="181:18" pos:end="181:22">depth</name> <operator pos:start="181:24" pos:end="181:24">&amp;</operator> <literal type="number" pos:start="181:26" pos:end="181:29">0x20</literal></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:62"><block_content pos:start="183:13" pos:end="183:62">

            <expr_stmt pos:start="183:13" pos:end="183:62"><expr pos:start="183:13" pos:end="183:61"><name pos:start="183:13" pos:end="183:35"><name pos:start="183:13" pos:end="183:16">clut</name><operator pos:start="183:17" pos:end="183:18">-&gt;</operator><name pos:start="183:19" pos:end="183:25">clut256</name><index pos:start="183:26" pos:end="183:35">[<expr pos:start="183:27" pos:end="183:34"><name pos:start="183:27" pos:end="183:34">entry_id</name></expr>]</index></name> <operator pos:start="183:37" pos:end="183:37">=</operator> <call pos:start="183:39" pos:end="183:61"><name pos:start="183:39" pos:end="183:42">RGBA</name><argument_list pos:start="183:43" pos:end="183:61">(<argument pos:start="183:44" pos:end="183:44"><expr pos:start="183:44" pos:end="183:44"><name pos:start="183:44" pos:end="183:44">r</name></expr></argument>,<argument pos:start="183:46" pos:end="183:46"><expr pos:start="183:46" pos:end="183:46"><name pos:start="183:46" pos:end="183:46">g</name></expr></argument>,<argument pos:start="183:48" pos:end="183:48"><expr pos:start="183:48" pos:end="183:48"><name pos:start="183:48" pos:end="183:48">b</name></expr></argument>,<argument pos:start="183:50" pos:end="183:60"><expr pos:start="183:50" pos:end="183:60"><literal type="number" pos:start="183:50" pos:end="183:54">255</literal> <operator pos:start="183:54" pos:end="183:54">-</operator> <name pos:start="183:56" pos:end="183:60">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>

    <return pos:start="189:5" pos:end="189:13">return <expr pos:start="189:12" pos:end="189:12"><literal type="number" pos:start="189:12" pos:end="189:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
