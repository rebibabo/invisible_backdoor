<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10774.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">decode_ref_pic_marking</name><parameter_list pos:start="1:34" pos:end="1:49">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:45">H264Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">h</name></decl></parameter>)</parameter_list><block pos:start="1:50" pos:end="111:1">{<block_content pos:start="3:5" pos:end="109:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="105:5"><if pos:start="9:5" pos:end="27:5">if<condition pos:start="9:7" pos:end="9:41">(<expr pos:start="9:8" pos:end="9:40"><name pos:start="9:8" pos:end="9:23"><name pos:start="9:8" pos:end="9:8">h</name><operator pos:start="9:9" pos:end="9:10">-&gt;</operator><name pos:start="9:11" pos:end="9:23">nal_unit_type</name></name> <operator pos:start="9:25" pos:end="9:26">==</operator> <name pos:start="9:28" pos:end="9:40">NAL_IDR_SLICE</name></expr>)</condition><block pos:start="9:42" pos:end="27:5">{<block_content pos:start="11:9" pos:end="25:9"> <comment type="line" pos:start="9:44" pos:end="9:57">//FIXME fields</comment>

        <expr_stmt pos:start="11:9" pos:end="11:45"><expr pos:start="11:9" pos:end="11:44"><name pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:22">broken_link</name></name><operator pos:start="11:23" pos:end="11:23">=</operator> <call pos:start="11:25" pos:end="11:41"><name pos:start="11:25" pos:end="11:33">get_bits1</name><argument_list pos:start="11:34" pos:end="11:41">(<argument pos:start="11:35" pos:end="11:40"><expr pos:start="11:35" pos:end="11:40"><operator pos:start="11:35" pos:end="11:35">&amp;</operator><name pos:start="11:36" pos:end="11:40"><name pos:start="11:36" pos:end="11:36">s</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:40">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="11:43" pos:end="11:43">-</operator><literal type="number" pos:start="11:44" pos:end="11:44">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:53"><expr pos:start="13:9" pos:end="13:52"><name pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:9">h</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:15">mmco</name><index pos:start="13:16" pos:end="13:18">[<expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr>]</index></name><operator pos:start="13:19" pos:end="13:19">.</operator><name pos:start="13:20" pos:end="13:29">long_index</name><operator pos:start="13:30" pos:end="13:30">=</operator> <call pos:start="13:32" pos:end="13:48"><name pos:start="13:32" pos:end="13:40">get_bits1</name><argument_list pos:start="13:41" pos:end="13:48">(<argument pos:start="13:42" pos:end="13:47"><expr pos:start="13:42" pos:end="13:47"><operator pos:start="13:42" pos:end="13:42">&amp;</operator><name pos:start="13:43" pos:end="13:47"><name pos:start="13:43" pos:end="13:43">s</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:47">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:50" pos:end="13:50">-</operator> <literal type="number" pos:start="13:52" pos:end="13:52">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="13:55" pos:end="13:78">// current_long_term_idx</comment>

        <if_stmt pos:start="15:9" pos:end="25:9"><if pos:start="15:9" pos:end="17:29">if<condition pos:start="15:11" pos:end="15:39">(<expr pos:start="15:12" pos:end="15:38"><name pos:start="15:12" pos:end="15:21"><name pos:start="15:12" pos:end="15:12">h</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:18">mmco</name><index pos:start="15:19" pos:end="15:21">[<expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr>]</index></name><operator pos:start="15:22" pos:end="15:22">.</operator><name pos:start="15:23" pos:end="15:32">long_index</name> <operator pos:start="15:34" pos:end="15:35">==</operator> <operator pos:start="15:37" pos:end="15:37">-</operator><literal type="number" pos:start="15:38" pos:end="15:38">1</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:29"><block_content pos:start="17:13" pos:end="17:29">

            <expr_stmt pos:start="17:13" pos:end="17:29"><expr pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:25"><name pos:start="17:13" pos:end="17:13">h</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:25">mmco_index</name></name><operator pos:start="17:26" pos:end="17:26">=</operator> <literal type="number" pos:start="17:28" pos:end="17:28">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="19:9" pos:end="25:9">else<block pos:start="19:13" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:29">

            <expr_stmt pos:start="21:13" pos:end="21:41"><expr pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:13">h</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:19">mmco</name><index pos:start="21:20" pos:end="21:22">[<expr pos:start="21:21" pos:end="21:21"><literal type="number" pos:start="21:21" pos:end="21:21">0</literal></expr>]</index></name><operator pos:start="21:23" pos:end="21:23">.</operator><name pos:start="21:24" pos:end="21:29">opcode</name><operator pos:start="21:30" pos:end="21:30">=</operator> <name pos:start="21:32" pos:end="21:40">MMCO_LONG</name></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:29"><expr pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:13">h</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:25">mmco_index</name></name><operator pos:start="23:26" pos:end="23:26">=</operator> <literal type="number" pos:start="23:28" pos:end="23:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if><else pos:start="27:6" pos:end="105:5">else<block pos:start="27:10" pos:end="105:5">{<block_content pos:start="29:9" pos:end="103:9">

        <if_stmt pos:start="29:9" pos:end="103:9"><if pos:start="29:9" pos:end="85:9">if<condition pos:start="29:11" pos:end="29:29">(<expr pos:start="29:12" pos:end="29:28"><call pos:start="29:12" pos:end="29:28"><name pos:start="29:12" pos:end="29:20">get_bits1</name><argument_list pos:start="29:21" pos:end="29:28">(<argument pos:start="29:22" pos:end="29:27"><expr pos:start="29:22" pos:end="29:27"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:27"><name pos:start="29:23" pos:end="29:23">s</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:27">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="29:30" pos:end="85:9">{<block_content pos:start="31:13" pos:end="83:29"> <comment type="line" pos:start="29:32" pos:end="29:68">// adaptive_ref_pic_marking_mode_flag</comment>

            <for pos:start="31:13" pos:end="81:13">for<control pos:start="31:16" pos:end="31:44">(<init pos:start="31:17" pos:end="31:21"><expr pos:start="31:17" pos:end="31:20"><name pos:start="31:17" pos:end="31:17">i</name><operator pos:start="31:18" pos:end="31:18">=</operator> <literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>;</init> <condition pos:start="31:23" pos:end="31:39"><expr pos:start="31:23" pos:end="31:38"><name pos:start="31:23" pos:end="31:23">i</name><operator pos:start="31:24" pos:end="31:24">&lt;</operator><name pos:start="31:25" pos:end="31:38">MAX_MMCO_COUNT</name></expr>;</condition> <incr pos:start="31:41" pos:end="31:43"><expr pos:start="31:41" pos:end="31:43"><name pos:start="31:41" pos:end="31:41">i</name><operator pos:start="31:42" pos:end="31:43">++</operator></expr></incr>)</control> <block pos:start="31:46" pos:end="81:13">{<block_content pos:start="33:17" pos:end="79:26">

                <decl_stmt pos:start="33:17" pos:end="33:57"><decl pos:start="33:17" pos:end="33:56"><type pos:start="33:17" pos:end="33:26"><name pos:start="33:17" pos:end="33:26">MMCOOpcode</name></type> <name pos:start="33:28" pos:end="33:33">opcode</name><init pos:start="33:34" pos:end="33:56">= <expr pos:start="33:36" pos:end="33:56"><call pos:start="33:36" pos:end="33:56"><name pos:start="33:36" pos:end="33:48">get_ue_golomb</name><argument_list pos:start="33:49" pos:end="33:56">(<argument pos:start="33:50" pos:end="33:55"><expr pos:start="33:50" pos:end="33:55"><operator pos:start="33:50" pos:end="33:50">&amp;</operator><name pos:start="33:51" pos:end="33:55"><name pos:start="33:51" pos:end="33:51">s</name><operator pos:start="33:52" pos:end="33:53">-&gt;</operator><name pos:start="33:54" pos:end="33:55">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt><empty_stmt pos:start="33:58" pos:end="33:58">;</empty_stmt>



                <expr_stmt pos:start="37:17" pos:end="37:42"><expr pos:start="37:17" pos:end="37:41"><name pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:17">h</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:23">mmco</name><index pos:start="37:24" pos:end="37:26">[<expr pos:start="37:25" pos:end="37:25"><name pos:start="37:25" pos:end="37:25">i</name></expr>]</index></name><operator pos:start="37:27" pos:end="37:27">.</operator><name pos:start="37:28" pos:end="37:33">opcode</name><operator pos:start="37:34" pos:end="37:34">=</operator> <name pos:start="37:36" pos:end="37:41">opcode</name></expr>;</expr_stmt>

                <if_stmt pos:start="39:17" pos:end="51:17"><if pos:start="39:17" pos:end="51:17">if<condition pos:start="39:19" pos:end="39:72">(<expr pos:start="39:20" pos:end="39:71"><name pos:start="39:20" pos:end="39:25">opcode</name><operator pos:start="39:26" pos:end="39:27">==</operator><name pos:start="39:28" pos:end="39:44">MMCO_SHORT2UNUSED</name> <operator pos:start="39:46" pos:end="39:47">||</operator> <name pos:start="39:49" pos:end="39:54">opcode</name><operator pos:start="39:55" pos:end="39:56">==</operator><name pos:start="39:57" pos:end="39:71">MMCO_SHORT2LONG</name></expr>)</condition><block pos:start="39:73" pos:end="51:17">{<block_content pos:start="41:21" pos:end="41:128">

                    <expr_stmt pos:start="41:21" pos:end="41:128"><expr pos:start="41:21" pos:end="41:127"><name pos:start="41:21" pos:end="41:30"><name pos:start="41:21" pos:end="41:21">h</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:27">mmco</name><index pos:start="41:28" pos:end="41:30">[<expr pos:start="41:29" pos:end="41:29"><name pos:start="41:29" pos:end="41:29">i</name></expr>]</index></name><operator pos:start="41:31" pos:end="41:31">.</operator><name pos:start="41:32" pos:end="41:46">short_frame_num</name><operator pos:start="41:47" pos:end="41:47">=</operator> <operator pos:start="41:49" pos:end="41:49">(</operator><name pos:start="41:50" pos:end="41:61"><name pos:start="41:50" pos:end="41:50">h</name><operator pos:start="41:51" pos:end="41:52">-&gt;</operator><name pos:start="41:53" pos:end="41:61">frame_num</name></name> <operator pos:start="41:63" pos:end="41:63">-</operator> <call pos:start="41:65" pos:end="41:85"><name pos:start="41:65" pos:end="41:77">get_ue_golomb</name><argument_list pos:start="41:78" pos:end="41:85">(<argument pos:start="41:79" pos:end="41:84"><expr pos:start="41:79" pos:end="41:84"><operator pos:start="41:79" pos:end="41:79">&amp;</operator><name pos:start="41:80" pos:end="41:84"><name pos:start="41:80" pos:end="41:80">s</name><operator pos:start="41:81" pos:end="41:82">-&gt;</operator><name pos:start="41:83" pos:end="41:84">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="41:87" pos:end="41:87">-</operator> <literal type="number" pos:start="41:89" pos:end="41:89">1</literal><operator pos:start="41:90" pos:end="41:90">)</operator> <operator pos:start="41:92" pos:end="41:92">&amp;</operator> <operator pos:start="41:94" pos:end="41:94">(</operator><operator pos:start="41:95" pos:end="41:95">(</operator><literal type="number" pos:start="41:96" pos:end="41:96">1</literal><operator pos:start="41:97" pos:end="41:98">&lt;&lt;</operator><name pos:start="41:99" pos:end="41:123"><name pos:start="41:99" pos:end="41:99">h</name><operator pos:start="41:100" pos:end="41:101">-&gt;</operator><name pos:start="41:102" pos:end="41:104">sps</name><operator pos:start="41:105" pos:end="41:105">.</operator><name pos:start="41:106" pos:end="41:123">log2_max_frame_num</name></name><operator pos:start="41:124" pos:end="41:124">)</operator><operator pos:start="41:125" pos:end="41:125">-</operator><literal type="number" pos:start="41:126" pos:end="41:126">1</literal><operator pos:start="41:127" pos:end="41:127">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="41:130" pos:end="41:143">//FIXME fields</comment>

<comment type="block" pos:start="43:1" pos:end="49:23">/*                    if(h-&gt;mmco[i].short_frame_num &gt;= h-&gt;short_ref_count || h-&gt;short_ref[ h-&gt;mmco[i].short_frame_num ] == NULL){

                        av_log(s-&gt;avctx, AV_LOG_ERROR, "illegal short ref in memory management control operation %d\n", mmco);

                        return -1;

                    }*/</comment>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="53:17" pos:end="65:17"><if pos:start="53:17" pos:end="65:17">if<condition pos:start="53:19" pos:end="53:121">(<expr pos:start="53:20" pos:end="53:120"><name pos:start="53:20" pos:end="53:25">opcode</name><operator pos:start="53:26" pos:end="53:27">==</operator><name pos:start="53:28" pos:end="53:42">MMCO_SHORT2LONG</name> <operator pos:start="53:44" pos:end="53:45">||</operator> <name pos:start="53:47" pos:end="53:52">opcode</name><operator pos:start="53:53" pos:end="53:54">==</operator><name pos:start="53:55" pos:end="53:70">MMCO_LONG2UNUSED</name> <operator pos:start="53:72" pos:end="53:73">||</operator> <name pos:start="53:75" pos:end="53:80">opcode</name><operator pos:start="53:81" pos:end="53:82">==</operator><name pos:start="53:83" pos:end="53:91">MMCO_LONG</name> <operator pos:start="53:93" pos:end="53:94">||</operator> <name pos:start="53:96" pos:end="53:101">opcode</name><operator pos:start="53:102" pos:end="53:103">==</operator><name pos:start="53:104" pos:end="53:120">MMCO_SET_MAX_LONG</name></expr>)</condition><block pos:start="53:122" pos:end="65:17">{<block_content pos:start="55:21" pos:end="63:21">

                    <expr_stmt pos:start="55:21" pos:end="55:65"><expr pos:start="55:21" pos:end="55:64"><name pos:start="55:21" pos:end="55:30"><name pos:start="55:21" pos:end="55:21">h</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:27">mmco</name><index pos:start="55:28" pos:end="55:30">[<expr pos:start="55:29" pos:end="55:29"><name pos:start="55:29" pos:end="55:29">i</name></expr>]</index></name><operator pos:start="55:31" pos:end="55:31">.</operator><name pos:start="55:32" pos:end="55:41">long_index</name><operator pos:start="55:42" pos:end="55:42">=</operator> <call pos:start="55:44" pos:end="55:64"><name pos:start="55:44" pos:end="55:56">get_ue_golomb</name><argument_list pos:start="55:57" pos:end="55:64">(<argument pos:start="55:58" pos:end="55:63"><expr pos:start="55:58" pos:end="55:63"><operator pos:start="55:58" pos:end="55:58">&amp;</operator><name pos:start="55:59" pos:end="55:63"><name pos:start="55:59" pos:end="55:59">s</name><operator pos:start="55:60" pos:end="55:61">-&gt;</operator><name pos:start="55:62" pos:end="55:63">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="57:21" pos:end="63:21"><if pos:start="57:21" pos:end="63:21">if<condition pos:start="57:23" pos:end="57:146">(<comment type="block" pos:start="57:24" pos:end="57:117">/*h-&gt;mmco[i].long_index &gt;= h-&gt;long_ref_count || h-&gt;long_ref[ h-&gt;mmco[i].long_index ] == NULL*/</comment> <expr pos:start="57:119" pos:end="57:145"><name pos:start="57:119" pos:end="57:128"><name pos:start="57:119" pos:end="57:119">h</name><operator pos:start="57:120" pos:end="57:121">-&gt;</operator><name pos:start="57:122" pos:end="57:125">mmco</name><index pos:start="57:126" pos:end="57:128">[<expr pos:start="57:127" pos:end="57:127"><name pos:start="57:127" pos:end="57:127">i</name></expr>]</index></name><operator pos:start="57:129" pos:end="57:129">.</operator><name pos:start="57:130" pos:end="57:139">long_index</name> <operator pos:start="57:141" pos:end="57:142">&gt;=</operator> <literal type="number" pos:start="57:144" pos:end="57:145">16</literal></expr>)</condition><block pos:start="57:147" pos:end="63:21">{<block_content pos:start="59:25" pos:end="61:34">

                        <expr_stmt pos:start="59:25" pos:end="59:129"><expr pos:start="59:25" pos:end="59:128"><call pos:start="59:25" pos:end="59:128"><name pos:start="59:25" pos:end="59:30">av_log</name><argument_list pos:start="59:31" pos:end="59:128">(<argument pos:start="59:32" pos:end="59:41"><expr pos:start="59:32" pos:end="59:41"><name pos:start="59:32" pos:end="59:41"><name pos:start="59:32" pos:end="59:32">h</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:35">s</name><operator pos:start="59:36" pos:end="59:36">.</operator><name pos:start="59:37" pos:end="59:41">avctx</name></name></expr></argument>, <argument pos:start="59:44" pos:end="59:55"><expr pos:start="59:44" pos:end="59:55"><name pos:start="59:44" pos:end="59:55">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:58" pos:end="59:119"><expr pos:start="59:58" pos:end="59:119"><literal type="string" pos:start="59:58" pos:end="59:119">"illegal long ref in memory management control operation %d\n"</literal></expr></argument>, <argument pos:start="59:122" pos:end="59:127"><expr pos:start="59:122" pos:end="59:127"><name pos:start="59:122" pos:end="59:127">opcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="61:25" pos:end="61:34">return <expr pos:start="61:32" pos:end="61:33"><operator pos:start="61:32" pos:end="61:32">-</operator><literal type="number" pos:start="61:33" pos:end="61:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="69:17" pos:end="75:17"><if pos:start="69:17" pos:end="75:17">if<condition pos:start="69:19" pos:end="69:38">(<expr pos:start="69:20" pos:end="69:37"><name pos:start="69:20" pos:end="69:25">opcode</name> <operator pos:start="69:27" pos:end="69:27">&gt;</operator> <name pos:start="69:29" pos:end="69:37">MMCO_LONG</name></expr>)</condition><block pos:start="69:39" pos:end="75:17">{<block_content pos:start="71:21" pos:end="73:30">

                    <expr_stmt pos:start="71:21" pos:end="71:113"><expr pos:start="71:21" pos:end="71:112"><call pos:start="71:21" pos:end="71:112"><name pos:start="71:21" pos:end="71:26">av_log</name><argument_list pos:start="71:27" pos:end="71:112">(<argument pos:start="71:28" pos:end="71:37"><expr pos:start="71:28" pos:end="71:37"><name pos:start="71:28" pos:end="71:37"><name pos:start="71:28" pos:end="71:28">h</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:31">s</name><operator pos:start="71:32" pos:end="71:32">.</operator><name pos:start="71:33" pos:end="71:37">avctx</name></name></expr></argument>, <argument pos:start="71:40" pos:end="71:51"><expr pos:start="71:40" pos:end="71:51"><name pos:start="71:40" pos:end="71:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:54" pos:end="71:103"><expr pos:start="71:54" pos:end="71:103"><literal type="string" pos:start="71:54" pos:end="71:103">"illegal memory management control operation %d\n"</literal></expr></argument>, <argument pos:start="71:106" pos:end="71:111"><expr pos:start="71:106" pos:end="71:111"><name pos:start="71:106" pos:end="71:111">opcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="73:21" pos:end="73:30">return <expr pos:start="73:28" pos:end="73:29"><operator pos:start="73:28" pos:end="73:28">-</operator><literal type="number" pos:start="73:29" pos:end="73:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="77:17" pos:end="79:26"><if pos:start="77:17" pos:end="79:26">if<condition pos:start="77:19" pos:end="77:38">(<expr pos:start="77:20" pos:end="77:37"><name pos:start="77:20" pos:end="77:25">opcode</name> <operator pos:start="77:27" pos:end="77:28">==</operator> <name pos:start="77:30" pos:end="77:37">MMCO_END</name></expr>)</condition><block type="pseudo" pos:start="79:21" pos:end="79:26"><block_content pos:start="79:21" pos:end="79:26">

                    <break pos:start="79:21" pos:end="79:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="83:13" pos:end="83:29"><expr pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:13">h</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:25">mmco_index</name></name><operator pos:start="83:26" pos:end="83:26">=</operator> <name pos:start="83:28" pos:end="83:28">i</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="85:10" pos:end="103:9">else<block pos:start="85:14" pos:end="103:9">{<block_content pos:start="87:13" pos:end="101:33">

            <expr_stmt pos:start="87:13" pos:end="87:85"><expr pos:start="87:13" pos:end="87:84"><call pos:start="87:13" pos:end="87:84"><name pos:start="87:13" pos:end="87:18">assert</name><argument_list pos:start="87:19" pos:end="87:84">(<argument pos:start="87:20" pos:end="87:83"><expr pos:start="87:20" pos:end="87:83"><name pos:start="87:20" pos:end="87:36"><name pos:start="87:20" pos:end="87:20">h</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:36">long_ref_count</name></name> <operator pos:start="87:38" pos:end="87:38">+</operator> <name pos:start="87:40" pos:end="87:57"><name pos:start="87:40" pos:end="87:40">h</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:57">short_ref_count</name></name> <operator pos:start="87:59" pos:end="87:60">&lt;=</operator> <name pos:start="87:62" pos:end="87:83"><name pos:start="87:62" pos:end="87:62">h</name><operator pos:start="87:63" pos:end="87:64">-&gt;</operator><name pos:start="87:65" pos:end="87:67">sps</name><operator pos:start="87:68" pos:end="87:68">.</operator><name pos:start="87:69" pos:end="87:83">ref_frame_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="91:13" pos:end="101:33"><if pos:start="91:13" pos:end="99:13">if<condition pos:start="91:15" pos:end="91:80">(<expr pos:start="91:16" pos:end="91:79"><name pos:start="91:16" pos:end="91:32"><name pos:start="91:16" pos:end="91:16">h</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:32">long_ref_count</name></name> <operator pos:start="91:34" pos:end="91:34">+</operator> <name pos:start="91:36" pos:end="91:53"><name pos:start="91:36" pos:end="91:36">h</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:53">short_ref_count</name></name> <operator pos:start="91:55" pos:end="91:56">==</operator> <name pos:start="91:58" pos:end="91:79"><name pos:start="91:58" pos:end="91:58">h</name><operator pos:start="91:59" pos:end="91:60">-&gt;</operator><name pos:start="91:61" pos:end="91:63">sps</name><operator pos:start="91:64" pos:end="91:64">.</operator><name pos:start="91:65" pos:end="91:79">ref_frame_count</name></name></expr>)</condition><block pos:start="91:81" pos:end="99:13">{<block_content pos:start="93:17" pos:end="97:33"> <comment type="line" pos:start="91:83" pos:end="91:96">//FIXME fields</comment>

                <expr_stmt pos:start="93:17" pos:end="93:53"><expr pos:start="93:17" pos:end="93:52"><name pos:start="93:17" pos:end="93:26"><name pos:start="93:17" pos:end="93:17">h</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:23">mmco</name><index pos:start="93:24" pos:end="93:26">[<expr pos:start="93:25" pos:end="93:25"><literal type="number" pos:start="93:25" pos:end="93:25">0</literal></expr>]</index></name><operator pos:start="93:27" pos:end="93:27">.</operator><name pos:start="93:28" pos:end="93:33">opcode</name><operator pos:start="93:34" pos:end="93:34">=</operator> <name pos:start="93:36" pos:end="93:52">MMCO_SHORT2UNUSED</name></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:94"><expr pos:start="95:17" pos:end="95:93"><name pos:start="95:17" pos:end="95:26"><name pos:start="95:17" pos:end="95:17">h</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:23">mmco</name><index pos:start="95:24" pos:end="95:26">[<expr pos:start="95:25" pos:end="95:25"><literal type="number" pos:start="95:25" pos:end="95:25">0</literal></expr>]</index></name><operator pos:start="95:27" pos:end="95:27">.</operator><name pos:start="95:28" pos:end="95:42">short_frame_num</name><operator pos:start="95:43" pos:end="95:43">=</operator> <name pos:start="95:45" pos:end="95:82"><name pos:start="95:45" pos:end="95:45">h</name><operator pos:start="95:46" pos:end="95:47">-&gt;</operator><name pos:start="95:48" pos:end="95:56">short_ref</name><index pos:start="95:57" pos:end="95:82">[ <expr pos:start="95:59" pos:end="95:80"><name pos:start="95:59" pos:end="95:76"><name pos:start="95:59" pos:end="95:59">h</name><operator pos:start="95:60" pos:end="95:61">-&gt;</operator><name pos:start="95:62" pos:end="95:76">short_ref_count</name></name> <operator pos:start="95:78" pos:end="95:78">-</operator> <literal type="number" pos:start="95:80" pos:end="95:80">1</literal></expr> ]</index></name><operator pos:start="95:83" pos:end="95:84">-&gt;</operator><name pos:start="95:85" pos:end="95:93">frame_num</name></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:33"><expr pos:start="97:17" pos:end="97:32"><name pos:start="97:17" pos:end="97:29"><name pos:start="97:17" pos:end="97:17">h</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:29">mmco_index</name></name><operator pos:start="97:30" pos:end="97:30">=</operator> <literal type="number" pos:start="97:32" pos:end="97:32">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="99:14" pos:end="101:33">else<block type="pseudo" pos:start="101:17" pos:end="101:33"><block_content pos:start="101:17" pos:end="101:33">

                <expr_stmt pos:start="101:17" pos:end="101:33"><expr pos:start="101:17" pos:end="101:32"><name pos:start="101:17" pos:end="101:29"><name pos:start="101:17" pos:end="101:17">h</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:29">mmco_index</name></name><operator pos:start="101:30" pos:end="101:30">=</operator> <literal type="number" pos:start="101:32" pos:end="101:32">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
