<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25342.c" pos:tabs="8"><function pos:start="1:1" pos:end="235:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">init_directory</name><parameter_list pos:start="1:26" pos:end="1:64">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:40">BDRVVVFATState</name><modifier pos:start="1:41" pos:end="1:41">*</modifier></type> <name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>,<parameter pos:start="1:45" pos:end="1:63"><decl pos:start="1:45" pos:end="1:63"><type pos:start="1:45" pos:end="1:63"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name><modifier pos:start="1:55" pos:end="1:55">*</modifier></type> <name pos:start="1:57" pos:end="1:63">dirname</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="235:1">{<block_content pos:start="5:5" pos:end="233:13">

    <decl_stmt pos:start="5:5" pos:end="5:99"><decl pos:start="5:5" pos:end="5:98"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:16">bootsector_t</name><modifier pos:start="5:17" pos:end="5:17">*</modifier></type> <name pos:start="5:19" pos:end="5:28">bootsector</name><init pos:start="5:29" pos:end="5:98">=<expr pos:start="5:30" pos:end="5:98"><operator pos:start="5:30" pos:end="5:30">(</operator><name pos:start="5:31" pos:end="5:42">bootsector_t</name><operator pos:start="5:43" pos:end="5:43">*</operator><operator pos:start="5:44" pos:end="5:44">)</operator><operator pos:start="5:45" pos:end="5:45">&amp;</operator><operator pos:start="5:46" pos:end="5:46">(</operator><name pos:start="5:47" pos:end="5:97"><name pos:start="5:47" pos:end="5:47">s</name><operator pos:start="5:48" pos:end="5:49">-&gt;</operator><name pos:start="5:50" pos:end="5:62">first_sectors</name><index pos:start="5:63" pos:end="5:97">[<expr pos:start="5:64" pos:end="5:96"><operator pos:start="5:64" pos:end="5:64">(</operator><name pos:start="5:65" pos:end="5:87"><name pos:start="5:65" pos:end="5:65">s</name><operator pos:start="5:66" pos:end="5:67">-&gt;</operator><name pos:start="5:68" pos:end="5:87">first_sectors_number</name></name><operator pos:start="5:88" pos:end="5:88">-</operator><literal type="number" pos:start="5:89" pos:end="5:89">1</literal><operator pos:start="5:90" pos:end="5:90">)</operator><operator pos:start="5:91" pos:end="5:91">*</operator><literal type="number" pos:start="5:92" pos:end="5:96">0x200</literal></expr>]</index></name><operator pos:start="5:98" pos:end="5:98">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:24">cluster</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:48"><expr pos:start="13:5" pos:end="13:47"><call pos:start="13:5" pos:end="13:47"><name pos:start="13:5" pos:end="13:10">memset</name><argument_list pos:start="13:11" pos:end="13:47">(<argument pos:start="13:12" pos:end="13:33"><expr pos:start="13:12" pos:end="13:33"><operator pos:start="13:12" pos:end="13:12">&amp;</operator><operator pos:start="13:13" pos:end="13:13">(</operator><name pos:start="13:14" pos:end="13:32"><name pos:start="13:14" pos:end="13:14">s</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:29">first_sectors</name><index pos:start="13:30" pos:end="13:32">[<expr pos:start="13:31" pos:end="13:31"><literal type="number" pos:start="13:31" pos:end="13:31">0</literal></expr>]</index></name><operator pos:start="13:33" pos:end="13:33">)</operator></expr></argument>,<argument pos:start="13:35" pos:end="13:35"><expr pos:start="13:35" pos:end="13:35"><literal type="number" pos:start="13:35" pos:end="13:35">0</literal></expr></argument>,<argument pos:start="13:37" pos:end="13:46"><expr pos:start="13:37" pos:end="13:46"><literal type="number" pos:start="13:37" pos:end="13:40">0x40</literal><operator pos:start="13:41" pos:end="13:41">*</operator><literal type="number" pos:start="13:42" pos:end="13:46">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:48">/* TODO: if FAT32, this is probably wrong */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:22">sectors_per_fat</name></name><operator pos:start="19:23" pos:end="19:23">=</operator><literal type="number" pos:start="19:24" pos:end="19:27">0xfc</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:26">sectors_per_cluster</name></name><operator pos:start="21:27" pos:end="21:27">=</operator><literal type="number" pos:start="21:28" pos:end="21:31">0x10</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:49"><expr pos:start="23:5" pos:end="23:48"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:19">cluster_size</name></name><operator pos:start="23:20" pos:end="23:20">=</operator><name pos:start="23:21" pos:end="23:42"><name pos:start="23:21" pos:end="23:21">s</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:42">sectors_per_cluster</name></name><operator pos:start="23:43" pos:end="23:43">*</operator><literal type="number" pos:start="23:44" pos:end="23:48">0x200</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:14">cluster</name></name><operator pos:start="25:15" pos:end="25:15">=</operator><call pos:start="25:16" pos:end="25:38"><name pos:start="25:16" pos:end="25:21">malloc</name><argument_list pos:start="25:22" pos:end="25:38">(<argument pos:start="25:23" pos:end="25:37"><expr pos:start="25:23" pos:end="25:37"><name pos:start="25:23" pos:end="25:37"><name pos:start="25:23" pos:end="25:23">s</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:37">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="29:5" pos:end="29:48"><expr pos:start="29:5" pos:end="29:47"><call pos:start="29:5" pos:end="29:47"><name pos:start="29:5" pos:end="29:14">array_init</name><argument_list pos:start="29:15" pos:end="29:47">(<argument pos:start="29:16" pos:end="29:28"><expr pos:start="29:16" pos:end="29:28"><operator pos:start="29:16" pos:end="29:16">&amp;</operator><operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:27"><name pos:start="29:18" pos:end="29:18">s</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:27">mapping</name></name><operator pos:start="29:28" pos:end="29:28">)</operator></expr></argument>,<argument pos:start="29:30" pos:end="29:46"><expr pos:start="29:30" pos:end="29:46"><sizeof pos:start="29:30" pos:end="29:46">sizeof<argument_list pos:start="29:36" pos:end="29:46">(<argument pos:start="29:37" pos:end="29:45"><expr pos:start="29:37" pos:end="29:45"><name pos:start="29:37" pos:end="29:45">mapping_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:51"><expr pos:start="31:5" pos:end="31:50"><call pos:start="31:5" pos:end="31:50"><name pos:start="31:5" pos:end="31:14">array_init</name><argument_list pos:start="31:15" pos:end="31:50">(<argument pos:start="31:16" pos:end="31:30"><expr pos:start="31:16" pos:end="31:30"><operator pos:start="31:16" pos:end="31:16">&amp;</operator><operator pos:start="31:17" pos:end="31:17">(</operator><name pos:start="31:18" pos:end="31:29"><name pos:start="31:18" pos:end="31:18">s</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:29">directory</name></name><operator pos:start="31:30" pos:end="31:30">)</operator></expr></argument>,<argument pos:start="31:32" pos:end="31:49"><expr pos:start="31:32" pos:end="31:49"><sizeof pos:start="31:32" pos:end="31:49">sizeof<argument_list pos:start="31:38" pos:end="31:49">(<argument pos:start="31:39" pos:end="31:48"><expr pos:start="31:39" pos:end="31:48"><name pos:start="31:39" pos:end="31:48">direntry_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><call pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:14">array_init</name><argument_list pos:start="33:15" pos:end="33:45">(<argument pos:start="33:16" pos:end="33:27"><expr pos:start="33:16" pos:end="33:27"><operator pos:start="33:16" pos:end="33:16">&amp;</operator><operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:26"><name pos:start="33:18" pos:end="33:18">s</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:26">commit</name></name><operator pos:start="33:27" pos:end="33:27">)</operator></expr></argument>,<argument pos:start="33:29" pos:end="33:44"><expr pos:start="33:29" pos:end="33:44"><sizeof pos:start="33:29" pos:end="33:44">sizeof<argument_list pos:start="33:35" pos:end="33:44">(<argument pos:start="33:36" pos:end="33:43"><expr pos:start="33:36" pos:end="33:43"><name pos:start="33:36" pos:end="33:43">commit_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:26">/* add volume label */</comment>

    <block pos:start="39:5" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:46">

	<decl_stmt pos:start="41:9" pos:end="41:58"><decl pos:start="41:9" pos:end="41:57"><type pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:18">direntry_t</name><modifier pos:start="41:19" pos:end="41:19">*</modifier></type> <name pos:start="41:21" pos:end="41:25">entry</name><init pos:start="41:26" pos:end="41:57">=<expr pos:start="41:27" pos:end="41:57"><call pos:start="41:27" pos:end="41:57"><name pos:start="41:27" pos:end="41:40">array_get_next</name><argument_list pos:start="41:41" pos:end="41:57">(<argument pos:start="41:42" pos:end="41:56"><expr pos:start="41:42" pos:end="41:56"><operator pos:start="41:42" pos:end="41:42">&amp;</operator><operator pos:start="41:43" pos:end="41:43">(</operator><name pos:start="41:44" pos:end="41:55"><name pos:start="41:44" pos:end="41:44">s</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:55">directory</name></name><operator pos:start="41:56" pos:end="41:56">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:13">entry</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:25">attributes</name></name><operator pos:start="43:26" pos:end="43:26">=</operator><literal type="number" pos:start="43:27" pos:end="43:30">0x28</literal></expr>;</expr_stmt> <comment type="block" pos:start="43:33" pos:end="43:60">/* archive | volume label */</comment>

	<expr_stmt pos:start="45:9" pos:end="45:46"><expr pos:start="45:9" pos:end="45:45"><call pos:start="45:9" pos:end="45:45"><name pos:start="45:9" pos:end="45:16">snprintf</name><argument_list pos:start="45:17" pos:end="45:45">(<argument pos:start="45:18" pos:end="45:28"><expr pos:start="45:18" pos:end="45:28"><name pos:start="45:18" pos:end="45:28"><name pos:start="45:18" pos:end="45:22">entry</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:28">name</name></name></expr></argument>,<argument pos:start="45:30" pos:end="45:31"><expr pos:start="45:30" pos:end="45:31"><literal type="number" pos:start="45:30" pos:end="45:31">11</literal></expr></argument>,<argument pos:start="45:33" pos:end="45:44"><expr pos:start="45:33" pos:end="45:44"><literal type="string" pos:start="45:33" pos:end="45:44">"QEMU VVFAT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <if_stmt pos:start="51:5" pos:end="53:18"><if pos:start="51:5" pos:end="53:18">if<condition pos:start="51:7" pos:end="51:35">(<expr pos:start="51:8" pos:end="51:34"><call pos:start="51:8" pos:end="51:34"><name pos:start="51:8" pos:end="51:21">read_directory</name><argument_list pos:start="51:22" pos:end="51:34">(<argument pos:start="51:23" pos:end="51:23"><expr pos:start="51:23" pos:end="51:23"><name pos:start="51:23" pos:end="51:23">s</name></expr></argument>,<argument pos:start="51:25" pos:end="51:31"><expr pos:start="51:25" pos:end="51:31"><name pos:start="51:25" pos:end="51:31">dirname</name></expr></argument>,<argument pos:start="51:33" pos:end="51:33"><expr pos:start="51:33" pos:end="51:33"><literal type="number" pos:start="51:33" pos:end="51:33">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:18"><block_content pos:start="53:9" pos:end="53:18">

	<return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:115">/* make sure that the number of directory entries is multiple of 0x200/0x20 (to fit the last sector exactly) */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:52"><expr pos:start="59:5" pos:end="59:51"><name pos:start="59:5" pos:end="59:28"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:28">sectors_for_directory</name></name><operator pos:start="59:29" pos:end="59:29">=</operator><name pos:start="59:30" pos:end="59:46"><name pos:start="59:30" pos:end="59:30">s</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:41">directory</name><operator pos:start="59:42" pos:end="59:42">.</operator><name pos:start="59:43" pos:end="59:46">next</name></name><operator pos:start="59:47" pos:end="59:47">/</operator><literal type="number" pos:start="59:48" pos:end="59:51">0x10</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:91"><expr pos:start="63:5" pos:end="63:90"><name pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:20">faked_sectors</name></name><operator pos:start="63:21" pos:end="63:21">=</operator><name pos:start="63:22" pos:end="63:44"><name pos:start="63:22" pos:end="63:22">s</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:44">first_sectors_number</name></name><operator pos:start="63:45" pos:end="63:45">+</operator><name pos:start="63:46" pos:end="63:63"><name pos:start="63:46" pos:end="63:46">s</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:63">sectors_per_fat</name></name><operator pos:start="63:64" pos:end="63:64">*</operator><literal type="number" pos:start="63:65" pos:end="63:66">2</literal><operator pos:start="63:66" pos:end="63:66">+</operator><name pos:start="63:67" pos:end="63:90"><name pos:start="63:67" pos:end="63:67">s</name><operator pos:start="63:68" pos:end="63:69">-&gt;</operator><name pos:start="63:70" pos:end="63:90">sectors_for_directory</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:79"><expr pos:start="65:5" pos:end="65:78"><name pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:20">cluster_count</name></name><operator pos:start="65:21" pos:end="65:21">=</operator><operator pos:start="65:22" pos:end="65:22">(</operator><name pos:start="65:23" pos:end="65:37"><name pos:start="65:23" pos:end="65:23">s</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:37">sector_count</name></name><operator pos:start="65:38" pos:end="65:38">-</operator><name pos:start="65:39" pos:end="65:54"><name pos:start="65:39" pos:end="65:39">s</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:54">faked_sectors</name></name><operator pos:start="65:55" pos:end="65:55">)</operator><operator pos:start="65:56" pos:end="65:56">/</operator><name pos:start="65:57" pos:end="65:78"><name pos:start="65:57" pos:end="65:57">s</name><operator pos:start="65:58" pos:end="65:59">-&gt;</operator><name pos:start="65:60" pos:end="65:78">sectors_per_cluster</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:66">/* Now build FAT, and write back information into directory */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:16"><expr pos:start="71:5" pos:end="71:15"><call pos:start="71:5" pos:end="71:15"><name pos:start="71:5" pos:end="71:12">init_fat</name><argument_list pos:start="71:13" pos:end="71:15">(<argument pos:start="71:14" pos:end="71:14"><expr pos:start="71:14" pos:end="71:14"><name pos:start="71:14" pos:end="71:14">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:60"><expr pos:start="75:5" pos:end="75:59"><name pos:start="75:5" pos:end="75:11">cluster</name><operator pos:start="75:12" pos:end="75:12">=</operator><name pos:start="75:13" pos:end="75:36"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:36">sectors_for_directory</name></name><operator pos:start="75:37" pos:end="75:37">/</operator><name pos:start="75:38" pos:end="75:59"><name pos:start="75:38" pos:end="75:38">s</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:59">sectors_per_cluster</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:63"><expr pos:start="77:5" pos:end="77:62"><call pos:start="77:5" pos:end="77:62"><name pos:start="77:5" pos:end="77:10">assert</name><argument_list pos:start="77:11" pos:end="77:62">(<argument pos:start="77:12" pos:end="77:61"><expr pos:start="77:12" pos:end="77:61"><name pos:start="77:12" pos:end="77:35"><name pos:start="77:12" pos:end="77:12">s</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:35">sectors_for_directory</name></name><operator pos:start="77:36" pos:end="77:36">%</operator><name pos:start="77:37" pos:end="77:58"><name pos:start="77:37" pos:end="77:37">s</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:58">sectors_per_cluster</name></name><operator pos:start="77:59" pos:end="77:60">==</operator><literal type="number" pos:start="77:61" pos:end="77:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:48">/* set the end of the last read directory */</comment>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if<condition pos:start="83:7" pos:end="83:31">(<expr pos:start="83:8" pos:end="83:30"><name pos:start="83:8" pos:end="83:28"><name pos:start="83:8" pos:end="83:8">s</name><operator pos:start="83:9" pos:end="83:10">-&gt;</operator><name pos:start="83:11" pos:end="83:28">first_file_mapping</name></name><operator pos:start="83:29" pos:end="83:29">&gt;</operator><literal type="number" pos:start="83:30" pos:end="83:30">0</literal></expr>)</condition> <block pos:start="83:33" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:29">

	<decl_stmt pos:start="85:9" pos:end="85:76"><decl pos:start="85:9" pos:end="85:75"><type pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:17">mapping_t</name><modifier pos:start="85:18" pos:end="85:18">*</modifier></type> <name pos:start="85:20" pos:end="85:26">mapping</name><init pos:start="85:27" pos:end="85:75">=<expr pos:start="85:28" pos:end="85:75"><call pos:start="85:28" pos:end="85:75"><name pos:start="85:28" pos:end="85:36">array_get</name><argument_list pos:start="85:37" pos:end="85:75">(<argument pos:start="85:38" pos:end="85:50"><expr pos:start="85:38" pos:end="85:50"><operator pos:start="85:38" pos:end="85:38">&amp;</operator><operator pos:start="85:39" pos:end="85:39">(</operator><name pos:start="85:40" pos:end="85:49"><name pos:start="85:40" pos:end="85:40">s</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:49">mapping</name></name><operator pos:start="85:50" pos:end="85:50">)</operator></expr></argument>,<argument pos:start="85:52" pos:end="85:74"><expr pos:start="85:52" pos:end="85:74"><name pos:start="85:52" pos:end="85:72"><name pos:start="85:52" pos:end="85:52">s</name><operator pos:start="85:53" pos:end="85:54">-&gt;</operator><name pos:start="85:55" pos:end="85:72">first_file_mapping</name></name><operator pos:start="85:73" pos:end="85:73">-</operator><literal type="number" pos:start="85:74" pos:end="85:74">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt pos:start="87:9" pos:end="87:29"><expr pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:20"><name pos:start="87:9" pos:end="87:15">mapping</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:20">end</name></name><operator pos:start="87:21" pos:end="87:21">=</operator><name pos:start="87:22" pos:end="87:28">cluster</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="93:5" pos:end="169:5">for<control pos:start="93:8" pos:end="93:34">(<init pos:start="93:9" pos:end="93:12"><expr pos:start="93:9" pos:end="93:11"><name pos:start="93:9" pos:end="93:9">i</name><operator pos:start="93:10" pos:end="93:10">=</operator><literal type="number" pos:start="93:11" pos:end="93:11">1</literal></expr>;</init><condition pos:start="93:13" pos:end="93:30"><expr pos:start="93:13" pos:end="93:29"><name pos:start="93:13" pos:end="93:13">i</name><operator pos:start="93:14" pos:end="93:14">&lt;</operator><name pos:start="93:15" pos:end="93:29"><name pos:start="93:15" pos:end="93:15">s</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:24">mapping</name><operator pos:start="93:25" pos:end="93:25">.</operator><name pos:start="93:26" pos:end="93:29">next</name></name></expr>;</condition><incr pos:start="93:31" pos:end="93:33"><expr pos:start="93:31" pos:end="93:33"><name pos:start="93:31" pos:end="93:31">i</name><operator pos:start="93:32" pos:end="93:33">++</operator></expr></incr>)</control> <block pos:start="93:36" pos:end="169:5">{<block_content pos:start="95:9" pos:end="167:9">

	<decl_stmt pos:start="95:9" pos:end="95:54"><decl pos:start="95:9" pos:end="95:53"><type pos:start="95:9" pos:end="95:18"><name pos:start="95:9" pos:end="95:17">mapping_t</name><modifier pos:start="95:18" pos:end="95:18">*</modifier></type> <name pos:start="95:20" pos:end="95:26">mapping</name><init pos:start="95:27" pos:end="95:53">=<expr pos:start="95:28" pos:end="95:53"><call pos:start="95:28" pos:end="95:53"><name pos:start="95:28" pos:end="95:36">array_get</name><argument_list pos:start="95:37" pos:end="95:53">(<argument pos:start="95:38" pos:end="95:50"><expr pos:start="95:38" pos:end="95:50"><operator pos:start="95:38" pos:end="95:38">&amp;</operator><operator pos:start="95:39" pos:end="95:39">(</operator><name pos:start="95:40" pos:end="95:49"><name pos:start="95:40" pos:end="95:40">s</name><operator pos:start="95:41" pos:end="95:42">-&gt;</operator><name pos:start="95:43" pos:end="95:49">mapping</name></name><operator pos:start="95:50" pos:end="95:50">)</operator></expr></argument>,<argument pos:start="95:52" pos:end="95:52"><expr pos:start="95:52" pos:end="95:52"><name pos:start="95:52" pos:end="95:52">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="97:9" pos:end="97:75"><decl pos:start="97:9" pos:end="97:74"><type pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:18">direntry_t</name><modifier pos:start="97:19" pos:end="97:19">*</modifier></type> <name pos:start="97:21" pos:end="97:28">direntry</name><init pos:start="97:29" pos:end="97:74">=<expr pos:start="97:30" pos:end="97:74"><call pos:start="97:30" pos:end="97:74"><name pos:start="97:30" pos:end="97:38">array_get</name><argument_list pos:start="97:39" pos:end="97:74">(<argument pos:start="97:40" pos:end="97:54"><expr pos:start="97:40" pos:end="97:54"><operator pos:start="97:40" pos:end="97:40">&amp;</operator><operator pos:start="97:41" pos:end="97:41">(</operator><name pos:start="97:42" pos:end="97:53"><name pos:start="97:42" pos:end="97:42">s</name><operator pos:start="97:43" pos:end="97:44">-&gt;</operator><name pos:start="97:45" pos:end="97:53">directory</name></name><operator pos:start="97:54" pos:end="97:54">)</operator></expr></argument>,<argument pos:start="97:56" pos:end="97:73"><expr pos:start="97:56" pos:end="97:73"><name pos:start="97:56" pos:end="97:73"><name pos:start="97:56" pos:end="97:62">mapping</name><operator pos:start="97:63" pos:end="97:64">-&gt;</operator><name pos:start="97:65" pos:end="97:73">dir_index</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if_stmt pos:start="99:9" pos:end="167:9"><if pos:start="99:9" pos:end="119:9">if<condition pos:start="99:11" pos:end="99:41">(<expr pos:start="99:12" pos:end="99:40"><name pos:start="99:12" pos:end="99:24"><name pos:start="99:12" pos:end="99:18">mapping</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:24">mode</name></name><operator pos:start="99:25" pos:end="99:26">==</operator><name pos:start="99:27" pos:end="99:40">MODE_DIRECTORY</name></expr>)</condition> <block pos:start="99:43" pos:end="119:9">{<block_content pos:start="103:13" pos:end="117:36">

	    <comment type="block" pos:start="101:13" pos:end="101:27">/* directory */</comment>

	    <decl_stmt pos:start="103:13" pos:end="106:0"><decl pos:start="103:13" pos:end="103:17"><type pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:15">int</name></type> <name pos:start="103:17" pos:end="103:17">i</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="105:1" pos:end="105:12">#<cpp:directive pos:start="105:2" pos:end="105:6">ifdef</cpp:directive> <name pos:start="105:8" pos:end="105:12">DEBUG</name></cpp:ifdef>

	    <expr_stmt pos:start="107:13" pos:end="110:0"><expr pos:start="107:13" pos:end="107:106"><call pos:start="107:13" pos:end="107:106"><name pos:start="107:13" pos:end="107:19">fprintf</name><argument_list pos:start="107:20" pos:end="107:106">(<argument pos:start="107:21" pos:end="107:26"><expr pos:start="107:21" pos:end="107:26"><name pos:start="107:21" pos:end="107:26">stderr</name></expr></argument>,<argument pos:start="107:28" pos:end="107:49"><expr pos:start="107:28" pos:end="107:49"><literal type="string" pos:start="107:28" pos:end="107:49">"assert: %s %d &lt; %d\n"</literal></expr></argument>,<argument pos:start="107:51" pos:end="107:67"><expr pos:start="107:51" pos:end="107:67"><name pos:start="107:51" pos:end="107:67"><name pos:start="107:51" pos:end="107:57">mapping</name><operator pos:start="107:58" pos:end="107:59">-&gt;</operator><name pos:start="107:60" pos:end="107:67">filename</name></name></expr></argument>,<argument pos:start="107:69" pos:end="107:87"><expr pos:start="107:69" pos:end="107:87"><operator pos:start="107:69" pos:end="107:69">(</operator><name pos:start="107:70" pos:end="107:72">int</name><operator pos:start="107:73" pos:end="107:73">)</operator><name pos:start="107:74" pos:end="107:87"><name pos:start="107:74" pos:end="107:80">mapping</name><operator pos:start="107:81" pos:end="107:82">-&gt;</operator><name pos:start="107:83" pos:end="107:87">begin</name></name></expr></argument>,<argument pos:start="107:89" pos:end="107:105"><expr pos:start="107:89" pos:end="107:105"><operator pos:start="107:89" pos:end="107:89">(</operator><name pos:start="107:90" pos:end="107:92">int</name><operator pos:start="107:93" pos:end="107:93">)</operator><name pos:start="107:94" pos:end="107:105"><name pos:start="107:94" pos:end="107:100">mapping</name><operator pos:start="107:101" pos:end="107:102">-&gt;</operator><name pos:start="107:103" pos:end="107:105">end</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="109:1" pos:end="109:6">#<cpp:directive pos:start="109:2" pos:end="109:6">endif</cpp:directive></cpp:endif>

	    <expr_stmt pos:start="111:13" pos:end="111:48"><expr pos:start="111:13" pos:end="111:47"><call pos:start="111:13" pos:end="111:47"><name pos:start="111:13" pos:end="111:18">assert</name><argument_list pos:start="111:19" pos:end="111:47">(<argument pos:start="111:20" pos:end="111:46"><expr pos:start="111:20" pos:end="111:46"><name pos:start="111:20" pos:end="111:33"><name pos:start="111:20" pos:end="111:26">mapping</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:33">begin</name></name><operator pos:start="111:34" pos:end="111:34">&lt;</operator><name pos:start="111:35" pos:end="111:46"><name pos:start="111:35" pos:end="111:41">mapping</name><operator pos:start="111:42" pos:end="111:43">-&gt;</operator><name pos:start="111:44" pos:end="111:46">end</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <for pos:start="113:13" pos:end="115:33">for<control pos:start="113:16" pos:end="113:54">(<init pos:start="113:17" pos:end="113:33"><expr pos:start="113:17" pos:end="113:32"><name pos:start="113:17" pos:end="113:17">i</name><operator pos:start="113:18" pos:end="113:18">=</operator><name pos:start="113:19" pos:end="113:32"><name pos:start="113:19" pos:end="113:25">mapping</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:32">begin</name></name></expr>;</init><condition pos:start="113:34" pos:end="113:50"><expr pos:start="113:34" pos:end="113:49"><name pos:start="113:34" pos:end="113:34">i</name><operator pos:start="113:35" pos:end="113:35">&lt;</operator><name pos:start="113:36" pos:end="113:47"><name pos:start="113:36" pos:end="113:42">mapping</name><operator pos:start="113:43" pos:end="113:44">-&gt;</operator><name pos:start="113:45" pos:end="113:47">end</name></name><operator pos:start="113:48" pos:end="113:48">-</operator><literal type="number" pos:start="113:49" pos:end="113:49">1</literal></expr>;</condition><incr pos:start="113:51" pos:end="113:53"><expr pos:start="113:51" pos:end="113:53"><name pos:start="113:51" pos:end="113:51">i</name><operator pos:start="113:52" pos:end="113:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="115:17" pos:end="115:33"><block_content pos:start="115:17" pos:end="115:33">

		<expr_stmt pos:start="115:17" pos:end="115:33"><expr pos:start="115:17" pos:end="115:32"><call pos:start="115:17" pos:end="115:32"><name pos:start="115:17" pos:end="115:23">fat_set</name><argument_list pos:start="115:24" pos:end="115:32">(<argument pos:start="115:25" pos:end="115:25"><expr pos:start="115:25" pos:end="115:25"><name pos:start="115:25" pos:end="115:25">s</name></expr></argument>,<argument pos:start="115:27" pos:end="115:27"><expr pos:start="115:27" pos:end="115:27"><name pos:start="115:27" pos:end="115:27">i</name></expr></argument>,<argument pos:start="115:29" pos:end="115:31"><expr pos:start="115:29" pos:end="115:31"><name pos:start="115:29" pos:end="115:29">i</name><operator pos:start="115:30" pos:end="115:30">+</operator><literal type="number" pos:start="115:31" pos:end="115:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

	    <expr_stmt pos:start="117:13" pos:end="117:36"><expr pos:start="117:13" pos:end="117:35"><call pos:start="117:13" pos:end="117:35"><name pos:start="117:13" pos:end="117:19">fat_set</name><argument_list pos:start="117:20" pos:end="117:35">(<argument pos:start="117:21" pos:end="117:21"><expr pos:start="117:21" pos:end="117:21"><name pos:start="117:21" pos:end="117:21">s</name></expr></argument>,<argument pos:start="117:23" pos:end="117:23"><expr pos:start="117:23" pos:end="117:23"><name pos:start="117:23" pos:end="117:23">i</name></expr></argument>,<argument pos:start="117:25" pos:end="117:34"><expr pos:start="117:25" pos:end="117:34"><literal type="number" pos:start="117:25" pos:end="117:34">0x7fffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="119:11" pos:end="167:9">else <block pos:start="119:16" pos:end="167:9">{<block_content pos:start="123:13" pos:end="165:22">

	    <comment type="block" pos:start="121:13" pos:end="121:68">/* as the space is virtual, we can be sloppy about it */</comment>

	    <decl_stmt pos:start="123:13" pos:end="123:74"><decl pos:start="123:13" pos:end="123:73"><type pos:start="123:13" pos:end="123:24"><name pos:start="123:13" pos:end="123:20">unsigned</name> <name pos:start="123:22" pos:end="123:24">int</name></type> <name pos:start="123:26" pos:end="123:36">end_cluster</name><init pos:start="123:37" pos:end="123:73">=<expr pos:start="123:38" pos:end="123:73"><name pos:start="123:38" pos:end="123:44">cluster</name><operator pos:start="123:45" pos:end="123:45">+</operator><name pos:start="123:46" pos:end="123:57"><name pos:start="123:46" pos:end="123:52">mapping</name><operator pos:start="123:53" pos:end="123:54">-&gt;</operator><name pos:start="123:55" pos:end="123:57">end</name></name><operator pos:start="123:58" pos:end="123:58">/</operator><name pos:start="123:59" pos:end="123:73"><name pos:start="123:59" pos:end="123:59">s</name><operator pos:start="123:60" pos:end="123:61">-&gt;</operator><name pos:start="123:62" pos:end="123:73">cluster_size</name></name></expr></init></decl>;</decl_stmt>



	    <if_stmt pos:start="127:13" pos:end="133:13"><if pos:start="127:13" pos:end="133:13">if<condition pos:start="127:15" pos:end="127:45">(<expr pos:start="127:16" pos:end="127:44"><name pos:start="127:16" pos:end="127:26">end_cluster</name><operator pos:start="127:27" pos:end="127:28">&gt;=</operator><name pos:start="127:29" pos:end="127:44"><name pos:start="127:29" pos:end="127:29">s</name><operator pos:start="127:30" pos:end="127:31">-&gt;</operator><name pos:start="127:32" pos:end="127:44">cluster_count</name></name></expr>)</condition> <block pos:start="127:47" pos:end="133:13">{<block_content pos:start="129:17" pos:end="131:26">

		<expr_stmt pos:start="129:17" pos:end="129:80"><expr pos:start="129:17" pos:end="129:79"><call pos:start="129:17" pos:end="129:79"><name pos:start="129:17" pos:end="129:23">fprintf</name><argument_list pos:start="129:24" pos:end="129:79">(<argument pos:start="129:25" pos:end="129:30"><expr pos:start="129:25" pos:end="129:30"><name pos:start="129:25" pos:end="129:30">stderr</name></expr></argument>,<argument pos:start="129:32" pos:end="129:66"><expr pos:start="129:32" pos:end="129:66"><literal type="string" pos:start="129:32" pos:end="129:66">"Directory does not fit in FAT%d\n"</literal></expr></argument>,<argument pos:start="129:68" pos:end="129:78"><expr pos:start="129:68" pos:end="129:78"><name pos:start="129:68" pos:end="129:78"><name pos:start="129:68" pos:end="129:68">s</name><operator pos:start="129:69" pos:end="129:70">-&gt;</operator><name pos:start="129:71" pos:end="129:78">fat_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="131:17" pos:end="131:26">return <expr pos:start="131:24" pos:end="131:25"><operator pos:start="131:24" pos:end="131:24">-</operator><literal type="number" pos:start="131:25" pos:end="131:25">1</literal></expr>;</return>

	    </block_content>}</block></if></if_stmt>

	    <expr_stmt pos:start="135:13" pos:end="135:35"><expr pos:start="135:13" pos:end="135:34"><name pos:start="135:13" pos:end="135:26"><name pos:start="135:13" pos:end="135:19">mapping</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:26">begin</name></name><operator pos:start="135:27" pos:end="135:27">=</operator><name pos:start="135:28" pos:end="135:34">cluster</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="137:13" pos:end="137:38"><expr pos:start="137:13" pos:end="137:37"><name pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:19">mapping</name><operator pos:start="137:20" pos:end="137:21">-&gt;</operator><name pos:start="137:22" pos:end="137:25">mode</name></name><operator pos:start="137:26" pos:end="137:26">=</operator><name pos:start="137:27" pos:end="137:37">MODE_NORMAL</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="139:13" pos:end="139:30"><expr pos:start="139:13" pos:end="139:29"><name pos:start="139:13" pos:end="139:27"><name pos:start="139:13" pos:end="139:19">mapping</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:27">offset</name></name><operator pos:start="139:28" pos:end="139:28">=</operator><literal type="number" pos:start="139:29" pos:end="139:29">0</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="141:13" pos:end="141:53"><expr pos:start="141:13" pos:end="141:52"><name pos:start="141:13" pos:end="141:26"><name pos:start="141:13" pos:end="141:20">direntry</name><operator pos:start="141:21" pos:end="141:22">-&gt;</operator><name pos:start="141:23" pos:end="141:26">size</name></name><operator pos:start="141:27" pos:end="141:27">=</operator><call pos:start="141:28" pos:end="141:52"><name pos:start="141:28" pos:end="141:38">cpu_to_le32</name><argument_list pos:start="141:39" pos:end="141:52">(<argument pos:start="141:40" pos:end="141:51"><expr pos:start="141:40" pos:end="141:51"><name pos:start="141:40" pos:end="141:51"><name pos:start="141:40" pos:end="141:46">mapping</name><operator pos:start="141:47" pos:end="141:48">-&gt;</operator><name pos:start="141:49" pos:end="141:51">end</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <if_stmt pos:start="143:13" pos:end="151:13"><if pos:start="143:13" pos:end="151:13">if<condition pos:start="143:15" pos:end="143:33">(<expr pos:start="143:16" pos:end="143:32"><name pos:start="143:16" pos:end="143:29"><name pos:start="143:16" pos:end="143:23">direntry</name><operator pos:start="143:24" pos:end="143:25">-&gt;</operator><name pos:start="143:26" pos:end="143:29">size</name></name><operator pos:start="143:30" pos:end="143:31">==</operator><literal type="number" pos:start="143:32" pos:end="143:32">0</literal></expr>)</condition> <block pos:start="143:35" pos:end="151:13">{<block_content pos:start="145:17" pos:end="149:25">

		<expr_stmt pos:start="145:17" pos:end="145:34"><expr pos:start="145:17" pos:end="145:33"><name pos:start="145:17" pos:end="145:31"><name pos:start="145:17" pos:end="145:24">direntry</name><operator pos:start="145:25" pos:end="145:26">-&gt;</operator><name pos:start="145:27" pos:end="145:31">begin</name></name><operator pos:start="145:32" pos:end="145:32">=</operator><literal type="number" pos:start="145:33" pos:end="145:33">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="147:17" pos:end="147:37"><expr pos:start="147:17" pos:end="147:36"><name pos:start="147:17" pos:end="147:28"><name pos:start="147:17" pos:end="147:23">mapping</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:28">end</name></name><operator pos:start="147:29" pos:end="147:29">=</operator><name pos:start="147:30" pos:end="147:36">cluster</name></expr>;</expr_stmt>

		<continue pos:start="149:17" pos:end="149:25">continue;</continue>

	    </block_content>}</block></if></if_stmt>



	    <expr_stmt pos:start="155:13" pos:end="155:49"><expr pos:start="155:13" pos:end="155:48"><name pos:start="155:13" pos:end="155:27"><name pos:start="155:13" pos:end="155:20">direntry</name><operator pos:start="155:21" pos:end="155:22">-&gt;</operator><name pos:start="155:23" pos:end="155:27">begin</name></name><operator pos:start="155:28" pos:end="155:28">=</operator><call pos:start="155:29" pos:end="155:48"><name pos:start="155:29" pos:end="155:39">cpu_to_le16</name><argument_list pos:start="155:40" pos:end="155:48">(<argument pos:start="155:41" pos:end="155:47"><expr pos:start="155:41" pos:end="155:47"><name pos:start="155:41" pos:end="155:47">cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="157:13" pos:end="157:39"><expr pos:start="157:13" pos:end="157:38"><name pos:start="157:13" pos:end="157:24"><name pos:start="157:13" pos:end="157:19">mapping</name><operator pos:start="157:20" pos:end="157:21">-&gt;</operator><name pos:start="157:22" pos:end="157:24">end</name></name><operator pos:start="157:25" pos:end="157:25">=</operator><name pos:start="157:26" pos:end="157:36">end_cluster</name><operator pos:start="157:37" pos:end="157:37">+</operator><literal type="number" pos:start="157:38" pos:end="157:38">1</literal></expr>;</expr_stmt>

	    <for pos:start="159:13" pos:end="161:45">for<control pos:start="159:16" pos:end="159:47">(<init pos:start="159:17" pos:end="159:17">;</init><condition pos:start="159:18" pos:end="159:37"><expr pos:start="159:18" pos:end="159:36"><name pos:start="159:18" pos:end="159:24">cluster</name><operator pos:start="159:25" pos:end="159:25">&lt;</operator><name pos:start="159:26" pos:end="159:36">end_cluster</name></expr>;</condition><incr pos:start="159:38" pos:end="159:46"><expr pos:start="159:38" pos:end="159:46"><name pos:start="159:38" pos:end="159:44">cluster</name><operator pos:start="159:45" pos:end="159:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="161:17" pos:end="161:45"><block_content pos:start="161:17" pos:end="161:45">

	        <expr_stmt pos:start="161:17" pos:end="161:45"><expr pos:start="161:17" pos:end="161:44"><call pos:start="161:17" pos:end="161:44"><name pos:start="161:17" pos:end="161:23">fat_set</name><argument_list pos:start="161:24" pos:end="161:44">(<argument pos:start="161:25" pos:end="161:25"><expr pos:start="161:25" pos:end="161:25"><name pos:start="161:25" pos:end="161:25">s</name></expr></argument>,<argument pos:start="161:27" pos:end="161:33"><expr pos:start="161:27" pos:end="161:33"><name pos:start="161:27" pos:end="161:33">cluster</name></expr></argument>,<argument pos:start="161:35" pos:end="161:43"><expr pos:start="161:35" pos:end="161:43"><name pos:start="161:35" pos:end="161:41">cluster</name><operator pos:start="161:42" pos:end="161:42">+</operator><literal type="number" pos:start="161:43" pos:end="161:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

	    <expr_stmt pos:start="163:13" pos:end="163:42"><expr pos:start="163:13" pos:end="163:41"><call pos:start="163:13" pos:end="163:41"><name pos:start="163:13" pos:end="163:19">fat_set</name><argument_list pos:start="163:20" pos:end="163:41">(<argument pos:start="163:21" pos:end="163:21"><expr pos:start="163:21" pos:end="163:21"><name pos:start="163:21" pos:end="163:21">s</name></expr></argument>,<argument pos:start="163:23" pos:end="163:29"><expr pos:start="163:23" pos:end="163:29"><name pos:start="163:23" pos:end="163:29">cluster</name></expr></argument>,<argument pos:start="163:31" pos:end="163:40"><expr pos:start="163:31" pos:end="163:40"><literal type="number" pos:start="163:31" pos:end="163:40">0x7fffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="165:13" pos:end="165:22"><expr pos:start="165:13" pos:end="165:21"><name pos:start="165:13" pos:end="165:19">cluster</name><operator pos:start="165:20" pos:end="165:21">++</operator></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="173:5" pos:end="173:25"><expr pos:start="173:5" pos:end="173:24"><name pos:start="173:5" pos:end="173:22"><name pos:start="173:5" pos:end="173:5">s</name><operator pos:start="173:6" pos:end="173:7">-&gt;</operator><name pos:start="173:8" pos:end="173:22">current_mapping</name></name><operator pos:start="173:23" pos:end="173:23">=</operator><literal type="number" pos:start="173:24" pos:end="173:24">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:29"><expr pos:start="177:5" pos:end="177:28"><name pos:start="177:5" pos:end="177:23"><name pos:start="177:5" pos:end="177:14">bootsector</name><operator pos:start="177:15" pos:end="177:16">-&gt;</operator><name pos:start="177:17" pos:end="177:20">jump</name><index pos:start="177:21" pos:end="177:23">[<expr pos:start="177:22" pos:end="177:22"><literal type="number" pos:start="177:22" pos:end="177:22">0</literal></expr>]</index></name><operator pos:start="177:24" pos:end="177:24">=</operator><literal type="number" pos:start="177:25" pos:end="177:28">0xeb</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:29"><expr pos:start="179:5" pos:end="179:28"><name pos:start="179:5" pos:end="179:23"><name pos:start="179:5" pos:end="179:14">bootsector</name><operator pos:start="179:15" pos:end="179:16">-&gt;</operator><name pos:start="179:17" pos:end="179:20">jump</name><index pos:start="179:21" pos:end="179:23">[<expr pos:start="179:22" pos:end="179:22"><literal type="number" pos:start="179:22" pos:end="179:22">1</literal></expr>]</index></name><operator pos:start="179:24" pos:end="179:24">=</operator><literal type="number" pos:start="179:25" pos:end="179:28">0x3e</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:29"><expr pos:start="181:5" pos:end="181:28"><name pos:start="181:5" pos:end="181:23"><name pos:start="181:5" pos:end="181:14">bootsector</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:20">jump</name><index pos:start="181:21" pos:end="181:23">[<expr pos:start="181:22" pos:end="181:22"><literal type="number" pos:start="181:22" pos:end="181:22">2</literal></expr>]</index></name><operator pos:start="181:24" pos:end="181:24">=</operator><literal type="number" pos:start="181:25" pos:end="181:28">0x90</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:42"><expr pos:start="183:5" pos:end="183:41"><call pos:start="183:5" pos:end="183:41"><name pos:start="183:5" pos:end="183:10">memcpy</name><argument_list pos:start="183:11" pos:end="183:41">(<argument pos:start="183:12" pos:end="183:27"><expr pos:start="183:12" pos:end="183:27"><name pos:start="183:12" pos:end="183:27"><name pos:start="183:12" pos:end="183:21">bootsector</name><operator pos:start="183:22" pos:end="183:23">-&gt;</operator><name pos:start="183:24" pos:end="183:27">name</name></name></expr></argument>,<argument pos:start="183:29" pos:end="183:38"><expr pos:start="183:29" pos:end="183:38"><literal type="string" pos:start="183:29" pos:end="183:38">"QEMU    "</literal></expr></argument>,<argument pos:start="183:40" pos:end="183:40"><expr pos:start="183:40" pos:end="183:40"><literal type="number" pos:start="183:40" pos:end="183:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:47"><expr pos:start="185:5" pos:end="185:46"><name pos:start="185:5" pos:end="185:27"><name pos:start="185:5" pos:end="185:14">bootsector</name><operator pos:start="185:15" pos:end="185:16">-&gt;</operator><name pos:start="185:17" pos:end="185:27">sector_size</name></name><operator pos:start="185:28" pos:end="185:28">=</operator><call pos:start="185:29" pos:end="185:46"><name pos:start="185:29" pos:end="185:39">cpu_to_le16</name><argument_list pos:start="185:40" pos:end="185:46">(<argument pos:start="185:41" pos:end="185:45"><expr pos:start="185:41" pos:end="185:45"><literal type="number" pos:start="185:41" pos:end="185:45">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:59"><expr pos:start="187:5" pos:end="187:58"><name pos:start="187:5" pos:end="187:35"><name pos:start="187:5" pos:end="187:14">bootsector</name><operator pos:start="187:15" pos:end="187:16">-&gt;</operator><name pos:start="187:17" pos:end="187:35">sectors_per_cluster</name></name><operator pos:start="187:36" pos:end="187:36">=</operator><name pos:start="187:37" pos:end="187:58"><name pos:start="187:37" pos:end="187:37">s</name><operator pos:start="187:38" pos:end="187:39">-&gt;</operator><name pos:start="187:40" pos:end="187:58">sectors_per_cluster</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:48"><expr pos:start="189:5" pos:end="189:47"><name pos:start="189:5" pos:end="189:32"><name pos:start="189:5" pos:end="189:14">bootsector</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:32">reserved_sectors</name></name><operator pos:start="189:33" pos:end="189:33">=</operator><call pos:start="189:34" pos:end="189:47"><name pos:start="189:34" pos:end="189:44">cpu_to_le16</name><argument_list pos:start="189:45" pos:end="189:47">(<argument pos:start="189:46" pos:end="189:46"><expr pos:start="189:46" pos:end="189:46"><literal type="number" pos:start="189:46" pos:end="189:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:35"><expr pos:start="191:5" pos:end="191:34"><name pos:start="191:5" pos:end="191:30"><name pos:start="191:5" pos:end="191:14">bootsector</name><operator pos:start="191:15" pos:end="191:16">-&gt;</operator><name pos:start="191:17" pos:end="191:30">number_of_fats</name></name><operator pos:start="191:31" pos:end="191:31">=</operator><literal type="number" pos:start="191:32" pos:end="191:34">0x2</literal></expr>;</expr_stmt> <comment type="block" pos:start="191:37" pos:end="191:56">/* number of FATs */</comment>

    <expr_stmt pos:start="193:5" pos:end="193:76"><expr pos:start="193:5" pos:end="193:75"><name pos:start="193:5" pos:end="193:28"><name pos:start="193:5" pos:end="193:14">bootsector</name><operator pos:start="193:15" pos:end="193:16">-&gt;</operator><name pos:start="193:17" pos:end="193:28">root_entries</name></name><operator pos:start="193:29" pos:end="193:29">=</operator><call pos:start="193:30" pos:end="193:75"><name pos:start="193:30" pos:end="193:40">cpu_to_le16</name><argument_list pos:start="193:41" pos:end="193:75">(<argument pos:start="193:42" pos:end="193:74"><expr pos:start="193:42" pos:end="193:74"><name pos:start="193:42" pos:end="193:69"><name pos:start="193:42" pos:end="193:42">s</name><operator pos:start="193:43" pos:end="193:44">-&gt;</operator><name pos:start="193:45" pos:end="193:69">sectors_of_root_directory</name></name><operator pos:start="193:70" pos:end="193:70">*</operator><literal type="number" pos:start="193:71" pos:end="193:74">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:23"><expr pos:start="195:5" pos:end="195:22"><name pos:start="195:5" pos:end="195:20"><name pos:start="195:5" pos:end="195:14">bootsector</name><operator pos:start="195:15" pos:end="195:16">-&gt;</operator><name pos:start="195:17" pos:end="195:20">zero</name></name><operator pos:start="195:21" pos:end="195:21">=</operator><literal type="number" pos:start="195:22" pos:end="195:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:66"><expr pos:start="197:5" pos:end="197:65"><name pos:start="197:5" pos:end="197:26"><name pos:start="197:5" pos:end="197:14">bootsector</name><operator pos:start="197:15" pos:end="197:16">-&gt;</operator><name pos:start="197:17" pos:end="197:26">media_type</name></name><operator pos:start="197:27" pos:end="197:27">=</operator><operator pos:start="197:28" pos:end="197:28">(</operator><ternary pos:start="197:29" pos:end="197:64"><condition pos:start="197:29" pos:end="197:55"><expr pos:start="197:29" pos:end="197:54"><name pos:start="197:29" pos:end="197:51"><name pos:start="197:29" pos:end="197:29">s</name><operator pos:start="197:30" pos:end="197:31">-&gt;</operator><name pos:start="197:32" pos:end="197:51">first_sectors_number</name></name><operator pos:start="197:52" pos:end="197:53">==</operator><literal type="number" pos:start="197:54" pos:end="197:54">1</literal></expr>?</condition><then pos:start="197:56" pos:end="197:59"><expr pos:start="197:56" pos:end="197:59"><literal type="number" pos:start="197:56" pos:end="197:59">0xf0</literal></expr></then><else pos:start="197:60" pos:end="197:64">:<expr pos:start="197:61" pos:end="197:64"><literal type="number" pos:start="197:61" pos:end="197:64">0xf8</literal></expr></else></ternary><operator pos:start="197:65" pos:end="197:65">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="197:68" pos:end="197:89">/* media descriptor */</comment>

    <expr_stmt pos:start="199:5" pos:end="199:64"><expr pos:start="199:5" pos:end="199:63"><name pos:start="199:5" pos:end="199:31"><name pos:start="199:5" pos:end="199:14">bootsector</name><operator pos:start="199:15" pos:end="199:16">-&gt;</operator><name pos:start="199:17" pos:end="199:31">sectors_per_fat</name></name><operator pos:start="199:32" pos:end="199:32">=</operator><call pos:start="199:33" pos:end="199:63"><name pos:start="199:33" pos:end="199:43">cpu_to_le16</name><argument_list pos:start="199:44" pos:end="199:63">(<argument pos:start="199:45" pos:end="199:62"><expr pos:start="199:45" pos:end="199:62"><name pos:start="199:45" pos:end="199:62"><name pos:start="199:45" pos:end="199:45">s</name><operator pos:start="199:46" pos:end="199:47">-&gt;</operator><name pos:start="199:48" pos:end="199:62">sectors_per_fat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:52"><expr pos:start="201:5" pos:end="201:51"><name pos:start="201:5" pos:end="201:33"><name pos:start="201:5" pos:end="201:14">bootsector</name><operator pos:start="201:15" pos:end="201:16">-&gt;</operator><name pos:start="201:17" pos:end="201:33">sectors_per_track</name></name><operator pos:start="201:34" pos:end="201:34">=</operator><call pos:start="201:35" pos:end="201:51"><name pos:start="201:35" pos:end="201:45">cpu_to_le16</name><argument_list pos:start="201:46" pos:end="201:51">(<argument pos:start="201:47" pos:end="201:50"><expr pos:start="201:47" pos:end="201:50"><literal type="number" pos:start="201:47" pos:end="201:50">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:50"><expr pos:start="203:5" pos:end="203:49"><name pos:start="203:5" pos:end="203:31"><name pos:start="203:5" pos:end="203:14">bootsector</name><operator pos:start="203:15" pos:end="203:16">-&gt;</operator><name pos:start="203:17" pos:end="203:31">number_of_heads</name></name><operator pos:start="203:32" pos:end="203:32">=</operator><call pos:start="203:33" pos:end="203:49"><name pos:start="203:33" pos:end="203:43">cpu_to_le16</name><argument_list pos:start="203:44" pos:end="203:49">(<argument pos:start="203:45" pos:end="203:48"><expr pos:start="203:45" pos:end="203:48"><literal type="number" pos:start="203:45" pos:end="203:48">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:78"><expr pos:start="205:5" pos:end="205:77"><name pos:start="205:5" pos:end="205:30"><name pos:start="205:5" pos:end="205:14">bootsector</name><operator pos:start="205:15" pos:end="205:16">-&gt;</operator><name pos:start="205:17" pos:end="205:30">hidden_sectors</name></name><operator pos:start="205:31" pos:end="205:31">=</operator><call pos:start="205:32" pos:end="205:77"><name pos:start="205:32" pos:end="205:42">cpu_to_le32</name><argument_list pos:start="205:43" pos:end="205:77">(<argument pos:start="205:44" pos:end="205:76"><expr pos:start="205:44" pos:end="205:76"><ternary pos:start="205:44" pos:end="205:76"><condition pos:start="205:44" pos:end="205:70"><expr pos:start="205:44" pos:end="205:69"><name pos:start="205:44" pos:end="205:66"><name pos:start="205:44" pos:end="205:44">s</name><operator pos:start="205:45" pos:end="205:46">-&gt;</operator><name pos:start="205:47" pos:end="205:66">first_sectors_number</name></name><operator pos:start="205:67" pos:end="205:68">==</operator><literal type="number" pos:start="205:69" pos:end="205:69">1</literal></expr>?</condition><then pos:start="205:71" pos:end="205:71"><expr pos:start="205:71" pos:end="205:71"><literal type="number" pos:start="205:71" pos:end="205:71">0</literal></expr></then><else pos:start="205:72" pos:end="205:76">:<expr pos:start="205:73" pos:end="205:76"><literal type="number" pos:start="205:73" pos:end="205:76">0x3f</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="207:5" pos:end="207:32">/* TODO: if FAT32, adjust */</comment>

    <expr_stmt pos:start="209:5" pos:end="209:59"><expr pos:start="209:5" pos:end="209:58"><name pos:start="209:5" pos:end="209:29"><name pos:start="209:5" pos:end="209:14">bootsector</name><operator pos:start="209:15" pos:end="209:16">-&gt;</operator><name pos:start="209:17" pos:end="209:29">total_sectors</name></name><operator pos:start="209:30" pos:end="209:30">=</operator><call pos:start="209:31" pos:end="209:58"><name pos:start="209:31" pos:end="209:41">cpu_to_le32</name><argument_list pos:start="209:42" pos:end="209:58">(<argument pos:start="209:43" pos:end="209:57"><expr pos:start="209:43" pos:end="209:57"><name pos:start="209:43" pos:end="209:57"><name pos:start="209:43" pos:end="209:43">s</name><operator pos:start="209:44" pos:end="209:45">-&gt;</operator><name pos:start="209:46" pos:end="209:57">sector_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="213:5" pos:end="213:39">/* TODO: if FAT32, this is wrong */</comment>

    <expr_stmt pos:start="215:5" pos:end="215:42"><expr pos:start="215:5" pos:end="215:41"><name pos:start="215:5" pos:end="215:36"><name pos:start="215:5" pos:end="215:14">bootsector</name><operator pos:start="215:15" pos:end="215:16">-&gt;</operator><name pos:start="215:17" pos:end="215:17">u</name><operator pos:start="215:18" pos:end="215:18">.</operator><name pos:start="215:19" pos:end="215:23">fat16</name><operator pos:start="215:24" pos:end="215:24">.</operator><name pos:start="215:25" pos:end="215:36">drive_number</name></name><operator pos:start="215:37" pos:end="215:37">=</operator><literal type="number" pos:start="215:38" pos:end="215:41">0x80</literal></expr>;</expr_stmt> <comment type="block" pos:start="215:44" pos:end="215:74">/* assume this is hda (TODO) */</comment>

    <expr_stmt pos:start="217:5" pos:end="217:39"><expr pos:start="217:5" pos:end="217:38"><name pos:start="217:5" pos:end="217:36"><name pos:start="217:5" pos:end="217:14">bootsector</name><operator pos:start="217:15" pos:end="217:16">-&gt;</operator><name pos:start="217:17" pos:end="217:17">u</name><operator pos:start="217:18" pos:end="217:18">.</operator><name pos:start="217:19" pos:end="217:23">fat16</name><operator pos:start="217:24" pos:end="217:24">.</operator><name pos:start="217:25" pos:end="217:36">current_head</name></name><operator pos:start="217:37" pos:end="217:37">=</operator><literal type="number" pos:start="217:38" pos:end="217:38">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:39"><expr pos:start="219:5" pos:end="219:38"><name pos:start="219:5" pos:end="219:33"><name pos:start="219:5" pos:end="219:14">bootsector</name><operator pos:start="219:15" pos:end="219:16">-&gt;</operator><name pos:start="219:17" pos:end="219:17">u</name><operator pos:start="219:18" pos:end="219:18">.</operator><name pos:start="219:19" pos:end="219:23">fat16</name><operator pos:start="219:24" pos:end="219:24">.</operator><name pos:start="219:25" pos:end="219:33">signature</name></name><operator pos:start="219:34" pos:end="219:34">=</operator><literal type="number" pos:start="219:35" pos:end="219:38">0x29</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:51"><expr pos:start="221:5" pos:end="221:50"><name pos:start="221:5" pos:end="221:26"><name pos:start="221:5" pos:end="221:14">bootsector</name><operator pos:start="221:15" pos:end="221:16">-&gt;</operator><name pos:start="221:17" pos:end="221:17">u</name><operator pos:start="221:18" pos:end="221:18">.</operator><name pos:start="221:19" pos:end="221:23">fat16</name><operator pos:start="221:24" pos:end="221:24">.</operator><name pos:start="221:25" pos:end="221:26">id</name></name><operator pos:start="221:27" pos:end="221:27">=</operator><call pos:start="221:28" pos:end="221:50"><name pos:start="221:28" pos:end="221:38">cpu_to_le32</name><argument_list pos:start="221:39" pos:end="221:50">(<argument pos:start="221:40" pos:end="221:49"><expr pos:start="221:40" pos:end="221:49"><literal type="number" pos:start="221:40" pos:end="221:49">0xfabe1afd</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:62"><expr pos:start="225:5" pos:end="225:61"><call pos:start="225:5" pos:end="225:61"><name pos:start="225:5" pos:end="225:10">memcpy</name><argument_list pos:start="225:11" pos:end="225:61">(<argument pos:start="225:12" pos:end="225:43"><expr pos:start="225:12" pos:end="225:43"><name pos:start="225:12" pos:end="225:43"><name pos:start="225:12" pos:end="225:21">bootsector</name><operator pos:start="225:22" pos:end="225:23">-&gt;</operator><name pos:start="225:24" pos:end="225:24">u</name><operator pos:start="225:25" pos:end="225:25">.</operator><name pos:start="225:26" pos:end="225:30">fat16</name><operator pos:start="225:31" pos:end="225:31">.</operator><name pos:start="225:32" pos:end="225:43">volume_label</name></name></expr></argument>,<argument pos:start="225:45" pos:end="225:57"><expr pos:start="225:45" pos:end="225:57"><literal type="string" pos:start="225:45" pos:end="225:57">"QEMU VVFAT "</literal></expr></argument>,<argument pos:start="225:59" pos:end="225:60"><expr pos:start="225:59" pos:end="225:60"><literal type="number" pos:start="225:59" pos:end="225:60">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:102"><expr pos:start="227:5" pos:end="227:101"><call pos:start="227:5" pos:end="227:101"><name pos:start="227:5" pos:end="227:10">memcpy</name><argument_list pos:start="227:11" pos:end="227:101">(<argument pos:start="227:12" pos:end="227:31"><expr pos:start="227:12" pos:end="227:31"><name pos:start="227:12" pos:end="227:31"><name pos:start="227:12" pos:end="227:21">bootsector</name><operator pos:start="227:22" pos:end="227:23">-&gt;</operator><name pos:start="227:24" pos:end="227:31">fat_type</name></name></expr></argument>,<argument pos:start="227:33" pos:end="227:98"><expr pos:start="227:33" pos:end="227:98"><operator pos:start="227:33" pos:end="227:33">(</operator><ternary pos:start="227:34" pos:end="227:97"><condition pos:start="227:34" pos:end="227:49"><expr pos:start="227:34" pos:end="227:48"><name pos:start="227:34" pos:end="227:44"><name pos:start="227:34" pos:end="227:34">s</name><operator pos:start="227:35" pos:end="227:36">-&gt;</operator><name pos:start="227:37" pos:end="227:44">fat_type</name></name><operator pos:start="227:45" pos:end="227:46">==</operator><literal type="number" pos:start="227:47" pos:end="227:48">12</literal></expr>?</condition><then pos:start="227:50" pos:end="227:59"><expr pos:start="227:50" pos:end="227:59"><literal type="string" pos:start="227:50" pos:end="227:59">"FAT12   "</literal></expr></then><else pos:start="227:60" pos:end="227:97">:<expr pos:start="227:61" pos:end="227:97"><ternary pos:start="227:61" pos:end="227:97"><condition pos:start="227:61" pos:end="227:76"><expr pos:start="227:61" pos:end="227:75"><name pos:start="227:61" pos:end="227:71"><name pos:start="227:61" pos:end="227:61">s</name><operator pos:start="227:62" pos:end="227:63">-&gt;</operator><name pos:start="227:64" pos:end="227:71">fat_type</name></name><operator pos:start="227:72" pos:end="227:73">==</operator><literal type="number" pos:start="227:74" pos:end="227:75">16</literal></expr>?</condition><then pos:start="227:77" pos:end="227:86"><expr pos:start="227:77" pos:end="227:86"><literal type="string" pos:start="227:77" pos:end="227:86">"FAT16   "</literal></expr></then><else pos:start="227:87" pos:end="227:97">:<expr pos:start="227:88" pos:end="227:97"><literal type="string" pos:start="227:88" pos:end="227:97">"FAT32   "</literal></expr></else></ternary></expr></else></ternary><operator pos:start="227:98" pos:end="227:98">)</operator></expr></argument>,<argument pos:start="227:100" pos:end="227:100"><expr pos:start="227:100" pos:end="227:100"><literal type="number" pos:start="227:100" pos:end="227:100">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:30"><expr pos:start="229:5" pos:end="229:29"><name pos:start="229:5" pos:end="229:24"><name pos:start="229:5" pos:end="229:14">bootsector</name><operator pos:start="229:15" pos:end="229:16">-&gt;</operator><name pos:start="229:17" pos:end="229:21">magic</name><index pos:start="229:22" pos:end="229:24">[<expr pos:start="229:23" pos:end="229:23"><literal type="number" pos:start="229:23" pos:end="229:23">0</literal></expr>]</index></name><operator pos:start="229:25" pos:end="229:25">=</operator><literal type="number" pos:start="229:26" pos:end="229:29">0x55</literal></expr>;</expr_stmt> <expr_stmt pos:start="229:32" pos:end="229:57"><expr pos:start="229:32" pos:end="229:56"><name pos:start="229:32" pos:end="229:51"><name pos:start="229:32" pos:end="229:41">bootsector</name><operator pos:start="229:42" pos:end="229:43">-&gt;</operator><name pos:start="229:44" pos:end="229:48">magic</name><index pos:start="229:49" pos:end="229:51">[<expr pos:start="229:50" pos:end="229:50"><literal type="number" pos:start="229:50" pos:end="229:50">1</literal></expr>]</index></name><operator pos:start="229:52" pos:end="229:52">=</operator><literal type="number" pos:start="229:53" pos:end="229:56">0xaa</literal></expr>;</expr_stmt>



    <return pos:start="233:5" pos:end="233:13">return <expr pos:start="233:12" pos:end="233:12"><literal type="number" pos:start="233:12" pos:end="233:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
