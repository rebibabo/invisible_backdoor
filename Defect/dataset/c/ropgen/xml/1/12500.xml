<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12500.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mov_read_extradata</name><parameter_list pos:start="1:30" pos:end="3:54">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:40">MOVContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">c</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:60"><decl pos:start="1:46" pos:end="1:60"><type pos:start="1:46" pos:end="1:60"><name pos:start="1:46" pos:end="1:56">AVIOContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">pb</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:69">MOVAtom</name></type> <name pos:start="1:71" pos:end="1:74">atom</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:53"><decl pos:start="3:31" pos:end="3:53"><type pos:start="3:31" pos:end="3:53"><name pos:start="3:31" pos:end="3:44"><name pos:start="3:31" pos:end="3:34">enum</name> <name pos:start="3:36" pos:end="3:44">AVCodecID</name></name></type> <name pos:start="3:46" pos:end="3:53">codec_id</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:13">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">err</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:30">(<expr pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:13">fc</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:25">nb_streams</name></name> <operator pos:start="17:27" pos:end="17:27">&lt;</operator> <literal type="number" pos:start="17:29" pos:end="17:29">1</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17"> <comment type="line" pos:start="17:32" pos:end="17:60">// will happen with jp2 files</comment>

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:6">st</name><operator pos:start="21:7" pos:end="21:7">=</operator> <name pos:start="21:9" pos:end="21:43"><name pos:start="21:9" pos:end="21:9">c</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:13">fc</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:22">streams</name><index pos:start="21:23" pos:end="21:43">[<expr pos:start="21:24" pos:end="21:42"><name pos:start="21:24" pos:end="21:40"><name pos:start="21:24" pos:end="21:24">c</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:28">fc</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:40">nb_streams</name></name><operator pos:start="21:41" pos:end="21:41">-</operator><literal type="number" pos:start="21:42" pos:end="21:42">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if <condition pos:start="25:8" pos:end="25:40">(<expr pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:10">st</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:17">codec</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:27">codec_id</name></name> <operator pos:start="25:29" pos:end="25:30">!=</operator> <name pos:start="25:32" pos:end="25:39">codec_id</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="27:19" pos:end="27:71">/* unexpected codec_id - don't mess with extradata */</comment>



    <expr_stmt pos:start="31:5" pos:end="31:93"><expr pos:start="31:5" pos:end="31:92"><name pos:start="31:5" pos:end="31:8">size</name><operator pos:start="31:9" pos:end="31:9">=</operator> <operator pos:start="31:11" pos:end="31:11">(</operator><name pos:start="31:12" pos:end="31:19">uint64_t</name><operator pos:start="31:20" pos:end="31:20">)</operator><name pos:start="31:21" pos:end="31:45"><name pos:start="31:21" pos:end="31:22">st</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:29">codec</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:45">extradata_size</name></name> <operator pos:start="31:47" pos:end="31:47">+</operator> <name pos:start="31:49" pos:end="31:57"><name pos:start="31:49" pos:end="31:52">atom</name><operator pos:start="31:53" pos:end="31:53">.</operator><name pos:start="31:54" pos:end="31:57">size</name></name> <operator pos:start="31:59" pos:end="31:59">+</operator> <literal type="number" pos:start="31:61" pos:end="31:63">8</literal> <operator pos:start="31:63" pos:end="31:63">+</operator> <name pos:start="31:65" pos:end="31:92">FF_INPUT_BUFFER_PADDING_SIZE</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:35"><if pos:start="33:5" pos:end="35:35">if <condition pos:start="33:8" pos:end="33:56">(<expr pos:start="33:9" pos:end="33:55"><name pos:start="33:9" pos:end="33:12">size</name> <operator pos:start="33:14" pos:end="33:14">&gt;</operator> <name pos:start="33:16" pos:end="33:22">INT_MAX</name> <operator pos:start="33:24" pos:end="33:25">||</operator> <operator pos:start="33:27" pos:end="33:27">(</operator><name pos:start="33:28" pos:end="33:35">uint64_t</name><operator pos:start="33:36" pos:end="33:36">)</operator><name pos:start="33:37" pos:end="33:45"><name pos:start="33:37" pos:end="33:40">atom</name><operator pos:start="33:41" pos:end="33:41">.</operator><name pos:start="33:42" pos:end="33:45">size</name></name> <operator pos:start="33:47" pos:end="33:47">&gt;</operator> <name pos:start="33:49" pos:end="33:55">INT_MAX</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:35"><block_content pos:start="35:9" pos:end="35:35">

        <return pos:start="35:9" pos:end="35:35">return <expr pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="39:19"><if pos:start="37:5" pos:end="39:19">if <condition pos:start="37:8" pos:end="37:61">(<expr pos:start="37:9" pos:end="37:60"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:12">err</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:55"><name pos:start="37:16" pos:end="37:26">av_reallocp</name><argument_list pos:start="37:27" pos:end="37:55">(<argument pos:start="37:28" pos:end="37:48"><expr pos:start="37:28" pos:end="37:48"><operator pos:start="37:28" pos:end="37:28">&amp;</operator><name pos:start="37:29" pos:end="37:48"><name pos:start="37:29" pos:end="37:30">st</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:37">codec</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:48">extradata</name></name></expr></argument>, <argument pos:start="37:51" pos:end="37:54"><expr pos:start="37:51" pos:end="37:54"><name pos:start="37:51" pos:end="37:54">size</name></expr></argument>)</argument_list></call><operator pos:start="37:56" pos:end="37:56">)</operator> <operator pos:start="37:58" pos:end="37:58">&lt;</operator> <literal type="number" pos:start="37:60" pos:end="37:60">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:19"><block_content pos:start="39:9" pos:end="39:19">

        <return pos:start="39:9" pos:end="39:19">return <expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">err</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:59"><expr pos:start="41:5" pos:end="41:58"><name pos:start="41:5" pos:end="41:7">buf</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <name pos:start="41:11" pos:end="41:30"><name pos:start="41:11" pos:end="41:12">st</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:19">codec</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:30">extradata</name></name> <operator pos:start="41:32" pos:end="41:32">+</operator> <name pos:start="41:34" pos:end="41:58"><name pos:start="41:34" pos:end="41:35">st</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:42">codec</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:58">extradata_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:67"><expr pos:start="43:5" pos:end="43:66"><name pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:6">st</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:13">codec</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:29">extradata_size</name></name><operator pos:start="43:30" pos:end="43:30">=</operator> <name pos:start="43:32" pos:end="43:35">size</name> <operator pos:start="43:37" pos:end="43:37">-</operator> <name pos:start="43:39" pos:end="43:66">FF_INPUT_BUFFER_PADDING_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><call pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:11">AV_WB32</name><argument_list pos:start="45:12" pos:end="45:42">(       <argument pos:start="45:20" pos:end="45:22"><expr pos:start="45:20" pos:end="45:22"><name pos:start="45:20" pos:end="45:22">buf</name></expr></argument>    , <argument pos:start="45:29" pos:end="45:41"><expr pos:start="45:29" pos:end="45:41"><name pos:start="45:29" pos:end="45:37"><name pos:start="45:29" pos:end="45:32">atom</name><operator pos:start="45:33" pos:end="45:33">.</operator><name pos:start="45:34" pos:end="45:37">size</name></name> <operator pos:start="45:39" pos:end="45:39">+</operator> <literal type="number" pos:start="45:41" pos:end="45:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><call pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:11">AV_WL32</name><argument_list pos:start="47:12" pos:end="47:38">(       <argument pos:start="47:20" pos:end="47:26"><expr pos:start="47:20" pos:end="47:26"><name pos:start="47:20" pos:end="47:22">buf</name> <operator pos:start="47:24" pos:end="47:24">+</operator> <literal type="number" pos:start="47:26" pos:end="47:26">4</literal></expr></argument>, <argument pos:start="47:29" pos:end="47:37"><expr pos:start="47:29" pos:end="47:37"><name pos:start="47:29" pos:end="47:37"><name pos:start="47:29" pos:end="47:32">atom</name><operator pos:start="47:33" pos:end="47:33">.</operator><name pos:start="47:34" pos:end="47:37">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><call pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:13">avio_read</name><argument_list pos:start="49:14" pos:end="49:37">(<argument pos:start="49:15" pos:end="49:16"><expr pos:start="49:15" pos:end="49:16"><name pos:start="49:15" pos:end="49:16">pb</name></expr></argument>, <argument pos:start="49:19" pos:end="49:25"><expr pos:start="49:19" pos:end="49:25"><name pos:start="49:19" pos:end="49:21">buf</name> <operator pos:start="49:23" pos:end="49:23">+</operator> <literal type="number" pos:start="49:25" pos:end="49:25">8</literal></expr></argument>, <argument pos:start="49:28" pos:end="49:36"><expr pos:start="49:28" pos:end="49:36"><name pos:start="49:28" pos:end="49:36"><name pos:start="49:28" pos:end="49:31">atom</name><operator pos:start="49:32" pos:end="49:32">.</operator><name pos:start="49:33" pos:end="49:36">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><literal type="number" pos:start="51:12" pos:end="51:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
