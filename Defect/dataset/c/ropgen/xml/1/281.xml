<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/281.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">guess_ni_flag</name><parameter_list pos:start="1:25" pos:end="1:44">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list><block pos:start="1:45" pos:end="113:1">{<block_content pos:start="3:5" pos:end="111:13">

    <decl_stmt pos:start="3:5" pos:end="3:10"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:22">last_start</name><init pos:start="5:23" pos:end="5:24">=<expr pos:start="5:24" pos:end="5:24"><literal type="number" pos:start="5:24" pos:end="5:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:21">first_end</name><init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><name pos:start="7:24" pos:end="7:32">INT64_MAX</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:18">oldpos</name><init pos:start="9:19" pos:end="9:36">= <expr pos:start="9:21" pos:end="9:36"><call pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:29">avio_tell</name><argument_list pos:start="9:30" pos:end="9:36">(<argument pos:start="9:31" pos:end="9:35"><expr pos:start="9:31" pos:end="9:35"><name pos:start="9:31" pos:end="9:35"><name pos:start="9:31" pos:end="9:31">s</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:35">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:7">int</name> <modifier pos:start="11:9" pos:end="11:9">*</modifier></type><name pos:start="11:10" pos:end="11:12">idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:19">min_pos</name></decl>, <decl pos:start="13:22" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:22" pos:end="13:24">pos</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="57:5">for<control pos:start="17:8" pos:end="17:34">(<init pos:start="17:9" pos:end="17:12"><expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:9">i</name><operator pos:start="17:10" pos:end="17:10">=</operator><literal type="number" pos:start="17:11" pos:end="17:11">0</literal></expr>;</init> <condition pos:start="17:14" pos:end="17:29"><expr pos:start="17:14" pos:end="17:28"><name pos:start="17:14" pos:end="17:14">i</name><operator pos:start="17:15" pos:end="17:15">&lt;</operator><name pos:start="17:16" pos:end="17:28"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:28">nb_streams</name></name></expr>;</condition> <incr pos:start="17:31" pos:end="17:33"><expr pos:start="17:31" pos:end="17:33"><name pos:start="17:31" pos:end="17:31">i</name><operator pos:start="17:32" pos:end="17:33">++</operator></expr></incr>)</control><block pos:start="17:35" pos:end="57:5">{<block_content pos:start="19:9" pos:end="55:50">

        <decl_stmt pos:start="19:9" pos:end="19:37"><decl pos:start="19:9" pos:end="19:36"><type pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:16">AVStream</name> <modifier pos:start="19:18" pos:end="19:18">*</modifier></type><name pos:start="19:19" pos:end="19:20">st</name> <init pos:start="19:22" pos:end="19:36">= <expr pos:start="19:24" pos:end="19:36"><name pos:start="19:24" pos:end="19:36"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:33">streams</name><index pos:start="19:34" pos:end="19:36">[<expr pos:start="19:35" pos:end="19:35"><name pos:start="19:35" pos:end="19:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:36"><decl pos:start="21:9" pos:end="21:35"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">n</name><init pos:start="21:14" pos:end="21:35">= <expr pos:start="21:16" pos:end="21:35"><name pos:start="21:16" pos:end="21:35"><name pos:start="21:16" pos:end="21:17">st</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:35">nb_index_entries</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:26"><decl pos:start="23:9" pos:end="23:25"><type pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:16">unsigned</name> <name pos:start="23:18" pos:end="23:20">int</name></type> <name pos:start="23:22" pos:end="23:25">size</name></decl>;</decl_stmt>



        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if<condition pos:start="27:11" pos:end="27:18">(<expr pos:start="27:12" pos:end="27:17"><name pos:start="27:12" pos:end="27:12">n</name> <operator pos:start="27:14" pos:end="27:15">&lt;=</operator> <literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <continue pos:start="29:13" pos:end="29:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="33:9" pos:end="45:9"><if pos:start="33:9" pos:end="45:9">if<condition pos:start="33:11" pos:end="33:18">(<expr pos:start="33:12" pos:end="33:17"><name pos:start="33:12" pos:end="33:12">n</name> <operator pos:start="33:14" pos:end="33:15">&gt;=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">2</literal></expr>)</condition><block pos:start="33:19" pos:end="45:9">{<block_content pos:start="35:13" pos:end="43:38">

            <decl_stmt pos:start="35:13" pos:end="35:50"><decl pos:start="35:13" pos:end="35:49"><type pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:19">int64_t</name></type> <name pos:start="35:21" pos:end="35:23">pos</name><init pos:start="35:24" pos:end="35:49">= <expr pos:start="35:26" pos:end="35:49"><name pos:start="35:26" pos:end="35:45"><name pos:start="35:26" pos:end="35:27">st</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:42">index_entries</name><index pos:start="35:43" pos:end="35:45">[<expr pos:start="35:44" pos:end="35:44"><literal type="number" pos:start="35:44" pos:end="35:44">0</literal></expr>]</index></name><operator pos:start="35:46" pos:end="35:46">.</operator><name pos:start="35:47" pos:end="35:49">pos</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:48"><expr pos:start="37:13" pos:end="37:47"><call pos:start="37:13" pos:end="37:47"><name pos:start="37:13" pos:end="37:21">avio_seek</name><argument_list pos:start="37:22" pos:end="37:47">(<argument pos:start="37:23" pos:end="37:27"><expr pos:start="37:23" pos:end="37:27"><name pos:start="37:23" pos:end="37:27"><name pos:start="37:23" pos:end="37:23">s</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:27">pb</name></name></expr></argument>, <argument pos:start="37:30" pos:end="37:36"><expr pos:start="37:30" pos:end="37:36"><name pos:start="37:30" pos:end="37:32">pos</name> <operator pos:start="37:34" pos:end="37:34">+</operator> <literal type="number" pos:start="37:36" pos:end="37:36">4</literal></expr></argument>, <argument pos:start="37:39" pos:end="37:46"><expr pos:start="37:39" pos:end="37:46"><name pos:start="37:39" pos:end="37:46">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:35"><expr pos:start="39:13" pos:end="39:34"><name pos:start="39:13" pos:end="39:16">size</name><operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:34"><name pos:start="39:19" pos:end="39:27">avio_rl32</name><argument_list pos:start="39:28" pos:end="39:34">(<argument pos:start="39:29" pos:end="39:33"><expr pos:start="39:29" pos:end="39:33"><name pos:start="39:29" pos:end="39:33"><name pos:start="39:29" pos:end="39:29">s</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="43:38"><if pos:start="41:13" pos:end="43:38">if<condition pos:start="41:15" pos:end="41:53">(<expr pos:start="41:16" pos:end="41:52"><name pos:start="41:16" pos:end="41:18">pos</name> <operator pos:start="41:20" pos:end="41:20">+</operator> <name pos:start="41:22" pos:end="41:25">size</name> <operator pos:start="41:27" pos:end="41:27">&gt;</operator> <name pos:start="41:29" pos:end="41:48"><name pos:start="41:29" pos:end="41:30">st</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:45">index_entries</name><index pos:start="41:46" pos:end="41:48">[<expr pos:start="41:47" pos:end="41:47"><literal type="number" pos:start="41:47" pos:end="41:47">1</literal></expr>]</index></name><operator pos:start="41:49" pos:end="41:49">.</operator><name pos:start="41:50" pos:end="41:52">pos</name></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:38"><block_content pos:start="43:17" pos:end="43:38">

                <expr_stmt pos:start="43:17" pos:end="43:38"><expr pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:26">last_start</name><operator pos:start="43:27" pos:end="43:27">=</operator> <name pos:start="43:29" pos:end="43:37">INT64_MAX</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="49:9" pos:end="51:49"><if pos:start="49:9" pos:end="51:49">if<condition pos:start="49:11" pos:end="49:49">(<expr pos:start="49:12" pos:end="49:48"><name pos:start="49:12" pos:end="49:31"><name pos:start="49:12" pos:end="49:13">st</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:28">index_entries</name><index pos:start="49:29" pos:end="49:31">[<expr pos:start="49:30" pos:end="49:30"><literal type="number" pos:start="49:30" pos:end="49:30">0</literal></expr>]</index></name><operator pos:start="49:32" pos:end="49:32">.</operator><name pos:start="49:33" pos:end="49:35">pos</name> <operator pos:start="49:37" pos:end="49:37">&gt;</operator> <name pos:start="49:39" pos:end="49:48">last_start</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:49"><block_content pos:start="51:13" pos:end="51:49">

            <expr_stmt pos:start="51:13" pos:end="51:49"><expr pos:start="51:13" pos:end="51:48"><name pos:start="51:13" pos:end="51:22">last_start</name><operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:44"><name pos:start="51:25" pos:end="51:26">st</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:41">index_entries</name><index pos:start="51:42" pos:end="51:44">[<expr pos:start="51:43" pos:end="51:43"><literal type="number" pos:start="51:43" pos:end="51:43">0</literal></expr>]</index></name><operator pos:start="51:45" pos:end="51:45">.</operator><name pos:start="51:46" pos:end="51:48">pos</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="55:50"><if pos:start="53:9" pos:end="55:50">if<condition pos:start="53:11" pos:end="53:50">(<expr pos:start="53:12" pos:end="53:49"><name pos:start="53:12" pos:end="53:33"><name pos:start="53:12" pos:end="53:13">st</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:28">index_entries</name><index pos:start="53:29" pos:end="53:33">[<expr pos:start="53:30" pos:end="53:32"><name pos:start="53:30" pos:end="53:30">n</name><operator pos:start="53:31" pos:end="53:31">-</operator><literal type="number" pos:start="53:32" pos:end="53:32">1</literal></expr>]</index></name><operator pos:start="53:34" pos:end="53:34">.</operator><name pos:start="53:35" pos:end="53:37">pos</name> <operator pos:start="53:39" pos:end="53:39">&lt;</operator> <name pos:start="53:41" pos:end="53:49">first_end</name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:50"><block_content pos:start="55:13" pos:end="55:50">

            <expr_stmt pos:start="55:13" pos:end="55:50"><expr pos:start="55:13" pos:end="55:49"><name pos:start="55:13" pos:end="55:21">first_end</name><operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:45"><name pos:start="55:24" pos:end="55:25">st</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:40">index_entries</name><index pos:start="55:41" pos:end="55:45">[<expr pos:start="55:42" pos:end="55:44"><name pos:start="55:42" pos:end="55:42">n</name><operator pos:start="55:43" pos:end="55:43">-</operator><literal type="number" pos:start="55:44" pos:end="55:44">1</literal></expr>]</index></name><operator pos:start="55:46" pos:end="55:46">.</operator><name pos:start="55:47" pos:end="55:49">pos</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="59:5" pos:end="59:39"><expr pos:start="59:5" pos:end="59:38"><call pos:start="59:5" pos:end="59:38"><name pos:start="59:5" pos:end="59:13">avio_seek</name><argument_list pos:start="59:14" pos:end="59:38">(<argument pos:start="59:15" pos:end="59:19"><expr pos:start="59:15" pos:end="59:19"><name pos:start="59:15" pos:end="59:19"><name pos:start="59:15" pos:end="59:15">s</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:19">pb</name></name></expr></argument>, <argument pos:start="59:22" pos:end="59:27"><expr pos:start="59:22" pos:end="59:27"><name pos:start="59:22" pos:end="59:27">oldpos</name></expr></argument>, <argument pos:start="59:30" pos:end="59:37"><expr pos:start="59:30" pos:end="59:37"><name pos:start="59:30" pos:end="59:37">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="63:17"><if pos:start="61:5" pos:end="63:17">if <condition pos:start="61:8" pos:end="61:31">(<expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:18">last_start</name> <operator pos:start="61:20" pos:end="61:20">&gt;</operator> <name pos:start="61:22" pos:end="61:30">first_end</name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:17"><block_content pos:start="63:9" pos:end="63:17">

        <return pos:start="63:9" pos:end="63:17">return <expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:50"><expr pos:start="65:5" pos:end="65:49"><name pos:start="65:5" pos:end="65:7">idx</name><operator pos:start="65:8" pos:end="65:8">=</operator> <call pos:start="65:10" pos:end="65:49"><name pos:start="65:10" pos:end="65:19">av_mallocz</name><argument_list pos:start="65:20" pos:end="65:49">(<argument pos:start="65:21" pos:end="65:48"><expr pos:start="65:21" pos:end="65:48"><sizeof pos:start="65:21" pos:end="65:32">sizeof<argument_list pos:start="65:27" pos:end="65:32">(<argument pos:start="65:28" pos:end="65:31"><expr pos:start="65:28" pos:end="65:31"><operator pos:start="65:28" pos:end="65:28">*</operator><name pos:start="65:29" pos:end="65:31">idx</name></expr></argument>)</argument_list></sizeof> <operator pos:start="65:34" pos:end="65:34">*</operator> <name pos:start="65:36" pos:end="65:48"><name pos:start="65:36" pos:end="65:36">s</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:48">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="107:5">for <control pos:start="67:9" pos:end="67:59">(<init pos:start="67:10" pos:end="67:23"><expr pos:start="67:10" pos:end="67:22"><name pos:start="67:10" pos:end="67:16">min_pos</name><operator pos:start="67:17" pos:end="67:17">=</operator><name pos:start="67:18" pos:end="67:20">pos</name><operator pos:start="67:21" pos:end="67:21">=</operator><literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>;</init> <condition pos:start="67:25" pos:end="67:43"><expr pos:start="67:25" pos:end="67:42"><name pos:start="67:25" pos:end="67:31">min_pos</name><operator pos:start="67:32" pos:end="67:33">!=</operator><name pos:start="67:34" pos:end="67:42">INT64_MAX</name></expr>;</condition> <incr pos:start="67:45" pos:end="67:58"><expr pos:start="67:45" pos:end="67:58"><name pos:start="67:45" pos:end="67:47">pos</name><operator pos:start="67:48" pos:end="67:48">=</operator> <name pos:start="67:50" pos:end="67:56">min_pos</name><operator pos:start="67:57" pos:end="67:57">+</operator><literal type="number" pos:start="67:58" pos:end="67:58">1</literal></expr></incr>)</control> <block pos:start="67:61" pos:end="107:5">{<block_content pos:start="69:9" pos:end="105:9">

        <decl_stmt pos:start="69:9" pos:end="69:60"><decl pos:start="69:9" pos:end="69:37"><type pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:15">int64_t</name></type> <name pos:start="69:17" pos:end="69:23">max_dts</name> <init pos:start="69:25" pos:end="69:37">= <expr pos:start="69:27" pos:end="69:37"><name pos:start="69:27" pos:end="69:35">INT64_MIN</name><operator pos:start="69:36" pos:end="69:36">/</operator><literal type="number" pos:start="69:37" pos:end="69:37">2</literal></expr></init></decl>, <decl pos:start="69:40" pos:end="69:59"><type ref="prev" pos:start="69:9" pos:end="69:15"/><name pos:start="69:40" pos:end="69:46">min_dts</name><init pos:start="69:47" pos:end="69:59">= <expr pos:start="69:49" pos:end="69:59"><name pos:start="69:49" pos:end="69:57">INT64_MAX</name><operator pos:start="69:58" pos:end="69:58">/</operator><literal type="number" pos:start="69:59" pos:end="69:59">2</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:28"><expr pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:15">min_pos</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <name pos:start="71:19" pos:end="71:27">INT64_MAX</name></expr>;</expr_stmt>



        <for pos:start="75:9" pos:end="97:9">for <control pos:start="75:13" pos:end="75:39">(<init pos:start="75:14" pos:end="75:17"><expr pos:start="75:14" pos:end="75:16"><name pos:start="75:14" pos:end="75:14">i</name><operator pos:start="75:15" pos:end="75:15">=</operator><literal type="number" pos:start="75:16" pos:end="75:16">0</literal></expr>;</init> <condition pos:start="75:19" pos:end="75:34"><expr pos:start="75:19" pos:end="75:33"><name pos:start="75:19" pos:end="75:19">i</name><operator pos:start="75:20" pos:end="75:20">&lt;</operator><name pos:start="75:21" pos:end="75:33"><name pos:start="75:21" pos:end="75:21">s</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:33">nb_streams</name></name></expr>;</condition> <incr pos:start="75:36" pos:end="75:38"><expr pos:start="75:36" pos:end="75:38"><name pos:start="75:36" pos:end="75:36">i</name><operator pos:start="75:37" pos:end="75:38">++</operator></expr></incr>)</control> <block pos:start="75:41" pos:end="97:9">{<block_content pos:start="77:13" pos:end="95:125">

            <decl_stmt pos:start="77:13" pos:end="77:41"><decl pos:start="77:13" pos:end="77:40"><type pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:20">AVStream</name> <modifier pos:start="77:22" pos:end="77:22">*</modifier></type><name pos:start="77:23" pos:end="77:24">st</name> <init pos:start="77:26" pos:end="77:40">= <expr pos:start="77:28" pos:end="77:40"><name pos:start="77:28" pos:end="77:40"><name pos:start="77:28" pos:end="77:28">s</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:37">streams</name><index pos:start="77:38" pos:end="77:40">[<expr pos:start="77:39" pos:end="77:39"><name pos:start="77:39" pos:end="77:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="79:13" pos:end="79:40"><decl pos:start="79:13" pos:end="79:39"><type pos:start="79:13" pos:end="79:15"><name pos:start="79:13" pos:end="79:15">int</name></type> <name pos:start="79:17" pos:end="79:17">n</name><init pos:start="79:18" pos:end="79:39">= <expr pos:start="79:20" pos:end="79:39"><name pos:start="79:20" pos:end="79:39"><name pos:start="79:20" pos:end="79:21">st</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:39">nb_index_entries</name></name></expr></init></decl>;</decl_stmt>

            <while pos:start="81:13" pos:end="83:25">while <condition pos:start="81:19" pos:end="81:67">(<expr pos:start="81:20" pos:end="81:66"><name pos:start="81:20" pos:end="81:25"><name pos:start="81:20" pos:end="81:22">idx</name><index pos:start="81:23" pos:end="81:25">[<expr pos:start="81:24" pos:end="81:24"><name pos:start="81:24" pos:end="81:24">i</name></expr>]</index></name><operator pos:start="81:26" pos:end="81:26">&lt;</operator><name pos:start="81:27" pos:end="81:27">n</name> <operator pos:start="81:29" pos:end="81:30">&amp;&amp;</operator> <name pos:start="81:32" pos:end="81:56"><name pos:start="81:32" pos:end="81:33">st</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:48">index_entries</name><index pos:start="81:49" pos:end="81:56">[<expr pos:start="81:50" pos:end="81:55"><name pos:start="81:50" pos:end="81:55"><name pos:start="81:50" pos:end="81:52">idx</name><index pos:start="81:53" pos:end="81:55">[<expr pos:start="81:54" pos:end="81:54"><name pos:start="81:54" pos:end="81:54">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="81:57" pos:end="81:57">.</operator><name pos:start="81:58" pos:end="81:60">pos</name> <operator pos:start="81:62" pos:end="81:62">&lt;</operator> <name pos:start="81:64" pos:end="81:66">pos</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:25"><block_content pos:start="83:17" pos:end="83:25">

                <expr_stmt pos:start="83:17" pos:end="83:25"><expr pos:start="83:17" pos:end="83:24"><name pos:start="83:17" pos:end="83:22"><name pos:start="83:17" pos:end="83:19">idx</name><index pos:start="83:20" pos:end="83:22">[<expr pos:start="83:21" pos:end="83:21"><name pos:start="83:21" pos:end="83:21">i</name></expr>]</index></name><operator pos:start="83:23" pos:end="83:24">++</operator></expr>;</expr_stmt></block_content></block></while>

            <if_stmt pos:start="85:13" pos:end="91:13"><if pos:start="85:13" pos:end="91:13">if <condition pos:start="85:16" pos:end="85:27">(<expr pos:start="85:17" pos:end="85:26"><name pos:start="85:17" pos:end="85:22"><name pos:start="85:17" pos:end="85:19">idx</name><index pos:start="85:20" pos:end="85:22">[<expr pos:start="85:21" pos:end="85:21"><name pos:start="85:21" pos:end="85:21">i</name></expr>]</index></name> <operator pos:start="85:24" pos:end="85:24">&lt;</operator> <name pos:start="85:26" pos:end="85:26">n</name></expr>)</condition> <block pos:start="85:29" pos:end="91:13">{<block_content pos:start="87:17" pos:end="89:72">

                <expr_stmt pos:start="87:17" pos:end="87:123"><expr pos:start="87:17" pos:end="87:122"><name pos:start="87:17" pos:end="87:23">min_dts</name> <operator pos:start="87:25" pos:end="87:25">=</operator> <call pos:start="87:27" pos:end="87:122"><name pos:start="87:27" pos:end="87:31">FFMIN</name><argument_list pos:start="87:32" pos:end="87:122">(<argument pos:start="87:33" pos:end="87:39"><expr pos:start="87:33" pos:end="87:39"><name pos:start="87:33" pos:end="87:39">min_dts</name></expr></argument>, <argument pos:start="87:42" pos:end="87:121"><expr pos:start="87:42" pos:end="87:121"><call pos:start="87:42" pos:end="87:121"><name pos:start="87:42" pos:end="87:53">av_rescale_q</name><argument_list pos:start="87:54" pos:end="87:121">(<argument pos:start="87:55" pos:end="87:89"><expr pos:start="87:55" pos:end="87:89"><name pos:start="87:55" pos:end="87:79"><name pos:start="87:55" pos:end="87:56">st</name><operator pos:start="87:57" pos:end="87:58">-&gt;</operator><name pos:start="87:59" pos:end="87:71">index_entries</name><index pos:start="87:72" pos:end="87:79">[<expr pos:start="87:73" pos:end="87:78"><name pos:start="87:73" pos:end="87:78"><name pos:start="87:73" pos:end="87:75">idx</name><index pos:start="87:76" pos:end="87:78">[<expr pos:start="87:77" pos:end="87:77"><name pos:start="87:77" pos:end="87:77">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="87:80" pos:end="87:80">.</operator><name pos:start="87:81" pos:end="87:89">timestamp</name></expr></argument>, <argument pos:start="87:92" pos:end="87:104"><expr pos:start="87:92" pos:end="87:104"><name pos:start="87:92" pos:end="87:104"><name pos:start="87:92" pos:end="87:93">st</name><operator pos:start="87:94" pos:end="87:95">-&gt;</operator><name pos:start="87:96" pos:end="87:104">time_base</name></name></expr></argument>, <argument pos:start="87:107" pos:end="87:120"><expr pos:start="87:107" pos:end="87:120"><name pos:start="87:107" pos:end="87:120">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:72"><expr pos:start="89:17" pos:end="89:71"><name pos:start="89:17" pos:end="89:23">min_pos</name> <operator pos:start="89:25" pos:end="89:25">=</operator> <call pos:start="89:27" pos:end="89:71"><name pos:start="89:27" pos:end="89:31">FFMIN</name><argument_list pos:start="89:32" pos:end="89:71">(<argument pos:start="89:33" pos:end="89:39"><expr pos:start="89:33" pos:end="89:39"><name pos:start="89:33" pos:end="89:39">min_pos</name></expr></argument>, <argument pos:start="89:42" pos:end="89:70"><expr pos:start="89:42" pos:end="89:70"><name pos:start="89:42" pos:end="89:66"><name pos:start="89:42" pos:end="89:43">st</name><operator pos:start="89:44" pos:end="89:45">-&gt;</operator><name pos:start="89:46" pos:end="89:58">index_entries</name><index pos:start="89:59" pos:end="89:66">[<expr pos:start="89:60" pos:end="89:65"><name pos:start="89:60" pos:end="89:65"><name pos:start="89:60" pos:end="89:62">idx</name><index pos:start="89:63" pos:end="89:65">[<expr pos:start="89:64" pos:end="89:64"><name pos:start="89:64" pos:end="89:64">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="89:67" pos:end="89:67">.</operator><name pos:start="89:68" pos:end="89:70">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="93:13" pos:end="95:125"><if pos:start="93:13" pos:end="95:125">if <condition pos:start="93:16" pos:end="93:23">(<expr pos:start="93:17" pos:end="93:22"><name pos:start="93:17" pos:end="93:22"><name pos:start="93:17" pos:end="93:19">idx</name><index pos:start="93:20" pos:end="93:22">[<expr pos:start="93:21" pos:end="93:21"><name pos:start="93:21" pos:end="93:21">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:125"><block_content pos:start="95:17" pos:end="95:125">

                <expr_stmt pos:start="95:17" pos:end="95:125"><expr pos:start="95:17" pos:end="95:124"><name pos:start="95:17" pos:end="95:23">max_dts</name> <operator pos:start="95:25" pos:end="95:25">=</operator> <call pos:start="95:27" pos:end="95:124"><name pos:start="95:27" pos:end="95:31">FFMAX</name><argument_list pos:start="95:32" pos:end="95:124">(<argument pos:start="95:33" pos:end="95:39"><expr pos:start="95:33" pos:end="95:39"><name pos:start="95:33" pos:end="95:39">max_dts</name></expr></argument>, <argument pos:start="95:42" pos:end="95:123"><expr pos:start="95:42" pos:end="95:123"><call pos:start="95:42" pos:end="95:123"><name pos:start="95:42" pos:end="95:53">av_rescale_q</name><argument_list pos:start="95:54" pos:end="95:123">(<argument pos:start="95:55" pos:end="95:91"><expr pos:start="95:55" pos:end="95:91"><name pos:start="95:55" pos:end="95:81"><name pos:start="95:55" pos:end="95:56">st</name><operator pos:start="95:57" pos:end="95:58">-&gt;</operator><name pos:start="95:59" pos:end="95:71">index_entries</name><index pos:start="95:72" pos:end="95:81">[<expr pos:start="95:73" pos:end="95:80"><name pos:start="95:73" pos:end="95:78"><name pos:start="95:73" pos:end="95:75">idx</name><index pos:start="95:76" pos:end="95:78">[<expr pos:start="95:77" pos:end="95:77"><name pos:start="95:77" pos:end="95:77">i</name></expr>]</index></name><operator pos:start="95:79" pos:end="95:79">-</operator><literal type="number" pos:start="95:80" pos:end="95:80">1</literal></expr>]</index></name><operator pos:start="95:82" pos:end="95:82">.</operator><name pos:start="95:83" pos:end="95:91">timestamp</name></expr></argument>, <argument pos:start="95:94" pos:end="95:106"><expr pos:start="95:94" pos:end="95:106"><name pos:start="95:94" pos:end="95:106"><name pos:start="95:94" pos:end="95:95">st</name><operator pos:start="95:96" pos:end="95:97">-&gt;</operator><name pos:start="95:98" pos:end="95:106">time_base</name></name></expr></argument>, <argument pos:start="95:109" pos:end="95:122"><expr pos:start="95:109" pos:end="95:122"><name pos:start="95:109" pos:end="95:122">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if<condition pos:start="99:11" pos:end="99:46">(<expr pos:start="99:12" pos:end="99:45"><name pos:start="99:12" pos:end="99:18">max_dts</name> <operator pos:start="99:20" pos:end="99:20">-</operator> <name pos:start="99:22" pos:end="99:28">min_dts</name> <operator pos:start="99:30" pos:end="99:30">&gt;</operator> <literal type="number" pos:start="99:32" pos:end="99:32">2</literal><operator pos:start="99:33" pos:end="99:33">*</operator><name pos:start="99:34" pos:end="99:45">AV_TIME_BASE</name></expr>)</condition> <block pos:start="99:48" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:21">

            <expr_stmt pos:start="101:13" pos:end="101:25"><expr pos:start="101:13" pos:end="101:24"><call pos:start="101:13" pos:end="101:24"><name pos:start="101:13" pos:end="101:19">av_free</name><argument_list pos:start="101:20" pos:end="101:24">(<argument pos:start="101:21" pos:end="101:23"><expr pos:start="101:21" pos:end="101:23"><name pos:start="101:21" pos:end="101:23">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="103:13" pos:end="103:21">return <expr pos:start="103:20" pos:end="103:20"><literal type="number" pos:start="103:20" pos:end="103:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="109:5" pos:end="109:17"><expr pos:start="109:5" pos:end="109:16"><call pos:start="109:5" pos:end="109:16"><name pos:start="109:5" pos:end="109:11">av_free</name><argument_list pos:start="109:12" pos:end="109:16">(<argument pos:start="109:13" pos:end="109:15"><expr pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:15">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="111:5" pos:end="111:13">return <expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
