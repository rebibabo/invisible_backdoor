<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16459.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">vnc_auth_sasl_check_access</name><parameter_list pos:start="1:38" pos:end="1:51">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:48"><name pos:start="1:39" pos:end="1:46">VncState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">vs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:26">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">void</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">allow</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:59"><expr pos:start="13:5" pos:end="13:58"><name pos:start="13:5" pos:end="13:7">err</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:58"><name pos:start="13:11" pos:end="13:22">sasl_getprop</name><argument_list pos:start="13:23" pos:end="13:58">(<argument pos:start="13:24" pos:end="13:36"><expr pos:start="13:24" pos:end="13:36"><name pos:start="13:24" pos:end="13:36"><name pos:start="13:24" pos:end="13:25">vs</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:31">sasl</name><operator pos:start="13:32" pos:end="13:32">.</operator><name pos:start="13:33" pos:end="13:36">conn</name></name></expr></argument>, <argument pos:start="13:39" pos:end="13:51"><expr pos:start="13:39" pos:end="13:51"><name pos:start="13:39" pos:end="13:51">SASL_USERNAME</name></expr></argument>, <argument pos:start="13:54" pos:end="13:57"><expr pos:start="13:54" pos:end="13:57"><operator pos:start="13:54" pos:end="13:54">&amp;</operator><name pos:start="13:55" pos:end="13:57">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:11">err</name> <operator pos:start="15:13" pos:end="15:14">!=</operator> <name pos:start="15:16" pos:end="15:22">SASL_OK</name></expr>)</condition> <block pos:start="15:25" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:18">

        <expr_stmt pos:start="17:9" pos:end="19:56"><expr pos:start="17:9" pos:end="19:55"><call pos:start="17:9" pos:end="19:55"><name pos:start="17:9" pos:end="17:17">VNC_DEBUG</name><argument_list pos:start="17:18" pos:end="19:55">(<argument pos:start="17:19" pos:end="17:86"><expr pos:start="17:19" pos:end="17:86"><literal type="string" pos:start="17:19" pos:end="17:86">"cannot query SASL username on connection %d (%s), denying access\n"</literal></expr></argument>,

                  <argument pos:start="19:19" pos:end="19:21"><expr pos:start="19:19" pos:end="19:21"><name pos:start="19:19" pos:end="19:21">err</name></expr></argument>, <argument pos:start="19:24" pos:end="19:54"><expr pos:start="19:24" pos:end="19:54"><call pos:start="19:24" pos:end="19:54"><name pos:start="19:24" pos:end="19:37">sasl_errstring</name><argument_list pos:start="19:38" pos:end="19:54">(<argument pos:start="19:39" pos:end="19:41"><expr pos:start="19:39" pos:end="19:41"><name pos:start="19:39" pos:end="19:41">err</name></expr></argument>, <argument pos:start="19:44" pos:end="19:47"><expr pos:start="19:44" pos:end="19:47"><name pos:start="19:44" pos:end="19:47">NULL</name></expr></argument>, <argument pos:start="19:50" pos:end="19:53"><expr pos:start="19:50" pos:end="19:53"><name pos:start="19:50" pos:end="19:53">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:20">(<expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:11">val</name> <operator pos:start="25:13" pos:end="25:14">==</operator> <name pos:start="25:16" pos:end="25:19">NULL</name></expr>)</condition> <block pos:start="25:22" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:68"><expr pos:start="27:9" pos:end="27:67"><call pos:start="27:9" pos:end="27:67"><name pos:start="27:9" pos:end="27:17">VNC_DEBUG</name><argument_list pos:start="27:18" pos:end="27:67">(<argument pos:start="27:19" pos:end="27:66"><expr pos:start="27:19" pos:end="27:66"><literal type="string" pos:start="27:19" pos:end="27:66">"no client username was found, denying access\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:62"><expr pos:start="33:5" pos:end="33:61"><call pos:start="33:5" pos:end="33:61"><name pos:start="33:5" pos:end="33:13">VNC_DEBUG</name><argument_list pos:start="33:14" pos:end="33:61">(<argument pos:start="33:15" pos:end="33:41"><expr pos:start="33:15" pos:end="33:41"><literal type="string" pos:start="33:15" pos:end="33:41">"SASL client username %s\n"</literal></expr></argument>, <argument pos:start="33:44" pos:end="33:60"><expr pos:start="33:44" pos:end="33:60"><operator pos:start="33:44" pos:end="33:44">(</operator><specifier pos:start="33:45" pos:end="33:49">const</specifier> <name pos:start="33:51" pos:end="33:54">char</name> <operator pos:start="33:56" pos:end="33:56">*</operator><operator pos:start="33:57" pos:end="33:57">)</operator><name pos:start="33:58" pos:end="33:60">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:6">vs</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:12">sasl</name><operator pos:start="37:13" pos:end="37:13">.</operator><name pos:start="37:14" pos:end="37:21">username</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <call pos:start="37:25" pos:end="37:50"><name pos:start="37:25" pos:end="37:32">g_strdup</name><argument_list pos:start="37:33" pos:end="37:50">(<argument pos:start="37:34" pos:end="37:49"><expr pos:start="37:34" pos:end="37:49"><operator pos:start="37:34" pos:end="37:34">(</operator><specifier pos:start="37:35" pos:end="37:39">const</specifier> <name pos:start="37:41" pos:end="37:44">char</name><operator pos:start="37:45" pos:end="37:45">*</operator><operator pos:start="37:46" pos:end="37:46">)</operator><name pos:start="37:47" pos:end="37:49">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:33">(<expr pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:10">vs</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:14">vd</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:20">sasl</name><operator pos:start="41:21" pos:end="41:21">.</operator><name pos:start="41:22" pos:end="41:24">acl</name></name> <operator pos:start="41:26" pos:end="41:27">==</operator> <name pos:start="41:29" pos:end="41:32">NULL</name></expr>)</condition> <block pos:start="41:35" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:17">

        <expr_stmt pos:start="43:9" pos:end="43:57"><expr pos:start="43:9" pos:end="43:56"><call pos:start="43:9" pos:end="43:56"><name pos:start="43:9" pos:end="43:17">VNC_DEBUG</name><argument_list pos:start="43:18" pos:end="43:56">(<argument pos:start="43:19" pos:end="43:55"><expr pos:start="43:19" pos:end="43:55"><literal type="string" pos:start="43:19" pos:end="43:55">"no ACL activated, allowing access\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:17">return <expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:75"><expr pos:start="51:5" pos:end="51:74"><name pos:start="51:5" pos:end="51:9">allow</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <call pos:start="51:13" pos:end="51:74"><name pos:start="51:13" pos:end="51:37">qemu_acl_party_is_allowed</name><argument_list pos:start="51:38" pos:end="51:74">(<argument pos:start="51:39" pos:end="51:54"><expr pos:start="51:39" pos:end="51:54"><name pos:start="51:39" pos:end="51:54"><name pos:start="51:39" pos:end="51:40">vs</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:44">vd</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:50">sasl</name><operator pos:start="51:51" pos:end="51:51">.</operator><name pos:start="51:52" pos:end="51:54">acl</name></name></expr></argument>, <argument pos:start="51:57" pos:end="51:73"><expr pos:start="51:57" pos:end="51:73"><name pos:start="51:57" pos:end="51:73"><name pos:start="51:57" pos:end="51:58">vs</name><operator pos:start="51:59" pos:end="51:60">-&gt;</operator><name pos:start="51:61" pos:end="51:64">sasl</name><operator pos:start="51:65" pos:end="51:65">.</operator><name pos:start="51:66" pos:end="51:73">username</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="57:44"><expr pos:start="55:5" pos:end="57:43"><call pos:start="55:5" pos:end="57:43"><name pos:start="55:5" pos:end="55:13">VNC_DEBUG</name><argument_list pos:start="55:14" pos:end="57:43">(<argument pos:start="55:15" pos:end="55:42"><expr pos:start="55:15" pos:end="55:42"><literal type="string" pos:start="55:15" pos:end="55:42">"SASL client %s %s by ACL\n"</literal></expr></argument>, <argument pos:start="55:45" pos:end="55:61"><expr pos:start="55:45" pos:end="55:61"><name pos:start="55:45" pos:end="55:61"><name pos:start="55:45" pos:end="55:46">vs</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:52">sasl</name><operator pos:start="55:53" pos:end="55:53">.</operator><name pos:start="55:54" pos:end="55:61">username</name></name></expr></argument>,

              <argument pos:start="57:15" pos:end="57:42"><expr pos:start="57:15" pos:end="57:42"><ternary pos:start="57:15" pos:end="57:42"><condition pos:start="57:15" pos:end="57:21"><expr pos:start="57:15" pos:end="57:19"><name pos:start="57:15" pos:end="57:19">allow</name></expr> ?</condition><then pos:start="57:23" pos:end="57:31"> <expr pos:start="57:23" pos:end="57:31"><literal type="string" pos:start="57:23" pos:end="57:31">"allowed"</literal></expr> </then><else pos:start="57:33" pos:end="57:42">: <expr pos:start="57:35" pos:end="57:42"><literal type="string" pos:start="57:35" pos:end="57:42">"denied"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="59:5" pos:end="59:26">return <expr pos:start="59:12" pos:end="59:25"><ternary pos:start="59:12" pos:end="59:25"><condition pos:start="59:12" pos:end="59:18"><expr pos:start="59:12" pos:end="59:16"><name pos:start="59:12" pos:end="59:16">allow</name></expr> ?</condition><then pos:start="59:20" pos:end="59:20"> <expr pos:start="59:20" pos:end="59:20"><literal type="number" pos:start="59:20" pos:end="59:20">0</literal></expr> </then><else pos:start="59:22" pos:end="59:25">: <expr pos:start="59:24" pos:end="59:25"><operator pos:start="59:24" pos:end="59:24">-</operator><literal type="number" pos:start="59:25" pos:end="59:25">1</literal></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
