<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3961.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">rtsp_read_play</name><parameter_list pos:start="1:26" pos:end="1:45">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">RTSPState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">rt</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:21">RTSPMessageHeader</name></type> <name pos:start="7:23" pos:end="7:28">reply1</name></decl>, <decl pos:start="7:31" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:21"><modifier pos:start="7:31" pos:end="7:31">*</modifier></type><name pos:start="7:32" pos:end="7:36">reply</name> <init pos:start="7:38" pos:end="7:46">= <expr pos:start="7:40" pos:end="7:46"><operator pos:start="7:40" pos:end="7:40">&amp;</operator><name pos:start="7:41" pos:end="7:46">reply1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:18"><name pos:start="11:10" pos:end="11:12">cmd</name><index pos:start="11:13" pos:end="11:18">[<expr pos:start="11:14" pos:end="11:17"><literal type="number" pos:start="11:14" pos:end="11:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:59"><expr pos:start="15:5" pos:end="15:58"><call pos:start="15:5" pos:end="15:58"><name pos:start="15:5" pos:end="15:10">av_log</name><argument_list pos:start="15:11" pos:end="15:58">(<argument pos:start="15:12" pos:end="15:12"><expr pos:start="15:12" pos:end="15:12"><name pos:start="15:12" pos:end="15:12">s</name></expr></argument>, <argument pos:start="15:15" pos:end="15:26"><expr pos:start="15:15" pos:end="15:26"><name pos:start="15:15" pos:end="15:26">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="15:29" pos:end="15:46"><expr pos:start="15:29" pos:end="15:46"><literal type="string" pos:start="15:29" pos:end="15:46">"hello state=%d\n"</literal></expr></argument>, <argument pos:start="15:49" pos:end="15:57"><expr pos:start="15:49" pos:end="15:57"><name pos:start="15:49" pos:end="15:57"><name pos:start="15:49" pos:end="15:50">rt</name><operator pos:start="15:51" pos:end="15:52">-&gt;</operator><name pos:start="15:53" pos:end="15:57">state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="77:5"><if pos:start="19:5" pos:end="77:5">if <condition pos:start="19:8" pos:end="19:72">(<expr pos:start="19:9" pos:end="19:71"><operator pos:start="19:9" pos:end="19:9">!</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:25"><name pos:start="19:11" pos:end="19:12">rt</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:25">server_type</name></name> <operator pos:start="19:27" pos:end="19:28">==</operator> <name pos:start="19:30" pos:end="19:45">RTSP_SERVER_REAL</name> <operator pos:start="19:47" pos:end="19:48">&amp;&amp;</operator> <name pos:start="19:50" pos:end="19:70"><name pos:start="19:50" pos:end="19:51">rt</name><operator pos:start="19:52" pos:end="19:53">-&gt;</operator><name pos:start="19:54" pos:end="19:70">need_subscription</name></name><operator pos:start="19:71" pos:end="19:71">)</operator></expr>)</condition> <block pos:start="19:74" pos:end="77:5">{<block_content pos:start="21:9" pos:end="75:9">

        <if_stmt pos:start="21:9" pos:end="33:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:43">(<expr pos:start="21:13" pos:end="21:42"><name pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:14">rt</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:21">state</name></name> <operator pos:start="21:23" pos:end="21:24">==</operator> <name pos:start="21:26" pos:end="21:42">RTSP_STATE_PAUSED</name></expr>)</condition> <block pos:start="21:45" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:23">

            <expr_stmt pos:start="23:13" pos:end="23:23"><expr pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:15">cmd</name><index pos:start="23:16" pos:end="23:18">[<expr pos:start="23:17" pos:end="23:17"><literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>]</index></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="25:11" pos:end="33:9">else <block pos:start="25:16" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:64">

            <expr_stmt pos:start="27:13" pos:end="31:64"><expr pos:start="27:13" pos:end="31:63"><call pos:start="27:13" pos:end="31:63"><name pos:start="27:13" pos:end="27:20">snprintf</name><argument_list pos:start="27:21" pos:end="31:63">(<argument pos:start="27:22" pos:end="27:24"><expr pos:start="27:22" pos:end="27:24"><name pos:start="27:22" pos:end="27:24">cmd</name></expr></argument>, <argument pos:start="27:27" pos:end="27:37"><expr pos:start="27:27" pos:end="27:37"><sizeof pos:start="27:27" pos:end="27:37">sizeof<argument_list pos:start="27:33" pos:end="27:37">(<argument pos:start="27:34" pos:end="27:36"><expr pos:start="27:34" pos:end="27:36"><name pos:start="27:34" pos:end="27:36">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="29:22" pos:end="29:44"><expr pos:start="29:22" pos:end="29:44"><literal type="string" pos:start="29:22" pos:end="29:44">"Range: npt=%0.3f-\r\n"</literal></expr></argument>,

                     <argument pos:start="31:22" pos:end="31:62"><expr pos:start="31:22" pos:end="31:62"><operator pos:start="31:22" pos:end="31:22">(</operator><name pos:start="31:23" pos:end="31:28">double</name><operator pos:start="31:29" pos:end="31:29">)</operator><name pos:start="31:30" pos:end="31:47"><name pos:start="31:30" pos:end="31:31">rt</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:47">seek_timestamp</name></name> <operator pos:start="31:49" pos:end="31:49">/</operator> <name pos:start="31:51" pos:end="31:62">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:71"><expr pos:start="35:9" pos:end="35:70"><call pos:start="35:9" pos:end="35:70"><name pos:start="35:9" pos:end="35:24">ff_rtsp_send_cmd</name><argument_list pos:start="35:25" pos:end="35:70">(<argument pos:start="35:26" pos:end="35:26"><expr pos:start="35:26" pos:end="35:26"><name pos:start="35:26" pos:end="35:26">s</name></expr></argument>, <argument pos:start="35:29" pos:end="35:34"><expr pos:start="35:29" pos:end="35:34"><literal type="string" pos:start="35:29" pos:end="35:34">"PLAY"</literal></expr></argument>, <argument pos:start="35:37" pos:end="35:51"><expr pos:start="35:37" pos:end="35:51"><name pos:start="35:37" pos:end="35:51"><name pos:start="35:37" pos:end="35:38">rt</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:51">control_uri</name></name></expr></argument>, <argument pos:start="35:54" pos:end="35:56"><expr pos:start="35:54" pos:end="35:56"><name pos:start="35:54" pos:end="35:56">cmd</name></expr></argument>, <argument pos:start="35:59" pos:end="35:63"><expr pos:start="35:59" pos:end="35:63"><name pos:start="35:59" pos:end="35:63">reply</name></expr></argument>, <argument pos:start="35:66" pos:end="35:69"><expr pos:start="35:66" pos:end="35:69"><name pos:start="35:66" pos:end="35:69">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:49">(<expr pos:start="37:13" pos:end="37:48"><name pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:17">reply</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:30">status_code</name></name> <operator pos:start="37:32" pos:end="37:33">!=</operator> <name pos:start="37:35" pos:end="37:48">RTSP_STATUS_OK</name></expr>)</condition> <block pos:start="37:51" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:22">

            <return pos:start="39:13" pos:end="39:22">return <expr pos:start="39:20" pos:end="39:21"><operator pos:start="39:20" pos:end="39:20">-</operator><literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="43:9" pos:end="75:9"><if pos:start="43:9" pos:end="75:9">if <condition pos:start="43:12" pos:end="45:48">(<expr pos:start="43:13" pos:end="45:47"><name pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:17">reply</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:30">range_start</name></name> <operator pos:start="43:32" pos:end="43:33">!=</operator> <name pos:start="43:35" pos:end="43:48">AV_NOPTS_VALUE</name> <operator pos:start="43:50" pos:end="43:51">&amp;&amp;</operator>

            <name pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:14">rt</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:25">transport</name></name> <operator pos:start="45:27" pos:end="45:28">==</operator> <name pos:start="45:30" pos:end="45:47">RTSP_TRANSPORT_RTP</name></expr>)</condition> <block pos:start="45:50" pos:end="75:9">{<block_content pos:start="47:13" pos:end="73:13">

            <for pos:start="47:13" pos:end="73:13">for <control pos:start="47:17" pos:end="47:53">(<init pos:start="47:18" pos:end="47:23"><expr pos:start="47:18" pos:end="47:22"><name pos:start="47:18" pos:end="47:18">i</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>;</init> <condition pos:start="47:25" pos:end="47:48"><expr pos:start="47:25" pos:end="47:47"><name pos:start="47:25" pos:end="47:25">i</name> <operator pos:start="47:27" pos:end="47:27">&lt;</operator> <name pos:start="47:29" pos:end="47:47"><name pos:start="47:29" pos:end="47:30">rt</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:47">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="47:50" pos:end="47:52"><expr pos:start="47:50" pos:end="47:52"><name pos:start="47:50" pos:end="47:50">i</name><operator pos:start="47:51" pos:end="47:52">++</operator></expr></incr>)</control> <block pos:start="47:55" pos:end="73:13">{<block_content pos:start="49:17" pos:end="71:77">

                <decl_stmt pos:start="49:17" pos:end="49:58"><decl pos:start="49:17" pos:end="49:57"><type pos:start="49:17" pos:end="49:28"><name pos:start="49:17" pos:end="49:26">RTSPStream</name> <modifier pos:start="49:28" pos:end="49:28">*</modifier></type><name pos:start="49:29" pos:end="49:35">rtsp_st</name> <init pos:start="49:37" pos:end="49:57">= <expr pos:start="49:39" pos:end="49:57"><name pos:start="49:39" pos:end="49:57"><name pos:start="49:39" pos:end="49:40">rt</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:54">rtsp_streams</name><index pos:start="49:55" pos:end="49:57">[<expr pos:start="49:56" pos:end="49:56"><name pos:start="49:56" pos:end="49:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="51:17" pos:end="51:66"><decl pos:start="51:17" pos:end="51:65"><type pos:start="51:17" pos:end="51:33"><name pos:start="51:17" pos:end="51:31">RTPDemuxContext</name> <modifier pos:start="51:33" pos:end="51:33">*</modifier></type><name pos:start="51:34" pos:end="51:39">rtpctx</name> <init pos:start="51:41" pos:end="51:65">= <expr pos:start="51:43" pos:end="51:65"><name pos:start="51:43" pos:end="51:65"><name pos:start="51:43" pos:end="51:49">rtsp_st</name><operator pos:start="51:50" pos:end="51:51">-&gt;</operator><name pos:start="51:52" pos:end="51:65">transport_priv</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="53:17" pos:end="53:36"><decl pos:start="53:17" pos:end="53:35"><type pos:start="53:17" pos:end="53:26"><name pos:start="53:17" pos:end="53:24">AVStream</name> <modifier pos:start="53:26" pos:end="53:26">*</modifier></type><name pos:start="53:27" pos:end="53:28">st</name> <init pos:start="53:30" pos:end="53:35">= <expr pos:start="53:32" pos:end="53:35"><name pos:start="53:32" pos:end="53:35">NULL</name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="57:17" pos:end="59:59"><if pos:start="57:17" pos:end="59:59">if <condition pos:start="57:20" pos:end="57:47">(<expr pos:start="57:21" pos:end="57:46"><name pos:start="57:21" pos:end="57:41"><name pos:start="57:21" pos:end="57:27">rtsp_st</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:41">stream_index</name></name> <operator pos:start="57:43" pos:end="57:44">&gt;=</operator> <literal type="number" pos:start="57:46" pos:end="57:46">0</literal></expr>)</condition><block type="pseudo" pos:start="59:21" pos:end="59:59"><block_content pos:start="59:21" pos:end="59:59">

                    <expr_stmt pos:start="59:21" pos:end="59:59"><expr pos:start="59:21" pos:end="59:58"><name pos:start="59:21" pos:end="59:22">st</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:58"><name pos:start="59:26" pos:end="59:26">s</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:35">streams</name><index pos:start="59:36" pos:end="59:58">[<expr pos:start="59:37" pos:end="59:57"><name pos:start="59:37" pos:end="59:57"><name pos:start="59:37" pos:end="59:43">rtsp_st</name><operator pos:start="59:44" pos:end="59:45">-&gt;</operator><name pos:start="59:46" pos:end="59:57">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:61"><expr pos:start="61:17" pos:end="61:60"><name pos:start="61:17" pos:end="61:42"><name pos:start="61:17" pos:end="61:22">rtpctx</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:42">last_rtcp_ntp_time</name></name>  <operator pos:start="61:45" pos:end="61:45">=</operator> <name pos:start="61:47" pos:end="61:60">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:61"><expr pos:start="63:17" pos:end="63:60"><name pos:start="63:17" pos:end="63:43"><name pos:start="63:17" pos:end="63:22">rtpctx</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:43">first_rtcp_ntp_time</name></name> <operator pos:start="63:45" pos:end="63:45">=</operator> <name pos:start="63:47" pos:end="63:60">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

                <if_stmt pos:start="65:17" pos:end="71:77"><if pos:start="65:17" pos:end="71:77">if <condition pos:start="65:20" pos:end="65:23">(<expr pos:start="65:21" pos:end="65:22"><name pos:start="65:21" pos:end="65:22">st</name></expr>)</condition><block type="pseudo" pos:start="67:21" pos:end="71:77"><block_content pos:start="67:21" pos:end="71:77">

                    <expr_stmt pos:start="67:21" pos:end="71:77"><expr pos:start="67:21" pos:end="71:76"><name pos:start="67:21" pos:end="67:46"><name pos:start="67:21" pos:end="67:26">rtpctx</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:46">range_start_offset</name></name> <operator pos:start="67:48" pos:end="67:48">=</operator> <call pos:start="67:50" pos:end="71:76"><name pos:start="67:50" pos:end="67:61">av_rescale_q</name><argument_list pos:start="67:62" pos:end="71:76">(<argument pos:start="67:63" pos:end="67:80"><expr pos:start="67:63" pos:end="67:80"><name pos:start="67:63" pos:end="67:80"><name pos:start="67:63" pos:end="67:67">reply</name><operator pos:start="67:68" pos:end="67:69">-&gt;</operator><name pos:start="67:70" pos:end="67:80">range_start</name></name></expr></argument>,

                                                              <argument pos:start="69:63" pos:end="69:76"><expr pos:start="69:63" pos:end="69:76"><name pos:start="69:63" pos:end="69:76">AV_TIME_BASE_Q</name></expr></argument>,

                                                              <argument pos:start="71:63" pos:end="71:75"><expr pos:start="71:63" pos:end="71:75"><name pos:start="71:63" pos:end="71:75"><name pos:start="71:63" pos:end="71:64">st</name><operator pos:start="71:65" pos:end="71:66">-&gt;</operator><name pos:start="71:67" pos:end="71:75">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:37"><expr pos:start="79:5" pos:end="79:36"><name pos:start="79:5" pos:end="79:13"><name pos:start="79:5" pos:end="79:6">rt</name><operator pos:start="79:7" pos:end="79:8">-&gt;</operator><name pos:start="79:9" pos:end="79:13">state</name></name> <operator pos:start="79:15" pos:end="79:15">=</operator> <name pos:start="79:17" pos:end="79:36">RTSP_STATE_STREAMING</name></expr>;</expr_stmt>

    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
