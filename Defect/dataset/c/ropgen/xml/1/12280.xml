<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12280.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">vfio_probe_ati_bar2_quirk</name><parameter_list pos:start="1:38" pos:end="1:66">(<parameter pos:start="1:39" pos:end="1:57"><decl pos:start="1:39" pos:end="1:57"><type pos:start="1:39" pos:end="1:57"><name pos:start="1:39" pos:end="1:51">VFIOPCIDevice</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">vdev</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:65"><decl pos:start="1:60" pos:end="1:65"><type pos:start="1:60" pos:end="1:65"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:65">nr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:57">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VFIOQuirk</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">quirk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25">VFIOConfigMirrorQuirk</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:33">mirror</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:58">/* Only enable on newer devices where BAR2 is 64bit */</comment>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="15:58">(<expr pos:start="13:9" pos:end="15:57"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:57"><name pos:start="13:10" pos:end="13:20">vfio_pci_is</name><argument_list pos:start="13:21" pos:end="13:57">(<argument pos:start="13:22" pos:end="13:25"><expr pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:25">vdev</name></expr></argument>, <argument pos:start="13:28" pos:end="13:44"><expr pos:start="13:28" pos:end="13:44"><name pos:start="13:28" pos:end="13:44">PCI_VENDOR_ID_ATI</name></expr></argument>, <argument pos:start="13:47" pos:end="13:56"><expr pos:start="13:47" pos:end="13:56"><name pos:start="13:47" pos:end="13:56">PCI_ANY_ID</name></expr></argument>)</argument_list></call> <operator pos:start="13:59" pos:end="13:60">||</operator>

        <operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:22"><name pos:start="15:10" pos:end="15:13">vdev</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:22">has_vga</name></name> <operator pos:start="15:24" pos:end="15:25">||</operator> <name pos:start="15:27" pos:end="15:28">nr</name> <operator pos:start="15:30" pos:end="15:31">!=</operator> <literal type="number" pos:start="15:33" pos:end="15:33">2</literal> <operator pos:start="15:35" pos:end="15:36">||</operator> <operator pos:start="15:38" pos:end="15:38">!</operator><name pos:start="15:39" pos:end="15:51"><name pos:start="15:39" pos:end="15:42">vdev</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:48">bars</name><index pos:start="15:49" pos:end="15:51">[<expr pos:start="15:50" pos:end="15:50"><literal type="number" pos:start="15:50" pos:end="15:50">2</literal></expr>]</index></name><operator pos:start="15:52" pos:end="15:52">.</operator><name pos:start="15:53" pos:end="15:57">mem64</name></expr>)</condition> <block pos:start="15:60" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:9">quirk</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:21">g_malloc0</name><argument_list pos:start="23:22" pos:end="23:37">(<argument pos:start="23:23" pos:end="23:36"><expr pos:start="23:23" pos:end="23:36"><sizeof pos:start="23:23" pos:end="23:36">sizeof<argument_list pos:start="23:29" pos:end="23:36">(<argument pos:start="23:30" pos:end="23:35"><expr pos:start="23:30" pos:end="23:35"><operator pos:start="23:30" pos:end="23:30">*</operator><name pos:start="23:31" pos:end="23:35">quirk</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:10">mirror</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <name pos:start="25:14" pos:end="25:24"><name pos:start="25:14" pos:end="25:18">quirk</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:24">data</name></name> <operator pos:start="25:26" pos:end="25:26">=</operator> <call pos:start="25:28" pos:end="25:53"><name pos:start="25:28" pos:end="25:36">g_malloc0</name><argument_list pos:start="25:37" pos:end="25:53">(<argument pos:start="25:38" pos:end="25:52"><expr pos:start="25:38" pos:end="25:52"><sizeof pos:start="25:38" pos:end="25:52">sizeof<argument_list pos:start="25:44" pos:end="25:52">(<argument pos:start="25:45" pos:end="25:51"><expr pos:start="25:45" pos:end="25:51"><operator pos:start="25:45" pos:end="25:45">*</operator><name pos:start="25:46" pos:end="25:51">mirror</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:63"><expr pos:start="27:5" pos:end="27:62"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:10">mirror</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:15">mem</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:28"><name pos:start="27:19" pos:end="27:23">quirk</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:28">mem</name></name> <operator pos:start="27:30" pos:end="27:30">=</operator> <call pos:start="27:32" pos:end="27:62"><name pos:start="27:32" pos:end="27:40">g_malloc0</name><argument_list pos:start="27:41" pos:end="27:62">(<argument pos:start="27:42" pos:end="27:61"><expr pos:start="27:42" pos:end="27:61"><sizeof pos:start="27:42" pos:end="27:61">sizeof<argument_list pos:start="27:48" pos:end="27:61">(<argument pos:start="27:49" pos:end="27:60"><expr pos:start="27:49" pos:end="27:60"><name pos:start="27:49" pos:end="27:60">MemoryRegion</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:9">quirk</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:17">nr_mem</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:10">mirror</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:16">vdev</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:23">vdev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:10">mirror</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:18">offset</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <literal type="number" pos:start="33:22" pos:end="33:27">0x4000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:21"><expr pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:10">mirror</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:15">bar</name></name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:20">nr</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="43:77"><expr pos:start="39:5" pos:end="43:76"><call pos:start="39:5" pos:end="43:76"><name pos:start="39:5" pos:end="39:25">memory_region_init_io</name><argument_list pos:start="39:26" pos:end="43:76">(<argument pos:start="39:27" pos:end="39:37"><expr pos:start="39:27" pos:end="39:37"><name pos:start="39:27" pos:end="39:37"><name pos:start="39:27" pos:end="39:32">mirror</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:37">mem</name></name></expr></argument>, <argument pos:start="39:40" pos:end="39:51"><expr pos:start="39:40" pos:end="39:51"><call pos:start="39:40" pos:end="39:51"><name pos:start="39:40" pos:end="39:45">OBJECT</name><argument_list pos:start="39:46" pos:end="39:51">(<argument pos:start="39:47" pos:end="39:50"><expr pos:start="39:47" pos:end="39:50"><name pos:start="39:47" pos:end="39:50">vdev</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="41:27" pos:end="41:52"><expr pos:start="41:27" pos:end="41:52"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:52">vfio_generic_mirror_quirk</name></expr></argument>, <argument pos:start="41:55" pos:end="41:60"><expr pos:start="41:55" pos:end="41:60"><name pos:start="41:55" pos:end="41:60">mirror</name></expr></argument>,

                          <argument pos:start="43:27" pos:end="43:52"><expr pos:start="43:27" pos:end="43:52"><literal type="string" pos:start="43:27" pos:end="43:52">"vfio-ati-bar2-4000-quirk"</literal></expr></argument>, <argument pos:start="43:55" pos:end="43:75"><expr pos:start="43:55" pos:end="43:75"><name pos:start="43:55" pos:end="43:75">PCI_CONFIG_SPACE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:72"><expr pos:start="45:5" pos:end="47:71"><call pos:start="45:5" pos:end="47:71"><name pos:start="45:5" pos:end="45:39">memory_region_add_subregion_overlap</name><argument_list pos:start="45:40" pos:end="47:71">(<argument pos:start="45:41" pos:end="45:66"><expr pos:start="45:41" pos:end="45:66"><operator pos:start="45:41" pos:end="45:41">&amp;</operator><name pos:start="45:42" pos:end="45:55"><name pos:start="45:42" pos:end="45:45">vdev</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:51">bars</name><index pos:start="45:52" pos:end="45:55">[<expr pos:start="45:53" pos:end="45:54"><name pos:start="45:53" pos:end="45:54">nr</name></expr>]</index></name><operator pos:start="45:56" pos:end="45:56">.</operator><name pos:start="45:57" pos:end="45:66"><name pos:start="45:57" pos:end="45:62">region</name><operator pos:start="45:63" pos:end="45:63">.</operator><name pos:start="45:64" pos:end="45:66">mem</name></name></expr></argument>,

                                        <argument pos:start="47:41" pos:end="47:54"><expr pos:start="47:41" pos:end="47:54"><name pos:start="47:41" pos:end="47:54"><name pos:start="47:41" pos:end="47:46">mirror</name><operator pos:start="47:47" pos:end="47:48">-&gt;</operator><name pos:start="47:49" pos:end="47:54">offset</name></name></expr></argument>, <argument pos:start="47:57" pos:end="47:67"><expr pos:start="47:57" pos:end="47:67"><name pos:start="47:57" pos:end="47:67"><name pos:start="47:57" pos:end="47:62">mirror</name><operator pos:start="47:63" pos:end="47:64">-&gt;</operator><name pos:start="47:65" pos:end="47:67">mem</name></name></expr></argument>, <argument pos:start="47:70" pos:end="47:70"><expr pos:start="47:70" pos:end="47:70"><literal type="number" pos:start="47:70" pos:end="47:70">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:59"><expr pos:start="51:5" pos:end="51:58"><call pos:start="51:5" pos:end="51:58"><name pos:start="51:5" pos:end="51:21">QLIST_INSERT_HEAD</name><argument_list pos:start="51:22" pos:end="51:58">(<argument pos:start="51:23" pos:end="51:44"><expr pos:start="51:23" pos:end="51:44"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:37"><name pos:start="51:24" pos:end="51:27">vdev</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:33">bars</name><index pos:start="51:34" pos:end="51:37">[<expr pos:start="51:35" pos:end="51:36"><name pos:start="51:35" pos:end="51:36">nr</name></expr>]</index></name><operator pos:start="51:38" pos:end="51:38">.</operator><name pos:start="51:39" pos:end="51:44">quirks</name></expr></argument>, <argument pos:start="51:47" pos:end="51:51"><expr pos:start="51:47" pos:end="51:51"><name pos:start="51:47" pos:end="51:51">quirk</name></expr></argument>, <argument pos:start="51:54" pos:end="51:57"><expr pos:start="51:54" pos:end="51:57"><name pos:start="51:54" pos:end="51:57">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:57"><expr pos:start="55:5" pos:end="55:56"><call pos:start="55:5" pos:end="55:56"><name pos:start="55:5" pos:end="55:35">trace_vfio_quirk_ati_bar2_probe</name><argument_list pos:start="55:36" pos:end="55:56">(<argument pos:start="55:37" pos:end="55:55"><expr pos:start="55:37" pos:end="55:55"><name pos:start="55:37" pos:end="55:55"><name pos:start="55:37" pos:end="55:40">vdev</name><operator pos:start="55:41" pos:end="55:42">-&gt;</operator><name pos:start="55:43" pos:end="55:50">vbasedev</name><operator pos:start="55:51" pos:end="55:51">.</operator><name pos:start="55:52" pos:end="55:55">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
