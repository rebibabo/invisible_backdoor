<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18436.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">net_init_tap_one</name><parameter_list pos:start="1:29" pos:end="9:64">(<parameter pos:start="1:30" pos:end="1:56"><decl pos:start="1:30" pos:end="1:56"><type pos:start="1:30" pos:end="1:56"><specifier pos:start="1:30" pos:end="1:34">const</specifier> <name pos:start="1:36" pos:end="1:51">NetdevTapOptions</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">tap</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:78"><decl pos:start="1:59" pos:end="1:78"><type pos:start="1:59" pos:end="1:78"><name pos:start="1:59" pos:end="1:72">NetClientState</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:78">peer</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:46"><decl pos:start="3:30" pos:end="3:46"><type pos:start="3:30" pos:end="3:46"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:39">char</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:46">model</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:64"><decl pos:start="3:49" pos:end="3:64"><type pos:start="3:49" pos:end="3:64"><specifier pos:start="3:49" pos:end="3:53">const</specifier> <name pos:start="3:55" pos:end="3:58">char</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:64">name</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:47"><decl pos:start="5:30" pos:end="5:47"><type pos:start="5:30" pos:end="5:47"><specifier pos:start="5:30" pos:end="5:34">const</specifier> <name pos:start="5:36" pos:end="5:39">char</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:47">ifname</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:67"><decl pos:start="5:50" pos:end="5:67"><type pos:start="5:50" pos:end="5:67"><specifier pos:start="5:50" pos:end="5:54">const</specifier> <name pos:start="5:56" pos:end="5:59">char</name> <modifier pos:start="5:61" pos:end="5:61">*</modifier></type><name pos:start="5:62" pos:end="5:67">script</name></decl></parameter>,

                             <parameter pos:start="7:30" pos:end="7:51"><decl pos:start="7:30" pos:end="7:51"><type pos:start="7:30" pos:end="7:51"><specifier pos:start="7:30" pos:end="7:34">const</specifier> <name pos:start="7:36" pos:end="7:39">char</name> <modifier pos:start="7:41" pos:end="7:41">*</modifier></type><name pos:start="7:42" pos:end="7:51">downscript</name></decl></parameter>, <parameter pos:start="7:54" pos:end="7:76"><decl pos:start="7:54" pos:end="7:76"><type pos:start="7:54" pos:end="7:76"><specifier pos:start="7:54" pos:end="7:58">const</specifier> <name pos:start="7:60" pos:end="7:63">char</name> <modifier pos:start="7:65" pos:end="7:65">*</modifier></type><name pos:start="7:66" pos:end="7:76">vhostfdname</name></decl></parameter>,

                             <parameter pos:start="9:30" pos:end="9:41"><decl pos:start="9:30" pos:end="9:41"><type pos:start="9:30" pos:end="9:41"><name pos:start="9:30" pos:end="9:32">int</name></type> <name pos:start="9:34" pos:end="9:41">vnet_hdr</name></decl></parameter>, <parameter pos:start="9:44" pos:end="9:49"><decl pos:start="9:44" pos:end="9:49"><type pos:start="9:44" pos:end="9:49"><name pos:start="9:44" pos:end="9:46">int</name></type> <name pos:start="9:48" pos:end="9:49">fd</name></decl></parameter>, <parameter pos:start="9:52" pos:end="9:63"><decl pos:start="9:52" pos:end="9:63"><type pos:start="9:52" pos:end="9:63"><name pos:start="9:52" pos:end="9:56">Error</name> <modifier pos:start="9:58" pos:end="9:58">*</modifier><modifier pos:start="9:59" pos:end="9:59">*</modifier></type><name pos:start="9:60" pos:end="9:63">errp</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="133:1">{<block_content pos:start="13:5" pos:end="131:5">

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:14">err</name> <init pos:start="13:16" pos:end="13:21">= <expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:67"><decl pos:start="15:5" pos:end="15:66"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">TAPState</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:15">s</name> <init pos:start="15:17" pos:end="15:66">= <expr pos:start="15:19" pos:end="15:66"><call pos:start="15:19" pos:end="15:66"><name pos:start="15:19" pos:end="15:33">net_tap_fd_init</name><argument_list pos:start="15:34" pos:end="15:66">(<argument pos:start="15:35" pos:end="15:38"><expr pos:start="15:35" pos:end="15:38"><name pos:start="15:35" pos:end="15:38">peer</name></expr></argument>, <argument pos:start="15:41" pos:end="15:45"><expr pos:start="15:41" pos:end="15:45"><name pos:start="15:41" pos:end="15:45">model</name></expr></argument>, <argument pos:start="15:48" pos:end="15:51"><expr pos:start="15:48" pos:end="15:51"><name pos:start="15:48" pos:end="15:51">name</name></expr></argument>, <argument pos:start="15:54" pos:end="15:55"><expr pos:start="15:54" pos:end="15:55"><name pos:start="15:54" pos:end="15:55">fd</name></expr></argument>, <argument pos:start="15:58" pos:end="15:65"><expr pos:start="15:58" pos:end="15:65"><name pos:start="15:58" pos:end="15:65">vnet_hdr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">vhostfd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><call pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:18">tap_set_sndbuf</name><argument_list pos:start="21:19" pos:end="21:36">(<argument pos:start="21:20" pos:end="21:24"><expr pos:start="21:20" pos:end="21:24"><name pos:start="21:20" pos:end="21:24"><name pos:start="21:20" pos:end="21:20">s</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:24">fd</name></name></expr></argument>, <argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">tap</name></expr></argument>, <argument pos:start="21:32" pos:end="21:35"><expr pos:start="21:32" pos:end="21:35"><operator pos:start="21:32" pos:end="21:32">&amp;</operator><name pos:start="21:33" pos:end="21:35">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">err</name></expr>)</condition> <block pos:start="23:14" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:15">

        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><call pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:23">error_propagate</name><argument_list pos:start="25:24" pos:end="25:34">(<argument pos:start="25:25" pos:end="25:28"><expr pos:start="25:25" pos:end="25:28"><name pos:start="25:25" pos:end="25:28">errp</name></expr></argument>, <argument pos:start="25:31" pos:end="25:33"><expr pos:start="25:31" pos:end="25:33"><name pos:start="25:31" pos:end="25:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="63:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:36">(<expr pos:start="33:9" pos:end="33:35"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:11">tap</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:19">has_fd</name></name> <operator pos:start="33:21" pos:end="33:22">||</operator> <name pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:26">tap</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:35">has_fds</name></name></expr>)</condition> <block pos:start="33:38" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:70">

        <expr_stmt pos:start="35:9" pos:end="35:70"><expr pos:start="35:9" pos:end="35:69"><call pos:start="35:9" pos:end="35:69"><name pos:start="35:9" pos:end="35:16">snprintf</name><argument_list pos:start="35:17" pos:end="35:69">(<argument pos:start="35:18" pos:end="35:31"><expr pos:start="35:18" pos:end="35:31"><name pos:start="35:18" pos:end="35:31"><name pos:start="35:18" pos:end="35:18">s</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:22">nc</name><operator pos:start="35:23" pos:end="35:23">.</operator><name pos:start="35:24" pos:end="35:31">info_str</name></name></expr></argument>, <argument pos:start="35:34" pos:end="35:55"><expr pos:start="35:34" pos:end="35:55"><sizeof pos:start="35:34" pos:end="35:55">sizeof<argument_list pos:start="35:40" pos:end="35:55">(<argument pos:start="35:41" pos:end="35:54"><expr pos:start="35:41" pos:end="35:54"><name pos:start="35:41" pos:end="35:54"><name pos:start="35:41" pos:end="35:41">s</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:45">nc</name><operator pos:start="35:46" pos:end="35:46">.</operator><name pos:start="35:47" pos:end="35:54">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="35:58" pos:end="35:64"><expr pos:start="35:58" pos:end="35:64"><literal type="string" pos:start="35:58" pos:end="35:64">"fd=%d"</literal></expr></argument>, <argument pos:start="35:67" pos:end="35:68"><expr pos:start="35:67" pos:end="35:68"><name pos:start="35:67" pos:end="35:68">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="43:5">else if <condition pos:start="37:15" pos:end="37:31">(<expr pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:18">tap</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:30">has_helper</name></name></expr>)</condition> <block pos:start="37:33" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:30">

        <expr_stmt pos:start="39:9" pos:end="41:30"><expr pos:start="39:9" pos:end="41:29"><call pos:start="39:9" pos:end="41:29"><name pos:start="39:9" pos:end="39:16">snprintf</name><argument_list pos:start="39:17" pos:end="41:29">(<argument pos:start="39:18" pos:end="39:31"><expr pos:start="39:18" pos:end="39:31"><name pos:start="39:18" pos:end="39:31"><name pos:start="39:18" pos:end="39:18">s</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:22">nc</name><operator pos:start="39:23" pos:end="39:23">.</operator><name pos:start="39:24" pos:end="39:31">info_str</name></name></expr></argument>, <argument pos:start="39:34" pos:end="39:55"><expr pos:start="39:34" pos:end="39:55"><sizeof pos:start="39:34" pos:end="39:55">sizeof<argument_list pos:start="39:40" pos:end="39:55">(<argument pos:start="39:41" pos:end="39:54"><expr pos:start="39:41" pos:end="39:54"><name pos:start="39:41" pos:end="39:54"><name pos:start="39:41" pos:end="39:41">s</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:45">nc</name><operator pos:start="39:46" pos:end="39:46">.</operator><name pos:start="39:47" pos:end="39:54">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:58" pos:end="39:68"><expr pos:start="39:58" pos:end="39:68"><literal type="string" pos:start="39:58" pos:end="39:68">"helper=%s"</literal></expr></argument>,

                 <argument pos:start="41:18" pos:end="41:28"><expr pos:start="41:18" pos:end="41:28"><name pos:start="41:18" pos:end="41:28"><name pos:start="41:18" pos:end="41:20">tap</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:28">helper</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="63:5">else <block pos:start="43:12" pos:end="63:5">{<block_content pos:start="45:9" pos:end="61:9">

        <expr_stmt pos:start="45:9" pos:end="49:29"><expr pos:start="45:9" pos:end="49:28"><call pos:start="45:9" pos:end="49:28"><name pos:start="45:9" pos:end="45:16">snprintf</name><argument_list pos:start="45:17" pos:end="49:28">(<argument pos:start="45:18" pos:end="45:31"><expr pos:start="45:18" pos:end="45:31"><name pos:start="45:18" pos:end="45:31"><name pos:start="45:18" pos:end="45:18">s</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:22">nc</name><operator pos:start="45:23" pos:end="45:23">.</operator><name pos:start="45:24" pos:end="45:31">info_str</name></name></expr></argument>, <argument pos:start="45:34" pos:end="45:55"><expr pos:start="45:34" pos:end="45:55"><sizeof pos:start="45:34" pos:end="45:55">sizeof<argument_list pos:start="45:40" pos:end="45:55">(<argument pos:start="45:41" pos:end="45:54"><expr pos:start="45:41" pos:end="45:54"><name pos:start="45:41" pos:end="45:54"><name pos:start="45:41" pos:end="45:41">s</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:45">nc</name><operator pos:start="45:46" pos:end="45:46">.</operator><name pos:start="45:47" pos:end="45:54">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                 <argument pos:start="47:18" pos:end="47:52"><expr pos:start="47:18" pos:end="47:52"><literal type="string" pos:start="47:18" pos:end="47:52">"ifname=%s,script=%s,downscript=%s"</literal></expr></argument>, <argument pos:start="47:55" pos:end="47:60"><expr pos:start="47:55" pos:end="47:60"><name pos:start="47:55" pos:end="47:60">ifname</name></expr></argument>, <argument pos:start="47:63" pos:end="47:68"><expr pos:start="47:63" pos:end="47:68"><name pos:start="47:63" pos:end="47:68">script</name></expr></argument>,

                 <argument pos:start="49:18" pos:end="49:27"><expr pos:start="49:18" pos:end="49:27"><name pos:start="49:18" pos:end="49:27">downscript</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:42">(<expr pos:start="53:13" pos:end="53:41"><call pos:start="53:13" pos:end="53:36"><name pos:start="53:13" pos:end="53:18">strcmp</name><argument_list pos:start="53:19" pos:end="53:36">(<argument pos:start="53:20" pos:end="53:29"><expr pos:start="53:20" pos:end="53:29"><name pos:start="53:20" pos:end="53:29">downscript</name></expr></argument>, <argument pos:start="53:32" pos:end="53:35"><expr pos:start="53:32" pos:end="53:35"><literal type="string" pos:start="53:32" pos:end="53:35">"no"</literal></expr></argument>)</argument_list></call> <operator pos:start="53:38" pos:end="53:39">!=</operator> <literal type="number" pos:start="53:41" pos:end="53:41">0</literal></expr>)</condition> <block pos:start="53:44" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:35">

            <expr_stmt pos:start="55:13" pos:end="55:79"><expr pos:start="55:13" pos:end="55:78"><call pos:start="55:13" pos:end="55:78"><name pos:start="55:13" pos:end="55:20">snprintf</name><argument_list pos:start="55:21" pos:end="55:78">(<argument pos:start="55:22" pos:end="55:35"><expr pos:start="55:22" pos:end="55:35"><name pos:start="55:22" pos:end="55:35"><name pos:start="55:22" pos:end="55:22">s</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:35">down_script</name></name></expr></argument>, <argument pos:start="55:38" pos:end="55:59"><expr pos:start="55:38" pos:end="55:59"><sizeof pos:start="55:38" pos:end="55:59">sizeof<argument_list pos:start="55:44" pos:end="55:59">(<argument pos:start="55:45" pos:end="55:58"><expr pos:start="55:45" pos:end="55:58"><name pos:start="55:45" pos:end="55:58"><name pos:start="55:45" pos:end="55:45">s</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:58">down_script</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="55:62" pos:end="55:65"><expr pos:start="55:62" pos:end="55:65"><literal type="string" pos:start="55:62" pos:end="55:65">"%s"</literal></expr></argument>, <argument pos:start="55:68" pos:end="55:77"><expr pos:start="55:68" pos:end="55:77"><name pos:start="55:68" pos:end="55:77">downscript</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="59:35"><expr pos:start="57:13" pos:end="59:34"><call pos:start="57:13" pos:end="59:34"><name pos:start="57:13" pos:end="57:20">snprintf</name><argument_list pos:start="57:21" pos:end="59:34">(<argument pos:start="57:22" pos:end="57:39"><expr pos:start="57:22" pos:end="57:39"><name pos:start="57:22" pos:end="57:39"><name pos:start="57:22" pos:end="57:22">s</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:39">down_script_arg</name></name></expr></argument>, <argument pos:start="57:42" pos:end="57:67"><expr pos:start="57:42" pos:end="57:67"><sizeof pos:start="57:42" pos:end="57:67">sizeof<argument_list pos:start="57:48" pos:end="57:67">(<argument pos:start="57:49" pos:end="57:66"><expr pos:start="57:49" pos:end="57:66"><name pos:start="57:49" pos:end="57:66"><name pos:start="57:49" pos:end="57:49">s</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:66">down_script_arg</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="59:22" pos:end="59:25"><expr pos:start="59:22" pos:end="59:25"><literal type="string" pos:start="59:22" pos:end="59:25">"%s"</literal></expr></argument>, <argument pos:start="59:28" pos:end="59:33"><expr pos:start="59:28" pos:end="59:33"><name pos:start="59:28" pos:end="59:33">ifname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="67:5" pos:end="131:5"><if pos:start="67:5" pos:end="127:5">if <condition pos:start="67:8" pos:end="69:64">(<expr pos:start="67:9" pos:end="69:63"><ternary pos:start="67:9" pos:end="69:63"><condition pos:start="67:9" pos:end="67:24"><expr pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:11">tap</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:22">has_vhost</name></name></expr> ?</condition><then pos:start="67:26" pos:end="67:35"> <expr pos:start="67:26" pos:end="67:35"><name pos:start="67:26" pos:end="67:35"><name pos:start="67:26" pos:end="67:28">tap</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:35">vhost</name></name></expr> </then><else pos:start="67:37" pos:end="69:63">:

        <expr pos:start="69:9" pos:end="69:63"><name pos:start="69:9" pos:end="69:19">vhostfdname</name> <operator pos:start="69:21" pos:end="69:22">||</operator> <operator pos:start="69:24" pos:end="69:24">(</operator><name pos:start="69:25" pos:end="69:43"><name pos:start="69:25" pos:end="69:27">tap</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:43">has_vhostforce</name></name> <operator pos:start="69:45" pos:end="69:46">&amp;&amp;</operator> <name pos:start="69:48" pos:end="69:62"><name pos:start="69:48" pos:end="69:50">tap</name><operator pos:start="69:51" pos:end="69:52">-&gt;</operator><name pos:start="69:53" pos:end="69:62">vhostforce</name></name><operator pos:start="69:63" pos:end="69:63">)</operator></expr></else></ternary></expr>)</condition> <block pos:start="69:66" pos:end="127:5">{<block_content pos:start="71:9" pos:end="125:9">

        <decl_stmt pos:start="71:9" pos:end="71:32"><decl pos:start="71:9" pos:end="71:31"><type pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:23">VhostNetOptions</name></type> <name pos:start="71:25" pos:end="71:31">options</name></decl>;</decl_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:57"><expr pos:start="75:9" pos:end="75:56"><name pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:15">options</name><operator pos:start="75:16" pos:end="75:16">.</operator><name pos:start="75:17" pos:end="75:28">backend_type</name></name> <operator pos:start="75:30" pos:end="75:30">=</operator> <name pos:start="75:32" pos:end="75:56">VHOST_BACKEND_TYPE_KERNEL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:37"><expr pos:start="77:9" pos:end="77:36"><name pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:15">options</name><operator pos:start="77:16" pos:end="77:16">.</operator><name pos:start="77:17" pos:end="77:27">net_backend</name></name> <operator pos:start="77:29" pos:end="77:29">=</operator> <operator pos:start="77:31" pos:end="77:31">&amp;</operator><name pos:start="77:32" pos:end="77:36"><name pos:start="77:32" pos:end="77:32">s</name><operator pos:start="77:33" pos:end="77:34">-&gt;</operator><name pos:start="77:35" pos:end="77:36">nc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:63"><expr pos:start="79:9" pos:end="79:62"><name pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:15">options</name><operator pos:start="79:16" pos:end="79:16">.</operator><name pos:start="79:17" pos:end="79:21">force</name></name> <operator pos:start="79:23" pos:end="79:23">=</operator> <name pos:start="79:25" pos:end="79:43"><name pos:start="79:25" pos:end="79:27">tap</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:43">has_vhostforce</name></name> <operator pos:start="79:45" pos:end="79:46">&amp;&amp;</operator> <name pos:start="79:48" pos:end="79:62"><name pos:start="79:48" pos:end="79:50">tap</name><operator pos:start="79:51" pos:end="79:52">-&gt;</operator><name pos:start="79:53" pos:end="79:62">vhostforce</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="109:9"><if pos:start="83:9" pos:end="95:9">if <condition pos:start="83:12" pos:end="83:50">(<expr pos:start="83:13" pos:end="83:49"><name pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:15">tap</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:28">has_vhostfd</name></name> <operator pos:start="83:30" pos:end="83:31">||</operator> <name pos:start="83:33" pos:end="83:49"><name pos:start="83:33" pos:end="83:35">tap</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:49">has_vhostfds</name></name></expr>)</condition> <block pos:start="83:52" pos:end="95:9">{<block_content pos:start="85:13" pos:end="93:13">

            <expr_stmt pos:start="85:13" pos:end="85:67"><expr pos:start="85:13" pos:end="85:66"><name pos:start="85:13" pos:end="85:19">vhostfd</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <call pos:start="85:23" pos:end="85:66"><name pos:start="85:23" pos:end="85:38">monitor_fd_param</name><argument_list pos:start="85:39" pos:end="85:66">(<argument pos:start="85:40" pos:end="85:46"><expr pos:start="85:40" pos:end="85:46"><name pos:start="85:40" pos:end="85:46">cur_mon</name></expr></argument>, <argument pos:start="85:49" pos:end="85:59"><expr pos:start="85:49" pos:end="85:59"><name pos:start="85:49" pos:end="85:59">vhostfdname</name></expr></argument>, <argument pos:start="85:62" pos:end="85:65"><expr pos:start="85:62" pos:end="85:65"><operator pos:start="85:62" pos:end="85:62">&amp;</operator><name pos:start="85:63" pos:end="85:65">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="87:13" pos:end="93:13"><if pos:start="87:13" pos:end="93:13">if <condition pos:start="87:16" pos:end="87:30">(<expr pos:start="87:17" pos:end="87:29"><name pos:start="87:17" pos:end="87:23">vhostfd</name> <operator pos:start="87:25" pos:end="87:26">==</operator> <operator pos:start="87:28" pos:end="87:28">-</operator><literal type="number" pos:start="87:29" pos:end="87:29">1</literal></expr>)</condition> <block pos:start="87:32" pos:end="93:13">{<block_content pos:start="89:17" pos:end="91:23">

                <expr_stmt pos:start="89:17" pos:end="89:43"><expr pos:start="89:17" pos:end="89:42"><call pos:start="89:17" pos:end="89:42"><name pos:start="89:17" pos:end="89:31">error_propagate</name><argument_list pos:start="89:32" pos:end="89:42">(<argument pos:start="89:33" pos:end="89:36"><expr pos:start="89:33" pos:end="89:36"><name pos:start="89:33" pos:end="89:36">errp</name></expr></argument>, <argument pos:start="89:39" pos:end="89:41"><expr pos:start="89:39" pos:end="89:41"><name pos:start="89:39" pos:end="89:41">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="91:17" pos:end="91:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="109:9">else <block pos:start="95:16" pos:end="109:9">{<block_content pos:start="97:13" pos:end="107:13">

            <expr_stmt pos:start="97:13" pos:end="97:53"><expr pos:start="97:13" pos:end="97:52"><name pos:start="97:13" pos:end="97:19">vhostfd</name> <operator pos:start="97:21" pos:end="97:21">=</operator> <call pos:start="97:23" pos:end="97:52"><name pos:start="97:23" pos:end="97:26">open</name><argument_list pos:start="97:27" pos:end="97:52">(<argument pos:start="97:28" pos:end="97:43"><expr pos:start="97:28" pos:end="97:43"><literal type="string" pos:start="97:28" pos:end="97:43">"/dev/vhost-net"</literal></expr></argument>, <argument pos:start="97:46" pos:end="97:51"><expr pos:start="97:46" pos:end="97:51"><name pos:start="97:46" pos:end="97:51">O_RDWR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="107:13"><if pos:start="99:13" pos:end="107:13">if <condition pos:start="99:16" pos:end="99:28">(<expr pos:start="99:17" pos:end="99:27"><name pos:start="99:17" pos:end="99:23">vhostfd</name> <operator pos:start="99:25" pos:end="99:25">&lt;</operator> <literal type="number" pos:start="99:27" pos:end="99:27">0</literal></expr>)</condition> <block pos:start="99:30" pos:end="107:13">{<block_content pos:start="101:17" pos:end="105:23">

                <expr_stmt pos:start="101:17" pos:end="103:71"><expr pos:start="101:17" pos:end="103:70"><call pos:start="101:17" pos:end="103:70"><name pos:start="101:17" pos:end="101:32">error_setg_errno</name><argument_list pos:start="101:33" pos:end="103:70">(<argument pos:start="101:34" pos:end="101:37"><expr pos:start="101:34" pos:end="101:37"><name pos:start="101:34" pos:end="101:37">errp</name></expr></argument>, <argument pos:start="101:40" pos:end="101:44"><expr pos:start="101:40" pos:end="101:44"><name pos:start="101:40" pos:end="101:44">errno</name></expr></argument>,

                                 <argument pos:start="103:34" pos:end="103:69"><expr pos:start="103:34" pos:end="103:69"><literal type="string" pos:start="103:34" pos:end="103:69">"tap: open vhost char device failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="105:17" pos:end="105:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:52"><expr pos:start="111:9" pos:end="111:51"><name pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:15">options</name><operator pos:start="111:16" pos:end="111:16">.</operator><name pos:start="111:17" pos:end="111:22">opaque</name></name> <operator pos:start="111:24" pos:end="111:24">=</operator> <operator pos:start="111:26" pos:end="111:26">(</operator><name pos:start="111:27" pos:end="111:30">void</name> <operator pos:start="111:32" pos:end="111:32">*</operator><operator pos:start="111:33" pos:end="111:33">)</operator><operator pos:start="111:34" pos:end="111:34">(</operator><name pos:start="111:35" pos:end="111:43">uintptr_t</name><operator pos:start="111:44" pos:end="111:44">)</operator><name pos:start="111:45" pos:end="111:51">vhostfd</name></expr>;</expr_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:48"><expr pos:start="115:9" pos:end="115:47"><name pos:start="115:9" pos:end="115:20"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:20">vhost_net</name></name> <operator pos:start="115:22" pos:end="115:22">=</operator> <call pos:start="115:24" pos:end="115:47"><name pos:start="115:24" pos:end="115:37">vhost_net_init</name><argument_list pos:start="115:38" pos:end="115:47">(<argument pos:start="115:39" pos:end="115:46"><expr pos:start="115:39" pos:end="115:46"><operator pos:start="115:39" pos:end="115:39">&amp;</operator><name pos:start="115:40" pos:end="115:46">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="125:9"><if pos:start="117:9" pos:end="125:9">if <condition pos:start="117:12" pos:end="117:26">(<expr pos:start="117:13" pos:end="117:25"><operator pos:start="117:13" pos:end="117:13">!</operator><name pos:start="117:14" pos:end="117:25"><name pos:start="117:14" pos:end="117:14">s</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:25">vhost_net</name></name></expr>)</condition> <block pos:start="117:28" pos:end="125:9">{<block_content pos:start="119:13" pos:end="123:19">

            <expr_stmt pos:start="119:13" pos:end="121:75"><expr pos:start="119:13" pos:end="121:74"><call pos:start="119:13" pos:end="121:74"><name pos:start="119:13" pos:end="119:22">error_setg</name><argument_list pos:start="119:23" pos:end="121:74">(<argument pos:start="119:24" pos:end="119:27"><expr pos:start="119:24" pos:end="119:27"><name pos:start="119:24" pos:end="119:27">errp</name></expr></argument>,

                       <argument pos:start="121:24" pos:end="121:73"><expr pos:start="121:24" pos:end="121:73"><literal type="string" pos:start="121:24" pos:end="121:73">"vhost-net requested but could not be initialized"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="123:13" pos:end="123:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="127:7" pos:end="131:5">else if <condition pos:start="127:15" pos:end="127:53">(<expr pos:start="127:16" pos:end="127:52"><name pos:start="127:16" pos:end="127:31"><name pos:start="127:16" pos:end="127:18">tap</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:31">has_vhostfd</name></name> <operator pos:start="127:33" pos:end="127:34">||</operator> <name pos:start="127:36" pos:end="127:52"><name pos:start="127:36" pos:end="127:38">tap</name><operator pos:start="127:39" pos:end="127:40">-&gt;</operator><name pos:start="127:41" pos:end="127:52">has_vhostfds</name></name></expr>)</condition> <block pos:start="127:55" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:64">

        <expr_stmt pos:start="129:9" pos:end="129:64"><expr pos:start="129:9" pos:end="129:63"><call pos:start="129:9" pos:end="129:63"><name pos:start="129:9" pos:end="129:18">error_setg</name><argument_list pos:start="129:19" pos:end="129:63">(<argument pos:start="129:20" pos:end="129:23"><expr pos:start="129:20" pos:end="129:23"><name pos:start="129:20" pos:end="129:23">errp</name></expr></argument>, <argument pos:start="129:26" pos:end="129:62"><expr pos:start="129:26" pos:end="129:62"><literal type="string" pos:start="129:26" pos:end="129:62">"vhostfd= is not valid without vhost"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
