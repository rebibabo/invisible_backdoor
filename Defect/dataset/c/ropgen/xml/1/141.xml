<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/141.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">MPV_common_end</name><parameter_list pos:start="1:20" pos:end="1:38">(<parameter pos:start="1:21" pos:end="1:37"><decl pos:start="1:21" pos:end="1:37"><type pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:34">MpegEncContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:31">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:28"><if pos:start="9:5" pos:end="11:28">if <condition pos:start="9:8" pos:end="9:22">(<expr pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:21">motion_val</name></name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:28"><block_content pos:start="11:9" pos:end="11:28">

        <expr_stmt pos:start="11:9" pos:end="11:28"><expr pos:start="11:9" pos:end="11:27"><call pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:12">free</name><argument_list pos:start="11:13" pos:end="11:27">(<argument pos:start="11:14" pos:end="11:26"><expr pos:start="11:14" pos:end="11:26"><name pos:start="11:14" pos:end="11:26"><name pos:start="11:14" pos:end="11:14">s</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:26">motion_val</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="13:21">(<expr pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:20">h263_pred</name></name></expr>)</condition> <block pos:start="13:23" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:31">

        <expr_stmt pos:start="15:9" pos:end="15:27"><expr pos:start="15:9" pos:end="15:26"><call pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:12">free</name><argument_list pos:start="15:13" pos:end="15:26">(<argument pos:start="15:14" pos:end="15:25"><expr pos:start="15:14" pos:end="15:25"><name pos:start="15:14" pos:end="15:25"><name pos:start="15:14" pos:end="15:14">s</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:22">dc_val</name><index pos:start="15:23" pos:end="15:25">[<expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><call pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:12">free</name><argument_list pos:start="17:13" pos:end="17:26">(<argument pos:start="17:14" pos:end="17:25"><expr pos:start="17:14" pos:end="17:25"><name pos:start="17:14" pos:end="17:25"><name pos:start="17:14" pos:end="17:14">s</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:22">ac_val</name><index pos:start="17:23" pos:end="17:25">[<expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><call pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:12">free</name><argument_list pos:start="19:13" pos:end="19:28">(<argument pos:start="19:14" pos:end="19:27"><expr pos:start="19:14" pos:end="19:27"><name pos:start="19:14" pos:end="19:27"><name pos:start="19:14" pos:end="19:14">s</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:27">coded_block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:31"><expr pos:start="21:9" pos:end="21:30"><call pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:12">free</name><argument_list pos:start="21:13" pos:end="21:30">(<argument pos:start="21:14" pos:end="21:29"><expr pos:start="21:14" pos:end="21:29"><name pos:start="21:14" pos:end="21:29"><name pos:start="21:14" pos:end="21:14">s</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:29">mbintra_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="27:30"><if pos:start="25:5" pos:end="27:30">if <condition pos:start="25:8" pos:end="25:24">(<expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:23">mbskip_table</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:30"><block_content pos:start="27:9" pos:end="27:30">

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><call pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:12">free</name><argument_list pos:start="27:13" pos:end="27:29">(<argument pos:start="27:14" pos:end="27:28"><expr pos:start="27:14" pos:end="27:28"><name pos:start="27:14" pos:end="27:28"><name pos:start="27:14" pos:end="27:14">s</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:28">mbskip_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="29:5" pos:end="39:5">for<control pos:start="29:8" pos:end="29:20">(<init pos:start="29:9" pos:end="29:12"><expr pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:9">i</name><operator pos:start="29:10" pos:end="29:10">=</operator><literal type="number" pos:start="29:11" pos:end="29:11">0</literal></expr>;</init><condition pos:start="29:13" pos:end="29:16"><expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:13">i</name><operator pos:start="29:14" pos:end="29:14">&lt;</operator><literal type="number" pos:start="29:15" pos:end="29:15">3</literal></expr>;</condition><incr pos:start="29:17" pos:end="29:19"><expr pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:17">i</name><operator pos:start="29:18" pos:end="29:19">++</operator></expr></incr>)</control> <block pos:start="29:22" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:41">

        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><call pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:12">free</name><argument_list pos:start="31:13" pos:end="31:37">(<argument pos:start="31:14" pos:end="31:36"><expr pos:start="31:14" pos:end="31:36"><name pos:start="31:14" pos:end="31:36"><name pos:start="31:14" pos:end="31:14">s</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:33">last_picture_base</name><index pos:start="31:34" pos:end="31:36">[<expr pos:start="31:35" pos:end="31:35"><name pos:start="31:35" pos:end="31:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:38"><expr pos:start="33:9" pos:end="33:37"><call pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:12">free</name><argument_list pos:start="33:13" pos:end="33:37">(<argument pos:start="33:14" pos:end="33:36"><expr pos:start="33:14" pos:end="33:36"><name pos:start="33:14" pos:end="33:36"><name pos:start="33:14" pos:end="33:14">s</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:33">next_picture_base</name><index pos:start="33:34" pos:end="33:36">[<expr pos:start="33:35" pos:end="33:35"><name pos:start="33:35" pos:end="33:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:41"><if pos:start="35:9" pos:end="37:41">if <condition pos:start="35:12" pos:end="35:28">(<expr pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:27">has_b_frames</name></name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:41"><block_content pos:start="37:13" pos:end="37:41">

            <expr_stmt pos:start="37:13" pos:end="37:41"><expr pos:start="37:13" pos:end="37:40"><call pos:start="37:13" pos:end="37:40"><name pos:start="37:13" pos:end="37:16">free</name><argument_list pos:start="37:17" pos:end="37:40">(<argument pos:start="37:18" pos:end="37:39"><expr pos:start="37:18" pos:end="37:39"><name pos:start="37:18" pos:end="37:39"><name pos:start="37:18" pos:end="37:18">s</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:36">aux_picture_base</name><index pos:start="37:37" pos:end="37:39">[<expr pos:start="37:38" pos:end="37:38"><name pos:start="37:38" pos:end="37:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:26">context_initialized</name></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <literal type="number" pos:start="41:30" pos:end="41:30">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
