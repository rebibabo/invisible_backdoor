<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17843.c" pos:tabs="8"><function pos:start="1:1" pos:end="529:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">ff_h263_decode_mb</name><parameter_list pos:start="1:22" pos:end="3:43">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:36">MpegEncContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:42"><decl pos:start="3:23" pos:end="3:42"><type pos:start="3:23" pos:end="3:35"><name pos:start="3:23" pos:end="3:29">int16_t</name></type> <name pos:start="3:31" pos:end="3:42"><name pos:start="3:31" pos:end="3:35">block</name><index pos:start="3:36" pos:end="3:38">[<expr pos:start="3:37" pos:end="3:37"><literal type="number" pos:start="3:37" pos:end="3:37">6</literal></expr>]</index><index pos:start="3:39" pos:end="3:42">[<expr pos:start="3:40" pos:end="3:41"><literal type="number" pos:start="3:40" pos:end="3:41">64</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="529:1">{<block_content pos:start="7:5" pos:end="527:20">

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">cbpc</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">cbpy</name></decl>, <decl pos:start="7:21" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:21">i</name></decl>, <decl pos:start="7:24" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:26">cbp</name></decl>, <decl pos:start="7:29" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:34">pred_x</name></decl>, <decl pos:start="7:37" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:37" pos:end="7:42">pred_y</name></decl>, <decl pos:start="7:45" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:45" pos:end="7:46">mx</name></decl>, <decl pos:start="7:49" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:49" pos:end="7:50">my</name></decl>, <decl pos:start="7:53" pos:end="7:58"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:53" pos:end="7:58">dquant</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int16_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:20">mot_val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:16">xy</name><init pos:start="11:17" pos:end="11:50">= <expr pos:start="11:19" pos:end="11:50"><name pos:start="11:19" pos:end="11:25"><name pos:start="11:19" pos:end="11:19">s</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:25">mb_x</name></name> <operator pos:start="11:27" pos:end="11:27">+</operator> <name pos:start="11:29" pos:end="11:35"><name pos:start="11:29" pos:end="11:29">s</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:35">mb_y</name></name> <operator pos:start="11:37" pos:end="11:37">*</operator> <name pos:start="11:39" pos:end="11:50"><name pos:start="11:39" pos:end="11:39">s</name><operator pos:start="11:40" pos:end="11:41">-&gt;</operator><name pos:start="11:42" pos:end="11:50">mb_stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">cbpb</name> <init pos:start="13:14" pos:end="13:16">= <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr></init></decl>, <decl pos:start="13:19" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:29">pb_mv_count</name> <init pos:start="13:31" pos:end="13:33">= <expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><call pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:25">(<argument pos:start="17:12" pos:end="17:24"><expr pos:start="17:12" pos:end="17:24"><operator pos:start="17:12" pos:end="17:12">!</operator><name pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:24">h263_pred</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="459:5"><if pos:start="21:5" pos:end="205:5">if <condition pos:start="21:8" pos:end="21:42">(<expr pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:20">pict_type</name></name> <operator pos:start="21:22" pos:end="21:23">==</operator> <name pos:start="21:25" pos:end="21:41">AV_PICTURE_TYPE_P</name></expr>)</condition> <block pos:start="21:44" pos:end="205:5">{<block_content pos:start="23:9" pos:end="203:9">

        <do pos:start="23:9" pos:end="61:27">do<block pos:start="23:11" pos:end="61:9">{<block_content pos:start="25:13" pos:end="59:13">

            <if_stmt pos:start="25:13" pos:end="49:13"><if pos:start="25:13" pos:end="49:13">if <condition pos:start="25:16" pos:end="25:34">(<expr pos:start="25:17" pos:end="25:33"><call pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:25">get_bits1</name><argument_list pos:start="25:26" pos:end="25:33">(<argument pos:start="25:27" pos:end="25:32"><expr pos:start="25:27" pos:end="25:32"><operator pos:start="25:27" pos:end="25:27">&amp;</operator><name pos:start="25:28" pos:end="25:32"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:32">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:36" pos:end="49:13">{<block_content pos:start="29:17" pos:end="47:25">

                <comment type="block" pos:start="27:17" pos:end="27:29">/* skip mb */</comment>

                <expr_stmt pos:start="29:17" pos:end="29:32"><expr pos:start="29:17" pos:end="29:31"><name pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:27">mb_intra</name></name> <operator pos:start="29:29" pos:end="29:29">=</operator> <literal type="number" pos:start="29:31" pos:end="29:31">0</literal></expr>;</expr_stmt>

                <for pos:start="31:17" pos:end="33:48">for<control pos:start="31:20" pos:end="31:32">(<init pos:start="31:21" pos:end="31:24"><expr pos:start="31:21" pos:end="31:23"><name pos:start="31:21" pos:end="31:21">i</name><operator pos:start="31:22" pos:end="31:22">=</operator><literal type="number" pos:start="31:23" pos:end="31:23">0</literal></expr>;</init><condition pos:start="31:25" pos:end="31:28"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:25">i</name><operator pos:start="31:26" pos:end="31:26">&lt;</operator><literal type="number" pos:start="31:27" pos:end="31:27">6</literal></expr>;</condition><incr pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:29">i</name><operator pos:start="31:30" pos:end="31:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:21" pos:end="33:48"><block_content pos:start="33:21" pos:end="33:48">

                    <expr_stmt pos:start="33:21" pos:end="33:48"><expr pos:start="33:21" pos:end="33:47"><name pos:start="33:21" pos:end="33:42"><name pos:start="33:21" pos:end="33:21">s</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:39">block_last_index</name><index pos:start="33:40" pos:end="33:42">[<expr pos:start="33:41" pos:end="33:41"><name pos:start="33:41" pos:end="33:41">i</name></expr>]</index></name> <operator pos:start="33:44" pos:end="33:44">=</operator> <operator pos:start="33:46" pos:end="33:46">-</operator><literal type="number" pos:start="33:47" pos:end="33:47">1</literal></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="35:17" pos:end="35:43"><expr pos:start="35:17" pos:end="35:42"><name pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:25">mv_dir</name></name> <operator pos:start="35:27" pos:end="35:27">=</operator> <name pos:start="35:29" pos:end="35:42">MV_DIR_FORWARD</name></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:43"><expr pos:start="37:17" pos:end="37:42"><name pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:26">mv_type</name></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:42">MV_TYPE_16X16</name></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:91"><expr pos:start="39:17" pos:end="39:90"><name pos:start="39:17" pos:end="39:46"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:34">current_picture</name><operator pos:start="39:35" pos:end="39:35">.</operator><name pos:start="39:36" pos:end="39:42">mb_type</name><index pos:start="39:43" pos:end="39:46">[<expr pos:start="39:44" pos:end="39:45"><name pos:start="39:44" pos:end="39:45">xy</name></expr>]</index></name> <operator pos:start="39:48" pos:end="39:48">=</operator> <name pos:start="39:50" pos:end="39:61">MB_TYPE_SKIP</name> <operator pos:start="39:63" pos:end="39:63">|</operator> <name pos:start="39:65" pos:end="39:77">MB_TYPE_16x16</name> <operator pos:start="39:79" pos:end="39:79">|</operator> <name pos:start="39:81" pos:end="39:90">MB_TYPE_L0</name></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:35"><expr pos:start="41:17" pos:end="41:34"><name pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:21">mv</name><index pos:start="41:22" pos:end="41:24">[<expr pos:start="41:23" pos:end="41:23"><literal type="number" pos:start="41:23" pos:end="41:23">0</literal></expr>]</index><index pos:start="41:25" pos:end="41:27">[<expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr>]</index><index pos:start="41:28" pos:end="41:30">[<expr pos:start="41:29" pos:end="41:29"><literal type="number" pos:start="41:29" pos:end="41:29">0</literal></expr>]</index></name> <operator pos:start="41:32" pos:end="41:32">=</operator> <literal type="number" pos:start="41:34" pos:end="41:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:35"><expr pos:start="43:17" pos:end="43:34"><name pos:start="43:17" pos:end="43:30"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:21">mv</name><index pos:start="43:22" pos:end="43:24">[<expr pos:start="43:23" pos:end="43:23"><literal type="number" pos:start="43:23" pos:end="43:23">0</literal></expr>]</index><index pos:start="43:25" pos:end="43:27">[<expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">0</literal></expr>]</index><index pos:start="43:28" pos:end="43:30">[<expr pos:start="43:29" pos:end="43:29"><literal type="number" pos:start="43:29" pos:end="43:29">1</literal></expr>]</index></name> <operator pos:start="43:32" pos:end="43:32">=</operator> <literal type="number" pos:start="43:34" pos:end="43:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:60"><expr pos:start="45:17" pos:end="45:59"><name pos:start="45:17" pos:end="45:29"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:29">mb_skipped</name></name> <operator pos:start="45:31" pos:end="45:31">=</operator> <operator pos:start="45:33" pos:end="45:33">!</operator><operator pos:start="45:34" pos:end="45:34">(</operator><name pos:start="45:35" pos:end="45:41"><name pos:start="45:35" pos:end="45:35">s</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:41">obmc</name></name> <operator pos:start="45:43" pos:end="45:43">|</operator> <name pos:start="45:45" pos:end="45:58"><name pos:start="45:45" pos:end="45:45">s</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:58">loop_filter</name></name><operator pos:start="45:59" pos:end="45:59">)</operator></expr>;</expr_stmt>

                <goto pos:start="47:17" pos:end="47:25">goto <name pos:start="47:22" pos:end="47:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:92"><expr pos:start="51:13" pos:end="51:91"><name pos:start="51:13" pos:end="51:16">cbpc</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <call pos:start="51:20" pos:end="51:91"><name pos:start="51:20" pos:end="51:27">get_vlc2</name><argument_list pos:start="51:28" pos:end="51:91">(<argument pos:start="51:29" pos:end="51:34"><expr pos:start="51:29" pos:end="51:34"><operator pos:start="51:29" pos:end="51:29">&amp;</operator><name pos:start="51:30" pos:end="51:34"><name pos:start="51:30" pos:end="51:30">s</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:34">gb</name></name></expr></argument>, <argument pos:start="51:37" pos:end="51:65"><expr pos:start="51:37" pos:end="51:65"><name pos:start="51:37" pos:end="51:65"><name pos:start="51:37" pos:end="51:59">ff_h263_inter_MCBPC_vlc</name><operator pos:start="51:60" pos:end="51:60">.</operator><name pos:start="51:61" pos:end="51:65">table</name></name></expr></argument>, <argument pos:start="51:68" pos:end="51:87"><expr pos:start="51:68" pos:end="51:87"><name pos:start="51:68" pos:end="51:87">INTER_MCBPC_VLC_BITS</name></expr></argument>, <argument pos:start="51:90" pos:end="51:90"><expr pos:start="51:90" pos:end="51:90"><literal type="number" pos:start="51:90" pos:end="51:90">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="59:13"><if pos:start="53:13" pos:end="59:13">if <condition pos:start="53:16" pos:end="53:25">(<expr pos:start="53:17" pos:end="53:24"><name pos:start="53:17" pos:end="53:20">cbpc</name> <operator pos:start="53:22" pos:end="53:22">&lt;</operator> <literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr>)</condition><block pos:start="53:26" pos:end="59:13">{<block_content pos:start="55:17" pos:end="57:26">

                <expr_stmt pos:start="55:17" pos:end="55:92"><expr pos:start="55:17" pos:end="55:91"><call pos:start="55:17" pos:end="55:91"><name pos:start="55:17" pos:end="55:22">av_log</name><argument_list pos:start="55:23" pos:end="55:91">(<argument pos:start="55:24" pos:end="55:31"><expr pos:start="55:24" pos:end="55:31"><name pos:start="55:24" pos:end="55:31"><name pos:start="55:24" pos:end="55:24">s</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:31">avctx</name></name></expr></argument>, <argument pos:start="55:34" pos:end="55:45"><expr pos:start="55:34" pos:end="55:45"><name pos:start="55:34" pos:end="55:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:48" pos:end="55:72"><expr pos:start="55:48" pos:end="55:72"><literal type="string" pos:start="55:48" pos:end="55:72">"cbpc damaged at %d %d\n"</literal></expr></argument>, <argument pos:start="55:75" pos:end="55:81"><expr pos:start="55:75" pos:end="55:81"><name pos:start="55:75" pos:end="55:81"><name pos:start="55:75" pos:end="55:75">s</name><operator pos:start="55:76" pos:end="55:77">-&gt;</operator><name pos:start="55:78" pos:end="55:81">mb_x</name></name></expr></argument>, <argument pos:start="55:84" pos:end="55:90"><expr pos:start="55:84" pos:end="55:90"><name pos:start="55:84" pos:end="55:90"><name pos:start="55:84" pos:end="55:84">s</name><operator pos:start="55:85" pos:end="55:86">-&gt;</operator><name pos:start="55:87" pos:end="55:90">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="57:17" pos:end="57:26">return <expr pos:start="57:24" pos:end="57:25"><operator pos:start="57:24" pos:end="57:24">-</operator><literal type="number" pos:start="57:25" pos:end="57:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>while<condition pos:start="61:15" pos:end="61:26">(<expr pos:start="61:16" pos:end="61:25"><name pos:start="61:16" pos:end="61:19">cbpc</name> <operator pos:start="61:21" pos:end="61:22">==</operator> <literal type="number" pos:start="61:24" pos:end="61:25">20</literal></expr>)</condition>;</do>



        <expr_stmt pos:start="65:9" pos:end="65:41"><expr pos:start="65:9" pos:end="65:40"><call pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:14">dsp</name><operator pos:start="65:15" pos:end="65:15">.</operator><name pos:start="65:16" pos:end="65:27">clear_blocks</name></name><argument_list pos:start="65:28" pos:end="65:40">(<argument pos:start="65:29" pos:end="65:39"><expr pos:start="65:29" pos:end="65:39"><name pos:start="65:29" pos:end="65:39"><name pos:start="65:29" pos:end="65:29">s</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:36">block</name><index pos:start="65:37" pos:end="65:39">[<expr pos:start="65:38" pos:end="65:38"><literal type="number" pos:start="65:38" pos:end="65:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:26"><expr pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:14">dquant</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <name pos:start="69:18" pos:end="69:21">cbpc</name> <operator pos:start="69:23" pos:end="69:23">&amp;</operator> <literal type="number" pos:start="69:25" pos:end="69:25">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:40"><expr pos:start="71:9" pos:end="71:39"><name pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:19">mb_intra</name></name> <operator pos:start="71:21" pos:end="71:21">=</operator> <operator pos:start="71:23" pos:end="71:23">(</operator><operator pos:start="71:24" pos:end="71:24">(</operator><name pos:start="71:25" pos:end="71:28">cbpc</name> <operator pos:start="71:30" pos:end="71:30">&amp;</operator> <literal type="number" pos:start="71:32" pos:end="71:32">4</literal><operator pos:start="71:33" pos:end="71:33">)</operator> <operator pos:start="71:35" pos:end="71:36">!=</operator> <literal type="number" pos:start="71:38" pos:end="71:38">0</literal><operator pos:start="71:39" pos:end="71:39">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="73:36"><if pos:start="73:9" pos:end="73:36">if <condition pos:start="73:12" pos:end="73:24">(<expr pos:start="73:13" pos:end="73:23"><name pos:start="73:13" pos:end="73:23"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:23">mb_intra</name></name></expr>)</condition><block type="pseudo" pos:start="73:26" pos:end="73:36"><block_content pos:start="73:26" pos:end="73:36"> <goto pos:start="73:26" pos:end="73:36">goto <name pos:start="73:31" pos:end="73:35">intra</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="77:9" pos:end="79:68"><if pos:start="77:9" pos:end="79:68">if<condition pos:start="77:11" pos:end="77:44">(<expr pos:start="77:12" pos:end="77:43"><name pos:start="77:12" pos:end="77:22"><name pos:start="77:12" pos:end="77:12">s</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:22">pb_frame</name></name> <operator pos:start="77:24" pos:end="77:25">&amp;&amp;</operator> <call pos:start="77:27" pos:end="77:43"><name pos:start="77:27" pos:end="77:35">get_bits1</name><argument_list pos:start="77:36" pos:end="77:43">(<argument pos:start="77:37" pos:end="77:42"><expr pos:start="77:37" pos:end="77:42"><operator pos:start="77:37" pos:end="77:37">&amp;</operator><name pos:start="77:38" pos:end="77:42"><name pos:start="77:38" pos:end="77:38">s</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:42">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:68"><block_content pos:start="79:13" pos:end="79:68">

            <expr_stmt pos:start="79:13" pos:end="79:68"><expr pos:start="79:13" pos:end="79:67"><name pos:start="79:13" pos:end="79:23">pb_mv_count</name> <operator pos:start="79:25" pos:end="79:25">=</operator> <call pos:start="79:27" pos:end="79:67"><name pos:start="79:27" pos:end="79:39">h263_get_modb</name><argument_list pos:start="79:40" pos:end="79:67">(<argument pos:start="79:41" pos:end="79:46"><expr pos:start="79:41" pos:end="79:46"><operator pos:start="79:41" pos:end="79:41">&amp;</operator><name pos:start="79:42" pos:end="79:46"><name pos:start="79:42" pos:end="79:42">s</name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:46">gb</name></name></expr></argument>, <argument pos:start="79:49" pos:end="79:59"><expr pos:start="79:49" pos:end="79:59"><name pos:start="79:49" pos:end="79:59"><name pos:start="79:49" pos:end="79:49">s</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:59">pb_frame</name></name></expr></argument>, <argument pos:start="79:62" pos:end="79:66"><expr pos:start="79:62" pos:end="79:66"><operator pos:start="79:62" pos:end="79:62">&amp;</operator><name pos:start="79:63" pos:end="79:66">cbpb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:74"><expr pos:start="81:9" pos:end="81:73"><name pos:start="81:9" pos:end="81:12">cbpy</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <call pos:start="81:16" pos:end="81:73"><name pos:start="81:16" pos:end="81:23">get_vlc2</name><argument_list pos:start="81:24" pos:end="81:73">(<argument pos:start="81:25" pos:end="81:30"><expr pos:start="81:25" pos:end="81:30"><operator pos:start="81:25" pos:end="81:25">&amp;</operator><name pos:start="81:26" pos:end="81:30"><name pos:start="81:26" pos:end="81:26">s</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:30">gb</name></name></expr></argument>, <argument pos:start="81:33" pos:end="81:54"><expr pos:start="81:33" pos:end="81:54"><name pos:start="81:33" pos:end="81:54"><name pos:start="81:33" pos:end="81:48">ff_h263_cbpy_vlc</name><operator pos:start="81:49" pos:end="81:49">.</operator><name pos:start="81:50" pos:end="81:54">table</name></name></expr></argument>, <argument pos:start="81:57" pos:end="81:69"><expr pos:start="81:57" pos:end="81:69"><name pos:start="81:57" pos:end="81:69">CBPY_VLC_BITS</name></expr></argument>, <argument pos:start="81:72" pos:end="81:72"><expr pos:start="81:72" pos:end="81:72"><literal type="number" pos:start="81:72" pos:end="81:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="85:9" pos:end="87:24"><if pos:start="85:9" pos:end="87:24">if<condition pos:start="85:11" pos:end="85:48">(<expr pos:start="85:12" pos:end="85:47"><name pos:start="85:12" pos:end="85:27"><name pos:start="85:12" pos:end="85:12">s</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:27">alt_inter_vlc</name></name><operator pos:start="85:28" pos:end="85:29">==</operator><literal type="number" pos:start="85:30" pos:end="85:30">0</literal> <operator pos:start="85:32" pos:end="85:33">||</operator> <operator pos:start="85:35" pos:end="85:35">(</operator><name pos:start="85:36" pos:end="85:39">cbpc</name> <operator pos:start="85:41" pos:end="85:41">&amp;</operator> <literal type="number" pos:start="85:43" pos:end="85:43">3</literal><operator pos:start="85:44" pos:end="85:44">)</operator><operator pos:start="85:45" pos:end="85:46">!=</operator><literal type="number" pos:start="85:47" pos:end="85:47">3</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:24"><block_content pos:start="87:13" pos:end="87:24">

            <expr_stmt pos:start="87:13" pos:end="87:24"><expr pos:start="87:13" pos:end="87:23"><name pos:start="87:13" pos:end="87:16">cbpy</name> <operator pos:start="87:18" pos:end="87:19">^=</operator> <literal type="number" pos:start="87:21" pos:end="87:23">0xF</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:39"><expr pos:start="91:9" pos:end="91:38"><name pos:start="91:9" pos:end="91:11">cbp</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <operator pos:start="91:15" pos:end="91:15">(</operator><name pos:start="91:16" pos:end="91:19">cbpc</name> <operator pos:start="91:21" pos:end="91:21">&amp;</operator> <literal type="number" pos:start="91:23" pos:end="91:23">3</literal><operator pos:start="91:24" pos:end="91:24">)</operator> <operator pos:start="91:26" pos:end="91:26">|</operator> <operator pos:start="91:28" pos:end="91:28">(</operator><name pos:start="91:29" pos:end="91:32">cbpy</name> <operator pos:start="91:34" pos:end="91:35">&lt;&lt;</operator> <literal type="number" pos:start="91:37" pos:end="91:37">2</literal><operator pos:start="91:38" pos:end="91:38">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="97:9"><if pos:start="93:9" pos:end="97:9">if <condition pos:start="93:12" pos:end="93:19">(<expr pos:start="93:13" pos:end="93:18"><name pos:start="93:13" pos:end="93:18">dquant</name></expr>)</condition> <block pos:start="93:21" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:34">

            <expr_stmt pos:start="95:13" pos:end="95:34"><expr pos:start="95:13" pos:end="95:33"><call pos:start="95:13" pos:end="95:33"><name pos:start="95:13" pos:end="95:30">h263_decode_dquant</name><argument_list pos:start="95:31" pos:end="95:33">(<argument pos:start="95:32" pos:end="95:32"><expr pos:start="95:32" pos:end="95:32"><name pos:start="95:32" pos:end="95:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:35"><expr pos:start="101:9" pos:end="101:34"><name pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:17">mv_dir</name></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <name pos:start="101:21" pos:end="101:34">MV_DIR_FORWARD</name></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="203:9"><if pos:start="103:9" pos:end="153:9">if <condition pos:start="103:12" pos:end="103:29">(<expr pos:start="103:13" pos:end="103:28"><operator pos:start="103:13" pos:end="103:13">(</operator><name pos:start="103:14" pos:end="103:17">cbpc</name> <operator pos:start="103:19" pos:end="103:19">&amp;</operator> <literal type="number" pos:start="103:21" pos:end="103:22">16</literal><operator pos:start="103:23" pos:end="103:23">)</operator> <operator pos:start="103:25" pos:end="103:26">==</operator> <literal type="number" pos:start="103:28" pos:end="103:28">0</literal></expr>)</condition> <block pos:start="103:31" pos:end="153:9">{<block_content pos:start="105:13" pos:end="151:34">

            <expr_stmt pos:start="105:13" pos:end="105:72"><expr pos:start="105:13" pos:end="105:71"><name pos:start="105:13" pos:end="105:42"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:30">current_picture</name><operator pos:start="105:31" pos:end="105:31">.</operator><name pos:start="105:32" pos:end="105:38">mb_type</name><index pos:start="105:39" pos:end="105:42">[<expr pos:start="105:40" pos:end="105:41"><name pos:start="105:40" pos:end="105:41">xy</name></expr>]</index></name> <operator pos:start="105:44" pos:end="105:44">=</operator> <name pos:start="105:46" pos:end="105:58">MB_TYPE_16x16</name> <operator pos:start="105:60" pos:end="105:60">|</operator> <name pos:start="105:62" pos:end="105:71">MB_TYPE_L0</name></expr>;</expr_stmt>

            <comment type="block" pos:start="107:13" pos:end="107:41">/* 16x16 motion prediction */</comment>

            <expr_stmt pos:start="109:13" pos:end="109:39"><expr pos:start="109:13" pos:end="109:38"><name pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:22">mv_type</name></name> <operator pos:start="109:24" pos:end="109:24">=</operator> <name pos:start="109:26" pos:end="109:38">MV_TYPE_16X16</name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:59"><expr pos:start="111:13" pos:end="111:58"><call pos:start="111:13" pos:end="111:58"><name pos:start="111:13" pos:end="111:31">ff_h263_pred_motion</name><argument_list pos:start="111:32" pos:end="111:58">(<argument pos:start="111:33" pos:end="111:33"><expr pos:start="111:33" pos:end="111:33"><name pos:start="111:33" pos:end="111:33">s</name></expr></argument>, <argument pos:start="111:36" pos:end="111:36"><expr pos:start="111:36" pos:end="111:36"><literal type="number" pos:start="111:36" pos:end="111:36">0</literal></expr></argument>, <argument pos:start="111:39" pos:end="111:39"><expr pos:start="111:39" pos:end="111:39"><literal type="number" pos:start="111:39" pos:end="111:39">0</literal></expr></argument>, <argument pos:start="111:42" pos:end="111:48"><expr pos:start="111:42" pos:end="111:48"><operator pos:start="111:42" pos:end="111:42">&amp;</operator><name pos:start="111:43" pos:end="111:48">pred_x</name></expr></argument>, <argument pos:start="111:51" pos:end="111:57"><expr pos:start="111:51" pos:end="111:57"><operator pos:start="111:51" pos:end="111:51">&amp;</operator><name pos:start="111:52" pos:end="111:57">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="113:13" pos:end="119:56"><if pos:start="113:13" pos:end="115:52">if <condition pos:start="113:16" pos:end="113:27">(<expr pos:start="113:17" pos:end="113:26"><name pos:start="113:17" pos:end="113:26"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:26">umvplus</name></name></expr>)</condition><block type="pseudo" pos:start="115:16" pos:end="115:52"><block_content pos:start="115:16" pos:end="115:52">

               <expr_stmt pos:start="115:16" pos:end="115:52"><expr pos:start="115:16" pos:end="115:51"><name pos:start="115:16" pos:end="115:17">mx</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <call pos:start="115:21" pos:end="115:51"><name pos:start="115:21" pos:end="115:40">h263p_decode_umotion</name><argument_list pos:start="115:41" pos:end="115:51">(<argument pos:start="115:42" pos:end="115:42"><expr pos:start="115:42" pos:end="115:42"><name pos:start="115:42" pos:end="115:42">s</name></expr></argument>, <argument pos:start="115:45" pos:end="115:50"><expr pos:start="115:45" pos:end="115:50"><name pos:start="115:45" pos:end="115:50">pred_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="117:13" pos:end="119:56">else<block type="pseudo" pos:start="119:16" pos:end="119:56"><block_content pos:start="119:16" pos:end="119:56">

               <expr_stmt pos:start="119:16" pos:end="119:56"><expr pos:start="119:16" pos:end="119:55"><name pos:start="119:16" pos:end="119:17">mx</name> <operator pos:start="119:19" pos:end="119:19">=</operator> <call pos:start="119:21" pos:end="119:55"><name pos:start="119:21" pos:end="119:41">ff_h263_decode_motion</name><argument_list pos:start="119:42" pos:end="119:55">(<argument pos:start="119:43" pos:end="119:43"><expr pos:start="119:43" pos:end="119:43"><name pos:start="119:43" pos:end="119:43">s</name></expr></argument>, <argument pos:start="119:46" pos:end="119:51"><expr pos:start="119:46" pos:end="119:51"><name pos:start="119:46" pos:end="119:51">pred_x</name></expr></argument>, <argument pos:start="119:54" pos:end="119:54"><expr pos:start="119:54" pos:end="119:54"><literal type="number" pos:start="119:54" pos:end="119:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="123:13" pos:end="125:26"><if pos:start="123:13" pos:end="125:26">if <condition pos:start="123:16" pos:end="123:29">(<expr pos:start="123:17" pos:end="123:28"><name pos:start="123:17" pos:end="123:18">mx</name> <operator pos:start="123:20" pos:end="123:21">&gt;=</operator> <literal type="number" pos:start="123:23" pos:end="123:28">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:26"><block_content pos:start="125:17" pos:end="125:26">

                <return pos:start="125:17" pos:end="125:26">return <expr pos:start="125:24" pos:end="125:25"><operator pos:start="125:24" pos:end="125:24">-</operator><literal type="number" pos:start="125:25" pos:end="125:25">1</literal></expr>;</return></block_content></block></if></if_stmt>



            <if_stmt pos:start="129:13" pos:end="135:56"><if pos:start="129:13" pos:end="131:52">if <condition pos:start="129:16" pos:end="129:27">(<expr pos:start="129:17" pos:end="129:26"><name pos:start="129:17" pos:end="129:26"><name pos:start="129:17" pos:end="129:17">s</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:26">umvplus</name></name></expr>)</condition><block type="pseudo" pos:start="131:16" pos:end="131:52"><block_content pos:start="131:16" pos:end="131:52">

               <expr_stmt pos:start="131:16" pos:end="131:52"><expr pos:start="131:16" pos:end="131:51"><name pos:start="131:16" pos:end="131:17">my</name> <operator pos:start="131:19" pos:end="131:19">=</operator> <call pos:start="131:21" pos:end="131:51"><name pos:start="131:21" pos:end="131:40">h263p_decode_umotion</name><argument_list pos:start="131:41" pos:end="131:51">(<argument pos:start="131:42" pos:end="131:42"><expr pos:start="131:42" pos:end="131:42"><name pos:start="131:42" pos:end="131:42">s</name></expr></argument>, <argument pos:start="131:45" pos:end="131:50"><expr pos:start="131:45" pos:end="131:50"><name pos:start="131:45" pos:end="131:50">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="133:13" pos:end="135:56">else<block type="pseudo" pos:start="135:16" pos:end="135:56"><block_content pos:start="135:16" pos:end="135:56">

               <expr_stmt pos:start="135:16" pos:end="135:56"><expr pos:start="135:16" pos:end="135:55"><name pos:start="135:16" pos:end="135:17">my</name> <operator pos:start="135:19" pos:end="135:19">=</operator> <call pos:start="135:21" pos:end="135:55"><name pos:start="135:21" pos:end="135:41">ff_h263_decode_motion</name><argument_list pos:start="135:42" pos:end="135:55">(<argument pos:start="135:43" pos:end="135:43"><expr pos:start="135:43" pos:end="135:43"><name pos:start="135:43" pos:end="135:43">s</name></expr></argument>, <argument pos:start="135:46" pos:end="135:51"><expr pos:start="135:46" pos:end="135:51"><name pos:start="135:46" pos:end="135:51">pred_y</name></expr></argument>, <argument pos:start="135:54" pos:end="135:54"><expr pos:start="135:54" pos:end="135:54"><literal type="number" pos:start="135:54" pos:end="135:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="139:13" pos:end="141:26"><if pos:start="139:13" pos:end="141:26">if <condition pos:start="139:16" pos:end="139:29">(<expr pos:start="139:17" pos:end="139:28"><name pos:start="139:17" pos:end="139:18">my</name> <operator pos:start="139:20" pos:end="139:21">&gt;=</operator> <literal type="number" pos:start="139:23" pos:end="139:28">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="141:17" pos:end="141:26"><block_content pos:start="141:17" pos:end="141:26">

                <return pos:start="141:17" pos:end="141:26">return <expr pos:start="141:24" pos:end="141:25"><operator pos:start="141:24" pos:end="141:24">-</operator><literal type="number" pos:start="141:25" pos:end="141:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:32"><expr pos:start="143:13" pos:end="143:31"><name pos:start="143:13" pos:end="143:26"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:17">mv</name><index pos:start="143:18" pos:end="143:20">[<expr pos:start="143:19" pos:end="143:19"><literal type="number" pos:start="143:19" pos:end="143:19">0</literal></expr>]</index><index pos:start="143:21" pos:end="143:23">[<expr pos:start="143:22" pos:end="143:22"><literal type="number" pos:start="143:22" pos:end="143:22">0</literal></expr>]</index><index pos:start="143:24" pos:end="143:26">[<expr pos:start="143:25" pos:end="143:25"><literal type="number" pos:start="143:25" pos:end="143:25">0</literal></expr>]</index></name> <operator pos:start="143:28" pos:end="143:28">=</operator> <name pos:start="143:30" pos:end="143:31">mx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:32"><expr pos:start="145:13" pos:end="145:31"><name pos:start="145:13" pos:end="145:26"><name pos:start="145:13" pos:end="145:13">s</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:17">mv</name><index pos:start="145:18" pos:end="145:20">[<expr pos:start="145:19" pos:end="145:19"><literal type="number" pos:start="145:19" pos:end="145:19">0</literal></expr>]</index><index pos:start="145:21" pos:end="145:23">[<expr pos:start="145:22" pos:end="145:22"><literal type="number" pos:start="145:22" pos:end="145:22">0</literal></expr>]</index><index pos:start="145:24" pos:end="145:26">[<expr pos:start="145:25" pos:end="145:25"><literal type="number" pos:start="145:25" pos:end="145:25">1</literal></expr>]</index></name> <operator pos:start="145:28" pos:end="145:28">=</operator> <name pos:start="145:30" pos:end="145:31">my</name></expr>;</expr_stmt>



            <if_stmt pos:start="149:13" pos:end="151:34"><if pos:start="149:13" pos:end="151:34">if <condition pos:start="149:16" pos:end="149:71">(<expr pos:start="149:17" pos:end="149:70"><name pos:start="149:17" pos:end="149:26"><name pos:start="149:17" pos:end="149:17">s</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:26">umvplus</name></name> <operator pos:start="149:28" pos:end="149:29">&amp;&amp;</operator> <operator pos:start="149:31" pos:end="149:31">(</operator><name pos:start="149:32" pos:end="149:33">mx</name> <operator pos:start="149:35" pos:end="149:35">-</operator> <name pos:start="149:37" pos:end="149:42">pred_x</name><operator pos:start="149:43" pos:end="149:43">)</operator> <operator pos:start="149:45" pos:end="149:46">==</operator> <literal type="number" pos:start="149:48" pos:end="149:48">1</literal> <operator pos:start="149:50" pos:end="149:51">&amp;&amp;</operator> <operator pos:start="149:53" pos:end="149:53">(</operator><name pos:start="149:54" pos:end="149:55">my</name> <operator pos:start="149:57" pos:end="149:57">-</operator> <name pos:start="149:59" pos:end="149:64">pred_y</name><operator pos:start="149:65" pos:end="149:65">)</operator> <operator pos:start="149:67" pos:end="149:68">==</operator> <literal type="number" pos:start="149:70" pos:end="149:70">1</literal></expr>)</condition><block type="pseudo" pos:start="151:16" pos:end="151:34"><block_content pos:start="151:16" pos:end="151:34">

               <expr_stmt pos:start="151:16" pos:end="151:34"><expr pos:start="151:16" pos:end="151:33"><call pos:start="151:16" pos:end="151:33"><name pos:start="151:16" pos:end="151:25">skip_bits1</name><argument_list pos:start="151:26" pos:end="151:33">(<argument pos:start="151:27" pos:end="151:32"><expr pos:start="151:27" pos:end="151:32"><operator pos:start="151:27" pos:end="151:27">&amp;</operator><name pos:start="151:28" pos:end="151:32"><name pos:start="151:28" pos:end="151:28">s</name><operator pos:start="151:29" pos:end="151:30">-&gt;</operator><name pos:start="151:31" pos:end="151:32">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="151:36" pos:end="151:68">/* Bit stuffing to prevent PSC */</comment>

        </block_content>}</block></if> <else pos:start="153:11" pos:end="203:9">else <block pos:start="153:16" pos:end="203:9">{<block_content pos:start="155:13" pos:end="201:13">

            <expr_stmt pos:start="155:13" pos:end="155:70"><expr pos:start="155:13" pos:end="155:69"><name pos:start="155:13" pos:end="155:42"><name pos:start="155:13" pos:end="155:13">s</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:30">current_picture</name><operator pos:start="155:31" pos:end="155:31">.</operator><name pos:start="155:32" pos:end="155:38">mb_type</name><index pos:start="155:39" pos:end="155:42">[<expr pos:start="155:40" pos:end="155:41"><name pos:start="155:40" pos:end="155:41">xy</name></expr>]</index></name> <operator pos:start="155:44" pos:end="155:44">=</operator> <name pos:start="155:46" pos:end="155:56">MB_TYPE_8x8</name> <operator pos:start="155:58" pos:end="155:58">|</operator> <name pos:start="155:60" pos:end="155:69">MB_TYPE_L0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:37"><expr pos:start="157:13" pos:end="157:36"><name pos:start="157:13" pos:end="157:22"><name pos:start="157:13" pos:end="157:13">s</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:22">mv_type</name></name> <operator pos:start="157:24" pos:end="157:24">=</operator> <name pos:start="157:26" pos:end="157:36">MV_TYPE_8X8</name></expr>;</expr_stmt>

            <for pos:start="159:13" pos:end="201:13">for<control pos:start="159:16" pos:end="159:28">(<init pos:start="159:17" pos:end="159:20"><expr pos:start="159:17" pos:end="159:19"><name pos:start="159:17" pos:end="159:17">i</name><operator pos:start="159:18" pos:end="159:18">=</operator><literal type="number" pos:start="159:19" pos:end="159:19">0</literal></expr>;</init><condition pos:start="159:21" pos:end="159:24"><expr pos:start="159:21" pos:end="159:23"><name pos:start="159:21" pos:end="159:21">i</name><operator pos:start="159:22" pos:end="159:22">&lt;</operator><literal type="number" pos:start="159:23" pos:end="159:23">4</literal></expr>;</condition><incr pos:start="159:25" pos:end="159:27"><expr pos:start="159:25" pos:end="159:27"><name pos:start="159:25" pos:end="159:25">i</name><operator pos:start="159:26" pos:end="159:27">++</operator></expr></incr>)</control> <block pos:start="159:30" pos:end="201:13">{<block_content pos:start="161:17" pos:end="199:32">

                <expr_stmt pos:start="161:17" pos:end="161:73"><expr pos:start="161:17" pos:end="161:72"><name pos:start="161:17" pos:end="161:23">mot_val</name> <operator pos:start="161:25" pos:end="161:25">=</operator> <call pos:start="161:27" pos:end="161:72"><name pos:start="161:27" pos:end="161:45">ff_h263_pred_motion</name><argument_list pos:start="161:46" pos:end="161:72">(<argument pos:start="161:47" pos:end="161:47"><expr pos:start="161:47" pos:end="161:47"><name pos:start="161:47" pos:end="161:47">s</name></expr></argument>, <argument pos:start="161:50" pos:end="161:50"><expr pos:start="161:50" pos:end="161:50"><name pos:start="161:50" pos:end="161:50">i</name></expr></argument>, <argument pos:start="161:53" pos:end="161:53"><expr pos:start="161:53" pos:end="161:53"><literal type="number" pos:start="161:53" pos:end="161:53">0</literal></expr></argument>, <argument pos:start="161:56" pos:end="161:62"><expr pos:start="161:56" pos:end="161:62"><operator pos:start="161:56" pos:end="161:56">&amp;</operator><name pos:start="161:57" pos:end="161:62">pred_x</name></expr></argument>, <argument pos:start="161:65" pos:end="161:71"><expr pos:start="161:65" pos:end="161:71"><operator pos:start="161:65" pos:end="161:65">&amp;</operator><name pos:start="161:66" pos:end="161:71">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="163:17" pos:end="169:59"><if pos:start="163:17" pos:end="165:55">if <condition pos:start="163:20" pos:end="163:31">(<expr pos:start="163:21" pos:end="163:30"><name pos:start="163:21" pos:end="163:30"><name pos:start="163:21" pos:end="163:21">s</name><operator pos:start="163:22" pos:end="163:23">-&gt;</operator><name pos:start="163:24" pos:end="163:30">umvplus</name></name></expr>)</condition><block type="pseudo" pos:start="165:19" pos:end="165:55"><block_content pos:start="165:19" pos:end="165:55">

                  <expr_stmt pos:start="165:19" pos:end="165:55"><expr pos:start="165:19" pos:end="165:54"><name pos:start="165:19" pos:end="165:20">mx</name> <operator pos:start="165:22" pos:end="165:22">=</operator> <call pos:start="165:24" pos:end="165:54"><name pos:start="165:24" pos:end="165:43">h263p_decode_umotion</name><argument_list pos:start="165:44" pos:end="165:54">(<argument pos:start="165:45" pos:end="165:45"><expr pos:start="165:45" pos:end="165:45"><name pos:start="165:45" pos:end="165:45">s</name></expr></argument>, <argument pos:start="165:48" pos:end="165:53"><expr pos:start="165:48" pos:end="165:53"><name pos:start="165:48" pos:end="165:53">pred_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="167:17" pos:end="169:59">else<block type="pseudo" pos:start="169:19" pos:end="169:59"><block_content pos:start="169:19" pos:end="169:59">

                  <expr_stmt pos:start="169:19" pos:end="169:59"><expr pos:start="169:19" pos:end="169:58"><name pos:start="169:19" pos:end="169:20">mx</name> <operator pos:start="169:22" pos:end="169:22">=</operator> <call pos:start="169:24" pos:end="169:58"><name pos:start="169:24" pos:end="169:44">ff_h263_decode_motion</name><argument_list pos:start="169:45" pos:end="169:58">(<argument pos:start="169:46" pos:end="169:46"><expr pos:start="169:46" pos:end="169:46"><name pos:start="169:46" pos:end="169:46">s</name></expr></argument>, <argument pos:start="169:49" pos:end="169:54"><expr pos:start="169:49" pos:end="169:54"><name pos:start="169:49" pos:end="169:54">pred_x</name></expr></argument>, <argument pos:start="169:57" pos:end="169:57"><expr pos:start="169:57" pos:end="169:57"><literal type="number" pos:start="169:57" pos:end="169:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="171:17" pos:end="173:30"><if pos:start="171:17" pos:end="173:30">if <condition pos:start="171:20" pos:end="171:33">(<expr pos:start="171:21" pos:end="171:32"><name pos:start="171:21" pos:end="171:22">mx</name> <operator pos:start="171:24" pos:end="171:25">&gt;=</operator> <literal type="number" pos:start="171:27" pos:end="171:32">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="173:21" pos:end="173:30"><block_content pos:start="173:21" pos:end="173:30">

                    <return pos:start="173:21" pos:end="173:30">return <expr pos:start="173:28" pos:end="173:29"><operator pos:start="173:28" pos:end="173:28">-</operator><literal type="number" pos:start="173:29" pos:end="173:29">1</literal></expr>;</return></block_content></block></if></if_stmt>



                <if_stmt pos:start="177:17" pos:end="183:59"><if pos:start="177:17" pos:end="179:55">if <condition pos:start="177:20" pos:end="177:31">(<expr pos:start="177:21" pos:end="177:30"><name pos:start="177:21" pos:end="177:30"><name pos:start="177:21" pos:end="177:21">s</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:30">umvplus</name></name></expr>)</condition><block type="pseudo" pos:start="179:19" pos:end="179:55"><block_content pos:start="179:19" pos:end="179:55">

                  <expr_stmt pos:start="179:19" pos:end="179:55"><expr pos:start="179:19" pos:end="179:54"><name pos:start="179:19" pos:end="179:20">my</name> <operator pos:start="179:22" pos:end="179:22">=</operator> <call pos:start="179:24" pos:end="179:54"><name pos:start="179:24" pos:end="179:43">h263p_decode_umotion</name><argument_list pos:start="179:44" pos:end="179:54">(<argument pos:start="179:45" pos:end="179:45"><expr pos:start="179:45" pos:end="179:45"><name pos:start="179:45" pos:end="179:45">s</name></expr></argument>, <argument pos:start="179:48" pos:end="179:53"><expr pos:start="179:48" pos:end="179:53"><name pos:start="179:48" pos:end="179:53">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="181:17" pos:end="183:59">else<block type="pseudo" pos:start="183:19" pos:end="183:59"><block_content pos:start="183:19" pos:end="183:59">

                  <expr_stmt pos:start="183:19" pos:end="183:59"><expr pos:start="183:19" pos:end="183:58"><name pos:start="183:19" pos:end="183:20">my</name> <operator pos:start="183:22" pos:end="183:22">=</operator> <call pos:start="183:24" pos:end="183:58"><name pos:start="183:24" pos:end="183:44">ff_h263_decode_motion</name><argument_list pos:start="183:45" pos:end="183:58">(<argument pos:start="183:46" pos:end="183:46"><expr pos:start="183:46" pos:end="183:46"><name pos:start="183:46" pos:end="183:46">s</name></expr></argument>, <argument pos:start="183:49" pos:end="183:54"><expr pos:start="183:49" pos:end="183:54"><name pos:start="183:49" pos:end="183:54">pred_y</name></expr></argument>, <argument pos:start="183:57" pos:end="183:57"><expr pos:start="183:57" pos:end="183:57"><literal type="number" pos:start="183:57" pos:end="183:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="185:17" pos:end="187:30"><if pos:start="185:17" pos:end="187:30">if <condition pos:start="185:20" pos:end="185:33">(<expr pos:start="185:21" pos:end="185:32"><name pos:start="185:21" pos:end="185:22">my</name> <operator pos:start="185:24" pos:end="185:25">&gt;=</operator> <literal type="number" pos:start="185:27" pos:end="185:32">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="187:21" pos:end="187:30"><block_content pos:start="187:21" pos:end="187:30">

                    <return pos:start="187:21" pos:end="187:30">return <expr pos:start="187:28" pos:end="187:29"><operator pos:start="187:28" pos:end="187:28">-</operator><literal type="number" pos:start="187:29" pos:end="187:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:36"><expr pos:start="189:17" pos:end="189:35"><name pos:start="189:17" pos:end="189:30"><name pos:start="189:17" pos:end="189:17">s</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:21">mv</name><index pos:start="189:22" pos:end="189:24">[<expr pos:start="189:23" pos:end="189:23"><literal type="number" pos:start="189:23" pos:end="189:23">0</literal></expr>]</index><index pos:start="189:25" pos:end="189:27">[<expr pos:start="189:26" pos:end="189:26"><name pos:start="189:26" pos:end="189:26">i</name></expr>]</index><index pos:start="189:28" pos:end="189:30">[<expr pos:start="189:29" pos:end="189:29"><literal type="number" pos:start="189:29" pos:end="189:29">0</literal></expr>]</index></name> <operator pos:start="189:32" pos:end="189:32">=</operator> <name pos:start="189:34" pos:end="189:35">mx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:36"><expr pos:start="191:17" pos:end="191:35"><name pos:start="191:17" pos:end="191:30"><name pos:start="191:17" pos:end="191:17">s</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:21">mv</name><index pos:start="191:22" pos:end="191:24">[<expr pos:start="191:23" pos:end="191:23"><literal type="number" pos:start="191:23" pos:end="191:23">0</literal></expr>]</index><index pos:start="191:25" pos:end="191:27">[<expr pos:start="191:26" pos:end="191:26"><name pos:start="191:26" pos:end="191:26">i</name></expr>]</index><index pos:start="191:28" pos:end="191:30">[<expr pos:start="191:29" pos:end="191:29"><literal type="number" pos:start="191:29" pos:end="191:29">1</literal></expr>]</index></name> <operator pos:start="191:32" pos:end="191:32">=</operator> <name pos:start="191:34" pos:end="191:35">my</name></expr>;</expr_stmt>

                <if_stmt pos:start="193:17" pos:end="195:37"><if pos:start="193:17" pos:end="195:37">if <condition pos:start="193:20" pos:end="193:75">(<expr pos:start="193:21" pos:end="193:74"><name pos:start="193:21" pos:end="193:30"><name pos:start="193:21" pos:end="193:21">s</name><operator pos:start="193:22" pos:end="193:23">-&gt;</operator><name pos:start="193:24" pos:end="193:30">umvplus</name></name> <operator pos:start="193:32" pos:end="193:33">&amp;&amp;</operator> <operator pos:start="193:35" pos:end="193:35">(</operator><name pos:start="193:36" pos:end="193:37">mx</name> <operator pos:start="193:39" pos:end="193:39">-</operator> <name pos:start="193:41" pos:end="193:46">pred_x</name><operator pos:start="193:47" pos:end="193:47">)</operator> <operator pos:start="193:49" pos:end="193:50">==</operator> <literal type="number" pos:start="193:52" pos:end="193:52">1</literal> <operator pos:start="193:54" pos:end="193:55">&amp;&amp;</operator> <operator pos:start="193:57" pos:end="193:57">(</operator><name pos:start="193:58" pos:end="193:59">my</name> <operator pos:start="193:61" pos:end="193:61">-</operator> <name pos:start="193:63" pos:end="193:68">pred_y</name><operator pos:start="193:69" pos:end="193:69">)</operator> <operator pos:start="193:71" pos:end="193:72">==</operator> <literal type="number" pos:start="193:74" pos:end="193:74">1</literal></expr>)</condition><block type="pseudo" pos:start="195:19" pos:end="195:37"><block_content pos:start="195:19" pos:end="195:37">

                  <expr_stmt pos:start="195:19" pos:end="195:37"><expr pos:start="195:19" pos:end="195:36"><call pos:start="195:19" pos:end="195:36"><name pos:start="195:19" pos:end="195:28">skip_bits1</name><argument_list pos:start="195:29" pos:end="195:36">(<argument pos:start="195:30" pos:end="195:35"><expr pos:start="195:30" pos:end="195:35"><operator pos:start="195:30" pos:end="195:30">&amp;</operator><name pos:start="195:31" pos:end="195:35"><name pos:start="195:31" pos:end="195:31">s</name><operator pos:start="195:32" pos:end="195:33">-&gt;</operator><name pos:start="195:34" pos:end="195:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="195:39" pos:end="195:71">/* Bit stuffing to prevent PSC */</comment>

                <expr_stmt pos:start="197:17" pos:end="197:32"><expr pos:start="197:17" pos:end="197:31"><name pos:start="197:17" pos:end="197:26"><name pos:start="197:17" pos:end="197:23">mot_val</name><index pos:start="197:24" pos:end="197:26">[<expr pos:start="197:25" pos:end="197:25"><literal type="number" pos:start="197:25" pos:end="197:25">0</literal></expr>]</index></name> <operator pos:start="197:28" pos:end="197:28">=</operator> <name pos:start="197:30" pos:end="197:31">mx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:32"><expr pos:start="199:17" pos:end="199:31"><name pos:start="199:17" pos:end="199:26"><name pos:start="199:17" pos:end="199:23">mot_val</name><index pos:start="199:24" pos:end="199:26">[<expr pos:start="199:25" pos:end="199:25"><literal type="number" pos:start="199:25" pos:end="199:25">1</literal></expr>]</index></name> <operator pos:start="199:28" pos:end="199:28">=</operator> <name pos:start="199:30" pos:end="199:31">my</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="205:7" pos:end="383:5">else if<condition pos:start="205:14" pos:end="205:46">(<expr pos:start="205:15" pos:end="205:45"><name pos:start="205:15" pos:end="205:26"><name pos:start="205:15" pos:end="205:15">s</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:26">pict_type</name></name><operator pos:start="205:27" pos:end="205:28">==</operator><name pos:start="205:29" pos:end="205:45">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="205:48" pos:end="383:5">{<block_content pos:start="207:9" pos:end="381:49">

        <decl_stmt pos:start="207:9" pos:end="207:20"><decl pos:start="207:9" pos:end="207:19"><type pos:start="207:9" pos:end="207:11"><name pos:start="207:9" pos:end="207:11">int</name></type> <name pos:start="207:13" pos:end="207:19">mb_type</name></decl>;</decl_stmt>

        <decl_stmt pos:start="209:9" pos:end="209:39"><decl pos:start="209:9" pos:end="209:38"><type pos:start="209:9" pos:end="209:17"><specifier pos:start="209:9" pos:end="209:13">const</specifier> <name pos:start="209:15" pos:end="209:17">int</name></type> <name pos:start="209:19" pos:end="209:24">stride</name><init pos:start="209:25" pos:end="209:38">= <expr pos:start="209:27" pos:end="209:38"><name pos:start="209:27" pos:end="209:38"><name pos:start="209:27" pos:end="209:27">s</name><operator pos:start="209:28" pos:end="209:29">-&gt;</operator><name pos:start="209:30" pos:end="209:38">b8_stride</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="211:9" pos:end="211:95"><decl pos:start="211:9" pos:end="211:94"><type pos:start="211:9" pos:end="211:17"><name pos:start="211:9" pos:end="211:15">int16_t</name> <modifier pos:start="211:17" pos:end="211:17">*</modifier></type><name pos:start="211:18" pos:end="211:25">mot_val0</name> <init pos:start="211:27" pos:end="211:94">= <expr pos:start="211:29" pos:end="211:94"><name pos:start="211:29" pos:end="211:94"><name pos:start="211:29" pos:end="211:29">s</name><operator pos:start="211:30" pos:end="211:31">-&gt;</operator><name pos:start="211:32" pos:end="211:46">current_picture</name><operator pos:start="211:47" pos:end="211:47">.</operator><name pos:start="211:48" pos:end="211:57">motion_val</name><index pos:start="211:58" pos:end="211:60">[<expr pos:start="211:59" pos:end="211:59"><literal type="number" pos:start="211:59" pos:end="211:59">0</literal></expr>]</index><index pos:start="211:61" pos:end="211:94">[<expr pos:start="211:62" pos:end="211:93"><literal type="number" pos:start="211:62" pos:end="211:62">2</literal> <operator pos:start="211:64" pos:end="211:64">*</operator> <operator pos:start="211:66" pos:end="211:66">(</operator><name pos:start="211:67" pos:end="211:73"><name pos:start="211:67" pos:end="211:67">s</name><operator pos:start="211:68" pos:end="211:69">-&gt;</operator><name pos:start="211:70" pos:end="211:73">mb_x</name></name> <operator pos:start="211:75" pos:end="211:75">+</operator> <name pos:start="211:77" pos:end="211:83"><name pos:start="211:77" pos:end="211:77">s</name><operator pos:start="211:78" pos:end="211:79">-&gt;</operator><name pos:start="211:80" pos:end="211:83">mb_y</name></name> <operator pos:start="211:85" pos:end="211:85">*</operator> <name pos:start="211:87" pos:end="211:92">stride</name><operator pos:start="211:93" pos:end="211:93">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="213:9" pos:end="213:95"><decl pos:start="213:9" pos:end="213:94"><type pos:start="213:9" pos:end="213:17"><name pos:start="213:9" pos:end="213:15">int16_t</name> <modifier pos:start="213:17" pos:end="213:17">*</modifier></type><name pos:start="213:18" pos:end="213:25">mot_val1</name> <init pos:start="213:27" pos:end="213:94">= <expr pos:start="213:29" pos:end="213:94"><name pos:start="213:29" pos:end="213:94"><name pos:start="213:29" pos:end="213:29">s</name><operator pos:start="213:30" pos:end="213:31">-&gt;</operator><name pos:start="213:32" pos:end="213:46">current_picture</name><operator pos:start="213:47" pos:end="213:47">.</operator><name pos:start="213:48" pos:end="213:57">motion_val</name><index pos:start="213:58" pos:end="213:60">[<expr pos:start="213:59" pos:end="213:59"><literal type="number" pos:start="213:59" pos:end="213:59">1</literal></expr>]</index><index pos:start="213:61" pos:end="213:94">[<expr pos:start="213:62" pos:end="213:93"><literal type="number" pos:start="213:62" pos:end="213:62">2</literal> <operator pos:start="213:64" pos:end="213:64">*</operator> <operator pos:start="213:66" pos:end="213:66">(</operator><name pos:start="213:67" pos:end="213:73"><name pos:start="213:67" pos:end="213:67">s</name><operator pos:start="213:68" pos:end="213:69">-&gt;</operator><name pos:start="213:70" pos:end="213:73">mb_x</name></name> <operator pos:start="213:75" pos:end="213:75">+</operator> <name pos:start="213:77" pos:end="213:83"><name pos:start="213:77" pos:end="213:77">s</name><operator pos:start="213:78" pos:end="213:79">-&gt;</operator><name pos:start="213:80" pos:end="213:83">mb_y</name></name> <operator pos:start="213:85" pos:end="213:85">*</operator> <name pos:start="213:87" pos:end="213:92">stride</name><operator pos:start="213:93" pos:end="213:93">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

<comment type="line" pos:start="215:1" pos:end="215:64">//        const int mv_xy= s-&gt;mb_x + 1 + s-&gt;mb_y * s-&gt;mb_stride;</comment>



        <comment type="line" pos:start="219:9" pos:end="219:20">//FIXME ugly</comment>

        <expr_stmt pos:start="221:9" pos:end="227:94"><expr pos:start="221:9" pos:end="227:93"><name pos:start="221:9" pos:end="221:26"><name pos:start="221:9" pos:end="221:16">mot_val0</name><index pos:start="221:17" pos:end="221:26">[<expr pos:start="221:18" pos:end="221:18"><literal type="number" pos:start="221:18" pos:end="221:18">0</literal></expr>       ]</index></name><operator pos:start="221:27" pos:end="221:27">=</operator> <name pos:start="221:29" pos:end="221:46"><name pos:start="221:29" pos:end="221:36">mot_val0</name><index pos:start="221:37" pos:end="221:46">[<expr pos:start="221:38" pos:end="221:38"><literal type="number" pos:start="221:38" pos:end="221:38">2</literal></expr>       ]</index></name><operator pos:start="221:47" pos:end="221:47">=</operator> <name pos:start="221:49" pos:end="221:68"><name pos:start="221:49" pos:end="221:56">mot_val0</name><index pos:start="221:57" pos:end="221:68">[<expr pos:start="221:58" pos:end="221:67"><literal type="number" pos:start="221:58" pos:end="221:59">0</literal><operator pos:start="221:59" pos:end="221:59">+</operator><literal type="number" pos:start="221:60" pos:end="221:60">2</literal><operator pos:start="221:61" pos:end="221:61">*</operator><name pos:start="221:62" pos:end="221:67">stride</name></expr>]</index></name><operator pos:start="221:69" pos:end="221:69">=</operator> <name pos:start="221:71" pos:end="221:90"><name pos:start="221:71" pos:end="221:78">mot_val0</name><index pos:start="221:79" pos:end="221:90">[<expr pos:start="221:80" pos:end="221:89"><literal type="number" pos:start="221:80" pos:end="221:81">2</literal><operator pos:start="221:81" pos:end="221:81">+</operator><literal type="number" pos:start="221:82" pos:end="221:82">2</literal><operator pos:start="221:83" pos:end="221:83">*</operator><name pos:start="221:84" pos:end="221:89">stride</name></expr>]</index></name><operator pos:start="221:91" pos:end="221:91">=</operator>

        <name pos:start="223:9" pos:end="223:26"><name pos:start="223:9" pos:end="223:16">mot_val0</name><index pos:start="223:17" pos:end="223:26">[<expr pos:start="223:18" pos:end="223:18"><literal type="number" pos:start="223:18" pos:end="223:18">1</literal></expr>       ]</index></name><operator pos:start="223:27" pos:end="223:27">=</operator> <name pos:start="223:29" pos:end="223:46"><name pos:start="223:29" pos:end="223:36">mot_val0</name><index pos:start="223:37" pos:end="223:46">[<expr pos:start="223:38" pos:end="223:38"><literal type="number" pos:start="223:38" pos:end="223:38">3</literal></expr>       ]</index></name><operator pos:start="223:47" pos:end="223:47">=</operator> <name pos:start="223:49" pos:end="223:68"><name pos:start="223:49" pos:end="223:56">mot_val0</name><index pos:start="223:57" pos:end="223:68">[<expr pos:start="223:58" pos:end="223:67"><literal type="number" pos:start="223:58" pos:end="223:59">1</literal><operator pos:start="223:59" pos:end="223:59">+</operator><literal type="number" pos:start="223:60" pos:end="223:60">2</literal><operator pos:start="223:61" pos:end="223:61">*</operator><name pos:start="223:62" pos:end="223:67">stride</name></expr>]</index></name><operator pos:start="223:69" pos:end="223:69">=</operator> <name pos:start="223:71" pos:end="223:90"><name pos:start="223:71" pos:end="223:78">mot_val0</name><index pos:start="223:79" pos:end="223:90">[<expr pos:start="223:80" pos:end="223:89"><literal type="number" pos:start="223:80" pos:end="223:81">3</literal><operator pos:start="223:81" pos:end="223:81">+</operator><literal type="number" pos:start="223:82" pos:end="223:82">2</literal><operator pos:start="223:83" pos:end="223:83">*</operator><name pos:start="223:84" pos:end="223:89">stride</name></expr>]</index></name><operator pos:start="223:91" pos:end="223:91">=</operator>

        <name pos:start="225:9" pos:end="225:26"><name pos:start="225:9" pos:end="225:16">mot_val1</name><index pos:start="225:17" pos:end="225:26">[<expr pos:start="225:18" pos:end="225:18"><literal type="number" pos:start="225:18" pos:end="225:18">0</literal></expr>       ]</index></name><operator pos:start="225:27" pos:end="225:27">=</operator> <name pos:start="225:29" pos:end="225:46"><name pos:start="225:29" pos:end="225:36">mot_val1</name><index pos:start="225:37" pos:end="225:46">[<expr pos:start="225:38" pos:end="225:38"><literal type="number" pos:start="225:38" pos:end="225:38">2</literal></expr>       ]</index></name><operator pos:start="225:47" pos:end="225:47">=</operator> <name pos:start="225:49" pos:end="225:68"><name pos:start="225:49" pos:end="225:56">mot_val1</name><index pos:start="225:57" pos:end="225:68">[<expr pos:start="225:58" pos:end="225:67"><literal type="number" pos:start="225:58" pos:end="225:59">0</literal><operator pos:start="225:59" pos:end="225:59">+</operator><literal type="number" pos:start="225:60" pos:end="225:60">2</literal><operator pos:start="225:61" pos:end="225:61">*</operator><name pos:start="225:62" pos:end="225:67">stride</name></expr>]</index></name><operator pos:start="225:69" pos:end="225:69">=</operator> <name pos:start="225:71" pos:end="225:90"><name pos:start="225:71" pos:end="225:78">mot_val1</name><index pos:start="225:79" pos:end="225:90">[<expr pos:start="225:80" pos:end="225:89"><literal type="number" pos:start="225:80" pos:end="225:81">2</literal><operator pos:start="225:81" pos:end="225:81">+</operator><literal type="number" pos:start="225:82" pos:end="225:82">2</literal><operator pos:start="225:83" pos:end="225:83">*</operator><name pos:start="225:84" pos:end="225:89">stride</name></expr>]</index></name><operator pos:start="225:91" pos:end="225:91">=</operator>

        <name pos:start="227:9" pos:end="227:26"><name pos:start="227:9" pos:end="227:16">mot_val1</name><index pos:start="227:17" pos:end="227:26">[<expr pos:start="227:18" pos:end="227:18"><literal type="number" pos:start="227:18" pos:end="227:18">1</literal></expr>       ]</index></name><operator pos:start="227:27" pos:end="227:27">=</operator> <name pos:start="227:29" pos:end="227:46"><name pos:start="227:29" pos:end="227:36">mot_val1</name><index pos:start="227:37" pos:end="227:46">[<expr pos:start="227:38" pos:end="227:38"><literal type="number" pos:start="227:38" pos:end="227:38">3</literal></expr>       ]</index></name><operator pos:start="227:47" pos:end="227:47">=</operator> <name pos:start="227:49" pos:end="227:68"><name pos:start="227:49" pos:end="227:56">mot_val1</name><index pos:start="227:57" pos:end="227:68">[<expr pos:start="227:58" pos:end="227:67"><literal type="number" pos:start="227:58" pos:end="227:59">1</literal><operator pos:start="227:59" pos:end="227:59">+</operator><literal type="number" pos:start="227:60" pos:end="227:60">2</literal><operator pos:start="227:61" pos:end="227:61">*</operator><name pos:start="227:62" pos:end="227:67">stride</name></expr>]</index></name><operator pos:start="227:69" pos:end="227:69">=</operator> <name pos:start="227:71" pos:end="227:90"><name pos:start="227:71" pos:end="227:78">mot_val1</name><index pos:start="227:79" pos:end="227:90">[<expr pos:start="227:80" pos:end="227:89"><literal type="number" pos:start="227:80" pos:end="227:81">3</literal><operator pos:start="227:81" pos:end="227:81">+</operator><literal type="number" pos:start="227:82" pos:end="227:82">2</literal><operator pos:start="227:83" pos:end="227:83">*</operator><name pos:start="227:84" pos:end="227:89">stride</name></expr>]</index></name><operator pos:start="227:91" pos:end="227:91">=</operator> <literal type="number" pos:start="227:93" pos:end="227:93">0</literal></expr>;</expr_stmt>



        <do pos:start="231:9" pos:end="247:25">do<block pos:start="231:11" pos:end="247:9">{<block_content pos:start="233:13" pos:end="245:51">

            <expr_stmt pos:start="233:13" pos:end="233:90"><expr pos:start="233:13" pos:end="233:89"><name pos:start="233:13" pos:end="233:19">mb_type</name><operator pos:start="233:20" pos:end="233:20">=</operator> <call pos:start="233:22" pos:end="233:89"><name pos:start="233:22" pos:end="233:29">get_vlc2</name><argument_list pos:start="233:30" pos:end="233:89">(<argument pos:start="233:31" pos:end="233:36"><expr pos:start="233:31" pos:end="233:36"><operator pos:start="233:31" pos:end="233:31">&amp;</operator><name pos:start="233:32" pos:end="233:36"><name pos:start="233:32" pos:end="233:32">s</name><operator pos:start="233:33" pos:end="233:34">-&gt;</operator><name pos:start="233:35" pos:end="233:36">gb</name></name></expr></argument>, <argument pos:start="233:39" pos:end="233:61"><expr pos:start="233:39" pos:end="233:61"><name pos:start="233:39" pos:end="233:61"><name pos:start="233:39" pos:end="233:55">h263_mbtype_b_vlc</name><operator pos:start="233:56" pos:end="233:56">.</operator><name pos:start="233:57" pos:end="233:61">table</name></name></expr></argument>, <argument pos:start="233:64" pos:end="233:85"><expr pos:start="233:64" pos:end="233:85"><name pos:start="233:64" pos:end="233:85">H263_MBTYPE_B_VLC_BITS</name></expr></argument>, <argument pos:start="233:88" pos:end="233:88"><expr pos:start="233:88" pos:end="233:88"><literal type="number" pos:start="233:88" pos:end="233:88">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="235:13" pos:end="241:13"><if pos:start="235:13" pos:end="241:13">if <condition pos:start="235:16" pos:end="235:28">(<expr pos:start="235:17" pos:end="235:27"><name pos:start="235:17" pos:end="235:23">mb_type</name> <operator pos:start="235:25" pos:end="235:25">&lt;</operator> <literal type="number" pos:start="235:27" pos:end="235:27">0</literal></expr>)</condition><block pos:start="235:29" pos:end="241:13">{<block_content pos:start="237:17" pos:end="239:26">

                <expr_stmt pos:start="237:17" pos:end="237:97"><expr pos:start="237:17" pos:end="237:96"><call pos:start="237:17" pos:end="237:96"><name pos:start="237:17" pos:end="237:22">av_log</name><argument_list pos:start="237:23" pos:end="237:96">(<argument pos:start="237:24" pos:end="237:31"><expr pos:start="237:24" pos:end="237:31"><name pos:start="237:24" pos:end="237:31"><name pos:start="237:24" pos:end="237:24">s</name><operator pos:start="237:25" pos:end="237:26">-&gt;</operator><name pos:start="237:27" pos:end="237:31">avctx</name></name></expr></argument>, <argument pos:start="237:34" pos:end="237:45"><expr pos:start="237:34" pos:end="237:45"><name pos:start="237:34" pos:end="237:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="237:48" pos:end="237:77"><expr pos:start="237:48" pos:end="237:77"><literal type="string" pos:start="237:48" pos:end="237:77">"b mb_type damaged at %d %d\n"</literal></expr></argument>, <argument pos:start="237:80" pos:end="237:86"><expr pos:start="237:80" pos:end="237:86"><name pos:start="237:80" pos:end="237:86"><name pos:start="237:80" pos:end="237:80">s</name><operator pos:start="237:81" pos:end="237:82">-&gt;</operator><name pos:start="237:83" pos:end="237:86">mb_x</name></name></expr></argument>, <argument pos:start="237:89" pos:end="237:95"><expr pos:start="237:89" pos:end="237:95"><name pos:start="237:89" pos:end="237:95"><name pos:start="237:89" pos:end="237:89">s</name><operator pos:start="237:90" pos:end="237:91">-&gt;</operator><name pos:start="237:92" pos:end="237:95">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="239:17" pos:end="239:26">return <expr pos:start="239:24" pos:end="239:25"><operator pos:start="239:24" pos:end="239:24">-</operator><literal type="number" pos:start="239:25" pos:end="239:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="245:13" pos:end="245:51"><expr pos:start="245:13" pos:end="245:50"><name pos:start="245:13" pos:end="245:19">mb_type</name><operator pos:start="245:20" pos:end="245:20">=</operator> <name pos:start="245:22" pos:end="245:50"><name pos:start="245:22" pos:end="245:39">h263_mb_type_b_map</name><index pos:start="245:40" pos:end="245:50">[ <expr pos:start="245:42" pos:end="245:48"><name pos:start="245:42" pos:end="245:48">mb_type</name></expr> ]</index></name></expr>;</expr_stmt>

        </block_content>}</block>while<condition pos:start="247:15" pos:end="247:24">(<expr pos:start="247:16" pos:end="247:23"><operator pos:start="247:16" pos:end="247:16">!</operator><name pos:start="247:17" pos:end="247:23">mb_type</name></expr>)</condition>;</do>



        <expr_stmt pos:start="251:9" pos:end="251:40"><expr pos:start="251:9" pos:end="251:39"><name pos:start="251:9" pos:end="251:19"><name pos:start="251:9" pos:end="251:9">s</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:19">mb_intra</name></name> <operator pos:start="251:21" pos:end="251:21">=</operator> <call pos:start="251:23" pos:end="251:39"><name pos:start="251:23" pos:end="251:30">IS_INTRA</name><argument_list pos:start="251:31" pos:end="251:39">(<argument pos:start="251:32" pos:end="251:38"><expr pos:start="251:32" pos:end="251:38"><name pos:start="251:32" pos:end="251:38">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="253:9" pos:end="293:18"><if pos:start="253:9" pos:end="291:9">if<condition pos:start="253:11" pos:end="253:28">(<expr pos:start="253:12" pos:end="253:27"><call pos:start="253:12" pos:end="253:27"><name pos:start="253:12" pos:end="253:18">HAS_CBP</name><argument_list pos:start="253:19" pos:end="253:27">(<argument pos:start="253:20" pos:end="253:26"><expr pos:start="253:20" pos:end="253:26"><name pos:start="253:20" pos:end="253:26">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="253:29" pos:end="291:9">{<block_content pos:start="255:13" pos:end="289:43">

            <expr_stmt pos:start="255:13" pos:end="255:45"><expr pos:start="255:13" pos:end="255:44"><call pos:start="255:13" pos:end="255:44"><name pos:start="255:13" pos:end="255:31"><name pos:start="255:13" pos:end="255:13">s</name><operator pos:start="255:14" pos:end="255:15">-&gt;</operator><name pos:start="255:16" pos:end="255:18">dsp</name><operator pos:start="255:19" pos:end="255:19">.</operator><name pos:start="255:20" pos:end="255:31">clear_blocks</name></name><argument_list pos:start="255:32" pos:end="255:44">(<argument pos:start="255:33" pos:end="255:43"><expr pos:start="255:33" pos:end="255:43"><name pos:start="255:33" pos:end="255:43"><name pos:start="255:33" pos:end="255:33">s</name><operator pos:start="255:34" pos:end="255:35">-&gt;</operator><name pos:start="255:36" pos:end="255:40">block</name><index pos:start="255:41" pos:end="255:43">[<expr pos:start="255:42" pos:end="255:42"><literal type="number" pos:start="255:42" pos:end="255:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:74"><expr pos:start="257:13" pos:end="257:73"><name pos:start="257:13" pos:end="257:16">cbpc</name> <operator pos:start="257:18" pos:end="257:18">=</operator> <call pos:start="257:20" pos:end="257:73"><name pos:start="257:20" pos:end="257:27">get_vlc2</name><argument_list pos:start="257:28" pos:end="257:73">(<argument pos:start="257:29" pos:end="257:34"><expr pos:start="257:29" pos:end="257:34"><operator pos:start="257:29" pos:end="257:29">&amp;</operator><name pos:start="257:30" pos:end="257:34"><name pos:start="257:30" pos:end="257:30">s</name><operator pos:start="257:31" pos:end="257:32">-&gt;</operator><name pos:start="257:33" pos:end="257:34">gb</name></name></expr></argument>, <argument pos:start="257:37" pos:end="257:52"><expr pos:start="257:37" pos:end="257:52"><name pos:start="257:37" pos:end="257:52"><name pos:start="257:37" pos:end="257:46">cbpc_b_vlc</name><operator pos:start="257:47" pos:end="257:47">.</operator><name pos:start="257:48" pos:end="257:52">table</name></name></expr></argument>, <argument pos:start="257:55" pos:end="257:69"><expr pos:start="257:55" pos:end="257:69"><name pos:start="257:55" pos:end="257:69">CBPC_B_VLC_BITS</name></expr></argument>, <argument pos:start="257:72" pos:end="257:72"><expr pos:start="257:72" pos:end="257:72"><literal type="number" pos:start="257:72" pos:end="257:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="259:13" pos:end="265:13"><if pos:start="259:13" pos:end="265:13">if<condition pos:start="259:15" pos:end="259:27">(<expr pos:start="259:16" pos:end="259:26"><name pos:start="259:16" pos:end="259:26"><name pos:start="259:16" pos:end="259:16">s</name><operator pos:start="259:17" pos:end="259:18">-&gt;</operator><name pos:start="259:19" pos:end="259:26">mb_intra</name></name></expr>)</condition><block pos:start="259:28" pos:end="265:13">{<block_content pos:start="261:17" pos:end="263:27">

                <expr_stmt pos:start="261:17" pos:end="261:43"><expr pos:start="261:17" pos:end="261:42"><name pos:start="261:17" pos:end="261:22">dquant</name> <operator pos:start="261:24" pos:end="261:24">=</operator> <call pos:start="261:26" pos:end="261:42"><name pos:start="261:26" pos:end="261:33">IS_QUANT</name><argument_list pos:start="261:34" pos:end="261:42">(<argument pos:start="261:35" pos:end="261:41"><expr pos:start="261:35" pos:end="261:41"><name pos:start="261:35" pos:end="261:41">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="263:17" pos:end="263:27">goto <name pos:start="263:22" pos:end="263:26">intra</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="269:13" pos:end="269:78"><expr pos:start="269:13" pos:end="269:77"><name pos:start="269:13" pos:end="269:16">cbpy</name> <operator pos:start="269:18" pos:end="269:18">=</operator> <call pos:start="269:20" pos:end="269:77"><name pos:start="269:20" pos:end="269:27">get_vlc2</name><argument_list pos:start="269:28" pos:end="269:77">(<argument pos:start="269:29" pos:end="269:34"><expr pos:start="269:29" pos:end="269:34"><operator pos:start="269:29" pos:end="269:29">&amp;</operator><name pos:start="269:30" pos:end="269:34"><name pos:start="269:30" pos:end="269:30">s</name><operator pos:start="269:31" pos:end="269:32">-&gt;</operator><name pos:start="269:33" pos:end="269:34">gb</name></name></expr></argument>, <argument pos:start="269:37" pos:end="269:58"><expr pos:start="269:37" pos:end="269:58"><name pos:start="269:37" pos:end="269:58"><name pos:start="269:37" pos:end="269:52">ff_h263_cbpy_vlc</name><operator pos:start="269:53" pos:end="269:53">.</operator><name pos:start="269:54" pos:end="269:58">table</name></name></expr></argument>, <argument pos:start="269:61" pos:end="269:73"><expr pos:start="269:61" pos:end="269:73"><name pos:start="269:61" pos:end="269:73">CBPY_VLC_BITS</name></expr></argument>, <argument pos:start="269:76" pos:end="269:76"><expr pos:start="269:76" pos:end="269:76"><literal type="number" pos:start="269:76" pos:end="269:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="273:13" pos:end="279:13"><if pos:start="273:13" pos:end="279:13">if <condition pos:start="273:16" pos:end="273:25">(<expr pos:start="273:17" pos:end="273:24"><name pos:start="273:17" pos:end="273:20">cbpy</name> <operator pos:start="273:22" pos:end="273:22">&lt;</operator> <literal type="number" pos:start="273:24" pos:end="273:24">0</literal></expr>)</condition><block pos:start="273:26" pos:end="279:13">{<block_content pos:start="275:17" pos:end="277:26">

                <expr_stmt pos:start="275:17" pos:end="275:94"><expr pos:start="275:17" pos:end="275:93"><call pos:start="275:17" pos:end="275:93"><name pos:start="275:17" pos:end="275:22">av_log</name><argument_list pos:start="275:23" pos:end="275:93">(<argument pos:start="275:24" pos:end="275:31"><expr pos:start="275:24" pos:end="275:31"><name pos:start="275:24" pos:end="275:31"><name pos:start="275:24" pos:end="275:24">s</name><operator pos:start="275:25" pos:end="275:26">-&gt;</operator><name pos:start="275:27" pos:end="275:31">avctx</name></name></expr></argument>, <argument pos:start="275:34" pos:end="275:45"><expr pos:start="275:34" pos:end="275:45"><name pos:start="275:34" pos:end="275:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="275:48" pos:end="275:74"><expr pos:start="275:48" pos:end="275:74"><literal type="string" pos:start="275:48" pos:end="275:74">"b cbpy damaged at %d %d\n"</literal></expr></argument>, <argument pos:start="275:77" pos:end="275:83"><expr pos:start="275:77" pos:end="275:83"><name pos:start="275:77" pos:end="275:83"><name pos:start="275:77" pos:end="275:77">s</name><operator pos:start="275:78" pos:end="275:79">-&gt;</operator><name pos:start="275:80" pos:end="275:83">mb_x</name></name></expr></argument>, <argument pos:start="275:86" pos:end="275:92"><expr pos:start="275:86" pos:end="275:92"><name pos:start="275:86" pos:end="275:92"><name pos:start="275:86" pos:end="275:86">s</name><operator pos:start="275:87" pos:end="275:88">-&gt;</operator><name pos:start="275:89" pos:end="275:92">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="277:17" pos:end="277:26">return <expr pos:start="277:24" pos:end="277:25"><operator pos:start="277:24" pos:end="277:24">-</operator><literal type="number" pos:start="277:25" pos:end="277:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="283:13" pos:end="285:28"><if pos:start="283:13" pos:end="285:28">if<condition pos:start="283:15" pos:end="283:52">(<expr pos:start="283:16" pos:end="283:51"><name pos:start="283:16" pos:end="283:31"><name pos:start="283:16" pos:end="283:16">s</name><operator pos:start="283:17" pos:end="283:18">-&gt;</operator><name pos:start="283:19" pos:end="283:31">alt_inter_vlc</name></name><operator pos:start="283:32" pos:end="283:33">==</operator><literal type="number" pos:start="283:34" pos:end="283:34">0</literal> <operator pos:start="283:36" pos:end="283:37">||</operator> <operator pos:start="283:39" pos:end="283:39">(</operator><name pos:start="283:40" pos:end="283:43">cbpc</name> <operator pos:start="283:45" pos:end="283:45">&amp;</operator> <literal type="number" pos:start="283:47" pos:end="283:47">3</literal><operator pos:start="283:48" pos:end="283:48">)</operator><operator pos:start="283:49" pos:end="283:50">!=</operator><literal type="number" pos:start="283:51" pos:end="283:51">3</literal></expr>)</condition><block type="pseudo" pos:start="285:17" pos:end="285:28"><block_content pos:start="285:17" pos:end="285:28">

                <expr_stmt pos:start="285:17" pos:end="285:28"><expr pos:start="285:17" pos:end="285:27"><name pos:start="285:17" pos:end="285:20">cbpy</name> <operator pos:start="285:22" pos:end="285:23">^=</operator> <literal type="number" pos:start="285:25" pos:end="285:27">0xF</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="289:13" pos:end="289:43"><expr pos:start="289:13" pos:end="289:42"><name pos:start="289:13" pos:end="289:15">cbp</name> <operator pos:start="289:17" pos:end="289:17">=</operator> <operator pos:start="289:19" pos:end="289:19">(</operator><name pos:start="289:20" pos:end="289:23">cbpc</name> <operator pos:start="289:25" pos:end="289:25">&amp;</operator> <literal type="number" pos:start="289:27" pos:end="289:27">3</literal><operator pos:start="289:28" pos:end="289:28">)</operator> <operator pos:start="289:30" pos:end="289:30">|</operator> <operator pos:start="289:32" pos:end="289:32">(</operator><name pos:start="289:33" pos:end="289:36">cbpy</name> <operator pos:start="289:38" pos:end="289:39">&lt;&lt;</operator> <literal type="number" pos:start="289:41" pos:end="289:41">2</literal><operator pos:start="289:42" pos:end="289:42">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="291:10" pos:end="293:18">else<block type="pseudo" pos:start="293:13" pos:end="293:18"><block_content pos:start="293:13" pos:end="293:18">

            <expr_stmt pos:start="293:13" pos:end="293:18"><expr pos:start="293:13" pos:end="293:17"><name pos:start="293:13" pos:end="293:15">cbp</name><operator pos:start="293:16" pos:end="293:16">=</operator><literal type="number" pos:start="293:17" pos:end="293:17">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="297:9" pos:end="297:29"><expr pos:start="297:9" pos:end="297:28"><call pos:start="297:9" pos:end="297:28"><name pos:start="297:9" pos:end="297:14">assert</name><argument_list pos:start="297:15" pos:end="297:28">(<argument pos:start="297:16" pos:end="297:27"><expr pos:start="297:16" pos:end="297:27"><operator pos:start="297:16" pos:end="297:16">!</operator><name pos:start="297:17" pos:end="297:27"><name pos:start="297:17" pos:end="297:17">s</name><operator pos:start="297:18" pos:end="297:19">-&gt;</operator><name pos:start="297:20" pos:end="297:27">mb_intra</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="301:9" pos:end="305:9"><if pos:start="301:9" pos:end="305:9">if<condition pos:start="301:11" pos:end="301:29">(<expr pos:start="301:12" pos:end="301:28"><call pos:start="301:12" pos:end="301:28"><name pos:start="301:12" pos:end="301:19">IS_QUANT</name><argument_list pos:start="301:20" pos:end="301:28">(<argument pos:start="301:21" pos:end="301:27"><expr pos:start="301:21" pos:end="301:27"><name pos:start="301:21" pos:end="301:27">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="301:30" pos:end="305:9">{<block_content pos:start="303:13" pos:end="303:34">

            <expr_stmt pos:start="303:13" pos:end="303:34"><expr pos:start="303:13" pos:end="303:33"><call pos:start="303:13" pos:end="303:33"><name pos:start="303:13" pos:end="303:30">h263_decode_dquant</name><argument_list pos:start="303:31" pos:end="303:33">(<argument pos:start="303:32" pos:end="303:32"><expr pos:start="303:32" pos:end="303:32"><name pos:start="303:32" pos:end="303:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="309:9" pos:end="377:9"><if pos:start="309:9" pos:end="317:9">if<condition pos:start="309:11" pos:end="309:30">(<expr pos:start="309:12" pos:end="309:29"><call pos:start="309:12" pos:end="309:29"><name pos:start="309:12" pos:end="309:20">IS_DIRECT</name><argument_list pos:start="309:21" pos:end="309:29">(<argument pos:start="309:22" pos:end="309:28"><expr pos:start="309:22" pos:end="309:28"><name pos:start="309:22" pos:end="309:28">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="309:31" pos:end="317:9">{<block_content pos:start="313:13" pos:end="315:55">



            <expr_stmt pos:start="313:13" pos:end="313:69"><expr pos:start="313:13" pos:end="313:68"><name pos:start="313:13" pos:end="313:21"><name pos:start="313:13" pos:end="313:13">s</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:21">mv_dir</name></name> <operator pos:start="313:23" pos:end="313:23">=</operator> <name pos:start="313:25" pos:end="313:38">MV_DIR_FORWARD</name> <operator pos:start="313:40" pos:end="313:40">|</operator> <name pos:start="313:42" pos:end="313:56">MV_DIR_BACKWARD</name> <operator pos:start="313:58" pos:end="313:58">|</operator> <name pos:start="313:60" pos:end="313:68">MV_DIRECT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:55"><expr pos:start="315:13" pos:end="315:54"><name pos:start="315:13" pos:end="315:19">mb_type</name> <operator pos:start="315:21" pos:end="315:22">|=</operator> <call pos:start="315:24" pos:end="315:54"><name pos:start="315:24" pos:end="315:45">ff_mpeg4_set_direct_mv</name><argument_list pos:start="315:46" pos:end="315:54">(<argument pos:start="315:47" pos:end="315:47"><expr pos:start="315:47" pos:end="315:47"><name pos:start="315:47" pos:end="315:47">s</name></expr></argument>, <argument pos:start="315:50" pos:end="315:50"><expr pos:start="315:50" pos:end="315:50"><literal type="number" pos:start="315:50" pos:end="315:50">0</literal></expr></argument>, <argument pos:start="315:53" pos:end="315:53"><expr pos:start="315:53" pos:end="315:53"><literal type="number" pos:start="315:53" pos:end="315:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="317:10" pos:end="377:9">else<block pos:start="317:14" pos:end="377:9">{<block_content pos:start="319:13" pos:end="375:13">

            <expr_stmt pos:start="319:13" pos:end="319:26"><expr pos:start="319:13" pos:end="319:25"><name pos:start="319:13" pos:end="319:21"><name pos:start="319:13" pos:end="319:13">s</name><operator pos:start="319:14" pos:end="319:15">-&gt;</operator><name pos:start="319:16" pos:end="319:21">mv_dir</name></name> <operator pos:start="319:23" pos:end="319:23">=</operator> <literal type="number" pos:start="319:25" pos:end="319:25">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:38"><expr pos:start="321:13" pos:end="321:37"><name pos:start="321:13" pos:end="321:22"><name pos:start="321:13" pos:end="321:13">s</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:22">mv_type</name></name><operator pos:start="321:23" pos:end="321:23">=</operator> <name pos:start="321:25" pos:end="321:37">MV_TYPE_16X16</name></expr>;</expr_stmt>

<comment type="line" pos:start="323:1" pos:end="323:11">//FIXME UMV</comment>



            <if_stmt pos:start="327:13" pos:end="349:13"><if pos:start="327:13" pos:end="349:13">if<condition pos:start="327:15" pos:end="327:37">(<expr pos:start="327:16" pos:end="327:36"><call pos:start="327:16" pos:end="327:36"><name pos:start="327:16" pos:end="327:24">USES_LIST</name><argument_list pos:start="327:25" pos:end="327:36">(<argument pos:start="327:26" pos:end="327:32"><expr pos:start="327:26" pos:end="327:32"><name pos:start="327:26" pos:end="327:32">mb_type</name></expr></argument>, <argument pos:start="327:35" pos:end="327:35"><expr pos:start="327:35" pos:end="327:35"><literal type="number" pos:start="327:35" pos:end="327:35">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="327:38" pos:end="349:13">{<block_content pos:start="329:17" pos:end="347:99">

                <decl_stmt pos:start="329:17" pos:end="329:73"><decl pos:start="329:17" pos:end="329:72"><type pos:start="329:17" pos:end="329:25"><name pos:start="329:17" pos:end="329:23">int16_t</name> <modifier pos:start="329:25" pos:end="329:25">*</modifier></type><name pos:start="329:26" pos:end="329:32">mot_val</name><init pos:start="329:33" pos:end="329:72">= <expr pos:start="329:35" pos:end="329:72"><call pos:start="329:35" pos:end="329:72"><name pos:start="329:35" pos:end="329:53">ff_h263_pred_motion</name><argument_list pos:start="329:54" pos:end="329:72">(<argument pos:start="329:55" pos:end="329:55"><expr pos:start="329:55" pos:end="329:55"><name pos:start="329:55" pos:end="329:55">s</name></expr></argument>, <argument pos:start="329:58" pos:end="329:58"><expr pos:start="329:58" pos:end="329:58"><literal type="number" pos:start="329:58" pos:end="329:58">0</literal></expr></argument>, <argument pos:start="329:61" pos:end="329:61"><expr pos:start="329:61" pos:end="329:61"><literal type="number" pos:start="329:61" pos:end="329:61">0</literal></expr></argument>, <argument pos:start="329:64" pos:end="329:66"><expr pos:start="329:64" pos:end="329:66"><operator pos:start="329:64" pos:end="329:64">&amp;</operator><name pos:start="329:65" pos:end="329:66">mx</name></expr></argument>, <argument pos:start="329:69" pos:end="329:71"><expr pos:start="329:69" pos:end="329:71"><operator pos:start="329:69" pos:end="329:69">&amp;</operator><name pos:start="329:70" pos:end="329:71">my</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="331:17" pos:end="331:43"><expr pos:start="331:17" pos:end="331:42"><name pos:start="331:17" pos:end="331:25"><name pos:start="331:17" pos:end="331:17">s</name><operator pos:start="331:18" pos:end="331:19">-&gt;</operator><name pos:start="331:20" pos:end="331:25">mv_dir</name></name> <operator pos:start="331:27" pos:end="331:27">=</operator> <name pos:start="331:29" pos:end="331:42">MV_DIR_FORWARD</name></expr>;</expr_stmt>



                <expr_stmt pos:start="335:17" pos:end="335:53"><expr pos:start="335:17" pos:end="335:52"><name pos:start="335:17" pos:end="335:18">mx</name> <operator pos:start="335:20" pos:end="335:20">=</operator> <call pos:start="335:22" pos:end="335:52"><name pos:start="335:22" pos:end="335:42">ff_h263_decode_motion</name><argument_list pos:start="335:43" pos:end="335:52">(<argument pos:start="335:44" pos:end="335:44"><expr pos:start="335:44" pos:end="335:44"><name pos:start="335:44" pos:end="335:44">s</name></expr></argument>, <argument pos:start="335:47" pos:end="335:48"><expr pos:start="335:47" pos:end="335:48"><name pos:start="335:47" pos:end="335:48">mx</name></expr></argument>, <argument pos:start="335:51" pos:end="335:51"><expr pos:start="335:51" pos:end="335:51"><literal type="number" pos:start="335:51" pos:end="335:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="337:17" pos:end="337:53"><expr pos:start="337:17" pos:end="337:52"><name pos:start="337:17" pos:end="337:18">my</name> <operator pos:start="337:20" pos:end="337:20">=</operator> <call pos:start="337:22" pos:end="337:52"><name pos:start="337:22" pos:end="337:42">ff_h263_decode_motion</name><argument_list pos:start="337:43" pos:end="337:52">(<argument pos:start="337:44" pos:end="337:44"><expr pos:start="337:44" pos:end="337:44"><name pos:start="337:44" pos:end="337:44">s</name></expr></argument>, <argument pos:start="337:47" pos:end="337:48"><expr pos:start="337:47" pos:end="337:48"><name pos:start="337:47" pos:end="337:48">my</name></expr></argument>, <argument pos:start="337:51" pos:end="337:51"><expr pos:start="337:51" pos:end="337:51"><literal type="number" pos:start="337:51" pos:end="337:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="341:17" pos:end="341:36"><expr pos:start="341:17" pos:end="341:35"><name pos:start="341:17" pos:end="341:30"><name pos:start="341:17" pos:end="341:17">s</name><operator pos:start="341:18" pos:end="341:19">-&gt;</operator><name pos:start="341:20" pos:end="341:21">mv</name><index pos:start="341:22" pos:end="341:24">[<expr pos:start="341:23" pos:end="341:23"><literal type="number" pos:start="341:23" pos:end="341:23">0</literal></expr>]</index><index pos:start="341:25" pos:end="341:27">[<expr pos:start="341:26" pos:end="341:26"><literal type="number" pos:start="341:26" pos:end="341:26">0</literal></expr>]</index><index pos:start="341:28" pos:end="341:30">[<expr pos:start="341:29" pos:end="341:29"><literal type="number" pos:start="341:29" pos:end="341:29">0</literal></expr>]</index></name> <operator pos:start="341:32" pos:end="341:32">=</operator> <name pos:start="341:34" pos:end="341:35">mx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="343:17" pos:end="343:36"><expr pos:start="343:17" pos:end="343:35"><name pos:start="343:17" pos:end="343:30"><name pos:start="343:17" pos:end="343:17">s</name><operator pos:start="343:18" pos:end="343:19">-&gt;</operator><name pos:start="343:20" pos:end="343:21">mv</name><index pos:start="343:22" pos:end="343:24">[<expr pos:start="343:23" pos:end="343:23"><literal type="number" pos:start="343:23" pos:end="343:23">0</literal></expr>]</index><index pos:start="343:25" pos:end="343:27">[<expr pos:start="343:26" pos:end="343:26"><literal type="number" pos:start="343:26" pos:end="343:26">0</literal></expr>]</index><index pos:start="343:28" pos:end="343:30">[<expr pos:start="343:29" pos:end="343:29"><literal type="number" pos:start="343:29" pos:end="343:29">1</literal></expr>]</index></name> <operator pos:start="343:32" pos:end="343:32">=</operator> <name pos:start="343:34" pos:end="343:35">my</name></expr>;</expr_stmt>

                <expr_stmt pos:start="345:17" pos:end="345:99"><expr pos:start="345:17" pos:end="345:98"><name pos:start="345:17" pos:end="345:33"><name pos:start="345:17" pos:end="345:23">mot_val</name><index pos:start="345:24" pos:end="345:33">[<expr pos:start="345:25" pos:end="345:25"><literal type="number" pos:start="345:25" pos:end="345:25">0</literal></expr>       ]</index></name><operator pos:start="345:34" pos:end="345:34">=</operator> <name pos:start="345:36" pos:end="345:52"><name pos:start="345:36" pos:end="345:42">mot_val</name><index pos:start="345:43" pos:end="345:52">[<expr pos:start="345:44" pos:end="345:44"><literal type="number" pos:start="345:44" pos:end="345:44">2</literal></expr>       ]</index></name><operator pos:start="345:53" pos:end="345:53">=</operator> <name pos:start="345:55" pos:end="345:73"><name pos:start="345:55" pos:end="345:61">mot_val</name><index pos:start="345:62" pos:end="345:73">[<expr pos:start="345:63" pos:end="345:72"><literal type="number" pos:start="345:63" pos:end="345:64">0</literal><operator pos:start="345:64" pos:end="345:64">+</operator><literal type="number" pos:start="345:65" pos:end="345:65">2</literal><operator pos:start="345:66" pos:end="345:66">*</operator><name pos:start="345:67" pos:end="345:72">stride</name></expr>]</index></name><operator pos:start="345:74" pos:end="345:74">=</operator> <name pos:start="345:76" pos:end="345:94"><name pos:start="345:76" pos:end="345:82">mot_val</name><index pos:start="345:83" pos:end="345:94">[<expr pos:start="345:84" pos:end="345:93"><literal type="number" pos:start="345:84" pos:end="345:85">2</literal><operator pos:start="345:85" pos:end="345:85">+</operator><literal type="number" pos:start="345:86" pos:end="345:86">2</literal><operator pos:start="345:87" pos:end="345:87">*</operator><name pos:start="345:88" pos:end="345:93">stride</name></expr>]</index></name><operator pos:start="345:95" pos:end="345:95">=</operator> <name pos:start="345:97" pos:end="345:98">mx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="347:17" pos:end="347:99"><expr pos:start="347:17" pos:end="347:98"><name pos:start="347:17" pos:end="347:33"><name pos:start="347:17" pos:end="347:23">mot_val</name><index pos:start="347:24" pos:end="347:33">[<expr pos:start="347:25" pos:end="347:25"><literal type="number" pos:start="347:25" pos:end="347:25">1</literal></expr>       ]</index></name><operator pos:start="347:34" pos:end="347:34">=</operator> <name pos:start="347:36" pos:end="347:52"><name pos:start="347:36" pos:end="347:42">mot_val</name><index pos:start="347:43" pos:end="347:52">[<expr pos:start="347:44" pos:end="347:44"><literal type="number" pos:start="347:44" pos:end="347:44">3</literal></expr>       ]</index></name><operator pos:start="347:53" pos:end="347:53">=</operator> <name pos:start="347:55" pos:end="347:73"><name pos:start="347:55" pos:end="347:61">mot_val</name><index pos:start="347:62" pos:end="347:73">[<expr pos:start="347:63" pos:end="347:72"><literal type="number" pos:start="347:63" pos:end="347:64">1</literal><operator pos:start="347:64" pos:end="347:64">+</operator><literal type="number" pos:start="347:65" pos:end="347:65">2</literal><operator pos:start="347:66" pos:end="347:66">*</operator><name pos:start="347:67" pos:end="347:72">stride</name></expr>]</index></name><operator pos:start="347:74" pos:end="347:74">=</operator> <name pos:start="347:76" pos:end="347:94"><name pos:start="347:76" pos:end="347:82">mot_val</name><index pos:start="347:83" pos:end="347:94">[<expr pos:start="347:84" pos:end="347:93"><literal type="number" pos:start="347:84" pos:end="347:85">3</literal><operator pos:start="347:85" pos:end="347:85">+</operator><literal type="number" pos:start="347:86" pos:end="347:86">2</literal><operator pos:start="347:87" pos:end="347:87">*</operator><name pos:start="347:88" pos:end="347:93">stride</name></expr>]</index></name><operator pos:start="347:95" pos:end="347:95">=</operator> <name pos:start="347:97" pos:end="347:98">my</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="353:13" pos:end="375:13"><if pos:start="353:13" pos:end="375:13">if<condition pos:start="353:15" pos:end="353:37">(<expr pos:start="353:16" pos:end="353:36"><call pos:start="353:16" pos:end="353:36"><name pos:start="353:16" pos:end="353:24">USES_LIST</name><argument_list pos:start="353:25" pos:end="353:36">(<argument pos:start="353:26" pos:end="353:32"><expr pos:start="353:26" pos:end="353:32"><name pos:start="353:26" pos:end="353:32">mb_type</name></expr></argument>, <argument pos:start="353:35" pos:end="353:35"><expr pos:start="353:35" pos:end="353:35"><literal type="number" pos:start="353:35" pos:end="353:35">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="353:38" pos:end="375:13">{<block_content pos:start="355:17" pos:end="373:99">

                <decl_stmt pos:start="355:17" pos:end="355:73"><decl pos:start="355:17" pos:end="355:72"><type pos:start="355:17" pos:end="355:25"><name pos:start="355:17" pos:end="355:23">int16_t</name> <modifier pos:start="355:25" pos:end="355:25">*</modifier></type><name pos:start="355:26" pos:end="355:32">mot_val</name><init pos:start="355:33" pos:end="355:72">= <expr pos:start="355:35" pos:end="355:72"><call pos:start="355:35" pos:end="355:72"><name pos:start="355:35" pos:end="355:53">ff_h263_pred_motion</name><argument_list pos:start="355:54" pos:end="355:72">(<argument pos:start="355:55" pos:end="355:55"><expr pos:start="355:55" pos:end="355:55"><name pos:start="355:55" pos:end="355:55">s</name></expr></argument>, <argument pos:start="355:58" pos:end="355:58"><expr pos:start="355:58" pos:end="355:58"><literal type="number" pos:start="355:58" pos:end="355:58">0</literal></expr></argument>, <argument pos:start="355:61" pos:end="355:61"><expr pos:start="355:61" pos:end="355:61"><literal type="number" pos:start="355:61" pos:end="355:61">1</literal></expr></argument>, <argument pos:start="355:64" pos:end="355:66"><expr pos:start="355:64" pos:end="355:66"><operator pos:start="355:64" pos:end="355:64">&amp;</operator><name pos:start="355:65" pos:end="355:66">mx</name></expr></argument>, <argument pos:start="355:69" pos:end="355:71"><expr pos:start="355:69" pos:end="355:71"><operator pos:start="355:69" pos:end="355:69">&amp;</operator><name pos:start="355:70" pos:end="355:71">my</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="357:17" pos:end="357:45"><expr pos:start="357:17" pos:end="357:44"><name pos:start="357:17" pos:end="357:25"><name pos:start="357:17" pos:end="357:17">s</name><operator pos:start="357:18" pos:end="357:19">-&gt;</operator><name pos:start="357:20" pos:end="357:25">mv_dir</name></name> <operator pos:start="357:27" pos:end="357:28">|=</operator> <name pos:start="357:30" pos:end="357:44">MV_DIR_BACKWARD</name></expr>;</expr_stmt>



                <expr_stmt pos:start="361:17" pos:end="361:53"><expr pos:start="361:17" pos:end="361:52"><name pos:start="361:17" pos:end="361:18">mx</name> <operator pos:start="361:20" pos:end="361:20">=</operator> <call pos:start="361:22" pos:end="361:52"><name pos:start="361:22" pos:end="361:42">ff_h263_decode_motion</name><argument_list pos:start="361:43" pos:end="361:52">(<argument pos:start="361:44" pos:end="361:44"><expr pos:start="361:44" pos:end="361:44"><name pos:start="361:44" pos:end="361:44">s</name></expr></argument>, <argument pos:start="361:47" pos:end="361:48"><expr pos:start="361:47" pos:end="361:48"><name pos:start="361:47" pos:end="361:48">mx</name></expr></argument>, <argument pos:start="361:51" pos:end="361:51"><expr pos:start="361:51" pos:end="361:51"><literal type="number" pos:start="361:51" pos:end="361:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="363:17" pos:end="363:53"><expr pos:start="363:17" pos:end="363:52"><name pos:start="363:17" pos:end="363:18">my</name> <operator pos:start="363:20" pos:end="363:20">=</operator> <call pos:start="363:22" pos:end="363:52"><name pos:start="363:22" pos:end="363:42">ff_h263_decode_motion</name><argument_list pos:start="363:43" pos:end="363:52">(<argument pos:start="363:44" pos:end="363:44"><expr pos:start="363:44" pos:end="363:44"><name pos:start="363:44" pos:end="363:44">s</name></expr></argument>, <argument pos:start="363:47" pos:end="363:48"><expr pos:start="363:47" pos:end="363:48"><name pos:start="363:47" pos:end="363:48">my</name></expr></argument>, <argument pos:start="363:51" pos:end="363:51"><expr pos:start="363:51" pos:end="363:51"><literal type="number" pos:start="363:51" pos:end="363:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="367:17" pos:end="367:36"><expr pos:start="367:17" pos:end="367:35"><name pos:start="367:17" pos:end="367:30"><name pos:start="367:17" pos:end="367:17">s</name><operator pos:start="367:18" pos:end="367:19">-&gt;</operator><name pos:start="367:20" pos:end="367:21">mv</name><index pos:start="367:22" pos:end="367:24">[<expr pos:start="367:23" pos:end="367:23"><literal type="number" pos:start="367:23" pos:end="367:23">1</literal></expr>]</index><index pos:start="367:25" pos:end="367:27">[<expr pos:start="367:26" pos:end="367:26"><literal type="number" pos:start="367:26" pos:end="367:26">0</literal></expr>]</index><index pos:start="367:28" pos:end="367:30">[<expr pos:start="367:29" pos:end="367:29"><literal type="number" pos:start="367:29" pos:end="367:29">0</literal></expr>]</index></name> <operator pos:start="367:32" pos:end="367:32">=</operator> <name pos:start="367:34" pos:end="367:35">mx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="369:17" pos:end="369:36"><expr pos:start="369:17" pos:end="369:35"><name pos:start="369:17" pos:end="369:30"><name pos:start="369:17" pos:end="369:17">s</name><operator pos:start="369:18" pos:end="369:19">-&gt;</operator><name pos:start="369:20" pos:end="369:21">mv</name><index pos:start="369:22" pos:end="369:24">[<expr pos:start="369:23" pos:end="369:23"><literal type="number" pos:start="369:23" pos:end="369:23">1</literal></expr>]</index><index pos:start="369:25" pos:end="369:27">[<expr pos:start="369:26" pos:end="369:26"><literal type="number" pos:start="369:26" pos:end="369:26">0</literal></expr>]</index><index pos:start="369:28" pos:end="369:30">[<expr pos:start="369:29" pos:end="369:29"><literal type="number" pos:start="369:29" pos:end="369:29">1</literal></expr>]</index></name> <operator pos:start="369:32" pos:end="369:32">=</operator> <name pos:start="369:34" pos:end="369:35">my</name></expr>;</expr_stmt>

                <expr_stmt pos:start="371:17" pos:end="371:99"><expr pos:start="371:17" pos:end="371:98"><name pos:start="371:17" pos:end="371:33"><name pos:start="371:17" pos:end="371:23">mot_val</name><index pos:start="371:24" pos:end="371:33">[<expr pos:start="371:25" pos:end="371:25"><literal type="number" pos:start="371:25" pos:end="371:25">0</literal></expr>       ]</index></name><operator pos:start="371:34" pos:end="371:34">=</operator> <name pos:start="371:36" pos:end="371:52"><name pos:start="371:36" pos:end="371:42">mot_val</name><index pos:start="371:43" pos:end="371:52">[<expr pos:start="371:44" pos:end="371:44"><literal type="number" pos:start="371:44" pos:end="371:44">2</literal></expr>       ]</index></name><operator pos:start="371:53" pos:end="371:53">=</operator> <name pos:start="371:55" pos:end="371:73"><name pos:start="371:55" pos:end="371:61">mot_val</name><index pos:start="371:62" pos:end="371:73">[<expr pos:start="371:63" pos:end="371:72"><literal type="number" pos:start="371:63" pos:end="371:64">0</literal><operator pos:start="371:64" pos:end="371:64">+</operator><literal type="number" pos:start="371:65" pos:end="371:65">2</literal><operator pos:start="371:66" pos:end="371:66">*</operator><name pos:start="371:67" pos:end="371:72">stride</name></expr>]</index></name><operator pos:start="371:74" pos:end="371:74">=</operator> <name pos:start="371:76" pos:end="371:94"><name pos:start="371:76" pos:end="371:82">mot_val</name><index pos:start="371:83" pos:end="371:94">[<expr pos:start="371:84" pos:end="371:93"><literal type="number" pos:start="371:84" pos:end="371:85">2</literal><operator pos:start="371:85" pos:end="371:85">+</operator><literal type="number" pos:start="371:86" pos:end="371:86">2</literal><operator pos:start="371:87" pos:end="371:87">*</operator><name pos:start="371:88" pos:end="371:93">stride</name></expr>]</index></name><operator pos:start="371:95" pos:end="371:95">=</operator> <name pos:start="371:97" pos:end="371:98">mx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="373:17" pos:end="373:99"><expr pos:start="373:17" pos:end="373:98"><name pos:start="373:17" pos:end="373:33"><name pos:start="373:17" pos:end="373:23">mot_val</name><index pos:start="373:24" pos:end="373:33">[<expr pos:start="373:25" pos:end="373:25"><literal type="number" pos:start="373:25" pos:end="373:25">1</literal></expr>       ]</index></name><operator pos:start="373:34" pos:end="373:34">=</operator> <name pos:start="373:36" pos:end="373:52"><name pos:start="373:36" pos:end="373:42">mot_val</name><index pos:start="373:43" pos:end="373:52">[<expr pos:start="373:44" pos:end="373:44"><literal type="number" pos:start="373:44" pos:end="373:44">3</literal></expr>       ]</index></name><operator pos:start="373:53" pos:end="373:53">=</operator> <name pos:start="373:55" pos:end="373:73"><name pos:start="373:55" pos:end="373:61">mot_val</name><index pos:start="373:62" pos:end="373:73">[<expr pos:start="373:63" pos:end="373:72"><literal type="number" pos:start="373:63" pos:end="373:64">1</literal><operator pos:start="373:64" pos:end="373:64">+</operator><literal type="number" pos:start="373:65" pos:end="373:65">2</literal><operator pos:start="373:66" pos:end="373:66">*</operator><name pos:start="373:67" pos:end="373:72">stride</name></expr>]</index></name><operator pos:start="373:74" pos:end="373:74">=</operator> <name pos:start="373:76" pos:end="373:94"><name pos:start="373:76" pos:end="373:82">mot_val</name><index pos:start="373:83" pos:end="373:94">[<expr pos:start="373:84" pos:end="373:93"><literal type="number" pos:start="373:84" pos:end="373:85">3</literal><operator pos:start="373:85" pos:end="373:85">+</operator><literal type="number" pos:start="373:86" pos:end="373:86">2</literal><operator pos:start="373:87" pos:end="373:87">*</operator><name pos:start="373:88" pos:end="373:93">stride</name></expr>]</index></name><operator pos:start="373:95" pos:end="373:95">=</operator> <name pos:start="373:97" pos:end="373:98">my</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="381:9" pos:end="381:49"><expr pos:start="381:9" pos:end="381:48"><name pos:start="381:9" pos:end="381:38"><name pos:start="381:9" pos:end="381:9">s</name><operator pos:start="381:10" pos:end="381:11">-&gt;</operator><name pos:start="381:12" pos:end="381:26">current_picture</name><operator pos:start="381:27" pos:end="381:27">.</operator><name pos:start="381:28" pos:end="381:34">mb_type</name><index pos:start="381:35" pos:end="381:38">[<expr pos:start="381:36" pos:end="381:37"><name pos:start="381:36" pos:end="381:37">xy</name></expr>]</index></name> <operator pos:start="381:40" pos:end="381:40">=</operator> <name pos:start="381:42" pos:end="381:48">mb_type</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="383:7" pos:end="459:5">else <block pos:start="383:12" pos:end="459:5">{<block_content pos:start="385:9" pos:end="457:37"> <comment type="block" pos:start="383:14" pos:end="383:26">/* I-Frame */</comment>

        <do pos:start="385:9" pos:end="397:26">do<block pos:start="385:11" pos:end="397:9">{<block_content pos:start="387:13" pos:end="395:13">

            <expr_stmt pos:start="387:13" pos:end="387:92"><expr pos:start="387:13" pos:end="387:91"><name pos:start="387:13" pos:end="387:16">cbpc</name> <operator pos:start="387:18" pos:end="387:18">=</operator> <call pos:start="387:20" pos:end="387:91"><name pos:start="387:20" pos:end="387:27">get_vlc2</name><argument_list pos:start="387:28" pos:end="387:91">(<argument pos:start="387:29" pos:end="387:34"><expr pos:start="387:29" pos:end="387:34"><operator pos:start="387:29" pos:end="387:29">&amp;</operator><name pos:start="387:30" pos:end="387:34"><name pos:start="387:30" pos:end="387:30">s</name><operator pos:start="387:31" pos:end="387:32">-&gt;</operator><name pos:start="387:33" pos:end="387:34">gb</name></name></expr></argument>, <argument pos:start="387:37" pos:end="387:65"><expr pos:start="387:37" pos:end="387:65"><name pos:start="387:37" pos:end="387:65"><name pos:start="387:37" pos:end="387:59">ff_h263_intra_MCBPC_vlc</name><operator pos:start="387:60" pos:end="387:60">.</operator><name pos:start="387:61" pos:end="387:65">table</name></name></expr></argument>, <argument pos:start="387:68" pos:end="387:87"><expr pos:start="387:68" pos:end="387:87"><name pos:start="387:68" pos:end="387:87">INTRA_MCBPC_VLC_BITS</name></expr></argument>, <argument pos:start="387:90" pos:end="387:90"><expr pos:start="387:90" pos:end="387:90"><literal type="number" pos:start="387:90" pos:end="387:90">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="389:13" pos:end="395:13"><if pos:start="389:13" pos:end="395:13">if <condition pos:start="389:16" pos:end="389:25">(<expr pos:start="389:17" pos:end="389:24"><name pos:start="389:17" pos:end="389:20">cbpc</name> <operator pos:start="389:22" pos:end="389:22">&lt;</operator> <literal type="number" pos:start="389:24" pos:end="389:24">0</literal></expr>)</condition><block pos:start="389:26" pos:end="395:13">{<block_content pos:start="391:17" pos:end="393:26">

                <expr_stmt pos:start="391:17" pos:end="391:94"><expr pos:start="391:17" pos:end="391:93"><call pos:start="391:17" pos:end="391:93"><name pos:start="391:17" pos:end="391:22">av_log</name><argument_list pos:start="391:23" pos:end="391:93">(<argument pos:start="391:24" pos:end="391:31"><expr pos:start="391:24" pos:end="391:31"><name pos:start="391:24" pos:end="391:31"><name pos:start="391:24" pos:end="391:24">s</name><operator pos:start="391:25" pos:end="391:26">-&gt;</operator><name pos:start="391:27" pos:end="391:31">avctx</name></name></expr></argument>, <argument pos:start="391:34" pos:end="391:45"><expr pos:start="391:34" pos:end="391:45"><name pos:start="391:34" pos:end="391:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="391:48" pos:end="391:74"><expr pos:start="391:48" pos:end="391:74"><literal type="string" pos:start="391:48" pos:end="391:74">"I cbpc damaged at %d %d\n"</literal></expr></argument>, <argument pos:start="391:77" pos:end="391:83"><expr pos:start="391:77" pos:end="391:83"><name pos:start="391:77" pos:end="391:83"><name pos:start="391:77" pos:end="391:77">s</name><operator pos:start="391:78" pos:end="391:79">-&gt;</operator><name pos:start="391:80" pos:end="391:83">mb_x</name></name></expr></argument>, <argument pos:start="391:86" pos:end="391:92"><expr pos:start="391:86" pos:end="391:92"><name pos:start="391:86" pos:end="391:92"><name pos:start="391:86" pos:end="391:86">s</name><operator pos:start="391:87" pos:end="391:88">-&gt;</operator><name pos:start="391:89" pos:end="391:92">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="393:17" pos:end="393:26">return <expr pos:start="393:24" pos:end="393:25"><operator pos:start="393:24" pos:end="393:24">-</operator><literal type="number" pos:start="393:25" pos:end="393:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>while<condition pos:start="397:15" pos:end="397:25">(<expr pos:start="397:16" pos:end="397:24"><name pos:start="397:16" pos:end="397:19">cbpc</name> <operator pos:start="397:21" pos:end="397:22">==</operator> <literal type="number" pos:start="397:24" pos:end="397:24">8</literal></expr>)</condition>;</do>



        <expr_stmt pos:start="401:9" pos:end="401:41"><expr pos:start="401:9" pos:end="401:40"><call pos:start="401:9" pos:end="401:40"><name pos:start="401:9" pos:end="401:27"><name pos:start="401:9" pos:end="401:9">s</name><operator pos:start="401:10" pos:end="401:11">-&gt;</operator><name pos:start="401:12" pos:end="401:14">dsp</name><operator pos:start="401:15" pos:end="401:15">.</operator><name pos:start="401:16" pos:end="401:27">clear_blocks</name></name><argument_list pos:start="401:28" pos:end="401:40">(<argument pos:start="401:29" pos:end="401:39"><expr pos:start="401:29" pos:end="401:39"><name pos:start="401:29" pos:end="401:39"><name pos:start="401:29" pos:end="401:29">s</name><operator pos:start="401:30" pos:end="401:31">-&gt;</operator><name pos:start="401:32" pos:end="401:36">block</name><index pos:start="401:37" pos:end="401:39">[<expr pos:start="401:38" pos:end="401:38"><literal type="number" pos:start="401:38" pos:end="401:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="405:9" pos:end="405:26"><expr pos:start="405:9" pos:end="405:25"><name pos:start="405:9" pos:end="405:14">dquant</name> <operator pos:start="405:16" pos:end="405:16">=</operator> <name pos:start="405:18" pos:end="405:21">cbpc</name> <operator pos:start="405:23" pos:end="405:23">&amp;</operator> <literal type="number" pos:start="405:25" pos:end="405:25">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="407:9" pos:end="407:24"><expr pos:start="407:9" pos:end="407:23"><name pos:start="407:9" pos:end="407:19"><name pos:start="407:9" pos:end="407:9">s</name><operator pos:start="407:10" pos:end="407:11">-&gt;</operator><name pos:start="407:12" pos:end="407:19">mb_intra</name></name> <operator pos:start="407:21" pos:end="407:21">=</operator> <literal type="number" pos:start="407:23" pos:end="407:23">1</literal></expr>;</expr_stmt>

<label pos:start="409:1" pos:end="409:6"><name pos:start="409:1" pos:end="409:5">intra</name>:</label>

        <expr_stmt pos:start="411:9" pos:end="411:55"><expr pos:start="411:9" pos:end="411:54"><name pos:start="411:9" pos:end="411:38"><name pos:start="411:9" pos:end="411:9">s</name><operator pos:start="411:10" pos:end="411:11">-&gt;</operator><name pos:start="411:12" pos:end="411:26">current_picture</name><operator pos:start="411:27" pos:end="411:27">.</operator><name pos:start="411:28" pos:end="411:34">mb_type</name><index pos:start="411:35" pos:end="411:38">[<expr pos:start="411:36" pos:end="411:37"><name pos:start="411:36" pos:end="411:37">xy</name></expr>]</index></name> <operator pos:start="411:40" pos:end="411:40">=</operator> <name pos:start="411:42" pos:end="411:54">MB_TYPE_INTRA</name></expr>;</expr_stmt>

        <if_stmt pos:start="413:9" pos:end="429:27"><if pos:start="413:9" pos:end="427:9">if <condition pos:start="413:12" pos:end="413:24">(<expr pos:start="413:13" pos:end="413:23"><name pos:start="413:13" pos:end="413:23"><name pos:start="413:13" pos:end="413:13">s</name><operator pos:start="413:14" pos:end="413:15">-&gt;</operator><name pos:start="413:16" pos:end="413:23">h263_aic</name></name></expr>)</condition> <block pos:start="413:26" pos:end="427:9">{<block_content pos:start="415:13" pos:end="425:13">

            <expr_stmt pos:start="415:13" pos:end="415:43"><expr pos:start="415:13" pos:end="415:42"><name pos:start="415:13" pos:end="415:22"><name pos:start="415:13" pos:end="415:13">s</name><operator pos:start="415:14" pos:end="415:15">-&gt;</operator><name pos:start="415:16" pos:end="415:22">ac_pred</name></name> <operator pos:start="415:24" pos:end="415:24">=</operator> <call pos:start="415:26" pos:end="415:42"><name pos:start="415:26" pos:end="415:34">get_bits1</name><argument_list pos:start="415:35" pos:end="415:42">(<argument pos:start="415:36" pos:end="415:41"><expr pos:start="415:36" pos:end="415:41"><operator pos:start="415:36" pos:end="415:36">&amp;</operator><name pos:start="415:37" pos:end="415:41"><name pos:start="415:37" pos:end="415:37">s</name><operator pos:start="415:38" pos:end="415:39">-&gt;</operator><name pos:start="415:40" pos:end="415:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="417:13" pos:end="425:13"><if pos:start="417:13" pos:end="425:13">if<condition pos:start="417:15" pos:end="417:26">(<expr pos:start="417:16" pos:end="417:25"><name pos:start="417:16" pos:end="417:25"><name pos:start="417:16" pos:end="417:16">s</name><operator pos:start="417:17" pos:end="417:18">-&gt;</operator><name pos:start="417:19" pos:end="417:25">ac_pred</name></name></expr>)</condition><block pos:start="417:27" pos:end="425:13">{<block_content pos:start="419:17" pos:end="423:52">

                <expr_stmt pos:start="419:17" pos:end="419:80"><expr pos:start="419:17" pos:end="419:79"><name pos:start="419:17" pos:end="419:46"><name pos:start="419:17" pos:end="419:17">s</name><operator pos:start="419:18" pos:end="419:19">-&gt;</operator><name pos:start="419:20" pos:end="419:34">current_picture</name><operator pos:start="419:35" pos:end="419:35">.</operator><name pos:start="419:36" pos:end="419:42">mb_type</name><index pos:start="419:43" pos:end="419:46">[<expr pos:start="419:44" pos:end="419:45"><name pos:start="419:44" pos:end="419:45">xy</name></expr>]</index></name> <operator pos:start="419:48" pos:end="419:48">=</operator> <name pos:start="419:50" pos:end="419:62">MB_TYPE_INTRA</name> <operator pos:start="419:64" pos:end="419:64">|</operator> <name pos:start="419:66" pos:end="419:79">MB_TYPE_ACPRED</name></expr>;</expr_stmt>



                <expr_stmt pos:start="423:17" pos:end="423:52"><expr pos:start="423:17" pos:end="423:51"><name pos:start="423:17" pos:end="423:31"><name pos:start="423:17" pos:end="423:17">s</name><operator pos:start="423:18" pos:end="423:19">-&gt;</operator><name pos:start="423:20" pos:end="423:31">h263_aic_dir</name></name> <operator pos:start="423:33" pos:end="423:33">=</operator> <call pos:start="423:35" pos:end="423:51"><name pos:start="423:35" pos:end="423:43">get_bits1</name><argument_list pos:start="423:44" pos:end="423:51">(<argument pos:start="423:45" pos:end="423:50"><expr pos:start="423:45" pos:end="423:50"><operator pos:start="423:45" pos:end="423:45">&amp;</operator><name pos:start="423:46" pos:end="423:50"><name pos:start="423:46" pos:end="423:46">s</name><operator pos:start="423:47" pos:end="423:48">-&gt;</operator><name pos:start="423:49" pos:end="423:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if><else pos:start="427:10" pos:end="429:27">else<block type="pseudo" pos:start="429:13" pos:end="429:27"><block_content pos:start="429:13" pos:end="429:27">

            <expr_stmt pos:start="429:13" pos:end="429:27"><expr pos:start="429:13" pos:end="429:26"><name pos:start="429:13" pos:end="429:22"><name pos:start="429:13" pos:end="429:13">s</name><operator pos:start="429:14" pos:end="429:15">-&gt;</operator><name pos:start="429:16" pos:end="429:22">ac_pred</name></name> <operator pos:start="429:24" pos:end="429:24">=</operator> <literal type="number" pos:start="429:26" pos:end="429:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="433:9" pos:end="435:68"><if pos:start="433:9" pos:end="435:68">if<condition pos:start="433:11" pos:end="433:44">(<expr pos:start="433:12" pos:end="433:43"><name pos:start="433:12" pos:end="433:22"><name pos:start="433:12" pos:end="433:12">s</name><operator pos:start="433:13" pos:end="433:14">-&gt;</operator><name pos:start="433:15" pos:end="433:22">pb_frame</name></name> <operator pos:start="433:24" pos:end="433:25">&amp;&amp;</operator> <call pos:start="433:27" pos:end="433:43"><name pos:start="433:27" pos:end="433:35">get_bits1</name><argument_list pos:start="433:36" pos:end="433:43">(<argument pos:start="433:37" pos:end="433:42"><expr pos:start="433:37" pos:end="433:42"><operator pos:start="433:37" pos:end="433:37">&amp;</operator><name pos:start="433:38" pos:end="433:42"><name pos:start="433:38" pos:end="433:38">s</name><operator pos:start="433:39" pos:end="433:40">-&gt;</operator><name pos:start="433:41" pos:end="433:42">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="435:13" pos:end="435:68"><block_content pos:start="435:13" pos:end="435:68">

            <expr_stmt pos:start="435:13" pos:end="435:68"><expr pos:start="435:13" pos:end="435:67"><name pos:start="435:13" pos:end="435:23">pb_mv_count</name> <operator pos:start="435:25" pos:end="435:25">=</operator> <call pos:start="435:27" pos:end="435:67"><name pos:start="435:27" pos:end="435:39">h263_get_modb</name><argument_list pos:start="435:40" pos:end="435:67">(<argument pos:start="435:41" pos:end="435:46"><expr pos:start="435:41" pos:end="435:46"><operator pos:start="435:41" pos:end="435:41">&amp;</operator><name pos:start="435:42" pos:end="435:46"><name pos:start="435:42" pos:end="435:42">s</name><operator pos:start="435:43" pos:end="435:44">-&gt;</operator><name pos:start="435:45" pos:end="435:46">gb</name></name></expr></argument>, <argument pos:start="435:49" pos:end="435:59"><expr pos:start="435:49" pos:end="435:59"><name pos:start="435:49" pos:end="435:59"><name pos:start="435:49" pos:end="435:49">s</name><operator pos:start="435:50" pos:end="435:51">-&gt;</operator><name pos:start="435:52" pos:end="435:59">pb_frame</name></name></expr></argument>, <argument pos:start="435:62" pos:end="435:66"><expr pos:start="435:62" pos:end="435:66"><operator pos:start="435:62" pos:end="435:62">&amp;</operator><name pos:start="435:63" pos:end="435:66">cbpb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="437:9" pos:end="437:74"><expr pos:start="437:9" pos:end="437:73"><name pos:start="437:9" pos:end="437:12">cbpy</name> <operator pos:start="437:14" pos:end="437:14">=</operator> <call pos:start="437:16" pos:end="437:73"><name pos:start="437:16" pos:end="437:23">get_vlc2</name><argument_list pos:start="437:24" pos:end="437:73">(<argument pos:start="437:25" pos:end="437:30"><expr pos:start="437:25" pos:end="437:30"><operator pos:start="437:25" pos:end="437:25">&amp;</operator><name pos:start="437:26" pos:end="437:30"><name pos:start="437:26" pos:end="437:26">s</name><operator pos:start="437:27" pos:end="437:28">-&gt;</operator><name pos:start="437:29" pos:end="437:30">gb</name></name></expr></argument>, <argument pos:start="437:33" pos:end="437:54"><expr pos:start="437:33" pos:end="437:54"><name pos:start="437:33" pos:end="437:54"><name pos:start="437:33" pos:end="437:48">ff_h263_cbpy_vlc</name><operator pos:start="437:49" pos:end="437:49">.</operator><name pos:start="437:50" pos:end="437:54">table</name></name></expr></argument>, <argument pos:start="437:57" pos:end="437:69"><expr pos:start="437:57" pos:end="437:69"><name pos:start="437:57" pos:end="437:69">CBPY_VLC_BITS</name></expr></argument>, <argument pos:start="437:72" pos:end="437:72"><expr pos:start="437:72" pos:end="437:72"><literal type="number" pos:start="437:72" pos:end="437:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="439:9" pos:end="445:9"><if pos:start="439:9" pos:end="445:9">if<condition pos:start="439:11" pos:end="439:18">(<expr pos:start="439:12" pos:end="439:17"><name pos:start="439:12" pos:end="439:15">cbpy</name><operator pos:start="439:16" pos:end="439:16">&lt;</operator><literal type="number" pos:start="439:17" pos:end="439:17">0</literal></expr>)</condition><block pos:start="439:19" pos:end="445:9">{<block_content pos:start="441:13" pos:end="443:22">

            <expr_stmt pos:start="441:13" pos:end="441:90"><expr pos:start="441:13" pos:end="441:89"><call pos:start="441:13" pos:end="441:89"><name pos:start="441:13" pos:end="441:18">av_log</name><argument_list pos:start="441:19" pos:end="441:89">(<argument pos:start="441:20" pos:end="441:27"><expr pos:start="441:20" pos:end="441:27"><name pos:start="441:20" pos:end="441:27"><name pos:start="441:20" pos:end="441:20">s</name><operator pos:start="441:21" pos:end="441:22">-&gt;</operator><name pos:start="441:23" pos:end="441:27">avctx</name></name></expr></argument>, <argument pos:start="441:30" pos:end="441:41"><expr pos:start="441:30" pos:end="441:41"><name pos:start="441:30" pos:end="441:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="441:44" pos:end="441:70"><expr pos:start="441:44" pos:end="441:70"><literal type="string" pos:start="441:44" pos:end="441:70">"I cbpy damaged at %d %d\n"</literal></expr></argument>, <argument pos:start="441:73" pos:end="441:79"><expr pos:start="441:73" pos:end="441:79"><name pos:start="441:73" pos:end="441:79"><name pos:start="441:73" pos:end="441:73">s</name><operator pos:start="441:74" pos:end="441:75">-&gt;</operator><name pos:start="441:76" pos:end="441:79">mb_x</name></name></expr></argument>, <argument pos:start="441:82" pos:end="441:88"><expr pos:start="441:82" pos:end="441:88"><name pos:start="441:82" pos:end="441:88"><name pos:start="441:82" pos:end="441:82">s</name><operator pos:start="441:83" pos:end="441:84">-&gt;</operator><name pos:start="441:85" pos:end="441:88">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="443:13" pos:end="443:22">return <expr pos:start="443:20" pos:end="443:21"><operator pos:start="443:20" pos:end="443:20">-</operator><literal type="number" pos:start="443:21" pos:end="443:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="447:9" pos:end="447:39"><expr pos:start="447:9" pos:end="447:38"><name pos:start="447:9" pos:end="447:11">cbp</name> <operator pos:start="447:13" pos:end="447:13">=</operator> <operator pos:start="447:15" pos:end="447:15">(</operator><name pos:start="447:16" pos:end="447:19">cbpc</name> <operator pos:start="447:21" pos:end="447:21">&amp;</operator> <literal type="number" pos:start="447:23" pos:end="447:23">3</literal><operator pos:start="447:24" pos:end="447:24">)</operator> <operator pos:start="447:26" pos:end="447:26">|</operator> <operator pos:start="447:28" pos:end="447:28">(</operator><name pos:start="447:29" pos:end="447:32">cbpy</name> <operator pos:start="447:34" pos:end="447:35">&lt;&lt;</operator> <literal type="number" pos:start="447:37" pos:end="447:37">2</literal><operator pos:start="447:38" pos:end="447:38">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="449:9" pos:end="453:9"><if pos:start="449:9" pos:end="453:9">if <condition pos:start="449:12" pos:end="449:19">(<expr pos:start="449:13" pos:end="449:18"><name pos:start="449:13" pos:end="449:18">dquant</name></expr>)</condition> <block pos:start="449:21" pos:end="453:9">{<block_content pos:start="451:13" pos:end="451:34">

            <expr_stmt pos:start="451:13" pos:end="451:34"><expr pos:start="451:13" pos:end="451:33"><call pos:start="451:13" pos:end="451:33"><name pos:start="451:13" pos:end="451:30">h263_decode_dquant</name><argument_list pos:start="451:31" pos:end="451:33">(<argument pos:start="451:32" pos:end="451:32"><expr pos:start="451:32" pos:end="451:32"><name pos:start="451:32" pos:end="451:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="457:9" pos:end="457:37"><expr pos:start="457:9" pos:end="457:36"><name pos:start="457:9" pos:end="457:19">pb_mv_count</name> <operator pos:start="457:21" pos:end="457:22">+=</operator> <operator pos:start="457:24" pos:end="457:24">!</operator><operator pos:start="457:25" pos:end="457:25">!</operator><name pos:start="457:26" pos:end="457:36"><name pos:start="457:26" pos:end="457:26">s</name><operator pos:start="457:27" pos:end="457:28">-&gt;</operator><name pos:start="457:29" pos:end="457:36">pb_frame</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <while pos:start="463:5" pos:end="469:5">while<condition pos:start="463:10" pos:end="463:24">(<expr pos:start="463:11" pos:end="463:23"><name pos:start="463:11" pos:end="463:21">pb_mv_count</name><operator pos:start="463:22" pos:end="463:23">--</operator></expr>)</condition><block pos:start="463:25" pos:end="469:5">{<block_content pos:start="465:9" pos:end="467:39">

        <expr_stmt pos:start="465:9" pos:end="465:39"><expr pos:start="465:9" pos:end="465:38"><call pos:start="465:9" pos:end="465:38"><name pos:start="465:9" pos:end="465:29">ff_h263_decode_motion</name><argument_list pos:start="465:30" pos:end="465:38">(<argument pos:start="465:31" pos:end="465:31"><expr pos:start="465:31" pos:end="465:31"><name pos:start="465:31" pos:end="465:31">s</name></expr></argument>, <argument pos:start="465:34" pos:end="465:34"><expr pos:start="465:34" pos:end="465:34"><literal type="number" pos:start="465:34" pos:end="465:34">0</literal></expr></argument>, <argument pos:start="465:37" pos:end="465:37"><expr pos:start="465:37" pos:end="465:37"><literal type="number" pos:start="465:37" pos:end="465:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="467:9" pos:end="467:39"><expr pos:start="467:9" pos:end="467:38"><call pos:start="467:9" pos:end="467:38"><name pos:start="467:9" pos:end="467:29">ff_h263_decode_motion</name><argument_list pos:start="467:30" pos:end="467:38">(<argument pos:start="467:31" pos:end="467:31"><expr pos:start="467:31" pos:end="467:31"><name pos:start="467:31" pos:end="467:31">s</name></expr></argument>, <argument pos:start="467:34" pos:end="467:34"><expr pos:start="467:34" pos:end="467:34"><literal type="number" pos:start="467:34" pos:end="467:34">0</literal></expr></argument>, <argument pos:start="467:37" pos:end="467:37"><expr pos:start="467:37" pos:end="467:37"><literal type="number" pos:start="467:37" pos:end="467:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="473:5" pos:end="473:27">/* decode each block */</comment>

    <for pos:start="475:5" pos:end="483:5">for <control pos:start="475:9" pos:end="475:27">(<init pos:start="475:10" pos:end="475:15"><expr pos:start="475:10" pos:end="475:14"><name pos:start="475:10" pos:end="475:10">i</name> <operator pos:start="475:12" pos:end="475:12">=</operator> <literal type="number" pos:start="475:14" pos:end="475:14">0</literal></expr>;</init> <condition pos:start="475:17" pos:end="475:22"><expr pos:start="475:17" pos:end="475:21"><name pos:start="475:17" pos:end="475:17">i</name> <operator pos:start="475:19" pos:end="475:19">&lt;</operator> <literal type="number" pos:start="475:21" pos:end="475:21">6</literal></expr>;</condition> <incr pos:start="475:24" pos:end="475:26"><expr pos:start="475:24" pos:end="475:26"><name pos:start="475:24" pos:end="475:24">i</name><operator pos:start="475:25" pos:end="475:26">++</operator></expr></incr>)</control> <block pos:start="475:29" pos:end="483:5">{<block_content pos:start="477:9" pos:end="481:17">

        <if_stmt pos:start="477:9" pos:end="479:22"><if pos:start="477:9" pos:end="479:22">if <condition pos:start="477:12" pos:end="477:58">(<expr pos:start="477:13" pos:end="477:57"><call pos:start="477:13" pos:end="477:53"><name pos:start="477:13" pos:end="477:29">h263_decode_block</name><argument_list pos:start="477:30" pos:end="477:53">(<argument pos:start="477:31" pos:end="477:31"><expr pos:start="477:31" pos:end="477:31"><name pos:start="477:31" pos:end="477:31">s</name></expr></argument>, <argument pos:start="477:34" pos:end="477:41"><expr pos:start="477:34" pos:end="477:41"><name pos:start="477:34" pos:end="477:41"><name pos:start="477:34" pos:end="477:38">block</name><index pos:start="477:39" pos:end="477:41">[<expr pos:start="477:40" pos:end="477:40"><name pos:start="477:40" pos:end="477:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="477:44" pos:end="477:44"><expr pos:start="477:44" pos:end="477:44"><name pos:start="477:44" pos:end="477:44">i</name></expr></argument>, <argument pos:start="477:47" pos:end="477:52"><expr pos:start="477:47" pos:end="477:52"><name pos:start="477:47" pos:end="477:49">cbp</name><operator pos:start="477:50" pos:end="477:50">&amp;</operator><literal type="number" pos:start="477:51" pos:end="477:52">32</literal></expr></argument>)</argument_list></call> <operator pos:start="477:55" pos:end="477:55">&lt;</operator> <literal type="number" pos:start="477:57" pos:end="477:57">0</literal></expr>)</condition><block type="pseudo" pos:start="479:13" pos:end="479:22"><block_content pos:start="479:13" pos:end="479:22">

            <return pos:start="479:13" pos:end="479:22">return <expr pos:start="479:20" pos:end="479:21"><operator pos:start="479:20" pos:end="479:20">-</operator><literal type="number" pos:start="479:21" pos:end="479:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="481:9" pos:end="481:17"><expr pos:start="481:9" pos:end="481:16"><name pos:start="481:9" pos:end="481:11">cbp</name><operator pos:start="481:12" pos:end="481:13">+=</operator><name pos:start="481:14" pos:end="481:16">cbp</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="487:5" pos:end="489:18"><if pos:start="487:5" pos:end="489:18">if<condition pos:start="487:7" pos:end="487:52">(<expr pos:start="487:8" pos:end="487:51"><name pos:start="487:8" pos:end="487:18"><name pos:start="487:8" pos:end="487:8">s</name><operator pos:start="487:9" pos:end="487:10">-&gt;</operator><name pos:start="487:11" pos:end="487:18">pb_frame</name></name> <operator pos:start="487:20" pos:end="487:21">&amp;&amp;</operator> <call pos:start="487:23" pos:end="487:47"><name pos:start="487:23" pos:end="487:38">h263_skip_b_part</name><argument_list pos:start="487:39" pos:end="487:47">(<argument pos:start="487:40" pos:end="487:40"><expr pos:start="487:40" pos:end="487:40"><name pos:start="487:40" pos:end="487:40">s</name></expr></argument>, <argument pos:start="487:43" pos:end="487:46"><expr pos:start="487:43" pos:end="487:46"><name pos:start="487:43" pos:end="487:46">cbpb</name></expr></argument>)</argument_list></call> <operator pos:start="487:49" pos:end="487:49">&lt;</operator> <literal type="number" pos:start="487:51" pos:end="487:51">0</literal></expr>)</condition><block type="pseudo" pos:start="489:9" pos:end="489:18"><block_content pos:start="489:9" pos:end="489:18">

        <return pos:start="489:9" pos:end="489:18">return <expr pos:start="489:16" pos:end="489:17"><operator pos:start="489:16" pos:end="489:16">-</operator><literal type="number" pos:start="489:17" pos:end="489:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="491:5" pos:end="497:5"><if pos:start="491:5" pos:end="497:5">if<condition pos:start="491:7" pos:end="491:31">(<expr pos:start="491:8" pos:end="491:30"><name pos:start="491:8" pos:end="491:14"><name pos:start="491:8" pos:end="491:8">s</name><operator pos:start="491:9" pos:end="491:10">-&gt;</operator><name pos:start="491:11" pos:end="491:14">obmc</name></name> <operator pos:start="491:16" pos:end="491:17">&amp;&amp;</operator> <operator pos:start="491:19" pos:end="491:19">!</operator><name pos:start="491:20" pos:end="491:30"><name pos:start="491:20" pos:end="491:20">s</name><operator pos:start="491:21" pos:end="491:22">-&gt;</operator><name pos:start="491:23" pos:end="491:30">mb_intra</name></name></expr>)</condition><block pos:start="491:32" pos:end="497:5">{<block_content pos:start="493:9" pos:end="495:28">

        <if_stmt pos:start="493:9" pos:end="495:28"><if pos:start="493:9" pos:end="495:28">if<condition pos:start="493:11" pos:end="493:93">(<expr pos:start="493:12" pos:end="493:92"><name pos:start="493:12" pos:end="493:23"><name pos:start="493:12" pos:end="493:12">s</name><operator pos:start="493:13" pos:end="493:14">-&gt;</operator><name pos:start="493:15" pos:end="493:23">pict_type</name></name> <operator pos:start="493:25" pos:end="493:26">==</operator> <name pos:start="493:28" pos:end="493:44">AV_PICTURE_TYPE_P</name> <operator pos:start="493:46" pos:end="493:47">&amp;&amp;</operator> <name pos:start="493:49" pos:end="493:55"><name pos:start="493:49" pos:end="493:49">s</name><operator pos:start="493:50" pos:end="493:51">-&gt;</operator><name pos:start="493:52" pos:end="493:55">mb_x</name></name><operator pos:start="493:56" pos:end="493:56">+</operator><literal type="number" pos:start="493:57" pos:end="493:57">1</literal><operator pos:start="493:58" pos:end="493:58">&lt;</operator><name pos:start="493:59" pos:end="493:69"><name pos:start="493:59" pos:end="493:59">s</name><operator pos:start="493:60" pos:end="493:61">-&gt;</operator><name pos:start="493:62" pos:end="493:69">mb_width</name></name> <operator pos:start="493:71" pos:end="493:72">&amp;&amp;</operator> <name pos:start="493:74" pos:end="493:87"><name pos:start="493:74" pos:end="493:74">s</name><operator pos:start="493:75" pos:end="493:76">-&gt;</operator><name pos:start="493:77" pos:end="493:87">mb_num_left</name></name> <operator pos:start="493:89" pos:end="493:90">!=</operator> <literal type="number" pos:start="493:92" pos:end="493:92">1</literal></expr>)</condition><block type="pseudo" pos:start="495:13" pos:end="495:28"><block_content pos:start="495:13" pos:end="495:28">

            <expr_stmt pos:start="495:13" pos:end="495:28"><expr pos:start="495:13" pos:end="495:27"><call pos:start="495:13" pos:end="495:27"><name pos:start="495:13" pos:end="495:24">preview_obmc</name><argument_list pos:start="495:25" pos:end="495:27">(<argument pos:start="495:26" pos:end="495:26"><expr pos:start="495:26" pos:end="495:26"><name pos:start="495:26" pos:end="495:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="499:1" pos:end="499:4"><name pos:start="499:1" pos:end="499:3">end</name>:</label>



        <comment type="block" pos:start="503:9" pos:end="503:39">/* per-MB end of slice check */</comment>

    <block pos:start="505:5" pos:end="523:5">{<block_content pos:start="507:9" pos:end="521:29">

        <decl_stmt pos:start="507:9" pos:end="507:37"><decl pos:start="507:9" pos:end="507:36"><type pos:start="507:9" pos:end="507:11"><name pos:start="507:9" pos:end="507:11">int</name></type> <name pos:start="507:13" pos:end="507:13">v</name><init pos:start="507:14" pos:end="507:36">= <expr pos:start="507:16" pos:end="507:36"><call pos:start="507:16" pos:end="507:36"><name pos:start="507:16" pos:end="507:24">show_bits</name><argument_list pos:start="507:25" pos:end="507:36">(<argument pos:start="507:26" pos:end="507:31"><expr pos:start="507:26" pos:end="507:31"><operator pos:start="507:26" pos:end="507:26">&amp;</operator><name pos:start="507:27" pos:end="507:31"><name pos:start="507:27" pos:end="507:27">s</name><operator pos:start="507:28" pos:end="507:29">-&gt;</operator><name pos:start="507:30" pos:end="507:31">gb</name></name></expr></argument>, <argument pos:start="507:34" pos:end="507:35"><expr pos:start="507:34" pos:end="507:35"><literal type="number" pos:start="507:34" pos:end="507:35">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="511:9" pos:end="515:9"><if pos:start="511:9" pos:end="515:9">if <condition pos:start="511:12" pos:end="511:39">(<expr pos:start="511:13" pos:end="511:38"><call pos:start="511:13" pos:end="511:33"><name pos:start="511:13" pos:end="511:25">get_bits_left</name><argument_list pos:start="511:26" pos:end="511:33">(<argument pos:start="511:27" pos:end="511:32"><expr pos:start="511:27" pos:end="511:32"><operator pos:start="511:27" pos:end="511:27">&amp;</operator><name pos:start="511:28" pos:end="511:32"><name pos:start="511:28" pos:end="511:28">s</name><operator pos:start="511:29" pos:end="511:30">-&gt;</operator><name pos:start="511:31" pos:end="511:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="511:35" pos:end="511:35">&lt;</operator> <literal type="number" pos:start="511:37" pos:end="511:38">16</literal></expr>)</condition> <block pos:start="511:41" pos:end="515:9">{<block_content pos:start="513:13" pos:end="513:45">

            <expr_stmt pos:start="513:13" pos:end="513:45"><expr pos:start="513:13" pos:end="513:44"><name pos:start="513:13" pos:end="513:13">v</name> <operator pos:start="513:15" pos:end="513:17">&gt;&gt;=</operator> <literal type="number" pos:start="513:19" pos:end="513:22">16</literal> <operator pos:start="513:22" pos:end="513:22">-</operator> <call pos:start="513:24" pos:end="513:44"><name pos:start="513:24" pos:end="513:36">get_bits_left</name><argument_list pos:start="513:37" pos:end="513:44">(<argument pos:start="513:38" pos:end="513:43"><expr pos:start="513:38" pos:end="513:43"><operator pos:start="513:38" pos:end="513:38">&amp;</operator><name pos:start="513:39" pos:end="513:43"><name pos:start="513:39" pos:end="513:39">s</name><operator pos:start="513:40" pos:end="513:41">-&gt;</operator><name pos:start="513:42" pos:end="513:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="519:9" pos:end="521:29"><if pos:start="519:9" pos:end="521:29">if<condition pos:start="519:11" pos:end="519:16">(<expr pos:start="519:12" pos:end="519:15"><name pos:start="519:12" pos:end="519:12">v</name><operator pos:start="519:13" pos:end="519:14">==</operator><literal type="number" pos:start="519:15" pos:end="519:15">0</literal></expr>)</condition><block type="pseudo" pos:start="521:13" pos:end="521:29"><block_content pos:start="521:13" pos:end="521:29">

            <return pos:start="521:13" pos:end="521:29">return <expr pos:start="521:20" pos:end="521:28"><name pos:start="521:20" pos:end="521:28">SLICE_END</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block>



    <return pos:start="527:5" pos:end="527:20">return <expr pos:start="527:12" pos:end="527:19"><name pos:start="527:12" pos:end="527:19">SLICE_OK</name></expr>;</return>

</block_content>}</block></function></unit>
