<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7983.c" pos:tabs="8"><function pos:start="1:1" pos:end="289:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">main_loop</name><parameter_list pos:start="1:21" pos:end="1:26">(<parameter pos:start="1:22" pos:end="1:25"><decl pos:start="1:22" pos:end="1:25"><type pos:start="1:22" pos:end="1:25"><name pos:start="1:22" pos:end="1:25">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="289:1">{<block_content pos:start="5:5" pos:end="287:15">

    <decl_stmt pos:start="5:5" pos:end="8:0"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:20">timeout</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="7:1" pos:end="7:22">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:22">CONFIG_PROFILER</name></cpp:ifdef>

    <decl_stmt pos:start="9:5" pos:end="12:0"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:14">ti</name></decl>;</decl_stmt>

<cpp:endif pos:start="11:1" pos:end="11:6">#<cpp:directive pos:start="11:2" pos:end="11:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">CPUState</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:17">env</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:11">cur_cpu</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:23">first_cpu</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:12">next_cpu</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <ternary pos:start="19:16" pos:end="19:45"><condition pos:start="19:16" pos:end="19:34"><expr pos:start="19:16" pos:end="19:32"><name pos:start="19:16" pos:end="19:32"><name pos:start="19:16" pos:end="19:22">cur_cpu</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:32">next_cpu</name></name></expr> ?</condition><then/><else pos:start="19:35" pos:end="19:45">: <expr pos:start="19:37" pos:end="19:45"><name pos:start="19:37" pos:end="19:45">first_cpu</name></expr></else></ternary></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="283:5">for<control pos:start="21:8" pos:end="21:11">(<init pos:start="21:9" pos:end="21:9">;</init><condition pos:start="21:10" pos:end="21:10">;</condition><incr/>)</control> <block pos:start="21:13" pos:end="283:5">{<block_content pos:start="23:9" pos:end="282:0">

        <if_stmt pos:start="23:9" pos:end="270:0"><if pos:start="23:9" pos:end="259:9">if <condition pos:start="23:12" pos:end="23:23">(<expr pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:22">vm_running</name></expr>)</condition> <block pos:start="23:25" pos:end="259:9">{<block_content pos:start="27:13" pos:end="257:13">



            <for pos:start="27:13" pos:end="125:13">for<control pos:start="27:16" pos:end="27:19">(<init pos:start="27:17" pos:end="27:17">;</init><condition pos:start="27:18" pos:end="27:18">;</condition><incr/>)</control> <block pos:start="27:21" pos:end="125:13">{<block_content pos:start="31:17" pos:end="123:26">

                <comment type="block" pos:start="29:17" pos:end="29:34">/* get next cpu */</comment>

                <expr_stmt pos:start="31:17" pos:end="34:0"><expr pos:start="31:17" pos:end="31:30"><name pos:start="31:17" pos:end="31:19">env</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:30">next_cpu</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="33:1" pos:end="33:22">#<cpp:directive pos:start="33:2" pos:end="33:6">ifdef</cpp:directive> <name pos:start="33:8" pos:end="33:22">CONFIG_PROFILER</name></cpp:ifdef>

                <expr_stmt pos:start="35:17" pos:end="38:0"><expr pos:start="35:17" pos:end="35:39"><name pos:start="35:17" pos:end="35:18">ti</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <call pos:start="35:22" pos:end="35:39"><name pos:start="35:22" pos:end="35:37">profile_getclock</name><argument_list pos:start="35:38" pos:end="35:39">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

                <if_stmt pos:start="39:17" pos:end="67:17"><if pos:start="39:17" pos:end="67:17">if <condition pos:start="39:20" pos:end="39:31">(<expr pos:start="39:21" pos:end="39:30"><name pos:start="39:21" pos:end="39:30">use_icount</name></expr>)</condition> <block pos:start="39:33" pos:end="67:17">{<block_content pos:start="41:21" pos:end="65:46">

                    <decl_stmt pos:start="41:21" pos:end="41:34"><decl pos:start="41:21" pos:end="41:33"><type pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:27">int64_t</name></type> <name pos:start="41:29" pos:end="41:33">count</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="43:21" pos:end="43:29"><decl pos:start="43:21" pos:end="43:28"><type pos:start="43:21" pos:end="43:23"><name pos:start="43:21" pos:end="43:23">int</name></type> <name pos:start="43:25" pos:end="43:28">decr</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="45:21" pos:end="45:82"><expr pos:start="45:21" pos:end="45:81"><name pos:start="45:21" pos:end="45:31">qemu_icount</name> <operator pos:start="45:33" pos:end="45:34">-=</operator> <operator pos:start="45:36" pos:end="45:36">(</operator><name pos:start="45:37" pos:end="45:60"><name pos:start="45:37" pos:end="45:39">env</name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:52">icount_decr</name><operator pos:start="45:53" pos:end="45:53">.</operator><name pos:start="45:54" pos:end="45:56">u16</name><operator pos:start="45:57" pos:end="45:57">.</operator><name pos:start="45:58" pos:end="45:60">low</name></name> <operator pos:start="45:62" pos:end="45:62">+</operator> <name pos:start="45:64" pos:end="45:80"><name pos:start="45:64" pos:end="45:66">env</name><operator pos:start="45:67" pos:end="45:68">-&gt;</operator><name pos:start="45:69" pos:end="45:80">icount_extra</name></name><operator pos:start="45:81" pos:end="45:81">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="47:21" pos:end="47:49"><expr pos:start="47:21" pos:end="47:48"><name pos:start="47:21" pos:end="47:44"><name pos:start="47:21" pos:end="47:23">env</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:36">icount_decr</name><operator pos:start="47:37" pos:end="47:37">.</operator><name pos:start="47:38" pos:end="47:40">u16</name><operator pos:start="47:41" pos:end="47:41">.</operator><name pos:start="47:42" pos:end="47:44">low</name></name> <operator pos:start="47:46" pos:end="47:46">=</operator> <literal type="number" pos:start="47:48" pos:end="47:48">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:42"><expr pos:start="49:21" pos:end="49:41"><name pos:start="49:21" pos:end="49:37"><name pos:start="49:21" pos:end="49:23">env</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:37">icount_extra</name></name> <operator pos:start="49:39" pos:end="49:39">=</operator> <literal type="number" pos:start="49:41" pos:end="49:41">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="51:21" pos:end="51:49"><expr pos:start="51:21" pos:end="51:48"><name pos:start="51:21" pos:end="51:25">count</name> <operator pos:start="51:27" pos:end="51:27">=</operator> <call pos:start="51:29" pos:end="51:48"><name pos:start="51:29" pos:end="51:46">qemu_next_deadline</name><argument_list pos:start="51:47" pos:end="51:48">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="53:21" pos:end="55:49"><expr pos:start="53:21" pos:end="55:48"><name pos:start="53:21" pos:end="53:25">count</name> <operator pos:start="53:27" pos:end="53:27">=</operator> <operator pos:start="53:29" pos:end="53:29">(</operator><name pos:start="53:30" pos:end="53:34">count</name> <operator pos:start="53:36" pos:end="53:36">+</operator> <operator pos:start="53:38" pos:end="53:38">(</operator><literal type="number" pos:start="53:39" pos:end="53:39">1</literal> <operator pos:start="53:41" pos:end="53:42">&lt;&lt;</operator> <name pos:start="53:44" pos:end="53:60">icount_time_shift</name><operator pos:start="53:61" pos:end="53:61">)</operator> <operator pos:start="53:63" pos:end="53:63">-</operator> <literal type="number" pos:start="53:65" pos:end="53:65">1</literal><operator pos:start="53:66" pos:end="53:66">)</operator>

                            <operator pos:start="55:29" pos:end="55:30">&gt;&gt;</operator> <name pos:start="55:32" pos:end="55:48">icount_time_shift</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:41"><expr pos:start="57:21" pos:end="57:40"><name pos:start="57:21" pos:end="57:31">qemu_icount</name> <operator pos:start="57:33" pos:end="57:34">+=</operator> <name pos:start="57:36" pos:end="57:40">count</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:61"><expr pos:start="59:21" pos:end="59:60"><name pos:start="59:21" pos:end="59:24">decr</name> <operator pos:start="59:26" pos:end="59:26">=</operator> <ternary pos:start="59:28" pos:end="59:60"><condition pos:start="59:28" pos:end="59:45"><expr pos:start="59:28" pos:end="59:43"><operator pos:start="59:28" pos:end="59:28">(</operator><name pos:start="59:29" pos:end="59:33">count</name> <operator pos:start="59:35" pos:end="59:35">&gt;</operator> <literal type="number" pos:start="59:37" pos:end="59:42">0xffff</literal><operator pos:start="59:43" pos:end="59:43">)</operator></expr> ?</condition><then pos:start="59:47" pos:end="59:52"> <expr pos:start="59:47" pos:end="59:52"><literal type="number" pos:start="59:47" pos:end="59:52">0xffff</literal></expr> </then><else pos:start="59:54" pos:end="59:60">: <expr pos:start="59:56" pos:end="59:60"><name pos:start="59:56" pos:end="59:60">count</name></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="61:21" pos:end="61:34"><expr pos:start="61:21" pos:end="61:33"><name pos:start="61:21" pos:end="61:25">count</name> <operator pos:start="61:27" pos:end="61:28">-=</operator> <name pos:start="61:30" pos:end="61:33">decr</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="63:21" pos:end="63:52"><expr pos:start="63:21" pos:end="63:51"><name pos:start="63:21" pos:end="63:44"><name pos:start="63:21" pos:end="63:23">env</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:36">icount_decr</name><operator pos:start="63:37" pos:end="63:37">.</operator><name pos:start="63:38" pos:end="63:40">u16</name><operator pos:start="63:41" pos:end="63:41">.</operator><name pos:start="63:42" pos:end="63:44">low</name></name> <operator pos:start="63:46" pos:end="63:46">=</operator> <name pos:start="63:48" pos:end="63:51">decr</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:46"><expr pos:start="65:21" pos:end="65:45"><name pos:start="65:21" pos:end="65:37"><name pos:start="65:21" pos:end="65:23">env</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:37">icount_extra</name></name> <operator pos:start="65:39" pos:end="65:39">=</operator> <name pos:start="65:41" pos:end="65:45">count</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="69:17" pos:end="72:0"><expr pos:start="69:17" pos:end="69:35"><name pos:start="69:17" pos:end="69:19">ret</name> <operator pos:start="69:21" pos:end="69:21">=</operator> <call pos:start="69:23" pos:end="69:35"><name pos:start="69:23" pos:end="69:30">cpu_exec</name><argument_list pos:start="69:31" pos:end="69:35">(<argument pos:start="69:32" pos:end="69:34"><expr pos:start="69:32" pos:end="69:34"><name pos:start="69:32" pos:end="69:34">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="71:1" pos:end="71:22">#<cpp:directive pos:start="71:2" pos:end="71:6">ifdef</cpp:directive> <name pos:start="71:8" pos:end="71:22">CONFIG_PROFILER</name></cpp:ifdef>

                <expr_stmt pos:start="73:17" pos:end="76:0"><expr pos:start="73:17" pos:end="73:52"><name pos:start="73:17" pos:end="73:25">qemu_time</name> <operator pos:start="73:27" pos:end="73:28">+=</operator> <call pos:start="73:30" pos:end="73:47"><name pos:start="73:30" pos:end="73:45">profile_getclock</name><argument_list pos:start="73:46" pos:end="73:47">()</argument_list></call> <operator pos:start="73:49" pos:end="73:49">-</operator> <name pos:start="73:51" pos:end="73:52">ti</name></expr>;</expr_stmt>

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>

                <if_stmt pos:start="77:17" pos:end="91:17"><if pos:start="77:17" pos:end="91:17">if <condition pos:start="77:20" pos:end="77:31">(<expr pos:start="77:21" pos:end="77:30"><name pos:start="77:21" pos:end="77:30">use_icount</name></expr>)</condition> <block pos:start="77:33" pos:end="91:17">{<block_content pos:start="83:21" pos:end="89:42">

                    <comment type="block" pos:start="79:21" pos:end="81:77">/* Fold pending instructions back into the

                       instruction counter, and clear the interrupt flag.  */</comment>

                    <expr_stmt pos:start="83:21" pos:end="85:57"><expr pos:start="83:21" pos:end="85:56"><name pos:start="83:21" pos:end="83:31">qemu_icount</name> <operator pos:start="83:33" pos:end="83:34">-=</operator> <operator pos:start="83:36" pos:end="83:36">(</operator><name pos:start="83:37" pos:end="83:60"><name pos:start="83:37" pos:end="83:39">env</name><operator pos:start="83:40" pos:end="83:41">-&gt;</operator><name pos:start="83:42" pos:end="83:52">icount_decr</name><operator pos:start="83:53" pos:end="83:53">.</operator><name pos:start="83:54" pos:end="83:56">u16</name><operator pos:start="83:57" pos:end="83:57">.</operator><name pos:start="83:58" pos:end="83:60">low</name></name>

                                    <operator pos:start="85:37" pos:end="85:37">+</operator> <name pos:start="85:39" pos:end="85:55"><name pos:start="85:39" pos:end="85:41">env</name><operator pos:start="85:42" pos:end="85:43">-&gt;</operator><name pos:start="85:44" pos:end="85:55">icount_extra</name></name><operator pos:start="85:56" pos:end="85:56">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:45"><expr pos:start="87:21" pos:end="87:44"><name pos:start="87:21" pos:end="87:40"><name pos:start="87:21" pos:end="87:23">env</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:36">icount_decr</name><operator pos:start="87:37" pos:end="87:37">.</operator><name pos:start="87:38" pos:end="87:40">u32</name></name> <operator pos:start="87:42" pos:end="87:42">=</operator> <literal type="number" pos:start="87:44" pos:end="87:44">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:42"><expr pos:start="89:21" pos:end="89:41"><name pos:start="89:21" pos:end="89:37"><name pos:start="89:21" pos:end="89:23">env</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:37">icount_extra</name></name> <operator pos:start="89:39" pos:end="89:39">=</operator> <literal type="number" pos:start="89:41" pos:end="89:41">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:54"><expr pos:start="93:17" pos:end="93:53"><name pos:start="93:17" pos:end="93:24">next_cpu</name> <operator pos:start="93:26" pos:end="93:26">=</operator> <ternary pos:start="93:28" pos:end="93:53"><condition pos:start="93:28" pos:end="93:42"><expr pos:start="93:28" pos:end="93:40"><name pos:start="93:28" pos:end="93:40"><name pos:start="93:28" pos:end="93:30">env</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:40">next_cpu</name></name></expr> ?</condition><then/><else pos:start="93:43" pos:end="93:53">: <expr pos:start="93:45" pos:end="93:53"><name pos:start="93:45" pos:end="93:53">first_cpu</name></expr></else></ternary></expr>;</expr_stmt>

                <if_stmt pos:start="95:17" pos:end="103:17"><if pos:start="95:17" pos:end="103:17">if <condition pos:start="95:20" pos:end="95:63">(<expr pos:start="95:21" pos:end="95:62"><name pos:start="95:21" pos:end="95:33">event_pending</name> <operator pos:start="95:35" pos:end="95:36">&amp;&amp;</operator> <call pos:start="95:38" pos:end="95:62"><name pos:start="95:38" pos:end="95:43">likely</name><argument_list pos:start="95:44" pos:end="95:62">(<argument pos:start="95:45" pos:end="95:61"><expr pos:start="95:45" pos:end="95:61"><name pos:start="95:45" pos:end="95:47">ret</name> <operator pos:start="95:49" pos:end="95:50">!=</operator> <name pos:start="95:52" pos:end="95:61">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:65" pos:end="103:17">{<block_content pos:start="97:21" pos:end="101:26">

                    <expr_stmt pos:start="97:21" pos:end="97:41"><expr pos:start="97:21" pos:end="97:40"><name pos:start="97:21" pos:end="97:23">ret</name> <operator pos:start="97:25" pos:end="97:25">=</operator> <name pos:start="97:27" pos:end="97:40">EXCP_INTERRUPT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="99:38"><expr pos:start="99:21" pos:end="99:37"><name pos:start="99:21" pos:end="99:33">event_pending</name> <operator pos:start="99:35" pos:end="99:35">=</operator> <literal type="number" pos:start="99:37" pos:end="99:37">0</literal></expr>;</expr_stmt>

                    <break pos:start="101:21" pos:end="101:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="105:17" pos:end="113:17"><if pos:start="105:17" pos:end="113:17">if <condition pos:start="105:20" pos:end="105:36">(<expr pos:start="105:21" pos:end="105:35"><name pos:start="105:21" pos:end="105:23">ret</name> <operator pos:start="105:25" pos:end="105:26">==</operator> <name pos:start="105:28" pos:end="105:35">EXCP_HLT</name></expr>)</condition> <block pos:start="105:38" pos:end="113:17">{<block_content pos:start="109:21" pos:end="111:29">

                    <comment type="block" pos:start="107:21" pos:end="107:61">/* Give the next CPU a chance to run.  */</comment>

                    <expr_stmt pos:start="109:21" pos:end="109:34"><expr pos:start="109:21" pos:end="109:33"><name pos:start="109:21" pos:end="109:27">cur_cpu</name> <operator pos:start="109:29" pos:end="109:29">=</operator> <name pos:start="109:31" pos:end="109:33">env</name></expr>;</expr_stmt>

                    <continue pos:start="111:21" pos:end="111:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="115:17" pos:end="117:26"><if pos:start="115:17" pos:end="117:26">if <condition pos:start="115:20" pos:end="115:39">(<expr pos:start="115:21" pos:end="115:38"><name pos:start="115:21" pos:end="115:23">ret</name> <operator pos:start="115:25" pos:end="115:26">!=</operator> <name pos:start="115:28" pos:end="115:38">EXCP_HALTED</name></expr>)</condition><block type="pseudo" pos:start="117:21" pos:end="117:26"><block_content pos:start="117:21" pos:end="117:26">

                    <break pos:start="117:21" pos:end="117:26">break;</break></block_content></block></if></if_stmt>

                <comment type="block" pos:start="119:17" pos:end="119:43">/* all CPUs are halted ? */</comment>

                <if_stmt pos:start="121:17" pos:end="123:26"><if pos:start="121:17" pos:end="123:26">if <condition pos:start="121:20" pos:end="121:35">(<expr pos:start="121:21" pos:end="121:34"><name pos:start="121:21" pos:end="121:23">env</name> <operator pos:start="121:25" pos:end="121:26">==</operator> <name pos:start="121:28" pos:end="121:34">cur_cpu</name></expr>)</condition><block type="pseudo" pos:start="123:21" pos:end="123:26"><block_content pos:start="123:21" pos:end="123:26">

                    <break pos:start="123:21" pos:end="123:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="127:13" pos:end="127:26"><expr pos:start="127:13" pos:end="127:25"><name pos:start="127:13" pos:end="127:19">cur_cpu</name> <operator pos:start="127:21" pos:end="127:21">=</operator> <name pos:start="127:23" pos:end="127:25">env</name></expr>;</expr_stmt>



            <if_stmt pos:start="131:13" pos:end="147:13"><if pos:start="131:13" pos:end="147:13">if <condition pos:start="131:16" pos:end="131:35">(<expr pos:start="131:17" pos:end="131:34"><name pos:start="131:17" pos:end="131:34">shutdown_requested</name></expr>)</condition> <block pos:start="131:37" pos:end="147:13">{<block_content pos:start="133:17" pos:end="145:26">

                <expr_stmt pos:start="133:17" pos:end="133:37"><expr pos:start="133:17" pos:end="133:36"><name pos:start="133:17" pos:end="133:19">ret</name> <operator pos:start="133:21" pos:end="133:21">=</operator> <name pos:start="133:23" pos:end="133:36">EXCP_INTERRUPT</name></expr>;</expr_stmt>

                <if_stmt pos:start="135:17" pos:end="145:26"><if pos:start="135:17" pos:end="141:17">if <condition pos:start="135:20" pos:end="135:32">(<expr pos:start="135:21" pos:end="135:31"><name pos:start="135:21" pos:end="135:31">no_shutdown</name></expr>)</condition> <block pos:start="135:34" pos:end="141:17">{<block_content pos:start="137:21" pos:end="139:36">

                    <expr_stmt pos:start="137:21" pos:end="137:31"><expr pos:start="137:21" pos:end="137:30"><call pos:start="137:21" pos:end="137:30"><name pos:start="137:21" pos:end="137:27">vm_stop</name><argument_list pos:start="137:28" pos:end="137:30">(<argument pos:start="137:29" pos:end="137:29"><expr pos:start="137:29" pos:end="137:29"><literal type="number" pos:start="137:29" pos:end="137:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="139:21" pos:end="139:36"><expr pos:start="139:21" pos:end="139:35"><name pos:start="139:21" pos:end="139:31">no_shutdown</name> <operator pos:start="139:33" pos:end="139:33">=</operator> <literal type="number" pos:start="139:35" pos:end="139:35">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if>

                <else pos:start="143:17" pos:end="145:26">else<block type="pseudo" pos:start="145:21" pos:end="145:26"><block_content pos:start="145:21" pos:end="145:26">

                    <break pos:start="145:21" pos:end="145:26">break;</break></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="149:13" pos:end="157:13"><if pos:start="149:13" pos:end="157:13">if <condition pos:start="149:16" pos:end="149:32">(<expr pos:start="149:17" pos:end="149:31"><name pos:start="149:17" pos:end="149:31">reset_requested</name></expr>)</condition> <block pos:start="149:34" pos:end="157:13">{<block_content pos:start="151:17" pos:end="155:37">

                <expr_stmt pos:start="151:17" pos:end="151:36"><expr pos:start="151:17" pos:end="151:35"><name pos:start="151:17" pos:end="151:31">reset_requested</name> <operator pos:start="151:33" pos:end="151:33">=</operator> <literal type="number" pos:start="151:35" pos:end="151:35">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:36"><expr pos:start="153:17" pos:end="153:35"><call pos:start="153:17" pos:end="153:35"><name pos:start="153:17" pos:end="153:33">qemu_system_reset</name><argument_list pos:start="153:34" pos:end="153:35">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:37"><expr pos:start="155:17" pos:end="155:36"><name pos:start="155:17" pos:end="155:19">ret</name> <operator pos:start="155:21" pos:end="155:21">=</operator> <name pos:start="155:23" pos:end="155:36">EXCP_INTERRUPT</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="159:13" pos:end="167:13"><if pos:start="159:13" pos:end="167:13">if <condition pos:start="159:16" pos:end="159:36">(<expr pos:start="159:17" pos:end="159:35"><name pos:start="159:17" pos:end="159:35">powerdown_requested</name></expr>)</condition> <block pos:start="159:38" pos:end="167:13">{<block_content pos:start="161:17" pos:end="165:37">

                <expr_stmt pos:start="161:17" pos:end="161:40"><expr pos:start="161:17" pos:end="161:39"><name pos:start="161:17" pos:end="161:35">powerdown_requested</name> <operator pos:start="161:37" pos:end="161:37">=</operator> <literal type="number" pos:start="161:39" pos:end="161:39">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="163:17" pos:end="163:40"><expr pos:start="163:17" pos:end="163:39"><call pos:start="163:17" pos:end="163:39"><name pos:start="163:17" pos:end="163:37">qemu_system_powerdown</name><argument_list pos:start="163:38" pos:end="163:39">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:37"><expr pos:start="165:17" pos:end="165:36"><name pos:start="165:17" pos:end="165:19">ret</name> <operator pos:start="165:21" pos:end="165:21">=</operator> <name pos:start="165:23" pos:end="165:36">EXCP_INTERRUPT</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="169:13" pos:end="173:13"><if pos:start="169:13" pos:end="173:13">if <condition pos:start="169:16" pos:end="169:44">(<expr pos:start="169:17" pos:end="169:43"><call pos:start="169:17" pos:end="169:43"><name pos:start="169:17" pos:end="169:24">unlikely</name><argument_list pos:start="169:25" pos:end="169:43">(<argument pos:start="169:26" pos:end="169:42"><expr pos:start="169:26" pos:end="169:42"><name pos:start="169:26" pos:end="169:28">ret</name> <operator pos:start="169:30" pos:end="169:31">==</operator> <name pos:start="169:33" pos:end="169:42">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="169:46" pos:end="173:13">{<block_content pos:start="171:17" pos:end="171:36">

                <expr_stmt pos:start="171:17" pos:end="171:36"><expr pos:start="171:17" pos:end="171:35"><call pos:start="171:17" pos:end="171:35"><name pos:start="171:17" pos:end="171:23">vm_stop</name><argument_list pos:start="171:24" pos:end="171:35">(<argument pos:start="171:25" pos:end="171:34"><expr pos:start="171:25" pos:end="171:34"><name pos:start="171:25" pos:end="171:34">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="175:13" pos:end="175:69">/* If all cpus are halted then wait until the next IRQ */</comment>

            <comment type="block" pos:start="177:13" pos:end="177:55">/* XXX: use timeout computed from timers */</comment>

            <if_stmt pos:start="179:13" pos:end="257:13"><if pos:start="179:13" pos:end="253:13">if <condition pos:start="179:16" pos:end="179:35">(<expr pos:start="179:17" pos:end="179:34"><name pos:start="179:17" pos:end="179:19">ret</name> <operator pos:start="179:21" pos:end="179:22">==</operator> <name pos:start="179:24" pos:end="179:34">EXCP_HALTED</name></expr>)</condition> <block pos:start="179:37" pos:end="253:13">{<block_content pos:start="181:17" pos:end="251:17">

                <if_stmt pos:start="181:17" pos:end="251:17"><if pos:start="181:17" pos:end="247:17">if <condition pos:start="181:20" pos:end="181:31">(<expr pos:start="181:21" pos:end="181:30"><name pos:start="181:21" pos:end="181:30">use_icount</name></expr>)</condition> <block pos:start="181:33" pos:end="247:17">{<block_content pos:start="183:21" pos:end="245:21">

                    <decl_stmt pos:start="183:21" pos:end="183:32"><decl pos:start="183:21" pos:end="183:31"><type pos:start="183:21" pos:end="183:27"><name pos:start="183:21" pos:end="183:27">int64_t</name></type> <name pos:start="183:29" pos:end="183:31">add</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="185:21" pos:end="185:34"><decl pos:start="185:21" pos:end="185:33"><type pos:start="185:21" pos:end="185:27"><name pos:start="185:21" pos:end="185:27">int64_t</name></type> <name pos:start="185:29" pos:end="185:33">delta</name></decl>;</decl_stmt>

                    <comment type="block" pos:start="187:21" pos:end="187:66">/* Advance virtual time to the next event.  */</comment>

                    <if_stmt pos:start="189:21" pos:end="203:21"><if pos:start="189:21" pos:end="199:21">if <condition pos:start="189:24" pos:end="189:40">(<expr pos:start="189:25" pos:end="189:39"><name pos:start="189:25" pos:end="189:34">use_icount</name> <operator pos:start="189:36" pos:end="189:37">==</operator> <literal type="number" pos:start="189:39" pos:end="189:39">1</literal></expr>)</condition> <block pos:start="189:42" pos:end="199:21">{<block_content pos:start="197:25" pos:end="197:34">

                        <comment type="block" pos:start="191:25" pos:end="195:77">/* When not using an adaptive execution frequency

                           we tend to get badly out of sync with real time,

                           so just delay for a reasonable amount of time.  */</comment>

                        <expr_stmt pos:start="197:25" pos:end="197:34"><expr pos:start="197:25" pos:end="197:33"><name pos:start="197:25" pos:end="197:29">delta</name> <operator pos:start="197:31" pos:end="197:31">=</operator> <literal type="number" pos:start="197:33" pos:end="197:33">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="199:23" pos:end="203:21">else <block pos:start="199:28" pos:end="203:21">{<block_content pos:start="201:25" pos:end="201:67">

                        <expr_stmt pos:start="201:25" pos:end="201:67"><expr pos:start="201:25" pos:end="201:66"><name pos:start="201:25" pos:end="201:29">delta</name> <operator pos:start="201:31" pos:end="201:31">=</operator> <call pos:start="201:33" pos:end="201:48"><name pos:start="201:33" pos:end="201:46">cpu_get_icount</name><argument_list pos:start="201:47" pos:end="201:48">()</argument_list></call> <operator pos:start="201:50" pos:end="201:50">-</operator> <call pos:start="201:52" pos:end="201:66"><name pos:start="201:52" pos:end="201:64">cpu_get_clock</name><argument_list pos:start="201:65" pos:end="201:66">()</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="205:21" pos:end="245:21"><if pos:start="205:21" pos:end="213:21">if <condition pos:start="205:24" pos:end="205:34">(<expr pos:start="205:25" pos:end="205:33"><name pos:start="205:25" pos:end="205:29">delta</name> <operator pos:start="205:31" pos:end="205:31">&gt;</operator> <literal type="number" pos:start="205:33" pos:end="205:33">0</literal></expr>)</condition> <block pos:start="205:36" pos:end="213:21">{<block_content pos:start="211:25" pos:end="211:56">

                        <comment type="block" pos:start="207:25" pos:end="209:43">/* If virtual time is ahead of real time then just

                           wait for IO.  */</comment>

                        <expr_stmt pos:start="211:25" pos:end="211:56"><expr pos:start="211:25" pos:end="211:55"><name pos:start="211:25" pos:end="211:31">timeout</name> <operator pos:start="211:33" pos:end="211:33">=</operator> <operator pos:start="211:35" pos:end="211:35">(</operator><name pos:start="211:36" pos:end="211:40">delta</name> <operator pos:start="211:42" pos:end="211:42">/</operator> <literal type="number" pos:start="211:44" pos:end="211:50">1000000</literal><operator pos:start="211:51" pos:end="211:51">)</operator> <operator pos:start="211:53" pos:end="211:53">+</operator> <literal type="number" pos:start="211:55" pos:end="211:55">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="213:23" pos:end="245:21">else <block pos:start="213:28" pos:end="245:21">{<block_content pos:start="219:25" pos:end="243:40">

                        <comment type="block" pos:start="215:25" pos:end="217:43">/* Wait for either IO to occur or the next

                           timer event.  */</comment>

                        <expr_stmt pos:start="219:25" pos:end="219:51"><expr pos:start="219:25" pos:end="219:50"><name pos:start="219:25" pos:end="219:27">add</name> <operator pos:start="219:29" pos:end="219:29">=</operator> <call pos:start="219:31" pos:end="219:50"><name pos:start="219:31" pos:end="219:48">qemu_next_deadline</name><argument_list pos:start="219:49" pos:end="219:50">()</argument_list></call></expr>;</expr_stmt>

                        <comment type="block" pos:start="221:25" pos:end="225:74">/* We advance the timer before checking for IO.

                           Limit the amount we advance so that early IO

                           activity won't get the guest too far ahead.  */</comment>

                        <if_stmt pos:start="227:25" pos:end="229:43"><if pos:start="227:25" pos:end="229:43">if <condition pos:start="227:28" pos:end="227:43">(<expr pos:start="227:29" pos:end="227:42"><name pos:start="227:29" pos:end="227:31">add</name> <operator pos:start="227:33" pos:end="227:33">&gt;</operator> <literal type="number" pos:start="227:35" pos:end="227:42">10000000</literal></expr>)</condition><block type="pseudo" pos:start="229:29" pos:end="229:43"><block_content pos:start="229:29" pos:end="229:43">

                            <expr_stmt pos:start="229:29" pos:end="229:43"><expr pos:start="229:29" pos:end="229:42"><name pos:start="229:29" pos:end="229:31">add</name> <operator pos:start="229:33" pos:end="229:33">=</operator> <literal type="number" pos:start="229:35" pos:end="229:42">10000000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="231:25" pos:end="231:37"><expr pos:start="231:25" pos:end="231:36"><name pos:start="231:25" pos:end="231:29">delta</name> <operator pos:start="231:31" pos:end="231:32">+=</operator> <name pos:start="231:34" pos:end="231:36">add</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="233:25" pos:end="235:51"><expr pos:start="233:25" pos:end="235:50"><name pos:start="233:25" pos:end="233:27">add</name> <operator pos:start="233:29" pos:end="233:29">=</operator> <operator pos:start="233:31" pos:end="233:31">(</operator><name pos:start="233:32" pos:end="233:34">add</name> <operator pos:start="233:36" pos:end="233:36">+</operator> <operator pos:start="233:38" pos:end="233:38">(</operator><literal type="number" pos:start="233:39" pos:end="233:39">1</literal> <operator pos:start="233:41" pos:end="233:42">&lt;&lt;</operator> <name pos:start="233:44" pos:end="233:60">icount_time_shift</name><operator pos:start="233:61" pos:end="233:61">)</operator> <operator pos:start="233:63" pos:end="233:63">-</operator> <literal type="number" pos:start="233:65" pos:end="233:65">1</literal><operator pos:start="233:66" pos:end="233:66">)</operator>

                              <operator pos:start="235:31" pos:end="235:32">&gt;&gt;</operator> <name pos:start="235:34" pos:end="235:50">icount_time_shift</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="237:25" pos:end="237:43"><expr pos:start="237:25" pos:end="237:42"><name pos:start="237:25" pos:end="237:35">qemu_icount</name> <operator pos:start="237:37" pos:end="237:38">+=</operator> <name pos:start="237:40" pos:end="237:42">add</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="239:25" pos:end="239:50"><expr pos:start="239:25" pos:end="239:49"><name pos:start="239:25" pos:end="239:31">timeout</name> <operator pos:start="239:33" pos:end="239:33">=</operator> <name pos:start="239:35" pos:end="239:39">delta</name> <operator pos:start="239:41" pos:end="239:41">/</operator> <literal type="number" pos:start="239:43" pos:end="239:49">1000000</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="241:25" pos:end="243:40"><if pos:start="241:25" pos:end="243:40">if <condition pos:start="241:28" pos:end="241:40">(<expr pos:start="241:29" pos:end="241:39"><name pos:start="241:29" pos:end="241:35">timeout</name> <operator pos:start="241:37" pos:end="241:37">&lt;</operator> <literal type="number" pos:start="241:39" pos:end="241:39">0</literal></expr>)</condition><block type="pseudo" pos:start="243:29" pos:end="243:40"><block_content pos:start="243:29" pos:end="243:40">

                            <expr_stmt pos:start="243:29" pos:end="243:40"><expr pos:start="243:29" pos:end="243:39"><name pos:start="243:29" pos:end="243:35">timeout</name> <operator pos:start="243:37" pos:end="243:37">=</operator> <literal type="number" pos:start="243:39" pos:end="243:39">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="247:19" pos:end="251:17">else <block pos:start="247:24" pos:end="251:17">{<block_content pos:start="249:21" pos:end="249:33">

                    <expr_stmt pos:start="249:21" pos:end="249:33"><expr pos:start="249:21" pos:end="249:32"><name pos:start="249:21" pos:end="249:27">timeout</name> <operator pos:start="249:29" pos:end="249:29">=</operator> <literal type="number" pos:start="249:31" pos:end="249:32">10</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="253:15" pos:end="257:13">else <block pos:start="253:20" pos:end="257:13">{<block_content pos:start="255:17" pos:end="255:28">

                <expr_stmt pos:start="255:17" pos:end="255:28"><expr pos:start="255:17" pos:end="255:27"><name pos:start="255:17" pos:end="255:23">timeout</name> <operator pos:start="255:25" pos:end="255:25">=</operator> <literal type="number" pos:start="255:27" pos:end="255:27">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="259:11" pos:end="270:0">else <block pos:start="259:16" pos:end="270:0">{<block_content pos:start="261:13" pos:end="265:25">

            <if_stmt pos:start="261:13" pos:end="263:22"><if pos:start="261:13" pos:end="263:22">if <condition pos:start="261:16" pos:end="261:35">(<expr pos:start="261:17" pos:end="261:34"><name pos:start="261:17" pos:end="261:34">shutdown_requested</name></expr>)</condition><block type="pseudo" pos:start="263:17" pos:end="263:22"><block_content pos:start="263:17" pos:end="263:22">

                <break pos:start="263:17" pos:end="263:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:25"><expr pos:start="265:13" pos:end="265:24"><name pos:start="265:13" pos:end="265:19">timeout</name> <operator pos:start="265:21" pos:end="265:21">=</operator> <literal type="number" pos:start="265:23" pos:end="265:24">10</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

<cpp:ifdef pos:start="269:1" pos:end="269:22">#<cpp:directive pos:start="269:2" pos:end="269:6">ifdef</cpp:directive> <name pos:start="269:8" pos:end="269:22">CONFIG_PROFILER</name></cpp:ifdef>

        <expr_stmt pos:start="271:9" pos:end="274:0"><expr pos:start="271:9" pos:end="271:31"><name pos:start="271:9" pos:end="271:10">ti</name> <operator pos:start="271:12" pos:end="271:12">=</operator> <call pos:start="271:14" pos:end="271:31"><name pos:start="271:14" pos:end="271:29">profile_getclock</name><argument_list pos:start="271:30" pos:end="271:31">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="273:1" pos:end="273:6">#<cpp:directive pos:start="273:2" pos:end="273:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="275:9" pos:end="278:0"><expr pos:start="275:9" pos:end="275:31"><call pos:start="275:9" pos:end="275:31"><name pos:start="275:9" pos:end="275:22">main_loop_wait</name><argument_list pos:start="275:23" pos:end="275:31">(<argument pos:start="275:24" pos:end="275:30"><expr pos:start="275:24" pos:end="275:30"><name pos:start="275:24" pos:end="275:30">timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="277:1" pos:end="277:22">#<cpp:directive pos:start="277:2" pos:end="277:6">ifdef</cpp:directive> <name pos:start="277:8" pos:end="277:22">CONFIG_PROFILER</name></cpp:ifdef>

        <expr_stmt pos:start="279:9" pos:end="282:0"><expr pos:start="279:9" pos:end="279:43"><name pos:start="279:9" pos:end="279:16">dev_time</name> <operator pos:start="279:18" pos:end="279:19">+=</operator> <call pos:start="279:21" pos:end="279:38"><name pos:start="279:21" pos:end="279:36">profile_getclock</name><argument_list pos:start="279:37" pos:end="279:38">()</argument_list></call> <operator pos:start="279:40" pos:end="279:40">-</operator> <name pos:start="279:42" pos:end="279:43">ti</name></expr>;</expr_stmt>

<cpp:endif pos:start="281:1" pos:end="281:6">#<cpp:directive pos:start="281:2" pos:end="281:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>

    <expr_stmt pos:start="285:5" pos:end="285:24"><expr pos:start="285:5" pos:end="285:23"><call pos:start="285:5" pos:end="285:23"><name pos:start="285:5" pos:end="285:21">cpu_disable_ticks</name><argument_list pos:start="285:22" pos:end="285:23">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="287:5" pos:end="287:15">return <expr pos:start="287:12" pos:end="287:14"><name pos:start="287:12" pos:end="287:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
