<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21993.c" pos:tabs="8"><function pos:start="1:1" pos:end="381:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">decode_extended_mips16_opc</name> <parameter_list pos:start="1:39" pos:end="3:54">(<parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:51">CPUMIPSState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">env</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:75"><decl pos:start="1:59" pos:end="1:75"><type pos:start="1:59" pos:end="1:75"><name pos:start="1:59" pos:end="1:70">DisasContext</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:75">ctx</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:53"><decl pos:start="3:40" pos:end="3:53"><type pos:start="3:40" pos:end="3:53"><name pos:start="3:40" pos:end="3:42">int</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:53">is_branch</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="381:1">{<block_content pos:start="7:5" pos:end="379:13">

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">extend</name> <init pos:start="7:16" pos:end="7:48">= <expr pos:start="7:18" pos:end="7:48"><call pos:start="7:18" pos:end="7:48"><name pos:start="7:18" pos:end="7:30">cpu_lduw_code</name><argument_list pos:start="7:31" pos:end="7:48">(<argument pos:start="7:32" pos:end="7:34"><expr pos:start="7:32" pos:end="7:34"><name pos:start="7:32" pos:end="7:34">env</name></expr></argument>, <argument pos:start="7:37" pos:end="7:47"><expr pos:start="7:37" pos:end="7:47"><name pos:start="7:37" pos:end="7:43"><name pos:start="7:37" pos:end="7:39">ctx</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:43">pc</name></name> <operator pos:start="7:45" pos:end="7:45">+</operator> <literal type="number" pos:start="7:47" pos:end="7:47">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">op</name></decl>, <decl pos:start="9:13" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:14">rx</name></decl>, <decl pos:start="9:17" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:18">ry</name></decl>, <decl pos:start="9:21" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:25">funct</name></decl>, <decl pos:start="9:28" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:29">sa</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int16_t</name></type> <name pos:start="11:13" pos:end="11:15">imm</name></decl>, <decl pos:start="11:18" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:18" pos:end="11:23">offset</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:47"><expr pos:start="15:5" pos:end="15:46"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:7">ctx</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:15">opcode</name></name> <operator pos:start="15:17" pos:end="15:17">=</operator> <operator pos:start="15:19" pos:end="15:19">(</operator><name pos:start="15:20" pos:end="15:30"><name pos:start="15:20" pos:end="15:22">ctx</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:30">opcode</name></name> <operator pos:start="15:32" pos:end="15:33">&lt;&lt;</operator> <literal type="number" pos:start="15:35" pos:end="15:36">16</literal><operator pos:start="15:37" pos:end="15:37">)</operator> <operator pos:start="15:39" pos:end="15:39">|</operator> <name pos:start="15:41" pos:end="15:46">extend</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:6">op</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <operator pos:start="17:10" pos:end="17:10">(</operator><name pos:start="17:11" pos:end="17:21"><name pos:start="17:11" pos:end="17:13">ctx</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:21">opcode</name></name> <operator pos:start="17:23" pos:end="17:24">&gt;&gt;</operator> <literal type="number" pos:start="17:26" pos:end="17:27">11</literal><operator pos:start="17:28" pos:end="17:28">)</operator> <operator pos:start="17:30" pos:end="17:30">&amp;</operator> <literal type="number" pos:start="17:32" pos:end="17:35">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:6">sa</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:21"><name pos:start="19:11" pos:end="19:13">ctx</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:21">opcode</name></name> <operator pos:start="19:23" pos:end="19:24">&gt;&gt;</operator> <literal type="number" pos:start="19:26" pos:end="19:27">22</literal><operator pos:start="19:28" pos:end="19:28">)</operator> <operator pos:start="19:30" pos:end="19:30">&amp;</operator> <literal type="number" pos:start="19:32" pos:end="19:35">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:9">funct</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:24"><name pos:start="21:14" pos:end="21:16">ctx</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:24">opcode</name></name> <operator pos:start="21:26" pos:end="21:27">&gt;&gt;</operator> <literal type="number" pos:start="21:29" pos:end="21:29">8</literal><operator pos:start="21:30" pos:end="21:30">)</operator> <operator pos:start="21:32" pos:end="21:32">&amp;</operator> <literal type="number" pos:start="21:34" pos:end="21:36">0x7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:6">rx</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:39"><name pos:start="23:10" pos:end="23:13">xlat</name><argument_list pos:start="23:14" pos:end="23:39">(<argument pos:start="23:15" pos:end="23:38"><expr pos:start="23:15" pos:end="23:38"><operator pos:start="23:15" pos:end="23:15">(</operator><name pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:18">ctx</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:26">opcode</name></name> <operator pos:start="23:28" pos:end="23:29">&gt;&gt;</operator> <literal type="number" pos:start="23:31" pos:end="23:31">8</literal><operator pos:start="23:32" pos:end="23:32">)</operator> <operator pos:start="23:34" pos:end="23:34">&amp;</operator> <literal type="number" pos:start="23:36" pos:end="23:38">0x7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:40"><expr pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:6">ry</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:39"><name pos:start="25:10" pos:end="25:13">xlat</name><argument_list pos:start="25:14" pos:end="25:39">(<argument pos:start="25:15" pos:end="25:38"><expr pos:start="25:15" pos:end="25:38"><operator pos:start="25:15" pos:end="25:15">(</operator><name pos:start="25:16" pos:end="25:26"><name pos:start="25:16" pos:end="25:18">ctx</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:26">opcode</name></name> <operator pos:start="25:28" pos:end="25:29">&gt;&gt;</operator> <literal type="number" pos:start="25:31" pos:end="25:31">5</literal><operator pos:start="25:32" pos:end="25:32">)</operator> <operator pos:start="25:34" pos:end="25:34">&amp;</operator> <literal type="number" pos:start="25:36" pos:end="25:38">0x7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="31:54"><expr pos:start="27:5" pos:end="31:53"><name pos:start="27:5" pos:end="27:10">offset</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:16">imm</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <operator pos:start="27:20" pos:end="27:20">(</operator><name pos:start="27:21" pos:end="27:27">int16_t</name><operator pos:start="27:28" pos:end="27:28">)</operator> <operator pos:start="27:30" pos:end="27:30">(</operator><operator pos:start="27:31" pos:end="27:31">(</operator><operator pos:start="27:32" pos:end="27:32">(</operator><name pos:start="27:33" pos:end="27:43"><name pos:start="27:33" pos:end="27:35">ctx</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:43">opcode</name></name> <operator pos:start="27:45" pos:end="27:46">&gt;&gt;</operator> <literal type="number" pos:start="27:48" pos:end="27:49">16</literal><operator pos:start="27:50" pos:end="27:50">)</operator> <operator pos:start="27:52" pos:end="27:52">&amp;</operator> <literal type="number" pos:start="27:54" pos:end="27:57">0x1f</literal><operator pos:start="27:58" pos:end="27:58">)</operator> <operator pos:start="27:60" pos:end="27:61">&lt;&lt;</operator> <literal type="number" pos:start="27:63" pos:end="27:64">11</literal>

                              <operator pos:start="29:31" pos:end="29:31">|</operator> <operator pos:start="29:33" pos:end="29:33">(</operator><operator pos:start="29:34" pos:end="29:34">(</operator><name pos:start="29:35" pos:end="29:45"><name pos:start="29:35" pos:end="29:37">ctx</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:45">opcode</name></name> <operator pos:start="29:47" pos:end="29:48">&gt;&gt;</operator> <literal type="number" pos:start="29:50" pos:end="29:51">21</literal><operator pos:start="29:52" pos:end="29:52">)</operator> <operator pos:start="29:54" pos:end="29:54">&amp;</operator> <literal type="number" pos:start="29:56" pos:end="29:59">0x3f</literal><operator pos:start="29:60" pos:end="29:60">)</operator> <operator pos:start="29:62" pos:end="29:63">&lt;&lt;</operator> <literal type="number" pos:start="29:65" pos:end="29:65">5</literal>

                              <operator pos:start="31:31" pos:end="31:31">|</operator> <operator pos:start="31:33" pos:end="31:33">(</operator><name pos:start="31:34" pos:end="31:44"><name pos:start="31:34" pos:end="31:36">ctx</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:44">opcode</name></name> <operator pos:start="31:46" pos:end="31:46">&amp;</operator> <literal type="number" pos:start="31:48" pos:end="31:51">0x1f</literal><operator pos:start="31:52" pos:end="31:52">)</operator><operator pos:start="31:53" pos:end="31:53">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="37:24">/* The extended opcodes cleverly reuse the opcodes from their 16-bit

       counterparts.  */</comment>

    <switch pos:start="39:5" pos:end="375:5">switch <condition pos:start="39:12" pos:end="39:15">(<expr pos:start="39:13" pos:end="39:14"><name pos:start="39:13" pos:end="39:14">op</name></expr>)</condition> <block pos:start="39:17" pos:end="375:5">{<block_content pos:start="41:5" pos:end="373:14">

    <case pos:start="41:5" pos:end="41:25">case <expr pos:start="41:10" pos:end="41:24"><name pos:start="41:10" pos:end="41:24">M16_OPC_ADDIUSP</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:51"><expr pos:start="43:9" pos:end="43:50"><call pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:21">gen_arith_imm</name><argument_list pos:start="43:22" pos:end="43:50">(<argument pos:start="43:23" pos:end="43:25"><expr pos:start="43:23" pos:end="43:25"><name pos:start="43:23" pos:end="43:25">ctx</name></expr></argument>, <argument pos:start="43:28" pos:end="43:36"><expr pos:start="43:28" pos:end="43:36"><name pos:start="43:28" pos:end="43:36">OPC_ADDIU</name></expr></argument>, <argument pos:start="43:39" pos:end="43:40"><expr pos:start="43:39" pos:end="43:40"><name pos:start="43:39" pos:end="43:40">rx</name></expr></argument>, <argument pos:start="43:43" pos:end="43:44"><expr pos:start="43:43" pos:end="43:44"><literal type="number" pos:start="43:43" pos:end="43:44">29</literal></expr></argument>, <argument pos:start="43:47" pos:end="43:49"><expr pos:start="43:47" pos:end="43:49"><name pos:start="43:47" pos:end="43:49">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:25">case <expr pos:start="47:10" pos:end="47:24"><name pos:start="47:10" pos:end="47:24">M16_OPC_ADDIUPC</name></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:40"><expr pos:start="49:9" pos:end="49:39"><call pos:start="49:9" pos:end="49:39"><name pos:start="49:9" pos:end="49:19">gen_addiupc</name><argument_list pos:start="49:20" pos:end="49:39">(<argument pos:start="49:21" pos:end="49:23"><expr pos:start="49:21" pos:end="49:23"><name pos:start="49:21" pos:end="49:23">ctx</name></expr></argument>, <argument pos:start="49:26" pos:end="49:27"><expr pos:start="49:26" pos:end="49:27"><name pos:start="49:26" pos:end="49:27">rx</name></expr></argument>, <argument pos:start="49:30" pos:end="49:32"><expr pos:start="49:30" pos:end="49:32"><name pos:start="49:30" pos:end="49:32">imm</name></expr></argument>, <argument pos:start="49:35" pos:end="49:35"><expr pos:start="49:35" pos:end="49:35"><literal type="number" pos:start="49:35" pos:end="49:35">0</literal></expr></argument>, <argument pos:start="49:38" pos:end="49:38"><expr pos:start="49:38" pos:end="49:38"><literal type="number" pos:start="49:38" pos:end="49:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:19">case <expr pos:start="53:10" pos:end="53:18"><name pos:start="53:10" pos:end="53:18">M16_OPC_B</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:63"><expr pos:start="55:9" pos:end="55:62"><call pos:start="55:9" pos:end="55:62"><name pos:start="55:9" pos:end="55:26">gen_compute_branch</name><argument_list pos:start="55:27" pos:end="55:62">(<argument pos:start="55:28" pos:end="55:30"><expr pos:start="55:28" pos:end="55:30"><name pos:start="55:28" pos:end="55:30">ctx</name></expr></argument>, <argument pos:start="55:33" pos:end="55:39"><expr pos:start="55:33" pos:end="55:39"><name pos:start="55:33" pos:end="55:39">OPC_BEQ</name></expr></argument>, <argument pos:start="55:42" pos:end="55:42"><expr pos:start="55:42" pos:end="55:42"><literal type="number" pos:start="55:42" pos:end="55:42">4</literal></expr></argument>, <argument pos:start="55:45" pos:end="55:45"><expr pos:start="55:45" pos:end="55:45"><literal type="number" pos:start="55:45" pos:end="55:45">0</literal></expr></argument>, <argument pos:start="55:48" pos:end="55:48"><expr pos:start="55:48" pos:end="55:48"><literal type="number" pos:start="55:48" pos:end="55:48">0</literal></expr></argument>, <argument pos:start="55:51" pos:end="55:61"><expr pos:start="55:51" pos:end="55:61"><name pos:start="55:51" pos:end="55:56">offset</name> <operator pos:start="55:58" pos:end="55:59">&lt;&lt;</operator> <literal type="number" pos:start="55:61" pos:end="55:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="57:9" pos:end="57:68">/* No delay slot, so just process as a normal instruction */</comment>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:22">case <expr pos:start="61:10" pos:end="61:21"><name pos:start="61:10" pos:end="61:21">M16_OPC_BEQZ</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:64"><expr pos:start="63:9" pos:end="63:63"><call pos:start="63:9" pos:end="63:63"><name pos:start="63:9" pos:end="63:26">gen_compute_branch</name><argument_list pos:start="63:27" pos:end="63:63">(<argument pos:start="63:28" pos:end="63:30"><expr pos:start="63:28" pos:end="63:30"><name pos:start="63:28" pos:end="63:30">ctx</name></expr></argument>, <argument pos:start="63:33" pos:end="63:39"><expr pos:start="63:33" pos:end="63:39"><name pos:start="63:33" pos:end="63:39">OPC_BEQ</name></expr></argument>, <argument pos:start="63:42" pos:end="63:42"><expr pos:start="63:42" pos:end="63:42"><literal type="number" pos:start="63:42" pos:end="63:42">4</literal></expr></argument>, <argument pos:start="63:45" pos:end="63:46"><expr pos:start="63:45" pos:end="63:46"><name pos:start="63:45" pos:end="63:46">rx</name></expr></argument>, <argument pos:start="63:49" pos:end="63:49"><expr pos:start="63:49" pos:end="63:49"><literal type="number" pos:start="63:49" pos:end="63:49">0</literal></expr></argument>, <argument pos:start="63:52" pos:end="63:62"><expr pos:start="63:52" pos:end="63:62"><name pos:start="63:52" pos:end="63:57">offset</name> <operator pos:start="63:59" pos:end="63:60">&lt;&lt;</operator> <literal type="number" pos:start="63:62" pos:end="63:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="65:9" pos:end="65:68">/* No delay slot, so just process as a normal instruction */</comment>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:23">case <expr pos:start="69:10" pos:end="69:22"><name pos:start="69:10" pos:end="69:22">M16_OPC_BNEQZ</name></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:64"><expr pos:start="71:9" pos:end="71:63"><call pos:start="71:9" pos:end="71:63"><name pos:start="71:9" pos:end="71:26">gen_compute_branch</name><argument_list pos:start="71:27" pos:end="71:63">(<argument pos:start="71:28" pos:end="71:30"><expr pos:start="71:28" pos:end="71:30"><name pos:start="71:28" pos:end="71:30">ctx</name></expr></argument>, <argument pos:start="71:33" pos:end="71:39"><expr pos:start="71:33" pos:end="71:39"><name pos:start="71:33" pos:end="71:39">OPC_BNE</name></expr></argument>, <argument pos:start="71:42" pos:end="71:42"><expr pos:start="71:42" pos:end="71:42"><literal type="number" pos:start="71:42" pos:end="71:42">4</literal></expr></argument>, <argument pos:start="71:45" pos:end="71:46"><expr pos:start="71:45" pos:end="71:46"><name pos:start="71:45" pos:end="71:46">rx</name></expr></argument>, <argument pos:start="71:49" pos:end="71:49"><expr pos:start="71:49" pos:end="71:49"><literal type="number" pos:start="71:49" pos:end="71:49">0</literal></expr></argument>, <argument pos:start="71:52" pos:end="71:62"><expr pos:start="71:52" pos:end="71:62"><name pos:start="71:52" pos:end="71:57">offset</name> <operator pos:start="71:59" pos:end="71:60">&lt;&lt;</operator> <literal type="number" pos:start="71:62" pos:end="71:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="73:9" pos:end="73:68">/* No delay slot, so just process as a normal instruction */</comment>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:23">case <expr pos:start="77:10" pos:end="77:22"><name pos:start="77:10" pos:end="77:22">M16_OPC_SHIFT</name></expr>:</case>

        <switch pos:start="79:9" pos:end="115:9">switch <condition pos:start="79:16" pos:end="79:34">(<expr pos:start="79:17" pos:end="79:33"><name pos:start="79:17" pos:end="79:27"><name pos:start="79:17" pos:end="79:19">ctx</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:27">opcode</name></name> <operator pos:start="79:29" pos:end="79:29">&amp;</operator> <literal type="number" pos:start="79:31" pos:end="79:33">0x3</literal></expr>)</condition> <block pos:start="79:36" pos:end="115:9">{<block_content pos:start="81:9" pos:end="113:18">

        <case pos:start="81:9" pos:end="81:17">case <expr pos:start="81:14" pos:end="81:16"><literal type="number" pos:start="81:14" pos:end="81:16">0x0</literal></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:52"><expr pos:start="83:13" pos:end="83:51"><call pos:start="83:13" pos:end="83:51"><name pos:start="83:13" pos:end="83:25">gen_shift_imm</name><argument_list pos:start="83:26" pos:end="83:51">(<argument pos:start="83:27" pos:end="83:29"><expr pos:start="83:27" pos:end="83:29"><name pos:start="83:27" pos:end="83:29">ctx</name></expr></argument>, <argument pos:start="83:32" pos:end="83:38"><expr pos:start="83:32" pos:end="83:38"><name pos:start="83:32" pos:end="83:38">OPC_SLL</name></expr></argument>, <argument pos:start="83:41" pos:end="83:42"><expr pos:start="83:41" pos:end="83:42"><name pos:start="83:41" pos:end="83:42">rx</name></expr></argument>, <argument pos:start="83:45" pos:end="83:46"><expr pos:start="83:45" pos:end="83:46"><name pos:start="83:45" pos:end="83:46">ry</name></expr></argument>, <argument pos:start="83:49" pos:end="83:50"><expr pos:start="83:49" pos:end="83:50"><name pos:start="83:49" pos:end="83:50">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="90:0">case <expr pos:start="87:14" pos:end="87:16"><literal type="number" pos:start="87:14" pos:end="87:16">0x1</literal></expr>:</case>

<cpp:if pos:start="89:1" pos:end="89:26">#<cpp:directive pos:start="89:2" pos:end="89:3">if</cpp:directive> <expr pos:start="89:5" pos:end="89:26"><call pos:start="89:5" pos:end="89:26"><name pos:start="89:5" pos:end="89:11">defined</name><argument_list pos:start="89:12" pos:end="89:26">(<argument pos:start="89:13" pos:end="89:25"><expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <expr_stmt pos:start="91:13" pos:end="91:31"><expr pos:start="91:13" pos:end="91:30"><call pos:start="91:13" pos:end="91:30"><name pos:start="91:13" pos:end="91:25">check_mips_64</name><argument_list pos:start="91:26" pos:end="91:30">(<argument pos:start="91:27" pos:end="91:29"><expr pos:start="91:27" pos:end="91:29"><name pos:start="91:27" pos:end="91:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="96:0"><expr pos:start="93:13" pos:end="93:52"><call pos:start="93:13" pos:end="93:52"><name pos:start="93:13" pos:end="93:25">gen_shift_imm</name><argument_list pos:start="93:26" pos:end="93:52">(<argument pos:start="93:27" pos:end="93:29"><expr pos:start="93:27" pos:end="93:29"><name pos:start="93:27" pos:end="93:29">ctx</name></expr></argument>, <argument pos:start="93:32" pos:end="93:39"><expr pos:start="93:32" pos:end="93:39"><name pos:start="93:32" pos:end="93:39">OPC_DSLL</name></expr></argument>, <argument pos:start="93:42" pos:end="93:43"><expr pos:start="93:42" pos:end="93:43"><name pos:start="93:42" pos:end="93:43">rx</name></expr></argument>, <argument pos:start="93:46" pos:end="93:47"><expr pos:start="93:46" pos:end="93:47"><name pos:start="93:46" pos:end="93:47">ry</name></expr></argument>, <argument pos:start="93:50" pos:end="93:51"><expr pos:start="93:50" pos:end="93:51"><name pos:start="93:50" pos:end="93:51">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="95:1" pos:end="95:5">#<cpp:directive pos:start="95:2" pos:end="95:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="97:13" pos:end="100:0"><expr pos:start="97:13" pos:end="97:44"><call pos:start="97:13" pos:end="97:44"><name pos:start="97:13" pos:end="97:30">generate_exception</name><argument_list pos:start="97:31" pos:end="97:44">(<argument pos:start="97:32" pos:end="97:34"><expr pos:start="97:32" pos:end="97:34"><name pos:start="97:32" pos:end="97:34">ctx</name></expr></argument>, <argument pos:start="97:37" pos:end="97:43"><expr pos:start="97:37" pos:end="97:43"><name pos:start="97:37" pos:end="97:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="99:1" pos:end="99:6">#<cpp:directive pos:start="99:2" pos:end="99:6">endif</cpp:directive></cpp:endif>

            <break pos:start="101:13" pos:end="101:18">break;</break>

        <case pos:start="103:9" pos:end="103:17">case <expr pos:start="103:14" pos:end="103:16"><literal type="number" pos:start="103:14" pos:end="103:16">0x2</literal></expr>:</case>

            <expr_stmt pos:start="105:13" pos:end="105:52"><expr pos:start="105:13" pos:end="105:51"><call pos:start="105:13" pos:end="105:51"><name pos:start="105:13" pos:end="105:25">gen_shift_imm</name><argument_list pos:start="105:26" pos:end="105:51">(<argument pos:start="105:27" pos:end="105:29"><expr pos:start="105:27" pos:end="105:29"><name pos:start="105:27" pos:end="105:29">ctx</name></expr></argument>, <argument pos:start="105:32" pos:end="105:38"><expr pos:start="105:32" pos:end="105:38"><name pos:start="105:32" pos:end="105:38">OPC_SRL</name></expr></argument>, <argument pos:start="105:41" pos:end="105:42"><expr pos:start="105:41" pos:end="105:42"><name pos:start="105:41" pos:end="105:42">rx</name></expr></argument>, <argument pos:start="105:45" pos:end="105:46"><expr pos:start="105:45" pos:end="105:46"><name pos:start="105:45" pos:end="105:46">ry</name></expr></argument>, <argument pos:start="105:49" pos:end="105:50"><expr pos:start="105:49" pos:end="105:50"><name pos:start="105:49" pos:end="105:50">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:17">case <expr pos:start="109:14" pos:end="109:16"><literal type="number" pos:start="109:14" pos:end="109:16">0x3</literal></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="111:52"><expr pos:start="111:13" pos:end="111:51"><call pos:start="111:13" pos:end="111:51"><name pos:start="111:13" pos:end="111:25">gen_shift_imm</name><argument_list pos:start="111:26" pos:end="111:51">(<argument pos:start="111:27" pos:end="111:29"><expr pos:start="111:27" pos:end="111:29"><name pos:start="111:27" pos:end="111:29">ctx</name></expr></argument>, <argument pos:start="111:32" pos:end="111:38"><expr pos:start="111:32" pos:end="111:38"><name pos:start="111:32" pos:end="111:38">OPC_SRA</name></expr></argument>, <argument pos:start="111:41" pos:end="111:42"><expr pos:start="111:41" pos:end="111:42"><name pos:start="111:41" pos:end="111:42">rx</name></expr></argument>, <argument pos:start="111:45" pos:end="111:46"><expr pos:start="111:45" pos:end="111:46"><name pos:start="111:45" pos:end="111:46">ry</name></expr></argument>, <argument pos:start="111:49" pos:end="111:50"><expr pos:start="111:49" pos:end="111:50"><name pos:start="111:49" pos:end="111:50">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="117:9" pos:end="120:0">break;</break>

<cpp:if pos:start="119:1" pos:end="119:26">#<cpp:directive pos:start="119:2" pos:end="119:3">if</cpp:directive> <expr pos:start="119:5" pos:end="119:26"><call pos:start="119:5" pos:end="119:26"><name pos:start="119:5" pos:end="119:11">defined</name><argument_list pos:start="119:12" pos:end="119:26">(<argument pos:start="119:13" pos:end="119:25"><expr pos:start="119:13" pos:end="119:25"><name pos:start="119:13" pos:end="119:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="121:5" pos:end="121:20">case <expr pos:start="121:10" pos:end="121:19"><name pos:start="121:10" pos:end="121:19">M16_OPC_LD</name></expr>:</case>

            <expr_stmt pos:start="123:13" pos:end="123:31"><expr pos:start="123:13" pos:end="123:30"><call pos:start="123:13" pos:end="123:30"><name pos:start="123:13" pos:end="123:25">check_mips_64</name><argument_list pos:start="123:26" pos:end="123:30">(<argument pos:start="123:27" pos:end="123:29"><expr pos:start="123:27" pos:end="123:29"><name pos:start="123:27" pos:end="123:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:44"><expr pos:start="125:9" pos:end="125:43"><call pos:start="125:9" pos:end="125:43"><name pos:start="125:9" pos:end="125:14">gen_ld</name><argument_list pos:start="125:15" pos:end="125:43">(<argument pos:start="125:16" pos:end="125:18"><expr pos:start="125:16" pos:end="125:18"><name pos:start="125:16" pos:end="125:18">ctx</name></expr></argument>, <argument pos:start="125:21" pos:end="125:26"><expr pos:start="125:21" pos:end="125:26"><name pos:start="125:21" pos:end="125:26">OPC_LD</name></expr></argument>, <argument pos:start="125:29" pos:end="125:30"><expr pos:start="125:29" pos:end="125:30"><name pos:start="125:29" pos:end="125:30">ry</name></expr></argument>, <argument pos:start="125:33" pos:end="125:34"><expr pos:start="125:33" pos:end="125:34"><name pos:start="125:33" pos:end="125:34">rx</name></expr></argument>, <argument pos:start="125:37" pos:end="125:42"><expr pos:start="125:37" pos:end="125:42"><name pos:start="125:37" pos:end="125:42">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="130:0">break;</break>

<cpp:endif pos:start="129:1" pos:end="129:6">#<cpp:directive pos:start="129:2" pos:end="129:6">endif</cpp:directive></cpp:endif>

    <case pos:start="131:5" pos:end="131:22">case <expr pos:start="131:10" pos:end="131:21"><name pos:start="131:10" pos:end="131:21">M16_OPC_RRIA</name></expr>:</case>

        <expr_stmt pos:start="133:9" pos:end="133:32"><expr pos:start="133:9" pos:end="133:31"><name pos:start="133:9" pos:end="133:11">imm</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <name pos:start="133:15" pos:end="133:25"><name pos:start="133:15" pos:end="133:17">ctx</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:25">opcode</name></name> <operator pos:start="133:27" pos:end="133:27">&amp;</operator> <literal type="number" pos:start="133:29" pos:end="133:31">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:54"><expr pos:start="135:9" pos:end="135:53"><name pos:start="135:9" pos:end="135:11">imm</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <name pos:start="135:15" pos:end="135:17">imm</name> <operator pos:start="135:19" pos:end="135:19">|</operator> <operator pos:start="135:21" pos:end="135:21">(</operator><operator pos:start="135:22" pos:end="135:22">(</operator><name pos:start="135:23" pos:end="135:33"><name pos:start="135:23" pos:end="135:25">ctx</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:33">opcode</name></name> <operator pos:start="135:35" pos:end="135:36">&gt;&gt;</operator> <literal type="number" pos:start="135:38" pos:end="135:39">20</literal><operator pos:start="135:40" pos:end="135:40">)</operator> <operator pos:start="135:42" pos:end="135:42">&amp;</operator> <literal type="number" pos:start="135:44" pos:end="135:47">0x7f</literal><operator pos:start="135:48" pos:end="135:48">)</operator> <operator pos:start="135:50" pos:end="135:51">&lt;&lt;</operator> <literal type="number" pos:start="135:53" pos:end="135:53">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:54"><expr pos:start="137:9" pos:end="137:53"><name pos:start="137:9" pos:end="137:11">imm</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <name pos:start="137:15" pos:end="137:17">imm</name> <operator pos:start="137:19" pos:end="137:19">|</operator> <operator pos:start="137:21" pos:end="137:21">(</operator><operator pos:start="137:22" pos:end="137:22">(</operator><name pos:start="137:23" pos:end="137:33"><name pos:start="137:23" pos:end="137:25">ctx</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:33">opcode</name></name> <operator pos:start="137:35" pos:end="137:36">&gt;&gt;</operator> <literal type="number" pos:start="137:38" pos:end="137:39">16</literal><operator pos:start="137:40" pos:end="137:40">)</operator> <operator pos:start="137:42" pos:end="137:42">&amp;</operator> <literal type="number" pos:start="137:44" pos:end="137:46">0xf</literal><operator pos:start="137:47" pos:end="137:47">)</operator> <operator pos:start="137:49" pos:end="137:50">&lt;&lt;</operator> <literal type="number" pos:start="137:52" pos:end="137:53">11</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:40"><expr pos:start="139:9" pos:end="139:39"><name pos:start="139:9" pos:end="139:11">imm</name> <operator pos:start="139:13" pos:end="139:13">=</operator> <operator pos:start="139:15" pos:end="139:15">(</operator><name pos:start="139:16" pos:end="139:22">int16_t</name><operator pos:start="139:23" pos:end="139:23">)</operator> <operator pos:start="139:25" pos:end="139:25">(</operator><name pos:start="139:26" pos:end="139:28">imm</name> <operator pos:start="139:30" pos:end="139:31">&lt;&lt;</operator> <literal type="number" pos:start="139:33" pos:end="139:33">1</literal><operator pos:start="139:34" pos:end="139:34">)</operator> <operator pos:start="139:36" pos:end="139:37">&gt;&gt;</operator> <literal type="number" pos:start="139:39" pos:end="139:39">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="141:9" pos:end="159:9"><if pos:start="141:9" pos:end="155:9">if <condition pos:start="141:12" pos:end="141:37">(<expr pos:start="141:13" pos:end="141:36"><operator pos:start="141:13" pos:end="141:13">(</operator><name pos:start="141:14" pos:end="141:24"><name pos:start="141:14" pos:end="141:16">ctx</name><operator pos:start="141:17" pos:end="141:18">-&gt;</operator><name pos:start="141:19" pos:end="141:24">opcode</name></name> <operator pos:start="141:26" pos:end="141:27">&gt;&gt;</operator> <literal type="number" pos:start="141:29" pos:end="141:29">4</literal><operator pos:start="141:30" pos:end="141:30">)</operator> <operator pos:start="141:32" pos:end="141:32">&amp;</operator> <literal type="number" pos:start="141:34" pos:end="141:36">0x1</literal></expr>)</condition> <block pos:start="141:39" pos:end="155:9">{<block_content pos:start="145:13" pos:end="154:0">

<cpp:if pos:start="143:1" pos:end="143:26">#<cpp:directive pos:start="143:2" pos:end="143:3">if</cpp:directive> <expr pos:start="143:5" pos:end="143:26"><call pos:start="143:5" pos:end="143:26"><name pos:start="143:5" pos:end="143:11">defined</name><argument_list pos:start="143:12" pos:end="143:26">(<argument pos:start="143:13" pos:end="143:25"><expr pos:start="143:13" pos:end="143:25"><name pos:start="143:13" pos:end="143:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <expr_stmt pos:start="145:13" pos:end="145:31"><expr pos:start="145:13" pos:end="145:30"><call pos:start="145:13" pos:end="145:30"><name pos:start="145:13" pos:end="145:25">check_mips_64</name><argument_list pos:start="145:26" pos:end="145:30">(<argument pos:start="145:27" pos:end="145:29"><expr pos:start="145:27" pos:end="145:29"><name pos:start="145:27" pos:end="145:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="150:0"><expr pos:start="147:13" pos:end="147:55"><call pos:start="147:13" pos:end="147:55"><name pos:start="147:13" pos:end="147:25">gen_arith_imm</name><argument_list pos:start="147:26" pos:end="147:55">(<argument pos:start="147:27" pos:end="147:29"><expr pos:start="147:27" pos:end="147:29"><name pos:start="147:27" pos:end="147:29">ctx</name></expr></argument>, <argument pos:start="147:32" pos:end="147:41"><expr pos:start="147:32" pos:end="147:41"><name pos:start="147:32" pos:end="147:41">OPC_DADDIU</name></expr></argument>, <argument pos:start="147:44" pos:end="147:45"><expr pos:start="147:44" pos:end="147:45"><name pos:start="147:44" pos:end="147:45">ry</name></expr></argument>, <argument pos:start="147:48" pos:end="147:49"><expr pos:start="147:48" pos:end="147:49"><name pos:start="147:48" pos:end="147:49">rx</name></expr></argument>, <argument pos:start="147:52" pos:end="147:54"><expr pos:start="147:52" pos:end="147:54"><name pos:start="147:52" pos:end="147:54">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="149:1" pos:end="149:5">#<cpp:directive pos:start="149:2" pos:end="149:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="151:13" pos:end="154:0"><expr pos:start="151:13" pos:end="151:44"><call pos:start="151:13" pos:end="151:44"><name pos:start="151:13" pos:end="151:30">generate_exception</name><argument_list pos:start="151:31" pos:end="151:44">(<argument pos:start="151:32" pos:end="151:34"><expr pos:start="151:32" pos:end="151:34"><name pos:start="151:32" pos:end="151:34">ctx</name></expr></argument>, <argument pos:start="151:37" pos:end="151:43"><expr pos:start="151:37" pos:end="151:43"><name pos:start="151:37" pos:end="151:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="153:1" pos:end="153:6">#<cpp:directive pos:start="153:2" pos:end="153:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="155:11" pos:end="159:9">else <block pos:start="155:16" pos:end="159:9">{<block_content pos:start="157:13" pos:end="157:55">

            <expr_stmt pos:start="157:13" pos:end="157:55"><expr pos:start="157:13" pos:end="157:54"><call pos:start="157:13" pos:end="157:54"><name pos:start="157:13" pos:end="157:25">gen_arith_imm</name><argument_list pos:start="157:26" pos:end="157:54">(<argument pos:start="157:27" pos:end="157:29"><expr pos:start="157:27" pos:end="157:29"><name pos:start="157:27" pos:end="157:29">ctx</name></expr></argument>, <argument pos:start="157:32" pos:end="157:40"><expr pos:start="157:32" pos:end="157:40"><name pos:start="157:32" pos:end="157:40">OPC_ADDIU</name></expr></argument>, <argument pos:start="157:43" pos:end="157:44"><expr pos:start="157:43" pos:end="157:44"><name pos:start="157:43" pos:end="157:44">ry</name></expr></argument>, <argument pos:start="157:47" pos:end="157:48"><expr pos:start="157:47" pos:end="157:48"><name pos:start="157:47" pos:end="157:48">rx</name></expr></argument>, <argument pos:start="157:51" pos:end="157:53"><expr pos:start="157:51" pos:end="157:53"><name pos:start="157:51" pos:end="157:53">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    <case pos:start="163:5" pos:end="163:24">case <expr pos:start="163:10" pos:end="163:23"><name pos:start="163:10" pos:end="163:23">M16_OPC_ADDIU8</name></expr>:</case>

        <expr_stmt pos:start="165:9" pos:end="165:51"><expr pos:start="165:9" pos:end="165:50"><call pos:start="165:9" pos:end="165:50"><name pos:start="165:9" pos:end="165:21">gen_arith_imm</name><argument_list pos:start="165:22" pos:end="165:50">(<argument pos:start="165:23" pos:end="165:25"><expr pos:start="165:23" pos:end="165:25"><name pos:start="165:23" pos:end="165:25">ctx</name></expr></argument>, <argument pos:start="165:28" pos:end="165:36"><expr pos:start="165:28" pos:end="165:36"><name pos:start="165:28" pos:end="165:36">OPC_ADDIU</name></expr></argument>, <argument pos:start="165:39" pos:end="165:40"><expr pos:start="165:39" pos:end="165:40"><name pos:start="165:39" pos:end="165:40">rx</name></expr></argument>, <argument pos:start="165:43" pos:end="165:44"><expr pos:start="165:43" pos:end="165:44"><name pos:start="165:43" pos:end="165:44">rx</name></expr></argument>, <argument pos:start="165:47" pos:end="165:49"><expr pos:start="165:47" pos:end="165:49"><name pos:start="165:47" pos:end="165:49">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="167:9" pos:end="167:14">break;</break>

    <case pos:start="169:5" pos:end="169:22">case <expr pos:start="169:10" pos:end="169:21"><name pos:start="169:10" pos:end="169:21">M16_OPC_SLTI</name></expr>:</case>

        <expr_stmt pos:start="171:9" pos:end="171:48"><expr pos:start="171:9" pos:end="171:47"><call pos:start="171:9" pos:end="171:47"><name pos:start="171:9" pos:end="171:19">gen_slt_imm</name><argument_list pos:start="171:20" pos:end="171:47">(<argument pos:start="171:21" pos:end="171:23"><expr pos:start="171:21" pos:end="171:23"><name pos:start="171:21" pos:end="171:23">ctx</name></expr></argument>, <argument pos:start="171:26" pos:end="171:33"><expr pos:start="171:26" pos:end="171:33"><name pos:start="171:26" pos:end="171:33">OPC_SLTI</name></expr></argument>, <argument pos:start="171:36" pos:end="171:37"><expr pos:start="171:36" pos:end="171:37"><literal type="number" pos:start="171:36" pos:end="171:37">24</literal></expr></argument>, <argument pos:start="171:40" pos:end="171:41"><expr pos:start="171:40" pos:end="171:41"><name pos:start="171:40" pos:end="171:41">rx</name></expr></argument>, <argument pos:start="171:44" pos:end="171:46"><expr pos:start="171:44" pos:end="171:46"><name pos:start="171:44" pos:end="171:46">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="173:9" pos:end="173:14">break;</break>

    <case pos:start="175:5" pos:end="175:23">case <expr pos:start="175:10" pos:end="175:22"><name pos:start="175:10" pos:end="175:22">M16_OPC_SLTIU</name></expr>:</case>

        <expr_stmt pos:start="177:9" pos:end="177:49"><expr pos:start="177:9" pos:end="177:48"><call pos:start="177:9" pos:end="177:48"><name pos:start="177:9" pos:end="177:19">gen_slt_imm</name><argument_list pos:start="177:20" pos:end="177:48">(<argument pos:start="177:21" pos:end="177:23"><expr pos:start="177:21" pos:end="177:23"><name pos:start="177:21" pos:end="177:23">ctx</name></expr></argument>, <argument pos:start="177:26" pos:end="177:34"><expr pos:start="177:26" pos:end="177:34"><name pos:start="177:26" pos:end="177:34">OPC_SLTIU</name></expr></argument>, <argument pos:start="177:37" pos:end="177:38"><expr pos:start="177:37" pos:end="177:38"><literal type="number" pos:start="177:37" pos:end="177:38">24</literal></expr></argument>, <argument pos:start="177:41" pos:end="177:42"><expr pos:start="177:41" pos:end="177:42"><name pos:start="177:41" pos:end="177:42">rx</name></expr></argument>, <argument pos:start="177:45" pos:end="177:47"><expr pos:start="177:45" pos:end="177:47"><name pos:start="177:45" pos:end="177:47">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="179:9" pos:end="179:14">break;</break>

    <case pos:start="181:5" pos:end="181:20">case <expr pos:start="181:10" pos:end="181:19"><name pos:start="181:10" pos:end="181:19">M16_OPC_I8</name></expr>:</case>

        <switch pos:start="183:9" pos:end="257:9">switch <condition pos:start="183:16" pos:end="183:22">(<expr pos:start="183:17" pos:end="183:21"><name pos:start="183:17" pos:end="183:21">funct</name></expr>)</condition> <block pos:start="183:24" pos:end="257:9">{<block_content pos:start="185:9" pos:end="255:18">

        <case pos:start="185:9" pos:end="185:22">case <expr pos:start="185:14" pos:end="185:21"><name pos:start="185:14" pos:end="185:21">I8_BTEQZ</name></expr>:</case>

            <expr_stmt pos:start="187:13" pos:end="187:68"><expr pos:start="187:13" pos:end="187:67"><call pos:start="187:13" pos:end="187:67"><name pos:start="187:13" pos:end="187:30">gen_compute_branch</name><argument_list pos:start="187:31" pos:end="187:67">(<argument pos:start="187:32" pos:end="187:34"><expr pos:start="187:32" pos:end="187:34"><name pos:start="187:32" pos:end="187:34">ctx</name></expr></argument>, <argument pos:start="187:37" pos:end="187:43"><expr pos:start="187:37" pos:end="187:43"><name pos:start="187:37" pos:end="187:43">OPC_BEQ</name></expr></argument>, <argument pos:start="187:46" pos:end="187:46"><expr pos:start="187:46" pos:end="187:46"><literal type="number" pos:start="187:46" pos:end="187:46">4</literal></expr></argument>, <argument pos:start="187:49" pos:end="187:50"><expr pos:start="187:49" pos:end="187:50"><literal type="number" pos:start="187:49" pos:end="187:50">24</literal></expr></argument>, <argument pos:start="187:53" pos:end="187:53"><expr pos:start="187:53" pos:end="187:53"><literal type="number" pos:start="187:53" pos:end="187:53">0</literal></expr></argument>, <argument pos:start="187:56" pos:end="187:66"><expr pos:start="187:56" pos:end="187:66"><name pos:start="187:56" pos:end="187:61">offset</name> <operator pos:start="187:63" pos:end="187:64">&lt;&lt;</operator> <literal type="number" pos:start="187:66" pos:end="187:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="189:13" pos:end="189:18">break;</break>

        <case pos:start="191:9" pos:end="191:22">case <expr pos:start="191:14" pos:end="191:21"><name pos:start="191:14" pos:end="191:21">I8_BTNEZ</name></expr>:</case>

            <expr_stmt pos:start="193:13" pos:end="193:68"><expr pos:start="193:13" pos:end="193:67"><call pos:start="193:13" pos:end="193:67"><name pos:start="193:13" pos:end="193:30">gen_compute_branch</name><argument_list pos:start="193:31" pos:end="193:67">(<argument pos:start="193:32" pos:end="193:34"><expr pos:start="193:32" pos:end="193:34"><name pos:start="193:32" pos:end="193:34">ctx</name></expr></argument>, <argument pos:start="193:37" pos:end="193:43"><expr pos:start="193:37" pos:end="193:43"><name pos:start="193:37" pos:end="193:43">OPC_BNE</name></expr></argument>, <argument pos:start="193:46" pos:end="193:46"><expr pos:start="193:46" pos:end="193:46"><literal type="number" pos:start="193:46" pos:end="193:46">4</literal></expr></argument>, <argument pos:start="193:49" pos:end="193:50"><expr pos:start="193:49" pos:end="193:50"><literal type="number" pos:start="193:49" pos:end="193:50">24</literal></expr></argument>, <argument pos:start="193:53" pos:end="193:53"><expr pos:start="193:53" pos:end="193:53"><literal type="number" pos:start="193:53" pos:end="193:53">0</literal></expr></argument>, <argument pos:start="193:56" pos:end="193:66"><expr pos:start="193:56" pos:end="193:66"><name pos:start="193:56" pos:end="193:61">offset</name> <operator pos:start="193:63" pos:end="193:64">&lt;&lt;</operator> <literal type="number" pos:start="193:66" pos:end="193:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        <case pos:start="197:9" pos:end="197:23">case <expr pos:start="197:14" pos:end="197:22"><name pos:start="197:14" pos:end="197:22">I8_SWRASP</name></expr>:</case>

            <expr_stmt pos:start="199:13" pos:end="199:45"><expr pos:start="199:13" pos:end="199:44"><call pos:start="199:13" pos:end="199:44"><name pos:start="199:13" pos:end="199:18">gen_st</name><argument_list pos:start="199:19" pos:end="199:44">(<argument pos:start="199:20" pos:end="199:22"><expr pos:start="199:20" pos:end="199:22"><name pos:start="199:20" pos:end="199:22">ctx</name></expr></argument>, <argument pos:start="199:25" pos:end="199:30"><expr pos:start="199:25" pos:end="199:30"><name pos:start="199:25" pos:end="199:30">OPC_SW</name></expr></argument>, <argument pos:start="199:33" pos:end="199:34"><expr pos:start="199:33" pos:end="199:34"><literal type="number" pos:start="199:33" pos:end="199:34">31</literal></expr></argument>, <argument pos:start="199:37" pos:end="199:38"><expr pos:start="199:37" pos:end="199:38"><literal type="number" pos:start="199:37" pos:end="199:38">29</literal></expr></argument>, <argument pos:start="199:41" pos:end="199:43"><expr pos:start="199:41" pos:end="199:43"><name pos:start="199:41" pos:end="199:43">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="201:13" pos:end="201:18">break;</break>

        <case pos:start="203:9" pos:end="203:22">case <expr pos:start="203:14" pos:end="203:21"><name pos:start="203:14" pos:end="203:21">I8_ADJSP</name></expr>:</case>

            <expr_stmt pos:start="205:13" pos:end="205:55"><expr pos:start="205:13" pos:end="205:54"><call pos:start="205:13" pos:end="205:54"><name pos:start="205:13" pos:end="205:25">gen_arith_imm</name><argument_list pos:start="205:26" pos:end="205:54">(<argument pos:start="205:27" pos:end="205:29"><expr pos:start="205:27" pos:end="205:29"><name pos:start="205:27" pos:end="205:29">ctx</name></expr></argument>, <argument pos:start="205:32" pos:end="205:40"><expr pos:start="205:32" pos:end="205:40"><name pos:start="205:32" pos:end="205:40">OPC_ADDIU</name></expr></argument>, <argument pos:start="205:43" pos:end="205:44"><expr pos:start="205:43" pos:end="205:44"><literal type="number" pos:start="205:43" pos:end="205:44">29</literal></expr></argument>, <argument pos:start="205:47" pos:end="205:48"><expr pos:start="205:47" pos:end="205:48"><literal type="number" pos:start="205:47" pos:end="205:48">29</literal></expr></argument>, <argument pos:start="205:51" pos:end="205:53"><expr pos:start="205:51" pos:end="205:53"><name pos:start="205:51" pos:end="205:53">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="207:13" pos:end="207:18">break;</break>

        <case pos:start="209:9" pos:end="209:21">case <expr pos:start="209:14" pos:end="209:20"><name pos:start="209:14" pos:end="209:20">I8_SVRS</name></expr>:</case>

            <block pos:start="211:13" pos:end="247:13">{<block_content pos:start="213:17" pos:end="245:17">

                <decl_stmt pos:start="213:17" pos:end="213:55"><decl pos:start="213:17" pos:end="213:54"><type pos:start="213:17" pos:end="213:19"><name pos:start="213:17" pos:end="213:19">int</name></type> <name pos:start="213:21" pos:end="213:26">xsregs</name> <init pos:start="213:28" pos:end="213:54">= <expr pos:start="213:30" pos:end="213:54"><operator pos:start="213:30" pos:end="213:30">(</operator><name pos:start="213:31" pos:end="213:41"><name pos:start="213:31" pos:end="213:33">ctx</name><operator pos:start="213:34" pos:end="213:35">-&gt;</operator><name pos:start="213:36" pos:end="213:41">opcode</name></name> <operator pos:start="213:43" pos:end="213:44">&gt;&gt;</operator> <literal type="number" pos:start="213:46" pos:end="213:47">24</literal><operator pos:start="213:48" pos:end="213:48">)</operator> <operator pos:start="213:50" pos:end="213:50">&amp;</operator> <literal type="number" pos:start="213:52" pos:end="213:54">0x7</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="215:17" pos:end="215:54"><decl pos:start="215:17" pos:end="215:53"><type pos:start="215:17" pos:end="215:19"><name pos:start="215:17" pos:end="215:19">int</name></type> <name pos:start="215:21" pos:end="215:25">aregs</name> <init pos:start="215:27" pos:end="215:53">= <expr pos:start="215:29" pos:end="215:53"><operator pos:start="215:29" pos:end="215:29">(</operator><name pos:start="215:30" pos:end="215:40"><name pos:start="215:30" pos:end="215:32">ctx</name><operator pos:start="215:33" pos:end="215:34">-&gt;</operator><name pos:start="215:35" pos:end="215:40">opcode</name></name> <operator pos:start="215:42" pos:end="215:43">&gt;&gt;</operator> <literal type="number" pos:start="215:45" pos:end="215:46">16</literal><operator pos:start="215:47" pos:end="215:47">)</operator> <operator pos:start="215:49" pos:end="215:49">&amp;</operator> <literal type="number" pos:start="215:51" pos:end="215:53">0xf</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="217:17" pos:end="217:53"><decl pos:start="217:17" pos:end="217:52"><type pos:start="217:17" pos:end="217:19"><name pos:start="217:17" pos:end="217:19">int</name></type> <name pos:start="217:21" pos:end="217:25">do_ra</name> <init pos:start="217:27" pos:end="217:52">= <expr pos:start="217:29" pos:end="217:52"><operator pos:start="217:29" pos:end="217:29">(</operator><name pos:start="217:30" pos:end="217:40"><name pos:start="217:30" pos:end="217:32">ctx</name><operator pos:start="217:33" pos:end="217:34">-&gt;</operator><name pos:start="217:35" pos:end="217:40">opcode</name></name> <operator pos:start="217:42" pos:end="217:43">&gt;&gt;</operator> <literal type="number" pos:start="217:45" pos:end="217:45">6</literal><operator pos:start="217:46" pos:end="217:46">)</operator> <operator pos:start="217:48" pos:end="217:48">&amp;</operator> <literal type="number" pos:start="217:50" pos:end="217:52">0x1</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="219:17" pos:end="219:53"><decl pos:start="219:17" pos:end="219:52"><type pos:start="219:17" pos:end="219:19"><name pos:start="219:17" pos:end="219:19">int</name></type> <name pos:start="219:21" pos:end="219:25">do_s0</name> <init pos:start="219:27" pos:end="219:52">= <expr pos:start="219:29" pos:end="219:52"><operator pos:start="219:29" pos:end="219:29">(</operator><name pos:start="219:30" pos:end="219:40"><name pos:start="219:30" pos:end="219:32">ctx</name><operator pos:start="219:33" pos:end="219:34">-&gt;</operator><name pos:start="219:35" pos:end="219:40">opcode</name></name> <operator pos:start="219:42" pos:end="219:43">&gt;&gt;</operator> <literal type="number" pos:start="219:45" pos:end="219:45">5</literal><operator pos:start="219:46" pos:end="219:46">)</operator> <operator pos:start="219:48" pos:end="219:48">&amp;</operator> <literal type="number" pos:start="219:50" pos:end="219:52">0x1</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="221:17" pos:end="221:53"><decl pos:start="221:17" pos:end="221:52"><type pos:start="221:17" pos:end="221:19"><name pos:start="221:17" pos:end="221:19">int</name></type> <name pos:start="221:21" pos:end="221:25">do_s1</name> <init pos:start="221:27" pos:end="221:52">= <expr pos:start="221:29" pos:end="221:52"><operator pos:start="221:29" pos:end="221:29">(</operator><name pos:start="221:30" pos:end="221:40"><name pos:start="221:30" pos:end="221:32">ctx</name><operator pos:start="221:33" pos:end="221:34">-&gt;</operator><name pos:start="221:35" pos:end="221:40">opcode</name></name> <operator pos:start="221:42" pos:end="221:43">&gt;&gt;</operator> <literal type="number" pos:start="221:45" pos:end="221:45">4</literal><operator pos:start="221:46" pos:end="221:46">)</operator> <operator pos:start="221:48" pos:end="221:48">&amp;</operator> <literal type="number" pos:start="221:50" pos:end="221:52">0x1</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="223:17" pos:end="225:61"><decl pos:start="223:17" pos:end="225:60"><type pos:start="223:17" pos:end="223:19"><name pos:start="223:17" pos:end="223:19">int</name></type> <name pos:start="223:21" pos:end="223:29">framesize</name> <init pos:start="223:31" pos:end="225:60">= <expr pos:start="223:33" pos:end="225:60"><operator pos:start="223:33" pos:end="223:33">(</operator><operator pos:start="223:34" pos:end="223:34">(</operator><operator pos:start="223:35" pos:end="223:35">(</operator><name pos:start="223:36" pos:end="223:46"><name pos:start="223:36" pos:end="223:38">ctx</name><operator pos:start="223:39" pos:end="223:40">-&gt;</operator><name pos:start="223:41" pos:end="223:46">opcode</name></name> <operator pos:start="223:48" pos:end="223:49">&gt;&gt;</operator> <literal type="number" pos:start="223:51" pos:end="223:52">20</literal><operator pos:start="223:53" pos:end="223:53">)</operator> <operator pos:start="223:55" pos:end="223:55">&amp;</operator> <literal type="number" pos:start="223:57" pos:end="223:59">0xf</literal><operator pos:start="223:60" pos:end="223:60">)</operator> <operator pos:start="223:62" pos:end="223:63">&lt;&lt;</operator> <literal type="number" pos:start="223:65" pos:end="223:65">4</literal>

                                 <operator pos:start="225:34" pos:end="225:34">|</operator> <operator pos:start="225:36" pos:end="225:36">(</operator><name pos:start="225:37" pos:end="225:47"><name pos:start="225:37" pos:end="225:39">ctx</name><operator pos:start="225:40" pos:end="225:41">-&gt;</operator><name pos:start="225:42" pos:end="225:47">opcode</name></name> <operator pos:start="225:49" pos:end="225:49">&amp;</operator> <literal type="number" pos:start="225:51" pos:end="225:53">0xf</literal><operator pos:start="225:54" pos:end="225:54">)</operator><operator pos:start="225:55" pos:end="225:55">)</operator> <operator pos:start="225:57" pos:end="225:58">&lt;&lt;</operator> <literal type="number" pos:start="225:60" pos:end="225:60">3</literal></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="229:17" pos:end="245:17"><if pos:start="229:17" pos:end="237:17">if <condition pos:start="229:20" pos:end="229:43">(<expr pos:start="229:21" pos:end="229:42"><name pos:start="229:21" pos:end="229:31"><name pos:start="229:21" pos:end="229:23">ctx</name><operator pos:start="229:24" pos:end="229:25">-&gt;</operator><name pos:start="229:26" pos:end="229:31">opcode</name></name> <operator pos:start="229:33" pos:end="229:33">&amp;</operator> <operator pos:start="229:35" pos:end="229:35">(</operator><literal type="number" pos:start="229:36" pos:end="229:36">1</literal> <operator pos:start="229:38" pos:end="229:39">&lt;&lt;</operator> <literal type="number" pos:start="229:41" pos:end="229:41">7</literal><operator pos:start="229:42" pos:end="229:42">)</operator></expr>)</condition> <block pos:start="229:45" pos:end="237:17">{<block_content pos:start="231:21" pos:end="235:47">

                    <expr_stmt pos:start="231:21" pos:end="235:47"><expr pos:start="231:21" pos:end="235:46"><call pos:start="231:21" pos:end="235:46"><name pos:start="231:21" pos:end="231:35">gen_mips16_save</name><argument_list pos:start="231:36" pos:end="235:46">(<argument pos:start="231:37" pos:end="231:39"><expr pos:start="231:37" pos:end="231:39"><name pos:start="231:37" pos:end="231:39">ctx</name></expr></argument>, <argument pos:start="231:42" pos:end="231:47"><expr pos:start="231:42" pos:end="231:47"><name pos:start="231:42" pos:end="231:47">xsregs</name></expr></argument>, <argument pos:start="231:50" pos:end="231:54"><expr pos:start="231:50" pos:end="231:54"><name pos:start="231:50" pos:end="231:54">aregs</name></expr></argument>,

                                    <argument pos:start="233:37" pos:end="233:41"><expr pos:start="233:37" pos:end="233:41"><name pos:start="233:37" pos:end="233:41">do_ra</name></expr></argument>, <argument pos:start="233:44" pos:end="233:48"><expr pos:start="233:44" pos:end="233:48"><name pos:start="233:44" pos:end="233:48">do_s0</name></expr></argument>, <argument pos:start="233:51" pos:end="233:55"><expr pos:start="233:51" pos:end="233:55"><name pos:start="233:51" pos:end="233:55">do_s1</name></expr></argument>,

                                    <argument pos:start="235:37" pos:end="235:45"><expr pos:start="235:37" pos:end="235:45"><name pos:start="235:37" pos:end="235:45">framesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="237:19" pos:end="245:17">else <block pos:start="237:24" pos:end="245:17">{<block_content pos:start="239:21" pos:end="243:50">

                    <expr_stmt pos:start="239:21" pos:end="243:50"><expr pos:start="239:21" pos:end="243:49"><call pos:start="239:21" pos:end="243:49"><name pos:start="239:21" pos:end="239:38">gen_mips16_restore</name><argument_list pos:start="239:39" pos:end="243:49">(<argument pos:start="239:40" pos:end="239:42"><expr pos:start="239:40" pos:end="239:42"><name pos:start="239:40" pos:end="239:42">ctx</name></expr></argument>, <argument pos:start="239:45" pos:end="239:50"><expr pos:start="239:45" pos:end="239:50"><name pos:start="239:45" pos:end="239:50">xsregs</name></expr></argument>, <argument pos:start="239:53" pos:end="239:57"><expr pos:start="239:53" pos:end="239:57"><name pos:start="239:53" pos:end="239:57">aregs</name></expr></argument>,

                                       <argument pos:start="241:40" pos:end="241:44"><expr pos:start="241:40" pos:end="241:44"><name pos:start="241:40" pos:end="241:44">do_ra</name></expr></argument>, <argument pos:start="241:47" pos:end="241:51"><expr pos:start="241:47" pos:end="241:51"><name pos:start="241:47" pos:end="241:51">do_s0</name></expr></argument>, <argument pos:start="241:54" pos:end="241:58"><expr pos:start="241:54" pos:end="241:58"><name pos:start="241:54" pos:end="241:58">do_s1</name></expr></argument>,

                                       <argument pos:start="243:40" pos:end="243:48"><expr pos:start="243:40" pos:end="243:48"><name pos:start="243:40" pos:end="243:48">framesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block>

            <break pos:start="249:13" pos:end="249:18">break;</break>

        <default pos:start="251:9" pos:end="251:16">default:</default>

            <expr_stmt pos:start="253:13" pos:end="253:45"><expr pos:start="253:13" pos:end="253:44"><call pos:start="253:13" pos:end="253:44"><name pos:start="253:13" pos:end="253:30">generate_exception</name><argument_list pos:start="253:31" pos:end="253:44">(<argument pos:start="253:32" pos:end="253:34"><expr pos:start="253:32" pos:end="253:34"><name pos:start="253:32" pos:end="253:34">ctx</name></expr></argument>, <argument pos:start="253:37" pos:end="253:43"><expr pos:start="253:37" pos:end="253:43"><name pos:start="253:37" pos:end="253:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="255:13" pos:end="255:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="259:9" pos:end="259:14">break;</break>

    <case pos:start="261:5" pos:end="261:20">case <expr pos:start="261:10" pos:end="261:19"><name pos:start="261:10" pos:end="261:19">M16_OPC_LI</name></expr>:</case>

        <expr_stmt pos:start="263:9" pos:end="263:53"><expr pos:start="263:9" pos:end="263:52"><call pos:start="263:9" pos:end="263:52"><name pos:start="263:9" pos:end="263:23">tcg_gen_movi_tl</name><argument_list pos:start="263:24" pos:end="263:52">(<argument pos:start="263:25" pos:end="263:35"><expr pos:start="263:25" pos:end="263:35"><name pos:start="263:25" pos:end="263:35"><name pos:start="263:25" pos:end="263:31">cpu_gpr</name><index pos:start="263:32" pos:end="263:35">[<expr pos:start="263:33" pos:end="263:34"><name pos:start="263:33" pos:end="263:34">rx</name></expr>]</index></name></expr></argument>, <argument pos:start="263:38" pos:end="263:51"><expr pos:start="263:38" pos:end="263:51"><operator pos:start="263:38" pos:end="263:38">(</operator><name pos:start="263:39" pos:end="263:46">uint16_t</name><operator pos:start="263:47" pos:end="263:47">)</operator> <name pos:start="263:49" pos:end="263:51">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="265:9" pos:end="265:14">break;</break>

    <case pos:start="267:5" pos:end="267:22">case <expr pos:start="267:10" pos:end="267:21"><name pos:start="267:10" pos:end="267:21">M16_OPC_CMPI</name></expr>:</case>

        <expr_stmt pos:start="269:9" pos:end="269:66"><expr pos:start="269:9" pos:end="269:65"><call pos:start="269:9" pos:end="269:65"><name pos:start="269:9" pos:end="269:23">tcg_gen_xori_tl</name><argument_list pos:start="269:24" pos:end="269:65">(<argument pos:start="269:25" pos:end="269:35"><expr pos:start="269:25" pos:end="269:35"><name pos:start="269:25" pos:end="269:35"><name pos:start="269:25" pos:end="269:31">cpu_gpr</name><index pos:start="269:32" pos:end="269:35">[<expr pos:start="269:33" pos:end="269:34"><literal type="number" pos:start="269:33" pos:end="269:34">24</literal></expr>]</index></name></expr></argument>, <argument pos:start="269:38" pos:end="269:48"><expr pos:start="269:38" pos:end="269:48"><name pos:start="269:38" pos:end="269:48"><name pos:start="269:38" pos:end="269:44">cpu_gpr</name><index pos:start="269:45" pos:end="269:48">[<expr pos:start="269:46" pos:end="269:47"><name pos:start="269:46" pos:end="269:47">rx</name></expr>]</index></name></expr></argument>, <argument pos:start="269:51" pos:end="269:64"><expr pos:start="269:51" pos:end="269:64"><operator pos:start="269:51" pos:end="269:51">(</operator><name pos:start="269:52" pos:end="269:59">uint16_t</name><operator pos:start="269:60" pos:end="269:60">)</operator> <name pos:start="269:62" pos:end="269:64">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="271:9" pos:end="274:0">break;</break>

<cpp:if pos:start="273:1" pos:end="273:26">#<cpp:directive pos:start="273:2" pos:end="273:3">if</cpp:directive> <expr pos:start="273:5" pos:end="273:26"><call pos:start="273:5" pos:end="273:26"><name pos:start="273:5" pos:end="273:11">defined</name><argument_list pos:start="273:12" pos:end="273:26">(<argument pos:start="273:13" pos:end="273:25"><expr pos:start="273:13" pos:end="273:25"><name pos:start="273:13" pos:end="273:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="275:5" pos:end="275:20">case <expr pos:start="275:10" pos:end="275:19"><name pos:start="275:10" pos:end="275:19">M16_OPC_SD</name></expr>:</case>

        <expr_stmt pos:start="277:9" pos:end="277:44"><expr pos:start="277:9" pos:end="277:43"><call pos:start="277:9" pos:end="277:43"><name pos:start="277:9" pos:end="277:14">gen_st</name><argument_list pos:start="277:15" pos:end="277:43">(<argument pos:start="277:16" pos:end="277:18"><expr pos:start="277:16" pos:end="277:18"><name pos:start="277:16" pos:end="277:18">ctx</name></expr></argument>, <argument pos:start="277:21" pos:end="277:26"><expr pos:start="277:21" pos:end="277:26"><name pos:start="277:21" pos:end="277:26">OPC_SD</name></expr></argument>, <argument pos:start="277:29" pos:end="277:30"><expr pos:start="277:29" pos:end="277:30"><name pos:start="277:29" pos:end="277:30">ry</name></expr></argument>, <argument pos:start="277:33" pos:end="277:34"><expr pos:start="277:33" pos:end="277:34"><name pos:start="277:33" pos:end="277:34">rx</name></expr></argument>, <argument pos:start="277:37" pos:end="277:42"><expr pos:start="277:37" pos:end="277:42"><name pos:start="277:37" pos:end="277:42">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="279:9" pos:end="282:0">break;</break>

<cpp:endif pos:start="281:1" pos:end="281:6">#<cpp:directive pos:start="281:2" pos:end="281:6">endif</cpp:directive></cpp:endif>

    <case pos:start="283:5" pos:end="283:20">case <expr pos:start="283:10" pos:end="283:19"><name pos:start="283:10" pos:end="283:19">M16_OPC_LB</name></expr>:</case>

        <expr_stmt pos:start="285:9" pos:end="285:44"><expr pos:start="285:9" pos:end="285:43"><call pos:start="285:9" pos:end="285:43"><name pos:start="285:9" pos:end="285:14">gen_ld</name><argument_list pos:start="285:15" pos:end="285:43">(<argument pos:start="285:16" pos:end="285:18"><expr pos:start="285:16" pos:end="285:18"><name pos:start="285:16" pos:end="285:18">ctx</name></expr></argument>, <argument pos:start="285:21" pos:end="285:26"><expr pos:start="285:21" pos:end="285:26"><name pos:start="285:21" pos:end="285:26">OPC_LB</name></expr></argument>, <argument pos:start="285:29" pos:end="285:30"><expr pos:start="285:29" pos:end="285:30"><name pos:start="285:29" pos:end="285:30">ry</name></expr></argument>, <argument pos:start="285:33" pos:end="285:34"><expr pos:start="285:33" pos:end="285:34"><name pos:start="285:33" pos:end="285:34">rx</name></expr></argument>, <argument pos:start="285:37" pos:end="285:42"><expr pos:start="285:37" pos:end="285:42"><name pos:start="285:37" pos:end="285:42">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="287:9" pos:end="287:14">break;</break>

    <case pos:start="289:5" pos:end="289:20">case <expr pos:start="289:10" pos:end="289:19"><name pos:start="289:10" pos:end="289:19">M16_OPC_LH</name></expr>:</case>

        <expr_stmt pos:start="291:9" pos:end="291:44"><expr pos:start="291:9" pos:end="291:43"><call pos:start="291:9" pos:end="291:43"><name pos:start="291:9" pos:end="291:14">gen_ld</name><argument_list pos:start="291:15" pos:end="291:43">(<argument pos:start="291:16" pos:end="291:18"><expr pos:start="291:16" pos:end="291:18"><name pos:start="291:16" pos:end="291:18">ctx</name></expr></argument>, <argument pos:start="291:21" pos:end="291:26"><expr pos:start="291:21" pos:end="291:26"><name pos:start="291:21" pos:end="291:26">OPC_LH</name></expr></argument>, <argument pos:start="291:29" pos:end="291:30"><expr pos:start="291:29" pos:end="291:30"><name pos:start="291:29" pos:end="291:30">ry</name></expr></argument>, <argument pos:start="291:33" pos:end="291:34"><expr pos:start="291:33" pos:end="291:34"><name pos:start="291:33" pos:end="291:34">rx</name></expr></argument>, <argument pos:start="291:37" pos:end="291:42"><expr pos:start="291:37" pos:end="291:42"><name pos:start="291:37" pos:end="291:42">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="293:9" pos:end="293:14">break;</break>

    <case pos:start="295:5" pos:end="295:22">case <expr pos:start="295:10" pos:end="295:21"><name pos:start="295:10" pos:end="295:21">M16_OPC_LWSP</name></expr>:</case>

        <expr_stmt pos:start="297:9" pos:end="297:44"><expr pos:start="297:9" pos:end="297:43"><call pos:start="297:9" pos:end="297:43"><name pos:start="297:9" pos:end="297:14">gen_ld</name><argument_list pos:start="297:15" pos:end="297:43">(<argument pos:start="297:16" pos:end="297:18"><expr pos:start="297:16" pos:end="297:18"><name pos:start="297:16" pos:end="297:18">ctx</name></expr></argument>, <argument pos:start="297:21" pos:end="297:26"><expr pos:start="297:21" pos:end="297:26"><name pos:start="297:21" pos:end="297:26">OPC_LW</name></expr></argument>, <argument pos:start="297:29" pos:end="297:30"><expr pos:start="297:29" pos:end="297:30"><name pos:start="297:29" pos:end="297:30">rx</name></expr></argument>, <argument pos:start="297:33" pos:end="297:34"><expr pos:start="297:33" pos:end="297:34"><literal type="number" pos:start="297:33" pos:end="297:34">29</literal></expr></argument>, <argument pos:start="297:37" pos:end="297:42"><expr pos:start="297:37" pos:end="297:42"><name pos:start="297:37" pos:end="297:42">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="299:9" pos:end="299:14">break;</break>

    <case pos:start="301:5" pos:end="301:20">case <expr pos:start="301:10" pos:end="301:19"><name pos:start="301:10" pos:end="301:19">M16_OPC_LW</name></expr>:</case>

        <expr_stmt pos:start="303:9" pos:end="303:44"><expr pos:start="303:9" pos:end="303:43"><call pos:start="303:9" pos:end="303:43"><name pos:start="303:9" pos:end="303:14">gen_ld</name><argument_list pos:start="303:15" pos:end="303:43">(<argument pos:start="303:16" pos:end="303:18"><expr pos:start="303:16" pos:end="303:18"><name pos:start="303:16" pos:end="303:18">ctx</name></expr></argument>, <argument pos:start="303:21" pos:end="303:26"><expr pos:start="303:21" pos:end="303:26"><name pos:start="303:21" pos:end="303:26">OPC_LW</name></expr></argument>, <argument pos:start="303:29" pos:end="303:30"><expr pos:start="303:29" pos:end="303:30"><name pos:start="303:29" pos:end="303:30">ry</name></expr></argument>, <argument pos:start="303:33" pos:end="303:34"><expr pos:start="303:33" pos:end="303:34"><name pos:start="303:33" pos:end="303:34">rx</name></expr></argument>, <argument pos:start="303:37" pos:end="303:42"><expr pos:start="303:37" pos:end="303:42"><name pos:start="303:37" pos:end="303:42">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="305:9" pos:end="305:14">break;</break>

    <case pos:start="307:5" pos:end="307:21">case <expr pos:start="307:10" pos:end="307:20"><name pos:start="307:10" pos:end="307:20">M16_OPC_LBU</name></expr>:</case>

        <expr_stmt pos:start="309:9" pos:end="309:45"><expr pos:start="309:9" pos:end="309:44"><call pos:start="309:9" pos:end="309:44"><name pos:start="309:9" pos:end="309:14">gen_ld</name><argument_list pos:start="309:15" pos:end="309:44">(<argument pos:start="309:16" pos:end="309:18"><expr pos:start="309:16" pos:end="309:18"><name pos:start="309:16" pos:end="309:18">ctx</name></expr></argument>, <argument pos:start="309:21" pos:end="309:27"><expr pos:start="309:21" pos:end="309:27"><name pos:start="309:21" pos:end="309:27">OPC_LBU</name></expr></argument>, <argument pos:start="309:30" pos:end="309:31"><expr pos:start="309:30" pos:end="309:31"><name pos:start="309:30" pos:end="309:31">ry</name></expr></argument>, <argument pos:start="309:34" pos:end="309:35"><expr pos:start="309:34" pos:end="309:35"><name pos:start="309:34" pos:end="309:35">rx</name></expr></argument>, <argument pos:start="309:38" pos:end="309:43"><expr pos:start="309:38" pos:end="309:43"><name pos:start="309:38" pos:end="309:43">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="311:9" pos:end="311:14">break;</break>

    <case pos:start="313:5" pos:end="313:21">case <expr pos:start="313:10" pos:end="313:20"><name pos:start="313:10" pos:end="313:20">M16_OPC_LHU</name></expr>:</case>

        <expr_stmt pos:start="315:9" pos:end="315:45"><expr pos:start="315:9" pos:end="315:44"><call pos:start="315:9" pos:end="315:44"><name pos:start="315:9" pos:end="315:14">gen_ld</name><argument_list pos:start="315:15" pos:end="315:44">(<argument pos:start="315:16" pos:end="315:18"><expr pos:start="315:16" pos:end="315:18"><name pos:start="315:16" pos:end="315:18">ctx</name></expr></argument>, <argument pos:start="315:21" pos:end="315:27"><expr pos:start="315:21" pos:end="315:27"><name pos:start="315:21" pos:end="315:27">OPC_LHU</name></expr></argument>, <argument pos:start="315:30" pos:end="315:31"><expr pos:start="315:30" pos:end="315:31"><name pos:start="315:30" pos:end="315:31">ry</name></expr></argument>, <argument pos:start="315:34" pos:end="315:35"><expr pos:start="315:34" pos:end="315:35"><name pos:start="315:34" pos:end="315:35">rx</name></expr></argument>, <argument pos:start="315:38" pos:end="315:43"><expr pos:start="315:38" pos:end="315:43"><name pos:start="315:38" pos:end="315:43">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="317:9" pos:end="317:14">break;</break>

    <case pos:start="319:5" pos:end="319:22">case <expr pos:start="319:10" pos:end="319:21"><name pos:start="319:10" pos:end="319:21">M16_OPC_LWPC</name></expr>:</case>

        <expr_stmt pos:start="321:9" pos:end="321:45"><expr pos:start="321:9" pos:end="321:44"><call pos:start="321:9" pos:end="321:44"><name pos:start="321:9" pos:end="321:14">gen_ld</name><argument_list pos:start="321:15" pos:end="321:44">(<argument pos:start="321:16" pos:end="321:18"><expr pos:start="321:16" pos:end="321:18"><name pos:start="321:16" pos:end="321:18">ctx</name></expr></argument>, <argument pos:start="321:21" pos:end="321:28"><expr pos:start="321:21" pos:end="321:28"><name pos:start="321:21" pos:end="321:28">OPC_LWPC</name></expr></argument>, <argument pos:start="321:31" pos:end="321:32"><expr pos:start="321:31" pos:end="321:32"><name pos:start="321:31" pos:end="321:32">rx</name></expr></argument>, <argument pos:start="321:35" pos:end="321:35"><expr pos:start="321:35" pos:end="321:35"><literal type="number" pos:start="321:35" pos:end="321:35">0</literal></expr></argument>, <argument pos:start="321:38" pos:end="321:43"><expr pos:start="321:38" pos:end="321:43"><name pos:start="321:38" pos:end="321:43">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="323:9" pos:end="326:0">break;</break>

<cpp:if pos:start="325:1" pos:end="325:26">#<cpp:directive pos:start="325:2" pos:end="325:3">if</cpp:directive> <expr pos:start="325:5" pos:end="325:26"><call pos:start="325:5" pos:end="325:26"><name pos:start="325:5" pos:end="325:11">defined</name><argument_list pos:start="325:12" pos:end="325:26">(<argument pos:start="325:13" pos:end="325:25"><expr pos:start="325:13" pos:end="325:25"><name pos:start="325:13" pos:end="325:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="327:5" pos:end="327:21">case <expr pos:start="327:10" pos:end="327:20"><name pos:start="327:10" pos:end="327:20">M16_OPC_LWU</name></expr>:</case>

        <expr_stmt pos:start="329:9" pos:end="329:45"><expr pos:start="329:9" pos:end="329:44"><call pos:start="329:9" pos:end="329:44"><name pos:start="329:9" pos:end="329:14">gen_ld</name><argument_list pos:start="329:15" pos:end="329:44">(<argument pos:start="329:16" pos:end="329:18"><expr pos:start="329:16" pos:end="329:18"><name pos:start="329:16" pos:end="329:18">ctx</name></expr></argument>, <argument pos:start="329:21" pos:end="329:27"><expr pos:start="329:21" pos:end="329:27"><name pos:start="329:21" pos:end="329:27">OPC_LWU</name></expr></argument>, <argument pos:start="329:30" pos:end="329:31"><expr pos:start="329:30" pos:end="329:31"><name pos:start="329:30" pos:end="329:31">ry</name></expr></argument>, <argument pos:start="329:34" pos:end="329:35"><expr pos:start="329:34" pos:end="329:35"><name pos:start="329:34" pos:end="329:35">rx</name></expr></argument>, <argument pos:start="329:38" pos:end="329:43"><expr pos:start="329:38" pos:end="329:43"><name pos:start="329:38" pos:end="329:43">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="331:9" pos:end="334:0">break;</break>

<cpp:endif pos:start="333:1" pos:end="333:6">#<cpp:directive pos:start="333:2" pos:end="333:6">endif</cpp:directive></cpp:endif>

    <case pos:start="335:5" pos:end="335:20">case <expr pos:start="335:10" pos:end="335:19"><name pos:start="335:10" pos:end="335:19">M16_OPC_SB</name></expr>:</case>

        <expr_stmt pos:start="337:9" pos:end="337:44"><expr pos:start="337:9" pos:end="337:43"><call pos:start="337:9" pos:end="337:43"><name pos:start="337:9" pos:end="337:14">gen_st</name><argument_list pos:start="337:15" pos:end="337:43">(<argument pos:start="337:16" pos:end="337:18"><expr pos:start="337:16" pos:end="337:18"><name pos:start="337:16" pos:end="337:18">ctx</name></expr></argument>, <argument pos:start="337:21" pos:end="337:26"><expr pos:start="337:21" pos:end="337:26"><name pos:start="337:21" pos:end="337:26">OPC_SB</name></expr></argument>, <argument pos:start="337:29" pos:end="337:30"><expr pos:start="337:29" pos:end="337:30"><name pos:start="337:29" pos:end="337:30">ry</name></expr></argument>, <argument pos:start="337:33" pos:end="337:34"><expr pos:start="337:33" pos:end="337:34"><name pos:start="337:33" pos:end="337:34">rx</name></expr></argument>, <argument pos:start="337:37" pos:end="337:42"><expr pos:start="337:37" pos:end="337:42"><name pos:start="337:37" pos:end="337:42">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="339:9" pos:end="339:14">break;</break>

    <case pos:start="341:5" pos:end="341:20">case <expr pos:start="341:10" pos:end="341:19"><name pos:start="341:10" pos:end="341:19">M16_OPC_SH</name></expr>:</case>

        <expr_stmt pos:start="343:9" pos:end="343:44"><expr pos:start="343:9" pos:end="343:43"><call pos:start="343:9" pos:end="343:43"><name pos:start="343:9" pos:end="343:14">gen_st</name><argument_list pos:start="343:15" pos:end="343:43">(<argument pos:start="343:16" pos:end="343:18"><expr pos:start="343:16" pos:end="343:18"><name pos:start="343:16" pos:end="343:18">ctx</name></expr></argument>, <argument pos:start="343:21" pos:end="343:26"><expr pos:start="343:21" pos:end="343:26"><name pos:start="343:21" pos:end="343:26">OPC_SH</name></expr></argument>, <argument pos:start="343:29" pos:end="343:30"><expr pos:start="343:29" pos:end="343:30"><name pos:start="343:29" pos:end="343:30">ry</name></expr></argument>, <argument pos:start="343:33" pos:end="343:34"><expr pos:start="343:33" pos:end="343:34"><name pos:start="343:33" pos:end="343:34">rx</name></expr></argument>, <argument pos:start="343:37" pos:end="343:42"><expr pos:start="343:37" pos:end="343:42"><name pos:start="343:37" pos:end="343:42">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="345:9" pos:end="345:14">break;</break>

    <case pos:start="347:5" pos:end="347:22">case <expr pos:start="347:10" pos:end="347:21"><name pos:start="347:10" pos:end="347:21">M16_OPC_SWSP</name></expr>:</case>

        <expr_stmt pos:start="349:9" pos:end="349:44"><expr pos:start="349:9" pos:end="349:43"><call pos:start="349:9" pos:end="349:43"><name pos:start="349:9" pos:end="349:14">gen_st</name><argument_list pos:start="349:15" pos:end="349:43">(<argument pos:start="349:16" pos:end="349:18"><expr pos:start="349:16" pos:end="349:18"><name pos:start="349:16" pos:end="349:18">ctx</name></expr></argument>, <argument pos:start="349:21" pos:end="349:26"><expr pos:start="349:21" pos:end="349:26"><name pos:start="349:21" pos:end="349:26">OPC_SW</name></expr></argument>, <argument pos:start="349:29" pos:end="349:30"><expr pos:start="349:29" pos:end="349:30"><name pos:start="349:29" pos:end="349:30">rx</name></expr></argument>, <argument pos:start="349:33" pos:end="349:34"><expr pos:start="349:33" pos:end="349:34"><literal type="number" pos:start="349:33" pos:end="349:34">29</literal></expr></argument>, <argument pos:start="349:37" pos:end="349:42"><expr pos:start="349:37" pos:end="349:42"><name pos:start="349:37" pos:end="349:42">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="351:9" pos:end="351:14">break;</break>

    <case pos:start="353:5" pos:end="353:20">case <expr pos:start="353:10" pos:end="353:19"><name pos:start="353:10" pos:end="353:19">M16_OPC_SW</name></expr>:</case>

        <expr_stmt pos:start="355:9" pos:end="355:44"><expr pos:start="355:9" pos:end="355:43"><call pos:start="355:9" pos:end="355:43"><name pos:start="355:9" pos:end="355:14">gen_st</name><argument_list pos:start="355:15" pos:end="355:43">(<argument pos:start="355:16" pos:end="355:18"><expr pos:start="355:16" pos:end="355:18"><name pos:start="355:16" pos:end="355:18">ctx</name></expr></argument>, <argument pos:start="355:21" pos:end="355:26"><expr pos:start="355:21" pos:end="355:26"><name pos:start="355:21" pos:end="355:26">OPC_SW</name></expr></argument>, <argument pos:start="355:29" pos:end="355:30"><expr pos:start="355:29" pos:end="355:30"><name pos:start="355:29" pos:end="355:30">ry</name></expr></argument>, <argument pos:start="355:33" pos:end="355:34"><expr pos:start="355:33" pos:end="355:34"><name pos:start="355:33" pos:end="355:34">rx</name></expr></argument>, <argument pos:start="355:37" pos:end="355:42"><expr pos:start="355:37" pos:end="355:42"><name pos:start="355:37" pos:end="355:42">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="357:9" pos:end="360:0">break;</break>

<cpp:if pos:start="359:1" pos:end="359:26">#<cpp:directive pos:start="359:2" pos:end="359:3">if</cpp:directive> <expr pos:start="359:5" pos:end="359:26"><call pos:start="359:5" pos:end="359:26"><name pos:start="359:5" pos:end="359:11">defined</name><argument_list pos:start="359:12" pos:end="359:26">(<argument pos:start="359:13" pos:end="359:25"><expr pos:start="359:13" pos:end="359:25"><name pos:start="359:13" pos:end="359:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="361:5" pos:end="361:21">case <expr pos:start="361:10" pos:end="361:20"><name pos:start="361:10" pos:end="361:20">M16_OPC_I64</name></expr>:</case>

        <expr_stmt pos:start="363:9" pos:end="363:53"><expr pos:start="363:9" pos:end="363:52"><call pos:start="363:9" pos:end="363:52"><name pos:start="363:9" pos:end="363:25">decode_i64_mips16</name><argument_list pos:start="363:26" pos:end="363:52">(<argument pos:start="363:27" pos:end="363:29"><expr pos:start="363:27" pos:end="363:29"><name pos:start="363:27" pos:end="363:29">ctx</name></expr></argument>, <argument pos:start="363:32" pos:end="363:33"><expr pos:start="363:32" pos:end="363:33"><name pos:start="363:32" pos:end="363:33">ry</name></expr></argument>, <argument pos:start="363:36" pos:end="363:40"><expr pos:start="363:36" pos:end="363:40"><name pos:start="363:36" pos:end="363:40">funct</name></expr></argument>, <argument pos:start="363:43" pos:end="363:48"><expr pos:start="363:43" pos:end="363:48"><name pos:start="363:43" pos:end="363:48">offset</name></expr></argument>, <argument pos:start="363:51" pos:end="363:51"><expr pos:start="363:51" pos:end="363:51"><literal type="number" pos:start="363:51" pos:end="363:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="365:9" pos:end="368:0">break;</break>

<cpp:endif pos:start="367:1" pos:end="367:6">#<cpp:directive pos:start="367:2" pos:end="367:6">endif</cpp:directive></cpp:endif>

    <default pos:start="369:5" pos:end="369:12">default:</default>

        <expr_stmt pos:start="371:9" pos:end="371:41"><expr pos:start="371:9" pos:end="371:40"><call pos:start="371:9" pos:end="371:40"><name pos:start="371:9" pos:end="371:26">generate_exception</name><argument_list pos:start="371:27" pos:end="371:40">(<argument pos:start="371:28" pos:end="371:30"><expr pos:start="371:28" pos:end="371:30"><name pos:start="371:28" pos:end="371:30">ctx</name></expr></argument>, <argument pos:start="371:33" pos:end="371:39"><expr pos:start="371:33" pos:end="371:39"><name pos:start="371:33" pos:end="371:39">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="373:9" pos:end="373:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="379:5" pos:end="379:13">return <expr pos:start="379:12" pos:end="379:12"><literal type="number" pos:start="379:12" pos:end="379:12">4</literal></expr>;</return>

</block_content>}</block></function>
</unit>
