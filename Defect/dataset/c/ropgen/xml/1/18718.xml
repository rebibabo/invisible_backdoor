<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18718.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">xvag_read_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:19">offset</name></decl>, <decl pos:start="5:22" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:22" pos:end="5:31">big_endian</name></decl>, <decl pos:start="5:34" pos:end="5:38"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:34" pos:end="5:38">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><call pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:13">avio_skip</name><argument_list pos:start="11:14" pos:end="11:23">(<argument pos:start="11:15" pos:end="11:19"><expr pos:start="11:15" pos:end="11:19"><name pos:start="11:15" pos:end="11:19"><name pos:start="11:15" pos:end="11:15">s</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:19">pb</name></name></expr></argument>, <argument pos:start="11:22" pos:end="11:22"><expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:6">st</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <call pos:start="15:10" pos:end="15:37"><name pos:start="15:10" pos:end="15:28">avformat_new_stream</name><argument_list pos:start="15:29" pos:end="15:37">(<argument pos:start="15:30" pos:end="15:30"><expr pos:start="15:30" pos:end="15:30"><name pos:start="15:30" pos:end="15:30">s</name></expr></argument>, <argument pos:start="15:33" pos:end="15:36"><expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:31"><if pos:start="17:5" pos:end="19:31">if <condition pos:start="17:8" pos:end="17:12">(<expr pos:start="17:9" pos:end="17:11"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:11">st</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:31"><block_content pos:start="19:9" pos:end="19:31">

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:50"><expr pos:start="23:5" pos:end="23:49"><name pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:6">st</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:16">codecpar</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:28">codec_type</name></name> <operator pos:start="23:30" pos:end="23:30">=</operator> <name pos:start="23:32" pos:end="23:49">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:10">offset</name>     <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:33"><name pos:start="27:18" pos:end="27:26">avio_rl32</name><argument_list pos:start="27:27" pos:end="27:33">(<argument pos:start="27:28" pos:end="27:32"><expr pos:start="27:28" pos:end="27:32"><name pos:start="27:28" pos:end="27:32"><name pos:start="27:28" pos:end="27:28">s</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:32">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:14">big_endian</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:23">offset</name> <operator pos:start="29:25" pos:end="29:25">&gt;</operator> <call pos:start="29:27" pos:end="29:44"><name pos:start="29:27" pos:end="29:36">av_bswap32</name><argument_list pos:start="29:37" pos:end="29:44">(<argument pos:start="29:38" pos:end="29:43"><expr pos:start="29:38" pos:end="29:43"><name pos:start="29:38" pos:end="29:43">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="65:5"><if pos:start="31:5" pos:end="49:5">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:18">big_endian</name></expr>)</condition> <block pos:start="31:21" pos:end="49:5">{<block_content pos:start="33:9" pos:end="47:53">

        <expr_stmt pos:start="33:9" pos:end="33:52"><expr pos:start="33:9" pos:end="33:51"><name pos:start="33:9" pos:end="33:14">offset</name>                 <operator pos:start="33:32" pos:end="33:32">=</operator> <call pos:start="33:34" pos:end="33:51"><name pos:start="33:34" pos:end="33:43">av_bswap32</name><argument_list pos:start="33:44" pos:end="33:51">(<argument pos:start="33:45" pos:end="33:50"><expr pos:start="33:45" pos:end="33:50"><name pos:start="33:45" pos:end="33:50">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><call pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:17">avio_skip</name><argument_list pos:start="35:18" pos:end="35:28">(<argument pos:start="35:19" pos:end="35:23"><expr pos:start="35:19" pos:end="35:23"><name pos:start="35:19" pos:end="35:23"><name pos:start="35:19" pos:end="35:19">s</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:23">pb</name></name></expr></argument>, <argument pos:start="35:26" pos:end="35:27"><expr pos:start="35:26" pos:end="35:27"><literal type="number" pos:start="35:26" pos:end="35:27">28</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:50"><expr pos:start="37:9" pos:end="37:49"><name pos:start="37:9" pos:end="37:13">codec</name>                  <operator pos:start="37:32" pos:end="37:32">=</operator> <call pos:start="37:34" pos:end="37:49"><name pos:start="37:34" pos:end="37:42">avio_rb32</name><argument_list pos:start="37:43" pos:end="37:49">(<argument pos:start="37:44" pos:end="37:48"><expr pos:start="37:44" pos:end="37:48"><name pos:start="37:44" pos:end="37:48"><name pos:start="37:44" pos:end="37:44">s</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:48">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:50"><expr pos:start="39:9" pos:end="39:49"><name pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:10">st</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:20">codecpar</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:30">channels</name></name> <operator pos:start="39:32" pos:end="39:32">=</operator> <call pos:start="39:34" pos:end="39:49"><name pos:start="39:34" pos:end="39:42">avio_rb32</name><argument_list pos:start="39:43" pos:end="39:49">(<argument pos:start="39:44" pos:end="39:48"><expr pos:start="39:44" pos:end="39:48"><name pos:start="39:44" pos:end="39:48"><name pos:start="39:44" pos:end="39:44">s</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:48">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><call pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:17">avio_skip</name><argument_list pos:start="41:18" pos:end="41:27">(<argument pos:start="41:19" pos:end="41:23"><expr pos:start="41:19" pos:end="41:23"><name pos:start="41:19" pos:end="41:23"><name pos:start="41:19" pos:end="41:19">s</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:23">pb</name></name></expr></argument>, <argument pos:start="41:26" pos:end="41:26"><expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:50"><expr pos:start="43:9" pos:end="43:49"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:10">st</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:20">duration</name></name>           <operator pos:start="43:32" pos:end="43:32">=</operator> <call pos:start="43:34" pos:end="43:49"><name pos:start="43:34" pos:end="43:42">avio_rb32</name><argument_list pos:start="43:43" pos:end="43:49">(<argument pos:start="43:44" pos:end="43:48"><expr pos:start="43:44" pos:end="43:48"><name pos:start="43:44" pos:end="43:48"><name pos:start="43:44" pos:end="43:44">s</name><operator pos:start="43:45" pos:end="43:46">-&gt;</operator><name pos:start="43:47" pos:end="43:48">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><call pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:17">avio_skip</name><argument_list pos:start="45:18" pos:end="45:27">(<argument pos:start="45:19" pos:end="45:23"><expr pos:start="45:19" pos:end="45:23"><name pos:start="45:19" pos:end="45:23"><name pos:start="45:19" pos:end="45:19">s</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:23">pb</name></name></expr></argument>, <argument pos:start="45:26" pos:end="45:26"><expr pos:start="45:26" pos:end="45:26"><literal type="number" pos:start="45:26" pos:end="45:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:53"><expr pos:start="47:9" pos:end="47:52"><name pos:start="47:9" pos:end="47:33"><name pos:start="47:9" pos:end="47:10">st</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:20">codecpar</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:33">sample_rate</name></name> <operator pos:start="47:35" pos:end="47:35">=</operator> <call pos:start="47:37" pos:end="47:52"><name pos:start="47:37" pos:end="47:45">avio_rb32</name><argument_list pos:start="47:46" pos:end="47:52">(<argument pos:start="47:47" pos:end="47:51"><expr pos:start="47:47" pos:end="47:51"><name pos:start="47:47" pos:end="47:51"><name pos:start="47:47" pos:end="47:47">s</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:51">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="65:5">else <block pos:start="49:12" pos:end="65:5">{<block_content pos:start="51:9" pos:end="63:53">

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><call pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:17">avio_skip</name><argument_list pos:start="51:18" pos:end="51:28">(<argument pos:start="51:19" pos:end="51:23"><expr pos:start="51:19" pos:end="51:23"><name pos:start="51:19" pos:end="51:23"><name pos:start="51:19" pos:end="51:19">s</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:23">pb</name></name></expr></argument>, <argument pos:start="51:26" pos:end="51:27"><expr pos:start="51:26" pos:end="51:27"><literal type="number" pos:start="51:26" pos:end="51:27">28</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:50"><expr pos:start="53:9" pos:end="53:49"><name pos:start="53:9" pos:end="53:13">codec</name>                  <operator pos:start="53:32" pos:end="53:32">=</operator> <call pos:start="53:34" pos:end="53:49"><name pos:start="53:34" pos:end="53:42">avio_rl32</name><argument_list pos:start="53:43" pos:end="53:49">(<argument pos:start="53:44" pos:end="53:48"><expr pos:start="53:44" pos:end="53:48"><name pos:start="53:44" pos:end="53:48"><name pos:start="53:44" pos:end="53:44">s</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:48">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:50"><expr pos:start="55:9" pos:end="55:49"><name pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:10">st</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:20">codecpar</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:30">channels</name></name> <operator pos:start="55:32" pos:end="55:32">=</operator> <call pos:start="55:34" pos:end="55:49"><name pos:start="55:34" pos:end="55:42">avio_rl32</name><argument_list pos:start="55:43" pos:end="55:49">(<argument pos:start="55:44" pos:end="55:48"><expr pos:start="55:44" pos:end="55:48"><name pos:start="55:44" pos:end="55:48"><name pos:start="55:44" pos:end="55:44">s</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:48">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><call pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:17">avio_skip</name><argument_list pos:start="57:18" pos:end="57:27">(<argument pos:start="57:19" pos:end="57:23"><expr pos:start="57:19" pos:end="57:23"><name pos:start="57:19" pos:end="57:23"><name pos:start="57:19" pos:end="57:19">s</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:23">pb</name></name></expr></argument>, <argument pos:start="57:26" pos:end="57:26"><expr pos:start="57:26" pos:end="57:26"><literal type="number" pos:start="57:26" pos:end="57:26">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:50"><expr pos:start="59:9" pos:end="59:49"><name pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:10">st</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:20">duration</name></name>           <operator pos:start="59:32" pos:end="59:32">=</operator> <call pos:start="59:34" pos:end="59:49"><name pos:start="59:34" pos:end="59:42">avio_rl32</name><argument_list pos:start="59:43" pos:end="59:49">(<argument pos:start="59:44" pos:end="59:48"><expr pos:start="59:44" pos:end="59:48"><name pos:start="59:44" pos:end="59:48"><name pos:start="59:44" pos:end="59:44">s</name><operator pos:start="59:45" pos:end="59:46">-&gt;</operator><name pos:start="59:47" pos:end="59:48">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:28"><expr pos:start="61:9" pos:end="61:27"><call pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:17">avio_skip</name><argument_list pos:start="61:18" pos:end="61:27">(<argument pos:start="61:19" pos:end="61:23"><expr pos:start="61:19" pos:end="61:23"><name pos:start="61:19" pos:end="61:23"><name pos:start="61:19" pos:end="61:19">s</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:23">pb</name></name></expr></argument>, <argument pos:start="61:26" pos:end="61:26"><expr pos:start="61:26" pos:end="61:26"><literal type="number" pos:start="61:26" pos:end="61:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:53"><expr pos:start="63:9" pos:end="63:52"><name pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:10">st</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:20">codecpar</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:33">sample_rate</name></name> <operator pos:start="63:35" pos:end="63:35">=</operator> <call pos:start="63:37" pos:end="63:52"><name pos:start="63:37" pos:end="63:45">avio_rl32</name><argument_list pos:start="63:46" pos:end="63:52">(<argument pos:start="63:47" pos:end="63:51"><expr pos:start="63:47" pos:end="63:51"><name pos:start="63:47" pos:end="63:51"><name pos:start="63:47" pos:end="63:47">s</name><operator pos:start="63:48" pos:end="63:49">-&gt;</operator><name pos:start="63:50" pos:end="63:51">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="69:5" pos:end="71:35"><if pos:start="69:5" pos:end="71:35">if <condition pos:start="69:8" pos:end="69:39">(<expr pos:start="69:9" pos:end="69:38"><name pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:10">st</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:20">codecpar</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:33">sample_rate</name></name> <operator pos:start="69:35" pos:end="69:36">&lt;=</operator> <literal type="number" pos:start="69:38" pos:end="69:38">0</literal></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:35"><block_content pos:start="71:9" pos:end="71:35">

        <return pos:start="71:9" pos:end="71:35">return <expr pos:start="71:16" pos:end="71:34"><name pos:start="71:16" pos:end="71:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="75:35"><if pos:start="73:5" pos:end="75:35">if <condition pos:start="73:8" pos:end="73:36">(<expr pos:start="73:9" pos:end="73:35"><name pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:10">st</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:20">codecpar</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:30">channels</name></name> <operator pos:start="73:32" pos:end="73:33">&lt;=</operator> <literal type="number" pos:start="73:35" pos:end="73:35">0</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:35"><block_content pos:start="75:9" pos:end="75:35">

        <return pos:start="75:9" pos:end="75:35">return <expr pos:start="75:16" pos:end="75:34"><name pos:start="75:16" pos:end="75:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <switch pos:start="79:5" pos:end="95:5">switch <condition pos:start="79:12" pos:end="79:18">(<expr pos:start="79:13" pos:end="79:17"><name pos:start="79:13" pos:end="79:17">codec</name></expr>)</condition> <block pos:start="79:20" pos:end="95:5">{<block_content pos:start="81:5" pos:end="93:36">

    <case pos:start="81:5" pos:end="81:14">case <expr pos:start="81:10" pos:end="81:13"><literal type="number" pos:start="81:10" pos:end="81:13">0x1c</literal></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:58"><expr pos:start="83:9" pos:end="83:57"><name pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:10">st</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:20">codecpar</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:30">codec_id</name></name>    <operator pos:start="83:35" pos:end="83:35">=</operator> <name pos:start="83:37" pos:end="83:57">AV_CODEC_ID_ADPCM_PSX</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:64"><expr pos:start="85:9" pos:end="85:63"><name pos:start="85:9" pos:end="85:33"><name pos:start="85:9" pos:end="85:10">st</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:20">codecpar</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:33">block_align</name></name> <operator pos:start="85:35" pos:end="85:35">=</operator> <literal type="number" pos:start="85:37" pos:end="85:38">16</literal> <operator pos:start="85:40" pos:end="85:40">*</operator> <name pos:start="85:42" pos:end="85:63"><name pos:start="85:42" pos:end="85:43">st</name><operator pos:start="85:44" pos:end="85:45">-&gt;</operator><name pos:start="85:46" pos:end="85:53">codecpar</name><operator pos:start="85:54" pos:end="85:55">-&gt;</operator><name pos:start="85:56" pos:end="85:63">channels</name></name></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <default pos:start="89:5" pos:end="89:12">default:</default>

        <expr_stmt pos:start="91:9" pos:end="91:52"><expr pos:start="91:9" pos:end="91:51"><call pos:start="91:9" pos:end="91:51"><name pos:start="91:9" pos:end="91:29">avpriv_request_sample</name><argument_list pos:start="91:30" pos:end="91:51">(<argument pos:start="91:31" pos:end="91:31"><expr pos:start="91:31" pos:end="91:31"><name pos:start="91:31" pos:end="91:31">s</name></expr></argument>, <argument pos:start="91:34" pos:end="91:43"><expr pos:start="91:34" pos:end="91:43"><literal type="string" pos:start="91:34" pos:end="91:43">"codec %X"</literal></expr></argument>, <argument pos:start="91:46" pos:end="91:50"><expr pos:start="91:46" pos:end="91:50"><name pos:start="91:46" pos:end="91:50">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:36">return <expr pos:start="93:16" pos:end="93:35"><name pos:start="93:16" pos:end="93:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></switch><empty_stmt pos:start="95:6" pos:end="95:6">;</empty_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:48"><expr pos:start="99:5" pos:end="99:47"><call pos:start="99:5" pos:end="99:47"><name pos:start="99:5" pos:end="99:13">avio_skip</name><argument_list pos:start="99:14" pos:end="99:47">(<argument pos:start="99:15" pos:end="99:19"><expr pos:start="99:15" pos:end="99:19"><name pos:start="99:15" pos:end="99:19"><name pos:start="99:15" pos:end="99:15">s</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:19">pb</name></name></expr></argument>, <argument pos:start="99:22" pos:end="99:46"><expr pos:start="99:22" pos:end="99:46"><name pos:start="99:22" pos:end="99:27">offset</name> <operator pos:start="99:29" pos:end="99:29">-</operator> <call pos:start="99:31" pos:end="99:46"><name pos:start="99:31" pos:end="99:39">avio_tell</name><argument_list pos:start="99:40" pos:end="99:46">(<argument pos:start="99:41" pos:end="99:45"><expr pos:start="99:41" pos:end="99:45"><name pos:start="99:41" pos:end="99:45"><name pos:start="99:41" pos:end="99:41">s</name><operator pos:start="99:42" pos:end="99:43">-&gt;</operator><name pos:start="99:44" pos:end="99:45">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="103:5" pos:end="111:5"><if pos:start="103:5" pos:end="111:5">if <condition pos:start="103:8" pos:end="103:35">(<expr pos:start="103:9" pos:end="103:34"><call pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:17">avio_rb16</name><argument_list pos:start="103:18" pos:end="103:24">(<argument pos:start="103:19" pos:end="103:23"><expr pos:start="103:19" pos:end="103:23"><name pos:start="103:19" pos:end="103:23"><name pos:start="103:19" pos:end="103:19">s</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:23">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="103:26" pos:end="103:27">==</operator> <literal type="number" pos:start="103:29" pos:end="103:34">0xFFFB</literal></expr>)</condition> <block pos:start="103:37" pos:end="111:5">{<block_content pos:start="105:9" pos:end="109:57">

        <expr_stmt pos:start="105:9" pos:end="105:52"><expr pos:start="105:9" pos:end="105:51"><name pos:start="105:9" pos:end="105:30"><name pos:start="105:9" pos:end="105:10">st</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:20">codecpar</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:30">codec_id</name></name>    <operator pos:start="105:35" pos:end="105:35">=</operator> <name pos:start="105:37" pos:end="105:51">AV_CODEC_ID_MP3</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:43"><expr pos:start="107:9" pos:end="107:42"><name pos:start="107:9" pos:end="107:33"><name pos:start="107:9" pos:end="107:10">st</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:20">codecpar</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:33">block_align</name></name> <operator pos:start="107:35" pos:end="107:35">=</operator> <literal type="number" pos:start="107:37" pos:end="107:42">0x1000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:57"><expr pos:start="109:9" pos:end="109:56"><name pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:10">st</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:24">need_parsing</name></name>       <operator pos:start="109:32" pos:end="109:32">=</operator> <name pos:start="109:34" pos:end="109:56">AVSTREAM_PARSE_FULL_RAW</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:25"><expr pos:start="115:5" pos:end="115:24"><call pos:start="115:5" pos:end="115:24"><name pos:start="115:5" pos:end="115:13">avio_skip</name><argument_list pos:start="115:14" pos:end="115:24">(<argument pos:start="115:15" pos:end="115:19"><expr pos:start="115:15" pos:end="115:19"><name pos:start="115:15" pos:end="115:19"><name pos:start="115:15" pos:end="115:15">s</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:19">pb</name></name></expr></argument>, <argument pos:start="115:22" pos:end="115:23"><expr pos:start="115:22" pos:end="115:23"><operator pos:start="115:22" pos:end="115:22">-</operator><literal type="number" pos:start="115:23" pos:end="115:23">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:62"><expr pos:start="117:5" pos:end="117:61"><call pos:start="117:5" pos:end="117:61"><name pos:start="117:5" pos:end="117:23">avpriv_set_pts_info</name><argument_list pos:start="117:24" pos:end="117:61">(<argument pos:start="117:25" pos:end="117:26"><expr pos:start="117:25" pos:end="117:26"><name pos:start="117:25" pos:end="117:26">st</name></expr></argument>, <argument pos:start="117:29" pos:end="117:30"><expr pos:start="117:29" pos:end="117:30"><literal type="number" pos:start="117:29" pos:end="117:30">64</literal></expr></argument>, <argument pos:start="117:33" pos:end="117:33"><expr pos:start="117:33" pos:end="117:33"><literal type="number" pos:start="117:33" pos:end="117:33">1</literal></expr></argument>, <argument pos:start="117:36" pos:end="117:60"><expr pos:start="117:36" pos:end="117:60"><name pos:start="117:36" pos:end="117:60"><name pos:start="117:36" pos:end="117:37">st</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:47">codecpar</name><operator pos:start="117:48" pos:end="117:49">-&gt;</operator><name pos:start="117:50" pos:end="117:60">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="121:5" pos:end="121:13">return <expr pos:start="121:12" pos:end="121:12"><literal type="number" pos:start="121:12" pos:end="121:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
