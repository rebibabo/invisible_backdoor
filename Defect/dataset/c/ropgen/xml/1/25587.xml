<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25587.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">test_cipher</name><parameter_list pos:start="1:24" pos:end="1:43">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:36"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:32">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:33"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:31">QCryptoCipherTestData</name> <modifier pos:start="5:33" pos:end="5:33">*</modifier></type><name pos:start="5:34" pos:end="5:37">data</name> <init pos:start="5:39" pos:end="5:46">= <expr pos:start="5:41" pos:end="5:46"><name pos:start="5:41" pos:end="5:46">opaque</name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">QCryptoCipher</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:25">cipher</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">err</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:57"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">key</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:21">iv</name></decl>, <decl pos:start="13:24" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:34">ciphertext</name></decl>, <decl pos:start="13:37" pos:end="13:46"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:37" pos:end="13:37">*</modifier></type><name pos:start="13:38" pos:end="13:46">plaintext</name></decl>, <decl pos:start="13:49" pos:end="13:56"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:49" pos:end="13:49">*</modifier></type><name pos:start="13:50" pos:end="13:56">outtext</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:46"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">size_t</name></type> <name pos:start="15:12" pos:end="15:15">nkey</name></decl>, <decl pos:start="15:18" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:10"/><name pos:start="15:18" pos:end="15:20">niv</name></decl>, <decl pos:start="15:23" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:10"/><name pos:start="15:23" pos:end="15:33">nciphertext</name></decl>, <decl pos:start="15:36" pos:end="15:45"><type ref="prev" pos:start="15:5" pos:end="15:10"/><name pos:start="15:36" pos:end="15:45">nplaintext</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:20">outtexthex</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><call pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:18">g_test_message</name><argument_list pos:start="21:19" pos:end="21:25">(<argument pos:start="21:20" pos:end="21:24"><expr pos:start="21:20" pos:end="21:24"><literal type="string" pos:start="21:20" pos:end="21:24">"foo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:41"><expr pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:8">nkey</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:40"><name pos:start="23:12" pos:end="23:23">unhex_string</name><argument_list pos:start="23:24" pos:end="23:40">(<argument pos:start="23:25" pos:end="23:33"><expr pos:start="23:25" pos:end="23:33"><name pos:start="23:25" pos:end="23:33"><name pos:start="23:25" pos:end="23:28">data</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:33">key</name></name></expr></argument>, <argument pos:start="23:36" pos:end="23:39"><expr pos:start="23:36" pos:end="23:39"><operator pos:start="23:36" pos:end="23:36">&amp;</operator><name pos:start="23:37" pos:end="23:39">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:7">niv</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:37"><name pos:start="25:11" pos:end="25:22">unhex_string</name><argument_list pos:start="25:23" pos:end="25:37">(<argument pos:start="25:24" pos:end="25:31"><expr pos:start="25:24" pos:end="25:31"><name pos:start="25:24" pos:end="25:31"><name pos:start="25:24" pos:end="25:27">data</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:31">iv</name></name></expr></argument>, <argument pos:start="25:34" pos:end="25:36"><expr pos:start="25:34" pos:end="25:36"><operator pos:start="25:34" pos:end="25:34">&amp;</operator><name pos:start="25:35" pos:end="25:36">iv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:62"><expr pos:start="27:5" pos:end="27:61"><name pos:start="27:5" pos:end="27:15">nciphertext</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:61"><name pos:start="27:19" pos:end="27:30">unhex_string</name><argument_list pos:start="27:31" pos:end="27:61">(<argument pos:start="27:32" pos:end="27:47"><expr pos:start="27:32" pos:end="27:47"><name pos:start="27:32" pos:end="27:47"><name pos:start="27:32" pos:end="27:35">data</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:47">ciphertext</name></name></expr></argument>, <argument pos:start="27:50" pos:end="27:60"><expr pos:start="27:50" pos:end="27:60"><operator pos:start="27:50" pos:end="27:50">&amp;</operator><name pos:start="27:51" pos:end="27:60">ciphertext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:59"><expr pos:start="29:5" pos:end="29:58"><name pos:start="29:5" pos:end="29:14">nplaintext</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:58"><name pos:start="29:18" pos:end="29:29">unhex_string</name><argument_list pos:start="29:30" pos:end="29:58">(<argument pos:start="29:31" pos:end="29:45"><expr pos:start="29:31" pos:end="29:45"><name pos:start="29:31" pos:end="29:45"><name pos:start="29:31" pos:end="29:34">data</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:45">plaintext</name></name></expr></argument>, <argument pos:start="29:48" pos:end="29:57"><expr pos:start="29:48" pos:end="29:57"><operator pos:start="29:48" pos:end="29:48">&amp;</operator><name pos:start="29:49" pos:end="29:57">plaintext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:40"><expr pos:start="33:5" pos:end="33:39"><call pos:start="33:5" pos:end="33:39"><name pos:start="33:5" pos:end="33:12">g_assert</name><argument_list pos:start="33:13" pos:end="33:39">(<argument pos:start="33:14" pos:end="33:38"><expr pos:start="33:14" pos:end="33:38"><name pos:start="33:14" pos:end="33:24">nciphertext</name> <operator pos:start="33:26" pos:end="33:27">==</operator> <name pos:start="33:29" pos:end="33:38">nplaintext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:43"><expr pos:start="37:5" pos:end="37:42"><name pos:start="37:5" pos:end="37:11">outtext</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:42"><name pos:start="37:15" pos:end="37:20">g_new0</name><argument_list pos:start="37:21" pos:end="37:42">(<argument pos:start="37:22" pos:end="37:28"><expr pos:start="37:22" pos:end="37:28"><name pos:start="37:22" pos:end="37:28">uint8_t</name></expr></argument>, <argument pos:start="37:31" pos:end="37:41"><expr pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:41">nciphertext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="47:14"><expr pos:start="41:5" pos:end="47:13"><name pos:start="41:5" pos:end="41:10">cipher</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="47:13"><name pos:start="41:14" pos:end="41:31">qcrypto_cipher_new</name><argument_list pos:start="41:32" pos:end="47:13">(

        <argument pos:start="43:9" pos:end="43:17"><expr pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:12">data</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:17">alg</name></name></expr></argument>, <argument pos:start="43:20" pos:end="43:29"><expr pos:start="43:20" pos:end="43:29"><name pos:start="43:20" pos:end="43:29"><name pos:start="43:20" pos:end="43:23">data</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:29">mode</name></name></expr></argument>,

        <argument pos:start="45:9" pos:end="45:11"><expr pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">key</name></expr></argument>, <argument pos:start="45:14" pos:end="45:17"><expr pos:start="45:14" pos:end="45:17"><name pos:start="45:14" pos:end="45:17">nkey</name></expr></argument>,

        <argument pos:start="47:9" pos:end="47:12"><expr pos:start="47:9" pos:end="47:12"><operator pos:start="47:9" pos:end="47:9">&amp;</operator><name pos:start="47:10" pos:end="47:12">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><call pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:12">g_assert</name><argument_list pos:start="49:13" pos:end="49:28">(<argument pos:start="49:14" pos:end="49:27"><expr pos:start="49:14" pos:end="49:27"><name pos:start="49:14" pos:end="49:19">cipher</name> <operator pos:start="49:21" pos:end="49:22">!=</operator> <name pos:start="49:24" pos:end="49:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:26"><expr pos:start="51:5" pos:end="51:25"><call pos:start="51:5" pos:end="51:25"><name pos:start="51:5" pos:end="51:12">g_assert</name><argument_list pos:start="51:13" pos:end="51:25">(<argument pos:start="51:14" pos:end="51:24"><expr pos:start="51:14" pos:end="51:24"><name pos:start="51:14" pos:end="51:16">err</name> <operator pos:start="51:18" pos:end="51:19">==</operator> <name pos:start="51:21" pos:end="51:24">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <if_stmt pos:start="57:5" pos:end="67:5"><if pos:start="57:5" pos:end="67:5">if <condition pos:start="57:8" pos:end="57:11">(<expr pos:start="57:9" pos:end="57:10"><name pos:start="57:9" pos:end="57:10">iv</name></expr>)</condition> <block pos:start="57:13" pos:end="67:5">{<block_content pos:start="59:9" pos:end="65:30">

        <expr_stmt pos:start="59:9" pos:end="63:50"><expr pos:start="59:9" pos:end="63:49"><call pos:start="59:9" pos:end="63:49"><name pos:start="59:9" pos:end="59:16">g_assert</name><argument_list pos:start="59:17" pos:end="63:49">(<argument pos:start="59:18" pos:end="63:48"><expr pos:start="59:18" pos:end="63:48"><call pos:start="59:18" pos:end="63:43"><name pos:start="59:18" pos:end="59:37">qcrypto_cipher_setiv</name><argument_list pos:start="59:38" pos:end="63:43">(<argument pos:start="59:39" pos:end="59:44"><expr pos:start="59:39" pos:end="59:44"><name pos:start="59:39" pos:end="59:44">cipher</name></expr></argument>,

                                      <argument pos:start="61:39" pos:end="61:40"><expr pos:start="61:39" pos:end="61:40"><name pos:start="61:39" pos:end="61:40">iv</name></expr></argument>, <argument pos:start="61:43" pos:end="61:45"><expr pos:start="61:43" pos:end="61:45"><name pos:start="61:43" pos:end="61:45">niv</name></expr></argument>,

                                      <argument pos:start="63:39" pos:end="63:42"><expr pos:start="63:39" pos:end="63:42"><operator pos:start="63:39" pos:end="63:39">&amp;</operator><name pos:start="63:40" pos:end="63:42">err</name></expr></argument>)</argument_list></call> <operator pos:start="63:45" pos:end="63:46">==</operator> <literal type="number" pos:start="63:48" pos:end="63:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><call pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:16">g_assert</name><argument_list pos:start="65:17" pos:end="65:29">(<argument pos:start="65:18" pos:end="65:28"><expr pos:start="65:18" pos:end="65:28"><name pos:start="65:18" pos:end="65:20">err</name> <operator pos:start="65:22" pos:end="65:23">==</operator> <name pos:start="65:25" pos:end="65:28">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="77:48"><expr pos:start="69:5" pos:end="77:47"><call pos:start="69:5" pos:end="77:47"><name pos:start="69:5" pos:end="69:12">g_assert</name><argument_list pos:start="69:13" pos:end="77:47">(<argument pos:start="69:14" pos:end="77:46"><expr pos:start="69:14" pos:end="77:46"><call pos:start="69:14" pos:end="77:41"><name pos:start="69:14" pos:end="69:35">qcrypto_cipher_encrypt</name><argument_list pos:start="69:36" pos:end="77:41">(<argument pos:start="69:37" pos:end="69:42"><expr pos:start="69:37" pos:end="69:42"><name pos:start="69:37" pos:end="69:42">cipher</name></expr></argument>,

                                    <argument pos:start="71:37" pos:end="71:45"><expr pos:start="71:37" pos:end="71:45"><name pos:start="71:37" pos:end="71:45">plaintext</name></expr></argument>,

                                    <argument pos:start="73:37" pos:end="73:43"><expr pos:start="73:37" pos:end="73:43"><name pos:start="73:37" pos:end="73:43">outtext</name></expr></argument>,

                                    <argument pos:start="75:37" pos:end="75:46"><expr pos:start="75:37" pos:end="75:46"><name pos:start="75:37" pos:end="75:46">nplaintext</name></expr></argument>,

                                    <argument pos:start="77:37" pos:end="77:40"><expr pos:start="77:37" pos:end="77:40"><operator pos:start="77:37" pos:end="77:37">&amp;</operator><name pos:start="77:38" pos:end="77:40">err</name></expr></argument>)</argument_list></call> <operator pos:start="77:43" pos:end="77:44">==</operator> <literal type="number" pos:start="77:46" pos:end="77:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:26"><expr pos:start="79:5" pos:end="79:25"><call pos:start="79:5" pos:end="79:25"><name pos:start="79:5" pos:end="79:12">g_assert</name><argument_list pos:start="79:13" pos:end="79:25">(<argument pos:start="79:14" pos:end="79:24"><expr pos:start="79:14" pos:end="79:24"><name pos:start="79:14" pos:end="79:16">err</name> <operator pos:start="79:18" pos:end="79:19">==</operator> <name pos:start="79:21" pos:end="79:24">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:50"><expr pos:start="83:5" pos:end="83:49"><name pos:start="83:5" pos:end="83:14">outtexthex</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <call pos:start="83:18" pos:end="83:49"><name pos:start="83:18" pos:end="83:27">hex_string</name><argument_list pos:start="83:28" pos:end="83:49">(<argument pos:start="83:29" pos:end="83:35"><expr pos:start="83:29" pos:end="83:35"><name pos:start="83:29" pos:end="83:35">outtext</name></expr></argument>, <argument pos:start="83:38" pos:end="83:48"><expr pos:start="83:38" pos:end="83:48"><name pos:start="83:38" pos:end="83:48">nciphertext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:54"><expr pos:start="87:5" pos:end="87:53"><call pos:start="87:5" pos:end="87:53"><name pos:start="87:5" pos:end="87:19">g_assert_cmpstr</name><argument_list pos:start="87:20" pos:end="87:53">(<argument pos:start="87:21" pos:end="87:30"><expr pos:start="87:21" pos:end="87:30"><name pos:start="87:21" pos:end="87:30">outtexthex</name></expr></argument>, <argument pos:start="87:33" pos:end="87:34"><expr pos:start="87:33" pos:end="87:34"><operator pos:start="87:33" pos:end="87:34">==</operator></expr></argument>, <argument pos:start="87:37" pos:end="87:52"><expr pos:start="87:37" pos:end="87:52"><name pos:start="87:37" pos:end="87:52"><name pos:start="87:37" pos:end="87:40">data</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:52">ciphertext</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:20"><expr pos:start="91:5" pos:end="91:19"><call pos:start="91:5" pos:end="91:19"><name pos:start="91:5" pos:end="91:10">g_free</name><argument_list pos:start="91:11" pos:end="91:19">(<argument pos:start="91:12" pos:end="91:18"><expr pos:start="91:12" pos:end="91:18"><name pos:start="91:12" pos:end="91:18">outtext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:23"><expr pos:start="93:5" pos:end="93:22"><call pos:start="93:5" pos:end="93:22"><name pos:start="93:5" pos:end="93:10">g_free</name><argument_list pos:start="93:11" pos:end="93:22">(<argument pos:start="93:12" pos:end="93:21"><expr pos:start="93:12" pos:end="93:21"><name pos:start="93:12" pos:end="93:21">outtexthex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:16"><expr pos:start="95:5" pos:end="95:15"><call pos:start="95:5" pos:end="95:15"><name pos:start="95:5" pos:end="95:10">g_free</name><argument_list pos:start="95:11" pos:end="95:15">(<argument pos:start="95:12" pos:end="95:14"><expr pos:start="95:12" pos:end="95:14"><name pos:start="95:12" pos:end="95:14">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:15"><expr pos:start="97:5" pos:end="97:14"><call pos:start="97:5" pos:end="97:14"><name pos:start="97:5" pos:end="97:10">g_free</name><argument_list pos:start="97:11" pos:end="97:14">(<argument pos:start="97:12" pos:end="97:13"><expr pos:start="97:12" pos:end="97:13"><name pos:start="97:12" pos:end="97:13">iv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:23"><expr pos:start="99:5" pos:end="99:22"><call pos:start="99:5" pos:end="99:22"><name pos:start="99:5" pos:end="99:10">g_free</name><argument_list pos:start="99:11" pos:end="99:22">(<argument pos:start="99:12" pos:end="99:21"><expr pos:start="99:12" pos:end="99:21"><name pos:start="99:12" pos:end="99:21">ciphertext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:22"><expr pos:start="101:5" pos:end="101:21"><call pos:start="101:5" pos:end="101:21"><name pos:start="101:5" pos:end="101:10">g_free</name><argument_list pos:start="101:11" pos:end="101:21">(<argument pos:start="101:12" pos:end="101:20"><expr pos:start="101:12" pos:end="101:20"><name pos:start="101:12" pos:end="101:20">plaintext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:32"><expr pos:start="103:5" pos:end="103:31"><call pos:start="103:5" pos:end="103:31"><name pos:start="103:5" pos:end="103:23">qcrypto_cipher_free</name><argument_list pos:start="103:24" pos:end="103:31">(<argument pos:start="103:25" pos:end="103:30"><expr pos:start="103:25" pos:end="103:30"><name pos:start="103:25" pos:end="103:30">cipher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
