<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6652.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">gic_update</name><parameter_list pos:start="1:16" pos:end="1:28">(<parameter pos:start="1:17" pos:end="1:27"><decl pos:start="1:17" pos:end="1:27"><type pos:start="1:17" pos:end="1:26"><name pos:start="1:17" pos:end="1:24">GICState</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:27">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">best_irq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">best_prio</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">irq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">irq_level</name></decl>, <decl pos:start="11:20" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:28">fiq_level</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:11"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">cm</name></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="121:5">for <control pos:start="19:9" pos:end="19:42">(<init pos:start="19:10" pos:end="19:17"><expr pos:start="19:10" pos:end="19:16"><name pos:start="19:10" pos:end="19:12">cpu</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</init> <condition pos:start="19:19" pos:end="19:35"><expr pos:start="19:19" pos:end="19:34"><name pos:start="19:19" pos:end="19:21">cpu</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:34"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:34">num_cpu</name></name></expr>;</condition> <incr pos:start="19:37" pos:end="19:41"><expr pos:start="19:37" pos:end="19:41"><name pos:start="19:37" pos:end="19:39">cpu</name><operator pos:start="19:40" pos:end="19:41">++</operator></expr></incr>)</control> <block pos:start="19:44" pos:end="121:5">{<block_content pos:start="21:9" pos:end="119:52">

        <expr_stmt pos:start="21:9" pos:end="21:22"><expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:10">cm</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">1</literal> <operator pos:start="21:16" pos:end="21:17">&lt;&lt;</operator> <name pos:start="21:19" pos:end="21:21">cpu</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:39"><expr pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:26">current_pending</name><index pos:start="23:27" pos:end="23:31">[<expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:30">cpu</name></expr>]</index></name> <operator pos:start="23:33" pos:end="23:33">=</operator> <literal type="number" pos:start="23:35" pos:end="23:38">1023</literal></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="35:9">if <condition pos:start="25:12" pos:end="27:77">(<expr pos:start="25:13" pos:end="27:76"><operator pos:start="25:13" pos:end="25:13">!</operator><operator pos:start="25:14" pos:end="25:14">(</operator><name pos:start="25:15" pos:end="25:21"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:21">ctlr</name></name> <operator pos:start="25:23" pos:end="25:23">&amp;</operator> <operator pos:start="25:25" pos:end="25:25">(</operator><name pos:start="25:26" pos:end="25:42">GICD_CTLR_EN_GRP0</name> <operator pos:start="25:44" pos:end="25:44">|</operator> <name pos:start="25:46" pos:end="25:62">GICD_CTLR_EN_GRP1</name><operator pos:start="25:63" pos:end="25:63">)</operator><operator pos:start="25:64" pos:end="25:64">)</operator>

            <operator pos:start="27:13" pos:end="27:14">||</operator> <operator pos:start="27:16" pos:end="27:16">!</operator><operator pos:start="27:17" pos:end="27:17">(</operator><name pos:start="27:18" pos:end="27:33"><name pos:start="27:18" pos:end="27:18">s</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:28">cpu_ctlr</name><index pos:start="27:29" pos:end="27:33">[<expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:32">cpu</name></expr>]</index></name> <operator pos:start="27:35" pos:end="27:35">&amp;</operator> <operator pos:start="27:37" pos:end="27:37">(</operator><name pos:start="27:38" pos:end="27:54">GICC_CTLR_EN_GRP0</name> <operator pos:start="27:56" pos:end="27:56">|</operator> <name pos:start="27:58" pos:end="27:74">GICC_CTLR_EN_GRP1</name><operator pos:start="27:75" pos:end="27:75">)</operator><operator pos:start="27:76" pos:end="27:76">)</operator></expr>)</condition> <block pos:start="27:79" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:21">

            <expr_stmt pos:start="29:13" pos:end="29:47"><expr pos:start="29:13" pos:end="29:46"><call pos:start="29:13" pos:end="29:46"><name pos:start="29:13" pos:end="29:26">qemu_irq_lower</name><argument_list pos:start="29:27" pos:end="29:46">(<argument pos:start="29:28" pos:end="29:45"><expr pos:start="29:28" pos:end="29:45"><name pos:start="29:28" pos:end="29:45"><name pos:start="29:28" pos:end="29:28">s</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:40">parent_irq</name><index pos:start="29:41" pos:end="29:45">[<expr pos:start="29:42" pos:end="29:44"><name pos:start="29:42" pos:end="29:44">cpu</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:47"><expr pos:start="31:13" pos:end="31:46"><call pos:start="31:13" pos:end="31:46"><name pos:start="31:13" pos:end="31:26">qemu_irq_lower</name><argument_list pos:start="31:27" pos:end="31:46">(<argument pos:start="31:28" pos:end="31:45"><expr pos:start="31:28" pos:end="31:45"><name pos:start="31:28" pos:end="31:45"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:40">parent_fiq</name><index pos:start="31:41" pos:end="31:45">[<expr pos:start="31:42" pos:end="31:44"><name pos:start="31:42" pos:end="31:44">cpu</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="33:13" pos:end="33:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:26"><expr pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:17">best_prio</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="number" pos:start="37:21" pos:end="37:25">0x100</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:16">best_irq</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <literal type="number" pos:start="39:20" pos:end="39:23">1023</literal></expr>;</expr_stmt>

        <for pos:start="41:9" pos:end="57:9">for <control pos:start="41:13" pos:end="41:46">(<init pos:start="41:14" pos:end="41:21"><expr pos:start="41:14" pos:end="41:20"><name pos:start="41:14" pos:end="41:16">irq</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr>;</init> <condition pos:start="41:23" pos:end="41:39"><expr pos:start="41:23" pos:end="41:38"><name pos:start="41:23" pos:end="41:25">irq</name> <operator pos:start="41:27" pos:end="41:27">&lt;</operator> <name pos:start="41:29" pos:end="41:38"><name pos:start="41:29" pos:end="41:29">s</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:38">num_irq</name></name></expr>;</condition> <incr pos:start="41:41" pos:end="41:45"><expr pos:start="41:41" pos:end="41:45"><name pos:start="41:41" pos:end="41:43">irq</name><operator pos:start="41:44" pos:end="41:45">++</operator></expr></incr>)</control> <block pos:start="41:48" pos:end="57:9">{<block_content pos:start="43:13" pos:end="55:13">

            <if_stmt pos:start="43:13" pos:end="55:13"><if pos:start="43:13" pos:end="55:13">if <condition pos:start="43:16" pos:end="45:61">(<expr pos:start="43:17" pos:end="45:60"><call pos:start="43:17" pos:end="43:41"><name pos:start="43:17" pos:end="43:32">GIC_TEST_ENABLED</name><argument_list pos:start="43:33" pos:end="43:41">(<argument pos:start="43:34" pos:end="43:36"><expr pos:start="43:34" pos:end="43:36"><name pos:start="43:34" pos:end="43:36">irq</name></expr></argument>, <argument pos:start="43:39" pos:end="43:40"><expr pos:start="43:39" pos:end="43:40"><name pos:start="43:39" pos:end="43:40">cm</name></expr></argument>)</argument_list></call> <operator pos:start="43:43" pos:end="43:44">&amp;&amp;</operator> <call pos:start="43:46" pos:end="43:73"><name pos:start="43:46" pos:end="43:61">gic_test_pending</name><argument_list pos:start="43:62" pos:end="43:73">(<argument pos:start="43:63" pos:end="43:63"><expr pos:start="43:63" pos:end="43:63"><name pos:start="43:63" pos:end="43:63">s</name></expr></argument>, <argument pos:start="43:66" pos:end="43:68"><expr pos:start="43:66" pos:end="43:68"><name pos:start="43:66" pos:end="43:68">irq</name></expr></argument>, <argument pos:start="43:71" pos:end="43:72"><expr pos:start="43:71" pos:end="43:72"><name pos:start="43:71" pos:end="43:72">cm</name></expr></argument>)</argument_list></call> <operator pos:start="43:75" pos:end="43:76">&amp;&amp;</operator>

                <operator pos:start="45:17" pos:end="45:17">(</operator><name pos:start="45:18" pos:end="45:20">irq</name> <operator pos:start="45:22" pos:end="45:22">&lt;</operator> <name pos:start="45:24" pos:end="45:35">GIC_INTERNAL</name> <operator pos:start="45:37" pos:end="45:38">||</operator> <call pos:start="45:40" pos:end="45:54"><name pos:start="45:40" pos:end="45:49">GIC_TARGET</name><argument_list pos:start="45:50" pos:end="45:54">(<argument pos:start="45:51" pos:end="45:53"><expr pos:start="45:51" pos:end="45:53"><name pos:start="45:51" pos:end="45:53">irq</name></expr></argument>)</argument_list></call> <operator pos:start="45:56" pos:end="45:56">&amp;</operator> <name pos:start="45:58" pos:end="45:59">cm</name><operator pos:start="45:60" pos:end="45:60">)</operator></expr>)</condition> <block pos:start="45:63" pos:end="55:13">{<block_content pos:start="47:17" pos:end="53:17">

                <if_stmt pos:start="47:17" pos:end="53:17"><if pos:start="47:17" pos:end="53:17">if <condition pos:start="47:20" pos:end="47:59">(<expr pos:start="47:21" pos:end="47:58"><call pos:start="47:21" pos:end="47:46"><name pos:start="47:21" pos:end="47:36">GIC_GET_PRIORITY</name><argument_list pos:start="47:37" pos:end="47:46">(<argument pos:start="47:38" pos:end="47:40"><expr pos:start="47:38" pos:end="47:40"><name pos:start="47:38" pos:end="47:40">irq</name></expr></argument>, <argument pos:start="47:43" pos:end="47:45"><expr pos:start="47:43" pos:end="47:45"><name pos:start="47:43" pos:end="47:45">cpu</name></expr></argument>)</argument_list></call> <operator pos:start="47:48" pos:end="47:48">&lt;</operator> <name pos:start="47:50" pos:end="47:58">best_prio</name></expr>)</condition> <block pos:start="47:61" pos:end="53:17">{<block_content pos:start="49:21" pos:end="51:35">

                    <expr_stmt pos:start="49:21" pos:end="49:59"><expr pos:start="49:21" pos:end="49:58"><name pos:start="49:21" pos:end="49:29">best_prio</name> <operator pos:start="49:31" pos:end="49:31">=</operator> <call pos:start="49:33" pos:end="49:58"><name pos:start="49:33" pos:end="49:48">GIC_GET_PRIORITY</name><argument_list pos:start="49:49" pos:end="49:58">(<argument pos:start="49:50" pos:end="49:52"><expr pos:start="49:50" pos:end="49:52"><name pos:start="49:50" pos:end="49:52">irq</name></expr></argument>, <argument pos:start="49:55" pos:end="49:57"><expr pos:start="49:55" pos:end="49:57"><name pos:start="49:55" pos:end="49:57">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="51:21" pos:end="51:35"><expr pos:start="51:21" pos:end="51:34"><name pos:start="51:21" pos:end="51:28">best_irq</name> <operator pos:start="51:30" pos:end="51:30">=</operator> <name pos:start="51:32" pos:end="51:34">irq</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:29">(<expr pos:start="61:13" pos:end="61:28"><name pos:start="61:13" pos:end="61:20">best_irq</name> <operator pos:start="61:22" pos:end="61:23">!=</operator> <literal type="number" pos:start="61:25" pos:end="61:28">1023</literal></expr>)</condition> <block pos:start="61:31" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:65">

            <expr_stmt pos:start="63:13" pos:end="65:65"><expr pos:start="63:13" pos:end="65:64"><call pos:start="63:13" pos:end="65:64"><name pos:start="63:13" pos:end="63:36">trace_gic_update_bestirq</name><argument_list pos:start="63:37" pos:end="65:64">(<argument pos:start="63:38" pos:end="63:40"><expr pos:start="63:38" pos:end="63:40"><name pos:start="63:38" pos:end="63:40">cpu</name></expr></argument>, <argument pos:start="63:43" pos:end="63:50"><expr pos:start="63:43" pos:end="63:50"><name pos:start="63:43" pos:end="63:50">best_irq</name></expr></argument>, <argument pos:start="63:53" pos:end="63:61"><expr pos:start="63:53" pos:end="63:61"><name pos:start="63:53" pos:end="63:61">best_prio</name></expr></argument>,

                <argument pos:start="65:17" pos:end="65:37"><expr pos:start="65:17" pos:end="65:37"><name pos:start="65:17" pos:end="65:37"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:32">priority_mask</name><index pos:start="65:33" pos:end="65:37">[<expr pos:start="65:34" pos:end="65:36"><name pos:start="65:34" pos:end="65:36">cpu</name></expr>]</index></name></expr></argument>, <argument pos:start="65:40" pos:end="65:63"><expr pos:start="65:40" pos:end="65:63"><name pos:start="65:40" pos:end="65:63"><name pos:start="65:40" pos:end="65:40">s</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:58">running_priority</name><index pos:start="65:59" pos:end="65:63">[<expr pos:start="65:60" pos:end="65:62"><name pos:start="65:60" pos:end="65:62">cpu</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:34"><expr pos:start="71:9" pos:end="71:33"><name pos:start="71:9" pos:end="71:17">irq_level</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <name pos:start="71:21" pos:end="71:29">fiq_level</name> <operator pos:start="71:31" pos:end="71:31">=</operator> <literal type="number" pos:start="71:33" pos:end="71:33">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="75:9" pos:end="113:9"><if pos:start="75:9" pos:end="113:9">if <condition pos:start="75:12" pos:end="75:46">(<expr pos:start="75:13" pos:end="75:45"><name pos:start="75:13" pos:end="75:21">best_prio</name> <operator pos:start="75:23" pos:end="75:23">&lt;</operator> <name pos:start="75:25" pos:end="75:45"><name pos:start="75:25" pos:end="75:25">s</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:40">priority_mask</name><index pos:start="75:41" pos:end="75:45">[<expr pos:start="75:42" pos:end="75:44"><name pos:start="75:42" pos:end="75:44">cpu</name></expr>]</index></name></expr>)</condition> <block pos:start="75:48" pos:end="113:9">{<block_content pos:start="77:13" pos:end="111:13">

            <expr_stmt pos:start="77:13" pos:end="77:47"><expr pos:start="77:13" pos:end="77:46"><name pos:start="77:13" pos:end="77:35"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:30">current_pending</name><index pos:start="77:31" pos:end="77:35">[<expr pos:start="77:32" pos:end="77:34"><name pos:start="77:32" pos:end="77:34">cpu</name></expr>]</index></name> <operator pos:start="77:37" pos:end="77:37">=</operator> <name pos:start="77:39" pos:end="77:46">best_irq</name></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="111:13"><if pos:start="79:13" pos:end="111:13">if <condition pos:start="79:16" pos:end="79:53">(<expr pos:start="79:17" pos:end="79:52"><name pos:start="79:17" pos:end="79:25">best_prio</name> <operator pos:start="79:27" pos:end="79:27">&lt;</operator> <name pos:start="79:29" pos:end="79:52"><name pos:start="79:29" pos:end="79:29">s</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:47">running_priority</name><index pos:start="79:48" pos:end="79:52">[<expr pos:start="79:49" pos:end="79:51"><name pos:start="79:49" pos:end="79:51">cpu</name></expr>]</index></name></expr>)</condition> <block pos:start="79:55" pos:end="111:13">{<block_content pos:start="81:17" pos:end="109:17">

                <decl_stmt pos:start="81:17" pos:end="81:57"><decl pos:start="81:17" pos:end="81:56"><type pos:start="81:17" pos:end="81:19"><name pos:start="81:17" pos:end="81:19">int</name></type> <name pos:start="81:21" pos:end="81:25">group</name> <init pos:start="81:27" pos:end="81:56">= <expr pos:start="81:29" pos:end="81:56"><call pos:start="81:29" pos:end="81:56"><name pos:start="81:29" pos:end="81:42">GIC_TEST_GROUP</name><argument_list pos:start="81:43" pos:end="81:56">(<argument pos:start="81:44" pos:end="81:51"><expr pos:start="81:44" pos:end="81:51"><name pos:start="81:44" pos:end="81:51">best_irq</name></expr></argument>, <argument pos:start="81:54" pos:end="81:55"><expr pos:start="81:54" pos:end="81:55"><name pos:start="81:54" pos:end="81:55">cm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="85:17" pos:end="109:17"><if pos:start="85:17" pos:end="109:17">if <condition pos:start="85:20" pos:end="87:58">(<expr pos:start="85:21" pos:end="87:57"><call pos:start="85:21" pos:end="85:48"><name pos:start="85:21" pos:end="85:29">extract32</name><argument_list pos:start="85:30" pos:end="85:48">(<argument pos:start="85:31" pos:end="85:37"><expr pos:start="85:31" pos:end="85:37"><name pos:start="85:31" pos:end="85:37"><name pos:start="85:31" pos:end="85:31">s</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:37">ctlr</name></name></expr></argument>, <argument pos:start="85:40" pos:end="85:44"><expr pos:start="85:40" pos:end="85:44"><name pos:start="85:40" pos:end="85:44">group</name></expr></argument>, <argument pos:start="85:47" pos:end="85:47"><expr pos:start="85:47" pos:end="85:47"><literal type="number" pos:start="85:47" pos:end="85:47">1</literal></expr></argument>)</argument_list></call> <operator pos:start="85:50" pos:end="85:51">&amp;&amp;</operator>

                    <call pos:start="87:21" pos:end="87:57"><name pos:start="87:21" pos:end="87:29">extract32</name><argument_list pos:start="87:30" pos:end="87:57">(<argument pos:start="87:31" pos:end="87:46"><expr pos:start="87:31" pos:end="87:46"><name pos:start="87:31" pos:end="87:46"><name pos:start="87:31" pos:end="87:31">s</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:41">cpu_ctlr</name><index pos:start="87:42" pos:end="87:46">[<expr pos:start="87:43" pos:end="87:45"><name pos:start="87:43" pos:end="87:45">cpu</name></expr>]</index></name></expr></argument>, <argument pos:start="87:49" pos:end="87:53"><expr pos:start="87:49" pos:end="87:53"><name pos:start="87:49" pos:end="87:53">group</name></expr></argument>, <argument pos:start="87:56" pos:end="87:56"><expr pos:start="87:56" pos:end="87:56"><literal type="number" pos:start="87:56" pos:end="87:56">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:60" pos:end="109:17">{<block_content pos:start="89:21" pos:end="107:21">

                    <if_stmt pos:start="89:21" pos:end="107:21"><if pos:start="89:21" pos:end="98:21">if <condition pos:start="89:24" pos:end="89:74">(<expr pos:start="89:25" pos:end="89:73"><name pos:start="89:25" pos:end="89:29">group</name> <operator pos:start="89:31" pos:end="89:32">==</operator> <literal type="number" pos:start="89:34" pos:end="89:34">0</literal> <operator pos:start="89:36" pos:end="89:37">&amp;&amp;</operator> <name pos:start="89:39" pos:end="89:54"><name pos:start="89:39" pos:end="89:39">s</name><operator pos:start="89:40" pos:end="89:41">-&gt;</operator><name pos:start="89:42" pos:end="89:49">cpu_ctlr</name><index pos:start="89:50" pos:end="89:54">[<expr pos:start="89:51" pos:end="89:53"><name pos:start="89:51" pos:end="89:53">cpu</name></expr>]</index></name> <operator pos:start="89:56" pos:end="89:56">&amp;</operator> <name pos:start="89:58" pos:end="89:73">GICC_CTLR_FIQ_EN</name></expr>)</condition> <block pos:start="89:76" pos:end="98:21">{<block_content pos:start="91:25" pos:end="95:38">

                        <expr_stmt pos:start="91:25" pos:end="93:47"><expr pos:start="91:25" pos:end="93:46"><call pos:start="91:25" pos:end="93:46"><name pos:start="91:25" pos:end="91:31">DPRINTF</name><argument_list pos:start="91:32" pos:end="93:46">(<argument pos:start="91:33" pos:end="91:66"><expr pos:start="91:33" pos:end="91:66"><literal type="string" pos:start="91:33" pos:end="91:66">"Raised pending FIQ %d (cpu %d)\n"</literal></expr></argument>,

                                <argument pos:start="93:33" pos:end="93:40"><expr pos:start="93:33" pos:end="93:40"><name pos:start="93:33" pos:end="93:40">best_irq</name></expr></argument>, <argument pos:start="93:43" pos:end="93:45"><expr pos:start="93:43" pos:end="93:45"><name pos:start="93:43" pos:end="93:45">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="95:25" pos:end="95:38"><expr pos:start="95:25" pos:end="95:37"><name pos:start="95:25" pos:end="95:33">fiq_level</name> <operator pos:start="95:35" pos:end="95:35">=</operator> <literal type="number" pos:start="95:37" pos:end="95:37">1</literal></expr>;</expr_stmt>


                    </block_content>}</block></if> <else pos:start="98:23" pos:end="107:21">else <block pos:start="98:28" pos:end="107:21">{<block_content pos:start="100:25" pos:end="104:38">

                        <expr_stmt pos:start="100:25" pos:end="102:47"><expr pos:start="100:25" pos:end="102:46"><call pos:start="100:25" pos:end="102:46"><name pos:start="100:25" pos:end="100:31">DPRINTF</name><argument_list pos:start="100:32" pos:end="102:46">(<argument pos:start="100:33" pos:end="100:66"><expr pos:start="100:33" pos:end="100:66"><literal type="string" pos:start="100:33" pos:end="100:66">"Raised pending IRQ %d (cpu %d)\n"</literal></expr></argument>,

                                <argument pos:start="102:33" pos:end="102:40"><expr pos:start="102:33" pos:end="102:40"><name pos:start="102:33" pos:end="102:40">best_irq</name></expr></argument>, <argument pos:start="102:43" pos:end="102:45"><expr pos:start="102:43" pos:end="102:45"><name pos:start="102:43" pos:end="102:45">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="104:25" pos:end="104:38"><expr pos:start="104:25" pos:end="104:37"><name pos:start="104:25" pos:end="104:33">irq_level</name> <operator pos:start="104:35" pos:end="104:35">=</operator> <literal type="number" pos:start="104:37" pos:end="104:37">1</literal></expr>;</expr_stmt>


                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:52"><expr pos:start="117:9" pos:end="117:51"><call pos:start="117:9" pos:end="117:51"><name pos:start="117:9" pos:end="117:20">qemu_set_irq</name><argument_list pos:start="117:21" pos:end="117:51">(<argument pos:start="117:22" pos:end="117:39"><expr pos:start="117:22" pos:end="117:39"><name pos:start="117:22" pos:end="117:39"><name pos:start="117:22" pos:end="117:22">s</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:34">parent_irq</name><index pos:start="117:35" pos:end="117:39">[<expr pos:start="117:36" pos:end="117:38"><name pos:start="117:36" pos:end="117:38">cpu</name></expr>]</index></name></expr></argument>, <argument pos:start="117:42" pos:end="117:50"><expr pos:start="117:42" pos:end="117:50"><name pos:start="117:42" pos:end="117:50">irq_level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:52"><expr pos:start="119:9" pos:end="119:51"><call pos:start="119:9" pos:end="119:51"><name pos:start="119:9" pos:end="119:20">qemu_set_irq</name><argument_list pos:start="119:21" pos:end="119:51">(<argument pos:start="119:22" pos:end="119:39"><expr pos:start="119:22" pos:end="119:39"><name pos:start="119:22" pos:end="119:39"><name pos:start="119:22" pos:end="119:22">s</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:34">parent_fiq</name><index pos:start="119:35" pos:end="119:39">[<expr pos:start="119:36" pos:end="119:38"><name pos:start="119:36" pos:end="119:38">cpu</name></expr>]</index></name></expr></argument>, <argument pos:start="119:42" pos:end="119:50"><expr pos:start="119:42" pos:end="119:50"><name pos:start="119:42" pos:end="119:50">fiq_level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function></unit>
