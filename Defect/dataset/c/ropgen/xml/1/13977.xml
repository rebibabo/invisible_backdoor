<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13977.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:67"><name pos:start="1:1" pos:end="1:17">vreader_xfr_bytes</name><argument_list pos:start="1:18" pos:end="5:67">(<argument pos:start="1:19" pos:end="1:33">VReader *reader</argument>,

                  <argument pos:start="3:19" pos:end="3:41">unsigned char *send_buf</argument>, <argument pos:start="3:44" pos:end="3:59">int send_buf_len</argument>,

                  <argument pos:start="5:19" pos:end="5:44">unsigned char *receive_buf</argument>, <argument pos:start="5:47" pos:end="5:66">int *receive_buf_len</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="79:1">{<block_content pos:start="9:5" pos:end="77:22">

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">VCardAPDU</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:19">apdu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">VCardResponse</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:27">response</name> <init pos:start="11:29" pos:end="11:34">= <expr pos:start="11:31" pos:end="11:34"><name pos:start="11:31" pos:end="11:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">VCardStatus</name></type> <name pos:start="13:17" pos:end="13:27">card_status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:18">short</name></type> <name pos:start="15:20" pos:end="15:25">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:42"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">VCard</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:15">card</name> <init pos:start="17:17" pos:end="17:42">= <expr pos:start="17:19" pos:end="17:42"><call pos:start="17:19" pos:end="17:42"><name pos:start="17:19" pos:end="17:34">vreader_get_card</name><argument_list pos:start="17:35" pos:end="17:42">(<argument pos:start="17:36" pos:end="17:41"><expr pos:start="17:36" pos:end="17:41"><name pos:start="17:36" pos:end="17:41">reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:12">card</name> <operator pos:start="21:14" pos:end="21:15">==</operator> <name pos:start="21:17" pos:end="21:20">NULL</name></expr>)</condition> <block pos:start="21:23" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:30">VREADER_NO_CARD</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:59"><expr pos:start="29:5" pos:end="29:58"><name pos:start="29:5" pos:end="29:8">apdu</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:58"><name pos:start="29:12" pos:end="29:25">vcard_apdu_new</name><argument_list pos:start="29:26" pos:end="29:58">(<argument pos:start="29:27" pos:end="29:34"><expr pos:start="29:27" pos:end="29:34"><name pos:start="29:27" pos:end="29:34">send_buf</name></expr></argument>, <argument pos:start="29:37" pos:end="29:48"><expr pos:start="29:37" pos:end="29:48"><name pos:start="29:37" pos:end="29:48">send_buf_len</name></expr></argument>, <argument pos:start="29:51" pos:end="29:57"><expr pos:start="29:51" pos:end="29:57"><operator pos:start="29:51" pos:end="29:51">&amp;</operator><name pos:start="29:52" pos:end="29:57">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="57:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:21">(<expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:12">apdu</name> <operator pos:start="31:14" pos:end="31:15">==</operator> <name pos:start="31:17" pos:end="31:20">NULL</name></expr>)</condition> <block pos:start="31:23" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:33">

        <expr_stmt pos:start="33:9" pos:end="33:47"><expr pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:16">response</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:46"><name pos:start="33:20" pos:end="33:38">vcard_make_response</name><argument_list pos:start="33:39" pos:end="33:46">(<argument pos:start="33:40" pos:end="33:45"><expr pos:start="33:40" pos:end="33:45"><name pos:start="33:40" pos:end="33:45">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:19">card_status</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <name pos:start="35:23" pos:end="35:32">VCARD_DONE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="57:5">else <block pos:start="37:12" pos:end="57:5">{<block_content pos:start="39:9" pos:end="55:9">

        <expr_stmt pos:start="39:9" pos:end="43:71"><expr pos:start="39:9" pos:end="43:70"><call pos:start="39:9" pos:end="43:70"><name pos:start="39:9" pos:end="39:15">g_debug</name><argument_list pos:start="39:16" pos:end="43:70">(<argument pos:start="39:17" pos:end="39:70"><expr pos:start="39:17" pos:end="39:70"><literal type="string" pos:start="39:17" pos:end="39:70">"%s: CLS=0x%x,INS=0x%x,P1=0x%x,P2=0x%x,Lc=%d,Le=%d %s"</literal></expr></argument>,

              <argument pos:start="41:15" pos:end="41:22"><expr pos:start="41:15" pos:end="41:22"><name pos:start="41:15" pos:end="41:22">__func__</name></expr></argument>, <argument pos:start="41:25" pos:end="41:35"><expr pos:start="41:25" pos:end="41:35"><name pos:start="41:25" pos:end="41:35"><name pos:start="41:25" pos:end="41:28">apdu</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:35">a_cla</name></name></expr></argument>, <argument pos:start="41:38" pos:end="41:48"><expr pos:start="41:38" pos:end="41:48"><name pos:start="41:38" pos:end="41:48"><name pos:start="41:38" pos:end="41:41">apdu</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:48">a_ins</name></name></expr></argument>, <argument pos:start="41:51" pos:end="41:60"><expr pos:start="41:51" pos:end="41:60"><name pos:start="41:51" pos:end="41:60"><name pos:start="41:51" pos:end="41:54">apdu</name><operator pos:start="41:55" pos:end="41:56">-&gt;</operator><name pos:start="41:57" pos:end="41:60">a_p1</name></name></expr></argument>, <argument pos:start="41:63" pos:end="41:72"><expr pos:start="41:63" pos:end="41:72"><name pos:start="41:63" pos:end="41:72"><name pos:start="41:63" pos:end="41:66">apdu</name><operator pos:start="41:67" pos:end="41:68">-&gt;</operator><name pos:start="41:69" pos:end="41:72">a_p2</name></name></expr></argument>,

              <argument pos:start="43:15" pos:end="43:24"><expr pos:start="43:15" pos:end="43:24"><name pos:start="43:15" pos:end="43:24"><name pos:start="43:15" pos:end="43:18">apdu</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:24">a_Lc</name></name></expr></argument>, <argument pos:start="43:27" pos:end="43:36"><expr pos:start="43:27" pos:end="43:36"><name pos:start="43:27" pos:end="43:36"><name pos:start="43:27" pos:end="43:30">apdu</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:36">a_Le</name></name></expr></argument>, <argument pos:start="43:39" pos:end="43:69"><expr pos:start="43:39" pos:end="43:69"><call pos:start="43:39" pos:end="43:69"><name pos:start="43:39" pos:end="43:56">apdu_ins_to_string</name><argument_list pos:start="43:57" pos:end="43:69">(<argument pos:start="43:58" pos:end="43:68"><expr pos:start="43:58" pos:end="43:68"><name pos:start="43:58" pos:end="43:68"><name pos:start="43:58" pos:end="43:61">apdu</name><operator pos:start="43:62" pos:end="43:63">-&gt;</operator><name pos:start="43:64" pos:end="43:68">a_ins</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:64"><expr pos:start="45:9" pos:end="45:63"><name pos:start="45:9" pos:end="45:19">card_status</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <call pos:start="45:23" pos:end="45:63"><name pos:start="45:23" pos:end="45:40">vcard_process_apdu</name><argument_list pos:start="45:41" pos:end="45:63">(<argument pos:start="45:42" pos:end="45:45"><expr pos:start="45:42" pos:end="45:45"><name pos:start="45:42" pos:end="45:45">card</name></expr></argument>, <argument pos:start="45:48" pos:end="45:51"><expr pos:start="45:48" pos:end="45:51"><name pos:start="45:48" pos:end="45:51">apdu</name></expr></argument>, <argument pos:start="45:54" pos:end="45:62"><expr pos:start="45:54" pos:end="45:62"><operator pos:start="45:54" pos:end="45:54">&amp;</operator><name pos:start="45:55" pos:end="45:62">response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:21">(<expr pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:20">response</name></expr>)</condition> <block pos:start="47:23" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:75">

            <expr_stmt pos:start="49:13" pos:end="53:75"><expr pos:start="49:13" pos:end="53:74"><call pos:start="49:13" pos:end="53:74"><name pos:start="49:13" pos:end="49:19">g_debug</name><argument_list pos:start="49:20" pos:end="53:74">(<argument pos:start="49:21" pos:end="49:71"><expr pos:start="49:21" pos:end="49:71"><literal type="string" pos:start="49:21" pos:end="49:71">"%s: status=%d sw1=0x%x sw2=0x%x len=%d (total=%d)"</literal></expr></argument>,

                  <argument pos:start="51:19" pos:end="51:26"><expr pos:start="51:19" pos:end="51:26"><name pos:start="51:19" pos:end="51:26">__func__</name></expr></argument>, <argument pos:start="51:29" pos:end="51:46"><expr pos:start="51:29" pos:end="51:46"><name pos:start="51:29" pos:end="51:46"><name pos:start="51:29" pos:end="51:36">response</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:46">b_status</name></name></expr></argument>, <argument pos:start="51:49" pos:end="51:63"><expr pos:start="51:49" pos:end="51:63"><name pos:start="51:49" pos:end="51:63"><name pos:start="51:49" pos:end="51:56">response</name><operator pos:start="51:57" pos:end="51:58">-&gt;</operator><name pos:start="51:59" pos:end="51:63">b_sw1</name></name></expr></argument>,

                  <argument pos:start="53:19" pos:end="53:33"><expr pos:start="53:19" pos:end="53:33"><name pos:start="53:19" pos:end="53:33"><name pos:start="53:19" pos:end="53:26">response</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:33">b_sw2</name></name></expr></argument>, <argument pos:start="53:36" pos:end="53:50"><expr pos:start="53:36" pos:end="53:50"><name pos:start="53:36" pos:end="53:50"><name pos:start="53:36" pos:end="53:43">response</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:50">b_len</name></name></expr></argument>, <argument pos:start="53:53" pos:end="53:73"><expr pos:start="53:53" pos:end="53:73"><name pos:start="53:53" pos:end="53:73"><name pos:start="53:53" pos:end="53:60">response</name><operator pos:start="53:61" pos:end="53:62">-&gt;</operator><name pos:start="53:63" pos:end="53:73">b_total_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:38"><expr pos:start="59:5" pos:end="59:37"><call pos:start="59:5" pos:end="59:37"><name pos:start="59:5" pos:end="59:10">assert</name><argument_list pos:start="59:11" pos:end="59:37">(<argument pos:start="59:12" pos:end="59:36"><expr pos:start="59:12" pos:end="59:36"><name pos:start="59:12" pos:end="59:22">card_status</name> <operator pos:start="59:24" pos:end="59:25">==</operator> <name pos:start="59:27" pos:end="59:36">VCARD_DONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="69:5"><if pos:start="61:5" pos:end="69:5">if <condition pos:start="61:8" pos:end="61:34">(<expr pos:start="61:9" pos:end="61:33"><name pos:start="61:9" pos:end="61:19">card_status</name> <operator pos:start="61:21" pos:end="61:22">==</operator> <name pos:start="61:24" pos:end="61:33">VCARD_DONE</name></expr>)</condition> <block pos:start="61:36" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:32">

        <decl_stmt pos:start="63:9" pos:end="63:64"><decl pos:start="63:9" pos:end="63:63"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:16">size</name> <init pos:start="63:18" pos:end="63:63">= <expr pos:start="63:20" pos:end="63:63"><call pos:start="63:20" pos:end="63:63"><name pos:start="63:20" pos:end="63:22">MIN</name><argument_list pos:start="63:23" pos:end="63:63">(<argument pos:start="63:24" pos:end="63:39"><expr pos:start="63:24" pos:end="63:39"><operator pos:start="63:24" pos:end="63:24">*</operator><name pos:start="63:25" pos:end="63:39">receive_buf_len</name></expr></argument>, <argument pos:start="63:42" pos:end="63:62"><expr pos:start="63:42" pos:end="63:62"><name pos:start="63:42" pos:end="63:62"><name pos:start="63:42" pos:end="63:49">response</name><operator pos:start="63:50" pos:end="63:51">-&gt;</operator><name pos:start="63:52" pos:end="63:62">b_total_len</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:52"><expr pos:start="65:9" pos:end="65:51"><call pos:start="65:9" pos:end="65:51"><name pos:start="65:9" pos:end="65:14">memcpy</name><argument_list pos:start="65:15" pos:end="65:51">(<argument pos:start="65:16" pos:end="65:26"><expr pos:start="65:16" pos:end="65:26"><name pos:start="65:16" pos:end="65:26">receive_buf</name></expr></argument>, <argument pos:start="65:29" pos:end="65:44"><expr pos:start="65:29" pos:end="65:44"><name pos:start="65:29" pos:end="65:44"><name pos:start="65:29" pos:end="65:36">response</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:44">b_data</name></name></expr></argument>, <argument pos:start="65:47" pos:end="65:50"><expr pos:start="65:47" pos:end="65:50"><name pos:start="65:47" pos:end="65:50">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:32"><expr pos:start="67:9" pos:end="67:31"><operator pos:start="67:9" pos:end="67:9">*</operator><name pos:start="67:10" pos:end="67:24">receive_buf_len</name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:31">size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:36"><expr pos:start="71:5" pos:end="71:35"><call pos:start="71:5" pos:end="71:35"><name pos:start="71:5" pos:end="71:25">vcard_response_delete</name><argument_list pos:start="71:26" pos:end="71:35">(<argument pos:start="71:27" pos:end="71:34"><expr pos:start="71:27" pos:end="71:34"><name pos:start="71:27" pos:end="71:34">response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:28"><expr pos:start="73:5" pos:end="73:27"><call pos:start="73:5" pos:end="73:27"><name pos:start="73:5" pos:end="73:21">vcard_apdu_delete</name><argument_list pos:start="73:22" pos:end="73:27">(<argument pos:start="73:23" pos:end="73:26"><expr pos:start="73:23" pos:end="73:26"><name pos:start="73:23" pos:end="73:26">apdu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:21"><expr pos:start="75:5" pos:end="75:20"><call pos:start="75:5" pos:end="75:20"><name pos:start="75:5" pos:end="75:14">vcard_free</name><argument_list pos:start="75:15" pos:end="75:20">(<argument pos:start="75:16" pos:end="75:19"><expr pos:start="75:16" pos:end="75:19"><name pos:start="75:16" pos:end="75:19">card</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="75:23" pos:end="75:46">/* free our reference */</comment>

    <return pos:start="77:5" pos:end="77:22">return <expr pos:start="77:12" pos:end="77:21"><name pos:start="77:12" pos:end="77:21">VREADER_OK</name></expr>;</return>

</block_content>}</block>
</unit>
