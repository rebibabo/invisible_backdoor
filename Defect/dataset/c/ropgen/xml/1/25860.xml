<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25860.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">do_sd_create</name><parameter_list pos:start="1:24" pos:end="5:59">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:28">char</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:38">filename</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:47">int64_t</name></type> <name pos:start="1:49" pos:end="1:56">vdi_size</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:41"><decl pos:start="3:25" pos:end="3:41"><type pos:start="3:25" pos:end="3:41"><name pos:start="3:25" pos:end="3:32">uint32_t</name></type> <name pos:start="3:34" pos:end="3:41">base_vid</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:59"><decl pos:start="3:44" pos:end="3:59"><type pos:start="3:44" pos:end="3:59"><name pos:start="3:44" pos:end="3:51">uint32_t</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:59">vdi_id</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:73"><decl pos:start="3:62" pos:end="3:73"><type pos:start="3:62" pos:end="3:73"><name pos:start="3:62" pos:end="3:64">int</name></type> <name pos:start="3:66" pos:end="3:73">snapshot</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:40"><decl pos:start="5:25" pos:end="5:40"><type pos:start="5:25" pos:end="5:40"><specifier pos:start="5:25" pos:end="5:29">const</specifier> <name pos:start="5:31" pos:end="5:34">char</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:40">addr</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:58"><decl pos:start="5:43" pos:end="5:58"><type pos:start="5:43" pos:end="5:58"><specifier pos:start="5:43" pos:end="5:47">const</specifier> <name pos:start="5:49" pos:end="5:52">char</name> <modifier pos:start="5:54" pos:end="5:54">*</modifier></type><name pos:start="5:55" pos:end="5:58">port</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="97:1">{<block_content pos:start="9:5" pos:end="95:13">

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:18">SheepdogVdiReq</name></type> <name pos:start="9:20" pos:end="9:22">hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">SheepdogVdiRsp</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">rsp</name> <init pos:start="11:25" pos:end="11:48">= <expr pos:start="11:27" pos:end="11:48"><operator pos:start="11:27" pos:end="11:27">(</operator><name pos:start="11:28" pos:end="11:41">SheepdogVdiRsp</name> <operator pos:start="11:43" pos:end="11:43">*</operator><operator pos:start="11:44" pos:end="11:44">)</operator><operator pos:start="11:45" pos:end="11:45">&amp;</operator><name pos:start="11:46" pos:end="11:48">hdr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">fd</name></decl>, <decl pos:start="13:13" pos:end="13:15"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:13" pos:end="13:15">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:21">wlen</name></decl>, <decl pos:start="15:24" pos:end="15:31"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:24" pos:end="15:27">rlen</name> <init pos:start="15:29" pos:end="15:31">= <expr pos:start="15:31" pos:end="15:31"><literal type="number" pos:start="15:31" pos:end="15:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:28"><name pos:start="17:10" pos:end="17:12">buf</name><index pos:start="17:13" pos:end="17:28">[<expr pos:start="17:14" pos:end="17:27"><name pos:start="17:14" pos:end="17:27">SD_MAX_VDI_LEN</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:6">fd</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:36"><name pos:start="21:10" pos:end="21:24">connect_to_sdog</name><argument_list pos:start="21:25" pos:end="21:36">(<argument pos:start="21:26" pos:end="21:29"><expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">addr</name></expr></argument>, <argument pos:start="21:32" pos:end="21:35"><expr pos:start="21:32" pos:end="21:35"><name pos:start="21:32" pos:end="21:35">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:15">(<expr pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:10">fd</name> <operator pos:start="23:12" pos:end="23:12">&lt;</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>)</condition> <block pos:start="23:17" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><name pos:start="25:16" pos:end="25:17">fd</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:32"><expr pos:start="31:5" pos:end="31:31"><call pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:10">memset</name><argument_list pos:start="31:11" pos:end="31:31">(<argument pos:start="31:12" pos:end="31:14"><expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">buf</name></expr></argument>, <argument pos:start="31:17" pos:end="31:17"><expr pos:start="31:17" pos:end="31:17"><literal type="number" pos:start="31:17" pos:end="31:17">0</literal></expr></argument>, <argument pos:start="31:20" pos:end="31:30"><expr pos:start="31:20" pos:end="31:30"><sizeof pos:start="31:20" pos:end="31:30">sizeof<argument_list pos:start="31:26" pos:end="31:30">(<argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><call pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:11">strncpy</name><argument_list pos:start="33:12" pos:end="33:42">(<argument pos:start="33:13" pos:end="33:15"><expr pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">buf</name></expr></argument>, <argument pos:start="33:18" pos:end="33:25"><expr pos:start="33:18" pos:end="33:25"><name pos:start="33:18" pos:end="33:25">filename</name></expr></argument>, <argument pos:start="33:28" pos:end="33:41"><expr pos:start="33:28" pos:end="33:41"><name pos:start="33:28" pos:end="33:41">SD_MAX_VDI_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><call pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:10">memset</name><argument_list pos:start="37:11" pos:end="37:32">(<argument pos:start="37:12" pos:end="37:15"><expr pos:start="37:12" pos:end="37:15"><operator pos:start="37:12" pos:end="37:12">&amp;</operator><name pos:start="37:13" pos:end="37:15">hdr</name></expr></argument>, <argument pos:start="37:18" pos:end="37:18"><expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr></argument>, <argument pos:start="37:21" pos:end="37:31"><expr pos:start="37:21" pos:end="37:31"><sizeof pos:start="37:21" pos:end="37:31">sizeof<argument_list pos:start="37:27" pos:end="37:31">(<argument pos:start="37:28" pos:end="37:30"><expr pos:start="37:28" pos:end="37:30"><name pos:start="37:28" pos:end="37:30">hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:7">hdr</name><operator pos:start="39:8" pos:end="39:8">.</operator><name pos:start="39:9" pos:end="39:14">opcode</name></name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:30">SD_OP_NEW_VDI</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:7">hdr</name><operator pos:start="41:8" pos:end="41:8">.</operator><name pos:start="41:9" pos:end="41:19">base_vdi_id</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:30">base_vid</name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:26"><expr pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:8">wlen</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <name pos:start="45:12" pos:end="45:25">SD_MAX_VDI_LEN</name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:34"><expr pos:start="49:5" pos:end="49:33"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:7">hdr</name><operator pos:start="49:8" pos:end="49:8">.</operator><name pos:start="49:9" pos:end="49:13">flags</name></name> <operator pos:start="49:15" pos:end="49:15">=</operator> <name pos:start="49:17" pos:end="49:33">SD_FLAG_CMD_WRITE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:26"><expr pos:start="51:5" pos:end="51:25"><name pos:start="51:5" pos:end="51:14"><name pos:start="51:5" pos:end="51:7">hdr</name><operator pos:start="51:8" pos:end="51:8">.</operator><name pos:start="51:9" pos:end="51:14">snapid</name></name> <operator pos:start="51:16" pos:end="51:16">=</operator> <name pos:start="51:18" pos:end="51:25">snapshot</name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:7">hdr</name><operator pos:start="55:8" pos:end="55:8">.</operator><name pos:start="55:9" pos:end="55:19">data_length</name></name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:26">wlen</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:28"><expr pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:16"><name pos:start="57:5" pos:end="57:7">hdr</name><operator pos:start="57:8" pos:end="57:8">.</operator><name pos:start="57:9" pos:end="57:16">vdi_size</name></name> <operator pos:start="57:18" pos:end="57:18">=</operator> <name pos:start="57:20" pos:end="57:27">vdi_size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:61"><expr pos:start="61:5" pos:end="61:60"><name pos:start="61:5" pos:end="61:7">ret</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="61:60"><name pos:start="61:11" pos:end="61:16">do_req</name><argument_list pos:start="61:17" pos:end="61:60">(<argument pos:start="61:18" pos:end="61:19"><expr pos:start="61:18" pos:end="61:19"><name pos:start="61:18" pos:end="61:19">fd</name></expr></argument>, <argument pos:start="61:22" pos:end="61:40"><expr pos:start="61:22" pos:end="61:40"><operator pos:start="61:22" pos:end="61:22">(</operator><name pos:start="61:23" pos:end="61:33">SheepdogReq</name> <operator pos:start="61:35" pos:end="61:35">*</operator><operator pos:start="61:36" pos:end="61:36">)</operator><operator pos:start="61:37" pos:end="61:37">&amp;</operator><name pos:start="61:38" pos:end="61:40">hdr</name></expr></argument>, <argument pos:start="61:43" pos:end="61:45"><expr pos:start="61:43" pos:end="61:45"><name pos:start="61:43" pos:end="61:45">buf</name></expr></argument>, <argument pos:start="61:48" pos:end="61:52"><expr pos:start="61:48" pos:end="61:52"><operator pos:start="61:48" pos:end="61:48">&amp;</operator><name pos:start="61:49" pos:end="61:52">wlen</name></expr></argument>, <argument pos:start="61:55" pos:end="61:59"><expr pos:start="61:55" pos:end="61:59"><operator pos:start="61:55" pos:end="61:55">&amp;</operator><name pos:start="61:56" pos:end="61:59">rlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:20"><expr pos:start="65:5" pos:end="65:19"><call pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:15">closesocket</name><argument_list pos:start="65:16" pos:end="65:19">(<argument pos:start="65:17" pos:end="65:18"><expr pos:start="65:17" pos:end="65:18"><name pos:start="65:17" pos:end="65:18">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:12">(<expr pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">ret</name></expr>)</condition> <block pos:start="69:14" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:19">

        <return pos:start="71:9" pos:end="71:19">return <expr pos:start="71:16" pos:end="71:18"><name pos:start="71:16" pos:end="71:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:38">(<expr pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:11">rsp</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:19">result</name></name> <operator pos:start="77:21" pos:end="77:22">!=</operator> <name pos:start="77:24" pos:end="77:37">SD_RES_SUCCESS</name></expr>)</condition> <block pos:start="77:40" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:20">

        <expr_stmt pos:start="79:9" pos:end="79:67"><expr pos:start="79:9" pos:end="79:66"><call pos:start="79:9" pos:end="79:66"><name pos:start="79:9" pos:end="79:20">error_report</name><argument_list pos:start="79:21" pos:end="79:66">(<argument pos:start="79:22" pos:end="79:29"><expr pos:start="79:22" pos:end="79:29"><literal type="string" pos:start="79:22" pos:end="79:29">"%s, %s"</literal></expr></argument>, <argument pos:start="79:32" pos:end="79:55"><expr pos:start="79:32" pos:end="79:55"><call pos:start="79:32" pos:end="79:55"><name pos:start="79:32" pos:end="79:42">sd_strerror</name><argument_list pos:start="79:43" pos:end="79:55">(<argument pos:start="79:44" pos:end="79:54"><expr pos:start="79:44" pos:end="79:54"><name pos:start="79:44" pos:end="79:54"><name pos:start="79:44" pos:end="79:46">rsp</name><operator pos:start="79:47" pos:end="79:48">-&gt;</operator><name pos:start="79:49" pos:end="79:54">result</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:58" pos:end="79:65"><expr pos:start="79:58" pos:end="79:65"><name pos:start="79:58" pos:end="79:65">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:20">return <expr pos:start="81:16" pos:end="81:19"><operator pos:start="81:16" pos:end="81:16">-</operator><name pos:start="81:17" pos:end="81:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="91:5"><if pos:start="87:5" pos:end="91:5">if <condition pos:start="87:8" pos:end="87:15">(<expr pos:start="87:9" pos:end="87:14"><name pos:start="87:9" pos:end="87:14">vdi_id</name></expr>)</condition> <block pos:start="87:17" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:30">

        <expr_stmt pos:start="89:9" pos:end="89:30"><expr pos:start="89:9" pos:end="89:29"><operator pos:start="89:9" pos:end="89:9">*</operator><name pos:start="89:10" pos:end="89:15">vdi_id</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <name pos:start="89:19" pos:end="89:29"><name pos:start="89:19" pos:end="89:21">rsp</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:29">vdi_id</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
