<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9018.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_chpl</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:17">start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:22">nb_chapters</name></decl>, <decl pos:start="7:25" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:31">str_len</name></decl>, <decl pos:start="7:34" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:34" pos:end="7:40">version</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:19"><name pos:start="9:10" pos:end="9:12">str</name><index pos:start="9:13" pos:end="9:19">[<expr pos:start="9:14" pos:end="9:18"><literal type="number" pos:start="9:14" pos:end="9:16">256</literal><operator pos:start="9:17" pos:end="9:17">+</operator><literal type="number" pos:start="9:18" pos:end="9:18">1</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:29">(<expr pos:start="13:9" pos:end="13:28"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:18"><name pos:start="13:10" pos:end="13:13">atom</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:18">size</name></name> <operator pos:start="13:20" pos:end="13:21">-=</operator> <literal type="number" pos:start="13:23" pos:end="13:23">5</literal><operator pos:start="13:24" pos:end="13:24">)</operator> <operator pos:start="13:26" pos:end="13:26">&lt;</operator> <literal type="number" pos:start="13:28" pos:end="13:28">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:11">version</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:25"><name pos:start="19:15" pos:end="19:21">avio_r8</name><argument_list pos:start="19:22" pos:end="19:25">(<argument pos:start="19:23" pos:end="19:24"><expr pos:start="19:23" pos:end="19:24"><name pos:start="19:23" pos:end="19:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><call pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:13">avio_rb24</name><argument_list pos:start="21:14" pos:end="21:17">(<argument pos:start="21:15" pos:end="21:16"><expr pos:start="21:15" pos:end="21:16"><name pos:start="21:15" pos:end="21:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:22"><if pos:start="23:5" pos:end="25:22">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:15">version</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:22"><block_content pos:start="25:9" pos:end="25:22">

        <expr_stmt pos:start="25:9" pos:end="25:22"><expr pos:start="25:9" pos:end="25:21"><call pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:17">avio_rb32</name><argument_list pos:start="25:18" pos:end="25:21">(<argument pos:start="25:19" pos:end="25:20"><expr pos:start="25:19" pos:end="25:20"><name pos:start="25:19" pos:end="25:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="25:24" pos:end="25:29">// ???</comment>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:15">nb_chapters</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:29"><name pos:start="27:19" pos:end="27:25">avio_r8</name><argument_list pos:start="27:26" pos:end="27:29">(<argument pos:start="27:27" pos:end="27:28"><expr pos:start="27:27" pos:end="27:28"><name pos:start="27:27" pos:end="27:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="31:5" pos:end="57:5">for <control pos:start="31:9" pos:end="31:37">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:32"><expr pos:start="31:17" pos:end="31:31"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:31">nb_chapters</name></expr>;</condition> <incr pos:start="31:34" pos:end="31:36"><expr pos:start="31:34" pos:end="31:36"><name pos:start="31:34" pos:end="31:34">i</name><operator pos:start="31:35" pos:end="31:36">++</operator></expr></incr>)</control> <block pos:start="31:39" pos:end="57:5">{<block_content pos:start="33:9" pos:end="55:91">

        <if_stmt pos:start="33:9" pos:end="35:21"><if pos:start="33:9" pos:end="35:21">if <condition pos:start="33:12" pos:end="33:26">(<expr pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:16">atom</name><operator pos:start="33:17" pos:end="33:17">.</operator><name pos:start="33:18" pos:end="33:21">size</name></name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <literal type="number" pos:start="33:25" pos:end="33:25">9</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:21"><block_content pos:start="35:13" pos:end="35:21">

            <return pos:start="35:13" pos:end="35:21">return <expr pos:start="35:20" pos:end="35:20"><literal type="number" pos:start="35:20" pos:end="35:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:13">start</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:29"><name pos:start="39:17" pos:end="39:25">avio_rb64</name><argument_list pos:start="39:26" pos:end="39:29">(<argument pos:start="39:27" pos:end="39:28"><expr pos:start="39:27" pos:end="39:28"><name pos:start="39:27" pos:end="39:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:15">str_len</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:29"><name pos:start="41:19" pos:end="41:25">avio_r8</name><argument_list pos:start="41:26" pos:end="41:29">(<argument pos:start="41:27" pos:end="41:28"><expr pos:start="41:27" pos:end="41:28"><name pos:start="41:27" pos:end="41:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="47:21"><if pos:start="45:9" pos:end="47:21">if <condition pos:start="45:12" pos:end="45:41">(<expr pos:start="45:13" pos:end="45:40"><operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:22"><name pos:start="45:14" pos:end="45:17">atom</name><operator pos:start="45:18" pos:end="45:18">.</operator><name pos:start="45:19" pos:end="45:22">size</name></name> <operator pos:start="45:24" pos:end="45:25">-=</operator> <literal type="number" pos:start="45:27" pos:end="45:28">9</literal><operator pos:start="45:28" pos:end="45:28">+</operator><name pos:start="45:29" pos:end="45:35">str_len</name><operator pos:start="45:36" pos:end="45:36">)</operator> <operator pos:start="45:38" pos:end="45:38">&lt;</operator> <literal type="number" pos:start="45:40" pos:end="45:40">0</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:21"><block_content pos:start="47:13" pos:end="47:21">

            <return pos:start="47:13" pos:end="47:21">return <expr pos:start="47:20" pos:end="47:20"><literal type="number" pos:start="47:20" pos:end="47:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:36"><expr pos:start="51:9" pos:end="51:35"><call pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:17">avio_read</name><argument_list pos:start="51:18" pos:end="51:35">(<argument pos:start="51:19" pos:end="51:20"><expr pos:start="51:19" pos:end="51:20"><name pos:start="51:19" pos:end="51:20">pb</name></expr></argument>, <argument pos:start="51:23" pos:end="51:25"><expr pos:start="51:23" pos:end="51:25"><name pos:start="51:23" pos:end="51:25">str</name></expr></argument>, <argument pos:start="51:28" pos:end="51:34"><expr pos:start="51:28" pos:end="51:34"><name pos:start="51:28" pos:end="51:34">str_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:25"><expr pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:11">str</name><index pos:start="53:12" pos:end="53:20">[<expr pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:19">str_len</name></expr>]</index></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr>;</expr_stmt>

        <macro pos:start="55:9" pos:end="55:90"><name pos:start="55:9" pos:end="55:26">avpriv_new_chapter</name><argument_list pos:start="55:27" pos:end="55:90">(<argument pos:start="55:28" pos:end="55:32">c-&gt;fc</argument>, <argument pos:start="55:35" pos:end="55:35">i</argument>, <argument pos:start="55:38" pos:end="55:51">(AVRational){<literal type="number" pos:start="55:51" pos:end="55:51">1</literal></argument>,<argument pos:start="55:53" pos:end="55:61"><literal type="number" pos:start="55:53" pos:end="55:60">10000000</literal>}</argument>, <argument pos:start="55:64" pos:end="55:68">start</argument>, <argument pos:start="55:71" pos:end="55:84">AV_NOPTS_VALUE</argument>, <argument pos:start="55:87" pos:end="55:89">str</argument>)</argument_list></macro><empty_stmt pos:start="55:91" pos:end="55:91">;</empty_stmt>

    </block_content>}</block></for>

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
