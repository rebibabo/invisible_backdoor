<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1279.c" pos:tabs="8"><function pos:start="1:1" pos:end="178:1"><type pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:16">coroutine_fn</name></type> <name pos:start="1:18" pos:end="1:32">bdrv_co_discard</name><parameter_list pos:start="1:33" pos:end="3:48">(<parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:53"><name pos:start="1:34" pos:end="1:49">BlockDriverState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">bs</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:73"><decl pos:start="1:56" pos:end="1:73"><type pos:start="1:56" pos:end="1:73"><name pos:start="1:56" pos:end="1:62">int64_t</name></type> <name pos:start="1:64" pos:end="1:73">sector_num</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:47"><decl pos:start="3:34" pos:end="3:47"><type pos:start="3:34" pos:end="3:47"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:47">nb_sectors</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="178:1">{<block_content pos:start="7:5" pos:end="176:15">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">BdrvTrackedRequest</name></type> <name pos:start="7:24" pos:end="7:26">req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">max_discard</name></decl>, <decl pos:start="9:22" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:24">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:17">(<expr pos:start="13:9" pos:end="13:16"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:16"><name pos:start="13:10" pos:end="13:11">bs</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:16">drv</name></name></expr>)</condition> <block pos:start="13:19" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:26">

        <return pos:start="15:9" pos:end="15:26">return <expr pos:start="15:16" pos:end="15:25"><operator pos:start="15:16" pos:end="15:16">-</operator><name pos:start="15:17" pos:end="15:25">ENOMEDIUM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:57"><expr pos:start="21:5" pos:end="21:56"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:56"><name pos:start="21:11" pos:end="21:28">bdrv_check_request</name><argument_list pos:start="21:29" pos:end="21:56">(<argument pos:start="21:30" pos:end="21:31"><expr pos:start="21:30" pos:end="21:31"><name pos:start="21:30" pos:end="21:31">bs</name></expr></argument>, <argument pos:start="21:34" pos:end="21:43"><expr pos:start="21:34" pos:end="21:43"><name pos:start="21:34" pos:end="21:43">sector_num</name></expr></argument>, <argument pos:start="21:46" pos:end="21:55"><expr pos:start="21:46" pos:end="21:55"><name pos:start="21:46" pos:end="21:55">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">&lt;</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>)</condition> <block pos:start="23:18" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:19">

        <return pos:start="25:9" pos:end="25:19">return <expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ret</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="27:7" pos:end="31:5">else if <condition pos:start="27:15" pos:end="27:29">(<expr pos:start="27:16" pos:end="27:28"><name pos:start="27:16" pos:end="27:28"><name pos:start="27:16" pos:end="27:17">bs</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:28">read_only</name></name></expr>)</condition> <block pos:start="27:31" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:22">

        <return pos:start="29:9" pos:end="29:22">return <expr pos:start="29:16" pos:end="29:21"><operator pos:start="29:16" pos:end="29:16">-</operator><name pos:start="29:17" pos:end="29:21">EPERM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:48"><expr pos:start="33:5" pos:end="33:47"><call pos:start="33:5" pos:end="33:47"><name pos:start="33:5" pos:end="33:10">assert</name><argument_list pos:start="33:11" pos:end="33:47">(<argument pos:start="33:12" pos:end="33:46"><expr pos:start="33:12" pos:end="33:46"><operator pos:start="33:12" pos:end="33:12">!</operator><operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:27"><name pos:start="33:14" pos:end="33:15">bs</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:27">open_flags</name></name> <operator pos:start="33:29" pos:end="33:29">&amp;</operator> <name pos:start="33:31" pos:end="33:45">BDRV_O_INACTIVE</name><operator pos:start="33:46" pos:end="33:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:34">/* Do nothing if disabled.  */</comment>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:41">(<expr pos:start="39:9" pos:end="39:40"><operator pos:start="39:9" pos:end="39:9">!</operator><operator pos:start="39:10" pos:end="39:10">(</operator><name pos:start="39:11" pos:end="39:24"><name pos:start="39:11" pos:end="39:12">bs</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:24">open_flags</name></name> <operator pos:start="39:26" pos:end="39:26">&amp;</operator> <name pos:start="39:28" pos:end="39:39">BDRV_O_UNMAP</name><operator pos:start="39:40" pos:end="39:40">)</operator></expr>)</condition> <block pos:start="39:43" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:17">

        <return pos:start="41:9" pos:end="41:17">return <expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:64">(<expr pos:start="47:9" pos:end="47:63"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:33"><name pos:start="47:10" pos:end="47:11">bs</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:16">drv</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:33">bdrv_co_discard</name></name> <operator pos:start="47:35" pos:end="47:36">&amp;&amp;</operator> <operator pos:start="47:38" pos:end="47:38">!</operator><name pos:start="47:39" pos:end="47:63"><name pos:start="47:39" pos:end="47:40">bs</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:45">drv</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:63">bdrv_aio_discard</name></name></expr>)</condition> <block pos:start="47:66" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:17">

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="57:80"><expr pos:start="55:5" pos:end="57:79"><call pos:start="55:5" pos:end="57:79"><name pos:start="55:5" pos:end="55:25">tracked_request_begin</name><argument_list pos:start="55:26" pos:end="57:79">(<argument pos:start="55:27" pos:end="55:30"><expr pos:start="55:27" pos:end="55:30"><operator pos:start="55:27" pos:end="55:27">&amp;</operator><name pos:start="55:28" pos:end="55:30">req</name></expr></argument>, <argument pos:start="55:33" pos:end="55:34"><expr pos:start="55:33" pos:end="55:34"><name pos:start="55:33" pos:end="55:34">bs</name></expr></argument>, <argument pos:start="55:37" pos:end="55:66"><expr pos:start="55:37" pos:end="55:66"><name pos:start="55:37" pos:end="55:46">sector_num</name> <operator pos:start="55:48" pos:end="55:49">&lt;&lt;</operator> <name pos:start="55:51" pos:end="55:66">BDRV_SECTOR_BITS</name></expr></argument>,

                          <argument pos:start="57:27" pos:end="57:56"><expr pos:start="57:27" pos:end="57:56"><name pos:start="57:27" pos:end="57:36">nb_sectors</name> <operator pos:start="57:38" pos:end="57:39">&lt;&lt;</operator> <name pos:start="57:41" pos:end="57:56">BDRV_SECTOR_BITS</name></expr></argument>, <argument pos:start="57:59" pos:end="57:78"><expr pos:start="57:59" pos:end="57:78"><name pos:start="57:59" pos:end="57:78">BDRV_TRACKED_DISCARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:78"><expr pos:start="61:5" pos:end="61:77"><name pos:start="61:5" pos:end="61:7">ret</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="61:77"><name pos:start="61:11" pos:end="61:42">notifier_with_return_list_notify</name><argument_list pos:start="61:43" pos:end="61:77">(<argument pos:start="61:44" pos:end="61:70"><expr pos:start="61:44" pos:end="61:70"><operator pos:start="61:44" pos:end="61:44">&amp;</operator><name pos:start="61:45" pos:end="61:70"><name pos:start="61:45" pos:end="61:46">bs</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:70">before_write_notifiers</name></name></expr></argument>, <argument pos:start="61:73" pos:end="61:76"><expr pos:start="61:73" pos:end="61:76"><operator pos:start="61:73" pos:end="61:73">&amp;</operator><name pos:start="61:74" pos:end="61:76">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:16">(<expr pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">&lt;</operator> <literal type="number" pos:start="63:15" pos:end="63:15">0</literal></expr>)</condition> <block pos:start="63:18" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:17">

        <goto pos:start="65:9" pos:end="65:17">goto <name pos:start="65:14" pos:end="65:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="73:57"><expr pos:start="71:5" pos:end="73:56"><name pos:start="71:5" pos:end="71:15">max_discard</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <call pos:start="71:19" pos:end="73:56"><name pos:start="71:19" pos:end="71:30">MIN_NON_ZERO</name><argument_list pos:start="71:31" pos:end="73:56">(<argument pos:start="71:32" pos:end="71:70"><expr pos:start="71:32" pos:end="71:70"><name pos:start="71:32" pos:end="71:50"><name pos:start="71:32" pos:end="71:33">bs</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:37">bl</name><operator pos:start="71:38" pos:end="71:38">.</operator><name pos:start="71:39" pos:end="71:50">max_pdiscard</name></name> <operator pos:start="71:52" pos:end="71:53">&gt;&gt;</operator> <name pos:start="71:55" pos:end="71:70">BDRV_SECTOR_BITS</name></expr></argument>,

                               <argument pos:start="73:32" pos:end="73:55"><expr pos:start="73:32" pos:end="73:55"><name pos:start="73:32" pos:end="73:55">BDRV_REQUEST_MAX_SECTORS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="75:5" pos:end="163:5">while <condition pos:start="75:11" pos:end="75:26">(<expr pos:start="75:12" pos:end="75:25"><name pos:start="75:12" pos:end="75:21">nb_sectors</name> <operator pos:start="75:23" pos:end="75:23">&gt;</operator> <literal type="number" pos:start="75:25" pos:end="75:25">0</literal></expr>)</condition> <block pos:start="75:28" pos:end="163:5">{<block_content pos:start="77:9" pos:end="161:26">

        <decl_stmt pos:start="77:9" pos:end="77:16"><decl pos:start="77:9" pos:end="77:15"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:15">ret</name></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:29"><decl pos:start="79:9" pos:end="79:28"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:15">num</name> <init pos:start="79:17" pos:end="79:28">= <expr pos:start="79:19" pos:end="79:28"><name pos:start="79:19" pos:end="79:28">nb_sectors</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="81:9" pos:end="81:78"><decl pos:start="81:9" pos:end="81:77"><type pos:start="81:9" pos:end="81:11"><name pos:start="81:9" pos:end="81:11">int</name></type> <name pos:start="81:13" pos:end="81:29">discard_alignment</name> <init pos:start="81:31" pos:end="81:77">= <expr pos:start="81:33" pos:end="81:77"><name pos:start="81:33" pos:end="81:57"><name pos:start="81:33" pos:end="81:34">bs</name><operator pos:start="81:35" pos:end="81:36">-&gt;</operator><name pos:start="81:37" pos:end="81:38">bl</name><operator pos:start="81:39" pos:end="81:39">.</operator><name pos:start="81:40" pos:end="81:57">pdiscard_alignment</name></name> <operator pos:start="81:59" pos:end="81:60">&gt;&gt;</operator> <name pos:start="81:62" pos:end="81:77">BDRV_SECTOR_BITS</name></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="85:9" pos:end="85:27">/* align request */</comment>

        <if_stmt pos:start="87:9" pos:end="101:9"><if pos:start="87:9" pos:end="101:9">if <condition pos:start="87:12" pos:end="91:43">(<expr pos:start="87:13" pos:end="91:42"><name pos:start="87:13" pos:end="87:29">discard_alignment</name> <operator pos:start="87:31" pos:end="87:32">&amp;&amp;</operator>

            <name pos:start="89:13" pos:end="89:15">num</name> <operator pos:start="89:17" pos:end="89:18">&gt;=</operator> <name pos:start="89:20" pos:end="89:36">discard_alignment</name> <operator pos:start="89:38" pos:end="89:39">&amp;&amp;</operator>

            <name pos:start="91:13" pos:end="91:22">sector_num</name> <operator pos:start="91:24" pos:end="91:24">%</operator> <name pos:start="91:26" pos:end="91:42">discard_alignment</name></expr>)</condition> <block pos:start="91:45" pos:end="101:9">{<block_content pos:start="93:13" pos:end="99:50">

            <if_stmt pos:start="93:13" pos:end="97:13"><if pos:start="93:13" pos:end="97:13">if <condition pos:start="93:16" pos:end="93:40">(<expr pos:start="93:17" pos:end="93:39"><name pos:start="93:17" pos:end="93:19">num</name> <operator pos:start="93:21" pos:end="93:21">&gt;</operator> <name pos:start="93:23" pos:end="93:39">discard_alignment</name></expr>)</condition> <block pos:start="93:42" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:40">

                <expr_stmt pos:start="95:17" pos:end="95:40"><expr pos:start="95:17" pos:end="95:39"><name pos:start="95:17" pos:end="95:19">num</name> <operator pos:start="95:21" pos:end="95:21">=</operator> <name pos:start="95:23" pos:end="95:39">discard_alignment</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:50"><expr pos:start="99:13" pos:end="99:49"><name pos:start="99:13" pos:end="99:15">num</name> <operator pos:start="99:17" pos:end="99:18">-=</operator> <name pos:start="99:20" pos:end="99:29">sector_num</name> <operator pos:start="99:31" pos:end="99:31">%</operator> <name pos:start="99:33" pos:end="99:49">discard_alignment</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="105:9" pos:end="105:32">/* limit request size */</comment>

        <if_stmt pos:start="107:9" pos:end="111:9"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:30">(<expr pos:start="107:13" pos:end="107:29"><name pos:start="107:13" pos:end="107:15">num</name> <operator pos:start="107:17" pos:end="107:17">&gt;</operator> <name pos:start="107:19" pos:end="107:29">max_discard</name></expr>)</condition> <block pos:start="107:32" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:30">

            <expr_stmt pos:start="109:13" pos:end="109:30"><expr pos:start="109:13" pos:end="109:29"><name pos:start="109:13" pos:end="109:15">num</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <name pos:start="109:19" pos:end="109:29">max_discard</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="115:9" pos:end="149:9"><if pos:start="115:9" pos:end="119:9">if <condition pos:start="115:12" pos:end="115:37">(<expr pos:start="115:13" pos:end="115:36"><name pos:start="115:13" pos:end="115:36"><name pos:start="115:13" pos:end="115:14">bs</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:19">drv</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:36">bdrv_co_discard</name></name></expr>)</condition> <block pos:start="115:39" pos:end="119:9">{<block_content pos:start="117:13" pos:end="117:64">

            <expr_stmt pos:start="117:13" pos:end="117:64"><expr pos:start="117:13" pos:end="117:63"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <call pos:start="117:19" pos:end="117:63"><name pos:start="117:19" pos:end="117:42"><name pos:start="117:19" pos:end="117:20">bs</name><operator pos:start="117:21" pos:end="117:22">-&gt;</operator><name pos:start="117:23" pos:end="117:25">drv</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:42">bdrv_co_discard</name></name><argument_list pos:start="117:43" pos:end="117:63">(<argument pos:start="117:44" pos:end="117:45"><expr pos:start="117:44" pos:end="117:45"><name pos:start="117:44" pos:end="117:45">bs</name></expr></argument>, <argument pos:start="117:48" pos:end="117:57"><expr pos:start="117:48" pos:end="117:57"><name pos:start="117:48" pos:end="117:57">sector_num</name></expr></argument>, <argument pos:start="117:60" pos:end="117:62"><expr pos:start="117:60" pos:end="117:62"><name pos:start="117:60" pos:end="117:62">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="119:11" pos:end="149:9">else <block pos:start="119:16" pos:end="149:9">{<block_content pos:start="121:13" pos:end="147:13">

            <decl_stmt pos:start="121:13" pos:end="121:28"><decl pos:start="121:13" pos:end="121:27"><type pos:start="121:13" pos:end="121:24"><name pos:start="121:13" pos:end="121:22">BlockAIOCB</name> <modifier pos:start="121:24" pos:end="121:24">*</modifier></type><name pos:start="121:25" pos:end="121:27">acb</name></decl>;</decl_stmt>

            <decl_stmt pos:start="123:13" pos:end="127:14"><decl pos:start="123:13" pos:end="127:13"><type pos:start="123:13" pos:end="123:33"><name pos:start="123:13" pos:end="123:33">CoroutineIOCompletion</name></type> <name pos:start="123:35" pos:end="123:36">co</name> <init pos:start="123:38" pos:end="127:13">= <expr pos:start="123:40" pos:end="127:13"><block pos:start="123:40" pos:end="127:13">{

                <expr pos:start="125:17" pos:end="125:50"><operator pos:start="125:17" pos:end="125:17">.</operator><name pos:start="125:18" pos:end="125:26">coroutine</name> <operator pos:start="125:28" pos:end="125:28">=</operator> <call pos:start="125:30" pos:end="125:50"><name pos:start="125:30" pos:end="125:48">qemu_coroutine_self</name><argument_list pos:start="125:49" pos:end="125:50">()</argument_list></call></expr>,

            }</block></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="131:13" pos:end="133:73"><expr pos:start="131:13" pos:end="133:72"><name pos:start="131:13" pos:end="131:15">acb</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <call pos:start="131:19" pos:end="133:72"><name pos:start="131:19" pos:end="131:43"><name pos:start="131:19" pos:end="131:20">bs</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:25">drv</name><operator pos:start="131:26" pos:end="131:27">-&gt;</operator><name pos:start="131:28" pos:end="131:43">bdrv_aio_discard</name></name><argument_list pos:start="131:44" pos:end="133:72">(<argument pos:start="131:45" pos:end="131:46"><expr pos:start="131:45" pos:end="131:46"><name pos:start="131:45" pos:end="131:46">bs</name></expr></argument>, <argument pos:start="131:49" pos:end="131:58"><expr pos:start="131:49" pos:end="131:58"><name pos:start="131:49" pos:end="131:58">sector_num</name></expr></argument>, <argument pos:start="131:61" pos:end="131:70"><expr pos:start="131:61" pos:end="131:70"><name pos:start="131:61" pos:end="131:70">nb_sectors</name></expr></argument>,

                                            <argument pos:start="133:45" pos:end="133:66"><expr pos:start="133:45" pos:end="133:66"><name pos:start="133:45" pos:end="133:66">bdrv_co_io_em_complete</name></expr></argument>, <argument pos:start="133:69" pos:end="133:71"><expr pos:start="133:69" pos:end="133:71"><operator pos:start="133:69" pos:end="133:69">&amp;</operator><name pos:start="133:70" pos:end="133:71">co</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="135:13" pos:end="147:13"><if pos:start="135:13" pos:end="141:13">if <condition pos:start="135:16" pos:end="135:28">(<expr pos:start="135:17" pos:end="135:27"><name pos:start="135:17" pos:end="135:19">acb</name> <operator pos:start="135:21" pos:end="135:22">==</operator> <name pos:start="135:24" pos:end="135:27">NULL</name></expr>)</condition> <block pos:start="135:30" pos:end="141:13">{<block_content pos:start="137:17" pos:end="139:25">

                <expr_stmt pos:start="137:17" pos:end="137:27"><expr pos:start="137:17" pos:end="137:26"><name pos:start="137:17" pos:end="137:19">ret</name> <operator pos:start="137:21" pos:end="137:21">=</operator> <operator pos:start="137:23" pos:end="137:23">-</operator><name pos:start="137:24" pos:end="137:26">EIO</name></expr>;</expr_stmt>

                <goto pos:start="139:17" pos:end="139:25">goto <name pos:start="139:22" pos:end="139:24">out</name>;</goto>

            </block_content>}</block></if> <else pos:start="141:15" pos:end="147:13">else <block pos:start="141:20" pos:end="147:13">{<block_content pos:start="143:17" pos:end="145:29">

                <expr_stmt pos:start="143:17" pos:end="143:39"><expr pos:start="143:17" pos:end="143:38"><call pos:start="143:17" pos:end="143:38"><name pos:start="143:17" pos:end="143:36">qemu_coroutine_yield</name><argument_list pos:start="143:37" pos:end="143:38">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:29"><expr pos:start="145:17" pos:end="145:28"><name pos:start="145:17" pos:end="145:19">ret</name> <operator pos:start="145:21" pos:end="145:21">=</operator> <name pos:start="145:23" pos:end="145:28"><name pos:start="145:23" pos:end="145:24">co</name><operator pos:start="145:25" pos:end="145:25">.</operator><name pos:start="145:26" pos:end="145:28">ret</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="151:9" pos:end="155:9"><if pos:start="151:9" pos:end="155:9">if <condition pos:start="151:12" pos:end="151:35">(<expr pos:start="151:13" pos:end="151:34"><name pos:start="151:13" pos:end="151:15">ret</name> <operator pos:start="151:17" pos:end="151:18">&amp;&amp;</operator> <name pos:start="151:20" pos:end="151:22">ret</name> <operator pos:start="151:24" pos:end="151:25">!=</operator> <operator pos:start="151:27" pos:end="151:27">-</operator><name pos:start="151:28" pos:end="151:34">ENOTSUP</name></expr>)</condition> <block pos:start="151:37" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:21">

            <goto pos:start="153:13" pos:end="153:21">goto <name pos:start="153:18" pos:end="153:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="159:9" pos:end="159:26"><expr pos:start="159:9" pos:end="159:25"><name pos:start="159:9" pos:end="159:18">sector_num</name> <operator pos:start="159:20" pos:end="159:21">+=</operator> <name pos:start="159:23" pos:end="159:25">num</name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:26"><expr pos:start="161:9" pos:end="161:25"><name pos:start="161:9" pos:end="161:18">nb_sectors</name> <operator pos:start="161:20" pos:end="161:21">-=</operator> <name pos:start="161:23" pos:end="161:25">num</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="165:5" pos:end="165:12"><expr pos:start="165:5" pos:end="165:11"><name pos:start="165:5" pos:end="165:7">ret</name> <operator pos:start="165:9" pos:end="165:9">=</operator> <literal type="number" pos:start="165:11" pos:end="165:11">0</literal></expr>;</expr_stmt>

<label pos:start="167:1" pos:end="167:4"><name pos:start="167:1" pos:end="167:3">out</name>:</label>


    <expr_stmt pos:start="170:5" pos:end="172:50"><expr pos:start="170:5" pos:end="172:49"><call pos:start="170:5" pos:end="172:49"><name pos:start="170:5" pos:end="170:18">bdrv_set_dirty</name><argument_list pos:start="170:19" pos:end="172:49">(<argument pos:start="170:20" pos:end="170:21"><expr pos:start="170:20" pos:end="170:21"><name pos:start="170:20" pos:end="170:21">bs</name></expr></argument>, <argument pos:start="170:24" pos:end="170:53"><expr pos:start="170:24" pos:end="170:53"><name pos:start="170:24" pos:end="170:33"><name pos:start="170:24" pos:end="170:26">req</name><operator pos:start="170:27" pos:end="170:27">.</operator><name pos:start="170:28" pos:end="170:33">offset</name></name> <operator pos:start="170:35" pos:end="170:36">&gt;&gt;</operator> <name pos:start="170:38" pos:end="170:53">BDRV_SECTOR_BITS</name></expr></argument>,

                   <argument pos:start="172:20" pos:end="172:48"><expr pos:start="172:20" pos:end="172:48"><name pos:start="172:20" pos:end="172:28"><name pos:start="172:20" pos:end="172:22">req</name><operator pos:start="172:23" pos:end="172:23">.</operator><name pos:start="172:24" pos:end="172:28">bytes</name></name> <operator pos:start="172:30" pos:end="172:31">&gt;&gt;</operator> <name pos:start="172:33" pos:end="172:48">BDRV_SECTOR_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="174:5" pos:end="174:30"><expr pos:start="174:5" pos:end="174:29"><call pos:start="174:5" pos:end="174:29"><name pos:start="174:5" pos:end="174:23">tracked_request_end</name><argument_list pos:start="174:24" pos:end="174:29">(<argument pos:start="174:25" pos:end="174:28"><expr pos:start="174:25" pos:end="174:28"><operator pos:start="174:25" pos:end="174:25">&amp;</operator><name pos:start="174:26" pos:end="174:28">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="176:5" pos:end="176:15">return <expr pos:start="176:12" pos:end="176:14"><name pos:start="176:12" pos:end="176:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
