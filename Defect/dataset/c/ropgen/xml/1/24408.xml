<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24408.c" pos:tabs="8"><function pos:start="1:1" pos:end="48:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:23">trace_backend_init</name><parameter_list pos:start="1:24" pos:end="1:61">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">events</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:60"><decl pos:start="1:45" pos:end="1:60"><type pos:start="1:45" pos:end="1:60"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">file</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="48:1">{<block_content pos:start="5:5" pos:end="46:16">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">GThread</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:19">thread</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="18:5"><if pos:start="9:5" pos:end="18:5">if <condition pos:start="9:8" pos:end="9:30">(<expr pos:start="9:9" pos:end="9:29"><operator pos:start="9:9" pos:end="9:9">!</operator><call pos:start="9:10" pos:end="9:29"><name pos:start="9:10" pos:end="9:27">g_thread_supported</name><argument_list pos:start="9:28" pos:end="9:29">()</argument_list></call></expr>)</condition> <block pos:start="9:32" pos:end="18:5">{<block_content pos:start="12:9" pos:end="12:28">


        <expr_stmt pos:start="12:9" pos:end="12:28"><expr pos:start="12:9" pos:end="12:27"><call pos:start="12:9" pos:end="12:27"><name pos:start="12:9" pos:end="12:21">g_thread_init</name><argument_list pos:start="12:22" pos:end="12:27">(<argument pos:start="12:23" pos:end="12:26"><expr pos:start="12:23" pos:end="12:26"><name pos:start="12:23" pos:end="12:26">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="22:5" pos:end="22:40"><expr pos:start="22:5" pos:end="22:39"><name pos:start="22:5" pos:end="22:24">trace_available_cond</name> <operator pos:start="22:26" pos:end="22:26">=</operator> <call pos:start="22:28" pos:end="22:39"><name pos:start="22:28" pos:end="22:37">g_cond_new</name><argument_list pos:start="22:38" pos:end="22:39">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="24:5" pos:end="24:36"><expr pos:start="24:5" pos:end="24:35"><name pos:start="24:5" pos:end="24:20">trace_empty_cond</name> <operator pos:start="24:22" pos:end="24:22">=</operator> <call pos:start="24:24" pos:end="24:35"><name pos:start="24:24" pos:end="24:33">g_cond_new</name><argument_list pos:start="24:34" pos:end="24:35">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="28:5" pos:end="28:50"><expr pos:start="28:5" pos:end="28:49"><name pos:start="28:5" pos:end="28:10">thread</name> <operator pos:start="28:12" pos:end="28:12">=</operator> <call pos:start="28:14" pos:end="28:49"><name pos:start="28:14" pos:end="28:32">trace_thread_create</name><argument_list pos:start="28:33" pos:end="28:49">(<argument pos:start="28:34" pos:end="28:48"><expr pos:start="28:34" pos:end="28:48"><name pos:start="28:34" pos:end="28:48">writeout_thread</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="30:5" pos:end="36:5"><if pos:start="30:5" pos:end="36:5">if <condition pos:start="30:8" pos:end="30:16">(<expr pos:start="30:9" pos:end="30:15"><operator pos:start="30:9" pos:end="30:9">!</operator><name pos:start="30:10" pos:end="30:15">thread</name></expr>)</condition> <block pos:start="30:18" pos:end="36:5">{<block_content pos:start="32:9" pos:end="34:21">

        <expr_stmt pos:start="32:9" pos:end="32:80"><expr pos:start="32:9" pos:end="32:79"><call pos:start="32:9" pos:end="32:79"><name pos:start="32:9" pos:end="32:15">fprintf</name><argument_list pos:start="32:16" pos:end="32:79">(<argument pos:start="32:17" pos:end="32:22"><expr pos:start="32:17" pos:end="32:22"><name pos:start="32:17" pos:end="32:22">stderr</name></expr></argument>, <argument pos:start="32:25" pos:end="32:78"><expr pos:start="32:25" pos:end="32:78"><literal type="string" pos:start="32:25" pos:end="32:78">"warning: unable to initialize simple trace backend\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="34:9" pos:end="34:21">return <expr pos:start="34:16" pos:end="34:20"><name pos:start="34:16" pos:end="34:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="40:5" pos:end="40:34"><expr pos:start="40:5" pos:end="40:33"><call pos:start="40:5" pos:end="40:33"><name pos:start="40:5" pos:end="40:10">atexit</name><argument_list pos:start="40:11" pos:end="40:33">(<argument pos:start="40:12" pos:end="40:32"><expr pos:start="40:12" pos:end="40:32"><name pos:start="40:12" pos:end="40:32">st_flush_trace_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="42:5" pos:end="42:38"><expr pos:start="42:5" pos:end="42:37"><call pos:start="42:5" pos:end="42:37"><name pos:start="42:5" pos:end="42:29">trace_backend_init_events</name><argument_list pos:start="42:30" pos:end="42:37">(<argument pos:start="42:31" pos:end="42:36"><expr pos:start="42:31" pos:end="42:36"><name pos:start="42:31" pos:end="42:36">events</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="44:5" pos:end="44:28"><expr pos:start="44:5" pos:end="44:27"><call pos:start="44:5" pos:end="44:27"><name pos:start="44:5" pos:end="44:21">st_set_trace_file</name><argument_list pos:start="44:22" pos:end="44:27">(<argument pos:start="44:23" pos:end="44:26"><expr pos:start="44:23" pos:end="44:26"><name pos:start="44:23" pos:end="44:26">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="46:5" pos:end="46:16">return <expr pos:start="46:12" pos:end="46:15"><name pos:start="46:12" pos:end="46:15">true</name></expr>;</return>

</block_content>}</block></function></unit>
