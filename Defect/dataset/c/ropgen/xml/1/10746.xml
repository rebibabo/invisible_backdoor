<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10746.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:52">quantize_and_encode_band_cost_UQUAD_mips</name><parameter_list pos:start="1:53" pos:end="9:85">(<parameter pos:start="1:54" pos:end="1:76"><decl pos:start="1:54" pos:end="1:76"><type pos:start="1:54" pos:end="1:76"><name pos:start="1:54" pos:end="1:73"><name pos:start="1:54" pos:end="1:59">struct</name> <name pos:start="1:61" pos:end="1:73">AACEncContext</name></name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:76">s</name></decl></parameter>,

                                                     <parameter pos:start="3:54" pos:end="3:70"><decl pos:start="3:54" pos:end="3:70"><type pos:start="3:54" pos:end="3:70"><name pos:start="3:54" pos:end="3:66">PutBitContext</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier></type><name pos:start="3:69" pos:end="3:70">pb</name></decl></parameter>, <parameter pos:start="3:73" pos:end="3:87"><decl pos:start="3:73" pos:end="3:87"><type pos:start="3:73" pos:end="3:87"><specifier pos:start="3:73" pos:end="3:77">const</specifier> <name pos:start="3:79" pos:end="3:83">float</name> <modifier pos:start="3:85" pos:end="3:85">*</modifier></type><name pos:start="3:86" pos:end="3:87">in</name></decl></parameter>, <parameter pos:start="3:90" pos:end="3:99"><decl pos:start="3:90" pos:end="3:99"><type pos:start="3:90" pos:end="3:99"><name pos:start="3:90" pos:end="3:94">float</name> <modifier pos:start="3:96" pos:end="3:96">*</modifier></type><name pos:start="3:97" pos:end="3:99">out</name></decl></parameter>,

                                                     <parameter pos:start="5:54" pos:end="5:72"><decl pos:start="5:54" pos:end="5:72"><type pos:start="5:54" pos:end="5:72"><specifier pos:start="5:54" pos:end="5:58">const</specifier> <name pos:start="5:60" pos:end="5:64">float</name> <modifier pos:start="5:66" pos:end="5:66">*</modifier></type><name pos:start="5:67" pos:end="5:72">scaled</name></decl></parameter>, <parameter pos:start="5:75" pos:end="5:82"><decl pos:start="5:75" pos:end="5:82"><type pos:start="5:75" pos:end="5:82"><name pos:start="5:75" pos:end="5:77">int</name></type> <name pos:start="5:79" pos:end="5:82">size</name></decl></parameter>, <parameter pos:start="5:85" pos:end="5:97"><decl pos:start="5:85" pos:end="5:97"><type pos:start="5:85" pos:end="5:97"><name pos:start="5:85" pos:end="5:87">int</name></type> <name pos:start="5:89" pos:end="5:97">scale_idx</name></decl></parameter>,

                                                     <parameter pos:start="7:54" pos:end="7:59"><decl pos:start="7:54" pos:end="7:59"><type pos:start="7:54" pos:end="7:59"><name pos:start="7:54" pos:end="7:56">int</name></type> <name pos:start="7:58" pos:end="7:59">cb</name></decl></parameter>, <parameter pos:start="7:62" pos:end="7:79"><decl pos:start="7:62" pos:end="7:79"><type pos:start="7:62" pos:end="7:79"><specifier pos:start="7:62" pos:end="7:66">const</specifier> <name pos:start="7:68" pos:end="7:72">float</name></type> <name pos:start="7:74" pos:end="7:79">lambda</name></decl></parameter>, <parameter pos:start="7:82" pos:end="7:98"><decl pos:start="7:82" pos:end="7:98"><type pos:start="7:82" pos:end="7:98"><specifier pos:start="7:82" pos:end="7:86">const</specifier> <name pos:start="7:88" pos:end="7:92">float</name></type> <name pos:start="7:94" pos:end="7:98">uplim</name></decl></parameter>,

                                                     <parameter pos:start="9:54" pos:end="9:62"><decl pos:start="9:54" pos:end="9:62"><type pos:start="9:54" pos:end="9:62"><name pos:start="9:54" pos:end="9:56">int</name> <modifier pos:start="9:58" pos:end="9:58">*</modifier></type><name pos:start="9:59" pos:end="9:62">bits</name></decl></parameter>, <parameter pos:start="9:65" pos:end="9:84"><decl pos:start="9:65" pos:end="9:84"><type pos:start="9:65" pos:end="9:84"><specifier pos:start="9:65" pos:end="9:69">const</specifier> <name pos:start="9:71" pos:end="9:75">float</name></type> <name pos:start="9:77" pos:end="9:84">ROUNDING</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="203:1">{<block_content pos:start="13:5" pos:end="201:5">

    <decl_stmt pos:start="13:5" pos:end="13:99"><decl pos:start="13:5" pos:end="13:98"><type pos:start="13:5" pos:end="13:15"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:15">float</name></type> <name pos:start="13:17" pos:end="13:19">Q34</name> <init pos:start="13:21" pos:end="13:98">= <expr pos:start="13:23" pos:end="13:98"><name pos:start="13:23" pos:end="13:98"><name pos:start="13:23" pos:end="13:40">ff_aac_pow34sf_tab</name><index pos:start="13:41" pos:end="13:98">[<expr pos:start="13:42" pos:end="13:97"><name pos:start="13:42" pos:end="13:53">POW_SF2_ZERO</name> <operator pos:start="13:55" pos:end="13:55">-</operator> <name pos:start="13:57" pos:end="13:65">scale_idx</name> <operator pos:start="13:67" pos:end="13:67">+</operator> <name pos:start="13:69" pos:end="13:81">SCALE_ONE_POS</name> <operator pos:start="13:83" pos:end="13:83">-</operator> <name pos:start="13:85" pos:end="13:97">SCALE_DIV_512</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:99"><decl pos:start="15:5" pos:end="15:98"><type pos:start="15:5" pos:end="15:15"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:15">float</name></type> <name pos:start="15:17" pos:end="15:18">IQ</name>  <init pos:start="15:21" pos:end="15:98">= <expr pos:start="15:23" pos:end="15:98"><name pos:start="15:23" pos:end="15:98"><name pos:start="15:23" pos:end="15:39">ff_aac_pow2sf_tab</name> <index pos:start="15:41" pos:end="15:98">[<expr pos:start="15:42" pos:end="15:97"><name pos:start="15:42" pos:end="15:53">POW_SF2_ZERO</name> <operator pos:start="15:55" pos:end="15:55">+</operator> <name pos:start="15:57" pos:end="15:65">scale_idx</name> <operator pos:start="15:67" pos:end="15:67">-</operator> <name pos:start="15:69" pos:end="15:81">SCALE_ONE_POS</name> <operator pos:start="15:83" pos:end="15:83">+</operator> <name pos:start="15:85" pos:end="15:97">SCALE_DIV_512</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">qc1</name></decl>, <decl pos:start="19:14" pos:end="19:16"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:14" pos:end="19:16">qc2</name></decl>, <decl pos:start="19:19" pos:end="19:21"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:19" pos:end="19:21">qc3</name></decl>, <decl pos:start="19:24" pos:end="19:26"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:24" pos:end="19:26">qc4</name></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="23:63"><decl pos:start="23:5" pos:end="23:62"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:11">uint8_t</name>  <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:20">p_bits</name>  <init pos:start="23:23" pos:end="23:62">= <expr pos:start="23:25" pos:end="23:62"><operator pos:start="23:25" pos:end="23:25">(</operator><name pos:start="23:26" pos:end="23:32">uint8_t</name>  <operator pos:start="23:35" pos:end="23:35">*</operator><operator pos:start="23:36" pos:end="23:36">)</operator><name pos:start="23:37" pos:end="23:62"><name pos:start="23:37" pos:end="23:56">ff_aac_spectral_bits</name><index pos:start="23:57" pos:end="23:62">[<expr pos:start="23:58" pos:end="23:61"><name pos:start="23:58" pos:end="23:59">cb</name><operator pos:start="23:60" pos:end="23:60">-</operator><literal type="number" pos:start="23:61" pos:end="23:61">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:64"><decl pos:start="25:5" pos:end="25:63"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:12">uint16_t</name> <modifier pos:start="25:14" pos:end="25:14">*</modifier></type><name pos:start="25:15" pos:end="25:21">p_codes</name> <init pos:start="25:23" pos:end="25:63">= <expr pos:start="25:25" pos:end="25:63"><operator pos:start="25:25" pos:end="25:25">(</operator><name pos:start="25:26" pos:end="25:33">uint16_t</name> <operator pos:start="25:35" pos:end="25:35">*</operator><operator pos:start="25:36" pos:end="25:36">)</operator><name pos:start="25:37" pos:end="25:63"><name pos:start="25:37" pos:end="25:57">ff_aac_spectral_codes</name><index pos:start="25:58" pos:end="25:63">[<expr pos:start="25:59" pos:end="25:62"><name pos:start="25:59" pos:end="25:60">cb</name><operator pos:start="25:61" pos:end="25:61">-</operator><literal type="number" pos:start="25:62" pos:end="25:62">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:66"><decl pos:start="27:5" pos:end="27:65"><type pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:9">float</name>    <modifier pos:start="27:14" pos:end="27:14">*</modifier></type><name pos:start="27:15" pos:end="27:19">p_vec</name>   <init pos:start="27:23" pos:end="27:65">= <expr pos:start="27:25" pos:end="27:65"><operator pos:start="27:25" pos:end="27:25">(</operator><name pos:start="27:26" pos:end="27:30">float</name>    <operator pos:start="27:35" pos:end="27:35">*</operator><operator pos:start="27:36" pos:end="27:36">)</operator><name pos:start="27:37" pos:end="27:65"><name pos:start="27:37" pos:end="27:59">ff_aac_codebook_vectors</name><index pos:start="27:60" pos:end="27:65">[<expr pos:start="27:61" pos:end="27:64"><name pos:start="27:61" pos:end="27:62">cb</name><operator pos:start="27:63" pos:end="27:63">-</operator><literal type="number" pos:start="27:64" pos:end="27:64">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><call pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:15">abs_pow34_v</name><argument_list pos:start="31:16" pos:end="31:36">(<argument pos:start="31:17" pos:end="31:25"><expr pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:25">scoefs</name></name></expr></argument>, <argument pos:start="31:28" pos:end="31:29"><expr pos:start="31:28" pos:end="31:29"><name pos:start="31:28" pos:end="31:29">in</name></expr></argument>, <argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:35">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:10">scaled</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:22"><name pos:start="33:14" pos:end="33:14">s</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:22">scoefs</name></name></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="201:5">for <control pos:start="35:9" pos:end="35:33">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:25"><expr pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:24">size</name></expr>;</condition> <incr pos:start="35:27" pos:end="35:32"><expr pos:start="35:27" pos:end="35:32"><name pos:start="35:27" pos:end="35:27">i</name> <operator pos:start="35:29" pos:end="35:30">+=</operator> <literal type="number" pos:start="35:32" pos:end="35:32">4</literal></expr></incr>)</control> <block pos:start="35:35" pos:end="201:5">{<block_content pos:start="37:9" pos:end="199:9">

        <decl_stmt pos:start="37:9" pos:end="37:32"><decl pos:start="37:9" pos:end="37:18"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:18">curidx</name></decl>, <decl pos:start="37:21" pos:end="37:24"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:21" pos:end="37:24">sign</name></decl>, <decl pos:start="37:27" pos:end="37:31"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:27" pos:end="37:31">count</name></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:36"><decl pos:start="39:9" pos:end="39:35"><type pos:start="39:9" pos:end="39:13"><name pos:start="39:9" pos:end="39:11">int</name> <modifier pos:start="39:13" pos:end="39:13">*</modifier></type><name pos:start="39:14" pos:end="39:19">in_int</name> <init pos:start="39:21" pos:end="39:35">= <expr pos:start="39:23" pos:end="39:35"><operator pos:start="39:23" pos:end="39:23">(</operator><name pos:start="39:24" pos:end="39:26">int</name> <operator pos:start="39:28" pos:end="39:28">*</operator><operator pos:start="39:29" pos:end="39:29">)</operator><operator pos:start="39:30" pos:end="39:30">&amp;</operator><name pos:start="39:31" pos:end="39:35"><name pos:start="39:31" pos:end="39:32">in</name><index pos:start="39:33" pos:end="39:35">[<expr pos:start="39:34" pos:end="39:34"><name pos:start="39:34" pos:end="39:34">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:23"><decl pos:start="41:9" pos:end="41:22"><type pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:15">uint8_t</name></type> <name pos:start="41:17" pos:end="41:22">v_bits</name></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:29"><decl pos:start="43:9" pos:end="43:28"><type pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:16">unsigned</name> <name pos:start="43:18" pos:end="43:20">int</name></type> <name pos:start="43:22" pos:end="43:28">v_codes</name></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:31"><decl pos:start="45:9" pos:end="45:14"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:14">t0</name></decl>, <decl pos:start="45:17" pos:end="45:18"><type ref="prev" pos:start="45:9" pos:end="45:11"/><name pos:start="45:17" pos:end="45:18">t1</name></decl>, <decl pos:start="45:21" pos:end="45:22"><type ref="prev" pos:start="45:9" pos:end="45:11"/><name pos:start="45:21" pos:end="45:22">t2</name></decl>, <decl pos:start="45:25" pos:end="45:26"><type ref="prev" pos:start="45:9" pos:end="45:11"/><name pos:start="45:25" pos:end="45:26">t3</name></decl>, <decl pos:start="45:29" pos:end="45:30"><type ref="prev" pos:start="45:9" pos:end="45:11"/><name pos:start="45:29" pos:end="45:30">t4</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:25"><decl pos:start="47:9" pos:end="47:24"><type pos:start="47:9" pos:end="47:21"><specifier pos:start="47:9" pos:end="47:13">const</specifier> <name pos:start="47:15" pos:end="47:19">float</name> <modifier pos:start="47:21" pos:end="47:21">*</modifier></type><name pos:start="47:22" pos:end="47:24">vec</name></decl>;</decl_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:11">qc1</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:25"><name pos:start="51:15" pos:end="51:20">scaled</name><index pos:start="51:21" pos:end="51:25">[<expr pos:start="51:22" pos:end="51:22"><name pos:start="51:22" pos:end="51:22">i</name></expr>  ]</index></name> <operator pos:start="51:27" pos:end="51:27">*</operator> <name pos:start="51:29" pos:end="51:31">Q34</name> <operator pos:start="51:33" pos:end="51:33">+</operator> <name pos:start="51:35" pos:end="51:48">ROUND_STANDARD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:49"><expr pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:11">qc2</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:25"><name pos:start="53:15" pos:end="53:20">scaled</name><index pos:start="53:21" pos:end="53:25">[<expr pos:start="53:22" pos:end="53:24"><name pos:start="53:22" pos:end="53:22">i</name><operator pos:start="53:23" pos:end="53:23">+</operator><literal type="number" pos:start="53:24" pos:end="53:24">1</literal></expr>]</index></name> <operator pos:start="53:27" pos:end="53:27">*</operator> <name pos:start="53:29" pos:end="53:31">Q34</name> <operator pos:start="53:33" pos:end="53:33">+</operator> <name pos:start="53:35" pos:end="53:48">ROUND_STANDARD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:49"><expr pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:11">qc3</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <name pos:start="55:15" pos:end="55:25"><name pos:start="55:15" pos:end="55:20">scaled</name><index pos:start="55:21" pos:end="55:25">[<expr pos:start="55:22" pos:end="55:24"><name pos:start="55:22" pos:end="55:22">i</name><operator pos:start="55:23" pos:end="55:23">+</operator><literal type="number" pos:start="55:24" pos:end="55:24">2</literal></expr>]</index></name> <operator pos:start="55:27" pos:end="55:27">*</operator> <name pos:start="55:29" pos:end="55:31">Q34</name> <operator pos:start="55:33" pos:end="55:33">+</operator> <name pos:start="55:35" pos:end="55:48">ROUND_STANDARD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:49"><expr pos:start="57:9" pos:end="57:48"><name pos:start="57:9" pos:end="57:11">qc4</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:25"><name pos:start="57:15" pos:end="57:20">scaled</name><index pos:start="57:21" pos:end="57:25">[<expr pos:start="57:22" pos:end="57:24"><name pos:start="57:22" pos:end="57:22">i</name><operator pos:start="57:23" pos:end="57:23">+</operator><literal type="number" pos:start="57:24" pos:end="57:24">3</literal></expr>]</index></name> <operator pos:start="57:27" pos:end="57:27">*</operator> <name pos:start="57:29" pos:end="57:31">Q34</name> <operator pos:start="57:33" pos:end="57:33">+</operator> <name pos:start="57:35" pos:end="57:48">ROUND_STANDARD</name></expr>;</expr_stmt>



        <asm pos:start="61:9" pos:end="159:10">__asm__ <specifier pos:start="61:17" pos:end="61:24">volatile</specifier> (

            ".set push                              \n\t"

            ".set noreorder                         \n\t"



            "ori    %[t4],      $zero,      2       \n\t"

            "ori    %[sign],    $zero,      0       \n\t"

            "slt    %[t0],      %[t4],      %[qc1]  \n\t"

            "slt    %[t1],      %[t4],      %[qc2]  \n\t"

            "slt    %[t2],      %[t4],      %[qc3]  \n\t"

            "slt    %[t3],      %[t4],      %[qc4]  \n\t"

            "movn   %[qc1],     %[t4],      %[t0]   \n\t"

            "movn   %[qc2],     %[t4],      %[t1]   \n\t"

            "movn   %[qc3],     %[t4],      %[t2]   \n\t"

            "movn   %[qc4],     %[t4],      %[t3]   \n\t"

            "lw     %[t0],      0(%[in_int])        \n\t"

            "lw     %[t1],      4(%[in_int])        \n\t"

            "lw     %[t2],      8(%[in_int])        \n\t"

            "lw     %[t3],      12(%[in_int])       \n\t"

            "slt    %[t0],      %[t0],      $zero   \n\t"

            "movn   %[sign],    %[t0],      %[qc1]  \n\t"

            "slt    %[t1],      %[t1],      $zero   \n\t"

            "slt    %[t2],      %[t2],      $zero   \n\t"

            "slt    %[t3],      %[t3],      $zero   \n\t"

            "sll    %[t0],      %[sign],    1       \n\t"

            "or     %[t0],      %[t0],      %[t1]   \n\t"

            "movn   %[sign],    %[t0],      %[qc2]  \n\t"

            "slt    %[t4],      $zero,      %[qc1]  \n\t"

            "slt    %[t1],      $zero,      %[qc2]  \n\t"

            "slt    %[count],   $zero,      %[qc3]  \n\t"

            "sll    %[t0],      %[sign],    1       \n\t"

            "or     %[t0],      %[t0],      %[t2]   \n\t"

            "movn   %[sign],    %[t0],      %[qc3]  \n\t"

            "slt    %[t2],      $zero,      %[qc4]  \n\t"

            "addu   %[count],   %[count],   %[t4]   \n\t"

            "addu   %[count],   %[count],   %[t1]   \n\t"

            "sll    %[t0],      %[sign],    1       \n\t"

            "or     %[t0],      %[t0],      %[t3]   \n\t"

            "movn   %[sign],    %[t0],      %[qc4]  \n\t"

            "addu   %[count],   %[count],   %[t2]   \n\t"



            ".set pop                               \n\t"



            : [qc1]"+r"(qc1), [qc2]"+r"(qc2),

              [qc3]"+r"(qc3), [qc4]"+r"(qc4),

              [sign]"=&amp;r"(sign), [count]"=&amp;r"(count),

              [t0]"=&amp;r"(t0), [t1]"=&amp;r"(t1), [t2]"=&amp;r"(t2), [t3]"=&amp;r"(t3),

              [t4]"=&amp;r"(t4)

            : [in_int]"r"(in_int)

            : "memory"

        );</asm>



        <expr_stmt pos:start="163:9" pos:end="163:21"><expr pos:start="163:9" pos:end="163:20"><name pos:start="163:9" pos:end="163:14">curidx</name> <operator pos:start="163:16" pos:end="163:16">=</operator> <name pos:start="163:18" pos:end="163:20">qc1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:20"><expr pos:start="165:9" pos:end="165:19"><name pos:start="165:9" pos:end="165:14">curidx</name> <operator pos:start="165:16" pos:end="165:17">*=</operator> <literal type="number" pos:start="165:19" pos:end="165:19">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:22"><expr pos:start="167:9" pos:end="167:21"><name pos:start="167:9" pos:end="167:14">curidx</name> <operator pos:start="167:16" pos:end="167:17">+=</operator> <name pos:start="167:19" pos:end="167:21">qc2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:20"><expr pos:start="169:9" pos:end="169:19"><name pos:start="169:9" pos:end="169:14">curidx</name> <operator pos:start="169:16" pos:end="169:17">*=</operator> <literal type="number" pos:start="169:19" pos:end="169:19">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:22"><expr pos:start="171:9" pos:end="171:21"><name pos:start="171:9" pos:end="171:14">curidx</name> <operator pos:start="171:16" pos:end="171:17">+=</operator> <name pos:start="171:19" pos:end="171:21">qc3</name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:20"><expr pos:start="173:9" pos:end="173:19"><name pos:start="173:9" pos:end="173:14">curidx</name> <operator pos:start="173:16" pos:end="173:17">*=</operator> <literal type="number" pos:start="173:19" pos:end="173:19">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:22"><expr pos:start="175:9" pos:end="175:21"><name pos:start="175:9" pos:end="175:14">curidx</name> <operator pos:start="175:16" pos:end="175:17">+=</operator> <name pos:start="175:19" pos:end="175:21">qc4</name></expr>;</expr_stmt>



        <expr_stmt pos:start="179:9" pos:end="179:75"><expr pos:start="179:9" pos:end="179:74"><name pos:start="179:9" pos:end="179:15">v_codes</name> <operator pos:start="179:17" pos:end="179:17">=</operator> <operator pos:start="179:19" pos:end="179:19">(</operator><name pos:start="179:20" pos:end="179:34"><name pos:start="179:20" pos:end="179:26">p_codes</name><index pos:start="179:27" pos:end="179:34">[<expr pos:start="179:28" pos:end="179:33"><name pos:start="179:28" pos:end="179:33">curidx</name></expr>]</index></name> <operator pos:start="179:36" pos:end="179:37">&lt;&lt;</operator> <name pos:start="179:39" pos:end="179:43">count</name><operator pos:start="179:44" pos:end="179:44">)</operator> <operator pos:start="179:46" pos:end="179:46">|</operator> <operator pos:start="179:48" pos:end="179:48">(</operator><name pos:start="179:49" pos:end="179:52">sign</name> <operator pos:start="179:54" pos:end="179:54">&amp;</operator> <operator pos:start="179:56" pos:end="179:56">(</operator><operator pos:start="179:57" pos:end="179:57">(</operator><literal type="number" pos:start="179:58" pos:end="179:58">1</literal> <operator pos:start="179:60" pos:end="179:61">&lt;&lt;</operator> <name pos:start="179:63" pos:end="179:67">count</name><operator pos:start="179:68" pos:end="179:68">)</operator> <operator pos:start="179:70" pos:end="179:70">-</operator> <literal type="number" pos:start="179:72" pos:end="179:72">1</literal><operator pos:start="179:73" pos:end="179:73">)</operator><operator pos:start="179:74" pos:end="179:74">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:41"><expr pos:start="181:9" pos:end="181:40"><name pos:start="181:9" pos:end="181:14">v_bits</name>  <operator pos:start="181:17" pos:end="181:17">=</operator> <name pos:start="181:19" pos:end="181:32"><name pos:start="181:19" pos:end="181:24">p_bits</name><index pos:start="181:25" pos:end="181:32">[<expr pos:start="181:26" pos:end="181:31"><name pos:start="181:26" pos:end="181:31">curidx</name></expr>]</index></name> <operator pos:start="181:34" pos:end="181:34">+</operator> <name pos:start="181:36" pos:end="181:40">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:38"><expr pos:start="183:9" pos:end="183:37"><call pos:start="183:9" pos:end="183:37"><name pos:start="183:9" pos:end="183:16">put_bits</name><argument_list pos:start="183:17" pos:end="183:37">(<argument pos:start="183:18" pos:end="183:19"><expr pos:start="183:18" pos:end="183:19"><name pos:start="183:18" pos:end="183:19">pb</name></expr></argument>, <argument pos:start="183:22" pos:end="183:27"><expr pos:start="183:22" pos:end="183:27"><name pos:start="183:22" pos:end="183:27">v_bits</name></expr></argument>, <argument pos:start="183:30" pos:end="183:36"><expr pos:start="183:30" pos:end="183:36"><name pos:start="183:30" pos:end="183:36">v_codes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="187:9" pos:end="199:9"><if pos:start="187:9" pos:end="199:9">if <condition pos:start="187:12" pos:end="187:16">(<expr pos:start="187:13" pos:end="187:15"><name pos:start="187:13" pos:end="187:15">out</name></expr>)</condition> <block pos:start="187:18" pos:end="199:9">{<block_content pos:start="189:12" pos:end="197:54">

           <expr_stmt pos:start="189:12" pos:end="189:34"><expr pos:start="189:12" pos:end="189:33"><name pos:start="189:12" pos:end="189:14">vec</name> <operator pos:start="189:16" pos:end="189:16">=</operator> <operator pos:start="189:18" pos:end="189:18">&amp;</operator><name pos:start="189:19" pos:end="189:33"><name pos:start="189:19" pos:end="189:23">p_vec</name><index pos:start="189:24" pos:end="189:33">[<expr pos:start="189:25" pos:end="189:32"><name pos:start="189:25" pos:end="189:30">curidx</name><operator pos:start="189:31" pos:end="189:31">*</operator><literal type="number" pos:start="189:32" pos:end="189:32">4</literal></expr>]</index></name></expr>;</expr_stmt>

           <expr_stmt pos:start="191:12" pos:end="191:54"><expr pos:start="191:12" pos:end="191:53"><name pos:start="191:12" pos:end="191:19"><name pos:start="191:12" pos:end="191:14">out</name><index pos:start="191:15" pos:end="191:19">[<expr pos:start="191:16" pos:end="191:18"><name pos:start="191:16" pos:end="191:16">i</name><operator pos:start="191:17" pos:end="191:17">+</operator><literal type="number" pos:start="191:18" pos:end="191:18">0</literal></expr>]</index></name> <operator pos:start="191:21" pos:end="191:21">=</operator> <call pos:start="191:23" pos:end="191:53"><name pos:start="191:23" pos:end="191:31">copysignf</name><argument_list pos:start="191:32" pos:end="191:53">(<argument pos:start="191:33" pos:end="191:43"><expr pos:start="191:33" pos:end="191:43"><name pos:start="191:33" pos:end="191:38"><name pos:start="191:33" pos:end="191:35">vec</name><index pos:start="191:36" pos:end="191:38">[<expr pos:start="191:37" pos:end="191:37"><literal type="number" pos:start="191:37" pos:end="191:37">0</literal></expr>]</index></name> <operator pos:start="191:40" pos:end="191:40">*</operator> <name pos:start="191:42" pos:end="191:43">IQ</name></expr></argument>, <argument pos:start="191:46" pos:end="191:52"><expr pos:start="191:46" pos:end="191:52"><name pos:start="191:46" pos:end="191:52"><name pos:start="191:46" pos:end="191:47">in</name><index pos:start="191:48" pos:end="191:52">[<expr pos:start="191:49" pos:end="191:51"><name pos:start="191:49" pos:end="191:49">i</name><operator pos:start="191:50" pos:end="191:50">+</operator><literal type="number" pos:start="191:51" pos:end="191:51">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <expr_stmt pos:start="193:12" pos:end="193:54"><expr pos:start="193:12" pos:end="193:53"><name pos:start="193:12" pos:end="193:19"><name pos:start="193:12" pos:end="193:14">out</name><index pos:start="193:15" pos:end="193:19">[<expr pos:start="193:16" pos:end="193:18"><name pos:start="193:16" pos:end="193:16">i</name><operator pos:start="193:17" pos:end="193:17">+</operator><literal type="number" pos:start="193:18" pos:end="193:18">1</literal></expr>]</index></name> <operator pos:start="193:21" pos:end="193:21">=</operator> <call pos:start="193:23" pos:end="193:53"><name pos:start="193:23" pos:end="193:31">copysignf</name><argument_list pos:start="193:32" pos:end="193:53">(<argument pos:start="193:33" pos:end="193:43"><expr pos:start="193:33" pos:end="193:43"><name pos:start="193:33" pos:end="193:38"><name pos:start="193:33" pos:end="193:35">vec</name><index pos:start="193:36" pos:end="193:38">[<expr pos:start="193:37" pos:end="193:37"><literal type="number" pos:start="193:37" pos:end="193:37">1</literal></expr>]</index></name> <operator pos:start="193:40" pos:end="193:40">*</operator> <name pos:start="193:42" pos:end="193:43">IQ</name></expr></argument>, <argument pos:start="193:46" pos:end="193:52"><expr pos:start="193:46" pos:end="193:52"><name pos:start="193:46" pos:end="193:52"><name pos:start="193:46" pos:end="193:47">in</name><index pos:start="193:48" pos:end="193:52">[<expr pos:start="193:49" pos:end="193:51"><name pos:start="193:49" pos:end="193:49">i</name><operator pos:start="193:50" pos:end="193:50">+</operator><literal type="number" pos:start="193:51" pos:end="193:51">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <expr_stmt pos:start="195:12" pos:end="195:54"><expr pos:start="195:12" pos:end="195:53"><name pos:start="195:12" pos:end="195:19"><name pos:start="195:12" pos:end="195:14">out</name><index pos:start="195:15" pos:end="195:19">[<expr pos:start="195:16" pos:end="195:18"><name pos:start="195:16" pos:end="195:16">i</name><operator pos:start="195:17" pos:end="195:17">+</operator><literal type="number" pos:start="195:18" pos:end="195:18">2</literal></expr>]</index></name> <operator pos:start="195:21" pos:end="195:21">=</operator> <call pos:start="195:23" pos:end="195:53"><name pos:start="195:23" pos:end="195:31">copysignf</name><argument_list pos:start="195:32" pos:end="195:53">(<argument pos:start="195:33" pos:end="195:43"><expr pos:start="195:33" pos:end="195:43"><name pos:start="195:33" pos:end="195:38"><name pos:start="195:33" pos:end="195:35">vec</name><index pos:start="195:36" pos:end="195:38">[<expr pos:start="195:37" pos:end="195:37"><literal type="number" pos:start="195:37" pos:end="195:37">2</literal></expr>]</index></name> <operator pos:start="195:40" pos:end="195:40">*</operator> <name pos:start="195:42" pos:end="195:43">IQ</name></expr></argument>, <argument pos:start="195:46" pos:end="195:52"><expr pos:start="195:46" pos:end="195:52"><name pos:start="195:46" pos:end="195:52"><name pos:start="195:46" pos:end="195:47">in</name><index pos:start="195:48" pos:end="195:52">[<expr pos:start="195:49" pos:end="195:51"><name pos:start="195:49" pos:end="195:49">i</name><operator pos:start="195:50" pos:end="195:50">+</operator><literal type="number" pos:start="195:51" pos:end="195:51">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <expr_stmt pos:start="197:12" pos:end="197:54"><expr pos:start="197:12" pos:end="197:53"><name pos:start="197:12" pos:end="197:19"><name pos:start="197:12" pos:end="197:14">out</name><index pos:start="197:15" pos:end="197:19">[<expr pos:start="197:16" pos:end="197:18"><name pos:start="197:16" pos:end="197:16">i</name><operator pos:start="197:17" pos:end="197:17">+</operator><literal type="number" pos:start="197:18" pos:end="197:18">3</literal></expr>]</index></name> <operator pos:start="197:21" pos:end="197:21">=</operator> <call pos:start="197:23" pos:end="197:53"><name pos:start="197:23" pos:end="197:31">copysignf</name><argument_list pos:start="197:32" pos:end="197:53">(<argument pos:start="197:33" pos:end="197:43"><expr pos:start="197:33" pos:end="197:43"><name pos:start="197:33" pos:end="197:38"><name pos:start="197:33" pos:end="197:35">vec</name><index pos:start="197:36" pos:end="197:38">[<expr pos:start="197:37" pos:end="197:37"><literal type="number" pos:start="197:37" pos:end="197:37">3</literal></expr>]</index></name> <operator pos:start="197:40" pos:end="197:40">*</operator> <name pos:start="197:42" pos:end="197:43">IQ</name></expr></argument>, <argument pos:start="197:46" pos:end="197:52"><expr pos:start="197:46" pos:end="197:52"><name pos:start="197:46" pos:end="197:52"><name pos:start="197:46" pos:end="197:47">in</name><index pos:start="197:48" pos:end="197:52">[<expr pos:start="197:49" pos:end="197:51"><name pos:start="197:49" pos:end="197:49">i</name><operator pos:start="197:50" pos:end="197:50">+</operator><literal type="number" pos:start="197:51" pos:end="197:51">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
