<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13534.c" pos:tabs="8"><function pos:start="1:1" pos:end="48:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:14">ff_wma_end</name><parameter_list pos:start="1:15" pos:end="1:37">(<parameter pos:start="1:16" pos:end="1:36"><decl pos:start="1:16" pos:end="1:36"><type pos:start="1:16" pos:end="1:31"><name pos:start="1:16" pos:end="1:29">AVCodecContext</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:36">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="48:1">{<block_content pos:start="5:5" pos:end="46:13">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">WMACodecContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:41">= <expr pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:30">avctx</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="13:37">for<control pos:start="11:8" pos:end="11:42">(<init pos:start="11:9" pos:end="11:14"><expr pos:start="11:9" pos:end="11:13"><name pos:start="11:9" pos:end="11:9">i</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <literal type="number" pos:start="11:13" pos:end="11:13">0</literal></expr>;</init> <condition pos:start="11:16" pos:end="11:37"><expr pos:start="11:16" pos:end="11:36"><name pos:start="11:16" pos:end="11:16">i</name> <operator pos:start="11:18" pos:end="11:18">&lt;</operator> <name pos:start="11:20" pos:end="11:36"><name pos:start="11:20" pos:end="11:20">s</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:36">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="11:39" pos:end="11:41"><expr pos:start="11:39" pos:end="11:41"><name pos:start="11:39" pos:end="11:39">i</name><operator pos:start="11:40" pos:end="11:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="13:9" pos:end="13:37"><block_content pos:start="13:9" pos:end="13:37">

        <expr_stmt pos:start="13:9" pos:end="13:37"><expr pos:start="13:9" pos:end="13:36"><call pos:start="13:9" pos:end="13:36"><name pos:start="13:9" pos:end="13:19">ff_mdct_end</name><argument_list pos:start="13:20" pos:end="13:36">(<argument pos:start="13:21" pos:end="13:35"><expr pos:start="13:21" pos:end="13:35"><operator pos:start="13:21" pos:end="13:21">&amp;</operator><name pos:start="13:22" pos:end="13:35"><name pos:start="13:22" pos:end="13:22">s</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:32">mdct_ctx</name><index pos:start="13:33" pos:end="13:35">[<expr pos:start="13:34" pos:end="13:34"><name pos:start="13:34" pos:end="13:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="15:5" pos:end="17:31">for<control pos:start="15:8" pos:end="15:42">(<init pos:start="15:9" pos:end="15:14"><expr pos:start="15:9" pos:end="15:13"><name pos:start="15:9" pos:end="15:9">i</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <literal type="number" pos:start="15:13" pos:end="15:13">0</literal></expr>;</init> <condition pos:start="15:16" pos:end="15:37"><expr pos:start="15:16" pos:end="15:36"><name pos:start="15:16" pos:end="15:16">i</name> <operator pos:start="15:18" pos:end="15:18">&lt;</operator> <name pos:start="15:20" pos:end="15:36"><name pos:start="15:20" pos:end="15:20">s</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:36">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="15:39" pos:end="15:41"><expr pos:start="15:39" pos:end="15:41"><name pos:start="15:39" pos:end="15:39">i</name><operator pos:start="15:40" pos:end="15:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><call pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:15">av_free</name><argument_list pos:start="17:16" pos:end="17:30">(<argument pos:start="17:17" pos:end="17:29"><expr pos:start="17:17" pos:end="17:29"><name pos:start="17:17" pos:end="17:29"><name pos:start="17:17" pos:end="17:17">s</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:26">windows</name><index pos:start="17:27" pos:end="17:29">[<expr pos:start="17:28" pos:end="17:28"><name pos:start="17:28" pos:end="17:28">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:22">use_exp_vlc</name></name></expr>)</condition> <block pos:start="21:25" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:30">

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><call pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:16">free_vlc</name><argument_list pos:start="23:17" pos:end="23:29">(<argument pos:start="23:18" pos:end="23:28"><expr pos:start="23:18" pos:end="23:28"><operator pos:start="23:18" pos:end="23:18">&amp;</operator><name pos:start="23:19" pos:end="23:28"><name pos:start="23:19" pos:end="23:19">s</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:28">exp_vlc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:28">(<expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:27">use_noise_coding</name></name></expr>)</condition> <block pos:start="27:30" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:32">

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><call pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:16">free_vlc</name><argument_list pos:start="29:17" pos:end="29:31">(<argument pos:start="29:18" pos:end="29:30"><expr pos:start="29:18" pos:end="29:30"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:30"><name pos:start="29:19" pos:end="29:19">s</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:30">hgain_vlc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="33:5" pos:end="42:5">for<control pos:start="33:8" pos:end="33:25">(<init pos:start="33:9" pos:end="33:14"><expr pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:9">i</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <literal type="number" pos:start="33:13" pos:end="33:13">0</literal></expr>;</init><condition pos:start="33:15" pos:end="33:20"><expr pos:start="33:15" pos:end="33:19"><name pos:start="33:15" pos:end="33:15">i</name> <operator pos:start="33:17" pos:end="33:17">&lt;</operator> <literal type="number" pos:start="33:19" pos:end="33:19">2</literal></expr>;</condition> <incr pos:start="33:22" pos:end="33:24"><expr pos:start="33:22" pos:end="33:24"><name pos:start="33:22" pos:end="33:22">i</name><operator pos:start="33:23" pos:end="33:24">++</operator></expr></incr>)</control> <block pos:start="33:27" pos:end="42:5">{<block_content pos:start="35:9" pos:end="39:35">

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><call pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:16">free_vlc</name><argument_list pos:start="35:17" pos:end="35:33">(<argument pos:start="35:18" pos:end="35:32"><expr pos:start="35:18" pos:end="35:32"><operator pos:start="35:18" pos:end="35:18">&amp;</operator><name pos:start="35:19" pos:end="35:32"><name pos:start="35:19" pos:end="35:19">s</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:29">coef_vlc</name><index pos:start="35:30" pos:end="35:32">[<expr pos:start="35:31" pos:end="35:31"><name pos:start="35:31" pos:end="35:31">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:33"><expr pos:start="37:9" pos:end="37:32"><call pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:15">av_free</name><argument_list pos:start="37:16" pos:end="37:32">(<argument pos:start="37:17" pos:end="37:31"><expr pos:start="37:17" pos:end="37:31"><name pos:start="37:17" pos:end="37:31"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:28">run_table</name><index pos:start="37:29" pos:end="37:31">[<expr pos:start="37:30" pos:end="37:30"><name pos:start="37:30" pos:end="37:30">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><call pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:15">av_free</name><argument_list pos:start="39:16" pos:end="39:34">(<argument pos:start="39:17" pos:end="39:33"><expr pos:start="39:17" pos:end="39:33"><name pos:start="39:17" pos:end="39:33"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:30">level_table</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></for>



    <return pos:start="46:5" pos:end="46:13">return <expr pos:start="46:12" pos:end="46:12"><literal type="number" pos:start="46:12" pos:end="46:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
