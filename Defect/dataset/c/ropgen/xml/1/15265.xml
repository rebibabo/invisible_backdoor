<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15265.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:46"><name pos:start="1:1" pos:end="1:18">rfc3986_parse_port</name><argument_list pos:start="1:19" pos:end="1:46">(<argument pos:start="1:20" pos:end="1:27">URI *uri</argument>, <argument pos:start="1:30" pos:end="1:45">const char **str</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:14">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">cur</name> <init pos:start="5:21" pos:end="5:26">= <expr pos:start="5:23" pos:end="5:26"><operator pos:start="5:23" pos:end="5:23">*</operator><name pos:start="5:24" pos:end="5:26">str</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="29:5"><if pos:start="9:5" pos:end="29:5">if <condition pos:start="9:8" pos:end="9:23">(<expr pos:start="9:9" pos:end="9:22"><call pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:17">ISA_DIGIT</name><argument_list pos:start="9:18" pos:end="9:22">(<argument pos:start="9:19" pos:end="9:21"><expr pos:start="9:19" pos:end="9:21"><name pos:start="9:19" pos:end="9:21">cur</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:25" pos:end="29:5">{<block_content pos:start="11:9" pos:end="27:18">

	<if_stmt pos:start="11:9" pos:end="13:26"><if pos:start="11:9" pos:end="13:26">if <condition pos:start="11:12" pos:end="11:24">(<expr pos:start="11:13" pos:end="11:23"><name pos:start="11:13" pos:end="11:15">uri</name> <operator pos:start="11:17" pos:end="11:18">!=</operator> <name pos:start="11:20" pos:end="11:23">NULL</name></expr>)</condition><block type="pseudo" pos:start="13:13" pos:end="13:26"><block_content pos:start="13:13" pos:end="13:26">

	    <expr_stmt pos:start="13:13" pos:end="13:26"><expr pos:start="13:13" pos:end="13:25"><name pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:15">uri</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:21">port</name></name> <operator pos:start="13:23" pos:end="13:23">=</operator> <literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<while pos:start="15:9" pos:end="23:9">while <condition pos:start="15:15" pos:end="15:30">(<expr pos:start="15:16" pos:end="15:29"><call pos:start="15:16" pos:end="15:29"><name pos:start="15:16" pos:end="15:24">ISA_DIGIT</name><argument_list pos:start="15:25" pos:end="15:29">(<argument pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><name pos:start="15:26" pos:end="15:28">cur</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:32" pos:end="23:9">{<block_content pos:start="17:13" pos:end="21:18">

	    <if_stmt pos:start="17:13" pos:end="19:58"><if pos:start="17:13" pos:end="19:58">if <condition pos:start="17:16" pos:end="17:28">(<expr pos:start="17:17" pos:end="17:27"><name pos:start="17:17" pos:end="17:19">uri</name> <operator pos:start="17:21" pos:end="17:22">!=</operator> <name pos:start="17:24" pos:end="17:27">NULL</name></expr>)</condition><block type="pseudo" pos:start="19:17" pos:end="19:58"><block_content pos:start="19:17" pos:end="19:58">

		<expr_stmt pos:start="19:17" pos:end="19:58"><expr pos:start="19:17" pos:end="19:57"><name pos:start="19:17" pos:end="19:25"><name pos:start="19:17" pos:end="19:19">uri</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:25">port</name></name> <operator pos:start="19:27" pos:end="19:27">=</operator> <name pos:start="19:29" pos:end="19:37"><name pos:start="19:29" pos:end="19:31">uri</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:37">port</name></name> <operator pos:start="19:39" pos:end="19:39">*</operator> <literal type="number" pos:start="19:41" pos:end="19:44">10</literal> <operator pos:start="19:44" pos:end="19:44">+</operator> <operator pos:start="19:46" pos:end="19:46">(</operator><operator pos:start="19:47" pos:end="19:47">*</operator><name pos:start="19:48" pos:end="19:50">cur</name> <operator pos:start="19:52" pos:end="19:52">-</operator> <literal type="char" pos:start="19:54" pos:end="19:56">'0'</literal><operator pos:start="19:57" pos:end="19:57">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="21:13" pos:end="21:18"><expr pos:start="21:13" pos:end="21:17"><name pos:start="21:13" pos:end="21:15">cur</name><operator pos:start="21:16" pos:end="21:17">++</operator></expr>;</expr_stmt>

	</block_content>}</block></while>

	<expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:12">str</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:18">cur</name></expr>;</expr_stmt>

	<return pos:start="27:9" pos:end="27:18">return<expr pos:start="27:15" pos:end="27:17"><operator pos:start="27:15" pos:end="27:15">(</operator><literal type="number" pos:start="27:16" pos:end="27:16">0</literal><operator pos:start="27:17" pos:end="27:17">)</operator></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="31:5" pos:end="31:14">return<expr pos:start="31:11" pos:end="31:13"><operator pos:start="31:11" pos:end="31:11">(</operator><literal type="number" pos:start="31:12" pos:end="31:12">1</literal><operator pos:start="31:13" pos:end="31:13">)</operator></expr>;</return>

</block_content>}</block>
</unit>
