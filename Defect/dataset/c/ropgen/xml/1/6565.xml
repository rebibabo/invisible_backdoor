<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6565.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">scsi_req_unref</name><parameter_list pos:start="1:20" pos:end="1:37">(<parameter pos:start="1:21" pos:end="1:36"><decl pos:start="1:21" pos:end="1:36"><type pos:start="1:21" pos:end="1:33"><name pos:start="1:21" pos:end="1:31">SCSIRequest</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">req</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:5">

    <expr_stmt pos:start="5:5" pos:end="5:30"><expr pos:start="5:5" pos:end="5:29"><call pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:10">assert</name><argument_list pos:start="5:11" pos:end="5:29">(<argument pos:start="5:12" pos:end="5:28"><expr pos:start="5:12" pos:end="5:28"><name pos:start="5:12" pos:end="5:24"><name pos:start="5:12" pos:end="5:14">req</name><operator pos:start="5:15" pos:end="5:16">-&gt;</operator><name pos:start="5:17" pos:end="5:24">refcount</name></name> <operator pos:start="5:26" pos:end="5:26">&gt;</operator> <literal type="number" pos:start="5:28" pos:end="5:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="7:5" pos:end="33:5"><if pos:start="7:5" pos:end="33:5">if <condition pos:start="7:8" pos:end="7:29">(<expr pos:start="7:9" pos:end="7:28"><operator pos:start="7:9" pos:end="7:10">--</operator><name pos:start="7:11" pos:end="7:23"><name pos:start="7:11" pos:end="7:13">req</name><operator pos:start="7:14" pos:end="7:15">-&gt;</operator><name pos:start="7:16" pos:end="7:23">refcount</name></name> <operator pos:start="7:25" pos:end="7:26">==</operator> <literal type="number" pos:start="7:28" pos:end="7:28">0</literal></expr>)</condition> <block pos:start="7:31" pos:end="33:5">{<block_content pos:start="9:9" pos:end="31:20">

        <decl_stmt pos:start="9:9" pos:end="9:51"><decl pos:start="9:9" pos:end="9:50"><type pos:start="9:9" pos:end="9:18"><name pos:start="9:9" pos:end="9:16">BusState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">qbus</name> <init pos:start="9:24" pos:end="9:50">= <expr pos:start="9:26" pos:end="9:50"><name pos:start="9:26" pos:end="9:50"><name pos:start="9:26" pos:end="9:28">req</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:33">dev</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:39">qdev</name><operator pos:start="9:40" pos:end="9:40">.</operator><name pos:start="9:41" pos:end="9:50">parent_bus</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:54"><decl pos:start="11:9" pos:end="11:53"><type pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:15">SCSIBus</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">bus</name> <init pos:start="11:22" pos:end="11:53">= <expr pos:start="11:24" pos:end="11:53"><call pos:start="11:24" pos:end="11:53"><name pos:start="11:24" pos:end="11:32">DO_UPCAST</name><argument_list pos:start="11:33" pos:end="11:53">(<argument pos:start="11:34" pos:end="11:40"><expr pos:start="11:34" pos:end="11:40"><name pos:start="11:34" pos:end="11:40">SCSIBus</name></expr></argument>, <argument pos:start="11:43" pos:end="11:46"><expr pos:start="11:43" pos:end="11:46"><name pos:start="11:43" pos:end="11:46">qbus</name></expr></argument>, <argument pos:start="11:49" pos:end="11:52"><expr pos:start="11:49" pos:end="11:52"><name pos:start="11:49" pos:end="11:52">qbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:56">(<expr pos:start="15:13" pos:end="15:55"><name pos:start="15:13" pos:end="15:35"><name pos:start="15:13" pos:end="15:15">bus</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:21">info</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:35">free_request</name></name> <operator pos:start="15:37" pos:end="15:38">&amp;&amp;</operator> <name pos:start="15:40" pos:end="15:55"><name pos:start="15:40" pos:end="15:42">req</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:55">hba_private</name></name></expr>)</condition> <block pos:start="15:58" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:59">

            <expr_stmt pos:start="17:13" pos:end="17:59"><expr pos:start="17:13" pos:end="17:58"><call pos:start="17:13" pos:end="17:58"><name pos:start="17:13" pos:end="17:35"><name pos:start="17:13" pos:end="17:15">bus</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:21">info</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:35">free_request</name></name><argument_list pos:start="17:36" pos:end="17:58">(<argument pos:start="17:37" pos:end="17:39"><expr pos:start="17:37" pos:end="17:39"><name pos:start="17:37" pos:end="17:39">bus</name></expr></argument>, <argument pos:start="17:42" pos:end="17:57"><expr pos:start="17:42" pos:end="17:57"><name pos:start="17:42" pos:end="17:57"><name pos:start="17:42" pos:end="17:44">req</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:57">hba_private</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:31">(<expr pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:15">req</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:20">ops</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:30">free_req</name></name></expr>)</condition> <block pos:start="21:33" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:36">

            <expr_stmt pos:start="23:13" pos:end="23:36"><expr pos:start="23:13" pos:end="23:35"><call pos:start="23:13" pos:end="23:35"><name pos:start="23:13" pos:end="23:30"><name pos:start="23:13" pos:end="23:15">req</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:20">ops</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:30">free_req</name></name><argument_list pos:start="23:31" pos:end="23:35">(<argument pos:start="23:32" pos:end="23:34"><expr pos:start="23:32" pos:end="23:34"><name pos:start="23:32" pos:end="23:34">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:39"><expr pos:start="27:9" pos:end="27:38"><call pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:20">object_unref</name><argument_list pos:start="27:21" pos:end="27:38">(<argument pos:start="27:22" pos:end="27:37"><expr pos:start="27:22" pos:end="27:37"><call pos:start="27:22" pos:end="27:37"><name pos:start="27:22" pos:end="27:27">OBJECT</name><argument_list pos:start="27:28" pos:end="27:37">(<argument pos:start="27:29" pos:end="27:36"><expr pos:start="27:29" pos:end="27:36"><name pos:start="27:29" pos:end="27:36"><name pos:start="27:29" pos:end="27:31">req</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:36">dev</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:43"><expr pos:start="29:9" pos:end="29:42"><call pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:20">object_unref</name><argument_list pos:start="29:21" pos:end="29:42">(<argument pos:start="29:22" pos:end="29:41"><expr pos:start="29:22" pos:end="29:41"><call pos:start="29:22" pos:end="29:41"><name pos:start="29:22" pos:end="29:27">OBJECT</name><argument_list pos:start="29:28" pos:end="29:41">(<argument pos:start="29:29" pos:end="29:40"><expr pos:start="29:29" pos:end="29:40"><name pos:start="29:29" pos:end="29:40"><name pos:start="29:29" pos:end="29:32">qbus</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:40">parent</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:20"><expr pos:start="31:9" pos:end="31:19"><call pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:14">g_free</name><argument_list pos:start="31:15" pos:end="31:19">(<argument pos:start="31:16" pos:end="31:18"><expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
