<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22499.c" pos:tabs="8"><function pos:start="1:1" pos:end="378:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">asf_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="378:1">{<block_content pos:start="5:5" pos:end="376:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ASFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">asf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">ASFStream</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:21">asf_st</name> <init pos:start="7:23" pos:end="7:25">= <expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">pb</name> <init pos:start="9:23" pos:end="9:30">= <expr pos:start="9:25" pos:end="9:30"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:start="11:5" pos:end="11:24">//static int pc = 0;</comment>

    <for pos:start="13:5" pos:end="374:5">for <control pos:start="13:9" pos:end="13:12">(<init pos:start="13:10" pos:end="13:10">;</init><condition pos:start="13:11" pos:end="13:11">;</condition><incr/>)</control> <block pos:start="13:14" pos:end="374:5">{<block_content pos:start="15:9" pos:end="372:9">

        <decl_stmt pos:start="15:9" pos:end="15:22"><decl pos:start="15:9" pos:end="15:21"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:17">rsize</name> <init pos:start="15:19" pos:end="15:21">= <expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="17:9" pos:end="52:9"><if pos:start="17:9" pos:end="52:9">if <condition pos:start="17:12" pos:end="19:40">(<expr pos:start="17:13" pos:end="19:39"><name pos:start="17:13" pos:end="17:33"><name pos:start="17:13" pos:end="17:15">asf</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:33">packet_size_left</name></name> <operator pos:start="17:35" pos:end="17:35">&lt;</operator> <name pos:start="17:37" pos:end="17:53">FRAME_HEADER_SIZE</name>

            <operator pos:start="19:13" pos:end="19:14">||</operator> <name pos:start="19:16" pos:end="19:35"><name pos:start="19:16" pos:end="19:18">asf</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:35">packet_segments</name></name> <operator pos:start="19:37" pos:end="19:37">&lt;</operator> <literal type="number" pos:start="19:39" pos:end="19:39">1</literal></expr>)</condition> <block pos:start="19:42" pos:end="52:9">{<block_content pos:start="23:13" pos:end="50:21">

            <comment type="line" pos:start="21:13" pos:end="21:61">//asf-&gt;packet_size_left &lt;= asf-&gt;packet_padsize) {</comment>

            <decl_stmt pos:start="23:13" pos:end="23:66"><decl pos:start="23:13" pos:end="23:65"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:19">ret</name> <init pos:start="23:21" pos:end="23:65">= <expr pos:start="23:23" pos:end="23:65"><name pos:start="23:23" pos:end="23:43"><name pos:start="23:23" pos:end="23:25">asf</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:43">packet_size_left</name></name> <operator pos:start="23:45" pos:end="23:45">+</operator> <name pos:start="23:47" pos:end="23:65"><name pos:start="23:47" pos:end="23:49">asf</name><operator pos:start="23:50" pos:end="23:51">-&gt;</operator><name pos:start="23:52" pos:end="23:65">packet_padsize</name></name></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:start="25:13" pos:end="25:119">//printf("PacketLeftSize:%d  Pad:%d Pos:%Ld\n", asf-&gt;packet_size_left, asf-&gt;packet_padsize, url_ftell(pb));</comment>

            <if_stmt pos:start="27:13" pos:end="29:106"><if pos:start="27:13" pos:end="29:106">if<condition pos:start="27:15" pos:end="27:77">(<expr pos:start="27:16" pos:end="27:76"><operator pos:start="27:16" pos:end="27:16">(</operator><call pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:25">url_ftell</name><argument_list pos:start="27:26" pos:end="27:33">(<argument pos:start="27:27" pos:end="27:32"><expr pos:start="27:27" pos:end="27:32"><operator pos:start="27:27" pos:end="27:27">&amp;</operator><name pos:start="27:28" pos:end="27:32"><name pos:start="27:28" pos:end="27:28">s</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:32">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="27:35" pos:end="27:35">+</operator> <name pos:start="27:37" pos:end="27:39">ret</name> <operator pos:start="27:41" pos:end="27:41">-</operator> <name pos:start="27:43" pos:end="27:56"><name pos:start="27:43" pos:end="27:43">s</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:56">data_offset</name></name><operator pos:start="27:57" pos:end="27:57">)</operator> <operator pos:start="27:59" pos:end="27:59">%</operator> <name pos:start="27:61" pos:end="27:76"><name pos:start="27:61" pos:end="27:63">asf</name><operator pos:start="27:64" pos:end="27:65">-&gt;</operator><name pos:start="27:66" pos:end="27:76">packet_size</name></name></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:106"><block_content pos:start="29:17" pos:end="29:106">

                <expr_stmt pos:start="29:17" pos:end="29:106"><expr pos:start="29:17" pos:end="29:105"><name pos:start="29:17" pos:end="29:19">ret</name> <operator pos:start="29:21" pos:end="29:22">+=</operator> <name pos:start="29:24" pos:end="29:39"><name pos:start="29:24" pos:end="29:26">asf</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:39">packet_size</name></name> <operator pos:start="29:41" pos:end="29:41">-</operator> <operator pos:start="29:43" pos:end="29:43">(</operator><operator pos:start="29:44" pos:end="29:44">(</operator><call pos:start="29:45" pos:end="29:61"><name pos:start="29:45" pos:end="29:53">url_ftell</name><argument_list pos:start="29:54" pos:end="29:61">(<argument pos:start="29:55" pos:end="29:60"><expr pos:start="29:55" pos:end="29:60"><operator pos:start="29:55" pos:end="29:55">&amp;</operator><name pos:start="29:56" pos:end="29:60"><name pos:start="29:56" pos:end="29:56">s</name><operator pos:start="29:57" pos:end="29:58">-&gt;</operator><name pos:start="29:59" pos:end="29:60">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:63" pos:end="29:63">+</operator> <name pos:start="29:65" pos:end="29:67">ret</name> <operator pos:start="29:69" pos:end="29:69">-</operator> <name pos:start="29:71" pos:end="29:84"><name pos:start="29:71" pos:end="29:71">s</name><operator pos:start="29:72" pos:end="29:73">-&gt;</operator><name pos:start="29:74" pos:end="29:84">data_offset</name></name><operator pos:start="29:85" pos:end="29:85">)</operator> <operator pos:start="29:87" pos:end="29:87">%</operator> <name pos:start="29:89" pos:end="29:104"><name pos:start="29:89" pos:end="29:91">asf</name><operator pos:start="29:92" pos:end="29:93">-&gt;</operator><name pos:start="29:94" pos:end="29:104">packet_size</name></name><operator pos:start="29:105" pos:end="29:105">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="31:13" pos:end="31:27">/* fail safe */</comment>

            <expr_stmt pos:start="33:13" pos:end="33:31"><expr pos:start="33:13" pos:end="33:30"><call pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:21">url_fskip</name><argument_list pos:start="33:22" pos:end="33:30">(<argument pos:start="33:23" pos:end="33:24"><expr pos:start="33:23" pos:end="33:24"><name pos:start="33:23" pos:end="33:24">pb</name></expr></argument>, <argument pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:29">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:47"><expr pos:start="35:13" pos:end="35:46"><name pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:15">asf</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:27">packet_pos</name></name><operator pos:start="35:28" pos:end="35:28">=</operator> <call pos:start="35:30" pos:end="35:46"><name pos:start="35:30" pos:end="35:38">url_ftell</name><argument_list pos:start="35:39" pos:end="35:46">(<argument pos:start="35:40" pos:end="35:45"><expr pos:start="35:40" pos:end="35:45"><operator pos:start="35:40" pos:end="35:40">&amp;</operator><name pos:start="35:41" pos:end="35:45"><name pos:start="35:41" pos:end="35:41">s</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:45">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




            <expr_stmt pos:start="40:13" pos:end="40:36"><expr pos:start="40:13" pos:end="40:35"><name pos:start="40:13" pos:end="40:15">ret</name> <operator pos:start="40:17" pos:end="40:17">=</operator> <call pos:start="40:19" pos:end="40:35"><name pos:start="40:19" pos:end="40:32">asf_get_packet</name><argument_list pos:start="40:33" pos:end="40:35">(<argument pos:start="40:34" pos:end="40:34"><expr pos:start="40:34" pos:end="40:34"><name pos:start="40:34" pos:end="40:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="42:13" pos:end="42:94">//printf("READ ASF PACKET  %d   r:%d   c:%d\n", ret, asf-&gt;packet_size_left, pc++);</comment>

            <if_stmt pos:start="44:13" pos:end="46:34"><if pos:start="44:13" pos:end="46:34">if <condition pos:start="44:16" pos:end="44:40">(<expr pos:start="44:17" pos:end="44:39"><name pos:start="44:17" pos:end="44:19">ret</name> <operator pos:start="44:21" pos:end="44:21">&lt;</operator> <literal type="number" pos:start="44:23" pos:end="44:23">0</literal> <operator pos:start="44:25" pos:end="44:26">||</operator> <call pos:start="44:28" pos:end="44:39"><name pos:start="44:28" pos:end="44:35">url_feof</name><argument_list pos:start="44:36" pos:end="44:39">(<argument pos:start="44:37" pos:end="44:38"><expr pos:start="44:37" pos:end="44:38"><name pos:start="44:37" pos:end="44:38">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="46:17" pos:end="46:34"><block_content pos:start="46:17" pos:end="46:34">

                <return pos:start="46:17" pos:end="46:34">return <expr pos:start="46:24" pos:end="46:33"><name pos:start="46:24" pos:end="46:33">AVERROR_IO</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="48:13" pos:end="48:39"><expr pos:start="48:13" pos:end="48:38"><name pos:start="48:13" pos:end="48:34"><name pos:start="48:13" pos:end="48:15">asf</name><operator pos:start="48:16" pos:end="48:17">-&gt;</operator><name pos:start="48:18" pos:end="48:34">packet_time_start</name></name> <operator pos:start="48:36" pos:end="48:36">=</operator> <literal type="number" pos:start="48:38" pos:end="48:38">0</literal></expr>;</expr_stmt>

            <continue pos:start="50:13" pos:end="50:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="54:9" pos:end="178:9"><if pos:start="54:9" pos:end="178:9">if <condition pos:start="54:12" pos:end="54:40">(<expr pos:start="54:13" pos:end="54:39"><name pos:start="54:13" pos:end="54:34"><name pos:start="54:13" pos:end="54:15">asf</name><operator pos:start="54:16" pos:end="54:17">-&gt;</operator><name pos:start="54:18" pos:end="54:34">packet_time_start</name></name> <operator pos:start="54:36" pos:end="54:37">==</operator> <literal type="number" pos:start="54:39" pos:end="54:39">0</literal></expr>)</condition> <block pos:start="54:42" pos:end="178:9">{<block_content pos:start="58:13" pos:end="176:67">

            <comment type="block" pos:start="56:13" pos:end="56:35">/* read frame header */</comment>

            <decl_stmt pos:start="58:13" pos:end="58:35"><decl pos:start="58:13" pos:end="58:34"><type pos:start="58:13" pos:end="58:15"><name pos:start="58:13" pos:end="58:15">int</name></type> <name pos:start="58:17" pos:end="58:19">num</name> <init pos:start="58:21" pos:end="58:34">= <expr pos:start="58:23" pos:end="58:34"><call pos:start="58:23" pos:end="58:34"><name pos:start="58:23" pos:end="58:30">get_byte</name><argument_list pos:start="58:31" pos:end="58:34">(<argument pos:start="58:32" pos:end="58:33"><expr pos:start="58:32" pos:end="58:33"><name pos:start="58:32" pos:end="58:33">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="60:13" pos:end="60:35"><expr pos:start="60:13" pos:end="60:34"><name pos:start="60:13" pos:end="60:32"><name pos:start="60:13" pos:end="60:15">asf</name><operator pos:start="60:16" pos:end="60:17">-&gt;</operator><name pos:start="60:18" pos:end="60:32">packet_segments</name></name><operator pos:start="60:33" pos:end="60:34">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="62:13" pos:end="62:20"><expr pos:start="62:13" pos:end="62:19"><name pos:start="62:13" pos:end="62:17">rsize</name><operator pos:start="62:18" pos:end="62:19">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="64:13" pos:end="64:54"><expr pos:start="64:13" pos:end="64:53"><name pos:start="64:13" pos:end="64:33"><name pos:start="64:13" pos:end="64:15">asf</name><operator pos:start="64:16" pos:end="64:17">-&gt;</operator><name pos:start="64:18" pos:end="64:33">packet_key_frame</name></name> <operator pos:start="64:35" pos:end="64:35">=</operator> <operator pos:start="64:37" pos:end="64:37">(</operator><name pos:start="64:38" pos:end="64:40">num</name> <operator pos:start="64:42" pos:end="64:42">&amp;</operator> <literal type="number" pos:start="64:44" pos:end="64:47">0x80</literal><operator pos:start="64:48" pos:end="64:48">)</operator> <operator pos:start="64:50" pos:end="64:51">&gt;&gt;</operator> <literal type="number" pos:start="64:53" pos:end="64:53">7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="66:13" pos:end="66:60"><expr pos:start="66:13" pos:end="66:59"><name pos:start="66:13" pos:end="66:29"><name pos:start="66:13" pos:end="66:15">asf</name><operator pos:start="66:16" pos:end="66:17">-&gt;</operator><name pos:start="66:18" pos:end="66:29">stream_index</name></name> <operator pos:start="66:31" pos:end="66:31">=</operator> <name pos:start="66:33" pos:end="66:59"><name pos:start="66:33" pos:end="66:35">asf</name><operator pos:start="66:36" pos:end="66:37">-&gt;</operator><name pos:start="66:38" pos:end="66:47">asfid2avid</name><index pos:start="66:48" pos:end="66:59">[<expr pos:start="66:49" pos:end="66:58"><name pos:start="66:49" pos:end="66:51">num</name> <operator pos:start="66:53" pos:end="66:53">&amp;</operator> <literal type="number" pos:start="66:55" pos:end="66:58">0x7f</literal></expr>]</index></name></expr>;</expr_stmt>

            <comment type="line" pos:start="68:13" pos:end="68:42">// sequence should be ignored!</comment>

            <expr_stmt pos:start="70:13" pos:end="70:68"><expr pos:start="70:13" pos:end="70:67"><call pos:start="70:13" pos:end="70:67"><name pos:start="70:13" pos:end="70:20">DO_2BITS</name><argument_list pos:start="70:21" pos:end="70:67">(<argument pos:start="70:22" pos:end="70:46"><expr pos:start="70:22" pos:end="70:46"><name pos:start="70:22" pos:end="70:41"><name pos:start="70:22" pos:end="70:24">asf</name><operator pos:start="70:25" pos:end="70:26">-&gt;</operator><name pos:start="70:27" pos:end="70:41">packet_property</name></name> <operator pos:start="70:43" pos:end="70:44">&gt;&gt;</operator> <literal type="number" pos:start="70:46" pos:end="70:46">4</literal></expr></argument>, <argument pos:start="70:49" pos:end="70:63"><expr pos:start="70:49" pos:end="70:63"><name pos:start="70:49" pos:end="70:63"><name pos:start="70:49" pos:end="70:51">asf</name><operator pos:start="70:52" pos:end="70:53">-&gt;</operator><name pos:start="70:54" pos:end="70:63">packet_seq</name></name></expr></argument>, <argument pos:start="70:66" pos:end="70:66"><expr pos:start="70:66" pos:end="70:66"><literal type="number" pos:start="70:66" pos:end="70:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="72:13" pos:end="72:76"><expr pos:start="72:13" pos:end="72:75"><call pos:start="72:13" pos:end="72:75"><name pos:start="72:13" pos:end="72:20">DO_2BITS</name><argument_list pos:start="72:21" pos:end="72:75">(<argument pos:start="72:22" pos:end="72:46"><expr pos:start="72:22" pos:end="72:46"><name pos:start="72:22" pos:end="72:41"><name pos:start="72:22" pos:end="72:24">asf</name><operator pos:start="72:25" pos:end="72:26">-&gt;</operator><name pos:start="72:27" pos:end="72:41">packet_property</name></name> <operator pos:start="72:43" pos:end="72:44">&gt;&gt;</operator> <literal type="number" pos:start="72:46" pos:end="72:46">2</literal></expr></argument>, <argument pos:start="72:49" pos:end="72:71"><expr pos:start="72:49" pos:end="72:71"><name pos:start="72:49" pos:end="72:71"><name pos:start="72:49" pos:end="72:51">asf</name><operator pos:start="72:52" pos:end="72:53">-&gt;</operator><name pos:start="72:54" pos:end="72:71">packet_frag_offset</name></name></expr></argument>, <argument pos:start="72:74" pos:end="72:74"><expr pos:start="72:74" pos:end="72:74"><literal type="number" pos:start="72:74" pos:end="72:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="74:13" pos:end="74:71"><expr pos:start="74:13" pos:end="74:70"><call pos:start="74:13" pos:end="74:70"><name pos:start="74:13" pos:end="74:20">DO_2BITS</name><argument_list pos:start="74:21" pos:end="74:70">(<argument pos:start="74:22" pos:end="74:41"><expr pos:start="74:22" pos:end="74:41"><name pos:start="74:22" pos:end="74:41"><name pos:start="74:22" pos:end="74:24">asf</name><operator pos:start="74:25" pos:end="74:26">-&gt;</operator><name pos:start="74:27" pos:end="74:41">packet_property</name></name></expr></argument>, <argument pos:start="74:44" pos:end="74:66"><expr pos:start="74:44" pos:end="74:66"><name pos:start="74:44" pos:end="74:66"><name pos:start="74:44" pos:end="74:46">asf</name><operator pos:start="74:47" pos:end="74:48">-&gt;</operator><name pos:start="74:49" pos:end="74:66">packet_replic_size</name></name></expr></argument>, <argument pos:start="74:69" pos:end="74:69"><expr pos:start="74:69" pos:end="74:69"><literal type="number" pos:start="74:69" pos:end="74:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="76:1" pos:end="76:174">//printf("key:%d stream:%d seq:%d offset:%d replic_size:%d\n", asf-&gt;packet_key_frame, asf-&gt;stream_index, asf-&gt;packet_seq, //asf-&gt;packet_frag_offset, asf-&gt;packet_replic_size);</comment>

            <if_stmt pos:start="78:13" pos:end="114:13"><if pos:start="78:13" pos:end="94:13">if <condition pos:start="78:16" pos:end="78:44">(<expr pos:start="78:17" pos:end="78:43"><name pos:start="78:17" pos:end="78:39"><name pos:start="78:17" pos:end="78:19">asf</name><operator pos:start="78:20" pos:end="78:21">-&gt;</operator><name pos:start="78:22" pos:end="78:39">packet_replic_size</name></name> <operator pos:start="78:41" pos:end="78:41">&gt;</operator> <literal type="number" pos:start="78:43" pos:end="78:43">1</literal></expr>)</condition> <block pos:start="78:46" pos:end="94:13">{<block_content pos:start="80:17" pos:end="92:49">

                <expr_stmt pos:start="80:17" pos:end="80:53"><expr pos:start="80:17" pos:end="80:52"><call pos:start="80:17" pos:end="80:52"><name pos:start="80:17" pos:end="80:22">assert</name><argument_list pos:start="80:23" pos:end="80:52">(<argument pos:start="80:24" pos:end="80:51"><expr pos:start="80:24" pos:end="80:51"><name pos:start="80:24" pos:end="80:46"><name pos:start="80:24" pos:end="80:26">asf</name><operator pos:start="80:27" pos:end="80:28">-&gt;</operator><name pos:start="80:29" pos:end="80:46">packet_replic_size</name></name> <operator pos:start="80:48" pos:end="80:49">&gt;=</operator> <literal type="number" pos:start="80:51" pos:end="80:51">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:start="82:17" pos:end="82:72">// it should be always at least 8 bytes - FIXME validate</comment>

                <expr_stmt pos:start="84:17" pos:end="84:52"><expr pos:start="84:17" pos:end="84:51"><name pos:start="84:17" pos:end="84:36"><name pos:start="84:17" pos:end="84:19">asf</name><operator pos:start="84:20" pos:end="84:21">-&gt;</operator><name pos:start="84:22" pos:end="84:36">packet_obj_size</name></name> <operator pos:start="84:38" pos:end="84:38">=</operator> <call pos:start="84:40" pos:end="84:51"><name pos:start="84:40" pos:end="84:47">get_le32</name><argument_list pos:start="84:48" pos:end="84:51">(<argument pos:start="84:49" pos:end="84:50"><expr pos:start="84:49" pos:end="84:50"><name pos:start="84:49" pos:end="84:50">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="86:17" pos:end="86:58"><expr pos:start="86:17" pos:end="86:57"><name pos:start="86:17" pos:end="86:42"><name pos:start="86:17" pos:end="86:19">asf</name><operator pos:start="86:20" pos:end="86:21">-&gt;</operator><name pos:start="86:22" pos:end="86:42">packet_frag_timestamp</name></name> <operator pos:start="86:44" pos:end="86:44">=</operator> <call pos:start="86:46" pos:end="86:57"><name pos:start="86:46" pos:end="86:53">get_le32</name><argument_list pos:start="86:54" pos:end="86:57">(<argument pos:start="86:55" pos:end="86:56"><expr pos:start="86:55" pos:end="86:56"><name pos:start="86:55" pos:end="86:56">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="86:60" pos:end="86:71">// timestamp</comment>

                <if_stmt pos:start="88:17" pos:end="90:63"><if pos:start="88:17" pos:end="90:63">if <condition pos:start="88:20" pos:end="88:48">(<expr pos:start="88:21" pos:end="88:47"><name pos:start="88:21" pos:end="88:43"><name pos:start="88:21" pos:end="88:23">asf</name><operator pos:start="88:24" pos:end="88:25">-&gt;</operator><name pos:start="88:26" pos:end="88:43">packet_replic_size</name></name> <operator pos:start="88:45" pos:end="88:45">&gt;</operator> <literal type="number" pos:start="88:47" pos:end="88:47">8</literal></expr>)</condition><block type="pseudo" pos:start="90:21" pos:end="90:63"><block_content pos:start="90:21" pos:end="90:63">

                    <expr_stmt pos:start="90:21" pos:end="90:63"><expr pos:start="90:21" pos:end="90:62"><call pos:start="90:21" pos:end="90:62"><name pos:start="90:21" pos:end="90:29">url_fskip</name><argument_list pos:start="90:30" pos:end="90:62">(<argument pos:start="90:31" pos:end="90:32"><expr pos:start="90:31" pos:end="90:32"><name pos:start="90:31" pos:end="90:32">pb</name></expr></argument>, <argument pos:start="90:35" pos:end="90:61"><expr pos:start="90:35" pos:end="90:61"><name pos:start="90:35" pos:end="90:57"><name pos:start="90:35" pos:end="90:37">asf</name><operator pos:start="90:38" pos:end="90:39">-&gt;</operator><name pos:start="90:40" pos:end="90:57">packet_replic_size</name></name> <operator pos:start="90:59" pos:end="90:59">-</operator> <literal type="number" pos:start="90:61" pos:end="90:61">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="92:17" pos:end="92:49"><expr pos:start="92:17" pos:end="92:48"><name pos:start="92:17" pos:end="92:21">rsize</name> <operator pos:start="92:23" pos:end="92:24">+=</operator> <name pos:start="92:26" pos:end="92:48"><name pos:start="92:26" pos:end="92:28">asf</name><operator pos:start="92:29" pos:end="92:30">-&gt;</operator><name pos:start="92:31" pos:end="92:48">packet_replic_size</name></name></expr>;</expr_stmt> <comment type="line" pos:start="92:51" pos:end="92:75">// FIXME - check validity</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="94:15" pos:end="110:13">else if <condition pos:start="94:23" pos:end="94:50">(<expr pos:start="94:24" pos:end="94:49"><name pos:start="94:24" pos:end="94:46"><name pos:start="94:24" pos:end="94:26">asf</name><operator pos:start="94:27" pos:end="94:28">-&gt;</operator><name pos:start="94:29" pos:end="94:46">packet_replic_size</name></name><operator pos:start="94:47" pos:end="94:48">==</operator><literal type="number" pos:start="94:49" pos:end="94:49">1</literal></expr>)</condition><block pos:start="94:51" pos:end="110:13">{<block_content pos:start="98:17" pos:end="108:24">

                <comment type="line" pos:start="96:17" pos:end="96:66">// multipacket - frag_offset is begining timestamp</comment>

                <expr_stmt pos:start="98:17" pos:end="98:65"><expr pos:start="98:17" pos:end="98:64"><name pos:start="98:17" pos:end="98:38"><name pos:start="98:17" pos:end="98:19">asf</name><operator pos:start="98:20" pos:end="98:21">-&gt;</operator><name pos:start="98:22" pos:end="98:38">packet_time_start</name></name> <operator pos:start="98:40" pos:end="98:40">=</operator> <name pos:start="98:42" pos:end="98:64"><name pos:start="98:42" pos:end="98:44">asf</name><operator pos:start="98:45" pos:end="98:46">-&gt;</operator><name pos:start="98:47" pos:end="98:64">packet_frag_offset</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="100:17" pos:end="100:44"><expr pos:start="100:17" pos:end="100:43"><name pos:start="100:17" pos:end="100:39"><name pos:start="100:17" pos:end="100:19">asf</name><operator pos:start="100:20" pos:end="100:21">-&gt;</operator><name pos:start="100:22" pos:end="100:39">packet_frag_offset</name></name> <operator pos:start="100:41" pos:end="100:41">=</operator> <literal type="number" pos:start="100:43" pos:end="100:43">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="102:17" pos:end="102:67"><expr pos:start="102:17" pos:end="102:66"><name pos:start="102:17" pos:end="102:42"><name pos:start="102:17" pos:end="102:19">asf</name><operator pos:start="102:20" pos:end="102:21">-&gt;</operator><name pos:start="102:22" pos:end="102:42">packet_frag_timestamp</name></name> <operator pos:start="102:44" pos:end="102:44">=</operator> <name pos:start="102:46" pos:end="102:66"><name pos:start="102:46" pos:end="102:48">asf</name><operator pos:start="102:49" pos:end="102:50">-&gt;</operator><name pos:start="102:51" pos:end="102:66">packet_timestamp</name></name></expr>;</expr_stmt>



                <expr_stmt pos:start="106:17" pos:end="106:54"><expr pos:start="106:17" pos:end="106:53"><name pos:start="106:17" pos:end="106:38"><name pos:start="106:17" pos:end="106:19">asf</name><operator pos:start="106:20" pos:end="106:21">-&gt;</operator><name pos:start="106:22" pos:end="106:38">packet_time_delta</name></name> <operator pos:start="106:40" pos:end="106:40">=</operator> <call pos:start="106:42" pos:end="106:53"><name pos:start="106:42" pos:end="106:49">get_byte</name><argument_list pos:start="106:50" pos:end="106:53">(<argument pos:start="106:51" pos:end="106:52"><expr pos:start="106:51" pos:end="106:52"><name pos:start="106:51" pos:end="106:52">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="108:17" pos:end="108:24"><expr pos:start="108:17" pos:end="108:23"><name pos:start="108:17" pos:end="108:21">rsize</name><operator pos:start="108:22" pos:end="108:23">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="110:14" pos:end="114:13">else<block pos:start="110:18" pos:end="114:13">{<block_content pos:start="112:17" pos:end="112:51">

                <expr_stmt pos:start="112:17" pos:end="112:51"><expr pos:start="112:17" pos:end="112:50"><call pos:start="112:17" pos:end="112:50"><name pos:start="112:17" pos:end="112:22">assert</name><argument_list pos:start="112:23" pos:end="112:50">(<argument pos:start="112:24" pos:end="112:49"><expr pos:start="112:24" pos:end="112:49"><name pos:start="112:24" pos:end="112:46"><name pos:start="112:24" pos:end="112:26">asf</name><operator pos:start="112:27" pos:end="112:28">-&gt;</operator><name pos:start="112:29" pos:end="112:46">packet_replic_size</name></name><operator pos:start="112:47" pos:end="112:48">==</operator><literal type="number" pos:start="112:49" pos:end="112:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="116:13" pos:end="130:13"><if pos:start="116:13" pos:end="124:13">if <condition pos:start="116:16" pos:end="116:41">(<expr pos:start="116:17" pos:end="116:40"><name pos:start="116:17" pos:end="116:33"><name pos:start="116:17" pos:end="116:19">asf</name><operator pos:start="116:20" pos:end="116:21">-&gt;</operator><name pos:start="116:22" pos:end="116:33">packet_flags</name></name> <operator pos:start="116:35" pos:end="116:35">&amp;</operator> <literal type="number" pos:start="116:37" pos:end="116:40">0x01</literal></expr>)</condition> <block pos:start="116:43" pos:end="124:13">{<block_content pos:start="118:17" pos:end="121:0">

                <expr_stmt pos:start="118:17" pos:end="121:0"><expr pos:start="118:17" pos:end="118:80"><call pos:start="118:17" pos:end="118:80"><name pos:start="118:17" pos:end="118:24">DO_2BITS</name><argument_list pos:start="118:25" pos:end="118:80">(<argument pos:start="118:26" pos:end="118:53"><expr pos:start="118:26" pos:end="118:53"><name pos:start="118:26" pos:end="118:48"><name pos:start="118:26" pos:end="118:28">asf</name><operator pos:start="118:29" pos:end="118:30">-&gt;</operator><name pos:start="118:31" pos:end="118:48">packet_segsizetype</name></name> <operator pos:start="118:50" pos:end="118:51">&gt;&gt;</operator> <literal type="number" pos:start="118:53" pos:end="118:53">6</literal></expr></argument>, <argument pos:start="118:56" pos:end="118:76"><expr pos:start="118:56" pos:end="118:76"><name pos:start="118:56" pos:end="118:76"><name pos:start="118:56" pos:end="118:58">asf</name><operator pos:start="118:59" pos:end="118:60">-&gt;</operator><name pos:start="118:61" pos:end="118:76">packet_frag_size</name></name></expr></argument>, <argument pos:start="118:79" pos:end="118:79"><expr pos:start="118:79" pos:end="118:79"><literal type="number" pos:start="118:79" pos:end="118:79">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="118:83" pos:end="118:97">// 0 is illegal</comment>

<cpp:undef pos:start="120:1" pos:end="120:15">#<cpp:directive pos:start="120:2" pos:end="120:6">undef</cpp:directive> <name pos:start="120:8" pos:end="120:15">DO_2BITS</name></cpp:undef>

                <comment type="line" pos:start="122:17" pos:end="122:65">//printf("Fragsize %d\n", asf-&gt;packet_frag_size);</comment>

            </block_content>}</block></if> <else pos:start="124:15" pos:end="130:13">else <block pos:start="124:20" pos:end="130:13">{<block_content pos:start="126:17" pos:end="126:70">

                <expr_stmt pos:start="126:17" pos:end="126:70"><expr pos:start="126:17" pos:end="126:69"><name pos:start="126:17" pos:end="126:37"><name pos:start="126:17" pos:end="126:19">asf</name><operator pos:start="126:20" pos:end="126:21">-&gt;</operator><name pos:start="126:22" pos:end="126:37">packet_frag_size</name></name> <operator pos:start="126:39" pos:end="126:39">=</operator> <name pos:start="126:41" pos:end="126:61"><name pos:start="126:41" pos:end="126:43">asf</name><operator pos:start="126:44" pos:end="126:45">-&gt;</operator><name pos:start="126:46" pos:end="126:61">packet_size_left</name></name> <operator pos:start="126:63" pos:end="126:63">-</operator> <name pos:start="126:65" pos:end="126:69">rsize</name></expr>;</expr_stmt>

                <comment type="line" pos:start="128:17" pos:end="128:104">//printf("Using rest  %d %d %d\n", asf-&gt;packet_frag_size, asf-&gt;packet_size_left, rsize);</comment>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="132:13" pos:end="144:13"><if pos:start="132:13" pos:end="144:13">if <condition pos:start="132:16" pos:end="132:45">(<expr pos:start="132:17" pos:end="132:44"><name pos:start="132:17" pos:end="132:39"><name pos:start="132:17" pos:end="132:19">asf</name><operator pos:start="132:20" pos:end="132:21">-&gt;</operator><name pos:start="132:22" pos:end="132:39">packet_replic_size</name></name> <operator pos:start="132:41" pos:end="132:42">==</operator> <literal type="number" pos:start="132:44" pos:end="132:44">1</literal></expr>)</condition> <block pos:start="132:47" pos:end="144:13">{<block_content pos:start="134:17" pos:end="142:17">

                <expr_stmt pos:start="134:17" pos:end="134:63"><expr pos:start="134:17" pos:end="134:62"><name pos:start="134:17" pos:end="134:38"><name pos:start="134:17" pos:end="134:19">asf</name><operator pos:start="134:20" pos:end="134:21">-&gt;</operator><name pos:start="134:22" pos:end="134:38">packet_multi_size</name></name> <operator pos:start="134:40" pos:end="134:40">=</operator> <name pos:start="134:42" pos:end="134:62"><name pos:start="134:42" pos:end="134:44">asf</name><operator pos:start="134:45" pos:end="134:46">-&gt;</operator><name pos:start="134:47" pos:end="134:62">packet_frag_size</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="136:17" pos:end="142:17"><if pos:start="136:17" pos:end="142:17">if <condition pos:start="136:20" pos:end="136:67">(<expr pos:start="136:21" pos:end="136:66"><name pos:start="136:21" pos:end="136:42"><name pos:start="136:21" pos:end="136:23">asf</name><operator pos:start="136:24" pos:end="136:25">-&gt;</operator><name pos:start="136:26" pos:end="136:42">packet_multi_size</name></name> <operator pos:start="136:44" pos:end="136:44">&gt;</operator> <name pos:start="136:46" pos:end="136:66"><name pos:start="136:46" pos:end="136:48">asf</name><operator pos:start="136:49" pos:end="136:50">-&gt;</operator><name pos:start="136:51" pos:end="136:66">packet_size_left</name></name></expr>)</condition> <block pos:start="136:69" pos:end="142:17">{<block_content pos:start="138:21" pos:end="140:29">

                    <expr_stmt pos:start="138:21" pos:end="138:45"><expr pos:start="138:21" pos:end="138:44"><name pos:start="138:21" pos:end="138:40"><name pos:start="138:21" pos:end="138:23">asf</name><operator pos:start="138:24" pos:end="138:25">-&gt;</operator><name pos:start="138:26" pos:end="138:40">packet_segments</name></name> <operator pos:start="138:42" pos:end="138:42">=</operator> <literal type="number" pos:start="138:44" pos:end="138:44">0</literal></expr>;</expr_stmt>

                    <continue pos:start="140:21" pos:end="140:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="146:13" pos:end="146:43"><expr pos:start="146:13" pos:end="146:42"><name pos:start="146:13" pos:end="146:33"><name pos:start="146:13" pos:end="146:15">asf</name><operator pos:start="146:16" pos:end="146:17">-&gt;</operator><name pos:start="146:18" pos:end="146:33">packet_size_left</name></name> <operator pos:start="146:35" pos:end="146:36">-=</operator> <name pos:start="146:38" pos:end="146:42">rsize</name></expr>;</expr_stmt>

            <comment type="line" pos:start="148:13" pos:end="148:113">//printf("___objsize____  %d   %d    rs:%d\n", asf-&gt;packet_obj_size, asf-&gt;packet_frag_offset, rsize);</comment>



            <if_stmt pos:start="152:13" pos:end="174:13"><if pos:start="152:13" pos:end="174:13">if <condition pos:start="152:16" pos:end="158:17">(<expr pos:start="152:17" pos:end="156:105"><name pos:start="152:17" pos:end="152:33"><name pos:start="152:17" pos:end="152:19">asf</name><operator pos:start="152:20" pos:end="152:21">-&gt;</operator><name pos:start="152:22" pos:end="152:33">stream_index</name></name> <operator pos:start="152:35" pos:end="152:35">&lt;</operator> <literal type="number" pos:start="152:37" pos:end="152:37">0</literal>

                <operator pos:start="154:17" pos:end="154:18">||</operator> <name pos:start="154:20" pos:end="154:48"><name pos:start="154:20" pos:end="154:20">s</name><operator pos:start="154:21" pos:end="154:22">-&gt;</operator><name pos:start="154:23" pos:end="154:29">streams</name><index pos:start="154:30" pos:end="154:48">[<expr pos:start="154:31" pos:end="154:47"><name pos:start="154:31" pos:end="154:47"><name pos:start="154:31" pos:end="154:33">asf</name><operator pos:start="154:34" pos:end="154:35">-&gt;</operator><name pos:start="154:36" pos:end="154:47">stream_index</name></name></expr>]</index></name><operator pos:start="154:49" pos:end="154:50">-&gt;</operator><name pos:start="154:51" pos:end="154:57">discard</name> <operator pos:start="154:59" pos:end="154:60">&gt;=</operator> <name pos:start="154:62" pos:end="154:74">AVDISCARD_ALL</name>

                <operator pos:start="156:17" pos:end="156:18">||</operator> <operator pos:start="156:20" pos:end="156:20">(</operator><operator pos:start="156:21" pos:end="156:21">!</operator><name pos:start="156:22" pos:end="156:42"><name pos:start="156:22" pos:end="156:24">asf</name><operator pos:start="156:25" pos:end="156:26">-&gt;</operator><name pos:start="156:27" pos:end="156:42">packet_key_frame</name></name> <operator pos:start="156:44" pos:end="156:45">&amp;&amp;</operator> <name pos:start="156:47" pos:end="156:75"><name pos:start="156:47" pos:end="156:47">s</name><operator pos:start="156:48" pos:end="156:49">-&gt;</operator><name pos:start="156:50" pos:end="156:56">streams</name><index pos:start="156:57" pos:end="156:75">[<expr pos:start="156:58" pos:end="156:74"><name pos:start="156:58" pos:end="156:74"><name pos:start="156:58" pos:end="156:60">asf</name><operator pos:start="156:61" pos:end="156:62">-&gt;</operator><name pos:start="156:63" pos:end="156:74">stream_index</name></name></expr>]</index></name><operator pos:start="156:76" pos:end="156:77">-&gt;</operator><name pos:start="156:78" pos:end="156:84">discard</name> <operator pos:start="156:86" pos:end="156:87">&gt;=</operator> <name pos:start="156:89" pos:end="156:104">AVDISCARD_NONKEY</name><operator pos:start="156:105" pos:end="156:105">)</operator></expr>

                )</condition> <block pos:start="158:19" pos:end="174:13">{<block_content pos:start="160:17" pos:end="172:25">

                <expr_stmt pos:start="160:17" pos:end="160:43"><expr pos:start="160:17" pos:end="160:42"><name pos:start="160:17" pos:end="160:38"><name pos:start="160:17" pos:end="160:19">asf</name><operator pos:start="160:20" pos:end="160:21">-&gt;</operator><name pos:start="160:22" pos:end="160:38">packet_time_start</name></name> <operator pos:start="160:40" pos:end="160:40">=</operator> <literal type="number" pos:start="160:42" pos:end="160:42">0</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="162:17" pos:end="162:58">/* unhandled packet (should not happen) */</comment>

                <expr_stmt pos:start="164:17" pos:end="164:53"><expr pos:start="164:17" pos:end="164:52"><call pos:start="164:17" pos:end="164:52"><name pos:start="164:17" pos:end="164:25">url_fskip</name><argument_list pos:start="164:26" pos:end="164:52">(<argument pos:start="164:27" pos:end="164:28"><expr pos:start="164:27" pos:end="164:28"><name pos:start="164:27" pos:end="164:28">pb</name></expr></argument>, <argument pos:start="164:31" pos:end="164:51"><expr pos:start="164:31" pos:end="164:51"><name pos:start="164:31" pos:end="164:51"><name pos:start="164:31" pos:end="164:33">asf</name><operator pos:start="164:34" pos:end="164:35">-&gt;</operator><name pos:start="164:36" pos:end="164:51">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="166:17" pos:end="166:63"><expr pos:start="166:17" pos:end="166:62"><name pos:start="166:17" pos:end="166:37"><name pos:start="166:17" pos:end="166:19">asf</name><operator pos:start="166:20" pos:end="166:21">-&gt;</operator><name pos:start="166:22" pos:end="166:37">packet_size_left</name></name> <operator pos:start="166:39" pos:end="166:40">-=</operator> <name pos:start="166:42" pos:end="166:62"><name pos:start="166:42" pos:end="166:44">asf</name><operator pos:start="166:45" pos:end="166:46">-&gt;</operator><name pos:start="166:47" pos:end="166:62">packet_frag_size</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="168:17" pos:end="170:103"><if pos:start="168:17" pos:end="170:103">if<condition pos:start="168:19" pos:end="168:41">(<expr pos:start="168:20" pos:end="168:40"><name pos:start="168:20" pos:end="168:36"><name pos:start="168:20" pos:end="168:22">asf</name><operator pos:start="168:23" pos:end="168:24">-&gt;</operator><name pos:start="168:25" pos:end="168:36">stream_index</name></name> <operator pos:start="168:38" pos:end="168:38">&lt;</operator> <literal type="number" pos:start="168:40" pos:end="168:40">0</literal></expr>)</condition><block type="pseudo" pos:start="170:21" pos:end="170:103"><block_content pos:start="170:21" pos:end="170:103">

                    <expr_stmt pos:start="170:21" pos:end="170:103"><expr pos:start="170:21" pos:end="170:102"><call pos:start="170:21" pos:end="170:102"><name pos:start="170:21" pos:end="170:26">av_log</name><argument_list pos:start="170:27" pos:end="170:102">(<argument pos:start="170:28" pos:end="170:28"><expr pos:start="170:28" pos:end="170:28"><name pos:start="170:28" pos:end="170:28">s</name></expr></argument>, <argument pos:start="170:31" pos:end="170:42"><expr pos:start="170:31" pos:end="170:42"><name pos:start="170:31" pos:end="170:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="170:45" pos:end="170:66"><expr pos:start="170:45" pos:end="170:66"><literal type="string" pos:start="170:45" pos:end="170:66">"ff asf skip %d  %d\n"</literal></expr></argument>, <argument pos:start="170:69" pos:end="170:89"><expr pos:start="170:69" pos:end="170:89"><name pos:start="170:69" pos:end="170:89"><name pos:start="170:69" pos:end="170:71">asf</name><operator pos:start="170:72" pos:end="170:73">-&gt;</operator><name pos:start="170:74" pos:end="170:89">packet_frag_size</name></name></expr></argument>, <argument pos:start="170:92" pos:end="170:101"><expr pos:start="170:92" pos:end="170:101"><name pos:start="170:92" pos:end="170:94">num</name> <operator pos:start="170:96" pos:end="170:96">&amp;</operator> <literal type="number" pos:start="170:98" pos:end="170:101">0x7f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <continue pos:start="172:17" pos:end="172:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="176:13" pos:end="176:67"><expr pos:start="176:13" pos:end="176:66"><name pos:start="176:13" pos:end="176:23"><name pos:start="176:13" pos:end="176:15">asf</name><operator pos:start="176:16" pos:end="176:17">-&gt;</operator><name pos:start="176:18" pos:end="176:23">asf_st</name></name> <operator pos:start="176:25" pos:end="176:25">=</operator> <name pos:start="176:27" pos:end="176:55"><name pos:start="176:27" pos:end="176:27">s</name><operator pos:start="176:28" pos:end="176:29">-&gt;</operator><name pos:start="176:30" pos:end="176:36">streams</name><index pos:start="176:37" pos:end="176:55">[<expr pos:start="176:38" pos:end="176:54"><name pos:start="176:38" pos:end="176:54"><name pos:start="176:38" pos:end="176:40">asf</name><operator pos:start="176:41" pos:end="176:42">-&gt;</operator><name pos:start="176:43" pos:end="176:54">stream_index</name></name></expr>]</index></name><operator pos:start="176:56" pos:end="176:57">-&gt;</operator><name pos:start="176:58" pos:end="176:66">priv_data</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="180:9" pos:end="180:29"><expr pos:start="180:9" pos:end="180:28"><name pos:start="180:9" pos:end="180:14">asf_st</name> <operator pos:start="180:16" pos:end="180:16">=</operator> <name pos:start="180:18" pos:end="180:28"><name pos:start="180:18" pos:end="180:20">asf</name><operator pos:start="180:21" pos:end="180:22">-&gt;</operator><name pos:start="180:23" pos:end="180:28">asf_st</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="184:9" pos:end="224:9"><if pos:start="184:9" pos:end="224:9">if <condition pos:start="184:12" pos:end="190:12">(<expr pos:start="184:13" pos:end="188:52"><operator pos:start="184:13" pos:end="184:13">(</operator><name pos:start="184:14" pos:end="184:36"><name pos:start="184:14" pos:end="184:16">asf</name><operator pos:start="184:17" pos:end="184:18">-&gt;</operator><name pos:start="184:19" pos:end="184:36">packet_frag_offset</name></name> <operator pos:start="184:38" pos:end="184:39">!=</operator> <name pos:start="184:41" pos:end="184:59"><name pos:start="184:41" pos:end="184:46">asf_st</name><operator pos:start="184:47" pos:end="184:48">-&gt;</operator><name pos:start="184:49" pos:end="184:59">frag_offset</name></name>

             <operator pos:start="186:14" pos:end="186:15">||</operator> <operator pos:start="186:17" pos:end="186:17">(</operator><name pos:start="186:18" pos:end="186:40"><name pos:start="186:18" pos:end="186:20">asf</name><operator pos:start="186:21" pos:end="186:22">-&gt;</operator><name pos:start="186:23" pos:end="186:40">packet_frag_offset</name></name>

                 <operator pos:start="188:18" pos:end="188:19">&amp;&amp;</operator> <name pos:start="188:21" pos:end="188:35"><name pos:start="188:21" pos:end="188:23">asf</name><operator pos:start="188:24" pos:end="188:25">-&gt;</operator><name pos:start="188:26" pos:end="188:35">packet_seq</name></name> <operator pos:start="188:37" pos:end="188:38">!=</operator> <name pos:start="188:40" pos:end="188:50"><name pos:start="188:40" pos:end="188:45">asf_st</name><operator pos:start="188:46" pos:end="188:47">-&gt;</operator><name pos:start="188:48" pos:end="188:50">seq</name></name><operator pos:start="188:51" pos:end="188:51">)</operator><operator pos:start="188:52" pos:end="188:52">)</operator></expr> <comment type="line" pos:start="188:54" pos:end="188:77">// seq should be ignored</comment>

           )</condition> <block pos:start="190:14" pos:end="224:9">{<block_content pos:start="196:13" pos:end="222:13">

            <comment type="block" pos:start="192:13" pos:end="192:57">/* cannot continue current packet: free it */</comment>

            <comment type="line" pos:start="194:13" pos:end="194:65">// FIXME better check if packet was already allocated</comment>

            <expr_stmt pos:start="196:13" pos:end="204:72"><expr pos:start="196:13" pos:end="204:71"><call pos:start="196:13" pos:end="204:71"><name pos:start="196:13" pos:end="196:18">av_log</name><argument_list pos:start="196:19" pos:end="204:71">(<argument pos:start="196:20" pos:end="196:20"><expr pos:start="196:20" pos:end="196:20"><name pos:start="196:20" pos:end="196:20">s</name></expr></argument>, <argument pos:start="196:23" pos:end="196:33"><expr pos:start="196:23" pos:end="196:33"><name pos:start="196:23" pos:end="196:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="196:36" pos:end="196:98"><expr pos:start="196:36" pos:end="196:98"><literal type="string" pos:start="196:36" pos:end="196:98">"ff asf parser skips: %d - %d     o:%d - %d    %d %d   fl:%d\n"</literal></expr></argument>,

                   <argument pos:start="198:20" pos:end="198:35"><expr pos:start="198:20" pos:end="198:35"><name pos:start="198:20" pos:end="198:35"><name pos:start="198:20" pos:end="198:25">asf_st</name><operator pos:start="198:26" pos:end="198:27">-&gt;</operator><name pos:start="198:28" pos:end="198:30">pkt</name><operator pos:start="198:31" pos:end="198:31">.</operator><name pos:start="198:32" pos:end="198:35">size</name></name></expr></argument>,

                   <argument pos:start="200:20" pos:end="200:39"><expr pos:start="200:20" pos:end="200:39"><name pos:start="200:20" pos:end="200:39"><name pos:start="200:20" pos:end="200:22">asf</name><operator pos:start="200:23" pos:end="200:24">-&gt;</operator><name pos:start="200:25" pos:end="200:39">packet_obj_size</name></name></expr></argument>,

                   <argument pos:start="202:20" pos:end="202:42"><expr pos:start="202:20" pos:end="202:42"><name pos:start="202:20" pos:end="202:42"><name pos:start="202:20" pos:end="202:22">asf</name><operator pos:start="202:23" pos:end="202:24">-&gt;</operator><name pos:start="202:25" pos:end="202:42">packet_frag_offset</name></name></expr></argument>, <argument pos:start="202:45" pos:end="202:63"><expr pos:start="202:45" pos:end="202:63"><name pos:start="202:45" pos:end="202:63"><name pos:start="202:45" pos:end="202:50">asf_st</name><operator pos:start="202:51" pos:end="202:52">-&gt;</operator><name pos:start="202:53" pos:end="202:63">frag_offset</name></name></expr></argument>,

                   <argument pos:start="204:20" pos:end="204:34"><expr pos:start="204:20" pos:end="204:34"><name pos:start="204:20" pos:end="204:34"><name pos:start="204:20" pos:end="204:22">asf</name><operator pos:start="204:23" pos:end="204:24">-&gt;</operator><name pos:start="204:25" pos:end="204:34">packet_seq</name></name></expr></argument>, <argument pos:start="204:37" pos:end="204:47"><expr pos:start="204:37" pos:end="204:47"><name pos:start="204:37" pos:end="204:47"><name pos:start="204:37" pos:end="204:42">asf_st</name><operator pos:start="204:43" pos:end="204:44">-&gt;</operator><name pos:start="204:45" pos:end="204:47">seq</name></name></expr></argument>, <argument pos:start="204:50" pos:end="204:70"><expr pos:start="204:50" pos:end="204:70"><name pos:start="204:50" pos:end="204:70"><name pos:start="204:50" pos:end="204:52">asf</name><operator pos:start="204:53" pos:end="204:54">-&gt;</operator><name pos:start="204:55" pos:end="204:70">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="206:13" pos:end="208:45"><if pos:start="206:13" pos:end="208:45">if <condition pos:start="206:16" pos:end="206:33">(<expr pos:start="206:17" pos:end="206:32"><name pos:start="206:17" pos:end="206:32"><name pos:start="206:17" pos:end="206:22">asf_st</name><operator pos:start="206:23" pos:end="206:24">-&gt;</operator><name pos:start="206:25" pos:end="206:27">pkt</name><operator pos:start="206:28" pos:end="206:28">.</operator><name pos:start="206:29" pos:end="206:32">size</name></name></expr>)</condition><block type="pseudo" pos:start="208:17" pos:end="208:45"><block_content pos:start="208:17" pos:end="208:45">

                <expr_stmt pos:start="208:17" pos:end="208:45"><expr pos:start="208:17" pos:end="208:44"><call pos:start="208:17" pos:end="208:44"><name pos:start="208:17" pos:end="208:30">av_free_packet</name><argument_list pos:start="208:31" pos:end="208:44">(<argument pos:start="208:32" pos:end="208:43"><expr pos:start="208:32" pos:end="208:43"><operator pos:start="208:32" pos:end="208:32">&amp;</operator><name pos:start="208:33" pos:end="208:43"><name pos:start="208:33" pos:end="208:38">asf_st</name><operator pos:start="208:39" pos:end="208:40">-&gt;</operator><name pos:start="208:41" pos:end="208:43">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="210:13" pos:end="210:36"><expr pos:start="210:13" pos:end="210:35"><name pos:start="210:13" pos:end="210:31"><name pos:start="210:13" pos:end="210:18">asf_st</name><operator pos:start="210:19" pos:end="210:20">-&gt;</operator><name pos:start="210:21" pos:end="210:31">frag_offset</name></name> <operator pos:start="210:33" pos:end="210:33">=</operator> <literal type="number" pos:start="210:35" pos:end="210:35">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="212:13" pos:end="222:13"><if pos:start="212:13" pos:end="222:13">if <condition pos:start="212:16" pos:end="212:45">(<expr pos:start="212:17" pos:end="212:44"><name pos:start="212:17" pos:end="212:39"><name pos:start="212:17" pos:end="212:19">asf</name><operator pos:start="212:20" pos:end="212:21">-&gt;</operator><name pos:start="212:22" pos:end="212:39">packet_frag_offset</name></name> <operator pos:start="212:41" pos:end="212:42">!=</operator> <literal type="number" pos:start="212:44" pos:end="212:44">0</literal></expr>)</condition> <block pos:start="212:47" pos:end="222:13">{<block_content pos:start="214:17" pos:end="220:25">

                <expr_stmt pos:start="214:17" pos:end="214:53"><expr pos:start="214:17" pos:end="214:52"><call pos:start="214:17" pos:end="214:52"><name pos:start="214:17" pos:end="214:25">url_fskip</name><argument_list pos:start="214:26" pos:end="214:52">(<argument pos:start="214:27" pos:end="214:28"><expr pos:start="214:27" pos:end="214:28"><name pos:start="214:27" pos:end="214:28">pb</name></expr></argument>, <argument pos:start="214:31" pos:end="214:51"><expr pos:start="214:31" pos:end="214:51"><name pos:start="214:31" pos:end="214:51"><name pos:start="214:31" pos:end="214:33">asf</name><operator pos:start="214:34" pos:end="214:35">-&gt;</operator><name pos:start="214:36" pos:end="214:51">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="216:17" pos:end="216:94"><expr pos:start="216:17" pos:end="216:93"><call pos:start="216:17" pos:end="216:93"><name pos:start="216:17" pos:end="216:22">av_log</name><argument_list pos:start="216:23" pos:end="216:93">(<argument pos:start="216:24" pos:end="216:24"><expr pos:start="216:24" pos:end="216:24"><name pos:start="216:24" pos:end="216:24">s</name></expr></argument>, <argument pos:start="216:27" pos:end="216:37"><expr pos:start="216:27" pos:end="216:37"><name pos:start="216:27" pos:end="216:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="216:40" pos:end="216:69"><expr pos:start="216:40" pos:end="216:69"><literal type="string" pos:start="216:40" pos:end="216:69">"ff asf parser skipping %db\n"</literal></expr></argument>, <argument pos:start="216:72" pos:end="216:92"><expr pos:start="216:72" pos:end="216:92"><name pos:start="216:72" pos:end="216:92"><name pos:start="216:72" pos:end="216:74">asf</name><operator pos:start="216:75" pos:end="216:76">-&gt;</operator><name pos:start="216:77" pos:end="216:92">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="218:17" pos:end="218:63"><expr pos:start="218:17" pos:end="218:62"><name pos:start="218:17" pos:end="218:37"><name pos:start="218:17" pos:end="218:19">asf</name><operator pos:start="218:20" pos:end="218:21">-&gt;</operator><name pos:start="218:22" pos:end="218:37">packet_size_left</name></name> <operator pos:start="218:39" pos:end="218:40">-=</operator> <name pos:start="218:42" pos:end="218:62"><name pos:start="218:42" pos:end="218:44">asf</name><operator pos:start="218:45" pos:end="218:46">-&gt;</operator><name pos:start="218:47" pos:end="218:62">packet_frag_size</name></name></expr>;</expr_stmt>

                <continue pos:start="220:17" pos:end="220:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="226:9" pos:end="258:9"><if pos:start="226:9" pos:end="258:9">if <condition pos:start="226:12" pos:end="226:41">(<expr pos:start="226:13" pos:end="226:40"><name pos:start="226:13" pos:end="226:35"><name pos:start="226:13" pos:end="226:15">asf</name><operator pos:start="226:16" pos:end="226:17">-&gt;</operator><name pos:start="226:18" pos:end="226:35">packet_replic_size</name></name> <operator pos:start="226:37" pos:end="226:38">==</operator> <literal type="number" pos:start="226:40" pos:end="226:40">1</literal></expr>)</condition> <block pos:start="226:43" pos:end="258:9">{<block_content pos:start="230:13" pos:end="254:59">

            <comment type="line" pos:start="228:13" pos:end="228:65">// frag_offset is here used as the begining timestamp</comment>

            <expr_stmt pos:start="230:13" pos:end="230:64"><expr pos:start="230:13" pos:end="230:63"><name pos:start="230:13" pos:end="230:38"><name pos:start="230:13" pos:end="230:15">asf</name><operator pos:start="230:16" pos:end="230:17">-&gt;</operator><name pos:start="230:18" pos:end="230:38">packet_frag_timestamp</name></name> <operator pos:start="230:40" pos:end="230:40">=</operator> <name pos:start="230:42" pos:end="230:63"><name pos:start="230:42" pos:end="230:44">asf</name><operator pos:start="230:45" pos:end="230:46">-&gt;</operator><name pos:start="230:47" pos:end="230:63">packet_time_start</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="232:13" pos:end="232:61"><expr pos:start="232:13" pos:end="232:60"><name pos:start="232:13" pos:end="232:34"><name pos:start="232:13" pos:end="232:15">asf</name><operator pos:start="232:16" pos:end="232:17">-&gt;</operator><name pos:start="232:18" pos:end="232:34">packet_time_start</name></name> <operator pos:start="232:36" pos:end="232:37">+=</operator> <name pos:start="232:39" pos:end="232:60"><name pos:start="232:39" pos:end="232:41">asf</name><operator pos:start="232:42" pos:end="232:43">-&gt;</operator><name pos:start="232:44" pos:end="232:60">packet_time_delta</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="234:13" pos:end="234:72"><expr pos:start="234:13" pos:end="234:71"><name pos:start="234:13" pos:end="234:32"><name pos:start="234:13" pos:end="234:15">asf</name><operator pos:start="234:16" pos:end="234:17">-&gt;</operator><name pos:start="234:18" pos:end="234:32">packet_obj_size</name></name> <operator pos:start="234:34" pos:end="234:34">=</operator> <name pos:start="234:36" pos:end="234:56"><name pos:start="234:36" pos:end="234:38">asf</name><operator pos:start="234:39" pos:end="234:40">-&gt;</operator><name pos:start="234:41" pos:end="234:56">packet_frag_size</name></name> <operator pos:start="234:58" pos:end="234:58">=</operator> <call pos:start="234:60" pos:end="234:71"><name pos:start="234:60" pos:end="234:67">get_byte</name><argument_list pos:start="234:68" pos:end="234:71">(<argument pos:start="234:69" pos:end="234:70"><expr pos:start="234:69" pos:end="234:70"><name pos:start="234:69" pos:end="234:70">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="236:13" pos:end="236:36"><expr pos:start="236:13" pos:end="236:35"><name pos:start="236:13" pos:end="236:33"><name pos:start="236:13" pos:end="236:15">asf</name><operator pos:start="236:16" pos:end="236:17">-&gt;</operator><name pos:start="236:18" pos:end="236:33">packet_size_left</name></name><operator pos:start="236:34" pos:end="236:35">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="238:13" pos:end="238:37"><expr pos:start="238:13" pos:end="238:36"><name pos:start="238:13" pos:end="238:34"><name pos:start="238:13" pos:end="238:15">asf</name><operator pos:start="238:16" pos:end="238:17">-&gt;</operator><name pos:start="238:18" pos:end="238:34">packet_multi_size</name></name><operator pos:start="238:35" pos:end="238:36">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="240:13" pos:end="252:13"><if pos:start="240:13" pos:end="252:13">if <condition pos:start="240:16" pos:end="240:62">(<expr pos:start="240:17" pos:end="240:61"><name pos:start="240:17" pos:end="240:38"><name pos:start="240:17" pos:end="240:19">asf</name><operator pos:start="240:20" pos:end="240:21">-&gt;</operator><name pos:start="240:22" pos:end="240:38">packet_multi_size</name></name> <operator pos:start="240:40" pos:end="240:40">&lt;</operator> <name pos:start="240:42" pos:end="240:61"><name pos:start="240:42" pos:end="240:44">asf</name><operator pos:start="240:45" pos:end="240:46">-&gt;</operator><name pos:start="240:47" pos:end="240:61">packet_obj_size</name></name></expr>)</condition>

            <block pos:start="242:13" pos:end="252:13">{<block_content pos:start="244:17" pos:end="250:25">

                <expr_stmt pos:start="244:17" pos:end="244:43"><expr pos:start="244:17" pos:end="244:42"><name pos:start="244:17" pos:end="244:38"><name pos:start="244:17" pos:end="244:19">asf</name><operator pos:start="244:20" pos:end="244:21">-&gt;</operator><name pos:start="244:22" pos:end="244:38">packet_time_start</name></name> <operator pos:start="244:40" pos:end="244:40">=</operator> <literal type="number" pos:start="244:42" pos:end="244:42">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="246:17" pos:end="246:54"><expr pos:start="246:17" pos:end="246:53"><call pos:start="246:17" pos:end="246:53"><name pos:start="246:17" pos:end="246:25">url_fskip</name><argument_list pos:start="246:26" pos:end="246:53">(<argument pos:start="246:27" pos:end="246:28"><expr pos:start="246:27" pos:end="246:28"><name pos:start="246:27" pos:end="246:28">pb</name></expr></argument>, <argument pos:start="246:31" pos:end="246:52"><expr pos:start="246:31" pos:end="246:52"><name pos:start="246:31" pos:end="246:52"><name pos:start="246:31" pos:end="246:33">asf</name><operator pos:start="246:34" pos:end="246:35">-&gt;</operator><name pos:start="246:36" pos:end="246:52">packet_multi_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="248:17" pos:end="248:64"><expr pos:start="248:17" pos:end="248:63"><name pos:start="248:17" pos:end="248:37"><name pos:start="248:17" pos:end="248:19">asf</name><operator pos:start="248:20" pos:end="248:21">-&gt;</operator><name pos:start="248:22" pos:end="248:37">packet_size_left</name></name> <operator pos:start="248:39" pos:end="248:40">-=</operator> <name pos:start="248:42" pos:end="248:63"><name pos:start="248:42" pos:end="248:44">asf</name><operator pos:start="248:45" pos:end="248:46">-&gt;</operator><name pos:start="248:47" pos:end="248:63">packet_multi_size</name></name></expr>;</expr_stmt>

                <continue pos:start="250:17" pos:end="250:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="254:13" pos:end="254:59"><expr pos:start="254:13" pos:end="254:58"><name pos:start="254:13" pos:end="254:34"><name pos:start="254:13" pos:end="254:15">asf</name><operator pos:start="254:16" pos:end="254:17">-&gt;</operator><name pos:start="254:18" pos:end="254:34">packet_multi_size</name></name> <operator pos:start="254:36" pos:end="254:37">-=</operator> <name pos:start="254:39" pos:end="254:58"><name pos:start="254:39" pos:end="254:41">asf</name><operator pos:start="254:42" pos:end="254:43">-&gt;</operator><name pos:start="254:44" pos:end="254:58">packet_obj_size</name></name></expr>;</expr_stmt>

            <comment type="line" pos:start="256:13" pos:end="256:157">//printf("COMPRESS size  %d  %d  %d   ms:%d\n", asf-&gt;packet_obj_size, asf-&gt;packet_frag_timestamp, asf-&gt;packet_size_left, asf-&gt;packet_multi_size);</comment>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="260:9" pos:end="290:9"><if pos:start="260:9" pos:end="290:9">if <condition pos:start="260:12" pos:end="260:37">(<expr pos:start="260:13" pos:end="260:36"><name pos:start="260:13" pos:end="260:31"><name pos:start="260:13" pos:end="260:18">asf_st</name><operator pos:start="260:19" pos:end="260:20">-&gt;</operator><name pos:start="260:21" pos:end="260:31">frag_offset</name></name> <operator pos:start="260:33" pos:end="260:34">==</operator> <literal type="number" pos:start="260:36" pos:end="260:36">0</literal></expr>)</condition> <block pos:start="260:39" pos:end="290:9">{<block_content pos:start="264:13" pos:end="288:50">

            <comment type="block" pos:start="262:13" pos:end="262:28">/* new packet */</comment>

            <expr_stmt pos:start="264:13" pos:end="264:62"><expr pos:start="264:13" pos:end="264:61"><call pos:start="264:13" pos:end="264:61"><name pos:start="264:13" pos:end="264:25">av_new_packet</name><argument_list pos:start="264:26" pos:end="264:61">(<argument pos:start="264:27" pos:end="264:38"><expr pos:start="264:27" pos:end="264:38"><operator pos:start="264:27" pos:end="264:27">&amp;</operator><name pos:start="264:28" pos:end="264:38"><name pos:start="264:28" pos:end="264:33">asf_st</name><operator pos:start="264:34" pos:end="264:35">-&gt;</operator><name pos:start="264:36" pos:end="264:38">pkt</name></name></expr></argument>, <argument pos:start="264:41" pos:end="264:60"><expr pos:start="264:41" pos:end="264:60"><name pos:start="264:41" pos:end="264:60"><name pos:start="264:41" pos:end="264:43">asf</name><operator pos:start="264:44" pos:end="264:45">-&gt;</operator><name pos:start="264:46" pos:end="264:60">packet_obj_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="266:13" pos:end="266:42"><expr pos:start="266:13" pos:end="266:41"><name pos:start="266:13" pos:end="266:23"><name pos:start="266:13" pos:end="266:18">asf_st</name><operator pos:start="266:19" pos:end="266:20">-&gt;</operator><name pos:start="266:21" pos:end="266:23">seq</name></name> <operator pos:start="266:25" pos:end="266:25">=</operator> <name pos:start="266:27" pos:end="266:41"><name pos:start="266:27" pos:end="266:29">asf</name><operator pos:start="266:30" pos:end="266:31">-&gt;</operator><name pos:start="266:32" pos:end="266:41">packet_seq</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="268:13" pos:end="268:57"><expr pos:start="268:13" pos:end="268:56"><name pos:start="268:13" pos:end="268:27"><name pos:start="268:13" pos:end="268:18">asf_st</name><operator pos:start="268:19" pos:end="268:20">-&gt;</operator><name pos:start="268:21" pos:end="268:23">pkt</name><operator pos:start="268:24" pos:end="268:24">.</operator><name pos:start="268:25" pos:end="268:27">pts</name></name> <operator pos:start="268:29" pos:end="268:29">=</operator> <name pos:start="268:31" pos:end="268:56"><name pos:start="268:31" pos:end="268:33">asf</name><operator pos:start="268:34" pos:end="268:35">-&gt;</operator><name pos:start="268:36" pos:end="268:56">packet_frag_timestamp</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="270:13" pos:end="270:57"><expr pos:start="270:13" pos:end="270:56"><name pos:start="270:13" pos:end="270:36"><name pos:start="270:13" pos:end="270:18">asf_st</name><operator pos:start="270:19" pos:end="270:20">-&gt;</operator><name pos:start="270:21" pos:end="270:23">pkt</name><operator pos:start="270:24" pos:end="270:24">.</operator><name pos:start="270:25" pos:end="270:36">stream_index</name></name> <operator pos:start="270:38" pos:end="270:38">=</operator> <name pos:start="270:40" pos:end="270:56"><name pos:start="270:40" pos:end="270:42">asf</name><operator pos:start="270:43" pos:end="270:44">-&gt;</operator><name pos:start="270:45" pos:end="270:56">stream_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="272:13" pos:end="274:48"><expr pos:start="272:13" pos:end="274:47"><name pos:start="272:13" pos:end="272:27"><name pos:start="272:13" pos:end="272:18">asf_st</name><operator pos:start="272:19" pos:end="272:20">-&gt;</operator><name pos:start="272:21" pos:end="272:23">pkt</name><operator pos:start="272:24" pos:end="272:24">.</operator><name pos:start="272:25" pos:end="272:27">pos</name></name> <operator pos:start="272:29" pos:end="272:29">=</operator>

            <name pos:start="274:13" pos:end="274:30"><name pos:start="274:13" pos:end="274:18">asf_st</name><operator pos:start="274:19" pos:end="274:20">-&gt;</operator><name pos:start="274:21" pos:end="274:30">packet_pos</name></name><operator pos:start="274:31" pos:end="274:31">=</operator> <name pos:start="274:33" pos:end="274:47"><name pos:start="274:33" pos:end="274:35">asf</name><operator pos:start="274:36" pos:end="274:37">-&gt;</operator><name pos:start="274:38" pos:end="274:47">packet_pos</name></name></expr>;</expr_stmt>

<comment type="line" pos:start="276:1" pos:end="276:73">//printf("new packet: stream:%d key:%d packet_key:%d audio:%d size:%d\n",</comment>

<comment type="line" pos:start="278:1" pos:end="278:77">//asf-&gt;stream_index, asf-&gt;packet_key_frame, asf_st-&gt;pkt.flags &amp; PKT_FLAG_KEY,</comment>

<comment type="line" pos:start="280:1" pos:end="280:94">//s-&gt;streams[asf-&gt;stream_index]-&gt;codec-&gt;codec_type == CODEC_TYPE_AUDIO, asf-&gt;packet_obj_size);</comment>

            <if_stmt pos:start="282:13" pos:end="284:42"><if pos:start="282:13" pos:end="284:42">if <condition pos:start="282:16" pos:end="282:85">(<expr pos:start="282:17" pos:end="282:84"><name pos:start="282:17" pos:end="282:45"><name pos:start="282:17" pos:end="282:17">s</name><operator pos:start="282:18" pos:end="282:19">-&gt;</operator><name pos:start="282:20" pos:end="282:26">streams</name><index pos:start="282:27" pos:end="282:45">[<expr pos:start="282:28" pos:end="282:44"><name pos:start="282:28" pos:end="282:44"><name pos:start="282:28" pos:end="282:30">asf</name><operator pos:start="282:31" pos:end="282:32">-&gt;</operator><name pos:start="282:33" pos:end="282:44">stream_index</name></name></expr>]</index></name><operator pos:start="282:46" pos:end="282:47">-&gt;</operator><name pos:start="282:48" pos:end="282:64"><name pos:start="282:48" pos:end="282:52">codec</name><operator pos:start="282:53" pos:end="282:54">-&gt;</operator><name pos:start="282:55" pos:end="282:64">codec_type</name></name> <operator pos:start="282:66" pos:end="282:67">==</operator> <name pos:start="282:69" pos:end="282:84">CODEC_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="284:17" pos:end="284:42"><block_content pos:start="284:17" pos:end="284:42">

                <expr_stmt pos:start="284:17" pos:end="284:42"><expr pos:start="284:17" pos:end="284:41"><name pos:start="284:17" pos:end="284:37"><name pos:start="284:17" pos:end="284:19">asf</name><operator pos:start="284:20" pos:end="284:21">-&gt;</operator><name pos:start="284:22" pos:end="284:37">packet_key_frame</name></name> <operator pos:start="284:39" pos:end="284:39">=</operator> <literal type="number" pos:start="284:41" pos:end="284:41">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="286:13" pos:end="288:50"><if pos:start="286:13" pos:end="288:50">if <condition pos:start="286:16" pos:end="286:38">(<expr pos:start="286:17" pos:end="286:37"><name pos:start="286:17" pos:end="286:37"><name pos:start="286:17" pos:end="286:19">asf</name><operator pos:start="286:20" pos:end="286:21">-&gt;</operator><name pos:start="286:22" pos:end="286:37">packet_key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="288:17" pos:end="288:50"><block_content pos:start="288:17" pos:end="288:50">

                <expr_stmt pos:start="288:17" pos:end="288:50"><expr pos:start="288:17" pos:end="288:49"><name pos:start="288:17" pos:end="288:33"><name pos:start="288:17" pos:end="288:22">asf_st</name><operator pos:start="288:23" pos:end="288:24">-&gt;</operator><name pos:start="288:25" pos:end="288:27">pkt</name><operator pos:start="288:28" pos:end="288:28">.</operator><name pos:start="288:29" pos:end="288:33">flags</name></name> <operator pos:start="288:35" pos:end="288:36">|=</operator> <name pos:start="288:38" pos:end="288:49">PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="294:9" pos:end="294:23">/* read data */</comment>

        <comment type="line" pos:start="296:9" pos:end="296:70">//printf("READ PACKET s:%d  os:%d  o:%d,%d  l:%d   DATA:%p\n",</comment>

        <comment type="line" pos:start="298:9" pos:end="298:77">//       asf-&gt;packet_size, asf_st-&gt;pkt.size, asf-&gt;packet_frag_offset,</comment>

        <comment type="line" pos:start="300:9" pos:end="300:79">//       asf_st-&gt;frag_offset, asf-&gt;packet_frag_size, asf_st-&gt;pkt.data);</comment>

        <expr_stmt pos:start="302:9" pos:end="302:55"><expr pos:start="302:9" pos:end="302:54"><name pos:start="302:9" pos:end="302:29"><name pos:start="302:9" pos:end="302:11">asf</name><operator pos:start="302:12" pos:end="302:13">-&gt;</operator><name pos:start="302:14" pos:end="302:29">packet_size_left</name></name> <operator pos:start="302:31" pos:end="302:32">-=</operator> <name pos:start="302:34" pos:end="302:54"><name pos:start="302:34" pos:end="302:36">asf</name><operator pos:start="302:37" pos:end="302:38">-&gt;</operator><name pos:start="302:39" pos:end="302:54">packet_frag_size</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="304:9" pos:end="306:21"><if pos:start="304:9" pos:end="306:21">if <condition pos:start="304:12" pos:end="304:38">(<expr pos:start="304:13" pos:end="304:37"><name pos:start="304:13" pos:end="304:33"><name pos:start="304:13" pos:end="304:15">asf</name><operator pos:start="304:16" pos:end="304:17">-&gt;</operator><name pos:start="304:18" pos:end="304:33">packet_size_left</name></name> <operator pos:start="304:35" pos:end="304:35">&lt;</operator> <literal type="number" pos:start="304:37" pos:end="304:37">0</literal></expr>)</condition><block type="pseudo" pos:start="306:13" pos:end="306:21"><block_content pos:start="306:13" pos:end="306:21">

            <continue pos:start="306:13" pos:end="306:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="308:9" pos:end="310:42"><expr pos:start="308:9" pos:end="310:41"><call pos:start="308:9" pos:end="310:41"><name pos:start="308:9" pos:end="308:18">get_buffer</name><argument_list pos:start="308:19" pos:end="310:41">(<argument pos:start="308:20" pos:end="308:21"><expr pos:start="308:20" pos:end="308:21"><name pos:start="308:20" pos:end="308:21">pb</name></expr></argument>, <argument pos:start="308:24" pos:end="308:65"><expr pos:start="308:24" pos:end="308:65"><name pos:start="308:24" pos:end="308:39"><name pos:start="308:24" pos:end="308:29">asf_st</name><operator pos:start="308:30" pos:end="308:31">-&gt;</operator><name pos:start="308:32" pos:end="308:34">pkt</name><operator pos:start="308:35" pos:end="308:35">.</operator><name pos:start="308:36" pos:end="308:39">data</name></name> <operator pos:start="308:41" pos:end="308:41">+</operator> <name pos:start="308:43" pos:end="308:65"><name pos:start="308:43" pos:end="308:45">asf</name><operator pos:start="308:46" pos:end="308:47">-&gt;</operator><name pos:start="308:48" pos:end="308:65">packet_frag_offset</name></name></expr></argument>,

                   <argument pos:start="310:20" pos:end="310:40"><expr pos:start="310:20" pos:end="310:40"><name pos:start="310:20" pos:end="310:40"><name pos:start="310:20" pos:end="310:22">asf</name><operator pos:start="310:23" pos:end="310:24">-&gt;</operator><name pos:start="310:25" pos:end="310:40">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="312:9" pos:end="312:53"><expr pos:start="312:9" pos:end="312:52"><name pos:start="312:9" pos:end="312:27"><name pos:start="312:9" pos:end="312:14">asf_st</name><operator pos:start="312:15" pos:end="312:16">-&gt;</operator><name pos:start="312:17" pos:end="312:27">frag_offset</name></name> <operator pos:start="312:29" pos:end="312:30">+=</operator> <name pos:start="312:32" pos:end="312:52"><name pos:start="312:32" pos:end="312:34">asf</name><operator pos:start="312:35" pos:end="312:36">-&gt;</operator><name pos:start="312:37" pos:end="312:52">packet_frag_size</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="314:9" pos:end="314:42">/* test if whole packet is read */</comment>

        <if_stmt pos:start="316:9" pos:end="372:9"><if pos:start="316:9" pos:end="372:9">if <condition pos:start="316:12" pos:end="316:52">(<expr pos:start="316:13" pos:end="316:51"><name pos:start="316:13" pos:end="316:31"><name pos:start="316:13" pos:end="316:18">asf_st</name><operator pos:start="316:19" pos:end="316:20">-&gt;</operator><name pos:start="316:21" pos:end="316:31">frag_offset</name></name> <operator pos:start="316:33" pos:end="316:34">==</operator> <name pos:start="316:36" pos:end="316:51"><name pos:start="316:36" pos:end="316:41">asf_st</name><operator pos:start="316:42" pos:end="316:43">-&gt;</operator><name pos:start="316:44" pos:end="316:46">pkt</name><operator pos:start="316:47" pos:end="316:47">.</operator><name pos:start="316:48" pos:end="316:51">size</name></name></expr>)</condition> <block pos:start="316:54" pos:end="372:9">{<block_content pos:start="320:13" pos:end="370:18">

            <comment type="block" pos:start="318:13" pos:end="318:31">/* return packet */</comment>

            <if_stmt pos:start="320:13" pos:end="358:13"><if pos:start="320:13" pos:end="358:13">if <condition pos:start="320:16" pos:end="320:36">(<expr pos:start="320:17" pos:end="320:35"><name pos:start="320:17" pos:end="320:31"><name pos:start="320:17" pos:end="320:22">asf_st</name><operator pos:start="320:23" pos:end="320:24">-&gt;</operator><name pos:start="320:25" pos:end="320:31">ds_span</name></name> <operator pos:start="320:33" pos:end="320:33">&gt;</operator> <literal type="number" pos:start="320:35" pos:end="320:35">1</literal></expr>)</condition> <block pos:start="320:38" pos:end="358:13">{<block_content pos:start="324:17" pos:end="356:17">

                <comment type="block" pos:start="322:17" pos:end="322:41">/* packet descrambling */</comment>

                <decl_stmt pos:start="324:17" pos:end="324:60"><decl pos:start="324:17" pos:end="324:59"><type pos:start="324:17" pos:end="324:21"><name pos:start="324:17" pos:end="324:20">char</name><modifier pos:start="324:21" pos:end="324:21">*</modifier></type> <name pos:start="324:23" pos:end="324:29">newdata</name> <init pos:start="324:31" pos:end="324:59">= <expr pos:start="324:33" pos:end="324:59"><call pos:start="324:33" pos:end="324:59"><name pos:start="324:33" pos:end="324:41">av_malloc</name><argument_list pos:start="324:42" pos:end="324:59">(<argument pos:start="324:43" pos:end="324:58"><expr pos:start="324:43" pos:end="324:58"><name pos:start="324:43" pos:end="324:58"><name pos:start="324:43" pos:end="324:48">asf_st</name><operator pos:start="324:49" pos:end="324:50">-&gt;</operator><name pos:start="324:51" pos:end="324:53">pkt</name><operator pos:start="324:54" pos:end="324:54">.</operator><name pos:start="324:55" pos:end="324:58">size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="326:17" pos:end="356:17"><if pos:start="326:17" pos:end="356:17">if <condition pos:start="326:20" pos:end="326:28">(<expr pos:start="326:21" pos:end="326:27"><name pos:start="326:21" pos:end="326:27">newdata</name></expr>)</condition> <block pos:start="326:30" pos:end="356:17">{<block_content pos:start="328:21" pos:end="354:47">

                    <decl_stmt pos:start="328:21" pos:end="328:35"><decl pos:start="328:21" pos:end="328:34"><type pos:start="328:21" pos:end="328:23"><name pos:start="328:21" pos:end="328:23">int</name></type> <name pos:start="328:25" pos:end="328:30">offset</name> <init pos:start="328:32" pos:end="328:34">= <expr pos:start="328:34" pos:end="328:34"><literal type="number" pos:start="328:34" pos:end="328:34">0</literal></expr></init></decl>;</decl_stmt>

                    <while pos:start="330:21" pos:end="350:21">while <condition pos:start="330:27" pos:end="330:53">(<expr pos:start="330:28" pos:end="330:52"><name pos:start="330:28" pos:end="330:33">offset</name> <operator pos:start="330:35" pos:end="330:35">&lt;</operator> <name pos:start="330:37" pos:end="330:52"><name pos:start="330:37" pos:end="330:42">asf_st</name><operator pos:start="330:43" pos:end="330:44">-&gt;</operator><name pos:start="330:45" pos:end="330:47">pkt</name><operator pos:start="330:48" pos:end="330:48">.</operator><name pos:start="330:49" pos:end="330:52">size</name></name></expr>)</condition> <block pos:start="330:55" pos:end="350:21">{<block_content pos:start="332:25" pos:end="348:56">

                        <decl_stmt pos:start="332:25" pos:end="332:65"><decl pos:start="332:25" pos:end="332:64"><type pos:start="332:25" pos:end="332:27"><name pos:start="332:25" pos:end="332:27">int</name></type> <name pos:start="332:29" pos:end="332:31">off</name> <init pos:start="332:33" pos:end="332:64">= <expr pos:start="332:35" pos:end="332:64"><name pos:start="332:35" pos:end="332:40">offset</name> <operator pos:start="332:42" pos:end="332:42">/</operator> <name pos:start="332:44" pos:end="332:64"><name pos:start="332:44" pos:end="332:49">asf_st</name><operator pos:start="332:50" pos:end="332:51">-&gt;</operator><name pos:start="332:52" pos:end="332:64">ds_chunk_size</name></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="334:25" pos:end="334:56"><decl pos:start="334:25" pos:end="334:55"><type pos:start="334:25" pos:end="334:27"><name pos:start="334:25" pos:end="334:27">int</name></type> <name pos:start="334:29" pos:end="334:31">row</name> <init pos:start="334:33" pos:end="334:55">= <expr pos:start="334:35" pos:end="334:55"><name pos:start="334:35" pos:end="334:37">off</name> <operator pos:start="334:39" pos:end="334:39">/</operator> <name pos:start="334:41" pos:end="334:55"><name pos:start="334:41" pos:end="334:46">asf_st</name><operator pos:start="334:47" pos:end="334:48">-&gt;</operator><name pos:start="334:49" pos:end="334:55">ds_span</name></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="336:25" pos:end="336:56"><decl pos:start="336:25" pos:end="336:55"><type pos:start="336:25" pos:end="336:27"><name pos:start="336:25" pos:end="336:27">int</name></type> <name pos:start="336:29" pos:end="336:31">col</name> <init pos:start="336:33" pos:end="336:55">= <expr pos:start="336:35" pos:end="336:55"><name pos:start="336:35" pos:end="336:37">off</name> <operator pos:start="336:39" pos:end="336:39">%</operator> <name pos:start="336:41" pos:end="336:55"><name pos:start="336:41" pos:end="336:46">asf_st</name><operator pos:start="336:47" pos:end="336:48">-&gt;</operator><name pos:start="336:49" pos:end="336:55">ds_span</name></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="338:25" pos:end="338:93"><decl pos:start="338:25" pos:end="338:92"><type pos:start="338:25" pos:end="338:27"><name pos:start="338:25" pos:end="338:27">int</name></type> <name pos:start="338:29" pos:end="338:31">idx</name> <init pos:start="338:33" pos:end="338:92">= <expr pos:start="338:35" pos:end="338:92"><name pos:start="338:35" pos:end="338:37">row</name> <operator pos:start="338:39" pos:end="338:39">+</operator> <name pos:start="338:41" pos:end="338:43">col</name> <operator pos:start="338:45" pos:end="338:45">*</operator> <name pos:start="338:47" pos:end="338:68"><name pos:start="338:47" pos:end="338:52">asf_st</name><operator pos:start="338:53" pos:end="338:54">-&gt;</operator><name pos:start="338:55" pos:end="338:68">ds_packet_size</name></name> <operator pos:start="338:70" pos:end="338:70">/</operator> <name pos:start="338:72" pos:end="338:92"><name pos:start="338:72" pos:end="338:77">asf_st</name><operator pos:start="338:78" pos:end="338:79">-&gt;</operator><name pos:start="338:80" pos:end="338:92">ds_chunk_size</name></name></expr></init></decl>;</decl_stmt>

                        <comment type="line" pos:start="340:25" pos:end="340:89">//printf("off:%d  row:%d  col:%d  idx:%d\n", off, row, col, idx);</comment>

                        <expr_stmt pos:start="342:25" pos:end="346:54"><expr pos:start="342:25" pos:end="346:53"><call pos:start="342:25" pos:end="346:53"><name pos:start="342:25" pos:end="342:30">memcpy</name><argument_list pos:start="342:31" pos:end="346:53">(<argument pos:start="342:32" pos:end="342:47"><expr pos:start="342:32" pos:end="342:47"><name pos:start="342:32" pos:end="342:38">newdata</name> <operator pos:start="342:40" pos:end="342:40">+</operator> <name pos:start="342:42" pos:end="342:47">offset</name></expr></argument>,

                               <argument pos:start="344:32" pos:end="344:77"><expr pos:start="344:32" pos:end="344:77"><name pos:start="344:32" pos:end="344:47"><name pos:start="344:32" pos:end="344:37">asf_st</name><operator pos:start="344:38" pos:end="344:39">-&gt;</operator><name pos:start="344:40" pos:end="344:42">pkt</name><operator pos:start="344:43" pos:end="344:43">.</operator><name pos:start="344:44" pos:end="344:47">data</name></name> <operator pos:start="344:49" pos:end="344:49">+</operator> <name pos:start="344:51" pos:end="344:53">idx</name> <operator pos:start="344:55" pos:end="344:55">*</operator> <name pos:start="344:57" pos:end="344:77"><name pos:start="344:57" pos:end="344:62">asf_st</name><operator pos:start="344:63" pos:end="344:64">-&gt;</operator><name pos:start="344:65" pos:end="344:77">ds_chunk_size</name></name></expr></argument>,

                               <argument pos:start="346:32" pos:end="346:52"><expr pos:start="346:32" pos:end="346:52"><name pos:start="346:32" pos:end="346:52"><name pos:start="346:32" pos:end="346:37">asf_st</name><operator pos:start="346:38" pos:end="346:39">-&gt;</operator><name pos:start="346:40" pos:end="346:52">ds_chunk_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="348:25" pos:end="348:56"><expr pos:start="348:25" pos:end="348:55"><name pos:start="348:25" pos:end="348:30">offset</name> <operator pos:start="348:32" pos:end="348:33">+=</operator> <name pos:start="348:35" pos:end="348:55"><name pos:start="348:35" pos:end="348:40">asf_st</name><operator pos:start="348:41" pos:end="348:42">-&gt;</operator><name pos:start="348:43" pos:end="348:55">ds_chunk_size</name></name></expr>;</expr_stmt>

                    </block_content>}</block></while>

                    <expr_stmt pos:start="352:21" pos:end="352:46"><expr pos:start="352:21" pos:end="352:45"><call pos:start="352:21" pos:end="352:45"><name pos:start="352:21" pos:end="352:27">av_free</name><argument_list pos:start="352:28" pos:end="352:45">(<argument pos:start="352:29" pos:end="352:44"><expr pos:start="352:29" pos:end="352:44"><name pos:start="352:29" pos:end="352:44"><name pos:start="352:29" pos:end="352:34">asf_st</name><operator pos:start="352:35" pos:end="352:36">-&gt;</operator><name pos:start="352:37" pos:end="352:39">pkt</name><operator pos:start="352:40" pos:end="352:40">.</operator><name pos:start="352:41" pos:end="352:44">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="354:21" pos:end="354:47"><expr pos:start="354:21" pos:end="354:46"><name pos:start="354:21" pos:end="354:36"><name pos:start="354:21" pos:end="354:26">asf_st</name><operator pos:start="354:27" pos:end="354:28">-&gt;</operator><name pos:start="354:29" pos:end="354:31">pkt</name><operator pos:start="354:32" pos:end="354:32">.</operator><name pos:start="354:33" pos:end="354:36">data</name></name> <operator pos:start="354:38" pos:end="354:38">=</operator> <name pos:start="354:40" pos:end="354:46">newdata</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="360:13" pos:end="360:36"><expr pos:start="360:13" pos:end="360:35"><name pos:start="360:13" pos:end="360:31"><name pos:start="360:13" pos:end="360:18">asf_st</name><operator pos:start="360:19" pos:end="360:20">-&gt;</operator><name pos:start="360:21" pos:end="360:31">frag_offset</name></name> <operator pos:start="360:33" pos:end="360:33">=</operator> <literal type="number" pos:start="360:35" pos:end="360:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="362:13" pos:end="362:56"><expr pos:start="362:13" pos:end="362:55"><call pos:start="362:13" pos:end="362:55"><name pos:start="362:13" pos:end="362:18">memcpy</name><argument_list pos:start="362:19" pos:end="362:55">(<argument pos:start="362:20" pos:end="362:22"><expr pos:start="362:20" pos:end="362:22"><name pos:start="362:20" pos:end="362:22">pkt</name></expr></argument>, <argument pos:start="362:25" pos:end="362:36"><expr pos:start="362:25" pos:end="362:36"><operator pos:start="362:25" pos:end="362:25">&amp;</operator><name pos:start="362:26" pos:end="362:36"><name pos:start="362:26" pos:end="362:31">asf_st</name><operator pos:start="362:32" pos:end="362:33">-&gt;</operator><name pos:start="362:34" pos:end="362:36">pkt</name></name></expr></argument>, <argument pos:start="362:39" pos:end="362:54"><expr pos:start="362:39" pos:end="362:54"><sizeof pos:start="362:39" pos:end="362:54">sizeof<argument_list pos:start="362:45" pos:end="362:54">(<argument pos:start="362:46" pos:end="362:53"><expr pos:start="362:46" pos:end="362:53"><name pos:start="362:46" pos:end="362:53">AVPacket</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="364:13" pos:end="364:80">//printf("packet %d %d\n", asf_st-&gt;pkt.size, asf-&gt;packet_frag_size);</comment>

            <expr_stmt pos:start="366:13" pos:end="366:33"><expr pos:start="366:13" pos:end="366:32"><name pos:start="366:13" pos:end="366:28"><name pos:start="366:13" pos:end="366:18">asf_st</name><operator pos:start="366:19" pos:end="366:20">-&gt;</operator><name pos:start="366:21" pos:end="366:23">pkt</name><operator pos:start="366:24" pos:end="366:24">.</operator><name pos:start="366:25" pos:end="366:28">size</name></name> <operator pos:start="366:30" pos:end="366:30">=</operator> <literal type="number" pos:start="366:32" pos:end="366:32">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="368:13" pos:end="368:33"><expr pos:start="368:13" pos:end="368:32"><name pos:start="368:13" pos:end="368:28"><name pos:start="368:13" pos:end="368:18">asf_st</name><operator pos:start="368:19" pos:end="368:20">-&gt;</operator><name pos:start="368:21" pos:end="368:23">pkt</name><operator pos:start="368:24" pos:end="368:24">.</operator><name pos:start="368:25" pos:end="368:28">data</name></name> <operator pos:start="368:30" pos:end="368:30">=</operator> <literal type="number" pos:start="368:32" pos:end="368:32">0</literal></expr>;</expr_stmt>

            <break pos:start="370:13" pos:end="370:18">break;</break> <comment type="line" pos:start="370:20" pos:end="370:38">// packet completed</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="376:5" pos:end="376:13">return <expr pos:start="376:12" pos:end="376:12"><literal type="number" pos:start="376:12" pos:end="376:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
