<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22491.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">test_io_channel_command_fifo</name><parameter_list pos:start="1:41" pos:end="1:52">(<parameter pos:start="1:42" pos:end="1:51"><decl pos:start="1:42" pos:end="1:51"><type pos:start="1:42" pos:end="1:45"><name pos:start="1:42" pos:end="1:45">bool</name></type> <name pos:start="1:47" pos:end="1:51">async</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:22">

<cpp:define pos:start="5:1" pos:end="5:54">#<cpp:directive pos:start="5:2" pos:end="5:7">define</cpp:directive> <cpp:macro pos:start="5:9" pos:end="5:17"><name pos:start="5:9" pos:end="5:17">TEST_FIFO</name></cpp:macro> <cpp:value pos:start="5:19" pos:end="5:54">"tests/test-io-channel-command.fifo"</cpp:value></cpp:define>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">QIOChannel</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">src</name></decl>, <decl pos:start="7:22" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:16"><modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">QIOChannelTest</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:24">test</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:65"><decl pos:start="11:5" pos:end="11:64"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:17">srcfifo</name> <init pos:start="11:19" pos:end="11:64">= <expr pos:start="11:21" pos:end="11:64"><call pos:start="11:21" pos:end="11:64"><name pos:start="11:21" pos:end="11:35">g_strdup_printf</name><argument_list pos:start="11:36" pos:end="11:64">(<argument pos:start="11:37" pos:end="11:52"><expr pos:start="11:37" pos:end="11:52"><literal type="string" pos:start="11:37" pos:end="11:52">"PIPE:%s,wronly"</literal></expr></argument>, <argument pos:start="11:55" pos:end="11:63"><expr pos:start="11:55" pos:end="11:63"><name pos:start="11:55" pos:end="11:63">TEST_FIFO</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:65"><decl pos:start="13:5" pos:end="13:64"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:17">dstfifo</name> <init pos:start="13:19" pos:end="13:64">= <expr pos:start="13:21" pos:end="13:64"><call pos:start="13:21" pos:end="13:64"><name pos:start="13:21" pos:end="13:35">g_strdup_printf</name><argument_list pos:start="13:36" pos:end="13:64">(<argument pos:start="13:37" pos:end="13:52"><expr pos:start="13:37" pos:end="13:52"><literal type="string" pos:start="13:37" pos:end="13:52">"PIPE:%s,rdonly"</literal></expr></argument>, <argument pos:start="13:55" pos:end="13:63"><expr pos:start="13:55" pos:end="13:63"><name pos:start="13:55" pos:end="13:63">TEST_FIFO</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="19:6"><decl pos:start="15:5" pos:end="19:5"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:23">srcargv</name><index pos:start="15:24" pos:end="15:25">[]</index></name> <init pos:start="15:27" pos:end="19:5">= <expr pos:start="15:29" pos:end="19:5"><block pos:start="15:29" pos:end="19:5">{

        <expr pos:start="17:9" pos:end="17:20"><literal type="string" pos:start="17:9" pos:end="17:20">"/bin/socat"</literal></expr>, <expr pos:start="17:23" pos:end="17:25"><literal type="string" pos:start="17:23" pos:end="17:25">"-"</literal></expr>, <expr pos:start="17:28" pos:end="17:34"><name pos:start="17:28" pos:end="17:34">srcfifo</name></expr>, <expr pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:40">NULL</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="25:6"><decl pos:start="21:5" pos:end="25:5"><type pos:start="21:5" pos:end="21:16"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:14">char</name> <modifier pos:start="21:16" pos:end="21:16">*</modifier></type><name pos:start="21:17" pos:end="21:25"><name pos:start="21:17" pos:end="21:23">dstargv</name><index pos:start="21:24" pos:end="21:25">[]</index></name> <init pos:start="21:27" pos:end="25:5">= <expr pos:start="21:29" pos:end="25:5"><block pos:start="21:29" pos:end="25:5">{

        <expr pos:start="23:9" pos:end="23:20"><literal type="string" pos:start="23:9" pos:end="23:20">"/bin/socat"</literal></expr>, <expr pos:start="23:23" pos:end="23:29"><name pos:start="23:23" pos:end="23:29">dstfifo</name></expr>, <expr pos:start="23:32" pos:end="23:34"><literal type="string" pos:start="23:32" pos:end="23:34">"-"</literal></expr>, <expr pos:start="23:37" pos:end="23:40"><name pos:start="23:37" pos:end="23:40">NULL</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><call pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:10">unlink</name><argument_list pos:start="29:11" pos:end="29:21">(<argument pos:start="29:12" pos:end="29:20"><expr pos:start="29:12" pos:end="29:20"><name pos:start="29:12" pos:end="29:20">TEST_FIFO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:39">(<expr pos:start="31:9" pos:end="31:38"><call pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:14">access</name><argument_list pos:start="31:15" pos:end="31:34">(<argument pos:start="31:16" pos:end="31:27"><expr pos:start="31:16" pos:end="31:27"><literal type="string" pos:start="31:16" pos:end="31:27">"/bin/socat"</literal></expr></argument>, <argument pos:start="31:30" pos:end="31:33"><expr pos:start="31:30" pos:end="31:33"><name pos:start="31:30" pos:end="31:33">X_OK</name></expr></argument>)</argument_list></call> <operator pos:start="31:36" pos:end="31:36">&lt;</operator> <literal type="number" pos:start="31:38" pos:end="31:38">0</literal></expr>)</condition> <block pos:start="31:41" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:15">

        <return pos:start="33:9" pos:end="33:15">return;</return> <comment type="block" pos:start="33:17" pos:end="33:61">/* Pretend success if socat is not present */</comment>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:36">(<expr pos:start="37:9" pos:end="37:35"><call pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:14">mkfifo</name><argument_list pos:start="37:15" pos:end="37:31">(<argument pos:start="37:16" pos:end="37:24"><expr pos:start="37:16" pos:end="37:24"><name pos:start="37:16" pos:end="37:24">TEST_FIFO</name></expr></argument>, <argument pos:start="37:27" pos:end="37:30"><expr pos:start="37:27" pos:end="37:30"><literal type="number" pos:start="37:27" pos:end="37:30">0600</literal></expr></argument>)</argument_list></call> <operator pos:start="37:33" pos:end="37:33">&lt;</operator> <literal type="number" pos:start="37:35" pos:end="37:35">0</literal></expr>)</condition> <block pos:start="37:38" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:16">

        <expr_stmt pos:start="39:9" pos:end="39:16"><expr pos:start="39:9" pos:end="39:15"><call pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:13">abort</name><argument_list pos:start="39:14" pos:end="39:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="47:67"><expr pos:start="43:5" pos:end="47:66"><name pos:start="43:5" pos:end="43:7">src</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="47:66"><name pos:start="43:11" pos:end="43:21">QIO_CHANNEL</name><argument_list pos:start="43:22" pos:end="47:66">(<argument pos:start="43:23" pos:end="47:65"><expr pos:start="43:23" pos:end="47:65"><call pos:start="43:23" pos:end="47:65"><name pos:start="43:23" pos:end="43:51">qio_channel_command_new_spawn</name><argument_list pos:start="43:52" pos:end="47:65">(<argument pos:start="43:53" pos:end="43:59"><expr pos:start="43:53" pos:end="43:59"><name pos:start="43:53" pos:end="43:59">srcargv</name></expr></argument>,

                                                    <argument pos:start="45:53" pos:end="45:60"><expr pos:start="45:53" pos:end="45:60"><name pos:start="45:53" pos:end="45:60">O_WRONLY</name></expr></argument>,

                                                    <argument pos:start="47:53" pos:end="47:64"><expr pos:start="47:53" pos:end="47:64"><operator pos:start="47:53" pos:end="47:53">&amp;</operator><name pos:start="47:54" pos:end="47:64">error_abort</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="53:67"><expr pos:start="49:5" pos:end="53:66"><name pos:start="49:5" pos:end="49:7">dst</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="53:66"><name pos:start="49:11" pos:end="49:21">QIO_CHANNEL</name><argument_list pos:start="49:22" pos:end="53:66">(<argument pos:start="49:23" pos:end="53:65"><expr pos:start="49:23" pos:end="53:65"><call pos:start="49:23" pos:end="53:65"><name pos:start="49:23" pos:end="49:51">qio_channel_command_new_spawn</name><argument_list pos:start="49:52" pos:end="53:65">(<argument pos:start="49:53" pos:end="49:59"><expr pos:start="49:53" pos:end="49:59"><name pos:start="49:53" pos:end="49:59">dstargv</name></expr></argument>,

                                                    <argument pos:start="51:53" pos:end="51:60"><expr pos:start="51:53" pos:end="51:60"><name pos:start="51:53" pos:end="51:60">O_RDONLY</name></expr></argument>,

                                                    <argument pos:start="53:53" pos:end="53:64"><expr pos:start="53:53" pos:end="53:64"><operator pos:start="53:53" pos:end="53:53">&amp;</operator><name pos:start="53:54" pos:end="53:64">error_abort</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:8">test</name> <operator pos:start="57:10" pos:end="57:10">=</operator> <call pos:start="57:12" pos:end="57:33"><name pos:start="57:12" pos:end="57:31">qio_channel_test_new</name><argument_list pos:start="57:32" pos:end="57:33">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:56"><expr pos:start="59:5" pos:end="59:55"><call pos:start="59:5" pos:end="59:55"><name pos:start="59:5" pos:end="59:32">qio_channel_test_run_threads</name><argument_list pos:start="59:33" pos:end="59:55">(<argument pos:start="59:34" pos:end="59:37"><expr pos:start="59:34" pos:end="59:37"><name pos:start="59:34" pos:end="59:37">test</name></expr></argument>, <argument pos:start="59:40" pos:end="59:44"><expr pos:start="59:40" pos:end="59:44"><name pos:start="59:40" pos:end="59:44">async</name></expr></argument>, <argument pos:start="59:47" pos:end="59:49"><expr pos:start="59:47" pos:end="59:49"><name pos:start="59:47" pos:end="59:49">src</name></expr></argument>, <argument pos:start="59:52" pos:end="59:54"><expr pos:start="59:52" pos:end="59:54"><name pos:start="59:52" pos:end="59:54">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:36"><expr pos:start="61:5" pos:end="61:35"><call pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:29">qio_channel_test_validate</name><argument_list pos:start="61:30" pos:end="61:35">(<argument pos:start="61:31" pos:end="61:34"><expr pos:start="61:31" pos:end="61:34"><name pos:start="61:31" pos:end="61:34">test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:30"><expr pos:start="65:5" pos:end="65:29"><call pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:16">object_unref</name><argument_list pos:start="65:17" pos:end="65:29">(<argument pos:start="65:18" pos:end="65:28"><expr pos:start="65:18" pos:end="65:28"><call pos:start="65:18" pos:end="65:28"><name pos:start="65:18" pos:end="65:23">OBJECT</name><argument_list pos:start="65:24" pos:end="65:28">(<argument pos:start="65:25" pos:end="65:27"><expr pos:start="65:25" pos:end="65:27"><name pos:start="65:25" pos:end="65:27">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><call pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:16">object_unref</name><argument_list pos:start="67:17" pos:end="67:29">(<argument pos:start="67:18" pos:end="67:28"><expr pos:start="67:18" pos:end="67:28"><call pos:start="67:18" pos:end="67:28"><name pos:start="67:18" pos:end="67:23">OBJECT</name><argument_list pos:start="67:24" pos:end="67:28">(<argument pos:start="67:25" pos:end="67:27"><expr pos:start="67:25" pos:end="67:27"><name pos:start="67:25" pos:end="67:27">dst</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:20"><expr pos:start="71:5" pos:end="71:19"><call pos:start="71:5" pos:end="71:19"><name pos:start="71:5" pos:end="71:10">g_free</name><argument_list pos:start="71:11" pos:end="71:19">(<argument pos:start="71:12" pos:end="71:18"><expr pos:start="71:12" pos:end="71:18"><name pos:start="71:12" pos:end="71:18">srcfifo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:20"><expr pos:start="73:5" pos:end="73:19"><call pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:10">g_free</name><argument_list pos:start="73:11" pos:end="73:19">(<argument pos:start="73:12" pos:end="73:18"><expr pos:start="73:12" pos:end="73:18"><name pos:start="73:12" pos:end="73:18">dstfifo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:22"><expr pos:start="75:5" pos:end="75:21"><call pos:start="75:5" pos:end="75:21"><name pos:start="75:5" pos:end="75:10">unlink</name><argument_list pos:start="75:11" pos:end="75:21">(<argument pos:start="75:12" pos:end="75:20"><expr pos:start="75:12" pos:end="75:20"><name pos:start="75:12" pos:end="75:20">TEST_FIFO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
