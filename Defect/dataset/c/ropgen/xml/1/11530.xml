<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11530.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_ctts</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>, <decl pos:start="9:21" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:21" pos:end="9:27">entries</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:9">c</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:13">fc</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:25">nb_streams</name></name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <literal type="number" pos:start="13:29" pos:end="13:29">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:6">st</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:44"><name pos:start="17:10" pos:end="17:10">c</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:14">fc</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:23">streams</name><index pos:start="17:24" pos:end="17:44">[<expr pos:start="17:25" pos:end="17:43"><name pos:start="17:25" pos:end="17:41"><name pos:start="17:25" pos:end="17:25">c</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:29">fc</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:41">nb_streams</name></name><operator pos:start="17:42" pos:end="17:42">-</operator><literal type="number" pos:start="17:43" pos:end="17:43">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:6">sc</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <name pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:11">st</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:22">priv_data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:16"><expr pos:start="23:5" pos:end="23:15"><call pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:11">avio_r8</name><argument_list pos:start="23:12" pos:end="23:15">(<argument pos:start="23:13" pos:end="23:14"><expr pos:start="23:13" pos:end="23:14"><name pos:start="23:13" pos:end="23:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:18" pos:end="23:30">/* version */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><call pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:13">avio_rb24</name><argument_list pos:start="25:14" pos:end="25:17">(<argument pos:start="25:15" pos:end="25:16"><expr pos:start="25:15" pos:end="25:16"><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:20" pos:end="25:30">/* flags */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:11">entries</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:27"><name pos:start="27:15" pos:end="27:23">avio_rb32</name><argument_list pos:start="27:24" pos:end="27:27">(<argument pos:start="27:25" pos:end="27:26"><expr pos:start="27:25" pos:end="27:26"><name pos:start="27:25" pos:end="27:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:95"><expr pos:start="31:5" pos:end="31:94"><call pos:start="31:5" pos:end="31:94"><name pos:start="31:5" pos:end="31:10">av_log</name><argument_list pos:start="31:11" pos:end="31:94">(<argument pos:start="31:12" pos:end="31:16"><expr pos:start="31:12" pos:end="31:16"><name pos:start="31:12" pos:end="31:16"><name pos:start="31:12" pos:end="31:12">c</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:16">fc</name></name></expr></argument>, <argument pos:start="31:19" pos:end="31:30"><expr pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="31:33" pos:end="31:63"><expr pos:start="31:33" pos:end="31:63"><literal type="string" pos:start="31:33" pos:end="31:63">"track[%i].ctts.entries = %i\n"</literal></expr></argument>, <argument pos:start="31:66" pos:end="31:84"><expr pos:start="31:66" pos:end="31:84"><name pos:start="31:66" pos:end="31:82"><name pos:start="31:66" pos:end="31:66">c</name><operator pos:start="31:67" pos:end="31:68">-&gt;</operator><name pos:start="31:69" pos:end="31:70">fc</name><operator pos:start="31:71" pos:end="31:72">-&gt;</operator><name pos:start="31:73" pos:end="31:82">nb_streams</name></name><operator pos:start="31:83" pos:end="31:83">-</operator><literal type="number" pos:start="31:84" pos:end="31:84">1</literal></expr></argument>, <argument pos:start="31:87" pos:end="31:93"><expr pos:start="31:87" pos:end="31:93"><name pos:start="31:87" pos:end="31:93">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="37:17"><if pos:start="35:5" pos:end="37:17">if <condition pos:start="35:8" pos:end="35:17">(<expr pos:start="35:9" pos:end="35:16"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:16">entries</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:17"><block_content pos:start="37:9" pos:end="37:17">

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:35"><if pos:start="39:5" pos:end="41:35">if <condition pos:start="39:8" pos:end="39:53">(<expr pos:start="39:9" pos:end="39:52"><name pos:start="39:9" pos:end="39:15">entries</name> <operator pos:start="39:17" pos:end="39:18">&gt;=</operator> <name pos:start="39:20" pos:end="39:27">UINT_MAX</name> <operator pos:start="39:29" pos:end="39:29">/</operator> <sizeof pos:start="39:31" pos:end="39:52">sizeof<argument_list pos:start="39:37" pos:end="39:52">(<argument pos:start="39:38" pos:end="39:51"><expr pos:start="39:38" pos:end="39:51"><operator pos:start="39:38" pos:end="39:38">*</operator><name pos:start="39:39" pos:end="39:51"><name pos:start="39:39" pos:end="39:40">sc</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:51">ctts_data</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:35"><block_content pos:start="41:9" pos:end="41:35">

        <return pos:start="41:9" pos:end="41:35">return <expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><call pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:12">av_freep</name><argument_list pos:start="43:13" pos:end="43:28">(<argument pos:start="43:14" pos:end="43:27"><expr pos:start="43:14" pos:end="43:27"><operator pos:start="43:14" pos:end="43:14">&amp;</operator><name pos:start="43:15" pos:end="43:27"><name pos:start="43:15" pos:end="43:16">sc</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:27">ctts_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:71"><expr pos:start="45:5" pos:end="45:70"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:6">sc</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:17">ctts_data</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <call pos:start="45:21" pos:end="45:70"><name pos:start="45:21" pos:end="45:30">av_realloc</name><argument_list pos:start="45:31" pos:end="45:70">(<argument pos:start="45:32" pos:end="45:35"><expr pos:start="45:32" pos:end="45:35"><name pos:start="45:32" pos:end="45:35">NULL</name></expr></argument>, <argument pos:start="45:38" pos:end="45:69"><expr pos:start="45:38" pos:end="45:69"><name pos:start="45:38" pos:end="45:44">entries</name> <operator pos:start="45:46" pos:end="45:46">*</operator> <sizeof pos:start="45:48" pos:end="45:69">sizeof<argument_list pos:start="45:54" pos:end="45:69">(<argument pos:start="45:55" pos:end="45:68"><expr pos:start="45:55" pos:end="45:68"><operator pos:start="45:55" pos:end="45:55">*</operator><name pos:start="45:56" pos:end="45:68"><name pos:start="45:56" pos:end="45:57">sc</name><operator pos:start="45:58" pos:end="45:59">-&gt;</operator><name pos:start="45:60" pos:end="45:68">ctts_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:31"><if pos:start="47:5" pos:end="49:31">if <condition pos:start="47:8" pos:end="47:23">(<expr pos:start="47:9" pos:end="47:22"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:22"><name pos:start="47:10" pos:end="47:11">sc</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:22">ctts_data</name></name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:31"><block_content pos:start="49:9" pos:end="49:31">

        <return pos:start="49:9" pos:end="49:31">return <expr pos:start="49:16" pos:end="49:30"><call pos:start="49:16" pos:end="49:30"><name pos:start="49:16" pos:end="49:22">AVERROR</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="53:5" pos:end="91:5">for <control pos:start="53:9" pos:end="53:53">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:48"><expr pos:start="53:17" pos:end="53:47"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:27">entries</name> <operator pos:start="53:29" pos:end="53:30">&amp;&amp;</operator> <operator pos:start="53:32" pos:end="53:32">!</operator><name pos:start="53:33" pos:end="53:47"><name pos:start="53:33" pos:end="53:34">pb</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:47">eof_reached</name></name></expr>;</condition> <incr pos:start="53:50" pos:end="53:52"><expr pos:start="53:50" pos:end="53:52"><name pos:start="53:50" pos:end="53:50">i</name><operator pos:start="53:51" pos:end="53:52">++</operator></expr></incr>)</control> <block pos:start="53:55" pos:end="91:5">{<block_content pos:start="55:9" pos:end="89:47">

        <decl_stmt pos:start="55:9" pos:end="55:36"><decl pos:start="55:9" pos:end="55:35"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:17">count</name>    <init pos:start="55:22" pos:end="55:35">=<expr pos:start="55:23" pos:end="55:35"><call pos:start="55:23" pos:end="55:35"><name pos:start="55:23" pos:end="55:31">avio_rb32</name><argument_list pos:start="55:32" pos:end="55:35">(<argument pos:start="55:33" pos:end="55:34"><expr pos:start="55:33" pos:end="55:34"><name pos:start="55:33" pos:end="55:34">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:36"><decl pos:start="57:9" pos:end="57:35"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:20">duration</name> <init pos:start="57:22" pos:end="57:35">=<expr pos:start="57:23" pos:end="57:35"><call pos:start="57:23" pos:end="57:35"><name pos:start="57:23" pos:end="57:31">avio_rb32</name><argument_list pos:start="57:32" pos:end="57:35">(<argument pos:start="57:33" pos:end="57:34"><expr pos:start="57:33" pos:end="57:34"><name pos:start="57:33" pos:end="57:34">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:41"><expr pos:start="61:9" pos:end="61:40"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:10">sc</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:21">ctts_data</name><index pos:start="61:22" pos:end="61:24">[<expr pos:start="61:23" pos:end="61:23"><name pos:start="61:23" pos:end="61:23">i</name></expr>]</index></name><operator pos:start="61:25" pos:end="61:25">.</operator><name pos:start="61:26" pos:end="61:30">count</name>   <operator pos:start="61:34" pos:end="61:34">=</operator> <name pos:start="61:36" pos:end="61:40">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:44"><expr pos:start="63:9" pos:end="63:43"><name pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:10">sc</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:21">ctts_data</name><index pos:start="63:22" pos:end="63:24">[<expr pos:start="63:23" pos:end="63:23"><name pos:start="63:23" pos:end="63:23">i</name></expr>]</index></name><operator pos:start="63:25" pos:end="63:25">.</operator><name pos:start="63:26" pos:end="63:33">duration</name><operator pos:start="63:34" pos:end="63:34">=</operator> <name pos:start="63:36" pos:end="63:43">duration</name></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="69:33"><expr pos:start="67:9" pos:end="69:32"><call pos:start="67:9" pos:end="69:32"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="69:32">(<argument pos:start="67:16" pos:end="67:20"><expr pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:16">c</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:20">fc</name></name></expr></argument>, <argument pos:start="67:23" pos:end="67:34"><expr pos:start="67:23" pos:end="67:34"><name pos:start="67:23" pos:end="67:34">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="67:37" pos:end="67:61"><expr pos:start="67:37" pos:end="67:61"><literal type="string" pos:start="67:37" pos:end="67:61">"count=%d, duration=%d\n"</literal></expr></argument>,

                <argument pos:start="69:17" pos:end="69:21"><expr pos:start="69:17" pos:end="69:21"><name pos:start="69:17" pos:end="69:21">count</name></expr></argument>, <argument pos:start="69:24" pos:end="69:31"><expr pos:start="69:24" pos:end="69:31"><name pos:start="69:24" pos:end="69:31">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="73:9" pos:end="83:9"><if pos:start="73:9" pos:end="83:9">if <condition pos:start="73:12" pos:end="73:53">(<expr pos:start="73:13" pos:end="73:52"><call pos:start="73:13" pos:end="73:27"><name pos:start="73:13" pos:end="73:17">FFABS</name><argument_list pos:start="73:18" pos:end="73:27">(<argument pos:start="73:19" pos:end="73:26"><expr pos:start="73:19" pos:end="73:26"><name pos:start="73:19" pos:end="73:26">duration</name></expr></argument>)</argument_list></call> <operator pos:start="73:29" pos:end="73:29">&gt;</operator> <operator pos:start="73:31" pos:end="73:31">(</operator><literal type="number" pos:start="73:32" pos:end="73:32">1</literal><operator pos:start="73:33" pos:end="73:34">&lt;&lt;</operator><literal type="number" pos:start="73:35" pos:end="73:36">28</literal><operator pos:start="73:37" pos:end="73:37">)</operator> <operator pos:start="73:39" pos:end="73:40">&amp;&amp;</operator> <name pos:start="73:42" pos:end="73:42">i</name><operator pos:start="73:43" pos:end="73:43">+</operator><literal type="number" pos:start="73:44" pos:end="73:44">2</literal><operator pos:start="73:45" pos:end="73:45">&lt;</operator><name pos:start="73:46" pos:end="73:52">entries</name></expr>)</condition> <block pos:start="73:55" pos:end="83:9">{<block_content pos:start="75:13" pos:end="81:21">

            <expr_stmt pos:start="75:13" pos:end="75:60"><expr pos:start="75:13" pos:end="75:59"><call pos:start="75:13" pos:end="75:59"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="75:59">(<argument pos:start="75:20" pos:end="75:24"><expr pos:start="75:20" pos:end="75:24"><name pos:start="75:20" pos:end="75:24"><name pos:start="75:20" pos:end="75:20">c</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:24">fc</name></name></expr></argument>, <argument pos:start="75:27" pos:end="75:40"><expr pos:start="75:27" pos:end="75:40"><name pos:start="75:27" pos:end="75:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="75:43" pos:end="75:58"><expr pos:start="75:43" pos:end="75:58"><literal type="string" pos:start="75:43" pos:end="75:58">"CTTS invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:37"><expr pos:start="77:13" pos:end="77:36"><call pos:start="77:13" pos:end="77:36"><name pos:start="77:13" pos:end="77:20">av_freep</name><argument_list pos:start="77:21" pos:end="77:36">(<argument pos:start="77:22" pos:end="77:35"><expr pos:start="77:22" pos:end="77:35"><operator pos:start="77:22" pos:end="77:22">&amp;</operator><name pos:start="77:23" pos:end="77:35"><name pos:start="77:23" pos:end="77:24">sc</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:35">ctts_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:31"><expr pos:start="79:13" pos:end="79:30"><name pos:start="79:13" pos:end="79:26"><name pos:start="79:13" pos:end="79:14">sc</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:26">ctts_count</name></name> <operator pos:start="79:28" pos:end="79:28">=</operator> <literal type="number" pos:start="79:30" pos:end="79:30">0</literal></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:21">return <expr pos:start="81:20" pos:end="81:20"><literal type="number" pos:start="81:20" pos:end="81:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="87:9" pos:end="89:47"><if pos:start="87:9" pos:end="89:47">if <condition pos:start="87:12" pos:end="87:24">(<expr pos:start="87:13" pos:end="87:23"><name pos:start="87:13" pos:end="87:13">i</name><operator pos:start="87:14" pos:end="87:14">+</operator><literal type="number" pos:start="87:15" pos:end="87:15">2</literal><operator pos:start="87:16" pos:end="87:16">&lt;</operator><name pos:start="87:17" pos:end="87:23">entries</name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:47"><block_content pos:start="89:13" pos:end="89:47">

            <expr_stmt pos:start="89:13" pos:end="89:47"><expr pos:start="89:13" pos:end="89:46"><call pos:start="89:13" pos:end="89:46"><name pos:start="89:13" pos:end="89:32">mov_update_dts_shift</name><argument_list pos:start="89:33" pos:end="89:46">(<argument pos:start="89:34" pos:end="89:35"><expr pos:start="89:34" pos:end="89:35"><name pos:start="89:34" pos:end="89:35">sc</name></expr></argument>, <argument pos:start="89:38" pos:end="89:45"><expr pos:start="89:38" pos:end="89:45"><name pos:start="89:38" pos:end="89:45">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="95:5" pos:end="95:23"><expr pos:start="95:5" pos:end="95:22"><name pos:start="95:5" pos:end="95:18"><name pos:start="95:5" pos:end="95:6">sc</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:18">ctts_count</name></name> <operator pos:start="95:20" pos:end="95:20">=</operator> <name pos:start="95:22" pos:end="95:22">i</name></expr>;</expr_stmt>



    <if_stmt pos:start="99:5" pos:end="101:27"><if pos:start="99:5" pos:end="101:27">if <condition pos:start="99:8" pos:end="99:24">(<expr pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:10">pb</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:23">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:27"><block_content pos:start="101:9" pos:end="101:27">

        <return pos:start="101:9" pos:end="101:27">return <expr pos:start="101:16" pos:end="101:26"><name pos:start="101:16" pos:end="101:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:65"><expr pos:start="105:5" pos:end="105:64"><call pos:start="105:5" pos:end="105:64"><name pos:start="105:5" pos:end="105:10">av_log</name><argument_list pos:start="105:11" pos:end="105:64">(<argument pos:start="105:12" pos:end="105:16"><expr pos:start="105:12" pos:end="105:16"><name pos:start="105:12" pos:end="105:16"><name pos:start="105:12" pos:end="105:12">c</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:16">fc</name></name></expr></argument>, <argument pos:start="105:19" pos:end="105:30"><expr pos:start="105:19" pos:end="105:30"><name pos:start="105:19" pos:end="105:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="105:33" pos:end="105:48"><expr pos:start="105:33" pos:end="105:48"><literal type="string" pos:start="105:33" pos:end="105:48">"dts shift %d\n"</literal></expr></argument>, <argument pos:start="105:51" pos:end="105:63"><expr pos:start="105:51" pos:end="105:63"><name pos:start="105:51" pos:end="105:63"><name pos:start="105:51" pos:end="105:52">sc</name><operator pos:start="105:53" pos:end="105:54">-&gt;</operator><name pos:start="105:55" pos:end="105:63">dts_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
