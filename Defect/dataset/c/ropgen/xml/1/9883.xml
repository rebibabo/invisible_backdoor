<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9883.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:39"><name pos:start="1:1" pos:end="1:25">qio_channel_socket_accept</name><argument_list pos:start="1:26" pos:end="3:39">(<argument pos:start="1:27" pos:end="1:47">QIOChannelSocket *ioc</argument>,

                          <argument pos:start="3:27" pos:end="3:38">Error **errp</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:16">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">QIOChannelSocket</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:26">cioc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:8">cioc</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:35"><name pos:start="11:12" pos:end="11:33">qio_channel_socket_new</name><argument_list pos:start="11:34" pos:end="11:35">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:50"><expr pos:start="13:5" pos:end="13:49"><name pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:8">cioc</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:23">remoteAddrLen</name></name> <operator pos:start="13:25" pos:end="13:25">=</operator> <sizeof pos:start="13:27" pos:end="13:49">sizeof<argument_list pos:start="13:33" pos:end="13:49">(<argument pos:start="13:34" pos:end="13:48"><expr pos:start="13:34" pos:end="13:48"><name pos:start="13:34" pos:end="13:48"><name pos:start="13:34" pos:end="13:36">ioc</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:48">remoteAddr</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:48"><expr pos:start="15:5" pos:end="15:47"><name pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:8">cioc</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:22">localAddrLen</name></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <sizeof pos:start="15:26" pos:end="15:47">sizeof<argument_list pos:start="15:32" pos:end="15:47">(<argument pos:start="15:33" pos:end="15:46"><expr pos:start="15:33" pos:end="15:46"><name pos:start="15:33" pos:end="15:46"><name pos:start="15:33" pos:end="15:35">ioc</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:46">localAddr</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



 <label pos:start="19:2" pos:end="19:7"><name pos:start="19:2" pos:end="19:6">retry</name>:</label>

    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><call pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:35">trace_qio_channel_socket_accept</name><argument_list pos:start="21:36" pos:end="21:40">(<argument pos:start="21:37" pos:end="21:39"><expr pos:start="21:37" pos:end="21:39"><name pos:start="21:37" pos:end="21:39">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:49"><expr pos:start="23:5" pos:end="25:48"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:8">cioc</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:12">fd</name></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="25:48"><name pos:start="23:16" pos:end="23:26">qemu_accept</name><argument_list pos:start="23:27" pos:end="25:48">(<argument pos:start="23:28" pos:end="23:34"><expr pos:start="23:28" pos:end="23:34"><name pos:start="23:28" pos:end="23:34"><name pos:start="23:28" pos:end="23:30">ioc</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:34">fd</name></name></expr></argument>, <argument pos:start="23:37" pos:end="23:72"><expr pos:start="23:37" pos:end="23:72"><operator pos:start="23:37" pos:end="23:37">(</operator>struct <name pos:start="23:45" pos:end="23:52">sockaddr</name> <operator pos:start="23:54" pos:end="23:54">*</operator><operator pos:start="23:55" pos:end="23:55">)</operator><operator pos:start="23:56" pos:end="23:56">&amp;</operator><name pos:start="23:57" pos:end="23:72"><name pos:start="23:57" pos:end="23:60">cioc</name><operator pos:start="23:61" pos:end="23:62">-&gt;</operator><name pos:start="23:63" pos:end="23:72">remoteAddr</name></name></expr></argument>,

                           <argument pos:start="25:28" pos:end="25:47"><expr pos:start="25:28" pos:end="25:47"><operator pos:start="25:28" pos:end="25:28">&amp;</operator><name pos:start="25:29" pos:end="25:47"><name pos:start="25:29" pos:end="25:32">cioc</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:47">remoteAddrLen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="39:5"><if pos:start="27:5" pos:end="39:5">if <condition pos:start="27:8" pos:end="27:21">(<expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:12">cioc</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:16">fd</name></name> <operator pos:start="27:18" pos:end="27:18">&lt;</operator> <literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>)</condition> <block pos:start="27:23" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:19">

        <expr_stmt pos:start="29:9" pos:end="29:50"><expr pos:start="29:9" pos:end="29:49"><call pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:44">trace_qio_channel_socket_accept_fail</name><argument_list pos:start="29:45" pos:end="29:49">(<argument pos:start="29:46" pos:end="29:48"><expr pos:start="29:46" pos:end="29:48"><name pos:start="29:46" pos:end="29:48">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:27">(<expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:17">errno</name> <operator pos:start="31:19" pos:end="31:20">==</operator> <name pos:start="31:22" pos:end="31:26">EINTR</name></expr>)</condition> <block pos:start="31:29" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:23">

            <goto pos:start="33:13" pos:end="33:23">goto <name pos:start="33:18" pos:end="33:22">retry</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="37:9" pos:end="37:19">goto <name pos:start="37:14" pos:end="37:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="58:0"><if pos:start="43:5" pos:end="58:0">if <condition pos:start="43:8" pos:end="45:45">(<expr pos:start="43:9" pos:end="45:44"><call pos:start="43:9" pos:end="45:40"><name pos:start="43:9" pos:end="43:19">getsockname</name><argument_list pos:start="43:20" pos:end="45:40">(<argument pos:start="43:21" pos:end="43:28"><expr pos:start="43:21" pos:end="43:28"><name pos:start="43:21" pos:end="43:28"><name pos:start="43:21" pos:end="43:24">cioc</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:28">fd</name></name></expr></argument>, <argument pos:start="43:31" pos:end="43:65"><expr pos:start="43:31" pos:end="43:65"><operator pos:start="43:31" pos:end="43:31">(</operator>struct <name pos:start="43:39" pos:end="43:46">sockaddr</name> <operator pos:start="43:48" pos:end="43:48">*</operator><operator pos:start="43:49" pos:end="43:49">)</operator><operator pos:start="43:50" pos:end="43:50">&amp;</operator><name pos:start="43:51" pos:end="43:65"><name pos:start="43:51" pos:end="43:54">cioc</name><operator pos:start="43:55" pos:end="43:56">-&gt;</operator><name pos:start="43:57" pos:end="43:65">localAddr</name></name></expr></argument>,

                    <argument pos:start="45:21" pos:end="45:39"><expr pos:start="45:21" pos:end="45:39"><operator pos:start="45:21" pos:end="45:21">&amp;</operator><name pos:start="45:22" pos:end="45:39"><name pos:start="45:22" pos:end="45:25">cioc</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:39">localAddrLen</name></name></expr></argument>)</argument_list></call> <operator pos:start="45:42" pos:end="45:42">&lt;</operator> <literal type="number" pos:start="45:44" pos:end="45:44">0</literal></expr>)</condition> <block pos:start="45:47" pos:end="58:0">{<block_content pos:start="47:9" pos:end="51:19">

        <expr_stmt pos:start="47:9" pos:end="49:65"><expr pos:start="47:9" pos:end="49:64"><call pos:start="47:9" pos:end="49:64"><name pos:start="47:9" pos:end="47:24">error_setg_errno</name><argument_list pos:start="47:25" pos:end="49:64">(<argument pos:start="47:26" pos:end="47:29"><expr pos:start="47:26" pos:end="47:29"><name pos:start="47:26" pos:end="47:29">errp</name></expr></argument>, <argument pos:start="47:32" pos:end="47:36"><expr pos:start="47:32" pos:end="47:36"><name pos:start="47:32" pos:end="47:36">errno</name></expr></argument>,

                         <argument pos:start="49:26" pos:end="49:63"><expr pos:start="49:26" pos:end="49:63"><literal type="string" pos:start="49:26" pos:end="49:63">"Unable to query local socket address"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:19">goto <name pos:start="51:14" pos:end="51:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:ifndef pos:start="57:1" pos:end="57:13">#<cpp:directive pos:start="57:2" pos:end="57:7">ifndef</cpp:directive> <name pos:start="57:9" pos:end="57:13">WIN32</name></cpp:ifndef>

    <if_stmt pos:start="59:5" pos:end="68:0"><if pos:start="59:5" pos:end="68:0">if <condition pos:start="59:8" pos:end="59:45">(<expr pos:start="59:9" pos:end="59:44"><name pos:start="59:9" pos:end="59:33"><name pos:start="59:9" pos:end="59:12">cioc</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:23">localAddr</name><operator pos:start="59:24" pos:end="59:24">.</operator><name pos:start="59:25" pos:end="59:33">ss_family</name></name> <operator pos:start="59:35" pos:end="59:36">==</operator> <name pos:start="59:38" pos:end="59:44">AF_UNIX</name></expr>)</condition> <block pos:start="59:47" pos:end="68:0">{<block_content pos:start="61:9" pos:end="63:72">

        <decl_stmt pos:start="61:9" pos:end="61:50"><decl pos:start="61:9" pos:end="61:49"><type pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:18">QIOChannel</name> <modifier pos:start="61:20" pos:end="61:20">*</modifier></type><name pos:start="61:21" pos:end="61:29">ioc_local</name> <init pos:start="61:31" pos:end="61:49">= <expr pos:start="61:33" pos:end="61:49"><call pos:start="61:33" pos:end="61:49"><name pos:start="61:33" pos:end="61:43">QIO_CHANNEL</name><argument_list pos:start="61:44" pos:end="61:49">(<argument pos:start="61:45" pos:end="61:48"><expr pos:start="61:45" pos:end="61:48"><name pos:start="61:45" pos:end="61:48">cioc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:72"><expr pos:start="63:9" pos:end="63:71"><call pos:start="63:9" pos:end="63:71"><name pos:start="63:9" pos:end="63:31">qio_channel_set_feature</name><argument_list pos:start="63:32" pos:end="63:71">(<argument pos:start="63:33" pos:end="63:41"><expr pos:start="63:33" pos:end="63:41"><name pos:start="63:33" pos:end="63:41">ioc_local</name></expr></argument>, <argument pos:start="63:44" pos:end="63:70"><expr pos:start="63:44" pos:end="63:70"><name pos:start="63:44" pos:end="63:70">QIO_CHANNEL_FEATURE_FD_PASS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="67:8" pos:end="67:18">/* WIN32 */</comment>



    <expr_stmt pos:start="71:5" pos:end="71:66"><expr pos:start="71:5" pos:end="71:65"><call pos:start="71:5" pos:end="71:65"><name pos:start="71:5" pos:end="71:44">trace_qio_channel_socket_accept_complete</name><argument_list pos:start="71:45" pos:end="71:65">(<argument pos:start="71:46" pos:end="71:48"><expr pos:start="71:46" pos:end="71:48"><name pos:start="71:46" pos:end="71:48">ioc</name></expr></argument>, <argument pos:start="71:51" pos:end="71:54"><expr pos:start="71:51" pos:end="71:54"><name pos:start="71:51" pos:end="71:54">cioc</name></expr></argument>, <argument pos:start="71:57" pos:end="71:64"><expr pos:start="71:57" pos:end="71:64"><name pos:start="71:57" pos:end="71:64"><name pos:start="71:57" pos:end="71:60">cioc</name><operator pos:start="71:61" pos:end="71:62">-&gt;</operator><name pos:start="71:63" pos:end="71:64">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:16">return <expr pos:start="73:12" pos:end="73:15"><name pos:start="73:12" pos:end="73:15">cioc</name></expr>;</return>



 <label pos:start="77:2" pos:end="77:7"><name pos:start="77:2" pos:end="77:6">error</name>:</label>

    <expr_stmt pos:start="79:5" pos:end="79:31"><expr pos:start="79:5" pos:end="79:30"><call pos:start="79:5" pos:end="79:30"><name pos:start="79:5" pos:end="79:16">object_unref</name><argument_list pos:start="79:17" pos:end="79:30">(<argument pos:start="79:18" pos:end="79:29"><expr pos:start="79:18" pos:end="79:29"><call pos:start="79:18" pos:end="79:29"><name pos:start="79:18" pos:end="79:23">OBJECT</name><argument_list pos:start="79:24" pos:end="79:29">(<argument pos:start="79:25" pos:end="79:28"><expr pos:start="79:25" pos:end="79:28"><name pos:start="79:25" pos:end="79:28">cioc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="81:5" pos:end="81:16">return <expr pos:start="81:12" pos:end="81:15"><name pos:start="81:12" pos:end="81:15">NULL</name></expr>;</return>

</block_content>}</block>
</unit>
