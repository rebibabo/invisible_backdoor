<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26045.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">scsi_command_complete</name><parameter_list pos:start="1:34" pos:end="1:56">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">opaque</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:55"><decl pos:start="1:49" pos:end="1:55"><type pos:start="1:49" pos:end="1:55"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:55">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:31">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SCSIGenericReq</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">r</name> <init pos:start="5:23" pos:end="5:48">= <expr pos:start="5:25" pos:end="5:48"><operator pos:start="5:25" pos:end="5:25">(</operator><name pos:start="5:26" pos:end="5:39">SCSIGenericReq</name> <operator pos:start="5:41" pos:end="5:41">*</operator><operator pos:start="5:42" pos:end="5:42">)</operator><name pos:start="5:43" pos:end="5:48">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:72"><decl pos:start="7:5" pos:end="7:71"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">SCSIGenericState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">s</name> <init pos:start="7:25" pos:end="7:71">= <expr pos:start="7:27" pos:end="7:71"><call pos:start="7:27" pos:end="7:71"><name pos:start="7:27" pos:end="7:35">DO_UPCAST</name><argument_list pos:start="7:36" pos:end="7:71">(<argument pos:start="7:37" pos:end="7:52"><expr pos:start="7:37" pos:end="7:52"><name pos:start="7:37" pos:end="7:52">SCSIGenericState</name></expr></argument>, <argument pos:start="7:55" pos:end="7:58"><expr pos:start="7:55" pos:end="7:58"><name pos:start="7:55" pos:end="7:58">qdev</name></expr></argument>, <argument pos:start="7:61" pos:end="7:70"><expr pos:start="7:61" pos:end="7:70"><name pos:start="7:61" pos:end="7:70"><name pos:start="7:61" pos:end="7:61">r</name><operator pos:start="7:62" pos:end="7:63">-&gt;</operator><name pos:start="7:64" pos:end="7:66">req</name><operator pos:start="7:67" pos:end="7:67">.</operator><name pos:start="7:68" pos:end="7:70">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:5">r</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:10">req</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:16">aiocb</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:23">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:50"><expr pos:start="13:5" pos:end="13:49"><name pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:20">driver_status</name></name> <operator pos:start="13:22" pos:end="13:22">=</operator> <name pos:start="13:24" pos:end="13:49"><name pos:start="13:24" pos:end="13:24">r</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:35">io_header</name><operator pos:start="13:36" pos:end="13:36">.</operator><name pos:start="13:37" pos:end="13:49">driver_status</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:45"><if pos:start="15:5" pos:end="17:45">if <condition pos:start="15:8" pos:end="15:47">(<expr pos:start="15:9" pos:end="15:46"><name pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:24">driver_status</name></name> <operator pos:start="15:26" pos:end="15:26">&amp;</operator> <name pos:start="15:28" pos:end="15:46">SG_ERR_DRIVER_SENSE</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:45"><block_content pos:start="17:9" pos:end="17:45">

        <expr_stmt pos:start="17:9" pos:end="17:45"><expr pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:19">senselen</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:44"><name pos:start="17:23" pos:end="17:23">r</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:34">io_header</name><operator pos:start="17:35" pos:end="17:35">.</operator><name pos:start="17:36" pos:end="17:44">sb_len_wr</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="45:5"><if pos:start="21:5" pos:end="23:29">if <condition pos:start="21:8" pos:end="21:17">(<expr pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:14">!=</operator> <literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:29"><block_content pos:start="23:9" pos:end="23:29">

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:9">r</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:14">req</name><operator pos:start="23:15" pos:end="23:15">.</operator><name pos:start="23:16" pos:end="23:21">status</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <name pos:start="23:25" pos:end="23:28">BUSY</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="25:5" pos:end="45:5">else <block pos:start="25:10" pos:end="45:5">{<block_content pos:start="27:9" pos:end="43:33">

        <if_stmt pos:start="27:9" pos:end="43:33"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:53">(<expr pos:start="27:13" pos:end="27:52"><name pos:start="27:13" pos:end="27:28"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:28">driver_status</name></name> <operator pos:start="27:30" pos:end="27:30">&amp;</operator> <name pos:start="27:32" pos:end="27:52">SG_ERR_DRIVER_TIMEOUT</name></expr>)</condition> <block pos:start="27:55" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:37">

            <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:13">r</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:18">req</name><operator pos:start="29:19" pos:end="29:19">.</operator><name pos:start="29:20" pos:end="29:25">status</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:32">BUSY</name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:37"><expr pos:start="31:13" pos:end="31:36"><call pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:16">BADF</name><argument_list pos:start="31:17" pos:end="31:36">(<argument pos:start="31:18" pos:end="31:35"><expr pos:start="31:18" pos:end="31:35"><literal type="string" pos:start="31:18" pos:end="31:35">"Driver Timeout\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="33:11" pos:end="35:48">else if <condition pos:start="33:19" pos:end="33:39">(<expr pos:start="33:20" pos:end="33:38"><name pos:start="33:20" pos:end="33:38"><name pos:start="33:20" pos:end="33:20">r</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:31">io_header</name><operator pos:start="33:32" pos:end="33:32">.</operator><name pos:start="33:33" pos:end="33:38">status</name></name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:48"><block_content pos:start="35:13" pos:end="35:48">

            <expr_stmt pos:start="35:13" pos:end="35:48"><expr pos:start="35:13" pos:end="35:47"><name pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:13">r</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:18">req</name><operator pos:start="35:19" pos:end="35:19">.</operator><name pos:start="35:20" pos:end="35:25">status</name></name> <operator pos:start="35:27" pos:end="35:27">=</operator> <name pos:start="35:29" pos:end="35:47"><name pos:start="35:29" pos:end="35:29">r</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:40">io_header</name><operator pos:start="35:41" pos:end="35:41">.</operator><name pos:start="35:42" pos:end="35:47">status</name></name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="37:9" pos:end="39:44">else if <condition pos:start="37:17" pos:end="37:56">(<expr pos:start="37:18" pos:end="37:55"><name pos:start="37:18" pos:end="37:33"><name pos:start="37:18" pos:end="37:18">s</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:33">driver_status</name></name> <operator pos:start="37:35" pos:end="37:35">&amp;</operator> <name pos:start="37:37" pos:end="37:55">SG_ERR_DRIVER_SENSE</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:44"><block_content pos:start="39:13" pos:end="39:44">

            <expr_stmt pos:start="39:13" pos:end="39:44"><expr pos:start="39:13" pos:end="39:43"><name pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:13">r</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:18">req</name><operator pos:start="39:19" pos:end="39:19">.</operator><name pos:start="39:20" pos:end="39:25">status</name></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:43">CHECK_CONDITION</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="41:9" pos:end="43:33">else<block type="pseudo" pos:start="43:13" pos:end="43:33"><block_content pos:start="43:13" pos:end="43:33">

            <expr_stmt pos:start="43:13" pos:end="43:33"><expr pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:13">r</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:18">req</name><operator pos:start="43:19" pos:end="43:19">.</operator><name pos:start="43:20" pos:end="43:25">status</name></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <name pos:start="43:29" pos:end="43:32">GOOD</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="49:42"><expr pos:start="47:5" pos:end="49:41"><call pos:start="47:5" pos:end="49:41"><name pos:start="47:5" pos:end="47:11">DPRINTF</name><argument_list pos:start="47:12" pos:end="49:41">(<argument pos:start="47:13" pos:end="47:56"><expr pos:start="47:13" pos:end="47:56"><literal type="string" pos:start="47:13" pos:end="47:56">"Command complete 0x%p tag=0x%x status=%d\n"</literal></expr></argument>,

            <argument pos:start="49:13" pos:end="49:13"><expr pos:start="49:13" pos:end="49:13"><name pos:start="49:13" pos:end="49:13">r</name></expr></argument>, <argument pos:start="49:16" pos:end="49:25"><expr pos:start="49:16" pos:end="49:25"><name pos:start="49:16" pos:end="49:25"><name pos:start="49:16" pos:end="49:16">r</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:21">req</name><operator pos:start="49:22" pos:end="49:22">.</operator><name pos:start="49:23" pos:end="49:25">tag</name></name></expr></argument>, <argument pos:start="49:28" pos:end="49:40"><expr pos:start="49:28" pos:end="49:40"><name pos:start="49:28" pos:end="49:40"><name pos:start="49:28" pos:end="49:28">r</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:33">req</name><operator pos:start="49:34" pos:end="49:34">.</operator><name pos:start="49:35" pos:end="49:40">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:31"><expr pos:start="53:5" pos:end="53:30"><call pos:start="53:5" pos:end="53:30"><name pos:start="53:5" pos:end="53:21">scsi_req_complete</name><argument_list pos:start="53:22" pos:end="53:30">(<argument pos:start="53:23" pos:end="53:29"><expr pos:start="53:23" pos:end="53:29"><operator pos:start="53:23" pos:end="53:23">&amp;</operator><name pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:24">r</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:29">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
