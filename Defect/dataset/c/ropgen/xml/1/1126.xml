<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1126.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">read_tfra</name><parameter_list pos:start="1:21" pos:end="1:53">(<parameter pos:start="1:22" pos:end="1:36"><decl pos:start="1:22" pos:end="1:36"><type pos:start="1:22" pos:end="1:36"><name pos:start="1:22" pos:end="1:31">MOVContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">mov</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:52"><name pos:start="1:39" pos:end="1:49">AVIOContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:20">MOVFragmentIndex</name><modifier pos:start="5:21" pos:end="5:21">*</modifier></type> <name pos:start="5:23" pos:end="5:27">index</name> <init pos:start="5:29" pos:end="5:34">= <expr pos:start="5:31" pos:end="5:34"><name pos:start="5:31" pos:end="5:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">version</name></decl>, <decl pos:start="7:18" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:28">fieldlength</name></decl>, <decl pos:start="7:31" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:31" pos:end="7:31">i</name></decl>, <decl pos:start="7:34" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:34" pos:end="7:34">j</name></decl>, <decl pos:start="7:37" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:37" pos:end="7:39">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:15">pos</name> <init pos:start="9:17" pos:end="9:30">= <expr pos:start="9:19" pos:end="9:30"><call pos:start="9:19" pos:end="9:30"><name pos:start="9:19" pos:end="9:27">avio_tell</name><argument_list pos:start="9:28" pos:end="9:30">(<argument pos:start="9:29" pos:end="9:29"><expr pos:start="9:29" pos:end="9:29"><name pos:start="9:29" pos:end="9:29">f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:17">size</name> <init pos:start="11:19" pos:end="11:32">= <expr pos:start="11:21" pos:end="11:32"><call pos:start="11:21" pos:end="11:32"><name pos:start="11:21" pos:end="11:29">avio_rb32</name><argument_list pos:start="11:30" pos:end="11:32">(<argument pos:start="11:31" pos:end="11:31"><expr pos:start="11:31" pos:end="11:31"><name pos:start="11:31" pos:end="11:31">f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:52">(<expr pos:start="13:9" pos:end="13:51"><call pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:17">avio_rb32</name><argument_list pos:start="13:18" pos:end="13:20">(<argument pos:start="13:19" pos:end="13:19"><expr pos:start="13:19" pos:end="13:19"><name pos:start="13:19" pos:end="13:19">f</name></expr></argument>)</argument_list></call> <operator pos:start="13:22" pos:end="13:23">!=</operator> <call pos:start="13:25" pos:end="13:51"><name pos:start="13:25" pos:end="13:31">MKBETAG</name><argument_list pos:start="13:32" pos:end="13:51">(<argument pos:start="13:33" pos:end="13:35"><expr pos:start="13:33" pos:end="13:35"><literal type="char" pos:start="13:33" pos:end="13:35">'t'</literal></expr></argument>, <argument pos:start="13:38" pos:end="13:40"><expr pos:start="13:38" pos:end="13:40"><literal type="char" pos:start="13:38" pos:end="13:40">'f'</literal></expr></argument>, <argument pos:start="13:43" pos:end="13:45"><expr pos:start="13:43" pos:end="13:45"><literal type="char" pos:start="13:43" pos:end="13:45">'r'</literal></expr></argument>, <argument pos:start="13:48" pos:end="13:50"><expr pos:start="13:48" pos:end="13:50"><literal type="char" pos:start="13:48" pos:end="13:50">'a'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:54" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:18">

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:52"><expr pos:start="19:5" pos:end="19:51"><call pos:start="19:5" pos:end="19:51"><name pos:start="19:5" pos:end="19:10">av_log</name><argument_list pos:start="19:11" pos:end="19:51">(<argument pos:start="19:12" pos:end="19:18"><expr pos:start="19:12" pos:end="19:18"><name pos:start="19:12" pos:end="19:18"><name pos:start="19:12" pos:end="19:14">mov</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:18">fc</name></name></expr></argument>, <argument pos:start="19:21" pos:end="19:34"><expr pos:start="19:21" pos:end="19:34"><name pos:start="19:21" pos:end="19:34">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="19:37" pos:end="19:50"><expr pos:start="19:37" pos:end="19:50"><literal type="string" pos:start="19:37" pos:end="19:50">"found tfra\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:9">index</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:48"><name pos:start="21:13" pos:end="21:22">av_mallocz</name><argument_list pos:start="21:23" pos:end="21:48">(<argument pos:start="21:24" pos:end="21:47"><expr pos:start="21:24" pos:end="21:47"><sizeof pos:start="21:24" pos:end="21:47">sizeof<argument_list pos:start="21:30" pos:end="21:47">(<argument pos:start="21:31" pos:end="21:46"><expr pos:start="21:31" pos:end="21:46"><name pos:start="21:31" pos:end="21:46">MOVFragmentIndex</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:15">(<expr pos:start="23:9" pos:end="23:14"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:14">index</name></expr>)</condition> <block pos:start="23:17" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:31">

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:7">mov</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:29">fragment_index_count</name></name><operator pos:start="29:30" pos:end="29:31">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="41:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="35:59">(<expr pos:start="31:9" pos:end="35:58"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:12">err</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="35:53"><name pos:start="31:16" pos:end="31:26">av_reallocp</name><argument_list pos:start="31:27" pos:end="35:53">(<argument pos:start="31:28" pos:end="31:52"><expr pos:start="31:28" pos:end="31:52"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:52"><name pos:start="31:29" pos:end="31:31">mov</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:52">fragment_index_data</name></name></expr></argument>,

                           <argument pos:start="33:28" pos:end="35:52"><expr pos:start="33:28" pos:end="35:52"><name pos:start="33:28" pos:end="33:52"><name pos:start="33:28" pos:end="33:30">mov</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:52">fragment_index_count</name></name> <operator pos:start="33:54" pos:end="33:54">*</operator>

                           <sizeof pos:start="35:28" pos:end="35:52">sizeof<argument_list pos:start="35:34" pos:end="35:52">(<argument pos:start="35:35" pos:end="35:51"><expr pos:start="35:35" pos:end="35:51"><name pos:start="35:35" pos:end="35:50">MOVFragmentIndex</name><operator pos:start="35:51" pos:end="35:51">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="35:54" pos:end="35:54">)</operator> <operator pos:start="35:56" pos:end="35:56">&lt;</operator> <literal type="number" pos:start="35:58" pos:end="35:58">0</literal></expr>)</condition> <block pos:start="35:61" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:19">

        <expr_stmt pos:start="37:9" pos:end="37:25"><expr pos:start="37:9" pos:end="37:24"><call pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:16">av_freep</name><argument_list pos:start="37:17" pos:end="37:24">(<argument pos:start="37:18" pos:end="37:23"><expr pos:start="37:18" pos:end="37:23"><operator pos:start="37:18" pos:end="37:18">&amp;</operator><name pos:start="37:19" pos:end="37:23">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:19">return <expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">err</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:14"><expr pos:start="43:5" pos:end="45:13"><name pos:start="43:5" pos:end="43:59"><name pos:start="43:5" pos:end="43:7">mov</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:28">fragment_index_data</name><index pos:start="43:29" pos:end="43:59">[<expr pos:start="43:30" pos:end="43:58"><name pos:start="43:30" pos:end="43:54"><name pos:start="43:30" pos:end="43:32">mov</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:54">fragment_index_count</name></name> <operator pos:start="43:56" pos:end="43:56">-</operator> <literal type="number" pos:start="43:58" pos:end="43:58">1</literal></expr>]</index></name> <operator pos:start="43:61" pos:end="43:61">=</operator>

        <name pos:start="45:9" pos:end="45:13">index</name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:25"><expr pos:start="49:5" pos:end="49:24"><name pos:start="49:5" pos:end="49:11">version</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:24"><name pos:start="49:15" pos:end="49:21">avio_r8</name><argument_list pos:start="49:22" pos:end="49:24">(<argument pos:start="49:23" pos:end="49:23"><expr pos:start="49:23" pos:end="49:23"><name pos:start="49:23" pos:end="49:23">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:17"><expr pos:start="51:5" pos:end="51:16"><call pos:start="51:5" pos:end="51:16"><name pos:start="51:5" pos:end="51:13">avio_rb24</name><argument_list pos:start="51:14" pos:end="51:16">(<argument pos:start="51:15" pos:end="51:15"><expr pos:start="51:15" pos:end="51:15"><name pos:start="51:15" pos:end="51:15">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:35"><expr pos:start="53:5" pos:end="53:34"><name pos:start="53:5" pos:end="53:19"><name pos:start="53:5" pos:end="53:9">index</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:19">track_id</name></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:31">avio_rb32</name><argument_list pos:start="53:32" pos:end="53:34">(<argument pos:start="53:33" pos:end="53:33"><expr pos:start="53:33" pos:end="53:33"><name pos:start="53:33" pos:end="53:33">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:31"><expr pos:start="55:5" pos:end="55:30"><name pos:start="55:5" pos:end="55:15">fieldlength</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:30"><name pos:start="55:19" pos:end="55:27">avio_rb32</name><argument_list pos:start="55:28" pos:end="55:30">(<argument pos:start="55:29" pos:end="55:29"><expr pos:start="55:29" pos:end="55:29"><name pos:start="55:29" pos:end="55:29">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:37"><expr pos:start="57:5" pos:end="57:36"><name pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:9">index</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:21">item_count</name></name> <operator pos:start="57:23" pos:end="57:23">=</operator> <call pos:start="57:25" pos:end="57:36"><name pos:start="57:25" pos:end="57:33">avio_rb32</name><argument_list pos:start="57:34" pos:end="57:36">(<argument pos:start="57:35" pos:end="57:35"><expr pos:start="57:35" pos:end="57:35"><name pos:start="57:35" pos:end="57:35">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="61:62"><expr pos:start="59:5" pos:end="61:61"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:9">index</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:16">items</name></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <call pos:start="59:20" pos:end="61:61"><name pos:start="59:20" pos:end="59:29">av_mallocz</name><argument_list pos:start="59:30" pos:end="61:61">(

            <argument pos:start="61:13" pos:end="61:60"><expr pos:start="61:13" pos:end="61:60"><name pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:17">index</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:29">item_count</name></name> <operator pos:start="61:31" pos:end="61:31">*</operator> <sizeof pos:start="61:33" pos:end="61:60">sizeof<argument_list pos:start="61:39" pos:end="61:60">(<argument pos:start="61:40" pos:end="61:59"><expr pos:start="61:40" pos:end="61:59"><name pos:start="61:40" pos:end="61:59">MOVFragmentIndexItem</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:22">(<expr pos:start="63:9" pos:end="63:21"><operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:21"><name pos:start="63:10" pos:end="63:14">index</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:21">items</name></name></expr>)</condition> <block pos:start="63:24" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:31">

        <return pos:start="65:9" pos:end="65:31">return <expr pos:start="65:16" pos:end="65:30"><call pos:start="65:16" pos:end="65:30"><name pos:start="65:16" pos:end="65:22">AVERROR</name><argument_list pos:start="65:23" pos:end="65:30">(<argument pos:start="65:24" pos:end="65:29"><expr pos:start="65:24" pos:end="65:29"><name pos:start="65:24" pos:end="65:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="69:5" pos:end="103:5">for <control pos:start="69:9" pos:end="69:43">(<init pos:start="69:10" pos:end="69:15"><expr pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:10">i</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</init> <condition pos:start="69:17" pos:end="69:38"><expr pos:start="69:17" pos:end="69:37"><name pos:start="69:17" pos:end="69:17">i</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <name pos:start="69:21" pos:end="69:37"><name pos:start="69:21" pos:end="69:25">index</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:37">item_count</name></name></expr>;</condition> <incr pos:start="69:40" pos:end="69:42"><expr pos:start="69:40" pos:end="69:42"><name pos:start="69:40" pos:end="69:40">i</name><operator pos:start="69:41" pos:end="69:42">++</operator></expr></incr>)</control> <block pos:start="69:45" pos:end="103:5">{<block_content pos:start="71:9" pos:end="101:23">

        <decl_stmt pos:start="71:9" pos:end="71:29"><decl pos:start="71:9" pos:end="71:20"><type pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:15">int64_t</name></type> <name pos:start="71:17" pos:end="71:20">time</name></decl>, <decl pos:start="71:23" pos:end="71:28"><type ref="prev" pos:start="71:9" pos:end="71:15"/><name pos:start="71:23" pos:end="71:28">offset</name></decl>;</decl_stmt>

        <if_stmt pos:start="73:9" pos:end="85:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:25">(<expr pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:19">version</name> <operator pos:start="73:21" pos:end="73:22">==</operator> <literal type="number" pos:start="73:24" pos:end="73:24">1</literal></expr>)</condition> <block pos:start="73:27" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:34">

            <expr_stmt pos:start="75:13" pos:end="75:34"><expr pos:start="75:13" pos:end="75:33"><name pos:start="75:13" pos:end="75:16">time</name>   <operator pos:start="75:20" pos:end="75:20">=</operator> <call pos:start="75:22" pos:end="75:33"><name pos:start="75:22" pos:end="75:30">avio_rb64</name><argument_list pos:start="75:31" pos:end="75:33">(<argument pos:start="75:32" pos:end="75:32"><expr pos:start="75:32" pos:end="75:32"><name pos:start="75:32" pos:end="75:32">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:34"><expr pos:start="77:13" pos:end="77:33"><name pos:start="77:13" pos:end="77:18">offset</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <call pos:start="77:22" pos:end="77:33"><name pos:start="77:22" pos:end="77:30">avio_rb64</name><argument_list pos:start="77:31" pos:end="77:33">(<argument pos:start="77:32" pos:end="77:32"><expr pos:start="77:32" pos:end="77:32"><name pos:start="77:32" pos:end="77:32">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="79:11" pos:end="85:9">else <block pos:start="79:16" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:34">

            <expr_stmt pos:start="81:13" pos:end="81:34"><expr pos:start="81:13" pos:end="81:33"><name pos:start="81:13" pos:end="81:16">time</name>   <operator pos:start="81:20" pos:end="81:20">=</operator> <call pos:start="81:22" pos:end="81:33"><name pos:start="81:22" pos:end="81:30">avio_rb32</name><argument_list pos:start="81:31" pos:end="81:33">(<argument pos:start="81:32" pos:end="81:32"><expr pos:start="81:32" pos:end="81:32"><name pos:start="81:32" pos:end="81:32">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:34"><expr pos:start="83:13" pos:end="83:33"><name pos:start="83:13" pos:end="83:18">offset</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <call pos:start="83:22" pos:end="83:33"><name pos:start="83:22" pos:end="83:30">avio_rb32</name><argument_list pos:start="83:31" pos:end="83:33">(<argument pos:start="83:32" pos:end="83:32"><expr pos:start="83:32" pos:end="83:32"><name pos:start="83:32" pos:end="83:32">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:36"><expr pos:start="87:9" pos:end="87:35"><name pos:start="87:9" pos:end="87:23"><name pos:start="87:9" pos:end="87:13">index</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:20">items</name><index pos:start="87:21" pos:end="87:23">[<expr pos:start="87:22" pos:end="87:22"><name pos:start="87:22" pos:end="87:22">i</name></expr>]</index></name><operator pos:start="87:24" pos:end="87:24">.</operator><name pos:start="87:25" pos:end="87:28">time</name> <operator pos:start="87:30" pos:end="87:30">=</operator> <name pos:start="87:32" pos:end="87:35">time</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:45"><expr pos:start="89:9" pos:end="89:44"><name pos:start="89:9" pos:end="89:23"><name pos:start="89:9" pos:end="89:13">index</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:20">items</name><index pos:start="89:21" pos:end="89:23">[<expr pos:start="89:22" pos:end="89:22"><name pos:start="89:22" pos:end="89:22">i</name></expr>]</index></name><operator pos:start="89:24" pos:end="89:24">.</operator><name pos:start="89:25" pos:end="89:35">moof_offset</name> <operator pos:start="89:37" pos:end="89:37">=</operator> <name pos:start="89:39" pos:end="89:44">offset</name></expr>;</expr_stmt>

        <for pos:start="91:9" pos:end="93:23">for <control pos:start="91:13" pos:end="91:58">(<init pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:18"><name pos:start="91:14" pos:end="91:14">j</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:18">0</literal></expr>;</init> <condition pos:start="91:21" pos:end="91:53"><expr pos:start="91:21" pos:end="91:52"><name pos:start="91:21" pos:end="91:21">j</name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <operator pos:start="91:25" pos:end="91:25">(</operator><operator pos:start="91:26" pos:end="91:26">(</operator><name pos:start="91:27" pos:end="91:37">fieldlength</name> <operator pos:start="91:39" pos:end="91:40">&gt;&gt;</operator> <literal type="number" pos:start="91:42" pos:end="91:42">4</literal><operator pos:start="91:43" pos:end="91:43">)</operator> <operator pos:start="91:45" pos:end="91:45">&amp;</operator> <literal type="number" pos:start="91:47" pos:end="91:47">3</literal><operator pos:start="91:48" pos:end="91:48">)</operator> <operator pos:start="91:50" pos:end="91:50">+</operator> <literal type="number" pos:start="91:52" pos:end="91:52">1</literal></expr>;</condition> <incr pos:start="91:55" pos:end="91:57"><expr pos:start="91:55" pos:end="91:57"><name pos:start="91:55" pos:end="91:55">j</name><operator pos:start="91:56" pos:end="91:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="93:13" pos:end="93:23"><block_content pos:start="93:13" pos:end="93:23">

            <expr_stmt pos:start="93:13" pos:end="93:23"><expr pos:start="93:13" pos:end="93:22"><call pos:start="93:13" pos:end="93:22"><name pos:start="93:13" pos:end="93:19">avio_r8</name><argument_list pos:start="93:20" pos:end="93:22">(<argument pos:start="93:21" pos:end="93:21"><expr pos:start="93:21" pos:end="93:21"><name pos:start="93:21" pos:end="93:21">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="95:9" pos:end="97:23">for <control pos:start="95:13" pos:end="95:58">(<init pos:start="95:14" pos:end="95:19"><expr pos:start="95:14" pos:end="95:18"><name pos:start="95:14" pos:end="95:14">j</name> <operator pos:start="95:16" pos:end="95:16">=</operator> <literal type="number" pos:start="95:18" pos:end="95:18">0</literal></expr>;</init> <condition pos:start="95:21" pos:end="95:53"><expr pos:start="95:21" pos:end="95:52"><name pos:start="95:21" pos:end="95:21">j</name> <operator pos:start="95:23" pos:end="95:23">&lt;</operator> <operator pos:start="95:25" pos:end="95:25">(</operator><operator pos:start="95:26" pos:end="95:26">(</operator><name pos:start="95:27" pos:end="95:37">fieldlength</name> <operator pos:start="95:39" pos:end="95:40">&gt;&gt;</operator> <literal type="number" pos:start="95:42" pos:end="95:42">2</literal><operator pos:start="95:43" pos:end="95:43">)</operator> <operator pos:start="95:45" pos:end="95:45">&amp;</operator> <literal type="number" pos:start="95:47" pos:end="95:47">3</literal><operator pos:start="95:48" pos:end="95:48">)</operator> <operator pos:start="95:50" pos:end="95:50">+</operator> <literal type="number" pos:start="95:52" pos:end="95:52">1</literal></expr>;</condition> <incr pos:start="95:55" pos:end="95:57"><expr pos:start="95:55" pos:end="95:57"><name pos:start="95:55" pos:end="95:55">j</name><operator pos:start="95:56" pos:end="95:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="97:13" pos:end="97:23"><block_content pos:start="97:13" pos:end="97:23">

            <expr_stmt pos:start="97:13" pos:end="97:23"><expr pos:start="97:13" pos:end="97:22"><call pos:start="97:13" pos:end="97:22"><name pos:start="97:13" pos:end="97:19">avio_r8</name><argument_list pos:start="97:20" pos:end="97:22">(<argument pos:start="97:21" pos:end="97:21"><expr pos:start="97:21" pos:end="97:21"><name pos:start="97:21" pos:end="97:21">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="99:9" pos:end="101:23">for <control pos:start="99:13" pos:end="99:58">(<init pos:start="99:14" pos:end="99:19"><expr pos:start="99:14" pos:end="99:18"><name pos:start="99:14" pos:end="99:14">j</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <literal type="number" pos:start="99:18" pos:end="99:18">0</literal></expr>;</init> <condition pos:start="99:21" pos:end="99:53"><expr pos:start="99:21" pos:end="99:52"><name pos:start="99:21" pos:end="99:21">j</name> <operator pos:start="99:23" pos:end="99:23">&lt;</operator> <operator pos:start="99:25" pos:end="99:25">(</operator><operator pos:start="99:26" pos:end="99:26">(</operator><name pos:start="99:27" pos:end="99:37">fieldlength</name> <operator pos:start="99:39" pos:end="99:40">&gt;&gt;</operator> <literal type="number" pos:start="99:42" pos:end="99:42">0</literal><operator pos:start="99:43" pos:end="99:43">)</operator> <operator pos:start="99:45" pos:end="99:45">&amp;</operator> <literal type="number" pos:start="99:47" pos:end="99:47">3</literal><operator pos:start="99:48" pos:end="99:48">)</operator> <operator pos:start="99:50" pos:end="99:50">+</operator> <literal type="number" pos:start="99:52" pos:end="99:52">1</literal></expr>;</condition> <incr pos:start="99:55" pos:end="99:57"><expr pos:start="99:55" pos:end="99:57"><name pos:start="99:55" pos:end="99:55">j</name><operator pos:start="99:56" pos:end="99:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="101:13" pos:end="101:23"><block_content pos:start="101:13" pos:end="101:23">

            <expr_stmt pos:start="101:13" pos:end="101:23"><expr pos:start="101:13" pos:end="101:22"><call pos:start="101:13" pos:end="101:22"><name pos:start="101:13" pos:end="101:19">avio_r8</name><argument_list pos:start="101:20" pos:end="101:22">(<argument pos:start="101:21" pos:end="101:21"><expr pos:start="101:21" pos:end="101:21"><name pos:start="101:21" pos:end="101:21">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="107:5" pos:end="107:39"><expr pos:start="107:5" pos:end="107:38"><call pos:start="107:5" pos:end="107:38"><name pos:start="107:5" pos:end="107:13">avio_seek</name><argument_list pos:start="107:14" pos:end="107:38">(<argument pos:start="107:15" pos:end="107:15"><expr pos:start="107:15" pos:end="107:15"><name pos:start="107:15" pos:end="107:15">f</name></expr></argument>, <argument pos:start="107:18" pos:end="107:27"><expr pos:start="107:18" pos:end="107:27"><name pos:start="107:18" pos:end="107:20">pos</name> <operator pos:start="107:22" pos:end="107:22">+</operator> <name pos:start="107:24" pos:end="107:27">size</name></expr></argument>, <argument pos:start="107:30" pos:end="107:37"><expr pos:start="107:30" pos:end="107:37"><name pos:start="107:30" pos:end="107:37">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
