<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19710.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">yop_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:44">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:77"><decl pos:start="1:64" pos:end="1:77"><type pos:start="1:64" pos:end="1:77"><name pos:start="1:64" pos:end="1:66">int</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:77">data_size</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:43"><decl pos:start="3:29" pos:end="3:43"><type pos:start="3:29" pos:end="3:43"><name pos:start="3:29" pos:end="3:36">AVPacket</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="141:1">{<block_content pos:start="7:5" pos:end="139:23">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">YopDecContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:39">= <expr pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:28">avctx</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">tag</name></decl>, <decl pos:start="9:14" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:23">firstcolor</name></decl>, <decl pos:start="9:26" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:37">is_odd_frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint32_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:21">palette</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:48"><if pos:start="17:5" pos:end="19:48">if <condition pos:start="17:8" pos:end="17:25">(<expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:16">frame</name><operator pos:start="17:17" pos:end="17:17">.</operator><name pos:start="17:18" pos:end="17:21">data</name><index pos:start="17:22" pos:end="17:24">[<expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:48"><block_content pos:start="19:9" pos:end="19:48">

        <expr_stmt pos:start="19:9" pos:end="19:48"><expr pos:start="19:9" pos:end="19:47"><call pos:start="19:9" pos:end="19:47"><name pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:13">avctx</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:29">release_buffer</name></name><argument_list pos:start="19:30" pos:end="19:47">(<argument pos:start="19:31" pos:end="19:35"><expr pos:start="19:31" pos:end="19:35"><name pos:start="19:31" pos:end="19:35">avctx</name></expr></argument>, <argument pos:start="19:38" pos:end="19:46"><expr pos:start="19:38" pos:end="19:46"><operator pos:start="19:38" pos:end="19:38">&amp;</operator><name pos:start="19:39" pos:end="19:46"><name pos:start="19:39" pos:end="19:39">s</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:46">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:46">(<expr pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:13">avpkt</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:19">size</name></name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <literal type="number" pos:start="23:23" pos:end="23:25">4</literal> <operator pos:start="23:25" pos:end="23:25">+</operator> <literal type="number" pos:start="23:27" pos:end="23:27">3</literal><operator pos:start="23:28" pos:end="23:28">*</operator><name pos:start="23:29" pos:end="23:45"><name pos:start="23:29" pos:end="23:29">s</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:45">num_pal_colors</name></name></expr>)</condition> <block pos:start="23:48" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:35">

        <expr_stmt pos:start="25:9" pos:end="25:82"><expr pos:start="25:9" pos:end="25:81"><call pos:start="25:9" pos:end="25:81"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:81">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:37" pos:end="25:67"><expr pos:start="25:37" pos:end="25:67"><literal type="string" pos:start="25:37" pos:end="25:67">"packet of size %d too small\n"</literal></expr></argument>, <argument pos:start="25:70" pos:end="25:80"><expr pos:start="25:70" pos:end="25:80"><name pos:start="25:70" pos:end="25:80"><name pos:start="25:70" pos:end="25:74">avpkt</name><operator pos:start="25:75" pos:end="25:76">-&gt;</operator><name pos:start="25:77" pos:end="25:80">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:35">return <expr pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:7">ret</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:45"><name pos:start="33:11" pos:end="33:27"><name pos:start="33:11" pos:end="33:15">avctx</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:27">get_buffer</name></name><argument_list pos:start="33:28" pos:end="33:45">(<argument pos:start="33:29" pos:end="33:33"><expr pos:start="33:29" pos:end="33:33"><name pos:start="33:29" pos:end="33:33">avctx</name></expr></argument>, <argument pos:start="33:36" pos:end="33:44"><expr pos:start="33:36" pos:end="33:44"><operator pos:start="33:36" pos:end="33:36">&amp;</operator><name pos:start="33:37" pos:end="33:44"><name pos:start="33:37" pos:end="33:37">s</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:44">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:16">(<expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">&lt;</operator> <literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>)</condition> <block pos:start="35:18" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:19">

        <expr_stmt pos:start="37:9" pos:end="37:61"><expr pos:start="37:9" pos:end="37:60"><call pos:start="37:9" pos:end="37:60"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:60">(<argument pos:start="37:16" pos:end="37:20"><expr pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:20">avctx</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:37" pos:end="37:59"><expr pos:start="37:37" pos:end="37:59"><literal type="string" pos:start="37:37" pos:end="37:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:19">return <expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:40"><expr pos:start="45:5" pos:end="45:39"><name pos:start="45:5" pos:end="45:24"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:12">frame</name><operator pos:start="45:13" pos:end="45:13">.</operator><name pos:start="45:14" pos:end="45:21">linesize</name><index pos:start="45:22" pos:end="45:24">[<expr pos:start="45:23" pos:end="45:23"><literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr>]</index></name> <operator pos:start="45:26" pos:end="45:26">=</operator> <name pos:start="45:28" pos:end="45:39"><name pos:start="45:28" pos:end="45:32">avctx</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:39">width</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:37"><expr pos:start="49:5" pos:end="49:36"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:13">dstbuf</name></name>     <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:36"><name pos:start="49:21" pos:end="49:21">s</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:28">frame</name><operator pos:start="49:29" pos:end="49:29">.</operator><name pos:start="49:30" pos:end="49:33">data</name><index pos:start="49:34" pos:end="49:36">[<expr pos:start="49:35" pos:end="49:35"><literal type="number" pos:start="49:35" pos:end="49:35">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:13">dstptr</name></name>     <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:36"><name pos:start="51:21" pos:end="51:21">s</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:28">frame</name><operator pos:start="51:29" pos:end="51:29">.</operator><name pos:start="51:30" pos:end="51:33">data</name><index pos:start="51:34" pos:end="51:36">[<expr pos:start="51:35" pos:end="51:35"><literal type="number" pos:start="51:35" pos:end="51:35">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:13">srcptr</name></name>     <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:31"><name pos:start="53:21" pos:end="53:25">avpkt</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:31">data</name></name> <operator pos:start="53:33" pos:end="53:33">+</operator> <literal type="number" pos:start="53:35" pos:end="53:35">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:22"><expr pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:14"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:14">row_pos</name></name>    <operator pos:start="55:19" pos:end="55:19">=</operator> <literal type="number" pos:start="55:21" pos:end="55:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:25"><expr pos:start="57:5" pos:end="57:24"><name pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:17">low_nibble</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:24">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:34"><expr pos:start="61:5" pos:end="61:33"><name pos:start="61:5" pos:end="61:16">is_odd_frame</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <name pos:start="61:20" pos:end="61:33"><name pos:start="61:20" pos:end="61:24">avpkt</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:30">data</name><index pos:start="61:31" pos:end="61:33">[<expr pos:start="61:32" pos:end="61:32"><literal type="number" pos:start="61:32" pos:end="61:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if<condition pos:start="63:7" pos:end="63:22">(<expr pos:start="63:8" pos:end="63:21"><name pos:start="63:8" pos:end="63:19">is_odd_frame</name><operator pos:start="63:20" pos:end="63:20">&gt;</operator><literal type="number" pos:start="63:21" pos:end="63:21">1</literal></expr>)</condition><block pos:start="63:23" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:35">

        <expr_stmt pos:start="65:9" pos:end="65:75"><expr pos:start="65:9" pos:end="65:74"><call pos:start="65:9" pos:end="65:74"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="65:74">(<argument pos:start="65:16" pos:end="65:20"><expr pos:start="65:16" pos:end="65:20"><name pos:start="65:16" pos:end="65:20">avctx</name></expr></argument>, <argument pos:start="65:23" pos:end="65:34"><expr pos:start="65:23" pos:end="65:34"><name pos:start="65:23" pos:end="65:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:37" pos:end="65:59"><expr pos:start="65:37" pos:end="65:59"><literal type="string" pos:start="65:37" pos:end="65:59">"frame is too odd %d\n"</literal></expr></argument>, <argument pos:start="65:62" pos:end="65:73"><expr pos:start="65:62" pos:end="65:73"><name pos:start="65:62" pos:end="65:73">is_odd_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:35">return <expr pos:start="67:16" pos:end="67:34"><name pos:start="67:16" pos:end="67:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:48"><expr pos:start="71:5" pos:end="71:47"><name pos:start="71:5" pos:end="71:14">firstcolor</name>   <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:47"><name pos:start="71:20" pos:end="71:20">s</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:33">first_color</name><index pos:start="71:34" pos:end="71:47">[<expr pos:start="71:35" pos:end="71:46"><name pos:start="71:35" pos:end="71:46">is_odd_frame</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:48"><expr pos:start="73:5" pos:end="73:47"><name pos:start="73:5" pos:end="73:11">palette</name>      <operator pos:start="73:18" pos:end="73:18">=</operator> <operator pos:start="73:20" pos:end="73:20">(</operator><name pos:start="73:21" pos:end="73:28">uint32_t</name> <operator pos:start="73:30" pos:end="73:30">*</operator><operator pos:start="73:31" pos:end="73:31">)</operator><name pos:start="73:32" pos:end="73:47"><name pos:start="73:32" pos:end="73:32">s</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:39">frame</name><operator pos:start="73:40" pos:end="73:40">.</operator><name pos:start="73:41" pos:end="73:44">data</name><index pos:start="73:45" pos:end="73:47">[<expr pos:start="73:46" pos:end="73:46"><literal type="number" pos:start="73:46" pos:end="73:46">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <for pos:start="77:5" pos:end="89:5">for <control pos:start="77:9" pos:end="77:59">(<init pos:start="77:10" pos:end="77:15"><expr pos:start="77:10" pos:end="77:14"><name pos:start="77:10" pos:end="77:10">i</name> <operator pos:start="77:12" pos:end="77:12">=</operator> <literal type="number" pos:start="77:14" pos:end="77:14">0</literal></expr>;</init> <condition pos:start="77:17" pos:end="77:38"><expr pos:start="77:17" pos:end="77:37"><name pos:start="77:17" pos:end="77:17">i</name> <operator pos:start="77:19" pos:end="77:19">&lt;</operator> <name pos:start="77:21" pos:end="77:37"><name pos:start="77:21" pos:end="77:21">s</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:37">num_pal_colors</name></name></expr>;</condition> <incr pos:start="77:40" pos:end="77:58"><expr pos:start="77:40" pos:end="77:42"><name pos:start="77:40" pos:end="77:40">i</name><operator pos:start="77:41" pos:end="77:42">++</operator></expr><operator pos:start="77:43" pos:end="77:43">,</operator> <expr pos:start="77:45" pos:end="77:58"><name pos:start="77:45" pos:end="77:53"><name pos:start="77:45" pos:end="77:45">s</name><operator pos:start="77:46" pos:end="77:47">-&gt;</operator><name pos:start="77:48" pos:end="77:53">srcptr</name></name> <operator pos:start="77:55" pos:end="77:56">+=</operator> <literal type="number" pos:start="77:58" pos:end="77:58">3</literal></expr></incr>)</control> <block pos:start="77:61" pos:end="89:5">{<block_content pos:start="79:9" pos:end="87:76">

        <expr_stmt pos:start="79:9" pos:end="83:54"><expr pos:start="79:9" pos:end="83:53"><name pos:start="79:9" pos:end="79:31"><name pos:start="79:9" pos:end="79:15">palette</name><index pos:start="79:16" pos:end="79:31">[<expr pos:start="79:17" pos:end="79:30"><name pos:start="79:17" pos:end="79:17">i</name> <operator pos:start="79:19" pos:end="79:19">+</operator> <name pos:start="79:21" pos:end="79:30">firstcolor</name></expr>]</index></name> <operator pos:start="79:33" pos:end="79:33">=</operator> <operator pos:start="79:35" pos:end="79:35">(</operator><name pos:start="79:36" pos:end="79:47"><name pos:start="79:36" pos:end="79:36">s</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:44">srcptr</name><index pos:start="79:45" pos:end="79:47">[<expr pos:start="79:46" pos:end="79:46"><literal type="number" pos:start="79:46" pos:end="79:46">0</literal></expr>]</index></name> <operator pos:start="79:49" pos:end="79:50">&lt;&lt;</operator> <literal type="number" pos:start="79:52" pos:end="79:53">18</literal><operator pos:start="79:54" pos:end="79:54">)</operator> <operator pos:start="79:56" pos:end="79:56">|</operator>

                                  <operator pos:start="81:35" pos:end="81:35">(</operator><name pos:start="81:36" pos:end="81:47"><name pos:start="81:36" pos:end="81:36">s</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:44">srcptr</name><index pos:start="81:45" pos:end="81:47">[<expr pos:start="81:46" pos:end="81:46"><literal type="number" pos:start="81:46" pos:end="81:46">1</literal></expr>]</index></name> <operator pos:start="81:49" pos:end="81:50">&lt;&lt;</operator> <literal type="number" pos:start="81:52" pos:end="81:53">10</literal><operator pos:start="81:54" pos:end="81:54">)</operator> <operator pos:start="81:56" pos:end="81:56">|</operator>

                                  <operator pos:start="83:35" pos:end="83:35">(</operator><name pos:start="83:36" pos:end="83:47"><name pos:start="83:36" pos:end="83:36">s</name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:44">srcptr</name><index pos:start="83:45" pos:end="83:47">[<expr pos:start="83:46" pos:end="83:46"><literal type="number" pos:start="83:46" pos:end="83:46">2</literal></expr>]</index></name> <operator pos:start="83:49" pos:end="83:50">&lt;&lt;</operator> <literal type="number" pos:start="83:52" pos:end="83:52">2</literal><operator pos:start="83:53" pos:end="83:53">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="87:76"><expr pos:start="85:9" pos:end="87:75"><name pos:start="85:9" pos:end="85:31"><name pos:start="85:9" pos:end="85:15">palette</name><index pos:start="85:16" pos:end="85:31">[<expr pos:start="85:17" pos:end="85:30"><name pos:start="85:17" pos:end="85:17">i</name> <operator pos:start="85:19" pos:end="85:19">+</operator> <name pos:start="85:21" pos:end="85:30">firstcolor</name></expr>]</index></name> <operator pos:start="85:33" pos:end="85:34">|=</operator> <literal type="number" pos:start="85:36" pos:end="85:39">0xFF</literal> <operator pos:start="85:41" pos:end="85:42">&lt;&lt;</operator> <literal type="number" pos:start="85:44" pos:end="85:45">24</literal> <operator pos:start="85:47" pos:end="85:47">|</operator>

                                   <operator pos:start="87:36" pos:end="87:36">(</operator><name pos:start="87:37" pos:end="87:59"><name pos:start="87:37" pos:end="87:43">palette</name><index pos:start="87:44" pos:end="87:59">[<expr pos:start="87:45" pos:end="87:58"><name pos:start="87:45" pos:end="87:45">i</name> <operator pos:start="87:47" pos:end="87:47">+</operator> <name pos:start="87:49" pos:end="87:58">firstcolor</name></expr>]</index></name> <operator pos:start="87:61" pos:end="87:62">&gt;&gt;</operator> <literal type="number" pos:start="87:64" pos:end="87:64">6</literal><operator pos:start="87:65" pos:end="87:65">)</operator> <operator pos:start="87:67" pos:end="87:67">&amp;</operator> <literal type="number" pos:start="87:69" pos:end="87:75">0x30303</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="93:5" pos:end="93:37"><expr pos:start="93:5" pos:end="93:36"><name pos:start="93:5" pos:end="93:32"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:12">frame</name><operator pos:start="93:13" pos:end="93:13">.</operator><name pos:start="93:14" pos:end="93:32">palette_has_changed</name></name> <operator pos:start="93:34" pos:end="93:34">=</operator> <literal type="number" pos:start="93:36" pos:end="93:36">1</literal></expr>;</expr_stmt>



    <while pos:start="97:5" pos:end="131:5">while <condition pos:start="97:11" pos:end="101:49">(<expr pos:start="97:12" pos:end="101:48"><name pos:start="97:12" pos:end="97:20"><name pos:start="97:12" pos:end="97:12">s</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:20">dstptr</name></name> <operator pos:start="97:22" pos:end="97:22">-</operator> <name pos:start="97:24" pos:end="97:32"><name pos:start="97:24" pos:end="97:24">s</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:32">dstbuf</name></name> <operator pos:start="97:34" pos:end="97:34">&lt;</operator>

           <name pos:start="99:12" pos:end="99:23"><name pos:start="99:12" pos:end="99:16">avctx</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:23">width</name></name> <operator pos:start="99:25" pos:end="99:25">*</operator> <name pos:start="99:27" pos:end="99:39"><name pos:start="99:27" pos:end="99:31">avctx</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:39">height</name></name> <operator pos:start="99:41" pos:end="99:42">&amp;&amp;</operator>

           <name pos:start="101:12" pos:end="101:20"><name pos:start="101:12" pos:end="101:12">s</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:20">srcptr</name></name> <operator pos:start="101:22" pos:end="101:22">-</operator> <name pos:start="101:24" pos:end="101:34"><name pos:start="101:24" pos:end="101:28">avpkt</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:34">data</name></name> <operator pos:start="101:36" pos:end="101:36">&lt;</operator> <name pos:start="101:38" pos:end="101:48"><name pos:start="101:38" pos:end="101:42">avpkt</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:48">size</name></name></expr>)</condition> <block pos:start="101:51" pos:end="131:5">{<block_content pos:start="105:9" pos:end="129:31">



        <expr_stmt pos:start="105:9" pos:end="105:37"><expr pos:start="105:9" pos:end="105:36"><name pos:start="105:9" pos:end="105:11">tag</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:36"><name pos:start="105:15" pos:end="105:33">yop_get_next_nibble</name><argument_list pos:start="105:34" pos:end="105:36">(<argument pos:start="105:35" pos:end="105:35"><expr pos:start="105:35" pos:end="105:35"><name pos:start="105:35" pos:end="105:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="109:9" pos:end="127:9"><if pos:start="109:9" pos:end="113:9">if <condition pos:start="109:12" pos:end="109:23">(<expr pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:15">tag</name> <operator pos:start="109:17" pos:end="109:18">!=</operator> <literal type="number" pos:start="109:20" pos:end="109:22">0xf</literal></expr>)</condition> <block pos:start="109:25" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:36">

            <expr_stmt pos:start="111:13" pos:end="111:36"><expr pos:start="111:13" pos:end="111:35"><call pos:start="111:13" pos:end="111:35"><name pos:start="111:13" pos:end="111:27">yop_paint_block</name><argument_list pos:start="111:28" pos:end="111:35">(<argument pos:start="111:29" pos:end="111:29"><expr pos:start="111:29" pos:end="111:29"><name pos:start="111:29" pos:end="111:29">s</name></expr></argument>, <argument pos:start="111:32" pos:end="111:34"><expr pos:start="111:32" pos:end="111:34"><name pos:start="111:32" pos:end="111:34">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="113:10" pos:end="127:9">else <block pos:start="113:15" pos:end="127:9">{<block_content pos:start="115:13" pos:end="125:13">

            <expr_stmt pos:start="115:13" pos:end="115:41"><expr pos:start="115:13" pos:end="115:40"><name pos:start="115:13" pos:end="115:15">tag</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <call pos:start="115:19" pos:end="115:40"><name pos:start="115:19" pos:end="115:37">yop_get_next_nibble</name><argument_list pos:start="115:38" pos:end="115:40">(<argument pos:start="115:39" pos:end="115:39"><expr pos:start="115:39" pos:end="115:39"><name pos:start="115:39" pos:end="115:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:50"><expr pos:start="117:13" pos:end="117:49"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <call pos:start="117:19" pos:end="117:49"><name pos:start="117:19" pos:end="117:41">yop_copy_previous_block</name><argument_list pos:start="117:42" pos:end="117:49">(<argument pos:start="117:43" pos:end="117:43"><expr pos:start="117:43" pos:end="117:43"><name pos:start="117:43" pos:end="117:43">s</name></expr></argument>, <argument pos:start="117:46" pos:end="117:48"><expr pos:start="117:46" pos:end="117:48"><name pos:start="117:46" pos:end="117:48">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="119:13" pos:end="125:13"><if pos:start="119:13" pos:end="125:13">if <condition pos:start="119:16" pos:end="119:24">(<expr pos:start="119:17" pos:end="119:23"><name pos:start="119:17" pos:end="119:19">ret</name> <operator pos:start="119:21" pos:end="119:21">&lt;</operator> <literal type="number" pos:start="119:23" pos:end="119:23">0</literal></expr>)</condition> <block pos:start="119:26" pos:end="125:13">{<block_content pos:start="121:17" pos:end="123:27">

                <expr_stmt pos:start="121:17" pos:end="121:56"><expr pos:start="121:17" pos:end="121:55"><call pos:start="121:17" pos:end="121:55"><name pos:start="121:17" pos:end="121:37"><name pos:start="121:17" pos:end="121:21">avctx</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:37">release_buffer</name></name><argument_list pos:start="121:38" pos:end="121:55">(<argument pos:start="121:39" pos:end="121:43"><expr pos:start="121:39" pos:end="121:43"><name pos:start="121:39" pos:end="121:43">avctx</name></expr></argument>, <argument pos:start="121:46" pos:end="121:54"><expr pos:start="121:46" pos:end="121:54"><operator pos:start="121:46" pos:end="121:46">&amp;</operator><name pos:start="121:47" pos:end="121:54"><name pos:start="121:47" pos:end="121:47">s</name><operator pos:start="121:48" pos:end="121:49">-&gt;</operator><name pos:start="121:50" pos:end="121:54">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="123:17" pos:end="123:27">return <expr pos:start="123:24" pos:end="123:26"><name pos:start="123:24" pos:end="123:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:31"><expr pos:start="129:9" pos:end="129:30"><call pos:start="129:9" pos:end="129:30"><name pos:start="129:9" pos:end="129:27">yop_next_macroblock</name><argument_list pos:start="129:28" pos:end="129:30">(<argument pos:start="129:29" pos:end="129:29"><expr pos:start="129:29" pos:end="129:29"><name pos:start="129:29" pos:end="129:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="135:5" pos:end="135:40"><expr pos:start="135:5" pos:end="135:39"><operator pos:start="135:5" pos:end="135:5">*</operator><name pos:start="135:6" pos:end="135:14">data_size</name>        <operator pos:start="135:23" pos:end="135:23">=</operator> <sizeof pos:start="135:25" pos:end="135:39">sizeof<argument_list pos:start="135:31" pos:end="135:39">(<argument pos:start="135:32" pos:end="135:38"><expr pos:start="135:32" pos:end="135:38"><name pos:start="135:32" pos:end="135:38">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:33"><expr pos:start="137:5" pos:end="137:32"><operator pos:start="137:5" pos:end="137:5">*</operator><operator pos:start="137:6" pos:end="137:6">(</operator><name pos:start="137:7" pos:end="137:13">AVFrame</name> <operator pos:start="137:15" pos:end="137:15">*</operator><operator pos:start="137:16" pos:end="137:16">)</operator> <name pos:start="137:18" pos:end="137:21">data</name> <operator pos:start="137:23" pos:end="137:23">=</operator> <name pos:start="137:25" pos:end="137:32"><name pos:start="137:25" pos:end="137:25">s</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:32">frame</name></name></expr>;</expr_stmt>

    <return pos:start="139:5" pos:end="139:23">return <expr pos:start="139:12" pos:end="139:22"><name pos:start="139:12" pos:end="139:22"><name pos:start="139:12" pos:end="139:16">avpkt</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
