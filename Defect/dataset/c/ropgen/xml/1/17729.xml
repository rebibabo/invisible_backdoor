<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17729.c" pos:tabs="8"><function pos:start="1:1" pos:end="385:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">ulti_decode_frame</name><parameter_list pos:start="1:29" pos:end="5:45">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">data</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:55">data_size</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:44"><decl pos:start="5:30" pos:end="5:44"><type pos:start="5:30" pos:end="5:44"><name pos:start="5:30" pos:end="5:37">AVPacket</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:44">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="385:1">{<block_content pos:start="9:5" pos:end="383:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:47"><type pos:start="13:5" pos:end="13:29"><name pos:start="13:5" pos:end="13:27">UltimotionDecodeContext</name> <modifier pos:start="13:29" pos:end="13:29">*</modifier></type><name pos:start="13:30" pos:end="13:30">s</name><init pos:start="13:31" pos:end="13:47">=<expr pos:start="13:32" pos:end="13:47"><name pos:start="13:32" pos:end="13:47"><name pos:start="13:32" pos:end="13:36">avctx</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:47">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">modifier</name> <init pos:start="15:18" pos:end="15:20">= <expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">uniq</name> <init pos:start="17:14" pos:end="17:16">= <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:12">mode</name> <init pos:start="19:14" pos:end="19:16">= <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:14">blocks</name> <init pos:start="21:16" pos:end="21:18">= <expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:17"><decl pos:start="23:5" pos:end="23:16"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:12">done</name> <init pos:start="23:14" pos:end="23:16">= <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:13"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">x</name> <init pos:start="25:11" pos:end="25:13">= <expr pos:start="25:13" pos:end="25:13"><literal type="number" pos:start="25:13" pos:end="25:13">0</literal></expr></init></decl>, <decl pos:start="25:16" pos:end="25:20"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:16" pos:end="25:16">y</name> <init pos:start="25:18" pos:end="25:20">= <expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:10"><decl pos:start="27:5" pos:end="27:9"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:13"><decl pos:start="29:5" pos:end="29:12"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:12">skip</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:12"><decl pos:start="31:5" pos:end="31:11"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:11">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:12">frame</name><operator pos:start="35:13" pos:end="35:13">.</operator><name pos:start="35:14" pos:end="35:22">reference</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <literal type="number" pos:start="35:26" pos:end="35:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:104"><expr pos:start="37:5" pos:end="37:103"><name pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:12">frame</name><operator pos:start="37:13" pos:end="37:13">.</operator><name pos:start="37:14" pos:end="37:25">buffer_hints</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <name pos:start="37:29" pos:end="37:49">FF_BUFFER_HINTS_VALID</name> <operator pos:start="37:51" pos:end="37:51">|</operator> <name pos:start="37:53" pos:end="37:76">FF_BUFFER_HINTS_PRESERVE</name> <operator pos:start="37:78" pos:end="37:78">|</operator> <name pos:start="37:80" pos:end="37:103">FF_BUFFER_HINTS_REUSABLE</name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:50">(<expr pos:start="39:9" pos:end="39:49"><call pos:start="39:9" pos:end="39:45"><name pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:13">avctx</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:27">reget_buffer</name></name><argument_list pos:start="39:28" pos:end="39:45">(<argument pos:start="39:29" pos:end="39:33"><expr pos:start="39:29" pos:end="39:33"><name pos:start="39:29" pos:end="39:33">avctx</name></expr></argument>, <argument pos:start="39:36" pos:end="39:44"><expr pos:start="39:36" pos:end="39:44"><operator pos:start="39:36" pos:end="39:36">&amp;</operator><name pos:start="39:37" pos:end="39:44"><name pos:start="39:37" pos:end="39:37">s</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:44">frame</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:47" pos:end="39:47">&lt;</operator> <literal type="number" pos:start="39:49" pos:end="39:49">0</literal></expr>)</condition> <block pos:start="39:52" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:18">

        <expr_stmt pos:start="41:9" pos:end="41:63"><expr pos:start="41:9" pos:end="41:62"><call pos:start="41:9" pos:end="41:62"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:62">(<argument pos:start="41:16" pos:end="41:20"><expr pos:start="41:16" pos:end="41:20"><name pos:start="41:16" pos:end="41:20">avctx</name></expr></argument>, <argument pos:start="41:23" pos:end="41:34"><expr pos:start="41:23" pos:end="41:34"><name pos:start="41:23" pos:end="41:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:37" pos:end="41:61"><expr pos:start="41:37" pos:end="41:61"><literal type="string" pos:start="41:37" pos:end="41:61">"reget_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="49:5" pos:end="373:5">while<condition pos:start="49:10" pos:end="49:16">(<expr pos:start="49:11" pos:end="49:15"><operator pos:start="49:11" pos:end="49:11">!</operator><name pos:start="49:12" pos:end="49:15">done</name></expr>)</condition> <block pos:start="49:18" pos:end="373:5">{<block_content pos:start="51:9" pos:end="371:9">

        <decl_stmt pos:start="51:9" pos:end="51:16"><decl pos:start="51:9" pos:end="51:15"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:15">idx</name></decl>;</decl_stmt>

        <if_stmt pos:start="53:9" pos:end="55:18"><if pos:start="53:9" pos:end="55:18">if<condition pos:start="53:11" pos:end="53:49">(<expr pos:start="53:12" pos:end="53:48"><name pos:start="53:12" pos:end="53:17">blocks</name> <operator pos:start="53:19" pos:end="53:20">&gt;=</operator> <name pos:start="53:22" pos:end="53:30"><name pos:start="53:22" pos:end="53:22">s</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:30">blocks</name></name> <operator pos:start="53:32" pos:end="53:33">||</operator> <name pos:start="53:35" pos:end="53:35">y</name> <operator pos:start="53:37" pos:end="53:38">&gt;=</operator> <name pos:start="53:40" pos:end="53:48"><name pos:start="53:40" pos:end="53:40">s</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:48">height</name></name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:18"><block_content pos:start="55:13" pos:end="55:18">

            <break pos:start="55:13" pos:end="55:18">break;</break></block_content></block></if></if_stmt><comment type="line" pos:start="55:19" pos:end="55:38">//all blocks decoded</comment>



        <expr_stmt pos:start="59:9" pos:end="59:21"><expr pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:11">idx</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <operator pos:start="59:15" pos:end="59:15">*</operator><name pos:start="59:16" pos:end="59:18">buf</name><operator pos:start="59:19" pos:end="59:20">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="371:9"><if pos:start="61:9" pos:end="121:9">if<condition pos:start="61:11" pos:end="61:32">(<expr pos:start="61:12" pos:end="61:31"><operator pos:start="61:12" pos:end="61:12">(</operator><name pos:start="61:13" pos:end="61:15">idx</name> <operator pos:start="61:17" pos:end="61:17">&amp;</operator> <literal type="number" pos:start="61:19" pos:end="61:22">0xF8</literal><operator pos:start="61:23" pos:end="61:23">)</operator> <operator pos:start="61:25" pos:end="61:26">==</operator> <literal type="number" pos:start="61:28" pos:end="61:31">0x70</literal></expr>)</condition> <block pos:start="61:34" pos:end="121:9">{<block_content pos:start="63:13" pos:end="119:13">

            <switch pos:start="63:13" pos:end="119:13">switch<condition pos:start="63:19" pos:end="63:23">(<expr pos:start="63:20" pos:end="63:22"><name pos:start="63:20" pos:end="63:22">idx</name></expr>)</condition> <block pos:start="63:25" pos:end="119:13">{<block_content pos:start="65:13" pos:end="117:84">

            <case pos:start="65:13" pos:end="65:22">case <expr pos:start="65:18" pos:end="65:21"><literal type="number" pos:start="65:18" pos:end="65:21">0x70</literal></expr>:</case> <comment type="line" pos:start="65:24" pos:end="65:40">//change modifier</comment>

                <expr_stmt pos:start="67:17" pos:end="67:34"><expr pos:start="67:17" pos:end="67:33"><name pos:start="67:17" pos:end="67:24">modifier</name> <operator pos:start="67:26" pos:end="67:26">=</operator> <operator pos:start="67:28" pos:end="67:28">*</operator><name pos:start="67:29" pos:end="67:31">buf</name><operator pos:start="67:32" pos:end="67:33">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="69:17" pos:end="71:103"><if pos:start="69:17" pos:end="71:103">if<condition pos:start="69:19" pos:end="69:30">(<expr pos:start="69:20" pos:end="69:29"><name pos:start="69:20" pos:end="69:27">modifier</name><operator pos:start="69:28" pos:end="69:28">&gt;</operator><literal type="number" pos:start="69:29" pos:end="69:29">1</literal></expr>)</condition><block type="pseudo" pos:start="71:21" pos:end="71:103"><block_content pos:start="71:21" pos:end="71:103">

                    <expr_stmt pos:start="71:21" pos:end="71:103"><expr pos:start="71:21" pos:end="71:102"><call pos:start="71:21" pos:end="71:102"><name pos:start="71:21" pos:end="71:26">av_log</name><argument_list pos:start="71:27" pos:end="71:102">(<argument pos:start="71:28" pos:end="71:32"><expr pos:start="71:28" pos:end="71:32"><name pos:start="71:28" pos:end="71:32">avctx</name></expr></argument>, <argument pos:start="71:35" pos:end="71:45"><expr pos:start="71:35" pos:end="71:45"><name pos:start="71:35" pos:end="71:45">AV_LOG_INFO</name></expr></argument>, <argument pos:start="71:48" pos:end="71:91"><expr pos:start="71:48" pos:end="71:91"><literal type="string" pos:start="71:48" pos:end="71:91">"warning: modifier must be 0 or 1, got %i\n"</literal></expr></argument>, <argument pos:start="71:94" pos:end="71:101"><expr pos:start="71:94" pos:end="71:101"><name pos:start="71:94" pos:end="71:101">modifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="73:17" pos:end="73:22">break;</break>

            <case pos:start="75:13" pos:end="75:22">case <expr pos:start="75:18" pos:end="75:21"><literal type="number" pos:start="75:18" pos:end="75:21">0x71</literal></expr>:</case> <comment type="line" pos:start="75:24" pos:end="75:39">// set uniq flag</comment>

                <expr_stmt pos:start="77:17" pos:end="77:25"><expr pos:start="77:17" pos:end="77:24"><name pos:start="77:17" pos:end="77:20">uniq</name> <operator pos:start="77:22" pos:end="77:22">=</operator> <literal type="number" pos:start="77:24" pos:end="77:24">1</literal></expr>;</expr_stmt>

                <break pos:start="79:17" pos:end="79:22">break;</break>

            <case pos:start="81:13" pos:end="81:22">case <expr pos:start="81:18" pos:end="81:21"><literal type="number" pos:start="81:18" pos:end="81:21">0x72</literal></expr>:</case> <comment type="line" pos:start="81:24" pos:end="81:36">//toggle mode</comment>

                <expr_stmt pos:start="83:17" pos:end="83:29"><expr pos:start="83:17" pos:end="83:28"><name pos:start="83:17" pos:end="83:20">mode</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <operator pos:start="83:24" pos:end="83:24">!</operator><name pos:start="83:25" pos:end="83:28">mode</name></expr>;</expr_stmt>

                <break pos:start="85:17" pos:end="85:22">break;</break>

            <case pos:start="87:13" pos:end="87:22">case <expr pos:start="87:18" pos:end="87:21"><literal type="number" pos:start="87:18" pos:end="87:21">0x73</literal></expr>:</case> <comment type="line" pos:start="87:24" pos:end="87:37">//end-of-frame</comment>

                <expr_stmt pos:start="89:17" pos:end="89:25"><expr pos:start="89:17" pos:end="89:24"><name pos:start="89:17" pos:end="89:20">done</name> <operator pos:start="89:22" pos:end="89:22">=</operator> <literal type="number" pos:start="89:24" pos:end="89:24">1</literal></expr>;</expr_stmt>

                <break pos:start="91:17" pos:end="91:22">break;</break>

            <case pos:start="93:13" pos:end="93:22">case <expr pos:start="93:18" pos:end="93:21"><literal type="number" pos:start="93:18" pos:end="93:21">0x74</literal></expr>:</case> <comment type="line" pos:start="93:24" pos:end="93:41">//skip some blocks</comment>

                <expr_stmt pos:start="95:17" pos:end="95:30"><expr pos:start="95:17" pos:end="95:29"><name pos:start="95:17" pos:end="95:20">skip</name> <operator pos:start="95:22" pos:end="95:22">=</operator> <operator pos:start="95:24" pos:end="95:24">*</operator><name pos:start="95:25" pos:end="95:27">buf</name><operator pos:start="95:28" pos:end="95:29">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="97:17" pos:end="99:26"><if pos:start="97:17" pos:end="99:26">if <condition pos:start="97:20" pos:end="97:49">(<expr pos:start="97:21" pos:end="97:48"><operator pos:start="97:21" pos:end="97:21">(</operator><name pos:start="97:22" pos:end="97:27">blocks</name> <operator pos:start="97:29" pos:end="97:29">+</operator> <name pos:start="97:31" pos:end="97:34">skip</name><operator pos:start="97:35" pos:end="97:35">)</operator> <operator pos:start="97:37" pos:end="97:38">&gt;=</operator> <name pos:start="97:40" pos:end="97:48"><name pos:start="97:40" pos:end="97:40">s</name><operator pos:start="97:41" pos:end="97:42">-&gt;</operator><name pos:start="97:43" pos:end="97:48">blocks</name></name></expr>)</condition><block type="pseudo" pos:start="99:21" pos:end="99:26"><block_content pos:start="99:21" pos:end="99:26">

                    <break pos:start="99:21" pos:end="99:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:31"><expr pos:start="101:17" pos:end="101:30"><name pos:start="101:17" pos:end="101:22">blocks</name> <operator pos:start="101:24" pos:end="101:25">+=</operator> <name pos:start="101:27" pos:end="101:30">skip</name></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:30"><expr pos:start="103:17" pos:end="103:29"><name pos:start="103:17" pos:end="103:17">x</name> <operator pos:start="103:19" pos:end="103:20">+=</operator> <name pos:start="103:22" pos:end="103:25">skip</name> <operator pos:start="103:27" pos:end="103:27">*</operator> <literal type="number" pos:start="103:29" pos:end="103:29">8</literal></expr>;</expr_stmt>

                <while pos:start="105:17" pos:end="111:17">while<condition pos:start="105:22" pos:end="105:36">(<expr pos:start="105:23" pos:end="105:35"><name pos:start="105:23" pos:end="105:23">x</name> <operator pos:start="105:25" pos:end="105:26">&gt;=</operator> <name pos:start="105:28" pos:end="105:35"><name pos:start="105:28" pos:end="105:28">s</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:35">width</name></name></expr>)</condition> <block pos:start="105:38" pos:end="111:17">{<block_content pos:start="107:21" pos:end="109:27">

                    <expr_stmt pos:start="107:21" pos:end="107:34"><expr pos:start="107:21" pos:end="107:33"><name pos:start="107:21" pos:end="107:21">x</name> <operator pos:start="107:23" pos:end="107:24">-=</operator> <name pos:start="107:26" pos:end="107:33"><name pos:start="107:26" pos:end="107:26">s</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:33">width</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:27"><expr pos:start="109:21" pos:end="109:26"><name pos:start="109:21" pos:end="109:21">y</name> <operator pos:start="109:23" pos:end="109:24">+=</operator> <literal type="number" pos:start="109:26" pos:end="109:26">8</literal></expr>;</expr_stmt>

                </block_content>}</block></while>

                <break pos:start="113:17" pos:end="113:22">break;</break>

            <default pos:start="115:13" pos:end="115:20">default:</default>

                <expr_stmt pos:start="117:17" pos:end="117:84"><expr pos:start="117:17" pos:end="117:83"><call pos:start="117:17" pos:end="117:83"><name pos:start="117:17" pos:end="117:22">av_log</name><argument_list pos:start="117:23" pos:end="117:83">(<argument pos:start="117:24" pos:end="117:28"><expr pos:start="117:24" pos:end="117:28"><name pos:start="117:24" pos:end="117:28">avctx</name></expr></argument>, <argument pos:start="117:31" pos:end="117:41"><expr pos:start="117:31" pos:end="117:41"><name pos:start="117:31" pos:end="117:41">AV_LOG_INFO</name></expr></argument>, <argument pos:start="117:44" pos:end="117:77"><expr pos:start="117:44" pos:end="117:77"><literal type="string" pos:start="117:44" pos:end="117:77">"warning: unknown escape 0x%02X\n"</literal></expr></argument>, <argument pos:start="117:80" pos:end="117:82"><expr pos:start="117:80" pos:end="117:82"><name pos:start="117:80" pos:end="117:82">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="371:9">else <block pos:start="121:16" pos:end="371:9">{<block_content pos:start="123:13" pos:end="369:13"> <comment type="line" pos:start="121:18" pos:end="121:35">//handle one block</comment>

            <decl_stmt pos:start="123:13" pos:end="123:21"><decl pos:start="123:13" pos:end="123:20"><type pos:start="123:13" pos:end="123:15"><name pos:start="123:13" pos:end="123:15">int</name></type> <name pos:start="123:17" pos:end="123:20">code</name></decl>;</decl_stmt>

            <decl_stmt pos:start="125:13" pos:end="125:19"><decl pos:start="125:13" pos:end="125:18"><type pos:start="125:13" pos:end="125:15"><name pos:start="125:13" pos:end="125:15">int</name></type> <name pos:start="125:17" pos:end="125:18">cf</name></decl>;</decl_stmt>

            <decl_stmt pos:start="127:13" pos:end="127:26"><decl pos:start="127:13" pos:end="127:25"><type pos:start="127:13" pos:end="127:15"><name pos:start="127:13" pos:end="127:15">int</name></type> <name pos:start="127:17" pos:end="127:21">angle</name> <init pos:start="127:23" pos:end="127:25">= <expr pos:start="127:25" pos:end="127:25"><literal type="number" pos:start="127:25" pos:end="127:25">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="129:13" pos:end="129:25"><decl pos:start="129:13" pos:end="129:24"><type pos:start="129:13" pos:end="129:19"><name pos:start="129:13" pos:end="129:19">uint8_t</name></type> <name pos:start="129:21" pos:end="129:24"><name pos:start="129:21" pos:end="129:21">Y</name><index pos:start="129:22" pos:end="129:24">[<expr pos:start="129:23" pos:end="129:23"><literal type="number" pos:start="129:23" pos:end="129:23">4</literal></expr>]</index></name></decl>;</decl_stmt> <comment type="line" pos:start="129:27" pos:end="129:50">// luma samples of block</comment>

            <decl_stmt pos:start="131:13" pos:end="131:31"><decl pos:start="131:13" pos:end="131:22"><type pos:start="131:13" pos:end="131:15"><name pos:start="131:13" pos:end="131:15">int</name></type> <name pos:start="131:17" pos:end="131:18">tx</name> <init pos:start="131:20" pos:end="131:22">= <expr pos:start="131:22" pos:end="131:22"><literal type="number" pos:start="131:22" pos:end="131:22">0</literal></expr></init></decl>, <decl pos:start="131:25" pos:end="131:30"><type ref="prev" pos:start="131:13" pos:end="131:15"/><name pos:start="131:25" pos:end="131:26">ty</name> <init pos:start="131:28" pos:end="131:30">= <expr pos:start="131:30" pos:end="131:30"><literal type="number" pos:start="131:30" pos:end="131:30">0</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="131:33" pos:end="131:52">//coords of subblock</comment>

            <decl_stmt pos:start="133:13" pos:end="133:27"><decl pos:start="133:13" pos:end="133:26"><type pos:start="133:13" pos:end="133:15"><name pos:start="133:13" pos:end="133:15">int</name></type> <name pos:start="133:17" pos:end="133:22">chroma</name> <init pos:start="133:24" pos:end="133:26">= <expr pos:start="133:26" pos:end="133:26"><literal type="number" pos:start="133:26" pos:end="133:26">0</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="135:13" pos:end="151:13"><if pos:start="135:13" pos:end="143:13">if <condition pos:start="135:16" pos:end="135:29">(<expr pos:start="135:17" pos:end="135:28"><name pos:start="135:17" pos:end="135:20">mode</name> <operator pos:start="135:22" pos:end="135:23">||</operator> <name pos:start="135:25" pos:end="135:28">uniq</name></expr>)</condition> <block pos:start="135:31" pos:end="143:13">{<block_content pos:start="137:17" pos:end="141:27">

                <expr_stmt pos:start="137:17" pos:end="137:25"><expr pos:start="137:17" pos:end="137:24"><name pos:start="137:17" pos:end="137:20">uniq</name> <operator pos:start="137:22" pos:end="137:22">=</operator> <literal type="number" pos:start="137:24" pos:end="137:24">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:23"><expr pos:start="139:17" pos:end="139:22"><name pos:start="139:17" pos:end="139:18">cf</name> <operator pos:start="139:20" pos:end="139:20">=</operator> <literal type="number" pos:start="139:22" pos:end="139:22">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:27"><expr pos:start="141:17" pos:end="141:26"><name pos:start="141:17" pos:end="141:22">chroma</name> <operator pos:start="141:24" pos:end="141:24">=</operator> <literal type="number" pos:start="141:26" pos:end="141:26">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="143:15" pos:end="151:13">else <block pos:start="143:20" pos:end="151:13">{<block_content pos:start="145:17" pos:end="149:36">

                <expr_stmt pos:start="145:17" pos:end="145:23"><expr pos:start="145:17" pos:end="145:22"><name pos:start="145:17" pos:end="145:18">cf</name> <operator pos:start="145:20" pos:end="145:20">=</operator> <literal type="number" pos:start="145:22" pos:end="145:22">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="147:17" pos:end="149:36"><if pos:start="147:17" pos:end="149:36">if <condition pos:start="147:20" pos:end="147:24">(<expr pos:start="147:21" pos:end="147:23"><name pos:start="147:21" pos:end="147:23">idx</name></expr>)</condition><block type="pseudo" pos:start="149:21" pos:end="149:36"><block_content pos:start="149:21" pos:end="149:36">

                    <expr_stmt pos:start="149:21" pos:end="149:36"><expr pos:start="149:21" pos:end="149:35"><name pos:start="149:21" pos:end="149:26">chroma</name> <operator pos:start="149:28" pos:end="149:28">=</operator> <operator pos:start="149:30" pos:end="149:30">*</operator><name pos:start="149:31" pos:end="149:33">buf</name><operator pos:start="149:34" pos:end="149:35">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <for pos:start="153:13" pos:end="357:13">for <control pos:start="153:17" pos:end="153:35">(<init pos:start="153:18" pos:end="153:23"><expr pos:start="153:18" pos:end="153:22"><name pos:start="153:18" pos:end="153:18">i</name> <operator pos:start="153:20" pos:end="153:20">=</operator> <literal type="number" pos:start="153:22" pos:end="153:22">0</literal></expr>;</init> <condition pos:start="153:25" pos:end="153:30"><expr pos:start="153:25" pos:end="153:29"><name pos:start="153:25" pos:end="153:25">i</name> <operator pos:start="153:27" pos:end="153:27">&lt;</operator> <literal type="number" pos:start="153:29" pos:end="153:29">4</literal></expr>;</condition> <incr pos:start="153:32" pos:end="153:34"><expr pos:start="153:32" pos:end="153:34"><name pos:start="153:32" pos:end="153:32">i</name><operator pos:start="153:33" pos:end="153:34">++</operator></expr></incr>)</control> <block pos:start="153:37" pos:end="357:13">{<block_content pos:start="155:17" pos:end="355:67"> <comment type="line" pos:start="153:39" pos:end="153:59">// for every subblock</comment>

                <expr_stmt pos:start="155:17" pos:end="155:46"><expr pos:start="155:17" pos:end="155:45"><name pos:start="155:17" pos:end="155:20">code</name> <operator pos:start="155:22" pos:end="155:22">=</operator> <operator pos:start="155:24" pos:end="155:24">(</operator><name pos:start="155:25" pos:end="155:27">idx</name> <operator pos:start="155:29" pos:end="155:30">&gt;&gt;</operator> <operator pos:start="155:32" pos:end="155:32">(</operator><literal type="number" pos:start="155:33" pos:end="155:35">6</literal> <operator pos:start="155:35" pos:end="155:35">-</operator> <name pos:start="155:37" pos:end="155:37">i</name><operator pos:start="155:38" pos:end="155:38">*</operator><literal type="number" pos:start="155:39" pos:end="155:39">2</literal><operator pos:start="155:40" pos:end="155:40">)</operator><operator pos:start="155:41" pos:end="155:41">)</operator> <operator pos:start="155:43" pos:end="155:43">&amp;</operator> <literal type="number" pos:start="155:45" pos:end="155:45">3</literal></expr>;</expr_stmt> <comment type="line" pos:start="155:48" pos:end="155:63">//extract 2 bits</comment>

                <if_stmt pos:start="157:17" pos:end="159:29"><if pos:start="157:17" pos:end="159:29">if<condition pos:start="157:19" pos:end="157:25">(<expr pos:start="157:20" pos:end="157:24"><operator pos:start="157:20" pos:end="157:20">!</operator><name pos:start="157:21" pos:end="157:24">code</name></expr>)</condition><block type="pseudo" pos:start="159:21" pos:end="159:29"><block_content pos:start="159:21" pos:end="159:29"> <comment type="line" pos:start="157:27" pos:end="157:41">//skip subblock</comment>

                    <continue pos:start="159:21" pos:end="159:29">continue;</continue></block_content></block></if></if_stmt>

                <if_stmt pos:start="161:17" pos:end="163:36"><if pos:start="161:17" pos:end="163:36">if<condition pos:start="161:19" pos:end="161:22">(<expr pos:start="161:20" pos:end="161:21"><name pos:start="161:20" pos:end="161:21">cf</name></expr>)</condition><block type="pseudo" pos:start="163:21" pos:end="163:36"><block_content pos:start="163:21" pos:end="163:36">

                    <expr_stmt pos:start="163:21" pos:end="163:36"><expr pos:start="163:21" pos:end="163:35"><name pos:start="163:21" pos:end="163:26">chroma</name> <operator pos:start="163:28" pos:end="163:28">=</operator> <operator pos:start="163:30" pos:end="163:30">*</operator><name pos:start="163:31" pos:end="163:33">buf</name><operator pos:start="163:34" pos:end="163:35">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:45"><expr pos:start="165:17" pos:end="165:44"><name pos:start="165:17" pos:end="165:18">tx</name> <operator pos:start="165:20" pos:end="165:20">=</operator> <name pos:start="165:22" pos:end="165:22">x</name> <operator pos:start="165:24" pos:end="165:24">+</operator> <name pos:start="165:26" pos:end="165:44"><name pos:start="165:26" pos:end="165:37">block_coords</name><index pos:start="165:38" pos:end="165:44">[<expr pos:start="165:39" pos:end="165:43"><name pos:start="165:39" pos:end="165:39">i</name> <operator pos:start="165:41" pos:end="165:41">*</operator> <literal type="number" pos:start="165:43" pos:end="165:43">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:51"><expr pos:start="167:17" pos:end="167:50"><name pos:start="167:17" pos:end="167:18">ty</name> <operator pos:start="167:20" pos:end="167:20">=</operator> <name pos:start="167:22" pos:end="167:22">y</name> <operator pos:start="167:24" pos:end="167:24">+</operator> <name pos:start="167:26" pos:end="167:50"><name pos:start="167:26" pos:end="167:37">block_coords</name><index pos:start="167:38" pos:end="167:50">[<expr pos:start="167:39" pos:end="167:49"><operator pos:start="167:39" pos:end="167:39">(</operator><name pos:start="167:40" pos:end="167:40">i</name> <operator pos:start="167:42" pos:end="167:42">*</operator> <literal type="number" pos:start="167:44" pos:end="167:44">2</literal><operator pos:start="167:45" pos:end="167:45">)</operator> <operator pos:start="167:47" pos:end="167:47">+</operator> <literal type="number" pos:start="167:49" pos:end="167:49">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <switch pos:start="169:17" pos:end="351:17">switch<condition pos:start="169:23" pos:end="169:28">(<expr pos:start="169:24" pos:end="169:27"><name pos:start="169:24" pos:end="169:27">code</name></expr>)</condition> <block pos:start="169:30" pos:end="351:17">{<block_content pos:start="171:17" pos:end="349:26">

                <case pos:start="171:17" pos:end="171:23">case <expr pos:start="171:22" pos:end="171:22"><literal type="number" pos:start="171:22" pos:end="171:22">1</literal></expr>:</case>

                    <expr_stmt pos:start="173:21" pos:end="173:33"><expr pos:start="173:21" pos:end="173:32"><name pos:start="173:21" pos:end="173:23">tmp</name> <operator pos:start="173:25" pos:end="173:25">=</operator> <operator pos:start="173:27" pos:end="173:27">*</operator><name pos:start="173:28" pos:end="173:30">buf</name><operator pos:start="173:31" pos:end="173:32">++</operator></expr>;</expr_stmt>



                    <expr_stmt pos:start="177:21" pos:end="177:61"><expr pos:start="177:21" pos:end="177:60"><name pos:start="177:21" pos:end="177:25">angle</name> <operator pos:start="177:27" pos:end="177:27">=</operator> <name pos:start="177:29" pos:end="177:60"><name pos:start="177:29" pos:end="177:42">angle_by_index</name><index pos:start="177:43" pos:end="177:60">[<expr pos:start="177:44" pos:end="177:59"><operator pos:start="177:44" pos:end="177:44">(</operator><name pos:start="177:45" pos:end="177:47">tmp</name> <operator pos:start="177:49" pos:end="177:50">&gt;&gt;</operator> <literal type="number" pos:start="177:52" pos:end="177:52">6</literal><operator pos:start="177:53" pos:end="177:53">)</operator> <operator pos:start="177:55" pos:end="177:55">&amp;</operator> <literal type="number" pos:start="177:57" pos:end="177:59">0x3</literal></expr>]</index></name></expr>;</expr_stmt>



                    <expr_stmt pos:start="181:21" pos:end="181:38"><expr pos:start="181:21" pos:end="181:37"><name pos:start="181:21" pos:end="181:24"><name pos:start="181:21" pos:end="181:21">Y</name><index pos:start="181:22" pos:end="181:24">[<expr pos:start="181:23" pos:end="181:23"><literal type="number" pos:start="181:23" pos:end="181:23">0</literal></expr>]</index></name> <operator pos:start="181:26" pos:end="181:26">=</operator> <name pos:start="181:28" pos:end="181:30">tmp</name> <operator pos:start="181:32" pos:end="181:32">&amp;</operator> <literal type="number" pos:start="181:34" pos:end="181:37">0x3F</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="183:21" pos:end="183:32"><expr pos:start="183:21" pos:end="183:31"><name pos:start="183:21" pos:end="183:24"><name pos:start="183:21" pos:end="183:21">Y</name><index pos:start="183:22" pos:end="183:24">[<expr pos:start="183:23" pos:end="183:23"><literal type="number" pos:start="183:23" pos:end="183:23">1</literal></expr>]</index></name> <operator pos:start="183:26" pos:end="183:26">=</operator> <name pos:start="183:28" pos:end="183:31"><name pos:start="183:28" pos:end="183:28">Y</name><index pos:start="183:29" pos:end="183:31">[<expr pos:start="183:30" pos:end="183:30"><literal type="number" pos:start="183:30" pos:end="183:30">0</literal></expr>]</index></name></expr>;</expr_stmt>



                    <if_stmt pos:start="187:21" pos:end="203:21"><if pos:start="187:21" pos:end="197:21">if <condition pos:start="187:24" pos:end="187:30">(<expr pos:start="187:25" pos:end="187:29"><name pos:start="187:25" pos:end="187:29">angle</name></expr>)</condition> <block pos:start="187:32" pos:end="197:21">{<block_content pos:start="189:25" pos:end="195:36">

                        <expr_stmt pos:start="189:25" pos:end="189:38"><expr pos:start="189:25" pos:end="189:37"><name pos:start="189:25" pos:end="189:28"><name pos:start="189:25" pos:end="189:25">Y</name><index pos:start="189:26" pos:end="189:28">[<expr pos:start="189:27" pos:end="189:27"><literal type="number" pos:start="189:27" pos:end="189:27">2</literal></expr>]</index></name> <operator pos:start="189:30" pos:end="189:30">=</operator> <name pos:start="189:32" pos:end="189:35"><name pos:start="189:32" pos:end="189:32">Y</name><index pos:start="189:33" pos:end="189:35">[<expr pos:start="189:34" pos:end="189:34"><literal type="number" pos:start="189:34" pos:end="189:34">0</literal></expr>]</index></name><operator pos:start="189:36" pos:end="189:36">+</operator><literal type="number" pos:start="189:37" pos:end="189:37">1</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="191:25" pos:end="193:40"><if pos:start="191:25" pos:end="193:40">if <condition pos:start="191:28" pos:end="191:40">(<expr pos:start="191:29" pos:end="191:39"><name pos:start="191:29" pos:end="191:32"><name pos:start="191:29" pos:end="191:29">Y</name><index pos:start="191:30" pos:end="191:32">[<expr pos:start="191:31" pos:end="191:31"><literal type="number" pos:start="191:31" pos:end="191:31">2</literal></expr>]</index></name> <operator pos:start="191:34" pos:end="191:34">&gt;</operator> <literal type="number" pos:start="191:36" pos:end="191:39">0x3F</literal></expr>)</condition><block type="pseudo" pos:start="193:29" pos:end="193:40"><block_content pos:start="193:29" pos:end="193:40">

                            <expr_stmt pos:start="193:29" pos:end="193:40"><expr pos:start="193:29" pos:end="193:39"><name pos:start="193:29" pos:end="193:32"><name pos:start="193:29" pos:end="193:29">Y</name><index pos:start="193:30" pos:end="193:32">[<expr pos:start="193:31" pos:end="193:31"><literal type="number" pos:start="193:31" pos:end="193:31">2</literal></expr>]</index></name> <operator pos:start="193:34" pos:end="193:34">=</operator> <literal type="number" pos:start="193:36" pos:end="193:39">0x3F</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="195:25" pos:end="195:36"><expr pos:start="195:25" pos:end="195:35"><name pos:start="195:25" pos:end="195:28"><name pos:start="195:25" pos:end="195:25">Y</name><index pos:start="195:26" pos:end="195:28">[<expr pos:start="195:27" pos:end="195:27"><literal type="number" pos:start="195:27" pos:end="195:27">3</literal></expr>]</index></name> <operator pos:start="195:30" pos:end="195:30">=</operator> <name pos:start="195:32" pos:end="195:35"><name pos:start="195:32" pos:end="195:32">Y</name><index pos:start="195:33" pos:end="195:35">[<expr pos:start="195:34" pos:end="195:34"><literal type="number" pos:start="195:34" pos:end="195:34">2</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="197:23" pos:end="203:21">else <block pos:start="197:28" pos:end="203:21">{<block_content pos:start="199:25" pos:end="201:36">

                        <expr_stmt pos:start="199:25" pos:end="199:36"><expr pos:start="199:25" pos:end="199:35"><name pos:start="199:25" pos:end="199:28"><name pos:start="199:25" pos:end="199:25">Y</name><index pos:start="199:26" pos:end="199:28">[<expr pos:start="199:27" pos:end="199:27"><literal type="number" pos:start="199:27" pos:end="199:27">2</literal></expr>]</index></name> <operator pos:start="199:30" pos:end="199:30">=</operator> <name pos:start="199:32" pos:end="199:35"><name pos:start="199:32" pos:end="199:32">Y</name><index pos:start="199:33" pos:end="199:35">[<expr pos:start="199:34" pos:end="199:34"><literal type="number" pos:start="199:34" pos:end="199:34">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="201:25" pos:end="201:36"><expr pos:start="201:25" pos:end="201:35"><name pos:start="201:25" pos:end="201:28"><name pos:start="201:25" pos:end="201:25">Y</name><index pos:start="201:26" pos:end="201:28">[<expr pos:start="201:27" pos:end="201:27"><literal type="number" pos:start="201:27" pos:end="201:27">3</literal></expr>]</index></name> <operator pos:start="201:30" pos:end="201:30">=</operator> <name pos:start="201:32" pos:end="201:35"><name pos:start="201:32" pos:end="201:32">Y</name><index pos:start="201:33" pos:end="201:35">[<expr pos:start="201:34" pos:end="201:34"><literal type="number" pos:start="201:34" pos:end="201:34">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="205:21" pos:end="205:26">break;</break>



                <case pos:start="209:17" pos:end="209:23">case <expr pos:start="209:22" pos:end="209:22"><literal type="number" pos:start="209:22" pos:end="209:22">2</literal></expr>:</case>

                    <if_stmt pos:start="211:21" pos:end="247:21"><if pos:start="211:21" pos:end="227:21">if <condition pos:start="211:24" pos:end="211:33">(<expr pos:start="211:25" pos:end="211:32"><name pos:start="211:25" pos:end="211:32">modifier</name></expr>)</condition> <block pos:start="211:35" pos:end="227:21">{<block_content pos:start="213:25" pos:end="225:35"> <comment type="line" pos:start="211:37" pos:end="211:63">// unpack four luma samples</comment>

                        <expr_stmt pos:start="213:25" pos:end="213:56"><expr pos:start="213:25" pos:end="213:55"><name pos:start="213:25" pos:end="213:27">tmp</name> <operator pos:start="213:29" pos:end="213:29">=</operator> <call pos:start="213:31" pos:end="213:55"><name pos:start="213:31" pos:end="213:49">bytestream_get_be24</name><argument_list pos:start="213:50" pos:end="213:55">(<argument pos:start="213:51" pos:end="213:54"><expr pos:start="213:51" pos:end="213:54"><operator pos:start="213:51" pos:end="213:51">&amp;</operator><name pos:start="213:52" pos:end="213:54">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="217:25" pos:end="217:50"><expr pos:start="217:25" pos:end="217:49"><name pos:start="217:25" pos:end="217:28"><name pos:start="217:25" pos:end="217:25">Y</name><index pos:start="217:26" pos:end="217:28">[<expr pos:start="217:27" pos:end="217:27"><literal type="number" pos:start="217:27" pos:end="217:27">0</literal></expr>]</index></name> <operator pos:start="217:30" pos:end="217:30">=</operator> <operator pos:start="217:32" pos:end="217:32">(</operator><name pos:start="217:33" pos:end="217:35">tmp</name> <operator pos:start="217:37" pos:end="217:38">&gt;&gt;</operator> <literal type="number" pos:start="217:40" pos:end="217:41">18</literal><operator pos:start="217:42" pos:end="217:42">)</operator> <operator pos:start="217:44" pos:end="217:44">&amp;</operator> <literal type="number" pos:start="217:46" pos:end="217:49">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="219:25" pos:end="219:50"><expr pos:start="219:25" pos:end="219:49"><name pos:start="219:25" pos:end="219:28"><name pos:start="219:25" pos:end="219:25">Y</name><index pos:start="219:26" pos:end="219:28">[<expr pos:start="219:27" pos:end="219:27"><literal type="number" pos:start="219:27" pos:end="219:27">1</literal></expr>]</index></name> <operator pos:start="219:30" pos:end="219:30">=</operator> <operator pos:start="219:32" pos:end="219:32">(</operator><name pos:start="219:33" pos:end="219:35">tmp</name> <operator pos:start="219:37" pos:end="219:38">&gt;&gt;</operator> <literal type="number" pos:start="219:40" pos:end="219:41">12</literal><operator pos:start="219:42" pos:end="219:42">)</operator> <operator pos:start="219:44" pos:end="219:44">&amp;</operator> <literal type="number" pos:start="219:46" pos:end="219:49">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="221:25" pos:end="221:49"><expr pos:start="221:25" pos:end="221:48"><name pos:start="221:25" pos:end="221:28"><name pos:start="221:25" pos:end="221:25">Y</name><index pos:start="221:26" pos:end="221:28">[<expr pos:start="221:27" pos:end="221:27"><literal type="number" pos:start="221:27" pos:end="221:27">2</literal></expr>]</index></name> <operator pos:start="221:30" pos:end="221:30">=</operator> <operator pos:start="221:32" pos:end="221:32">(</operator><name pos:start="221:33" pos:end="221:35">tmp</name> <operator pos:start="221:37" pos:end="221:38">&gt;&gt;</operator> <literal type="number" pos:start="221:40" pos:end="221:40">6</literal><operator pos:start="221:41" pos:end="221:41">)</operator> <operator pos:start="221:43" pos:end="221:43">&amp;</operator> <literal type="number" pos:start="221:45" pos:end="221:48">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="223:25" pos:end="223:42"><expr pos:start="223:25" pos:end="223:41"><name pos:start="223:25" pos:end="223:28"><name pos:start="223:25" pos:end="223:25">Y</name><index pos:start="223:26" pos:end="223:28">[<expr pos:start="223:27" pos:end="223:27"><literal type="number" pos:start="223:27" pos:end="223:27">3</literal></expr>]</index></name> <operator pos:start="223:30" pos:end="223:30">=</operator> <name pos:start="223:32" pos:end="223:34">tmp</name> <operator pos:start="223:36" pos:end="223:36">&amp;</operator> <literal type="number" pos:start="223:38" pos:end="223:41">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="225:25" pos:end="225:35"><expr pos:start="225:25" pos:end="225:34"><name pos:start="225:25" pos:end="225:29">angle</name> <operator pos:start="225:31" pos:end="225:31">=</operator> <literal type="number" pos:start="225:33" pos:end="225:34">16</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="227:23" pos:end="247:21">else <block pos:start="227:28" pos:end="247:21">{<block_content pos:start="229:25" pos:end="245:57"> <comment type="line" pos:start="227:30" pos:end="227:67">// retrieve luma samples from codebook</comment>

                        <expr_stmt pos:start="229:25" pos:end="229:56"><expr pos:start="229:25" pos:end="229:55"><name pos:start="229:25" pos:end="229:27">tmp</name> <operator pos:start="229:29" pos:end="229:29">=</operator> <call pos:start="229:31" pos:end="229:55"><name pos:start="229:31" pos:end="229:49">bytestream_get_be16</name><argument_list pos:start="229:50" pos:end="229:55">(<argument pos:start="229:51" pos:end="229:54"><expr pos:start="229:51" pos:end="229:54"><operator pos:start="229:51" pos:end="229:51">&amp;</operator><name pos:start="229:52" pos:end="229:54">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="233:25" pos:end="233:50"><expr pos:start="233:25" pos:end="233:49"><name pos:start="233:25" pos:end="233:29">angle</name> <operator pos:start="233:31" pos:end="233:31">=</operator> <operator pos:start="233:33" pos:end="233:33">(</operator><name pos:start="233:34" pos:end="233:36">tmp</name> <operator pos:start="233:38" pos:end="233:39">&gt;&gt;</operator> <literal type="number" pos:start="233:41" pos:end="233:42">12</literal><operator pos:start="233:43" pos:end="233:43">)</operator> <operator pos:start="233:45" pos:end="233:45">&amp;</operator> <literal type="number" pos:start="233:47" pos:end="233:49">0xF</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="235:25" pos:end="235:37"><expr pos:start="235:25" pos:end="235:36"><name pos:start="235:25" pos:end="235:27">tmp</name> <operator pos:start="235:29" pos:end="235:30">&amp;=</operator> <literal type="number" pos:start="235:32" pos:end="235:36">0xFFF</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="237:25" pos:end="237:34"><expr pos:start="237:25" pos:end="237:33"><name pos:start="237:25" pos:end="237:27">tmp</name> <operator pos:start="237:29" pos:end="237:31">&lt;&lt;=</operator> <literal type="number" pos:start="237:33" pos:end="237:33">2</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="239:25" pos:end="239:53"><expr pos:start="239:25" pos:end="239:52"><name pos:start="239:25" pos:end="239:28"><name pos:start="239:25" pos:end="239:25">Y</name><index pos:start="239:26" pos:end="239:28">[<expr pos:start="239:27" pos:end="239:27"><literal type="number" pos:start="239:27" pos:end="239:27">0</literal></expr>]</index></name> <operator pos:start="239:30" pos:end="239:30">=</operator> <name pos:start="239:32" pos:end="239:52"><name pos:start="239:32" pos:end="239:32">s</name><operator pos:start="239:33" pos:end="239:34">-&gt;</operator><name pos:start="239:35" pos:end="239:47">ulti_codebook</name><index pos:start="239:48" pos:end="239:52">[<expr pos:start="239:49" pos:end="239:51"><name pos:start="239:49" pos:end="239:51">tmp</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="241:25" pos:end="241:57"><expr pos:start="241:25" pos:end="241:56"><name pos:start="241:25" pos:end="241:28"><name pos:start="241:25" pos:end="241:25">Y</name><index pos:start="241:26" pos:end="241:28">[<expr pos:start="241:27" pos:end="241:27"><literal type="number" pos:start="241:27" pos:end="241:27">1</literal></expr>]</index></name> <operator pos:start="241:30" pos:end="241:30">=</operator> <name pos:start="241:32" pos:end="241:56"><name pos:start="241:32" pos:end="241:32">s</name><operator pos:start="241:33" pos:end="241:34">-&gt;</operator><name pos:start="241:35" pos:end="241:47">ulti_codebook</name><index pos:start="241:48" pos:end="241:56">[<expr pos:start="241:49" pos:end="241:55"><name pos:start="241:49" pos:end="241:51">tmp</name> <operator pos:start="241:53" pos:end="241:53">+</operator> <literal type="number" pos:start="241:55" pos:end="241:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="243:25" pos:end="243:57"><expr pos:start="243:25" pos:end="243:56"><name pos:start="243:25" pos:end="243:28"><name pos:start="243:25" pos:end="243:25">Y</name><index pos:start="243:26" pos:end="243:28">[<expr pos:start="243:27" pos:end="243:27"><literal type="number" pos:start="243:27" pos:end="243:27">2</literal></expr>]</index></name> <operator pos:start="243:30" pos:end="243:30">=</operator> <name pos:start="243:32" pos:end="243:56"><name pos:start="243:32" pos:end="243:32">s</name><operator pos:start="243:33" pos:end="243:34">-&gt;</operator><name pos:start="243:35" pos:end="243:47">ulti_codebook</name><index pos:start="243:48" pos:end="243:56">[<expr pos:start="243:49" pos:end="243:55"><name pos:start="243:49" pos:end="243:51">tmp</name> <operator pos:start="243:53" pos:end="243:53">+</operator> <literal type="number" pos:start="243:55" pos:end="243:55">2</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="245:25" pos:end="245:57"><expr pos:start="245:25" pos:end="245:56"><name pos:start="245:25" pos:end="245:28"><name pos:start="245:25" pos:end="245:25">Y</name><index pos:start="245:26" pos:end="245:28">[<expr pos:start="245:27" pos:end="245:27"><literal type="number" pos:start="245:27" pos:end="245:27">3</literal></expr>]</index></name> <operator pos:start="245:30" pos:end="245:30">=</operator> <name pos:start="245:32" pos:end="245:56"><name pos:start="245:32" pos:end="245:32">s</name><operator pos:start="245:33" pos:end="245:34">-&gt;</operator><name pos:start="245:35" pos:end="245:47">ulti_codebook</name><index pos:start="245:48" pos:end="245:56">[<expr pos:start="245:49" pos:end="245:55"><name pos:start="245:49" pos:end="245:51">tmp</name> <operator pos:start="245:53" pos:end="245:53">+</operator> <literal type="number" pos:start="245:55" pos:end="245:55">3</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="249:21" pos:end="249:26">break;</break>



                <case pos:start="253:17" pos:end="253:23">case <expr pos:start="253:22" pos:end="253:22"><literal type="number" pos:start="253:22" pos:end="253:22">3</literal></expr>:</case>

                    <if_stmt pos:start="255:21" pos:end="347:21"><if pos:start="255:21" pos:end="311:21">if <condition pos:start="255:24" pos:end="255:33">(<expr pos:start="255:25" pos:end="255:32"><name pos:start="255:25" pos:end="255:32">modifier</name></expr>)</condition> <block pos:start="255:35" pos:end="311:21">{<block_content pos:start="257:25" pos:end="309:74"> <comment type="line" pos:start="255:37" pos:end="255:58">// all 16 luma samples</comment>

                        <decl_stmt pos:start="257:25" pos:end="257:41"><decl pos:start="257:25" pos:end="257:40"><type pos:start="257:25" pos:end="257:31"><name pos:start="257:25" pos:end="257:31">uint8_t</name></type> <name pos:start="257:33" pos:end="257:40"><name pos:start="257:33" pos:end="257:36">Luma</name><index pos:start="257:37" pos:end="257:40">[<expr pos:start="257:38" pos:end="257:39"><literal type="number" pos:start="257:38" pos:end="257:39">16</literal></expr>]</index></name></decl>;</decl_stmt>



                        <expr_stmt pos:start="261:25" pos:end="261:56"><expr pos:start="261:25" pos:end="261:55"><name pos:start="261:25" pos:end="261:27">tmp</name> <operator pos:start="261:29" pos:end="261:29">=</operator> <call pos:start="261:31" pos:end="261:55"><name pos:start="261:31" pos:end="261:49">bytestream_get_be24</name><argument_list pos:start="261:50" pos:end="261:55">(<argument pos:start="261:51" pos:end="261:54"><expr pos:start="261:51" pos:end="261:54"><operator pos:start="261:51" pos:end="261:51">&amp;</operator><name pos:start="261:52" pos:end="261:54">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="263:25" pos:end="263:53"><expr pos:start="263:25" pos:end="263:52"><name pos:start="263:25" pos:end="263:31"><name pos:start="263:25" pos:end="263:28">Luma</name><index pos:start="263:29" pos:end="263:31">[<expr pos:start="263:30" pos:end="263:30"><literal type="number" pos:start="263:30" pos:end="263:30">0</literal></expr>]</index></name> <operator pos:start="263:33" pos:end="263:33">=</operator> <operator pos:start="263:35" pos:end="263:35">(</operator><name pos:start="263:36" pos:end="263:38">tmp</name> <operator pos:start="263:40" pos:end="263:41">&gt;&gt;</operator> <literal type="number" pos:start="263:43" pos:end="263:44">18</literal><operator pos:start="263:45" pos:end="263:45">)</operator> <operator pos:start="263:47" pos:end="263:47">&amp;</operator> <literal type="number" pos:start="263:49" pos:end="263:52">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="265:25" pos:end="265:53"><expr pos:start="265:25" pos:end="265:52"><name pos:start="265:25" pos:end="265:31"><name pos:start="265:25" pos:end="265:28">Luma</name><index pos:start="265:29" pos:end="265:31">[<expr pos:start="265:30" pos:end="265:30"><literal type="number" pos:start="265:30" pos:end="265:30">1</literal></expr>]</index></name> <operator pos:start="265:33" pos:end="265:33">=</operator> <operator pos:start="265:35" pos:end="265:35">(</operator><name pos:start="265:36" pos:end="265:38">tmp</name> <operator pos:start="265:40" pos:end="265:41">&gt;&gt;</operator> <literal type="number" pos:start="265:43" pos:end="265:44">12</literal><operator pos:start="265:45" pos:end="265:45">)</operator> <operator pos:start="265:47" pos:end="265:47">&amp;</operator> <literal type="number" pos:start="265:49" pos:end="265:52">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="267:25" pos:end="267:52"><expr pos:start="267:25" pos:end="267:51"><name pos:start="267:25" pos:end="267:31"><name pos:start="267:25" pos:end="267:28">Luma</name><index pos:start="267:29" pos:end="267:31">[<expr pos:start="267:30" pos:end="267:30"><literal type="number" pos:start="267:30" pos:end="267:30">2</literal></expr>]</index></name> <operator pos:start="267:33" pos:end="267:33">=</operator> <operator pos:start="267:35" pos:end="267:35">(</operator><name pos:start="267:36" pos:end="267:38">tmp</name> <operator pos:start="267:40" pos:end="267:41">&gt;&gt;</operator> <literal type="number" pos:start="267:43" pos:end="267:43">6</literal><operator pos:start="267:44" pos:end="267:44">)</operator> <operator pos:start="267:46" pos:end="267:46">&amp;</operator> <literal type="number" pos:start="267:48" pos:end="267:51">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="269:25" pos:end="269:45"><expr pos:start="269:25" pos:end="269:44"><name pos:start="269:25" pos:end="269:31"><name pos:start="269:25" pos:end="269:28">Luma</name><index pos:start="269:29" pos:end="269:31">[<expr pos:start="269:30" pos:end="269:30"><literal type="number" pos:start="269:30" pos:end="269:30">3</literal></expr>]</index></name> <operator pos:start="269:33" pos:end="269:33">=</operator> <name pos:start="269:35" pos:end="269:37">tmp</name> <operator pos:start="269:39" pos:end="269:39">&amp;</operator> <literal type="number" pos:start="269:41" pos:end="269:44">0x3F</literal></expr>;</expr_stmt>



                        <expr_stmt pos:start="273:25" pos:end="273:56"><expr pos:start="273:25" pos:end="273:55"><name pos:start="273:25" pos:end="273:27">tmp</name> <operator pos:start="273:29" pos:end="273:29">=</operator> <call pos:start="273:31" pos:end="273:55"><name pos:start="273:31" pos:end="273:49">bytestream_get_be24</name><argument_list pos:start="273:50" pos:end="273:55">(<argument pos:start="273:51" pos:end="273:54"><expr pos:start="273:51" pos:end="273:54"><operator pos:start="273:51" pos:end="273:51">&amp;</operator><name pos:start="273:52" pos:end="273:54">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="275:25" pos:end="275:53"><expr pos:start="275:25" pos:end="275:52"><name pos:start="275:25" pos:end="275:31"><name pos:start="275:25" pos:end="275:28">Luma</name><index pos:start="275:29" pos:end="275:31">[<expr pos:start="275:30" pos:end="275:30"><literal type="number" pos:start="275:30" pos:end="275:30">4</literal></expr>]</index></name> <operator pos:start="275:33" pos:end="275:33">=</operator> <operator pos:start="275:35" pos:end="275:35">(</operator><name pos:start="275:36" pos:end="275:38">tmp</name> <operator pos:start="275:40" pos:end="275:41">&gt;&gt;</operator> <literal type="number" pos:start="275:43" pos:end="275:44">18</literal><operator pos:start="275:45" pos:end="275:45">)</operator> <operator pos:start="275:47" pos:end="275:47">&amp;</operator> <literal type="number" pos:start="275:49" pos:end="275:52">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="277:25" pos:end="277:53"><expr pos:start="277:25" pos:end="277:52"><name pos:start="277:25" pos:end="277:31"><name pos:start="277:25" pos:end="277:28">Luma</name><index pos:start="277:29" pos:end="277:31">[<expr pos:start="277:30" pos:end="277:30"><literal type="number" pos:start="277:30" pos:end="277:30">5</literal></expr>]</index></name> <operator pos:start="277:33" pos:end="277:33">=</operator> <operator pos:start="277:35" pos:end="277:35">(</operator><name pos:start="277:36" pos:end="277:38">tmp</name> <operator pos:start="277:40" pos:end="277:41">&gt;&gt;</operator> <literal type="number" pos:start="277:43" pos:end="277:44">12</literal><operator pos:start="277:45" pos:end="277:45">)</operator> <operator pos:start="277:47" pos:end="277:47">&amp;</operator> <literal type="number" pos:start="277:49" pos:end="277:52">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="279:25" pos:end="279:52"><expr pos:start="279:25" pos:end="279:51"><name pos:start="279:25" pos:end="279:31"><name pos:start="279:25" pos:end="279:28">Luma</name><index pos:start="279:29" pos:end="279:31">[<expr pos:start="279:30" pos:end="279:30"><literal type="number" pos:start="279:30" pos:end="279:30">6</literal></expr>]</index></name> <operator pos:start="279:33" pos:end="279:33">=</operator> <operator pos:start="279:35" pos:end="279:35">(</operator><name pos:start="279:36" pos:end="279:38">tmp</name> <operator pos:start="279:40" pos:end="279:41">&gt;&gt;</operator> <literal type="number" pos:start="279:43" pos:end="279:43">6</literal><operator pos:start="279:44" pos:end="279:44">)</operator> <operator pos:start="279:46" pos:end="279:46">&amp;</operator> <literal type="number" pos:start="279:48" pos:end="279:51">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="281:25" pos:end="281:45"><expr pos:start="281:25" pos:end="281:44"><name pos:start="281:25" pos:end="281:31"><name pos:start="281:25" pos:end="281:28">Luma</name><index pos:start="281:29" pos:end="281:31">[<expr pos:start="281:30" pos:end="281:30"><literal type="number" pos:start="281:30" pos:end="281:30">7</literal></expr>]</index></name> <operator pos:start="281:33" pos:end="281:33">=</operator> <name pos:start="281:35" pos:end="281:37">tmp</name> <operator pos:start="281:39" pos:end="281:39">&amp;</operator> <literal type="number" pos:start="281:41" pos:end="281:44">0x3F</literal></expr>;</expr_stmt>



                        <expr_stmt pos:start="285:25" pos:end="285:56"><expr pos:start="285:25" pos:end="285:55"><name pos:start="285:25" pos:end="285:27">tmp</name> <operator pos:start="285:29" pos:end="285:29">=</operator> <call pos:start="285:31" pos:end="285:55"><name pos:start="285:31" pos:end="285:49">bytestream_get_be24</name><argument_list pos:start="285:50" pos:end="285:55">(<argument pos:start="285:51" pos:end="285:54"><expr pos:start="285:51" pos:end="285:54"><operator pos:start="285:51" pos:end="285:51">&amp;</operator><name pos:start="285:52" pos:end="285:54">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="287:25" pos:end="287:53"><expr pos:start="287:25" pos:end="287:52"><name pos:start="287:25" pos:end="287:31"><name pos:start="287:25" pos:end="287:28">Luma</name><index pos:start="287:29" pos:end="287:31">[<expr pos:start="287:30" pos:end="287:30"><literal type="number" pos:start="287:30" pos:end="287:30">8</literal></expr>]</index></name> <operator pos:start="287:33" pos:end="287:33">=</operator> <operator pos:start="287:35" pos:end="287:35">(</operator><name pos:start="287:36" pos:end="287:38">tmp</name> <operator pos:start="287:40" pos:end="287:41">&gt;&gt;</operator> <literal type="number" pos:start="287:43" pos:end="287:44">18</literal><operator pos:start="287:45" pos:end="287:45">)</operator> <operator pos:start="287:47" pos:end="287:47">&amp;</operator> <literal type="number" pos:start="287:49" pos:end="287:52">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="289:25" pos:end="289:53"><expr pos:start="289:25" pos:end="289:52"><name pos:start="289:25" pos:end="289:31"><name pos:start="289:25" pos:end="289:28">Luma</name><index pos:start="289:29" pos:end="289:31">[<expr pos:start="289:30" pos:end="289:30"><literal type="number" pos:start="289:30" pos:end="289:30">9</literal></expr>]</index></name> <operator pos:start="289:33" pos:end="289:33">=</operator> <operator pos:start="289:35" pos:end="289:35">(</operator><name pos:start="289:36" pos:end="289:38">tmp</name> <operator pos:start="289:40" pos:end="289:41">&gt;&gt;</operator> <literal type="number" pos:start="289:43" pos:end="289:44">12</literal><operator pos:start="289:45" pos:end="289:45">)</operator> <operator pos:start="289:47" pos:end="289:47">&amp;</operator> <literal type="number" pos:start="289:49" pos:end="289:52">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="291:25" pos:end="291:53"><expr pos:start="291:25" pos:end="291:52"><name pos:start="291:25" pos:end="291:32"><name pos:start="291:25" pos:end="291:28">Luma</name><index pos:start="291:29" pos:end="291:32">[<expr pos:start="291:30" pos:end="291:31"><literal type="number" pos:start="291:30" pos:end="291:31">10</literal></expr>]</index></name> <operator pos:start="291:34" pos:end="291:34">=</operator> <operator pos:start="291:36" pos:end="291:36">(</operator><name pos:start="291:37" pos:end="291:39">tmp</name> <operator pos:start="291:41" pos:end="291:42">&gt;&gt;</operator> <literal type="number" pos:start="291:44" pos:end="291:44">6</literal><operator pos:start="291:45" pos:end="291:45">)</operator> <operator pos:start="291:47" pos:end="291:47">&amp;</operator> <literal type="number" pos:start="291:49" pos:end="291:52">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="293:25" pos:end="293:46"><expr pos:start="293:25" pos:end="293:45"><name pos:start="293:25" pos:end="293:32"><name pos:start="293:25" pos:end="293:28">Luma</name><index pos:start="293:29" pos:end="293:32">[<expr pos:start="293:30" pos:end="293:31"><literal type="number" pos:start="293:30" pos:end="293:31">11</literal></expr>]</index></name> <operator pos:start="293:34" pos:end="293:34">=</operator> <name pos:start="293:36" pos:end="293:38">tmp</name> <operator pos:start="293:40" pos:end="293:40">&amp;</operator> <literal type="number" pos:start="293:42" pos:end="293:45">0x3F</literal></expr>;</expr_stmt>



                        <expr_stmt pos:start="297:25" pos:end="297:56"><expr pos:start="297:25" pos:end="297:55"><name pos:start="297:25" pos:end="297:27">tmp</name> <operator pos:start="297:29" pos:end="297:29">=</operator> <call pos:start="297:31" pos:end="297:55"><name pos:start="297:31" pos:end="297:49">bytestream_get_be24</name><argument_list pos:start="297:50" pos:end="297:55">(<argument pos:start="297:51" pos:end="297:54"><expr pos:start="297:51" pos:end="297:54"><operator pos:start="297:51" pos:end="297:51">&amp;</operator><name pos:start="297:52" pos:end="297:54">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="299:25" pos:end="299:54"><expr pos:start="299:25" pos:end="299:53"><name pos:start="299:25" pos:end="299:32"><name pos:start="299:25" pos:end="299:28">Luma</name><index pos:start="299:29" pos:end="299:32">[<expr pos:start="299:30" pos:end="299:31"><literal type="number" pos:start="299:30" pos:end="299:31">12</literal></expr>]</index></name> <operator pos:start="299:34" pos:end="299:34">=</operator> <operator pos:start="299:36" pos:end="299:36">(</operator><name pos:start="299:37" pos:end="299:39">tmp</name> <operator pos:start="299:41" pos:end="299:42">&gt;&gt;</operator> <literal type="number" pos:start="299:44" pos:end="299:45">18</literal><operator pos:start="299:46" pos:end="299:46">)</operator> <operator pos:start="299:48" pos:end="299:48">&amp;</operator> <literal type="number" pos:start="299:50" pos:end="299:53">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="301:25" pos:end="301:54"><expr pos:start="301:25" pos:end="301:53"><name pos:start="301:25" pos:end="301:32"><name pos:start="301:25" pos:end="301:28">Luma</name><index pos:start="301:29" pos:end="301:32">[<expr pos:start="301:30" pos:end="301:31"><literal type="number" pos:start="301:30" pos:end="301:31">13</literal></expr>]</index></name> <operator pos:start="301:34" pos:end="301:34">=</operator> <operator pos:start="301:36" pos:end="301:36">(</operator><name pos:start="301:37" pos:end="301:39">tmp</name> <operator pos:start="301:41" pos:end="301:42">&gt;&gt;</operator> <literal type="number" pos:start="301:44" pos:end="301:45">12</literal><operator pos:start="301:46" pos:end="301:46">)</operator> <operator pos:start="301:48" pos:end="301:48">&amp;</operator> <literal type="number" pos:start="301:50" pos:end="301:53">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="303:25" pos:end="303:53"><expr pos:start="303:25" pos:end="303:52"><name pos:start="303:25" pos:end="303:32"><name pos:start="303:25" pos:end="303:28">Luma</name><index pos:start="303:29" pos:end="303:32">[<expr pos:start="303:30" pos:end="303:31"><literal type="number" pos:start="303:30" pos:end="303:31">14</literal></expr>]</index></name> <operator pos:start="303:34" pos:end="303:34">=</operator> <operator pos:start="303:36" pos:end="303:36">(</operator><name pos:start="303:37" pos:end="303:39">tmp</name> <operator pos:start="303:41" pos:end="303:42">&gt;&gt;</operator> <literal type="number" pos:start="303:44" pos:end="303:44">6</literal><operator pos:start="303:45" pos:end="303:45">)</operator> <operator pos:start="303:47" pos:end="303:47">&amp;</operator> <literal type="number" pos:start="303:49" pos:end="303:52">0x3F</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="305:25" pos:end="305:46"><expr pos:start="305:25" pos:end="305:45"><name pos:start="305:25" pos:end="305:32"><name pos:start="305:25" pos:end="305:28">Luma</name><index pos:start="305:29" pos:end="305:32">[<expr pos:start="305:30" pos:end="305:31"><literal type="number" pos:start="305:30" pos:end="305:31">15</literal></expr>]</index></name> <operator pos:start="305:34" pos:end="305:34">=</operator> <name pos:start="305:36" pos:end="305:38">tmp</name> <operator pos:start="305:40" pos:end="305:40">&amp;</operator> <literal type="number" pos:start="305:42" pos:end="305:45">0x3F</literal></expr>;</expr_stmt>



                        <expr_stmt pos:start="309:25" pos:end="309:74"><expr pos:start="309:25" pos:end="309:73"><call pos:start="309:25" pos:end="309:73"><name pos:start="309:25" pos:end="309:40">ulti_convert_yuv</name><argument_list pos:start="309:41" pos:end="309:73">(<argument pos:start="309:42" pos:end="309:50"><expr pos:start="309:42" pos:end="309:50"><operator pos:start="309:42" pos:end="309:42">&amp;</operator><name pos:start="309:43" pos:end="309:50"><name pos:start="309:43" pos:end="309:43">s</name><operator pos:start="309:44" pos:end="309:45">-&gt;</operator><name pos:start="309:46" pos:end="309:50">frame</name></name></expr></argument>, <argument pos:start="309:53" pos:end="309:54"><expr pos:start="309:53" pos:end="309:54"><name pos:start="309:53" pos:end="309:54">tx</name></expr></argument>, <argument pos:start="309:57" pos:end="309:58"><expr pos:start="309:57" pos:end="309:58"><name pos:start="309:57" pos:end="309:58">ty</name></expr></argument>, <argument pos:start="309:61" pos:end="309:64"><expr pos:start="309:61" pos:end="309:64"><name pos:start="309:61" pos:end="309:64">Luma</name></expr></argument>, <argument pos:start="309:67" pos:end="309:72"><expr pos:start="309:67" pos:end="309:72"><name pos:start="309:67" pos:end="309:72">chroma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="311:23" pos:end="347:21">else <block pos:start="311:28" pos:end="347:21">{<block_content pos:start="313:25" pos:end="345:25">

                        <expr_stmt pos:start="313:25" pos:end="313:37"><expr pos:start="313:25" pos:end="313:36"><name pos:start="313:25" pos:end="313:27">tmp</name> <operator pos:start="313:29" pos:end="313:29">=</operator> <operator pos:start="313:31" pos:end="313:31">*</operator><name pos:start="313:32" pos:end="313:34">buf</name><operator pos:start="313:35" pos:end="313:36">++</operator></expr>;</expr_stmt>

                        <if_stmt pos:start="315:25" pos:end="345:25"><if pos:start="315:25" pos:end="331:25">if<condition pos:start="315:27" pos:end="315:38">(<expr pos:start="315:28" pos:end="315:37"><name pos:start="315:28" pos:end="315:30">tmp</name> <operator pos:start="315:32" pos:end="315:32">&amp;</operator> <literal type="number" pos:start="315:34" pos:end="315:37">0x80</literal></expr>)</condition> <block pos:start="315:40" pos:end="331:25">{<block_content pos:start="317:29" pos:end="329:75">

                            <expr_stmt pos:start="317:29" pos:end="317:53"><expr pos:start="317:29" pos:end="317:52"><name pos:start="317:29" pos:end="317:33">angle</name> <operator pos:start="317:35" pos:end="317:35">=</operator> <operator pos:start="317:37" pos:end="317:37">(</operator><name pos:start="317:38" pos:end="317:40">tmp</name> <operator pos:start="317:42" pos:end="317:43">&gt;&gt;</operator> <literal type="number" pos:start="317:45" pos:end="317:45">4</literal><operator pos:start="317:46" pos:end="317:46">)</operator> <operator pos:start="317:48" pos:end="317:48">&amp;</operator> <literal type="number" pos:start="317:50" pos:end="317:52">0x7</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="319:29" pos:end="319:54"><expr pos:start="319:29" pos:end="319:53"><name pos:start="319:29" pos:end="319:31">tmp</name> <operator pos:start="319:33" pos:end="319:33">=</operator> <operator pos:start="319:35" pos:end="319:35">(</operator><name pos:start="319:36" pos:end="319:38">tmp</name> <operator pos:start="319:40" pos:end="319:41">&lt;&lt;</operator> <literal type="number" pos:start="319:43" pos:end="319:43">8</literal><operator pos:start="319:44" pos:end="319:44">)</operator> <operator pos:start="319:46" pos:end="319:46">+</operator> <operator pos:start="319:48" pos:end="319:48">*</operator><name pos:start="319:49" pos:end="319:51">buf</name><operator pos:start="319:52" pos:end="319:53">++</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="321:29" pos:end="321:53"><expr pos:start="321:29" pos:end="321:52"><name pos:start="321:29" pos:end="321:32"><name pos:start="321:29" pos:end="321:29">Y</name><index pos:start="321:30" pos:end="321:32">[<expr pos:start="321:31" pos:end="321:31"><literal type="number" pos:start="321:31" pos:end="321:31">0</literal></expr>]</index></name> <operator pos:start="321:34" pos:end="321:34">=</operator> <operator pos:start="321:36" pos:end="321:36">(</operator><name pos:start="321:37" pos:end="321:39">tmp</name> <operator pos:start="321:41" pos:end="321:42">&gt;&gt;</operator> <literal type="number" pos:start="321:44" pos:end="321:44">6</literal><operator pos:start="321:45" pos:end="321:45">)</operator> <operator pos:start="321:47" pos:end="321:47">&amp;</operator> <literal type="number" pos:start="321:49" pos:end="321:52">0x3F</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="323:29" pos:end="323:46"><expr pos:start="323:29" pos:end="323:45"><name pos:start="323:29" pos:end="323:32"><name pos:start="323:29" pos:end="323:29">Y</name><index pos:start="323:30" pos:end="323:32">[<expr pos:start="323:31" pos:end="323:31"><literal type="number" pos:start="323:31" pos:end="323:31">1</literal></expr>]</index></name> <operator pos:start="323:34" pos:end="323:34">=</operator> <name pos:start="323:36" pos:end="323:38">tmp</name> <operator pos:start="323:40" pos:end="323:40">&amp;</operator> <literal type="number" pos:start="323:42" pos:end="323:45">0x3F</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="325:29" pos:end="325:51"><expr pos:start="325:29" pos:end="325:50"><name pos:start="325:29" pos:end="325:32"><name pos:start="325:29" pos:end="325:29">Y</name><index pos:start="325:30" pos:end="325:32">[<expr pos:start="325:31" pos:end="325:31"><literal type="number" pos:start="325:31" pos:end="325:31">2</literal></expr>]</index></name> <operator pos:start="325:34" pos:end="325:34">=</operator> <operator pos:start="325:36" pos:end="325:36">(</operator><operator pos:start="325:37" pos:end="325:37">*</operator><name pos:start="325:38" pos:end="325:40">buf</name><operator pos:start="325:41" pos:end="325:42">++</operator><operator pos:start="325:43" pos:end="325:43">)</operator> <operator pos:start="325:45" pos:end="325:45">&amp;</operator> <literal type="number" pos:start="325:47" pos:end="325:50">0x3F</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="327:29" pos:end="327:51"><expr pos:start="327:29" pos:end="327:50"><name pos:start="327:29" pos:end="327:32"><name pos:start="327:29" pos:end="327:29">Y</name><index pos:start="327:30" pos:end="327:32">[<expr pos:start="327:31" pos:end="327:31"><literal type="number" pos:start="327:31" pos:end="327:31">3</literal></expr>]</index></name> <operator pos:start="327:34" pos:end="327:34">=</operator> <operator pos:start="327:36" pos:end="327:36">(</operator><operator pos:start="327:37" pos:end="327:37">*</operator><name pos:start="327:38" pos:end="327:40">buf</name><operator pos:start="327:41" pos:end="327:42">++</operator><operator pos:start="327:43" pos:end="327:43">)</operator> <operator pos:start="327:45" pos:end="327:45">&amp;</operator> <literal type="number" pos:start="327:47" pos:end="327:50">0x3F</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="329:29" pos:end="329:75"><expr pos:start="329:29" pos:end="329:74"><call pos:start="329:29" pos:end="329:74"><name pos:start="329:29" pos:end="329:37">ulti_grad</name><argument_list pos:start="329:38" pos:end="329:74">(<argument pos:start="329:39" pos:end="329:47"><expr pos:start="329:39" pos:end="329:47"><operator pos:start="329:39" pos:end="329:39">&amp;</operator><name pos:start="329:40" pos:end="329:47"><name pos:start="329:40" pos:end="329:40">s</name><operator pos:start="329:41" pos:end="329:42">-&gt;</operator><name pos:start="329:43" pos:end="329:47">frame</name></name></expr></argument>, <argument pos:start="329:50" pos:end="329:51"><expr pos:start="329:50" pos:end="329:51"><name pos:start="329:50" pos:end="329:51">tx</name></expr></argument>, <argument pos:start="329:54" pos:end="329:55"><expr pos:start="329:54" pos:end="329:55"><name pos:start="329:54" pos:end="329:55">ty</name></expr></argument>, <argument pos:start="329:58" pos:end="329:58"><expr pos:start="329:58" pos:end="329:58"><name pos:start="329:58" pos:end="329:58">Y</name></expr></argument>, <argument pos:start="329:61" pos:end="329:66"><expr pos:start="329:61" pos:end="329:66"><name pos:start="329:61" pos:end="329:66">chroma</name></expr></argument>, <argument pos:start="329:69" pos:end="329:73"><expr pos:start="329:69" pos:end="329:73"><name pos:start="329:69" pos:end="329:73">angle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="329:77" pos:end="329:88">//draw block</comment>

                        </block_content>}</block></if> <else pos:start="331:27" pos:end="345:25">else <block pos:start="331:32" pos:end="345:25">{<block_content pos:start="333:29" pos:end="343:88"> <comment type="line" pos:start="331:34" pos:end="331:49">// some patterns</comment>

                            <decl_stmt pos:start="333:29" pos:end="333:39"><decl pos:start="333:29" pos:end="333:34"><type pos:start="333:29" pos:end="333:31"><name pos:start="333:29" pos:end="333:31">int</name></type> <name pos:start="333:33" pos:end="333:34">f0</name></decl>, <decl pos:start="333:37" pos:end="333:38"><type ref="prev" pos:start="333:29" pos:end="333:31"/><name pos:start="333:37" pos:end="333:38">f1</name></decl>;</decl_stmt>

                            <expr_stmt pos:start="335:29" pos:end="335:40"><expr pos:start="335:29" pos:end="335:39"><name pos:start="335:29" pos:end="335:30">f0</name> <operator pos:start="335:32" pos:end="335:32">=</operator> <operator pos:start="335:34" pos:end="335:34">*</operator><name pos:start="335:35" pos:end="335:37">buf</name><operator pos:start="335:38" pos:end="335:39">++</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="337:29" pos:end="337:37"><expr pos:start="337:29" pos:end="337:36"><name pos:start="337:29" pos:end="337:30">f1</name> <operator pos:start="337:32" pos:end="337:32">=</operator> <name pos:start="337:34" pos:end="337:36">tmp</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="339:29" pos:end="339:51"><expr pos:start="339:29" pos:end="339:50"><name pos:start="339:29" pos:end="339:32"><name pos:start="339:29" pos:end="339:29">Y</name><index pos:start="339:30" pos:end="339:32">[<expr pos:start="339:31" pos:end="339:31"><literal type="number" pos:start="339:31" pos:end="339:31">0</literal></expr>]</index></name> <operator pos:start="339:34" pos:end="339:34">=</operator> <operator pos:start="339:36" pos:end="339:36">(</operator><operator pos:start="339:37" pos:end="339:37">*</operator><name pos:start="339:38" pos:end="339:40">buf</name><operator pos:start="339:41" pos:end="339:42">++</operator><operator pos:start="339:43" pos:end="339:43">)</operator> <operator pos:start="339:45" pos:end="339:45">&amp;</operator> <literal type="number" pos:start="339:47" pos:end="339:50">0x3F</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="341:29" pos:end="341:51"><expr pos:start="341:29" pos:end="341:50"><name pos:start="341:29" pos:end="341:32"><name pos:start="341:29" pos:end="341:29">Y</name><index pos:start="341:30" pos:end="341:32">[<expr pos:start="341:31" pos:end="341:31"><literal type="number" pos:start="341:31" pos:end="341:31">1</literal></expr>]</index></name> <operator pos:start="341:34" pos:end="341:34">=</operator> <operator pos:start="341:36" pos:end="341:36">(</operator><operator pos:start="341:37" pos:end="341:37">*</operator><name pos:start="341:38" pos:end="341:40">buf</name><operator pos:start="341:41" pos:end="341:42">++</operator><operator pos:start="341:43" pos:end="341:43">)</operator> <operator pos:start="341:45" pos:end="341:45">&amp;</operator> <literal type="number" pos:start="341:47" pos:end="341:50">0x3F</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="343:29" pos:end="343:88"><expr pos:start="343:29" pos:end="343:87"><call pos:start="343:29" pos:end="343:87"><name pos:start="343:29" pos:end="343:40">ulti_pattern</name><argument_list pos:start="343:41" pos:end="343:87">(<argument pos:start="343:42" pos:end="343:50"><expr pos:start="343:42" pos:end="343:50"><operator pos:start="343:42" pos:end="343:42">&amp;</operator><name pos:start="343:43" pos:end="343:50"><name pos:start="343:43" pos:end="343:43">s</name><operator pos:start="343:44" pos:end="343:45">-&gt;</operator><name pos:start="343:46" pos:end="343:50">frame</name></name></expr></argument>, <argument pos:start="343:53" pos:end="343:54"><expr pos:start="343:53" pos:end="343:54"><name pos:start="343:53" pos:end="343:54">tx</name></expr></argument>, <argument pos:start="343:57" pos:end="343:58"><expr pos:start="343:57" pos:end="343:58"><name pos:start="343:57" pos:end="343:58">ty</name></expr></argument>, <argument pos:start="343:61" pos:end="343:62"><expr pos:start="343:61" pos:end="343:62"><name pos:start="343:61" pos:end="343:62">f1</name></expr></argument>, <argument pos:start="343:65" pos:end="343:66"><expr pos:start="343:65" pos:end="343:66"><name pos:start="343:65" pos:end="343:66">f0</name></expr></argument>, <argument pos:start="343:69" pos:end="343:72"><expr pos:start="343:69" pos:end="343:72"><name pos:start="343:69" pos:end="343:72"><name pos:start="343:69" pos:end="343:69">Y</name><index pos:start="343:70" pos:end="343:72">[<expr pos:start="343:71" pos:end="343:71"><literal type="number" pos:start="343:71" pos:end="343:71">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="343:75" pos:end="343:78"><expr pos:start="343:75" pos:end="343:78"><name pos:start="343:75" pos:end="343:78"><name pos:start="343:75" pos:end="343:75">Y</name><index pos:start="343:76" pos:end="343:78">[<expr pos:start="343:77" pos:end="343:77"><literal type="number" pos:start="343:77" pos:end="343:77">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="343:81" pos:end="343:86"><expr pos:start="343:81" pos:end="343:86"><name pos:start="343:81" pos:end="343:86">chroma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="349:21" pos:end="349:26">break;</break>

                </block_content>}</block></switch>

                <if_stmt pos:start="353:17" pos:end="355:67"><if pos:start="353:17" pos:end="355:67">if<condition pos:start="353:19" pos:end="353:29">(<expr pos:start="353:20" pos:end="353:28"><name pos:start="353:20" pos:end="353:23">code</name> <operator pos:start="353:25" pos:end="353:26">!=</operator> <literal type="number" pos:start="353:28" pos:end="353:28">3</literal></expr>)</condition><block type="pseudo" pos:start="355:21" pos:end="355:67"><block_content pos:start="355:21" pos:end="355:67">

                    <expr_stmt pos:start="355:21" pos:end="355:67"><expr pos:start="355:21" pos:end="355:66"><call pos:start="355:21" pos:end="355:66"><name pos:start="355:21" pos:end="355:29">ulti_grad</name><argument_list pos:start="355:30" pos:end="355:66">(<argument pos:start="355:31" pos:end="355:39"><expr pos:start="355:31" pos:end="355:39"><operator pos:start="355:31" pos:end="355:31">&amp;</operator><name pos:start="355:32" pos:end="355:39"><name pos:start="355:32" pos:end="355:32">s</name><operator pos:start="355:33" pos:end="355:34">-&gt;</operator><name pos:start="355:35" pos:end="355:39">frame</name></name></expr></argument>, <argument pos:start="355:42" pos:end="355:43"><expr pos:start="355:42" pos:end="355:43"><name pos:start="355:42" pos:end="355:43">tx</name></expr></argument>, <argument pos:start="355:46" pos:end="355:47"><expr pos:start="355:46" pos:end="355:47"><name pos:start="355:46" pos:end="355:47">ty</name></expr></argument>, <argument pos:start="355:50" pos:end="355:50"><expr pos:start="355:50" pos:end="355:50"><name pos:start="355:50" pos:end="355:50">Y</name></expr></argument>, <argument pos:start="355:53" pos:end="355:58"><expr pos:start="355:53" pos:end="355:58"><name pos:start="355:53" pos:end="355:58">chroma</name></expr></argument>, <argument pos:start="355:61" pos:end="355:65"><expr pos:start="355:61" pos:end="355:65"><name pos:start="355:61" pos:end="355:65">angle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="355:69" pos:end="355:81">// draw block</comment>

            </block_content>}</block></for>

            <expr_stmt pos:start="359:13" pos:end="359:21"><expr pos:start="359:13" pos:end="359:20"><name pos:start="359:13" pos:end="359:18">blocks</name><operator pos:start="359:19" pos:end="359:20">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="361:17" pos:end="361:23"><expr pos:start="361:17" pos:end="361:22"><name pos:start="361:17" pos:end="361:17">x</name> <operator pos:start="361:19" pos:end="361:20">+=</operator> <literal type="number" pos:start="361:22" pos:end="361:22">8</literal></expr>;</expr_stmt>

            <if_stmt pos:start="363:13" pos:end="369:13"><if pos:start="363:13" pos:end="369:13">if<condition pos:start="363:15" pos:end="363:29">(<expr pos:start="363:16" pos:end="363:28"><name pos:start="363:16" pos:end="363:16">x</name> <operator pos:start="363:18" pos:end="363:19">&gt;=</operator> <name pos:start="363:21" pos:end="363:28"><name pos:start="363:21" pos:end="363:21">s</name><operator pos:start="363:22" pos:end="363:23">-&gt;</operator><name pos:start="363:24" pos:end="363:28">width</name></name></expr>)</condition> <block pos:start="363:31" pos:end="369:13">{<block_content pos:start="365:17" pos:end="367:23">

                <expr_stmt pos:start="365:17" pos:end="365:22"><expr pos:start="365:17" pos:end="365:21"><name pos:start="365:17" pos:end="365:17">x</name> <operator pos:start="365:19" pos:end="365:19">=</operator> <literal type="number" pos:start="365:21" pos:end="365:21">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="367:17" pos:end="367:23"><expr pos:start="367:17" pos:end="367:22"><name pos:start="367:17" pos:end="367:17">y</name> <operator pos:start="367:19" pos:end="367:20">+=</operator> <literal type="number" pos:start="367:22" pos:end="367:22">8</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="377:5" pos:end="377:31"><expr pos:start="377:5" pos:end="377:30"><operator pos:start="377:5" pos:end="377:5">*</operator><name pos:start="377:6" pos:end="377:14">data_size</name><operator pos:start="377:15" pos:end="377:15">=</operator><sizeof pos:start="377:16" pos:end="377:30">sizeof<argument_list pos:start="377:22" pos:end="377:30">(<argument pos:start="377:23" pos:end="377:29"><expr pos:start="377:23" pos:end="377:29"><name pos:start="377:23" pos:end="377:29">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="379:5" pos:end="379:30"><expr pos:start="379:5" pos:end="379:29"><operator pos:start="379:5" pos:end="379:5">*</operator><operator pos:start="379:6" pos:end="379:6">(</operator><name pos:start="379:7" pos:end="379:13">AVFrame</name><operator pos:start="379:14" pos:end="379:14">*</operator><operator pos:start="379:15" pos:end="379:15">)</operator><name pos:start="379:16" pos:end="379:19">data</name><operator pos:start="379:20" pos:end="379:20">=</operator> <name pos:start="379:22" pos:end="379:29"><name pos:start="379:22" pos:end="379:22">s</name><operator pos:start="379:23" pos:end="379:24">-&gt;</operator><name pos:start="379:25" pos:end="379:29">frame</name></name></expr>;</expr_stmt>



    <return pos:start="383:5" pos:end="383:20">return <expr pos:start="383:12" pos:end="383:19"><name pos:start="383:12" pos:end="383:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
