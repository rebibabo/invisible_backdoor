<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27136.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">idcin_probe</name><parameter_list pos:start="1:23" pos:end="1:38">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:34">AVProbeData</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:35">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:23">number</name></decl>, <decl pos:start="5:26" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:26" pos:end="5:36">sample_rate</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="27:7">/*

     * This is what you could call a "probabilistic" file check: id CIN

     * files don't have a definite file signature. In lieu of such a marker,

     * perform sanity checks on the 5 32-bit header fields:

     *  width, height: greater than 0, less than or equal to 1024

     * audio sample rate: greater than or equal to 8000, less than or

     *  equal to 48000, or 0 for no audio

     * audio sample width (bytes/sample): 0 for no audio, or 1 or 2

     * audio channels: 0 for no audio, or 1 or 2

     */</comment>



    <comment type="block" pos:start="31:5" pos:end="33:49">/* check we have enough data to do all checks, otherwise the

       0-padding may cause a wrong recognition */</comment>

    <if_stmt pos:start="35:5" pos:end="37:17"><if pos:start="35:5" pos:end="37:17">if <condition pos:start="35:8" pos:end="35:25">(<expr pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:9">p</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:19">buf_size</name></name> <operator pos:start="35:21" pos:end="35:21">&lt;</operator> <literal type="number" pos:start="35:23" pos:end="35:24">20</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:17"><block_content pos:start="37:9" pos:end="37:17">

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:31">/* check the video width */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:10">number</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:32"><name pos:start="43:14" pos:end="43:20">AV_RL32</name><argument_list pos:start="43:21" pos:end="43:32">(<argument pos:start="43:22" pos:end="43:31"><expr pos:start="43:22" pos:end="43:31"><operator pos:start="43:22" pos:end="43:22">&amp;</operator><name pos:start="43:23" pos:end="43:31"><name pos:start="43:23" pos:end="43:23">p</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:28">buf</name><index pos:start="43:29" pos:end="43:31">[<expr pos:start="43:30" pos:end="43:30"><literal type="number" pos:start="43:30" pos:end="43:30">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:16"><if pos:start="45:5" pos:end="47:16">if <condition pos:start="45:8" pos:end="45:41">(<expr pos:start="45:9" pos:end="45:40"><operator pos:start="45:9" pos:end="45:9">(</operator><name pos:start="45:10" pos:end="45:15">number</name> <operator pos:start="45:17" pos:end="45:18">==</operator> <literal type="number" pos:start="45:20" pos:end="45:20">0</literal><operator pos:start="45:21" pos:end="45:21">)</operator> <operator pos:start="45:23" pos:end="45:24">||</operator> <operator pos:start="45:26" pos:end="45:26">(</operator><name pos:start="45:27" pos:end="45:32">number</name> <operator pos:start="45:34" pos:end="45:34">&gt;</operator> <literal type="number" pos:start="45:36" pos:end="45:39">1024</literal><operator pos:start="45:40" pos:end="45:40">)</operator></expr>)</condition><block type="pseudo" pos:start="47:8" pos:end="47:16"><block_content pos:start="47:8" pos:end="47:16">

       <return pos:start="47:8" pos:end="47:16">return <expr pos:start="47:15" pos:end="47:15"><literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:32">/* check the video height */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:33"><expr pos:start="53:5" pos:end="53:32"><name pos:start="53:5" pos:end="53:10">number</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="53:32"><name pos:start="53:14" pos:end="53:20">AV_RL32</name><argument_list pos:start="53:21" pos:end="53:32">(<argument pos:start="53:22" pos:end="53:31"><expr pos:start="53:22" pos:end="53:31"><operator pos:start="53:22" pos:end="53:22">&amp;</operator><name pos:start="53:23" pos:end="53:31"><name pos:start="53:23" pos:end="53:23">p</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:28">buf</name><index pos:start="53:29" pos:end="53:31">[<expr pos:start="53:30" pos:end="53:30"><literal type="number" pos:start="53:30" pos:end="53:30">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:16"><if pos:start="55:5" pos:end="57:16">if <condition pos:start="55:8" pos:end="55:41">(<expr pos:start="55:9" pos:end="55:40"><operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:15">number</name> <operator pos:start="55:17" pos:end="55:18">==</operator> <literal type="number" pos:start="55:20" pos:end="55:20">0</literal><operator pos:start="55:21" pos:end="55:21">)</operator> <operator pos:start="55:23" pos:end="55:24">||</operator> <operator pos:start="55:26" pos:end="55:26">(</operator><name pos:start="55:27" pos:end="55:32">number</name> <operator pos:start="55:34" pos:end="55:34">&gt;</operator> <literal type="number" pos:start="55:36" pos:end="55:39">1024</literal><operator pos:start="55:40" pos:end="55:40">)</operator></expr>)</condition><block type="pseudo" pos:start="57:8" pos:end="57:16"><block_content pos:start="57:8" pos:end="57:16">

       <return pos:start="57:8" pos:end="57:16">return <expr pos:start="57:15" pos:end="57:15"><literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:37">/* check the audio sample rate */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:38"><expr pos:start="63:5" pos:end="63:37"><name pos:start="63:5" pos:end="63:15">sample_rate</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:37"><name pos:start="63:19" pos:end="63:25">AV_RL32</name><argument_list pos:start="63:26" pos:end="63:37">(<argument pos:start="63:27" pos:end="63:36"><expr pos:start="63:27" pos:end="63:36"><operator pos:start="63:27" pos:end="63:27">&amp;</operator><name pos:start="63:28" pos:end="63:36"><name pos:start="63:28" pos:end="63:28">p</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:33">buf</name><index pos:start="63:34" pos:end="63:36">[<expr pos:start="63:35" pos:end="63:35"><literal type="number" pos:start="63:35" pos:end="63:35">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="67:17"><if pos:start="65:5" pos:end="67:17">if <condition pos:start="65:8" pos:end="65:67">(<expr pos:start="65:9" pos:end="65:66"><name pos:start="65:9" pos:end="65:19">sample_rate</name> <operator pos:start="65:21" pos:end="65:22">&amp;&amp;</operator> <operator pos:start="65:24" pos:end="65:24">(</operator><name pos:start="65:25" pos:end="65:59"><name pos:start="65:25" pos:end="65:35">sample_rate</name> <argument_list type="generic" pos:start="65:37" pos:end="65:59">&lt; <argument pos:start="65:39" pos:end="65:57"><expr pos:start="65:39" pos:end="65:57"><literal type="number" pos:start="65:39" pos:end="65:42">8000</literal> <operator pos:start="65:44" pos:end="65:45">||</operator> <name pos:start="65:47" pos:end="65:57">sample_rate</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="65:61" pos:end="65:65">48000</literal><operator pos:start="65:66" pos:end="65:66">)</operator></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:17"><block_content pos:start="67:9" pos:end="67:17">

        <return pos:start="67:9" pos:end="67:17">return <expr pos:start="67:16" pos:end="67:16"><literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:38">/* check the audio bytes/sample */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:34"><expr pos:start="73:5" pos:end="73:33"><name pos:start="73:5" pos:end="73:10">number</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <call pos:start="73:14" pos:end="73:33"><name pos:start="73:14" pos:end="73:20">AV_RL32</name><argument_list pos:start="73:21" pos:end="73:33">(<argument pos:start="73:22" pos:end="73:32"><expr pos:start="73:22" pos:end="73:32"><operator pos:start="73:22" pos:end="73:22">&amp;</operator><name pos:start="73:23" pos:end="73:32"><name pos:start="73:23" pos:end="73:23">p</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:28">buf</name><index pos:start="73:29" pos:end="73:32">[<expr pos:start="73:30" pos:end="73:31"><literal type="number" pos:start="73:30" pos:end="73:31">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="77:17"><if pos:start="75:5" pos:end="77:17">if <condition pos:start="75:8" pos:end="75:45">(<expr pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:14">number</name> <operator pos:start="75:16" pos:end="75:16">&gt;</operator> <literal type="number" pos:start="75:18" pos:end="75:18">2</literal> <operator pos:start="75:20" pos:end="75:21">||</operator> <name pos:start="75:23" pos:end="75:33">sample_rate</name> <operator pos:start="75:35" pos:end="75:36">&amp;&amp;</operator> <operator pos:start="75:38" pos:end="75:38">!</operator><name pos:start="75:39" pos:end="75:44">number</name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:17"><block_content pos:start="77:9" pos:end="77:17">

        <return pos:start="77:9" pos:end="77:17">return <expr pos:start="77:16" pos:end="77:16"><literal type="number" pos:start="77:16" pos:end="77:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:34">/* check the audio channels */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:34"><expr pos:start="83:5" pos:end="83:33"><name pos:start="83:5" pos:end="83:10">number</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="83:33"><name pos:start="83:14" pos:end="83:20">AV_RL32</name><argument_list pos:start="83:21" pos:end="83:33">(<argument pos:start="83:22" pos:end="83:32"><expr pos:start="83:22" pos:end="83:32"><operator pos:start="83:22" pos:end="83:22">&amp;</operator><name pos:start="83:23" pos:end="83:32"><name pos:start="83:23" pos:end="83:23">p</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:28">buf</name><index pos:start="83:29" pos:end="83:32">[<expr pos:start="83:30" pos:end="83:31"><literal type="number" pos:start="83:30" pos:end="83:31">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="87:17"><if pos:start="85:5" pos:end="87:17">if <condition pos:start="85:8" pos:end="85:45">(<expr pos:start="85:9" pos:end="85:44"><name pos:start="85:9" pos:end="85:14">number</name> <operator pos:start="85:16" pos:end="85:16">&gt;</operator> <literal type="number" pos:start="85:18" pos:end="85:18">2</literal> <operator pos:start="85:20" pos:end="85:21">||</operator> <name pos:start="85:23" pos:end="85:33">sample_rate</name> <operator pos:start="85:35" pos:end="85:36">&amp;&amp;</operator> <operator pos:start="85:38" pos:end="85:38">!</operator><name pos:start="85:39" pos:end="85:44">number</name></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:17"><block_content pos:start="87:9" pos:end="87:17">

        <return pos:start="87:9" pos:end="87:17">return <expr pos:start="87:16" pos:end="87:16"><literal type="number" pos:start="87:16" pos:end="87:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="91:5" pos:end="91:65">/* return half certainty since this check is a bit sketchy */</comment>

    <return pos:start="93:5" pos:end="93:35">return <expr pos:start="93:12" pos:end="93:34"><name pos:start="93:12" pos:end="93:34">AVPROBE_SCORE_EXTENSION</name></expr>;</return>

</block_content>}</block></function>
</unit>
