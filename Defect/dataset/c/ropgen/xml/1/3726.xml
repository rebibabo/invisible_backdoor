<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3726.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:48">decode_subband_slice_buffered</name><parameter_list pos:start="1:49" pos:end="1:134">(<parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:60">SnowContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:63">s</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:75"><decl pos:start="1:66" pos:end="1:75"><type pos:start="1:66" pos:end="1:75"><name pos:start="1:66" pos:end="1:72">SubBand</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:75">b</name></decl></parameter>, <parameter pos:start="1:78" pos:end="1:94"><decl pos:start="1:78" pos:end="1:94"><type pos:start="1:78" pos:end="1:94"><name pos:start="1:78" pos:end="1:89">slice_buffer</name> <modifier pos:start="1:91" pos:end="1:91">*</modifier></type> <name pos:start="1:93" pos:end="1:94">sb</name></decl></parameter>, <parameter pos:start="1:97" pos:end="1:107"><decl pos:start="1:97" pos:end="1:107"><type pos:start="1:97" pos:end="1:107"><name pos:start="1:97" pos:end="1:99">int</name></type> <name pos:start="1:101" pos:end="1:107">start_y</name></decl></parameter>, <parameter pos:start="1:110" pos:end="1:114"><decl pos:start="1:110" pos:end="1:114"><type pos:start="1:110" pos:end="1:114"><name pos:start="1:110" pos:end="1:112">int</name></type> <name pos:start="1:114" pos:end="1:114">h</name></decl></parameter>, <parameter pos:start="1:117" pos:end="1:133"><decl pos:start="1:117" pos:end="1:133"><type pos:start="1:117" pos:end="1:130"><name pos:start="1:117" pos:end="1:119">int</name></type> <name pos:start="1:121" pos:end="1:133"><name pos:start="1:121" pos:end="1:130">save_state</name><index pos:start="1:131" pos:end="1:133">[<expr pos:start="1:132" pos:end="1:132"><literal type="number" pos:start="1:132" pos:end="1:132">1</literal></expr>]</index></name></decl></parameter>)</parameter_list><block pos:start="1:135" pos:end="79:1">{<block_content pos:start="3:5" pos:end="77:11">

    <decl_stmt pos:start="3:5" pos:end="3:26"><decl pos:start="3:5" pos:end="3:25"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:15">w</name><init pos:start="3:16" pos:end="3:25">= <expr pos:start="3:18" pos:end="3:25"><name pos:start="3:18" pos:end="3:25"><name pos:start="3:18" pos:end="3:18">b</name><operator pos:start="3:19" pos:end="3:20">-&gt;</operator><name pos:start="3:21" pos:end="3:25">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:18">qlog</name><init pos:start="7:19" pos:end="7:59">= <expr pos:start="7:21" pos:end="7:59"><call pos:start="7:21" pos:end="7:59"><name pos:start="7:21" pos:end="7:27">av_clip</name><argument_list pos:start="7:28" pos:end="7:59">(<argument pos:start="7:29" pos:end="7:45"><expr pos:start="7:29" pos:end="7:45"><name pos:start="7:29" pos:end="7:35"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:35">qlog</name></name> <operator pos:start="7:37" pos:end="7:37">+</operator> <name pos:start="7:39" pos:end="7:45"><name pos:start="7:39" pos:end="7:39">b</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:45">qlog</name></name></expr></argument>, <argument pos:start="7:48" pos:end="7:48"><expr pos:start="7:48" pos:end="7:48"><literal type="number" pos:start="7:48" pos:end="7:48">0</literal></expr></argument>, <argument pos:start="7:51" pos:end="7:58"><expr pos:start="7:51" pos:end="7:58"><name pos:start="7:51" pos:end="7:55">QROOT</name><operator pos:start="7:56" pos:end="7:56">*</operator><literal type="number" pos:start="7:57" pos:end="7:58">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">qmul</name><init pos:start="9:13" pos:end="9:53">= <expr pos:start="9:15" pos:end="9:53"><name pos:start="9:15" pos:end="9:37"><name pos:start="9:15" pos:end="9:21">ff_qexp</name><index pos:start="9:22" pos:end="9:37">[<expr pos:start="9:23" pos:end="9:36"><name pos:start="9:23" pos:end="9:26">qlog</name><operator pos:start="9:27" pos:end="9:27">&amp;</operator><operator pos:start="9:28" pos:end="9:28">(</operator><name pos:start="9:29" pos:end="9:33">QROOT</name><operator pos:start="9:34" pos:end="9:34">-</operator><literal type="number" pos:start="9:35" pos:end="9:35">1</literal><operator pos:start="9:36" pos:end="9:36">)</operator></expr>]</index></name><operator pos:start="9:38" pos:end="9:39">&lt;&lt;</operator><operator pos:start="9:40" pos:end="9:40">(</operator><name pos:start="9:41" pos:end="9:44">qlog</name><operator pos:start="9:45" pos:end="9:46">&gt;&gt;</operator><name pos:start="9:47" pos:end="9:52">QSHIFT</name><operator pos:start="9:53" pos:end="9:53">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">qadd</name><init pos:start="11:13" pos:end="11:42">= <expr pos:start="11:15" pos:end="11:42"><operator pos:start="11:15" pos:end="11:15">(</operator><name pos:start="11:16" pos:end="11:23"><name pos:start="11:16" pos:end="11:16">s</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:23">qbias</name></name><operator pos:start="11:24" pos:end="11:24">*</operator><name pos:start="11:25" pos:end="11:28">qmul</name><operator pos:start="11:29" pos:end="11:29">)</operator><operator pos:start="11:30" pos:end="11:31">&gt;&gt;</operator><name pos:start="11:32" pos:end="11:42">QBIAS_SHIFT</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">new_index</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if<condition pos:start="17:7" pos:end="17:69">(<expr pos:start="17:8" pos:end="17:68"><name pos:start="17:8" pos:end="17:14"><name pos:start="17:8" pos:end="17:8">b</name><operator pos:start="17:9" pos:end="17:10">-&gt;</operator><name pos:start="17:11" pos:end="17:14">ibuf</name></name> <operator pos:start="17:16" pos:end="17:17">==</operator> <name pos:start="17:19" pos:end="17:40"><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:40">spatial_idwt_buffer</name></name> <operator pos:start="17:42" pos:end="17:43">||</operator> <name pos:start="17:45" pos:end="17:51"><name pos:start="17:45" pos:end="17:45">s</name><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:51">qlog</name></name> <operator pos:start="17:53" pos:end="17:54">==</operator> <name pos:start="17:56" pos:end="17:68">LOSSLESS_QLOG</name></expr>)</condition><block pos:start="17:70" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:27">

        <expr_stmt pos:start="19:9" pos:end="19:16"><expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:12">qadd</name><operator pos:start="19:13" pos:end="19:13">=</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:27"><expr pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:12">qmul</name><operator pos:start="21:13" pos:end="21:13">=</operator> <literal type="number" pos:start="21:15" pos:end="21:15">1</literal><operator pos:start="21:16" pos:end="21:17">&lt;&lt;</operator><name pos:start="21:18" pos:end="21:26">QEXPSHIFT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:68">/* If we are on the second or later slice, restore our index. */</comment>

    <if_stmt pos:start="29:5" pos:end="31:34"><if pos:start="29:5" pos:end="31:34">if <condition pos:start="29:8" pos:end="29:21">(<expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:15">start_y</name> <operator pos:start="29:17" pos:end="29:18">!=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:34"><block_content pos:start="31:9" pos:end="31:34">

        <expr_stmt pos:start="31:9" pos:end="31:34"><expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:17">new_index</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:33"><name pos:start="31:21" pos:end="31:30">save_state</name><index pos:start="31:31" pos:end="31:33">[<expr pos:start="31:32" pos:end="31:32"><literal type="number" pos:start="31:32" pos:end="31:32">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>





    <for pos:start="37:5" pos:end="67:5">for<control pos:start="37:8" pos:end="37:28">(<init pos:start="37:9" pos:end="37:18"><expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:9">y</name><operator pos:start="37:10" pos:end="37:10">=</operator><name pos:start="37:11" pos:end="37:17">start_y</name></expr>;</init> <condition pos:start="37:20" pos:end="37:23"><expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:20">y</name><operator pos:start="37:21" pos:end="37:21">&lt;</operator><name pos:start="37:22" pos:end="37:22">h</name></expr>;</condition> <incr pos:start="37:25" pos:end="37:27"><expr pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:25">y</name><operator pos:start="37:26" pos:end="37:27">++</operator></expr></incr>)</control><block pos:start="37:29" pos:end="67:5">{<block_content pos:start="39:9" pos:end="65:9">

        <decl_stmt pos:start="39:9" pos:end="39:18"><decl pos:start="39:9" pos:end="39:17"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:13">x</name> <init pos:start="39:15" pos:end="39:17">= <expr pos:start="39:17" pos:end="39:17"><literal type="number" pos:start="39:17" pos:end="39:17">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:14"><decl pos:start="41:9" pos:end="41:13"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:13">v</name></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:108"><decl pos:start="43:9" pos:end="43:107"><type pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:16">IDWTELEM</name> <modifier pos:start="43:18" pos:end="43:18">*</modifier></type> <name pos:start="43:20" pos:end="43:23">line</name> <init pos:start="43:25" pos:end="43:107">= <expr pos:start="43:27" pos:end="43:107"><call pos:start="43:27" pos:end="43:89"><name pos:start="43:27" pos:end="43:47">slice_buffer_get_line</name><argument_list pos:start="43:48" pos:end="43:89">(<argument pos:start="43:49" pos:end="43:50"><expr pos:start="43:49" pos:end="43:50"><name pos:start="43:49" pos:end="43:50">sb</name></expr></argument>, <argument pos:start="43:53" pos:end="43:88"><expr pos:start="43:53" pos:end="43:88"><name pos:start="43:53" pos:end="43:53">y</name> <operator pos:start="43:55" pos:end="43:55">*</operator> <name pos:start="43:57" pos:end="43:70"><name pos:start="43:57" pos:end="43:57">b</name><operator pos:start="43:58" pos:end="43:59">-&gt;</operator><name pos:start="43:60" pos:end="43:70">stride_line</name></name> <operator pos:start="43:72" pos:end="43:72">+</operator> <name pos:start="43:74" pos:end="43:88"><name pos:start="43:74" pos:end="43:74">b</name><operator pos:start="43:75" pos:end="43:76">-&gt;</operator><name pos:start="43:77" pos:end="43:88">buf_y_offset</name></name></expr></argument>)</argument_list></call> <operator pos:start="43:91" pos:end="43:91">+</operator> <name pos:start="43:93" pos:end="43:107"><name pos:start="43:93" pos:end="43:93">b</name><operator pos:start="43:94" pos:end="43:95">-&gt;</operator><name pos:start="43:96" pos:end="43:107">buf_x_offset</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:51"><expr pos:start="45:9" pos:end="45:50"><call pos:start="45:9" pos:end="45:50"><name pos:start="45:9" pos:end="45:14">memset</name><argument_list pos:start="45:15" pos:end="45:50">(<argument pos:start="45:16" pos:end="45:19"><expr pos:start="45:16" pos:end="45:19"><name pos:start="45:16" pos:end="45:19">line</name></expr></argument>, <argument pos:start="45:22" pos:end="45:22"><expr pos:start="45:22" pos:end="45:22"><literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr></argument>, <argument pos:start="45:25" pos:end="45:49"><expr pos:start="45:25" pos:end="45:49"><name pos:start="45:25" pos:end="45:32"><name pos:start="45:25" pos:end="45:25">b</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:32">width</name></name><operator pos:start="45:33" pos:end="45:33">*</operator><sizeof pos:start="45:34" pos:end="45:49">sizeof<argument_list pos:start="45:40" pos:end="45:49">(<argument pos:start="45:41" pos:end="45:48"><expr pos:start="45:41" pos:end="45:48"><name pos:start="45:41" pos:end="45:48">IDWTELEM</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:40"><expr pos:start="47:9" pos:end="47:39"><name pos:start="47:9" pos:end="47:9">v</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <name pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:13">b</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:22">x_coeff</name><index pos:start="47:23" pos:end="47:33">[<expr pos:start="47:24" pos:end="47:32"><name pos:start="47:24" pos:end="47:32">new_index</name></expr>]</index></name><operator pos:start="47:34" pos:end="47:34">.</operator><name pos:start="47:35" pos:end="47:39">coeff</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:38"><expr pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:9">x</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <name pos:start="49:13" pos:end="49:35"><name pos:start="49:13" pos:end="49:13">b</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:22">x_coeff</name><index pos:start="49:23" pos:end="49:35">[<expr pos:start="49:24" pos:end="49:34"><name pos:start="49:24" pos:end="49:32">new_index</name><operator pos:start="49:33" pos:end="49:34">++</operator></expr>]</index></name><operator pos:start="49:36" pos:end="49:36">.</operator><name pos:start="49:37" pos:end="49:37">x</name></expr>;</expr_stmt>

        <while pos:start="51:9" pos:end="65:9">while<condition pos:start="51:14" pos:end="51:20">(<expr pos:start="51:15" pos:end="51:19"><name pos:start="51:15" pos:end="51:15">x</name> <operator pos:start="51:17" pos:end="51:17">&lt;</operator> <name pos:start="51:19" pos:end="51:19">w</name></expr>)</condition><block pos:start="51:21" pos:end="65:9">{<block_content pos:start="53:13" pos:end="63:42">

            <decl_stmt pos:start="53:13" pos:end="53:61"><decl pos:start="53:13" pos:end="53:60"><type pos:start="53:13" pos:end="53:24"><specifier pos:start="53:13" pos:end="53:20">register</specifier> <name pos:start="53:22" pos:end="53:24">int</name></type> <name pos:start="53:26" pos:end="53:26">t</name><init pos:start="53:27" pos:end="53:60">= <expr pos:start="53:29" pos:end="53:60"><operator pos:start="53:29" pos:end="53:29">(</operator> <operator pos:start="53:31" pos:end="53:31">(</operator><name pos:start="53:32" pos:end="53:32">v</name><operator pos:start="53:33" pos:end="53:34">&gt;&gt;</operator><literal type="number" pos:start="53:35" pos:end="53:35">1</literal><operator pos:start="53:36" pos:end="53:36">)</operator><operator pos:start="53:37" pos:end="53:37">*</operator><name pos:start="53:38" pos:end="53:41">qmul</name> <operator pos:start="53:43" pos:end="53:43">+</operator> <name pos:start="53:45" pos:end="53:48">qadd</name><operator pos:start="53:49" pos:end="53:49">)</operator><operator pos:start="53:50" pos:end="53:51">&gt;&gt;</operator><name pos:start="53:52" pos:end="53:60">QEXPSHIFT</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="55:13" pos:end="55:35"><decl pos:start="55:13" pos:end="55:34"><type pos:start="55:13" pos:end="55:24"><specifier pos:start="55:13" pos:end="55:20">register</specifier> <name pos:start="55:22" pos:end="55:24">int</name></type> <name pos:start="55:26" pos:end="55:26">u</name><init pos:start="55:27" pos:end="55:34">= <expr pos:start="55:29" pos:end="55:34"><operator pos:start="55:29" pos:end="55:29">-</operator><operator pos:start="55:30" pos:end="55:30">(</operator><name pos:start="55:31" pos:end="55:31">v</name><operator pos:start="55:32" pos:end="55:32">&amp;</operator><literal type="number" pos:start="55:33" pos:end="55:33">1</literal><operator pos:start="55:34" pos:end="55:34">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:32"><expr pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:16">line</name><index pos:start="57:17" pos:end="57:19">[<expr pos:start="57:18" pos:end="57:18"><name pos:start="57:18" pos:end="57:18">x</name></expr>]</index></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <operator pos:start="57:23" pos:end="57:23">(</operator><name pos:start="57:24" pos:end="57:24">t</name><operator pos:start="57:25" pos:end="57:25">^</operator><name pos:start="57:26" pos:end="57:26">u</name><operator pos:start="57:27" pos:end="57:27">)</operator> <operator pos:start="57:29" pos:end="57:29">-</operator> <name pos:start="57:31" pos:end="57:31">u</name></expr>;</expr_stmt>



            <expr_stmt pos:start="61:13" pos:end="61:44"><expr pos:start="61:13" pos:end="61:43"><name pos:start="61:13" pos:end="61:13">v</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <name pos:start="61:17" pos:end="61:37"><name pos:start="61:17" pos:end="61:17">b</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:26">x_coeff</name><index pos:start="61:27" pos:end="61:37">[<expr pos:start="61:28" pos:end="61:36"><name pos:start="61:28" pos:end="61:36">new_index</name></expr>]</index></name><operator pos:start="61:38" pos:end="61:38">.</operator><name pos:start="61:39" pos:end="61:43">coeff</name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:42"><expr pos:start="63:13" pos:end="63:41"><name pos:start="63:13" pos:end="63:13">x</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:39"><name pos:start="63:17" pos:end="63:17">b</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:26">x_coeff</name><index pos:start="63:27" pos:end="63:39">[<expr pos:start="63:28" pos:end="63:38"><name pos:start="63:28" pos:end="63:36">new_index</name><operator pos:start="63:37" pos:end="63:38">++</operator></expr>]</index></name><operator pos:start="63:40" pos:end="63:40">.</operator><name pos:start="63:41" pos:end="63:41">x</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></for>



    <comment type="block" pos:start="71:5" pos:end="71:48">/* Save our variables for the next slice. */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:30"><expr pos:start="73:5" pos:end="73:29"><name pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:14">save_state</name><index pos:start="73:15" pos:end="73:17">[<expr pos:start="73:16" pos:end="73:16"><literal type="number" pos:start="73:16" pos:end="73:16">0</literal></expr>]</index></name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:29">new_index</name></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:11">return;</return>

</block_content>}</block></function>
</unit>
