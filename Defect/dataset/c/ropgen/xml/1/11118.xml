<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11118.c" pos:tabs="8"><function pos:start="1:1" pos:end="437:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">net_init_l2tpv3</name><parameter_list pos:start="1:20" pos:end="5:41">(<parameter pos:start="1:21" pos:end="1:48"><decl pos:start="1:21" pos:end="1:48"><type pos:start="1:21" pos:end="1:48"><specifier pos:start="1:21" pos:end="1:25">const</specifier> <name pos:start="1:27" pos:end="1:42">NetClientOptions</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">opts</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:36"><decl pos:start="3:21" pos:end="3:36"><type pos:start="3:21" pos:end="3:36"><specifier pos:start="3:21" pos:end="3:25">const</specifier> <name pos:start="3:27" pos:end="3:30">char</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:36">name</name></decl></parameter>,

                    <parameter pos:start="5:21" pos:end="5:40"><decl pos:start="5:21" pos:end="5:40"><type pos:start="5:21" pos:end="5:40"><name pos:start="5:21" pos:end="5:34">NetClientState</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:40">peer</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="437:1">{<block_content pos:start="13:5" pos:end="435:14">





    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:31"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:29">NetdevL2TPv3Options</name> <modifier pos:start="13:31" pos:end="13:31">*</modifier></type><name pos:start="13:32" pos:end="13:37">l2tpv3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">NetL2TPV3State</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:21">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:18">NetClientState</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:22">nc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:10">fd</name> <init pos:start="19:12" pos:end="19:15">= <expr pos:start="19:14" pos:end="19:15"><operator pos:start="19:14" pos:end="19:14">-</operator><literal type="number" pos:start="19:15" pos:end="19:15">1</literal></expr></init></decl>, <decl pos:start="19:18" pos:end="19:23"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:18" pos:end="19:23">gairet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:10">struct</name> <name pos:start="21:12" pos:end="21:19">addrinfo</name></name></type> <name pos:start="21:21" pos:end="21:25">hints</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:35"><decl pos:start="23:5" pos:end="23:34"><type pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:10">struct</name> <name pos:start="23:12" pos:end="23:19">addrinfo</name></name> <modifier pos:start="23:21" pos:end="23:21">*</modifier></type><name pos:start="23:22" pos:end="23:27">result</name> <init pos:start="23:29" pos:end="23:34">= <expr pos:start="23:31" pos:end="23:34"><name pos:start="23:31" pos:end="23:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:17"><type pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:8">char</name> <modifier pos:start="25:10" pos:end="25:10">*</modifier></type><name pos:start="25:11" pos:end="25:17">srcport</name></decl>, <decl pos:start="25:20" pos:end="25:27"><type ref="prev" pos:start="25:5" pos:end="25:10"><modifier pos:start="25:20" pos:end="25:20">*</modifier></type><name pos:start="25:21" pos:end="25:27">dstport</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:69"><expr pos:start="29:5" pos:end="29:68"><name pos:start="29:5" pos:end="29:6">nc</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:68"><name pos:start="29:10" pos:end="29:28">qemu_new_net_client</name><argument_list pos:start="29:29" pos:end="29:68">(<argument pos:start="29:30" pos:end="29:45"><expr pos:start="29:30" pos:end="29:45"><operator pos:start="29:30" pos:end="29:30">&amp;</operator><name pos:start="29:31" pos:end="29:45">net_l2tpv3_info</name></expr></argument>, <argument pos:start="29:48" pos:end="29:51"><expr pos:start="29:48" pos:end="29:51"><name pos:start="29:48" pos:end="29:51">peer</name></expr></argument>, <argument pos:start="29:54" pos:end="29:61"><expr pos:start="29:54" pos:end="29:61"><literal type="string" pos:start="29:54" pos:end="29:61">"l2tpv3"</literal></expr></argument>, <argument pos:start="29:64" pos:end="29:67"><expr pos:start="29:64" pos:end="29:67"><name pos:start="29:64" pos:end="29:67">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:5">s</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <call pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:17">DO_UPCAST</name><argument_list pos:start="33:18" pos:end="33:41">(<argument pos:start="33:19" pos:end="33:32"><expr pos:start="33:19" pos:end="33:32"><name pos:start="33:19" pos:end="33:32">NetL2TPV3State</name></expr></argument>, <argument pos:start="33:35" pos:end="33:36"><expr pos:start="33:35" pos:end="33:36"><name pos:start="33:35" pos:end="33:36">nc</name></expr></argument>, <argument pos:start="33:39" pos:end="33:40"><expr pos:start="33:39" pos:end="33:40"><name pos:start="33:39" pos:end="33:40">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:22"><expr pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:17">queue_head</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="number" pos:start="37:21" pos:end="37:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:22"><expr pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:17">queue_tail</name></name> <operator pos:start="39:19" pos:end="39:19">=</operator> <literal type="number" pos:start="39:21" pos:end="39:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:22">header_mismatch</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:30">false</name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:57"><expr pos:start="45:5" pos:end="45:56"><call pos:start="45:5" pos:end="45:56"><name pos:start="45:5" pos:end="45:10">assert</name><argument_list pos:start="45:11" pos:end="45:56">(<argument pos:start="45:12" pos:end="45:55"><expr pos:start="45:12" pos:end="45:55"><name pos:start="45:12" pos:end="45:21"><name pos:start="45:12" pos:end="45:15">opts</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:21">kind</name></name> <operator pos:start="45:23" pos:end="45:24">==</operator> <name pos:start="45:26" pos:end="45:55">NET_CLIENT_OPTIONS_KIND_L2TPV3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:26"><expr pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:10">l2tpv3</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <name pos:start="47:14" pos:end="47:25"><name pos:start="47:14" pos:end="47:17">opts</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:25">l2tpv3</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:41">(<expr pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:14">l2tpv3</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:24">has_ipv6</name></name> <operator pos:start="51:26" pos:end="51:27">&amp;&amp;</operator> <name pos:start="51:29" pos:end="51:40"><name pos:start="51:29" pos:end="51:34">l2tpv3</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:40">ipv6</name></name></expr>)</condition> <block pos:start="51:43" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:31">

        <expr_stmt pos:start="53:9" pos:end="53:31"><expr pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:15">ipv6</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:30"><name pos:start="53:19" pos:end="53:24">l2tpv3</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:30">ipv6</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="59:5">else <block pos:start="55:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:24">

        <expr_stmt pos:start="57:9" pos:end="57:24"><expr pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:15">ipv6</name></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:23">false</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:55">(<expr pos:start="63:9" pos:end="63:54"><operator pos:start="63:9" pos:end="63:9">(</operator><name pos:start="63:10" pos:end="63:27"><name pos:start="63:10" pos:end="63:15">l2tpv3</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:27">has_offset</name></name><operator pos:start="63:28" pos:end="63:28">)</operator> <operator pos:start="63:30" pos:end="63:31">&amp;&amp;</operator> <operator pos:start="63:33" pos:end="63:33">(</operator><name pos:start="63:34" pos:end="63:47"><name pos:start="63:34" pos:end="63:39">l2tpv3</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:47">offset</name></name> <operator pos:start="63:49" pos:end="63:49">&gt;</operator> <literal type="number" pos:start="63:51" pos:end="63:53">256</literal><operator pos:start="63:54" pos:end="63:54">)</operator></expr>)</condition> <block pos:start="63:57" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:20">

        <expr_stmt pos:start="65:9" pos:end="65:73"><expr pos:start="65:9" pos:end="65:72"><call pos:start="65:9" pos:end="65:72"><name pos:start="65:9" pos:end="65:20">error_report</name><argument_list pos:start="65:21" pos:end="65:72">(<argument pos:start="65:22" pos:end="65:71"><expr pos:start="65:22" pos:end="65:71"><literal type="string" pos:start="65:22" pos:end="65:71">"l2tpv3_open : offset must be less than 256 bytes"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="67:9" pos:end="67:20">goto <name pos:start="67:14" pos:end="67:19">outerr</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="89:5"><if pos:start="73:5" pos:end="85:5">if <condition pos:start="73:8" pos:end="73:53">(<expr pos:start="73:9" pos:end="73:52"><name pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:14">l2tpv3</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:28">has_rxcookie</name></name> <operator pos:start="73:30" pos:end="73:31">||</operator> <name pos:start="73:33" pos:end="73:52"><name pos:start="73:33" pos:end="73:38">l2tpv3</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:52">has_txcookie</name></name></expr>)</condition> <block pos:start="73:55" pos:end="85:5">{<block_content pos:start="75:9" pos:end="83:9">

        <if_stmt pos:start="75:9" pos:end="83:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:57">(<expr pos:start="75:13" pos:end="75:56"><name pos:start="75:13" pos:end="75:32"><name pos:start="75:13" pos:end="75:18">l2tpv3</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:32">has_rxcookie</name></name> <operator pos:start="75:34" pos:end="75:35">&amp;&amp;</operator> <name pos:start="75:37" pos:end="75:56"><name pos:start="75:37" pos:end="75:42">l2tpv3</name><operator pos:start="75:43" pos:end="75:44">-&gt;</operator><name pos:start="75:45" pos:end="75:56">has_txcookie</name></name></expr>)</condition> <block pos:start="75:59" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:29">

            <expr_stmt pos:start="77:13" pos:end="77:29"><expr pos:start="77:13" pos:end="77:28"><name pos:start="77:13" pos:end="77:21"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:21">cookie</name></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <name pos:start="77:25" pos:end="77:28">true</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="79:11" pos:end="83:9">else <block pos:start="79:16" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:24">

            <goto pos:start="81:13" pos:end="81:24">goto <name pos:start="81:18" pos:end="81:23">outerr</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="85:7" pos:end="89:5">else <block pos:start="85:12" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:26">

        <expr_stmt pos:start="87:9" pos:end="87:26"><expr pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:17"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:17">cookie</name></name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:25">false</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="93:5" pos:end="101:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:49">(<expr pos:start="93:9" pos:end="93:48"><name pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:14">l2tpv3</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:28">has_cookie64</name></name> <operator pos:start="93:30" pos:end="93:31">||</operator> <name pos:start="93:33" pos:end="93:48"><name pos:start="93:33" pos:end="93:38">l2tpv3</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:48">cookie64</name></name></expr>)</condition> <block pos:start="93:51" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:32">

        <expr_stmt pos:start="95:9" pos:end="95:32"><expr pos:start="95:9" pos:end="95:31"><name pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:23">cookie_is_64</name></name>  <operator pos:start="95:26" pos:end="95:26">=</operator> <name pos:start="95:28" pos:end="95:31">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="101:5">else <block pos:start="97:12" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:33">

        <expr_stmt pos:start="99:9" pos:end="99:33"><expr pos:start="99:9" pos:end="99:32"><name pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:23">cookie_is_64</name></name>  <operator pos:start="99:26" pos:end="99:26">=</operator> <name pos:start="99:28" pos:end="99:32">false</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="105:5" pos:end="131:5"><if pos:start="105:5" pos:end="123:5">if <condition pos:start="105:8" pos:end="105:39">(<expr pos:start="105:9" pos:end="105:38"><name pos:start="105:9" pos:end="105:23"><name pos:start="105:9" pos:end="105:14">l2tpv3</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:23">has_udp</name></name> <operator pos:start="105:25" pos:end="105:26">&amp;&amp;</operator> <name pos:start="105:28" pos:end="105:38"><name pos:start="105:28" pos:end="105:33">l2tpv3</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:38">udp</name></name></expr>)</condition> <block pos:start="105:41" pos:end="123:5">{<block_content pos:start="107:9" pos:end="121:9">

        <expr_stmt pos:start="107:9" pos:end="107:22"><expr pos:start="107:9" pos:end="107:21"><name pos:start="107:9" pos:end="107:14"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:14">udp</name></name> <operator pos:start="107:16" pos:end="107:16">=</operator> <name pos:start="107:18" pos:end="107:21">true</name></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="121:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:58">(<expr pos:start="109:13" pos:end="109:57"><operator pos:start="109:13" pos:end="109:13">!</operator><operator pos:start="109:14" pos:end="109:14">(</operator><name pos:start="109:15" pos:end="109:33"><name pos:start="109:15" pos:end="109:20">l2tpv3</name><operator pos:start="109:21" pos:end="109:22">-&gt;</operator><name pos:start="109:23" pos:end="109:33">has_srcport</name></name> <operator pos:start="109:35" pos:end="109:36">&amp;&amp;</operator> <name pos:start="109:38" pos:end="109:56"><name pos:start="109:38" pos:end="109:43">l2tpv3</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:56">has_dstport</name></name><operator pos:start="109:57" pos:end="109:57">)</operator></expr>)</condition> <block pos:start="109:60" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:24">

            <expr_stmt pos:start="111:13" pos:end="111:77"><expr pos:start="111:13" pos:end="111:76"><call pos:start="111:13" pos:end="111:76"><name pos:start="111:13" pos:end="111:24">error_report</name><argument_list pos:start="111:25" pos:end="111:76">(<argument pos:start="111:26" pos:end="111:75"><expr pos:start="111:26" pos:end="111:75"><literal type="string" pos:start="111:26" pos:end="111:75">"l2tpv3_open : need both src and dst port for udp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="113:13" pos:end="113:24">goto <name pos:start="113:18" pos:end="113:23">outerr</name>;</goto>

        </block_content>}</block></if> <else pos:start="115:11" pos:end="121:9">else <block pos:start="115:16" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:38">

            <expr_stmt pos:start="117:13" pos:end="117:38"><expr pos:start="117:13" pos:end="117:37"><name pos:start="117:13" pos:end="117:19">srcport</name> <operator pos:start="117:21" pos:end="117:21">=</operator> <name pos:start="117:23" pos:end="117:37"><name pos:start="117:23" pos:end="117:28">l2tpv3</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:37">srcport</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:38"><expr pos:start="119:13" pos:end="119:37"><name pos:start="119:13" pos:end="119:19">dstport</name> <operator pos:start="119:21" pos:end="119:21">=</operator> <name pos:start="119:23" pos:end="119:37"><name pos:start="119:23" pos:end="119:28">l2tpv3</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:37">dstport</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="123:7" pos:end="131:5">else <block pos:start="123:12" pos:end="131:5">{<block_content pos:start="125:9" pos:end="129:23">

        <expr_stmt pos:start="125:9" pos:end="125:23"><expr pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:14"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:14">udp</name></name> <operator pos:start="125:16" pos:end="125:16">=</operator> <name pos:start="125:18" pos:end="125:22">false</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:23"><expr pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:15">srcport</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <name pos:start="127:19" pos:end="127:22">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:23"><expr pos:start="129:9" pos:end="129:22"><name pos:start="129:9" pos:end="129:15">dstport</name> <operator pos:start="129:17" pos:end="129:17">=</operator> <name pos:start="129:19" pos:end="129:22">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>





    <expr_stmt pos:start="137:5" pos:end="137:18"><expr pos:start="137:5" pos:end="137:17"><name pos:start="137:5" pos:end="137:13"><name pos:start="137:5" pos:end="137:5">s</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:13">offset</name></name> <operator pos:start="137:15" pos:end="137:15">=</operator> <literal type="number" pos:start="137:17" pos:end="137:17">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:26"><expr pos:start="139:5" pos:end="139:25"><name pos:start="139:5" pos:end="139:21"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:21">session_offset</name></name> <operator pos:start="139:23" pos:end="139:23">=</operator> <literal type="number" pos:start="139:25" pos:end="139:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:25"><expr pos:start="141:5" pos:end="141:24"><name pos:start="141:5" pos:end="141:20"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:20">cookie_offset</name></name> <operator pos:start="141:22" pos:end="141:22">=</operator> <literal type="number" pos:start="141:24" pos:end="141:24">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:26"><expr pos:start="143:5" pos:end="143:25"><name pos:start="143:5" pos:end="143:21"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:21">counter_offset</name></name> <operator pos:start="143:23" pos:end="143:23">=</operator> <literal type="number" pos:start="143:25" pos:end="143:25">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:38"><expr pos:start="147:5" pos:end="147:37"><name pos:start="147:5" pos:end="147:17"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:17">tx_session</name></name> <operator pos:start="147:19" pos:end="147:19">=</operator> <name pos:start="147:21" pos:end="147:37"><name pos:start="147:21" pos:end="147:26">l2tpv3</name><operator pos:start="147:27" pos:end="147:28">-&gt;</operator><name pos:start="147:29" pos:end="147:37">txsession</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="149:5" pos:end="157:5"><if pos:start="149:5" pos:end="153:5">if <condition pos:start="149:8" pos:end="149:30">(<expr pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:14">l2tpv3</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:29">has_rxsession</name></name></expr>)</condition> <block pos:start="149:32" pos:end="153:5">{<block_content pos:start="151:9" pos:end="151:42">

        <expr_stmt pos:start="151:9" pos:end="151:42"><expr pos:start="151:9" pos:end="151:41"><name pos:start="151:9" pos:end="151:21"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:21">rx_session</name></name> <operator pos:start="151:23" pos:end="151:23">=</operator> <name pos:start="151:25" pos:end="151:41"><name pos:start="151:25" pos:end="151:30">l2tpv3</name><operator pos:start="151:31" pos:end="151:32">-&gt;</operator><name pos:start="151:33" pos:end="151:41">rxsession</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="153:7" pos:end="157:5">else <block pos:start="153:12" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:38">

        <expr_stmt pos:start="155:9" pos:end="155:38"><expr pos:start="155:9" pos:end="155:37"><name pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:21">rx_session</name></name> <operator pos:start="155:23" pos:end="155:23">=</operator> <name pos:start="155:25" pos:end="155:37"><name pos:start="155:25" pos:end="155:25">s</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:37">tx_session</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="161:5" pos:end="185:5"><if pos:start="161:5" pos:end="185:5">if <condition pos:start="161:8" pos:end="161:18">(<expr pos:start="161:9" pos:end="161:17"><name pos:start="161:9" pos:end="161:17"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:17">cookie</name></name></expr>)</condition> <block pos:start="161:20" pos:end="185:5">{<block_content pos:start="163:9" pos:end="183:9">

        <expr_stmt pos:start="163:9" pos:end="163:40"><expr pos:start="163:9" pos:end="163:39"><name pos:start="163:9" pos:end="163:20"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:20">rx_cookie</name></name> <operator pos:start="163:22" pos:end="163:22">=</operator> <name pos:start="163:24" pos:end="163:39"><name pos:start="163:24" pos:end="163:29">l2tpv3</name><operator pos:start="163:30" pos:end="163:31">-&gt;</operator><name pos:start="163:32" pos:end="163:39">rxcookie</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:40"><expr pos:start="165:9" pos:end="165:39"><name pos:start="165:9" pos:end="165:20"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:20">tx_cookie</name></name> <operator pos:start="165:22" pos:end="165:22">=</operator> <name pos:start="165:24" pos:end="165:39"><name pos:start="165:24" pos:end="165:29">l2tpv3</name><operator pos:start="165:30" pos:end="165:31">-&gt;</operator><name pos:start="165:32" pos:end="165:39">txcookie</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="167:9" pos:end="183:9"><if pos:start="167:9" pos:end="175:9">if <condition pos:start="167:12" pos:end="167:36">(<expr pos:start="167:13" pos:end="167:35"><name pos:start="167:13" pos:end="167:27"><name pos:start="167:13" pos:end="167:13">s</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:27">cookie_is_64</name></name> <operator pos:start="167:29" pos:end="167:30">==</operator> <name pos:start="167:32" pos:end="167:35">true</name></expr>)</condition> <block pos:start="167:38" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:35">

            <comment type="block" pos:start="169:13" pos:end="169:31">/* 64 bit cookie */</comment>

            <expr_stmt pos:start="171:13" pos:end="171:27"><expr pos:start="171:13" pos:end="171:26"><name pos:start="171:13" pos:end="171:21"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:21">offset</name></name> <operator pos:start="171:23" pos:end="171:24">+=</operator> <literal type="number" pos:start="171:26" pos:end="171:26">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:35"><expr pos:start="173:13" pos:end="173:34"><name pos:start="173:13" pos:end="173:29"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:29">counter_offset</name></name> <operator pos:start="173:31" pos:end="173:32">+=</operator> <literal type="number" pos:start="173:34" pos:end="173:34">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="175:11" pos:end="183:9">else <block pos:start="175:16" pos:end="183:9">{<block_content pos:start="179:13" pos:end="181:35">

            <comment type="block" pos:start="177:13" pos:end="177:31">/* 32 bit cookie */</comment>

            <expr_stmt pos:start="179:13" pos:end="179:27"><expr pos:start="179:13" pos:end="179:26"><name pos:start="179:13" pos:end="179:21"><name pos:start="179:13" pos:end="179:13">s</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:21">offset</name></name> <operator pos:start="179:23" pos:end="179:24">+=</operator> <literal type="number" pos:start="179:26" pos:end="179:26">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:35"><expr pos:start="181:13" pos:end="181:34"><name pos:start="181:13" pos:end="181:29"><name pos:start="181:13" pos:end="181:13">s</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:29">counter_offset</name></name> <operator pos:start="181:31" pos:end="181:32">+=</operator> <literal type="number" pos:start="181:34" pos:end="181:34">4</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:37"><expr pos:start="189:5" pos:end="189:36"><call pos:start="189:5" pos:end="189:36"><name pos:start="189:5" pos:end="189:10">memset</name><argument_list pos:start="189:11" pos:end="189:36">(<argument pos:start="189:12" pos:end="189:17"><expr pos:start="189:12" pos:end="189:17"><operator pos:start="189:12" pos:end="189:12">&amp;</operator><name pos:start="189:13" pos:end="189:17">hints</name></expr></argument>, <argument pos:start="189:20" pos:end="189:20"><expr pos:start="189:20" pos:end="189:20"><literal type="number" pos:start="189:20" pos:end="189:20">0</literal></expr></argument>, <argument pos:start="189:23" pos:end="189:35"><expr pos:start="189:23" pos:end="189:35"><sizeof pos:start="189:23" pos:end="189:35">sizeof<argument_list pos:start="189:29" pos:end="189:35">(<argument pos:start="189:30" pos:end="189:34"><expr pos:start="189:30" pos:end="189:34"><name pos:start="189:30" pos:end="189:34">hints</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="193:5" pos:end="201:5"><if pos:start="193:5" pos:end="197:5">if <condition pos:start="193:8" pos:end="193:16">(<expr pos:start="193:9" pos:end="193:15"><name pos:start="193:9" pos:end="193:15"><name pos:start="193:9" pos:end="193:9">s</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:15">ipv6</name></name></expr>)</condition> <block pos:start="193:18" pos:end="197:5">{<block_content pos:start="195:9" pos:end="195:35">

        <expr_stmt pos:start="195:9" pos:end="195:35"><expr pos:start="195:9" pos:end="195:34"><name pos:start="195:9" pos:end="195:23"><name pos:start="195:9" pos:end="195:13">hints</name><operator pos:start="195:14" pos:end="195:14">.</operator><name pos:start="195:15" pos:end="195:23">ai_family</name></name> <operator pos:start="195:25" pos:end="195:25">=</operator> <name pos:start="195:27" pos:end="195:34">AF_INET6</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="197:7" pos:end="201:5">else <block pos:start="197:12" pos:end="201:5">{<block_content pos:start="199:9" pos:end="199:34">

        <expr_stmt pos:start="199:9" pos:end="199:34"><expr pos:start="199:9" pos:end="199:33"><name pos:start="199:9" pos:end="199:23"><name pos:start="199:9" pos:end="199:13">hints</name><operator pos:start="199:14" pos:end="199:14">.</operator><name pos:start="199:15" pos:end="199:23">ai_family</name></name> <operator pos:start="199:25" pos:end="199:25">=</operator> <name pos:start="199:27" pos:end="199:33">AF_INET</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="203:5" pos:end="223:5"><if pos:start="203:5" pos:end="217:5">if <condition pos:start="203:8" pos:end="203:15">(<expr pos:start="203:9" pos:end="203:14"><name pos:start="203:9" pos:end="203:14"><name pos:start="203:9" pos:end="203:9">s</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:14">udp</name></name></expr>)</condition> <block pos:start="203:17" pos:end="217:5">{<block_content pos:start="205:9" pos:end="215:30">

        <expr_stmt pos:start="205:9" pos:end="205:39"><expr pos:start="205:9" pos:end="205:38"><name pos:start="205:9" pos:end="205:25"><name pos:start="205:9" pos:end="205:13">hints</name><operator pos:start="205:14" pos:end="205:14">.</operator><name pos:start="205:15" pos:end="205:25">ai_socktype</name></name> <operator pos:start="205:27" pos:end="205:27">=</operator> <name pos:start="205:29" pos:end="205:38">SOCK_DGRAM</name></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:30"><expr pos:start="207:9" pos:end="207:29"><name pos:start="207:9" pos:end="207:25"><name pos:start="207:9" pos:end="207:13">hints</name><operator pos:start="207:14" pos:end="207:14">.</operator><name pos:start="207:15" pos:end="207:25">ai_protocol</name></name> <operator pos:start="207:27" pos:end="207:27">=</operator> <literal type="number" pos:start="207:29" pos:end="207:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:23"><expr pos:start="209:9" pos:end="209:22"><name pos:start="209:9" pos:end="209:17"><name pos:start="209:9" pos:end="209:9">s</name><operator pos:start="209:10" pos:end="209:11">-&gt;</operator><name pos:start="209:12" pos:end="209:17">offset</name></name> <operator pos:start="209:19" pos:end="209:20">+=</operator> <literal type="number" pos:start="209:22" pos:end="209:22">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:31"><expr pos:start="211:9" pos:end="211:30"><name pos:start="211:9" pos:end="211:25"><name pos:start="211:9" pos:end="211:9">s</name><operator pos:start="211:10" pos:end="211:11">-&gt;</operator><name pos:start="211:12" pos:end="211:25">counter_offset</name></name> <operator pos:start="211:27" pos:end="211:28">+=</operator> <literal type="number" pos:start="211:30" pos:end="211:30">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:31"><expr pos:start="213:9" pos:end="213:30"><name pos:start="213:9" pos:end="213:25"><name pos:start="213:9" pos:end="213:9">s</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:25">session_offset</name></name> <operator pos:start="213:27" pos:end="213:28">+=</operator> <literal type="number" pos:start="213:30" pos:end="213:30">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:30"><expr pos:start="215:9" pos:end="215:29"><name pos:start="215:9" pos:end="215:24"><name pos:start="215:9" pos:end="215:9">s</name><operator pos:start="215:10" pos:end="215:11">-&gt;</operator><name pos:start="215:12" pos:end="215:24">cookie_offset</name></name> <operator pos:start="215:26" pos:end="215:27">+=</operator> <literal type="number" pos:start="215:29" pos:end="215:29">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="217:7" pos:end="223:5">else <block pos:start="217:12" pos:end="223:5">{<block_content pos:start="219:9" pos:end="221:41">

        <expr_stmt pos:start="219:9" pos:end="219:37"><expr pos:start="219:9" pos:end="219:36"><name pos:start="219:9" pos:end="219:25"><name pos:start="219:9" pos:end="219:13">hints</name><operator pos:start="219:14" pos:end="219:14">.</operator><name pos:start="219:15" pos:end="219:25">ai_socktype</name></name> <operator pos:start="219:27" pos:end="219:27">=</operator> <name pos:start="219:29" pos:end="219:36">SOCK_RAW</name></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:41"><expr pos:start="221:9" pos:end="221:40"><name pos:start="221:9" pos:end="221:25"><name pos:start="221:9" pos:end="221:13">hints</name><operator pos:start="221:14" pos:end="221:14">.</operator><name pos:start="221:15" pos:end="221:25">ai_protocol</name></name> <operator pos:start="221:27" pos:end="221:27">=</operator> <name pos:start="221:29" pos:end="221:40">IPPROTO_L2TP</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="227:5" pos:end="227:64"><expr pos:start="227:5" pos:end="227:63"><name pos:start="227:5" pos:end="227:10">gairet</name> <operator pos:start="227:12" pos:end="227:12">=</operator> <call pos:start="227:14" pos:end="227:63"><name pos:start="227:14" pos:end="227:24">getaddrinfo</name><argument_list pos:start="227:25" pos:end="227:63">(<argument pos:start="227:26" pos:end="227:36"><expr pos:start="227:26" pos:end="227:36"><name pos:start="227:26" pos:end="227:36"><name pos:start="227:26" pos:end="227:31">l2tpv3</name><operator pos:start="227:32" pos:end="227:33">-&gt;</operator><name pos:start="227:34" pos:end="227:36">src</name></name></expr></argument>, <argument pos:start="227:39" pos:end="227:45"><expr pos:start="227:39" pos:end="227:45"><name pos:start="227:39" pos:end="227:45">srcport</name></expr></argument>, <argument pos:start="227:48" pos:end="227:53"><expr pos:start="227:48" pos:end="227:53"><operator pos:start="227:48" pos:end="227:48">&amp;</operator><name pos:start="227:49" pos:end="227:53">hints</name></expr></argument>, <argument pos:start="227:56" pos:end="227:62"><expr pos:start="227:56" pos:end="227:62"><operator pos:start="227:56" pos:end="227:56">&amp;</operator><name pos:start="227:57" pos:end="227:62">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="231:5" pos:end="243:5"><if pos:start="231:5" pos:end="243:5">if <condition pos:start="231:8" pos:end="231:42">(<expr pos:start="231:9" pos:end="231:41"><operator pos:start="231:9" pos:end="231:9">(</operator><name pos:start="231:10" pos:end="231:15">gairet</name> <operator pos:start="231:17" pos:end="231:18">!=</operator> <literal type="number" pos:start="231:20" pos:end="231:20">0</literal><operator pos:start="231:21" pos:end="231:21">)</operator> <operator pos:start="231:23" pos:end="231:24">||</operator> <operator pos:start="231:26" pos:end="231:26">(</operator><name pos:start="231:27" pos:end="231:32">result</name> <operator pos:start="231:34" pos:end="231:35">==</operator> <name pos:start="231:37" pos:end="231:40">NULL</name><operator pos:start="231:41" pos:end="231:41">)</operator></expr>)</condition> <block pos:start="231:44" pos:end="243:5">{<block_content pos:start="233:9" pos:end="241:20">

        <expr_stmt pos:start="233:9" pos:end="239:10"><expr pos:start="233:9" pos:end="239:9"><call pos:start="233:9" pos:end="239:9"><name pos:start="233:9" pos:end="233:20">error_report</name><argument_list pos:start="233:21" pos:end="239:9">(

            <argument pos:start="235:13" pos:end="235:61"><expr pos:start="235:13" pos:end="235:61"><literal type="string" pos:start="235:13" pos:end="235:61">"l2tpv3_open : could not resolve src, errno = %s"</literal></expr></argument>,

            <argument pos:start="237:13" pos:end="237:32"><expr pos:start="237:13" pos:end="237:32"><call pos:start="237:13" pos:end="237:32"><name pos:start="237:13" pos:end="237:24">gai_strerror</name><argument_list pos:start="237:25" pos:end="237:32">(<argument pos:start="237:26" pos:end="237:31"><expr pos:start="237:26" pos:end="237:31"><name pos:start="237:26" pos:end="237:31">gairet</name></expr></argument>)</argument_list></call></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="241:9" pos:end="241:20">goto <name pos:start="241:14" pos:end="241:19">outerr</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:77"><expr pos:start="245:5" pos:end="245:76"><name pos:start="245:5" pos:end="245:6">fd</name> <operator pos:start="245:8" pos:end="245:8">=</operator> <call pos:start="245:10" pos:end="245:76"><name pos:start="245:10" pos:end="245:15">socket</name><argument_list pos:start="245:16" pos:end="245:76">(<argument pos:start="245:17" pos:end="245:33"><expr pos:start="245:17" pos:end="245:33"><name pos:start="245:17" pos:end="245:33"><name pos:start="245:17" pos:end="245:22">result</name><operator pos:start="245:23" pos:end="245:24">-&gt;</operator><name pos:start="245:25" pos:end="245:33">ai_family</name></name></expr></argument>, <argument pos:start="245:36" pos:end="245:54"><expr pos:start="245:36" pos:end="245:54"><name pos:start="245:36" pos:end="245:54"><name pos:start="245:36" pos:end="245:41">result</name><operator pos:start="245:42" pos:end="245:43">-&gt;</operator><name pos:start="245:44" pos:end="245:54">ai_socktype</name></name></expr></argument>, <argument pos:start="245:57" pos:end="245:75"><expr pos:start="245:57" pos:end="245:75"><name pos:start="245:57" pos:end="245:75"><name pos:start="245:57" pos:end="245:62">result</name><operator pos:start="245:63" pos:end="245:64">-&gt;</operator><name pos:start="245:65" pos:end="245:75">ai_protocol</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="247:5" pos:end="255:5"><if pos:start="247:5" pos:end="255:5">if <condition pos:start="247:8" pos:end="247:17">(<expr pos:start="247:9" pos:end="247:16"><name pos:start="247:9" pos:end="247:10">fd</name> <operator pos:start="247:12" pos:end="247:13">==</operator> <operator pos:start="247:15" pos:end="247:15">-</operator><literal type="number" pos:start="247:16" pos:end="247:16">1</literal></expr>)</condition> <block pos:start="247:19" pos:end="255:5">{<block_content pos:start="249:9" pos:end="253:20">

        <expr_stmt pos:start="249:9" pos:end="249:20"><expr pos:start="249:9" pos:end="249:19"><name pos:start="249:9" pos:end="249:10">fd</name> <operator pos:start="249:12" pos:end="249:12">=</operator> <operator pos:start="249:14" pos:end="249:14">-</operator><name pos:start="249:15" pos:end="249:19">errno</name></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:78"><expr pos:start="251:9" pos:end="251:77"><call pos:start="251:9" pos:end="251:77"><name pos:start="251:9" pos:end="251:20">error_report</name><argument_list pos:start="251:21" pos:end="251:77">(<argument pos:start="251:22" pos:end="251:71"><expr pos:start="251:22" pos:end="251:71"><literal type="string" pos:start="251:22" pos:end="251:71">"l2tpv3_open : socket creation failed, errno = %d"</literal></expr></argument>, <argument pos:start="251:74" pos:end="251:76"><expr pos:start="251:74" pos:end="251:76"><operator pos:start="251:74" pos:end="251:74">-</operator><name pos:start="251:75" pos:end="251:76">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="253:9" pos:end="253:20">goto <name pos:start="253:14" pos:end="253:19">outerr</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="257:5" pos:end="263:5"><if pos:start="257:5" pos:end="263:5">if <condition pos:start="257:8" pos:end="257:74">(<expr pos:start="257:9" pos:end="257:73"><call pos:start="257:9" pos:end="257:73"><name pos:start="257:9" pos:end="257:12">bind</name><argument_list pos:start="257:13" pos:end="257:73">(<argument pos:start="257:14" pos:end="257:15"><expr pos:start="257:14" pos:end="257:15"><name pos:start="257:14" pos:end="257:15">fd</name></expr></argument>, <argument pos:start="257:18" pos:end="257:52"><expr pos:start="257:18" pos:end="257:52"><operator pos:start="257:18" pos:end="257:18">(</operator>struct <name pos:start="257:26" pos:end="257:33">sockaddr</name> <operator pos:start="257:35" pos:end="257:35">*</operator><operator pos:start="257:36" pos:end="257:36">)</operator> <name pos:start="257:38" pos:end="257:52"><name pos:start="257:38" pos:end="257:43">result</name><operator pos:start="257:44" pos:end="257:45">-&gt;</operator><name pos:start="257:46" pos:end="257:52">ai_addr</name></name></expr></argument>, <argument pos:start="257:55" pos:end="257:72"><expr pos:start="257:55" pos:end="257:72"><name pos:start="257:55" pos:end="257:72"><name pos:start="257:55" pos:end="257:60">result</name><operator pos:start="257:61" pos:end="257:62">-&gt;</operator><name pos:start="257:63" pos:end="257:72">ai_addrlen</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="257:76" pos:end="263:5">{<block_content pos:start="259:9" pos:end="261:20">

        <expr_stmt pos:start="259:9" pos:end="259:75"><expr pos:start="259:9" pos:end="259:74"><call pos:start="259:9" pos:end="259:74"><name pos:start="259:9" pos:end="259:20">error_report</name><argument_list pos:start="259:21" pos:end="259:74">(<argument pos:start="259:22" pos:end="259:66"><expr pos:start="259:22" pos:end="259:66"><literal type="string" pos:start="259:22" pos:end="259:66">"l2tpv3_open :  could not bind socket err=%i"</literal></expr></argument>, <argument pos:start="259:69" pos:end="259:73"><expr pos:start="259:69" pos:end="259:73"><name pos:start="259:69" pos:end="259:73">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="261:9" pos:end="261:20">goto <name pos:start="261:14" pos:end="261:19">outerr</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="265:5" pos:end="269:5"><if pos:start="265:5" pos:end="269:5">if <condition pos:start="265:8" pos:end="265:15">(<expr pos:start="265:9" pos:end="265:14"><name pos:start="265:9" pos:end="265:14">result</name></expr>)</condition> <block pos:start="265:17" pos:end="269:5">{<block_content pos:start="267:9" pos:end="267:29">

        <expr_stmt pos:start="267:9" pos:end="267:29"><expr pos:start="267:9" pos:end="267:28"><call pos:start="267:9" pos:end="267:28"><name pos:start="267:9" pos:end="267:20">freeaddrinfo</name><argument_list pos:start="267:21" pos:end="267:28">(<argument pos:start="267:22" pos:end="267:27"><expr pos:start="267:22" pos:end="267:27"><name pos:start="267:22" pos:end="267:27">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="273:5" pos:end="273:37"><expr pos:start="273:5" pos:end="273:36"><call pos:start="273:5" pos:end="273:36"><name pos:start="273:5" pos:end="273:10">memset</name><argument_list pos:start="273:11" pos:end="273:36">(<argument pos:start="273:12" pos:end="273:17"><expr pos:start="273:12" pos:end="273:17"><operator pos:start="273:12" pos:end="273:12">&amp;</operator><name pos:start="273:13" pos:end="273:17">hints</name></expr></argument>, <argument pos:start="273:20" pos:end="273:20"><expr pos:start="273:20" pos:end="273:20"><literal type="number" pos:start="273:20" pos:end="273:20">0</literal></expr></argument>, <argument pos:start="273:23" pos:end="273:35"><expr pos:start="273:23" pos:end="273:35"><sizeof pos:start="273:23" pos:end="273:35">sizeof<argument_list pos:start="273:29" pos:end="273:35">(<argument pos:start="273:30" pos:end="273:34"><expr pos:start="273:30" pos:end="273:34"><name pos:start="273:30" pos:end="273:34">hints</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="277:5" pos:end="285:5"><if pos:start="277:5" pos:end="281:5">if <condition pos:start="277:8" pos:end="277:16">(<expr pos:start="277:9" pos:end="277:15"><name pos:start="277:9" pos:end="277:15"><name pos:start="277:9" pos:end="277:9">s</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:15">ipv6</name></name></expr>)</condition> <block pos:start="277:18" pos:end="281:5">{<block_content pos:start="279:9" pos:end="279:35">

        <expr_stmt pos:start="279:9" pos:end="279:35"><expr pos:start="279:9" pos:end="279:34"><name pos:start="279:9" pos:end="279:23"><name pos:start="279:9" pos:end="279:13">hints</name><operator pos:start="279:14" pos:end="279:14">.</operator><name pos:start="279:15" pos:end="279:23">ai_family</name></name> <operator pos:start="279:25" pos:end="279:25">=</operator> <name pos:start="279:27" pos:end="279:34">AF_INET6</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="281:7" pos:end="285:5">else <block pos:start="281:12" pos:end="285:5">{<block_content pos:start="283:9" pos:end="283:34">

        <expr_stmt pos:start="283:9" pos:end="283:34"><expr pos:start="283:9" pos:end="283:33"><name pos:start="283:9" pos:end="283:23"><name pos:start="283:9" pos:end="283:13">hints</name><operator pos:start="283:14" pos:end="283:14">.</operator><name pos:start="283:15" pos:end="283:23">ai_family</name></name> <operator pos:start="283:25" pos:end="283:25">=</operator> <name pos:start="283:27" pos:end="283:33">AF_INET</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="287:5" pos:end="299:5"><if pos:start="287:5" pos:end="293:5">if <condition pos:start="287:8" pos:end="287:15">(<expr pos:start="287:9" pos:end="287:14"><name pos:start="287:9" pos:end="287:14"><name pos:start="287:9" pos:end="287:9">s</name><operator pos:start="287:10" pos:end="287:11">-&gt;</operator><name pos:start="287:12" pos:end="287:14">udp</name></name></expr>)</condition> <block pos:start="287:17" pos:end="293:5">{<block_content pos:start="289:9" pos:end="291:30">

        <expr_stmt pos:start="289:9" pos:end="289:39"><expr pos:start="289:9" pos:end="289:38"><name pos:start="289:9" pos:end="289:25"><name pos:start="289:9" pos:end="289:13">hints</name><operator pos:start="289:14" pos:end="289:14">.</operator><name pos:start="289:15" pos:end="289:25">ai_socktype</name></name> <operator pos:start="289:27" pos:end="289:27">=</operator> <name pos:start="289:29" pos:end="289:38">SOCK_DGRAM</name></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:30"><expr pos:start="291:9" pos:end="291:29"><name pos:start="291:9" pos:end="291:25"><name pos:start="291:9" pos:end="291:13">hints</name><operator pos:start="291:14" pos:end="291:14">.</operator><name pos:start="291:15" pos:end="291:25">ai_protocol</name></name> <operator pos:start="291:27" pos:end="291:27">=</operator> <literal type="number" pos:start="291:29" pos:end="291:29">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="293:7" pos:end="299:5">else <block pos:start="293:12" pos:end="299:5">{<block_content pos:start="295:9" pos:end="297:41">

        <expr_stmt pos:start="295:9" pos:end="295:37"><expr pos:start="295:9" pos:end="295:36"><name pos:start="295:9" pos:end="295:25"><name pos:start="295:9" pos:end="295:13">hints</name><operator pos:start="295:14" pos:end="295:14">.</operator><name pos:start="295:15" pos:end="295:25">ai_socktype</name></name> <operator pos:start="295:27" pos:end="295:27">=</operator> <name pos:start="295:29" pos:end="295:36">SOCK_RAW</name></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:41"><expr pos:start="297:9" pos:end="297:40"><name pos:start="297:9" pos:end="297:25"><name pos:start="297:9" pos:end="297:13">hints</name><operator pos:start="297:14" pos:end="297:14">.</operator><name pos:start="297:15" pos:end="297:25">ai_protocol</name></name> <operator pos:start="297:27" pos:end="297:27">=</operator> <name pos:start="297:29" pos:end="297:40">IPPROTO_L2TP</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="303:5" pos:end="303:18"><expr pos:start="303:5" pos:end="303:17"><name pos:start="303:5" pos:end="303:10">result</name> <operator pos:start="303:12" pos:end="303:12">=</operator> <name pos:start="303:14" pos:end="303:17">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:64"><expr pos:start="305:5" pos:end="305:63"><name pos:start="305:5" pos:end="305:10">gairet</name> <operator pos:start="305:12" pos:end="305:12">=</operator> <call pos:start="305:14" pos:end="305:63"><name pos:start="305:14" pos:end="305:24">getaddrinfo</name><argument_list pos:start="305:25" pos:end="305:63">(<argument pos:start="305:26" pos:end="305:36"><expr pos:start="305:26" pos:end="305:36"><name pos:start="305:26" pos:end="305:36"><name pos:start="305:26" pos:end="305:31">l2tpv3</name><operator pos:start="305:32" pos:end="305:33">-&gt;</operator><name pos:start="305:34" pos:end="305:36">dst</name></name></expr></argument>, <argument pos:start="305:39" pos:end="305:45"><expr pos:start="305:39" pos:end="305:45"><name pos:start="305:39" pos:end="305:45">dstport</name></expr></argument>, <argument pos:start="305:48" pos:end="305:53"><expr pos:start="305:48" pos:end="305:53"><operator pos:start="305:48" pos:end="305:48">&amp;</operator><name pos:start="305:49" pos:end="305:53">hints</name></expr></argument>, <argument pos:start="305:56" pos:end="305:62"><expr pos:start="305:56" pos:end="305:62"><operator pos:start="305:56" pos:end="305:56">&amp;</operator><name pos:start="305:57" pos:end="305:62">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="307:5" pos:end="319:5"><if pos:start="307:5" pos:end="319:5">if <condition pos:start="307:8" pos:end="307:42">(<expr pos:start="307:9" pos:end="307:41"><operator pos:start="307:9" pos:end="307:9">(</operator><name pos:start="307:10" pos:end="307:15">gairet</name> <operator pos:start="307:17" pos:end="307:18">!=</operator> <literal type="number" pos:start="307:20" pos:end="307:20">0</literal><operator pos:start="307:21" pos:end="307:21">)</operator> <operator pos:start="307:23" pos:end="307:24">||</operator> <operator pos:start="307:26" pos:end="307:26">(</operator><name pos:start="307:27" pos:end="307:32">result</name> <operator pos:start="307:34" pos:end="307:35">==</operator> <name pos:start="307:37" pos:end="307:40">NULL</name><operator pos:start="307:41" pos:end="307:41">)</operator></expr>)</condition> <block pos:start="307:44" pos:end="319:5">{<block_content pos:start="309:9" pos:end="317:20">

        <expr_stmt pos:start="309:9" pos:end="315:10"><expr pos:start="309:9" pos:end="315:9"><call pos:start="309:9" pos:end="315:9"><name pos:start="309:9" pos:end="309:20">error_report</name><argument_list pos:start="309:21" pos:end="315:9">(

            <argument pos:start="311:13" pos:end="311:61"><expr pos:start="311:13" pos:end="311:61"><literal type="string" pos:start="311:13" pos:end="311:61">"l2tpv3_open : could not resolve dst, error = %s"</literal></expr></argument>,

            <argument pos:start="313:13" pos:end="313:32"><expr pos:start="313:13" pos:end="313:32"><call pos:start="313:13" pos:end="313:32"><name pos:start="313:13" pos:end="313:24">gai_strerror</name><argument_list pos:start="313:25" pos:end="313:32">(<argument pos:start="313:26" pos:end="313:31"><expr pos:start="313:26" pos:end="313:31"><name pos:start="313:26" pos:end="313:31">gairet</name></expr></argument>)</argument_list></call></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="317:9" pos:end="317:20">goto <name pos:start="317:14" pos:end="317:19">outerr</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="323:5" pos:end="323:61"><expr pos:start="323:5" pos:end="323:60"><name pos:start="323:5" pos:end="323:16"><name pos:start="323:5" pos:end="323:5">s</name><operator pos:start="323:6" pos:end="323:7">-&gt;</operator><name pos:start="323:8" pos:end="323:16">dgram_dst</name></name> <operator pos:start="323:18" pos:end="323:18">=</operator> <call pos:start="323:20" pos:end="323:60"><name pos:start="323:20" pos:end="323:27">g_malloc</name><argument_list pos:start="323:28" pos:end="323:60">(<argument pos:start="323:29" pos:end="323:59"><expr pos:start="323:29" pos:end="323:59"><sizeof pos:start="323:29" pos:end="323:59">sizeof<argument_list pos:start="323:35" pos:end="323:59">(<argument pos:start="323:36" pos:end="323:58"><expr pos:start="323:36" pos:end="323:58">struct <name pos:start="323:43" pos:end="323:58">sockaddr_storage</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="325:5" pos:end="325:65"><expr pos:start="325:5" pos:end="325:64"><call pos:start="325:5" pos:end="325:64"><name pos:start="325:5" pos:end="325:10">memset</name><argument_list pos:start="325:11" pos:end="325:64">(<argument pos:start="325:12" pos:end="325:23"><expr pos:start="325:12" pos:end="325:23"><name pos:start="325:12" pos:end="325:23"><name pos:start="325:12" pos:end="325:12">s</name><operator pos:start="325:13" pos:end="325:14">-&gt;</operator><name pos:start="325:15" pos:end="325:23">dgram_dst</name></name></expr></argument>, <argument pos:start="325:26" pos:end="325:29"><expr pos:start="325:26" pos:end="325:29"><literal type="char" pos:start="325:26" pos:end="325:29">'\0'</literal></expr></argument> , <argument pos:start="325:33" pos:end="325:63"><expr pos:start="325:33" pos:end="325:63"><sizeof pos:start="325:33" pos:end="325:63">sizeof<argument_list pos:start="325:39" pos:end="325:63">(<argument pos:start="325:40" pos:end="325:62"><expr pos:start="325:40" pos:end="325:62">struct <name pos:start="325:47" pos:end="325:62">sockaddr_storage</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="327:5" pos:end="327:62"><expr pos:start="327:5" pos:end="327:61"><call pos:start="327:5" pos:end="327:61"><name pos:start="327:5" pos:end="327:10">memcpy</name><argument_list pos:start="327:11" pos:end="327:61">(<argument pos:start="327:12" pos:end="327:23"><expr pos:start="327:12" pos:end="327:23"><name pos:start="327:12" pos:end="327:23"><name pos:start="327:12" pos:end="327:12">s</name><operator pos:start="327:13" pos:end="327:14">-&gt;</operator><name pos:start="327:15" pos:end="327:23">dgram_dst</name></name></expr></argument>, <argument pos:start="327:26" pos:end="327:40"><expr pos:start="327:26" pos:end="327:40"><name pos:start="327:26" pos:end="327:40"><name pos:start="327:26" pos:end="327:31">result</name><operator pos:start="327:32" pos:end="327:33">-&gt;</operator><name pos:start="327:34" pos:end="327:40">ai_addr</name></name></expr></argument>, <argument pos:start="327:43" pos:end="327:60"><expr pos:start="327:43" pos:end="327:60"><name pos:start="327:43" pos:end="327:60"><name pos:start="327:43" pos:end="327:48">result</name><operator pos:start="327:49" pos:end="327:50">-&gt;</operator><name pos:start="327:51" pos:end="327:60">ai_addrlen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="329:5" pos:end="329:37"><expr pos:start="329:5" pos:end="329:36"><name pos:start="329:5" pos:end="329:15"><name pos:start="329:5" pos:end="329:5">s</name><operator pos:start="329:6" pos:end="329:7">-&gt;</operator><name pos:start="329:8" pos:end="329:15">dst_size</name></name> <operator pos:start="329:17" pos:end="329:17">=</operator> <name pos:start="329:19" pos:end="329:36"><name pos:start="329:19" pos:end="329:24">result</name><operator pos:start="329:25" pos:end="329:26">-&gt;</operator><name pos:start="329:27" pos:end="329:36">ai_addrlen</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="333:5" pos:end="337:5"><if pos:start="333:5" pos:end="337:5">if <condition pos:start="333:8" pos:end="333:15">(<expr pos:start="333:9" pos:end="333:14"><name pos:start="333:9" pos:end="333:14">result</name></expr>)</condition> <block pos:start="333:17" pos:end="337:5">{<block_content pos:start="335:9" pos:end="335:29">

        <expr_stmt pos:start="335:9" pos:end="335:29"><expr pos:start="335:9" pos:end="335:28"><call pos:start="335:9" pos:end="335:28"><name pos:start="335:9" pos:end="335:20">freeaddrinfo</name><argument_list pos:start="335:21" pos:end="335:28">(<argument pos:start="335:22" pos:end="335:27"><expr pos:start="335:22" pos:end="335:27"><name pos:start="335:22" pos:end="335:27">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="341:5" pos:end="351:5"><if pos:start="341:5" pos:end="347:5">if <condition pos:start="341:8" pos:end="341:47">(<expr pos:start="341:9" pos:end="341:46"><name pos:start="341:9" pos:end="341:27"><name pos:start="341:9" pos:end="341:14">l2tpv3</name><operator pos:start="341:15" pos:end="341:16">-&gt;</operator><name pos:start="341:17" pos:end="341:27">has_counter</name></name> <operator pos:start="341:29" pos:end="341:30">&amp;&amp;</operator> <name pos:start="341:32" pos:end="341:46"><name pos:start="341:32" pos:end="341:37">l2tpv3</name><operator pos:start="341:38" pos:end="341:39">-&gt;</operator><name pos:start="341:40" pos:end="341:46">counter</name></name></expr>)</condition> <block pos:start="341:49" pos:end="347:5">{<block_content pos:start="343:9" pos:end="345:23">

        <expr_stmt pos:start="343:9" pos:end="343:30"><expr pos:start="343:9" pos:end="343:29"><name pos:start="343:9" pos:end="343:22"><name pos:start="343:9" pos:end="343:9">s</name><operator pos:start="343:10" pos:end="343:11">-&gt;</operator><name pos:start="343:12" pos:end="343:22">has_counter</name></name> <operator pos:start="343:24" pos:end="343:24">=</operator> <name pos:start="343:26" pos:end="343:29">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="345:9" pos:end="345:23"><expr pos:start="345:9" pos:end="345:22"><name pos:start="345:9" pos:end="345:17"><name pos:start="345:9" pos:end="345:9">s</name><operator pos:start="345:10" pos:end="345:11">-&gt;</operator><name pos:start="345:12" pos:end="345:17">offset</name></name> <operator pos:start="345:19" pos:end="345:20">+=</operator> <literal type="number" pos:start="345:22" pos:end="345:22">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="347:7" pos:end="351:5">else <block pos:start="347:12" pos:end="351:5">{<block_content pos:start="349:9" pos:end="349:31">

        <expr_stmt pos:start="349:9" pos:end="349:31"><expr pos:start="349:9" pos:end="349:30"><name pos:start="349:9" pos:end="349:22"><name pos:start="349:9" pos:end="349:9">s</name><operator pos:start="349:10" pos:end="349:11">-&gt;</operator><name pos:start="349:12" pos:end="349:22">has_counter</name></name> <operator pos:start="349:24" pos:end="349:24">=</operator> <name pos:start="349:26" pos:end="349:30">false</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="355:5" pos:end="365:5"><if pos:start="355:5" pos:end="361:5">if <condition pos:start="355:8" pos:end="355:53">(<expr pos:start="355:9" pos:end="355:52"><name pos:start="355:9" pos:end="355:30"><name pos:start="355:9" pos:end="355:14">l2tpv3</name><operator pos:start="355:15" pos:end="355:16">-&gt;</operator><name pos:start="355:17" pos:end="355:30">has_pincounter</name></name> <operator pos:start="355:32" pos:end="355:33">&amp;&amp;</operator> <name pos:start="355:35" pos:end="355:52"><name pos:start="355:35" pos:end="355:40">l2tpv3</name><operator pos:start="355:41" pos:end="355:42">-&gt;</operator><name pos:start="355:43" pos:end="355:52">pincounter</name></name></expr>)</condition> <block pos:start="355:55" pos:end="361:5">{<block_content pos:start="357:9" pos:end="359:30">

        <expr_stmt pos:start="357:9" pos:end="357:30"><expr pos:start="357:9" pos:end="357:29"><name pos:start="357:9" pos:end="357:22"><name pos:start="357:9" pos:end="357:9">s</name><operator pos:start="357:10" pos:end="357:11">-&gt;</operator><name pos:start="357:12" pos:end="357:22">has_counter</name></name> <operator pos:start="357:24" pos:end="357:24">=</operator> <name pos:start="357:26" pos:end="357:29">true</name></expr>;</expr_stmt>  <comment type="block" pos:start="357:33" pos:end="357:79">/* pin counter implies that there is counter */</comment>

        <expr_stmt pos:start="359:9" pos:end="359:30"><expr pos:start="359:9" pos:end="359:29"><name pos:start="359:9" pos:end="359:22"><name pos:start="359:9" pos:end="359:9">s</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:22">pin_counter</name></name> <operator pos:start="359:24" pos:end="359:24">=</operator> <name pos:start="359:26" pos:end="359:29">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="361:7" pos:end="365:5">else <block pos:start="361:12" pos:end="365:5">{<block_content pos:start="363:9" pos:end="363:31">

        <expr_stmt pos:start="363:9" pos:end="363:31"><expr pos:start="363:9" pos:end="363:30"><name pos:start="363:9" pos:end="363:22"><name pos:start="363:9" pos:end="363:9">s</name><operator pos:start="363:10" pos:end="363:11">-&gt;</operator><name pos:start="363:12" pos:end="363:22">pin_counter</name></name> <operator pos:start="363:24" pos:end="363:24">=</operator> <name pos:start="363:26" pos:end="363:30">false</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="369:5" pos:end="375:5"><if pos:start="369:5" pos:end="375:5">if <condition pos:start="369:8" pos:end="369:27">(<expr pos:start="369:9" pos:end="369:26"><name pos:start="369:9" pos:end="369:26"><name pos:start="369:9" pos:end="369:14">l2tpv3</name><operator pos:start="369:15" pos:end="369:16">-&gt;</operator><name pos:start="369:17" pos:end="369:26">has_offset</name></name></expr>)</condition> <block pos:start="369:29" pos:end="375:5">{<block_content pos:start="373:9" pos:end="373:36">

        <comment type="block" pos:start="371:9" pos:end="371:26">/* extra offset */</comment>

        <expr_stmt pos:start="373:9" pos:end="373:36"><expr pos:start="373:9" pos:end="373:35"><name pos:start="373:9" pos:end="373:17"><name pos:start="373:9" pos:end="373:9">s</name><operator pos:start="373:10" pos:end="373:11">-&gt;</operator><name pos:start="373:12" pos:end="373:17">offset</name></name> <operator pos:start="373:19" pos:end="373:20">+=</operator> <name pos:start="373:22" pos:end="373:35"><name pos:start="373:22" pos:end="373:27">l2tpv3</name><operator pos:start="373:28" pos:end="373:29">-&gt;</operator><name pos:start="373:30" pos:end="373:35">offset</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="379:5" pos:end="387:5"><if pos:start="379:5" pos:end="383:5">if <condition pos:start="379:8" pos:end="379:30">(<expr pos:start="379:9" pos:end="379:29"><operator pos:start="379:9" pos:end="379:9">(</operator><name pos:start="379:10" pos:end="379:16"><name pos:start="379:10" pos:end="379:10">s</name><operator pos:start="379:11" pos:end="379:12">-&gt;</operator><name pos:start="379:13" pos:end="379:16">ipv6</name></name><operator pos:start="379:17" pos:end="379:17">)</operator> <operator pos:start="379:19" pos:end="379:20">||</operator> <operator pos:start="379:22" pos:end="379:22">(</operator><name pos:start="379:23" pos:end="379:28"><name pos:start="379:23" pos:end="379:23">s</name><operator pos:start="379:24" pos:end="379:25">-&gt;</operator><name pos:start="379:26" pos:end="379:28">udp</name></name><operator pos:start="379:29" pos:end="379:29">)</operator></expr>)</condition> <block pos:start="379:32" pos:end="383:5">{<block_content pos:start="381:9" pos:end="381:35">

        <expr_stmt pos:start="381:9" pos:end="381:35"><expr pos:start="381:9" pos:end="381:34"><name pos:start="381:9" pos:end="381:22"><name pos:start="381:9" pos:end="381:9">s</name><operator pos:start="381:10" pos:end="381:11">-&gt;</operator><name pos:start="381:12" pos:end="381:22">header_size</name></name> <operator pos:start="381:24" pos:end="381:24">=</operator> <name pos:start="381:26" pos:end="381:34"><name pos:start="381:26" pos:end="381:26">s</name><operator pos:start="381:27" pos:end="381:28">-&gt;</operator><name pos:start="381:29" pos:end="381:34">offset</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="383:7" pos:end="387:5">else <block pos:start="383:12" pos:end="387:5">{<block_content pos:start="385:9" pos:end="385:58">

        <expr_stmt pos:start="385:9" pos:end="385:58"><expr pos:start="385:9" pos:end="385:57"><name pos:start="385:9" pos:end="385:22"><name pos:start="385:9" pos:end="385:9">s</name><operator pos:start="385:10" pos:end="385:11">-&gt;</operator><name pos:start="385:12" pos:end="385:22">header_size</name></name> <operator pos:start="385:24" pos:end="385:24">=</operator> <name pos:start="385:26" pos:end="385:34"><name pos:start="385:26" pos:end="385:26">s</name><operator pos:start="385:27" pos:end="385:28">-&gt;</operator><name pos:start="385:29" pos:end="385:34">offset</name></name> <operator pos:start="385:36" pos:end="385:36">+</operator> <sizeof pos:start="385:38" pos:end="385:57">sizeof<argument_list pos:start="385:44" pos:end="385:57">(<argument pos:start="385:45" pos:end="385:56"><expr pos:start="385:45" pos:end="385:56">struct <name pos:start="385:52" pos:end="385:56">iphdr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="391:5" pos:end="391:58"><expr pos:start="391:5" pos:end="391:57"><name pos:start="391:5" pos:end="391:13"><name pos:start="391:5" pos:end="391:5">s</name><operator pos:start="391:6" pos:end="391:7">-&gt;</operator><name pos:start="391:8" pos:end="391:13">msgvec</name></name> <operator pos:start="391:15" pos:end="391:15">=</operator> <call pos:start="391:17" pos:end="391:57"><name pos:start="391:17" pos:end="391:35">build_l2tpv3_vector</name><argument_list pos:start="391:36" pos:end="391:57">(<argument pos:start="391:37" pos:end="391:37"><expr pos:start="391:37" pos:end="391:37"><name pos:start="391:37" pos:end="391:37">s</name></expr></argument>, <argument pos:start="391:40" pos:end="391:56"><expr pos:start="391:40" pos:end="391:56"><name pos:start="391:40" pos:end="391:56">MAX_L2TPV3_MSGCNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="393:5" pos:end="393:64"><expr pos:start="393:5" pos:end="393:63"><name pos:start="393:5" pos:end="393:10"><name pos:start="393:5" pos:end="393:5">s</name><operator pos:start="393:6" pos:end="393:7">-&gt;</operator><name pos:start="393:8" pos:end="393:10">vec</name></name> <operator pos:start="393:12" pos:end="393:12">=</operator> <call pos:start="393:14" pos:end="393:63"><name pos:start="393:14" pos:end="393:21">g_malloc</name><argument_list pos:start="393:22" pos:end="393:63">(<argument pos:start="393:23" pos:end="393:62"><expr pos:start="393:23" pos:end="393:62"><sizeof pos:start="393:23" pos:end="393:42">sizeof<argument_list pos:start="393:29" pos:end="393:42">(<argument pos:start="393:30" pos:end="393:41"><expr pos:start="393:30" pos:end="393:41">struct <name pos:start="393:37" pos:end="393:41">iovec</name></expr></argument>)</argument_list></sizeof> <operator pos:start="393:44" pos:end="393:44">*</operator> <name pos:start="393:46" pos:end="393:62">MAX_L2TPV3_IOVCNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="395:5" pos:end="395:45"><expr pos:start="395:5" pos:end="395:44"><name pos:start="395:5" pos:end="395:17"><name pos:start="395:5" pos:end="395:5">s</name><operator pos:start="395:6" pos:end="395:7">-&gt;</operator><name pos:start="395:8" pos:end="395:17">header_buf</name></name> <operator pos:start="395:19" pos:end="395:19">=</operator> <call pos:start="395:21" pos:end="395:44"><name pos:start="395:21" pos:end="395:28">g_malloc</name><argument_list pos:start="395:29" pos:end="395:44">(<argument pos:start="395:30" pos:end="395:43"><expr pos:start="395:30" pos:end="395:43"><name pos:start="395:30" pos:end="395:43"><name pos:start="395:30" pos:end="395:30">s</name><operator pos:start="395:31" pos:end="395:32">-&gt;</operator><name pos:start="395:33" pos:end="395:43">header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="399:5" pos:end="399:26"><expr pos:start="399:5" pos:end="399:25"><call pos:start="399:5" pos:end="399:25"><name pos:start="399:5" pos:end="399:21">qemu_set_nonblock</name><argument_list pos:start="399:22" pos:end="399:25">(<argument pos:start="399:23" pos:end="399:24"><expr pos:start="399:23" pos:end="399:24"><name pos:start="399:23" pos:end="399:24">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="403:5" pos:end="403:15"><expr pos:start="403:5" pos:end="403:14"><name pos:start="403:5" pos:end="403:9"><name pos:start="403:5" pos:end="403:5">s</name><operator pos:start="403:6" pos:end="403:7">-&gt;</operator><name pos:start="403:8" pos:end="403:9">fd</name></name> <operator pos:start="403:11" pos:end="403:11">=</operator> <name pos:start="403:13" pos:end="403:14">fd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="405:5" pos:end="405:19"><expr pos:start="405:5" pos:end="405:18"><name pos:start="405:5" pos:end="405:14"><name pos:start="405:5" pos:end="405:5">s</name><operator pos:start="405:6" pos:end="405:7">-&gt;</operator><name pos:start="405:8" pos:end="405:14">counter</name></name> <operator pos:start="405:16" pos:end="405:16">=</operator> <literal type="number" pos:start="405:18" pos:end="405:18">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="409:5" pos:end="409:30"><expr pos:start="409:5" pos:end="409:29"><call pos:start="409:5" pos:end="409:29"><name pos:start="409:5" pos:end="409:20">l2tpv3_read_poll</name><argument_list pos:start="409:21" pos:end="409:29">(<argument pos:start="409:22" pos:end="409:22"><expr pos:start="409:22" pos:end="409:22"><name pos:start="409:22" pos:end="409:22">s</name></expr></argument>, <argument pos:start="409:25" pos:end="409:28"><expr pos:start="409:25" pos:end="409:28"><name pos:start="409:25" pos:end="409:28">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="413:5" pos:end="415:34"><expr pos:start="413:5" pos:end="415:33"><call pos:start="413:5" pos:end="415:33"><name pos:start="413:5" pos:end="413:12">snprintf</name><argument_list pos:start="413:13" pos:end="415:33">(<argument pos:start="413:14" pos:end="413:27"><expr pos:start="413:14" pos:end="413:27"><name pos:start="413:14" pos:end="413:27"><name pos:start="413:14" pos:end="413:14">s</name><operator pos:start="413:15" pos:end="413:16">-&gt;</operator><name pos:start="413:17" pos:end="413:18">nc</name><operator pos:start="413:19" pos:end="413:19">.</operator><name pos:start="413:20" pos:end="413:27">info_str</name></name></expr></argument>, <argument pos:start="413:30" pos:end="413:51"><expr pos:start="413:30" pos:end="413:51"><sizeof pos:start="413:30" pos:end="413:51">sizeof<argument_list pos:start="413:36" pos:end="413:51">(<argument pos:start="413:37" pos:end="413:50"><expr pos:start="413:37" pos:end="413:50"><name pos:start="413:37" pos:end="413:50"><name pos:start="413:37" pos:end="413:37">s</name><operator pos:start="413:38" pos:end="413:39">-&gt;</operator><name pos:start="413:40" pos:end="413:41">nc</name><operator pos:start="413:42" pos:end="413:42">.</operator><name pos:start="413:43" pos:end="413:50">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

             <argument pos:start="415:14" pos:end="415:32"><expr pos:start="415:14" pos:end="415:32"><literal type="string" pos:start="415:14" pos:end="415:32">"l2tpv3: connected"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="417:5" pos:end="417:13">return <expr pos:start="417:12" pos:end="417:12"><literal type="number" pos:start="417:12" pos:end="417:12">0</literal></expr>;</return>

<label pos:start="419:1" pos:end="419:7"><name pos:start="419:1" pos:end="419:6">outerr</name>:</label>

    <expr_stmt pos:start="421:5" pos:end="421:28"><expr pos:start="421:5" pos:end="421:27"><call pos:start="421:5" pos:end="421:27"><name pos:start="421:5" pos:end="421:23">qemu_del_net_client</name><argument_list pos:start="421:24" pos:end="421:27">(<argument pos:start="421:25" pos:end="421:26"><expr pos:start="421:25" pos:end="421:26"><name pos:start="421:25" pos:end="421:26">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="423:5" pos:end="427:5"><if pos:start="423:5" pos:end="427:5">if <condition pos:start="423:8" pos:end="423:15">(<expr pos:start="423:9" pos:end="423:14"><name pos:start="423:9" pos:end="423:10">fd</name> <operator pos:start="423:12" pos:end="423:12">&gt;</operator> <literal type="number" pos:start="423:14" pos:end="423:14">0</literal></expr>)</condition> <block pos:start="423:17" pos:end="427:5">{<block_content pos:start="425:9" pos:end="425:18">

        <expr_stmt pos:start="425:9" pos:end="425:18"><expr pos:start="425:9" pos:end="425:17"><call pos:start="425:9" pos:end="425:17"><name pos:start="425:9" pos:end="425:13">close</name><argument_list pos:start="425:14" pos:end="425:17">(<argument pos:start="425:15" pos:end="425:16"><expr pos:start="425:15" pos:end="425:16"><name pos:start="425:15" pos:end="425:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="429:5" pos:end="433:5"><if pos:start="429:5" pos:end="433:5">if <condition pos:start="429:8" pos:end="429:15">(<expr pos:start="429:9" pos:end="429:14"><name pos:start="429:9" pos:end="429:14">result</name></expr>)</condition> <block pos:start="429:17" pos:end="433:5">{<block_content pos:start="431:9" pos:end="431:29">

        <expr_stmt pos:start="431:9" pos:end="431:29"><expr pos:start="431:9" pos:end="431:28"><call pos:start="431:9" pos:end="431:28"><name pos:start="431:9" pos:end="431:20">freeaddrinfo</name><argument_list pos:start="431:21" pos:end="431:28">(<argument pos:start="431:22" pos:end="431:27"><expr pos:start="431:22" pos:end="431:27"><name pos:start="431:22" pos:end="431:27">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="435:5" pos:end="435:14">return <expr pos:start="435:12" pos:end="435:13"><operator pos:start="435:12" pos:end="435:12">-</operator><literal type="number" pos:start="435:13" pos:end="435:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
