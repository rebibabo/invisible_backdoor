<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18641.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:31">find_best_filter</name><parameter_list pos:start="1:32" pos:end="1:88">(<parameter pos:start="1:33" pos:end="1:59"><decl pos:start="1:33" pos:end="1:59"><type pos:start="1:33" pos:end="1:59"><specifier pos:start="1:33" pos:end="1:37">const</specifier> <name pos:start="1:39" pos:end="1:56">DCAADPCMEncContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">s</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:78"><decl pos:start="1:62" pos:end="1:78"><type pos:start="1:62" pos:end="1:78"><specifier pos:start="1:62" pos:end="1:66">const</specifier> <name pos:start="1:68" pos:end="1:74">int32_t</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:78">in</name></decl></parameter>, <parameter pos:start="1:81" pos:end="1:87"><decl pos:start="1:81" pos:end="1:87"><type pos:start="1:81" pos:end="1:87"><name pos:start="1:81" pos:end="1:83">int</name></type> <name pos:start="1:85" pos:end="1:87">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:14">

    <decl_stmt pos:start="5:5" pos:end="5:63"><decl pos:start="5:5" pos:end="5:62"><type pos:start="5:5" pos:end="5:32"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:30">premultiplied_coeffs</name> <modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:44">precalc_data</name> <init pos:start="5:46" pos:end="5:62">= <expr pos:start="5:48" pos:end="5:62"><name pos:start="5:48" pos:end="5:62"><name pos:start="5:48" pos:end="5:48">s</name><operator pos:start="5:49" pos:end="5:50">-&gt;</operator><name pos:start="5:51" pos:end="5:62">private_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">k</name> <init pos:start="7:17" pos:end="7:19">= <expr pos:start="7:19" pos:end="7:19"><literal type="number" pos:start="7:19" pos:end="7:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">vq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:19">min_err</name> <init pos:start="13:21" pos:end="13:31">= <expr pos:start="13:23" pos:end="13:31"><literal type="number" pos:start="13:23" pos:end="13:25">1ll</literal> <operator pos:start="13:27" pos:end="13:28">&lt;&lt;</operator> <literal type="number" pos:start="13:30" pos:end="13:31">62</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:16">corr</name><index pos:start="15:17" pos:end="15:20">[<expr pos:start="15:18" pos:end="15:19"><literal type="number" pos:start="15:18" pos:end="15:19">15</literal></expr>]</index></name></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="23:51">for <control pos:start="19:9" pos:end="19:43">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:38"><expr pos:start="19:17" pos:end="19:37"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:20">&lt;=</operator> <name pos:start="19:22" pos:end="19:37">DCA_ADPCM_COEFFS</name></expr>;</condition> <incr pos:start="19:40" pos:end="19:42"><expr pos:start="19:40" pos:end="19:42"><name pos:start="19:40" pos:end="19:40">i</name><operator pos:start="19:41" pos:end="19:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:9" pos:end="23:51"><block_content pos:start="21:9" pos:end="23:51">

        <for pos:start="21:9" pos:end="23:51">for <control pos:start="21:13" pos:end="21:47">(<init pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:18"><name pos:start="21:14" pos:end="21:14">j</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:18">i</name></expr>;</init> <condition pos:start="21:21" pos:end="21:42"><expr pos:start="21:21" pos:end="21:41"><name pos:start="21:21" pos:end="21:21">j</name> <operator pos:start="21:23" pos:end="21:24">&lt;=</operator> <name pos:start="21:26" pos:end="21:41">DCA_ADPCM_COEFFS</name></expr>;</condition> <incr pos:start="21:44" pos:end="21:46"><expr pos:start="21:44" pos:end="21:46"><name pos:start="21:44" pos:end="21:44">j</name><operator pos:start="21:45" pos:end="21:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:13" pos:end="23:51"><block_content pos:start="23:13" pos:end="23:51">

            <expr_stmt pos:start="23:13" pos:end="23:51"><expr pos:start="23:13" pos:end="23:50"><name pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:16">corr</name><index pos:start="23:17" pos:end="23:21">[<expr pos:start="23:18" pos:end="23:20"><name pos:start="23:18" pos:end="23:18">k</name><operator pos:start="23:19" pos:end="23:20">++</operator></expr>]</index></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <call pos:start="23:25" pos:end="23:50"><name pos:start="23:25" pos:end="23:33">calc_corr</name><argument_list pos:start="23:34" pos:end="23:50">(<argument pos:start="23:35" pos:end="23:38"><expr pos:start="23:35" pos:end="23:38"><name pos:start="23:35" pos:end="23:36">in</name><operator pos:start="23:37" pos:end="23:37">+</operator><literal type="number" pos:start="23:38" pos:end="23:38">4</literal></expr></argument>, <argument pos:start="23:41" pos:end="23:43"><expr pos:start="23:41" pos:end="23:43"><name pos:start="23:41" pos:end="23:43">len</name></expr></argument>, <argument pos:start="23:46" pos:end="23:46"><expr pos:start="23:46" pos:end="23:46"><name pos:start="23:46" pos:end="23:46">i</name></expr></argument>, <argument pos:start="23:49" pos:end="23:49"><expr pos:start="23:49" pos:end="23:49"><name pos:start="23:49" pos:end="23:49">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>



    <for pos:start="27:5" pos:end="41:5">for <control pos:start="27:9" pos:end="27:49">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:44"><expr pos:start="27:17" pos:end="27:43"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:43">DCA_ADPCM_VQCODEBOOK_SZ</name></expr>;</condition> <incr pos:start="27:46" pos:end="27:48"><expr pos:start="27:46" pos:end="27:48"><name pos:start="27:46" pos:end="27:46">i</name><operator pos:start="27:47" pos:end="27:48">++</operator></expr></incr>)</control> <block pos:start="27:51" pos:end="41:5">{<block_content pos:start="29:9" pos:end="39:23">

        <expr_stmt pos:start="29:9" pos:end="29:68"><expr pos:start="29:9" pos:end="29:67"><name pos:start="29:9" pos:end="29:11">err</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:67"><name pos:start="29:15" pos:end="29:26">apply_filter</name><argument_list pos:start="29:27" pos:end="29:67">(<argument pos:start="29:28" pos:end="29:45"><expr pos:start="29:28" pos:end="29:45"><name pos:start="29:28" pos:end="29:45"><name pos:start="29:28" pos:end="29:42">ff_dca_adpcm_vb</name><index pos:start="29:43" pos:end="29:45">[<expr pos:start="29:44" pos:end="29:44"><name pos:start="29:44" pos:end="29:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="29:48" pos:end="29:51"><expr pos:start="29:48" pos:end="29:51"><name pos:start="29:48" pos:end="29:51">corr</name></expr></argument>, <argument pos:start="29:54" pos:end="29:66"><expr pos:start="29:54" pos:end="29:66"><operator pos:start="29:54" pos:end="29:54">*</operator><name pos:start="29:55" pos:end="29:66">precalc_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:26">(<expr pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:15">err</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <name pos:start="31:19" pos:end="31:25">min_err</name></expr>)</condition> <block pos:start="31:28" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:19">

            <expr_stmt pos:start="33:13" pos:end="33:26"><expr pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:19">min_err</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:25">err</name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:19"><expr pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:14">vq</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:18">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:23"><expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:20">precalc_data</name><operator pos:start="39:21" pos:end="39:22">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="45:5" pos:end="45:14">return <expr pos:start="45:12" pos:end="45:13"><name pos:start="45:12" pos:end="45:13">vq</name></expr>;</return>

</block_content>}</block></function>
</unit>
