<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2223.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">opus_decode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="169:1">{<block_content pos:start="5:5" pos:end="167:15">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">OpusContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">c</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:26">avctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:14">i</name></decl>, <decl pos:start="7:17" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:17">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:44"><expr pos:start="11:5" pos:end="11:43"><name pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:9">avctx</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:21">sample_fmt</name></name>  <operator pos:start="11:24" pos:end="11:24">=</operator> <name pos:start="11:26" pos:end="11:43">AV_SAMPLE_FMT_FLTP</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:9">avctx</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:22">sample_rate</name></name> <operator pos:start="13:24" pos:end="13:24">=</operator> <literal type="number" pos:start="13:26" pos:end="13:30">48000</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:40"><expr pos:start="17:5" pos:end="17:39"><name pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:5">c</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:11">fdsp</name></name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:39"><name pos:start="17:15" pos:end="17:36">avpriv_float_dsp_alloc</name><argument_list pos:start="17:37" pos:end="17:39">(<argument pos:start="17:38" pos:end="17:38"><expr pos:start="17:38" pos:end="17:38"><literal type="number" pos:start="17:38" pos:end="17:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:16"><name pos:start="19:10" pos:end="19:10">c</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:16">fdsp</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:44">/* find out the channel configuration */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:44"><expr pos:start="27:5" pos:end="27:43"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:43"><name pos:start="27:11" pos:end="27:33">ff_opus_parse_extradata</name><argument_list pos:start="27:34" pos:end="27:43">(<argument pos:start="27:35" pos:end="27:39"><expr pos:start="27:35" pos:end="27:39"><name pos:start="27:35" pos:end="27:39">avctx</name></expr></argument>, <argument pos:start="27:42" pos:end="27:42"><expr pos:start="27:42" pos:end="27:42"><name pos:start="27:42" pos:end="27:42">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:19"><if pos:start="29:5" pos:end="31:19">if <condition pos:start="29:8" pos:end="29:16">(<expr pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">&lt;</operator> <literal type="number" pos:start="29:15" pos:end="29:15">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:19"><block_content pos:start="31:9" pos:end="31:19">

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:52">/* allocate and init each independent decoder */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:70"><expr pos:start="37:5" pos:end="37:69"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:5">c</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:14">streams</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:69"><name pos:start="37:18" pos:end="37:33">av_mallocz_array</name><argument_list pos:start="37:34" pos:end="37:69">(<argument pos:start="37:35" pos:end="37:47"><expr pos:start="37:35" pos:end="37:47"><name pos:start="37:35" pos:end="37:47"><name pos:start="37:35" pos:end="37:35">c</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:47">nb_streams</name></name></expr></argument>, <argument pos:start="37:50" pos:end="37:68"><expr pos:start="37:50" pos:end="37:68"><sizeof pos:start="37:50" pos:end="37:68">sizeof<argument_list pos:start="37:56" pos:end="37:68">(<argument pos:start="37:57" pos:end="37:67"><expr pos:start="37:57" pos:end="37:67"><operator pos:start="37:57" pos:end="37:57">*</operator><name pos:start="37:58" pos:end="37:67"><name pos:start="37:58" pos:end="37:58">c</name><operator pos:start="37:59" pos:end="37:60">-&gt;</operator><name pos:start="37:61" pos:end="37:67">streams</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:78"><expr pos:start="39:5" pos:end="39:77"><name pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:5">c</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:10">out</name></name>             <operator pos:start="39:24" pos:end="39:24">=</operator> <call pos:start="39:26" pos:end="39:77"><name pos:start="39:26" pos:end="39:41">av_mallocz_array</name><argument_list pos:start="39:42" pos:end="39:77">(<argument pos:start="39:43" pos:end="39:55"><expr pos:start="39:43" pos:end="39:55"><name pos:start="39:43" pos:end="39:55"><name pos:start="39:43" pos:end="39:43">c</name><operator pos:start="39:44" pos:end="39:45">-&gt;</operator><name pos:start="39:46" pos:end="39:55">nb_streams</name></name></expr></argument>, <argument pos:start="39:58" pos:end="39:76"><expr pos:start="39:58" pos:end="39:76"><literal type="number" pos:start="39:58" pos:end="39:58">2</literal> <operator pos:start="39:60" pos:end="39:60">*</operator> <sizeof pos:start="39:62" pos:end="39:76">sizeof<argument_list pos:start="39:68" pos:end="39:76">(<argument pos:start="39:69" pos:end="39:75"><expr pos:start="39:69" pos:end="39:75"><operator pos:start="39:69" pos:end="39:69">*</operator><name pos:start="39:70" pos:end="39:75"><name pos:start="39:70" pos:end="39:70">c</name><operator pos:start="39:71" pos:end="39:72">-&gt;</operator><name pos:start="39:73" pos:end="39:75">out</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:79"><expr pos:start="41:5" pos:end="41:78"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:5">c</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:15">out_size</name></name>        <operator pos:start="41:24" pos:end="41:24">=</operator> <call pos:start="41:26" pos:end="41:78"><name pos:start="41:26" pos:end="41:41">av_mallocz_array</name><argument_list pos:start="41:42" pos:end="41:78">(<argument pos:start="41:43" pos:end="41:55"><expr pos:start="41:43" pos:end="41:55"><name pos:start="41:43" pos:end="41:55"><name pos:start="41:43" pos:end="41:43">c</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:55">nb_streams</name></name></expr></argument>, <argument pos:start="41:58" pos:end="41:77"><expr pos:start="41:58" pos:end="41:77"><sizeof pos:start="41:58" pos:end="41:77">sizeof<argument_list pos:start="41:64" pos:end="41:77">(<argument pos:start="41:65" pos:end="41:76"><expr pos:start="41:65" pos:end="41:76"><operator pos:start="41:65" pos:end="41:65">*</operator><name pos:start="41:66" pos:end="41:76"><name pos:start="41:66" pos:end="41:66">c</name><operator pos:start="41:67" pos:end="41:68">-&gt;</operator><name pos:start="41:69" pos:end="41:76">out_size</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:83"><expr pos:start="43:5" pos:end="43:82"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:5">c</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:19">sync_buffers</name></name>    <operator pos:start="43:24" pos:end="43:24">=</operator> <call pos:start="43:26" pos:end="43:82"><name pos:start="43:26" pos:end="43:41">av_mallocz_array</name><argument_list pos:start="43:42" pos:end="43:82">(<argument pos:start="43:43" pos:end="43:55"><expr pos:start="43:43" pos:end="43:55"><name pos:start="43:43" pos:end="43:55"><name pos:start="43:43" pos:end="43:43">c</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:55">nb_streams</name></name></expr></argument>, <argument pos:start="43:58" pos:end="43:81"><expr pos:start="43:58" pos:end="43:81"><sizeof pos:start="43:58" pos:end="43:81">sizeof<argument_list pos:start="43:64" pos:end="43:81">(<argument pos:start="43:65" pos:end="43:80"><expr pos:start="43:65" pos:end="43:80"><operator pos:start="43:65" pos:end="43:65">*</operator><name pos:start="43:66" pos:end="43:80"><name pos:start="43:66" pos:end="43:66">c</name><operator pos:start="43:67" pos:end="43:68">-&gt;</operator><name pos:start="43:69" pos:end="43:80">sync_buffers</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:86"><expr pos:start="45:5" pos:end="45:85"><name pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:5">c</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:22">decoded_samples</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="45:85"><name pos:start="45:26" pos:end="45:41">av_mallocz_array</name><argument_list pos:start="45:42" pos:end="45:85">(<argument pos:start="45:43" pos:end="45:55"><expr pos:start="45:43" pos:end="45:55"><name pos:start="45:43" pos:end="45:55"><name pos:start="45:43" pos:end="45:43">c</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:55">nb_streams</name></name></expr></argument>, <argument pos:start="45:58" pos:end="45:84"><expr pos:start="45:58" pos:end="45:84"><sizeof pos:start="45:58" pos:end="45:84">sizeof<argument_list pos:start="45:64" pos:end="45:84">(<argument pos:start="45:65" pos:end="45:83"><expr pos:start="45:65" pos:end="45:83"><operator pos:start="45:65" pos:end="45:65">*</operator><name pos:start="45:66" pos:end="45:83"><name pos:start="45:66" pos:end="45:66">c</name><operator pos:start="45:67" pos:end="45:68">-&gt;</operator><name pos:start="45:69" pos:end="45:83">decoded_samples</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:90">(<expr pos:start="47:9" pos:end="47:89"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:19"><name pos:start="47:10" pos:end="47:10">c</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:19">streams</name></name> <operator pos:start="47:21" pos:end="47:22">||</operator> <operator pos:start="47:24" pos:end="47:24">!</operator><name pos:start="47:25" pos:end="47:39"><name pos:start="47:25" pos:end="47:25">c</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:39">sync_buffers</name></name> <operator pos:start="47:41" pos:end="47:42">||</operator> <operator pos:start="47:44" pos:end="47:44">!</operator><name pos:start="47:45" pos:end="47:62"><name pos:start="47:45" pos:end="47:45">c</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:62">decoded_samples</name></name> <operator pos:start="47:64" pos:end="47:65">||</operator> <operator pos:start="47:67" pos:end="47:67">!</operator><name pos:start="47:68" pos:end="47:73"><name pos:start="47:68" pos:end="47:68">c</name><operator pos:start="47:69" pos:end="47:70">-&gt;</operator><name pos:start="47:71" pos:end="47:73">out</name></name> <operator pos:start="47:75" pos:end="47:76">||</operator> <operator pos:start="47:78" pos:end="47:78">!</operator><name pos:start="47:79" pos:end="47:89"><name pos:start="47:79" pos:end="47:79">c</name><operator pos:start="47:80" pos:end="47:81">-&gt;</operator><name pos:start="47:82" pos:end="47:89">out_size</name></name></expr>)</condition> <block pos:start="47:92" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:18">

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:9">c</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:21">nb_streams</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="number" pos:start="49:25" pos:end="49:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:30"><expr pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:29"><name pos:start="51:15" pos:end="51:21">AVERROR</name><argument_list pos:start="51:22" pos:end="51:29">(<argument pos:start="51:23" pos:end="51:28"><expr pos:start="51:23" pos:end="51:28"><name pos:start="51:23" pos:end="51:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:18">goto <name pos:start="53:14" pos:end="53:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="59:5" pos:end="157:5">for <control pos:start="59:9" pos:end="59:39">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:34"><expr pos:start="59:17" pos:end="59:33"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <name pos:start="59:21" pos:end="59:33"><name pos:start="59:21" pos:end="59:21">c</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:33">nb_streams</name></name></expr>;</condition> <incr pos:start="59:36" pos:end="59:38"><expr pos:start="59:36" pos:end="59:38"><name pos:start="59:36" pos:end="59:36">i</name><operator pos:start="59:37" pos:end="59:38">++</operator></expr></incr>)</control> <block pos:start="59:41" pos:end="157:5">{<block_content pos:start="61:9" pos:end="155:9">

        <decl_stmt pos:start="61:9" pos:end="61:46"><decl pos:start="61:9" pos:end="61:45"><type pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:25">OpusStreamContext</name> <modifier pos:start="61:27" pos:end="61:27">*</modifier></type><name pos:start="61:28" pos:end="61:28">s</name> <init pos:start="61:30" pos:end="61:45">= <expr pos:start="61:32" pos:end="61:45"><operator pos:start="61:32" pos:end="61:32">&amp;</operator><name pos:start="61:33" pos:end="61:45"><name pos:start="61:33" pos:end="61:33">c</name><operator pos:start="61:34" pos:end="61:35">-&gt;</operator><name pos:start="61:36" pos:end="61:42">streams</name><index pos:start="61:43" pos:end="61:45">[<expr pos:start="61:44" pos:end="61:44"><name pos:start="61:44" pos:end="61:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:24"><decl pos:start="63:9" pos:end="63:23"><type pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:16">uint64_t</name></type> <name pos:start="63:18" pos:end="63:23">layout</name></decl>;</decl_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:64"><expr pos:start="67:9" pos:end="67:63"><name pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:26">output_channels</name></name> <operator pos:start="67:28" pos:end="67:28">=</operator> <ternary pos:start="67:30" pos:end="67:63"><condition pos:start="67:30" pos:end="67:57"><expr pos:start="67:30" pos:end="67:55"><operator pos:start="67:30" pos:end="67:30">(</operator><name pos:start="67:31" pos:end="67:31">i</name> <operator pos:start="67:33" pos:end="67:33">&lt;</operator> <name pos:start="67:35" pos:end="67:54"><name pos:start="67:35" pos:end="67:35">c</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:54">nb_stereo_streams</name></name><operator pos:start="67:55" pos:end="67:55">)</operator></expr> ?</condition><then pos:start="67:59" pos:end="67:59"> <expr pos:start="67:59" pos:end="67:59"><literal type="number" pos:start="67:59" pos:end="67:59">2</literal></expr> </then><else pos:start="67:61" pos:end="67:63">: <expr pos:start="67:63" pos:end="67:63"><literal type="number" pos:start="67:63" pos:end="67:63">1</literal></expr></else></ternary></expr>;</expr_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:25"><expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:16"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:16">avctx</name></name> <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:24">avctx</name></expr>;</expr_stmt>



        <for pos:start="75:9" pos:end="83:9">for <control pos:start="75:13" pos:end="75:48">(<init pos:start="75:14" pos:end="75:19"><expr pos:start="75:14" pos:end="75:18"><name pos:start="75:14" pos:end="75:14">j</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr>;</init> <condition pos:start="75:21" pos:end="75:43"><expr pos:start="75:21" pos:end="75:42"><name pos:start="75:21" pos:end="75:21">j</name> <operator pos:start="75:23" pos:end="75:23">&lt;</operator> <name pos:start="75:25" pos:end="75:42"><name pos:start="75:25" pos:end="75:25">s</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:42">output_channels</name></name></expr>;</condition> <incr pos:start="75:45" pos:end="75:47"><expr pos:start="75:45" pos:end="75:47"><name pos:start="75:45" pos:end="75:45">j</name><operator pos:start="75:46" pos:end="75:47">++</operator></expr></incr>)</control> <block pos:start="75:50" pos:end="83:9">{<block_content pos:start="77:13" pos:end="81:59">

            <expr_stmt pos:start="77:13" pos:end="77:53"><expr pos:start="77:13" pos:end="77:52"><name pos:start="77:13" pos:end="77:29"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:26">silk_output</name><index pos:start="77:27" pos:end="77:29">[<expr pos:start="77:28" pos:end="77:28"><name pos:start="77:28" pos:end="77:28">j</name></expr>]</index></name>       <operator pos:start="77:37" pos:end="77:37">=</operator> <name pos:start="77:39" pos:end="77:52"><name pos:start="77:39" pos:end="77:39">s</name><operator pos:start="77:40" pos:end="77:41">-&gt;</operator><name pos:start="77:42" pos:end="77:49">silk_buf</name><index pos:start="77:50" pos:end="77:52">[<expr pos:start="77:51" pos:end="77:51"><name pos:start="77:51" pos:end="77:51">j</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:53"><expr pos:start="79:13" pos:end="79:52"><name pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:26">celt_output</name><index pos:start="79:27" pos:end="79:29">[<expr pos:start="79:28" pos:end="79:28"><name pos:start="79:28" pos:end="79:28">j</name></expr>]</index></name>       <operator pos:start="79:37" pos:end="79:37">=</operator> <name pos:start="79:39" pos:end="79:52"><name pos:start="79:39" pos:end="79:39">s</name><operator pos:start="79:40" pos:end="79:41">-&gt;</operator><name pos:start="79:42" pos:end="79:49">celt_buf</name><index pos:start="79:50" pos:end="79:52">[<expr pos:start="79:51" pos:end="79:51"><name pos:start="79:51" pos:end="79:51">j</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:59"><expr pos:start="81:13" pos:end="81:58"><name pos:start="81:13" pos:end="81:35"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:32">redundancy_output</name><index pos:start="81:33" pos:end="81:35">[<expr pos:start="81:34" pos:end="81:34"><name pos:start="81:34" pos:end="81:34">j</name></expr>]</index></name> <operator pos:start="81:37" pos:end="81:37">=</operator> <name pos:start="81:39" pos:end="81:58"><name pos:start="81:39" pos:end="81:39">s</name><operator pos:start="81:40" pos:end="81:41">-&gt;</operator><name pos:start="81:42" pos:end="81:55">redundancy_buf</name><index pos:start="81:56" pos:end="81:58">[<expr pos:start="81:57" pos:end="81:57"><name pos:start="81:57" pos:end="81:57">j</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="87:9" pos:end="87:26"><expr pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:15">fdsp</name></name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:25"><name pos:start="87:19" pos:end="87:19">c</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:25">fdsp</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:28"><expr pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:14"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:14">swr</name></name> <operator pos:start="91:16" pos:end="91:16">=</operator><call pos:start="91:17" pos:end="91:27"><name pos:start="91:17" pos:end="91:25">swr_alloc</name><argument_list pos:start="91:26" pos:end="91:27">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="95:22"><if pos:start="93:9" pos:end="95:22">if <condition pos:start="93:12" pos:end="93:20">(<expr pos:start="93:13" pos:end="93:19"><operator pos:start="93:13" pos:end="93:13">!</operator><name pos:start="93:14" pos:end="93:19"><name pos:start="93:14" pos:end="93:14">s</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:19">swr</name></name></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:22"><block_content pos:start="95:13" pos:end="95:22">

            <goto pos:start="95:13" pos:end="95:22">goto <name pos:start="95:18" pos:end="95:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:85"><expr pos:start="99:9" pos:end="99:84"><name pos:start="99:9" pos:end="99:14">layout</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <ternary pos:start="99:18" pos:end="99:84"><condition pos:start="99:18" pos:end="99:44"><expr pos:start="99:18" pos:end="99:42"><operator pos:start="99:18" pos:end="99:18">(</operator><name pos:start="99:19" pos:end="99:36"><name pos:start="99:19" pos:end="99:19">s</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:36">output_channels</name></name> <operator pos:start="99:38" pos:end="99:39">==</operator> <literal type="number" pos:start="99:41" pos:end="99:41">1</literal><operator pos:start="99:42" pos:end="99:42">)</operator></expr> ?</condition><then pos:start="99:46" pos:end="99:62"> <expr pos:start="99:46" pos:end="99:62"><name pos:start="99:46" pos:end="99:62">AV_CH_LAYOUT_MONO</name></expr> </then><else pos:start="99:64" pos:end="99:84">: <expr pos:start="99:66" pos:end="99:84"><name pos:start="99:66" pos:end="99:84">AV_CH_LAYOUT_STEREO</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:76"><expr pos:start="101:9" pos:end="101:75"><call pos:start="101:9" pos:end="101:75"><name pos:start="101:9" pos:end="101:22">av_opt_set_int</name><argument_list pos:start="101:23" pos:end="101:75">(<argument pos:start="101:24" pos:end="101:29"><expr pos:start="101:24" pos:end="101:29"><name pos:start="101:24" pos:end="101:29"><name pos:start="101:24" pos:end="101:24">s</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:29">swr</name></name></expr></argument>, <argument pos:start="101:32" pos:end="101:46"><expr pos:start="101:32" pos:end="101:46"><literal type="string" pos:start="101:32" pos:end="101:46">"in_sample_fmt"</literal></expr></argument>,      <argument pos:start="101:54" pos:end="101:70"><expr pos:start="101:54" pos:end="101:70"><name pos:start="101:54" pos:end="101:70"><name pos:start="101:54" pos:end="101:58">avctx</name><operator pos:start="101:59" pos:end="101:60">-&gt;</operator><name pos:start="101:61" pos:end="101:70">sample_fmt</name></name></expr></argument>,  <argument pos:start="101:74" pos:end="101:74"><expr pos:start="101:74" pos:end="101:74"><literal type="number" pos:start="101:74" pos:end="101:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:76"><expr pos:start="103:9" pos:end="103:75"><call pos:start="103:9" pos:end="103:75"><name pos:start="103:9" pos:end="103:22">av_opt_set_int</name><argument_list pos:start="103:23" pos:end="103:75">(<argument pos:start="103:24" pos:end="103:29"><expr pos:start="103:24" pos:end="103:29"><name pos:start="103:24" pos:end="103:29"><name pos:start="103:24" pos:end="103:24">s</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:29">swr</name></name></expr></argument>, <argument pos:start="103:32" pos:end="103:47"><expr pos:start="103:32" pos:end="103:47"><literal type="string" pos:start="103:32" pos:end="103:47">"out_sample_fmt"</literal></expr></argument>,     <argument pos:start="103:54" pos:end="103:70"><expr pos:start="103:54" pos:end="103:70"><name pos:start="103:54" pos:end="103:70"><name pos:start="103:54" pos:end="103:58">avctx</name><operator pos:start="103:59" pos:end="103:60">-&gt;</operator><name pos:start="103:61" pos:end="103:70">sample_fmt</name></name></expr></argument>,  <argument pos:start="103:74" pos:end="103:74"><expr pos:start="103:74" pos:end="103:74"><literal type="number" pos:start="103:74" pos:end="103:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:76"><expr pos:start="105:9" pos:end="105:75"><call pos:start="105:9" pos:end="105:75"><name pos:start="105:9" pos:end="105:22">av_opt_set_int</name><argument_list pos:start="105:23" pos:end="105:75">(<argument pos:start="105:24" pos:end="105:29"><expr pos:start="105:24" pos:end="105:29"><name pos:start="105:24" pos:end="105:29"><name pos:start="105:24" pos:end="105:24">s</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:29">swr</name></name></expr></argument>, <argument pos:start="105:32" pos:end="105:50"><expr pos:start="105:32" pos:end="105:50"><literal type="string" pos:start="105:32" pos:end="105:50">"in_channel_layout"</literal></expr></argument>,  <argument pos:start="105:54" pos:end="105:59"><expr pos:start="105:54" pos:end="105:59"><name pos:start="105:54" pos:end="105:59">layout</name></expr></argument>,             <argument pos:start="105:74" pos:end="105:74"><expr pos:start="105:74" pos:end="105:74"><literal type="number" pos:start="105:74" pos:end="105:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:76"><expr pos:start="107:9" pos:end="107:75"><call pos:start="107:9" pos:end="107:75"><name pos:start="107:9" pos:end="107:22">av_opt_set_int</name><argument_list pos:start="107:23" pos:end="107:75">(<argument pos:start="107:24" pos:end="107:29"><expr pos:start="107:24" pos:end="107:29"><name pos:start="107:24" pos:end="107:29"><name pos:start="107:24" pos:end="107:24">s</name><operator pos:start="107:25" pos:end="107:26">-&gt;</operator><name pos:start="107:27" pos:end="107:29">swr</name></name></expr></argument>, <argument pos:start="107:32" pos:end="107:51"><expr pos:start="107:32" pos:end="107:51"><literal type="string" pos:start="107:32" pos:end="107:51">"out_channel_layout"</literal></expr></argument>, <argument pos:start="107:54" pos:end="107:59"><expr pos:start="107:54" pos:end="107:59"><name pos:start="107:54" pos:end="107:59">layout</name></expr></argument>,             <argument pos:start="107:74" pos:end="107:74"><expr pos:start="107:74" pos:end="107:74"><literal type="number" pos:start="107:74" pos:end="107:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:76"><expr pos:start="109:9" pos:end="109:75"><call pos:start="109:9" pos:end="109:75"><name pos:start="109:9" pos:end="109:22">av_opt_set_int</name><argument_list pos:start="109:23" pos:end="109:75">(<argument pos:start="109:24" pos:end="109:29"><expr pos:start="109:24" pos:end="109:29"><name pos:start="109:24" pos:end="109:29"><name pos:start="109:24" pos:end="109:24">s</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:29">swr</name></name></expr></argument>, <argument pos:start="109:32" pos:end="109:48"><expr pos:start="109:32" pos:end="109:48"><literal type="string" pos:start="109:32" pos:end="109:48">"out_sample_rate"</literal></expr></argument>,    <argument pos:start="109:54" pos:end="109:71"><expr pos:start="109:54" pos:end="109:71"><name pos:start="109:54" pos:end="109:71"><name pos:start="109:54" pos:end="109:58">avctx</name><operator pos:start="109:59" pos:end="109:60">-&gt;</operator><name pos:start="109:61" pos:end="109:71">sample_rate</name></name></expr></argument>, <argument pos:start="109:74" pos:end="109:74"><expr pos:start="109:74" pos:end="109:74"><literal type="number" pos:start="109:74" pos:end="109:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:76"><expr pos:start="111:9" pos:end="111:75"><call pos:start="111:9" pos:end="111:75"><name pos:start="111:9" pos:end="111:22">av_opt_set_int</name><argument_list pos:start="111:23" pos:end="111:75">(<argument pos:start="111:24" pos:end="111:29"><expr pos:start="111:24" pos:end="111:29"><name pos:start="111:24" pos:end="111:29"><name pos:start="111:24" pos:end="111:24">s</name><operator pos:start="111:25" pos:end="111:26">-&gt;</operator><name pos:start="111:27" pos:end="111:29">swr</name></name></expr></argument>, <argument pos:start="111:32" pos:end="111:44"><expr pos:start="111:32" pos:end="111:44"><literal type="string" pos:start="111:32" pos:end="111:44">"filter_size"</literal></expr></argument>,        <argument pos:start="111:54" pos:end="111:55"><expr pos:start="111:54" pos:end="111:55"><literal type="number" pos:start="111:54" pos:end="111:55">16</literal></expr></argument>,                 <argument pos:start="111:74" pos:end="111:74"><expr pos:start="111:74" pos:end="111:74"><literal type="number" pos:start="111:74" pos:end="111:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:64"><expr pos:start="115:9" pos:end="115:63"><name pos:start="115:9" pos:end="115:11">ret</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <call pos:start="115:15" pos:end="115:63"><name pos:start="115:15" pos:end="115:26">ff_silk_init</name><argument_list pos:start="115:27" pos:end="115:63">(<argument pos:start="115:28" pos:end="115:32"><expr pos:start="115:28" pos:end="115:32"><name pos:start="115:28" pos:end="115:32">avctx</name></expr></argument>, <argument pos:start="115:35" pos:end="115:42"><expr pos:start="115:35" pos:end="115:42"><operator pos:start="115:35" pos:end="115:35">&amp;</operator><name pos:start="115:36" pos:end="115:42"><name pos:start="115:36" pos:end="115:36">s</name><operator pos:start="115:37" pos:end="115:38">-&gt;</operator><name pos:start="115:39" pos:end="115:42">silk</name></name></expr></argument>, <argument pos:start="115:45" pos:end="115:62"><expr pos:start="115:45" pos:end="115:62"><name pos:start="115:45" pos:end="115:62"><name pos:start="115:45" pos:end="115:45">s</name><operator pos:start="115:46" pos:end="115:47">-&gt;</operator><name pos:start="115:48" pos:end="115:62">output_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="119:22"><if pos:start="117:9" pos:end="119:22">if <condition pos:start="117:12" pos:end="117:20">(<expr pos:start="117:13" pos:end="117:19"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">&lt;</operator> <literal type="number" pos:start="117:19" pos:end="117:19">0</literal></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:22"><block_content pos:start="119:13" pos:end="119:22">

            <goto pos:start="119:13" pos:end="119:22">goto <name pos:start="119:18" pos:end="119:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:64"><expr pos:start="123:9" pos:end="123:63"><name pos:start="123:9" pos:end="123:11">ret</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <call pos:start="123:15" pos:end="123:63"><name pos:start="123:15" pos:end="123:26">ff_celt_init</name><argument_list pos:start="123:27" pos:end="123:63">(<argument pos:start="123:28" pos:end="123:32"><expr pos:start="123:28" pos:end="123:32"><name pos:start="123:28" pos:end="123:32">avctx</name></expr></argument>, <argument pos:start="123:35" pos:end="123:42"><expr pos:start="123:35" pos:end="123:42"><operator pos:start="123:35" pos:end="123:35">&amp;</operator><name pos:start="123:36" pos:end="123:42"><name pos:start="123:36" pos:end="123:36">s</name><operator pos:start="123:37" pos:end="123:38">-&gt;</operator><name pos:start="123:39" pos:end="123:42">celt</name></name></expr></argument>, <argument pos:start="123:45" pos:end="123:62"><expr pos:start="123:45" pos:end="123:62"><name pos:start="123:45" pos:end="123:62"><name pos:start="123:45" pos:end="123:45">s</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:62">output_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="127:22"><if pos:start="125:9" pos:end="127:22">if <condition pos:start="125:12" pos:end="125:20">(<expr pos:start="125:13" pos:end="125:19"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">&lt;</operator> <literal type="number" pos:start="125:19" pos:end="125:19">0</literal></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:22"><block_content pos:start="127:13" pos:end="127:22">

            <goto pos:start="127:13" pos:end="127:22">goto <name pos:start="127:18" pos:end="127:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="131:9" pos:end="133:70"><expr pos:start="131:9" pos:end="133:69"><name pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:21">celt_delay</name></name> <operator pos:start="131:23" pos:end="131:23">=</operator> <call pos:start="131:25" pos:end="133:69"><name pos:start="131:25" pos:end="131:43">av_audio_fifo_alloc</name><argument_list pos:start="131:44" pos:end="133:69">(<argument pos:start="131:45" pos:end="131:61"><expr pos:start="131:45" pos:end="131:61"><name pos:start="131:45" pos:end="131:61"><name pos:start="131:45" pos:end="131:49">avctx</name><operator pos:start="131:50" pos:end="131:51">-&gt;</operator><name pos:start="131:52" pos:end="131:61">sample_fmt</name></name></expr></argument>,

                                            <argument pos:start="133:45" pos:end="133:62"><expr pos:start="133:45" pos:end="133:62"><name pos:start="133:45" pos:end="133:62"><name pos:start="133:45" pos:end="133:45">s</name><operator pos:start="133:46" pos:end="133:47">-&gt;</operator><name pos:start="133:48" pos:end="133:62">output_channels</name></name></expr></argument>, <argument pos:start="133:65" pos:end="133:68"><expr pos:start="133:65" pos:end="133:68"><literal type="number" pos:start="133:65" pos:end="133:68">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="141:9"><if pos:start="135:9" pos:end="141:9">if <condition pos:start="135:12" pos:end="135:27">(<expr pos:start="135:13" pos:end="135:26"><operator pos:start="135:13" pos:end="135:13">!</operator><name pos:start="135:14" pos:end="135:26"><name pos:start="135:14" pos:end="135:14">s</name><operator pos:start="135:15" pos:end="135:16">-&gt;</operator><name pos:start="135:17" pos:end="135:26">celt_delay</name></name></expr>)</condition> <block pos:start="135:29" pos:end="141:9">{<block_content pos:start="137:13" pos:end="139:22">

            <expr_stmt pos:start="137:13" pos:end="137:34"><expr pos:start="137:13" pos:end="137:33"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <call pos:start="137:19" pos:end="137:33"><name pos:start="137:19" pos:end="137:25">AVERROR</name><argument_list pos:start="137:26" pos:end="137:33">(<argument pos:start="137:27" pos:end="137:32"><expr pos:start="137:27" pos:end="137:32"><name pos:start="137:27" pos:end="137:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="139:13" pos:end="139:22">goto <name pos:start="139:18" pos:end="139:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="145:9" pos:end="147:73"><expr pos:start="145:9" pos:end="147:72"><name pos:start="145:9" pos:end="145:26"><name pos:start="145:9" pos:end="145:9">c</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:23">sync_buffers</name><index pos:start="145:24" pos:end="145:26">[<expr pos:start="145:25" pos:end="145:25"><name pos:start="145:25" pos:end="145:25">i</name></expr>]</index></name> <operator pos:start="145:28" pos:end="145:28">=</operator> <call pos:start="145:30" pos:end="147:72"><name pos:start="145:30" pos:end="145:48">av_audio_fifo_alloc</name><argument_list pos:start="145:49" pos:end="147:72">(<argument pos:start="145:50" pos:end="145:66"><expr pos:start="145:50" pos:end="145:66"><name pos:start="145:50" pos:end="145:66"><name pos:start="145:50" pos:end="145:54">avctx</name><operator pos:start="145:55" pos:end="145:56">-&gt;</operator><name pos:start="145:57" pos:end="145:66">sample_fmt</name></name></expr></argument>,

                                                 <argument pos:start="147:50" pos:end="147:67"><expr pos:start="147:50" pos:end="147:67"><name pos:start="147:50" pos:end="147:67"><name pos:start="147:50" pos:end="147:50">s</name><operator pos:start="147:51" pos:end="147:52">-&gt;</operator><name pos:start="147:53" pos:end="147:67">output_channels</name></name></expr></argument>, <argument pos:start="147:70" pos:end="147:71"><expr pos:start="147:70" pos:end="147:71"><literal type="number" pos:start="147:70" pos:end="147:71">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="155:9"><if pos:start="149:9" pos:end="155:9">if <condition pos:start="149:12" pos:end="149:32">(<expr pos:start="149:13" pos:end="149:31"><operator pos:start="149:13" pos:end="149:13">!</operator><name pos:start="149:14" pos:end="149:31"><name pos:start="149:14" pos:end="149:14">c</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:28">sync_buffers</name><index pos:start="149:29" pos:end="149:31">[<expr pos:start="149:30" pos:end="149:30"><name pos:start="149:30" pos:end="149:30">i</name></expr>]</index></name></expr>)</condition> <block pos:start="149:34" pos:end="155:9">{<block_content pos:start="151:13" pos:end="153:22">

            <expr_stmt pos:start="151:13" pos:end="151:34"><expr pos:start="151:13" pos:end="151:33"><name pos:start="151:13" pos:end="151:15">ret</name> <operator pos:start="151:17" pos:end="151:17">=</operator> <call pos:start="151:19" pos:end="151:33"><name pos:start="151:19" pos:end="151:25">AVERROR</name><argument_list pos:start="151:26" pos:end="151:33">(<argument pos:start="151:27" pos:end="151:32"><expr pos:start="151:27" pos:end="151:32"><name pos:start="151:27" pos:end="151:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="153:13" pos:end="153:22">goto <name pos:start="153:18" pos:end="153:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="161:5" pos:end="161:13">return <expr pos:start="161:12" pos:end="161:12"><literal type="number" pos:start="161:12" pos:end="161:12">0</literal></expr>;</return>

<label pos:start="163:1" pos:end="163:5"><name pos:start="163:1" pos:end="163:4">fail</name>:</label>

    <expr_stmt pos:start="165:5" pos:end="165:29"><expr pos:start="165:5" pos:end="165:28"><call pos:start="165:5" pos:end="165:28"><name pos:start="165:5" pos:end="165:21">opus_decode_close</name><argument_list pos:start="165:22" pos:end="165:28">(<argument pos:start="165:23" pos:end="165:27"><expr pos:start="165:23" pos:end="165:27"><name pos:start="165:23" pos:end="165:27">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="167:5" pos:end="167:15">return <expr pos:start="167:12" pos:end="167:14"><name pos:start="167:12" pos:end="167:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
