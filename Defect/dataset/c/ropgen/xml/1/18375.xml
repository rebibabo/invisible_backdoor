<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18375.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:39">virtio_scsi_handle_cmd_req_prepare</name><parameter_list pos:start="1:40" pos:end="1:74">(<parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:50">VirtIOSCSI</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:73"><decl pos:start="1:56" pos:end="1:73"><type pos:start="1:56" pos:end="1:73"><name pos:start="1:56" pos:end="1:68">VirtIOSCSIReq</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">req</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:16">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">VirtIOSCSICommon</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">vs</name> <init pos:start="5:26" pos:end="5:41">= <expr pos:start="5:28" pos:end="5:41"><operator pos:start="5:28" pos:end="5:28">&amp;</operator><name pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:41">parent_obj</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">SCSIDevice</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="15:75"><expr pos:start="13:5" pos:end="15:74"><name pos:start="13:5" pos:end="13:6">rc</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="15:74"><name pos:start="13:10" pos:end="13:30">virtio_scsi_parse_req</name><argument_list pos:start="13:31" pos:end="15:74">(<argument pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><name pos:start="13:32" pos:end="13:34">req</name></expr></argument>, <argument pos:start="13:37" pos:end="13:75"><expr pos:start="13:37" pos:end="13:75"><sizeof pos:start="13:37" pos:end="13:60">sizeof<argument_list pos:start="13:43" pos:end="13:60">(<argument pos:start="13:44" pos:end="13:59"><expr pos:start="13:44" pos:end="13:59"><name pos:start="13:44" pos:end="13:59">VirtIOSCSICmdReq</name></expr></argument>)</argument_list></sizeof> <operator pos:start="13:62" pos:end="13:62">+</operator> <name pos:start="13:64" pos:end="13:75"><name pos:start="13:64" pos:end="13:65">vs</name><operator pos:start="13:66" pos:end="13:67">-&gt;</operator><name pos:start="13:68" pos:end="13:75">cdb_size</name></name></expr></argument>,

                               <argument pos:start="15:32" pos:end="15:73"><expr pos:start="15:32" pos:end="15:73"><sizeof pos:start="15:32" pos:end="15:56">sizeof<argument_list pos:start="15:38" pos:end="15:56">(<argument pos:start="15:39" pos:end="15:55"><expr pos:start="15:39" pos:end="15:55"><name pos:start="15:39" pos:end="15:55">VirtIOSCSICmdResp</name></expr></argument>)</argument_list></sizeof> <operator pos:start="15:58" pos:end="15:58">+</operator> <name pos:start="15:60" pos:end="15:73"><name pos:start="15:60" pos:end="15:61">vs</name><operator pos:start="15:62" pos:end="15:63">-&gt;</operator><name pos:start="15:64" pos:end="15:73">sense_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="31:5"><if pos:start="17:5" pos:end="31:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:10">rc</name> <operator pos:start="17:12" pos:end="17:12">&lt;</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>)</condition> <block pos:start="17:17" pos:end="31:5">{<block_content pos:start="19:9" pos:end="29:21">

        <if_stmt pos:start="19:9" pos:end="27:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:27">(<expr pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:14">rc</name> <operator pos:start="19:16" pos:end="19:17">==</operator> <operator pos:start="19:19" pos:end="19:19">-</operator><name pos:start="19:20" pos:end="19:26">ENOTSUP</name></expr>)</condition> <block pos:start="19:29" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:42">

            <expr_stmt pos:start="21:13" pos:end="21:42"><expr pos:start="21:13" pos:end="21:41"><call pos:start="21:13" pos:end="21:41"><name pos:start="21:13" pos:end="21:36">virtio_scsi_fail_cmd_req</name><argument_list pos:start="21:37" pos:end="21:41">(<argument pos:start="21:38" pos:end="21:40"><expr pos:start="21:38" pos:end="21:40"><name pos:start="21:38" pos:end="21:40">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="23:11" pos:end="27:9">else <block pos:start="23:16" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:34">

            <expr_stmt pos:start="25:13" pos:end="25:34"><expr pos:start="25:13" pos:end="25:33"><call pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:31">virtio_scsi_bad_req</name><argument_list pos:start="25:32" pos:end="25:33">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="29:9" pos:end="29:21">return <expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:5">d</name> <operator pos:start="35:7" pos:end="35:7">=</operator> <call pos:start="35:9" pos:end="35:52"><name pos:start="35:9" pos:end="35:31">virtio_scsi_device_find</name><argument_list pos:start="35:32" pos:end="35:52">(<argument pos:start="35:33" pos:end="35:33"><expr pos:start="35:33" pos:end="35:33"><name pos:start="35:33" pos:end="35:33">s</name></expr></argument>, <argument pos:start="35:36" pos:end="35:51"><expr pos:start="35:36" pos:end="35:51"><name pos:start="35:36" pos:end="35:51"><name pos:start="35:36" pos:end="35:38">req</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:43">req</name><operator pos:start="35:44" pos:end="35:44">.</operator><name pos:start="35:45" pos:end="35:47">cmd</name><operator pos:start="35:48" pos:end="35:48">.</operator><name pos:start="35:49" pos:end="35:51">lun</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:11">(<expr pos:start="37:9" pos:end="37:10"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:10">d</name></expr>)</condition> <block pos:start="37:13" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:21">

        <expr_stmt pos:start="39:9" pos:end="39:58"><expr pos:start="39:9" pos:end="39:57"><name pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:11">req</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:17">resp</name><operator pos:start="39:18" pos:end="39:18">.</operator><name pos:start="39:19" pos:end="39:21">cmd</name><operator pos:start="39:22" pos:end="39:22">.</operator><name pos:start="39:23" pos:end="39:30">response</name></name> <operator pos:start="39:32" pos:end="39:32">=</operator> <name pos:start="39:34" pos:end="39:57">VIRTIO_SCSI_S_BAD_TARGET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:42"><expr pos:start="41:9" pos:end="41:41"><call pos:start="41:9" pos:end="41:41"><name pos:start="41:9" pos:end="41:36">virtio_scsi_complete_cmd_req</name><argument_list pos:start="41:37" pos:end="41:41">(<argument pos:start="41:38" pos:end="41:40"><expr pos:start="41:38" pos:end="41:40"><name pos:start="41:38" pos:end="41:40">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:21">return <expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:29">(<expr pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:28">dataplane_started</name></name></expr>)</condition> <block pos:start="47:31" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:59">

        <expr_stmt pos:start="49:9" pos:end="49:59"><expr pos:start="49:9" pos:end="49:58"><call pos:start="49:9" pos:end="49:58"><name pos:start="49:9" pos:end="49:14">assert</name><argument_list pos:start="49:15" pos:end="49:58">(<argument pos:start="49:16" pos:end="49:57"><expr pos:start="49:16" pos:end="49:57"><call pos:start="49:16" pos:end="49:47"><name pos:start="49:16" pos:end="49:34">blk_get_aio_context</name><argument_list pos:start="49:35" pos:end="49:47">(<argument pos:start="49:36" pos:end="49:46"><expr pos:start="49:36" pos:end="49:46"><name pos:start="49:36" pos:end="49:46"><name pos:start="49:36" pos:end="49:36">d</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:42">conf</name><operator pos:start="49:43" pos:end="49:43">.</operator><name pos:start="49:44" pos:end="49:46">blk</name></name></expr></argument>)</argument_list></call> <operator pos:start="49:49" pos:end="49:50">==</operator> <name pos:start="49:52" pos:end="49:57"><name pos:start="49:52" pos:end="49:52">s</name><operator pos:start="49:53" pos:end="49:54">-&gt;</operator><name pos:start="49:55" pos:end="49:57">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="57:52"><expr pos:start="53:5" pos:end="57:51"><name pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:7">req</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:13">sreq</name></name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="57:51"><name pos:start="53:17" pos:end="53:28">scsi_req_new</name><argument_list pos:start="53:29" pos:end="57:51">(<argument pos:start="53:30" pos:end="53:30"><expr pos:start="53:30" pos:end="53:30"><name pos:start="53:30" pos:end="53:30">d</name></expr></argument>, <argument pos:start="53:33" pos:end="53:48"><expr pos:start="53:33" pos:end="53:48"><name pos:start="53:33" pos:end="53:48"><name pos:start="53:33" pos:end="53:35">req</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:40">req</name><operator pos:start="53:41" pos:end="53:41">.</operator><name pos:start="53:42" pos:end="53:44">cmd</name><operator pos:start="53:45" pos:end="53:45">.</operator><name pos:start="53:46" pos:end="53:48">tag</name></name></expr></argument>,

                             <argument pos:start="55:30" pos:end="55:66"><expr pos:start="55:30" pos:end="55:66"><call pos:start="55:30" pos:end="55:66"><name pos:start="55:30" pos:end="55:48">virtio_scsi_get_lun</name><argument_list pos:start="55:49" pos:end="55:66">(<argument pos:start="55:50" pos:end="55:65"><expr pos:start="55:50" pos:end="55:65"><name pos:start="55:50" pos:end="55:65"><name pos:start="55:50" pos:end="55:52">req</name><operator pos:start="55:53" pos:end="55:54">-&gt;</operator><name pos:start="55:55" pos:end="55:57">req</name><operator pos:start="55:58" pos:end="55:58">.</operator><name pos:start="55:59" pos:end="55:61">cmd</name><operator pos:start="55:62" pos:end="55:62">.</operator><name pos:start="55:63" pos:end="55:65">lun</name></name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="57:30" pos:end="57:45"><expr pos:start="57:30" pos:end="57:45"><name pos:start="57:30" pos:end="57:45"><name pos:start="57:30" pos:end="57:32">req</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:37">req</name><operator pos:start="57:38" pos:end="57:38">.</operator><name pos:start="57:39" pos:end="57:41">cmd</name><operator pos:start="57:42" pos:end="57:42">.</operator><name pos:start="57:43" pos:end="57:45">cdb</name></name></expr></argument>, <argument pos:start="57:48" pos:end="57:50"><expr pos:start="57:48" pos:end="57:50"><name pos:start="57:48" pos:end="57:50">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="73:5"><if pos:start="61:5" pos:end="73:5">if <condition pos:start="61:8" pos:end="65:50">(<expr pos:start="61:9" pos:end="65:49"><name pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:11">req</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:17">sreq</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:22">cmd</name><operator pos:start="61:23" pos:end="61:23">.</operator><name pos:start="61:24" pos:end="61:27">mode</name></name> <operator pos:start="61:29" pos:end="61:30">!=</operator> <name pos:start="61:32" pos:end="61:45">SCSI_XFER_NONE</name>

        <operator pos:start="63:9" pos:end="63:10">&amp;&amp;</operator> <operator pos:start="63:12" pos:end="63:12">(</operator><name pos:start="63:13" pos:end="63:31"><name pos:start="63:13" pos:end="63:15">req</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:21">sreq</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:26">cmd</name><operator pos:start="63:27" pos:end="63:27">.</operator><name pos:start="63:28" pos:end="63:31">mode</name></name> <operator pos:start="63:33" pos:end="63:34">!=</operator> <name pos:start="63:36" pos:end="63:44"><name pos:start="63:36" pos:end="63:38">req</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:44">mode</name></name> <operator pos:start="63:46" pos:end="63:47">||</operator>

            <name pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:15">req</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:21">sreq</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:26">cmd</name><operator pos:start="65:27" pos:end="65:27">.</operator><name pos:start="65:28" pos:end="65:31">xfer</name></name> <operator pos:start="65:33" pos:end="65:33">&gt;</operator> <name pos:start="65:35" pos:end="65:48"><name pos:start="65:35" pos:end="65:37">req</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:43">qsgl</name><operator pos:start="65:44" pos:end="65:44">.</operator><name pos:start="65:45" pos:end="65:48">size</name></name><operator pos:start="65:49" pos:end="65:49">)</operator></expr>)</condition> <block pos:start="65:52" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:21">

        <expr_stmt pos:start="67:9" pos:end="67:55"><expr pos:start="67:9" pos:end="67:54"><name pos:start="67:9" pos:end="67:30"><name pos:start="67:9" pos:end="67:11">req</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:17">resp</name><operator pos:start="67:18" pos:end="67:18">.</operator><name pos:start="67:19" pos:end="67:21">cmd</name><operator pos:start="67:22" pos:end="67:22">.</operator><name pos:start="67:23" pos:end="67:30">response</name></name> <operator pos:start="67:32" pos:end="67:32">=</operator> <name pos:start="67:34" pos:end="67:54">VIRTIO_SCSI_S_OVERRUN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:42"><expr pos:start="69:9" pos:end="69:41"><call pos:start="69:9" pos:end="69:41"><name pos:start="69:9" pos:end="69:36">virtio_scsi_complete_cmd_req</name><argument_list pos:start="69:37" pos:end="69:41">(<argument pos:start="69:38" pos:end="69:40"><expr pos:start="69:38" pos:end="69:40"><name pos:start="69:38" pos:end="69:40">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:21">return <expr pos:start="71:16" pos:end="71:20"><name pos:start="71:16" pos:end="71:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:28"><expr pos:start="75:5" pos:end="75:27"><call pos:start="75:5" pos:end="75:27"><name pos:start="75:5" pos:end="75:16">scsi_req_ref</name><argument_list pos:start="75:17" pos:end="75:27">(<argument pos:start="75:18" pos:end="75:26"><expr pos:start="75:18" pos:end="75:26"><name pos:start="75:18" pos:end="75:26"><name pos:start="75:18" pos:end="75:20">req</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:26">sreq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:29"><expr pos:start="77:5" pos:end="77:28"><call pos:start="77:5" pos:end="77:28"><name pos:start="77:5" pos:end="77:15">blk_io_plug</name><argument_list pos:start="77:16" pos:end="77:28">(<argument pos:start="77:17" pos:end="77:27"><expr pos:start="77:17" pos:end="77:27"><name pos:start="77:17" pos:end="77:27"><name pos:start="77:17" pos:end="77:17">d</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:23">conf</name><operator pos:start="77:24" pos:end="77:24">.</operator><name pos:start="77:25" pos:end="77:27">blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="79:5" pos:end="79:16">return <expr pos:start="79:12" pos:end="79:15"><name pos:start="79:12" pos:end="79:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
