<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9230.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint32_t</name></type> <name pos:start="1:10" pos:end="1:15">av_crc</name><parameter_list pos:start="1:16" pos:end="1:85">(<parameter pos:start="1:17" pos:end="1:32"><decl pos:start="1:17" pos:end="1:32"><type pos:start="1:17" pos:end="1:32"><specifier pos:start="1:17" pos:end="1:21">const</specifier> <name pos:start="1:23" pos:end="1:27">AVCRC</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">ctx</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:42">uint32_t</name></type> <name pos:start="1:44" pos:end="1:46">crc</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:69"><decl pos:start="1:49" pos:end="1:69"><type pos:start="1:49" pos:end="1:69"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:61">uint8_t</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:69">buffer</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:84"><decl pos:start="1:72" pos:end="1:84"><type pos:start="1:72" pos:end="1:84"><name pos:start="1:72" pos:end="1:77">size_t</name></type> <name pos:start="1:79" pos:end="1:84">length</name></decl></parameter>)</parameter_list><block pos:start="1:86" pos:end="35:1">{<block_content pos:start="3:5" pos:end="33:15">

    <decl_stmt pos:start="3:5" pos:end="8:0"><decl pos:start="3:5" pos:end="3:37"><type pos:start="3:5" pos:end="3:19"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:17">uint8_t</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:22">end</name><init pos:start="3:23" pos:end="3:37">= <expr pos:start="3:25" pos:end="3:37"><name pos:start="3:25" pos:end="3:30">buffer</name><operator pos:start="3:31" pos:end="3:31">+</operator><name pos:start="3:32" pos:end="3:37">length</name></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="7:1" pos:end="7:17">#<cpp:directive pos:start="7:2" pos:end="7:3">if</cpp:directive> <expr pos:start="7:5" pos:end="7:17"><operator pos:start="7:5" pos:end="7:5">!</operator><name pos:start="7:6" pos:end="7:17">CONFIG_SMALL</name></expr></cpp:if>

    <if_stmt pos:start="9:5" pos:end="26:0"><if pos:start="9:5" pos:end="26:0">if<condition pos:start="9:7" pos:end="9:17">(<expr pos:start="9:8" pos:end="9:16"><operator pos:start="9:8" pos:end="9:8">!</operator><name pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">ctx</name><index pos:start="9:12" pos:end="9:16">[<expr pos:start="9:13" pos:end="9:15"><literal type="number" pos:start="9:13" pos:end="9:15">256</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="26:0"><block_content pos:start="11:9" pos:end="26:0">

        <while pos:start="11:9" pos:end="26:0">while<condition pos:start="11:14" pos:end="11:27">(<expr pos:start="11:15" pos:end="11:26"><name pos:start="11:15" pos:end="11:20">buffer</name><operator pos:start="11:21" pos:end="11:21">&lt;</operator><name pos:start="11:22" pos:end="11:24">end</name><operator pos:start="11:25" pos:end="11:25">-</operator><literal type="number" pos:start="11:26" pos:end="11:26">3</literal></expr>)</condition><block pos:start="11:28" pos:end="26:0">{<block_content pos:start="13:13" pos:end="21:49">

            <expr_stmt pos:start="13:13" pos:end="13:54"><expr pos:start="13:13" pos:end="13:53"><name pos:start="13:13" pos:end="13:15">crc</name> <operator pos:start="13:17" pos:end="13:18">^=</operator> <call pos:start="13:20" pos:end="13:53"><name pos:start="13:20" pos:end="13:27">le2me_32</name><argument_list pos:start="13:28" pos:end="13:53">(<argument pos:start="13:29" pos:end="13:52"><expr pos:start="13:29" pos:end="13:52"><operator pos:start="13:29" pos:end="13:29">*</operator><operator pos:start="13:30" pos:end="13:30">(</operator><specifier pos:start="13:31" pos:end="13:35">const</specifier> <name pos:start="13:37" pos:end="13:44">uint32_t</name><operator pos:start="13:45" pos:end="13:45">*</operator><operator pos:start="13:46" pos:end="13:46">)</operator><name pos:start="13:47" pos:end="13:52">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="13:56" pos:end="13:65"><expr pos:start="13:56" pos:end="13:64"><name pos:start="13:56" pos:end="13:61">buffer</name><operator pos:start="13:62" pos:end="13:63">+=</operator><literal type="number" pos:start="13:64" pos:end="13:64">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="15:13" pos:end="21:49"><expr pos:start="15:13" pos:end="21:48"><name pos:start="15:13" pos:end="15:15">crc</name> <operator pos:start="15:17" pos:end="15:17">=</operator>  <name pos:start="15:20" pos:end="15:48"><name pos:start="15:20" pos:end="15:22">ctx</name><index pos:start="15:23" pos:end="15:48">[<expr pos:start="15:24" pos:end="15:47"><literal type="number" pos:start="15:24" pos:end="15:24">3</literal><operator pos:start="15:25" pos:end="15:25">*</operator><literal type="number" pos:start="15:26" pos:end="15:30">256</literal> <operator pos:start="15:30" pos:end="15:30">+</operator> <operator pos:start="15:32" pos:end="15:32">(</operator> <name pos:start="15:34" pos:end="15:36">crc</name>     <operator pos:start="15:42" pos:end="15:42">&amp;</operator><literal type="number" pos:start="15:43" pos:end="15:46">0xFF</literal><operator pos:start="15:47" pos:end="15:47">)</operator></expr>]</index></name>

                  <operator pos:start="17:19" pos:end="17:19">^</operator><name pos:start="17:20" pos:end="17:48"><name pos:start="17:20" pos:end="17:22">ctx</name><index pos:start="17:23" pos:end="17:48">[<expr pos:start="17:24" pos:end="17:47"><literal type="number" pos:start="17:24" pos:end="17:24">2</literal><operator pos:start="17:25" pos:end="17:25">*</operator><literal type="number" pos:start="17:26" pos:end="17:28">256</literal> <operator pos:start="17:30" pos:end="17:30">+</operator> <operator pos:start="17:32" pos:end="17:32">(</operator><operator pos:start="17:33" pos:end="17:33">(</operator><name pos:start="17:34" pos:end="17:36">crc</name><operator pos:start="17:37" pos:end="17:38">&gt;&gt;</operator><literal type="number" pos:start="17:39" pos:end="17:39">8</literal> <operator pos:start="17:41" pos:end="17:41">)</operator><operator pos:start="17:42" pos:end="17:42">&amp;</operator><literal type="number" pos:start="17:43" pos:end="17:46">0xFF</literal><operator pos:start="17:47" pos:end="17:47">)</operator></expr>]</index></name>

                  <operator pos:start="19:19" pos:end="19:19">^</operator><name pos:start="19:20" pos:end="19:48"><name pos:start="19:20" pos:end="19:22">ctx</name><index pos:start="19:23" pos:end="19:48">[<expr pos:start="19:24" pos:end="19:47"><literal type="number" pos:start="19:24" pos:end="19:24">1</literal><operator pos:start="19:25" pos:end="19:25">*</operator><literal type="number" pos:start="19:26" pos:end="19:28">256</literal> <operator pos:start="19:30" pos:end="19:30">+</operator> <operator pos:start="19:32" pos:end="19:32">(</operator><operator pos:start="19:33" pos:end="19:33">(</operator><name pos:start="19:34" pos:end="19:36">crc</name><operator pos:start="19:37" pos:end="19:38">&gt;&gt;</operator><literal type="number" pos:start="19:39" pos:end="19:40">16</literal><operator pos:start="19:41" pos:end="19:41">)</operator><operator pos:start="19:42" pos:end="19:42">&amp;</operator><literal type="number" pos:start="19:43" pos:end="19:46">0xFF</literal><operator pos:start="19:47" pos:end="19:47">)</operator></expr>]</index></name>

                  <operator pos:start="21:19" pos:end="21:19">^</operator><name pos:start="21:20" pos:end="21:48"><name pos:start="21:20" pos:end="21:22">ctx</name><index pos:start="21:23" pos:end="21:48">[<expr pos:start="21:24" pos:end="21:47"><literal type="number" pos:start="21:24" pos:end="21:24">0</literal><operator pos:start="21:25" pos:end="21:25">*</operator><literal type="number" pos:start="21:26" pos:end="21:28">256</literal> <operator pos:start="21:30" pos:end="21:30">+</operator> <operator pos:start="21:32" pos:end="21:32">(</operator><operator pos:start="21:33" pos:end="21:33">(</operator><name pos:start="21:34" pos:end="21:36">crc</name><operator pos:start="21:37" pos:end="21:38">&gt;&gt;</operator><literal type="number" pos:start="21:39" pos:end="21:40">24</literal><operator pos:start="21:41" pos:end="21:41">)</operator>     <operator pos:start="21:47" pos:end="21:47">)</operator></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></while></block_content></block></if></if_stmt>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>

    <while pos:start="27:5" pos:end="29:59">while<condition pos:start="27:10" pos:end="27:21">(<expr pos:start="27:11" pos:end="27:20"><name pos:start="27:11" pos:end="27:16">buffer</name><operator pos:start="27:17" pos:end="27:17">&lt;</operator><name pos:start="27:18" pos:end="27:20">end</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:59"><block_content pos:start="29:9" pos:end="29:59">

        <expr_stmt pos:start="29:9" pos:end="29:59"><expr pos:start="29:9" pos:end="29:58"><name pos:start="29:9" pos:end="29:11">crc</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:45"><name pos:start="29:15" pos:end="29:17">ctx</name><index pos:start="29:18" pos:end="29:45">[<expr pos:start="29:19" pos:end="29:44"><operator pos:start="29:19" pos:end="29:19">(</operator><operator pos:start="29:20" pos:end="29:20">(</operator><name pos:start="29:21" pos:end="29:27">uint8_t</name><operator pos:start="29:28" pos:end="29:28">)</operator><name pos:start="29:29" pos:end="29:31">crc</name><operator pos:start="29:32" pos:end="29:32">)</operator> <operator pos:start="29:34" pos:end="29:34">^</operator> <operator pos:start="29:36" pos:end="29:36">*</operator><name pos:start="29:37" pos:end="29:42">buffer</name><operator pos:start="29:43" pos:end="29:44">++</operator></expr>]</index></name> <operator pos:start="29:47" pos:end="29:47">^</operator> <operator pos:start="29:49" pos:end="29:49">(</operator><name pos:start="29:50" pos:end="29:52">crc</name> <operator pos:start="29:54" pos:end="29:55">&gt;&gt;</operator> <literal type="number" pos:start="29:57" pos:end="29:57">8</literal><operator pos:start="29:58" pos:end="29:58">)</operator></expr>;</expr_stmt></block_content></block></while>



    <return pos:start="33:5" pos:end="33:15">return <expr pos:start="33:12" pos:end="33:14"><name pos:start="33:12" pos:end="33:14">crc</name></expr>;</return>

</block_content>}</block></function>
</unit>
