<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13887.c" pos:tabs="8"><function pos:start="1:1" pos:end="391:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vp3_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:44">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">got_frame</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:36">AVPacket</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="391:1">{<block_content pos:start="9:5" pos:end="389:14">

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name>  <init pos:start="9:25" pos:end="9:37">= <expr pos:start="9:27" pos:end="9:37"><name pos:start="9:27" pos:end="9:37"><name pos:start="9:27" pos:end="9:31">avpkt</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:37">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name>        <init pos:start="11:25" pos:end="11:37">= <expr pos:start="11:27" pos:end="11:37"><name pos:start="11:27" pos:end="11:37"><name pos:start="11:27" pos:end="11:31">avpkt</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:37">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">Vp3DecodeContext</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:23">s</name> <init pos:start="13:25" pos:end="13:42">= <expr pos:start="13:27" pos:end="13:42"><name pos:start="13:27" pos:end="13:42"><name pos:start="13:27" pos:end="13:31">avctx</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:17">GetBitContext</name></type> <name pos:start="15:19" pos:end="15:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:14"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:14">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="28:0"><if pos:start="21:5" pos:end="28:0">if <condition pos:start="21:8" pos:end="21:55">(<expr pos:start="21:9" pos:end="21:54"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:12">ret</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:49"><name pos:start="21:16" pos:end="21:29">init_get_bits8</name><argument_list pos:start="21:30" pos:end="21:49">(<argument pos:start="21:31" pos:end="21:33"><expr pos:start="21:31" pos:end="21:33"><operator pos:start="21:31" pos:end="21:31">&amp;</operator><name pos:start="21:32" pos:end="21:33">gb</name></expr></argument>, <argument pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:38">buf</name></expr></argument>, <argument pos:start="21:41" pos:end="21:48"><expr pos:start="21:41" pos:end="21:48"><name pos:start="21:41" pos:end="21:48">buf_size</name></expr></argument>)</argument_list></call><operator pos:start="21:50" pos:end="21:50">)</operator> <operator pos:start="21:52" pos:end="21:52">&lt;</operator> <literal type="number" pos:start="21:54" pos:end="21:54">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="28:0"><block_content pos:start="23:9" pos:end="28:0">

        <return pos:start="23:9" pos:end="28:0">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="27:1" pos:end="27:25">#<cpp:directive pos:start="27:2" pos:end="27:3">if</cpp:directive> <expr pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:25">CONFIG_THEORA_DECODER</name></expr></cpp:if>

    <if_stmt pos:start="29:5" pos:end="90:0"><if pos:start="29:5" pos:end="90:0">if <condition pos:start="29:8" pos:end="29:36">(<expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:17">theora</name></name> <operator pos:start="29:19" pos:end="29:20">&amp;&amp;</operator> <call pos:start="29:22" pos:end="29:35"><name pos:start="29:22" pos:end="29:30">get_bits1</name><argument_list pos:start="29:31" pos:end="29:35">(<argument pos:start="29:32" pos:end="29:34"><expr pos:start="29:32" pos:end="29:34"><operator pos:start="29:32" pos:end="29:32">&amp;</operator><name pos:start="29:33" pos:end="29:34">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:38" pos:end="90:0">{<block_content pos:start="31:9" pos:end="85:18">

        <decl_stmt pos:start="31:9" pos:end="31:36"><decl pos:start="31:9" pos:end="31:35"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:16">type</name> <init pos:start="31:18" pos:end="31:35">= <expr pos:start="31:20" pos:end="31:35"><call pos:start="31:20" pos:end="31:35"><name pos:start="31:20" pos:end="31:27">get_bits</name><argument_list pos:start="31:28" pos:end="31:35">(<argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><operator pos:start="31:29" pos:end="31:29">&amp;</operator><name pos:start="31:30" pos:end="31:31">gb</name></expr></argument>, <argument pos:start="31:34" pos:end="31:34"><expr pos:start="31:34" pos:end="31:34"><literal type="number" pos:start="31:34" pos:end="31:34">7</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:33"><expr pos:start="33:9" pos:end="33:32"><call pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:22">skip_bits_long</name><argument_list pos:start="33:23" pos:end="33:32">(<argument pos:start="33:24" pos:end="33:26"><expr pos:start="33:24" pos:end="33:26"><operator pos:start="33:24" pos:end="33:24">&amp;</operator><name pos:start="33:25" pos:end="33:26">gb</name></expr></argument>, <argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><literal type="number" pos:start="33:29" pos:end="33:29">6</literal><operator pos:start="33:30" pos:end="33:30">*</operator><literal type="number" pos:start="33:31" pos:end="33:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="33:35" pos:end="33:48">/* "theora" */</comment>



        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:57">(<expr pos:start="37:13" pos:end="37:56"><name pos:start="37:13" pos:end="37:40"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:20">avctx</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:40">active_thread_type</name></name><operator pos:start="37:41" pos:end="37:41">&amp;</operator><name pos:start="37:42" pos:end="37:56">FF_THREAD_FRAME</name></expr>)</condition> <block pos:start="37:59" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:40">

            <expr_stmt pos:start="39:13" pos:end="39:122"><expr pos:start="39:13" pos:end="39:121"><call pos:start="39:13" pos:end="39:121"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="39:121">(<argument pos:start="39:20" pos:end="39:24"><expr pos:start="39:20" pos:end="39:24"><name pos:start="39:20" pos:end="39:24">avctx</name></expr></argument>, <argument pos:start="39:27" pos:end="39:38"><expr pos:start="39:27" pos:end="39:38"><name pos:start="39:27" pos:end="39:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:41" pos:end="39:120"><expr pos:start="39:41" pos:end="39:120"><literal type="string" pos:start="39:41" pos:end="39:120">"midstream reconfiguration with multithreading is unsupported, try -threads 1\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:40">return <expr pos:start="41:20" pos:end="41:39"><name pos:start="41:20" pos:end="41:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="77:9"><if pos:start="45:9" pos:end="63:9">if <condition pos:start="45:12" pos:end="45:22">(<expr pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:16">type</name> <operator pos:start="45:18" pos:end="45:19">==</operator> <literal type="number" pos:start="45:21" pos:end="45:21">0</literal></expr>)</condition> <block pos:start="45:24" pos:end="63:9">{<block_content pos:start="47:13" pos:end="61:23">

            <expr_stmt pos:start="47:13" pos:end="47:34"><expr pos:start="47:13" pos:end="47:33"><call pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:26">vp3_decode_end</name><argument_list pos:start="47:27" pos:end="47:33">(<argument pos:start="47:28" pos:end="47:32"><expr pos:start="47:28" pos:end="47:32"><name pos:start="47:28" pos:end="47:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:51"><expr pos:start="49:13" pos:end="49:50"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:50"><name pos:start="49:19" pos:end="49:38">theora_decode_header</name><argument_list pos:start="49:39" pos:end="49:50">(<argument pos:start="49:40" pos:end="49:44"><expr pos:start="49:40" pos:end="49:44"><name pos:start="49:40" pos:end="49:44">avctx</name></expr></argument>, <argument pos:start="49:47" pos:end="49:49"><expr pos:start="49:47" pos:end="49:49"><operator pos:start="49:47" pos:end="49:47">&amp;</operator><name pos:start="49:48" pos:end="49:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="53:13" pos:end="59:45"><if pos:start="53:13" pos:end="57:13">if <condition pos:start="53:16" pos:end="53:24">(<expr pos:start="53:17" pos:end="53:23"><name pos:start="53:17" pos:end="53:19">ret</name> <operator pos:start="53:21" pos:end="53:21">&lt;</operator> <literal type="number" pos:start="53:23" pos:end="53:23">0</literal></expr>)</condition> <block pos:start="53:26" pos:end="57:13">{<block_content pos:start="55:17" pos:end="55:38">

                <expr_stmt pos:start="55:17" pos:end="55:38"><expr pos:start="55:17" pos:end="55:37"><call pos:start="55:17" pos:end="55:37"><name pos:start="55:17" pos:end="55:30">vp3_decode_end</name><argument_list pos:start="55:31" pos:end="55:37">(<argument pos:start="55:32" pos:end="55:36"><expr pos:start="55:32" pos:end="55:36"><name pos:start="55:32" pos:end="55:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="57:15" pos:end="59:45">else<block type="pseudo" pos:start="59:17" pos:end="59:45"><block_content pos:start="59:17" pos:end="59:45">

                <expr_stmt pos:start="59:17" pos:end="59:45"><expr pos:start="59:17" pos:end="59:44"><name pos:start="59:17" pos:end="59:19">ret</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <call pos:start="59:23" pos:end="59:44"><name pos:start="59:23" pos:end="59:37">vp3_decode_init</name><argument_list pos:start="59:38" pos:end="59:44">(<argument pos:start="59:39" pos:end="59:43"><expr pos:start="59:39" pos:end="59:43"><name pos:start="59:39" pos:end="59:43">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <return pos:start="61:13" pos:end="61:23">return <expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">ret</name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="63:11" pos:end="77:9">else if <condition pos:start="63:19" pos:end="63:29">(<expr pos:start="63:20" pos:end="63:28"><name pos:start="63:20" pos:end="63:23">type</name> <operator pos:start="63:25" pos:end="63:26">==</operator> <literal type="number" pos:start="63:28" pos:end="63:28">2</literal></expr>)</condition> <block pos:start="63:31" pos:end="77:9">{<block_content pos:start="65:13" pos:end="75:23">

            <expr_stmt pos:start="65:13" pos:end="65:51"><expr pos:start="65:13" pos:end="65:50"><name pos:start="65:13" pos:end="65:15">ret</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="65:50"><name pos:start="65:19" pos:end="65:38">theora_decode_tables</name><argument_list pos:start="65:39" pos:end="65:50">(<argument pos:start="65:40" pos:end="65:44"><expr pos:start="65:40" pos:end="65:44"><name pos:start="65:40" pos:end="65:44">avctx</name></expr></argument>, <argument pos:start="65:47" pos:end="65:49"><expr pos:start="65:47" pos:end="65:49"><operator pos:start="65:47" pos:end="65:47">&amp;</operator><name pos:start="65:48" pos:end="65:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="67:13" pos:end="73:45"><if pos:start="67:13" pos:end="71:13">if <condition pos:start="67:16" pos:end="67:24">(<expr pos:start="67:17" pos:end="67:23"><name pos:start="67:17" pos:end="67:19">ret</name> <operator pos:start="67:21" pos:end="67:21">&lt;</operator> <literal type="number" pos:start="67:23" pos:end="67:23">0</literal></expr>)</condition> <block pos:start="67:26" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:38">

                <expr_stmt pos:start="69:17" pos:end="69:38"><expr pos:start="69:17" pos:end="69:37"><call pos:start="69:17" pos:end="69:37"><name pos:start="69:17" pos:end="69:30">vp3_decode_end</name><argument_list pos:start="69:31" pos:end="69:37">(<argument pos:start="69:32" pos:end="69:36"><expr pos:start="69:32" pos:end="69:36"><name pos:start="69:32" pos:end="69:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="71:15" pos:end="73:45">else<block type="pseudo" pos:start="73:17" pos:end="73:45"><block_content pos:start="73:17" pos:end="73:45">

                <expr_stmt pos:start="73:17" pos:end="73:45"><expr pos:start="73:17" pos:end="73:44"><name pos:start="73:17" pos:end="73:19">ret</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <call pos:start="73:23" pos:end="73:44"><name pos:start="73:23" pos:end="73:37">vp3_decode_init</name><argument_list pos:start="73:38" pos:end="73:44">(<argument pos:start="73:39" pos:end="73:43"><expr pos:start="73:39" pos:end="73:43"><name pos:start="73:39" pos:end="73:43">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <return pos:start="75:13" pos:end="75:23">return <expr pos:start="75:20" pos:end="75:22"><name pos:start="75:20" pos:end="75:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="83:68"><expr pos:start="81:9" pos:end="83:67"><call pos:start="81:9" pos:end="83:67"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="83:67">(<argument pos:start="81:16" pos:end="81:20"><expr pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:20">avctx</name></expr></argument>, <argument pos:start="81:23" pos:end="81:34"><expr pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="83:16" pos:end="83:66"><expr pos:start="83:16" pos:end="83:66"><literal type="string" pos:start="83:16" pos:end="83:66">"Header packet passed to frame decoder, skipping\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:18">return <expr pos:start="85:16" pos:end="85:17"><operator pos:start="85:16" pos:end="85:16">-</operator><literal type="number" pos:start="85:17" pos:end="85:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="93:5" pos:end="93:34"><expr pos:start="93:5" pos:end="93:33"><name pos:start="93:5" pos:end="93:15"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:15">keyframe</name></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <operator pos:start="93:19" pos:end="93:19">!</operator><call pos:start="93:20" pos:end="93:33"><name pos:start="93:20" pos:end="93:28">get_bits1</name><argument_list pos:start="93:29" pos:end="93:33">(<argument pos:start="93:30" pos:end="93:32"><expr pos:start="93:30" pos:end="93:32"><operator pos:start="93:30" pos:end="93:30">&amp;</operator><name pos:start="93:31" pos:end="93:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="101:5"><if pos:start="95:5" pos:end="101:5">if <condition pos:start="95:8" pos:end="95:26">(<expr pos:start="95:9" pos:end="95:25"><operator pos:start="95:9" pos:end="95:9">!</operator><name pos:start="95:10" pos:end="95:25"><name pos:start="95:10" pos:end="95:10">s</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:25">all_fragments</name></name></expr>)</condition> <block pos:start="95:28" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:18">

        <expr_stmt pos:start="97:9" pos:end="97:81"><expr pos:start="97:9" pos:end="97:80"><call pos:start="97:9" pos:end="97:80"><name pos:start="97:9" pos:end="97:14">av_log</name><argument_list pos:start="97:15" pos:end="97:80">(<argument pos:start="97:16" pos:end="97:20"><expr pos:start="97:16" pos:end="97:20"><name pos:start="97:16" pos:end="97:20">avctx</name></expr></argument>, <argument pos:start="97:23" pos:end="97:34"><expr pos:start="97:23" pos:end="97:34"><name pos:start="97:23" pos:end="97:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:37" pos:end="97:79"><expr pos:start="97:37" pos:end="97:79"><literal type="string" pos:start="97:37" pos:end="97:79">"Data packet without prior valid headers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="99:9" pos:end="99:18">return <expr pos:start="99:16" pos:end="99:17"><operator pos:start="99:16" pos:end="99:16">-</operator><literal type="number" pos:start="99:17" pos:end="99:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="103:5" pos:end="105:26"><if pos:start="103:5" pos:end="105:26">if <condition pos:start="103:8" pos:end="103:19">(<expr pos:start="103:9" pos:end="103:18"><operator pos:start="103:9" pos:end="103:9">!</operator><name pos:start="103:10" pos:end="103:18"><name pos:start="103:10" pos:end="103:10">s</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:18">theora</name></name></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:26"><block_content pos:start="105:9" pos:end="105:26">

        <expr_stmt pos:start="105:9" pos:end="105:26"><expr pos:start="105:9" pos:end="105:25"><call pos:start="105:9" pos:end="105:25"><name pos:start="105:9" pos:end="105:17">skip_bits</name><argument_list pos:start="105:18" pos:end="105:25">(<argument pos:start="105:19" pos:end="105:21"><expr pos:start="105:19" pos:end="105:21"><operator pos:start="105:19" pos:end="105:19">&amp;</operator><name pos:start="105:20" pos:end="105:21">gb</name></expr></argument>, <argument pos:start="105:24" pos:end="105:24"><expr pos:start="105:24" pos:end="105:24"><literal type="number" pos:start="105:24" pos:end="105:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="107:5" pos:end="109:35">for <control pos:start="107:9" pos:end="107:27">(<init pos:start="107:10" pos:end="107:15"><expr pos:start="107:10" pos:end="107:14"><name pos:start="107:10" pos:end="107:10">i</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <literal type="number" pos:start="107:14" pos:end="107:14">0</literal></expr>;</init> <condition pos:start="107:17" pos:end="107:22"><expr pos:start="107:17" pos:end="107:21"><name pos:start="107:17" pos:end="107:17">i</name> <operator pos:start="107:19" pos:end="107:19">&lt;</operator> <literal type="number" pos:start="107:21" pos:end="107:21">3</literal></expr>;</condition> <incr pos:start="107:24" pos:end="107:26"><expr pos:start="107:24" pos:end="107:26"><name pos:start="107:24" pos:end="107:24">i</name><operator pos:start="107:25" pos:end="107:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="109:9" pos:end="109:35"><block_content pos:start="109:9" pos:end="109:35">

        <expr_stmt pos:start="109:9" pos:end="109:35"><expr pos:start="109:9" pos:end="109:34"><name pos:start="109:9" pos:end="109:22"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:19">last_qps</name><index pos:start="109:20" pos:end="109:22">[<expr pos:start="109:21" pos:end="109:21"><name pos:start="109:21" pos:end="109:21">i</name></expr>]</index></name> <operator pos:start="109:24" pos:end="109:24">=</operator> <name pos:start="109:26" pos:end="109:34"><name pos:start="109:26" pos:end="109:26">s</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:31">qps</name><index pos:start="109:32" pos:end="109:34">[<expr pos:start="109:33" pos:end="109:33"><name pos:start="109:33" pos:end="109:33">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="113:5" pos:end="113:16"><expr pos:start="113:5" pos:end="113:15"><name pos:start="113:5" pos:end="113:11"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:11">nqps</name></name> <operator pos:start="113:13" pos:end="113:13">=</operator> <literal type="number" pos:start="113:15" pos:end="113:15">0</literal></expr>;</expr_stmt>

    <do pos:start="115:5" pos:end="119:69">do <block pos:start="115:8" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:45">

        <expr_stmt pos:start="117:9" pos:end="117:45"><expr pos:start="117:9" pos:end="117:44"><name pos:start="117:9" pos:end="117:25"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:14">qps</name><index pos:start="117:15" pos:end="117:25">[<expr pos:start="117:16" pos:end="117:24"><name pos:start="117:16" pos:end="117:22"><name pos:start="117:16" pos:end="117:16">s</name><operator pos:start="117:17" pos:end="117:18">-&gt;</operator><name pos:start="117:19" pos:end="117:22">nqps</name></name><operator pos:start="117:23" pos:end="117:24">++</operator></expr>]</index></name> <operator pos:start="117:27" pos:end="117:27">=</operator> <call pos:start="117:29" pos:end="117:44"><name pos:start="117:29" pos:end="117:36">get_bits</name><argument_list pos:start="117:37" pos:end="117:44">(<argument pos:start="117:38" pos:end="117:40"><expr pos:start="117:38" pos:end="117:40"><operator pos:start="117:38" pos:end="117:38">&amp;</operator><name pos:start="117:39" pos:end="117:40">gb</name></expr></argument>, <argument pos:start="117:43" pos:end="117:43"><expr pos:start="117:43" pos:end="117:43"><literal type="number" pos:start="117:43" pos:end="117:43">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="119:13" pos:end="119:68">(<expr pos:start="119:14" pos:end="119:67"><name pos:start="119:14" pos:end="119:22"><name pos:start="119:14" pos:end="119:14">s</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:22">theora</name></name> <operator pos:start="119:24" pos:end="119:25">&gt;=</operator> <literal type="number" pos:start="119:27" pos:end="119:34">0x030200</literal> <operator pos:start="119:36" pos:end="119:37">&amp;&amp;</operator> <name pos:start="119:39" pos:end="119:45"><name pos:start="119:39" pos:end="119:39">s</name><operator pos:start="119:40" pos:end="119:41">-&gt;</operator><name pos:start="119:42" pos:end="119:45">nqps</name></name> <operator pos:start="119:47" pos:end="119:47">&lt;</operator> <literal type="number" pos:start="119:49" pos:end="119:49">3</literal> <operator pos:start="119:51" pos:end="119:52">&amp;&amp;</operator> <call pos:start="119:54" pos:end="119:67"><name pos:start="119:54" pos:end="119:62">get_bits1</name><argument_list pos:start="119:63" pos:end="119:67">(<argument pos:start="119:64" pos:end="119:66"><expr pos:start="119:64" pos:end="119:66"><operator pos:start="119:64" pos:end="119:64">&amp;</operator><name pos:start="119:65" pos:end="119:66">gb</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>

    <for pos:start="121:5" pos:end="123:23">for <control pos:start="121:9" pos:end="121:33">(<init pos:start="121:10" pos:end="121:21"><expr pos:start="121:10" pos:end="121:20"><name pos:start="121:10" pos:end="121:10">i</name> <operator pos:start="121:12" pos:end="121:12">=</operator> <name pos:start="121:14" pos:end="121:20"><name pos:start="121:14" pos:end="121:14">s</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:20">nqps</name></name></expr>;</init> <condition pos:start="121:23" pos:end="121:28"><expr pos:start="121:23" pos:end="121:27"><name pos:start="121:23" pos:end="121:23">i</name> <operator pos:start="121:25" pos:end="121:25">&lt;</operator> <literal type="number" pos:start="121:27" pos:end="121:27">3</literal></expr>;</condition> <incr pos:start="121:30" pos:end="121:32"><expr pos:start="121:30" pos:end="121:32"><name pos:start="121:30" pos:end="121:30">i</name><operator pos:start="121:31" pos:end="121:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="123:9" pos:end="123:23"><block_content pos:start="123:9" pos:end="123:23">

        <expr_stmt pos:start="123:9" pos:end="123:23"><expr pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:17"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:14">qps</name><index pos:start="123:15" pos:end="123:17">[<expr pos:start="123:16" pos:end="123:16"><name pos:start="123:16" pos:end="123:16">i</name></expr>]</index></name> <operator pos:start="123:19" pos:end="123:19">=</operator> <operator pos:start="123:21" pos:end="123:21">-</operator><literal type="number" pos:start="123:22" pos:end="123:22">1</literal></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="127:5" pos:end="131:77"><if pos:start="127:5" pos:end="131:77">if <condition pos:start="127:8" pos:end="127:45">(<expr pos:start="127:9" pos:end="127:44"><name pos:start="127:9" pos:end="127:23"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:16">avctx</name><operator pos:start="127:17" pos:end="127:18">-&gt;</operator><name pos:start="127:19" pos:end="127:23">debug</name></name> <operator pos:start="127:25" pos:end="127:25">&amp;</operator> <name pos:start="127:27" pos:end="127:44">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="131:77"><block_content pos:start="129:9" pos:end="131:77">

        <expr_stmt pos:start="129:9" pos:end="131:77"><expr pos:start="129:9" pos:end="131:76"><call pos:start="129:9" pos:end="131:76"><name pos:start="129:9" pos:end="129:14">av_log</name><argument_list pos:start="129:15" pos:end="131:76">(<argument pos:start="129:16" pos:end="129:23"><expr pos:start="129:16" pos:end="129:23"><name pos:start="129:16" pos:end="129:23"><name pos:start="129:16" pos:end="129:16">s</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:23">avctx</name></name></expr></argument>, <argument pos:start="129:26" pos:end="129:36"><expr pos:start="129:26" pos:end="129:36"><name pos:start="129:26" pos:end="129:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="129:39" pos:end="129:72"><expr pos:start="129:39" pos:end="129:72"><literal type="string" pos:start="129:39" pos:end="129:72">" VP3 %sframe #%d: Q index = %d\n"</literal></expr></argument>,

               <argument pos:start="131:16" pos:end="131:39"><expr pos:start="131:16" pos:end="131:39"><ternary pos:start="131:16" pos:end="131:39"><condition pos:start="131:16" pos:end="131:28"><expr pos:start="131:16" pos:end="131:26"><name pos:start="131:16" pos:end="131:26"><name pos:start="131:16" pos:end="131:16">s</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:26">keyframe</name></name></expr> ?</condition><then pos:start="131:30" pos:end="131:34"> <expr pos:start="131:30" pos:end="131:34"><literal type="string" pos:start="131:30" pos:end="131:34">"key"</literal></expr> </then><else pos:start="131:36" pos:end="131:39">: <expr pos:start="131:38" pos:end="131:39"><literal type="string" pos:start="131:38" pos:end="131:39">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="131:42" pos:end="131:64"><expr pos:start="131:42" pos:end="131:64"><name pos:start="131:42" pos:end="131:60"><name pos:start="131:42" pos:end="131:46">avctx</name><operator pos:start="131:47" pos:end="131:48">-&gt;</operator><name pos:start="131:49" pos:end="131:60">frame_number</name></name> <operator pos:start="131:62" pos:end="131:62">+</operator> <literal type="number" pos:start="131:64" pos:end="131:64">1</literal></expr></argument>, <argument pos:start="131:67" pos:end="131:75"><expr pos:start="131:67" pos:end="131:75"><name pos:start="131:67" pos:end="131:75"><name pos:start="131:67" pos:end="131:67">s</name><operator pos:start="131:68" pos:end="131:69">-&gt;</operator><name pos:start="131:70" pos:end="131:72">qps</name><index pos:start="131:73" pos:end="131:75">[<expr pos:start="131:74" pos:end="131:74"><literal type="number" pos:start="131:74" pos:end="131:74">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="139:86"><expr pos:start="135:5" pos:end="139:85"><name pos:start="135:5" pos:end="135:23"><name pos:start="135:5" pos:end="135:5">s</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:23">skip_loop_filter</name></name> <operator pos:start="135:25" pos:end="135:25">=</operator> <operator pos:start="135:27" pos:end="135:27">!</operator><name pos:start="135:28" pos:end="135:60"><name pos:start="135:28" pos:end="135:28">s</name><operator pos:start="135:29" pos:end="135:30">-&gt;</operator><name pos:start="135:31" pos:end="135:49">filter_limit_values</name><index pos:start="135:50" pos:end="135:60">[<expr pos:start="135:51" pos:end="135:59"><name pos:start="135:51" pos:end="135:59"><name pos:start="135:51" pos:end="135:51">s</name><operator pos:start="135:52" pos:end="135:53">-&gt;</operator><name pos:start="135:54" pos:end="135:56">qps</name><index pos:start="135:57" pos:end="135:59">[<expr pos:start="135:58" pos:end="135:58"><literal type="number" pos:start="135:58" pos:end="135:58">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="135:62" pos:end="135:63">||</operator>

                          <name pos:start="137:27" pos:end="137:49"><name pos:start="137:27" pos:end="137:31">avctx</name><operator pos:start="137:32" pos:end="137:33">-&gt;</operator><name pos:start="137:34" pos:end="137:49">skip_loop_filter</name></name> <operator pos:start="137:51" pos:end="137:52">&gt;=</operator> <operator pos:start="137:54" pos:end="137:54">(</operator><ternary pos:start="137:55" pos:end="139:84"><condition pos:start="137:55" pos:end="137:67"><expr pos:start="137:55" pos:end="137:65"><name pos:start="137:55" pos:end="137:65"><name pos:start="137:55" pos:end="137:55">s</name><operator pos:start="137:56" pos:end="137:57">-&gt;</operator><name pos:start="137:58" pos:end="137:65">keyframe</name></name></expr> ?</condition><then pos:start="137:69" pos:end="137:81"> <expr pos:start="137:69" pos:end="137:81"><name pos:start="137:69" pos:end="137:81">AVDISCARD_ALL</name></expr>

                                                                  </then><else pos:start="139:67" pos:end="139:84">: <expr pos:start="139:69" pos:end="139:84"><name pos:start="139:69" pos:end="139:84">AVDISCARD_NONKEY</name></expr></else></ternary><operator pos:start="139:85" pos:end="139:85">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="143:5" pos:end="145:28"><if pos:start="143:5" pos:end="145:28">if <condition pos:start="143:8" pos:end="143:36">(<expr pos:start="143:9" pos:end="143:35"><name pos:start="143:9" pos:end="143:17"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:14">qps</name><index pos:start="143:15" pos:end="143:17">[<expr pos:start="143:16" pos:end="143:16"><literal type="number" pos:start="143:16" pos:end="143:16">0</literal></expr>]</index></name> <operator pos:start="143:19" pos:end="143:20">!=</operator> <name pos:start="143:22" pos:end="143:35"><name pos:start="143:22" pos:end="143:22">s</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:32">last_qps</name><index pos:start="143:33" pos:end="143:35">[<expr pos:start="143:34" pos:end="143:34"><literal type="number" pos:start="143:34" pos:end="143:34">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:28"><block_content pos:start="145:9" pos:end="145:28">

        <expr_stmt pos:start="145:9" pos:end="145:28"><expr pos:start="145:9" pos:end="145:27"><call pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:24">init_loop_filter</name><argument_list pos:start="145:25" pos:end="145:27">(<argument pos:start="145:26" pos:end="145:26"><expr pos:start="145:26" pos:end="145:26"><name pos:start="145:26" pos:end="145:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="149:5" pos:end="157:35">for <control pos:start="149:9" pos:end="149:33">(<init pos:start="149:10" pos:end="149:15"><expr pos:start="149:10" pos:end="149:14"><name pos:start="149:10" pos:end="149:10">i</name> <operator pos:start="149:12" pos:end="149:12">=</operator> <literal type="number" pos:start="149:14" pos:end="149:14">0</literal></expr>;</init> <condition pos:start="149:17" pos:end="149:28"><expr pos:start="149:17" pos:end="149:27"><name pos:start="149:17" pos:end="149:17">i</name> <operator pos:start="149:19" pos:end="149:19">&lt;</operator> <name pos:start="149:21" pos:end="149:27"><name pos:start="149:21" pos:end="149:21">s</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:27">nqps</name></name></expr>;</condition> <incr pos:start="149:30" pos:end="149:32"><expr pos:start="149:30" pos:end="149:32"><name pos:start="149:30" pos:end="149:30">i</name><operator pos:start="149:31" pos:end="149:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="155:9" pos:end="157:35"><block_content pos:start="155:9" pos:end="157:35">

        <comment type="line" pos:start="151:9" pos:end="151:68">// reinit all dequantizers if the first one changed, because</comment>

        <comment type="line" pos:start="153:9" pos:end="153:70">// the DC of the first quantizer must be used for all matrices</comment>

        <if_stmt pos:start="155:9" pos:end="157:35"><if pos:start="155:9" pos:end="157:35">if <condition pos:start="155:12" pos:end="155:71">(<expr pos:start="155:13" pos:end="155:70"><name pos:start="155:13" pos:end="155:21"><name pos:start="155:13" pos:end="155:13">s</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:18">qps</name><index pos:start="155:19" pos:end="155:21">[<expr pos:start="155:20" pos:end="155:20"><name pos:start="155:20" pos:end="155:20">i</name></expr>]</index></name> <operator pos:start="155:23" pos:end="155:24">!=</operator> <name pos:start="155:26" pos:end="155:39"><name pos:start="155:26" pos:end="155:26">s</name><operator pos:start="155:27" pos:end="155:28">-&gt;</operator><name pos:start="155:29" pos:end="155:36">last_qps</name><index pos:start="155:37" pos:end="155:39">[<expr pos:start="155:38" pos:end="155:38"><name pos:start="155:38" pos:end="155:38">i</name></expr>]</index></name> <operator pos:start="155:41" pos:end="155:42">||</operator> <name pos:start="155:44" pos:end="155:52"><name pos:start="155:44" pos:end="155:44">s</name><operator pos:start="155:45" pos:end="155:46">-&gt;</operator><name pos:start="155:47" pos:end="155:49">qps</name><index pos:start="155:50" pos:end="155:52">[<expr pos:start="155:51" pos:end="155:51"><literal type="number" pos:start="155:51" pos:end="155:51">0</literal></expr>]</index></name> <operator pos:start="155:54" pos:end="155:55">!=</operator> <name pos:start="155:57" pos:end="155:70"><name pos:start="155:57" pos:end="155:57">s</name><operator pos:start="155:58" pos:end="155:59">-&gt;</operator><name pos:start="155:60" pos:end="155:67">last_qps</name><index pos:start="155:68" pos:end="155:70">[<expr pos:start="155:69" pos:end="155:69"><literal type="number" pos:start="155:69" pos:end="155:69">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:35"><block_content pos:start="157:13" pos:end="157:35">

            <expr_stmt pos:start="157:13" pos:end="157:35"><expr pos:start="157:13" pos:end="157:34"><call pos:start="157:13" pos:end="157:34"><name pos:start="157:13" pos:end="157:28">init_dequantizer</name><argument_list pos:start="157:29" pos:end="157:34">(<argument pos:start="157:30" pos:end="157:30"><expr pos:start="157:30" pos:end="157:30"><name pos:start="157:30" pos:end="157:30">s</name></expr></argument>, <argument pos:start="157:33" pos:end="157:33"><expr pos:start="157:33" pos:end="157:33"><name pos:start="157:33" pos:end="157:33">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <if_stmt pos:start="161:5" pos:end="163:24"><if pos:start="161:5" pos:end="163:24">if <condition pos:start="161:8" pos:end="161:62">(<expr pos:start="161:9" pos:end="161:61"><name pos:start="161:9" pos:end="161:25"><name pos:start="161:9" pos:end="161:13">avctx</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:25">skip_frame</name></name> <operator pos:start="161:27" pos:end="161:28">&gt;=</operator> <name pos:start="161:30" pos:end="161:45">AVDISCARD_NONKEY</name> <operator pos:start="161:47" pos:end="161:48">&amp;&amp;</operator> <operator pos:start="161:50" pos:end="161:50">!</operator><name pos:start="161:51" pos:end="161:61"><name pos:start="161:51" pos:end="161:51">s</name><operator pos:start="161:52" pos:end="161:53">-&gt;</operator><name pos:start="161:54" pos:end="161:61">keyframe</name></name></expr>)</condition><block type="pseudo" pos:start="163:9" pos:end="163:24"><block_content pos:start="163:9" pos:end="163:24">

        <return pos:start="163:9" pos:end="163:24">return <expr pos:start="163:16" pos:end="163:23"><name pos:start="163:16" pos:end="163:23">buf_size</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="167:5" pos:end="169:68"><expr pos:start="167:5" pos:end="169:67"><name pos:start="167:5" pos:end="167:33"><name pos:start="167:5" pos:end="167:5">s</name><operator pos:start="167:6" pos:end="167:7">-&gt;</operator><name pos:start="167:8" pos:end="167:20">current_frame</name><operator pos:start="167:21" pos:end="167:21">.</operator><name pos:start="167:22" pos:end="167:22">f</name><operator pos:start="167:23" pos:end="167:24">-&gt;</operator><name pos:start="167:25" pos:end="167:33">pict_type</name></name> <operator pos:start="167:35" pos:end="167:35">=</operator> <ternary pos:start="167:37" pos:end="169:67"><condition pos:start="167:37" pos:end="167:49"><expr pos:start="167:37" pos:end="167:47"><name pos:start="167:37" pos:end="167:47"><name pos:start="167:37" pos:end="167:37">s</name><operator pos:start="167:38" pos:end="167:39">-&gt;</operator><name pos:start="167:40" pos:end="167:47">keyframe</name></name></expr> ?</condition><then pos:start="167:51" pos:end="167:67"> <expr pos:start="167:51" pos:end="167:67"><name pos:start="167:51" pos:end="167:67">AV_PICTURE_TYPE_I</name></expr>

                                                </then><else pos:start="169:49" pos:end="169:67">: <expr pos:start="169:51" pos:end="169:67"><name pos:start="169:51" pos:end="169:67">AV_PICTURE_TYPE_P</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:48"><expr pos:start="171:5" pos:end="171:47"><name pos:start="171:5" pos:end="171:33"><name pos:start="171:5" pos:end="171:5">s</name><operator pos:start="171:6" pos:end="171:7">-&gt;</operator><name pos:start="171:8" pos:end="171:20">current_frame</name><operator pos:start="171:21" pos:end="171:21">.</operator><name pos:start="171:22" pos:end="171:22">f</name><operator pos:start="171:23" pos:end="171:24">-&gt;</operator><name pos:start="171:25" pos:end="171:33">key_frame</name></name> <operator pos:start="171:35" pos:end="171:35">=</operator> <name pos:start="171:37" pos:end="171:47"><name pos:start="171:37" pos:end="171:37">s</name><operator pos:start="171:38" pos:end="171:39">-&gt;</operator><name pos:start="171:40" pos:end="171:47">keyframe</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="173:5" pos:end="175:19"><if pos:start="173:5" pos:end="175:19">if <condition pos:start="173:8" pos:end="173:83">(<expr pos:start="173:9" pos:end="173:82"><call pos:start="173:9" pos:end="173:78"><name pos:start="173:9" pos:end="173:28">ff_thread_get_buffer</name><argument_list pos:start="173:29" pos:end="173:78">(<argument pos:start="173:30" pos:end="173:34"><expr pos:start="173:30" pos:end="173:34"><name pos:start="173:30" pos:end="173:34">avctx</name></expr></argument>, <argument pos:start="173:37" pos:end="173:53"><expr pos:start="173:37" pos:end="173:53"><operator pos:start="173:37" pos:end="173:37">&amp;</operator><name pos:start="173:38" pos:end="173:53"><name pos:start="173:38" pos:end="173:38">s</name><operator pos:start="173:39" pos:end="173:40">-&gt;</operator><name pos:start="173:41" pos:end="173:53">current_frame</name></name></expr></argument>, <argument pos:start="173:56" pos:end="173:77"><expr pos:start="173:56" pos:end="173:77"><name pos:start="173:56" pos:end="173:77">AV_GET_BUFFER_FLAG_REF</name></expr></argument>)</argument_list></call> <operator pos:start="173:80" pos:end="173:80">&lt;</operator> <literal type="number" pos:start="173:82" pos:end="173:82">0</literal></expr>)</condition><block type="pseudo" pos:start="175:9" pos:end="175:19"><block_content pos:start="175:9" pos:end="175:19">

        <goto pos:start="175:9" pos:end="175:19">goto <name pos:start="175:14" pos:end="175:18">error</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="179:5" pos:end="181:83"><if pos:start="179:5" pos:end="181:83">if <condition pos:start="179:8" pos:end="179:28">(<expr pos:start="179:9" pos:end="179:27"><operator pos:start="179:9" pos:end="179:9">!</operator><name pos:start="179:10" pos:end="179:27"><name pos:start="179:10" pos:end="179:10">s</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:27">edge_emu_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="181:9" pos:end="181:83"><block_content pos:start="181:9" pos:end="181:83">

        <expr_stmt pos:start="181:9" pos:end="181:83"><expr pos:start="181:9" pos:end="181:82"><name pos:start="181:9" pos:end="181:26"><name pos:start="181:9" pos:end="181:9">s</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:26">edge_emu_buffer</name></name> <operator pos:start="181:28" pos:end="181:28">=</operator> <call pos:start="181:30" pos:end="181:82"><name pos:start="181:30" pos:end="181:38">av_malloc</name><argument_list pos:start="181:39" pos:end="181:82">(<argument pos:start="181:40" pos:end="181:81"><expr pos:start="181:40" pos:end="181:81"><literal type="number" pos:start="181:40" pos:end="181:40">9</literal> <operator pos:start="181:42" pos:end="181:42">*</operator> <call pos:start="181:44" pos:end="181:81"><name pos:start="181:44" pos:end="181:48">FFABS</name><argument_list pos:start="181:49" pos:end="181:81">(<argument pos:start="181:50" pos:end="181:80"><expr pos:start="181:50" pos:end="181:80"><name pos:start="181:50" pos:end="181:80"><name pos:start="181:50" pos:end="181:50">s</name><operator pos:start="181:51" pos:end="181:52">-&gt;</operator><name pos:start="181:53" pos:end="181:65">current_frame</name><operator pos:start="181:66" pos:end="181:66">.</operator><name pos:start="181:67" pos:end="181:67">f</name><operator pos:start="181:68" pos:end="181:69">-&gt;</operator><name pos:start="181:70" pos:end="181:77">linesize</name><index pos:start="181:78" pos:end="181:80">[<expr pos:start="181:79" pos:end="181:79"><literal type="number" pos:start="181:79" pos:end="181:79">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="185:5" pos:end="249:5"><if pos:start="185:5" pos:end="219:5">if <condition pos:start="185:8" pos:end="185:20">(<expr pos:start="185:9" pos:end="185:19"><name pos:start="185:9" pos:end="185:19"><name pos:start="185:9" pos:end="185:9">s</name><operator pos:start="185:10" pos:end="185:11">-&gt;</operator><name pos:start="185:12" pos:end="185:19">keyframe</name></name></expr>)</condition> <block pos:start="185:22" pos:end="219:5">{<block_content pos:start="187:9" pos:end="217:9">

        <if_stmt pos:start="187:9" pos:end="205:9"><if pos:start="187:9" pos:end="205:9">if <condition pos:start="187:12" pos:end="187:23">(<expr pos:start="187:13" pos:end="187:22"><operator pos:start="187:13" pos:end="187:13">!</operator><name pos:start="187:14" pos:end="187:22"><name pos:start="187:14" pos:end="187:14">s</name><operator pos:start="187:15" pos:end="187:16">-&gt;</operator><name pos:start="187:17" pos:end="187:22">theora</name></name></expr>)</condition> <block pos:start="187:25" pos:end="205:9">{<block_content pos:start="189:13" pos:end="203:13">

            <expr_stmt pos:start="189:13" pos:end="189:30"><expr pos:start="189:13" pos:end="189:29"><call pos:start="189:13" pos:end="189:29"><name pos:start="189:13" pos:end="189:21">skip_bits</name><argument_list pos:start="189:22" pos:end="189:29">(<argument pos:start="189:23" pos:end="189:25"><expr pos:start="189:23" pos:end="189:25"><operator pos:start="189:23" pos:end="189:23">&amp;</operator><name pos:start="189:24" pos:end="189:25">gb</name></expr></argument>, <argument pos:start="189:28" pos:end="189:28"><expr pos:start="189:28" pos:end="189:28"><literal type="number" pos:start="189:28" pos:end="189:28">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="189:32" pos:end="189:47">/* width code */</comment>

            <expr_stmt pos:start="191:13" pos:end="191:30"><expr pos:start="191:13" pos:end="191:29"><call pos:start="191:13" pos:end="191:29"><name pos:start="191:13" pos:end="191:21">skip_bits</name><argument_list pos:start="191:22" pos:end="191:29">(<argument pos:start="191:23" pos:end="191:25"><expr pos:start="191:23" pos:end="191:25"><operator pos:start="191:23" pos:end="191:23">&amp;</operator><name pos:start="191:24" pos:end="191:25">gb</name></expr></argument>, <argument pos:start="191:28" pos:end="191:28"><expr pos:start="191:28" pos:end="191:28"><literal type="number" pos:start="191:28" pos:end="191:28">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="191:32" pos:end="191:48">/* height code */</comment>

            <if_stmt pos:start="193:13" pos:end="203:13"><if pos:start="193:13" pos:end="203:13">if <condition pos:start="193:16" pos:end="193:27">(<expr pos:start="193:17" pos:end="193:26"><name pos:start="193:17" pos:end="193:26"><name pos:start="193:17" pos:end="193:17">s</name><operator pos:start="193:18" pos:end="193:19">-&gt;</operator><name pos:start="193:20" pos:end="193:26">version</name></name></expr>)</condition> <block pos:start="193:29" pos:end="203:13">{<block_content pos:start="195:17" pos:end="201:59">

                <expr_stmt pos:start="195:17" pos:end="195:46"><expr pos:start="195:17" pos:end="195:45"><name pos:start="195:17" pos:end="195:26"><name pos:start="195:17" pos:end="195:17">s</name><operator pos:start="195:18" pos:end="195:19">-&gt;</operator><name pos:start="195:20" pos:end="195:26">version</name></name> <operator pos:start="195:28" pos:end="195:28">=</operator> <call pos:start="195:30" pos:end="195:45"><name pos:start="195:30" pos:end="195:37">get_bits</name><argument_list pos:start="195:38" pos:end="195:45">(<argument pos:start="195:39" pos:end="195:41"><expr pos:start="195:39" pos:end="195:41"><operator pos:start="195:39" pos:end="195:39">&amp;</operator><name pos:start="195:40" pos:end="195:41">gb</name></expr></argument>, <argument pos:start="195:44" pos:end="195:44"><expr pos:start="195:44" pos:end="195:44"><literal type="number" pos:start="195:44" pos:end="195:44">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="197:17" pos:end="201:59"><if pos:start="197:17" pos:end="201:59">if <condition pos:start="197:20" pos:end="197:45">(<expr pos:start="197:21" pos:end="197:44"><name pos:start="197:21" pos:end="197:39"><name pos:start="197:21" pos:end="197:25">avctx</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:39">frame_number</name></name> <operator pos:start="197:41" pos:end="197:42">==</operator> <literal type="number" pos:start="197:44" pos:end="197:44">0</literal></expr>)</condition><block type="pseudo" pos:start="199:21" pos:end="201:59"><block_content pos:start="199:21" pos:end="201:59">

                    <expr_stmt pos:start="199:21" pos:end="201:59"><expr pos:start="199:21" pos:end="201:58"><call pos:start="199:21" pos:end="201:58"><name pos:start="199:21" pos:end="199:26">av_log</name><argument_list pos:start="199:27" pos:end="201:58">(<argument pos:start="199:28" pos:end="199:35"><expr pos:start="199:28" pos:end="199:35"><name pos:start="199:28" pos:end="199:35"><name pos:start="199:28" pos:end="199:28">s</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:35">avctx</name></name></expr></argument>, <argument pos:start="199:38" pos:end="199:49"><expr pos:start="199:38" pos:end="199:49"><name pos:start="199:38" pos:end="199:49">AV_LOG_DEBUG</name></expr></argument>,

                           <argument pos:start="201:28" pos:end="201:45"><expr pos:start="201:28" pos:end="201:45"><literal type="string" pos:start="201:28" pos:end="201:45">"VP version: %d\n"</literal></expr></argument>, <argument pos:start="201:48" pos:end="201:57"><expr pos:start="201:48" pos:end="201:57"><name pos:start="201:48" pos:end="201:57"><name pos:start="201:48" pos:end="201:48">s</name><operator pos:start="201:49" pos:end="201:50">-&gt;</operator><name pos:start="201:51" pos:end="201:57">version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="207:9" pos:end="217:9"><if pos:start="207:9" pos:end="217:9">if <condition pos:start="207:12" pos:end="207:36">(<expr pos:start="207:13" pos:end="207:35"><name pos:start="207:13" pos:end="207:22"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:22">version</name></name> <operator pos:start="207:24" pos:end="207:25">||</operator> <name pos:start="207:27" pos:end="207:35"><name pos:start="207:27" pos:end="207:27">s</name><operator pos:start="207:28" pos:end="207:29">-&gt;</operator><name pos:start="207:30" pos:end="207:35">theora</name></name></expr>)</condition> <block pos:start="207:38" pos:end="217:9">{<block_content pos:start="209:13" pos:end="215:30">

            <if_stmt pos:start="209:13" pos:end="213:72"><if pos:start="209:13" pos:end="213:72">if <condition pos:start="209:16" pos:end="209:31">(<expr pos:start="209:17" pos:end="209:30"><call pos:start="209:17" pos:end="209:30"><name pos:start="209:17" pos:end="209:25">get_bits1</name><argument_list pos:start="209:26" pos:end="209:30">(<argument pos:start="209:27" pos:end="209:29"><expr pos:start="209:27" pos:end="209:29"><operator pos:start="209:27" pos:end="209:27">&amp;</operator><name pos:start="209:28" pos:end="209:29">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="211:17" pos:end="213:72"><block_content pos:start="211:17" pos:end="213:72">

                <expr_stmt pos:start="211:17" pos:end="213:72"><expr pos:start="211:17" pos:end="213:71"><call pos:start="211:17" pos:end="213:71"><name pos:start="211:17" pos:end="211:22">av_log</name><argument_list pos:start="211:23" pos:end="213:71">(<argument pos:start="211:24" pos:end="211:31"><expr pos:start="211:24" pos:end="211:31"><name pos:start="211:24" pos:end="211:31"><name pos:start="211:24" pos:end="211:24">s</name><operator pos:start="211:25" pos:end="211:26">-&gt;</operator><name pos:start="211:27" pos:end="211:31">avctx</name></name></expr></argument>, <argument pos:start="211:34" pos:end="211:45"><expr pos:start="211:34" pos:end="211:45"><name pos:start="211:34" pos:end="211:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="213:24" pos:end="213:70"><expr pos:start="213:24" pos:end="213:70"><literal type="string" pos:start="213:24" pos:end="213:70">"Warning, unsupported keyframe coding type?!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:30"><expr pos:start="215:13" pos:end="215:29"><call pos:start="215:13" pos:end="215:29"><name pos:start="215:13" pos:end="215:21">skip_bits</name><argument_list pos:start="215:22" pos:end="215:29">(<argument pos:start="215:23" pos:end="215:25"><expr pos:start="215:23" pos:end="215:25"><operator pos:start="215:23" pos:end="215:23">&amp;</operator><name pos:start="215:24" pos:end="215:25">gb</name></expr></argument>, <argument pos:start="215:28" pos:end="215:28"><expr pos:start="215:28" pos:end="215:28"><literal type="number" pos:start="215:28" pos:end="215:28">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="215:32" pos:end="215:46">/* reserved? */</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="219:7" pos:end="249:5">else <block pos:start="219:12" pos:end="249:5">{<block_content pos:start="221:9" pos:end="247:9">

        <if_stmt pos:start="221:9" pos:end="247:9"><if pos:start="221:9" pos:end="247:9">if <condition pos:start="221:12" pos:end="221:40">(<expr pos:start="221:13" pos:end="221:39"><operator pos:start="221:13" pos:end="221:13">!</operator><name pos:start="221:14" pos:end="221:39"><name pos:start="221:14" pos:end="221:14">s</name><operator pos:start="221:15" pos:end="221:16">-&gt;</operator><name pos:start="221:17" pos:end="221:28">golden_frame</name><operator pos:start="221:29" pos:end="221:29">.</operator><name pos:start="221:30" pos:end="221:30">f</name><operator pos:start="221:31" pos:end="221:32">-&gt;</operator><name pos:start="221:33" pos:end="221:36">data</name><index pos:start="221:37" pos:end="221:39">[<expr pos:start="221:38" pos:end="221:38"><literal type="number" pos:start="221:38" pos:end="221:38">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="221:42" pos:end="247:9">{<block_content pos:start="223:13" pos:end="245:66">

            <expr_stmt pos:start="223:13" pos:end="225:56"><expr pos:start="223:13" pos:end="225:55"><call pos:start="223:13" pos:end="225:55"><name pos:start="223:13" pos:end="223:18">av_log</name><argument_list pos:start="223:19" pos:end="225:55">(<argument pos:start="223:20" pos:end="223:27"><expr pos:start="223:20" pos:end="223:27"><name pos:start="223:20" pos:end="223:27"><name pos:start="223:20" pos:end="223:20">s</name><operator pos:start="223:21" pos:end="223:22">-&gt;</operator><name pos:start="223:23" pos:end="223:27">avctx</name></name></expr></argument>, <argument pos:start="223:30" pos:end="223:43"><expr pos:start="223:30" pos:end="223:43"><name pos:start="223:30" pos:end="223:43">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="225:20" pos:end="225:54"><expr pos:start="225:20" pos:end="225:54"><literal type="string" pos:start="225:20" pos:end="225:54">"vp3: first frame not a keyframe\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="229:13" pos:end="229:61"><expr pos:start="229:13" pos:end="229:60"><name pos:start="229:13" pos:end="229:40"><name pos:start="229:13" pos:end="229:13">s</name><operator pos:start="229:14" pos:end="229:15">-&gt;</operator><name pos:start="229:16" pos:end="229:27">golden_frame</name><operator pos:start="229:28" pos:end="229:28">.</operator><name pos:start="229:29" pos:end="229:29">f</name><operator pos:start="229:30" pos:end="229:31">-&gt;</operator><name pos:start="229:32" pos:end="229:40">pict_type</name></name> <operator pos:start="229:42" pos:end="229:42">=</operator> <name pos:start="229:44" pos:end="229:60">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

            <if_stmt pos:start="231:13" pos:end="235:27"><if pos:start="231:13" pos:end="235:27">if <condition pos:start="231:16" pos:end="233:65">(<expr pos:start="231:17" pos:end="233:64"><call pos:start="231:17" pos:end="233:60"><name pos:start="231:17" pos:end="231:36">ff_thread_get_buffer</name><argument_list pos:start="231:37" pos:end="233:60">(<argument pos:start="231:38" pos:end="231:42"><expr pos:start="231:38" pos:end="231:42"><name pos:start="231:38" pos:end="231:42">avctx</name></expr></argument>, <argument pos:start="231:45" pos:end="231:60"><expr pos:start="231:45" pos:end="231:60"><operator pos:start="231:45" pos:end="231:45">&amp;</operator><name pos:start="231:46" pos:end="231:60"><name pos:start="231:46" pos:end="231:46">s</name><operator pos:start="231:47" pos:end="231:48">-&gt;</operator><name pos:start="231:49" pos:end="231:60">golden_frame</name></name></expr></argument>,

                                     <argument pos:start="233:38" pos:end="233:59"><expr pos:start="233:38" pos:end="233:59"><name pos:start="233:38" pos:end="233:59">AV_GET_BUFFER_FLAG_REF</name></expr></argument>)</argument_list></call> <operator pos:start="233:62" pos:end="233:62">&lt;</operator> <literal type="number" pos:start="233:64" pos:end="233:64">0</literal></expr>)</condition><block type="pseudo" pos:start="235:17" pos:end="235:27"><block_content pos:start="235:17" pos:end="235:27">

                <goto pos:start="235:17" pos:end="235:27">goto <name pos:start="235:22" pos:end="235:26">error</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:60"><expr pos:start="237:13" pos:end="237:59"><call pos:start="237:13" pos:end="237:59"><name pos:start="237:13" pos:end="237:36">ff_thread_release_buffer</name><argument_list pos:start="237:37" pos:end="237:59">(<argument pos:start="237:38" pos:end="237:42"><expr pos:start="237:38" pos:end="237:42"><name pos:start="237:38" pos:end="237:42">avctx</name></expr></argument>, <argument pos:start="237:45" pos:end="237:58"><expr pos:start="237:45" pos:end="237:58"><operator pos:start="237:45" pos:end="237:45">&amp;</operator><name pos:start="237:46" pos:end="237:58"><name pos:start="237:46" pos:end="237:46">s</name><operator pos:start="237:47" pos:end="237:48">-&gt;</operator><name pos:start="237:49" pos:end="237:58">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="239:13" pos:end="243:27"><if pos:start="239:13" pos:end="243:27">if <condition pos:start="239:16" pos:end="241:66">(<expr pos:start="239:17" pos:end="241:65"><operator pos:start="239:17" pos:end="239:17">(</operator><name pos:start="239:18" pos:end="239:20">ret</name> <operator pos:start="239:22" pos:end="239:22">=</operator> <call pos:start="239:24" pos:end="241:60"><name pos:start="239:24" pos:end="239:42">ff_thread_ref_frame</name><argument_list pos:start="239:43" pos:end="241:60">(<argument pos:start="239:44" pos:end="239:57"><expr pos:start="239:44" pos:end="239:57"><operator pos:start="239:44" pos:end="239:44">&amp;</operator><name pos:start="239:45" pos:end="239:57"><name pos:start="239:45" pos:end="239:45">s</name><operator pos:start="239:46" pos:end="239:47">-&gt;</operator><name pos:start="239:48" pos:end="239:57">last_frame</name></name></expr></argument>,

                                           <argument pos:start="241:44" pos:end="241:59"><expr pos:start="241:44" pos:end="241:59"><operator pos:start="241:44" pos:end="241:44">&amp;</operator><name pos:start="241:45" pos:end="241:59"><name pos:start="241:45" pos:end="241:45">s</name><operator pos:start="241:46" pos:end="241:47">-&gt;</operator><name pos:start="241:48" pos:end="241:59">golden_frame</name></name></expr></argument>)</argument_list></call><operator pos:start="241:61" pos:end="241:61">)</operator> <operator pos:start="241:63" pos:end="241:63">&lt;</operator> <literal type="number" pos:start="241:65" pos:end="241:65">0</literal></expr>)</condition><block type="pseudo" pos:start="243:17" pos:end="243:27"><block_content pos:start="243:17" pos:end="243:27">

                <goto pos:start="243:17" pos:end="243:27">goto <name pos:start="243:22" pos:end="243:26">error</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:66"><expr pos:start="245:13" pos:end="245:65"><call pos:start="245:13" pos:end="245:65"><name pos:start="245:13" pos:end="245:37">ff_thread_report_progress</name><argument_list pos:start="245:38" pos:end="245:65">(<argument pos:start="245:39" pos:end="245:52"><expr pos:start="245:39" pos:end="245:52"><operator pos:start="245:39" pos:end="245:39">&amp;</operator><name pos:start="245:40" pos:end="245:52"><name pos:start="245:40" pos:end="245:40">s</name><operator pos:start="245:41" pos:end="245:42">-&gt;</operator><name pos:start="245:43" pos:end="245:52">last_frame</name></name></expr></argument>, <argument pos:start="245:55" pos:end="245:61"><expr pos:start="245:55" pos:end="245:61"><name pos:start="245:55" pos:end="245:61">INT_MAX</name></expr></argument>, <argument pos:start="245:64" pos:end="245:64"><expr pos:start="245:64" pos:end="245:64"><literal type="number" pos:start="245:64" pos:end="245:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="253:5" pos:end="253:73"><expr pos:start="253:5" pos:end="253:72"><call pos:start="253:5" pos:end="253:72"><name pos:start="253:5" pos:end="253:10">memset</name><argument_list pos:start="253:11" pos:end="253:72">(<argument pos:start="253:12" pos:end="253:27"><expr pos:start="253:12" pos:end="253:27"><name pos:start="253:12" pos:end="253:27"><name pos:start="253:12" pos:end="253:12">s</name><operator pos:start="253:13" pos:end="253:14">-&gt;</operator><name pos:start="253:15" pos:end="253:27">all_fragments</name></name></expr></argument>, <argument pos:start="253:30" pos:end="253:30"><expr pos:start="253:30" pos:end="253:30"><literal type="number" pos:start="253:30" pos:end="253:30">0</literal></expr></argument>, <argument pos:start="253:33" pos:end="253:71"><expr pos:start="253:33" pos:end="253:71"><name pos:start="253:33" pos:end="253:49"><name pos:start="253:33" pos:end="253:33">s</name><operator pos:start="253:34" pos:end="253:35">-&gt;</operator><name pos:start="253:36" pos:end="253:49">fragment_count</name></name> <operator pos:start="253:51" pos:end="253:51">*</operator> <sizeof pos:start="253:53" pos:end="253:71">sizeof<argument_list pos:start="253:59" pos:end="253:71">(<argument pos:start="253:60" pos:end="253:70"><expr pos:start="253:60" pos:end="253:70"><name pos:start="253:60" pos:end="253:70">Vp3Fragment</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:34"><expr pos:start="255:5" pos:end="255:33"><call pos:start="255:5" pos:end="255:33"><name pos:start="255:5" pos:end="255:26">ff_thread_finish_setup</name><argument_list pos:start="255:27" pos:end="255:33">(<argument pos:start="255:28" pos:end="255:32"><expr pos:start="255:28" pos:end="255:32"><name pos:start="255:28" pos:end="255:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="259:5" pos:end="265:5"><if pos:start="259:5" pos:end="265:5">if <condition pos:start="259:8" pos:end="259:35">(<expr pos:start="259:9" pos:end="259:34"><call pos:start="259:9" pos:end="259:34"><name pos:start="259:9" pos:end="259:26">unpack_superblocks</name><argument_list pos:start="259:27" pos:end="259:34">(<argument pos:start="259:28" pos:end="259:28"><expr pos:start="259:28" pos:end="259:28"><name pos:start="259:28" pos:end="259:28">s</name></expr></argument>, <argument pos:start="259:31" pos:end="259:33"><expr pos:start="259:31" pos:end="259:33"><operator pos:start="259:31" pos:end="259:31">&amp;</operator><name pos:start="259:32" pos:end="259:33">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="259:37" pos:end="265:5">{<block_content pos:start="261:9" pos:end="263:19">

        <expr_stmt pos:start="261:9" pos:end="261:72"><expr pos:start="261:9" pos:end="261:71"><call pos:start="261:9" pos:end="261:71"><name pos:start="261:9" pos:end="261:14">av_log</name><argument_list pos:start="261:15" pos:end="261:71">(<argument pos:start="261:16" pos:end="261:23"><expr pos:start="261:16" pos:end="261:23"><name pos:start="261:16" pos:end="261:23"><name pos:start="261:16" pos:end="261:16">s</name><operator pos:start="261:17" pos:end="261:18">-&gt;</operator><name pos:start="261:19" pos:end="261:23">avctx</name></name></expr></argument>, <argument pos:start="261:26" pos:end="261:37"><expr pos:start="261:26" pos:end="261:37"><name pos:start="261:26" pos:end="261:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="261:40" pos:end="261:70"><expr pos:start="261:40" pos:end="261:70"><literal type="string" pos:start="261:40" pos:end="261:70">"error in unpack_superblocks\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="263:9" pos:end="263:19">goto <name pos:start="263:14" pos:end="263:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="267:5" pos:end="273:5"><if pos:start="267:5" pos:end="273:5">if <condition pos:start="267:8" pos:end="267:29">(<expr pos:start="267:9" pos:end="267:28"><call pos:start="267:9" pos:end="267:28"><name pos:start="267:9" pos:end="267:20">unpack_modes</name><argument_list pos:start="267:21" pos:end="267:28">(<argument pos:start="267:22" pos:end="267:22"><expr pos:start="267:22" pos:end="267:22"><name pos:start="267:22" pos:end="267:22">s</name></expr></argument>, <argument pos:start="267:25" pos:end="267:27"><expr pos:start="267:25" pos:end="267:27"><operator pos:start="267:25" pos:end="267:25">&amp;</operator><name pos:start="267:26" pos:end="267:27">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="267:31" pos:end="273:5">{<block_content pos:start="269:9" pos:end="271:19">

        <expr_stmt pos:start="269:9" pos:end="269:66"><expr pos:start="269:9" pos:end="269:65"><call pos:start="269:9" pos:end="269:65"><name pos:start="269:9" pos:end="269:14">av_log</name><argument_list pos:start="269:15" pos:end="269:65">(<argument pos:start="269:16" pos:end="269:23"><expr pos:start="269:16" pos:end="269:23"><name pos:start="269:16" pos:end="269:23"><name pos:start="269:16" pos:end="269:16">s</name><operator pos:start="269:17" pos:end="269:18">-&gt;</operator><name pos:start="269:19" pos:end="269:23">avctx</name></name></expr></argument>, <argument pos:start="269:26" pos:end="269:37"><expr pos:start="269:26" pos:end="269:37"><name pos:start="269:26" pos:end="269:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="269:40" pos:end="269:64"><expr pos:start="269:40" pos:end="269:64"><literal type="string" pos:start="269:40" pos:end="269:64">"error in unpack_modes\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="271:9" pos:end="271:19">goto <name pos:start="271:14" pos:end="271:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="275:5" pos:end="281:5"><if pos:start="275:5" pos:end="281:5">if <condition pos:start="275:8" pos:end="275:31">(<expr pos:start="275:9" pos:end="275:30"><call pos:start="275:9" pos:end="275:30"><name pos:start="275:9" pos:end="275:22">unpack_vectors</name><argument_list pos:start="275:23" pos:end="275:30">(<argument pos:start="275:24" pos:end="275:24"><expr pos:start="275:24" pos:end="275:24"><name pos:start="275:24" pos:end="275:24">s</name></expr></argument>, <argument pos:start="275:27" pos:end="275:29"><expr pos:start="275:27" pos:end="275:29"><operator pos:start="275:27" pos:end="275:27">&amp;</operator><name pos:start="275:28" pos:end="275:29">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="275:33" pos:end="281:5">{<block_content pos:start="277:9" pos:end="279:19">

        <expr_stmt pos:start="277:9" pos:end="277:68"><expr pos:start="277:9" pos:end="277:67"><call pos:start="277:9" pos:end="277:67"><name pos:start="277:9" pos:end="277:14">av_log</name><argument_list pos:start="277:15" pos:end="277:67">(<argument pos:start="277:16" pos:end="277:23"><expr pos:start="277:16" pos:end="277:23"><name pos:start="277:16" pos:end="277:23"><name pos:start="277:16" pos:end="277:16">s</name><operator pos:start="277:17" pos:end="277:18">-&gt;</operator><name pos:start="277:19" pos:end="277:23">avctx</name></name></expr></argument>, <argument pos:start="277:26" pos:end="277:37"><expr pos:start="277:26" pos:end="277:37"><name pos:start="277:26" pos:end="277:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="277:40" pos:end="277:66"><expr pos:start="277:40" pos:end="277:66"><literal type="string" pos:start="277:40" pos:end="277:66">"error in unpack_vectors\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="279:9" pos:end="279:19">goto <name pos:start="279:14" pos:end="279:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="283:5" pos:end="289:5"><if pos:start="283:5" pos:end="289:5">if <condition pos:start="283:8" pos:end="283:34">(<expr pos:start="283:9" pos:end="283:33"><call pos:start="283:9" pos:end="283:33"><name pos:start="283:9" pos:end="283:25">unpack_block_qpis</name><argument_list pos:start="283:26" pos:end="283:33">(<argument pos:start="283:27" pos:end="283:27"><expr pos:start="283:27" pos:end="283:27"><name pos:start="283:27" pos:end="283:27">s</name></expr></argument>, <argument pos:start="283:30" pos:end="283:32"><expr pos:start="283:30" pos:end="283:32"><operator pos:start="283:30" pos:end="283:30">&amp;</operator><name pos:start="283:31" pos:end="283:32">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="283:36" pos:end="289:5">{<block_content pos:start="285:9" pos:end="287:19">

        <expr_stmt pos:start="285:9" pos:end="285:71"><expr pos:start="285:9" pos:end="285:70"><call pos:start="285:9" pos:end="285:70"><name pos:start="285:9" pos:end="285:14">av_log</name><argument_list pos:start="285:15" pos:end="285:70">(<argument pos:start="285:16" pos:end="285:23"><expr pos:start="285:16" pos:end="285:23"><name pos:start="285:16" pos:end="285:23"><name pos:start="285:16" pos:end="285:16">s</name><operator pos:start="285:17" pos:end="285:18">-&gt;</operator><name pos:start="285:19" pos:end="285:23">avctx</name></name></expr></argument>, <argument pos:start="285:26" pos:end="285:37"><expr pos:start="285:26" pos:end="285:37"><name pos:start="285:26" pos:end="285:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="285:40" pos:end="285:69"><expr pos:start="285:40" pos:end="285:69"><literal type="string" pos:start="285:40" pos:end="285:69">"error in unpack_block_qpis\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="287:9" pos:end="287:19">goto <name pos:start="287:14" pos:end="287:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="291:5" pos:end="297:5"><if pos:start="291:5" pos:end="297:5">if <condition pos:start="291:8" pos:end="291:34">(<expr pos:start="291:9" pos:end="291:33"><call pos:start="291:9" pos:end="291:33"><name pos:start="291:9" pos:end="291:25">unpack_dct_coeffs</name><argument_list pos:start="291:26" pos:end="291:33">(<argument pos:start="291:27" pos:end="291:27"><expr pos:start="291:27" pos:end="291:27"><name pos:start="291:27" pos:end="291:27">s</name></expr></argument>, <argument pos:start="291:30" pos:end="291:32"><expr pos:start="291:30" pos:end="291:32"><operator pos:start="291:30" pos:end="291:30">&amp;</operator><name pos:start="291:31" pos:end="291:32">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="291:36" pos:end="297:5">{<block_content pos:start="293:9" pos:end="295:19">

        <expr_stmt pos:start="293:9" pos:end="293:71"><expr pos:start="293:9" pos:end="293:70"><call pos:start="293:9" pos:end="293:70"><name pos:start="293:9" pos:end="293:14">av_log</name><argument_list pos:start="293:15" pos:end="293:70">(<argument pos:start="293:16" pos:end="293:23"><expr pos:start="293:16" pos:end="293:23"><name pos:start="293:16" pos:end="293:23"><name pos:start="293:16" pos:end="293:16">s</name><operator pos:start="293:17" pos:end="293:18">-&gt;</operator><name pos:start="293:19" pos:end="293:23">avctx</name></name></expr></argument>, <argument pos:start="293:26" pos:end="293:37"><expr pos:start="293:26" pos:end="293:37"><name pos:start="293:26" pos:end="293:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="293:40" pos:end="293:69"><expr pos:start="293:40" pos:end="293:69"><literal type="string" pos:start="293:40" pos:end="293:69">"error in unpack_dct_coeffs\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="295:9" pos:end="295:19">goto <name pos:start="295:14" pos:end="295:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="301:5" pos:end="313:5">for <control pos:start="301:9" pos:end="301:27">(<init pos:start="301:10" pos:end="301:15"><expr pos:start="301:10" pos:end="301:14"><name pos:start="301:10" pos:end="301:10">i</name> <operator pos:start="301:12" pos:end="301:12">=</operator> <literal type="number" pos:start="301:14" pos:end="301:14">0</literal></expr>;</init> <condition pos:start="301:17" pos:end="301:22"><expr pos:start="301:17" pos:end="301:21"><name pos:start="301:17" pos:end="301:17">i</name> <operator pos:start="301:19" pos:end="301:19">&lt;</operator> <literal type="number" pos:start="301:21" pos:end="301:21">3</literal></expr>;</condition> <incr pos:start="301:24" pos:end="301:26"><expr pos:start="301:24" pos:end="301:26"><name pos:start="301:24" pos:end="301:24">i</name><operator pos:start="301:25" pos:end="301:26">++</operator></expr></incr>)</control> <block pos:start="301:29" pos:end="313:5">{<block_content pos:start="303:9" pos:end="311:79">

        <decl_stmt pos:start="303:9" pos:end="303:59"><decl pos:start="303:9" pos:end="303:58"><type pos:start="303:9" pos:end="303:11"><name pos:start="303:9" pos:end="303:11">int</name></type> <name pos:start="303:13" pos:end="303:18">height</name> <init pos:start="303:20" pos:end="303:58">= <expr pos:start="303:22" pos:end="303:58"><name pos:start="303:22" pos:end="303:30"><name pos:start="303:22" pos:end="303:22">s</name><operator pos:start="303:23" pos:end="303:24">-&gt;</operator><name pos:start="303:25" pos:end="303:30">height</name></name> <operator pos:start="303:32" pos:end="303:33">&gt;&gt;</operator> <operator pos:start="303:35" pos:end="303:35">(</operator><name pos:start="303:36" pos:end="303:36">i</name> <operator pos:start="303:38" pos:end="303:39">&amp;&amp;</operator> <name pos:start="303:41" pos:end="303:57"><name pos:start="303:41" pos:end="303:41">s</name><operator pos:start="303:42" pos:end="303:43">-&gt;</operator><name pos:start="303:44" pos:end="303:57">chroma_y_shift</name></name><operator pos:start="303:58" pos:end="303:58">)</operator></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="305:9" pos:end="311:79"><if pos:start="305:9" pos:end="307:34">if <condition pos:start="305:12" pos:end="305:29">(<expr pos:start="305:13" pos:end="305:28"><name pos:start="305:13" pos:end="305:28"><name pos:start="305:13" pos:end="305:13">s</name><operator pos:start="305:14" pos:end="305:15">-&gt;</operator><name pos:start="305:16" pos:end="305:28">flipped_image</name></name></expr>)</condition><block type="pseudo" pos:start="307:13" pos:end="307:34"><block_content pos:start="307:13" pos:end="307:34">

            <expr_stmt pos:start="307:13" pos:end="307:34"><expr pos:start="307:13" pos:end="307:33"><name pos:start="307:13" pos:end="307:29"><name pos:start="307:13" pos:end="307:13">s</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:26">data_offset</name><index pos:start="307:27" pos:end="307:29">[<expr pos:start="307:28" pos:end="307:28"><name pos:start="307:28" pos:end="307:28">i</name></expr>]</index></name> <operator pos:start="307:31" pos:end="307:31">=</operator> <literal type="number" pos:start="307:33" pos:end="307:33">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="309:9" pos:end="311:79">else<block type="pseudo" pos:start="311:13" pos:end="311:79"><block_content pos:start="311:13" pos:end="311:79">

            <expr_stmt pos:start="311:13" pos:end="311:79"><expr pos:start="311:13" pos:end="311:78"><name pos:start="311:13" pos:end="311:29"><name pos:start="311:13" pos:end="311:13">s</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:26">data_offset</name><index pos:start="311:27" pos:end="311:29">[<expr pos:start="311:28" pos:end="311:28"><name pos:start="311:28" pos:end="311:28">i</name></expr>]</index></name> <operator pos:start="311:31" pos:end="311:31">=</operator> <operator pos:start="311:33" pos:end="311:33">(</operator><name pos:start="311:34" pos:end="311:39">height</name> <operator pos:start="311:41" pos:end="311:41">-</operator> <literal type="number" pos:start="311:43" pos:end="311:43">1</literal><operator pos:start="311:44" pos:end="311:44">)</operator> <operator pos:start="311:46" pos:end="311:46">*</operator> <name pos:start="311:48" pos:end="311:78"><name pos:start="311:48" pos:end="311:48">s</name><operator pos:start="311:49" pos:end="311:50">-&gt;</operator><name pos:start="311:51" pos:end="311:63">current_frame</name><operator pos:start="311:64" pos:end="311:64">.</operator><name pos:start="311:65" pos:end="311:65">f</name><operator pos:start="311:66" pos:end="311:67">-&gt;</operator><name pos:start="311:68" pos:end="311:75">linesize</name><index pos:start="311:76" pos:end="311:78">[<expr pos:start="311:77" pos:end="311:77"><name pos:start="311:77" pos:end="311:77">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="317:5" pos:end="317:26"><expr pos:start="317:5" pos:end="317:25"><name pos:start="317:5" pos:end="317:21"><name pos:start="317:5" pos:end="317:5">s</name><operator pos:start="317:6" pos:end="317:7">-&gt;</operator><name pos:start="317:8" pos:end="317:21">last_slice_end</name></name> <operator pos:start="317:23" pos:end="317:23">=</operator> <literal type="number" pos:start="317:25" pos:end="317:25">0</literal></expr>;</expr_stmt>

    <for pos:start="319:5" pos:end="321:27">for <control pos:start="319:9" pos:end="319:48">(<init pos:start="319:10" pos:end="319:15"><expr pos:start="319:10" pos:end="319:14"><name pos:start="319:10" pos:end="319:10">i</name> <operator pos:start="319:12" pos:end="319:12">=</operator> <literal type="number" pos:start="319:14" pos:end="319:14">0</literal></expr>;</init> <condition pos:start="319:17" pos:end="319:43"><expr pos:start="319:17" pos:end="319:42"><name pos:start="319:17" pos:end="319:17">i</name> <operator pos:start="319:19" pos:end="319:19">&lt;</operator> <name pos:start="319:21" pos:end="319:42"><name pos:start="319:21" pos:end="319:21">s</name><operator pos:start="319:22" pos:end="319:23">-&gt;</operator><name pos:start="319:24" pos:end="319:42">c_superblock_height</name></name></expr>;</condition> <incr pos:start="319:45" pos:end="319:47"><expr pos:start="319:45" pos:end="319:47"><name pos:start="319:45" pos:end="319:45">i</name><operator pos:start="319:46" pos:end="319:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="321:9" pos:end="321:27"><block_content pos:start="321:9" pos:end="321:27">

        <expr_stmt pos:start="321:9" pos:end="321:27"><expr pos:start="321:9" pos:end="321:26"><call pos:start="321:9" pos:end="321:26"><name pos:start="321:9" pos:end="321:20">render_slice</name><argument_list pos:start="321:21" pos:end="321:26">(<argument pos:start="321:22" pos:end="321:22"><expr pos:start="321:22" pos:end="321:22"><name pos:start="321:22" pos:end="321:22">s</name></expr></argument>, <argument pos:start="321:25" pos:end="321:25"><expr pos:start="321:25" pos:end="321:25"><name pos:start="321:25" pos:end="321:25">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <comment type="line" pos:start="325:5" pos:end="325:26">// filter the last row</comment>

    <for pos:start="327:5" pos:end="333:5">for <control pos:start="327:9" pos:end="327:27">(<init pos:start="327:10" pos:end="327:15"><expr pos:start="327:10" pos:end="327:14"><name pos:start="327:10" pos:end="327:10">i</name> <operator pos:start="327:12" pos:end="327:12">=</operator> <literal type="number" pos:start="327:14" pos:end="327:14">0</literal></expr>;</init> <condition pos:start="327:17" pos:end="327:22"><expr pos:start="327:17" pos:end="327:21"><name pos:start="327:17" pos:end="327:17">i</name> <operator pos:start="327:19" pos:end="327:19">&lt;</operator> <literal type="number" pos:start="327:21" pos:end="327:21">3</literal></expr>;</condition> <incr pos:start="327:24" pos:end="327:26"><expr pos:start="327:24" pos:end="327:26"><name pos:start="327:24" pos:end="327:24">i</name><operator pos:start="327:25" pos:end="327:26">++</operator></expr></incr>)</control> <block pos:start="327:29" pos:end="333:5">{<block_content pos:start="329:9" pos:end="331:46">

        <decl_stmt pos:start="329:9" pos:end="329:68"><decl pos:start="329:9" pos:end="329:67"><type pos:start="329:9" pos:end="329:11"><name pos:start="329:9" pos:end="329:11">int</name></type> <name pos:start="329:13" pos:end="329:15">row</name> <init pos:start="329:17" pos:end="329:67">= <expr pos:start="329:19" pos:end="329:67"><operator pos:start="329:19" pos:end="329:19">(</operator><name pos:start="329:20" pos:end="329:28"><name pos:start="329:20" pos:end="329:20">s</name><operator pos:start="329:21" pos:end="329:22">-&gt;</operator><name pos:start="329:23" pos:end="329:28">height</name></name> <operator pos:start="329:30" pos:end="329:31">&gt;&gt;</operator> <operator pos:start="329:33" pos:end="329:33">(</operator><literal type="number" pos:start="329:34" pos:end="329:36">3</literal> <operator pos:start="329:36" pos:end="329:36">+</operator> <operator pos:start="329:38" pos:end="329:38">(</operator><name pos:start="329:39" pos:end="329:39">i</name> <operator pos:start="329:41" pos:end="329:42">&amp;&amp;</operator> <name pos:start="329:44" pos:end="329:60"><name pos:start="329:44" pos:end="329:44">s</name><operator pos:start="329:45" pos:end="329:46">-&gt;</operator><name pos:start="329:47" pos:end="329:60">chroma_y_shift</name></name><operator pos:start="329:61" pos:end="329:61">)</operator><operator pos:start="329:62" pos:end="329:62">)</operator><operator pos:start="329:63" pos:end="329:63">)</operator> <operator pos:start="329:65" pos:end="329:65">-</operator> <literal type="number" pos:start="329:67" pos:end="329:67">1</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:46"><expr pos:start="331:9" pos:end="331:45"><call pos:start="331:9" pos:end="331:45"><name pos:start="331:9" pos:end="331:25">apply_loop_filter</name><argument_list pos:start="331:26" pos:end="331:45">(<argument pos:start="331:27" pos:end="331:27"><expr pos:start="331:27" pos:end="331:27"><name pos:start="331:27" pos:end="331:27">s</name></expr></argument>, <argument pos:start="331:30" pos:end="331:30"><expr pos:start="331:30" pos:end="331:30"><name pos:start="331:30" pos:end="331:30">i</name></expr></argument>, <argument pos:start="331:33" pos:end="331:35"><expr pos:start="331:33" pos:end="331:35"><name pos:start="331:33" pos:end="331:35">row</name></expr></argument>, <argument pos:start="331:38" pos:end="331:44"><expr pos:start="331:38" pos:end="331:44"><name pos:start="331:38" pos:end="331:40">row</name> <operator pos:start="331:42" pos:end="331:42">+</operator> <literal type="number" pos:start="331:44" pos:end="331:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="335:5" pos:end="335:38"><expr pos:start="335:5" pos:end="335:37"><call pos:start="335:5" pos:end="335:37"><name pos:start="335:5" pos:end="335:23">vp3_draw_horiz_band</name><argument_list pos:start="335:24" pos:end="335:37">(<argument pos:start="335:25" pos:end="335:25"><expr pos:start="335:25" pos:end="335:25"><name pos:start="335:25" pos:end="335:25">s</name></expr></argument>, <argument pos:start="335:28" pos:end="335:36"><expr pos:start="335:28" pos:end="335:36"><name pos:start="335:28" pos:end="335:36"><name pos:start="335:28" pos:end="335:28">s</name><operator pos:start="335:29" pos:end="335:30">-&gt;</operator><name pos:start="335:31" pos:end="335:36">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="339:5" pos:end="339:40">/* output frame, offset as needed */</comment>

    <if_stmt pos:start="341:5" pos:end="343:19"><if pos:start="341:5" pos:end="343:19">if <condition pos:start="341:8" pos:end="341:59">(<expr pos:start="341:9" pos:end="341:58"><operator pos:start="341:9" pos:end="341:9">(</operator><name pos:start="341:10" pos:end="341:12">ret</name> <operator pos:start="341:14" pos:end="341:14">=</operator> <call pos:start="341:16" pos:end="341:53"><name pos:start="341:16" pos:end="341:27">av_frame_ref</name><argument_list pos:start="341:28" pos:end="341:53">(<argument pos:start="341:29" pos:end="341:32"><expr pos:start="341:29" pos:end="341:32"><name pos:start="341:29" pos:end="341:32">data</name></expr></argument>, <argument pos:start="341:35" pos:end="341:52"><expr pos:start="341:35" pos:end="341:52"><name pos:start="341:35" pos:end="341:52"><name pos:start="341:35" pos:end="341:35">s</name><operator pos:start="341:36" pos:end="341:37">-&gt;</operator><name pos:start="341:38" pos:end="341:50">current_frame</name><operator pos:start="341:51" pos:end="341:51">.</operator><name pos:start="341:52" pos:end="341:52">f</name></name></expr></argument>)</argument_list></call><operator pos:start="341:54" pos:end="341:54">)</operator> <operator pos:start="341:56" pos:end="341:56">&lt;</operator> <literal type="number" pos:start="341:58" pos:end="341:58">0</literal></expr>)</condition><block type="pseudo" pos:start="343:9" pos:end="343:19"><block_content pos:start="343:9" pos:end="343:19">

        <return pos:start="343:9" pos:end="343:19">return <expr pos:start="343:16" pos:end="343:18"><name pos:start="343:16" pos:end="343:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="345:5" pos:end="355:5">for <control pos:start="345:9" pos:end="345:27">(<init pos:start="345:10" pos:end="345:15"><expr pos:start="345:10" pos:end="345:14"><name pos:start="345:10" pos:end="345:10">i</name> <operator pos:start="345:12" pos:end="345:12">=</operator> <literal type="number" pos:start="345:14" pos:end="345:14">0</literal></expr>;</init> <condition pos:start="345:17" pos:end="345:22"><expr pos:start="345:17" pos:end="345:21"><name pos:start="345:17" pos:end="345:17">i</name> <operator pos:start="345:19" pos:end="345:19">&lt;</operator> <literal type="number" pos:start="345:21" pos:end="345:21">3</literal></expr>;</condition> <incr pos:start="345:24" pos:end="345:26"><expr pos:start="345:24" pos:end="345:26"><name pos:start="345:24" pos:end="345:24">i</name><operator pos:start="345:25" pos:end="345:26">++</operator></expr></incr>)</control> <block pos:start="345:29" pos:end="355:5">{<block_content pos:start="347:9" pos:end="353:28">

        <decl_stmt pos:start="347:9" pos:end="347:28"><decl pos:start="347:9" pos:end="347:27"><type pos:start="347:9" pos:end="347:17"><name pos:start="347:9" pos:end="347:15">AVFrame</name> <modifier pos:start="347:17" pos:end="347:17">*</modifier></type><name pos:start="347:18" pos:end="347:20">dst</name> <init pos:start="347:22" pos:end="347:27">= <expr pos:start="347:24" pos:end="347:27"><name pos:start="347:24" pos:end="347:27">data</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="349:9" pos:end="351:79"><decl pos:start="349:9" pos:end="351:78"><type pos:start="349:9" pos:end="349:11"><name pos:start="349:9" pos:end="349:11">int</name></type> <name pos:start="349:13" pos:end="349:15">off</name> <init pos:start="349:17" pos:end="351:78">= <expr pos:start="349:19" pos:end="351:78"><operator pos:start="349:19" pos:end="349:19">(</operator><name pos:start="349:20" pos:end="349:30"><name pos:start="349:20" pos:end="349:20">s</name><operator pos:start="349:21" pos:end="349:22">-&gt;</operator><name pos:start="349:23" pos:end="349:30">offset_x</name></name> <operator pos:start="349:32" pos:end="349:33">&gt;&gt;</operator> <operator pos:start="349:35" pos:end="349:35">(</operator><name pos:start="349:36" pos:end="349:36">i</name> <operator pos:start="349:38" pos:end="349:39">&amp;&amp;</operator> <name pos:start="349:41" pos:end="349:57"><name pos:start="349:41" pos:end="349:41">s</name><operator pos:start="349:42" pos:end="349:43">-&gt;</operator><name pos:start="349:44" pos:end="349:57">chroma_y_shift</name></name><operator pos:start="349:58" pos:end="349:58">)</operator><operator pos:start="349:59" pos:end="349:59">)</operator> <operator pos:start="349:61" pos:end="349:61">+</operator>

                  <operator pos:start="351:19" pos:end="351:19">(</operator><name pos:start="351:20" pos:end="351:30"><name pos:start="351:20" pos:end="351:20">s</name><operator pos:start="351:21" pos:end="351:22">-&gt;</operator><name pos:start="351:23" pos:end="351:30">offset_y</name></name> <operator pos:start="351:32" pos:end="351:33">&gt;&gt;</operator> <operator pos:start="351:35" pos:end="351:35">(</operator><name pos:start="351:36" pos:end="351:36">i</name> <operator pos:start="351:38" pos:end="351:39">&amp;&amp;</operator> <name pos:start="351:41" pos:end="351:57"><name pos:start="351:41" pos:end="351:41">s</name><operator pos:start="351:42" pos:end="351:43">-&gt;</operator><name pos:start="351:44" pos:end="351:57">chroma_y_shift</name></name><operator pos:start="351:58" pos:end="351:58">)</operator><operator pos:start="351:59" pos:end="351:59">)</operator> <operator pos:start="351:61" pos:end="351:61">*</operator> <name pos:start="351:63" pos:end="351:78"><name pos:start="351:63" pos:end="351:65">dst</name><operator pos:start="351:66" pos:end="351:67">-&gt;</operator><name pos:start="351:68" pos:end="351:75">linesize</name><index pos:start="351:76" pos:end="351:78">[<expr pos:start="351:77" pos:end="351:77"><name pos:start="351:77" pos:end="351:77">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="353:9" pos:end="353:28"><expr pos:start="353:9" pos:end="353:27"><name pos:start="353:9" pos:end="353:20"><name pos:start="353:9" pos:end="353:11">dst</name><operator pos:start="353:12" pos:end="353:13">-&gt;</operator><name pos:start="353:14" pos:end="353:17">data</name><index pos:start="353:18" pos:end="353:20">[<expr pos:start="353:19" pos:end="353:19"><name pos:start="353:19" pos:end="353:19">i</name></expr>]</index></name> <operator pos:start="353:22" pos:end="353:23">+=</operator> <name pos:start="353:25" pos:end="353:27">off</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="357:5" pos:end="357:19"><expr pos:start="357:5" pos:end="357:18"><operator pos:start="357:5" pos:end="357:5">*</operator><name pos:start="357:6" pos:end="357:14">got_frame</name> <operator pos:start="357:16" pos:end="357:16">=</operator> <literal type="number" pos:start="357:18" pos:end="357:18">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="361:5" pos:end="369:5"><if pos:start="361:5" pos:end="369:5">if <condition pos:start="361:8" pos:end="361:75">(<expr pos:start="361:9" pos:end="361:74"><operator pos:start="361:9" pos:end="361:9">!</operator><name pos:start="361:10" pos:end="361:21">HAVE_THREADS</name> <operator pos:start="361:23" pos:end="361:24">||</operator> <operator pos:start="361:26" pos:end="361:26">!</operator><operator pos:start="361:27" pos:end="361:27">(</operator><name pos:start="361:28" pos:end="361:55"><name pos:start="361:28" pos:end="361:28">s</name><operator pos:start="361:29" pos:end="361:30">-&gt;</operator><name pos:start="361:31" pos:end="361:35">avctx</name><operator pos:start="361:36" pos:end="361:37">-&gt;</operator><name pos:start="361:38" pos:end="361:55">active_thread_type</name></name> <operator pos:start="361:57" pos:end="361:57">&amp;</operator> <name pos:start="361:59" pos:end="361:73">FF_THREAD_FRAME</name><operator pos:start="361:74" pos:end="361:74">)</operator></expr>)</condition> <block pos:start="361:77" pos:end="369:5">{<block_content pos:start="363:9" pos:end="367:23">

        <expr_stmt pos:start="363:9" pos:end="363:35"><expr pos:start="363:9" pos:end="363:34"><name pos:start="363:9" pos:end="363:11">ret</name> <operator pos:start="363:13" pos:end="363:13">=</operator> <call pos:start="363:15" pos:end="363:34"><name pos:start="363:15" pos:end="363:27">update_frames</name><argument_list pos:start="363:28" pos:end="363:34">(<argument pos:start="363:29" pos:end="363:33"><expr pos:start="363:29" pos:end="363:33"><name pos:start="363:29" pos:end="363:33">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="365:9" pos:end="367:23"><if pos:start="365:9" pos:end="367:23">if <condition pos:start="365:12" pos:end="365:20">(<expr pos:start="365:13" pos:end="365:19"><name pos:start="365:13" pos:end="365:15">ret</name> <operator pos:start="365:17" pos:end="365:17">&lt;</operator> <literal type="number" pos:start="365:19" pos:end="365:19">0</literal></expr>)</condition><block type="pseudo" pos:start="367:13" pos:end="367:23"><block_content pos:start="367:13" pos:end="367:23">

            <return pos:start="367:13" pos:end="367:23">return <expr pos:start="367:20" pos:end="367:22"><name pos:start="367:20" pos:end="367:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="373:5" pos:end="373:20">return <expr pos:start="373:12" pos:end="373:19"><name pos:start="373:12" pos:end="373:19">buf_size</name></expr>;</return>



<label pos:start="377:1" pos:end="377:6"><name pos:start="377:1" pos:end="377:5">error</name>:</label>

    <expr_stmt pos:start="379:5" pos:end="379:61"><expr pos:start="379:5" pos:end="379:60"><call pos:start="379:5" pos:end="379:60"><name pos:start="379:5" pos:end="379:29">ff_thread_report_progress</name><argument_list pos:start="379:30" pos:end="379:60">(<argument pos:start="379:31" pos:end="379:47"><expr pos:start="379:31" pos:end="379:47"><operator pos:start="379:31" pos:end="379:31">&amp;</operator><name pos:start="379:32" pos:end="379:47"><name pos:start="379:32" pos:end="379:32">s</name><operator pos:start="379:33" pos:end="379:34">-&gt;</operator><name pos:start="379:35" pos:end="379:47">current_frame</name></name></expr></argument>, <argument pos:start="379:50" pos:end="379:56"><expr pos:start="379:50" pos:end="379:56"><name pos:start="379:50" pos:end="379:56">INT_MAX</name></expr></argument>, <argument pos:start="379:59" pos:end="379:59"><expr pos:start="379:59" pos:end="379:59"><literal type="number" pos:start="379:59" pos:end="379:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="383:5" pos:end="385:43"><if pos:start="383:5" pos:end="385:43">if <condition pos:start="383:8" pos:end="383:75">(<expr pos:start="383:9" pos:end="383:74"><operator pos:start="383:9" pos:end="383:9">!</operator><name pos:start="383:10" pos:end="383:21">HAVE_THREADS</name> <operator pos:start="383:23" pos:end="383:24">||</operator> <operator pos:start="383:26" pos:end="383:26">!</operator><operator pos:start="383:27" pos:end="383:27">(</operator><name pos:start="383:28" pos:end="383:55"><name pos:start="383:28" pos:end="383:28">s</name><operator pos:start="383:29" pos:end="383:30">-&gt;</operator><name pos:start="383:31" pos:end="383:35">avctx</name><operator pos:start="383:36" pos:end="383:37">-&gt;</operator><name pos:start="383:38" pos:end="383:55">active_thread_type</name></name> <operator pos:start="383:57" pos:end="383:57">&amp;</operator> <name pos:start="383:59" pos:end="383:73">FF_THREAD_FRAME</name><operator pos:start="383:74" pos:end="383:74">)</operator></expr>)</condition><block type="pseudo" pos:start="385:9" pos:end="385:43"><block_content pos:start="385:9" pos:end="385:43">

        <expr_stmt pos:start="385:9" pos:end="385:43"><expr pos:start="385:9" pos:end="385:42"><call pos:start="385:9" pos:end="385:42"><name pos:start="385:9" pos:end="385:22">av_frame_unref</name><argument_list pos:start="385:23" pos:end="385:42">(<argument pos:start="385:24" pos:end="385:41"><expr pos:start="385:24" pos:end="385:41"><name pos:start="385:24" pos:end="385:41"><name pos:start="385:24" pos:end="385:24">s</name><operator pos:start="385:25" pos:end="385:26">-&gt;</operator><name pos:start="385:27" pos:end="385:39">current_frame</name><operator pos:start="385:40" pos:end="385:40">.</operator><name pos:start="385:41" pos:end="385:41">f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="389:5" pos:end="389:14">return <expr pos:start="389:12" pos:end="389:13"><operator pos:start="389:12" pos:end="389:12">-</operator><literal type="number" pos:start="389:13" pos:end="389:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
