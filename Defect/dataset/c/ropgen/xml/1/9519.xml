<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9519.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">long</name></type> <name pos:start="1:13" pos:end="1:30">do_rt_sigreturn_v2</name><parameter_list pos:start="1:31" pos:end="1:48">(<parameter pos:start="1:32" pos:end="1:47"><decl pos:start="1:32" pos:end="1:47"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:42">CPUARMState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">abi_ulong</name></type> <name pos:start="5:15" pos:end="5:24">frame_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:25">rt_sigframe_v2</name></name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:32">frame</name> <init pos:start="7:34" pos:end="7:39">= <expr pos:start="7:36" pos:end="7:39"><name pos:start="7:36" pos:end="7:39">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="19:7">/*

     * Since we stacked the signal on a 64-bit boundary,

     * then 'sp' should be word aligned here.  If it's

     * not, then the user is trying to mess with us.

     */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:14">frame_addr</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:30"><name pos:start="21:18" pos:end="21:20">env</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:26">regs</name><index pos:start="21:27" pos:end="21:30">[<expr pos:start="21:28" pos:end="21:29"><literal type="number" pos:start="21:28" pos:end="21:29">13</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:48"><expr pos:start="23:5" pos:end="23:47"><call pos:start="23:5" pos:end="23:47"><name pos:start="23:5" pos:end="23:30">trace_user_do_rt_sigreturn</name><argument_list pos:start="23:31" pos:end="23:47">(<argument pos:start="23:32" pos:end="23:34"><expr pos:start="23:32" pos:end="23:34"><name pos:start="23:32" pos:end="23:34">env</name></expr></argument>, <argument pos:start="23:37" pos:end="23:46"><expr pos:start="23:37" pos:end="23:46"><name pos:start="23:37" pos:end="23:46">frame_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:23">(<expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:18">frame_addr</name> <operator pos:start="25:20" pos:end="25:20">&amp;</operator> <literal type="number" pos:start="25:22" pos:end="25:22">7</literal></expr>)</condition> <block pos:start="25:25" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:22">

        <goto pos:start="27:9" pos:end="27:22">goto <name pos:start="27:14" pos:end="27:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:61">(<expr pos:start="33:9" pos:end="33:60"><operator pos:start="33:9" pos:end="33:9">!</operator><call pos:start="33:10" pos:end="33:60"><name pos:start="33:10" pos:end="33:25">lock_user_struct</name><argument_list pos:start="33:26" pos:end="33:60">(<argument pos:start="33:27" pos:end="33:37"><expr pos:start="33:27" pos:end="33:37"><name pos:start="33:27" pos:end="33:37">VERIFY_READ</name></expr></argument>, <argument pos:start="33:40" pos:end="33:44"><expr pos:start="33:40" pos:end="33:44"><name pos:start="33:40" pos:end="33:44">frame</name></expr></argument>, <argument pos:start="33:47" pos:end="33:56"><expr pos:start="33:47" pos:end="33:56"><name pos:start="33:47" pos:end="33:56">frame_addr</name></expr></argument>, <argument pos:start="33:59" pos:end="33:59"><expr pos:start="33:59" pos:end="33:59"><literal type="number" pos:start="33:59" pos:end="33:59">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:63" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:22">

        <goto pos:start="35:9" pos:end="35:22">goto <name pos:start="35:14" pos:end="35:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:59">(<expr pos:start="41:9" pos:end="41:58"><call pos:start="41:9" pos:end="41:58"><name pos:start="41:9" pos:end="41:29">do_sigframe_return_v2</name><argument_list pos:start="41:30" pos:end="41:58">(<argument pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><name pos:start="41:31" pos:end="41:33">env</name></expr></argument>, <argument pos:start="41:36" pos:end="41:45"><expr pos:start="41:36" pos:end="41:45"><name pos:start="41:36" pos:end="41:45">frame_addr</name></expr></argument>, <argument pos:start="41:48" pos:end="41:57"><expr pos:start="41:48" pos:end="41:57"><operator pos:start="41:48" pos:end="41:48">&amp;</operator><name pos:start="41:49" pos:end="41:57"><name pos:start="41:49" pos:end="41:53">frame</name><operator pos:start="41:54" pos:end="41:55">-&gt;</operator><name pos:start="41:56" pos:end="41:57">uc</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:61" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:22">

        <goto pos:start="43:9" pos:end="43:22">goto <name pos:start="43:14" pos:end="43:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><call pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:22">unlock_user_struct</name><argument_list pos:start="49:23" pos:end="49:44">(<argument pos:start="49:24" pos:end="49:28"><expr pos:start="49:24" pos:end="49:28"><name pos:start="49:24" pos:end="49:28">frame</name></expr></argument>, <argument pos:start="49:31" pos:end="49:40"><expr pos:start="49:31" pos:end="49:40"><name pos:start="49:31" pos:end="49:40">frame_addr</name></expr></argument>, <argument pos:start="49:43" pos:end="49:43"><expr pos:start="49:43" pos:end="49:43"><literal type="number" pos:start="49:43" pos:end="49:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:35">return <expr pos:start="51:12" pos:end="51:34"><operator pos:start="51:12" pos:end="51:12">-</operator><name pos:start="51:13" pos:end="51:34">TARGET_QEMU_ESIGRETURN</name></expr>;</return>



<label pos:start="55:1" pos:end="55:9"><name pos:start="55:1" pos:end="55:8">badframe</name>:</label>

    <expr_stmt pos:start="57:5" pos:end="57:45"><expr pos:start="57:5" pos:end="57:44"><call pos:start="57:5" pos:end="57:44"><name pos:start="57:5" pos:end="57:22">unlock_user_struct</name><argument_list pos:start="57:23" pos:end="57:44">(<argument pos:start="57:24" pos:end="57:28"><expr pos:start="57:24" pos:end="57:28"><name pos:start="57:24" pos:end="57:28">frame</name></expr></argument>, <argument pos:start="57:31" pos:end="57:40"><expr pos:start="57:31" pos:end="57:40"><name pos:start="57:31" pos:end="57:40">frame_addr</name></expr></argument>, <argument pos:start="57:43" pos:end="57:43"><expr pos:start="57:43" pos:end="57:43"><literal type="number" pos:start="57:43" pos:end="57:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:46"><expr pos:start="59:5" pos:end="59:45"><call pos:start="59:5" pos:end="59:45"><name pos:start="59:5" pos:end="59:13">force_sig</name><argument_list pos:start="59:14" pos:end="59:45">(<argument pos:start="59:15" pos:end="59:28"><expr pos:start="59:15" pos:end="59:28"><name pos:start="59:15" pos:end="59:28">TARGET_SIGSEGV</name></expr></argument> <comment type="block" pos:start="59:30" pos:end="59:44">/* , current */</comment>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
