<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18839.c" pos:tabs="8"><function pos:start="1:1" pos:end="281:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">decode_nal_unit</name><parameter_list pos:start="1:27" pos:end="1:63">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:38">HEVCContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:62"><decl pos:start="1:44" pos:end="1:62"><type pos:start="1:44" pos:end="1:62"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:57">H2645NAL</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">nal</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="281:1">{<block_content pos:start="5:5" pos:end="279:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">HEVCLocalContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">lc</name> <init pos:start="5:26" pos:end="5:36">= <expr pos:start="5:28" pos:end="5:36"><name pos:start="5:28" pos:end="5:36"><name pos:start="5:28" pos:end="5:28">s</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:36">HEVClc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name>    <init pos:start="7:26" pos:end="7:34">= <expr pos:start="7:28" pos:end="7:34"><operator pos:start="7:28" pos:end="7:28">&amp;</operator><name pos:start="7:29" pos:end="7:34"><name pos:start="7:29" pos:end="7:30">lc</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:34">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">ctb_addr_ts</name></decl>, <decl pos:start="9:22" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:24">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><operator pos:start="13:5" pos:end="13:5">*</operator><name pos:start="13:6" pos:end="13:7">gb</name>              <operator pos:start="13:22" pos:end="13:22">=</operator> <name pos:start="13:24" pos:end="13:30"><name pos:start="13:24" pos:end="13:26">nal</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:30">gb</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:20">nal_unit_type</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <name pos:start="15:24" pos:end="15:32"><name pos:start="15:24" pos:end="15:26">nal</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:32">type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:40"><expr pos:start="17:5" pos:end="17:39"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:18">temporal_id</name></name>   <operator pos:start="17:22" pos:end="17:22">=</operator> <name pos:start="17:24" pos:end="17:39"><name pos:start="17:24" pos:end="17:26">nal</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:39">temporal_id</name></name></expr>;</expr_stmt>



    <switch pos:start="21:5" pos:end="267:5">switch <condition pos:start="21:12" pos:end="21:29">(<expr pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:28">nal_unit_type</name></name></expr>)</condition> <block pos:start="21:31" pos:end="267:5">{<block_content pos:start="23:5" pos:end="265:59">

    <case pos:start="23:5" pos:end="23:22">case <expr pos:start="23:10" pos:end="23:21"><name pos:start="23:10" pos:end="23:21">HEVC_NAL_VPS</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:59"><expr pos:start="25:9" pos:end="25:58"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:58"><name pos:start="25:15" pos:end="25:36">ff_hevc_decode_nal_vps</name><argument_list pos:start="25:37" pos:end="25:58">(<argument pos:start="25:38" pos:end="25:39"><expr pos:start="25:38" pos:end="25:39"><name pos:start="25:38" pos:end="25:39">gb</name></expr></argument>, <argument pos:start="25:42" pos:end="25:49"><expr pos:start="25:42" pos:end="25:49"><name pos:start="25:42" pos:end="25:49"><name pos:start="25:42" pos:end="25:42">s</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:49">avctx</name></name></expr></argument>, <argument pos:start="25:52" pos:end="25:57"><expr pos:start="25:52" pos:end="25:57"><operator pos:start="25:52" pos:end="25:52">&amp;</operator><name pos:start="25:53" pos:end="25:57"><name pos:start="25:53" pos:end="25:53">s</name><operator pos:start="25:54" pos:end="25:55">-&gt;</operator><name pos:start="25:56" pos:end="25:57">ps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:22"><if pos:start="27:9" pos:end="29:22">if <condition pos:start="27:12" pos:end="27:20">(<expr pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:15">ret</name> <operator pos:start="27:17" pos:end="27:17">&lt;</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:22"><block_content pos:start="29:13" pos:end="29:22">

            <goto pos:start="29:13" pos:end="29:22">goto <name pos:start="29:18" pos:end="29:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:22">case <expr pos:start="33:10" pos:end="33:21"><name pos:start="33:10" pos:end="33:21">HEVC_NAL_SPS</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="37:58"><expr pos:start="35:9" pos:end="37:57"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="37:57"><name pos:start="35:15" pos:end="35:36">ff_hevc_decode_nal_sps</name><argument_list pos:start="35:37" pos:end="37:57">(<argument pos:start="35:38" pos:end="35:39"><expr pos:start="35:38" pos:end="35:39"><name pos:start="35:38" pos:end="35:39">gb</name></expr></argument>, <argument pos:start="35:42" pos:end="35:49"><expr pos:start="35:42" pos:end="35:49"><name pos:start="35:42" pos:end="35:49"><name pos:start="35:42" pos:end="35:42">s</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:49">avctx</name></name></expr></argument>, <argument pos:start="35:52" pos:end="35:57"><expr pos:start="35:52" pos:end="35:57"><operator pos:start="35:52" pos:end="35:52">&amp;</operator><name pos:start="35:53" pos:end="35:57"><name pos:start="35:53" pos:end="35:53">s</name><operator pos:start="35:54" pos:end="35:55">-&gt;</operator><name pos:start="35:56" pos:end="35:57">ps</name></name></expr></argument>,

                                     <argument pos:start="37:38" pos:end="37:56"><expr pos:start="37:38" pos:end="37:56"><name pos:start="37:38" pos:end="37:56"><name pos:start="37:38" pos:end="37:38">s</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:56">apply_defdispwin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:22"><if pos:start="39:9" pos:end="41:22">if <condition pos:start="39:12" pos:end="39:20">(<expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">&lt;</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:22"><block_content pos:start="41:13" pos:end="41:22">

            <goto pos:start="41:13" pos:end="41:22">goto <name pos:start="41:18" pos:end="41:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:22">case <expr pos:start="45:10" pos:end="45:21"><name pos:start="45:10" pos:end="45:21">HEVC_NAL_PPS</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:59"><expr pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:58"><name pos:start="47:15" pos:end="47:36">ff_hevc_decode_nal_pps</name><argument_list pos:start="47:37" pos:end="47:58">(<argument pos:start="47:38" pos:end="47:39"><expr pos:start="47:38" pos:end="47:39"><name pos:start="47:38" pos:end="47:39">gb</name></expr></argument>, <argument pos:start="47:42" pos:end="47:49"><expr pos:start="47:42" pos:end="47:49"><name pos:start="47:42" pos:end="47:49"><name pos:start="47:42" pos:end="47:42">s</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:49">avctx</name></name></expr></argument>, <argument pos:start="47:52" pos:end="47:57"><expr pos:start="47:52" pos:end="47:57"><operator pos:start="47:52" pos:end="47:52">&amp;</operator><name pos:start="47:53" pos:end="47:57"><name pos:start="47:53" pos:end="47:53">s</name><operator pos:start="47:54" pos:end="47:55">-&gt;</operator><name pos:start="47:56" pos:end="47:57">ps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="51:22"><if pos:start="49:9" pos:end="51:22">if <condition pos:start="49:12" pos:end="49:20">(<expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">&lt;</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:22"><block_content pos:start="51:13" pos:end="51:22">

            <goto pos:start="51:13" pos:end="51:22">goto <name pos:start="51:18" pos:end="51:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:29">case <expr pos:start="55:10" pos:end="55:28"><name pos:start="55:10" pos:end="55:28">HEVC_NAL_SEI_PREFIX</name></expr>:</case>

    <case pos:start="57:5" pos:end="57:29">case <expr pos:start="57:10" pos:end="57:28"><name pos:start="57:10" pos:end="57:28">HEVC_NAL_SEI_SUFFIX</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:40"><expr pos:start="59:9" pos:end="59:39"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:39"><name pos:start="59:15" pos:end="59:36">ff_hevc_decode_nal_sei</name><argument_list pos:start="59:37" pos:end="59:39">(<argument pos:start="59:38" pos:end="59:38"><expr pos:start="59:38" pos:end="59:38"><name pos:start="59:38" pos:end="59:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="63:22"><if pos:start="61:9" pos:end="63:22">if <condition pos:start="61:12" pos:end="61:20">(<expr pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">&lt;</operator> <literal type="number" pos:start="61:19" pos:end="61:19">0</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:22"><block_content pos:start="63:13" pos:end="63:22">

            <goto pos:start="63:13" pos:end="63:22">goto <name pos:start="63:18" pos:end="63:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:26">case <expr pos:start="67:10" pos:end="67:25"><name pos:start="67:10" pos:end="67:25">HEVC_NAL_TRAIL_R</name></expr>:</case>

    <case pos:start="69:5" pos:end="69:26">case <expr pos:start="69:10" pos:end="69:25"><name pos:start="69:10" pos:end="69:25">HEVC_NAL_TRAIL_N</name></expr>:</case>

    <case pos:start="71:5" pos:end="71:24">case <expr pos:start="71:10" pos:end="71:23"><name pos:start="71:10" pos:end="71:23">HEVC_NAL_TSA_N</name></expr>:</case>

    <case pos:start="73:5" pos:end="73:24">case <expr pos:start="73:10" pos:end="73:23"><name pos:start="73:10" pos:end="73:23">HEVC_NAL_TSA_R</name></expr>:</case>

    <case pos:start="75:5" pos:end="75:25">case <expr pos:start="75:10" pos:end="75:24"><name pos:start="75:10" pos:end="75:24">HEVC_NAL_STSA_N</name></expr>:</case>

    <case pos:start="77:5" pos:end="77:25">case <expr pos:start="77:10" pos:end="77:24"><name pos:start="77:10" pos:end="77:24">HEVC_NAL_STSA_R</name></expr>:</case>

    <case pos:start="79:5" pos:end="79:27">case <expr pos:start="79:10" pos:end="79:26"><name pos:start="79:10" pos:end="79:26">HEVC_NAL_BLA_W_LP</name></expr>:</case>

    <case pos:start="81:5" pos:end="81:29">case <expr pos:start="81:10" pos:end="81:28"><name pos:start="81:10" pos:end="81:28">HEVC_NAL_BLA_W_RADL</name></expr>:</case>

    <case pos:start="83:5" pos:end="83:27">case <expr pos:start="83:10" pos:end="83:26"><name pos:start="83:10" pos:end="83:26">HEVC_NAL_BLA_N_LP</name></expr>:</case>

    <case pos:start="85:5" pos:end="85:29">case <expr pos:start="85:10" pos:end="85:28"><name pos:start="85:10" pos:end="85:28">HEVC_NAL_IDR_W_RADL</name></expr>:</case>

    <case pos:start="87:5" pos:end="87:27">case <expr pos:start="87:10" pos:end="87:26"><name pos:start="87:10" pos:end="87:26">HEVC_NAL_IDR_N_LP</name></expr>:</case>

    <case pos:start="89:5" pos:end="89:26">case <expr pos:start="89:10" pos:end="89:25"><name pos:start="89:10" pos:end="89:25">HEVC_NAL_CRA_NUT</name></expr>:</case>

    <case pos:start="91:5" pos:end="91:25">case <expr pos:start="91:10" pos:end="91:24"><name pos:start="91:10" pos:end="91:24">HEVC_NAL_RADL_N</name></expr>:</case>

    <case pos:start="93:5" pos:end="93:25">case <expr pos:start="93:10" pos:end="93:24"><name pos:start="93:10" pos:end="93:24">HEVC_NAL_RADL_R</name></expr>:</case>

    <case pos:start="95:5" pos:end="95:25">case <expr pos:start="95:10" pos:end="95:24"><name pos:start="95:10" pos:end="95:24">HEVC_NAL_RASL_N</name></expr>:</case>

    <case pos:start="97:5" pos:end="97:25">case <expr pos:start="97:10" pos:end="97:24"><name pos:start="97:10" pos:end="97:24">HEVC_NAL_RASL_R</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:34"><expr pos:start="99:9" pos:end="99:33"><name pos:start="99:9" pos:end="99:11">ret</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="99:33"><name pos:start="99:15" pos:end="99:30">hls_slice_header</name><argument_list pos:start="99:31" pos:end="99:33">(<argument pos:start="99:32" pos:end="99:32"><expr pos:start="99:32" pos:end="99:32"><name pos:start="99:32" pos:end="99:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="103:23"><if pos:start="101:9" pos:end="103:23">if <condition pos:start="101:12" pos:end="101:20">(<expr pos:start="101:13" pos:end="101:19"><name pos:start="101:13" pos:end="101:15">ret</name> <operator pos:start="101:17" pos:end="101:17">&lt;</operator> <literal type="number" pos:start="101:19" pos:end="101:19">0</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:23"><block_content pos:start="103:13" pos:end="103:23">

            <return pos:start="103:13" pos:end="103:23">return <expr pos:start="103:20" pos:end="103:22"><name pos:start="103:20" pos:end="103:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="107:9" pos:end="121:9"><if pos:start="107:9" pos:end="121:9">if <condition pos:start="107:12" pos:end="107:33">(<expr pos:start="107:13" pos:end="107:32"><name pos:start="107:13" pos:end="107:21"><name pos:start="107:13" pos:end="107:13">s</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:21">max_ra</name></name> <operator pos:start="107:23" pos:end="107:24">==</operator> <name pos:start="107:26" pos:end="107:32">INT_MAX</name></expr>)</condition> <block pos:start="107:35" pos:end="121:9">{<block_content pos:start="109:13" pos:end="119:13">

            <if_stmt pos:start="109:13" pos:end="119:13"><if pos:start="109:13" pos:end="113:13">if <condition pos:start="109:16" pos:end="109:66">(<expr pos:start="109:17" pos:end="109:65"><name pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:17">s</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:32">nal_unit_type</name></name> <operator pos:start="109:34" pos:end="109:35">==</operator> <name pos:start="109:37" pos:end="109:52">HEVC_NAL_CRA_NUT</name> <operator pos:start="109:54" pos:end="109:55">||</operator> <call pos:start="109:57" pos:end="109:65"><name pos:start="109:57" pos:end="109:62">IS_BLA</name><argument_list pos:start="109:63" pos:end="109:65">(<argument pos:start="109:64" pos:end="109:64"><expr pos:start="109:64" pos:end="109:64"><name pos:start="109:64" pos:end="109:64">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:68" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:35">

                <expr_stmt pos:start="111:17" pos:end="111:35"><expr pos:start="111:17" pos:end="111:34"><name pos:start="111:17" pos:end="111:25"><name pos:start="111:17" pos:end="111:17">s</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:25">max_ra</name></name> <operator pos:start="111:27" pos:end="111:27">=</operator> <name pos:start="111:29" pos:end="111:34"><name pos:start="111:29" pos:end="111:29">s</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:34">poc</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="113:15" pos:end="119:13">else <block pos:start="113:20" pos:end="119:13">{<block_content pos:start="115:17" pos:end="117:40">

                <if_stmt pos:start="115:17" pos:end="117:40"><if pos:start="115:17" pos:end="117:40">if <condition pos:start="115:20" pos:end="115:30">(<expr pos:start="115:21" pos:end="115:29"><call pos:start="115:21" pos:end="115:29"><name pos:start="115:21" pos:end="115:26">IS_IDR</name><argument_list pos:start="115:27" pos:end="115:29">(<argument pos:start="115:28" pos:end="115:28"><expr pos:start="115:28" pos:end="115:28"><name pos:start="115:28" pos:end="115:28">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="117:21" pos:end="117:40"><block_content pos:start="117:21" pos:end="117:40">

                    <expr_stmt pos:start="117:21" pos:end="117:40"><expr pos:start="117:21" pos:end="117:39"><name pos:start="117:21" pos:end="117:29"><name pos:start="117:21" pos:end="117:21">s</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:29">max_ra</name></name> <operator pos:start="117:31" pos:end="117:31">=</operator> <name pos:start="117:33" pos:end="117:39">INT_MIN</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="125:9" pos:end="139:9"><if pos:start="125:9" pos:end="133:9">if <condition pos:start="125:12" pos:end="127:32">(<expr pos:start="125:13" pos:end="127:31"><operator pos:start="125:13" pos:end="125:13">(</operator><name pos:start="125:14" pos:end="125:29"><name pos:start="125:14" pos:end="125:14">s</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:29">nal_unit_type</name></name> <operator pos:start="125:31" pos:end="125:32">==</operator> <name pos:start="125:34" pos:end="125:48">HEVC_NAL_RASL_R</name> <operator pos:start="125:50" pos:end="125:51">||</operator> <name pos:start="125:53" pos:end="125:68"><name pos:start="125:53" pos:end="125:53">s</name><operator pos:start="125:54" pos:end="125:55">-&gt;</operator><name pos:start="125:56" pos:end="125:68">nal_unit_type</name></name> <operator pos:start="125:70" pos:end="125:71">==</operator> <name pos:start="125:73" pos:end="125:87">HEVC_NAL_RASL_N</name><operator pos:start="125:88" pos:end="125:88">)</operator> <operator pos:start="125:90" pos:end="125:91">&amp;&amp;</operator>

            <name pos:start="127:13" pos:end="127:18"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:18">poc</name></name> <operator pos:start="127:20" pos:end="127:21">&lt;=</operator> <name pos:start="127:23" pos:end="127:31"><name pos:start="127:23" pos:end="127:23">s</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:31">max_ra</name></name></expr>)</condition> <block pos:start="127:34" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:18">

            <expr_stmt pos:start="129:13" pos:end="129:30"><expr pos:start="129:13" pos:end="129:29"><name pos:start="129:13" pos:end="129:25"><name pos:start="129:13" pos:end="129:13">s</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:25">is_decoded</name></name> <operator pos:start="129:27" pos:end="129:27">=</operator> <literal type="number" pos:start="129:29" pos:end="129:29">0</literal></expr>;</expr_stmt>

            <break pos:start="131:13" pos:end="131:18">break;</break>

        </block_content>}</block></if> <else pos:start="133:11" pos:end="139:9">else <block pos:start="133:16" pos:end="139:9">{<block_content pos:start="135:13" pos:end="137:36">

            <if_stmt pos:start="135:13" pos:end="137:36"><if pos:start="135:13" pos:end="137:36">if <condition pos:start="135:16" pos:end="135:74">(<expr pos:start="135:17" pos:end="135:73"><name pos:start="135:17" pos:end="135:32"><name pos:start="135:17" pos:end="135:17">s</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:32">nal_unit_type</name></name> <operator pos:start="135:34" pos:end="135:35">==</operator> <name pos:start="135:37" pos:end="135:51">HEVC_NAL_RASL_R</name> <operator pos:start="135:53" pos:end="135:54">&amp;&amp;</operator> <name pos:start="135:56" pos:end="135:61"><name pos:start="135:56" pos:end="135:56">s</name><operator pos:start="135:57" pos:end="135:58">-&gt;</operator><name pos:start="135:59" pos:end="135:61">poc</name></name> <operator pos:start="135:63" pos:end="135:63">&gt;</operator> <name pos:start="135:65" pos:end="135:73"><name pos:start="135:65" pos:end="135:65">s</name><operator pos:start="135:66" pos:end="135:67">-&gt;</operator><name pos:start="135:68" pos:end="135:73">max_ra</name></name></expr>)</condition><block type="pseudo" pos:start="137:17" pos:end="137:36"><block_content pos:start="137:17" pos:end="137:36">

                <expr_stmt pos:start="137:17" pos:end="137:36"><expr pos:start="137:17" pos:end="137:35"><name pos:start="137:17" pos:end="137:25"><name pos:start="137:17" pos:end="137:17">s</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:25">max_ra</name></name> <operator pos:start="137:27" pos:end="137:27">=</operator> <name pos:start="137:29" pos:end="137:35">INT_MIN</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="143:9" pos:end="157:9"><if pos:start="143:9" pos:end="151:9">if <condition pos:start="143:12" pos:end="143:42">(<expr pos:start="143:13" pos:end="143:41"><name pos:start="143:13" pos:end="143:41"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:17">sh</name><operator pos:start="143:18" pos:end="143:18">.</operator><name pos:start="143:19" pos:end="143:41">first_slice_in_pic_flag</name></name></expr>)</condition> <block pos:start="143:44" pos:end="151:9">{<block_content pos:start="145:13" pos:end="149:27">

            <expr_stmt pos:start="145:13" pos:end="145:38"><expr pos:start="145:13" pos:end="145:37"><name pos:start="145:13" pos:end="145:15">ret</name> <operator pos:start="145:17" pos:end="145:17">=</operator> <call pos:start="145:19" pos:end="145:37"><name pos:start="145:19" pos:end="145:34">hevc_frame_start</name><argument_list pos:start="145:35" pos:end="145:37">(<argument pos:start="145:36" pos:end="145:36"><expr pos:start="145:36" pos:end="145:36"><name pos:start="145:36" pos:end="145:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="147:13" pos:end="149:27"><if pos:start="147:13" pos:end="149:27">if <condition pos:start="147:16" pos:end="147:24">(<expr pos:start="147:17" pos:end="147:23"><name pos:start="147:17" pos:end="147:19">ret</name> <operator pos:start="147:21" pos:end="147:21">&lt;</operator> <literal type="number" pos:start="147:23" pos:end="147:23">0</literal></expr>)</condition><block type="pseudo" pos:start="149:17" pos:end="149:27"><block_content pos:start="149:17" pos:end="149:27">

                <return pos:start="149:17" pos:end="149:27">return <expr pos:start="149:24" pos:end="149:26"><name pos:start="149:24" pos:end="149:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="151:11" pos:end="157:9">else if <condition pos:start="151:19" pos:end="151:27">(<expr pos:start="151:20" pos:end="151:26"><operator pos:start="151:20" pos:end="151:20">!</operator><name pos:start="151:21" pos:end="151:26"><name pos:start="151:21" pos:end="151:21">s</name><operator pos:start="151:22" pos:end="151:23">-&gt;</operator><name pos:start="151:24" pos:end="151:26">ref</name></name></expr>)</condition> <block pos:start="151:29" pos:end="157:9">{<block_content pos:start="153:13" pos:end="155:22">

            <expr_stmt pos:start="153:13" pos:end="153:80"><expr pos:start="153:13" pos:end="153:79"><call pos:start="153:13" pos:end="153:79"><name pos:start="153:13" pos:end="153:18">av_log</name><argument_list pos:start="153:19" pos:end="153:79">(<argument pos:start="153:20" pos:end="153:27"><expr pos:start="153:20" pos:end="153:27"><name pos:start="153:20" pos:end="153:27"><name pos:start="153:20" pos:end="153:20">s</name><operator pos:start="153:21" pos:end="153:22">-&gt;</operator><name pos:start="153:23" pos:end="153:27">avctx</name></name></expr></argument>, <argument pos:start="153:30" pos:end="153:41"><expr pos:start="153:30" pos:end="153:41"><name pos:start="153:30" pos:end="153:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="153:44" pos:end="153:78"><expr pos:start="153:44" pos:end="153:78"><literal type="string" pos:start="153:44" pos:end="153:78">"First slice in a frame missing.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="155:13" pos:end="155:22">goto <name pos:start="155:18" pos:end="155:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="161:9" pos:end="171:9"><if pos:start="161:9" pos:end="171:9">if <condition pos:start="161:12" pos:end="161:50">(<expr pos:start="161:13" pos:end="161:49"><name pos:start="161:13" pos:end="161:28"><name pos:start="161:13" pos:end="161:13">s</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:28">nal_unit_type</name></name> <operator pos:start="161:30" pos:end="161:31">!=</operator> <name pos:start="161:33" pos:end="161:49"><name pos:start="161:33" pos:end="161:33">s</name><operator pos:start="161:34" pos:end="161:35">-&gt;</operator><name pos:start="161:36" pos:end="161:49">first_nal_type</name></name></expr>)</condition> <block pos:start="161:52" pos:end="171:9">{<block_content pos:start="163:13" pos:end="169:39">

            <expr_stmt pos:start="163:13" pos:end="167:56"><expr pos:start="163:13" pos:end="167:55"><call pos:start="163:13" pos:end="167:55"><name pos:start="163:13" pos:end="163:18">av_log</name><argument_list pos:start="163:19" pos:end="167:55">(<argument pos:start="163:20" pos:end="163:27"><expr pos:start="163:20" pos:end="163:27"><name pos:start="163:20" pos:end="163:27"><name pos:start="163:20" pos:end="163:20">s</name><operator pos:start="163:21" pos:end="163:22">-&gt;</operator><name pos:start="163:23" pos:end="163:27">avctx</name></name></expr></argument>, <argument pos:start="163:30" pos:end="163:41"><expr pos:start="163:30" pos:end="163:41"><name pos:start="163:30" pos:end="163:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="165:20" pos:end="165:69"><expr pos:start="165:20" pos:end="165:69"><literal type="string" pos:start="165:20" pos:end="165:69">"Non-matching NAL types of the VCL NALUs: %d %d\n"</literal></expr></argument>,

                   <argument pos:start="167:20" pos:end="167:36"><expr pos:start="167:20" pos:end="167:36"><name pos:start="167:20" pos:end="167:36"><name pos:start="167:20" pos:end="167:20">s</name><operator pos:start="167:21" pos:end="167:22">-&gt;</operator><name pos:start="167:23" pos:end="167:36">first_nal_type</name></name></expr></argument>, <argument pos:start="167:39" pos:end="167:54"><expr pos:start="167:39" pos:end="167:54"><name pos:start="167:39" pos:end="167:54"><name pos:start="167:39" pos:end="167:39">s</name><operator pos:start="167:40" pos:end="167:41">-&gt;</operator><name pos:start="167:42" pos:end="167:54">nal_unit_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="169:13" pos:end="169:39">return <expr pos:start="169:20" pos:end="169:38"><name pos:start="169:20" pos:end="169:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="175:9" pos:end="191:9"><if pos:start="175:9" pos:end="191:9">if <condition pos:start="175:12" pos:end="177:45">(<expr pos:start="175:13" pos:end="177:44"><operator pos:start="175:13" pos:end="175:13">!</operator><name pos:start="175:14" pos:end="175:47"><name pos:start="175:14" pos:end="175:14">s</name><operator pos:start="175:15" pos:end="175:16">-&gt;</operator><name pos:start="175:17" pos:end="175:18">sh</name><operator pos:start="175:19" pos:end="175:19">.</operator><name pos:start="175:20" pos:end="175:47">dependent_slice_segment_flag</name></name> <operator pos:start="175:49" pos:end="175:50">&amp;&amp;</operator>

            <name pos:start="177:13" pos:end="177:28"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:17">sh</name><operator pos:start="177:18" pos:end="177:18">.</operator><name pos:start="177:19" pos:end="177:28">slice_type</name></name> <operator pos:start="177:30" pos:end="177:31">!=</operator> <name pos:start="177:33" pos:end="177:44">HEVC_SLICE_I</name></expr>)</condition> <block pos:start="177:47" pos:end="191:9">{<block_content pos:start="179:13" pos:end="189:13">

            <expr_stmt pos:start="179:13" pos:end="179:39"><expr pos:start="179:13" pos:end="179:38"><name pos:start="179:13" pos:end="179:15">ret</name> <operator pos:start="179:17" pos:end="179:17">=</operator> <call pos:start="179:19" pos:end="179:38"><name pos:start="179:19" pos:end="179:35">ff_hevc_slice_rpl</name><argument_list pos:start="179:36" pos:end="179:38">(<argument pos:start="179:37" pos:end="179:37"><expr pos:start="179:37" pos:end="179:37"><name pos:start="179:37" pos:end="179:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="181:13" pos:end="189:13"><if pos:start="181:13" pos:end="189:13">if <condition pos:start="181:16" pos:end="181:24">(<expr pos:start="181:17" pos:end="181:23"><name pos:start="181:17" pos:end="181:19">ret</name> <operator pos:start="181:21" pos:end="181:21">&lt;</operator> <literal type="number" pos:start="181:23" pos:end="181:23">0</literal></expr>)</condition> <block pos:start="181:26" pos:end="189:13">{<block_content pos:start="183:17" pos:end="187:26">

                <expr_stmt pos:start="183:17" pos:end="185:90"><expr pos:start="183:17" pos:end="185:89"><call pos:start="183:17" pos:end="185:89"><name pos:start="183:17" pos:end="183:22">av_log</name><argument_list pos:start="183:23" pos:end="185:89">(<argument pos:start="183:24" pos:end="183:31"><expr pos:start="183:24" pos:end="183:31"><name pos:start="183:24" pos:end="183:31"><name pos:start="183:24" pos:end="183:24">s</name><operator pos:start="183:25" pos:end="183:26">-&gt;</operator><name pos:start="183:27" pos:end="183:31">avctx</name></name></expr></argument>, <argument pos:start="183:34" pos:end="183:47"><expr pos:start="183:34" pos:end="183:47"><name pos:start="183:34" pos:end="183:47">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="185:24" pos:end="185:88"><expr pos:start="185:24" pos:end="185:88"><literal type="string" pos:start="185:24" pos:end="185:88">"Error constructing the reference lists for the current slice.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="187:17" pos:end="187:26">goto <name pos:start="187:22" pos:end="187:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="195:9" pos:end="203:9"><if pos:start="195:9" pos:end="203:9">if <condition pos:start="195:12" pos:end="195:63">(<expr pos:start="195:13" pos:end="195:62"><name pos:start="195:13" pos:end="195:41"><name pos:start="195:13" pos:end="195:13">s</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:17">sh</name><operator pos:start="195:18" pos:end="195:18">.</operator><name pos:start="195:19" pos:end="195:41">first_slice_in_pic_flag</name></name> <operator pos:start="195:43" pos:end="195:44">&amp;&amp;</operator> <name pos:start="195:46" pos:end="195:62"><name pos:start="195:46" pos:end="195:46">s</name><operator pos:start="195:47" pos:end="195:48">-&gt;</operator><name pos:start="195:49" pos:end="195:53">avctx</name><operator pos:start="195:54" pos:end="195:55">-&gt;</operator><name pos:start="195:56" pos:end="195:62">hwaccel</name></name></expr>)</condition> <block pos:start="195:65" pos:end="203:9">{<block_content pos:start="197:13" pos:end="201:26">

            <expr_stmt pos:start="197:13" pos:end="197:68"><expr pos:start="197:13" pos:end="197:67"><name pos:start="197:13" pos:end="197:15">ret</name> <operator pos:start="197:17" pos:end="197:17">=</operator> <call pos:start="197:19" pos:end="197:67"><name pos:start="197:19" pos:end="197:48"><name pos:start="197:19" pos:end="197:19">s</name><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:26">avctx</name><operator pos:start="197:27" pos:end="197:28">-&gt;</operator><name pos:start="197:29" pos:end="197:35">hwaccel</name><operator pos:start="197:36" pos:end="197:37">-&gt;</operator><name pos:start="197:38" pos:end="197:48">start_frame</name></name><argument_list pos:start="197:49" pos:end="197:67">(<argument pos:start="197:50" pos:end="197:57"><expr pos:start="197:50" pos:end="197:57"><name pos:start="197:50" pos:end="197:57"><name pos:start="197:50" pos:end="197:50">s</name><operator pos:start="197:51" pos:end="197:52">-&gt;</operator><name pos:start="197:53" pos:end="197:57">avctx</name></name></expr></argument>, <argument pos:start="197:60" pos:end="197:63"><expr pos:start="197:60" pos:end="197:63"><name pos:start="197:60" pos:end="197:63">NULL</name></expr></argument>, <argument pos:start="197:66" pos:end="197:66"><expr pos:start="197:66" pos:end="197:66"><literal type="number" pos:start="197:66" pos:end="197:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="199:13" pos:end="201:26"><if pos:start="199:13" pos:end="201:26">if <condition pos:start="199:16" pos:end="199:24">(<expr pos:start="199:17" pos:end="199:23"><name pos:start="199:17" pos:end="199:19">ret</name> <operator pos:start="199:21" pos:end="199:21">&lt;</operator> <literal type="number" pos:start="199:23" pos:end="199:23">0</literal></expr>)</condition><block type="pseudo" pos:start="201:17" pos:end="201:26"><block_content pos:start="201:17" pos:end="201:26">

                <goto pos:start="201:17" pos:end="201:26">goto <name pos:start="201:22" pos:end="201:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="207:9" pos:end="241:9"><if pos:start="207:9" pos:end="215:9">if <condition pos:start="207:12" pos:end="207:30">(<expr pos:start="207:13" pos:end="207:29"><name pos:start="207:13" pos:end="207:29"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:20">avctx</name><operator pos:start="207:21" pos:end="207:22">-&gt;</operator><name pos:start="207:23" pos:end="207:29">hwaccel</name></name></expr>)</condition> <block pos:start="207:32" pos:end="215:9">{<block_content pos:start="209:13" pos:end="213:26">

            <expr_stmt pos:start="209:13" pos:end="209:90"><expr pos:start="209:13" pos:end="209:89"><name pos:start="209:13" pos:end="209:15">ret</name> <operator pos:start="209:17" pos:end="209:17">=</operator> <call pos:start="209:19" pos:end="209:89"><name pos:start="209:19" pos:end="209:49"><name pos:start="209:19" pos:end="209:19">s</name><operator pos:start="209:20" pos:end="209:21">-&gt;</operator><name pos:start="209:22" pos:end="209:26">avctx</name><operator pos:start="209:27" pos:end="209:28">-&gt;</operator><name pos:start="209:29" pos:end="209:35">hwaccel</name><operator pos:start="209:36" pos:end="209:37">-&gt;</operator><name pos:start="209:38" pos:end="209:49">decode_slice</name></name><argument_list pos:start="209:50" pos:end="209:89">(<argument pos:start="209:51" pos:end="209:58"><expr pos:start="209:51" pos:end="209:58"><name pos:start="209:51" pos:end="209:58"><name pos:start="209:51" pos:end="209:51">s</name><operator pos:start="209:52" pos:end="209:53">-&gt;</operator><name pos:start="209:54" pos:end="209:58">avctx</name></name></expr></argument>, <argument pos:start="209:61" pos:end="209:73"><expr pos:start="209:61" pos:end="209:73"><name pos:start="209:61" pos:end="209:73"><name pos:start="209:61" pos:end="209:63">nal</name><operator pos:start="209:64" pos:end="209:65">-&gt;</operator><name pos:start="209:66" pos:end="209:73">raw_data</name></name></expr></argument>, <argument pos:start="209:76" pos:end="209:88"><expr pos:start="209:76" pos:end="209:88"><name pos:start="209:76" pos:end="209:88"><name pos:start="209:76" pos:end="209:78">nal</name><operator pos:start="209:79" pos:end="209:80">-&gt;</operator><name pos:start="209:81" pos:end="209:88">raw_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="211:13" pos:end="213:26"><if pos:start="211:13" pos:end="213:26">if <condition pos:start="211:16" pos:end="211:24">(<expr pos:start="211:17" pos:end="211:23"><name pos:start="211:17" pos:end="211:19">ret</name> <operator pos:start="211:21" pos:end="211:21">&lt;</operator> <literal type="number" pos:start="211:23" pos:end="211:23">0</literal></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:26"><block_content pos:start="213:17" pos:end="213:26">

                <goto pos:start="213:17" pos:end="213:26">goto <name pos:start="213:22" pos:end="213:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="215:11" pos:end="241:9">else <block pos:start="215:16" pos:end="241:9">{<block_content pos:start="217:13" pos:end="239:13">

            <if_stmt pos:start="217:13" pos:end="223:48"><if pos:start="217:13" pos:end="219:57">if <condition pos:start="217:16" pos:end="217:75">(<expr pos:start="217:17" pos:end="217:74"><name pos:start="217:17" pos:end="217:33"><name pos:start="217:17" pos:end="217:17">s</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:33">threads_number</name></name> <operator pos:start="217:35" pos:end="217:35">&gt;</operator> <literal type="number" pos:start="217:37" pos:end="217:37">1</literal> <operator pos:start="217:39" pos:end="217:40">&amp;&amp;</operator> <name pos:start="217:42" pos:end="217:70"><name pos:start="217:42" pos:end="217:42">s</name><operator pos:start="217:43" pos:end="217:44">-&gt;</operator><name pos:start="217:45" pos:end="217:46">sh</name><operator pos:start="217:47" pos:end="217:47">.</operator><name pos:start="217:48" pos:end="217:70">num_entry_point_offsets</name></name> <operator pos:start="217:72" pos:end="217:72">&gt;</operator> <literal type="number" pos:start="217:74" pos:end="217:74">0</literal></expr>)</condition><block type="pseudo" pos:start="219:17" pos:end="219:57"><block_content pos:start="219:17" pos:end="219:57">

                <expr_stmt pos:start="219:17" pos:end="219:57"><expr pos:start="219:17" pos:end="219:56"><name pos:start="219:17" pos:end="219:27">ctb_addr_ts</name> <operator pos:start="219:29" pos:end="219:29">=</operator> <call pos:start="219:31" pos:end="219:56"><name pos:start="219:31" pos:end="219:48">hls_slice_data_wpp</name><argument_list pos:start="219:49" pos:end="219:56">(<argument pos:start="219:50" pos:end="219:50"><expr pos:start="219:50" pos:end="219:50"><name pos:start="219:50" pos:end="219:50">s</name></expr></argument>, <argument pos:start="219:53" pos:end="219:55"><expr pos:start="219:53" pos:end="219:55"><name pos:start="219:53" pos:end="219:55">nal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="221:13" pos:end="223:48">else<block type="pseudo" pos:start="223:17" pos:end="223:48"><block_content pos:start="223:17" pos:end="223:48">

                <expr_stmt pos:start="223:17" pos:end="223:48"><expr pos:start="223:17" pos:end="223:47"><name pos:start="223:17" pos:end="223:27">ctb_addr_ts</name> <operator pos:start="223:29" pos:end="223:29">=</operator> <call pos:start="223:31" pos:end="223:47"><name pos:start="223:31" pos:end="223:44">hls_slice_data</name><argument_list pos:start="223:45" pos:end="223:47">(<argument pos:start="223:46" pos:end="223:46"><expr pos:start="223:46" pos:end="223:46"><name pos:start="223:46" pos:end="223:46">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="225:13" pos:end="229:13"><if pos:start="225:13" pos:end="229:13">if <condition pos:start="225:16" pos:end="225:78">(<expr pos:start="225:17" pos:end="225:77"><name pos:start="225:17" pos:end="225:27">ctb_addr_ts</name> <operator pos:start="225:29" pos:end="225:30">&gt;=</operator> <operator pos:start="225:32" pos:end="225:32">(</operator><name pos:start="225:33" pos:end="225:52"><name pos:start="225:33" pos:end="225:33">s</name><operator pos:start="225:34" pos:end="225:35">-&gt;</operator><name pos:start="225:36" pos:end="225:37">ps</name><operator pos:start="225:38" pos:end="225:38">.</operator><name pos:start="225:39" pos:end="225:41">sps</name><operator pos:start="225:42" pos:end="225:43">-&gt;</operator><name pos:start="225:44" pos:end="225:52">ctb_width</name></name> <operator pos:start="225:54" pos:end="225:54">*</operator> <name pos:start="225:56" pos:end="225:76"><name pos:start="225:56" pos:end="225:56">s</name><operator pos:start="225:57" pos:end="225:58">-&gt;</operator><name pos:start="225:59" pos:end="225:60">ps</name><operator pos:start="225:61" pos:end="225:61">.</operator><name pos:start="225:62" pos:end="225:64">sps</name><operator pos:start="225:65" pos:end="225:66">-&gt;</operator><name pos:start="225:67" pos:end="225:76">ctb_height</name></name><operator pos:start="225:77" pos:end="225:77">)</operator></expr>)</condition> <block pos:start="225:80" pos:end="229:13">{<block_content pos:start="227:17" pos:end="227:34">

                <expr_stmt pos:start="227:17" pos:end="227:34"><expr pos:start="227:17" pos:end="227:33"><name pos:start="227:17" pos:end="227:29"><name pos:start="227:17" pos:end="227:17">s</name><operator pos:start="227:18" pos:end="227:19">-&gt;</operator><name pos:start="227:20" pos:end="227:29">is_decoded</name></name> <operator pos:start="227:31" pos:end="227:31">=</operator> <literal type="number" pos:start="227:33" pos:end="227:33">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="233:13" pos:end="239:13"><if pos:start="233:13" pos:end="239:13">if <condition pos:start="233:16" pos:end="233:32">(<expr pos:start="233:17" pos:end="233:31"><name pos:start="233:17" pos:end="233:27">ctb_addr_ts</name> <operator pos:start="233:29" pos:end="233:29">&lt;</operator> <literal type="number" pos:start="233:31" pos:end="233:31">0</literal></expr>)</condition> <block pos:start="233:34" pos:end="239:13">{<block_content pos:start="235:17" pos:end="237:26">

                <expr_stmt pos:start="235:17" pos:end="235:34"><expr pos:start="235:17" pos:end="235:33"><name pos:start="235:17" pos:end="235:19">ret</name> <operator pos:start="235:21" pos:end="235:21">=</operator> <name pos:start="235:23" pos:end="235:33">ctb_addr_ts</name></expr>;</expr_stmt>

                <goto pos:start="237:17" pos:end="237:26">goto <name pos:start="237:22" pos:end="237:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="243:9" pos:end="243:14">break;</break>

    <case pos:start="245:5" pos:end="245:26">case <expr pos:start="245:10" pos:end="245:25"><name pos:start="245:10" pos:end="245:25">HEVC_NAL_EOS_NUT</name></expr>:</case>

    <case pos:start="247:5" pos:end="247:26">case <expr pos:start="247:10" pos:end="247:25"><name pos:start="247:10" pos:end="247:25">HEVC_NAL_EOB_NUT</name></expr>:</case>

        <expr_stmt pos:start="249:9" pos:end="249:51"><expr pos:start="249:9" pos:end="249:50"><name pos:start="249:9" pos:end="249:21"><name pos:start="249:9" pos:end="249:9">s</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:21">seq_decode</name></name> <operator pos:start="249:23" pos:end="249:23">=</operator> <operator pos:start="249:25" pos:end="249:25">(</operator><name pos:start="249:26" pos:end="249:38"><name pos:start="249:26" pos:end="249:26">s</name><operator pos:start="249:27" pos:end="249:28">-&gt;</operator><name pos:start="249:29" pos:end="249:38">seq_decode</name></name> <operator pos:start="249:40" pos:end="249:40">+</operator> <literal type="number" pos:start="249:42" pos:end="249:42">1</literal><operator pos:start="249:43" pos:end="249:43">)</operator> <operator pos:start="249:45" pos:end="249:45">&amp;</operator> <literal type="number" pos:start="249:47" pos:end="249:50">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:32"><expr pos:start="251:9" pos:end="251:31"><name pos:start="251:9" pos:end="251:17"><name pos:start="251:9" pos:end="251:9">s</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:17">max_ra</name></name>     <operator pos:start="251:23" pos:end="251:23">=</operator> <name pos:start="251:25" pos:end="251:31">INT_MAX</name></expr>;</expr_stmt>

        <break pos:start="253:9" pos:end="253:14">break;</break>

    <case pos:start="255:5" pos:end="255:22">case <expr pos:start="255:10" pos:end="255:21"><name pos:start="255:10" pos:end="255:21">HEVC_NAL_AUD</name></expr>:</case>

    <case pos:start="257:5" pos:end="257:25">case <expr pos:start="257:10" pos:end="257:24"><name pos:start="257:10" pos:end="257:24">HEVC_NAL_FD_NUT</name></expr>:</case>

        <break pos:start="259:9" pos:end="259:14">break;</break>

    <default pos:start="261:5" pos:end="261:12">default:</default>

        <expr_stmt pos:start="263:9" pos:end="265:59"><expr pos:start="263:9" pos:end="265:58"><call pos:start="263:9" pos:end="265:58"><name pos:start="263:9" pos:end="263:14">av_log</name><argument_list pos:start="263:15" pos:end="265:58">(<argument pos:start="263:16" pos:end="263:23"><expr pos:start="263:16" pos:end="263:23"><name pos:start="263:16" pos:end="263:23"><name pos:start="263:16" pos:end="263:16">s</name><operator pos:start="263:17" pos:end="263:18">-&gt;</operator><name pos:start="263:19" pos:end="263:23">avctx</name></name></expr></argument>, <argument pos:start="263:26" pos:end="263:36"><expr pos:start="263:26" pos:end="263:36"><name pos:start="263:26" pos:end="263:36">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="265:16" pos:end="265:39"><expr pos:start="265:16" pos:end="265:39"><literal type="string" pos:start="265:16" pos:end="265:39">"Skipping NAL unit %d\n"</literal></expr></argument>, <argument pos:start="265:42" pos:end="265:57"><expr pos:start="265:42" pos:end="265:57"><name pos:start="265:42" pos:end="265:57"><name pos:start="265:42" pos:end="265:42">s</name><operator pos:start="265:43" pos:end="265:44">-&gt;</operator><name pos:start="265:45" pos:end="265:57">nal_unit_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <return pos:start="271:5" pos:end="271:13">return <expr pos:start="271:12" pos:end="271:12"><literal type="number" pos:start="271:12" pos:end="271:12">0</literal></expr>;</return>

<label pos:start="273:1" pos:end="273:5"><name pos:start="273:1" pos:end="273:4">fail</name>:</label>

    <if_stmt pos:start="275:5" pos:end="277:19"><if pos:start="275:5" pos:end="277:19">if <condition pos:start="275:8" pos:end="275:50">(<expr pos:start="275:9" pos:end="275:49"><name pos:start="275:9" pos:end="275:33"><name pos:start="275:9" pos:end="275:9">s</name><operator pos:start="275:10" pos:end="275:11">-&gt;</operator><name pos:start="275:12" pos:end="275:16">avctx</name><operator pos:start="275:17" pos:end="275:18">-&gt;</operator><name pos:start="275:19" pos:end="275:33">err_recognition</name></name> <operator pos:start="275:35" pos:end="275:35">&amp;</operator> <name pos:start="275:37" pos:end="275:49">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="277:9" pos:end="277:19"><block_content pos:start="277:9" pos:end="277:19">

        <return pos:start="277:9" pos:end="277:19">return <expr pos:start="277:16" pos:end="277:18"><name pos:start="277:16" pos:end="277:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="279:5" pos:end="279:13">return <expr pos:start="279:12" pos:end="279:12"><literal type="number" pos:start="279:12" pos:end="279:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
