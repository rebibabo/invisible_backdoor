<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6337.c" pos:tabs="8"><function pos:start="1:1" pos:end="539:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">flac_encode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="539:1">{<block_content pos:start="5:5" pos:end="537:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">freq</name> <init pos:start="5:14" pos:end="5:33">= <expr pos:start="5:16" pos:end="5:33"><name pos:start="5:16" pos:end="5:33"><name pos:start="5:16" pos:end="5:20">avctx</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:33">sample_rate</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">channels</name> <init pos:start="7:18" pos:end="7:34">= <expr pos:start="7:20" pos:end="7:34"><name pos:start="7:20" pos:end="7:34"><name pos:start="7:20" pos:end="7:24">avctx</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:34">channels</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">FlacEncodeContext</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">s</name> <init pos:start="9:26" pos:end="9:43">= <expr pos:start="9:28" pos:end="9:43"><name pos:start="9:28" pos:end="9:43"><name pos:start="9:28" pos:end="9:32">avctx</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:16">level</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:23">streaminfo</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:12">avctx</name></name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:20">avctx</name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:16">dsputil_init</name><argument_list pos:start="21:17" pos:end="21:32">(<argument pos:start="21:18" pos:end="21:24"><expr pos:start="21:18" pos:end="21:24"><operator pos:start="21:18" pos:end="21:18">&amp;</operator><name pos:start="21:19" pos:end="21:24"><name pos:start="21:19" pos:end="21:19">s</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:24">dsp</name></name></expr></argument>, <argument pos:start="21:27" pos:end="21:31"><expr pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:31">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if <condition pos:start="25:8" pos:end="25:44">(<expr pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:25">sample_fmt</name></name> <operator pos:start="25:27" pos:end="25:28">!=</operator> <name pos:start="25:30" pos:end="25:43">SAMPLE_FMT_S16</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:18"><if pos:start="31:5" pos:end="33:18">if <condition pos:start="31:8" pos:end="31:53">(<expr pos:start="31:9" pos:end="31:52"><name pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:16">channels</name> <argument_list type="generic" pos:start="31:18" pos:end="31:34">&lt; <argument pos:start="31:20" pos:end="31:32"><expr pos:start="31:20" pos:end="31:32"><literal type="number" pos:start="31:20" pos:end="31:20">1</literal> <operator pos:start="31:22" pos:end="31:23">||</operator> <name pos:start="31:25" pos:end="31:32">channels</name></expr></argument> &gt;</argument_list></name> <name pos:start="31:36" pos:end="31:52">FLAC_MAX_CHANNELS</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:18"><block_content pos:start="33:9" pos:end="33:18">

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:15">channels</name></name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:26">channels</name></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:34">/* find samplerate in table */</comment>

    <if_stmt pos:start="41:5" pos:end="43:18"><if pos:start="41:5" pos:end="43:18">if <condition pos:start="41:8" pos:end="41:17">(<expr pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:12">freq</name> <operator pos:start="41:14" pos:end="41:14">&lt;</operator> <literal type="number" pos:start="41:16" pos:end="41:16">1</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:18"><block_content pos:start="43:9" pos:end="43:18">

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="45:5" pos:end="59:5">for <control pos:start="45:9" pos:end="45:28">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">4</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:23"><expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <literal type="number" pos:start="45:21" pos:end="45:22">12</literal></expr>;</condition> <incr pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><name pos:start="45:25" pos:end="45:25">i</name><operator pos:start="45:26" pos:end="45:27">++</operator></expr></incr>)</control> <block pos:start="45:30" pos:end="59:5">{<block_content pos:start="47:9" pos:end="57:9">

        <if_stmt pos:start="47:9" pos:end="57:9"><if pos:start="47:9" pos:end="57:9">if <condition pos:start="47:12" pos:end="47:49">(<expr pos:start="47:13" pos:end="47:48"><name pos:start="47:13" pos:end="47:16">freq</name> <operator pos:start="47:18" pos:end="47:19">==</operator> <name pos:start="47:21" pos:end="47:48"><name pos:start="47:21" pos:end="47:45">ff_flac_sample_rate_table</name><index pos:start="47:46" pos:end="47:48">[<expr pos:start="47:47" pos:end="47:47"><name pos:start="47:47" pos:end="47:47">i</name></expr>]</index></name></expr>)</condition> <block pos:start="47:51" pos:end="57:9">{<block_content pos:start="49:13" pos:end="55:18">

            <expr_stmt pos:start="49:13" pos:end="49:57"><expr pos:start="49:13" pos:end="49:56"><name pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:25">samplerate</name></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:56"><name pos:start="49:29" pos:end="49:53">ff_flac_sample_rate_table</name><index pos:start="49:54" pos:end="49:56">[<expr pos:start="49:55" pos:end="49:55"><name pos:start="49:55" pos:end="49:55">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:30"><expr pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:22">sr_code</name><index pos:start="51:23" pos:end="51:25">[<expr pos:start="51:24" pos:end="51:24"><literal type="number" pos:start="51:24" pos:end="51:24">0</literal></expr>]</index></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <name pos:start="51:29" pos:end="51:29">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:30"><expr pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:22">sr_code</name><index pos:start="53:23" pos:end="53:25">[<expr pos:start="53:24" pos:end="53:24"><literal type="number" pos:start="53:24" pos:end="53:24">1</literal></expr>]</index></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <literal type="number" pos:start="53:29" pos:end="53:29">0</literal></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="61:5" pos:end="61:53">/* if not in table, samplerate is non-standard */</comment>

    <if_stmt pos:start="63:5" pos:end="91:5"><if pos:start="63:5" pos:end="91:5">if <condition pos:start="63:8" pos:end="63:16">(<expr pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:9">i</name> <operator pos:start="63:11" pos:end="63:12">==</operator> <literal type="number" pos:start="63:14" pos:end="63:15">12</literal></expr>)</condition> <block pos:start="63:18" pos:end="91:5">{<block_content pos:start="65:9" pos:end="89:29">

        <if_stmt pos:start="65:9" pos:end="87:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:46">(<expr pos:start="65:13" pos:end="65:45"><name pos:start="65:13" pos:end="65:16">freq</name> <operator pos:start="65:18" pos:end="65:18">%</operator> <literal type="number" pos:start="65:20" pos:end="65:23">1000</literal> <operator pos:start="65:25" pos:end="65:26">==</operator> <literal type="number" pos:start="65:28" pos:end="65:28">0</literal> <operator pos:start="65:30" pos:end="65:31">&amp;&amp;</operator> <name pos:start="65:33" pos:end="65:36">freq</name> <operator pos:start="65:38" pos:end="65:38">&lt;</operator> <literal type="number" pos:start="65:40" pos:end="65:45">255000</literal></expr>)</condition> <block pos:start="65:48" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:40">

            <expr_stmt pos:start="67:13" pos:end="67:31"><expr pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:22">sr_code</name><index pos:start="67:23" pos:end="67:25">[<expr pos:start="67:24" pos:end="67:24"><literal type="number" pos:start="67:24" pos:end="67:24">0</literal></expr>]</index></name> <operator pos:start="67:27" pos:end="67:27">=</operator> <literal type="number" pos:start="67:29" pos:end="67:30">12</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:40"><expr pos:start="69:13" pos:end="69:39"><name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:22">sr_code</name><index pos:start="69:23" pos:end="69:25">[<expr pos:start="69:24" pos:end="69:24"><literal type="number" pos:start="69:24" pos:end="69:24">1</literal></expr>]</index></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:32">freq</name> <operator pos:start="69:34" pos:end="69:34">/</operator> <literal type="number" pos:start="69:36" pos:end="69:39">1000</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="71:11" pos:end="77:9">else if <condition pos:start="71:19" pos:end="71:51">(<expr pos:start="71:20" pos:end="71:50"><name pos:start="71:20" pos:end="71:23">freq</name> <operator pos:start="71:25" pos:end="71:25">%</operator> <literal type="number" pos:start="71:27" pos:end="71:28">10</literal> <operator pos:start="71:30" pos:end="71:31">==</operator> <literal type="number" pos:start="71:33" pos:end="71:33">0</literal> <operator pos:start="71:35" pos:end="71:36">&amp;&amp;</operator> <name pos:start="71:38" pos:end="71:41">freq</name> <operator pos:start="71:43" pos:end="71:43">&lt;</operator> <literal type="number" pos:start="71:45" pos:end="71:50">655350</literal></expr>)</condition> <block pos:start="71:53" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:38">

            <expr_stmt pos:start="73:13" pos:end="73:31"><expr pos:start="73:13" pos:end="73:30"><name pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:22">sr_code</name><index pos:start="73:23" pos:end="73:25">[<expr pos:start="73:24" pos:end="73:24"><literal type="number" pos:start="73:24" pos:end="73:24">0</literal></expr>]</index></name> <operator pos:start="73:27" pos:end="73:27">=</operator> <literal type="number" pos:start="73:29" pos:end="73:30">14</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:38"><expr pos:start="75:13" pos:end="75:37"><name pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:22">sr_code</name><index pos:start="75:23" pos:end="75:25">[<expr pos:start="75:24" pos:end="75:24"><literal type="number" pos:start="75:24" pos:end="75:24">1</literal></expr>]</index></name> <operator pos:start="75:27" pos:end="75:27">=</operator> <name pos:start="75:29" pos:end="75:32">freq</name> <operator pos:start="75:34" pos:end="75:34">/</operator> <literal type="number" pos:start="75:36" pos:end="75:37">10</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="77:11" pos:end="83:9">else if <condition pos:start="77:19" pos:end="77:32">(<expr pos:start="77:20" pos:end="77:31"><name pos:start="77:20" pos:end="77:23">freq</name> <operator pos:start="77:25" pos:end="77:25">&lt;</operator> <literal type="number" pos:start="77:27" pos:end="77:31">65535</literal></expr>)</condition> <block pos:start="77:34" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:33">

            <expr_stmt pos:start="79:13" pos:end="79:31"><expr pos:start="79:13" pos:end="79:30"><name pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:22">sr_code</name><index pos:start="79:23" pos:end="79:25">[<expr pos:start="79:24" pos:end="79:24"><literal type="number" pos:start="79:24" pos:end="79:24">0</literal></expr>]</index></name> <operator pos:start="79:27" pos:end="79:27">=</operator> <literal type="number" pos:start="79:29" pos:end="79:30">13</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:33"><expr pos:start="81:13" pos:end="81:32"><name pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:22">sr_code</name><index pos:start="81:23" pos:end="81:25">[<expr pos:start="81:24" pos:end="81:24"><literal type="number" pos:start="81:24" pos:end="81:24">1</literal></expr>]</index></name> <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:32">freq</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="83:11" pos:end="87:9">else <block pos:start="83:16" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:22">

            <return pos:start="85:13" pos:end="85:22">return <expr pos:start="85:20" pos:end="85:21"><operator pos:start="85:20" pos:end="85:20">-</operator><literal type="number" pos:start="85:21" pos:end="85:21">1</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:21">samplerate</name></name> <operator pos:start="89:23" pos:end="89:23">=</operator> <name pos:start="89:25" pos:end="89:28">freq</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="95:5" pos:end="95:75">/* set compression option defaults based on avctx-&gt;compression_level */</comment>

    <if_stmt pos:start="97:5" pos:end="103:64"><if pos:start="97:5" pos:end="99:41">if <condition pos:start="97:8" pos:end="97:37">(<expr pos:start="97:9" pos:end="97:36"><name pos:start="97:9" pos:end="97:32"><name pos:start="97:9" pos:end="97:13">avctx</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:32">compression_level</name></name> <operator pos:start="97:34" pos:end="97:34">&lt;</operator> <literal type="number" pos:start="97:36" pos:end="97:36">0</literal></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:41"><block_content pos:start="99:9" pos:end="99:41">

        <expr_stmt pos:start="99:9" pos:end="99:41"><expr pos:start="99:9" pos:end="99:40"><name pos:start="99:9" pos:end="99:36"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:18">options</name><operator pos:start="99:19" pos:end="99:19">.</operator><name pos:start="99:20" pos:end="99:36">compression_level</name></name> <operator pos:start="99:38" pos:end="99:38">=</operator> <literal type="number" pos:start="99:40" pos:end="99:40">5</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="101:5" pos:end="103:64">else<block type="pseudo" pos:start="103:9" pos:end="103:64"><block_content pos:start="103:9" pos:end="103:64">

        <expr_stmt pos:start="103:9" pos:end="103:64"><expr pos:start="103:9" pos:end="103:63"><name pos:start="103:9" pos:end="103:36"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:18">options</name><operator pos:start="103:19" pos:end="103:19">.</operator><name pos:start="103:20" pos:end="103:36">compression_level</name></name> <operator pos:start="103:38" pos:end="103:38">=</operator> <name pos:start="103:40" pos:end="103:63"><name pos:start="103:40" pos:end="103:44">avctx</name><operator pos:start="103:45" pos:end="103:46">-&gt;</operator><name pos:start="103:47" pos:end="103:63">compression_level</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:84"><expr pos:start="105:5" pos:end="105:83"><call pos:start="105:5" pos:end="105:83"><name pos:start="105:5" pos:end="105:10">av_log</name><argument_list pos:start="105:11" pos:end="105:83">(<argument pos:start="105:12" pos:end="105:16"><expr pos:start="105:12" pos:end="105:16"><name pos:start="105:12" pos:end="105:16">avctx</name></expr></argument>, <argument pos:start="105:19" pos:end="105:30"><expr pos:start="105:19" pos:end="105:30"><name pos:start="105:19" pos:end="105:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="105:33" pos:end="105:52"><expr pos:start="105:33" pos:end="105:52"><literal type="string" pos:start="105:33" pos:end="105:52">" compression: %d\n"</literal></expr></argument>, <argument pos:start="105:55" pos:end="105:82"><expr pos:start="105:55" pos:end="105:82"><name pos:start="105:55" pos:end="105:82"><name pos:start="105:55" pos:end="105:55">s</name><operator pos:start="105:56" pos:end="105:57">-&gt;</operator><name pos:start="105:58" pos:end="105:64">options</name><operator pos:start="105:65" pos:end="105:65">.</operator><name pos:start="105:66" pos:end="105:82">compression_level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:41"><expr pos:start="109:5" pos:end="109:40"><name pos:start="109:5" pos:end="109:9">level</name> <operator pos:start="109:11" pos:end="109:11">=</operator> <name pos:start="109:13" pos:end="109:40"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:22">options</name><operator pos:start="109:23" pos:end="109:23">.</operator><name pos:start="109:24" pos:end="109:40">compression_level</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="119:5"><if pos:start="111:5" pos:end="119:5">if <condition pos:start="111:8" pos:end="111:19">(<expr pos:start="111:9" pos:end="111:18"><name pos:start="111:9" pos:end="111:13">level</name> <operator pos:start="111:15" pos:end="111:15">&gt;</operator> <literal type="number" pos:start="111:17" pos:end="111:18">12</literal></expr>)</condition> <block pos:start="111:21" pos:end="119:5">{<block_content pos:start="113:9" pos:end="117:18">

        <expr_stmt pos:start="113:9" pos:end="115:45"><expr pos:start="113:9" pos:end="115:44"><call pos:start="113:9" pos:end="115:44"><name pos:start="113:9" pos:end="113:14">av_log</name><argument_list pos:start="113:15" pos:end="115:44">(<argument pos:start="113:16" pos:end="113:20"><expr pos:start="113:16" pos:end="113:20"><name pos:start="113:16" pos:end="113:20">avctx</name></expr></argument>, <argument pos:start="113:23" pos:end="113:34"><expr pos:start="113:23" pos:end="113:34"><name pos:start="113:23" pos:end="113:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:37" pos:end="113:69"><expr pos:start="113:37" pos:end="113:69"><literal type="string" pos:start="113:37" pos:end="113:69">"invalid compression level: %d\n"</literal></expr></argument>,

               <argument pos:start="115:16" pos:end="115:43"><expr pos:start="115:16" pos:end="115:43"><name pos:start="115:16" pos:end="115:43"><name pos:start="115:16" pos:end="115:16">s</name><operator pos:start="115:17" pos:end="115:18">-&gt;</operator><name pos:start="115:19" pos:end="115:25">options</name><operator pos:start="115:26" pos:end="115:26">.</operator><name pos:start="115:27" pos:end="115:43">compression_level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="117:9" pos:end="117:18">return <expr pos:start="117:16" pos:end="117:17"><operator pos:start="117:16" pos:end="117:16">-</operator><literal type="number" pos:start="117:17" pos:end="117:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:101"><expr pos:start="123:5" pos:end="123:100"><name pos:start="123:5" pos:end="123:28"><name pos:start="123:5" pos:end="123:5">s</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:14">options</name><operator pos:start="123:15" pos:end="123:15">.</operator><name pos:start="123:16" pos:end="123:28">block_time_ms</name></name> <operator pos:start="123:30" pos:end="123:30">=</operator> <operator pos:start="123:32" pos:end="123:32">(</operator><operator pos:start="123:33" pos:end="123:33">(</operator><name pos:start="123:34" pos:end="123:38"><name pos:start="123:34" pos:end="123:36">int</name><index pos:start="123:37" pos:end="123:38">[]</index></name><operator pos:start="123:39" pos:end="123:39">)</operator><block pos:start="123:40" pos:end="123:92">{ <expr pos:start="123:42" pos:end="123:43"><literal type="number" pos:start="123:42" pos:end="123:43">27</literal></expr>, <expr pos:start="123:46" pos:end="123:47"><literal type="number" pos:start="123:46" pos:end="123:47">27</literal></expr>, <expr pos:start="123:50" pos:end="123:51"><literal type="number" pos:start="123:50" pos:end="123:51">27</literal></expr>,<expr pos:start="123:53" pos:end="123:55"><literal type="number" pos:start="123:53" pos:end="123:55">105</literal></expr>,<expr pos:start="123:57" pos:end="123:59"><literal type="number" pos:start="123:57" pos:end="123:59">105</literal></expr>,<expr pos:start="123:61" pos:end="123:63"><literal type="number" pos:start="123:61" pos:end="123:63">105</literal></expr>,<expr pos:start="123:65" pos:end="123:67"><literal type="number" pos:start="123:65" pos:end="123:67">105</literal></expr>,<expr pos:start="123:69" pos:end="123:71"><literal type="number" pos:start="123:69" pos:end="123:71">105</literal></expr>,<expr pos:start="123:73" pos:end="123:75"><literal type="number" pos:start="123:73" pos:end="123:75">105</literal></expr>,<expr pos:start="123:77" pos:end="123:79"><literal type="number" pos:start="123:77" pos:end="123:79">105</literal></expr>,<expr pos:start="123:81" pos:end="123:83"><literal type="number" pos:start="123:81" pos:end="123:83">105</literal></expr>,<expr pos:start="123:85" pos:end="123:87"><literal type="number" pos:start="123:85" pos:end="123:87">105</literal></expr>,<expr pos:start="123:89" pos:end="123:91"><literal type="number" pos:start="123:89" pos:end="123:91">105</literal></expr>}</block><operator pos:start="123:93" pos:end="123:93">)</operator><index pos:start="123:94" pos:end="123:100">[<expr pos:start="123:95" pos:end="123:99"><name pos:start="123:95" pos:end="123:99">level</name></expr>]</index></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="135:71"><expr pos:start="127:5" pos:end="135:70"><name pos:start="127:5" pos:end="127:23"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:14">options</name><operator pos:start="127:15" pos:end="127:15">.</operator><name pos:start="127:16" pos:end="127:23">lpc_type</name></name>      <operator pos:start="127:30" pos:end="127:30">=</operator> <operator pos:start="127:32" pos:end="127:32">(</operator><operator pos:start="127:33" pos:end="127:33">(</operator><name pos:start="127:34" pos:end="127:38"><name pos:start="127:34" pos:end="127:36">int</name><index pos:start="127:37" pos:end="127:38">[]</index></name><operator pos:start="127:39" pos:end="127:39">)</operator><block pos:start="127:40" pos:end="135:62">{ <expr pos:start="127:42" pos:end="127:58"><name pos:start="127:42" pos:end="127:58">AV_LPC_TYPE_FIXED</name></expr>,    <expr pos:start="127:64" pos:end="127:80"><name pos:start="127:64" pos:end="127:80">AV_LPC_TYPE_FIXED</name></expr>,    <expr pos:start="127:86" pos:end="127:102"><name pos:start="127:86" pos:end="127:102">AV_LPC_TYPE_FIXED</name></expr>,

                                         <expr pos:start="129:42" pos:end="129:61"><name pos:start="129:42" pos:end="129:61">AV_LPC_TYPE_LEVINSON</name></expr>, <expr pos:start="129:64" pos:end="129:83"><name pos:start="129:64" pos:end="129:83">AV_LPC_TYPE_LEVINSON</name></expr>, <expr pos:start="129:86" pos:end="129:105"><name pos:start="129:86" pos:end="129:105">AV_LPC_TYPE_LEVINSON</name></expr>,

                                         <expr pos:start="131:42" pos:end="131:61"><name pos:start="131:42" pos:end="131:61">AV_LPC_TYPE_LEVINSON</name></expr>, <expr pos:start="131:64" pos:end="131:83"><name pos:start="131:64" pos:end="131:83">AV_LPC_TYPE_LEVINSON</name></expr>, <expr pos:start="131:86" pos:end="131:105"><name pos:start="131:86" pos:end="131:105">AV_LPC_TYPE_LEVINSON</name></expr>,

                                         <expr pos:start="133:42" pos:end="133:61"><name pos:start="133:42" pos:end="133:61">AV_LPC_TYPE_LEVINSON</name></expr>, <expr pos:start="133:64" pos:end="133:83"><name pos:start="133:64" pos:end="133:83">AV_LPC_TYPE_LEVINSON</name></expr>, <expr pos:start="133:86" pos:end="133:105"><name pos:start="133:86" pos:end="133:105">AV_LPC_TYPE_LEVINSON</name></expr>,

                                         <expr pos:start="135:42" pos:end="135:61"><name pos:start="135:42" pos:end="135:61">AV_LPC_TYPE_LEVINSON</name></expr>}</block><operator pos:start="135:63" pos:end="135:63">)</operator><index pos:start="135:64" pos:end="135:70">[<expr pos:start="135:65" pos:end="135:69"><name pos:start="135:65" pos:end="135:69">level</name></expr>]</index></expr>;</expr_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:108"><expr pos:start="139:5" pos:end="139:107"><name pos:start="139:5" pos:end="139:35"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:14">options</name><operator pos:start="139:15" pos:end="139:15">.</operator><name pos:start="139:16" pos:end="139:35">min_prediction_order</name></name> <operator pos:start="139:37" pos:end="139:37">=</operator> <operator pos:start="139:39" pos:end="139:39">(</operator><operator pos:start="139:40" pos:end="139:40">(</operator><name pos:start="139:41" pos:end="139:45"><name pos:start="139:41" pos:end="139:43">int</name><index pos:start="139:44" pos:end="139:45">[]</index></name><operator pos:start="139:46" pos:end="139:46">)</operator><block pos:start="139:47" pos:end="139:99">{  <expr pos:start="139:50" pos:end="139:50"><literal type="number" pos:start="139:50" pos:end="139:50">2</literal></expr>,  <expr pos:start="139:54" pos:end="139:54"><literal type="number" pos:start="139:54" pos:end="139:54">0</literal></expr>,  <expr pos:start="139:58" pos:end="139:58"><literal type="number" pos:start="139:58" pos:end="139:58">0</literal></expr>,  <expr pos:start="139:62" pos:end="139:62"><literal type="number" pos:start="139:62" pos:end="139:62">1</literal></expr>,  <expr pos:start="139:66" pos:end="139:66"><literal type="number" pos:start="139:66" pos:end="139:66">1</literal></expr>,  <expr pos:start="139:70" pos:end="139:70"><literal type="number" pos:start="139:70" pos:end="139:70">1</literal></expr>,  <expr pos:start="139:74" pos:end="139:74"><literal type="number" pos:start="139:74" pos:end="139:74">1</literal></expr>,  <expr pos:start="139:78" pos:end="139:78"><literal type="number" pos:start="139:78" pos:end="139:78">1</literal></expr>,  <expr pos:start="139:82" pos:end="139:82"><literal type="number" pos:start="139:82" pos:end="139:82">1</literal></expr>,  <expr pos:start="139:86" pos:end="139:86"><literal type="number" pos:start="139:86" pos:end="139:86">1</literal></expr>,  <expr pos:start="139:90" pos:end="139:90"><literal type="number" pos:start="139:90" pos:end="139:90">1</literal></expr>,  <expr pos:start="139:94" pos:end="139:94"><literal type="number" pos:start="139:94" pos:end="139:94">1</literal></expr>,  <expr pos:start="139:98" pos:end="139:98"><literal type="number" pos:start="139:98" pos:end="139:98">1</literal></expr>}</block><operator pos:start="139:100" pos:end="139:100">)</operator><index pos:start="139:101" pos:end="139:107">[<expr pos:start="139:102" pos:end="139:106"><name pos:start="139:102" pos:end="139:106">level</name></expr>]</index></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:108"><expr pos:start="141:5" pos:end="141:107"><name pos:start="141:5" pos:end="141:35"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:14">options</name><operator pos:start="141:15" pos:end="141:15">.</operator><name pos:start="141:16" pos:end="141:35">max_prediction_order</name></name> <operator pos:start="141:37" pos:end="141:37">=</operator> <operator pos:start="141:39" pos:end="141:39">(</operator><operator pos:start="141:40" pos:end="141:40">(</operator><name pos:start="141:41" pos:end="141:45"><name pos:start="141:41" pos:end="141:43">int</name><index pos:start="141:44" pos:end="141:45">[]</index></name><operator pos:start="141:46" pos:end="141:46">)</operator><block pos:start="141:47" pos:end="141:99">{  <expr pos:start="141:50" pos:end="141:50"><literal type="number" pos:start="141:50" pos:end="141:50">3</literal></expr>,  <expr pos:start="141:54" pos:end="141:54"><literal type="number" pos:start="141:54" pos:end="141:54">4</literal></expr>,  <expr pos:start="141:58" pos:end="141:58"><literal type="number" pos:start="141:58" pos:end="141:58">4</literal></expr>,  <expr pos:start="141:62" pos:end="141:62"><literal type="number" pos:start="141:62" pos:end="141:62">6</literal></expr>,  <expr pos:start="141:66" pos:end="141:66"><literal type="number" pos:start="141:66" pos:end="141:66">8</literal></expr>,  <expr pos:start="141:70" pos:end="141:70"><literal type="number" pos:start="141:70" pos:end="141:70">8</literal></expr>,  <expr pos:start="141:74" pos:end="141:74"><literal type="number" pos:start="141:74" pos:end="141:74">8</literal></expr>,  <expr pos:start="141:78" pos:end="141:78"><literal type="number" pos:start="141:78" pos:end="141:78">8</literal></expr>, <expr pos:start="141:81" pos:end="141:82"><literal type="number" pos:start="141:81" pos:end="141:82">12</literal></expr>, <expr pos:start="141:85" pos:end="141:86"><literal type="number" pos:start="141:85" pos:end="141:86">12</literal></expr>, <expr pos:start="141:89" pos:end="141:90"><literal type="number" pos:start="141:89" pos:end="141:90">12</literal></expr>, <expr pos:start="141:93" pos:end="141:94"><literal type="number" pos:start="141:93" pos:end="141:94">32</literal></expr>, <expr pos:start="141:97" pos:end="141:98"><literal type="number" pos:start="141:97" pos:end="141:98">32</literal></expr>}</block><operator pos:start="141:100" pos:end="141:100">)</operator><index pos:start="141:101" pos:end="141:107">[<expr pos:start="141:102" pos:end="141:106"><name pos:start="141:102" pos:end="141:106">level</name></expr>]</index></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="153:80"><expr pos:start="145:5" pos:end="153:79"><name pos:start="145:5" pos:end="145:38"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:14">options</name><operator pos:start="145:15" pos:end="145:15">.</operator><name pos:start="145:16" pos:end="145:38">prediction_order_method</name></name> <operator pos:start="145:40" pos:end="145:40">=</operator> <operator pos:start="145:42" pos:end="145:42">(</operator><operator pos:start="145:43" pos:end="145:43">(</operator><name pos:start="145:44" pos:end="145:48"><name pos:start="145:44" pos:end="145:46">int</name><index pos:start="145:47" pos:end="145:48">[]</index></name><operator pos:start="145:49" pos:end="145:49">)</operator><block pos:start="145:50" pos:end="153:71">{ <expr pos:start="145:52" pos:end="145:67"><name pos:start="145:52" pos:end="145:67">ORDER_METHOD_EST</name></expr>,    <expr pos:start="145:73" pos:end="145:88"><name pos:start="145:73" pos:end="145:88">ORDER_METHOD_EST</name></expr>,    <expr pos:start="145:94" pos:end="145:109"><name pos:start="145:94" pos:end="145:109">ORDER_METHOD_EST</name></expr>,

                                                   <expr pos:start="147:52" pos:end="147:67"><name pos:start="147:52" pos:end="147:67">ORDER_METHOD_EST</name></expr>,    <expr pos:start="147:73" pos:end="147:88"><name pos:start="147:73" pos:end="147:88">ORDER_METHOD_EST</name></expr>,    <expr pos:start="147:94" pos:end="147:109"><name pos:start="147:94" pos:end="147:109">ORDER_METHOD_EST</name></expr>,

                                                   <expr pos:start="149:52" pos:end="149:70"><name pos:start="149:52" pos:end="149:70">ORDER_METHOD_4LEVEL</name></expr>, <expr pos:start="149:73" pos:end="149:88"><name pos:start="149:73" pos:end="149:88">ORDER_METHOD_LOG</name></expr>,    <expr pos:start="149:94" pos:end="149:112"><name pos:start="149:94" pos:end="149:112">ORDER_METHOD_4LEVEL</name></expr>,

                                                   <expr pos:start="151:52" pos:end="151:67"><name pos:start="151:52" pos:end="151:67">ORDER_METHOD_LOG</name></expr>,    <expr pos:start="151:73" pos:end="151:91"><name pos:start="151:73" pos:end="151:91">ORDER_METHOD_SEARCH</name></expr>, <expr pos:start="151:94" pos:end="151:109"><name pos:start="151:94" pos:end="151:109">ORDER_METHOD_LOG</name></expr>,

                                                   <expr pos:start="153:52" pos:end="153:70"><name pos:start="153:52" pos:end="153:70">ORDER_METHOD_SEARCH</name></expr>}</block><operator pos:start="153:72" pos:end="153:72">)</operator><index pos:start="153:73" pos:end="153:79">[<expr pos:start="153:74" pos:end="153:78"><name pos:start="153:74" pos:end="153:78">level</name></expr>]</index></expr>;</expr_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:107"><expr pos:start="157:5" pos:end="157:106"><name pos:start="157:5" pos:end="157:34"><name pos:start="157:5" pos:end="157:5">s</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:14">options</name><operator pos:start="157:15" pos:end="157:15">.</operator><name pos:start="157:16" pos:end="157:34">min_partition_order</name></name> <operator pos:start="157:36" pos:end="157:36">=</operator> <operator pos:start="157:38" pos:end="157:38">(</operator><operator pos:start="157:39" pos:end="157:39">(</operator><name pos:start="157:40" pos:end="157:44"><name pos:start="157:40" pos:end="157:42">int</name><index pos:start="157:43" pos:end="157:44">[]</index></name><operator pos:start="157:45" pos:end="157:45">)</operator><block pos:start="157:46" pos:end="157:98">{  <expr pos:start="157:49" pos:end="157:49"><literal type="number" pos:start="157:49" pos:end="157:49">2</literal></expr>,  <expr pos:start="157:53" pos:end="157:53"><literal type="number" pos:start="157:53" pos:end="157:53">2</literal></expr>,  <expr pos:start="157:57" pos:end="157:57"><literal type="number" pos:start="157:57" pos:end="157:57">0</literal></expr>,  <expr pos:start="157:61" pos:end="157:61"><literal type="number" pos:start="157:61" pos:end="157:61">0</literal></expr>,  <expr pos:start="157:65" pos:end="157:65"><literal type="number" pos:start="157:65" pos:end="157:65">0</literal></expr>,  <expr pos:start="157:69" pos:end="157:69"><literal type="number" pos:start="157:69" pos:end="157:69">0</literal></expr>,  <expr pos:start="157:73" pos:end="157:73"><literal type="number" pos:start="157:73" pos:end="157:73">0</literal></expr>,  <expr pos:start="157:77" pos:end="157:77"><literal type="number" pos:start="157:77" pos:end="157:77">0</literal></expr>,  <expr pos:start="157:81" pos:end="157:81"><literal type="number" pos:start="157:81" pos:end="157:81">0</literal></expr>,  <expr pos:start="157:85" pos:end="157:85"><literal type="number" pos:start="157:85" pos:end="157:85">0</literal></expr>,  <expr pos:start="157:89" pos:end="157:89"><literal type="number" pos:start="157:89" pos:end="157:89">0</literal></expr>,  <expr pos:start="157:93" pos:end="157:93"><literal type="number" pos:start="157:93" pos:end="157:93">0</literal></expr>,  <expr pos:start="157:97" pos:end="157:97"><literal type="number" pos:start="157:97" pos:end="157:97">0</literal></expr>}</block><operator pos:start="157:99" pos:end="157:99">)</operator><index pos:start="157:100" pos:end="157:106">[<expr pos:start="157:101" pos:end="157:105"><name pos:start="157:101" pos:end="157:105">level</name></expr>]</index></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="166:0"><expr pos:start="159:5" pos:end="159:106"><name pos:start="159:5" pos:end="159:34"><name pos:start="159:5" pos:end="159:5">s</name><operator pos:start="159:6" pos:end="159:7">-&gt;</operator><name pos:start="159:8" pos:end="159:14">options</name><operator pos:start="159:15" pos:end="159:15">.</operator><name pos:start="159:16" pos:end="159:34">max_partition_order</name></name> <operator pos:start="159:36" pos:end="159:36">=</operator> <operator pos:start="159:38" pos:end="159:38">(</operator><operator pos:start="159:39" pos:end="159:39">(</operator><name pos:start="159:40" pos:end="159:44"><name pos:start="159:40" pos:end="159:42">int</name><index pos:start="159:43" pos:end="159:44">[]</index></name><operator pos:start="159:45" pos:end="159:45">)</operator><block pos:start="159:46" pos:end="159:98">{  <expr pos:start="159:49" pos:end="159:49"><literal type="number" pos:start="159:49" pos:end="159:49">2</literal></expr>,  <expr pos:start="159:53" pos:end="159:53"><literal type="number" pos:start="159:53" pos:end="159:53">2</literal></expr>,  <expr pos:start="159:57" pos:end="159:57"><literal type="number" pos:start="159:57" pos:end="159:57">3</literal></expr>,  <expr pos:start="159:61" pos:end="159:61"><literal type="number" pos:start="159:61" pos:end="159:61">3</literal></expr>,  <expr pos:start="159:65" pos:end="159:65"><literal type="number" pos:start="159:65" pos:end="159:65">3</literal></expr>,  <expr pos:start="159:69" pos:end="159:69"><literal type="number" pos:start="159:69" pos:end="159:69">8</literal></expr>,  <expr pos:start="159:73" pos:end="159:73"><literal type="number" pos:start="159:73" pos:end="159:73">8</literal></expr>,  <expr pos:start="159:77" pos:end="159:77"><literal type="number" pos:start="159:77" pos:end="159:77">8</literal></expr>,  <expr pos:start="159:81" pos:end="159:81"><literal type="number" pos:start="159:81" pos:end="159:81">8</literal></expr>,  <expr pos:start="159:85" pos:end="159:85"><literal type="number" pos:start="159:85" pos:end="159:85">8</literal></expr>,  <expr pos:start="159:89" pos:end="159:89"><literal type="number" pos:start="159:89" pos:end="159:89">8</literal></expr>,  <expr pos:start="159:93" pos:end="159:93"><literal type="number" pos:start="159:93" pos:end="159:93">8</literal></expr>,  <expr pos:start="159:97" pos:end="159:97"><literal type="number" pos:start="159:97" pos:end="159:97">8</literal></expr>}</block><operator pos:start="159:99" pos:end="159:99">)</operator><index pos:start="159:100" pos:end="159:106">[<expr pos:start="159:101" pos:end="159:105"><name pos:start="159:101" pos:end="159:105">level</name></expr>]</index></expr>;</expr_stmt>



    <comment type="block" pos:start="163:5" pos:end="163:62">/* set compression option overrides from AVCodecContext */</comment>

<cpp:if pos:start="165:1" pos:end="165:33">#<cpp:directive pos:start="165:2" pos:end="165:3">if</cpp:directive> <expr pos:start="165:5" pos:end="165:33"><name pos:start="165:5" pos:end="165:28">LIBAVCODEC_VERSION_MAJOR</name> <operator pos:start="165:30" pos:end="165:30">&lt;</operator> <literal type="number" pos:start="165:32" pos:end="165:33">53</literal></expr></cpp:if>

    <comment type="block" pos:start="167:5" pos:end="167:66">/* for compatibility with deprecated AVCodecContext.use_lpc */</comment>

    <if_stmt pos:start="169:5" pos:end="186:0"><if pos:start="169:5" pos:end="173:5">if <condition pos:start="169:8" pos:end="169:28">(<expr pos:start="169:9" pos:end="169:27"><name pos:start="169:9" pos:end="169:22"><name pos:start="169:9" pos:end="169:13">avctx</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:22">use_lpc</name></name> <operator pos:start="169:24" pos:end="169:25">==</operator> <literal type="number" pos:start="169:27" pos:end="169:27">0</literal></expr>)</condition> <block pos:start="169:30" pos:end="173:5">{<block_content pos:start="171:9" pos:end="171:48">

        <expr_stmt pos:start="171:9" pos:end="171:48"><expr pos:start="171:9" pos:end="171:47"><name pos:start="171:9" pos:end="171:27"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:18">options</name><operator pos:start="171:19" pos:end="171:19">.</operator><name pos:start="171:20" pos:end="171:27">lpc_type</name></name> <operator pos:start="171:29" pos:end="171:29">=</operator> <name pos:start="171:31" pos:end="171:47">AV_LPC_TYPE_FIXED</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="173:7" pos:end="177:5">else if <condition pos:start="173:15" pos:end="173:35">(<expr pos:start="173:16" pos:end="173:34"><name pos:start="173:16" pos:end="173:29"><name pos:start="173:16" pos:end="173:20">avctx</name><operator pos:start="173:21" pos:end="173:22">-&gt;</operator><name pos:start="173:23" pos:end="173:29">use_lpc</name></name> <operator pos:start="173:31" pos:end="173:32">==</operator> <literal type="number" pos:start="173:34" pos:end="173:34">1</literal></expr>)</condition> <block pos:start="173:37" pos:end="177:5">{<block_content pos:start="175:9" pos:end="175:51">

        <expr_stmt pos:start="175:9" pos:end="175:51"><expr pos:start="175:9" pos:end="175:50"><name pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:18">options</name><operator pos:start="175:19" pos:end="175:19">.</operator><name pos:start="175:20" pos:end="175:27">lpc_type</name></name> <operator pos:start="175:29" pos:end="175:29">=</operator> <name pos:start="175:31" pos:end="175:50">AV_LPC_TYPE_LEVINSON</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="177:7" pos:end="186:0">else if <condition pos:start="177:15" pos:end="177:34">(<expr pos:start="177:16" pos:end="177:33"><name pos:start="177:16" pos:end="177:29"><name pos:start="177:16" pos:end="177:20">avctx</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:29">use_lpc</name></name> <operator pos:start="177:31" pos:end="177:31">&gt;</operator> <literal type="number" pos:start="177:33" pos:end="177:33">1</literal></expr>)</condition> <block pos:start="177:36" pos:end="186:0">{<block_content pos:start="179:9" pos:end="181:51">

        <expr_stmt pos:start="179:9" pos:end="179:53"><expr pos:start="179:9" pos:end="179:52"><name pos:start="179:9" pos:end="179:27"><name pos:start="179:9" pos:end="179:9">s</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:18">options</name><operator pos:start="179:19" pos:end="179:19">.</operator><name pos:start="179:20" pos:end="179:27">lpc_type</name></name>   <operator pos:start="179:31" pos:end="179:31">=</operator> <name pos:start="179:33" pos:end="179:52">AV_LPC_TYPE_CHOLESKY</name></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:51"><expr pos:start="181:9" pos:end="181:50"><name pos:start="181:9" pos:end="181:29"><name pos:start="181:9" pos:end="181:9">s</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:18">options</name><operator pos:start="181:19" pos:end="181:19">.</operator><name pos:start="181:20" pos:end="181:29">lpc_passes</name></name> <operator pos:start="181:31" pos:end="181:31">=</operator> <name pos:start="181:33" pos:end="181:46"><name pos:start="181:33" pos:end="181:37">avctx</name><operator pos:start="181:38" pos:end="181:39">-&gt;</operator><name pos:start="181:40" pos:end="181:46">use_lpc</name></name> <operator pos:start="181:48" pos:end="181:48">-</operator> <literal type="number" pos:start="181:50" pos:end="181:50">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="185:1" pos:end="185:6">#<cpp:directive pos:start="185:2" pos:end="185:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="187:5" pos:end="223:5"><if pos:start="187:5" pos:end="223:5">if <condition pos:start="187:8" pos:end="187:46">(<expr pos:start="187:9" pos:end="187:45"><name pos:start="187:9" pos:end="187:23"><name pos:start="187:9" pos:end="187:13">avctx</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:23">lpc_type</name></name> <operator pos:start="187:25" pos:end="187:25">&gt;</operator> <name pos:start="187:27" pos:end="187:45">AV_LPC_TYPE_DEFAULT</name></expr>)</condition> <block pos:start="187:48" pos:end="223:5">{<block_content pos:start="189:9" pos:end="221:9">

        <if_stmt pos:start="189:9" pos:end="195:9"><if pos:start="189:9" pos:end="195:9">if <condition pos:start="189:12" pos:end="189:51">(<expr pos:start="189:13" pos:end="189:50"><name pos:start="189:13" pos:end="189:27"><name pos:start="189:13" pos:end="189:17">avctx</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:27">lpc_type</name></name> <operator pos:start="189:29" pos:end="189:29">&gt;</operator> <name pos:start="189:31" pos:end="189:50">AV_LPC_TYPE_CHOLESKY</name></expr>)</condition> <block pos:start="189:53" pos:end="195:9">{<block_content pos:start="191:13" pos:end="193:22">

            <expr_stmt pos:start="191:13" pos:end="191:83"><expr pos:start="191:13" pos:end="191:82"><call pos:start="191:13" pos:end="191:82"><name pos:start="191:13" pos:end="191:18">av_log</name><argument_list pos:start="191:19" pos:end="191:82">(<argument pos:start="191:20" pos:end="191:24"><expr pos:start="191:20" pos:end="191:24"><name pos:start="191:20" pos:end="191:24">avctx</name></expr></argument>, <argument pos:start="191:27" pos:end="191:38"><expr pos:start="191:27" pos:end="191:38"><name pos:start="191:27" pos:end="191:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="191:41" pos:end="191:64"><expr pos:start="191:41" pos:end="191:64"><literal type="string" pos:start="191:41" pos:end="191:64">"unknown lpc type: %d\n"</literal></expr></argument>, <argument pos:start="191:67" pos:end="191:81"><expr pos:start="191:67" pos:end="191:81"><name pos:start="191:67" pos:end="191:81"><name pos:start="191:67" pos:end="191:71">avctx</name><operator pos:start="191:72" pos:end="191:73">-&gt;</operator><name pos:start="191:74" pos:end="191:81">lpc_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="193:13" pos:end="193:22">return <expr pos:start="193:20" pos:end="193:21"><operator pos:start="193:20" pos:end="193:20">-</operator><literal type="number" pos:start="193:21" pos:end="193:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:46"><expr pos:start="197:9" pos:end="197:45"><name pos:start="197:9" pos:end="197:27"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:18">options</name><operator pos:start="197:19" pos:end="197:19">.</operator><name pos:start="197:20" pos:end="197:27">lpc_type</name></name> <operator pos:start="197:29" pos:end="197:29">=</operator> <name pos:start="197:31" pos:end="197:45"><name pos:start="197:31" pos:end="197:35">avctx</name><operator pos:start="197:36" pos:end="197:37">-&gt;</operator><name pos:start="197:38" pos:end="197:45">lpc_type</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="199:9" pos:end="221:9"><if pos:start="199:9" pos:end="221:9">if <condition pos:start="199:12" pos:end="199:56">(<expr pos:start="199:13" pos:end="199:55"><name pos:start="199:13" pos:end="199:31"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:22">options</name><operator pos:start="199:23" pos:end="199:23">.</operator><name pos:start="199:24" pos:end="199:31">lpc_type</name></name> <operator pos:start="199:33" pos:end="199:34">==</operator> <name pos:start="199:36" pos:end="199:55">AV_LPC_TYPE_CHOLESKY</name></expr>)</condition> <block pos:start="199:58" pos:end="221:9">{<block_content pos:start="201:13" pos:end="219:13">

            <if_stmt pos:start="201:13" pos:end="219:13"><if pos:start="201:13" pos:end="207:13">if <condition pos:start="201:16" pos:end="201:38">(<expr pos:start="201:17" pos:end="201:37"><name pos:start="201:17" pos:end="201:33"><name pos:start="201:17" pos:end="201:21">avctx</name><operator pos:start="201:22" pos:end="201:23">-&gt;</operator><name pos:start="201:24" pos:end="201:33">lpc_passes</name></name> <operator pos:start="201:35" pos:end="201:35">&lt;</operator> <literal type="number" pos:start="201:37" pos:end="201:37">0</literal></expr>)</condition> <block pos:start="201:40" pos:end="207:13">{<block_content pos:start="205:17" pos:end="205:42">

                <comment type="line" pos:start="203:17" pos:end="203:56">// default number of passes for Cholesky</comment>

                <expr_stmt pos:start="205:17" pos:end="205:42"><expr pos:start="205:17" pos:end="205:41"><name pos:start="205:17" pos:end="205:37"><name pos:start="205:17" pos:end="205:17">s</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:26">options</name><operator pos:start="205:27" pos:end="205:27">.</operator><name pos:start="205:28" pos:end="205:37">lpc_passes</name></name> <operator pos:start="205:39" pos:end="205:39">=</operator> <literal type="number" pos:start="205:41" pos:end="205:41">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="207:15" pos:end="215:13">else if <condition pos:start="207:23" pos:end="207:46">(<expr pos:start="207:24" pos:end="207:45"><name pos:start="207:24" pos:end="207:40"><name pos:start="207:24" pos:end="207:28">avctx</name><operator pos:start="207:29" pos:end="207:30">-&gt;</operator><name pos:start="207:31" pos:end="207:40">lpc_passes</name></name> <operator pos:start="207:42" pos:end="207:43">==</operator> <literal type="number" pos:start="207:45" pos:end="207:45">0</literal></expr>)</condition> <block pos:start="207:48" pos:end="215:13">{<block_content pos:start="209:17" pos:end="213:26">

                <expr_stmt pos:start="209:17" pos:end="211:42"><expr pos:start="209:17" pos:end="211:41"><call pos:start="209:17" pos:end="211:41"><name pos:start="209:17" pos:end="209:22">av_log</name><argument_list pos:start="209:23" pos:end="211:41">(<argument pos:start="209:24" pos:end="209:28"><expr pos:start="209:24" pos:end="209:28"><name pos:start="209:24" pos:end="209:28">avctx</name></expr></argument>, <argument pos:start="209:31" pos:end="209:42"><expr pos:start="209:31" pos:end="209:42"><name pos:start="209:31" pos:end="209:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="209:45" pos:end="209:80"><expr pos:start="209:45" pos:end="209:80"><literal type="string" pos:start="209:45" pos:end="209:80">"invalid number of lpc passes: %d\n"</literal></expr></argument>,

                       <argument pos:start="211:24" pos:end="211:40"><expr pos:start="211:24" pos:end="211:40"><name pos:start="211:24" pos:end="211:40"><name pos:start="211:24" pos:end="211:28">avctx</name><operator pos:start="211:29" pos:end="211:30">-&gt;</operator><name pos:start="211:31" pos:end="211:40">lpc_passes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="213:17" pos:end="213:26">return <expr pos:start="213:24" pos:end="213:25"><operator pos:start="213:24" pos:end="213:24">-</operator><literal type="number" pos:start="213:25" pos:end="213:25">1</literal></expr>;</return>

            </block_content>}</block></if> <else pos:start="215:15" pos:end="219:13">else <block pos:start="215:20" pos:end="219:13">{<block_content pos:start="217:17" pos:end="217:58">

                <expr_stmt pos:start="217:17" pos:end="217:58"><expr pos:start="217:17" pos:end="217:57"><name pos:start="217:17" pos:end="217:37"><name pos:start="217:17" pos:end="217:17">s</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:26">options</name><operator pos:start="217:27" pos:end="217:27">.</operator><name pos:start="217:28" pos:end="217:37">lpc_passes</name></name> <operator pos:start="217:39" pos:end="217:39">=</operator> <name pos:start="217:41" pos:end="217:57"><name pos:start="217:41" pos:end="217:45">avctx</name><operator pos:start="217:46" pos:end="217:47">-&gt;</operator><name pos:start="217:48" pos:end="217:57">lpc_passes</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="225:5" pos:end="253:5">switch <condition pos:start="225:12" pos:end="225:32">(<expr pos:start="225:13" pos:end="225:31"><name pos:start="225:13" pos:end="225:31"><name pos:start="225:13" pos:end="225:13">s</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:22">options</name><operator pos:start="225:23" pos:end="225:23">.</operator><name pos:start="225:24" pos:end="225:31">lpc_type</name></name></expr>)</condition> <block pos:start="225:34" pos:end="253:5">{<block_content pos:start="227:5" pos:end="251:14">

    <case pos:start="227:5" pos:end="227:26">case <expr pos:start="227:10" pos:end="227:25"><name pos:start="227:10" pos:end="227:25">AV_LPC_TYPE_NONE</name></expr>:</case>

        <expr_stmt pos:start="229:9" pos:end="229:57"><expr pos:start="229:9" pos:end="229:56"><call pos:start="229:9" pos:end="229:56"><name pos:start="229:9" pos:end="229:14">av_log</name><argument_list pos:start="229:15" pos:end="229:56">(<argument pos:start="229:16" pos:end="229:20"><expr pos:start="229:16" pos:end="229:20"><name pos:start="229:16" pos:end="229:20">avctx</name></expr></argument>, <argument pos:start="229:23" pos:end="229:34"><expr pos:start="229:23" pos:end="229:34"><name pos:start="229:23" pos:end="229:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="229:37" pos:end="229:55"><expr pos:start="229:37" pos:end="229:55"><literal type="string" pos:start="229:37" pos:end="229:55">" lpc type: None\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    <case pos:start="233:5" pos:end="233:27">case <expr pos:start="233:10" pos:end="233:26"><name pos:start="233:10" pos:end="233:26">AV_LPC_TYPE_FIXED</name></expr>:</case>

        <expr_stmt pos:start="235:9" pos:end="235:83"><expr pos:start="235:9" pos:end="235:82"><call pos:start="235:9" pos:end="235:82"><name pos:start="235:9" pos:end="235:14">av_log</name><argument_list pos:start="235:15" pos:end="235:82">(<argument pos:start="235:16" pos:end="235:20"><expr pos:start="235:16" pos:end="235:20"><name pos:start="235:16" pos:end="235:20">avctx</name></expr></argument>, <argument pos:start="235:23" pos:end="235:34"><expr pos:start="235:23" pos:end="235:34"><name pos:start="235:23" pos:end="235:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="235:37" pos:end="235:81"><expr pos:start="235:37" pos:end="235:81"><literal type="string" pos:start="235:37" pos:end="235:81">" lpc type: Fixed pre-defined coefficients\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="237:9" pos:end="237:14">break;</break>

    <case pos:start="239:5" pos:end="239:30">case <expr pos:start="239:10" pos:end="239:29"><name pos:start="239:10" pos:end="239:29">AV_LPC_TYPE_LEVINSON</name></expr>:</case>

        <expr_stmt pos:start="241:9" pos:end="241:96"><expr pos:start="241:9" pos:end="241:95"><call pos:start="241:9" pos:end="241:95"><name pos:start="241:9" pos:end="241:14">av_log</name><argument_list pos:start="241:15" pos:end="241:95">(<argument pos:start="241:16" pos:end="241:20"><expr pos:start="241:16" pos:end="241:20"><name pos:start="241:16" pos:end="241:20">avctx</name></expr></argument>, <argument pos:start="241:23" pos:end="241:34"><expr pos:start="241:23" pos:end="241:34"><name pos:start="241:23" pos:end="241:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="241:37" pos:end="241:94"><expr pos:start="241:37" pos:end="241:94"><literal type="string" pos:start="241:37" pos:end="241:94">" lpc type: Levinson-Durbin recursion with Welch window\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="243:9" pos:end="243:14">break;</break>

    <case pos:start="245:5" pos:end="245:30">case <expr pos:start="245:10" pos:end="245:29"><name pos:start="245:10" pos:end="245:29">AV_LPC_TYPE_CHOLESKY</name></expr>:</case>

        <expr_stmt pos:start="247:9" pos:end="249:72"><expr pos:start="247:9" pos:end="249:71"><call pos:start="247:9" pos:end="249:71"><name pos:start="247:9" pos:end="247:14">av_log</name><argument_list pos:start="247:15" pos:end="249:71">(<argument pos:start="247:16" pos:end="247:20"><expr pos:start="247:16" pos:end="247:20"><name pos:start="247:16" pos:end="247:20">avctx</name></expr></argument>, <argument pos:start="247:23" pos:end="247:34"><expr pos:start="247:23" pos:end="247:34"><name pos:start="247:23" pos:end="247:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="247:37" pos:end="247:84"><expr pos:start="247:37" pos:end="247:84"><literal type="string" pos:start="247:37" pos:end="247:84">" lpc type: Cholesky factorization, %d pass%s\n"</literal></expr></argument>,

               <argument pos:start="249:16" pos:end="249:36"><expr pos:start="249:16" pos:end="249:36"><name pos:start="249:16" pos:end="249:36"><name pos:start="249:16" pos:end="249:16">s</name><operator pos:start="249:17" pos:end="249:18">-&gt;</operator><name pos:start="249:19" pos:end="249:25">options</name><operator pos:start="249:26" pos:end="249:26">.</operator><name pos:start="249:27" pos:end="249:36">lpc_passes</name></name></expr></argument>, <argument pos:start="249:39" pos:end="249:70"><expr pos:start="249:39" pos:end="249:70"><ternary pos:start="249:39" pos:end="249:70"><condition pos:start="249:39" pos:end="249:63"><expr pos:start="249:39" pos:end="249:62"><name pos:start="249:39" pos:end="249:59"><name pos:start="249:39" pos:end="249:39">s</name><operator pos:start="249:40" pos:end="249:41">-&gt;</operator><name pos:start="249:42" pos:end="249:48">options</name><operator pos:start="249:49" pos:end="249:49">.</operator><name pos:start="249:50" pos:end="249:59">lpc_passes</name></name><operator pos:start="249:60" pos:end="249:61">==</operator><literal type="number" pos:start="249:62" pos:end="249:62">1</literal></expr>?</condition><then pos:start="249:64" pos:end="249:65"><expr pos:start="249:64" pos:end="249:65"><literal type="string" pos:start="249:64" pos:end="249:65">""</literal></expr></then><else pos:start="249:66" pos:end="249:70">:<expr pos:start="249:67" pos:end="249:70"><literal type="string" pos:start="249:67" pos:end="249:70">"es"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="251:9" pos:end="251:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="257:5" pos:end="289:5"><if pos:start="257:5" pos:end="261:5">if <condition pos:start="257:8" pos:end="257:48">(<expr pos:start="257:9" pos:end="257:47"><name pos:start="257:9" pos:end="257:27"><name pos:start="257:9" pos:end="257:9">s</name><operator pos:start="257:10" pos:end="257:11">-&gt;</operator><name pos:start="257:12" pos:end="257:18">options</name><operator pos:start="257:19" pos:end="257:19">.</operator><name pos:start="257:20" pos:end="257:27">lpc_type</name></name> <operator pos:start="257:29" pos:end="257:30">==</operator> <name pos:start="257:32" pos:end="257:47">AV_LPC_TYPE_NONE</name></expr>)</condition> <block pos:start="257:50" pos:end="261:5">{<block_content pos:start="259:9" pos:end="259:44">

        <expr_stmt pos:start="259:9" pos:end="259:44"><expr pos:start="259:9" pos:end="259:43"><name pos:start="259:9" pos:end="259:39"><name pos:start="259:9" pos:end="259:9">s</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:18">options</name><operator pos:start="259:19" pos:end="259:19">.</operator><name pos:start="259:20" pos:end="259:39">min_prediction_order</name></name> <operator pos:start="259:41" pos:end="259:41">=</operator> <literal type="number" pos:start="259:43" pos:end="259:43">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="261:7" pos:end="289:5">else if <condition pos:start="261:15" pos:end="261:48">(<expr pos:start="261:16" pos:end="261:47"><name pos:start="261:16" pos:end="261:42"><name pos:start="261:16" pos:end="261:20">avctx</name><operator pos:start="261:21" pos:end="261:22">-&gt;</operator><name pos:start="261:23" pos:end="261:42">min_prediction_order</name></name> <operator pos:start="261:44" pos:end="261:45">&gt;=</operator> <literal type="number" pos:start="261:47" pos:end="261:47">0</literal></expr>)</condition> <block pos:start="261:50" pos:end="289:5">{<block_content pos:start="263:9" pos:end="287:70">

        <if_stmt pos:start="263:9" pos:end="285:9"><if pos:start="263:9" pos:end="275:9">if <condition pos:start="263:12" pos:end="263:53">(<expr pos:start="263:13" pos:end="263:52"><name pos:start="263:13" pos:end="263:31"><name pos:start="263:13" pos:end="263:13">s</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:22">options</name><operator pos:start="263:23" pos:end="263:23">.</operator><name pos:start="263:24" pos:end="263:31">lpc_type</name></name> <operator pos:start="263:33" pos:end="263:34">==</operator> <name pos:start="263:36" pos:end="263:52">AV_LPC_TYPE_FIXED</name></expr>)</condition> <block pos:start="263:55" pos:end="275:9">{<block_content pos:start="265:13" pos:end="273:13">

            <if_stmt pos:start="265:13" pos:end="273:13"><if pos:start="265:13" pos:end="273:13">if <condition pos:start="265:16" pos:end="265:62">(<expr pos:start="265:17" pos:end="265:61"><name pos:start="265:17" pos:end="265:43"><name pos:start="265:17" pos:end="265:21">avctx</name><operator pos:start="265:22" pos:end="265:23">-&gt;</operator><name pos:start="265:24" pos:end="265:43">min_prediction_order</name></name> <operator pos:start="265:45" pos:end="265:45">&gt;</operator> <name pos:start="265:47" pos:end="265:61">MAX_FIXED_ORDER</name></expr>)</condition> <block pos:start="265:64" pos:end="273:13">{<block_content pos:start="267:17" pos:end="271:26">

                <expr_stmt pos:start="267:17" pos:end="269:52"><expr pos:start="267:17" pos:end="269:51"><call pos:start="267:17" pos:end="269:51"><name pos:start="267:17" pos:end="267:22">av_log</name><argument_list pos:start="267:23" pos:end="269:51">(<argument pos:start="267:24" pos:end="267:28"><expr pos:start="267:24" pos:end="267:28"><name pos:start="267:24" pos:end="267:28">avctx</name></expr></argument>, <argument pos:start="267:31" pos:end="267:42"><expr pos:start="267:31" pos:end="267:42"><name pos:start="267:31" pos:end="267:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="267:45" pos:end="267:80"><expr pos:start="267:45" pos:end="267:80"><literal type="string" pos:start="267:45" pos:end="267:80">"invalid min prediction order: %d\n"</literal></expr></argument>,

                       <argument pos:start="269:24" pos:end="269:50"><expr pos:start="269:24" pos:end="269:50"><name pos:start="269:24" pos:end="269:50"><name pos:start="269:24" pos:end="269:28">avctx</name><operator pos:start="269:29" pos:end="269:30">-&gt;</operator><name pos:start="269:31" pos:end="269:50">min_prediction_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="271:17" pos:end="271:26">return <expr pos:start="271:24" pos:end="271:25"><operator pos:start="271:24" pos:end="271:24">-</operator><literal type="number" pos:start="271:25" pos:end="271:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="275:11" pos:end="285:9">else if <condition pos:start="275:19" pos:end="277:63">(<expr pos:start="275:20" pos:end="277:62"><name pos:start="275:20" pos:end="275:46"><name pos:start="275:20" pos:end="275:24">avctx</name><operator pos:start="275:25" pos:end="275:26">-&gt;</operator><name pos:start="275:27" pos:end="275:46">min_prediction_order</name></name> <operator pos:start="275:48" pos:end="275:48">&lt;</operator> <name pos:start="275:50" pos:end="275:62">MIN_LPC_ORDER</name> <operator pos:start="275:64" pos:end="275:65">||</operator>

                   <name pos:start="277:20" pos:end="277:46"><name pos:start="277:20" pos:end="277:24">avctx</name><operator pos:start="277:25" pos:end="277:26">-&gt;</operator><name pos:start="277:27" pos:end="277:46">min_prediction_order</name></name> <operator pos:start="277:48" pos:end="277:48">&gt;</operator> <name pos:start="277:50" pos:end="277:62">MAX_LPC_ORDER</name></expr>)</condition> <block pos:start="277:65" pos:end="285:9">{<block_content pos:start="279:13" pos:end="283:22">

            <expr_stmt pos:start="279:13" pos:end="281:48"><expr pos:start="279:13" pos:end="281:47"><call pos:start="279:13" pos:end="281:47"><name pos:start="279:13" pos:end="279:18">av_log</name><argument_list pos:start="279:19" pos:end="281:47">(<argument pos:start="279:20" pos:end="279:24"><expr pos:start="279:20" pos:end="279:24"><name pos:start="279:20" pos:end="279:24">avctx</name></expr></argument>, <argument pos:start="279:27" pos:end="279:38"><expr pos:start="279:27" pos:end="279:38"><name pos:start="279:27" pos:end="279:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="279:41" pos:end="279:76"><expr pos:start="279:41" pos:end="279:76"><literal type="string" pos:start="279:41" pos:end="279:76">"invalid min prediction order: %d\n"</literal></expr></argument>,

                   <argument pos:start="281:20" pos:end="281:46"><expr pos:start="281:20" pos:end="281:46"><name pos:start="281:20" pos:end="281:46"><name pos:start="281:20" pos:end="281:24">avctx</name><operator pos:start="281:25" pos:end="281:26">-&gt;</operator><name pos:start="281:27" pos:end="281:46">min_prediction_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="283:13" pos:end="283:22">return <expr pos:start="283:20" pos:end="283:21"><operator pos:start="283:20" pos:end="283:20">-</operator><literal type="number" pos:start="283:21" pos:end="283:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:70"><expr pos:start="287:9" pos:end="287:69"><name pos:start="287:9" pos:end="287:39"><name pos:start="287:9" pos:end="287:9">s</name><operator pos:start="287:10" pos:end="287:11">-&gt;</operator><name pos:start="287:12" pos:end="287:18">options</name><operator pos:start="287:19" pos:end="287:19">.</operator><name pos:start="287:20" pos:end="287:39">min_prediction_order</name></name> <operator pos:start="287:41" pos:end="287:41">=</operator> <name pos:start="287:43" pos:end="287:69"><name pos:start="287:43" pos:end="287:47">avctx</name><operator pos:start="287:48" pos:end="287:49">-&gt;</operator><name pos:start="287:50" pos:end="287:69">min_prediction_order</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="291:5" pos:end="323:5"><if pos:start="291:5" pos:end="295:5">if <condition pos:start="291:8" pos:end="291:48">(<expr pos:start="291:9" pos:end="291:47"><name pos:start="291:9" pos:end="291:27"><name pos:start="291:9" pos:end="291:9">s</name><operator pos:start="291:10" pos:end="291:11">-&gt;</operator><name pos:start="291:12" pos:end="291:18">options</name><operator pos:start="291:19" pos:end="291:19">.</operator><name pos:start="291:20" pos:end="291:27">lpc_type</name></name> <operator pos:start="291:29" pos:end="291:30">==</operator> <name pos:start="291:32" pos:end="291:47">AV_LPC_TYPE_NONE</name></expr>)</condition> <block pos:start="291:50" pos:end="295:5">{<block_content pos:start="293:9" pos:end="293:44">

        <expr_stmt pos:start="293:9" pos:end="293:44"><expr pos:start="293:9" pos:end="293:43"><name pos:start="293:9" pos:end="293:39"><name pos:start="293:9" pos:end="293:9">s</name><operator pos:start="293:10" pos:end="293:11">-&gt;</operator><name pos:start="293:12" pos:end="293:18">options</name><operator pos:start="293:19" pos:end="293:19">.</operator><name pos:start="293:20" pos:end="293:39">max_prediction_order</name></name> <operator pos:start="293:41" pos:end="293:41">=</operator> <literal type="number" pos:start="293:43" pos:end="293:43">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="295:7" pos:end="323:5">else if <condition pos:start="295:15" pos:end="295:48">(<expr pos:start="295:16" pos:end="295:47"><name pos:start="295:16" pos:end="295:42"><name pos:start="295:16" pos:end="295:20">avctx</name><operator pos:start="295:21" pos:end="295:22">-&gt;</operator><name pos:start="295:23" pos:end="295:42">max_prediction_order</name></name> <operator pos:start="295:44" pos:end="295:45">&gt;=</operator> <literal type="number" pos:start="295:47" pos:end="295:47">0</literal></expr>)</condition> <block pos:start="295:50" pos:end="323:5">{<block_content pos:start="297:9" pos:end="321:70">

        <if_stmt pos:start="297:9" pos:end="319:9"><if pos:start="297:9" pos:end="309:9">if <condition pos:start="297:12" pos:end="297:53">(<expr pos:start="297:13" pos:end="297:52"><name pos:start="297:13" pos:end="297:31"><name pos:start="297:13" pos:end="297:13">s</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:22">options</name><operator pos:start="297:23" pos:end="297:23">.</operator><name pos:start="297:24" pos:end="297:31">lpc_type</name></name> <operator pos:start="297:33" pos:end="297:34">==</operator> <name pos:start="297:36" pos:end="297:52">AV_LPC_TYPE_FIXED</name></expr>)</condition> <block pos:start="297:55" pos:end="309:9">{<block_content pos:start="299:13" pos:end="307:13">

            <if_stmt pos:start="299:13" pos:end="307:13"><if pos:start="299:13" pos:end="307:13">if <condition pos:start="299:16" pos:end="299:62">(<expr pos:start="299:17" pos:end="299:61"><name pos:start="299:17" pos:end="299:43"><name pos:start="299:17" pos:end="299:21">avctx</name><operator pos:start="299:22" pos:end="299:23">-&gt;</operator><name pos:start="299:24" pos:end="299:43">max_prediction_order</name></name> <operator pos:start="299:45" pos:end="299:45">&gt;</operator> <name pos:start="299:47" pos:end="299:61">MAX_FIXED_ORDER</name></expr>)</condition> <block pos:start="299:64" pos:end="307:13">{<block_content pos:start="301:17" pos:end="305:26">

                <expr_stmt pos:start="301:17" pos:end="303:52"><expr pos:start="301:17" pos:end="303:51"><call pos:start="301:17" pos:end="303:51"><name pos:start="301:17" pos:end="301:22">av_log</name><argument_list pos:start="301:23" pos:end="303:51">(<argument pos:start="301:24" pos:end="301:28"><expr pos:start="301:24" pos:end="301:28"><name pos:start="301:24" pos:end="301:28">avctx</name></expr></argument>, <argument pos:start="301:31" pos:end="301:42"><expr pos:start="301:31" pos:end="301:42"><name pos:start="301:31" pos:end="301:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="301:45" pos:end="301:80"><expr pos:start="301:45" pos:end="301:80"><literal type="string" pos:start="301:45" pos:end="301:80">"invalid max prediction order: %d\n"</literal></expr></argument>,

                       <argument pos:start="303:24" pos:end="303:50"><expr pos:start="303:24" pos:end="303:50"><name pos:start="303:24" pos:end="303:50"><name pos:start="303:24" pos:end="303:28">avctx</name><operator pos:start="303:29" pos:end="303:30">-&gt;</operator><name pos:start="303:31" pos:end="303:50">max_prediction_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="305:17" pos:end="305:26">return <expr pos:start="305:24" pos:end="305:25"><operator pos:start="305:24" pos:end="305:24">-</operator><literal type="number" pos:start="305:25" pos:end="305:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="309:11" pos:end="319:9">else if <condition pos:start="309:19" pos:end="311:63">(<expr pos:start="309:20" pos:end="311:62"><name pos:start="309:20" pos:end="309:46"><name pos:start="309:20" pos:end="309:24">avctx</name><operator pos:start="309:25" pos:end="309:26">-&gt;</operator><name pos:start="309:27" pos:end="309:46">max_prediction_order</name></name> <operator pos:start="309:48" pos:end="309:48">&lt;</operator> <name pos:start="309:50" pos:end="309:62">MIN_LPC_ORDER</name> <operator pos:start="309:64" pos:end="309:65">||</operator>

                   <name pos:start="311:20" pos:end="311:46"><name pos:start="311:20" pos:end="311:24">avctx</name><operator pos:start="311:25" pos:end="311:26">-&gt;</operator><name pos:start="311:27" pos:end="311:46">max_prediction_order</name></name> <operator pos:start="311:48" pos:end="311:48">&gt;</operator> <name pos:start="311:50" pos:end="311:62">MAX_LPC_ORDER</name></expr>)</condition> <block pos:start="311:65" pos:end="319:9">{<block_content pos:start="313:13" pos:end="317:22">

            <expr_stmt pos:start="313:13" pos:end="315:48"><expr pos:start="313:13" pos:end="315:47"><call pos:start="313:13" pos:end="315:47"><name pos:start="313:13" pos:end="313:18">av_log</name><argument_list pos:start="313:19" pos:end="315:47">(<argument pos:start="313:20" pos:end="313:24"><expr pos:start="313:20" pos:end="313:24"><name pos:start="313:20" pos:end="313:24">avctx</name></expr></argument>, <argument pos:start="313:27" pos:end="313:38"><expr pos:start="313:27" pos:end="313:38"><name pos:start="313:27" pos:end="313:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="313:41" pos:end="313:76"><expr pos:start="313:41" pos:end="313:76"><literal type="string" pos:start="313:41" pos:end="313:76">"invalid max prediction order: %d\n"</literal></expr></argument>,

                   <argument pos:start="315:20" pos:end="315:46"><expr pos:start="315:20" pos:end="315:46"><name pos:start="315:20" pos:end="315:46"><name pos:start="315:20" pos:end="315:24">avctx</name><operator pos:start="315:25" pos:end="315:26">-&gt;</operator><name pos:start="315:27" pos:end="315:46">max_prediction_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="317:13" pos:end="317:22">return <expr pos:start="317:20" pos:end="317:21"><operator pos:start="317:20" pos:end="317:20">-</operator><literal type="number" pos:start="317:21" pos:end="317:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:70"><expr pos:start="321:9" pos:end="321:69"><name pos:start="321:9" pos:end="321:39"><name pos:start="321:9" pos:end="321:9">s</name><operator pos:start="321:10" pos:end="321:11">-&gt;</operator><name pos:start="321:12" pos:end="321:18">options</name><operator pos:start="321:19" pos:end="321:19">.</operator><name pos:start="321:20" pos:end="321:39">max_prediction_order</name></name> <operator pos:start="321:41" pos:end="321:41">=</operator> <name pos:start="321:43" pos:end="321:69"><name pos:start="321:43" pos:end="321:47">avctx</name><operator pos:start="321:48" pos:end="321:49">-&gt;</operator><name pos:start="321:50" pos:end="321:69">max_prediction_order</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="325:5" pos:end="333:5"><if pos:start="325:5" pos:end="333:5">if <condition pos:start="325:8" pos:end="325:74">(<expr pos:start="325:9" pos:end="325:73"><name pos:start="325:9" pos:end="325:39"><name pos:start="325:9" pos:end="325:9">s</name><operator pos:start="325:10" pos:end="325:11">-&gt;</operator><name pos:start="325:12" pos:end="325:18">options</name><operator pos:start="325:19" pos:end="325:19">.</operator><name pos:start="325:20" pos:end="325:39">max_prediction_order</name></name> <operator pos:start="325:41" pos:end="325:41">&lt;</operator> <name pos:start="325:43" pos:end="325:73"><name pos:start="325:43" pos:end="325:43">s</name><operator pos:start="325:44" pos:end="325:45">-&gt;</operator><name pos:start="325:46" pos:end="325:52">options</name><operator pos:start="325:53" pos:end="325:53">.</operator><name pos:start="325:54" pos:end="325:73">min_prediction_order</name></name></expr>)</condition> <block pos:start="325:76" pos:end="333:5">{<block_content pos:start="327:9" pos:end="331:18">

        <expr_stmt pos:start="327:9" pos:end="329:81"><expr pos:start="327:9" pos:end="329:80"><call pos:start="327:9" pos:end="329:80"><name pos:start="327:9" pos:end="327:14">av_log</name><argument_list pos:start="327:15" pos:end="329:80">(<argument pos:start="327:16" pos:end="327:20"><expr pos:start="327:16" pos:end="327:20"><name pos:start="327:16" pos:end="327:20">avctx</name></expr></argument>, <argument pos:start="327:23" pos:end="327:34"><expr pos:start="327:23" pos:end="327:34"><name pos:start="327:23" pos:end="327:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="327:37" pos:end="327:80"><expr pos:start="327:37" pos:end="327:80"><literal type="string" pos:start="327:37" pos:end="327:80">"invalid prediction orders: min=%d max=%d\n"</literal></expr></argument>,

               <argument pos:start="329:16" pos:end="329:46"><expr pos:start="329:16" pos:end="329:46"><name pos:start="329:16" pos:end="329:46"><name pos:start="329:16" pos:end="329:16">s</name><operator pos:start="329:17" pos:end="329:18">-&gt;</operator><name pos:start="329:19" pos:end="329:25">options</name><operator pos:start="329:26" pos:end="329:26">.</operator><name pos:start="329:27" pos:end="329:46">min_prediction_order</name></name></expr></argument>, <argument pos:start="329:49" pos:end="329:79"><expr pos:start="329:49" pos:end="329:79"><name pos:start="329:49" pos:end="329:79"><name pos:start="329:49" pos:end="329:49">s</name><operator pos:start="329:50" pos:end="329:51">-&gt;</operator><name pos:start="329:52" pos:end="329:58">options</name><operator pos:start="329:59" pos:end="329:59">.</operator><name pos:start="329:60" pos:end="329:79">max_prediction_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="331:9" pos:end="331:18">return <expr pos:start="331:16" pos:end="331:17"><operator pos:start="331:16" pos:end="331:16">-</operator><literal type="number" pos:start="331:17" pos:end="331:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="335:5" pos:end="337:77"><expr pos:start="335:5" pos:end="337:76"><call pos:start="335:5" pos:end="337:76"><name pos:start="335:5" pos:end="335:10">av_log</name><argument_list pos:start="335:11" pos:end="337:76">(<argument pos:start="335:12" pos:end="335:16"><expr pos:start="335:12" pos:end="335:16"><name pos:start="335:12" pos:end="335:16">avctx</name></expr></argument>, <argument pos:start="335:19" pos:end="335:30"><expr pos:start="335:19" pos:end="335:30"><name pos:start="335:19" pos:end="335:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="335:33" pos:end="335:61"><expr pos:start="335:33" pos:end="335:61"><literal type="string" pos:start="335:33" pos:end="335:61">" prediction order: %d, %d\n"</literal></expr></argument>,

           <argument pos:start="337:12" pos:end="337:42"><expr pos:start="337:12" pos:end="337:42"><name pos:start="337:12" pos:end="337:42"><name pos:start="337:12" pos:end="337:12">s</name><operator pos:start="337:13" pos:end="337:14">-&gt;</operator><name pos:start="337:15" pos:end="337:21">options</name><operator pos:start="337:22" pos:end="337:22">.</operator><name pos:start="337:23" pos:end="337:42">min_prediction_order</name></name></expr></argument>, <argument pos:start="337:45" pos:end="337:75"><expr pos:start="337:45" pos:end="337:75"><name pos:start="337:45" pos:end="337:75"><name pos:start="337:45" pos:end="337:45">s</name><operator pos:start="337:46" pos:end="337:47">-&gt;</operator><name pos:start="337:48" pos:end="337:54">options</name><operator pos:start="337:55" pos:end="337:55">.</operator><name pos:start="337:56" pos:end="337:75">max_prediction_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="341:5" pos:end="355:5"><if pos:start="341:5" pos:end="355:5">if <condition pos:start="341:8" pos:end="341:44">(<expr pos:start="341:9" pos:end="341:43"><name pos:start="341:9" pos:end="341:38"><name pos:start="341:9" pos:end="341:13">avctx</name><operator pos:start="341:14" pos:end="341:15">-&gt;</operator><name pos:start="341:16" pos:end="341:38">prediction_order_method</name></name> <operator pos:start="341:40" pos:end="341:41">&gt;=</operator> <literal type="number" pos:start="341:43" pos:end="341:43">0</literal></expr>)</condition> <block pos:start="341:46" pos:end="355:5">{<block_content pos:start="343:9" pos:end="353:76">

        <if_stmt pos:start="343:9" pos:end="351:9"><if pos:start="343:9" pos:end="351:9">if <condition pos:start="343:12" pos:end="343:62">(<expr pos:start="343:13" pos:end="343:61"><name pos:start="343:13" pos:end="343:42"><name pos:start="343:13" pos:end="343:17">avctx</name><operator pos:start="343:18" pos:end="343:19">-&gt;</operator><name pos:start="343:20" pos:end="343:42">prediction_order_method</name></name> <operator pos:start="343:44" pos:end="343:44">&gt;</operator> <name pos:start="343:46" pos:end="343:61">ORDER_METHOD_LOG</name></expr>)</condition> <block pos:start="343:64" pos:end="351:9">{<block_content pos:start="345:13" pos:end="349:22">

            <expr_stmt pos:start="345:13" pos:end="347:51"><expr pos:start="345:13" pos:end="347:50"><call pos:start="345:13" pos:end="347:50"><name pos:start="345:13" pos:end="345:18">av_log</name><argument_list pos:start="345:19" pos:end="347:50">(<argument pos:start="345:20" pos:end="345:24"><expr pos:start="345:20" pos:end="345:24"><name pos:start="345:20" pos:end="345:24">avctx</name></expr></argument>, <argument pos:start="345:27" pos:end="345:38"><expr pos:start="345:27" pos:end="345:38"><name pos:start="345:27" pos:end="345:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="345:41" pos:end="345:79"><expr pos:start="345:41" pos:end="345:79"><literal type="string" pos:start="345:41" pos:end="345:79">"invalid prediction order method: %d\n"</literal></expr></argument>,

                   <argument pos:start="347:20" pos:end="347:49"><expr pos:start="347:20" pos:end="347:49"><name pos:start="347:20" pos:end="347:49"><name pos:start="347:20" pos:end="347:24">avctx</name><operator pos:start="347:25" pos:end="347:26">-&gt;</operator><name pos:start="347:27" pos:end="347:49">prediction_order_method</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="349:13" pos:end="349:22">return <expr pos:start="349:20" pos:end="349:21"><operator pos:start="349:20" pos:end="349:20">-</operator><literal type="number" pos:start="349:21" pos:end="349:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="353:9" pos:end="353:76"><expr pos:start="353:9" pos:end="353:75"><name pos:start="353:9" pos:end="353:42"><name pos:start="353:9" pos:end="353:9">s</name><operator pos:start="353:10" pos:end="353:11">-&gt;</operator><name pos:start="353:12" pos:end="353:18">options</name><operator pos:start="353:19" pos:end="353:19">.</operator><name pos:start="353:20" pos:end="353:42">prediction_order_method</name></name> <operator pos:start="353:44" pos:end="353:44">=</operator> <name pos:start="353:46" pos:end="353:75"><name pos:start="353:46" pos:end="353:50">avctx</name><operator pos:start="353:51" pos:end="353:52">-&gt;</operator><name pos:start="353:53" pos:end="353:75">prediction_order_method</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="357:5" pos:end="383:5">switch <condition pos:start="357:12" pos:end="357:47">(<expr pos:start="357:13" pos:end="357:46"><name pos:start="357:13" pos:end="357:46"><name pos:start="357:13" pos:end="357:13">s</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:22">options</name><operator pos:start="357:23" pos:end="357:23">.</operator><name pos:start="357:24" pos:end="357:46">prediction_order_method</name></name></expr>)</condition> <block pos:start="357:49" pos:end="383:5">{<block_content pos:start="359:9" pos:end="381:62">

        <case pos:start="359:9" pos:end="359:30">case <expr pos:start="359:14" pos:end="359:29"><name pos:start="359:14" pos:end="359:29">ORDER_METHOD_EST</name></expr>:</case>    <expr_stmt pos:start="359:35" pos:end="361:53"><expr pos:start="359:35" pos:end="361:52"><call pos:start="359:35" pos:end="361:52"><name pos:start="359:35" pos:end="359:40">av_log</name><argument_list pos:start="359:41" pos:end="361:52">(<argument pos:start="359:42" pos:end="359:46"><expr pos:start="359:42" pos:end="359:46"><name pos:start="359:42" pos:end="359:46">avctx</name></expr></argument>, <argument pos:start="359:49" pos:end="359:60"><expr pos:start="359:49" pos:end="359:60"><name pos:start="359:49" pos:end="359:60">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="359:63" pos:end="359:83"><expr pos:start="359:63" pos:end="359:83"><literal type="string" pos:start="359:63" pos:end="359:83">" order method: %s\n"</literal></expr></argument>,

                                         <argument pos:start="361:42" pos:end="361:51"><expr pos:start="361:42" pos:end="361:51"><literal type="string" pos:start="361:42" pos:end="361:51">"estimate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="361:55" pos:end="361:60">break;</break>

        <case pos:start="363:9" pos:end="363:33">case <expr pos:start="363:14" pos:end="363:32"><name pos:start="363:14" pos:end="363:32">ORDER_METHOD_2LEVEL</name></expr>:</case> <expr_stmt pos:start="363:35" pos:end="365:52"><expr pos:start="363:35" pos:end="365:51"><call pos:start="363:35" pos:end="365:51"><name pos:start="363:35" pos:end="363:40">av_log</name><argument_list pos:start="363:41" pos:end="365:51">(<argument pos:start="363:42" pos:end="363:46"><expr pos:start="363:42" pos:end="363:46"><name pos:start="363:42" pos:end="363:46">avctx</name></expr></argument>, <argument pos:start="363:49" pos:end="363:60"><expr pos:start="363:49" pos:end="363:60"><name pos:start="363:49" pos:end="363:60">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="363:63" pos:end="363:83"><expr pos:start="363:63" pos:end="363:83"><literal type="string" pos:start="363:63" pos:end="363:83">" order method: %s\n"</literal></expr></argument>,

                                         <argument pos:start="365:42" pos:end="365:50"><expr pos:start="365:42" pos:end="365:50"><literal type="string" pos:start="365:42" pos:end="365:50">"2-level"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="365:54" pos:end="365:59">break;</break>

        <case pos:start="367:9" pos:end="367:33">case <expr pos:start="367:14" pos:end="367:32"><name pos:start="367:14" pos:end="367:32">ORDER_METHOD_4LEVEL</name></expr>:</case> <expr_stmt pos:start="367:35" pos:end="369:52"><expr pos:start="367:35" pos:end="369:51"><call pos:start="367:35" pos:end="369:51"><name pos:start="367:35" pos:end="367:40">av_log</name><argument_list pos:start="367:41" pos:end="369:51">(<argument pos:start="367:42" pos:end="367:46"><expr pos:start="367:42" pos:end="367:46"><name pos:start="367:42" pos:end="367:46">avctx</name></expr></argument>, <argument pos:start="367:49" pos:end="367:60"><expr pos:start="367:49" pos:end="367:60"><name pos:start="367:49" pos:end="367:60">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="367:63" pos:end="367:83"><expr pos:start="367:63" pos:end="367:83"><literal type="string" pos:start="367:63" pos:end="367:83">" order method: %s\n"</literal></expr></argument>,

                                         <argument pos:start="369:42" pos:end="369:50"><expr pos:start="369:42" pos:end="369:50"><literal type="string" pos:start="369:42" pos:end="369:50">"4-level"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="369:54" pos:end="369:59">break;</break>

        <case pos:start="371:9" pos:end="371:33">case <expr pos:start="371:14" pos:end="371:32"><name pos:start="371:14" pos:end="371:32">ORDER_METHOD_8LEVEL</name></expr>:</case> <expr_stmt pos:start="371:35" pos:end="373:52"><expr pos:start="371:35" pos:end="373:51"><call pos:start="371:35" pos:end="373:51"><name pos:start="371:35" pos:end="371:40">av_log</name><argument_list pos:start="371:41" pos:end="373:51">(<argument pos:start="371:42" pos:end="371:46"><expr pos:start="371:42" pos:end="371:46"><name pos:start="371:42" pos:end="371:46">avctx</name></expr></argument>, <argument pos:start="371:49" pos:end="371:60"><expr pos:start="371:49" pos:end="371:60"><name pos:start="371:49" pos:end="371:60">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="371:63" pos:end="371:83"><expr pos:start="371:63" pos:end="371:83"><literal type="string" pos:start="371:63" pos:end="371:83">" order method: %s\n"</literal></expr></argument>,

                                         <argument pos:start="373:42" pos:end="373:50"><expr pos:start="373:42" pos:end="373:50"><literal type="string" pos:start="373:42" pos:end="373:50">"8-level"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="373:54" pos:end="373:59">break;</break>

        <case pos:start="375:9" pos:end="375:33">case <expr pos:start="375:14" pos:end="375:32"><name pos:start="375:14" pos:end="375:32">ORDER_METHOD_SEARCH</name></expr>:</case> <expr_stmt pos:start="375:35" pos:end="377:56"><expr pos:start="375:35" pos:end="377:55"><call pos:start="375:35" pos:end="377:55"><name pos:start="375:35" pos:end="375:40">av_log</name><argument_list pos:start="375:41" pos:end="377:55">(<argument pos:start="375:42" pos:end="375:46"><expr pos:start="375:42" pos:end="375:46"><name pos:start="375:42" pos:end="375:46">avctx</name></expr></argument>, <argument pos:start="375:49" pos:end="375:60"><expr pos:start="375:49" pos:end="375:60"><name pos:start="375:49" pos:end="375:60">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="375:63" pos:end="375:83"><expr pos:start="375:63" pos:end="375:83"><literal type="string" pos:start="375:63" pos:end="375:83">" order method: %s\n"</literal></expr></argument>,

                                         <argument pos:start="377:42" pos:end="377:54"><expr pos:start="377:42" pos:end="377:54"><literal type="string" pos:start="377:42" pos:end="377:54">"full search"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="377:58" pos:end="377:63">break;</break>

        <case pos:start="379:9" pos:end="379:30">case <expr pos:start="379:14" pos:end="379:29"><name pos:start="379:14" pos:end="379:29">ORDER_METHOD_LOG</name></expr>:</case>    <expr_stmt pos:start="379:35" pos:end="381:55"><expr pos:start="379:35" pos:end="381:54"><call pos:start="379:35" pos:end="381:54"><name pos:start="379:35" pos:end="379:40">av_log</name><argument_list pos:start="379:41" pos:end="381:54">(<argument pos:start="379:42" pos:end="379:46"><expr pos:start="379:42" pos:end="379:46"><name pos:start="379:42" pos:end="379:46">avctx</name></expr></argument>, <argument pos:start="379:49" pos:end="379:60"><expr pos:start="379:49" pos:end="379:60"><name pos:start="379:49" pos:end="379:60">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="379:63" pos:end="379:83"><expr pos:start="379:63" pos:end="379:83"><literal type="string" pos:start="379:63" pos:end="379:83">" order method: %s\n"</literal></expr></argument>,

                                         <argument pos:start="381:42" pos:end="381:53"><expr pos:start="381:42" pos:end="381:53"><literal type="string" pos:start="381:42" pos:end="381:53">"log search"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="381:57" pos:end="381:62">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="387:5" pos:end="401:5"><if pos:start="387:5" pos:end="401:5">if <condition pos:start="387:8" pos:end="387:40">(<expr pos:start="387:9" pos:end="387:39"><name pos:start="387:9" pos:end="387:34"><name pos:start="387:9" pos:end="387:13">avctx</name><operator pos:start="387:14" pos:end="387:15">-&gt;</operator><name pos:start="387:16" pos:end="387:34">min_partition_order</name></name> <operator pos:start="387:36" pos:end="387:37">&gt;=</operator> <literal type="number" pos:start="387:39" pos:end="387:39">0</literal></expr>)</condition> <block pos:start="387:42" pos:end="401:5">{<block_content pos:start="389:9" pos:end="399:68">

        <if_stmt pos:start="389:9" pos:end="397:9"><if pos:start="389:9" pos:end="397:9">if <condition pos:start="389:12" pos:end="389:61">(<expr pos:start="389:13" pos:end="389:60"><name pos:start="389:13" pos:end="389:38"><name pos:start="389:13" pos:end="389:17">avctx</name><operator pos:start="389:18" pos:end="389:19">-&gt;</operator><name pos:start="389:20" pos:end="389:38">min_partition_order</name></name> <operator pos:start="389:40" pos:end="389:40">&gt;</operator> <name pos:start="389:42" pos:end="389:60">MAX_PARTITION_ORDER</name></expr>)</condition> <block pos:start="389:63" pos:end="397:9">{<block_content pos:start="391:13" pos:end="395:22">

            <expr_stmt pos:start="391:13" pos:end="393:47"><expr pos:start="391:13" pos:end="393:46"><call pos:start="391:13" pos:end="393:46"><name pos:start="391:13" pos:end="391:18">av_log</name><argument_list pos:start="391:19" pos:end="393:46">(<argument pos:start="391:20" pos:end="391:24"><expr pos:start="391:20" pos:end="391:24"><name pos:start="391:20" pos:end="391:24">avctx</name></expr></argument>, <argument pos:start="391:27" pos:end="391:38"><expr pos:start="391:27" pos:end="391:38"><name pos:start="391:27" pos:end="391:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="391:41" pos:end="391:75"><expr pos:start="391:41" pos:end="391:75"><literal type="string" pos:start="391:41" pos:end="391:75">"invalid min partition order: %d\n"</literal></expr></argument>,

                   <argument pos:start="393:20" pos:end="393:45"><expr pos:start="393:20" pos:end="393:45"><name pos:start="393:20" pos:end="393:45"><name pos:start="393:20" pos:end="393:24">avctx</name><operator pos:start="393:25" pos:end="393:26">-&gt;</operator><name pos:start="393:27" pos:end="393:45">min_partition_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="395:13" pos:end="395:22">return <expr pos:start="395:20" pos:end="395:21"><operator pos:start="395:20" pos:end="395:20">-</operator><literal type="number" pos:start="395:21" pos:end="395:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="399:9" pos:end="399:68"><expr pos:start="399:9" pos:end="399:67"><name pos:start="399:9" pos:end="399:38"><name pos:start="399:9" pos:end="399:9">s</name><operator pos:start="399:10" pos:end="399:11">-&gt;</operator><name pos:start="399:12" pos:end="399:18">options</name><operator pos:start="399:19" pos:end="399:19">.</operator><name pos:start="399:20" pos:end="399:38">min_partition_order</name></name> <operator pos:start="399:40" pos:end="399:40">=</operator> <name pos:start="399:42" pos:end="399:67"><name pos:start="399:42" pos:end="399:46">avctx</name><operator pos:start="399:47" pos:end="399:48">-&gt;</operator><name pos:start="399:49" pos:end="399:67">min_partition_order</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="403:5" pos:end="417:5"><if pos:start="403:5" pos:end="417:5">if <condition pos:start="403:8" pos:end="403:40">(<expr pos:start="403:9" pos:end="403:39"><name pos:start="403:9" pos:end="403:34"><name pos:start="403:9" pos:end="403:13">avctx</name><operator pos:start="403:14" pos:end="403:15">-&gt;</operator><name pos:start="403:16" pos:end="403:34">max_partition_order</name></name> <operator pos:start="403:36" pos:end="403:37">&gt;=</operator> <literal type="number" pos:start="403:39" pos:end="403:39">0</literal></expr>)</condition> <block pos:start="403:42" pos:end="417:5">{<block_content pos:start="405:9" pos:end="415:68">

        <if_stmt pos:start="405:9" pos:end="413:9"><if pos:start="405:9" pos:end="413:9">if <condition pos:start="405:12" pos:end="405:61">(<expr pos:start="405:13" pos:end="405:60"><name pos:start="405:13" pos:end="405:38"><name pos:start="405:13" pos:end="405:17">avctx</name><operator pos:start="405:18" pos:end="405:19">-&gt;</operator><name pos:start="405:20" pos:end="405:38">max_partition_order</name></name> <operator pos:start="405:40" pos:end="405:40">&gt;</operator> <name pos:start="405:42" pos:end="405:60">MAX_PARTITION_ORDER</name></expr>)</condition> <block pos:start="405:63" pos:end="413:9">{<block_content pos:start="407:13" pos:end="411:22">

            <expr_stmt pos:start="407:13" pos:end="409:47"><expr pos:start="407:13" pos:end="409:46"><call pos:start="407:13" pos:end="409:46"><name pos:start="407:13" pos:end="407:18">av_log</name><argument_list pos:start="407:19" pos:end="409:46">(<argument pos:start="407:20" pos:end="407:24"><expr pos:start="407:20" pos:end="407:24"><name pos:start="407:20" pos:end="407:24">avctx</name></expr></argument>, <argument pos:start="407:27" pos:end="407:38"><expr pos:start="407:27" pos:end="407:38"><name pos:start="407:27" pos:end="407:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="407:41" pos:end="407:75"><expr pos:start="407:41" pos:end="407:75"><literal type="string" pos:start="407:41" pos:end="407:75">"invalid max partition order: %d\n"</literal></expr></argument>,

                   <argument pos:start="409:20" pos:end="409:45"><expr pos:start="409:20" pos:end="409:45"><name pos:start="409:20" pos:end="409:45"><name pos:start="409:20" pos:end="409:24">avctx</name><operator pos:start="409:25" pos:end="409:26">-&gt;</operator><name pos:start="409:27" pos:end="409:45">max_partition_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="411:13" pos:end="411:22">return <expr pos:start="411:20" pos:end="411:21"><operator pos:start="411:20" pos:end="411:20">-</operator><literal type="number" pos:start="411:21" pos:end="411:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="415:9" pos:end="415:68"><expr pos:start="415:9" pos:end="415:67"><name pos:start="415:9" pos:end="415:38"><name pos:start="415:9" pos:end="415:9">s</name><operator pos:start="415:10" pos:end="415:11">-&gt;</operator><name pos:start="415:12" pos:end="415:18">options</name><operator pos:start="415:19" pos:end="415:19">.</operator><name pos:start="415:20" pos:end="415:38">max_partition_order</name></name> <operator pos:start="415:40" pos:end="415:40">=</operator> <name pos:start="415:42" pos:end="415:67"><name pos:start="415:42" pos:end="415:46">avctx</name><operator pos:start="415:47" pos:end="415:48">-&gt;</operator><name pos:start="415:49" pos:end="415:67">max_partition_order</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="419:5" pos:end="427:5"><if pos:start="419:5" pos:end="427:5">if <condition pos:start="419:8" pos:end="419:72">(<expr pos:start="419:9" pos:end="419:71"><name pos:start="419:9" pos:end="419:38"><name pos:start="419:9" pos:end="419:9">s</name><operator pos:start="419:10" pos:end="419:11">-&gt;</operator><name pos:start="419:12" pos:end="419:18">options</name><operator pos:start="419:19" pos:end="419:19">.</operator><name pos:start="419:20" pos:end="419:38">max_partition_order</name></name> <operator pos:start="419:40" pos:end="419:40">&lt;</operator> <name pos:start="419:42" pos:end="419:71"><name pos:start="419:42" pos:end="419:42">s</name><operator pos:start="419:43" pos:end="419:44">-&gt;</operator><name pos:start="419:45" pos:end="419:51">options</name><operator pos:start="419:52" pos:end="419:52">.</operator><name pos:start="419:53" pos:end="419:71">min_partition_order</name></name></expr>)</condition> <block pos:start="419:74" pos:end="427:5">{<block_content pos:start="421:9" pos:end="425:18">

        <expr_stmt pos:start="421:9" pos:end="423:79"><expr pos:start="421:9" pos:end="423:78"><call pos:start="421:9" pos:end="423:78"><name pos:start="421:9" pos:end="421:14">av_log</name><argument_list pos:start="421:15" pos:end="423:78">(<argument pos:start="421:16" pos:end="421:20"><expr pos:start="421:16" pos:end="421:20"><name pos:start="421:16" pos:end="421:20">avctx</name></expr></argument>, <argument pos:start="421:23" pos:end="421:34"><expr pos:start="421:23" pos:end="421:34"><name pos:start="421:23" pos:end="421:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="421:37" pos:end="421:79"><expr pos:start="421:37" pos:end="421:79"><literal type="string" pos:start="421:37" pos:end="421:79">"invalid partition orders: min=%d max=%d\n"</literal></expr></argument>,

               <argument pos:start="423:16" pos:end="423:45"><expr pos:start="423:16" pos:end="423:45"><name pos:start="423:16" pos:end="423:45"><name pos:start="423:16" pos:end="423:16">s</name><operator pos:start="423:17" pos:end="423:18">-&gt;</operator><name pos:start="423:19" pos:end="423:25">options</name><operator pos:start="423:26" pos:end="423:26">.</operator><name pos:start="423:27" pos:end="423:45">min_partition_order</name></name></expr></argument>, <argument pos:start="423:48" pos:end="423:77"><expr pos:start="423:48" pos:end="423:77"><name pos:start="423:48" pos:end="423:77"><name pos:start="423:48" pos:end="423:48">s</name><operator pos:start="423:49" pos:end="423:50">-&gt;</operator><name pos:start="423:51" pos:end="423:57">options</name><operator pos:start="423:58" pos:end="423:58">.</operator><name pos:start="423:59" pos:end="423:77">max_partition_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="425:9" pos:end="425:18">return <expr pos:start="425:16" pos:end="425:17"><operator pos:start="425:16" pos:end="425:16">-</operator><literal type="number" pos:start="425:17" pos:end="425:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="429:5" pos:end="431:75"><expr pos:start="429:5" pos:end="431:74"><call pos:start="429:5" pos:end="431:74"><name pos:start="429:5" pos:end="429:10">av_log</name><argument_list pos:start="429:11" pos:end="431:74">(<argument pos:start="429:12" pos:end="429:16"><expr pos:start="429:12" pos:end="429:16"><name pos:start="429:12" pos:end="429:16">avctx</name></expr></argument>, <argument pos:start="429:19" pos:end="429:30"><expr pos:start="429:19" pos:end="429:30"><name pos:start="429:19" pos:end="429:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="429:33" pos:end="429:60"><expr pos:start="429:33" pos:end="429:60"><literal type="string" pos:start="429:33" pos:end="429:60">" partition order: %d, %d\n"</literal></expr></argument>,

           <argument pos:start="431:12" pos:end="431:41"><expr pos:start="431:12" pos:end="431:41"><name pos:start="431:12" pos:end="431:41"><name pos:start="431:12" pos:end="431:12">s</name><operator pos:start="431:13" pos:end="431:14">-&gt;</operator><name pos:start="431:15" pos:end="431:21">options</name><operator pos:start="431:22" pos:end="431:22">.</operator><name pos:start="431:23" pos:end="431:41">min_partition_order</name></name></expr></argument>, <argument pos:start="431:44" pos:end="431:73"><expr pos:start="431:44" pos:end="431:73"><name pos:start="431:44" pos:end="431:73"><name pos:start="431:44" pos:end="431:44">s</name><operator pos:start="431:45" pos:end="431:46">-&gt;</operator><name pos:start="431:47" pos:end="431:53">options</name><operator pos:start="431:54" pos:end="431:54">.</operator><name pos:start="431:55" pos:end="431:73">max_partition_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="435:5" pos:end="453:5"><if pos:start="435:5" pos:end="449:5">if <condition pos:start="435:8" pos:end="435:30">(<expr pos:start="435:9" pos:end="435:29"><name pos:start="435:9" pos:end="435:25"><name pos:start="435:9" pos:end="435:13">avctx</name><operator pos:start="435:14" pos:end="435:15">-&gt;</operator><name pos:start="435:16" pos:end="435:25">frame_size</name></name> <operator pos:start="435:27" pos:end="435:27">&gt;</operator> <literal type="number" pos:start="435:29" pos:end="435:29">0</literal></expr>)</condition> <block pos:start="435:32" pos:end="449:5">{<block_content pos:start="437:9" pos:end="447:9">

        <if_stmt pos:start="437:9" pos:end="447:9"><if pos:start="437:9" pos:end="447:9">if <condition pos:start="437:12" pos:end="439:55">(<expr pos:start="437:13" pos:end="439:54"><name pos:start="437:13" pos:end="437:29"><name pos:start="437:13" pos:end="437:17">avctx</name><operator pos:start="437:18" pos:end="437:19">-&gt;</operator><name pos:start="437:20" pos:end="437:29">frame_size</name></name> <operator pos:start="437:31" pos:end="437:31">&lt;</operator> <name pos:start="437:33" pos:end="437:50">FLAC_MIN_BLOCKSIZE</name> <operator pos:start="437:52" pos:end="437:53">||</operator>

                <name pos:start="439:17" pos:end="439:33"><name pos:start="439:17" pos:end="439:21">avctx</name><operator pos:start="439:22" pos:end="439:23">-&gt;</operator><name pos:start="439:24" pos:end="439:33">frame_size</name></name> <operator pos:start="439:35" pos:end="439:35">&gt;</operator> <name pos:start="439:37" pos:end="439:54">FLAC_MAX_BLOCKSIZE</name></expr>)</condition> <block pos:start="439:57" pos:end="447:9">{<block_content pos:start="441:13" pos:end="445:22">

            <expr_stmt pos:start="441:13" pos:end="443:38"><expr pos:start="441:13" pos:end="443:37"><call pos:start="441:13" pos:end="443:37"><name pos:start="441:13" pos:end="441:18">av_log</name><argument_list pos:start="441:19" pos:end="443:37">(<argument pos:start="441:20" pos:end="441:24"><expr pos:start="441:20" pos:end="441:24"><name pos:start="441:20" pos:end="441:24">avctx</name></expr></argument>, <argument pos:start="441:27" pos:end="441:38"><expr pos:start="441:27" pos:end="441:38"><name pos:start="441:27" pos:end="441:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="441:41" pos:end="441:66"><expr pos:start="441:41" pos:end="441:66"><literal type="string" pos:start="441:41" pos:end="441:66">"invalid block size: %d\n"</literal></expr></argument>,

                   <argument pos:start="443:20" pos:end="443:36"><expr pos:start="443:20" pos:end="443:36"><name pos:start="443:20" pos:end="443:36"><name pos:start="443:20" pos:end="443:24">avctx</name><operator pos:start="443:25" pos:end="443:26">-&gt;</operator><name pos:start="443:27" pos:end="443:36">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="445:13" pos:end="445:22">return <expr pos:start="445:20" pos:end="445:21"><operator pos:start="445:20" pos:end="445:20">-</operator><literal type="number" pos:start="445:21" pos:end="445:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="449:7" pos:end="453:5">else <block pos:start="449:12" pos:end="453:5">{<block_content pos:start="451:9" pos:end="451:89">

        <expr_stmt pos:start="451:9" pos:end="451:89"><expr pos:start="451:9" pos:end="451:88"><name pos:start="451:9" pos:end="451:28"><name pos:start="451:9" pos:end="451:9">s</name><operator pos:start="451:10" pos:end="451:11">-&gt;</operator><name pos:start="451:12" pos:end="451:16">avctx</name><operator pos:start="451:17" pos:end="451:18">-&gt;</operator><name pos:start="451:19" pos:end="451:28">frame_size</name></name> <operator pos:start="451:30" pos:end="451:30">=</operator> <call pos:start="451:32" pos:end="451:88"><name pos:start="451:32" pos:end="451:47">select_blocksize</name><argument_list pos:start="451:48" pos:end="451:88">(<argument pos:start="451:49" pos:end="451:61"><expr pos:start="451:49" pos:end="451:61"><name pos:start="451:49" pos:end="451:61"><name pos:start="451:49" pos:end="451:49">s</name><operator pos:start="451:50" pos:end="451:51">-&gt;</operator><name pos:start="451:52" pos:end="451:61">samplerate</name></name></expr></argument>, <argument pos:start="451:64" pos:end="451:87"><expr pos:start="451:64" pos:end="451:87"><name pos:start="451:64" pos:end="451:87"><name pos:start="451:64" pos:end="451:64">s</name><operator pos:start="451:65" pos:end="451:66">-&gt;</operator><name pos:start="451:67" pos:end="451:73">options</name><operator pos:start="451:74" pos:end="451:74">.</operator><name pos:start="451:75" pos:end="451:87">block_time_ms</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="455:5" pos:end="455:44"><expr pos:start="455:5" pos:end="455:43"><name pos:start="455:5" pos:end="455:20"><name pos:start="455:5" pos:end="455:5">s</name><operator pos:start="455:6" pos:end="455:7">-&gt;</operator><name pos:start="455:8" pos:end="455:20">max_blocksize</name></name> <operator pos:start="455:22" pos:end="455:22">=</operator> <name pos:start="455:24" pos:end="455:43"><name pos:start="455:24" pos:end="455:24">s</name><operator pos:start="455:25" pos:end="455:26">-&gt;</operator><name pos:start="455:27" pos:end="455:31">avctx</name><operator pos:start="455:32" pos:end="455:33">-&gt;</operator><name pos:start="455:34" pos:end="455:43">frame_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="457:5" pos:end="457:75"><expr pos:start="457:5" pos:end="457:74"><call pos:start="457:5" pos:end="457:74"><name pos:start="457:5" pos:end="457:10">av_log</name><argument_list pos:start="457:11" pos:end="457:74">(<argument pos:start="457:12" pos:end="457:16"><expr pos:start="457:12" pos:end="457:16"><name pos:start="457:12" pos:end="457:16">avctx</name></expr></argument>, <argument pos:start="457:19" pos:end="457:30"><expr pos:start="457:19" pos:end="457:30"><name pos:start="457:19" pos:end="457:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="457:33" pos:end="457:51"><expr pos:start="457:33" pos:end="457:51"><literal type="string" pos:start="457:33" pos:end="457:51">" block size: %d\n"</literal></expr></argument>, <argument pos:start="457:54" pos:end="457:73"><expr pos:start="457:54" pos:end="457:73"><name pos:start="457:54" pos:end="457:73"><name pos:start="457:54" pos:end="457:54">s</name><operator pos:start="457:55" pos:end="457:56">-&gt;</operator><name pos:start="457:57" pos:end="457:61">avctx</name><operator pos:start="457:62" pos:end="457:63">-&gt;</operator><name pos:start="457:64" pos:end="457:73">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="461:5" pos:end="461:27">/* set LPC precision */</comment>

    <if_stmt pos:start="463:5" pos:end="483:5"><if pos:start="463:5" pos:end="477:5">if <condition pos:start="463:8" pos:end="463:39">(<expr pos:start="463:9" pos:end="463:38"><name pos:start="463:9" pos:end="463:34"><name pos:start="463:9" pos:end="463:13">avctx</name><operator pos:start="463:14" pos:end="463:15">-&gt;</operator><name pos:start="463:16" pos:end="463:34">lpc_coeff_precision</name></name> <operator pos:start="463:36" pos:end="463:36">&gt;</operator> <literal type="number" pos:start="463:38" pos:end="463:38">0</literal></expr>)</condition> <block pos:start="463:41" pos:end="477:5">{<block_content pos:start="465:9" pos:end="475:68">

        <if_stmt pos:start="465:9" pos:end="473:9"><if pos:start="465:9" pos:end="473:9">if <condition pos:start="465:12" pos:end="465:59">(<expr pos:start="465:13" pos:end="465:58"><name pos:start="465:13" pos:end="465:38"><name pos:start="465:13" pos:end="465:17">avctx</name><operator pos:start="465:18" pos:end="465:19">-&gt;</operator><name pos:start="465:20" pos:end="465:38">lpc_coeff_precision</name></name> <operator pos:start="465:40" pos:end="465:40">&gt;</operator> <name pos:start="465:42" pos:end="465:58">MAX_LPC_PRECISION</name></expr>)</condition> <block pos:start="465:61" pos:end="473:9">{<block_content pos:start="467:13" pos:end="471:22">

            <expr_stmt pos:start="467:13" pos:end="469:47"><expr pos:start="467:13" pos:end="469:46"><call pos:start="467:13" pos:end="469:46"><name pos:start="467:13" pos:end="467:18">av_log</name><argument_list pos:start="467:19" pos:end="469:46">(<argument pos:start="467:20" pos:end="467:24"><expr pos:start="467:20" pos:end="467:24"><name pos:start="467:20" pos:end="467:24">avctx</name></expr></argument>, <argument pos:start="467:27" pos:end="467:38"><expr pos:start="467:27" pos:end="467:38"><name pos:start="467:27" pos:end="467:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="467:41" pos:end="467:75"><expr pos:start="467:41" pos:end="467:75"><literal type="string" pos:start="467:41" pos:end="467:75">"invalid lpc coeff precision: %d\n"</literal></expr></argument>,

                   <argument pos:start="469:20" pos:end="469:45"><expr pos:start="469:20" pos:end="469:45"><name pos:start="469:20" pos:end="469:45"><name pos:start="469:20" pos:end="469:24">avctx</name><operator pos:start="469:25" pos:end="469:26">-&gt;</operator><name pos:start="469:27" pos:end="469:45">lpc_coeff_precision</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="471:13" pos:end="471:22">return <expr pos:start="471:20" pos:end="471:21"><operator pos:start="471:20" pos:end="471:20">-</operator><literal type="number" pos:start="471:21" pos:end="471:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="475:9" pos:end="475:68"><expr pos:start="475:9" pos:end="475:67"><name pos:start="475:9" pos:end="475:38"><name pos:start="475:9" pos:end="475:9">s</name><operator pos:start="475:10" pos:end="475:11">-&gt;</operator><name pos:start="475:12" pos:end="475:18">options</name><operator pos:start="475:19" pos:end="475:19">.</operator><name pos:start="475:20" pos:end="475:38">lpc_coeff_precision</name></name> <operator pos:start="475:40" pos:end="475:40">=</operator> <name pos:start="475:42" pos:end="475:67"><name pos:start="475:42" pos:end="475:46">avctx</name><operator pos:start="475:47" pos:end="475:48">-&gt;</operator><name pos:start="475:49" pos:end="475:67">lpc_coeff_precision</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="477:7" pos:end="483:5">else <block pos:start="477:12" pos:end="483:5">{<block_content pos:start="481:9" pos:end="481:44">

        <comment type="block" pos:start="479:9" pos:end="479:35">/* default LPC precision */</comment>

        <expr_stmt pos:start="481:9" pos:end="481:44"><expr pos:start="481:9" pos:end="481:43"><name pos:start="481:9" pos:end="481:38"><name pos:start="481:9" pos:end="481:9">s</name><operator pos:start="481:10" pos:end="481:11">-&gt;</operator><name pos:start="481:12" pos:end="481:18">options</name><operator pos:start="481:19" pos:end="481:19">.</operator><name pos:start="481:20" pos:end="481:38">lpc_coeff_precision</name></name> <operator pos:start="481:40" pos:end="481:40">=</operator> <literal type="number" pos:start="481:42" pos:end="481:43">15</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="485:5" pos:end="487:43"><expr pos:start="485:5" pos:end="487:42"><call pos:start="485:5" pos:end="487:42"><name pos:start="485:5" pos:end="485:10">av_log</name><argument_list pos:start="485:11" pos:end="487:42">(<argument pos:start="485:12" pos:end="485:16"><expr pos:start="485:12" pos:end="485:16"><name pos:start="485:12" pos:end="485:16">avctx</name></expr></argument>, <argument pos:start="485:19" pos:end="485:30"><expr pos:start="485:19" pos:end="485:30"><name pos:start="485:19" pos:end="485:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="485:33" pos:end="485:54"><expr pos:start="485:33" pos:end="485:54"><literal type="string" pos:start="485:33" pos:end="485:54">" lpc precision: %d\n"</literal></expr></argument>,

           <argument pos:start="487:12" pos:end="487:41"><expr pos:start="487:12" pos:end="487:41"><name pos:start="487:12" pos:end="487:41"><name pos:start="487:12" pos:end="487:12">s</name><operator pos:start="487:13" pos:end="487:14">-&gt;</operator><name pos:start="487:15" pos:end="487:21">options</name><operator pos:start="487:22" pos:end="487:22">.</operator><name pos:start="487:23" pos:end="487:41">lpc_coeff_precision</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="491:5" pos:end="491:57">/* set maximum encoded frame size in verbatim mode */</comment>

    <expr_stmt pos:start="493:5" pos:end="495:67"><expr pos:start="493:5" pos:end="495:66"><name pos:start="493:5" pos:end="493:20"><name pos:start="493:5" pos:end="493:5">s</name><operator pos:start="493:6" pos:end="493:7">-&gt;</operator><name pos:start="493:8" pos:end="493:20">max_framesize</name></name> <operator pos:start="493:22" pos:end="493:22">=</operator> <call pos:start="493:24" pos:end="495:66"><name pos:start="493:24" pos:end="493:49">ff_flac_get_max_frame_size</name><argument_list pos:start="493:50" pos:end="495:66">(<argument pos:start="493:51" pos:end="493:70"><expr pos:start="493:51" pos:end="493:70"><name pos:start="493:51" pos:end="493:70"><name pos:start="493:51" pos:end="493:51">s</name><operator pos:start="493:52" pos:end="493:53">-&gt;</operator><name pos:start="493:54" pos:end="493:58">avctx</name><operator pos:start="493:59" pos:end="493:60">-&gt;</operator><name pos:start="493:61" pos:end="493:70">frame_size</name></name></expr></argument>,

                                                  <argument pos:start="495:51" pos:end="495:61"><expr pos:start="495:51" pos:end="495:61"><name pos:start="495:51" pos:end="495:61"><name pos:start="495:51" pos:end="495:51">s</name><operator pos:start="495:52" pos:end="495:53">-&gt;</operator><name pos:start="495:54" pos:end="495:61">channels</name></name></expr></argument>, <argument pos:start="495:64" pos:end="495:65"><expr pos:start="495:64" pos:end="495:65"><literal type="number" pos:start="495:64" pos:end="495:65">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="499:5" pos:end="499:32">/* initialize MD5 context */</comment>

    <expr_stmt pos:start="501:5" pos:end="501:39"><expr pos:start="501:5" pos:end="501:38"><name pos:start="501:5" pos:end="501:13"><name pos:start="501:5" pos:end="501:5">s</name><operator pos:start="501:6" pos:end="501:7">-&gt;</operator><name pos:start="501:8" pos:end="501:13">md5ctx</name></name> <operator pos:start="501:15" pos:end="501:15">=</operator> <call pos:start="501:17" pos:end="501:38"><name pos:start="501:17" pos:end="501:25">av_malloc</name><argument_list pos:start="501:26" pos:end="501:38">(<argument pos:start="501:27" pos:end="501:37"><expr pos:start="501:27" pos:end="501:37"><name pos:start="501:27" pos:end="501:37">av_md5_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="503:5" pos:end="506:27"><if pos:start="503:5" pos:end="506:27">if <condition pos:start="503:8" pos:end="503:19">(<expr pos:start="503:9" pos:end="503:18"><operator pos:start="503:9" pos:end="503:9">!</operator><name pos:start="503:10" pos:end="503:18"><name pos:start="503:10" pos:end="503:10">s</name><operator pos:start="503:11" pos:end="503:12">-&gt;</operator><name pos:start="503:13" pos:end="503:18">md5ctx</name></name></expr>)</condition><block type="pseudo" pos:start="506:5" pos:end="506:27"><block_content pos:start="506:5" pos:end="506:27">


    <expr_stmt pos:start="506:5" pos:end="506:27"><expr pos:start="506:5" pos:end="506:26"><call pos:start="506:5" pos:end="506:26"><name pos:start="506:5" pos:end="506:15">av_md5_init</name><argument_list pos:start="506:16" pos:end="506:26">(<argument pos:start="506:17" pos:end="506:25"><expr pos:start="506:17" pos:end="506:25"><name pos:start="506:17" pos:end="506:25"><name pos:start="506:17" pos:end="506:17">s</name><operator pos:start="506:18" pos:end="506:19">-&gt;</operator><name pos:start="506:20" pos:end="506:25">md5ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="510:5" pos:end="510:49"><expr pos:start="510:5" pos:end="510:48"><name pos:start="510:5" pos:end="510:14">streaminfo</name> <operator pos:start="510:16" pos:end="510:16">=</operator> <call pos:start="510:18" pos:end="510:48"><name pos:start="510:18" pos:end="510:26">av_malloc</name><argument_list pos:start="510:27" pos:end="510:48">(<argument pos:start="510:28" pos:end="510:47"><expr pos:start="510:28" pos:end="510:47"><name pos:start="510:28" pos:end="510:47">FLAC_STREAMINFO_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="512:5" pos:end="515:36"><if pos:start="512:5" pos:end="515:36">if <condition pos:start="512:8" pos:end="512:20">(<expr pos:start="512:9" pos:end="512:19"><operator pos:start="512:9" pos:end="512:9">!</operator><name pos:start="512:10" pos:end="512:19">streaminfo</name></expr>)</condition><block type="pseudo" pos:start="515:5" pos:end="515:36"><block_content pos:start="515:5" pos:end="515:36">


    <expr_stmt pos:start="515:5" pos:end="515:36"><expr pos:start="515:5" pos:end="515:35"><call pos:start="515:5" pos:end="515:35"><name pos:start="515:5" pos:end="515:20">write_streaminfo</name><argument_list pos:start="515:21" pos:end="515:35">(<argument pos:start="515:22" pos:end="515:22"><expr pos:start="515:22" pos:end="515:22"><name pos:start="515:22" pos:end="515:22">s</name></expr></argument>, <argument pos:start="515:25" pos:end="515:34"><expr pos:start="515:25" pos:end="515:34"><name pos:start="515:25" pos:end="515:34">streaminfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="517:5" pos:end="517:34"><expr pos:start="517:5" pos:end="517:33"><name pos:start="517:5" pos:end="517:20"><name pos:start="517:5" pos:end="517:9">avctx</name><operator pos:start="517:10" pos:end="517:11">-&gt;</operator><name pos:start="517:12" pos:end="517:20">extradata</name></name> <operator pos:start="517:22" pos:end="517:22">=</operator> <name pos:start="517:24" pos:end="517:33">streaminfo</name></expr>;</expr_stmt>

    <expr_stmt pos:start="519:5" pos:end="519:49"><expr pos:start="519:5" pos:end="519:48"><name pos:start="519:5" pos:end="519:25"><name pos:start="519:5" pos:end="519:9">avctx</name><operator pos:start="519:10" pos:end="519:11">-&gt;</operator><name pos:start="519:12" pos:end="519:25">extradata_size</name></name> <operator pos:start="519:27" pos:end="519:27">=</operator> <name pos:start="519:29" pos:end="519:48">FLAC_STREAMINFO_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="523:5" pos:end="523:25"><expr pos:start="523:5" pos:end="523:24"><name pos:start="523:5" pos:end="523:18"><name pos:start="523:5" pos:end="523:5">s</name><operator pos:start="523:6" pos:end="523:7">-&gt;</operator><name pos:start="523:8" pos:end="523:18">frame_count</name></name>   <operator pos:start="523:22" pos:end="523:22">=</operator> <literal type="number" pos:start="523:24" pos:end="523:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="525:5" pos:end="525:40"><expr pos:start="525:5" pos:end="525:39"><name pos:start="525:5" pos:end="525:20"><name pos:start="525:5" pos:end="525:5">s</name><operator pos:start="525:6" pos:end="525:7">-&gt;</operator><name pos:start="525:8" pos:end="525:20">min_framesize</name></name> <operator pos:start="525:22" pos:end="525:22">=</operator> <name pos:start="525:24" pos:end="525:39"><name pos:start="525:24" pos:end="525:24">s</name><operator pos:start="525:25" pos:end="525:26">-&gt;</operator><name pos:start="525:27" pos:end="525:39">max_framesize</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="529:5" pos:end="529:47"><expr pos:start="529:5" pos:end="529:46"><name pos:start="529:5" pos:end="529:22"><name pos:start="529:5" pos:end="529:9">avctx</name><operator pos:start="529:10" pos:end="529:11">-&gt;</operator><name pos:start="529:12" pos:end="529:22">coded_frame</name></name> <operator pos:start="529:24" pos:end="529:24">=</operator> <call pos:start="529:26" pos:end="529:46"><name pos:start="529:26" pos:end="529:44">avcodec_alloc_frame</name><argument_list pos:start="529:45" pos:end="529:46">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="533:5" pos:end="533:38"><expr pos:start="533:5" pos:end="533:37"><name pos:start="533:5" pos:end="533:33"><name pos:start="533:5" pos:end="533:9">avctx</name><operator pos:start="533:10" pos:end="533:11">-&gt;</operator><name pos:start="533:12" pos:end="533:22">coded_frame</name><operator pos:start="533:23" pos:end="533:24">-&gt;</operator><name pos:start="533:25" pos:end="533:33">key_frame</name></name> <operator pos:start="533:35" pos:end="533:35">=</operator> <literal type="number" pos:start="533:37" pos:end="533:37">1</literal></expr>;</expr_stmt>



    <return pos:start="537:5" pos:end="537:13">return <expr pos:start="537:12" pos:end="537:12"><literal type="number" pos:start="537:12" pos:end="537:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
