<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19228.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">parse_audio_var</name><parameter_list pos:start="1:27" pos:end="1:92">(<parameter pos:start="1:28" pos:end="1:49"><decl pos:start="1:28" pos:end="1:49"><type pos:start="1:28" pos:end="1:49"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:59">AVStream</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">st</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:81"><decl pos:start="1:66" pos:end="1:81"><type pos:start="1:66" pos:end="1:81"><specifier pos:start="1:66" pos:end="1:70">const</specifier> <name pos:start="1:72" pos:end="1:75">char</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:81">name</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:91"><decl pos:start="1:84" pos:end="1:91"><type pos:start="1:84" pos:end="1:91"><name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:91">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:31">= <expr pos:start="5:23" pos:end="5:31"><name pos:start="5:23" pos:end="5:31"><name pos:start="5:23" pos:end="5:27">avctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:31">pb</name></name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="41:18"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:37">(<expr pos:start="7:9" pos:end="7:36"><operator pos:start="7:9" pos:end="7:9">!</operator><call pos:start="7:10" pos:end="7:36"><name pos:start="7:10" pos:end="7:15">strcmp</name><argument_list pos:start="7:16" pos:end="7:36">(<argument pos:start="7:17" pos:end="7:20"><expr pos:start="7:17" pos:end="7:20"><name pos:start="7:17" pos:end="7:20">name</name></expr></argument>, <argument pos:start="7:23" pos:end="7:35"><expr pos:start="7:23" pos:end="7:35"><literal type="string" pos:start="7:23" pos:end="7:35">"__DIR_COUNT"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:39" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:47">

        <expr_stmt pos:start="9:9" pos:end="9:47"><expr pos:start="9:9" pos:end="9:46"><name pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:10">st</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:21">nb_frames</name></name> <operator pos:start="9:23" pos:end="9:23">=</operator> <call pos:start="9:25" pos:end="9:46"><name pos:start="9:25" pos:end="9:36">var_read_int</name><argument_list pos:start="9:37" pos:end="9:46">(<argument pos:start="9:38" pos:end="9:39"><expr pos:start="9:38" pos:end="9:39"><name pos:start="9:38" pos:end="9:39">pb</name></expr></argument>, <argument pos:start="9:42" pos:end="9:45"><expr pos:start="9:42" pos:end="9:45"><name pos:start="9:42" pos:end="9:45">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="11:7" pos:end="15:5">else if <condition pos:start="11:15" pos:end="11:45">(<expr pos:start="11:16" pos:end="11:44"><operator pos:start="11:16" pos:end="11:16">!</operator><call pos:start="11:17" pos:end="11:44"><name pos:start="11:17" pos:end="11:22">strcmp</name><argument_list pos:start="11:23" pos:end="11:44">(<argument pos:start="11:24" pos:end="11:27"><expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">name</name></expr></argument>, <argument pos:start="11:30" pos:end="11:43"><expr pos:start="11:30" pos:end="11:43"><literal type="string" pos:start="11:30" pos:end="11:43">"AUDIO_FORMAT"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:47" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:53">

        <expr_stmt pos:start="13:9" pos:end="13:53"><expr pos:start="13:9" pos:end="13:52"><name pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:10">st</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:17">codec</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:27">codec_id</name></name> <operator pos:start="13:29" pos:end="13:29">=</operator> <call pos:start="13:31" pos:end="13:52"><name pos:start="13:31" pos:end="13:42">var_read_int</name><argument_list pos:start="13:43" pos:end="13:52">(<argument pos:start="13:44" pos:end="13:45"><expr pos:start="13:44" pos:end="13:45"><name pos:start="13:44" pos:end="13:45">pb</name></expr></argument>, <argument pos:start="13:48" pos:end="13:51"><expr pos:start="13:48" pos:end="13:51"><name pos:start="13:48" pos:end="13:51">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="19:5">else if <condition pos:start="15:15" pos:end="15:44">(<expr pos:start="15:16" pos:end="15:43"><operator pos:start="15:16" pos:end="15:16">!</operator><call pos:start="15:17" pos:end="15:43"><name pos:start="15:17" pos:end="15:22">strcmp</name><argument_list pos:start="15:23" pos:end="15:43">(<argument pos:start="15:24" pos:end="15:27"><expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">name</name></expr></argument>, <argument pos:start="15:30" pos:end="15:42"><expr pos:start="15:30" pos:end="15:42"><literal type="string" pos:start="15:30" pos:end="15:42">"COMPRESSION"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:46" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:54">

        <expr_stmt pos:start="17:9" pos:end="17:54"><expr pos:start="17:9" pos:end="17:53"><name pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:10">st</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:17">codec</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:28">codec_tag</name></name> <operator pos:start="17:30" pos:end="17:30">=</operator> <call pos:start="17:32" pos:end="17:53"><name pos:start="17:32" pos:end="17:43">var_read_int</name><argument_list pos:start="17:44" pos:end="17:53">(<argument pos:start="17:45" pos:end="17:46"><expr pos:start="17:45" pos:end="17:46"><name pos:start="17:45" pos:end="17:46">pb</name></expr></argument>, <argument pos:start="17:49" pos:end="17:52"><expr pos:start="17:49" pos:end="17:52"><name pos:start="17:49" pos:end="17:52">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="23:5">else if <condition pos:start="19:15" pos:end="19:44">(<expr pos:start="19:16" pos:end="19:43"><operator pos:start="19:16" pos:end="19:16">!</operator><call pos:start="19:17" pos:end="19:43"><name pos:start="19:17" pos:end="19:22">strcmp</name><argument_list pos:start="19:23" pos:end="19:43">(<argument pos:start="19:24" pos:end="19:27"><expr pos:start="19:24" pos:end="19:27"><name pos:start="19:24" pos:end="19:27">name</name></expr></argument>, <argument pos:start="19:30" pos:end="19:42"><expr pos:start="19:30" pos:end="19:42"><literal type="string" pos:start="19:30" pos:end="19:42">"DEFAULT_VOL"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:46" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:45">

        <expr_stmt pos:start="21:9" pos:end="21:45"><expr pos:start="21:9" pos:end="21:44"><call pos:start="21:9" pos:end="21:44"><name pos:start="21:9" pos:end="21:25">var_read_metadata</name><argument_list pos:start="21:26" pos:end="21:44">(<argument pos:start="21:27" pos:end="21:31"><expr pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:31">avctx</name></expr></argument>, <argument pos:start="21:34" pos:end="21:37"><expr pos:start="21:34" pos:end="21:37"><name pos:start="21:34" pos:end="21:37">name</name></expr></argument>, <argument pos:start="21:40" pos:end="21:43"><expr pos:start="21:40" pos:end="21:43"><name pos:start="21:40" pos:end="21:43">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="29:5">else if <condition pos:start="23:15" pos:end="23:45">(<expr pos:start="23:16" pos:end="23:44"><operator pos:start="23:16" pos:end="23:16">!</operator><call pos:start="23:17" pos:end="23:44"><name pos:start="23:17" pos:end="23:22">strcmp</name><argument_list pos:start="23:23" pos:end="23:44">(<argument pos:start="23:24" pos:end="23:27"><expr pos:start="23:24" pos:end="23:27"><name pos:start="23:24" pos:end="23:27">name</name></expr></argument>, <argument pos:start="23:30" pos:end="23:43"><expr pos:start="23:30" pos:end="23:43"><literal type="string" pos:start="23:30" pos:end="23:43">"NUM_CHANNELS"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:47" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:105">

        <expr_stmt pos:start="25:9" pos:end="25:53"><expr pos:start="25:9" pos:end="25:52"><name pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:10">st</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:17">codec</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:27">channels</name></name> <operator pos:start="25:29" pos:end="25:29">=</operator> <call pos:start="25:31" pos:end="25:52"><name pos:start="25:31" pos:end="25:42">var_read_int</name><argument_list pos:start="25:43" pos:end="25:52">(<argument pos:start="25:44" pos:end="25:45"><expr pos:start="25:44" pos:end="25:45"><name pos:start="25:44" pos:end="25:45">pb</name></expr></argument>, <argument pos:start="25:48" pos:end="25:51"><expr pos:start="25:48" pos:end="25:51"><name pos:start="25:48" pos:end="25:51">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:105"><expr pos:start="27:9" pos:end="27:104"><name pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:10">st</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:17">codec</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:33">channel_layout</name></name> <operator pos:start="27:35" pos:end="27:35">=</operator> <ternary pos:start="27:37" pos:end="27:104"><condition pos:start="27:37" pos:end="27:64"><expr pos:start="27:37" pos:end="27:62"><operator pos:start="27:37" pos:end="27:37">(</operator><name pos:start="27:38" pos:end="27:56"><name pos:start="27:38" pos:end="27:39">st</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:46">codec</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:56">channels</name></name> <operator pos:start="27:58" pos:end="27:59">==</operator> <literal type="number" pos:start="27:61" pos:end="27:61">1</literal><operator pos:start="27:62" pos:end="27:62">)</operator></expr> ?</condition><then pos:start="27:66" pos:end="27:82"> <expr pos:start="27:66" pos:end="27:82"><name pos:start="27:66" pos:end="27:82">AV_CH_LAYOUT_MONO</name></expr> </then><else pos:start="27:84" pos:end="27:104">: <expr pos:start="27:86" pos:end="27:104"><name pos:start="27:86" pos:end="27:104">AV_CH_LAYOUT_STEREO</name></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="29:7" pos:end="35:5">else if <condition pos:start="29:15" pos:end="29:44">(<expr pos:start="29:16" pos:end="29:43"><operator pos:start="29:16" pos:end="29:16">!</operator><call pos:start="29:17" pos:end="29:43"><name pos:start="29:17" pos:end="29:22">strcmp</name><argument_list pos:start="29:23" pos:end="29:43">(<argument pos:start="29:24" pos:end="29:27"><expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">name</name></expr></argument>, <argument pos:start="29:30" pos:end="29:42"><expr pos:start="29:30" pos:end="29:42"><literal type="string" pos:start="29:30" pos:end="29:42">"SAMPLE_RATE"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:46" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:63">

        <expr_stmt pos:start="31:9" pos:end="31:56"><expr pos:start="31:9" pos:end="31:55"><name pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:10">st</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:17">codec</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:30">sample_rate</name></name> <operator pos:start="31:32" pos:end="31:32">=</operator> <call pos:start="31:34" pos:end="31:55"><name pos:start="31:34" pos:end="31:45">var_read_int</name><argument_list pos:start="31:46" pos:end="31:55">(<argument pos:start="31:47" pos:end="31:48"><expr pos:start="31:47" pos:end="31:48"><name pos:start="31:47" pos:end="31:48">pb</name></expr></argument>, <argument pos:start="31:51" pos:end="31:54"><expr pos:start="31:51" pos:end="31:54"><name pos:start="31:51" pos:end="31:54">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:63"><expr pos:start="33:9" pos:end="33:62"><call pos:start="33:9" pos:end="33:62"><name pos:start="33:9" pos:end="33:27">avpriv_set_pts_info</name><argument_list pos:start="33:28" pos:end="33:62">(<argument pos:start="33:29" pos:end="33:30"><expr pos:start="33:29" pos:end="33:30"><name pos:start="33:29" pos:end="33:30">st</name></expr></argument>, <argument pos:start="33:33" pos:end="33:34"><expr pos:start="33:33" pos:end="33:34"><literal type="number" pos:start="33:33" pos:end="33:34">33</literal></expr></argument>, <argument pos:start="33:37" pos:end="33:37"><expr pos:start="33:37" pos:end="33:37"><literal type="number" pos:start="33:37" pos:end="33:37">1</literal></expr></argument>, <argument pos:start="33:40" pos:end="33:61"><expr pos:start="33:40" pos:end="33:61"><name pos:start="33:40" pos:end="33:61"><name pos:start="33:40" pos:end="33:41">st</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:48">codec</name><operator pos:start="33:49" pos:end="33:50">-&gt;</operator><name pos:start="33:51" pos:end="33:61">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="39:5">else if <condition pos:start="35:15" pos:end="35:45">(<expr pos:start="35:16" pos:end="35:44"><operator pos:start="35:16" pos:end="35:16">!</operator><call pos:start="35:17" pos:end="35:44"><name pos:start="35:17" pos:end="35:22">strcmp</name><argument_list pos:start="35:23" pos:end="35:44">(<argument pos:start="35:24" pos:end="35:27"><expr pos:start="35:24" pos:end="35:27"><name pos:start="35:24" pos:end="35:27">name</name></expr></argument>, <argument pos:start="35:30" pos:end="35:43"><expr pos:start="35:30" pos:end="35:43"><literal type="string" pos:start="35:30" pos:end="35:43">"SAMPLE_WIDTH"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:47" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:70">

        <expr_stmt pos:start="37:9" pos:end="37:70"><expr pos:start="37:9" pos:end="37:69"><name pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:10">st</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:17">codec</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:40">bits_per_coded_sample</name></name> <operator pos:start="37:42" pos:end="37:42">=</operator> <call pos:start="37:44" pos:end="37:65"><name pos:start="37:44" pos:end="37:55">var_read_int</name><argument_list pos:start="37:56" pos:end="37:65">(<argument pos:start="37:57" pos:end="37:58"><expr pos:start="37:57" pos:end="37:58"><name pos:start="37:57" pos:end="37:58">pb</name></expr></argument>, <argument pos:start="37:61" pos:end="37:64"><expr pos:start="37:61" pos:end="37:64"><name pos:start="37:61" pos:end="37:64">size</name></expr></argument>)</argument_list></call> <operator pos:start="37:67" pos:end="37:67">*</operator> <literal type="number" pos:start="37:69" pos:end="37:69">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="41:18">else<block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return></block_content></block></else></if_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
