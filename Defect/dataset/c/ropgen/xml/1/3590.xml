<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3590.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">nbd_co_receive_reply</name><parameter_list pos:start="1:33" pos:end="7:52">(<parameter pos:start="1:34" pos:end="1:52"><decl pos:start="1:34" pos:end="1:52"><type pos:start="1:34" pos:end="1:52"><name pos:start="1:34" pos:end="1:49">NBDClientSession</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:52"><decl pos:start="3:34" pos:end="3:52"><type pos:start="3:34" pos:end="3:52"><name pos:start="3:34" pos:end="3:43">NBDRequest</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:52">request</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:48"><decl pos:start="5:34" pos:end="5:48"><type pos:start="5:34" pos:end="5:48"><name pos:start="5:34" pos:end="5:41">NBDReply</name> <modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:48">reply</name></decl></parameter>,

                                 <parameter pos:start="7:34" pos:end="7:51"><decl pos:start="7:34" pos:end="7:51"><type pos:start="7:34" pos:end="7:51"><name pos:start="7:34" pos:end="7:45">QEMUIOVector</name> <modifier pos:start="7:47" pos:end="7:47">*</modifier></type><name pos:start="7:48" pos:end="7:51">qiov</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="51:1">{<block_content pos:start="11:5" pos:end="49:5">

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:61">/* Wait until we're woken up by nbd_read_reply_entry.  */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><call pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:24">qemu_coroutine_yield</name><argument_list pos:start="17:25" pos:end="17:26">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:10">reply</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:21"><name pos:start="19:14" pos:end="19:14">s</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:21">reply</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="49:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="23:16">(<expr pos:start="21:9" pos:end="23:15"><name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:13">reply</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:21">handle</name></name> <operator pos:start="21:23" pos:end="21:24">!=</operator> <name pos:start="21:26" pos:end="21:40"><name pos:start="21:26" pos:end="21:32">request</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:40">handle</name></name> <operator pos:start="21:42" pos:end="21:43">||</operator>

        <operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:15"><name pos:start="23:10" pos:end="23:10">s</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:15">ioc</name></name></expr>)</condition> <block pos:start="23:18" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:27">

        <expr_stmt pos:start="25:9" pos:end="25:27"><expr pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:13">reply</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:20">error</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:26">EIO</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="49:5">else <block pos:start="27:12" pos:end="49:5">{<block_content pos:start="29:9" pos:end="47:28">

        <if_stmt pos:start="29:9" pos:end="41:9"><if pos:start="29:9" pos:end="41:9">if <condition pos:start="29:12" pos:end="29:38">(<expr pos:start="29:13" pos:end="29:37"><name pos:start="29:13" pos:end="29:16">qiov</name> <operator pos:start="29:18" pos:end="29:19">&amp;&amp;</operator> <name pos:start="29:21" pos:end="29:32"><name pos:start="29:21" pos:end="29:25">reply</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:32">error</name></name> <operator pos:start="29:34" pos:end="29:35">==</operator> <literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr>)</condition> <block pos:start="29:40" pos:end="41:9">{<block_content pos:start="31:13" pos:end="39:13">

            <expr_stmt pos:start="31:13" pos:end="33:32"><expr pos:start="31:13" pos:end="33:31"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="33:31"><name pos:start="31:19" pos:end="31:25">nbd_rwv</name><argument_list pos:start="31:26" pos:end="33:31">(<argument pos:start="31:27" pos:end="31:32"><expr pos:start="31:27" pos:end="31:32"><name pos:start="31:27" pos:end="31:32"><name pos:start="31:27" pos:end="31:27">s</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:32">ioc</name></name></expr></argument>, <argument pos:start="31:35" pos:end="31:43"><expr pos:start="31:35" pos:end="31:43"><name pos:start="31:35" pos:end="31:43"><name pos:start="31:35" pos:end="31:38">qiov</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:43">iov</name></name></expr></argument>, <argument pos:start="31:46" pos:end="31:55"><expr pos:start="31:46" pos:end="31:55"><name pos:start="31:46" pos:end="31:55"><name pos:start="31:46" pos:end="31:49">qiov</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:55">niov</name></name></expr></argument>, <argument pos:start="31:58" pos:end="31:69"><expr pos:start="31:58" pos:end="31:69"><name pos:start="31:58" pos:end="31:69"><name pos:start="31:58" pos:end="31:64">request</name><operator pos:start="31:65" pos:end="31:66">-&gt;</operator><name pos:start="31:67" pos:end="31:69">len</name></name></expr></argument>, <argument pos:start="31:72" pos:end="31:75"><expr pos:start="31:72" pos:end="31:75"><name pos:start="31:72" pos:end="31:75">true</name></expr></argument>,

                          <argument pos:start="33:27" pos:end="33:30"><expr pos:start="33:27" pos:end="33:30"><name pos:start="33:27" pos:end="33:30">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="39:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:36">(<expr pos:start="35:17" pos:end="35:35"><name pos:start="35:17" pos:end="35:19">ret</name> <operator pos:start="35:21" pos:end="35:22">!=</operator> <name pos:start="35:24" pos:end="35:35"><name pos:start="35:24" pos:end="35:30">request</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:35">len</name></name></expr>)</condition> <block pos:start="35:38" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:35">

                <expr_stmt pos:start="37:17" pos:end="37:35"><expr pos:start="37:17" pos:end="37:34"><name pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:21">reply</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:28">error</name></name> <operator pos:start="37:30" pos:end="37:30">=</operator> <name pos:start="37:32" pos:end="37:34">EIO</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="45:9" pos:end="45:60">/* Tell the read handler to read another header.  */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:28"><expr pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:16">reply</name><operator pos:start="47:17" pos:end="47:17">.</operator><name pos:start="47:18" pos:end="47:23">handle</name></name> <operator pos:start="47:25" pos:end="47:25">=</operator> <literal type="number" pos:start="47:27" pos:end="47:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
