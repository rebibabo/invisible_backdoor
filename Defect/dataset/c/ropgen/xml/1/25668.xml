<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25668.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:16">BlockDriverState</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:42">bdrv_all_find_vmstate_bs</name><parameter_list pos:start="1:43" pos:end="1:48">(<parameter pos:start="1:44" pos:end="1:47"><decl pos:start="1:44" pos:end="1:47"><type pos:start="1:44" pos:end="1:47"><name pos:start="1:44" pos:end="1:47">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:14">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">bool</name></type> <name pos:start="5:10" pos:end="5:18">not_found</name> <init pos:start="5:20" pos:end="5:25">= <expr pos:start="5:22" pos:end="5:25"><name pos:start="5:22" pos:end="5:25">true</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">BdrvNextIterator</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">it</name> <init pos:start="9:26" pos:end="9:31">= <expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">NULL</name></expr></init></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="25:5">while <condition pos:start="13:11" pos:end="13:50">(<expr pos:start="13:12" pos:end="13:49"><name pos:start="13:12" pos:end="13:20">not_found</name> <operator pos:start="13:22" pos:end="13:23">&amp;&amp;</operator> <operator pos:start="13:25" pos:end="13:25">(</operator><name pos:start="13:26" pos:end="13:27">it</name> <operator pos:start="13:29" pos:end="13:29">=</operator> <call pos:start="13:31" pos:end="13:48"><name pos:start="13:31" pos:end="13:39">bdrv_next</name><argument_list pos:start="13:40" pos:end="13:48">(<argument pos:start="13:41" pos:end="13:42"><expr pos:start="13:41" pos:end="13:42"><name pos:start="13:41" pos:end="13:42">it</name></expr></argument>, <argument pos:start="13:45" pos:end="13:47"><expr pos:start="13:45" pos:end="13:47"><operator pos:start="13:45" pos:end="13:45">&amp;</operator><name pos:start="13:46" pos:end="13:47">bs</name></expr></argument>)</argument_list></call><operator pos:start="13:49" pos:end="13:49">)</operator></expr>)</condition> <block pos:start="13:52" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:33">

        <decl_stmt pos:start="15:9" pos:end="15:51"><decl pos:start="15:9" pos:end="15:50"><type pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:18">AioContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:23">ctx</name> <init pos:start="15:25" pos:end="15:50">= <expr pos:start="15:27" pos:end="15:50"><call pos:start="15:27" pos:end="15:50"><name pos:start="15:27" pos:end="15:46">bdrv_get_aio_context</name><argument_list pos:start="15:47" pos:end="15:50">(<argument pos:start="15:48" pos:end="15:49"><expr pos:start="15:48" pos:end="15:49"><name pos:start="15:48" pos:end="15:49">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:33"><expr pos:start="19:9" pos:end="19:32"><call pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:27">aio_context_acquire</name><argument_list pos:start="19:28" pos:end="19:32">(<argument pos:start="19:29" pos:end="19:31"><expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:43"><expr pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:17">not_found</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <operator pos:start="21:21" pos:end="21:21">!</operator><call pos:start="21:22" pos:end="21:42"><name pos:start="21:22" pos:end="21:38">bdrv_can_snapshot</name><argument_list pos:start="21:39" pos:end="21:42">(<argument pos:start="21:40" pos:end="21:41"><expr pos:start="21:40" pos:end="21:41"><name pos:start="21:40" pos:end="21:41">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:33"><expr pos:start="23:9" pos:end="23:32"><call pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:27">aio_context_release</name><argument_list pos:start="23:28" pos:end="23:32">(<argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="27:5" pos:end="27:14">return <expr pos:start="27:12" pos:end="27:13"><name pos:start="27:12" pos:end="27:13">bs</name></expr>;</return>

</block_content>}</block></function>
</unit>
