<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11935.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">decode_pce</name><parameter_list pos:start="1:22" pos:end="3:27">(<parameter pos:start="1:23" pos:end="1:37"><decl pos:start="1:23" pos:end="1:37"><type pos:start="1:23" pos:end="1:37"><name pos:start="1:23" pos:end="1:32">AACContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type> <name pos:start="1:36" pos:end="1:37">ac</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:87"><decl pos:start="1:40" pos:end="1:87"><type pos:start="1:40" pos:end="1:71"><name pos:start="1:40" pos:end="1:59"><name pos:start="1:40" pos:end="1:43">enum</name> <name pos:start="1:45" pos:end="1:59">ChannelPosition</name></name></type> <name pos:start="1:61" pos:end="1:87"><name pos:start="1:61" pos:end="1:71">new_che_pos</name><index pos:start="1:72" pos:end="1:74">[<expr pos:start="1:73" pos:end="1:73"><literal type="number" pos:start="1:73" pos:end="1:73">4</literal></expr>]</index><index pos:start="1:75" pos:end="1:87">[<expr pos:start="1:76" pos:end="1:86"><name pos:start="1:76" pos:end="1:86">MAX_ELEM_ID</name></expr>]</index></name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:26"><type pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:21">GetBitContext</name> <modifier pos:start="3:23" pos:end="3:23">*</modifier></type> <name pos:start="3:25" pos:end="3:26">gb</name></decl></parameter>)</parameter_list> <block pos:start="3:29" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:71"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">num_front</name></decl>, <decl pos:start="5:20" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:27">num_side</name></decl>, <decl pos:start="5:30" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:30" pos:end="5:37">num_back</name></decl>, <decl pos:start="5:40" pos:end="5:46"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:40" pos:end="5:46">num_lfe</name></decl>, <decl pos:start="5:49" pos:end="5:62"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:49" pos:end="5:62">num_assoc_data</name></decl>, <decl pos:start="5:65" pos:end="5:70"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:65" pos:end="5:70">num_cc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:21"><expr pos:start="9:5" pos:end="9:20"><call pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:13">skip_bits</name><argument_list pos:start="9:14" pos:end="9:20">(<argument pos:start="9:15" pos:end="9:16"><expr pos:start="9:15" pos:end="9:16"><name pos:start="9:15" pos:end="9:16">gb</name></expr></argument>, <argument pos:start="9:19" pos:end="9:19"><expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="9:24" pos:end="9:37">// object_type</comment>



    <expr_stmt pos:start="13:5" pos:end="13:46"><expr pos:start="13:5" pos:end="13:45"><name pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:6">ac</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:12">m4ac</name><operator pos:start="13:13" pos:end="13:13">.</operator><name pos:start="13:14" pos:end="13:27">sampling_index</name></name> <operator pos:start="13:29" pos:end="13:29">=</operator> <call pos:start="13:31" pos:end="13:45"><name pos:start="13:31" pos:end="13:38">get_bits</name><argument_list pos:start="13:39" pos:end="13:45">(<argument pos:start="13:40" pos:end="13:41"><expr pos:start="13:40" pos:end="13:41"><name pos:start="13:40" pos:end="13:41">gb</name></expr></argument>, <argument pos:start="13:44" pos:end="13:44"><expr pos:start="13:44" pos:end="13:44"><literal type="number" pos:start="13:44" pos:end="13:44">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if<condition pos:start="15:7" pos:end="15:36">(<expr pos:start="15:8" pos:end="15:35"><name pos:start="15:8" pos:end="15:30"><name pos:start="15:8" pos:end="15:9">ac</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:15">m4ac</name><operator pos:start="15:16" pos:end="15:16">.</operator><name pos:start="15:17" pos:end="15:30">sampling_index</name></name> <operator pos:start="15:32" pos:end="15:32">&gt;</operator> <literal type="number" pos:start="15:34" pos:end="15:35">11</literal></expr>)</condition> <block pos:start="15:38" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:18">

        <expr_stmt pos:start="17:9" pos:end="17:106"><expr pos:start="17:9" pos:end="17:105"><call pos:start="17:9" pos:end="17:105"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="17:105">(<argument pos:start="17:16" pos:end="17:29"><expr pos:start="17:16" pos:end="17:29"><name pos:start="17:16" pos:end="17:29"><name pos:start="17:16" pos:end="17:17">ac</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:29">avccontext</name></name></expr></argument>, <argument pos:start="17:32" pos:end="17:43"><expr pos:start="17:32" pos:end="17:43"><name pos:start="17:32" pos:end="17:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="17:46" pos:end="17:79"><expr pos:start="17:46" pos:end="17:79"><literal type="string" pos:start="17:46" pos:end="17:79">"invalid sampling rate index %d\n"</literal></expr></argument>, <argument pos:start="17:82" pos:end="17:104"><expr pos:start="17:82" pos:end="17:104"><name pos:start="17:82" pos:end="17:104"><name pos:start="17:82" pos:end="17:83">ac</name><operator pos:start="17:84" pos:end="17:85">-&gt;</operator><name pos:start="17:86" pos:end="17:89">m4ac</name><operator pos:start="17:90" pos:end="17:90">.</operator><name pos:start="17:91" pos:end="17:104">sampling_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:79"><expr pos:start="23:5" pos:end="23:78"><name pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:6">ac</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:12">m4ac</name><operator pos:start="23:13" pos:end="23:13">.</operator><name pos:start="23:14" pos:end="23:24">sample_rate</name></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <name pos:start="23:28" pos:end="23:78"><name pos:start="23:28" pos:end="23:53">ff_mpeg4audio_sample_rates</name><index pos:start="23:54" pos:end="23:78">[<expr pos:start="23:55" pos:end="23:77"><name pos:start="23:55" pos:end="23:77"><name pos:start="23:55" pos:end="23:56">ac</name><operator pos:start="23:57" pos:end="23:58">-&gt;</operator><name pos:start="23:59" pos:end="23:62">m4ac</name><operator pos:start="23:63" pos:end="23:63">.</operator><name pos:start="23:64" pos:end="23:77">sampling_index</name></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:13">num_front</name>       <operator pos:start="25:21" pos:end="25:21">=</operator> <call pos:start="25:23" pos:end="25:37"><name pos:start="25:23" pos:end="25:30">get_bits</name><argument_list pos:start="25:31" pos:end="25:37">(<argument pos:start="25:32" pos:end="25:33"><expr pos:start="25:32" pos:end="25:33"><name pos:start="25:32" pos:end="25:33">gb</name></expr></argument>, <argument pos:start="25:36" pos:end="25:36"><expr pos:start="25:36" pos:end="25:36"><literal type="number" pos:start="25:36" pos:end="25:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:12">num_side</name>        <operator pos:start="27:21" pos:end="27:21">=</operator> <call pos:start="27:23" pos:end="27:37"><name pos:start="27:23" pos:end="27:30">get_bits</name><argument_list pos:start="27:31" pos:end="27:37">(<argument pos:start="27:32" pos:end="27:33"><expr pos:start="27:32" pos:end="27:33"><name pos:start="27:32" pos:end="27:33">gb</name></expr></argument>, <argument pos:start="27:36" pos:end="27:36"><expr pos:start="27:36" pos:end="27:36"><literal type="number" pos:start="27:36" pos:end="27:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:12">num_back</name>        <operator pos:start="29:21" pos:end="29:21">=</operator> <call pos:start="29:23" pos:end="29:37"><name pos:start="29:23" pos:end="29:30">get_bits</name><argument_list pos:start="29:31" pos:end="29:37">(<argument pos:start="29:32" pos:end="29:33"><expr pos:start="29:32" pos:end="29:33"><name pos:start="29:32" pos:end="29:33">gb</name></expr></argument>, <argument pos:start="29:36" pos:end="29:36"><expr pos:start="29:36" pos:end="29:36"><literal type="number" pos:start="29:36" pos:end="29:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:38"><expr pos:start="31:5" pos:end="31:37"><name pos:start="31:5" pos:end="31:11">num_lfe</name>         <operator pos:start="31:21" pos:end="31:21">=</operator> <call pos:start="31:23" pos:end="31:37"><name pos:start="31:23" pos:end="31:30">get_bits</name><argument_list pos:start="31:31" pos:end="31:37">(<argument pos:start="31:32" pos:end="31:33"><expr pos:start="31:32" pos:end="31:33"><name pos:start="31:32" pos:end="31:33">gb</name></expr></argument>, <argument pos:start="31:36" pos:end="31:36"><expr pos:start="31:36" pos:end="31:36"><literal type="number" pos:start="31:36" pos:end="31:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:18">num_assoc_data</name>  <operator pos:start="33:21" pos:end="33:21">=</operator> <call pos:start="33:23" pos:end="33:37"><name pos:start="33:23" pos:end="33:30">get_bits</name><argument_list pos:start="33:31" pos:end="33:37">(<argument pos:start="33:32" pos:end="33:33"><expr pos:start="33:32" pos:end="33:33"><name pos:start="33:32" pos:end="33:33">gb</name></expr></argument>, <argument pos:start="33:36" pos:end="33:36"><expr pos:start="33:36" pos:end="33:36"><literal type="number" pos:start="33:36" pos:end="33:36">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:38"><expr pos:start="35:5" pos:end="35:37"><name pos:start="35:5" pos:end="35:10">num_cc</name>          <operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="35:37"><name pos:start="35:23" pos:end="35:30">get_bits</name><argument_list pos:start="35:31" pos:end="35:37">(<argument pos:start="35:32" pos:end="35:33"><expr pos:start="35:32" pos:end="35:33"><name pos:start="35:32" pos:end="35:33">gb</name></expr></argument>, <argument pos:start="35:36" pos:end="35:36"><expr pos:start="35:36" pos:end="35:36"><literal type="number" pos:start="35:36" pos:end="35:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="41:25"><if pos:start="39:5" pos:end="41:25">if <condition pos:start="39:8" pos:end="39:22">(<expr pos:start="39:9" pos:end="39:21"><call pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:17">get_bits1</name><argument_list pos:start="39:18" pos:end="39:21">(<argument pos:start="39:19" pos:end="39:20"><expr pos:start="39:19" pos:end="39:20"><name pos:start="39:19" pos:end="39:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:25"><block_content pos:start="41:9" pos:end="41:25">

        <expr_stmt pos:start="41:9" pos:end="41:25"><expr pos:start="41:9" pos:end="41:24"><call pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:17">skip_bits</name><argument_list pos:start="41:18" pos:end="41:24">(<argument pos:start="41:19" pos:end="41:20"><expr pos:start="41:19" pos:end="41:20"><name pos:start="41:19" pos:end="41:20">gb</name></expr></argument>, <argument pos:start="41:23" pos:end="41:23"><expr pos:start="41:23" pos:end="41:23"><literal type="number" pos:start="41:23" pos:end="41:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="41:27" pos:end="41:45">// mono_mixdown_tag</comment>

    <if_stmt pos:start="43:5" pos:end="45:25"><if pos:start="43:5" pos:end="45:25">if <condition pos:start="43:8" pos:end="43:22">(<expr pos:start="43:9" pos:end="43:21"><call pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:17">get_bits1</name><argument_list pos:start="43:18" pos:end="43:21">(<argument pos:start="43:19" pos:end="43:20"><expr pos:start="43:19" pos:end="43:20"><name pos:start="43:19" pos:end="43:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:25"><block_content pos:start="45:9" pos:end="45:25">

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><call pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:17">skip_bits</name><argument_list pos:start="45:18" pos:end="45:24">(<argument pos:start="45:19" pos:end="45:20"><expr pos:start="45:19" pos:end="45:20"><name pos:start="45:19" pos:end="45:20">gb</name></expr></argument>, <argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><literal type="number" pos:start="45:23" pos:end="45:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="45:27" pos:end="45:47">// stereo_mixdown_tag</comment>



    <if_stmt pos:start="49:5" pos:end="51:25"><if pos:start="49:5" pos:end="51:25">if <condition pos:start="49:8" pos:end="49:22">(<expr pos:start="49:9" pos:end="49:21"><call pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:17">get_bits1</name><argument_list pos:start="49:18" pos:end="49:21">(<argument pos:start="49:19" pos:end="49:20"><expr pos:start="49:19" pos:end="49:20"><name pos:start="49:19" pos:end="49:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:25"><block_content pos:start="51:9" pos:end="51:25">

        <expr_stmt pos:start="51:9" pos:end="51:25"><expr pos:start="51:9" pos:end="51:24"><call pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:17">skip_bits</name><argument_list pos:start="51:18" pos:end="51:24">(<argument pos:start="51:19" pos:end="51:20"><expr pos:start="51:19" pos:end="51:20"><name pos:start="51:19" pos:end="51:20">gb</name></expr></argument>, <argument pos:start="51:23" pos:end="51:23"><expr pos:start="51:23" pos:end="51:23"><literal type="number" pos:start="51:23" pos:end="51:23">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="51:27" pos:end="51:68">// mixdown_coeff_index and pseudo_surround</comment>



    <expr_stmt pos:start="55:5" pos:end="55:103"><expr pos:start="55:5" pos:end="55:102"><call pos:start="55:5" pos:end="55:102"><name pos:start="55:5" pos:end="55:22">decode_channel_map</name><argument_list pos:start="55:23" pos:end="55:102">(<argument pos:start="55:24" pos:end="55:44"><expr pos:start="55:24" pos:end="55:44"><name pos:start="55:24" pos:end="55:44"><name pos:start="55:24" pos:end="55:34">new_che_pos</name><index pos:start="55:35" pos:end="55:44">[<expr pos:start="55:36" pos:end="55:43"><name pos:start="55:36" pos:end="55:43">TYPE_CPE</name></expr>]</index></name></expr></argument>, <argument pos:start="55:47" pos:end="55:67"><expr pos:start="55:47" pos:end="55:67"><name pos:start="55:47" pos:end="55:67"><name pos:start="55:47" pos:end="55:57">new_che_pos</name><index pos:start="55:58" pos:end="55:67">[<expr pos:start="55:59" pos:end="55:66"><name pos:start="55:59" pos:end="55:66">TYPE_SCE</name></expr>]</index></name></expr></argument>, <argument pos:start="55:70" pos:end="55:86"><expr pos:start="55:70" pos:end="55:86"><name pos:start="55:70" pos:end="55:86">AAC_CHANNEL_FRONT</name></expr></argument>, <argument pos:start="55:89" pos:end="55:90"><expr pos:start="55:89" pos:end="55:90"><name pos:start="55:89" pos:end="55:90">gb</name></expr></argument>, <argument pos:start="55:93" pos:end="55:101"><expr pos:start="55:93" pos:end="55:101"><name pos:start="55:93" pos:end="55:101">num_front</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:103"><expr pos:start="57:5" pos:end="57:102"><call pos:start="57:5" pos:end="57:102"><name pos:start="57:5" pos:end="57:22">decode_channel_map</name><argument_list pos:start="57:23" pos:end="57:102">(<argument pos:start="57:24" pos:end="57:44"><expr pos:start="57:24" pos:end="57:44"><name pos:start="57:24" pos:end="57:44"><name pos:start="57:24" pos:end="57:34">new_che_pos</name><index pos:start="57:35" pos:end="57:44">[<expr pos:start="57:36" pos:end="57:43"><name pos:start="57:36" pos:end="57:43">TYPE_CPE</name></expr>]</index></name></expr></argument>, <argument pos:start="57:47" pos:end="57:67"><expr pos:start="57:47" pos:end="57:67"><name pos:start="57:47" pos:end="57:67"><name pos:start="57:47" pos:end="57:57">new_che_pos</name><index pos:start="57:58" pos:end="57:67">[<expr pos:start="57:59" pos:end="57:66"><name pos:start="57:59" pos:end="57:66">TYPE_SCE</name></expr>]</index></name></expr></argument>, <argument pos:start="57:70" pos:end="57:85"><expr pos:start="57:70" pos:end="57:85"><name pos:start="57:70" pos:end="57:85">AAC_CHANNEL_SIDE</name></expr></argument>,  <argument pos:start="57:89" pos:end="57:90"><expr pos:start="57:89" pos:end="57:90"><name pos:start="57:89" pos:end="57:90">gb</name></expr></argument>, <argument pos:start="57:93" pos:end="57:100"><expr pos:start="57:93" pos:end="57:100"><name pos:start="57:93" pos:end="57:100">num_side</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:103"><expr pos:start="59:5" pos:end="59:102"><call pos:start="59:5" pos:end="59:102"><name pos:start="59:5" pos:end="59:22">decode_channel_map</name><argument_list pos:start="59:23" pos:end="59:102">(<argument pos:start="59:24" pos:end="59:44"><expr pos:start="59:24" pos:end="59:44"><name pos:start="59:24" pos:end="59:44"><name pos:start="59:24" pos:end="59:34">new_che_pos</name><index pos:start="59:35" pos:end="59:44">[<expr pos:start="59:36" pos:end="59:43"><name pos:start="59:36" pos:end="59:43">TYPE_CPE</name></expr>]</index></name></expr></argument>, <argument pos:start="59:47" pos:end="59:67"><expr pos:start="59:47" pos:end="59:67"><name pos:start="59:47" pos:end="59:67"><name pos:start="59:47" pos:end="59:57">new_che_pos</name><index pos:start="59:58" pos:end="59:67">[<expr pos:start="59:59" pos:end="59:66"><name pos:start="59:59" pos:end="59:66">TYPE_SCE</name></expr>]</index></name></expr></argument>, <argument pos:start="59:70" pos:end="59:85"><expr pos:start="59:70" pos:end="59:85"><name pos:start="59:70" pos:end="59:85">AAC_CHANNEL_BACK</name></expr></argument>,  <argument pos:start="59:89" pos:end="59:90"><expr pos:start="59:89" pos:end="59:90"><name pos:start="59:89" pos:end="59:90">gb</name></expr></argument>, <argument pos:start="59:93" pos:end="59:100"><expr pos:start="59:93" pos:end="59:100"><name pos:start="59:93" pos:end="59:100">num_back</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:103"><expr pos:start="61:5" pos:end="61:102"><call pos:start="61:5" pos:end="61:102"><name pos:start="61:5" pos:end="61:22">decode_channel_map</name><argument_list pos:start="61:23" pos:end="61:102">(<argument pos:start="61:24" pos:end="61:27"><expr pos:start="61:24" pos:end="61:27"><name pos:start="61:24" pos:end="61:27">NULL</name></expr></argument>,                  <argument pos:start="61:47" pos:end="61:67"><expr pos:start="61:47" pos:end="61:67"><name pos:start="61:47" pos:end="61:67"><name pos:start="61:47" pos:end="61:57">new_che_pos</name><index pos:start="61:58" pos:end="61:67">[<expr pos:start="61:59" pos:end="61:66"><name pos:start="61:59" pos:end="61:66">TYPE_LFE</name></expr>]</index></name></expr></argument>, <argument pos:start="61:70" pos:end="61:84"><expr pos:start="61:70" pos:end="61:84"><name pos:start="61:70" pos:end="61:84">AAC_CHANNEL_LFE</name></expr></argument>,   <argument pos:start="61:89" pos:end="61:90"><expr pos:start="61:89" pos:end="61:90"><name pos:start="61:89" pos:end="61:90">gb</name></expr></argument>, <argument pos:start="61:93" pos:end="61:99"><expr pos:start="61:93" pos:end="61:99"><name pos:start="61:93" pos:end="61:99">num_lfe</name></expr></argument>  )</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:43"><expr pos:start="65:5" pos:end="65:42"><call pos:start="65:5" pos:end="65:42"><name pos:start="65:5" pos:end="65:18">skip_bits_long</name><argument_list pos:start="65:19" pos:end="65:42">(<argument pos:start="65:20" pos:end="65:21"><expr pos:start="65:20" pos:end="65:21"><name pos:start="65:20" pos:end="65:21">gb</name></expr></argument>, <argument pos:start="65:24" pos:end="65:41"><expr pos:start="65:24" pos:end="65:41"><literal type="number" pos:start="65:24" pos:end="65:24">4</literal> <operator pos:start="65:26" pos:end="65:26">*</operator> <name pos:start="65:28" pos:end="65:41">num_assoc_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:103"><expr pos:start="69:5" pos:end="69:102"><call pos:start="69:5" pos:end="69:102"><name pos:start="69:5" pos:end="69:22">decode_channel_map</name><argument_list pos:start="69:23" pos:end="69:102">(<argument pos:start="69:24" pos:end="69:44"><expr pos:start="69:24" pos:end="69:44"><name pos:start="69:24" pos:end="69:44"><name pos:start="69:24" pos:end="69:34">new_che_pos</name><index pos:start="69:35" pos:end="69:44">[<expr pos:start="69:36" pos:end="69:43"><name pos:start="69:36" pos:end="69:43">TYPE_CCE</name></expr>]</index></name></expr></argument>, <argument pos:start="69:47" pos:end="69:67"><expr pos:start="69:47" pos:end="69:67"><name pos:start="69:47" pos:end="69:67"><name pos:start="69:47" pos:end="69:57">new_che_pos</name><index pos:start="69:58" pos:end="69:67">[<expr pos:start="69:59" pos:end="69:66"><name pos:start="69:59" pos:end="69:66">TYPE_CCE</name></expr>]</index></name></expr></argument>, <argument pos:start="69:70" pos:end="69:83"><expr pos:start="69:70" pos:end="69:83"><name pos:start="69:70" pos:end="69:83">AAC_CHANNEL_CC</name></expr></argument>,    <argument pos:start="69:89" pos:end="69:90"><expr pos:start="69:89" pos:end="69:90"><name pos:start="69:89" pos:end="69:90">gb</name></expr></argument>, <argument pos:start="69:93" pos:end="69:98"><expr pos:start="69:93" pos:end="69:98"><name pos:start="69:93" pos:end="69:98">num_cc</name></expr></argument>   )</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:23"><expr pos:start="73:5" pos:end="73:22"><call pos:start="73:5" pos:end="73:22"><name pos:start="73:5" pos:end="73:18">align_get_bits</name><argument_list pos:start="73:19" pos:end="73:22">(<argument pos:start="73:20" pos:end="73:21"><expr pos:start="73:20" pos:end="73:21"><name pos:start="73:20" pos:end="73:21">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:45">/* comment field, first byte is length */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:44"><expr pos:start="79:5" pos:end="79:43"><call pos:start="79:5" pos:end="79:43"><name pos:start="79:5" pos:end="79:18">skip_bits_long</name><argument_list pos:start="79:19" pos:end="79:43">(<argument pos:start="79:20" pos:end="79:21"><expr pos:start="79:20" pos:end="79:21"><name pos:start="79:20" pos:end="79:21">gb</name></expr></argument>, <argument pos:start="79:24" pos:end="79:42"><expr pos:start="79:24" pos:end="79:42"><literal type="number" pos:start="79:24" pos:end="79:24">8</literal> <operator pos:start="79:26" pos:end="79:26">*</operator> <call pos:start="79:28" pos:end="79:42"><name pos:start="79:28" pos:end="79:35">get_bits</name><argument_list pos:start="79:36" pos:end="79:42">(<argument pos:start="79:37" pos:end="79:38"><expr pos:start="79:37" pos:end="79:38"><name pos:start="79:37" pos:end="79:38">gb</name></expr></argument>, <argument pos:start="79:41" pos:end="79:41"><expr pos:start="79:41" pos:end="79:41"><literal type="number" pos:start="79:41" pos:end="79:41">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
