<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7676.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">select_soundhw</name><parameter_list pos:start="1:20" pos:end="1:39">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:32"><specifier pos:start="1:21" pos:end="1:25">const</specifier> <name pos:start="1:27" pos:end="1:30">char</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">optarg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:18">soundhw</name></name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">c</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="113:5"><if pos:start="9:5" pos:end="27:5">if <condition pos:start="9:8" pos:end="9:23">(<expr pos:start="9:9" pos:end="9:22"><operator pos:start="9:9" pos:end="9:9">*</operator><name pos:start="9:10" pos:end="9:15">optarg</name> <operator pos:start="9:17" pos:end="9:18">==</operator> <literal type="char" pos:start="9:20" pos:end="9:22">'?'</literal></expr>)</condition> <block pos:start="9:25" pos:end="27:5">{<block_content pos:start="11:5" pos:end="25:29">

    <label pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:20">show_valid_cards</name>:</label>



        <expr_stmt pos:start="15:9" pos:end="15:62"><expr pos:start="15:9" pos:end="15:61"><call pos:start="15:9" pos:end="15:61"><name pos:start="15:9" pos:end="15:14">printf</name><argument_list pos:start="15:15" pos:end="15:61">(<argument pos:start="15:16" pos:end="15:60"><expr pos:start="15:16" pos:end="15:60"><literal type="string" pos:start="15:16" pos:end="15:60">"Valid sound card names (comma separated):\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="17:9" pos:end="21:9">for <control pos:start="17:13" pos:end="17:39">(<init pos:start="17:14" pos:end="17:25"><expr pos:start="17:14" pos:end="17:24"><name pos:start="17:14" pos:end="17:14">c</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:24">soundhw</name></expr>;</init> <condition pos:start="17:27" pos:end="17:34"><expr pos:start="17:27" pos:end="17:33"><name pos:start="17:27" pos:end="17:33"><name pos:start="17:27" pos:end="17:27">c</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:33">name</name></name></expr>;</condition> <incr pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><operator pos:start="17:36" pos:end="17:37">++</operator><name pos:start="17:38" pos:end="17:38">c</name></expr></incr>)</control> <block pos:start="17:41" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:53">

            <expr_stmt pos:start="19:13" pos:end="19:53"><expr pos:start="19:13" pos:end="19:52"><call pos:start="19:13" pos:end="19:52"><name pos:start="19:13" pos:end="19:18">printf</name> <argument_list pos:start="19:20" pos:end="19:52">(<argument pos:start="19:21" pos:end="19:32"><expr pos:start="19:21" pos:end="19:32"><literal type="string" pos:start="19:21" pos:end="19:32">"%-11s %s\n"</literal></expr></argument>, <argument pos:start="19:35" pos:end="19:41"><expr pos:start="19:35" pos:end="19:41"><name pos:start="19:35" pos:end="19:41"><name pos:start="19:35" pos:end="19:35">c</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:41">name</name></name></expr></argument>, <argument pos:start="19:44" pos:end="19:51"><expr pos:start="19:44" pos:end="19:51"><name pos:start="19:44" pos:end="19:51"><name pos:start="19:44" pos:end="19:44">c</name><operator pos:start="19:45" pos:end="19:46">-&gt;</operator><name pos:start="19:47" pos:end="19:51">descr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="23:9" pos:end="23:64"><expr pos:start="23:9" pos:end="23:63"><call pos:start="23:9" pos:end="23:63"><name pos:start="23:9" pos:end="23:14">printf</name><argument_list pos:start="23:15" pos:end="23:63">(<argument pos:start="23:16" pos:end="23:62"><expr pos:start="23:16" pos:end="23:62"><literal type="string" pos:start="23:16" pos:end="23:62">"\n-soundhw all will enable all of the above\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><call pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:12">exit</name><argument_list pos:start="25:13" pos:end="25:28">(<argument pos:start="25:14" pos:end="25:27"><expr pos:start="25:14" pos:end="25:27"><operator pos:start="25:14" pos:end="25:14">*</operator><name pos:start="25:15" pos:end="25:20">optarg</name> <operator pos:start="25:22" pos:end="25:23">!=</operator> <literal type="char" pos:start="25:25" pos:end="25:27">'?'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="29:5" pos:end="113:5">else <block pos:start="29:10" pos:end="113:5">{<block_content pos:start="31:9" pos:end="111:9">

        <decl_stmt pos:start="31:9" pos:end="31:17"><decl pos:start="31:9" pos:end="31:16"><type pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:14">size_t</name></type> <name pos:start="31:16" pos:end="31:16">l</name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:22"><decl pos:start="33:9" pos:end="33:21"><type pos:start="33:9" pos:end="33:20"><specifier pos:start="33:9" pos:end="33:13">const</specifier> <name pos:start="33:15" pos:end="33:18">char</name> <modifier pos:start="33:20" pos:end="33:20">*</modifier></type><name pos:start="33:21" pos:end="33:21">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:16"><decl pos:start="35:9" pos:end="35:15"><type pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:12">char</name> <modifier pos:start="35:14" pos:end="35:14">*</modifier></type><name pos:start="35:15" pos:end="35:15">e</name></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:25"><decl pos:start="37:9" pos:end="37:24"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:20">bad_card</name> <init pos:start="37:22" pos:end="37:24">= <expr pos:start="37:24" pos:end="37:24"><literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="41:9" pos:end="51:9"><if pos:start="41:9" pos:end="51:9">if <condition pos:start="41:12" pos:end="41:35">(<expr pos:start="41:13" pos:end="41:34"><operator pos:start="41:13" pos:end="41:13">!</operator><call pos:start="41:14" pos:end="41:34"><name pos:start="41:14" pos:end="41:19">strcmp</name><argument_list pos:start="41:20" pos:end="41:34">(<argument pos:start="41:21" pos:end="41:26"><expr pos:start="41:21" pos:end="41:26"><name pos:start="41:21" pos:end="41:26">optarg</name></expr></argument>, <argument pos:start="41:29" pos:end="41:33"><expr pos:start="41:29" pos:end="41:33"><literal type="string" pos:start="41:29" pos:end="41:33">"all"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:37" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:19">

            <for pos:start="43:13" pos:end="47:13">for <control pos:start="43:17" pos:end="43:43">(<init pos:start="43:18" pos:end="43:29"><expr pos:start="43:18" pos:end="43:28"><name pos:start="43:18" pos:end="43:18">c</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:28">soundhw</name></expr>;</init> <condition pos:start="43:31" pos:end="43:38"><expr pos:start="43:31" pos:end="43:37"><name pos:start="43:31" pos:end="43:37"><name pos:start="43:31" pos:end="43:31">c</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:37">name</name></name></expr>;</condition> <incr pos:start="43:40" pos:end="43:42"><expr pos:start="43:40" pos:end="43:42"><operator pos:start="43:40" pos:end="43:41">++</operator><name pos:start="43:42" pos:end="43:42">c</name></expr></incr>)</control> <block pos:start="43:45" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:31">

                <expr_stmt pos:start="45:17" pos:end="45:31"><expr pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:17">c</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:26">enabled</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <literal type="number" pos:start="45:30" pos:end="45:30">1</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <return pos:start="49:13" pos:end="49:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:19"><expr pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:9">p</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <name pos:start="55:13" pos:end="55:18">optarg</name></expr>;</expr_stmt>

        <while pos:start="57:9" pos:end="103:9">while <condition pos:start="57:15" pos:end="57:18">(<expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">*</operator><name pos:start="57:17" pos:end="57:17">p</name></expr>)</condition> <block pos:start="57:20" pos:end="103:9">{<block_content pos:start="59:13" pos:end="101:33">

            <expr_stmt pos:start="59:13" pos:end="59:31"><expr pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:13">e</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <call pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:22">strchr</name><argument_list pos:start="59:23" pos:end="59:30">(<argument pos:start="59:24" pos:end="59:24"><expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">p</name></expr></argument>, <argument pos:start="59:27" pos:end="59:29"><expr pos:start="59:27" pos:end="59:29"><literal type="char" pos:start="59:27" pos:end="59:29">','</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:50"><expr pos:start="61:13" pos:end="61:49"><name pos:start="61:13" pos:end="61:13">l</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <ternary pos:start="61:17" pos:end="61:49"><condition pos:start="61:17" pos:end="61:20"><expr pos:start="61:17" pos:end="61:18"><operator pos:start="61:17" pos:end="61:17">!</operator><name pos:start="61:18" pos:end="61:18">e</name></expr> ?</condition><then pos:start="61:22" pos:end="61:30"> <expr pos:start="61:22" pos:end="61:30"><call pos:start="61:22" pos:end="61:30"><name pos:start="61:22" pos:end="61:27">strlen</name><argument_list pos:start="61:28" pos:end="61:30">(<argument pos:start="61:29" pos:end="61:29"><expr pos:start="61:29" pos:end="61:29"><name pos:start="61:29" pos:end="61:29">p</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="61:32" pos:end="61:49">: <expr pos:start="61:34" pos:end="61:49"><operator pos:start="61:34" pos:end="61:34">(</operator><name pos:start="61:35" pos:end="61:40">size_t</name><operator pos:start="61:41" pos:end="61:41">)</operator> <operator pos:start="61:43" pos:end="61:43">(</operator><name pos:start="61:44" pos:end="61:44">e</name> <operator pos:start="61:46" pos:end="61:46">-</operator> <name pos:start="61:48" pos:end="61:48">p</name><operator pos:start="61:49" pos:end="61:49">)</operator></expr></else></ternary></expr>;</expr_stmt>



            <for pos:start="65:13" pos:end="75:13">for <control pos:start="65:17" pos:end="65:43">(<init pos:start="65:18" pos:end="65:29"><expr pos:start="65:18" pos:end="65:28"><name pos:start="65:18" pos:end="65:18">c</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:28">soundhw</name></expr>;</init> <condition pos:start="65:31" pos:end="65:38"><expr pos:start="65:31" pos:end="65:37"><name pos:start="65:31" pos:end="65:37"><name pos:start="65:31" pos:end="65:31">c</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:37">name</name></name></expr>;</condition> <incr pos:start="65:40" pos:end="65:42"><expr pos:start="65:40" pos:end="65:42"><operator pos:start="65:40" pos:end="65:41">++</operator><name pos:start="65:42" pos:end="65:42">c</name></expr></incr>)</control> <block pos:start="65:45" pos:end="75:13">{<block_content pos:start="67:17" pos:end="73:17">

                <if_stmt pos:start="67:17" pos:end="73:17"><if pos:start="67:17" pos:end="73:17">if <condition pos:start="67:20" pos:end="67:59">(<expr pos:start="67:21" pos:end="67:58"><operator pos:start="67:21" pos:end="67:21">!</operator><call pos:start="67:22" pos:end="67:43"><name pos:start="67:22" pos:end="67:28">strncmp</name><argument_list pos:start="67:29" pos:end="67:43">(<argument pos:start="67:30" pos:end="67:36"><expr pos:start="67:30" pos:end="67:36"><name pos:start="67:30" pos:end="67:36"><name pos:start="67:30" pos:end="67:30">c</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:36">name</name></name></expr></argument>, <argument pos:start="67:39" pos:end="67:39"><expr pos:start="67:39" pos:end="67:39"><name pos:start="67:39" pos:end="67:39">p</name></expr></argument>, <argument pos:start="67:42" pos:end="67:42"><expr pos:start="67:42" pos:end="67:42"><name pos:start="67:42" pos:end="67:42">l</name></expr></argument>)</argument_list></call> <operator pos:start="67:45" pos:end="67:46">&amp;&amp;</operator> <operator pos:start="67:48" pos:end="67:48">!</operator><name pos:start="67:49" pos:end="67:58"><name pos:start="67:49" pos:end="67:49">c</name><operator pos:start="67:50" pos:end="67:51">-&gt;</operator><name pos:start="67:52" pos:end="67:55">name</name><index pos:start="67:56" pos:end="67:58">[<expr pos:start="67:57" pos:end="67:57"><name pos:start="67:57" pos:end="67:57">l</name></expr>]</index></name></expr>)</condition> <block pos:start="67:61" pos:end="73:17">{<block_content pos:start="69:21" pos:end="71:26">

                    <expr_stmt pos:start="69:21" pos:end="69:35"><expr pos:start="69:21" pos:end="69:34"><name pos:start="69:21" pos:end="69:30"><name pos:start="69:21" pos:end="69:21">c</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:30">enabled</name></name> <operator pos:start="69:32" pos:end="69:32">=</operator> <literal type="number" pos:start="69:34" pos:end="69:34">1</literal></expr>;</expr_stmt>

                    <break pos:start="71:21" pos:end="71:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>



            <if_stmt pos:start="79:13" pos:end="99:13"><if pos:start="79:13" pos:end="99:13">if <condition pos:start="79:16" pos:end="79:25">(<expr pos:start="79:17" pos:end="79:24"><operator pos:start="79:17" pos:end="79:17">!</operator><name pos:start="79:18" pos:end="79:24"><name pos:start="79:18" pos:end="79:18">c</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:24">name</name></name></expr>)</condition> <block pos:start="79:27" pos:end="99:13">{<block_content pos:start="81:17" pos:end="97:29">

                <if_stmt pos:start="81:17" pos:end="95:17"><if pos:start="81:17" pos:end="87:17">if <condition pos:start="81:20" pos:end="81:27">(<expr pos:start="81:21" pos:end="81:26"><name pos:start="81:21" pos:end="81:21">l</name> <operator pos:start="81:23" pos:end="81:23">&gt;</operator> <literal type="number" pos:start="81:25" pos:end="81:26">80</literal></expr>)</condition> <block pos:start="81:29" pos:end="87:17">{<block_content pos:start="83:21" pos:end="85:75">

                    <expr_stmt pos:start="83:21" pos:end="85:75"><expr pos:start="83:21" pos:end="85:74"><call pos:start="83:21" pos:end="85:74"><name pos:start="83:21" pos:end="83:27">fprintf</name><argument_list pos:start="83:28" pos:end="85:74">(<argument pos:start="83:29" pos:end="83:34"><expr pos:start="83:29" pos:end="83:34"><name pos:start="83:29" pos:end="83:34">stderr</name></expr></argument>,

                            <argument pos:start="85:29" pos:end="85:73"><expr pos:start="85:29" pos:end="85:73"><literal type="string" pos:start="85:29" pos:end="85:73">"Unknown sound card name (too big to show)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if>

                <else pos:start="89:17" pos:end="95:17">else <block pos:start="89:22" pos:end="95:17">{<block_content pos:start="91:21" pos:end="93:40">

                    <expr_stmt pos:start="91:21" pos:end="93:40"><expr pos:start="91:21" pos:end="93:39"><call pos:start="91:21" pos:end="93:39"><name pos:start="91:21" pos:end="91:27">fprintf</name><argument_list pos:start="91:28" pos:end="93:39">(<argument pos:start="91:29" pos:end="91:34"><expr pos:start="91:29" pos:end="91:34"><name pos:start="91:29" pos:end="91:34">stderr</name></expr></argument>, <argument pos:start="91:37" pos:end="91:70"><expr pos:start="91:37" pos:end="91:70"><literal type="string" pos:start="91:37" pos:end="91:70">"Unknown sound card name `%.*s'\n"</literal></expr></argument>,

                            <argument pos:start="93:29" pos:end="93:35"><expr pos:start="93:29" pos:end="93:35"><operator pos:start="93:29" pos:end="93:29">(</operator><name pos:start="93:30" pos:end="93:32">int</name><operator pos:start="93:33" pos:end="93:33">)</operator> <name pos:start="93:35" pos:end="93:35">l</name></expr></argument>, <argument pos:start="93:38" pos:end="93:38"><expr pos:start="93:38" pos:end="93:38"><name pos:start="93:38" pos:end="93:38">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:29"><expr pos:start="97:17" pos:end="97:28"><name pos:start="97:17" pos:end="97:24">bad_card</name> <operator pos:start="97:26" pos:end="97:26">=</operator> <literal type="number" pos:start="97:28" pos:end="97:28">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:33"><expr pos:start="101:13" pos:end="101:32"><name pos:start="101:13" pos:end="101:13">p</name> <operator pos:start="101:15" pos:end="101:16">+=</operator> <name pos:start="101:18" pos:end="101:18">l</name> <operator pos:start="101:20" pos:end="101:20">+</operator> <operator pos:start="101:22" pos:end="101:22">(</operator><name pos:start="101:23" pos:end="101:23">e</name> <operator pos:start="101:25" pos:end="101:26">!=</operator> <name pos:start="101:28" pos:end="101:31">NULL</name><operator pos:start="101:32" pos:end="101:32">)</operator></expr>;</expr_stmt>

        </block_content>}</block></while>



        <if_stmt pos:start="107:9" pos:end="111:9"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:21">(<expr pos:start="107:13" pos:end="107:20"><name pos:start="107:13" pos:end="107:20">bad_card</name></expr>)</condition> <block pos:start="107:23" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:34">

            <goto pos:start="109:13" pos:end="109:34">goto <name pos:start="109:18" pos:end="109:33">show_valid_cards</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
