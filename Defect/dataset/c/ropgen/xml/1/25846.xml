<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25846.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">do_sigaction</name><parameter_list pos:start="1:17" pos:end="3:47">(<parameter pos:start="1:18" pos:end="1:24"><decl pos:start="1:18" pos:end="1:24"><type pos:start="1:18" pos:end="1:24"><name pos:start="1:18" pos:end="1:20">int</name></type> <name pos:start="1:22" pos:end="1:24">sig</name></decl></parameter>, <parameter pos:start="1:27" pos:end="1:60"><decl pos:start="1:27" pos:end="1:60"><type pos:start="1:27" pos:end="1:60"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:55"><name pos:start="1:33" pos:end="1:38">struct</name> <name pos:start="1:40" pos:end="1:55">target_sigaction</name></name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">act</name></decl></parameter>,

                 <parameter pos:start="3:18" pos:end="3:46"><decl pos:start="3:18" pos:end="3:46"><type pos:start="3:18" pos:end="3:46"><name pos:start="3:18" pos:end="3:40"><name pos:start="3:18" pos:end="3:23">struct</name> <name pos:start="3:25" pos:end="3:40">target_sigaction</name></name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:46">oact</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:29">emulated_sigaction</name></name> <modifier pos:start="7:31" pos:end="7:31">*</modifier></type><name pos:start="7:32" pos:end="7:32">k</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:23"><if pos:start="11:5" pos:end="13:23">if <condition pos:start="11:8" pos:end="11:37">(<expr pos:start="11:9" pos:end="11:36"><name pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:11">sig</name> <argument_list type="generic" pos:start="11:13" pos:end="11:24">&lt; <argument pos:start="11:15" pos:end="11:22"><expr pos:start="11:15" pos:end="11:22"><literal type="number" pos:start="11:15" pos:end="11:15">1</literal> <operator pos:start="11:17" pos:end="11:18">||</operator> <name pos:start="11:20" pos:end="11:22">sig</name></expr></argument> &gt;</argument_list></name> <name pos:start="11:26" pos:end="11:36">TARGET_NSIG</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:23"><block_content pos:start="13:9" pos:end="13:23">

        <return pos:start="13:9" pos:end="13:23">return <expr pos:start="13:16" pos:end="13:22"><operator pos:start="13:16" pos:end="13:16">-</operator><name pos:start="13:17" pos:end="13:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="18:0"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:5">k</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <operator pos:start="15:9" pos:end="15:9">&amp;</operator><name pos:start="15:10" pos:end="15:30"><name pos:start="15:10" pos:end="15:21">sigact_table</name><index pos:start="15:22" pos:end="15:30">[<expr pos:start="15:23" pos:end="15:29"><name pos:start="15:23" pos:end="15:25">sig</name> <operator pos:start="15:27" pos:end="15:27">-</operator> <literal type="number" pos:start="15:29" pos:end="15:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

<cpp:if pos:start="17:1" pos:end="17:30">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:30"><call pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:11">defined</name><argument_list pos:start="17:12" pos:end="17:25">(<argument pos:start="17:13" pos:end="17:24"><expr pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:24">DEBUG_SIGNAL</name></expr></argument>)</argument_list></call> <operator pos:start="17:27" pos:end="17:28">&amp;&amp;</operator> <literal type="number" pos:start="17:30" pos:end="17:30">0</literal></expr></cpp:if>

    <expr_stmt pos:start="19:5" pos:end="24:0"><expr pos:start="19:5" pos:end="21:37"><call pos:start="19:5" pos:end="21:37"><name pos:start="19:5" pos:end="19:11">fprintf</name><argument_list pos:start="19:12" pos:end="21:37">(<argument pos:start="19:13" pos:end="19:18"><expr pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:18">stderr</name></expr></argument>, <argument pos:start="19:21" pos:end="19:64"><expr pos:start="19:21" pos:end="19:64"><literal type="string" pos:start="19:21" pos:end="19:64">"sigaction sig=%d act=0x%08x, oact=0x%08x\n"</literal></expr></argument>, 

            <argument pos:start="21:13" pos:end="21:15"><expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">sig</name></expr></argument>, <argument pos:start="21:18" pos:end="21:25"><expr pos:start="21:18" pos:end="21:25"><operator pos:start="21:18" pos:end="21:18">(</operator><name pos:start="21:19" pos:end="21:21">int</name><operator pos:start="21:22" pos:end="21:22">)</operator><name pos:start="21:23" pos:end="21:25">act</name></expr></argument>, <argument pos:start="21:28" pos:end="21:36"><expr pos:start="21:28" pos:end="21:36"><operator pos:start="21:28" pos:end="21:28">(</operator><name pos:start="21:29" pos:end="21:31">int</name><operator pos:start="21:32" pos:end="21:32">)</operator><name pos:start="21:33" pos:end="21:36">oact</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:13">(<expr pos:start="25:9" pos:end="25:12"><name pos:start="25:9" pos:end="25:12">oact</name></expr>)</condition> <block pos:start="25:15" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:38">

        <expr_stmt pos:start="27:9" pos:end="27:54"><expr pos:start="27:9" pos:end="27:53"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:12">oact</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:25">_sa_handler</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <call pos:start="27:29" pos:end="27:53"><name pos:start="27:29" pos:end="27:34">tswapl</name><argument_list pos:start="27:35" pos:end="27:53">(<argument pos:start="27:36" pos:end="27:52"><expr pos:start="27:36" pos:end="27:52"><name pos:start="27:36" pos:end="27:52"><name pos:start="27:36" pos:end="27:36">k</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:40">sa</name><operator pos:start="27:41" pos:end="27:41">.</operator><name pos:start="27:42" pos:end="27:52">_sa_handler</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:48"><expr pos:start="29:9" pos:end="29:47"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:12">oact</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:22">sa_flags</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <call pos:start="29:26" pos:end="29:47"><name pos:start="29:26" pos:end="29:31">tswapl</name><argument_list pos:start="29:32" pos:end="29:47">(<argument pos:start="29:33" pos:end="29:46"><expr pos:start="29:33" pos:end="29:46"><name pos:start="29:33" pos:end="29:46"><name pos:start="29:33" pos:end="29:33">k</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:37">sa</name><operator pos:start="29:38" pos:end="29:38">.</operator><name pos:start="29:39" pos:end="29:46">sa_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:54"><expr pos:start="31:9" pos:end="31:53"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:12">oact</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:25">sa_restorer</name></name> <operator pos:start="31:27" pos:end="31:27">=</operator> <call pos:start="31:29" pos:end="31:53"><name pos:start="31:29" pos:end="31:34">tswapl</name><argument_list pos:start="31:35" pos:end="31:53">(<argument pos:start="31:36" pos:end="31:52"><expr pos:start="31:36" pos:end="31:52"><name pos:start="31:36" pos:end="31:52"><name pos:start="31:36" pos:end="31:36">k</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:40">sa</name><operator pos:start="31:41" pos:end="31:41">.</operator><name pos:start="31:42" pos:end="31:52">sa_restorer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:38"><expr pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:12">oact</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:21">sa_mask</name></name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:37"><name pos:start="33:25" pos:end="33:25">k</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:29">sa</name><operator pos:start="33:30" pos:end="33:30">.</operator><name pos:start="33:31" pos:end="33:37">sa_mask</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="47:5"><if pos:start="37:5" pos:end="47:5">if <condition pos:start="37:8" pos:end="37:12">(<expr pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">act</name></expr>)</condition> <block pos:start="37:14" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:37">

        <expr_stmt pos:start="39:9" pos:end="39:53"><expr pos:start="39:9" pos:end="39:52"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:9">k</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:13">sa</name><operator pos:start="39:14" pos:end="39:14">.</operator><name pos:start="39:15" pos:end="39:25">_sa_handler</name></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <call pos:start="39:29" pos:end="39:52"><name pos:start="39:29" pos:end="39:34">tswapl</name><argument_list pos:start="39:35" pos:end="39:52">(<argument pos:start="39:36" pos:end="39:51"><expr pos:start="39:36" pos:end="39:51"><name pos:start="39:36" pos:end="39:51"><name pos:start="39:36" pos:end="39:38">act</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:51">_sa_handler</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:47"><expr pos:start="41:9" pos:end="41:46"><name pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:9">k</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:13">sa</name><operator pos:start="41:14" pos:end="41:14">.</operator><name pos:start="41:15" pos:end="41:22">sa_flags</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <call pos:start="41:26" pos:end="41:46"><name pos:start="41:26" pos:end="41:31">tswapl</name><argument_list pos:start="41:32" pos:end="41:46">(<argument pos:start="41:33" pos:end="41:45"><expr pos:start="41:33" pos:end="41:45"><name pos:start="41:33" pos:end="41:45"><name pos:start="41:33" pos:end="41:35">act</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:45">sa_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:53"><expr pos:start="43:9" pos:end="43:52"><name pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:9">k</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:13">sa</name><operator pos:start="43:14" pos:end="43:14">.</operator><name pos:start="43:15" pos:end="43:25">sa_restorer</name></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <call pos:start="43:29" pos:end="43:52"><name pos:start="43:29" pos:end="43:34">tswapl</name><argument_list pos:start="43:35" pos:end="43:52">(<argument pos:start="43:36" pos:end="43:51"><expr pos:start="43:36" pos:end="43:51"><name pos:start="43:36" pos:end="43:51"><name pos:start="43:36" pos:end="43:38">act</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:51">sa_restorer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:37"><expr pos:start="45:9" pos:end="45:36"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:9">k</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:13">sa</name><operator pos:start="45:14" pos:end="45:14">.</operator><name pos:start="45:15" pos:end="45:21">sa_mask</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:36"><name pos:start="45:25" pos:end="45:27">act</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:36">sa_mask</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
