<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11940.c" pos:tabs="8"><function pos:start="1:1" pos:end="208:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:36">sonic_decode_init</name><parameter_list pos:start="1:37" pos:end="1:59">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="208:1">{<block_content pos:start="5:5" pos:end="206:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">SonicContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:38">= <expr pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:27">avctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">GetBitContext</name></type> <name pos:start="7:19" pos:end="7:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:15">channels</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <name pos:start="13:19" pos:end="13:33"><name pos:start="13:19" pos:end="13:23">avctx</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:33">channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:17">samplerate</name></name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:38"><name pos:start="15:21" pos:end="15:25">avctx</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:38">sample_rate</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:26">(<expr pos:start="19:9" pos:end="19:25"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:25"><name pos:start="19:10" pos:end="19:14">avctx</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:25">extradata</name></name></expr>)</condition>

    <block pos:start="21:5" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:35">

        <expr_stmt pos:start="23:9" pos:end="23:70"><expr pos:start="23:9" pos:end="23:69"><call pos:start="23:9" pos:end="23:69"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:69">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">avctx</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><name pos:start="23:23" pos:end="23:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:37" pos:end="23:68"><expr pos:start="23:37" pos:end="23:68"><literal type="string" pos:start="23:37" pos:end="23:68">"No mandatory headers present\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:35">return <expr pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:65"><expr pos:start="31:5" pos:end="31:64"><call pos:start="31:5" pos:end="31:64"><name pos:start="31:5" pos:end="31:18">init_get_bits8</name><argument_list pos:start="31:19" pos:end="31:64">(<argument pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><operator pos:start="31:20" pos:end="31:20">&amp;</operator><name pos:start="31:21" pos:end="31:22">gb</name></expr></argument>, <argument pos:start="31:25" pos:end="31:40"><expr pos:start="31:25" pos:end="31:40"><name pos:start="31:25" pos:end="31:40"><name pos:start="31:25" pos:end="31:29">avctx</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:40">extradata</name></name></expr></argument>, <argument pos:start="31:43" pos:end="31:63"><expr pos:start="31:43" pos:end="31:63"><name pos:start="31:43" pos:end="31:63"><name pos:start="31:43" pos:end="31:47">avctx</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:63">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:34"><expr pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:14">version</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="35:33"><name pos:start="35:18" pos:end="35:25">get_bits</name><argument_list pos:start="35:26" pos:end="35:33">(<argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><operator pos:start="35:27" pos:end="35:27">&amp;</operator><name pos:start="35:28" pos:end="35:29">gb</name></expr></argument>, <argument pos:start="35:32" pos:end="35:32"><expr pos:start="35:32" pos:end="35:32"><literal type="number" pos:start="35:32" pos:end="35:32">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:24">(<expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:18">version</name></name> <operator pos:start="37:20" pos:end="37:21">&gt;=</operator> <literal type="number" pos:start="37:23" pos:end="37:23">2</literal></expr>)</condition> <block pos:start="37:26" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:44">

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:18">version</name></name>       <operator pos:start="39:26" pos:end="39:26">=</operator> <call pos:start="39:28" pos:end="39:43"><name pos:start="39:28" pos:end="39:35">get_bits</name><argument_list pos:start="39:36" pos:end="39:43">(<argument pos:start="39:37" pos:end="39:39"><expr pos:start="39:37" pos:end="39:39"><operator pos:start="39:37" pos:end="39:37">&amp;</operator><name pos:start="39:38" pos:end="39:39">gb</name></expr></argument>, <argument pos:start="39:42" pos:end="39:42"><expr pos:start="39:42" pos:end="39:42"><literal type="number" pos:start="39:42" pos:end="39:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:44"><expr pos:start="41:9" pos:end="41:43"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:24">minor_version</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <call pos:start="41:28" pos:end="41:43"><name pos:start="41:28" pos:end="41:35">get_bits</name><argument_list pos:start="41:36" pos:end="41:43">(<argument pos:start="41:37" pos:end="41:39"><expr pos:start="41:37" pos:end="41:39"><operator pos:start="41:37" pos:end="41:37">&amp;</operator><name pos:start="41:38" pos:end="41:39">gb</name></expr></argument>, <argument pos:start="41:42" pos:end="41:42"><expr pos:start="41:42" pos:end="41:42"><literal type="number" pos:start="41:42" pos:end="41:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:24">(<expr pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:18">version</name></name> <operator pos:start="45:20" pos:end="45:21">!=</operator> <literal type="number" pos:start="45:23" pos:end="45:23">2</literal></expr>)</condition>

    <block pos:start="47:5" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:35">

        <expr_stmt pos:start="49:9" pos:end="49:82"><expr pos:start="49:9" pos:end="49:81"><call pos:start="49:9" pos:end="49:81"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:81">(<argument pos:start="49:16" pos:end="49:20"><expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">avctx</name></expr></argument>, <argument pos:start="49:23" pos:end="49:34"><expr pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:37" pos:end="49:80"><expr pos:start="49:37" pos:end="49:80"><literal type="string" pos:start="49:37" pos:end="49:80">"Unsupported Sonic version, please report\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:35">return <expr pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="81:5"><if pos:start="57:5" pos:end="81:5">if <condition pos:start="57:8" pos:end="57:24">(<expr pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:18">version</name></name> <operator pos:start="57:20" pos:end="57:21">&gt;=</operator> <literal type="number" pos:start="57:23" pos:end="57:23">1</literal></expr>)</condition>

    <block pos:start="59:5" pos:end="81:5">{<block_content pos:start="61:9" pos:end="79:40">

        <decl_stmt pos:start="61:9" pos:end="61:30"><decl pos:start="61:9" pos:end="61:29"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:29">sample_rate_index</name></decl>;</decl_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:39"><expr pos:start="63:9" pos:end="63:38"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:19">channels</name></name> <operator pos:start="63:21" pos:end="63:21">=</operator> <call pos:start="63:23" pos:end="63:38"><name pos:start="63:23" pos:end="63:30">get_bits</name><argument_list pos:start="63:31" pos:end="63:38">(<argument pos:start="63:32" pos:end="63:34"><expr pos:start="63:32" pos:end="63:34"><operator pos:start="63:32" pos:end="63:32">&amp;</operator><name pos:start="63:33" pos:end="63:34">gb</name></expr></argument>, <argument pos:start="63:37" pos:end="63:37"><expr pos:start="63:37" pos:end="63:37"><literal type="number" pos:start="63:37" pos:end="63:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:45"><expr pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:25">sample_rate_index</name> <operator pos:start="65:27" pos:end="65:27">=</operator> <call pos:start="65:29" pos:end="65:44"><name pos:start="65:29" pos:end="65:36">get_bits</name><argument_list pos:start="65:37" pos:end="65:44">(<argument pos:start="65:38" pos:end="65:40"><expr pos:start="65:38" pos:end="65:40"><operator pos:start="65:38" pos:end="65:38">&amp;</operator><name pos:start="65:39" pos:end="65:40">gb</name></expr></argument>, <argument pos:start="65:43" pos:end="65:43"><expr pos:start="65:43" pos:end="65:43"><literal type="number" pos:start="65:43" pos:end="65:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="73:9"><if pos:start="67:9" pos:end="73:9">if <condition pos:start="67:12" pos:end="67:66">(<expr pos:start="67:13" pos:end="67:65"><name pos:start="67:13" pos:end="67:29">sample_rate_index</name> <operator pos:start="67:31" pos:end="67:32">&gt;=</operator> <call pos:start="67:34" pos:end="67:65"><name pos:start="67:34" pos:end="67:47">FF_ARRAY_ELEMS</name><argument_list pos:start="67:48" pos:end="67:65">(<argument pos:start="67:49" pos:end="67:64"><expr pos:start="67:49" pos:end="67:64"><name pos:start="67:49" pos:end="67:64">samplerate_table</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:68" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:39">

            <expr_stmt pos:start="69:13" pos:end="69:93"><expr pos:start="69:13" pos:end="69:92"><call pos:start="69:13" pos:end="69:92"><name pos:start="69:13" pos:end="69:18">av_log</name><argument_list pos:start="69:19" pos:end="69:92">(<argument pos:start="69:20" pos:end="69:24"><expr pos:start="69:20" pos:end="69:24"><name pos:start="69:20" pos:end="69:24">avctx</name></expr></argument>, <argument pos:start="69:27" pos:end="69:38"><expr pos:start="69:27" pos:end="69:38"><name pos:start="69:27" pos:end="69:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:41" pos:end="69:72"><expr pos:start="69:41" pos:end="69:72"><literal type="string" pos:start="69:41" pos:end="69:72">"Invalid sample_rate_index %d\n"</literal></expr></argument>, <argument pos:start="69:75" pos:end="69:91"><expr pos:start="69:75" pos:end="69:91"><name pos:start="69:75" pos:end="69:91">sample_rate_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="71:13" pos:end="71:39">return <expr pos:start="71:20" pos:end="71:38"><name pos:start="71:20" pos:end="71:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:60"><expr pos:start="75:9" pos:end="75:59"><name pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:21">samplerate</name></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:59"><name pos:start="75:25" pos:end="75:40">samplerate_table</name><index pos:start="75:41" pos:end="75:59">[<expr pos:start="75:42" pos:end="75:58"><name pos:start="75:42" pos:end="75:58">sample_rate_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="79:40"><expr pos:start="77:9" pos:end="79:39"><call pos:start="77:9" pos:end="79:39"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="79:39">(<argument pos:start="77:16" pos:end="77:20"><expr pos:start="77:16" pos:end="77:20"><name pos:start="77:16" pos:end="77:20">avctx</name></expr></argument>, <argument pos:start="77:23" pos:end="77:33"><expr pos:start="77:23" pos:end="77:33"><name pos:start="77:23" pos:end="77:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="77:36" pos:end="77:69"><expr pos:start="77:36" pos:end="77:69"><literal type="string" pos:start="77:36" pos:end="77:69">"Sonicv2 chans: %d samprate: %d\n"</literal></expr></argument>,

            <argument pos:start="79:13" pos:end="79:23"><expr pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:23">channels</name></name></expr></argument>, <argument pos:start="79:26" pos:end="79:38"><expr pos:start="79:26" pos:end="79:38"><name pos:start="79:26" pos:end="79:38"><name pos:start="79:26" pos:end="79:26">s</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:38">samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="85:54">(<expr pos:start="85:9" pos:end="85:53"><name pos:start="85:9" pos:end="85:19"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:19">channels</name></name> <operator pos:start="85:21" pos:end="85:21">&gt;</operator> <name pos:start="85:23" pos:end="85:34">MAX_CHANNELS</name> <operator pos:start="85:36" pos:end="85:37">||</operator> <name pos:start="85:39" pos:end="85:49"><name pos:start="85:39" pos:end="85:39">s</name><operator pos:start="85:40" pos:end="85:41">-&gt;</operator><name pos:start="85:42" pos:end="85:49">channels</name></name> <operator pos:start="85:51" pos:end="85:51">&lt;</operator> <literal type="number" pos:start="85:53" pos:end="85:53">1</literal></expr>)</condition>

    <block pos:start="87:5" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:35">

        <expr_stmt pos:start="89:9" pos:end="89:91"><expr pos:start="89:9" pos:end="89:90"><call pos:start="89:9" pos:end="89:90"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:90">(<argument pos:start="89:16" pos:end="89:20"><expr pos:start="89:16" pos:end="89:20"><name pos:start="89:16" pos:end="89:20">avctx</name></expr></argument>, <argument pos:start="89:23" pos:end="89:34"><expr pos:start="89:23" pos:end="89:34"><name pos:start="89:23" pos:end="89:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:37" pos:end="89:89"><expr pos:start="89:37" pos:end="89:89"><literal type="string" pos:start="89:37" pos:end="89:89">"Only mono and stereo streams are supported by now\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="91:9" pos:end="91:35">return <expr pos:start="91:16" pos:end="91:34"><name pos:start="91:16" pos:end="91:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>




    <expr_stmt pos:start="98:5" pos:end="98:33"><expr pos:start="98:5" pos:end="98:32"><name pos:start="98:5" pos:end="98:15"><name pos:start="98:5" pos:end="98:5">s</name><operator pos:start="98:6" pos:end="98:7">-&gt;</operator><name pos:start="98:8" pos:end="98:15">lossless</name></name> <operator pos:start="98:17" pos:end="98:17">=</operator> <call pos:start="98:19" pos:end="98:32"><name pos:start="98:19" pos:end="98:27">get_bits1</name><argument_list pos:start="98:28" pos:end="98:32">(<argument pos:start="98:29" pos:end="98:31"><expr pos:start="98:29" pos:end="98:31"><operator pos:start="98:29" pos:end="98:29">&amp;</operator><name pos:start="98:30" pos:end="98:31">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="100:5" pos:end="102:26"><if pos:start="100:5" pos:end="102:26">if <condition pos:start="100:8" pos:end="100:21">(<expr pos:start="100:9" pos:end="100:20"><operator pos:start="100:9" pos:end="100:9">!</operator><name pos:start="100:10" pos:end="100:20"><name pos:start="100:10" pos:end="100:10">s</name><operator pos:start="100:11" pos:end="100:12">-&gt;</operator><name pos:start="100:13" pos:end="100:20">lossless</name></name></expr>)</condition><block type="pseudo" pos:start="102:9" pos:end="102:26"><block_content pos:start="102:9" pos:end="102:26">

        <expr_stmt pos:start="102:9" pos:end="102:26"><expr pos:start="102:9" pos:end="102:25"><call pos:start="102:9" pos:end="102:25"><name pos:start="102:9" pos:end="102:17">skip_bits</name><argument_list pos:start="102:18" pos:end="102:25">(<argument pos:start="102:19" pos:end="102:21"><expr pos:start="102:19" pos:end="102:21"><operator pos:start="102:19" pos:end="102:19">&amp;</operator><name pos:start="102:20" pos:end="102:21">gb</name></expr></argument>, <argument pos:start="102:24" pos:end="102:24"><expr pos:start="102:24" pos:end="102:24"><literal type="number" pos:start="102:24" pos:end="102:24">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="102:28" pos:end="102:39">// XXX FIXME</comment>

    <expr_stmt pos:start="104:5" pos:end="104:40"><expr pos:start="104:5" pos:end="104:39"><name pos:start="104:5" pos:end="104:20"><name pos:start="104:5" pos:end="104:5">s</name><operator pos:start="104:6" pos:end="104:7">-&gt;</operator><name pos:start="104:8" pos:end="104:20">decorrelation</name></name> <operator pos:start="104:22" pos:end="104:22">=</operator> <call pos:start="104:24" pos:end="104:39"><name pos:start="104:24" pos:end="104:31">get_bits</name><argument_list pos:start="104:32" pos:end="104:39">(<argument pos:start="104:33" pos:end="104:35"><expr pos:start="104:33" pos:end="104:35"><operator pos:start="104:33" pos:end="104:33">&amp;</operator><name pos:start="104:34" pos:end="104:35">gb</name></expr></argument>, <argument pos:start="104:38" pos:end="104:38"><expr pos:start="104:38" pos:end="104:38"><literal type="number" pos:start="104:38" pos:end="104:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="106:5" pos:end="112:5"><if pos:start="106:5" pos:end="112:5">if <condition pos:start="106:8" pos:end="106:50">(<expr pos:start="106:9" pos:end="106:49"><name pos:start="106:9" pos:end="106:24"><name pos:start="106:9" pos:end="106:9">s</name><operator pos:start="106:10" pos:end="106:11">-&gt;</operator><name pos:start="106:12" pos:end="106:24">decorrelation</name></name> <operator pos:start="106:26" pos:end="106:27">!=</operator> <literal type="number" pos:start="106:29" pos:end="106:29">3</literal> <operator pos:start="106:31" pos:end="106:32">&amp;&amp;</operator> <name pos:start="106:34" pos:end="106:44"><name pos:start="106:34" pos:end="106:34">s</name><operator pos:start="106:35" pos:end="106:36">-&gt;</operator><name pos:start="106:37" pos:end="106:44">channels</name></name> <operator pos:start="106:46" pos:end="106:47">!=</operator> <literal type="number" pos:start="106:49" pos:end="106:49">2</literal></expr>)</condition> <block pos:start="106:52" pos:end="112:5">{<block_content pos:start="108:9" pos:end="110:35">

        <expr_stmt pos:start="108:9" pos:end="108:84"><expr pos:start="108:9" pos:end="108:83"><call pos:start="108:9" pos:end="108:83"><name pos:start="108:9" pos:end="108:14">av_log</name><argument_list pos:start="108:15" pos:end="108:83">(<argument pos:start="108:16" pos:end="108:20"><expr pos:start="108:16" pos:end="108:20"><name pos:start="108:16" pos:end="108:20">avctx</name></expr></argument>, <argument pos:start="108:23" pos:end="108:34"><expr pos:start="108:23" pos:end="108:34"><name pos:start="108:23" pos:end="108:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="108:37" pos:end="108:64"><expr pos:start="108:37" pos:end="108:64"><literal type="string" pos:start="108:37" pos:end="108:64">"invalid decorrelation %d\n"</literal></expr></argument>, <argument pos:start="108:67" pos:end="108:82"><expr pos:start="108:67" pos:end="108:82"><name pos:start="108:67" pos:end="108:82"><name pos:start="108:67" pos:end="108:67">s</name><operator pos:start="108:68" pos:end="108:69">-&gt;</operator><name pos:start="108:70" pos:end="108:82">decorrelation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="110:9" pos:end="110:35">return <expr pos:start="110:16" pos:end="110:34"><name pos:start="110:16" pos:end="110:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="116:5" pos:end="116:39"><expr pos:start="116:5" pos:end="116:38"><name pos:start="116:5" pos:end="116:19"><name pos:start="116:5" pos:end="116:5">s</name><operator pos:start="116:6" pos:end="116:7">-&gt;</operator><name pos:start="116:8" pos:end="116:19">downsampling</name></name> <operator pos:start="116:21" pos:end="116:21">=</operator> <call pos:start="116:23" pos:end="116:38"><name pos:start="116:23" pos:end="116:30">get_bits</name><argument_list pos:start="116:31" pos:end="116:38">(<argument pos:start="116:32" pos:end="116:34"><expr pos:start="116:32" pos:end="116:34"><operator pos:start="116:32" pos:end="116:32">&amp;</operator><name pos:start="116:33" pos:end="116:34">gb</name></expr></argument>, <argument pos:start="116:37" pos:end="116:37"><expr pos:start="116:37" pos:end="116:37"><literal type="number" pos:start="116:37" pos:end="116:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="118:5" pos:end="124:5"><if pos:start="118:5" pos:end="124:5">if <condition pos:start="118:8" pos:end="118:25">(<expr pos:start="118:9" pos:end="118:24"><operator pos:start="118:9" pos:end="118:9">!</operator><name pos:start="118:10" pos:end="118:24"><name pos:start="118:10" pos:end="118:10">s</name><operator pos:start="118:11" pos:end="118:12">-&gt;</operator><name pos:start="118:13" pos:end="118:24">downsampling</name></name></expr>)</condition> <block pos:start="118:27" pos:end="124:5">{<block_content pos:start="120:9" pos:end="122:35">

        <expr_stmt pos:start="120:9" pos:end="120:68"><expr pos:start="120:9" pos:end="120:67"><call pos:start="120:9" pos:end="120:67"><name pos:start="120:9" pos:end="120:14">av_log</name><argument_list pos:start="120:15" pos:end="120:67">(<argument pos:start="120:16" pos:end="120:20"><expr pos:start="120:16" pos:end="120:20"><name pos:start="120:16" pos:end="120:20">avctx</name></expr></argument>, <argument pos:start="120:23" pos:end="120:34"><expr pos:start="120:23" pos:end="120:34"><name pos:start="120:23" pos:end="120:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="120:37" pos:end="120:66"><expr pos:start="120:37" pos:end="120:66"><literal type="string" pos:start="120:37" pos:end="120:66">"invalid downsampling value\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="122:9" pos:end="122:35">return <expr pos:start="122:16" pos:end="122:34"><name pos:start="122:16" pos:end="122:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="128:5" pos:end="128:42"><expr pos:start="128:5" pos:end="128:41"><name pos:start="128:5" pos:end="128:15"><name pos:start="128:5" pos:end="128:5">s</name><operator pos:start="128:6" pos:end="128:7">-&gt;</operator><name pos:start="128:8" pos:end="128:15">num_taps</name></name> <operator pos:start="128:17" pos:end="128:17">=</operator> <operator pos:start="128:19" pos:end="128:19">(</operator><call pos:start="128:20" pos:end="128:35"><name pos:start="128:20" pos:end="128:27">get_bits</name><argument_list pos:start="128:28" pos:end="128:35">(<argument pos:start="128:29" pos:end="128:31"><expr pos:start="128:29" pos:end="128:31"><operator pos:start="128:29" pos:end="128:29">&amp;</operator><name pos:start="128:30" pos:end="128:31">gb</name></expr></argument>, <argument pos:start="128:34" pos:end="128:34"><expr pos:start="128:34" pos:end="128:34"><literal type="number" pos:start="128:34" pos:end="128:34">5</literal></expr></argument>)</argument_list></call><operator pos:start="128:36" pos:end="128:36">+</operator><literal type="number" pos:start="128:37" pos:end="128:37">1</literal><operator pos:start="128:38" pos:end="128:38">)</operator><operator pos:start="128:39" pos:end="128:40">&lt;&lt;</operator><literal type="number" pos:start="128:41" pos:end="128:41">5</literal></expr>;</expr_stmt>

    <if_stmt pos:start="130:5" pos:end="132:59"><if pos:start="130:5" pos:end="132:59">if <condition pos:start="130:8" pos:end="130:23">(<expr pos:start="130:9" pos:end="130:22"><call pos:start="130:9" pos:end="130:22"><name pos:start="130:9" pos:end="130:17">get_bits1</name><argument_list pos:start="130:18" pos:end="130:22">(<argument pos:start="130:19" pos:end="130:21"><expr pos:start="130:19" pos:end="130:21"><operator pos:start="130:19" pos:end="130:19">&amp;</operator><name pos:start="130:20" pos:end="130:21">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="132:9" pos:end="132:59"><block_content pos:start="132:9" pos:end="132:59"> <comment type="line" pos:start="130:25" pos:end="130:36">// XXX FIXME</comment>

        <expr_stmt pos:start="132:9" pos:end="132:59"><expr pos:start="132:9" pos:end="132:58"><call pos:start="132:9" pos:end="132:58"><name pos:start="132:9" pos:end="132:14">av_log</name><argument_list pos:start="132:15" pos:end="132:58">(<argument pos:start="132:16" pos:end="132:20"><expr pos:start="132:16" pos:end="132:20"><name pos:start="132:16" pos:end="132:20">avctx</name></expr></argument>, <argument pos:start="132:23" pos:end="132:33"><expr pos:start="132:23" pos:end="132:33"><name pos:start="132:23" pos:end="132:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="132:36" pos:end="132:57"><expr pos:start="132:36" pos:end="132:57"><literal type="string" pos:start="132:36" pos:end="132:57">"Custom quant table\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="136:5" pos:end="136:66"><expr pos:start="136:5" pos:end="136:65"><name pos:start="136:5" pos:end="136:18"><name pos:start="136:5" pos:end="136:5">s</name><operator pos:start="136:6" pos:end="136:7">-&gt;</operator><name pos:start="136:8" pos:end="136:18">block_align</name></name> <operator pos:start="136:20" pos:end="136:20">=</operator> <literal type="number" pos:start="136:22" pos:end="136:27">2048LL</literal><operator pos:start="136:28" pos:end="136:28">*</operator><name pos:start="136:29" pos:end="136:41"><name pos:start="136:29" pos:end="136:29">s</name><operator pos:start="136:30" pos:end="136:31">-&gt;</operator><name pos:start="136:32" pos:end="136:41">samplerate</name></name><operator pos:start="136:42" pos:end="136:42">/</operator><operator pos:start="136:43" pos:end="136:43">(</operator><literal type="number" pos:start="136:44" pos:end="136:48">44100</literal><operator pos:start="136:49" pos:end="136:49">*</operator><name pos:start="136:50" pos:end="136:64"><name pos:start="136:50" pos:end="136:50">s</name><operator pos:start="136:51" pos:end="136:52">-&gt;</operator><name pos:start="136:53" pos:end="136:64">downsampling</name></name><operator pos:start="136:65" pos:end="136:65">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="138:5" pos:end="138:63"><expr pos:start="138:5" pos:end="138:62"><name pos:start="138:5" pos:end="138:17"><name pos:start="138:5" pos:end="138:5">s</name><operator pos:start="138:6" pos:end="138:7">-&gt;</operator><name pos:start="138:8" pos:end="138:17">frame_size</name></name> <operator pos:start="138:19" pos:end="138:19">=</operator> <name pos:start="138:21" pos:end="138:31"><name pos:start="138:21" pos:end="138:21">s</name><operator pos:start="138:22" pos:end="138:23">-&gt;</operator><name pos:start="138:24" pos:end="138:31">channels</name></name><operator pos:start="138:32" pos:end="138:32">*</operator><name pos:start="138:33" pos:end="138:46"><name pos:start="138:33" pos:end="138:33">s</name><operator pos:start="138:34" pos:end="138:35">-&gt;</operator><name pos:start="138:36" pos:end="138:46">block_align</name></name><operator pos:start="138:47" pos:end="138:47">*</operator><name pos:start="138:48" pos:end="138:62"><name pos:start="138:48" pos:end="138:48">s</name><operator pos:start="138:49" pos:end="138:50">-&gt;</operator><name pos:start="138:51" pos:end="138:62">downsampling</name></name></expr>;</expr_stmt>

<comment type="line" pos:start="140:1" pos:end="140:41">//    avctx-&gt;frame_size = s-&gt;block_align;</comment>



    <expr_stmt pos:start="144:5" pos:end="146:130"><expr pos:start="144:5" pos:end="146:129"><call pos:start="144:5" pos:end="146:129"><name pos:start="144:5" pos:end="144:10">av_log</name><argument_list pos:start="144:11" pos:end="146:129">(<argument pos:start="144:12" pos:end="144:16"><expr pos:start="144:12" pos:end="144:16"><name pos:start="144:12" pos:end="144:16">avctx</name></expr></argument>, <argument pos:start="144:19" pos:end="144:29"><expr pos:start="144:19" pos:end="144:29"><name pos:start="144:19" pos:end="144:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="144:32" pos:end="144:108"><expr pos:start="144:32" pos:end="144:108"><literal type="string" pos:start="144:32" pos:end="144:108">"Sonic: ver: %d.%d ls: %d dr: %d taps: %d block: %d frame: %d downsamp: %d\n"</literal></expr></argument>,

        <argument pos:start="146:9" pos:end="146:18"><expr pos:start="146:9" pos:end="146:18"><name pos:start="146:9" pos:end="146:18"><name pos:start="146:9" pos:end="146:9">s</name><operator pos:start="146:10" pos:end="146:11">-&gt;</operator><name pos:start="146:12" pos:end="146:18">version</name></name></expr></argument>, <argument pos:start="146:21" pos:end="146:36"><expr pos:start="146:21" pos:end="146:36"><name pos:start="146:21" pos:end="146:36"><name pos:start="146:21" pos:end="146:21">s</name><operator pos:start="146:22" pos:end="146:23">-&gt;</operator><name pos:start="146:24" pos:end="146:36">minor_version</name></name></expr></argument>, <argument pos:start="146:39" pos:end="146:49"><expr pos:start="146:39" pos:end="146:49"><name pos:start="146:39" pos:end="146:49"><name pos:start="146:39" pos:end="146:39">s</name><operator pos:start="146:40" pos:end="146:41">-&gt;</operator><name pos:start="146:42" pos:end="146:49">lossless</name></name></expr></argument>, <argument pos:start="146:52" pos:end="146:67"><expr pos:start="146:52" pos:end="146:67"><name pos:start="146:52" pos:end="146:67"><name pos:start="146:52" pos:end="146:52">s</name><operator pos:start="146:53" pos:end="146:54">-&gt;</operator><name pos:start="146:55" pos:end="146:67">decorrelation</name></name></expr></argument>, <argument pos:start="146:70" pos:end="146:80"><expr pos:start="146:70" pos:end="146:80"><name pos:start="146:70" pos:end="146:80"><name pos:start="146:70" pos:end="146:70">s</name><operator pos:start="146:71" pos:end="146:72">-&gt;</operator><name pos:start="146:73" pos:end="146:80">num_taps</name></name></expr></argument>, <argument pos:start="146:83" pos:end="146:96"><expr pos:start="146:83" pos:end="146:96"><name pos:start="146:83" pos:end="146:96"><name pos:start="146:83" pos:end="146:83">s</name><operator pos:start="146:84" pos:end="146:85">-&gt;</operator><name pos:start="146:86" pos:end="146:96">block_align</name></name></expr></argument>, <argument pos:start="146:99" pos:end="146:111"><expr pos:start="146:99" pos:end="146:111"><name pos:start="146:99" pos:end="146:111"><name pos:start="146:99" pos:end="146:99">s</name><operator pos:start="146:100" pos:end="146:101">-&gt;</operator><name pos:start="146:102" pos:end="146:111">frame_size</name></name></expr></argument>, <argument pos:start="146:114" pos:end="146:128"><expr pos:start="146:114" pos:end="146:128"><name pos:start="146:114" pos:end="146:128"><name pos:start="146:114" pos:end="146:114">s</name><operator pos:start="146:115" pos:end="146:116">-&gt;</operator><name pos:start="146:117" pos:end="146:128">downsampling</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="150:5" pos:end="150:20">// generate taps</comment>

    <expr_stmt pos:start="152:5" pos:end="152:65"><expr pos:start="152:5" pos:end="152:64"><name pos:start="152:5" pos:end="152:16"><name pos:start="152:5" pos:end="152:5">s</name><operator pos:start="152:6" pos:end="152:7">-&gt;</operator><name pos:start="152:8" pos:end="152:16">tap_quant</name></name> <operator pos:start="152:18" pos:end="152:18">=</operator> <call pos:start="152:20" pos:end="152:64"><name pos:start="152:20" pos:end="152:28">av_calloc</name><argument_list pos:start="152:29" pos:end="152:64">(<argument pos:start="152:30" pos:end="152:40"><expr pos:start="152:30" pos:end="152:40"><name pos:start="152:30" pos:end="152:40"><name pos:start="152:30" pos:end="152:30">s</name><operator pos:start="152:31" pos:end="152:32">-&gt;</operator><name pos:start="152:33" pos:end="152:40">num_taps</name></name></expr></argument>, <argument pos:start="152:43" pos:end="152:63"><expr pos:start="152:43" pos:end="152:63"><sizeof pos:start="152:43" pos:end="152:63">sizeof<argument_list pos:start="152:49" pos:end="152:63">(<argument pos:start="152:50" pos:end="152:62"><expr pos:start="152:50" pos:end="152:62"><operator pos:start="152:50" pos:end="152:50">*</operator><name pos:start="152:51" pos:end="152:62"><name pos:start="152:51" pos:end="152:51">s</name><operator pos:start="152:52" pos:end="152:53">-&gt;</operator><name pos:start="152:54" pos:end="152:62">tap_quant</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="154:5" pos:end="156:31"><if pos:start="154:5" pos:end="156:31">if <condition pos:start="154:8" pos:end="154:22">(<expr pos:start="154:9" pos:end="154:21"><operator pos:start="154:9" pos:end="154:9">!</operator><name pos:start="154:10" pos:end="154:21"><name pos:start="154:10" pos:end="154:10">s</name><operator pos:start="154:11" pos:end="154:12">-&gt;</operator><name pos:start="154:13" pos:end="154:21">tap_quant</name></name></expr>)</condition><block type="pseudo" pos:start="156:9" pos:end="156:31"><block_content pos:start="156:9" pos:end="156:31">

        <return pos:start="156:9" pos:end="156:31">return <expr pos:start="156:16" pos:end="156:30"><call pos:start="156:16" pos:end="156:30"><name pos:start="156:16" pos:end="156:22">AVERROR</name><argument_list pos:start="156:23" pos:end="156:30">(<argument pos:start="156:24" pos:end="156:29"><expr pos:start="156:24" pos:end="156:29"><name pos:start="156:24" pos:end="156:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="160:5" pos:end="162:39">for <control pos:start="160:9" pos:end="160:37">(<init pos:start="160:10" pos:end="160:15"><expr pos:start="160:10" pos:end="160:14"><name pos:start="160:10" pos:end="160:10">i</name> <operator pos:start="160:12" pos:end="160:12">=</operator> <literal type="number" pos:start="160:14" pos:end="160:14">0</literal></expr>;</init> <condition pos:start="160:17" pos:end="160:32"><expr pos:start="160:17" pos:end="160:31"><name pos:start="160:17" pos:end="160:17">i</name> <operator pos:start="160:19" pos:end="160:19">&lt;</operator> <name pos:start="160:21" pos:end="160:31"><name pos:start="160:21" pos:end="160:21">s</name><operator pos:start="160:22" pos:end="160:23">-&gt;</operator><name pos:start="160:24" pos:end="160:31">num_taps</name></name></expr>;</condition> <incr pos:start="160:34" pos:end="160:36"><expr pos:start="160:34" pos:end="160:36"><name pos:start="160:34" pos:end="160:34">i</name><operator pos:start="160:35" pos:end="160:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="162:9" pos:end="162:39"><block_content pos:start="162:9" pos:end="162:39">

        <expr_stmt pos:start="162:9" pos:end="162:39"><expr pos:start="162:9" pos:end="162:38"><name pos:start="162:9" pos:end="162:23"><name pos:start="162:9" pos:end="162:9">s</name><operator pos:start="162:10" pos:end="162:11">-&gt;</operator><name pos:start="162:12" pos:end="162:20">tap_quant</name><index pos:start="162:21" pos:end="162:23">[<expr pos:start="162:22" pos:end="162:22"><name pos:start="162:22" pos:end="162:22">i</name></expr>]</index></name> <operator pos:start="162:25" pos:end="162:25">=</operator> <call pos:start="162:27" pos:end="162:38"><name pos:start="162:27" pos:end="162:33">ff_sqrt</name><argument_list pos:start="162:34" pos:end="162:38">(<argument pos:start="162:35" pos:end="162:37"><expr pos:start="162:35" pos:end="162:37"><name pos:start="162:35" pos:end="162:35">i</name><operator pos:start="162:36" pos:end="162:36">+</operator><literal type="number" pos:start="162:37" pos:end="162:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="166:5" pos:end="166:69"><expr pos:start="166:5" pos:end="166:68"><name pos:start="166:5" pos:end="166:18"><name pos:start="166:5" pos:end="166:5">s</name><operator pos:start="166:6" pos:end="166:7">-&gt;</operator><name pos:start="166:8" pos:end="166:18">predictor_k</name></name> <operator pos:start="166:20" pos:end="166:20">=</operator> <call pos:start="166:22" pos:end="166:68"><name pos:start="166:22" pos:end="166:30">av_calloc</name><argument_list pos:start="166:31" pos:end="166:68">(<argument pos:start="166:32" pos:end="166:42"><expr pos:start="166:32" pos:end="166:42"><name pos:start="166:32" pos:end="166:42"><name pos:start="166:32" pos:end="166:32">s</name><operator pos:start="166:33" pos:end="166:34">-&gt;</operator><name pos:start="166:35" pos:end="166:42">num_taps</name></name></expr></argument>, <argument pos:start="166:45" pos:end="166:67"><expr pos:start="166:45" pos:end="166:67"><sizeof pos:start="166:45" pos:end="166:67">sizeof<argument_list pos:start="166:51" pos:end="166:67">(<argument pos:start="166:52" pos:end="166:66"><expr pos:start="166:52" pos:end="166:66"><operator pos:start="166:52" pos:end="166:52">*</operator><name pos:start="166:53" pos:end="166:66"><name pos:start="166:53" pos:end="166:53">s</name><operator pos:start="166:54" pos:end="166:55">-&gt;</operator><name pos:start="166:56" pos:end="166:66">predictor_k</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="170:5" pos:end="180:5">for <control pos:start="170:9" pos:end="170:37">(<init pos:start="170:10" pos:end="170:15"><expr pos:start="170:10" pos:end="170:14"><name pos:start="170:10" pos:end="170:10">i</name> <operator pos:start="170:12" pos:end="170:12">=</operator> <literal type="number" pos:start="170:14" pos:end="170:14">0</literal></expr>;</init> <condition pos:start="170:17" pos:end="170:32"><expr pos:start="170:17" pos:end="170:31"><name pos:start="170:17" pos:end="170:17">i</name> <operator pos:start="170:19" pos:end="170:19">&lt;</operator> <name pos:start="170:21" pos:end="170:31"><name pos:start="170:21" pos:end="170:21">s</name><operator pos:start="170:22" pos:end="170:23">-&gt;</operator><name pos:start="170:24" pos:end="170:31">channels</name></name></expr>;</condition> <incr pos:start="170:34" pos:end="170:36"><expr pos:start="170:34" pos:end="170:36"><name pos:start="170:34" pos:end="170:34">i</name><operator pos:start="170:35" pos:end="170:36">++</operator></expr></incr>)</control>

    <block pos:start="172:5" pos:end="180:5">{<block_content pos:start="174:9" pos:end="178:35">

        <expr_stmt pos:start="174:9" pos:end="174:85"><expr pos:start="174:9" pos:end="174:84"><name pos:start="174:9" pos:end="174:29"><name pos:start="174:9" pos:end="174:9">s</name><operator pos:start="174:10" pos:end="174:11">-&gt;</operator><name pos:start="174:12" pos:end="174:26">predictor_state</name><index pos:start="174:27" pos:end="174:29">[<expr pos:start="174:28" pos:end="174:28"><name pos:start="174:28" pos:end="174:28">i</name></expr>]</index></name> <operator pos:start="174:31" pos:end="174:31">=</operator> <call pos:start="174:33" pos:end="174:84"><name pos:start="174:33" pos:end="174:41">av_calloc</name><argument_list pos:start="174:42" pos:end="174:84">(<argument pos:start="174:43" pos:end="174:53"><expr pos:start="174:43" pos:end="174:53"><name pos:start="174:43" pos:end="174:53"><name pos:start="174:43" pos:end="174:43">s</name><operator pos:start="174:44" pos:end="174:45">-&gt;</operator><name pos:start="174:46" pos:end="174:53">num_taps</name></name></expr></argument>, <argument pos:start="174:56" pos:end="174:83"><expr pos:start="174:56" pos:end="174:83"><sizeof pos:start="174:56" pos:end="174:83">sizeof<argument_list pos:start="174:62" pos:end="174:83">(<argument pos:start="174:63" pos:end="174:82"><expr pos:start="174:63" pos:end="174:82"><operator pos:start="174:63" pos:end="174:63">*</operator><operator pos:start="174:64" pos:end="174:64">*</operator><name pos:start="174:65" pos:end="174:82"><name pos:start="174:65" pos:end="174:65">s</name><operator pos:start="174:66" pos:end="174:67">-&gt;</operator><name pos:start="174:68" pos:end="174:82">predictor_state</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="176:9" pos:end="178:35"><if pos:start="176:9" pos:end="178:35">if <condition pos:start="176:12" pos:end="176:35">(<expr pos:start="176:13" pos:end="176:34"><operator pos:start="176:13" pos:end="176:13">!</operator><name pos:start="176:14" pos:end="176:34"><name pos:start="176:14" pos:end="176:14">s</name><operator pos:start="176:15" pos:end="176:16">-&gt;</operator><name pos:start="176:17" pos:end="176:31">predictor_state</name><index pos:start="176:32" pos:end="176:34">[<expr pos:start="176:33" pos:end="176:33"><name pos:start="176:33" pos:end="176:33">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="178:13" pos:end="178:35"><block_content pos:start="178:13" pos:end="178:35">

            <return pos:start="178:13" pos:end="178:35">return <expr pos:start="178:20" pos:end="178:34"><call pos:start="178:20" pos:end="178:34"><name pos:start="178:20" pos:end="178:26">AVERROR</name><argument_list pos:start="178:27" pos:end="178:34">(<argument pos:start="178:28" pos:end="178:33"><expr pos:start="178:28" pos:end="178:33"><name pos:start="178:28" pos:end="178:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="184:5" pos:end="194:5">for <control pos:start="184:9" pos:end="184:37">(<init pos:start="184:10" pos:end="184:15"><expr pos:start="184:10" pos:end="184:14"><name pos:start="184:10" pos:end="184:10">i</name> <operator pos:start="184:12" pos:end="184:12">=</operator> <literal type="number" pos:start="184:14" pos:end="184:14">0</literal></expr>;</init> <condition pos:start="184:17" pos:end="184:32"><expr pos:start="184:17" pos:end="184:31"><name pos:start="184:17" pos:end="184:17">i</name> <operator pos:start="184:19" pos:end="184:19">&lt;</operator> <name pos:start="184:21" pos:end="184:31"><name pos:start="184:21" pos:end="184:21">s</name><operator pos:start="184:22" pos:end="184:23">-&gt;</operator><name pos:start="184:24" pos:end="184:31">channels</name></name></expr>;</condition> <incr pos:start="184:34" pos:end="184:36"><expr pos:start="184:34" pos:end="184:36"><name pos:start="184:34" pos:end="184:34">i</name><operator pos:start="184:35" pos:end="184:36">++</operator></expr></incr>)</control>

    <block pos:start="186:5" pos:end="194:5">{<block_content pos:start="188:9" pos:end="192:35">

        <expr_stmt pos:start="188:9" pos:end="188:84"><expr pos:start="188:9" pos:end="188:83"><name pos:start="188:9" pos:end="188:27"><name pos:start="188:9" pos:end="188:9">s</name><operator pos:start="188:10" pos:end="188:11">-&gt;</operator><name pos:start="188:12" pos:end="188:24">coded_samples</name><index pos:start="188:25" pos:end="188:27">[<expr pos:start="188:26" pos:end="188:26"><name pos:start="188:26" pos:end="188:26">i</name></expr>]</index></name> <operator pos:start="188:29" pos:end="188:29">=</operator> <call pos:start="188:31" pos:end="188:83"><name pos:start="188:31" pos:end="188:39">av_calloc</name><argument_list pos:start="188:40" pos:end="188:83">(<argument pos:start="188:41" pos:end="188:54"><expr pos:start="188:41" pos:end="188:54"><name pos:start="188:41" pos:end="188:54"><name pos:start="188:41" pos:end="188:41">s</name><operator pos:start="188:42" pos:end="188:43">-&gt;</operator><name pos:start="188:44" pos:end="188:54">block_align</name></name></expr></argument>, <argument pos:start="188:57" pos:end="188:82"><expr pos:start="188:57" pos:end="188:82"><sizeof pos:start="188:57" pos:end="188:82">sizeof<argument_list pos:start="188:63" pos:end="188:82">(<argument pos:start="188:64" pos:end="188:81"><expr pos:start="188:64" pos:end="188:81"><operator pos:start="188:64" pos:end="188:64">*</operator><operator pos:start="188:65" pos:end="188:65">*</operator><name pos:start="188:66" pos:end="188:81"><name pos:start="188:66" pos:end="188:66">s</name><operator pos:start="188:67" pos:end="188:68">-&gt;</operator><name pos:start="188:69" pos:end="188:81">coded_samples</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="190:9" pos:end="192:35"><if pos:start="190:9" pos:end="192:35">if <condition pos:start="190:12" pos:end="190:33">(<expr pos:start="190:13" pos:end="190:32"><operator pos:start="190:13" pos:end="190:13">!</operator><name pos:start="190:14" pos:end="190:32"><name pos:start="190:14" pos:end="190:14">s</name><operator pos:start="190:15" pos:end="190:16">-&gt;</operator><name pos:start="190:17" pos:end="190:29">coded_samples</name><index pos:start="190:30" pos:end="190:32">[<expr pos:start="190:31" pos:end="190:31"><name pos:start="190:31" pos:end="190:31">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="192:13" pos:end="192:35"><block_content pos:start="192:13" pos:end="192:35">

            <return pos:start="192:13" pos:end="192:35">return <expr pos:start="192:20" pos:end="192:34"><call pos:start="192:20" pos:end="192:34"><name pos:start="192:20" pos:end="192:26">AVERROR</name><argument_list pos:start="192:27" pos:end="192:34">(<argument pos:start="192:28" pos:end="192:33"><expr pos:start="192:28" pos:end="192:33"><name pos:start="192:28" pos:end="192:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="196:5" pos:end="196:71"><expr pos:start="196:5" pos:end="196:70"><name pos:start="196:5" pos:end="196:18"><name pos:start="196:5" pos:end="196:5">s</name><operator pos:start="196:6" pos:end="196:7">-&gt;</operator><name pos:start="196:8" pos:end="196:18">int_samples</name></name> <operator pos:start="196:20" pos:end="196:20">=</operator> <call pos:start="196:22" pos:end="196:70"><name pos:start="196:22" pos:end="196:30">av_calloc</name><argument_list pos:start="196:31" pos:end="196:70">(<argument pos:start="196:32" pos:end="196:44"><expr pos:start="196:32" pos:end="196:44"><name pos:start="196:32" pos:end="196:44"><name pos:start="196:32" pos:end="196:32">s</name><operator pos:start="196:33" pos:end="196:34">-&gt;</operator><name pos:start="196:35" pos:end="196:44">frame_size</name></name></expr></argument>, <argument pos:start="196:47" pos:end="196:69"><expr pos:start="196:47" pos:end="196:69"><sizeof pos:start="196:47" pos:end="196:69">sizeof<argument_list pos:start="196:53" pos:end="196:69">(<argument pos:start="196:54" pos:end="196:68"><expr pos:start="196:54" pos:end="196:68"><operator pos:start="196:54" pos:end="196:54">*</operator><name pos:start="196:55" pos:end="196:68"><name pos:start="196:55" pos:end="196:55">s</name><operator pos:start="196:56" pos:end="196:57">-&gt;</operator><name pos:start="196:58" pos:end="196:68">int_samples</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="198:5" pos:end="200:31"><if pos:start="198:5" pos:end="200:31">if <condition pos:start="198:8" pos:end="198:24">(<expr pos:start="198:9" pos:end="198:23"><operator pos:start="198:9" pos:end="198:9">!</operator><name pos:start="198:10" pos:end="198:23"><name pos:start="198:10" pos:end="198:10">s</name><operator pos:start="198:11" pos:end="198:12">-&gt;</operator><name pos:start="198:13" pos:end="198:23">int_samples</name></name></expr>)</condition><block type="pseudo" pos:start="200:9" pos:end="200:31"><block_content pos:start="200:9" pos:end="200:31">

        <return pos:start="200:9" pos:end="200:31">return <expr pos:start="200:16" pos:end="200:30"><call pos:start="200:16" pos:end="200:30"><name pos:start="200:16" pos:end="200:22">AVERROR</name><argument_list pos:start="200:23" pos:end="200:30">(<argument pos:start="200:24" pos:end="200:29"><expr pos:start="200:24" pos:end="200:29"><name pos:start="200:24" pos:end="200:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="204:5" pos:end="204:42"><expr pos:start="204:5" pos:end="204:41"><name pos:start="204:5" pos:end="204:21"><name pos:start="204:5" pos:end="204:9">avctx</name><operator pos:start="204:10" pos:end="204:11">-&gt;</operator><name pos:start="204:12" pos:end="204:21">sample_fmt</name></name> <operator pos:start="204:23" pos:end="204:23">=</operator> <name pos:start="204:25" pos:end="204:41">AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt>

    <return pos:start="206:5" pos:end="206:13">return <expr pos:start="206:12" pos:end="206:12"><literal type="number" pos:start="206:12" pos:end="206:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
