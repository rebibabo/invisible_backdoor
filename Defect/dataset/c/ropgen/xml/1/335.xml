<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/335.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">setup_frame</name><parameter_list pos:start="1:24" pos:end="3:63">(<parameter pos:start="1:25" pos:end="1:31"><decl pos:start="1:25" pos:end="1:31"><type pos:start="1:25" pos:end="1:31"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:31">sig</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:60"><decl pos:start="1:34" pos:end="1:60"><type pos:start="1:34" pos:end="1:60"><name pos:start="1:34" pos:end="1:56"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:56">target_sigaction</name></name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">ka</name></decl></parameter>,

			<parameter pos:start="3:25" pos:end="3:44"><decl pos:start="3:25" pos:end="3:44"><type pos:start="3:25" pos:end="3:44"><name pos:start="3:25" pos:end="3:39">target_sigset_t</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">set</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:62"><decl pos:start="3:47" pos:end="3:62"><type pos:start="3:47" pos:end="3:62"><name pos:start="3:47" pos:end="3:57">CPUX86State</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:62">env</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="133:1">{<block_content pos:start="7:9" pos:end="131:50">

	<decl_stmt pos:start="7:9" pos:end="7:29"><decl pos:start="7:9" pos:end="7:28"><type pos:start="7:9" pos:end="7:17"><name pos:start="7:9" pos:end="7:17">abi_ulong</name></type> <name pos:start="7:19" pos:end="7:28">frame_addr</name></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:31"><decl pos:start="9:9" pos:end="9:30"><type pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:14">struct</name> <name pos:start="9:16" pos:end="9:23">sigframe</name></name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:30">frame</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:23"><decl pos:start="11:9" pos:end="11:13"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">i</name></decl>, <decl pos:start="11:16" pos:end="11:22"><type ref="prev" pos:start="11:9" pos:end="11:11"/><name pos:start="11:16" pos:end="11:18">err</name> <init pos:start="11:20" pos:end="11:22">= <expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">0</literal></expr></init></decl>;</decl_stmt>



	<expr_stmt pos:start="15:9" pos:end="15:59"><expr pos:start="15:9" pos:end="15:58"><name pos:start="15:9" pos:end="15:18">frame_addr</name> <operator pos:start="15:20" pos:end="15:20">=</operator> <call pos:start="15:22" pos:end="15:58"><name pos:start="15:22" pos:end="15:33">get_sigframe</name><argument_list pos:start="15:34" pos:end="15:58">(<argument pos:start="15:35" pos:end="15:36"><expr pos:start="15:35" pos:end="15:36"><name pos:start="15:35" pos:end="15:36">ka</name></expr></argument>, <argument pos:start="15:39" pos:end="15:41"><expr pos:start="15:39" pos:end="15:41"><name pos:start="15:39" pos:end="15:41">env</name></expr></argument>, <argument pos:start="15:44" pos:end="15:57"><expr pos:start="15:44" pos:end="15:57"><sizeof pos:start="15:44" pos:end="15:57">sizeof<argument_list pos:start="15:50" pos:end="15:57">(<argument pos:start="15:51" pos:end="15:56"><expr pos:start="15:51" pos:end="15:56"><operator pos:start="15:51" pos:end="15:51">*</operator><name pos:start="15:52" pos:end="15:56">frame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<if_stmt pos:start="19:9" pos:end="21:34"><if pos:start="19:9" pos:end="21:34">if <condition pos:start="19:12" pos:end="19:66">(<expr pos:start="19:13" pos:end="19:65"><operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:65"><name pos:start="19:14" pos:end="19:29">lock_user_struct</name><argument_list pos:start="19:30" pos:end="19:65">(<argument pos:start="19:31" pos:end="19:42"><expr pos:start="19:31" pos:end="19:42"><name pos:start="19:31" pos:end="19:42">VERIFY_WRITE</name></expr></argument>, <argument pos:start="19:45" pos:end="19:49"><expr pos:start="19:45" pos:end="19:49"><name pos:start="19:45" pos:end="19:49">frame</name></expr></argument>, <argument pos:start="19:52" pos:end="19:61"><expr pos:start="19:52" pos:end="19:61"><name pos:start="19:52" pos:end="19:61">frame_addr</name></expr></argument>, <argument pos:start="19:64" pos:end="19:64"><expr pos:start="19:64" pos:end="19:64"><literal type="number" pos:start="19:64" pos:end="19:64">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:34"><block_content pos:start="21:17" pos:end="21:34">

		<goto pos:start="21:17" pos:end="21:34">goto <name pos:start="21:22" pos:end="21:33">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="27:28"><expr pos:start="25:5" pos:end="27:27"><call pos:start="25:5" pos:end="27:27"><name pos:start="25:5" pos:end="25:14">__put_user</name><argument_list pos:start="25:15" pos:end="27:27">(<argument pos:start="25:16" pos:end="25:43"><expr pos:start="25:16" pos:end="25:43"><call pos:start="25:16" pos:end="25:43"><name pos:start="25:16" pos:end="25:38">current_exec_domain_sig</name><argument_list pos:start="25:39" pos:end="25:43">(<argument pos:start="25:40" pos:end="25:42"><expr pos:start="25:40" pos:end="25:42"><name pos:start="25:40" pos:end="25:42">sig</name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="27:16" pos:end="27:26"><expr pos:start="27:16" pos:end="27:26"><operator pos:start="27:16" pos:end="27:16">&amp;</operator><name pos:start="27:17" pos:end="27:26"><name pos:start="27:17" pos:end="27:21">frame</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:26">sig</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="29:9" pos:end="31:34"><if pos:start="29:9" pos:end="31:34">if <condition pos:start="29:12" pos:end="29:16">(<expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">err</name></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:34"><block_content pos:start="31:17" pos:end="31:34">

		<goto pos:start="31:17" pos:end="31:34">goto <name pos:start="31:22" pos:end="31:33">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



	<expr_stmt pos:start="35:9" pos:end="37:74"><expr pos:start="35:9" pos:end="37:73"><call pos:start="35:9" pos:end="37:73"><name pos:start="35:9" pos:end="35:24">setup_sigcontext</name><argument_list pos:start="35:25" pos:end="37:73">(<argument pos:start="35:26" pos:end="35:35"><expr pos:start="35:26" pos:end="35:35"><operator pos:start="35:26" pos:end="35:26">&amp;</operator><name pos:start="35:27" pos:end="35:35"><name pos:start="35:27" pos:end="35:31">frame</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:35">sc</name></name></expr></argument>, <argument pos:start="35:38" pos:end="35:52"><expr pos:start="35:38" pos:end="35:52"><operator pos:start="35:38" pos:end="35:38">&amp;</operator><name pos:start="35:39" pos:end="35:52"><name pos:start="35:39" pos:end="35:43">frame</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:52">fpstate</name></name></expr></argument>, <argument pos:start="35:55" pos:end="35:57"><expr pos:start="35:55" pos:end="35:57"><name pos:start="35:55" pos:end="35:57">env</name></expr></argument>, <argument pos:start="35:60" pos:end="35:70"><expr pos:start="35:60" pos:end="35:70"><name pos:start="35:60" pos:end="35:70"><name pos:start="35:60" pos:end="35:62">set</name><operator pos:start="35:63" pos:end="35:64">-&gt;</operator><name pos:start="35:65" pos:end="35:67">sig</name><index pos:start="35:68" pos:end="35:70">[<expr pos:start="35:69" pos:end="35:69"><literal type="number" pos:start="35:69" pos:end="35:69">0</literal></expr>]</index></name></expr></argument>,

                         <argument pos:start="37:26" pos:end="37:72"><expr pos:start="37:26" pos:end="37:72"><name pos:start="37:26" pos:end="37:35">frame_addr</name> <operator pos:start="37:37" pos:end="37:37">+</operator> <call pos:start="37:39" pos:end="37:72"><name pos:start="37:39" pos:end="37:46">offsetof</name><argument_list pos:start="37:47" pos:end="37:72">(<argument pos:start="37:48" pos:end="37:62"><expr pos:start="37:48" pos:end="37:62">struct <name pos:start="37:55" pos:end="37:62">sigframe</name></expr></argument>, <argument pos:start="37:65" pos:end="37:71"><expr pos:start="37:65" pos:end="37:71"><name pos:start="37:65" pos:end="37:71">fpstate</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="39:9" pos:end="41:34"><if pos:start="39:9" pos:end="41:34">if <condition pos:start="39:12" pos:end="39:16">(<expr pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">err</name></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:34"><block_content pos:start="41:17" pos:end="41:34">

		<goto pos:start="41:17" pos:end="41:34">goto <name pos:start="41:22" pos:end="41:33">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



        <for pos:start="45:9" pos:end="51:9">for<control pos:start="45:12" pos:end="45:46">(<init pos:start="45:13" pos:end="45:18"><expr pos:start="45:13" pos:end="45:17"><name pos:start="45:13" pos:end="45:13">i</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</init> <condition pos:start="45:20" pos:end="45:41"><expr pos:start="45:20" pos:end="45:40"><name pos:start="45:20" pos:end="45:20">i</name> <operator pos:start="45:22" pos:end="45:22">&lt;</operator> <name pos:start="45:24" pos:end="45:40">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="45:43" pos:end="45:45"><expr pos:start="45:43" pos:end="45:45"><name pos:start="45:43" pos:end="45:43">i</name><operator pos:start="45:44" pos:end="45:45">++</operator></expr></incr>)</control> <block pos:start="45:48" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:34">

            <if_stmt pos:start="47:13" pos:end="49:34"><if pos:start="47:13" pos:end="49:34">if <condition pos:start="47:16" pos:end="47:66">(<expr pos:start="47:17" pos:end="47:65"><call pos:start="47:17" pos:end="47:65"><name pos:start="47:17" pos:end="47:26">__put_user</name><argument_list pos:start="47:27" pos:end="47:65">(<argument pos:start="47:28" pos:end="47:38"><expr pos:start="47:28" pos:end="47:38"><name pos:start="47:28" pos:end="47:38"><name pos:start="47:28" pos:end="47:30">set</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:35">sig</name><index pos:start="47:36" pos:end="47:38">[<expr pos:start="47:37" pos:end="47:37"><name pos:start="47:37" pos:end="47:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="47:41" pos:end="47:64"><expr pos:start="47:41" pos:end="47:64"><operator pos:start="47:41" pos:end="47:41">&amp;</operator><name pos:start="47:42" pos:end="47:64"><name pos:start="47:42" pos:end="47:46">frame</name><operator pos:start="47:47" pos:end="47:48">-&gt;</operator><name pos:start="47:49" pos:end="47:57">extramask</name><index pos:start="47:58" pos:end="47:64">[<expr pos:start="47:59" pos:end="47:63"><name pos:start="47:59" pos:end="47:59">i</name> <operator pos:start="47:61" pos:end="47:61">-</operator> <literal type="number" pos:start="47:63" pos:end="47:63">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:34"><block_content pos:start="49:17" pos:end="49:34">

                <goto pos:start="49:17" pos:end="49:34">goto <name pos:start="49:22" pos:end="49:33">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></for>



	<comment type="block" pos:start="55:9" pos:end="57:36">/* Set up to return from userspace.  If provided, use a stub

	   already in userspace.  */</comment>

	<if_stmt pos:start="59:9" pos:end="85:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:46">(<expr pos:start="59:13" pos:end="59:45"><name pos:start="59:13" pos:end="59:24"><name pos:start="59:13" pos:end="59:14">ka</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:24">sa_flags</name></name> <operator pos:start="59:26" pos:end="59:26">&amp;</operator> <name pos:start="59:28" pos:end="59:45">TARGET_SA_RESTORER</name></expr>)</condition> <block pos:start="59:48" pos:end="63:9">{<block_content pos:start="61:9" pos:end="61:54">

        <expr_stmt pos:start="61:9" pos:end="61:54"><expr pos:start="61:9" pos:end="61:53"><call pos:start="61:9" pos:end="61:53"><name pos:start="61:9" pos:end="61:18">__put_user</name><argument_list pos:start="61:19" pos:end="61:53">(<argument pos:start="61:20" pos:end="61:34"><expr pos:start="61:20" pos:end="61:34"><name pos:start="61:20" pos:end="61:34"><name pos:start="61:20" pos:end="61:21">ka</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:34">sa_restorer</name></name></expr></argument>, <argument pos:start="61:37" pos:end="61:52"><expr pos:start="61:37" pos:end="61:52"><operator pos:start="61:37" pos:end="61:37">&amp;</operator><name pos:start="61:38" pos:end="61:52"><name pos:start="61:38" pos:end="61:42">frame</name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:52">pretcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="63:11" pos:end="85:9">else <block pos:start="63:16" pos:end="85:9">{<block_content pos:start="65:17" pos:end="83:58">

                <decl_stmt pos:start="65:17" pos:end="65:31"><decl pos:start="65:17" pos:end="65:30"><type pos:start="65:17" pos:end="65:24"><name pos:start="65:17" pos:end="65:24">uint16_t</name></type> <name pos:start="65:26" pos:end="65:30">val16</name></decl>;</decl_stmt>

                <decl_stmt pos:start="67:17" pos:end="67:39"><decl pos:start="67:17" pos:end="67:38"><type pos:start="67:17" pos:end="67:25"><name pos:start="67:17" pos:end="67:25">abi_ulong</name></type> <name pos:start="67:27" pos:end="67:38">retcode_addr</name></decl>;</decl_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:79"><expr pos:start="69:17" pos:end="69:78"><name pos:start="69:17" pos:end="69:28">retcode_addr</name> <operator pos:start="69:30" pos:end="69:30">=</operator> <name pos:start="69:32" pos:end="69:41">frame_addr</name> <operator pos:start="69:43" pos:end="69:43">+</operator> <call pos:start="69:45" pos:end="69:78"><name pos:start="69:45" pos:end="69:52">offsetof</name><argument_list pos:start="69:53" pos:end="69:78">(<argument pos:start="69:54" pos:end="69:68"><expr pos:start="69:54" pos:end="69:68">struct <name pos:start="69:61" pos:end="69:68">sigframe</name></expr></argument>, <argument pos:start="69:71" pos:end="69:77"><expr pos:start="69:71" pos:end="69:77"><name pos:start="69:71" pos:end="69:77">retcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:51"><expr pos:start="71:9" pos:end="71:50"><call pos:start="71:9" pos:end="71:50"><name pos:start="71:9" pos:end="71:18">__put_user</name><argument_list pos:start="71:19" pos:end="71:50">(<argument pos:start="71:20" pos:end="71:31"><expr pos:start="71:20" pos:end="71:31"><name pos:start="71:20" pos:end="71:31">retcode_addr</name></expr></argument>, <argument pos:start="71:34" pos:end="71:49"><expr pos:start="71:34" pos:end="71:49"><operator pos:start="71:34" pos:end="71:34">&amp;</operator><name pos:start="71:35" pos:end="71:49"><name pos:start="71:35" pos:end="71:39">frame</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:49">pretcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="block" pos:start="73:17" pos:end="73:65">/* This is popl %eax ; movl $,%eax ; int $0x80 */</comment>

                <expr_stmt pos:start="75:17" pos:end="75:31"><expr pos:start="75:17" pos:end="75:30"><name pos:start="75:17" pos:end="75:21">val16</name> <operator pos:start="75:23" pos:end="75:23">=</operator> <literal type="number" pos:start="75:25" pos:end="75:30">0xb858</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:58"><expr pos:start="77:9" pos:end="77:57"><call pos:start="77:9" pos:end="77:57"><name pos:start="77:9" pos:end="77:18">__put_user</name><argument_list pos:start="77:19" pos:end="77:57">(<argument pos:start="77:20" pos:end="77:24"><expr pos:start="77:20" pos:end="77:24"><name pos:start="77:20" pos:end="77:24">val16</name></expr></argument>, <argument pos:start="77:27" pos:end="77:56"><expr pos:start="77:27" pos:end="77:56"><operator pos:start="77:27" pos:end="77:27">(</operator><name pos:start="77:28" pos:end="77:35">uint16_t</name> <operator pos:start="77:37" pos:end="77:37">*</operator><operator pos:start="77:38" pos:end="77:38">)</operator><operator pos:start="77:39" pos:end="77:39">(</operator><name pos:start="77:40" pos:end="77:53"><name pos:start="77:40" pos:end="77:44">frame</name><operator pos:start="77:45" pos:end="77:46">-&gt;</operator><name pos:start="77:47" pos:end="77:53">retcode</name></name><operator pos:start="77:54" pos:end="77:54">+</operator><literal type="number" pos:start="77:55" pos:end="77:55">0</literal><operator pos:start="77:56" pos:end="77:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:67"><expr pos:start="79:9" pos:end="79:66"><call pos:start="79:9" pos:end="79:66"><name pos:start="79:9" pos:end="79:18">__put_user</name><argument_list pos:start="79:19" pos:end="79:66">(<argument pos:start="79:20" pos:end="79:38"><expr pos:start="79:20" pos:end="79:38"><name pos:start="79:20" pos:end="79:38">TARGET_NR_sigreturn</name></expr></argument>, <argument pos:start="79:41" pos:end="79:65"><expr pos:start="79:41" pos:end="79:65"><operator pos:start="79:41" pos:end="79:41">(</operator><name pos:start="79:42" pos:end="79:44">int</name> <operator pos:start="79:46" pos:end="79:46">*</operator><operator pos:start="79:47" pos:end="79:47">)</operator><operator pos:start="79:48" pos:end="79:48">(</operator><name pos:start="79:49" pos:end="79:62"><name pos:start="79:49" pos:end="79:53">frame</name><operator pos:start="79:54" pos:end="79:55">-&gt;</operator><name pos:start="79:56" pos:end="79:62">retcode</name></name><operator pos:start="79:63" pos:end="79:63">+</operator><literal type="number" pos:start="79:64" pos:end="79:64">2</literal><operator pos:start="79:65" pos:end="79:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:31"><expr pos:start="81:17" pos:end="81:30"><name pos:start="81:17" pos:end="81:21">val16</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <literal type="number" pos:start="81:25" pos:end="81:30">0x80cd</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:58"><expr pos:start="83:9" pos:end="83:57"><call pos:start="83:9" pos:end="83:57"><name pos:start="83:9" pos:end="83:18">__put_user</name><argument_list pos:start="83:19" pos:end="83:57">(<argument pos:start="83:20" pos:end="83:24"><expr pos:start="83:20" pos:end="83:24"><name pos:start="83:20" pos:end="83:24">val16</name></expr></argument>, <argument pos:start="83:27" pos:end="83:56"><expr pos:start="83:27" pos:end="83:56"><operator pos:start="83:27" pos:end="83:27">(</operator><name pos:start="83:28" pos:end="83:35">uint16_t</name> <operator pos:start="83:37" pos:end="83:37">*</operator><operator pos:start="83:38" pos:end="83:38">)</operator><operator pos:start="83:39" pos:end="83:39">(</operator><name pos:start="83:40" pos:end="83:53"><name pos:start="83:40" pos:end="83:44">frame</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:53">retcode</name></name><operator pos:start="83:54" pos:end="83:54">+</operator><literal type="number" pos:start="83:55" pos:end="83:55">6</literal><operator pos:start="83:56" pos:end="83:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>



	<if_stmt pos:start="89:9" pos:end="91:34"><if pos:start="89:9" pos:end="91:34">if <condition pos:start="89:12" pos:end="89:16">(<expr pos:start="89:13" pos:end="89:15"><name pos:start="89:13" pos:end="89:15">err</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:34"><block_content pos:start="91:17" pos:end="91:34">

		<goto pos:start="91:17" pos:end="91:34">goto <name pos:start="91:22" pos:end="91:33">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



	<comment type="block" pos:start="95:9" pos:end="95:49">/* Set up registers for signal handler */</comment>

	<expr_stmt pos:start="97:9" pos:end="97:38"><expr pos:start="97:9" pos:end="97:37"><name pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:11">env</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:17">regs</name><index pos:start="97:18" pos:end="97:24">[<expr pos:start="97:19" pos:end="97:23"><name pos:start="97:19" pos:end="97:23">R_ESP</name></expr>]</index></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <name pos:start="97:28" pos:end="97:37">frame_addr</name></expr>;</expr_stmt>

	<expr_stmt pos:start="99:9" pos:end="99:35"><expr pos:start="99:9" pos:end="99:34"><name pos:start="99:9" pos:end="99:16"><name pos:start="99:9" pos:end="99:11">env</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:16">eip</name></name> <operator pos:start="99:18" pos:end="99:18">=</operator> <name pos:start="99:20" pos:end="99:34"><name pos:start="99:20" pos:end="99:21">ka</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:34">_sa_handler</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:47"><expr pos:start="103:9" pos:end="103:46"><call pos:start="103:9" pos:end="103:46"><name pos:start="103:9" pos:end="103:24">cpu_x86_load_seg</name><argument_list pos:start="103:25" pos:end="103:46">(<argument pos:start="103:26" pos:end="103:28"><expr pos:start="103:26" pos:end="103:28"><name pos:start="103:26" pos:end="103:28">env</name></expr></argument>, <argument pos:start="103:31" pos:end="103:34"><expr pos:start="103:31" pos:end="103:34"><name pos:start="103:31" pos:end="103:34">R_DS</name></expr></argument>, <argument pos:start="103:37" pos:end="103:45"><expr pos:start="103:37" pos:end="103:45"><name pos:start="103:37" pos:end="103:45">__USER_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:47"><expr pos:start="105:9" pos:end="105:46"><call pos:start="105:9" pos:end="105:46"><name pos:start="105:9" pos:end="105:24">cpu_x86_load_seg</name><argument_list pos:start="105:25" pos:end="105:46">(<argument pos:start="105:26" pos:end="105:28"><expr pos:start="105:26" pos:end="105:28"><name pos:start="105:26" pos:end="105:28">env</name></expr></argument>, <argument pos:start="105:31" pos:end="105:34"><expr pos:start="105:31" pos:end="105:34"><name pos:start="105:31" pos:end="105:34">R_ES</name></expr></argument>, <argument pos:start="105:37" pos:end="105:45"><expr pos:start="105:37" pos:end="105:45"><name pos:start="105:37" pos:end="105:45">__USER_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:47"><expr pos:start="107:9" pos:end="107:46"><call pos:start="107:9" pos:end="107:46"><name pos:start="107:9" pos:end="107:24">cpu_x86_load_seg</name><argument_list pos:start="107:25" pos:end="107:46">(<argument pos:start="107:26" pos:end="107:28"><expr pos:start="107:26" pos:end="107:28"><name pos:start="107:26" pos:end="107:28">env</name></expr></argument>, <argument pos:start="107:31" pos:end="107:34"><expr pos:start="107:31" pos:end="107:34"><name pos:start="107:31" pos:end="107:34">R_SS</name></expr></argument>, <argument pos:start="107:37" pos:end="107:45"><expr pos:start="107:37" pos:end="107:45"><name pos:start="107:37" pos:end="107:45">__USER_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:47"><expr pos:start="109:9" pos:end="109:46"><call pos:start="109:9" pos:end="109:46"><name pos:start="109:9" pos:end="109:24">cpu_x86_load_seg</name><argument_list pos:start="109:25" pos:end="109:46">(<argument pos:start="109:26" pos:end="109:28"><expr pos:start="109:26" pos:end="109:28"><name pos:start="109:26" pos:end="109:28">env</name></expr></argument>, <argument pos:start="109:31" pos:end="109:34"><expr pos:start="109:31" pos:end="109:34"><name pos:start="109:31" pos:end="109:34">R_CS</name></expr></argument>, <argument pos:start="109:37" pos:end="109:45"><expr pos:start="109:37" pos:end="109:45"><name pos:start="109:37" pos:end="109:45">__USER_CS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="111:9" pos:end="111:32"><expr pos:start="111:9" pos:end="111:31"><name pos:start="111:9" pos:end="111:19"><name pos:start="111:9" pos:end="111:11">env</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:19">eflags</name></name> <operator pos:start="111:21" pos:end="111:22">&amp;=</operator> <operator pos:start="111:24" pos:end="111:24">~</operator><name pos:start="111:25" pos:end="111:31">TF_MASK</name></expr>;</expr_stmt>



	<expr_stmt pos:start="115:9" pos:end="115:49"><expr pos:start="115:9" pos:end="115:48"><call pos:start="115:9" pos:end="115:48"><name pos:start="115:9" pos:end="115:26">unlock_user_struct</name><argument_list pos:start="115:27" pos:end="115:48">(<argument pos:start="115:28" pos:end="115:32"><expr pos:start="115:28" pos:end="115:32"><name pos:start="115:28" pos:end="115:32">frame</name></expr></argument>, <argument pos:start="115:35" pos:end="115:44"><expr pos:start="115:35" pos:end="115:44"><name pos:start="115:35" pos:end="115:44">frame_addr</name></expr></argument>, <argument pos:start="115:47" pos:end="115:47"><expr pos:start="115:47" pos:end="115:47"><literal type="number" pos:start="115:47" pos:end="115:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<return pos:start="119:9" pos:end="119:15">return;</return>



<label pos:start="123:1" pos:end="123:13"><name pos:start="123:1" pos:end="123:12">give_sigsegv</name>:</label>

	<expr_stmt pos:start="125:9" pos:end="125:49"><expr pos:start="125:9" pos:end="125:48"><call pos:start="125:9" pos:end="125:48"><name pos:start="125:9" pos:end="125:26">unlock_user_struct</name><argument_list pos:start="125:27" pos:end="125:48">(<argument pos:start="125:28" pos:end="125:32"><expr pos:start="125:28" pos:end="125:32"><name pos:start="125:28" pos:end="125:32">frame</name></expr></argument>, <argument pos:start="125:35" pos:end="125:44"><expr pos:start="125:35" pos:end="125:44"><name pos:start="125:35" pos:end="125:44">frame_addr</name></expr></argument>, <argument pos:start="125:47" pos:end="125:47"><expr pos:start="125:47" pos:end="125:47"><literal type="number" pos:start="125:47" pos:end="125:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="127:9" pos:end="129:49"><if pos:start="127:9" pos:end="129:49">if <condition pos:start="127:12" pos:end="127:34">(<expr pos:start="127:13" pos:end="127:33"><name pos:start="127:13" pos:end="127:15">sig</name> <operator pos:start="127:17" pos:end="127:18">==</operator> <name pos:start="127:20" pos:end="127:33">TARGET_SIGSEGV</name></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:49"><block_content pos:start="129:17" pos:end="129:49">

		<expr_stmt pos:start="129:17" pos:end="129:49"><expr pos:start="129:17" pos:end="129:48"><name pos:start="129:17" pos:end="129:31"><name pos:start="129:17" pos:end="129:18">ka</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:31">_sa_handler</name></name> <operator pos:start="129:33" pos:end="129:33">=</operator> <name pos:start="129:35" pos:end="129:48">TARGET_SIG_DFL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt pos:start="131:9" pos:end="131:50"><expr pos:start="131:9" pos:end="131:49"><call pos:start="131:9" pos:end="131:49"><name pos:start="131:9" pos:end="131:17">force_sig</name><argument_list pos:start="131:18" pos:end="131:49">(<argument pos:start="131:19" pos:end="131:32"><expr pos:start="131:19" pos:end="131:32"><name pos:start="131:19" pos:end="131:32">TARGET_SIGSEGV</name></expr></argument> <comment type="block" pos:start="131:34" pos:end="131:48">/* , current */</comment>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
