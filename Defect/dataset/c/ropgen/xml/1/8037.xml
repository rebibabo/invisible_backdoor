<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8037.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">coroutine_fn</name> <name pos:start="1:21" pos:end="1:23">int</name></type> <name pos:start="1:25" pos:end="1:41">qcow2_co_pdiscard</name><parameter_list pos:start="1:42" pos:end="3:68">(<parameter pos:start="1:43" pos:end="1:62"><decl pos:start="1:43" pos:end="1:62"><type pos:start="1:43" pos:end="1:62"><name pos:start="1:43" pos:end="1:58">BlockDriverState</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">bs</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:49">int64_t</name></type> <name pos:start="3:51" pos:end="3:56">offset</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:67"><decl pos:start="3:59" pos:end="3:67"><type pos:start="3:59" pos:end="3:67"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:67">count</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">BDRVQcow2State</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:34">= <expr pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:26">bs</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:34">opaque</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:58">(<expr pos:start="13:9" pos:end="13:57"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:57"><name pos:start="13:10" pos:end="13:24">QEMU_IS_ALIGNED</name><argument_list pos:start="13:25" pos:end="13:57">(<argument pos:start="13:26" pos:end="13:39"><expr pos:start="13:26" pos:end="13:39"><name pos:start="13:26" pos:end="13:31">offset</name> <operator pos:start="13:33" pos:end="13:33">|</operator> <name pos:start="13:35" pos:end="13:39">count</name></expr></argument>, <argument pos:start="13:42" pos:end="13:56"><expr pos:start="13:42" pos:end="13:56"><name pos:start="13:42" pos:end="13:56"><name pos:start="13:42" pos:end="13:42">s</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:56">cluster_size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:60" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:24">

        <expr_stmt pos:start="15:9" pos:end="15:40"><expr pos:start="15:9" pos:end="15:39"><call pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:14">assert</name><argument_list pos:start="15:15" pos:end="15:39">(<argument pos:start="15:16" pos:end="15:38"><expr pos:start="15:16" pos:end="15:38"><name pos:start="15:16" pos:end="15:20">count</name> <operator pos:start="15:22" pos:end="15:22">&lt;</operator> <name pos:start="15:24" pos:end="15:38"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:38">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:24">return <expr pos:start="17:16" pos:end="17:23"><operator pos:start="17:16" pos:end="17:16">-</operator><name pos:start="17:17" pos:end="17:23">ENOTSUP</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><call pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:22">qemu_co_mutex_lock</name><argument_list pos:start="23:23" pos:end="23:32">(<argument pos:start="23:24" pos:end="23:31"><expr pos:start="23:24" pos:end="23:31"><operator pos:start="23:24" pos:end="23:24">&amp;</operator><name pos:start="23:25" pos:end="23:31"><name pos:start="23:25" pos:end="23:25">s</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:63"><expr pos:start="25:5" pos:end="27:62"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="27:62"><name pos:start="25:11" pos:end="25:32">qcow2_discard_clusters</name><argument_list pos:start="25:33" pos:end="27:62">(<argument pos:start="25:34" pos:end="25:35"><expr pos:start="25:34" pos:end="25:35"><name pos:start="25:34" pos:end="25:35">bs</name></expr></argument>, <argument pos:start="25:38" pos:end="25:43"><expr pos:start="25:38" pos:end="25:43"><name pos:start="25:38" pos:end="25:43">offset</name></expr></argument>, <argument pos:start="25:46" pos:end="25:70"><expr pos:start="25:46" pos:end="25:70"><name pos:start="25:46" pos:end="25:50">count</name> <operator pos:start="25:52" pos:end="25:53">&gt;&gt;</operator> <name pos:start="25:55" pos:end="25:70">BDRV_SECTOR_BITS</name></expr></argument>,

                                 <argument pos:start="27:34" pos:end="27:54"><expr pos:start="27:34" pos:end="27:54"><name pos:start="27:34" pos:end="27:54">QCOW2_DISCARD_REQUEST</name></expr></argument>, <argument pos:start="27:57" pos:end="27:61"><expr pos:start="27:57" pos:end="27:61"><name pos:start="27:57" pos:end="27:61">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><call pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:24">qemu_co_mutex_unlock</name><argument_list pos:start="29:25" pos:end="29:34">(<argument pos:start="29:26" pos:end="29:33"><expr pos:start="29:26" pos:end="29:33"><operator pos:start="29:26" pos:end="29:26">&amp;</operator><name pos:start="29:27" pos:end="29:33"><name pos:start="29:27" pos:end="29:27">s</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:33">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
