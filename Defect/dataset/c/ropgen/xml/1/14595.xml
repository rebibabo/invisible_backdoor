<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14595.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">qvirtqueue_pci_msix_setup</name><parameter_list pos:start="1:31" pos:end="3:79">(<parameter pos:start="1:32" pos:end="1:50"><decl pos:start="1:32" pos:end="1:50"><type pos:start="1:32" pos:end="1:50"><name pos:start="1:32" pos:end="1:47">QVirtioPCIDevice</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">d</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:72"><decl pos:start="1:53" pos:end="1:72"><type pos:start="1:53" pos:end="1:72"><name pos:start="1:53" pos:end="1:65">QVirtQueuePCI</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:72">vqpci</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:62"><decl pos:start="3:41" pos:end="3:62"><type pos:start="3:41" pos:end="3:62"><name pos:start="3:41" pos:end="3:55">QGuestAllocator</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:62">alloc</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:78"><decl pos:start="3:65" pos:end="3:78"><type pos:start="3:65" pos:end="3:78"><name pos:start="3:65" pos:end="3:72">uint16_t</name></type> <name pos:start="3:74" pos:end="3:78">entry</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:54">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:19">vector</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:20">control</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">void</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:14">addr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><call pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:12">g_assert</name><argument_list pos:start="15:13" pos:end="15:35">(<argument pos:start="15:14" pos:end="15:34"><expr pos:start="15:14" pos:end="15:34"><name pos:start="15:14" pos:end="15:34"><name pos:start="15:14" pos:end="15:14">d</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:20">pdev</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:34">msix_enabled</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:8">addr</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <name pos:start="17:12" pos:end="17:30"><name pos:start="17:12" pos:end="17:12">d</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:18">pdev</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:30">msix_table</name></name> <operator pos:start="17:32" pos:end="17:32">+</operator> <operator pos:start="17:34" pos:end="17:34">(</operator><name pos:start="17:35" pos:end="17:39">entry</name> <operator pos:start="17:41" pos:end="17:41">*</operator> <literal type="number" pos:start="17:43" pos:end="17:44">16</literal><operator pos:start="17:45" pos:end="17:45">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><call pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:19">g_assert_cmpint</name><argument_list pos:start="21:20" pos:end="21:33">(<argument pos:start="21:21" pos:end="21:25"><expr pos:start="21:21" pos:end="21:25"><name pos:start="21:21" pos:end="21:25">entry</name></expr></argument>, <argument pos:start="21:28" pos:end="21:29"><expr pos:start="21:28" pos:end="21:29"><operator pos:start="21:28" pos:end="21:29">&gt;=</operator></expr></argument>, <argument pos:start="21:32" pos:end="21:32"><expr pos:start="21:32" pos:end="21:32"><literal type="number" pos:start="21:32" pos:end="21:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:61"><expr pos:start="23:5" pos:end="23:60"><call pos:start="23:5" pos:end="23:60"><name pos:start="23:5" pos:end="23:19">g_assert_cmpint</name><argument_list pos:start="23:20" pos:end="23:60">(<argument pos:start="23:21" pos:end="23:25"><expr pos:start="23:21" pos:end="23:25"><name pos:start="23:21" pos:end="23:25">entry</name></expr></argument>, <argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><operator pos:start="23:28" pos:end="23:28">&lt;</operator></expr></argument>, <argument pos:start="23:31" pos:end="23:59"><expr pos:start="23:31" pos:end="23:59"><call pos:start="23:31" pos:end="23:59"><name pos:start="23:31" pos:end="23:50">qpci_msix_table_size</name><argument_list pos:start="23:51" pos:end="23:59">(<argument pos:start="23:52" pos:end="23:58"><expr pos:start="23:52" pos:end="23:58"><name pos:start="23:52" pos:end="23:58"><name pos:start="23:52" pos:end="23:52">d</name><operator pos:start="23:53" pos:end="23:54">-&gt;</operator><name pos:start="23:55" pos:end="23:58">pdev</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:9">vqpci</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:21">msix_entry</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:29">entry</name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:9">vqpci</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:20">msix_addr</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <call pos:start="29:24" pos:end="29:44"><name pos:start="29:24" pos:end="29:34">guest_alloc</name><argument_list pos:start="29:35" pos:end="29:44">(<argument pos:start="29:36" pos:end="29:40"><expr pos:start="29:36" pos:end="29:40"><name pos:start="29:36" pos:end="29:40">alloc</name></expr></argument>, <argument pos:start="29:43" pos:end="29:43"><expr pos:start="29:43" pos:end="29:43"><literal type="number" pos:start="29:43" pos:end="29:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="33:77"><expr pos:start="31:5" pos:end="33:76"><call pos:start="31:5" pos:end="33:76"><name pos:start="31:5" pos:end="31:18">qpci_io_writel</name><argument_list pos:start="31:19" pos:end="33:76">(<argument pos:start="31:20" pos:end="31:26"><expr pos:start="31:20" pos:end="31:26"><name pos:start="31:20" pos:end="31:26"><name pos:start="31:20" pos:end="31:20">d</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:26">pdev</name></name></expr></argument>, <argument pos:start="31:29" pos:end="31:60"><expr pos:start="31:29" pos:end="31:60"><name pos:start="31:29" pos:end="31:32">addr</name> <operator pos:start="31:34" pos:end="31:34">+</operator> <name pos:start="31:36" pos:end="31:60">PCI_MSIX_ENTRY_LOWER_ADDR</name></expr></argument>,

                                                    <argument pos:start="33:53" pos:end="33:75"><expr pos:start="33:53" pos:end="33:75"><name pos:start="33:53" pos:end="33:68"><name pos:start="33:53" pos:end="33:57">vqpci</name><operator pos:start="33:58" pos:end="33:59">-&gt;</operator><name pos:start="33:60" pos:end="33:68">msix_addr</name></name> <operator pos:start="33:70" pos:end="33:70">&amp;</operator> <operator pos:start="33:72" pos:end="33:72">~</operator><literal type="number" pos:start="33:73" pos:end="33:75">0UL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:77"><expr pos:start="35:5" pos:end="37:76"><call pos:start="35:5" pos:end="37:76"><name pos:start="35:5" pos:end="35:18">qpci_io_writel</name><argument_list pos:start="35:19" pos:end="37:76">(<argument pos:start="35:20" pos:end="35:26"><expr pos:start="35:20" pos:end="35:26"><name pos:start="35:20" pos:end="35:26"><name pos:start="35:20" pos:end="35:20">d</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:26">pdev</name></name></expr></argument>, <argument pos:start="35:29" pos:end="35:60"><expr pos:start="35:29" pos:end="35:60"><name pos:start="35:29" pos:end="35:32">addr</name> <operator pos:start="35:34" pos:end="35:34">+</operator> <name pos:start="35:36" pos:end="35:60">PCI_MSIX_ENTRY_UPPER_ADDR</name></expr></argument>,

                                            <argument pos:start="37:45" pos:end="37:75"><expr pos:start="37:45" pos:end="37:75"><operator pos:start="37:45" pos:end="37:45">(</operator><name pos:start="37:46" pos:end="37:61"><name pos:start="37:46" pos:end="37:50">vqpci</name><operator pos:start="37:51" pos:end="37:52">-&gt;</operator><name pos:start="37:53" pos:end="37:61">msix_addr</name></name> <operator pos:start="37:63" pos:end="37:64">&gt;&gt;</operator> <literal type="number" pos:start="37:66" pos:end="37:67">32</literal><operator pos:start="37:68" pos:end="37:68">)</operator> <operator pos:start="37:70" pos:end="37:70">&amp;</operator> <operator pos:start="37:72" pos:end="37:72">~</operator><literal type="number" pos:start="37:73" pos:end="37:75">0UL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:74"><expr pos:start="39:5" pos:end="39:73"><call pos:start="39:5" pos:end="39:73"><name pos:start="39:5" pos:end="39:18">qpci_io_writel</name><argument_list pos:start="39:19" pos:end="39:73">(<argument pos:start="39:20" pos:end="39:26"><expr pos:start="39:20" pos:end="39:26"><name pos:start="39:20" pos:end="39:26"><name pos:start="39:20" pos:end="39:20">d</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:26">pdev</name></name></expr></argument>, <argument pos:start="39:29" pos:end="39:54"><expr pos:start="39:29" pos:end="39:54"><name pos:start="39:29" pos:end="39:32">addr</name> <operator pos:start="39:34" pos:end="39:34">+</operator> <name pos:start="39:36" pos:end="39:54">PCI_MSIX_ENTRY_DATA</name></expr></argument>, <argument pos:start="39:57" pos:end="39:72"><expr pos:start="39:57" pos:end="39:72"><name pos:start="39:57" pos:end="39:72"><name pos:start="39:57" pos:end="39:61">vqpci</name><operator pos:start="39:62" pos:end="39:63">-&gt;</operator><name pos:start="39:64" pos:end="39:72">msix_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:72"><expr pos:start="43:5" pos:end="43:71"><name pos:start="43:5" pos:end="43:11">control</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:71"><name pos:start="43:15" pos:end="43:27">qpci_io_readl</name><argument_list pos:start="43:28" pos:end="43:71">(<argument pos:start="43:29" pos:end="43:35"><expr pos:start="43:29" pos:end="43:35"><name pos:start="43:29" pos:end="43:35"><name pos:start="43:29" pos:end="43:29">d</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:35">pdev</name></name></expr></argument>, <argument pos:start="43:38" pos:end="43:70"><expr pos:start="43:38" pos:end="43:70"><name pos:start="43:38" pos:end="43:41">addr</name> <operator pos:start="43:43" pos:end="43:43">+</operator> <name pos:start="43:45" pos:end="43:70">PCI_MSIX_ENTRY_VECTOR_CTRL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:80"><expr pos:start="45:5" pos:end="47:79"><call pos:start="45:5" pos:end="47:79"><name pos:start="45:5" pos:end="45:18">qpci_io_writel</name><argument_list pos:start="45:19" pos:end="47:79">(<argument pos:start="45:20" pos:end="45:26"><expr pos:start="45:20" pos:end="45:26"><name pos:start="45:20" pos:end="45:26"><name pos:start="45:20" pos:end="45:20">d</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:26">pdev</name></name></expr></argument>, <argument pos:start="45:29" pos:end="45:61"><expr pos:start="45:29" pos:end="45:61"><name pos:start="45:29" pos:end="45:32">addr</name> <operator pos:start="45:34" pos:end="45:34">+</operator> <name pos:start="45:36" pos:end="45:61">PCI_MSIX_ENTRY_VECTOR_CTRL</name></expr></argument>,

                                        <argument pos:start="47:41" pos:end="47:78"><expr pos:start="47:41" pos:end="47:78"><name pos:start="47:41" pos:end="47:47">control</name> <operator pos:start="47:49" pos:end="47:49">&amp;</operator> <operator pos:start="47:51" pos:end="47:51">~</operator><name pos:start="47:52" pos:end="47:78">PCI_MSIX_ENTRY_CTRL_MASKBIT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:56"><expr pos:start="51:5" pos:end="51:55"><call pos:start="51:5" pos:end="51:55"><name pos:start="51:5" pos:end="51:28">qvirtio_pci_queue_select</name><argument_list pos:start="51:29" pos:end="51:55">(<argument pos:start="51:30" pos:end="51:37"><expr pos:start="51:30" pos:end="51:37"><operator pos:start="51:30" pos:end="51:30">&amp;</operator><name pos:start="51:31" pos:end="51:37"><name pos:start="51:31" pos:end="51:31">d</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:37">vdev</name></name></expr></argument>, <argument pos:start="51:40" pos:end="51:54"><expr pos:start="51:40" pos:end="51:54"><name pos:start="51:40" pos:end="51:54"><name pos:start="51:40" pos:end="51:44">vqpci</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:48">vq</name><operator pos:start="51:49" pos:end="51:49">.</operator><name pos:start="51:50" pos:end="51:54">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:70"><expr pos:start="53:5" pos:end="53:69"><call pos:start="53:5" pos:end="53:69"><name pos:start="53:5" pos:end="53:18">qpci_io_writew</name><argument_list pos:start="53:19" pos:end="53:69">(<argument pos:start="53:20" pos:end="53:26"><expr pos:start="53:20" pos:end="53:26"><name pos:start="53:20" pos:end="53:26"><name pos:start="53:20" pos:end="53:20">d</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:26">pdev</name></name></expr></argument>, <argument pos:start="53:29" pos:end="53:61"><expr pos:start="53:29" pos:end="53:61"><name pos:start="53:29" pos:end="53:35"><name pos:start="53:29" pos:end="53:29">d</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:35">addr</name></name> <operator pos:start="53:37" pos:end="53:37">+</operator> <name pos:start="53:39" pos:end="53:61">VIRTIO_MSI_QUEUE_VECTOR</name></expr></argument>, <argument pos:start="53:64" pos:end="53:68"><expr pos:start="53:64" pos:end="53:68"><name pos:start="53:64" pos:end="53:68">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:71"><expr pos:start="55:5" pos:end="55:70"><name pos:start="55:5" pos:end="55:10">vector</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <call pos:start="55:14" pos:end="55:70"><name pos:start="55:14" pos:end="55:26">qpci_io_readw</name><argument_list pos:start="55:27" pos:end="55:70">(<argument pos:start="55:28" pos:end="55:34"><expr pos:start="55:28" pos:end="55:34"><name pos:start="55:28" pos:end="55:34"><name pos:start="55:28" pos:end="55:28">d</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:34">pdev</name></name></expr></argument>, <argument pos:start="55:37" pos:end="55:69"><expr pos:start="55:37" pos:end="55:69"><name pos:start="55:37" pos:end="55:43"><name pos:start="55:37" pos:end="55:37">d</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:43">addr</name></name> <operator pos:start="55:45" pos:end="55:45">+</operator> <name pos:start="55:47" pos:end="55:69">VIRTIO_MSI_QUEUE_VECTOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:54"><expr pos:start="57:5" pos:end="57:53"><call pos:start="57:5" pos:end="57:53"><name pos:start="57:5" pos:end="57:19">g_assert_cmphex</name><argument_list pos:start="57:20" pos:end="57:53">(<argument pos:start="57:21" pos:end="57:26"><expr pos:start="57:21" pos:end="57:26"><name pos:start="57:21" pos:end="57:26">vector</name></expr></argument>, <argument pos:start="57:29" pos:end="57:30"><expr pos:start="57:29" pos:end="57:30"><operator pos:start="57:29" pos:end="57:30">!=</operator></expr></argument>, <argument pos:start="57:33" pos:end="57:52"><expr pos:start="57:33" pos:end="57:52"><name pos:start="57:33" pos:end="57:52">VIRTIO_MSI_NO_VECTOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
