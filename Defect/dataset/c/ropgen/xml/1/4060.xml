<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4060.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">pci_bridge_exitfn</name><parameter_list pos:start="1:23" pos:end="1:42">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:34"><name pos:start="1:24" pos:end="1:32">PCIDevice</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:41">pci_dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="15:48">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIBridge</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:53">= <expr pos:start="5:20" pos:end="5:53"><call pos:start="5:20" pos:end="5:53"><name pos:start="5:20" pos:end="5:28">DO_UPCAST</name><argument_list pos:start="5:29" pos:end="5:53">(<argument pos:start="5:30" pos:end="5:38"><expr pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:38">PCIBridge</name></expr></argument>, <argument pos:start="5:41" pos:end="5:43"><expr pos:start="5:41" pos:end="5:43"><name pos:start="5:41" pos:end="5:43">dev</name></expr></argument>, <argument pos:start="5:46" pos:end="5:52"><expr pos:start="5:46" pos:end="5:52"><name pos:start="5:46" pos:end="5:52">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:43"><expr pos:start="7:5" pos:end="7:42"><call pos:start="7:5" pos:end="7:42"><name pos:start="7:5" pos:end="7:10">assert</name><argument_list pos:start="7:11" pos:end="7:42">(<argument pos:start="7:12" pos:end="7:41"><expr pos:start="7:12" pos:end="7:41"><call pos:start="7:12" pos:end="7:41"><name pos:start="7:12" pos:end="7:22">QLIST_EMPTY</name><argument_list pos:start="7:23" pos:end="7:41">(<argument pos:start="7:24" pos:end="7:40"><expr pos:start="7:24" pos:end="7:40"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:34">sec_bus</name><operator pos:start="7:35" pos:end="7:35">.</operator><name pos:start="7:36" pos:end="7:40">child</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:39"><expr pos:start="9:5" pos:end="9:38"><call pos:start="9:5" pos:end="9:38"><name pos:start="9:5" pos:end="9:16">QLIST_REMOVE</name><argument_list pos:start="9:17" pos:end="9:38">(<argument pos:start="9:18" pos:end="9:28"><expr pos:start="9:18" pos:end="9:28"><operator pos:start="9:18" pos:end="9:18">&amp;</operator><name pos:start="9:19" pos:end="9:28"><name pos:start="9:19" pos:end="9:19">s</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:28">sec_bus</name></name></expr></argument>, <argument pos:start="9:31" pos:end="9:37"><expr pos:start="9:31" pos:end="9:37"><name pos:start="9:31" pos:end="9:37">sibling</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><call pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:29">pci_bridge_region_cleanup</name><argument_list pos:start="11:30" pos:end="11:32">(<argument pos:start="11:31" pos:end="11:31"><expr pos:start="11:31" pos:end="11:31"><name pos:start="11:31" pos:end="11:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:49"><expr pos:start="13:5" pos:end="13:48"><call pos:start="13:5" pos:end="13:48"><name pos:start="13:5" pos:end="13:25">memory_region_destroy</name><argument_list pos:start="13:26" pos:end="13:48">(<argument pos:start="13:27" pos:end="13:47"><expr pos:start="13:27" pos:end="13:47"><operator pos:start="13:27" pos:end="13:27">&amp;</operator><name pos:start="13:28" pos:end="13:47"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:47">address_space_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:48"><expr pos:start="15:5" pos:end="15:47"><call pos:start="15:5" pos:end="15:47"><name pos:start="15:5" pos:end="15:25">memory_region_destroy</name><argument_list pos:start="15:26" pos:end="15:47">(<argument pos:start="15:27" pos:end="15:46"><expr pos:start="15:27" pos:end="15:46"><operator pos:start="15:27" pos:end="15:27">&amp;</operator><name pos:start="15:28" pos:end="15:46"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:46">address_space_io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="17:5" pos:end="17:60">/* qbus_free() is called automatically by qdev_free() */</comment>

</block_content>}</block></function>
</unit>
