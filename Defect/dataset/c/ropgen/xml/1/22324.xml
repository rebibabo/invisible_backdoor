<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22324.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">aasc_decode_frame</name><parameter_list pos:start="1:29" pos:end="5:46">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:40"><decl pos:start="3:31" pos:end="3:40"><type pos:start="3:31" pos:end="3:40"><name pos:start="3:31" pos:end="3:34">void</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">data</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:45">int</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:56">got_frame</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:45"><decl pos:start="5:31" pos:end="5:45"><type pos:start="5:31" pos:end="5:45"><name pos:start="5:31" pos:end="5:38">AVPacket</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:45">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="87:1">{<block_content pos:start="9:5" pos:end="85:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name>       <init pos:start="11:24" pos:end="11:36">= <expr pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:30">avpkt</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">AascContext</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:18">s</name>     <init pos:start="13:24" pos:end="13:41">= <expr pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:30">avctx</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">compr</name></decl>, <decl pos:start="15:16" pos:end="15:16"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:16" pos:end="15:16">i</name></decl>, <decl pos:start="15:19" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:19" pos:end="15:24">stride</name></decl>, <decl pos:start="15:27" pos:end="15:29"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:27" pos:end="15:29">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="30:5"><if pos:start="19:5" pos:end="30:5">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:16">buf_size</name> <operator pos:start="19:18" pos:end="19:18">&lt;</operator> <literal type="number" pos:start="19:20" pos:end="19:20">4</literal></expr>)</condition><block type="pseudo" pos:start="24:5" pos:end="30:5"><block_content pos:start="24:5" pos:end="30:5">




    <if_stmt pos:start="24:5" pos:end="30:5"><if pos:start="24:5" pos:end="30:5">if <condition pos:start="24:8" pos:end="24:53">(<expr pos:start="24:9" pos:end="24:52"><operator pos:start="24:9" pos:end="24:9">(</operator><name pos:start="24:10" pos:end="24:12">ret</name> <operator pos:start="24:14" pos:end="24:14">=</operator> <call pos:start="24:16" pos:end="24:47"><name pos:start="24:16" pos:end="24:30">ff_reget_buffer</name><argument_list pos:start="24:31" pos:end="24:47">(<argument pos:start="24:32" pos:end="24:36"><expr pos:start="24:32" pos:end="24:36"><name pos:start="24:32" pos:end="24:36">avctx</name></expr></argument>, <argument pos:start="24:39" pos:end="24:46"><expr pos:start="24:39" pos:end="24:46"><name pos:start="24:39" pos:end="24:46"><name pos:start="24:39" pos:end="24:39">s</name><operator pos:start="24:40" pos:end="24:41">-&gt;</operator><name pos:start="24:42" pos:end="24:46">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="24:48" pos:end="24:48">)</operator> <operator pos:start="24:50" pos:end="24:50">&lt;</operator> <literal type="number" pos:start="24:52" pos:end="24:52">0</literal></expr>)</condition> <block pos:start="24:55" pos:end="30:5">{<block_content pos:start="26:9" pos:end="28:19">

        <expr_stmt pos:start="26:9" pos:end="26:63"><expr pos:start="26:9" pos:end="26:62"><call pos:start="26:9" pos:end="26:62"><name pos:start="26:9" pos:end="26:14">av_log</name><argument_list pos:start="26:15" pos:end="26:62">(<argument pos:start="26:16" pos:end="26:20"><expr pos:start="26:16" pos:end="26:20"><name pos:start="26:16" pos:end="26:20">avctx</name></expr></argument>, <argument pos:start="26:23" pos:end="26:34"><expr pos:start="26:23" pos:end="26:34"><name pos:start="26:23" pos:end="26:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="26:37" pos:end="26:61"><expr pos:start="26:37" pos:end="26:61"><literal type="string" pos:start="26:37" pos:end="26:61">"reget_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="28:9" pos:end="28:19">return <expr pos:start="28:16" pos:end="28:18"><name pos:start="28:16" pos:end="28:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="34:5" pos:end="34:29"><expr pos:start="34:5" pos:end="34:28"><name pos:start="34:5" pos:end="34:9">compr</name>     <operator pos:start="34:15" pos:end="34:15">=</operator> <call pos:start="34:17" pos:end="34:28"><name pos:start="34:17" pos:end="34:23">AV_RL32</name><argument_list pos:start="34:24" pos:end="34:28">(<argument pos:start="34:25" pos:end="34:27"><expr pos:start="34:25" pos:end="34:27"><name pos:start="34:25" pos:end="34:27">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="36:5" pos:end="36:18"><expr pos:start="36:5" pos:end="36:17"><name pos:start="36:5" pos:end="36:7">buf</name>      <operator pos:start="36:14" pos:end="36:15">+=</operator> <literal type="number" pos:start="36:17" pos:end="36:17">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="38:5" pos:end="38:18"><expr pos:start="38:5" pos:end="38:17"><name pos:start="38:5" pos:end="38:12">buf_size</name> <operator pos:start="38:14" pos:end="38:15">-=</operator> <literal type="number" pos:start="38:17" pos:end="38:17">4</literal></expr>;</expr_stmt>

    <switch pos:start="40:5" pos:end="71:5">switch <condition pos:start="40:12" pos:end="40:18">(<expr pos:start="40:13" pos:end="40:17"><name pos:start="40:13" pos:end="40:17">compr</name></expr>)</condition> <block pos:start="40:20" pos:end="71:5">{<block_content pos:start="42:5" pos:end="68:76">

    <case pos:start="42:5" pos:end="42:11">case <expr pos:start="42:10" pos:end="42:10"><literal type="number" pos:start="42:10" pos:end="42:10">0</literal></expr>:</case>

        <expr_stmt pos:start="44:9" pos:end="44:45"><expr pos:start="44:9" pos:end="44:44"><name pos:start="44:9" pos:end="44:14">stride</name> <operator pos:start="44:16" pos:end="44:16">=</operator> <operator pos:start="44:18" pos:end="44:18">(</operator><name pos:start="44:19" pos:end="44:30"><name pos:start="44:19" pos:end="44:23">avctx</name><operator pos:start="44:24" pos:end="44:25">-&gt;</operator><name pos:start="44:26" pos:end="44:30">width</name></name> <operator pos:start="44:32" pos:end="44:32">*</operator> <literal type="number" pos:start="44:34" pos:end="44:36">3</literal> <operator pos:start="44:36" pos:end="44:36">+</operator> <literal type="number" pos:start="44:38" pos:end="44:38">3</literal><operator pos:start="44:39" pos:end="44:39">)</operator> <operator pos:start="44:41" pos:end="44:41">&amp;</operator> <operator pos:start="44:43" pos:end="44:43">~</operator><literal type="number" pos:start="44:44" pos:end="44:44">3</literal></expr>;</expr_stmt>



        <for pos:start="48:9" pos:end="54:9">for <control pos:start="48:13" pos:end="48:48">(<init pos:start="48:14" pos:end="48:35"><expr pos:start="48:14" pos:end="48:34"><name pos:start="48:14" pos:end="48:14">i</name> <operator pos:start="48:16" pos:end="48:16">=</operator> <name pos:start="48:18" pos:end="48:30"><name pos:start="48:18" pos:end="48:22">avctx</name><operator pos:start="48:23" pos:end="48:24">-&gt;</operator><name pos:start="48:25" pos:end="48:30">height</name></name> <operator pos:start="48:32" pos:end="48:32">-</operator> <literal type="number" pos:start="48:34" pos:end="48:34">1</literal></expr>;</init> <condition pos:start="48:37" pos:end="48:43"><expr pos:start="48:37" pos:end="48:42"><name pos:start="48:37" pos:end="48:37">i</name> <operator pos:start="48:39" pos:end="48:40">&gt;=</operator> <literal type="number" pos:start="48:42" pos:end="48:42">0</literal></expr>;</condition> <incr pos:start="48:45" pos:end="48:47"><expr pos:start="48:45" pos:end="48:47"><name pos:start="48:45" pos:end="48:45">i</name><operator pos:start="48:46" pos:end="48:47">--</operator></expr></incr>)</control> <block pos:start="48:50" pos:end="54:9">{<block_content pos:start="50:13" pos:end="52:26">

            <expr_stmt pos:start="50:13" pos:end="50:89"><expr pos:start="50:13" pos:end="50:88"><call pos:start="50:13" pos:end="50:88"><name pos:start="50:13" pos:end="50:18">memcpy</name><argument_list pos:start="50:19" pos:end="50:88">(<argument pos:start="50:20" pos:end="50:64"><expr pos:start="50:20" pos:end="50:64"><name pos:start="50:20" pos:end="50:36"><name pos:start="50:20" pos:end="50:20">s</name><operator pos:start="50:21" pos:end="50:22">-&gt;</operator><name pos:start="50:23" pos:end="50:27">frame</name><operator pos:start="50:28" pos:end="50:29">-&gt;</operator><name pos:start="50:30" pos:end="50:33">data</name><index pos:start="50:34" pos:end="50:36">[<expr pos:start="50:35" pos:end="50:35"><literal type="number" pos:start="50:35" pos:end="50:35">0</literal></expr>]</index></name> <operator pos:start="50:38" pos:end="50:38">+</operator> <name pos:start="50:40" pos:end="50:40">i</name> <operator pos:start="50:42" pos:end="50:42">*</operator> <name pos:start="50:44" pos:end="50:64"><name pos:start="50:44" pos:end="50:44">s</name><operator pos:start="50:45" pos:end="50:46">-&gt;</operator><name pos:start="50:47" pos:end="50:51">frame</name><operator pos:start="50:52" pos:end="50:53">-&gt;</operator><name pos:start="50:54" pos:end="50:61">linesize</name><index pos:start="50:62" pos:end="50:64">[<expr pos:start="50:63" pos:end="50:63"><literal type="number" pos:start="50:63" pos:end="50:63">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="50:67" pos:end="50:69"><expr pos:start="50:67" pos:end="50:69"><name pos:start="50:67" pos:end="50:69">buf</name></expr></argument>, <argument pos:start="50:72" pos:end="50:87"><expr pos:start="50:72" pos:end="50:87"><name pos:start="50:72" pos:end="50:83"><name pos:start="50:72" pos:end="50:76">avctx</name><operator pos:start="50:77" pos:end="50:78">-&gt;</operator><name pos:start="50:79" pos:end="50:83">width</name></name> <operator pos:start="50:85" pos:end="50:85">*</operator> <literal type="number" pos:start="50:87" pos:end="50:87">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="52:13" pos:end="52:26"><expr pos:start="52:13" pos:end="52:25"><name pos:start="52:13" pos:end="52:15">buf</name> <operator pos:start="52:17" pos:end="52:18">+=</operator> <name pos:start="52:20" pos:end="52:25">stride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="56:9" pos:end="56:14">break;</break>

    <case pos:start="58:5" pos:end="58:11">case <expr pos:start="58:10" pos:end="58:10"><literal type="number" pos:start="58:10" pos:end="58:10">1</literal></expr>:</case>

        <expr_stmt pos:start="60:9" pos:end="60:48"><expr pos:start="60:9" pos:end="60:47"><call pos:start="60:9" pos:end="60:47"><name pos:start="60:9" pos:end="60:24">bytestream2_init</name><argument_list pos:start="60:25" pos:end="60:47">(<argument pos:start="60:26" pos:end="60:31"><expr pos:start="60:26" pos:end="60:31"><operator pos:start="60:26" pos:end="60:26">&amp;</operator><name pos:start="60:27" pos:end="60:31"><name pos:start="60:27" pos:end="60:27">s</name><operator pos:start="60:28" pos:end="60:29">-&gt;</operator><name pos:start="60:30" pos:end="60:31">gb</name></name></expr></argument>, <argument pos:start="60:34" pos:end="60:36"><expr pos:start="60:34" pos:end="60:36"><name pos:start="60:34" pos:end="60:36">buf</name></expr></argument>, <argument pos:start="60:39" pos:end="60:46"><expr pos:start="60:39" pos:end="60:46"><name pos:start="60:39" pos:end="60:46">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="62:9" pos:end="62:64"><expr pos:start="62:9" pos:end="62:63"><call pos:start="62:9" pos:end="62:63"><name pos:start="62:9" pos:end="62:23">ff_msrle_decode</name><argument_list pos:start="62:24" pos:end="62:63">(<argument pos:start="62:25" pos:end="62:29"><expr pos:start="62:25" pos:end="62:29"><name pos:start="62:25" pos:end="62:29">avctx</name></expr></argument>, <argument pos:start="62:32" pos:end="62:51"><expr pos:start="62:32" pos:end="62:51"><operator pos:start="62:32" pos:end="62:32">(</operator><name pos:start="62:33" pos:end="62:41">AVPicture</name><operator pos:start="62:42" pos:end="62:42">*</operator><operator pos:start="62:43" pos:end="62:43">)</operator><name pos:start="62:44" pos:end="62:51"><name pos:start="62:44" pos:end="62:44">s</name><operator pos:start="62:45" pos:end="62:46">-&gt;</operator><name pos:start="62:47" pos:end="62:51">frame</name></name></expr></argument>, <argument pos:start="62:54" pos:end="62:54"><expr pos:start="62:54" pos:end="62:54"><literal type="number" pos:start="62:54" pos:end="62:54">8</literal></expr></argument>, <argument pos:start="62:57" pos:end="62:62"><expr pos:start="62:57" pos:end="62:62"><operator pos:start="62:57" pos:end="62:57">&amp;</operator><name pos:start="62:58" pos:end="62:62"><name pos:start="62:58" pos:end="62:58">s</name><operator pos:start="62:59" pos:end="62:60">-&gt;</operator><name pos:start="62:61" pos:end="62:62">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="64:9" pos:end="64:14">break;</break>

    <default pos:start="66:5" pos:end="66:12">default:</default>

        <expr_stmt pos:start="68:9" pos:end="68:76"><expr pos:start="68:9" pos:end="68:75"><call pos:start="68:9" pos:end="68:75"><name pos:start="68:9" pos:end="68:14">av_log</name><argument_list pos:start="68:15" pos:end="68:75">(<argument pos:start="68:16" pos:end="68:20"><expr pos:start="68:16" pos:end="68:20"><name pos:start="68:16" pos:end="68:20">avctx</name></expr></argument>, <argument pos:start="68:23" pos:end="68:34"><expr pos:start="68:23" pos:end="68:34"><name pos:start="68:23" pos:end="68:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="68:37" pos:end="68:67"><expr pos:start="68:37" pos:end="68:67"><literal type="string" pos:start="68:37" pos:end="68:67">"Unknown compression type %d\n"</literal></expr></argument>, <argument pos:start="68:70" pos:end="68:74"><expr pos:start="68:70" pos:end="68:74"><name pos:start="68:70" pos:end="68:74">compr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></switch>



    <expr_stmt pos:start="75:5" pos:end="75:19"><expr pos:start="75:5" pos:end="75:18"><operator pos:start="75:5" pos:end="75:5">*</operator><name pos:start="75:6" pos:end="75:14">got_frame</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:18">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:19"><if pos:start="77:5" pos:end="79:19">if <condition pos:start="77:8" pos:end="77:49">(<expr pos:start="77:9" pos:end="77:48"><operator pos:start="77:9" pos:end="77:9">(</operator><name pos:start="77:10" pos:end="77:12">ret</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <call pos:start="77:16" pos:end="77:43"><name pos:start="77:16" pos:end="77:27">av_frame_ref</name><argument_list pos:start="77:28" pos:end="77:43">(<argument pos:start="77:29" pos:end="77:32"><expr pos:start="77:29" pos:end="77:32"><name pos:start="77:29" pos:end="77:32">data</name></expr></argument>, <argument pos:start="77:35" pos:end="77:42"><expr pos:start="77:35" pos:end="77:42"><name pos:start="77:35" pos:end="77:42"><name pos:start="77:35" pos:end="77:35">s</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:42">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="77:44" pos:end="77:44">)</operator> <operator pos:start="77:46" pos:end="77:46">&lt;</operator> <literal type="number" pos:start="77:48" pos:end="77:48">0</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:19"><block_content pos:start="79:9" pos:end="79:19">

        <return pos:start="79:9" pos:end="79:19">return <expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:56">/* report that the buffer was completely consumed */</comment>

    <return pos:start="85:5" pos:end="85:20">return <expr pos:start="85:12" pos:end="85:19"><name pos:start="85:12" pos:end="85:19">buf_size</name></expr>;</return>

</block_content>}</block></function></unit>
