<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10436.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_audio_out</name><parameter_list pos:start="1:25" pos:end="7:54">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, 

                         <parameter pos:start="3:26" pos:end="3:44"><decl pos:start="3:26" pos:end="3:44"><type pos:start="3:26" pos:end="3:44"><name pos:start="3:26" pos:end="3:39">AVOutputStream</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">ost</name></decl></parameter>, 

                         <parameter pos:start="5:26" pos:end="5:43"><decl pos:start="5:26" pos:end="5:43"><type pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:38">AVInputStream</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:43">ist</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:43"><decl pos:start="7:26" pos:end="7:43"><type pos:start="7:26" pos:end="7:43"><name pos:start="7:26" pos:end="7:33">unsigned</name> <name pos:start="7:35" pos:end="7:38">char</name> <modifier pos:start="7:40" pos:end="7:40">*</modifier></type><name pos:start="7:41" pos:end="7:43">buf</name></decl></parameter>, <parameter pos:start="7:46" pos:end="7:53"><decl pos:start="7:46" pos:end="7:53"><type pos:start="7:46" pos:end="7:53"><name pos:start="7:46" pos:end="7:48">int</name></type> <name pos:start="7:50" pos:end="7:53">size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="111:1">{<block_content pos:start="11:5" pos:end="109:5">

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:19">buftmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:46"><name pos:start="13:13" pos:end="13:21">audio_buf</name><index pos:start="13:22" pos:end="13:46">[<expr pos:start="13:23" pos:end="13:45"><literal type="number" pos:start="13:23" pos:end="13:23">2</literal><operator pos:start="13:24" pos:end="13:24">*</operator><name pos:start="13:25" pos:end="13:45">MAX_AUDIO_PACKET_SIZE</name></expr>]</index></name></decl>;</decl_stmt> <comment type="block" pos:start="13:49" pos:end="13:70">/* XXX: allocate it */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:46"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:46"><name pos:start="15:13" pos:end="15:21">audio_out</name><index pos:start="15:22" pos:end="15:46">[<expr pos:start="15:23" pos:end="15:45"><literal type="number" pos:start="15:23" pos:end="15:23">4</literal><operator pos:start="15:24" pos:end="15:24">*</operator><name pos:start="15:25" pos:end="15:45">MAX_AUDIO_PACKET_SIZE</name></expr>]</index></name></decl>;</decl_stmt> <comment type="block" pos:start="15:49" pos:end="15:87">/* XXX: allocate it - yep really WMA */</comment>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">size_out</name></decl>, <decl pos:start="17:19" pos:end="17:29"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:19" pos:end="17:29">frame_bytes</name></decl>, <decl pos:start="17:32" pos:end="17:34"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:32" pos:end="17:34">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:18">AVCodecContext</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:23">enc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:7">enc</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <operator pos:start="23:11" pos:end="23:11">&amp;</operator><name pos:start="23:12" pos:end="23:25"><name pos:start="23:12" pos:end="23:14">ost</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:18">st</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:25">codec</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="45:5"><if pos:start="27:5" pos:end="39:5">if <condition pos:start="27:8" pos:end="27:28">(<expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:11">ost</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:27">audio_resample</name></name></expr>)</condition> <block pos:start="27:30" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:48">

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:14">buftmp</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:26">audio_buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="35:72"><expr pos:start="31:9" pos:end="35:71"><name pos:start="31:9" pos:end="31:16">size_out</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="35:71"><name pos:start="31:20" pos:end="31:33">audio_resample</name><argument_list pos:start="31:34" pos:end="35:71">(<argument pos:start="31:35" pos:end="31:47"><expr pos:start="31:35" pos:end="31:47"><name pos:start="31:35" pos:end="31:47"><name pos:start="31:35" pos:end="31:37">ost</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:47">resample</name></name></expr></argument>, 

                                  <argument pos:start="33:35" pos:end="33:49"><expr pos:start="33:35" pos:end="33:49"><operator pos:start="33:35" pos:end="33:35">(</operator><name pos:start="33:36" pos:end="33:40">short</name> <operator pos:start="33:42" pos:end="33:42">*</operator><operator pos:start="33:43" pos:end="33:43">)</operator><name pos:start="33:44" pos:end="33:49">buftmp</name></expr></argument>, <argument pos:start="33:52" pos:end="33:63"><expr pos:start="33:52" pos:end="33:63"><operator pos:start="33:52" pos:end="33:52">(</operator><name pos:start="33:53" pos:end="33:57">short</name> <operator pos:start="33:59" pos:end="33:59">*</operator><operator pos:start="33:60" pos:end="33:60">)</operator><name pos:start="33:61" pos:end="33:63">buf</name></expr></argument>,

                                  <argument pos:start="35:35" pos:end="35:70"><expr pos:start="35:35" pos:end="35:70"><name pos:start="35:35" pos:end="35:38">size</name> <operator pos:start="35:40" pos:end="35:40">/</operator> <operator pos:start="35:42" pos:end="35:42">(</operator><name pos:start="35:43" pos:end="35:65"><name pos:start="35:43" pos:end="35:45">ist</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:49">st</name><operator pos:start="35:50" pos:end="35:51">-&gt;</operator><name pos:start="35:52" pos:end="35:56">codec</name><operator pos:start="35:57" pos:end="35:57">.</operator><name pos:start="35:58" pos:end="35:65">channels</name></name> <operator pos:start="35:67" pos:end="35:67">*</operator> <literal type="number" pos:start="35:69" pos:end="35:69">2</literal><operator pos:start="35:70" pos:end="35:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:48"><expr pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:16">size_out</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <name pos:start="37:20" pos:end="37:27">size_out</name> <operator pos:start="37:29" pos:end="37:29">*</operator> <name pos:start="37:31" pos:end="37:43"><name pos:start="37:31" pos:end="37:33">enc</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:43">channels</name></name> <operator pos:start="37:45" pos:end="37:45">*</operator> <literal type="number" pos:start="37:47" pos:end="37:47">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="45:5">else <block pos:start="39:12" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:24">

        <expr_stmt pos:start="41:9" pos:end="41:21"><expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:14">buftmp</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <name pos:start="41:18" pos:end="41:20">buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:24"><expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:16">size_out</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:23">size</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:47">/* now encode as many frames as possible */</comment>

    <if_stmt pos:start="51:5" pos:end="109:5"><if pos:start="51:5" pos:end="77:5">if <condition pos:start="51:8" pos:end="51:28">(<expr pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:11">enc</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:23">frame_size</name></name> <operator pos:start="51:25" pos:end="51:25">&gt;</operator> <literal type="number" pos:start="51:27" pos:end="51:27">1</literal></expr>)</condition> <block pos:start="51:30" pos:end="77:5">{<block_content pos:start="55:9" pos:end="75:9">

        <comment type="block" pos:start="53:9" pos:end="53:42">/* output resampled raw samples */</comment>

        <expr_stmt pos:start="55:9" pos:end="57:36"><expr pos:start="55:9" pos:end="57:35"><call pos:start="55:9" pos:end="57:35"><name pos:start="55:9" pos:end="55:18">fifo_write</name><argument_list pos:start="55:19" pos:end="57:35">(<argument pos:start="55:20" pos:end="55:29"><expr pos:start="55:20" pos:end="55:29"><operator pos:start="55:20" pos:end="55:20">&amp;</operator><name pos:start="55:21" pos:end="55:29"><name pos:start="55:21" pos:end="55:23">ost</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:29">fifo</name></name></expr></argument>, <argument pos:start="55:32" pos:end="55:37"><expr pos:start="55:32" pos:end="55:37"><name pos:start="55:32" pos:end="55:37">buftmp</name></expr></argument>, <argument pos:start="55:40" pos:end="55:47"><expr pos:start="55:40" pos:end="55:47"><name pos:start="55:40" pos:end="55:47">size_out</name></expr></argument>, 

                   <argument pos:start="57:20" pos:end="57:34"><expr pos:start="57:20" pos:end="57:34"><operator pos:start="57:20" pos:end="57:20">&amp;</operator><name pos:start="57:21" pos:end="57:34"><name pos:start="57:21" pos:end="57:23">ost</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:29">fifo</name><operator pos:start="57:30" pos:end="57:30">.</operator><name pos:start="57:31" pos:end="57:34">wptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:58"><expr pos:start="61:9" pos:end="61:57"><name pos:start="61:9" pos:end="61:19">frame_bytes</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:37"><name pos:start="61:23" pos:end="61:25">enc</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:37">frame_size</name></name> <operator pos:start="61:39" pos:end="61:39">*</operator> <literal type="number" pos:start="61:41" pos:end="61:41">2</literal> <operator pos:start="61:43" pos:end="61:43">*</operator> <name pos:start="61:45" pos:end="61:57"><name pos:start="61:45" pos:end="61:47">enc</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:57">channels</name></name></expr>;</expr_stmt>

        

        <while pos:start="65:9" pos:end="75:9">while <condition pos:start="65:15" pos:end="67:43">(<expr pos:start="65:16" pos:end="67:42"><call pos:start="65:16" pos:end="67:37"><name pos:start="65:16" pos:end="65:24">fifo_read</name><argument_list pos:start="65:25" pos:end="67:37">(<argument pos:start="65:26" pos:end="65:35"><expr pos:start="65:26" pos:end="65:35"><operator pos:start="65:26" pos:end="65:26">&amp;</operator><name pos:start="65:27" pos:end="65:35"><name pos:start="65:27" pos:end="65:29">ost</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:35">fifo</name></name></expr></argument>, <argument pos:start="65:38" pos:end="65:46"><expr pos:start="65:38" pos:end="65:46"><name pos:start="65:38" pos:end="65:46">audio_buf</name></expr></argument>, <argument pos:start="65:49" pos:end="65:59"><expr pos:start="65:49" pos:end="65:59"><name pos:start="65:49" pos:end="65:59">frame_bytes</name></expr></argument>, 

                     <argument pos:start="67:22" pos:end="67:36"><expr pos:start="67:22" pos:end="67:36"><operator pos:start="67:22" pos:end="67:22">&amp;</operator><name pos:start="67:23" pos:end="67:36"><name pos:start="67:23" pos:end="67:25">ost</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:31">fifo</name><operator pos:start="67:32" pos:end="67:32">.</operator><name pos:start="67:33" pos:end="67:36">rptr</name></name></expr></argument>)</argument_list></call> <operator pos:start="67:39" pos:end="67:40">==</operator> <literal type="number" pos:start="67:42" pos:end="67:42">0</literal></expr>)</condition> <block pos:start="67:45" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:58">

            <expr_stmt pos:start="69:13" pos:end="71:59"><expr pos:start="69:13" pos:end="71:58"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="71:58"><name pos:start="69:19" pos:end="69:38">avcodec_encode_audio</name><argument_list pos:start="69:39" pos:end="71:58">(<argument pos:start="69:40" pos:end="69:42"><expr pos:start="69:40" pos:end="69:42"><name pos:start="69:40" pos:end="69:42">enc</name></expr></argument>, <argument pos:start="69:45" pos:end="69:53"><expr pos:start="69:45" pos:end="69:53"><name pos:start="69:45" pos:end="69:53">audio_out</name></expr></argument>, <argument pos:start="69:56" pos:end="69:72"><expr pos:start="69:56" pos:end="69:72"><sizeof pos:start="69:56" pos:end="69:72">sizeof<argument_list pos:start="69:62" pos:end="69:72">(<argument pos:start="69:63" pos:end="69:71"><expr pos:start="69:63" pos:end="69:71"><name pos:start="69:63" pos:end="69:71">audio_out</name></expr></argument>)</argument_list></sizeof></expr></argument>, 

                                       <argument pos:start="71:40" pos:end="71:57"><expr pos:start="71:40" pos:end="71:57"><operator pos:start="71:40" pos:end="71:40">(</operator><name pos:start="71:41" pos:end="71:45">short</name> <operator pos:start="71:47" pos:end="71:47">*</operator><operator pos:start="71:48" pos:end="71:48">)</operator><name pos:start="71:49" pos:end="71:57">audio_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:58"><expr pos:start="73:13" pos:end="73:57"><call pos:start="73:13" pos:end="73:57"><name pos:start="73:13" pos:end="73:26">av_write_frame</name><argument_list pos:start="73:27" pos:end="73:57">(<argument pos:start="73:28" pos:end="73:28"><expr pos:start="73:28" pos:end="73:28"><name pos:start="73:28" pos:end="73:28">s</name></expr></argument>, <argument pos:start="73:31" pos:end="73:40"><expr pos:start="73:31" pos:end="73:40"><name pos:start="73:31" pos:end="73:40"><name pos:start="73:31" pos:end="73:33">ost</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:40">index</name></name></expr></argument>, <argument pos:start="73:43" pos:end="73:51"><expr pos:start="73:43" pos:end="73:51"><name pos:start="73:43" pos:end="73:51">audio_out</name></expr></argument>, <argument pos:start="73:54" pos:end="73:56"><expr pos:start="73:54" pos:end="73:56"><name pos:start="73:54" pos:end="73:56">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="109:5">else <block pos:start="77:12" pos:end="109:5">{<block_content pos:start="83:9" pos:end="107:54">

        <comment type="block" pos:start="79:9" pos:end="79:32">/* output a pcm frame */</comment>

        <comment type="block" pos:start="81:9" pos:end="81:60">/* XXX: change encoding codec API to avoid this ? */</comment>

        <switch pos:start="83:9" pos:end="101:9">switch<condition pos:start="83:15" pos:end="83:30">(<expr pos:start="83:16" pos:end="83:29"><name pos:start="83:16" pos:end="83:29"><name pos:start="83:16" pos:end="83:18">enc</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:25">codec</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:29">id</name></name></expr>)</condition> <block pos:start="83:32" pos:end="101:9">{<block_content pos:start="85:9" pos:end="99:18">

        <case pos:start="85:9" pos:end="85:32">case <expr pos:start="85:14" pos:end="85:31"><name pos:start="85:14" pos:end="85:31">CODEC_ID_PCM_S16LE</name></expr>:</case>

        <case pos:start="87:9" pos:end="87:32">case <expr pos:start="87:14" pos:end="87:31"><name pos:start="87:14" pos:end="87:31">CODEC_ID_PCM_S16BE</name></expr>:</case>

        <case pos:start="89:9" pos:end="89:32">case <expr pos:start="89:14" pos:end="89:31"><name pos:start="89:14" pos:end="89:31">CODEC_ID_PCM_U16LE</name></expr>:</case>

        <case pos:start="91:9" pos:end="91:32">case <expr pos:start="91:14" pos:end="91:31"><name pos:start="91:14" pos:end="91:31">CODEC_ID_PCM_U16BE</name></expr>:</case>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <default pos:start="95:9" pos:end="95:16">default:</default>

            <expr_stmt pos:start="97:13" pos:end="97:37"><expr pos:start="97:13" pos:end="97:36"><name pos:start="97:13" pos:end="97:20">size_out</name> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:31">size_out</name> <operator pos:start="97:33" pos:end="97:34">&gt;&gt;</operator> <literal type="number" pos:start="97:36" pos:end="97:36">1</literal></expr>;</expr_stmt>

            <break pos:start="99:13" pos:end="99:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="103:9" pos:end="105:52"><expr pos:start="103:9" pos:end="105:51"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <call pos:start="103:15" pos:end="105:51"><name pos:start="103:15" pos:end="103:34">avcodec_encode_audio</name><argument_list pos:start="103:35" pos:end="105:51">(<argument pos:start="103:36" pos:end="103:38"><expr pos:start="103:36" pos:end="103:38"><name pos:start="103:36" pos:end="103:38">enc</name></expr></argument>, <argument pos:start="103:41" pos:end="103:49"><expr pos:start="103:41" pos:end="103:49"><name pos:start="103:41" pos:end="103:49">audio_out</name></expr></argument>, <argument pos:start="103:52" pos:end="103:59"><expr pos:start="103:52" pos:end="103:59"><name pos:start="103:52" pos:end="103:59">size_out</name></expr></argument>, 

				   <argument pos:start="105:36" pos:end="105:50"><expr pos:start="105:36" pos:end="105:50"><operator pos:start="105:36" pos:end="105:36">(</operator><name pos:start="105:37" pos:end="105:41">short</name> <operator pos:start="105:43" pos:end="105:43">*</operator><operator pos:start="105:44" pos:end="105:44">)</operator><name pos:start="105:45" pos:end="105:50">buftmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:54"><expr pos:start="107:9" pos:end="107:53"><call pos:start="107:9" pos:end="107:53"><name pos:start="107:9" pos:end="107:22">av_write_frame</name><argument_list pos:start="107:23" pos:end="107:53">(<argument pos:start="107:24" pos:end="107:24"><expr pos:start="107:24" pos:end="107:24"><name pos:start="107:24" pos:end="107:24">s</name></expr></argument>, <argument pos:start="107:27" pos:end="107:36"><expr pos:start="107:27" pos:end="107:36"><name pos:start="107:27" pos:end="107:36"><name pos:start="107:27" pos:end="107:29">ost</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:36">index</name></name></expr></argument>, <argument pos:start="107:39" pos:end="107:47"><expr pos:start="107:39" pos:end="107:47"><name pos:start="107:39" pos:end="107:47">audio_out</name></expr></argument>, <argument pos:start="107:50" pos:end="107:52"><expr pos:start="107:50" pos:end="107:52"><name pos:start="107:50" pos:end="107:52">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
