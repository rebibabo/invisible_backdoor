<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17887.c" pos:tabs="8"><function pos:start="1:1" pos:end="118:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">gdbserver_start</name><parameter_list pos:start="1:20" pos:end="1:39">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:32"><specifier pos:start="1:21" pos:end="1:25">const</specifier> <name pos:start="1:27" pos:end="1:30">char</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">device</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="118:1">{<block_content pos:start="5:5" pos:end="116:13">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">GDBState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:33"><name pos:start="7:10" pos:end="7:28">gdbstub_device_name</name><index pos:start="7:29" pos:end="7:33">[<expr pos:start="7:30" pos:end="7:32"><literal type="number" pos:start="7:30" pos:end="7:32">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">CharDriverState</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">chr</name> <init pos:start="9:26" pos:end="9:31">= <expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">CharDriverState</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:28">mon_chr</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:15">device</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="64:5"><if pos:start="19:5" pos:end="64:5">if <condition pos:start="19:8" pos:end="19:36">(<expr pos:start="19:9" pos:end="19:35"><call pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:14">strcmp</name><argument_list pos:start="19:15" pos:end="19:30">(<argument pos:start="19:16" pos:end="19:21"><expr pos:start="19:16" pos:end="19:21"><name pos:start="19:16" pos:end="19:21">device</name></expr></argument>, <argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><literal type="string" pos:start="19:24" pos:end="19:29">"none"</literal></expr></argument>)</argument_list></call> <operator pos:start="19:32" pos:end="19:33">!=</operator> <literal type="number" pos:start="19:35" pos:end="19:35">0</literal></expr>)</condition> <block pos:start="19:38" pos:end="64:5">{<block_content pos:start="21:9" pos:end="62:51">

        <if_stmt pos:start="21:9" pos:end="50:0"><if pos:start="21:9" pos:end="34:0">if <condition pos:start="21:12" pos:end="21:43">(<expr pos:start="21:13" pos:end="21:42"><call pos:start="21:13" pos:end="21:42"><name pos:start="21:13" pos:end="21:20">strstart</name><argument_list pos:start="21:21" pos:end="21:42">(<argument pos:start="21:22" pos:end="21:27"><expr pos:start="21:22" pos:end="21:27"><name pos:start="21:22" pos:end="21:27">device</name></expr></argument>, <argument pos:start="21:30" pos:end="21:35"><expr pos:start="21:30" pos:end="21:35"><literal type="string" pos:start="21:30" pos:end="21:35">"tcp:"</literal></expr></argument>, <argument pos:start="21:38" pos:end="21:41"><expr pos:start="21:38" pos:end="21:41"><name pos:start="21:38" pos:end="21:41">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:45" pos:end="34:0">{<block_content pos:start="25:13" pos:end="29:41">

            <comment type="block" pos:start="23:13" pos:end="23:49">/* enforce required TCP attributes */</comment>

            <expr_stmt pos:start="25:13" pos:end="27:57"><expr pos:start="25:13" pos:end="27:56"><call pos:start="25:13" pos:end="27:56"><name pos:start="25:13" pos:end="25:20">snprintf</name><argument_list pos:start="25:21" pos:end="27:56">(<argument pos:start="25:22" pos:end="25:40"><expr pos:start="25:22" pos:end="25:40"><name pos:start="25:22" pos:end="25:40">gdbstub_device_name</name></expr></argument>, <argument pos:start="25:43" pos:end="25:69"><expr pos:start="25:43" pos:end="25:69"><sizeof pos:start="25:43" pos:end="25:69">sizeof<argument_list pos:start="25:49" pos:end="25:69">(<argument pos:start="25:50" pos:end="25:68"><expr pos:start="25:50" pos:end="25:68"><name pos:start="25:50" pos:end="25:68">gdbstub_device_name</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="27:22" pos:end="27:47"><expr pos:start="27:22" pos:end="27:47"><literal type="string" pos:start="27:22" pos:end="27:47">"%s,nowait,nodelay,server"</literal></expr></argument>, <argument pos:start="27:50" pos:end="27:55"><expr pos:start="27:50" pos:end="27:55"><name pos:start="27:50" pos:end="27:55">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:41"><expr pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:18">device</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:40">gdbstub_device_name</name></expr>;</expr_stmt>

        </block_content>}</block></if>

<cpp:ifndef pos:start="33:1" pos:end="33:14">#<cpp:directive pos:start="33:2" pos:end="33:7">ifndef</cpp:directive> <name pos:start="33:9" pos:end="33:14">_WIN32</name></cpp:ifndef>

        <if type="elseif" pos:start="35:9" pos:end="50:0">else if <condition pos:start="35:17" pos:end="35:46">(<expr pos:start="35:18" pos:end="35:45"><call pos:start="35:18" pos:end="35:40"><name pos:start="35:18" pos:end="35:23">strcmp</name><argument_list pos:start="35:24" pos:end="35:40">(<argument pos:start="35:25" pos:end="35:30"><expr pos:start="35:25" pos:end="35:30"><name pos:start="35:25" pos:end="35:30">device</name></expr></argument>, <argument pos:start="35:33" pos:end="35:39"><expr pos:start="35:33" pos:end="35:39"><literal type="string" pos:start="35:33" pos:end="35:39">"stdio"</literal></expr></argument>)</argument_list></call> <operator pos:start="35:42" pos:end="35:43">==</operator> <literal type="number" pos:start="35:45" pos:end="35:45">0</literal></expr>)</condition> <block pos:start="35:48" pos:end="50:0">{<block_content pos:start="37:13" pos:end="45:42">

            <decl_stmt pos:start="37:13" pos:end="37:33"><decl pos:start="37:13" pos:end="37:32"><type pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:18">struct</name> <name pos:start="37:20" pos:end="37:28">sigaction</name></name></type> <name pos:start="37:30" pos:end="37:32">act</name></decl>;</decl_stmt>



            <expr_stmt pos:start="41:13" pos:end="41:41"><expr pos:start="41:13" pos:end="41:40"><call pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:18">memset</name><argument_list pos:start="41:19" pos:end="41:40">(<argument pos:start="41:20" pos:end="41:23"><expr pos:start="41:20" pos:end="41:23"><operator pos:start="41:20" pos:end="41:20">&amp;</operator><name pos:start="41:21" pos:end="41:23">act</name></expr></argument>, <argument pos:start="41:26" pos:end="41:26"><expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr></argument>, <argument pos:start="41:29" pos:end="41:39"><expr pos:start="41:29" pos:end="41:39"><sizeof pos:start="41:29" pos:end="41:39">sizeof<argument_list pos:start="41:35" pos:end="41:39">(<argument pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><name pos:start="41:36" pos:end="41:38">act</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:49"><expr pos:start="43:13" pos:end="43:48"><name pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:15">act</name><operator pos:start="43:16" pos:end="43:16">.</operator><name pos:start="43:17" pos:end="43:26">sa_handler</name></name> <operator pos:start="43:28" pos:end="43:28">=</operator> <name pos:start="43:30" pos:end="43:48">gdb_sigterm_handler</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:42"><expr pos:start="45:13" pos:end="45:41"><call pos:start="45:13" pos:end="45:41"><name pos:start="45:13" pos:end="45:21">sigaction</name><argument_list pos:start="45:22" pos:end="45:41">(<argument pos:start="45:23" pos:end="45:28"><expr pos:start="45:23" pos:end="45:28"><name pos:start="45:23" pos:end="45:28">SIGINT</name></expr></argument>, <argument pos:start="45:31" pos:end="45:34"><expr pos:start="45:31" pos:end="45:34"><operator pos:start="45:31" pos:end="45:31">&amp;</operator><name pos:start="45:32" pos:end="45:34">act</name></expr></argument>, <argument pos:start="45:37" pos:end="45:40"><expr pos:start="45:37" pos:end="45:40"><name pos:start="45:37" pos:end="45:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="51:9" pos:end="51:48"><expr pos:start="51:9" pos:end="51:47"><name pos:start="51:9" pos:end="51:11">chr</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:47"><name pos:start="51:15" pos:end="51:26">qemu_chr_new</name><argument_list pos:start="51:27" pos:end="51:47">(<argument pos:start="51:28" pos:end="51:32"><expr pos:start="51:28" pos:end="51:32"><literal type="string" pos:start="51:28" pos:end="51:32">"gdb"</literal></expr></argument>, <argument pos:start="51:35" pos:end="51:40"><expr pos:start="51:35" pos:end="51:40"><name pos:start="51:35" pos:end="51:40">device</name></expr></argument>, <argument pos:start="51:43" pos:end="51:46"><expr pos:start="51:43" pos:end="51:46"><name pos:start="51:43" pos:end="51:46">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:22"><if pos:start="53:9" pos:end="55:22">if <condition pos:start="53:12" pos:end="53:17">(<expr pos:start="53:13" pos:end="53:16"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:16">chr</name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:22"><block_content pos:start="55:13" pos:end="55:22">

            <return pos:start="55:13" pos:end="55:22">return <expr pos:start="55:20" pos:end="55:21"><operator pos:start="55:20" pos:end="55:20">-</operator><literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr>;</return></block_content></block></if></if_stmt>




        <expr_stmt pos:start="60:9" pos:end="62:51"><expr pos:start="60:9" pos:end="62:50"><call pos:start="60:9" pos:end="62:50"><name pos:start="60:9" pos:end="60:29">qemu_chr_add_handlers</name><argument_list pos:start="60:30" pos:end="62:50">(<argument pos:start="60:31" pos:end="60:33"><expr pos:start="60:31" pos:end="60:33"><name pos:start="60:31" pos:end="60:33">chr</name></expr></argument>, <argument pos:start="60:36" pos:end="60:54"><expr pos:start="60:36" pos:end="60:54"><name pos:start="60:36" pos:end="60:54">gdb_chr_can_receive</name></expr></argument>, <argument pos:start="60:57" pos:end="60:71"><expr pos:start="60:57" pos:end="60:71"><name pos:start="60:57" pos:end="60:71">gdb_chr_receive</name></expr></argument>,

                              <argument pos:start="62:31" pos:end="62:43"><expr pos:start="62:31" pos:end="62:43"><name pos:start="62:31" pos:end="62:43">gdb_chr_event</name></expr></argument>, <argument pos:start="62:46" pos:end="62:49"><expr pos:start="62:46" pos:end="62:49"><name pos:start="62:46" pos:end="62:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="68:5" pos:end="68:24"><expr pos:start="68:5" pos:end="68:23"><name pos:start="68:5" pos:end="68:5">s</name> <operator pos:start="68:7" pos:end="68:7">=</operator> <name pos:start="68:9" pos:end="68:23">gdbserver_state</name></expr>;</expr_stmt>

    <if_stmt pos:start="70:5" pos:end="100:5"><if pos:start="70:5" pos:end="90:5">if <condition pos:start="70:8" pos:end="70:11">(<expr pos:start="70:9" pos:end="70:10"><operator pos:start="70:9" pos:end="70:9">!</operator><name pos:start="70:10" pos:end="70:10">s</name></expr>)</condition> <block pos:start="70:13" pos:end="90:5">{<block_content pos:start="72:9" pos:end="88:33">

        <expr_stmt pos:start="72:9" pos:end="72:40"><expr pos:start="72:9" pos:end="72:39"><name pos:start="72:9" pos:end="72:9">s</name> <operator pos:start="72:11" pos:end="72:11">=</operator> <call pos:start="72:13" pos:end="72:39"><name pos:start="72:13" pos:end="72:21">g_malloc0</name><argument_list pos:start="72:22" pos:end="72:39">(<argument pos:start="72:23" pos:end="72:38"><expr pos:start="72:23" pos:end="72:38"><sizeof pos:start="72:23" pos:end="72:38">sizeof<argument_list pos:start="72:29" pos:end="72:38">(<argument pos:start="72:30" pos:end="72:37"><expr pos:start="72:30" pos:end="72:37"><name pos:start="72:30" pos:end="72:37">GDBState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="74:9" pos:end="74:28"><expr pos:start="74:9" pos:end="74:27"><name pos:start="74:9" pos:end="74:23">gdbserver_state</name> <operator pos:start="74:25" pos:end="74:25">=</operator> <name pos:start="74:27" pos:end="74:27">s</name></expr>;</expr_stmt>



        <expr_stmt pos:start="78:9" pos:end="78:68"><expr pos:start="78:9" pos:end="78:67"><call pos:start="78:9" pos:end="78:67"><name pos:start="78:9" pos:end="78:40">qemu_add_vm_change_state_handler</name><argument_list pos:start="78:41" pos:end="78:67">(<argument pos:start="78:42" pos:end="78:60"><expr pos:start="78:42" pos:end="78:60"><name pos:start="78:42" pos:end="78:60">gdb_vm_state_change</name></expr></argument>, <argument pos:start="78:63" pos:end="78:66"><expr pos:start="78:63" pos:end="78:66"><name pos:start="78:63" pos:end="78:66">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="82:9" pos:end="82:51">/* Initialize a monitor terminal for gdb */</comment>

        <expr_stmt pos:start="84:9" pos:end="84:46"><expr pos:start="84:9" pos:end="84:45"><name pos:start="84:9" pos:end="84:15">mon_chr</name> <operator pos:start="84:17" pos:end="84:17">=</operator> <call pos:start="84:19" pos:end="84:45"><name pos:start="84:19" pos:end="84:27">g_malloc0</name><argument_list pos:start="84:28" pos:end="84:45">(<argument pos:start="84:29" pos:end="84:44"><expr pos:start="84:29" pos:end="84:44"><sizeof pos:start="84:29" pos:end="84:44">sizeof<argument_list pos:start="84:35" pos:end="84:44">(<argument pos:start="84:36" pos:end="84:43"><expr pos:start="84:36" pos:end="84:43"><operator pos:start="84:36" pos:end="84:36">*</operator><name pos:start="84:37" pos:end="84:43">mon_chr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="86:9" pos:end="86:47"><expr pos:start="86:9" pos:end="86:46"><name pos:start="86:9" pos:end="86:26"><name pos:start="86:9" pos:end="86:15">mon_chr</name><operator pos:start="86:16" pos:end="86:17">-&gt;</operator><name pos:start="86:18" pos:end="86:26">chr_write</name></name> <operator pos:start="86:28" pos:end="86:28">=</operator> <name pos:start="86:30" pos:end="86:46">gdb_monitor_write</name></expr>;</expr_stmt>

        <expr_stmt pos:start="88:9" pos:end="88:33"><expr pos:start="88:9" pos:end="88:32"><call pos:start="88:9" pos:end="88:32"><name pos:start="88:9" pos:end="88:20">monitor_init</name><argument_list pos:start="88:21" pos:end="88:32">(<argument pos:start="88:22" pos:end="88:28"><expr pos:start="88:22" pos:end="88:28"><name pos:start="88:22" pos:end="88:28">mon_chr</name></expr></argument>, <argument pos:start="88:31" pos:end="88:31"><expr pos:start="88:31" pos:end="88:31"><literal type="number" pos:start="88:31" pos:end="88:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="90:7" pos:end="100:5">else <block pos:start="90:12" pos:end="100:5">{<block_content pos:start="92:9" pos:end="98:39">

        <if_stmt pos:start="92:9" pos:end="94:36"><if pos:start="92:9" pos:end="94:36">if <condition pos:start="92:12" pos:end="92:19">(<expr pos:start="92:13" pos:end="92:18"><name pos:start="92:13" pos:end="92:18"><name pos:start="92:13" pos:end="92:13">s</name><operator pos:start="92:14" pos:end="92:15">-&gt;</operator><name pos:start="92:16" pos:end="92:18">chr</name></name></expr>)</condition><block type="pseudo" pos:start="94:13" pos:end="94:36"><block_content pos:start="94:13" pos:end="94:36">

            <expr_stmt pos:start="94:13" pos:end="94:36"><expr pos:start="94:13" pos:end="94:35"><call pos:start="94:13" pos:end="94:35"><name pos:start="94:13" pos:end="94:27">qemu_chr_delete</name><argument_list pos:start="94:28" pos:end="94:35">(<argument pos:start="94:29" pos:end="94:34"><expr pos:start="94:29" pos:end="94:34"><name pos:start="94:29" pos:end="94:34"><name pos:start="94:29" pos:end="94:29">s</name><operator pos:start="94:30" pos:end="94:31">-&gt;</operator><name pos:start="94:32" pos:end="94:34">chr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="96:9" pos:end="96:29"><expr pos:start="96:9" pos:end="96:28"><name pos:start="96:9" pos:end="96:15">mon_chr</name> <operator pos:start="96:17" pos:end="96:17">=</operator> <name pos:start="96:19" pos:end="96:28"><name pos:start="96:19" pos:end="96:19">s</name><operator pos:start="96:20" pos:end="96:21">-&gt;</operator><name pos:start="96:22" pos:end="96:28">mon_chr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="98:9" pos:end="98:39"><expr pos:start="98:9" pos:end="98:38"><call pos:start="98:9" pos:end="98:38"><name pos:start="98:9" pos:end="98:14">memset</name><argument_list pos:start="98:15" pos:end="98:38">(<argument pos:start="98:16" pos:end="98:16"><expr pos:start="98:16" pos:end="98:16"><name pos:start="98:16" pos:end="98:16">s</name></expr></argument>, <argument pos:start="98:19" pos:end="98:19"><expr pos:start="98:19" pos:end="98:19"><literal type="number" pos:start="98:19" pos:end="98:19">0</literal></expr></argument>, <argument pos:start="98:22" pos:end="98:37"><expr pos:start="98:22" pos:end="98:37"><sizeof pos:start="98:22" pos:end="98:37">sizeof<argument_list pos:start="98:28" pos:end="98:37">(<argument pos:start="98:29" pos:end="98:36"><expr pos:start="98:29" pos:end="98:36"><name pos:start="98:29" pos:end="98:36">GDBState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="102:5" pos:end="102:25"><expr pos:start="102:5" pos:end="102:24"><name pos:start="102:5" pos:end="102:12"><name pos:start="102:5" pos:end="102:5">s</name><operator pos:start="102:6" pos:end="102:7">-&gt;</operator><name pos:start="102:8" pos:end="102:12">c_cpu</name></name> <operator pos:start="102:14" pos:end="102:14">=</operator> <name pos:start="102:16" pos:end="102:24">first_cpu</name></expr>;</expr_stmt>

    <expr_stmt pos:start="104:5" pos:end="104:25"><expr pos:start="104:5" pos:end="104:24"><name pos:start="104:5" pos:end="104:12"><name pos:start="104:5" pos:end="104:5">s</name><operator pos:start="104:6" pos:end="104:7">-&gt;</operator><name pos:start="104:8" pos:end="104:12">g_cpu</name></name> <operator pos:start="104:14" pos:end="104:14">=</operator> <name pos:start="104:16" pos:end="104:24">first_cpu</name></expr>;</expr_stmt>

    <expr_stmt pos:start="106:5" pos:end="106:17"><expr pos:start="106:5" pos:end="106:16"><name pos:start="106:5" pos:end="106:10"><name pos:start="106:5" pos:end="106:5">s</name><operator pos:start="106:6" pos:end="106:7">-&gt;</operator><name pos:start="106:8" pos:end="106:10">chr</name></name> <operator pos:start="106:12" pos:end="106:12">=</operator> <name pos:start="106:14" pos:end="106:16">chr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="108:5" pos:end="108:43"><expr pos:start="108:5" pos:end="108:42"><name pos:start="108:5" pos:end="108:12"><name pos:start="108:5" pos:end="108:5">s</name><operator pos:start="108:6" pos:end="108:7">-&gt;</operator><name pos:start="108:8" pos:end="108:12">state</name></name> <operator pos:start="108:14" pos:end="108:14">=</operator> <ternary pos:start="108:16" pos:end="108:42"><condition pos:start="108:16" pos:end="108:20"><expr pos:start="108:16" pos:end="108:18"><name pos:start="108:16" pos:end="108:18">chr</name></expr> ?</condition><then pos:start="108:22" pos:end="108:28"> <expr pos:start="108:22" pos:end="108:28"><name pos:start="108:22" pos:end="108:28">RS_IDLE</name></expr> </then><else pos:start="108:30" pos:end="108:42">: <expr pos:start="108:32" pos:end="108:42"><name pos:start="108:32" pos:end="108:42">RS_INACTIVE</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="110:5" pos:end="110:25"><expr pos:start="110:5" pos:end="110:24"><name pos:start="110:5" pos:end="110:14"><name pos:start="110:5" pos:end="110:5">s</name><operator pos:start="110:6" pos:end="110:7">-&gt;</operator><name pos:start="110:8" pos:end="110:14">mon_chr</name></name> <operator pos:start="110:16" pos:end="110:16">=</operator> <name pos:start="110:18" pos:end="110:24">mon_chr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="112:5" pos:end="112:33"><expr pos:start="112:5" pos:end="112:32"><name pos:start="112:5" pos:end="112:25"><name pos:start="112:5" pos:end="112:5">s</name><operator pos:start="112:6" pos:end="112:7">-&gt;</operator><name pos:start="112:8" pos:end="112:25">current_syscall_cb</name></name> <operator pos:start="112:27" pos:end="112:27">=</operator> <name pos:start="112:29" pos:end="112:32">NULL</name></expr>;</expr_stmt>



    <return pos:start="116:5" pos:end="116:13">return <expr pos:start="116:12" pos:end="116:12"><literal type="number" pos:start="116:12" pos:end="116:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
