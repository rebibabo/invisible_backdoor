<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9442.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">syborg_virtio_writel</name><parameter_list pos:start="1:33" pos:end="3:48">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:72"><decl pos:start="1:48" pos:end="1:72"><type pos:start="1:48" pos:end="1:72"><name pos:start="1:48" pos:end="1:65">target_phys_addr_t</name></type> <name pos:start="1:67" pos:end="1:72">offset</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:47"><decl pos:start="3:34" pos:end="3:47"><type pos:start="3:34" pos:end="3:47"><name pos:start="3:34" pos:end="3:41">uint32_t</name></type> <name pos:start="3:43" pos:end="3:47">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="93:5">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">SyborgVirtIOProxy</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:33">= <expr pos:start="7:28" pos:end="7:33"><name pos:start="7:28" pos:end="7:33">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">VirtIODevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">vdev</name> <init pos:start="9:24" pos:end="9:32">= <expr pos:start="9:26" pos:end="9:32"><name pos:start="9:26" pos:end="9:32"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:32">vdev</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:56"><expr pos:start="13:5" pos:end="13:55"><call pos:start="13:5" pos:end="13:55"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="13:55">(<argument pos:start="13:13" pos:end="13:34"><expr pos:start="13:13" pos:end="13:34"><literal type="string" pos:start="13:13" pos:end="13:34">"writel 0x%x = 0x%x\n"</literal></expr></argument>, <argument pos:start="13:37" pos:end="13:47"><expr pos:start="13:37" pos:end="13:47"><operator pos:start="13:37" pos:end="13:37">(</operator><name pos:start="13:38" pos:end="13:40">int</name><operator pos:start="13:41" pos:end="13:41">)</operator><name pos:start="13:42" pos:end="13:47">offset</name></expr></argument>, <argument pos:start="13:50" pos:end="13:54"><expr pos:start="13:50" pos:end="13:54"><name pos:start="13:50" pos:end="13:54">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:39">(<expr pos:start="15:9" pos:end="15:38"><name pos:start="15:9" pos:end="15:14">offset</name> <operator pos:start="15:16" pos:end="15:17">&gt;=</operator> <name pos:start="15:19" pos:end="15:38">SYBORG_VIRTIO_CONFIG</name></expr>)</condition> <block pos:start="15:41" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:43">

        <return pos:start="17:9" pos:end="19:43">return <expr pos:start="17:16" pos:end="19:42"><call pos:start="17:16" pos:end="19:42"><name pos:start="17:16" pos:end="17:35">virtio_config_writel</name><argument_list pos:start="17:36" pos:end="19:42">(<argument pos:start="17:37" pos:end="17:40"><expr pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:40">vdev</name></expr></argument>, <argument pos:start="17:43" pos:end="17:71"><expr pos:start="17:43" pos:end="17:71"><name pos:start="17:43" pos:end="17:48">offset</name> <operator pos:start="17:50" pos:end="17:50">-</operator> <name pos:start="17:52" pos:end="17:71">SYBORG_VIRTIO_CONFIG</name></expr></argument>,

                                    <argument pos:start="19:37" pos:end="19:41"><expr pos:start="19:37" pos:end="19:41"><name pos:start="19:37" pos:end="19:41">value</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="23:5" pos:end="93:5">switch <condition pos:start="23:12" pos:end="23:24">(<expr pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:18">offset</name> <operator pos:start="23:20" pos:end="23:21">&gt;&gt;</operator> <literal type="number" pos:start="23:23" pos:end="23:23">2</literal></expr>)</condition> <block pos:start="23:26" pos:end="93:5">{<block_content pos:start="25:5" pos:end="91:14">

    <case pos:start="25:5" pos:end="25:38">case <expr pos:start="25:10" pos:end="25:37"><name pos:start="25:10" pos:end="25:37">SYBORG_VIRTIO_GUEST_FEATURES</name></expr>:</case>

        <if_stmt pos:start="27:9" pos:end="29:44"><if pos:start="27:9" pos:end="29:44">if <condition pos:start="27:12" pos:end="27:31">(<expr pos:start="27:13" pos:end="27:30"><name pos:start="27:13" pos:end="27:30"><name pos:start="27:13" pos:end="27:16">vdev</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:30">set_features</name></name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:44"><block_content pos:start="29:13" pos:end="29:44">

            <expr_stmt pos:start="29:13" pos:end="29:44"><expr pos:start="29:13" pos:end="29:43"><call pos:start="29:13" pos:end="29:43"><name pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:16">vdev</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:30">set_features</name></name><argument_list pos:start="29:31" pos:end="29:43">(<argument pos:start="29:32" pos:end="29:35"><expr pos:start="29:32" pos:end="29:35"><name pos:start="29:32" pos:end="29:35">vdev</name></expr></argument>, <argument pos:start="29:38" pos:end="29:42"><expr pos:start="29:38" pos:end="29:42"><name pos:start="29:38" pos:end="29:42">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:12">vdev</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:28">guest_features</name></name> <operator pos:start="31:30" pos:end="31:30">=</operator> <name pos:start="31:32" pos:end="31:36">value</name></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:34">case <expr pos:start="35:10" pos:end="35:33"><name pos:start="35:10" pos:end="35:33">SYBORG_VIRTIO_QUEUE_BASE</name></expr>:</case>

        <if_stmt pos:start="37:9" pos:end="43:64"><if pos:start="37:9" pos:end="39:31">if <condition pos:start="37:12" pos:end="37:23">(<expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:17">value</name> <operator pos:start="37:19" pos:end="37:20">==</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:31"><block_content pos:start="39:13" pos:end="39:31">

            <expr_stmt pos:start="39:13" pos:end="39:31"><expr pos:start="39:13" pos:end="39:30"><call pos:start="39:13" pos:end="39:30"><name pos:start="39:13" pos:end="39:24">virtio_reset</name><argument_list pos:start="39:25" pos:end="39:30">(<argument pos:start="39:26" pos:end="39:29"><expr pos:start="39:26" pos:end="39:29"><name pos:start="39:26" pos:end="39:29">vdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="41:9" pos:end="43:64">else<block type="pseudo" pos:start="43:13" pos:end="43:64"><block_content pos:start="43:13" pos:end="43:64">

            <expr_stmt pos:start="43:13" pos:end="43:64"><expr pos:start="43:13" pos:end="43:63"><call pos:start="43:13" pos:end="43:63"><name pos:start="43:13" pos:end="43:33">virtio_queue_set_addr</name><argument_list pos:start="43:34" pos:end="43:63">(<argument pos:start="43:35" pos:end="43:38"><expr pos:start="43:35" pos:end="43:38"><name pos:start="43:35" pos:end="43:38">vdev</name></expr></argument>, <argument pos:start="43:41" pos:end="43:55"><expr pos:start="43:41" pos:end="43:55"><name pos:start="43:41" pos:end="43:55"><name pos:start="43:41" pos:end="43:44">vdev</name><operator pos:start="43:45" pos:end="43:46">-&gt;</operator><name pos:start="43:47" pos:end="43:55">queue_sel</name></name></expr></argument>, <argument pos:start="43:58" pos:end="43:62"><expr pos:start="43:58" pos:end="43:62"><name pos:start="43:58" pos:end="43:62">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:33">case <expr pos:start="47:10" pos:end="47:32"><name pos:start="47:10" pos:end="47:32">SYBORG_VIRTIO_QUEUE_SEL</name></expr>:</case>

        <if_stmt pos:start="49:9" pos:end="51:36"><if pos:start="49:9" pos:end="51:36">if <condition pos:start="49:12" pos:end="49:41">(<expr pos:start="49:13" pos:end="49:40"><name pos:start="49:13" pos:end="49:17">value</name> <operator pos:start="49:19" pos:end="49:19">&lt;</operator> <name pos:start="49:21" pos:end="49:40">VIRTIO_PCI_QUEUE_MAX</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:36"><block_content pos:start="51:13" pos:end="51:36">

            <expr_stmt pos:start="51:13" pos:end="51:36"><expr pos:start="51:13" pos:end="51:35"><name pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:16">vdev</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:27">queue_sel</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <name pos:start="51:31" pos:end="51:35">value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:36">case <expr pos:start="55:10" pos:end="55:35"><name pos:start="55:10" pos:end="55:35">SYBORG_VIRTIO_QUEUE_NOTIFY</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:41"><expr pos:start="57:9" pos:end="57:40"><call pos:start="57:9" pos:end="57:40"><name pos:start="57:9" pos:end="57:27">virtio_queue_notify</name><argument_list pos:start="57:28" pos:end="57:40">(<argument pos:start="57:29" pos:end="57:32"><expr pos:start="57:29" pos:end="57:32"><name pos:start="57:29" pos:end="57:32">vdev</name></expr></argument>, <argument pos:start="57:35" pos:end="57:39"><expr pos:start="57:35" pos:end="57:39"><name pos:start="57:35" pos:end="57:39">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:30">case <expr pos:start="61:10" pos:end="61:29"><name pos:start="61:10" pos:end="61:29">SYBORG_VIRTIO_STATUS</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:46"><expr pos:start="63:9" pos:end="63:45"><call pos:start="63:9" pos:end="63:45"><name pos:start="63:9" pos:end="63:25">virtio_set_status</name><argument_list pos:start="63:26" pos:end="63:45">(<argument pos:start="63:27" pos:end="63:30"><expr pos:start="63:27" pos:end="63:30"><name pos:start="63:27" pos:end="63:30">vdev</name></expr></argument>, <argument pos:start="63:33" pos:end="63:44"><expr pos:start="63:33" pos:end="63:44"><name pos:start="63:33" pos:end="63:37">value</name> <operator pos:start="63:39" pos:end="63:39">&amp;</operator> <literal type="number" pos:start="63:41" pos:end="63:44">0xFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:31"><if pos:start="65:9" pos:end="67:31">if <condition pos:start="65:12" pos:end="65:30">(<expr pos:start="65:13" pos:end="65:29"><name pos:start="65:13" pos:end="65:24"><name pos:start="65:13" pos:end="65:16">vdev</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:24">status</name></name> <operator pos:start="65:26" pos:end="65:27">==</operator> <literal type="number" pos:start="65:29" pos:end="65:29">0</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:31"><block_content pos:start="67:13" pos:end="67:31">

            <expr_stmt pos:start="67:13" pos:end="67:31"><expr pos:start="67:13" pos:end="67:30"><call pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:24">virtio_reset</name><argument_list pos:start="67:25" pos:end="67:30">(<argument pos:start="67:26" pos:end="67:29"><expr pos:start="67:26" pos:end="67:29"><name pos:start="67:26" pos:end="67:29">vdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:34">case <expr pos:start="71:10" pos:end="71:33"><name pos:start="71:10" pos:end="71:33">SYBORG_VIRTIO_INT_ENABLE</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:30"><expr pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:21">int_enable</name></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:29">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:32"><expr pos:start="75:9" pos:end="75:31"><call pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:25">virtio_update_irq</name><argument_list pos:start="75:26" pos:end="75:31">(<argument pos:start="75:27" pos:end="75:30"><expr pos:start="75:27" pos:end="75:30"><name pos:start="75:27" pos:end="75:30">vdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:34">case <expr pos:start="79:10" pos:end="79:33"><name pos:start="79:10" pos:end="79:33">SYBORG_VIRTIO_INT_STATUS</name></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:12">vdev</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:17">isr</name></name> <operator pos:start="81:19" pos:end="81:20">&amp;=</operator> <operator pos:start="81:22" pos:end="81:22">~</operator><name pos:start="81:23" pos:end="81:27">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:32"><expr pos:start="83:9" pos:end="83:31"><call pos:start="83:9" pos:end="83:31"><name pos:start="83:9" pos:end="83:25">virtio_update_irq</name><argument_list pos:start="83:26" pos:end="83:31">(<argument pos:start="83:27" pos:end="83:30"><expr pos:start="83:27" pos:end="83:30"><name pos:start="83:27" pos:end="83:30">vdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <default pos:start="87:5" pos:end="87:12">default:</default>

        <expr_stmt pos:start="89:9" pos:end="89:53"><expr pos:start="89:9" pos:end="89:52"><call pos:start="89:9" pos:end="89:52"><name pos:start="89:9" pos:end="89:12">BADF</name><argument_list pos:start="89:13" pos:end="89:52">(<argument pos:start="89:14" pos:end="89:38"><expr pos:start="89:14" pos:end="89:38"><literal type="string" pos:start="89:14" pos:end="89:38">"Bad write offset 0x%x\n"</literal></expr></argument>, <argument pos:start="89:41" pos:end="89:51"><expr pos:start="89:41" pos:end="89:51"><operator pos:start="89:41" pos:end="89:41">(</operator><name pos:start="89:42" pos:end="89:44">int</name><operator pos:start="89:45" pos:end="89:45">)</operator><name pos:start="89:46" pos:end="89:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
