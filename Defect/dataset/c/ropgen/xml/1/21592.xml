<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21592.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:37">yuv2rgb32_1</name>)<parameter_list pos:start="1:39" pos:end="11:56">(<parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:49">SwsContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">c</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:74"><decl pos:start="1:55" pos:end="1:74"><type pos:start="1:55" pos:end="1:74"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:68">uint16_t</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:74">buf0</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:60"><decl pos:start="3:40" pos:end="3:60"><type pos:start="3:40" pos:end="3:60"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:53">uint16_t</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:60">ubuf0</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:83"><decl pos:start="3:63" pos:end="3:83"><type pos:start="3:63" pos:end="3:83"><specifier pos:start="3:63" pos:end="3:67">const</specifier> <name pos:start="3:69" pos:end="3:76">uint16_t</name> <modifier pos:start="3:78" pos:end="3:78">*</modifier></type><name pos:start="3:79" pos:end="3:83">ubuf1</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:60"><decl pos:start="5:40" pos:end="5:60"><type pos:start="5:40" pos:end="5:60"><specifier pos:start="5:40" pos:end="5:44">const</specifier> <name pos:start="5:46" pos:end="5:53">uint16_t</name> <modifier pos:start="5:55" pos:end="5:55">*</modifier></type><name pos:start="5:56" pos:end="5:60">vbuf0</name></decl></parameter>, <parameter pos:start="5:63" pos:end="5:83"><decl pos:start="5:63" pos:end="5:83"><type pos:start="5:63" pos:end="5:83"><specifier pos:start="5:63" pos:end="5:67">const</specifier> <name pos:start="5:69" pos:end="5:76">uint16_t</name> <modifier pos:start="5:78" pos:end="5:78">*</modifier></type><name pos:start="5:79" pos:end="5:83">vbuf1</name></decl></parameter>,

                                       <parameter pos:start="7:40" pos:end="7:60"><decl pos:start="7:40" pos:end="7:60"><type pos:start="7:40" pos:end="7:60"><specifier pos:start="7:40" pos:end="7:44">const</specifier> <name pos:start="7:46" pos:end="7:53">uint16_t</name> <modifier pos:start="7:55" pos:end="7:55">*</modifier></type><name pos:start="7:56" pos:end="7:60">abuf0</name></decl></parameter>, <parameter pos:start="7:63" pos:end="7:75"><decl pos:start="7:63" pos:end="7:75"><type pos:start="7:63" pos:end="7:75"><name pos:start="7:63" pos:end="7:69">uint8_t</name> <modifier pos:start="7:71" pos:end="7:71">*</modifier></type><name pos:start="7:72" pos:end="7:75">dest</name></decl></parameter>,

                                       <parameter pos:start="9:40" pos:end="9:47"><decl pos:start="9:40" pos:end="9:47"><type pos:start="9:40" pos:end="9:47"><name pos:start="9:40" pos:end="9:42">int</name></type> <name pos:start="9:44" pos:end="9:47">dstW</name></decl></parameter>, <parameter pos:start="9:50" pos:end="9:60"><decl pos:start="9:50" pos:end="9:60"><type pos:start="9:50" pos:end="9:60"><name pos:start="9:50" pos:end="9:52">int</name></type> <name pos:start="9:54" pos:end="9:60">uvalpha</name></decl></parameter>, <parameter pos:start="9:63" pos:end="9:88"><decl pos:start="9:63" pos:end="9:88"><type pos:start="9:63" pos:end="9:88"><name pos:start="9:63" pos:end="9:78"><name pos:start="9:63" pos:end="9:66">enum</name> <name pos:start="9:68" pos:end="9:78">PixelFormat</name></name></type> <name pos:start="9:80" pos:end="9:88">dstFormat</name></decl></parameter>,

                                       <parameter pos:start="11:40" pos:end="11:48"><decl pos:start="11:40" pos:end="11:48"><type pos:start="11:40" pos:end="11:48"><name pos:start="11:40" pos:end="11:42">int</name></type> <name pos:start="11:44" pos:end="11:48">flags</name></decl></parameter>, <parameter pos:start="11:51" pos:end="11:55"><decl pos:start="11:51" pos:end="11:55"><type pos:start="11:51" pos:end="11:55"><name pos:start="11:51" pos:end="11:53">int</name></type> <name pos:start="11:55" pos:end="11:55">y</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="135:1">{<block_content pos:start="15:5" pos:end="133:5">

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:35"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">x86_reg</name></type> <name pos:start="15:13" pos:end="15:18">uv_off</name> <init pos:start="15:20" pos:end="15:35">= <expr pos:start="15:22" pos:end="15:35"><name pos:start="15:22" pos:end="15:30"><name pos:start="15:22" pos:end="15:22">c</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:30">uv_off</name></name> <operator pos:start="15:32" pos:end="15:33">&lt;&lt;</operator> <literal type="number" pos:start="15:35" pos:end="15:35">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:20"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:18">uint16_t</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:24">buf1</name><init pos:start="17:25" pos:end="17:30">= <expr pos:start="17:27" pos:end="17:30"><name pos:start="17:27" pos:end="17:30">buf0</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="17:33" pos:end="17:60">//FIXME needed for RGB1/BGR1</comment>



    <if_stmt pos:start="21:5" pos:end="133:5"><if pos:start="21:5" pos:end="77:5">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:15">uvalpha</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <literal type="number" pos:start="21:19" pos:end="21:22">2048</literal></expr>)</condition> <block pos:start="21:25" pos:end="77:5">{<block_content pos:start="23:9" pos:end="75:9"> <comment type="line" pos:start="21:27" pos:end="21:111">// note this is not correct (shifts chrominance by 0.5 pixels) but it is a bit faster</comment>

        <if_stmt pos:start="23:9" pos:end="75:9"><if pos:start="23:9" pos:end="49:9">if <condition pos:start="23:12" pos:end="23:49">(<expr pos:start="23:13" pos:end="23:48"><name pos:start="23:13" pos:end="23:32">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="23:34" pos:end="23:35">&amp;&amp;</operator> <name pos:start="23:37" pos:end="23:48"><name pos:start="23:37" pos:end="23:37">c</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:48">alpPixBuf</name></name></expr>)</condition> <block pos:start="23:51" pos:end="49:9">{<block_content pos:start="25:13" pos:end="47:14">

            <asm pos:start="25:13" pos:end="47:14">__asm__ <specifier pos:start="25:21" pos:end="25:28">volatile</specifier>(

                "mov %%"REG_b", "ESP_OFFSET"(%5)        \n\t"

                "mov        %4, %%"REG_b"               \n\t"

                "push %%"REG_BP"                        \n\t"

                YSCALEYUV2RGB1(%%REGBP, %5, %6)

                YSCALEYUV2RGB1_ALPHA(%%REGBP)

                WRITEBGR32(%%REGb, 8280(%5), %%REGBP, %%mm2, %%mm4, %%mm5, %%mm7, %%mm0, %%mm1, %%mm3, %%mm6)

                "pop %%"REG_BP"                         \n\t"

                "mov "ESP_OFFSET"(%5), %%"REG_b"        \n\t"

                :: "c" (buf0), "d" (abuf0), "S" (ubuf0), "D" (ubuf1), "m" (dest),

                   "a" (&amp;c-&gt;redDither), "m"(uv_off)

            );</asm>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="75:9">else <block pos:start="49:16" pos:end="75:9">{<block_content pos:start="51:13" pos:end="73:14">

            <asm pos:start="51:13" pos:end="73:14">__asm__ <specifier pos:start="51:21" pos:end="51:28">volatile</specifier>(

                "mov %%"REG_b", "ESP_OFFSET"(%5)        \n\t"

                "mov        %4, %%"REG_b"               \n\t"

                "push %%"REG_BP"                        \n\t"

                YSCALEYUV2RGB1(%%REGBP, %5, %6)

                "pcmpeqd %%mm7, %%mm7                   \n\t"

                WRITEBGR32(%%REGb, 8280(%5), %%REGBP, %%mm2, %%mm4, %%mm5, %%mm7, %%mm0, %%mm1, %%mm3, %%mm6)

                "pop %%"REG_BP"                         \n\t"

                "mov "ESP_OFFSET"(%5), %%"REG_b"        \n\t"

                :: "c" (buf0), "d" (buf1), "S" (ubuf0), "D" (ubuf1), "m" (dest),

                   "a" (&amp;c-&gt;redDither), "m"(uv_off)

            );</asm>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="133:5">else <block pos:start="77:12" pos:end="133:5">{<block_content pos:start="79:9" pos:end="131:9">

        <if_stmt pos:start="79:9" pos:end="131:9"><if pos:start="79:9" pos:end="105:9">if <condition pos:start="79:12" pos:end="79:49">(<expr pos:start="79:13" pos:end="79:48"><name pos:start="79:13" pos:end="79:32">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="79:34" pos:end="79:35">&amp;&amp;</operator> <name pos:start="79:37" pos:end="79:48"><name pos:start="79:37" pos:end="79:37">c</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:48">alpPixBuf</name></name></expr>)</condition> <block pos:start="79:51" pos:end="105:9">{<block_content pos:start="81:13" pos:end="103:14">

            <asm pos:start="81:13" pos:end="103:14">__asm__ <specifier pos:start="81:21" pos:end="81:28">volatile</specifier>(

                "mov %%"REG_b", "ESP_OFFSET"(%5)        \n\t"

                "mov        %4, %%"REG_b"               \n\t"

                "push %%"REG_BP"                        \n\t"

                YSCALEYUV2RGB1b(%%REGBP, %5, %6)

                YSCALEYUV2RGB1_ALPHA(%%REGBP)

                WRITEBGR32(%%REGb, 8280(%5), %%REGBP, %%mm2, %%mm4, %%mm5, %%mm7, %%mm0, %%mm1, %%mm3, %%mm6)

                "pop %%"REG_BP"                         \n\t"

                "mov "ESP_OFFSET"(%5), %%"REG_b"        \n\t"

                :: "c" (buf0), "d" (abuf0), "S" (ubuf0), "D" (ubuf1), "m" (dest),

                   "a" (&amp;c-&gt;redDither), "m"(uv_off)

            );</asm>

        </block_content>}</block></if> <else pos:start="105:11" pos:end="131:9">else <block pos:start="105:16" pos:end="131:9">{<block_content pos:start="107:13" pos:end="129:14">

            <asm pos:start="107:13" pos:end="129:14">__asm__ <specifier pos:start="107:21" pos:end="107:28">volatile</specifier>(

                "mov %%"REG_b", "ESP_OFFSET"(%5)        \n\t"

                "mov        %4, %%"REG_b"               \n\t"

                "push %%"REG_BP"                        \n\t"

                YSCALEYUV2RGB1b(%%REGBP, %5, %6)

                "pcmpeqd %%mm7, %%mm7                   \n\t"

                WRITEBGR32(%%REGb, 8280(%5), %%REGBP, %%mm2, %%mm4, %%mm5, %%mm7, %%mm0, %%mm1, %%mm3, %%mm6)

                "pop %%"REG_BP"                         \n\t"

                "mov "ESP_OFFSET"(%5), %%"REG_b"        \n\t"

                :: "c" (buf0), "d" (buf1), "S" (ubuf0), "D" (ubuf1), "m" (dest),

                   "a" (&amp;c-&gt;redDither), "m"(uv_off)

            );</asm>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
