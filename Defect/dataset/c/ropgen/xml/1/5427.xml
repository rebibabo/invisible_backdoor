<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5427.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">char</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:20">qemu_find_file</name><parameter_list pos:start="1:21" pos:end="1:48">(<parameter pos:start="1:22" pos:end="1:29"><decl pos:start="1:22" pos:end="1:29"><type pos:start="1:22" pos:end="1:29"><name pos:start="1:22" pos:end="1:24">int</name></type> <name pos:start="1:26" pos:end="1:29">type</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:47"><decl pos:start="1:32" pos:end="1:47"><type pos:start="1:32" pos:end="1:47"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:41">char</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:22">subdir</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">buf</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:47">/* Try the name as a straight path first */</comment>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:32">(<expr pos:start="15:9" pos:end="15:31"><call pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:14">access</name><argument_list pos:start="15:15" pos:end="15:26">(<argument pos:start="15:16" pos:end="15:19"><expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">name</name></expr></argument>, <argument pos:start="15:22" pos:end="15:25"><expr pos:start="15:22" pos:end="15:25"><name pos:start="15:22" pos:end="15:25">R_OK</name></expr></argument>)</argument_list></call> <operator pos:start="15:28" pos:end="15:29">==</operator> <literal type="number" pos:start="15:31" pos:end="15:31">0</literal></expr>)</condition> <block pos:start="15:34" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:30">

        <return pos:start="17:9" pos:end="17:30">return <expr pos:start="17:16" pos:end="17:29"><call pos:start="17:16" pos:end="17:29"><name pos:start="17:16" pos:end="17:23">g_strdup</name><argument_list pos:start="17:24" pos:end="17:29">(<argument pos:start="17:25" pos:end="17:28"><expr pos:start="17:25" pos:end="17:28"><name pos:start="17:25" pos:end="17:28">name</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="21:5" pos:end="39:5">switch <condition pos:start="21:12" pos:end="21:17">(<expr pos:start="21:13" pos:end="21:16"><name pos:start="21:13" pos:end="21:16">type</name></expr>)</condition> <block pos:start="21:19" pos:end="39:5">{<block_content pos:start="23:5" pos:end="37:16">

    <case pos:start="23:5" pos:end="23:29">case <expr pos:start="23:10" pos:end="23:28"><name pos:start="23:10" pos:end="23:28">QEMU_FILE_TYPE_BIOS</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:20"><expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:14">subdir</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="string" pos:start="25:18" pos:end="25:19">""</literal></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:31">case <expr pos:start="29:10" pos:end="29:30"><name pos:start="29:10" pos:end="29:30">QEMU_FILE_TYPE_KEYMAP</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:14">subdir</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="string" pos:start="31:18" pos:end="31:27">"keymaps/"</literal></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <default pos:start="35:5" pos:end="35:12">default:</default>

        <expr_stmt pos:start="37:9" pos:end="37:16"><expr pos:start="37:9" pos:end="37:15"><call pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:13">abort</name><argument_list pos:start="37:14" pos:end="37:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="41:5" pos:end="41:63"><expr pos:start="41:5" pos:end="41:62"><name pos:start="41:5" pos:end="41:7">len</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:26"><name pos:start="41:11" pos:end="41:16">strlen</name><argument_list pos:start="41:17" pos:end="41:26">(<argument pos:start="41:18" pos:end="41:25"><expr pos:start="41:18" pos:end="41:25"><name pos:start="41:18" pos:end="41:25">data_dir</name></expr></argument>)</argument_list></call> <operator pos:start="41:28" pos:end="41:28">+</operator> <call pos:start="41:30" pos:end="41:41"><name pos:start="41:30" pos:end="41:35">strlen</name><argument_list pos:start="41:36" pos:end="41:41">(<argument pos:start="41:37" pos:end="41:40"><expr pos:start="41:37" pos:end="41:40"><name pos:start="41:37" pos:end="41:40">name</name></expr></argument>)</argument_list></call> <operator pos:start="41:43" pos:end="41:43">+</operator> <call pos:start="41:45" pos:end="41:58"><name pos:start="41:45" pos:end="41:50">strlen</name><argument_list pos:start="41:51" pos:end="41:58">(<argument pos:start="41:52" pos:end="41:57"><expr pos:start="41:52" pos:end="41:57"><name pos:start="41:52" pos:end="41:57">subdir</name></expr></argument>)</argument_list></call> <operator pos:start="41:60" pos:end="41:60">+</operator> <literal type="number" pos:start="41:62" pos:end="41:62">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:25"><expr pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:7">buf</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:24"><name pos:start="43:11" pos:end="43:19">g_malloc0</name><argument_list pos:start="43:20" pos:end="43:24">(<argument pos:start="43:21" pos:end="43:23"><expr pos:start="43:21" pos:end="43:23"><name pos:start="43:21" pos:end="43:23">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:58"><expr pos:start="45:5" pos:end="45:57"><call pos:start="45:5" pos:end="45:57"><name pos:start="45:5" pos:end="45:12">snprintf</name><argument_list pos:start="45:13" pos:end="45:57">(<argument pos:start="45:14" pos:end="45:16"><expr pos:start="45:14" pos:end="45:16"><name pos:start="45:14" pos:end="45:16">buf</name></expr></argument>, <argument pos:start="45:19" pos:end="45:21"><expr pos:start="45:19" pos:end="45:21"><name pos:start="45:19" pos:end="45:21">len</name></expr></argument>, <argument pos:start="45:24" pos:end="45:32"><expr pos:start="45:24" pos:end="45:32"><literal type="string" pos:start="45:24" pos:end="45:32">"%s/%s%s"</literal></expr></argument>, <argument pos:start="45:35" pos:end="45:42"><expr pos:start="45:35" pos:end="45:42"><name pos:start="45:35" pos:end="45:42">data_dir</name></expr></argument>, <argument pos:start="45:45" pos:end="45:50"><expr pos:start="45:45" pos:end="45:50"><name pos:start="45:45" pos:end="45:50">subdir</name></expr></argument>, <argument pos:start="45:53" pos:end="45:56"><expr pos:start="45:53" pos:end="45:56"><name pos:start="45:53" pos:end="45:56">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:26">(<expr pos:start="47:9" pos:end="47:25"><call pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:14">access</name><argument_list pos:start="47:15" pos:end="47:25">(<argument pos:start="47:16" pos:end="47:18"><expr pos:start="47:16" pos:end="47:18"><name pos:start="47:16" pos:end="47:18">buf</name></expr></argument>, <argument pos:start="47:21" pos:end="47:24"><expr pos:start="47:21" pos:end="47:24"><name pos:start="47:21" pos:end="47:24">R_OK</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:28" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:20">

        <expr_stmt pos:start="49:9" pos:end="49:20"><expr pos:start="49:9" pos:end="49:19"><call pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:14">g_free</name><argument_list pos:start="49:15" pos:end="49:19">(<argument pos:start="49:16" pos:end="49:18"><expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:20">return <expr pos:start="51:16" pos:end="51:19"><name pos:start="51:16" pos:end="51:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="55:5" pos:end="55:15">return <expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
