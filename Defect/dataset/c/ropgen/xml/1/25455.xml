<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25455.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:23"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">pcm_dvd_decode_frame</name><parameter_list pos:start="1:32" pos:end="3:68">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:65"><decl pos:start="1:56" pos:end="1:65"><type pos:start="1:56" pos:end="1:65"><name pos:start="1:56" pos:end="1:59">void</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">data</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><name pos:start="3:33" pos:end="3:35">int</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:50">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:67"><decl pos:start="3:53" pos:end="3:67"><type pos:start="3:53" pos:end="3:67"><name pos:start="3:53" pos:end="3:60">AVPacket</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:67">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="129:23">{<block_content pos:start="7:5" pos:end="129:23">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">frame</name>     <init pos:start="7:24" pos:end="7:29">= <expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">src</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name>       <init pos:start="11:24" pos:end="11:36">= <expr pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:30">avpkt</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">PCMDVDContext</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:20">s</name>   <init pos:start="13:24" pos:end="13:41">= <expr pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:30">avctx</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">retval</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">blocks</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:14"><decl pos:start="19:5" pos:end="19:13"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:8">void</name> <modifier pos:start="19:10" pos:end="19:10">*</modifier></type><name pos:start="19:11" pos:end="19:13">dst</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="129:23"><if pos:start="23:5" pos:end="129:23">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:16">buf_size</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <literal type="number" pos:start="23:20" pos:end="23:20">3</literal></expr>)</condition> <block pos:start="23:23" pos:end="129:23">{<block_content pos:start="25:9" pos:end="129:23">

        <expr_stmt pos:start="25:9" pos:end="25:62"><expr pos:start="25:9" pos:end="25:61"><call pos:start="25:9" pos:end="25:61"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:61">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:37" pos:end="25:60"><expr pos:start="25:37" pos:end="25:60"><literal type="string" pos:start="25:37" pos:end="25:60">"PCM packet too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:35">return <expr pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:34">AVERROR_INVALIDDATA</name></expr>;</return>




    <if_stmt pos:start="32:5" pos:end="34:22"><if pos:start="32:5" pos:end="34:22">if <condition pos:start="32:8" pos:end="32:52">(<expr pos:start="32:9" pos:end="32:51"><operator pos:start="32:9" pos:end="32:9">(</operator><name pos:start="32:10" pos:end="32:15">retval</name> <operator pos:start="32:17" pos:end="32:17">=</operator> <call pos:start="32:19" pos:end="32:50"><name pos:start="32:19" pos:end="32:38">pcm_dvd_parse_header</name><argument_list pos:start="32:39" pos:end="32:50">(<argument pos:start="32:40" pos:end="32:44"><expr pos:start="32:40" pos:end="32:44"><name pos:start="32:40" pos:end="32:44">avctx</name></expr></argument>, <argument pos:start="32:47" pos:end="32:49"><expr pos:start="32:47" pos:end="32:49"><name pos:start="32:47" pos:end="32:49">src</name></expr></argument>)</argument_list></call><operator pos:start="32:51" pos:end="32:51">)</operator></expr>)</condition><block type="pseudo" pos:start="34:9" pos:end="34:22"><block_content pos:start="34:9" pos:end="34:22">

        <return pos:start="34:9" pos:end="34:22">return <expr pos:start="34:16" pos:end="34:21"><name pos:start="34:16" pos:end="34:21">retval</name></expr>;</return></block_content></block></if></if_stmt>






    <expr_stmt pos:start="41:5" pos:end="41:18"><expr pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:7">src</name>      <operator pos:start="41:14" pos:end="41:15">+=</operator> <literal type="number" pos:start="41:17" pos:end="41:17">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:18"><expr pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:12">buf_size</name> <operator pos:start="43:14" pos:end="43:15">-=</operator> <literal type="number" pos:start="43:17" pos:end="43:17">3</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:64"><expr pos:start="47:5" pos:end="47:63"><name pos:start="47:5" pos:end="47:10">blocks</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <operator pos:start="47:14" pos:end="47:14">(</operator><name pos:start="47:15" pos:end="47:22">buf_size</name> <operator pos:start="47:24" pos:end="47:24">+</operator> <name pos:start="47:26" pos:end="47:46"><name pos:start="47:26" pos:end="47:26">s</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:46">extra_sample_count</name></name><operator pos:start="47:47" pos:end="47:47">)</operator> <operator pos:start="47:49" pos:end="47:49">/</operator> <name pos:start="47:51" pos:end="47:63"><name pos:start="47:51" pos:end="47:51">s</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:63">block_size</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:27">/* get output buffer */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:54"><expr pos:start="53:5" pos:end="53:53"><name pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:9">frame</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:21">nb_samples</name></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <name pos:start="53:25" pos:end="53:30">blocks</name> <operator pos:start="53:32" pos:end="53:32">*</operator> <name pos:start="53:34" pos:end="53:53"><name pos:start="53:34" pos:end="53:34">s</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:53">samples_per_block</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="129:23"><if pos:start="55:5" pos:end="129:23">if <condition pos:start="55:8" pos:end="55:54">(<expr pos:start="55:9" pos:end="55:53"><operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:15">retval</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:48"><name pos:start="55:19" pos:end="55:31">ff_get_buffer</name><argument_list pos:start="55:32" pos:end="55:48">(<argument pos:start="55:33" pos:end="55:37"><expr pos:start="55:33" pos:end="55:37"><name pos:start="55:33" pos:end="55:37">avctx</name></expr></argument>, <argument pos:start="55:40" pos:end="55:44"><expr pos:start="55:40" pos:end="55:44"><name pos:start="55:40" pos:end="55:44">frame</name></expr></argument>, <argument pos:start="55:47" pos:end="55:47"><expr pos:start="55:47" pos:end="55:47"><literal type="number" pos:start="55:47" pos:end="55:47">0</literal></expr></argument>)</argument_list></call><operator pos:start="55:49" pos:end="55:49">)</operator> <operator pos:start="55:51" pos:end="55:51">&lt;</operator> <literal type="number" pos:start="55:53" pos:end="55:53">0</literal></expr>)</condition> <block pos:start="55:56" pos:end="129:23">{<block_content pos:start="57:9" pos:end="129:23">

        <expr_stmt pos:start="57:9" pos:end="57:61"><expr pos:start="57:9" pos:end="57:60"><call pos:start="57:9" pos:end="57:60"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="57:60">(<argument pos:start="57:16" pos:end="57:20"><expr pos:start="57:16" pos:end="57:20"><name pos:start="57:16" pos:end="57:20">avctx</name></expr></argument>, <argument pos:start="57:23" pos:end="57:34"><expr pos:start="57:23" pos:end="57:34"><name pos:start="57:23" pos:end="57:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:37" pos:end="57:59"><expr pos:start="57:37" pos:end="57:59"><literal type="string" pos:start="57:37" pos:end="57:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:22">return <expr pos:start="59:16" pos:end="59:21"><name pos:start="59:16" pos:end="59:21">retval</name></expr>;</return>


    <expr_stmt pos:start="62:5" pos:end="62:25"><expr pos:start="62:5" pos:end="62:24"><name pos:start="62:5" pos:end="62:7">dst</name> <operator pos:start="62:9" pos:end="62:9">=</operator> <name pos:start="62:11" pos:end="62:24"><name pos:start="62:11" pos:end="62:15">frame</name><operator pos:start="62:16" pos:end="62:17">-&gt;</operator><name pos:start="62:18" pos:end="62:21">data</name><index pos:start="62:22" pos:end="62:24">[<expr pos:start="62:23" pos:end="62:23"><literal type="number" pos:start="62:23" pos:end="62:23">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="66:5" pos:end="66:51">/* consume leftover samples from last packet */</comment>

    <if_stmt pos:start="68:5" pos:end="129:23"><if pos:start="68:5" pos:end="129:23">if <condition pos:start="68:8" pos:end="68:30">(<expr pos:start="68:9" pos:end="68:29"><name pos:start="68:9" pos:end="68:29"><name pos:start="68:9" pos:end="68:9">s</name><operator pos:start="68:10" pos:end="68:11">-&gt;</operator><name pos:start="68:12" pos:end="68:29">extra_sample_count</name></name></expr>)</condition> <block pos:start="68:32" pos:end="129:23">{<block_content pos:start="70:9" pos:end="129:23">

        <decl_stmt pos:start="70:9" pos:end="70:68"><decl pos:start="70:9" pos:end="70:67"><type pos:start="70:9" pos:end="70:11"><name pos:start="70:9" pos:end="70:11">int</name></type> <name pos:start="70:13" pos:end="70:27">missing_samples</name> <init pos:start="70:29" pos:end="70:67">= <expr pos:start="70:31" pos:end="70:67"><name pos:start="70:31" pos:end="70:43"><name pos:start="70:31" pos:end="70:31">s</name><operator pos:start="70:32" pos:end="70:33">-&gt;</operator><name pos:start="70:34" pos:end="70:43">block_size</name></name> <operator pos:start="70:45" pos:end="70:45">-</operator> <name pos:start="70:47" pos:end="70:67"><name pos:start="70:47" pos:end="70:47">s</name><operator pos:start="70:48" pos:end="70:49">-&gt;</operator><name pos:start="70:50" pos:end="70:67">extra_sample_count</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="72:9" pos:end="129:23"><if pos:start="72:9" pos:end="87:9">if <condition pos:start="72:12" pos:end="72:40">(<expr pos:start="72:13" pos:end="72:39"><name pos:start="72:13" pos:end="72:20">buf_size</name> <operator pos:start="72:22" pos:end="72:23">&gt;=</operator> <name pos:start="72:25" pos:end="72:39">missing_samples</name></expr>)</condition> <block pos:start="72:42" pos:end="87:9">{<block_content pos:start="74:13" pos:end="85:21">

            <expr_stmt pos:start="74:13" pos:end="76:36"><expr pos:start="74:13" pos:end="76:35"><call pos:start="74:13" pos:end="76:35"><name pos:start="74:13" pos:end="74:18">memcpy</name><argument_list pos:start="74:19" pos:end="76:35">(<argument pos:start="74:20" pos:end="74:59"><expr pos:start="74:20" pos:end="74:59"><name pos:start="74:20" pos:end="74:35"><name pos:start="74:20" pos:end="74:20">s</name><operator pos:start="74:21" pos:end="74:22">-&gt;</operator><name pos:start="74:23" pos:end="74:35">extra_samples</name></name> <operator pos:start="74:37" pos:end="74:37">+</operator> <name pos:start="74:39" pos:end="74:59"><name pos:start="74:39" pos:end="74:39">s</name><operator pos:start="74:40" pos:end="74:41">-&gt;</operator><name pos:start="74:42" pos:end="74:59">extra_sample_count</name></name></expr></argument>, <argument pos:start="74:62" pos:end="74:64"><expr pos:start="74:62" pos:end="74:64"><name pos:start="74:62" pos:end="74:64">src</name></expr></argument>,

                   <argument pos:start="76:20" pos:end="76:34"><expr pos:start="76:20" pos:end="76:34"><name pos:start="76:20" pos:end="76:34">missing_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="78:13" pos:end="78:74"><expr pos:start="78:13" pos:end="78:73"><name pos:start="78:13" pos:end="78:15">dst</name> <operator pos:start="78:17" pos:end="78:17">=</operator> <call pos:start="78:19" pos:end="78:73"><name pos:start="78:19" pos:end="78:40">pcm_dvd_decode_samples</name><argument_list pos:start="78:41" pos:end="78:73">(<argument pos:start="78:42" pos:end="78:46"><expr pos:start="78:42" pos:end="78:46"><name pos:start="78:42" pos:end="78:46">avctx</name></expr></argument>, <argument pos:start="78:49" pos:end="78:64"><expr pos:start="78:49" pos:end="78:64"><name pos:start="78:49" pos:end="78:64"><name pos:start="78:49" pos:end="78:49">s</name><operator pos:start="78:50" pos:end="78:51">-&gt;</operator><name pos:start="78:52" pos:end="78:64">extra_samples</name></name></expr></argument>, <argument pos:start="78:67" pos:end="78:69"><expr pos:start="78:67" pos:end="78:69"><name pos:start="78:67" pos:end="78:69">dst</name></expr></argument>, <argument pos:start="78:72" pos:end="78:72"><expr pos:start="78:72" pos:end="78:72"><literal type="number" pos:start="78:72" pos:end="78:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="80:13" pos:end="80:35"><expr pos:start="80:13" pos:end="80:34"><name pos:start="80:13" pos:end="80:15">src</name> <operator pos:start="80:17" pos:end="80:18">+=</operator> <name pos:start="80:20" pos:end="80:34">missing_samples</name></expr>;</expr_stmt>

            <expr_stmt pos:start="82:13" pos:end="82:40"><expr pos:start="82:13" pos:end="82:39"><name pos:start="82:13" pos:end="82:20">buf_size</name> <operator pos:start="82:22" pos:end="82:23">-=</operator> <name pos:start="82:25" pos:end="82:39">missing_samples</name></expr>;</expr_stmt>


            <expr_stmt pos:start="85:13" pos:end="85:21"><expr pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:18">blocks</name><operator pos:start="85:19" pos:end="85:20">--</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="87:11" pos:end="129:23">else <block pos:start="87:16" pos:end="129:23">{<block_content pos:start="91:13" pos:end="129:23">

            <comment type="block" pos:start="89:13" pos:end="89:62">/* new packet still doesn't have enough samples */</comment>

            <expr_stmt pos:start="91:13" pos:end="91:76"><expr pos:start="91:13" pos:end="91:75"><call pos:start="91:13" pos:end="91:75"><name pos:start="91:13" pos:end="91:18">memcpy</name><argument_list pos:start="91:19" pos:end="91:75">(<argument pos:start="91:20" pos:end="91:59"><expr pos:start="91:20" pos:end="91:59"><name pos:start="91:20" pos:end="91:35"><name pos:start="91:20" pos:end="91:20">s</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:35">extra_samples</name></name> <operator pos:start="91:37" pos:end="91:37">+</operator> <name pos:start="91:39" pos:end="91:59"><name pos:start="91:39" pos:end="91:39">s</name><operator pos:start="91:40" pos:end="91:41">-&gt;</operator><name pos:start="91:42" pos:end="91:59">extra_sample_count</name></name></expr></argument>, <argument pos:start="91:62" pos:end="91:64"><expr pos:start="91:62" pos:end="91:64"><name pos:start="91:62" pos:end="91:64">src</name></expr></argument>, <argument pos:start="91:67" pos:end="91:74"><expr pos:start="91:67" pos:end="91:74"><name pos:start="91:67" pos:end="91:74">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:46"><expr pos:start="93:13" pos:end="93:45"><name pos:start="93:13" pos:end="93:33"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:33">extra_sample_count</name></name> <operator pos:start="93:35" pos:end="93:36">+=</operator> <name pos:start="93:38" pos:end="93:45">buf_size</name></expr>;</expr_stmt>

            <return pos:start="95:13" pos:end="95:31">return <expr pos:start="95:20" pos:end="95:30"><name pos:start="95:20" pos:end="95:30"><name pos:start="95:20" pos:end="95:24">avpkt</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:30">size</name></name></expr>;</return>





    <comment type="block" pos:start="101:5" pos:end="101:43">/* decode remaining complete samples */</comment>

    <if_stmt pos:start="103:5" pos:end="129:23"><if pos:start="103:5" pos:end="129:23">if <condition pos:start="103:8" pos:end="103:15">(<expr pos:start="103:9" pos:end="103:14"><name pos:start="103:9" pos:end="103:14">blocks</name></expr>)</condition> <block pos:start="103:17" pos:end="129:23">{<block_content pos:start="105:9" pos:end="129:23">

        <expr_stmt pos:start="105:9" pos:end="105:56"><expr pos:start="105:9" pos:end="105:55"><call pos:start="105:9" pos:end="105:55"><name pos:start="105:9" pos:end="105:30">pcm_dvd_decode_samples</name><argument_list pos:start="105:31" pos:end="105:55">(<argument pos:start="105:32" pos:end="105:36"><expr pos:start="105:32" pos:end="105:36"><name pos:start="105:32" pos:end="105:36">avctx</name></expr></argument>, <argument pos:start="105:39" pos:end="105:41"><expr pos:start="105:39" pos:end="105:41"><name pos:start="105:39" pos:end="105:41">src</name></expr></argument>, <argument pos:start="105:44" pos:end="105:46"><expr pos:start="105:44" pos:end="105:46"><name pos:start="105:44" pos:end="105:46">dst</name></expr></argument>, <argument pos:start="105:49" pos:end="105:54"><expr pos:start="105:49" pos:end="105:54"><name pos:start="105:49" pos:end="105:54">blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:43"><expr pos:start="107:9" pos:end="107:42"><name pos:start="107:9" pos:end="107:16">buf_size</name> <operator pos:start="107:18" pos:end="107:19">-=</operator> <name pos:start="107:21" pos:end="107:26">blocks</name> <operator pos:start="107:28" pos:end="107:28">*</operator> <name pos:start="107:30" pos:end="107:42"><name pos:start="107:30" pos:end="107:30">s</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:42">block_size</name></name></expr>;</expr_stmt>




    <comment type="block" pos:start="112:5" pos:end="112:32">/* store leftover samples */</comment>

    <if_stmt pos:start="114:5" pos:end="129:23"><if pos:start="114:5" pos:end="129:23">if <condition pos:start="114:8" pos:end="114:17">(<expr pos:start="114:9" pos:end="114:16"><name pos:start="114:9" pos:end="114:16">buf_size</name></expr>)</condition> <block pos:start="114:19" pos:end="129:23">{<block_content pos:start="116:9" pos:end="129:23">

        <expr_stmt pos:start="116:9" pos:end="116:38"><expr pos:start="116:9" pos:end="116:37"><name pos:start="116:9" pos:end="116:11">src</name> <operator pos:start="116:13" pos:end="116:14">+=</operator> <name pos:start="116:16" pos:end="116:21">blocks</name> <operator pos:start="116:23" pos:end="116:23">*</operator> <name pos:start="116:25" pos:end="116:37"><name pos:start="116:25" pos:end="116:25">s</name><operator pos:start="116:26" pos:end="116:27">-&gt;</operator><name pos:start="116:28" pos:end="116:37">block_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="118:9" pos:end="118:48"><expr pos:start="118:9" pos:end="118:47"><call pos:start="118:9" pos:end="118:47"><name pos:start="118:9" pos:end="118:14">memcpy</name><argument_list pos:start="118:15" pos:end="118:47">(<argument pos:start="118:16" pos:end="118:31"><expr pos:start="118:16" pos:end="118:31"><name pos:start="118:16" pos:end="118:31"><name pos:start="118:16" pos:end="118:16">s</name><operator pos:start="118:17" pos:end="118:18">-&gt;</operator><name pos:start="118:19" pos:end="118:31">extra_samples</name></name></expr></argument>, <argument pos:start="118:34" pos:end="118:36"><expr pos:start="118:34" pos:end="118:36"><name pos:start="118:34" pos:end="118:36">src</name></expr></argument>, <argument pos:start="118:39" pos:end="118:46"><expr pos:start="118:39" pos:end="118:46"><name pos:start="118:39" pos:end="118:46">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="120:9" pos:end="120:41"><expr pos:start="120:9" pos:end="120:40"><name pos:start="120:9" pos:end="120:29"><name pos:start="120:9" pos:end="120:9">s</name><operator pos:start="120:10" pos:end="120:11">-&gt;</operator><name pos:start="120:12" pos:end="120:29">extra_sample_count</name></name> <operator pos:start="120:31" pos:end="120:31">=</operator> <name pos:start="120:33" pos:end="120:40">buf_size</name></expr>;</expr_stmt>




    <expr_stmt pos:start="125:5" pos:end="125:23"><expr pos:start="125:5" pos:end="125:22"><operator pos:start="125:5" pos:end="125:5">*</operator><name pos:start="125:6" pos:end="125:18">got_frame_ptr</name> <operator pos:start="125:20" pos:end="125:20">=</operator> <literal type="number" pos:start="125:22" pos:end="125:22">1</literal></expr>;</expr_stmt>



    <return pos:start="129:5" pos:end="129:23">return <expr pos:start="129:12" pos:end="129:22"><name pos:start="129:12" pos:end="129:22"><name pos:start="129:12" pos:end="129:16">avpkt</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:22">size</name></name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
