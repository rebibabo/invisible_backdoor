<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5159.c" pos:tabs="8"><function pos:start="1:1" pos:end="60:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">socket_open_listen</name><parameter_list pos:start="1:30" pos:end="1:58">(<parameter pos:start="1:31" pos:end="1:57"><decl pos:start="1:31" pos:end="1:57"><type pos:start="1:31" pos:end="1:57"><name pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:36">struct</name> <name pos:start="1:38" pos:end="1:48">sockaddr_in</name></name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:57">my_addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="60:1">{<block_content pos:start="5:5" pos:end="58:21">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">server_fd</name></decl>, <decl pos:start="5:20" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:22">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:46"><expr pos:start="9:5" pos:end="9:45"><name pos:start="9:5" pos:end="9:13">server_fd</name> <operator pos:start="9:15" pos:end="9:15">=</operator> <call pos:start="9:17" pos:end="9:45"><name pos:start="9:17" pos:end="9:22">socket</name><argument_list pos:start="9:23" pos:end="9:45">(<argument pos:start="9:24" pos:end="9:30"><expr pos:start="9:24" pos:end="9:30"><name pos:start="9:24" pos:end="9:30">AF_INET</name></expr></argument>,<argument pos:start="9:32" pos:end="9:42"><expr pos:start="9:32" pos:end="9:42"><name pos:start="9:32" pos:end="9:42">SOCK_STREAM</name></expr></argument>,<argument pos:start="9:44" pos:end="9:44"><expr pos:start="9:44" pos:end="9:44"><literal type="number" pos:start="9:44" pos:end="9:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:17">server_fd</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr>)</condition> <block pos:start="11:24" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:18">

        <expr_stmt pos:start="13:9" pos:end="13:26"><expr pos:start="13:9" pos:end="13:25"><call pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:14">perror</name> <argument_list pos:start="13:16" pos:end="13:25">(<argument pos:start="13:17" pos:end="13:24"><expr pos:start="13:17" pos:end="13:24"><literal type="string" pos:start="13:17" pos:end="13:24">"socket"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:12"><expr pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:7">tmp</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <literal type="number" pos:start="21:11" pos:end="21:11">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:71"><expr pos:start="23:5" pos:end="23:70"><call pos:start="23:5" pos:end="23:70"><name pos:start="23:5" pos:end="23:14">setsockopt</name><argument_list pos:start="23:15" pos:end="23:70">(<argument pos:start="23:16" pos:end="23:24"><expr pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:24">server_fd</name></expr></argument>, <argument pos:start="23:27" pos:end="23:36"><expr pos:start="23:27" pos:end="23:36"><name pos:start="23:27" pos:end="23:36">SOL_SOCKET</name></expr></argument>, <argument pos:start="23:39" pos:end="23:50"><expr pos:start="23:39" pos:end="23:50"><name pos:start="23:39" pos:end="23:50">SO_REUSEADDR</name></expr></argument>, <argument pos:start="23:53" pos:end="23:56"><expr pos:start="23:53" pos:end="23:56"><operator pos:start="23:53" pos:end="23:53">&amp;</operator><name pos:start="23:54" pos:end="23:56">tmp</name></expr></argument>, <argument pos:start="23:59" pos:end="23:69"><expr pos:start="23:59" pos:end="23:69"><sizeof pos:start="23:59" pos:end="23:69">sizeof<argument_list pos:start="23:65" pos:end="23:69">(<argument pos:start="23:66" pos:end="23:68"><expr pos:start="23:66" pos:end="23:68"><name pos:start="23:66" pos:end="23:68">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <if_stmt pos:start="28:5" pos:end="40:5"><if pos:start="28:5" pos:end="40:5">if <condition pos:start="28:8" pos:end="28:77">(<expr pos:start="28:9" pos:end="28:76"><call pos:start="28:9" pos:end="28:72"><name pos:start="28:9" pos:end="28:12">bind</name> <argument_list pos:start="28:14" pos:end="28:72">(<argument pos:start="28:15" pos:end="28:23"><expr pos:start="28:15" pos:end="28:23"><name pos:start="28:15" pos:end="28:23">server_fd</name></expr></argument>, <argument pos:start="28:26" pos:end="28:52"><expr pos:start="28:26" pos:end="28:52"><operator pos:start="28:26" pos:end="28:26">(</operator>struct <name pos:start="28:34" pos:end="28:41">sockaddr</name> <operator pos:start="28:43" pos:end="28:43">*</operator><operator pos:start="28:44" pos:end="28:44">)</operator> <name pos:start="28:46" pos:end="28:52">my_addr</name></expr></argument>, <argument pos:start="28:55" pos:end="28:71"><expr pos:start="28:55" pos:end="28:71"><sizeof pos:start="28:55" pos:end="28:71">sizeof <argument_list pos:start="28:62" pos:end="28:71">(<argument pos:start="28:63" pos:end="28:70"><expr pos:start="28:63" pos:end="28:70"><operator pos:start="28:63" pos:end="28:63">*</operator><name pos:start="28:64" pos:end="28:70">my_addr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="28:74" pos:end="28:74">&lt;</operator> <literal type="number" pos:start="28:76" pos:end="28:76">0</literal></expr>)</condition> <block pos:start="28:79" pos:end="40:5">{<block_content pos:start="30:9" pos:end="38:18">

        <decl_stmt pos:start="30:9" pos:end="30:25"><decl pos:start="30:9" pos:end="30:24"><type pos:start="30:9" pos:end="30:12"><name pos:start="30:9" pos:end="30:12">char</name></type> <name pos:start="30:14" pos:end="30:24"><name pos:start="30:14" pos:end="30:20">bindmsg</name><index pos:start="30:21" pos:end="30:24">[<expr pos:start="30:22" pos:end="30:23"><literal type="number" pos:start="30:22" pos:end="30:23">32</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="32:9" pos:end="32:86"><expr pos:start="32:9" pos:end="32:85"><call pos:start="32:9" pos:end="32:85"><name pos:start="32:9" pos:end="32:16">snprintf</name><argument_list pos:start="32:17" pos:end="32:85">(<argument pos:start="32:18" pos:end="32:24"><expr pos:start="32:18" pos:end="32:24"><name pos:start="32:18" pos:end="32:24">bindmsg</name></expr></argument>, <argument pos:start="32:27" pos:end="32:41"><expr pos:start="32:27" pos:end="32:41"><sizeof pos:start="32:27" pos:end="32:41">sizeof<argument_list pos:start="32:33" pos:end="32:41">(<argument pos:start="32:34" pos:end="32:40"><expr pos:start="32:34" pos:end="32:40"><name pos:start="32:34" pos:end="32:40">bindmsg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="32:44" pos:end="32:58"><expr pos:start="32:44" pos:end="32:58"><literal type="string" pos:start="32:44" pos:end="32:58">"bind(port %d)"</literal></expr></argument>, <argument pos:start="32:61" pos:end="32:84"><expr pos:start="32:61" pos:end="32:84"><call pos:start="32:61" pos:end="32:84"><name pos:start="32:61" pos:end="32:65">ntohs</name><argument_list pos:start="32:66" pos:end="32:84">(<argument pos:start="32:67" pos:end="32:83"><expr pos:start="32:67" pos:end="32:83"><name pos:start="32:67" pos:end="32:83"><name pos:start="32:67" pos:end="32:73">my_addr</name><operator pos:start="32:74" pos:end="32:75">-&gt;</operator><name pos:start="32:76" pos:end="32:83">sin_port</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="34:9" pos:end="34:25"><expr pos:start="34:9" pos:end="34:24"><call pos:start="34:9" pos:end="34:24"><name pos:start="34:9" pos:end="34:14">perror</name> <argument_list pos:start="34:16" pos:end="34:24">(<argument pos:start="34:17" pos:end="34:23"><expr pos:start="34:17" pos:end="34:23"><name pos:start="34:17" pos:end="34:23">bindmsg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="36:9" pos:end="36:31"><expr pos:start="36:9" pos:end="36:30"><call pos:start="36:9" pos:end="36:30"><name pos:start="36:9" pos:end="36:19">closesocket</name><argument_list pos:start="36:20" pos:end="36:30">(<argument pos:start="36:21" pos:end="36:29"><expr pos:start="36:21" pos:end="36:29"><name pos:start="36:21" pos:end="36:29">server_fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="38:9" pos:end="38:18">return <expr pos:start="38:16" pos:end="38:17"><operator pos:start="38:16" pos:end="38:16">-</operator><literal type="number" pos:start="38:17" pos:end="38:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="44:5" pos:end="52:5"><if pos:start="44:5" pos:end="52:5">if <condition pos:start="44:8" pos:end="44:34">(<expr pos:start="44:9" pos:end="44:33"><call pos:start="44:9" pos:end="44:29"><name pos:start="44:9" pos:end="44:14">listen</name> <argument_list pos:start="44:16" pos:end="44:29">(<argument pos:start="44:17" pos:end="44:25"><expr pos:start="44:17" pos:end="44:25"><name pos:start="44:17" pos:end="44:25">server_fd</name></expr></argument>, <argument pos:start="44:28" pos:end="44:28"><expr pos:start="44:28" pos:end="44:28"><literal type="number" pos:start="44:28" pos:end="44:28">5</literal></expr></argument>)</argument_list></call> <operator pos:start="44:31" pos:end="44:31">&lt;</operator> <literal type="number" pos:start="44:33" pos:end="44:33">0</literal></expr>)</condition> <block pos:start="44:36" pos:end="52:5">{<block_content pos:start="46:9" pos:end="50:18">

        <expr_stmt pos:start="46:9" pos:end="46:26"><expr pos:start="46:9" pos:end="46:25"><call pos:start="46:9" pos:end="46:25"><name pos:start="46:9" pos:end="46:14">perror</name> <argument_list pos:start="46:16" pos:end="46:25">(<argument pos:start="46:17" pos:end="46:24"><expr pos:start="46:17" pos:end="46:24"><literal type="string" pos:start="46:17" pos:end="46:24">"listen"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="48:9" pos:end="48:31"><expr pos:start="48:9" pos:end="48:30"><call pos:start="48:9" pos:end="48:30"><name pos:start="48:9" pos:end="48:19">closesocket</name><argument_list pos:start="48:20" pos:end="48:30">(<argument pos:start="48:21" pos:end="48:29"><expr pos:start="48:21" pos:end="48:29"><name pos:start="48:21" pos:end="48:29">server_fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="50:9" pos:end="50:18">return <expr pos:start="50:16" pos:end="50:17"><operator pos:start="50:16" pos:end="50:16">-</operator><literal type="number" pos:start="50:17" pos:end="50:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="54:5" pos:end="54:37"><expr pos:start="54:5" pos:end="54:36"><call pos:start="54:5" pos:end="54:36"><name pos:start="54:5" pos:end="54:22">ff_socket_nonblock</name><argument_list pos:start="54:23" pos:end="54:36">(<argument pos:start="54:24" pos:end="54:32"><expr pos:start="54:24" pos:end="54:32"><name pos:start="54:24" pos:end="54:32">server_fd</name></expr></argument>, <argument pos:start="54:35" pos:end="54:35"><expr pos:start="54:35" pos:end="54:35"><literal type="number" pos:start="54:35" pos:end="54:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="58:5" pos:end="58:21">return <expr pos:start="58:12" pos:end="58:20"><name pos:start="58:12" pos:end="58:20">server_fd</name></expr>;</return>

</block_content>}</block></function></unit>
