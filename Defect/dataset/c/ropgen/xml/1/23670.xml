<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23670.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:53"><name pos:start="1:1" pos:end="1:19">iscsi_aio_read16_cb</name><argument_list pos:start="1:20" pos:end="3:53">(<argument pos:start="1:21" pos:end="1:47">struct iscsi_context *iscsi</argument>, <argument pos:start="1:50" pos:end="1:59">int status</argument>,

                    <argument pos:start="3:21" pos:end="3:38">void *command_data</argument>, <argument pos:start="3:41" pos:end="3:52">void *opaque</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:53">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">IscsiAIOCB</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">acb</name> <init pos:start="7:21" pos:end="7:28">= <expr pos:start="7:23" pos:end="7:28"><name pos:start="7:23" pos:end="7:28">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:65"><expr pos:start="11:5" pos:end="11:64"><call pos:start="11:5" pos:end="11:64"><name pos:start="11:5" pos:end="11:29">trace_iscsi_aio_read16_cb</name><argument_list pos:start="11:30" pos:end="11:64">(<argument pos:start="11:31" pos:end="11:35"><expr pos:start="11:31" pos:end="11:35"><name pos:start="11:31" pos:end="11:35">iscsi</name></expr></argument>, <argument pos:start="11:38" pos:end="11:43"><expr pos:start="11:38" pos:end="11:43"><name pos:start="11:38" pos:end="11:43">status</name></expr></argument>, <argument pos:start="11:46" pos:end="11:48"><expr pos:start="11:46" pos:end="11:48"><name pos:start="11:46" pos:end="11:48">acb</name></expr></argument>, <argument pos:start="11:51" pos:end="11:63"><expr pos:start="11:51" pos:end="11:63"><name pos:start="11:51" pos:end="11:63"><name pos:start="11:51" pos:end="11:53">acb</name><operator pos:start="11:54" pos:end="11:55">-&gt;</operator><name pos:start="11:56" pos:end="11:63">canceled</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:22">(<expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:11">acb</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:21">canceled</name></name></expr>)</condition> <block pos:start="15:24" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:30"><expr pos:start="17:9" pos:end="17:29"><call pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:24">qemu_aio_release</name><argument_list pos:start="17:25" pos:end="17:29">(<argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><name pos:start="17:26" pos:end="17:28">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:20"><expr pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:7">acb</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:15">status</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:20">(<expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:14">status</name> <operator pos:start="27:16" pos:end="27:17">!=</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>)</condition> <block pos:start="27:22" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:27">

        <expr_stmt pos:start="29:9" pos:end="31:45"><expr pos:start="29:9" pos:end="31:44"><call pos:start="29:9" pos:end="31:44"><name pos:start="29:9" pos:end="29:20">error_report</name><argument_list pos:start="29:21" pos:end="31:44">(<argument pos:start="29:22" pos:end="29:63"><expr pos:start="29:22" pos:end="29:63"><literal type="string" pos:start="29:22" pos:end="29:63">"Failed to read16 data from iSCSI lun. %s"</literal></expr></argument>,

                     <argument pos:start="31:22" pos:end="31:43"><expr pos:start="31:22" pos:end="31:43"><call pos:start="31:22" pos:end="31:43"><name pos:start="31:22" pos:end="31:36">iscsi_get_error</name><argument_list pos:start="31:37" pos:end="31:43">(<argument pos:start="31:38" pos:end="31:42"><expr pos:start="31:38" pos:end="31:42"><name pos:start="31:38" pos:end="31:42">iscsi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:27"><expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:11">acb</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:19">status</name></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <operator pos:start="33:23" pos:end="33:23">-</operator><name pos:start="33:24" pos:end="33:26">EIO</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:53"><expr pos:start="39:5" pos:end="39:52"><call pos:start="39:5" pos:end="39:52"><name pos:start="39:5" pos:end="39:21">iscsi_schedule_bh</name><argument_list pos:start="39:22" pos:end="39:52">(<argument pos:start="39:23" pos:end="39:46"><expr pos:start="39:23" pos:end="39:46"><name pos:start="39:23" pos:end="39:46">iscsi_readv_writev_bh_cb</name></expr></argument>, <argument pos:start="39:49" pos:end="39:51"><expr pos:start="39:49" pos:end="39:51"><name pos:start="39:49" pos:end="39:51">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
