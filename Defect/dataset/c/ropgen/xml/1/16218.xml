<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16218.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">visit_type_size</name><parameter_list pos:start="1:21" pos:end="1:79">(<parameter pos:start="1:22" pos:end="1:31"><decl pos:start="1:22" pos:end="1:31"><type pos:start="1:22" pos:end="1:31"><name pos:start="1:22" pos:end="1:28">Visitor</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:31">v</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:41">uint64_t</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">obj</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">name</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:78"><decl pos:start="1:67" pos:end="1:78"><type pos:start="1:67" pos:end="1:78"><name pos:start="1:67" pos:end="1:71">Error</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier><modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:78">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:17">value</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="27:5"><if pos:start="7:5" pos:end="27:5">if <condition pos:start="7:8" pos:end="7:28">(<expr pos:start="7:9" pos:end="7:27"><operator pos:start="7:9" pos:end="7:9">!</operator><call pos:start="7:10" pos:end="7:27"><name pos:start="7:10" pos:end="7:21">error_is_set</name><argument_list pos:start="7:22" pos:end="7:27">(<argument pos:start="7:23" pos:end="7:26"><expr pos:start="7:23" pos:end="7:26"><name pos:start="7:23" pos:end="7:26">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:30" pos:end="27:5">{<block_content pos:start="9:9" pos:end="25:9">

        <if_stmt pos:start="9:9" pos:end="25:9"><if pos:start="9:9" pos:end="13:9">if <condition pos:start="9:12" pos:end="9:25">(<expr pos:start="9:13" pos:end="9:24"><name pos:start="9:13" pos:end="9:24"><name pos:start="9:13" pos:end="9:13">v</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:24">type_size</name></name></expr>)</condition> <block pos:start="9:27" pos:end="13:9">{<block_content pos:start="11:13" pos:end="11:45">

            <expr_stmt pos:start="11:13" pos:end="11:45"><expr pos:start="11:13" pos:end="11:44"><call pos:start="11:13" pos:end="11:44"><name pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:13">v</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:24">type_size</name></name><argument_list pos:start="11:25" pos:end="11:44">(<argument pos:start="11:26" pos:end="11:26"><expr pos:start="11:26" pos:end="11:26"><name pos:start="11:26" pos:end="11:26">v</name></expr></argument>, <argument pos:start="11:29" pos:end="11:31"><expr pos:start="11:29" pos:end="11:31"><name pos:start="11:29" pos:end="11:31">obj</name></expr></argument>, <argument pos:start="11:34" pos:end="11:37"><expr pos:start="11:34" pos:end="11:37"><name pos:start="11:34" pos:end="11:37">name</name></expr></argument>, <argument pos:start="11:40" pos:end="11:43"><expr pos:start="11:40" pos:end="11:43"><name pos:start="11:40" pos:end="11:43">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="13:11" pos:end="17:9">else if <condition pos:start="13:19" pos:end="13:34">(<expr pos:start="13:20" pos:end="13:33"><name pos:start="13:20" pos:end="13:33"><name pos:start="13:20" pos:end="13:20">v</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:33">type_uint64</name></name></expr>)</condition> <block pos:start="13:36" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:47">

            <expr_stmt pos:start="15:13" pos:end="15:47"><expr pos:start="15:13" pos:end="15:46"><call pos:start="15:13" pos:end="15:46"><name pos:start="15:13" pos:end="15:26"><name pos:start="15:13" pos:end="15:13">v</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:26">type_uint64</name></name><argument_list pos:start="15:27" pos:end="15:46">(<argument pos:start="15:28" pos:end="15:28"><expr pos:start="15:28" pos:end="15:28"><name pos:start="15:28" pos:end="15:28">v</name></expr></argument>, <argument pos:start="15:31" pos:end="15:33"><expr pos:start="15:31" pos:end="15:33"><name pos:start="15:31" pos:end="15:33">obj</name></expr></argument>, <argument pos:start="15:36" pos:end="15:39"><expr pos:start="15:36" pos:end="15:39"><name pos:start="15:36" pos:end="15:39">name</name></expr></argument>, <argument pos:start="15:42" pos:end="15:45"><expr pos:start="15:42" pos:end="15:45"><name pos:start="15:42" pos:end="15:45">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="17:11" pos:end="25:9">else <block pos:start="17:16" pos:end="25:9">{<block_content pos:start="19:13" pos:end="23:25">

            <expr_stmt pos:start="19:13" pos:end="19:25"><expr pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:17">value</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <operator pos:start="19:21" pos:end="19:21">*</operator><name pos:start="19:22" pos:end="19:24">obj</name></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:47"><expr pos:start="21:13" pos:end="21:46"><call pos:start="21:13" pos:end="21:46"><name pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:13">v</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:23">type_int</name></name><argument_list pos:start="21:24" pos:end="21:46">(<argument pos:start="21:25" pos:end="21:25"><expr pos:start="21:25" pos:end="21:25"><name pos:start="21:25" pos:end="21:25">v</name></expr></argument>, <argument pos:start="21:28" pos:end="21:33"><expr pos:start="21:28" pos:end="21:33"><operator pos:start="21:28" pos:end="21:28">&amp;</operator><name pos:start="21:29" pos:end="21:33">value</name></expr></argument>, <argument pos:start="21:36" pos:end="21:39"><expr pos:start="21:36" pos:end="21:39"><name pos:start="21:36" pos:end="21:39">name</name></expr></argument>, <argument pos:start="21:42" pos:end="21:45"><expr pos:start="21:42" pos:end="21:45"><name pos:start="21:42" pos:end="21:45">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:25"><expr pos:start="23:13" pos:end="23:24"><operator pos:start="23:13" pos:end="23:13">*</operator><name pos:start="23:14" pos:end="23:16">obj</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:24">value</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
