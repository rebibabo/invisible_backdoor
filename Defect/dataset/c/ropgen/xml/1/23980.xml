<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23980.c" pos:tabs="8"><function pos:start="1:1" pos:end="1311:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:31">powerpc_excp</name><parameter_list pos:start="1:32" pos:end="1:74">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:42">PowerPCCPU</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">cpu</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:63">excp_model</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:73"><decl pos:start="1:66" pos:end="1:73"><type pos:start="1:66" pos:end="1:73"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:73">excp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1311:1">{<block_content pos:start="5:5" pos:end="1309:25">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:27">= <expr pos:start="5:20" pos:end="5:27"><call pos:start="5:20" pos:end="5:27"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:27">(<argument pos:start="5:24" pos:end="5:26"><expr pos:start="5:24" pos:end="5:26"><name pos:start="5:24" pos:end="5:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CPUPPCState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">env</name> <init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:20">msr</name></decl>, <decl pos:start="9:23" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:23" pos:end="9:29">new_msr</name></decl>, <decl pos:start="9:32" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:32" pos:end="9:37">vector</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">srr0</name></decl>, <decl pos:start="11:15" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:18">srr1</name></decl>, <decl pos:start="11:21" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:25">asrr0</name></decl>, <decl pos:start="11:28" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:28" pos:end="11:32">asrr1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">lpes0</name></decl>, <decl pos:start="13:16" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:20">lpes1</name></decl>, <decl pos:start="13:23" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:23" pos:end="13:25">lev</name></decl>, <decl pos:start="13:28" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:28" pos:end="13:30">ail</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="33:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:10">(<expr pos:start="17:9" pos:end="17:9"><literal type="number" pos:start="17:9" pos:end="17:9">0</literal></expr>)</condition> <block pos:start="17:12" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:46">

        <comment type="block" pos:start="19:9" pos:end="19:74">/* XXX: find a suitable condition to enable the hypervisor mode */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:46"><expr pos:start="21:9" pos:end="21:45"><name pos:start="21:9" pos:end="21:13">lpes0</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <operator pos:start="21:17" pos:end="21:17">(</operator><name pos:start="21:18" pos:end="21:35"><name pos:start="21:18" pos:end="21:20">env</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:25">spr</name><index pos:start="21:26" pos:end="21:35">[<expr pos:start="21:27" pos:end="21:34"><name pos:start="21:27" pos:end="21:34">SPR_LPCR</name></expr>]</index></name> <operator pos:start="21:37" pos:end="21:38">&gt;&gt;</operator> <literal type="number" pos:start="21:40" pos:end="21:40">1</literal><operator pos:start="21:41" pos:end="21:41">)</operator> <operator pos:start="21:43" pos:end="21:43">&amp;</operator> <literal type="number" pos:start="21:45" pos:end="21:45">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:46"><expr pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:13">lpes1</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <operator pos:start="23:17" pos:end="23:17">(</operator><name pos:start="23:18" pos:end="23:35"><name pos:start="23:18" pos:end="23:20">env</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:25">spr</name><index pos:start="23:26" pos:end="23:35">[<expr pos:start="23:27" pos:end="23:34"><name pos:start="23:27" pos:end="23:34">SPR_LPCR</name></expr>]</index></name> <operator pos:start="23:37" pos:end="23:38">&gt;&gt;</operator> <literal type="number" pos:start="23:40" pos:end="23:40">2</literal><operator pos:start="23:41" pos:end="23:41">)</operator> <operator pos:start="23:43" pos:end="23:43">&amp;</operator> <literal type="number" pos:start="23:45" pos:end="23:45">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="33:5">else <block pos:start="25:12" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <comment type="block" pos:start="27:9" pos:end="27:68">/* Those values ensure we won't enter the hypervisor mode */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:18"><expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:13">lpes0</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:18"><expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:13">lpes1</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="39:72"><expr pos:start="37:5" pos:end="39:71"><call pos:start="37:5" pos:end="39:71"><name pos:start="37:5" pos:end="37:17">qemu_log_mask</name><argument_list pos:start="37:18" pos:end="39:71">(<argument pos:start="37:19" pos:end="37:29"><expr pos:start="37:19" pos:end="37:29"><name pos:start="37:19" pos:end="37:29">CPU_LOG_INT</name></expr></argument>, <argument pos:start="37:32" pos:end="39:37"><expr pos:start="37:32" pos:end="39:37"><literal type="string" pos:start="37:32" pos:end="37:52">"Raise exception at "</literal> <name pos:start="37:54" pos:end="37:66">TARGET_FMT_lx</name>

                  <literal type="string" pos:start="39:19" pos:end="39:37">" =&gt; %08x (%02x)\n"</literal></expr></argument>, <argument pos:start="39:40" pos:end="39:47"><expr pos:start="39:40" pos:end="39:47"><name pos:start="39:40" pos:end="39:47"><name pos:start="39:40" pos:end="39:42">env</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:47">nip</name></name></expr></argument>, <argument pos:start="39:50" pos:end="39:53"><expr pos:start="39:50" pos:end="39:53"><name pos:start="39:50" pos:end="39:53">excp</name></expr></argument>, <argument pos:start="39:56" pos:end="39:70"><expr pos:start="39:56" pos:end="39:70"><name pos:start="39:56" pos:end="39:70"><name pos:start="39:56" pos:end="39:58">env</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:70">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:52">/* new srr1 value excluding must-be-zero bits */</comment>

    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:41">(<expr pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:18">excp_model</name> <operator pos:start="45:20" pos:end="45:21">==</operator> <name pos:start="45:23" pos:end="45:40">POWERPC_EXCP_BOOKE</name></expr>)</condition> <block pos:start="45:43" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:23">

        <expr_stmt pos:start="47:9" pos:end="47:23"><expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:11">msr</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:22"><name pos:start="47:15" pos:end="47:17">env</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:22">msr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="53:5">else <block pos:start="49:12" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:40">

        <expr_stmt pos:start="51:9" pos:end="51:40"><expr pos:start="51:9" pos:end="51:39"><name pos:start="51:9" pos:end="51:11">msr</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:22"><name pos:start="51:15" pos:end="51:17">env</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:22">msr</name></name> <operator pos:start="51:24" pos:end="51:24">&amp;</operator> <operator pos:start="51:26" pos:end="51:26">~</operator><literal type="number" pos:start="51:27" pos:end="51:39">0x783f0000ULL</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:35">/* new interrupt handler msr */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:53"><expr pos:start="59:5" pos:end="59:52"><name pos:start="59:5" pos:end="59:11">new_msr</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:22"><name pos:start="59:15" pos:end="59:17">env</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:22">msr</name></name> <operator pos:start="59:24" pos:end="59:24">&amp;</operator> <operator pos:start="59:26" pos:end="59:26">(</operator><operator pos:start="59:27" pos:end="59:27">(</operator><name pos:start="59:28" pos:end="59:39">target_ulong</name><operator pos:start="59:40" pos:end="59:40">)</operator><literal type="number" pos:start="59:41" pos:end="59:41">1</literal> <operator pos:start="59:43" pos:end="59:44">&lt;&lt;</operator> <name pos:start="59:46" pos:end="59:51">MSR_ME</name><operator pos:start="59:52" pos:end="59:52">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:26">/* target registers */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:20"><expr pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:8">srr0</name> <operator pos:start="65:10" pos:end="65:10">=</operator> <name pos:start="65:12" pos:end="65:19">SPR_SRR0</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:20"><expr pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:8">srr1</name> <operator pos:start="67:10" pos:end="67:10">=</operator> <name pos:start="67:12" pos:end="67:19">SPR_SRR1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:15"><expr pos:start="69:5" pos:end="69:14"><name pos:start="69:5" pos:end="69:9">asrr0</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <operator pos:start="69:13" pos:end="69:13">-</operator><literal type="number" pos:start="69:14" pos:end="69:14">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="86:0"><expr pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:9">asrr1</name> <operator pos:start="71:11" pos:end="71:11">=</operator> <operator pos:start="71:13" pos:end="71:13">-</operator><literal type="number" pos:start="71:14" pos:end="71:14">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="75:5" pos:end="83:7">/* Exception targetting modifiers

     *

     * AIL is initialized here but can be cleared by

     * selected exceptions

     */</comment>

<cpp:if pos:start="85:1" pos:end="85:25">#<cpp:directive pos:start="85:2" pos:end="85:3">if</cpp:directive> <expr pos:start="85:5" pos:end="85:25"><call pos:start="85:5" pos:end="85:25"><name pos:start="85:5" pos:end="85:11">defined</name><argument_list pos:start="85:12" pos:end="85:25">(<argument pos:start="85:13" pos:end="85:24"><expr pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="87:5" pos:end="109:5"><if pos:start="87:5" pos:end="101:5">if <condition pos:start="87:8" pos:end="89:42">(<expr pos:start="87:9" pos:end="89:41"><name pos:start="87:9" pos:end="87:18">excp_model</name> <operator pos:start="87:20" pos:end="87:21">==</operator> <name pos:start="87:23" pos:end="87:41">POWERPC_EXCP_POWER7</name> <operator pos:start="87:43" pos:end="87:44">||</operator>

        <name pos:start="89:9" pos:end="89:18">excp_model</name> <operator pos:start="89:20" pos:end="89:21">==</operator> <name pos:start="89:23" pos:end="89:41">POWERPC_EXCP_POWER8</name></expr>)</condition> <block pos:start="89:44" pos:end="101:5">{<block_content pos:start="91:9" pos:end="99:9">

        <if_stmt pos:start="91:9" pos:end="99:9"><if pos:start="91:9" pos:end="95:9">if <condition pos:start="91:12" pos:end="91:46">(<expr pos:start="91:13" pos:end="91:45"><name pos:start="91:13" pos:end="91:22">excp_model</name> <operator pos:start="91:24" pos:end="91:25">==</operator> <name pos:start="91:27" pos:end="91:45">POWERPC_EXCP_POWER8</name></expr>)</condition> <block pos:start="91:48" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:68">

            <expr_stmt pos:start="93:13" pos:end="93:68"><expr pos:start="93:13" pos:end="93:67"><name pos:start="93:13" pos:end="93:15">ail</name> <operator pos:start="93:17" pos:end="93:17">=</operator> <operator pos:start="93:19" pos:end="93:19">(</operator><name pos:start="93:20" pos:end="93:37"><name pos:start="93:20" pos:end="93:22">env</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:27">spr</name><index pos:start="93:28" pos:end="93:37">[<expr pos:start="93:29" pos:end="93:36"><name pos:start="93:29" pos:end="93:36">SPR_LPCR</name></expr>]</index></name> <operator pos:start="93:39" pos:end="93:39">&amp;</operator> <name pos:start="93:41" pos:end="93:48">LPCR_AIL</name><operator pos:start="93:49" pos:end="93:49">)</operator> <operator pos:start="93:51" pos:end="93:52">&gt;&gt;</operator> <name pos:start="93:54" pos:end="93:67">LPCR_AIL_SHIFT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="99:9">else <block pos:start="95:16" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:20">

            <expr_stmt pos:start="97:13" pos:end="97:20"><expr pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:15">ail</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <literal type="number" pos:start="97:19" pos:end="97:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="101:7" pos:end="109:5">else

<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="103:8" pos:end="103:34">/* defined(TARGET_PPC64) */</comment>

    <block pos:start="105:5" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:16">

        <expr_stmt pos:start="107:9" pos:end="107:16"><expr pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:11">ail</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <literal type="number" pos:start="107:15" pos:end="107:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <switch pos:start="113:5" pos:end="1123:5">switch <condition pos:start="113:12" pos:end="113:17">(<expr pos:start="113:13" pos:end="113:16"><name pos:start="113:13" pos:end="113:16">excp</name></expr>)</condition> <block pos:start="113:19" pos:end="1123:5">{<block_content pos:start="115:5" pos:end="1121:14">

    <case pos:start="115:5" pos:end="115:27">case <expr pos:start="115:10" pos:end="115:26"><name pos:start="115:10" pos:end="115:26">POWERPC_EXCP_NONE</name></expr>:</case>

        <comment type="block" pos:start="117:9" pos:end="117:33">/* Should never happen */</comment>

        <return pos:start="119:9" pos:end="119:15">return;</return>

    <case pos:start="121:5" pos:end="121:31">case <expr pos:start="121:10" pos:end="121:30"><name pos:start="121:10" pos:end="121:30">POWERPC_EXCP_CRITICAL</name></expr>:</case>    <comment type="block" pos:start="121:36" pos:end="121:79">/* Critical input                         */</comment>

        <switch pos:start="123:9" pos:end="149:9">switch <condition pos:start="123:16" pos:end="123:27">(<expr pos:start="123:17" pos:end="123:26"><name pos:start="123:17" pos:end="123:26">excp_model</name></expr>)</condition> <block pos:start="123:29" pos:end="149:9">{<block_content pos:start="125:9" pos:end="147:30">

        <case pos:start="125:9" pos:end="125:30">case <expr pos:start="125:14" pos:end="125:29"><name pos:start="125:14" pos:end="125:29">POWERPC_EXCP_40x</name></expr>:</case>

            <expr_stmt pos:start="127:13" pos:end="127:32"><expr pos:start="127:13" pos:end="127:31"><name pos:start="127:13" pos:end="127:16">srr0</name> <operator pos:start="127:18" pos:end="127:18">=</operator> <name pos:start="127:20" pos:end="127:31">SPR_40x_SRR2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:32"><expr pos:start="129:13" pos:end="129:31"><name pos:start="129:13" pos:end="129:16">srr1</name> <operator pos:start="129:18" pos:end="129:18">=</operator> <name pos:start="129:20" pos:end="129:31">SPR_40x_SRR3</name></expr>;</expr_stmt>

            <break pos:start="131:13" pos:end="131:18">break;</break>

        <case pos:start="133:9" pos:end="133:32">case <expr pos:start="133:14" pos:end="133:31"><name pos:start="133:14" pos:end="133:31">POWERPC_EXCP_BOOKE</name></expr>:</case>

            <expr_stmt pos:start="135:13" pos:end="135:35"><expr pos:start="135:13" pos:end="135:34"><name pos:start="135:13" pos:end="135:16">srr0</name> <operator pos:start="135:18" pos:end="135:18">=</operator> <name pos:start="135:20" pos:end="135:34">SPR_BOOKE_CSRR0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:35"><expr pos:start="137:13" pos:end="137:34"><name pos:start="137:13" pos:end="137:16">srr1</name> <operator pos:start="137:18" pos:end="137:18">=</operator> <name pos:start="137:20" pos:end="137:34">SPR_BOOKE_CSRR1</name></expr>;</expr_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:29">case <expr pos:start="141:14" pos:end="141:28"><name pos:start="141:14" pos:end="141:28">POWERPC_EXCP_G2</name></expr>:</case>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <default pos:start="145:9" pos:end="145:16">default:</default>

            <goto pos:start="147:13" pos:end="147:30">goto <name pos:start="147:18" pos:end="147:29">excp_invalid</name>;</goto>

        </block_content>}</block></switch>

        <goto pos:start="151:9" pos:end="151:24">goto <name pos:start="151:14" pos:end="151:23">store_next</name>;</goto>

    <case pos:start="153:5" pos:end="153:29">case <expr pos:start="153:10" pos:end="153:28"><name pos:start="153:10" pos:end="153:28">POWERPC_EXCP_MCHECK</name></expr>:</case>    <comment type="block" pos:start="153:34" pos:end="153:79">/* Machine check exception                  */</comment>

        <if_stmt pos:start="155:9" pos:end="179:9"><if pos:start="155:9" pos:end="179:9">if <condition pos:start="155:12" pos:end="155:24">(<expr pos:start="155:13" pos:end="155:23"><name pos:start="155:13" pos:end="155:18">msr_me</name> <operator pos:start="155:20" pos:end="155:21">==</operator> <literal type="number" pos:start="155:23" pos:end="155:23">0</literal></expr>)</condition> <block pos:start="155:26" pos:end="179:9">{<block_content pos:start="163:13" pos:end="177:58">

            <comment type="block" pos:start="157:13" pos:end="161:15">/* Machine check exception is not enabled.

             * Enter checkstop state.

             */</comment>

            <expr_stmt pos:start="163:13" pos:end="165:50"><expr pos:start="163:13" pos:end="165:49"><call pos:start="163:13" pos:end="165:49"><name pos:start="163:13" pos:end="163:19">fprintf</name><argument_list pos:start="163:20" pos:end="165:49">(<argument pos:start="163:21" pos:end="163:26"><expr pos:start="163:21" pos:end="163:26"><name pos:start="163:21" pos:end="163:26">stderr</name></expr></argument>, <argument pos:start="163:29" pos:end="165:48"><expr pos:start="163:29" pos:end="165:48"><literal type="string" pos:start="163:29" pos:end="163:63">"Machine check while not allowed. "</literal>

                    <literal type="string" pos:start="165:21" pos:end="165:48">"Entering checkstop state\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="167:13" pos:end="173:13"><if pos:start="167:13" pos:end="173:13">if <condition pos:start="167:16" pos:end="167:36">(<expr pos:start="167:17" pos:end="167:35"><call pos:start="167:17" pos:end="167:35"><name pos:start="167:17" pos:end="167:33">qemu_log_separate</name><argument_list pos:start="167:34" pos:end="167:35">()</argument_list></call></expr>)</condition> <block pos:start="167:38" pos:end="173:13">{<block_content pos:start="169:17" pos:end="171:54">

                <expr_stmt pos:start="169:17" pos:end="171:54"><expr pos:start="169:17" pos:end="171:53"><call pos:start="169:17" pos:end="171:53"><name pos:start="169:17" pos:end="169:24">qemu_log</name><argument_list pos:start="169:25" pos:end="171:53">(<argument pos:start="169:26" pos:end="171:52"><expr pos:start="169:26" pos:end="171:52"><literal type="string" pos:start="169:26" pos:end="169:60">"Machine check while not allowed. "</literal>

                        <literal type="string" pos:start="171:25" pos:end="171:52">"Entering checkstop state\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:27"><expr pos:start="175:13" pos:end="175:26"><name pos:start="175:13" pos:end="175:22"><name pos:start="175:13" pos:end="175:14">cs</name><operator pos:start="175:15" pos:end="175:16">-&gt;</operator><name pos:start="175:17" pos:end="175:22">halted</name></name> <operator pos:start="175:24" pos:end="175:24">=</operator> <literal type="number" pos:start="175:26" pos:end="175:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:58"><expr pos:start="177:13" pos:end="177:57"><name pos:start="177:13" pos:end="177:33"><name pos:start="177:13" pos:end="177:14">cs</name><operator pos:start="177:15" pos:end="177:16">-&gt;</operator><name pos:start="177:17" pos:end="177:33">interrupt_request</name></name> <operator pos:start="177:35" pos:end="177:36">|=</operator> <name pos:start="177:38" pos:end="177:57">CPU_INTERRUPT_EXITTB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="181:9" pos:end="187:9"><if pos:start="181:9" pos:end="187:9">if <condition pos:start="181:12" pos:end="181:14">(<expr pos:start="181:13" pos:end="181:13"><literal type="number" pos:start="181:13" pos:end="181:13">0</literal></expr>)</condition> <block pos:start="181:16" pos:end="187:9">{<block_content pos:start="185:13" pos:end="185:45">

            <comment type="block" pos:start="183:13" pos:end="183:78">/* XXX: find a suitable condition to enable the hypervisor mode */</comment>

            <expr_stmt pos:start="185:13" pos:end="185:45"><expr pos:start="185:13" pos:end="185:44"><name pos:start="185:13" pos:end="185:19">new_msr</name> <operator pos:start="185:21" pos:end="185:22">|=</operator> <operator pos:start="185:24" pos:end="185:24">(</operator><name pos:start="185:25" pos:end="185:36">target_ulong</name><operator pos:start="185:37" pos:end="185:37">)</operator><name pos:start="185:38" pos:end="185:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:16"><expr pos:start="189:9" pos:end="189:15"><name pos:start="189:9" pos:end="189:11">ail</name> <operator pos:start="189:13" pos:end="189:13">=</operator> <literal type="number" pos:start="189:15" pos:end="189:15">0</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="193:9" pos:end="193:56">/* machine check exceptions don't have ME set */</comment>

        <expr_stmt pos:start="195:9" pos:end="195:48"><expr pos:start="195:9" pos:end="195:47"><name pos:start="195:9" pos:end="195:15">new_msr</name> <operator pos:start="195:17" pos:end="195:18">&amp;=</operator> <operator pos:start="195:20" pos:end="195:20">~</operator><operator pos:start="195:21" pos:end="195:21">(</operator><operator pos:start="195:22" pos:end="195:22">(</operator><name pos:start="195:23" pos:end="195:34">target_ulong</name><operator pos:start="195:35" pos:end="195:35">)</operator><literal type="number" pos:start="195:36" pos:end="195:36">1</literal> <operator pos:start="195:38" pos:end="195:39">&lt;&lt;</operator> <name pos:start="195:41" pos:end="195:46">MSR_ME</name><operator pos:start="195:47" pos:end="195:47">)</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="199:9" pos:end="199:67">/* XXX: should also have something loaded in DAR / DSISR */</comment>

        <switch pos:start="201:9" pos:end="229:9">switch <condition pos:start="201:16" pos:end="201:27">(<expr pos:start="201:17" pos:end="201:26"><name pos:start="201:17" pos:end="201:26">excp_model</name></expr>)</condition> <block pos:start="201:29" pos:end="229:9">{<block_content pos:start="203:9" pos:end="227:18">

        <case pos:start="203:9" pos:end="203:30">case <expr pos:start="203:14" pos:end="203:29"><name pos:start="203:14" pos:end="203:29">POWERPC_EXCP_40x</name></expr>:</case>

            <expr_stmt pos:start="205:13" pos:end="205:32"><expr pos:start="205:13" pos:end="205:31"><name pos:start="205:13" pos:end="205:16">srr0</name> <operator pos:start="205:18" pos:end="205:18">=</operator> <name pos:start="205:20" pos:end="205:31">SPR_40x_SRR2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:32"><expr pos:start="207:13" pos:end="207:31"><name pos:start="207:13" pos:end="207:16">srr1</name> <operator pos:start="207:18" pos:end="207:18">=</operator> <name pos:start="207:20" pos:end="207:31">SPR_40x_SRR3</name></expr>;</expr_stmt>

            <break pos:start="209:13" pos:end="209:18">break;</break>

        <case pos:start="211:9" pos:end="211:32">case <expr pos:start="211:14" pos:end="211:31"><name pos:start="211:14" pos:end="211:31">POWERPC_EXCP_BOOKE</name></expr>:</case>

            <comment type="block" pos:start="213:13" pos:end="213:66">/* FIXME: choose one or the other based on CPU type */</comment>

            <expr_stmt pos:start="215:13" pos:end="215:36"><expr pos:start="215:13" pos:end="215:35"><name pos:start="215:13" pos:end="215:16">srr0</name> <operator pos:start="215:18" pos:end="215:18">=</operator> <name pos:start="215:20" pos:end="215:35">SPR_BOOKE_MCSRR0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:36"><expr pos:start="217:13" pos:end="217:35"><name pos:start="217:13" pos:end="217:16">srr1</name> <operator pos:start="217:18" pos:end="217:18">=</operator> <name pos:start="217:20" pos:end="217:35">SPR_BOOKE_MCSRR1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:36"><expr pos:start="219:13" pos:end="219:35"><name pos:start="219:13" pos:end="219:17">asrr0</name> <operator pos:start="219:19" pos:end="219:19">=</operator> <name pos:start="219:21" pos:end="219:35">SPR_BOOKE_CSRR0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:36"><expr pos:start="221:13" pos:end="221:35"><name pos:start="221:13" pos:end="221:17">asrr1</name> <operator pos:start="221:19" pos:end="221:19">=</operator> <name pos:start="221:21" pos:end="221:35">SPR_BOOKE_CSRR1</name></expr>;</expr_stmt>

            <break pos:start="223:13" pos:end="223:18">break;</break>

        <default pos:start="225:9" pos:end="225:16">default:</default>

            <break pos:start="227:13" pos:end="227:18">break;</break>

        </block_content>}</block></switch>

        <goto pos:start="231:9" pos:end="231:24">goto <name pos:start="231:14" pos:end="231:23">store_next</name>;</goto>

    <case pos:start="233:5" pos:end="233:26">case <expr pos:start="233:10" pos:end="233:25"><name pos:start="233:10" pos:end="233:25">POWERPC_EXCP_DSI</name></expr>:</case>       <comment type="block" pos:start="233:34" pos:end="233:79">/* Data storage exception                   */</comment>

        <expr_stmt pos:start="235:9" pos:end="237:63"><expr pos:start="235:9" pos:end="237:62"><call pos:start="235:9" pos:end="237:62"><name pos:start="235:9" pos:end="235:16">LOG_EXCP</name><argument_list pos:start="235:17" pos:end="237:62">(<argument pos:start="235:18" pos:end="237:21"><expr pos:start="235:18" pos:end="237:21"><literal type="string" pos:start="235:18" pos:end="235:40">"DSI exception: DSISR="</literal> <name pos:start="235:42" pos:end="235:54">TARGET_FMT_lx</name><literal type="string" pos:start="235:55" pos:end="235:61">" DAR="</literal> <name pos:start="235:63" pos:end="235:75">TARGET_FMT_lx</name>

                 <literal type="string" pos:start="237:18" pos:end="237:21">"\n"</literal></expr></argument>, <argument pos:start="237:24" pos:end="237:42"><expr pos:start="237:24" pos:end="237:42"><name pos:start="237:24" pos:end="237:42"><name pos:start="237:24" pos:end="237:26">env</name><operator pos:start="237:27" pos:end="237:28">-&gt;</operator><name pos:start="237:29" pos:end="237:31">spr</name><index pos:start="237:32" pos:end="237:42">[<expr pos:start="237:33" pos:end="237:41"><name pos:start="237:33" pos:end="237:41">SPR_DSISR</name></expr>]</index></name></expr></argument>, <argument pos:start="237:45" pos:end="237:61"><expr pos:start="237:45" pos:end="237:61"><name pos:start="237:45" pos:end="237:61"><name pos:start="237:45" pos:end="237:47">env</name><operator pos:start="237:48" pos:end="237:49">-&gt;</operator><name pos:start="237:50" pos:end="237:52">spr</name><index pos:start="237:53" pos:end="237:61">[<expr pos:start="237:54" pos:end="237:60"><name pos:start="237:54" pos:end="237:60">SPR_DAR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="239:9" pos:end="243:9"><if pos:start="239:9" pos:end="243:9">if <condition pos:start="239:12" pos:end="239:23">(<expr pos:start="239:13" pos:end="239:22"><name pos:start="239:13" pos:end="239:17">lpes1</name> <operator pos:start="239:19" pos:end="239:20">==</operator> <literal type="number" pos:start="239:22" pos:end="239:22">0</literal></expr>)</condition> <block pos:start="239:25" pos:end="243:9">{<block_content pos:start="241:13" pos:end="241:45">

            <expr_stmt pos:start="241:13" pos:end="241:45"><expr pos:start="241:13" pos:end="241:44"><name pos:start="241:13" pos:end="241:19">new_msr</name> <operator pos:start="241:21" pos:end="241:22">|=</operator> <operator pos:start="241:24" pos:end="241:24">(</operator><name pos:start="241:25" pos:end="241:36">target_ulong</name><operator pos:start="241:37" pos:end="241:37">)</operator><name pos:start="241:38" pos:end="241:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="245:9" pos:end="245:24">goto <name pos:start="245:14" pos:end="245:23">store_next</name>;</goto>

    <case pos:start="247:5" pos:end="247:26">case <expr pos:start="247:10" pos:end="247:25"><name pos:start="247:10" pos:end="247:25">POWERPC_EXCP_ISI</name></expr>:</case>       <comment type="block" pos:start="247:34" pos:end="247:79">/* Instruction storage exception            */</comment>

        <expr_stmt pos:start="249:9" pos:end="251:38"><expr pos:start="249:9" pos:end="251:37"><call pos:start="249:9" pos:end="251:37"><name pos:start="249:9" pos:end="249:16">LOG_EXCP</name><argument_list pos:start="249:17" pos:end="251:37">(<argument pos:start="249:18" pos:end="251:21"><expr pos:start="249:18" pos:end="251:21"><literal type="string" pos:start="249:18" pos:end="249:38">"ISI exception: msr="</literal> <name pos:start="249:40" pos:end="249:52">TARGET_FMT_lx</name> <literal type="string" pos:start="249:54" pos:end="249:61">", nip="</literal> <name pos:start="249:63" pos:end="249:75">TARGET_FMT_lx</name>

                 <literal type="string" pos:start="251:18" pos:end="251:21">"\n"</literal></expr></argument>, <argument pos:start="251:24" pos:end="251:26"><expr pos:start="251:24" pos:end="251:26"><name pos:start="251:24" pos:end="251:26">msr</name></expr></argument>, <argument pos:start="251:29" pos:end="251:36"><expr pos:start="251:29" pos:end="251:36"><name pos:start="251:29" pos:end="251:36"><name pos:start="251:29" pos:end="251:31">env</name><operator pos:start="251:32" pos:end="251:33">-&gt;</operator><name pos:start="251:34" pos:end="251:36">nip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="253:9" pos:end="257:9"><if pos:start="253:9" pos:end="257:9">if <condition pos:start="253:12" pos:end="253:23">(<expr pos:start="253:13" pos:end="253:22"><name pos:start="253:13" pos:end="253:17">lpes1</name> <operator pos:start="253:19" pos:end="253:20">==</operator> <literal type="number" pos:start="253:22" pos:end="253:22">0</literal></expr>)</condition> <block pos:start="253:25" pos:end="257:9">{<block_content pos:start="255:13" pos:end="255:45">

            <expr_stmt pos:start="255:13" pos:end="255:45"><expr pos:start="255:13" pos:end="255:44"><name pos:start="255:13" pos:end="255:19">new_msr</name> <operator pos:start="255:21" pos:end="255:22">|=</operator> <operator pos:start="255:24" pos:end="255:24">(</operator><name pos:start="255:25" pos:end="255:36">target_ulong</name><operator pos:start="255:37" pos:end="255:37">)</operator><name pos:start="255:38" pos:end="255:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:31"><expr pos:start="259:9" pos:end="259:30"><name pos:start="259:9" pos:end="259:11">msr</name> <operator pos:start="259:13" pos:end="259:14">|=</operator> <name pos:start="259:16" pos:end="259:30"><name pos:start="259:16" pos:end="259:18">env</name><operator pos:start="259:19" pos:end="259:20">-&gt;</operator><name pos:start="259:21" pos:end="259:30">error_code</name></name></expr>;</expr_stmt>

        <goto pos:start="261:9" pos:end="261:24">goto <name pos:start="261:14" pos:end="261:23">store_next</name>;</goto>

    <case pos:start="263:5" pos:end="263:31">case <expr pos:start="263:10" pos:end="263:30"><name pos:start="263:10" pos:end="263:30">POWERPC_EXCP_EXTERNAL</name></expr>:</case>  <comment type="block" pos:start="263:34" pos:end="263:79">/* External input                           */</comment>

        <expr_stmt pos:start="265:9" pos:end="265:22"><expr pos:start="265:9" pos:end="265:21"><name pos:start="265:9" pos:end="265:10">cs</name> <operator pos:start="265:12" pos:end="265:12">=</operator> <call pos:start="265:14" pos:end="265:21"><name pos:start="265:14" pos:end="265:16">CPU</name><argument_list pos:start="265:17" pos:end="265:21">(<argument pos:start="265:18" pos:end="265:20"><expr pos:start="265:18" pos:end="265:20"><name pos:start="265:18" pos:end="265:20">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="269:9" pos:end="273:9"><if pos:start="269:9" pos:end="273:9">if <condition pos:start="269:12" pos:end="269:23">(<expr pos:start="269:13" pos:end="269:22"><name pos:start="269:13" pos:end="269:17">lpes0</name> <operator pos:start="269:19" pos:end="269:20">==</operator> <literal type="number" pos:start="269:22" pos:end="269:22">1</literal></expr>)</condition> <block pos:start="269:25" pos:end="273:9">{<block_content pos:start="271:13" pos:end="271:45">

            <expr_stmt pos:start="271:13" pos:end="271:45"><expr pos:start="271:13" pos:end="271:44"><name pos:start="271:13" pos:end="271:19">new_msr</name> <operator pos:start="271:21" pos:end="271:22">|=</operator> <operator pos:start="271:24" pos:end="271:24">(</operator><name pos:start="271:25" pos:end="271:36">target_ulong</name><operator pos:start="271:37" pos:end="271:37">)</operator><name pos:start="271:38" pos:end="271:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="275:9" pos:end="281:9"><if pos:start="275:9" pos:end="281:9">if <condition pos:start="275:12" pos:end="275:28">(<expr pos:start="275:13" pos:end="275:27"><name pos:start="275:13" pos:end="275:27"><name pos:start="275:13" pos:end="275:15">env</name><operator pos:start="275:16" pos:end="275:17">-&gt;</operator><name pos:start="275:18" pos:end="275:27">mpic_proxy</name></name></expr>)</condition> <block pos:start="275:30" pos:end="281:9">{<block_content pos:start="279:13" pos:end="279:71">

            <comment type="block" pos:start="277:13" pos:end="277:42">/* IACK the IRQ on delivery */</comment>

            <expr_stmt pos:start="279:13" pos:end="279:71"><expr pos:start="279:13" pos:end="279:70"><name pos:start="279:13" pos:end="279:35"><name pos:start="279:13" pos:end="279:15">env</name><operator pos:start="279:16" pos:end="279:17">-&gt;</operator><name pos:start="279:18" pos:end="279:20">spr</name><index pos:start="279:21" pos:end="279:35">[<expr pos:start="279:22" pos:end="279:34"><name pos:start="279:22" pos:end="279:34">SPR_BOOKE_EPR</name></expr>]</index></name> <operator pos:start="279:37" pos:end="279:37">=</operator> <call pos:start="279:39" pos:end="279:70"><name pos:start="279:39" pos:end="279:46">ldl_phys</name><argument_list pos:start="279:47" pos:end="279:70">(<argument pos:start="279:48" pos:end="279:53"><expr pos:start="279:48" pos:end="279:53"><name pos:start="279:48" pos:end="279:53"><name pos:start="279:48" pos:end="279:49">cs</name><operator pos:start="279:50" pos:end="279:51">-&gt;</operator><name pos:start="279:52" pos:end="279:53">as</name></name></expr></argument>, <argument pos:start="279:56" pos:end="279:69"><expr pos:start="279:56" pos:end="279:69"><name pos:start="279:56" pos:end="279:69"><name pos:start="279:56" pos:end="279:58">env</name><operator pos:start="279:59" pos:end="279:60">-&gt;</operator><name pos:start="279:61" pos:end="279:69">mpic_iack</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="283:9" pos:end="283:24">goto <name pos:start="283:14" pos:end="283:23">store_next</name>;</goto>

    <case pos:start="285:5" pos:end="285:28">case <expr pos:start="285:10" pos:end="285:27"><name pos:start="285:10" pos:end="285:27">POWERPC_EXCP_ALIGN</name></expr>:</case>     <comment type="block" pos:start="285:34" pos:end="285:79">/* Alignment exception                      */</comment>

        <if_stmt pos:start="287:9" pos:end="291:9"><if pos:start="287:9" pos:end="291:9">if <condition pos:start="287:12" pos:end="287:23">(<expr pos:start="287:13" pos:end="287:22"><name pos:start="287:13" pos:end="287:17">lpes1</name> <operator pos:start="287:19" pos:end="287:20">==</operator> <literal type="number" pos:start="287:22" pos:end="287:22">0</literal></expr>)</condition> <block pos:start="287:25" pos:end="291:9">{<block_content pos:start="289:13" pos:end="289:45">

            <expr_stmt pos:start="289:13" pos:end="289:45"><expr pos:start="289:13" pos:end="289:44"><name pos:start="289:13" pos:end="289:19">new_msr</name> <operator pos:start="289:21" pos:end="289:22">|=</operator> <operator pos:start="289:24" pos:end="289:24">(</operator><name pos:start="289:25" pos:end="289:36">target_ulong</name><operator pos:start="289:37" pos:end="289:37">)</operator><name pos:start="289:38" pos:end="289:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="293:9" pos:end="293:32">/* XXX: this is false */</comment>

        <comment type="block" pos:start="295:9" pos:end="295:51">/* Get rS/rD and rA from faulting opcode */</comment>

        <expr_stmt pos:start="297:9" pos:end="299:52"><expr pos:start="297:9" pos:end="299:51"><name pos:start="297:9" pos:end="297:27"><name pos:start="297:9" pos:end="297:11">env</name><operator pos:start="297:12" pos:end="297:13">-&gt;</operator><name pos:start="297:14" pos:end="297:16">spr</name><index pos:start="297:17" pos:end="297:27">[<expr pos:start="297:18" pos:end="297:26"><name pos:start="297:18" pos:end="297:26">SPR_DSISR</name></expr>]</index></name> <operator pos:start="297:29" pos:end="297:30">|=</operator> <operator pos:start="297:32" pos:end="297:32">(</operator><call pos:start="297:33" pos:end="297:65"><name pos:start="297:33" pos:end="297:44">cpu_ldl_code</name><argument_list pos:start="297:45" pos:end="297:65">(<argument pos:start="297:46" pos:end="297:48"><expr pos:start="297:46" pos:end="297:48"><name pos:start="297:46" pos:end="297:48">env</name></expr></argument>, <argument pos:start="297:51" pos:end="297:64"><expr pos:start="297:51" pos:end="297:64"><operator pos:start="297:51" pos:end="297:51">(</operator><name pos:start="297:52" pos:end="297:59"><name pos:start="297:52" pos:end="297:54">env</name><operator pos:start="297:55" pos:end="297:56">-&gt;</operator><name pos:start="297:57" pos:end="297:59">nip</name></name> <operator pos:start="297:61" pos:end="297:61">-</operator> <literal type="number" pos:start="297:63" pos:end="297:63">4</literal><operator pos:start="297:64" pos:end="297:64">)</operator></expr></argument>)</argument_list></call>

                                <operator pos:start="299:33" pos:end="299:33">&amp;</operator> <literal type="number" pos:start="299:35" pos:end="299:44">0x03FF0000</literal><operator pos:start="299:45" pos:end="299:45">)</operator> <operator pos:start="299:47" pos:end="299:48">&gt;&gt;</operator> <literal type="number" pos:start="299:50" pos:end="299:51">16</literal></expr>;</expr_stmt>

        <goto pos:start="301:9" pos:end="301:24">goto <name pos:start="301:14" pos:end="301:23">store_next</name>;</goto>

    <case pos:start="303:5" pos:end="303:30">case <expr pos:start="303:10" pos:end="303:29"><name pos:start="303:10" pos:end="303:29">POWERPC_EXCP_PROGRAM</name></expr>:</case>   <comment type="block" pos:start="303:34" pos:end="303:79">/* Program exception                        */</comment>

        <switch pos:start="305:9" pos:end="393:9">switch <condition pos:start="305:16" pos:end="305:39">(<expr pos:start="305:17" pos:end="305:38"><name pos:start="305:17" pos:end="305:31"><name pos:start="305:17" pos:end="305:19">env</name><operator pos:start="305:20" pos:end="305:21">-&gt;</operator><name pos:start="305:22" pos:end="305:31">error_code</name></name> <operator pos:start="305:33" pos:end="305:33">&amp;</operator> <operator pos:start="305:35" pos:end="305:35">~</operator><literal type="number" pos:start="305:36" pos:end="305:38">0xF</literal></expr>)</condition> <block pos:start="305:41" pos:end="393:9">{<block_content pos:start="307:9" pos:end="391:18">

        <case pos:start="307:9" pos:end="307:29">case <expr pos:start="307:14" pos:end="307:28"><name pos:start="307:14" pos:end="307:28">POWERPC_EXCP_FP</name></expr>:</case>

            <if_stmt pos:start="309:13" pos:end="319:13"><if pos:start="309:13" pos:end="319:13">if <condition pos:start="309:16" pos:end="309:62">(<expr pos:start="309:17" pos:end="309:61"><operator pos:start="309:17" pos:end="309:17">(</operator><name pos:start="309:18" pos:end="309:24">msr_fe0</name> <operator pos:start="309:26" pos:end="309:27">==</operator> <literal type="number" pos:start="309:29" pos:end="309:29">0</literal> <operator pos:start="309:31" pos:end="309:32">&amp;&amp;</operator> <name pos:start="309:34" pos:end="309:40">msr_fe1</name> <operator pos:start="309:42" pos:end="309:43">==</operator> <literal type="number" pos:start="309:45" pos:end="309:45">0</literal><operator pos:start="309:46" pos:end="309:46">)</operator> <operator pos:start="309:48" pos:end="309:49">||</operator> <name pos:start="309:51" pos:end="309:56">msr_fp</name> <operator pos:start="309:58" pos:end="309:59">==</operator> <literal type="number" pos:start="309:61" pos:end="309:61">0</literal></expr>)</condition> <block pos:start="309:64" pos:end="319:13">{<block_content pos:start="311:17" pos:end="317:23">

                <expr_stmt pos:start="311:17" pos:end="311:62"><expr pos:start="311:17" pos:end="311:61"><call pos:start="311:17" pos:end="311:61"><name pos:start="311:17" pos:end="311:24">LOG_EXCP</name><argument_list pos:start="311:25" pos:end="311:61">(<argument pos:start="311:26" pos:end="311:60"><expr pos:start="311:26" pos:end="311:60"><literal type="string" pos:start="311:26" pos:end="311:60">"Ignore floating point exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:56"><expr pos:start="313:17" pos:end="313:55"><name pos:start="313:17" pos:end="313:35"><name pos:start="313:17" pos:end="313:18">cs</name><operator pos:start="313:19" pos:end="313:20">-&gt;</operator><name pos:start="313:21" pos:end="313:35">exception_index</name></name> <operator pos:start="313:37" pos:end="313:37">=</operator> <name pos:start="313:39" pos:end="313:55">POWERPC_EXCP_NONE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="315:17" pos:end="315:36"><expr pos:start="315:17" pos:end="315:35"><name pos:start="315:17" pos:end="315:31"><name pos:start="315:17" pos:end="315:19">env</name><operator pos:start="315:20" pos:end="315:21">-&gt;</operator><name pos:start="315:22" pos:end="315:31">error_code</name></name> <operator pos:start="315:33" pos:end="315:33">=</operator> <literal type="number" pos:start="315:35" pos:end="315:35">0</literal></expr>;</expr_stmt>

                <return pos:start="317:17" pos:end="317:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="321:13" pos:end="325:13"><if pos:start="321:13" pos:end="325:13">if <condition pos:start="321:16" pos:end="321:27">(<expr pos:start="321:17" pos:end="321:26"><name pos:start="321:17" pos:end="321:21">lpes1</name> <operator pos:start="321:23" pos:end="321:24">==</operator> <literal type="number" pos:start="321:26" pos:end="321:26">0</literal></expr>)</condition> <block pos:start="321:29" pos:end="325:13">{<block_content pos:start="323:17" pos:end="323:49">

                <expr_stmt pos:start="323:17" pos:end="323:49"><expr pos:start="323:17" pos:end="323:48"><name pos:start="323:17" pos:end="323:23">new_msr</name> <operator pos:start="323:25" pos:end="323:26">|=</operator> <operator pos:start="323:28" pos:end="323:28">(</operator><name pos:start="323:29" pos:end="323:40">target_ulong</name><operator pos:start="323:41" pos:end="323:41">)</operator><name pos:start="323:42" pos:end="323:48">MSR_HVB</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="327:13" pos:end="327:30"><expr pos:start="327:13" pos:end="327:29"><name pos:start="327:13" pos:end="327:15">msr</name> <operator pos:start="327:17" pos:end="327:18">|=</operator> <literal type="number" pos:start="327:20" pos:end="327:29">0x00100000</literal></expr>;</expr_stmt>

            <if_stmt pos:start="329:13" pos:end="333:13"><if pos:start="329:13" pos:end="333:13">if <condition pos:start="329:16" pos:end="329:35">(<expr pos:start="329:17" pos:end="329:34"><name pos:start="329:17" pos:end="329:23">msr_fe0</name> <operator pos:start="329:25" pos:end="329:26">==</operator> <name pos:start="329:28" pos:end="329:34">msr_fe1</name></expr>)</condition> <block pos:start="329:37" pos:end="333:13">{<block_content pos:start="331:17" pos:end="331:32">

                <goto pos:start="331:17" pos:end="331:32">goto <name pos:start="331:22" pos:end="331:31">store_next</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="335:13" pos:end="335:30"><expr pos:start="335:13" pos:end="335:29"><name pos:start="335:13" pos:end="335:15">msr</name> <operator pos:start="335:17" pos:end="335:18">|=</operator> <literal type="number" pos:start="335:20" pos:end="335:29">0x00010000</literal></expr>;</expr_stmt>

            <break pos:start="337:13" pos:end="337:18">break;</break>

        <case pos:start="339:9" pos:end="339:32">case <expr pos:start="339:14" pos:end="339:31"><name pos:start="339:14" pos:end="339:31">POWERPC_EXCP_INVAL</name></expr>:</case>

            <expr_stmt pos:start="341:13" pos:end="341:77"><expr pos:start="341:13" pos:end="341:76"><call pos:start="341:13" pos:end="341:76"><name pos:start="341:13" pos:end="341:20">LOG_EXCP</name><argument_list pos:start="341:21" pos:end="341:76">(<argument pos:start="341:22" pos:end="341:65"><expr pos:start="341:22" pos:end="341:65"><literal type="string" pos:start="341:22" pos:end="341:46">"Invalid instruction at "</literal> <name pos:start="341:48" pos:end="341:60">TARGET_FMT_lx</name> <literal type="string" pos:start="341:62" pos:end="341:65">"\n"</literal></expr></argument>, <argument pos:start="341:68" pos:end="341:75"><expr pos:start="341:68" pos:end="341:75"><name pos:start="341:68" pos:end="341:75"><name pos:start="341:68" pos:end="341:70">env</name><operator pos:start="341:71" pos:end="341:72">-&gt;</operator><name pos:start="341:73" pos:end="341:75">nip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="343:13" pos:end="347:13"><if pos:start="343:13" pos:end="347:13">if <condition pos:start="343:16" pos:end="343:27">(<expr pos:start="343:17" pos:end="343:26"><name pos:start="343:17" pos:end="343:21">lpes1</name> <operator pos:start="343:23" pos:end="343:24">==</operator> <literal type="number" pos:start="343:26" pos:end="343:26">0</literal></expr>)</condition> <block pos:start="343:29" pos:end="347:13">{<block_content pos:start="345:17" pos:end="345:49">

                <expr_stmt pos:start="345:17" pos:end="345:49"><expr pos:start="345:17" pos:end="345:48"><name pos:start="345:17" pos:end="345:23">new_msr</name> <operator pos:start="345:25" pos:end="345:26">|=</operator> <operator pos:start="345:28" pos:end="345:28">(</operator><name pos:start="345:29" pos:end="345:40">target_ulong</name><operator pos:start="345:41" pos:end="345:41">)</operator><name pos:start="345:42" pos:end="345:48">MSR_HVB</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:30"><expr pos:start="349:13" pos:end="349:29"><name pos:start="349:13" pos:end="349:15">msr</name> <operator pos:start="349:17" pos:end="349:18">|=</operator> <literal type="number" pos:start="349:20" pos:end="349:29">0x00080000</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:46"><expr pos:start="351:13" pos:end="351:45"><name pos:start="351:13" pos:end="351:35"><name pos:start="351:13" pos:end="351:15">env</name><operator pos:start="351:16" pos:end="351:17">-&gt;</operator><name pos:start="351:18" pos:end="351:20">spr</name><index pos:start="351:21" pos:end="351:35">[<expr pos:start="351:22" pos:end="351:34"><name pos:start="351:22" pos:end="351:34">SPR_BOOKE_ESR</name></expr>]</index></name> <operator pos:start="351:37" pos:end="351:37">=</operator> <name pos:start="351:39" pos:end="351:45">ESR_PIL</name></expr>;</expr_stmt>

            <break pos:start="353:13" pos:end="353:18">break;</break>

        <case pos:start="355:9" pos:end="355:31">case <expr pos:start="355:14" pos:end="355:30"><name pos:start="355:14" pos:end="355:30">POWERPC_EXCP_PRIV</name></expr>:</case>

            <if_stmt pos:start="357:13" pos:end="361:13"><if pos:start="357:13" pos:end="361:13">if <condition pos:start="357:16" pos:end="357:27">(<expr pos:start="357:17" pos:end="357:26"><name pos:start="357:17" pos:end="357:21">lpes1</name> <operator pos:start="357:23" pos:end="357:24">==</operator> <literal type="number" pos:start="357:26" pos:end="357:26">0</literal></expr>)</condition> <block pos:start="357:29" pos:end="361:13">{<block_content pos:start="359:17" pos:end="359:49">

                <expr_stmt pos:start="359:17" pos:end="359:49"><expr pos:start="359:17" pos:end="359:48"><name pos:start="359:17" pos:end="359:23">new_msr</name> <operator pos:start="359:25" pos:end="359:26">|=</operator> <operator pos:start="359:28" pos:end="359:28">(</operator><name pos:start="359:29" pos:end="359:40">target_ulong</name><operator pos:start="359:41" pos:end="359:41">)</operator><name pos:start="359:42" pos:end="359:48">MSR_HVB</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:30"><expr pos:start="363:13" pos:end="363:29"><name pos:start="363:13" pos:end="363:15">msr</name> <operator pos:start="363:17" pos:end="363:18">|=</operator> <literal type="number" pos:start="363:20" pos:end="363:29">0x00040000</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:46"><expr pos:start="365:13" pos:end="365:45"><name pos:start="365:13" pos:end="365:35"><name pos:start="365:13" pos:end="365:15">env</name><operator pos:start="365:16" pos:end="365:17">-&gt;</operator><name pos:start="365:18" pos:end="365:20">spr</name><index pos:start="365:21" pos:end="365:35">[<expr pos:start="365:22" pos:end="365:34"><name pos:start="365:22" pos:end="365:34">SPR_BOOKE_ESR</name></expr>]</index></name> <operator pos:start="365:37" pos:end="365:37">=</operator> <name pos:start="365:39" pos:end="365:45">ESR_PPR</name></expr>;</expr_stmt>

            <break pos:start="367:13" pos:end="367:18">break;</break>

        <case pos:start="369:9" pos:end="369:31">case <expr pos:start="369:14" pos:end="369:30"><name pos:start="369:14" pos:end="369:30">POWERPC_EXCP_TRAP</name></expr>:</case>

            <if_stmt pos:start="371:13" pos:end="375:13"><if pos:start="371:13" pos:end="375:13">if <condition pos:start="371:16" pos:end="371:27">(<expr pos:start="371:17" pos:end="371:26"><name pos:start="371:17" pos:end="371:21">lpes1</name> <operator pos:start="371:23" pos:end="371:24">==</operator> <literal type="number" pos:start="371:26" pos:end="371:26">0</literal></expr>)</condition> <block pos:start="371:29" pos:end="375:13">{<block_content pos:start="373:17" pos:end="373:49">

                <expr_stmt pos:start="373:17" pos:end="373:49"><expr pos:start="373:17" pos:end="373:48"><name pos:start="373:17" pos:end="373:23">new_msr</name> <operator pos:start="373:25" pos:end="373:26">|=</operator> <operator pos:start="373:28" pos:end="373:28">(</operator><name pos:start="373:29" pos:end="373:40">target_ulong</name><operator pos:start="373:41" pos:end="373:41">)</operator><name pos:start="373:42" pos:end="373:48">MSR_HVB</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="377:13" pos:end="377:30"><expr pos:start="377:13" pos:end="377:29"><name pos:start="377:13" pos:end="377:15">msr</name> <operator pos:start="377:17" pos:end="377:18">|=</operator> <literal type="number" pos:start="377:20" pos:end="377:29">0x00020000</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:46"><expr pos:start="379:13" pos:end="379:45"><name pos:start="379:13" pos:end="379:35"><name pos:start="379:13" pos:end="379:15">env</name><operator pos:start="379:16" pos:end="379:17">-&gt;</operator><name pos:start="379:18" pos:end="379:20">spr</name><index pos:start="379:21" pos:end="379:35">[<expr pos:start="379:22" pos:end="379:34"><name pos:start="379:22" pos:end="379:34">SPR_BOOKE_ESR</name></expr>]</index></name> <operator pos:start="379:37" pos:end="379:37">=</operator> <name pos:start="379:39" pos:end="379:45">ESR_PTR</name></expr>;</expr_stmt>

            <break pos:start="381:13" pos:end="381:18">break;</break>

        <default pos:start="383:9" pos:end="383:16">default:</default>

            <comment type="block" pos:start="385:13" pos:end="385:36">/* Should never occur */</comment>

            <expr_stmt pos:start="387:13" pos:end="389:39"><expr pos:start="387:13" pos:end="389:38"><call pos:start="387:13" pos:end="389:38"><name pos:start="387:13" pos:end="387:21">cpu_abort</name><argument_list pos:start="387:22" pos:end="389:38">(<argument pos:start="387:23" pos:end="387:24"><expr pos:start="387:23" pos:end="387:24"><name pos:start="387:23" pos:end="387:24">cs</name></expr></argument>, <argument pos:start="387:27" pos:end="387:68"><expr pos:start="387:27" pos:end="387:68"><literal type="string" pos:start="387:27" pos:end="387:68">"Invalid program exception %d. Aborting\n"</literal></expr></argument>,

                      <argument pos:start="389:23" pos:end="389:37"><expr pos:start="389:23" pos:end="389:37"><name pos:start="389:23" pos:end="389:37"><name pos:start="389:23" pos:end="389:25">env</name><operator pos:start="389:26" pos:end="389:27">-&gt;</operator><name pos:start="389:28" pos:end="389:37">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="391:13" pos:end="391:18">break;</break>

        </block_content>}</block></switch>

        <goto pos:start="395:9" pos:end="395:27">goto <name pos:start="395:14" pos:end="395:26">store_current</name>;</goto>

    <case pos:start="397:5" pos:end="397:26">case <expr pos:start="397:10" pos:end="397:25"><name pos:start="397:10" pos:end="397:25">POWERPC_EXCP_FPU</name></expr>:</case>       <comment type="block" pos:start="397:34" pos:end="397:79">/* Floating-point unavailable exception     */</comment>

        <if_stmt pos:start="399:9" pos:end="403:9"><if pos:start="399:9" pos:end="403:9">if <condition pos:start="399:12" pos:end="399:23">(<expr pos:start="399:13" pos:end="399:22"><name pos:start="399:13" pos:end="399:17">lpes1</name> <operator pos:start="399:19" pos:end="399:20">==</operator> <literal type="number" pos:start="399:22" pos:end="399:22">0</literal></expr>)</condition> <block pos:start="399:25" pos:end="403:9">{<block_content pos:start="401:13" pos:end="401:45">

            <expr_stmt pos:start="401:13" pos:end="401:45"><expr pos:start="401:13" pos:end="401:44"><name pos:start="401:13" pos:end="401:19">new_msr</name> <operator pos:start="401:21" pos:end="401:22">|=</operator> <operator pos:start="401:24" pos:end="401:24">(</operator><name pos:start="401:25" pos:end="401:36">target_ulong</name><operator pos:start="401:37" pos:end="401:37">)</operator><name pos:start="401:38" pos:end="401:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="405:9" pos:end="405:27">goto <name pos:start="405:14" pos:end="405:26">store_current</name>;</goto>

    <case pos:start="407:5" pos:end="407:30">case <expr pos:start="407:10" pos:end="407:29"><name pos:start="407:10" pos:end="407:29">POWERPC_EXCP_SYSCALL</name></expr>:</case>   <comment type="block" pos:start="407:34" pos:end="407:79">/* System call exception                    */</comment>

        <expr_stmt pos:start="409:9" pos:end="409:26"><expr pos:start="409:9" pos:end="409:25"><call pos:start="409:9" pos:end="409:25"><name pos:start="409:9" pos:end="409:20">dump_syscall</name><argument_list pos:start="409:21" pos:end="409:25">(<argument pos:start="409:22" pos:end="409:24"><expr pos:start="409:22" pos:end="409:24"><name pos:start="409:22" pos:end="409:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="411:9" pos:end="411:30"><expr pos:start="411:9" pos:end="411:29"><name pos:start="411:9" pos:end="411:11">lev</name> <operator pos:start="411:13" pos:end="411:13">=</operator> <name pos:start="411:15" pos:end="411:29"><name pos:start="411:15" pos:end="411:17">env</name><operator pos:start="411:18" pos:end="411:19">-&gt;</operator><name pos:start="411:20" pos:end="411:29">error_code</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="413:9" pos:end="419:9"><if pos:start="413:9" pos:end="419:9">if <condition pos:start="413:12" pos:end="413:44">(<expr pos:start="413:13" pos:end="413:43"><operator pos:start="413:13" pos:end="413:13">(</operator><name pos:start="413:14" pos:end="413:16">lev</name> <operator pos:start="413:18" pos:end="413:19">==</operator> <literal type="number" pos:start="413:21" pos:end="413:21">1</literal><operator pos:start="413:22" pos:end="413:22">)</operator> <operator pos:start="413:24" pos:end="413:25">&amp;&amp;</operator> <name pos:start="413:27" pos:end="413:43">cpu_ppc_hypercall</name></expr>)</condition> <block pos:start="413:46" pos:end="419:9">{<block_content pos:start="415:13" pos:end="417:19">

            <expr_stmt pos:start="415:13" pos:end="415:35"><expr pos:start="415:13" pos:end="415:34"><call pos:start="415:13" pos:end="415:34"><name pos:start="415:13" pos:end="415:29">cpu_ppc_hypercall</name><argument_list pos:start="415:30" pos:end="415:34">(<argument pos:start="415:31" pos:end="415:33"><expr pos:start="415:31" pos:end="415:33"><name pos:start="415:31" pos:end="415:33">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="417:13" pos:end="417:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="421:9" pos:end="425:9"><if pos:start="421:9" pos:end="425:9">if <condition pos:start="421:12" pos:end="421:51">(<expr pos:start="421:13" pos:end="421:50"><name pos:start="421:13" pos:end="421:15">lev</name> <operator pos:start="421:17" pos:end="421:18">==</operator> <literal type="number" pos:start="421:20" pos:end="421:20">1</literal> <operator pos:start="421:22" pos:end="421:23">||</operator> <operator pos:start="421:25" pos:end="421:25">(</operator><name pos:start="421:26" pos:end="421:30">lpes0</name> <operator pos:start="421:32" pos:end="421:33">==</operator> <literal type="number" pos:start="421:35" pos:end="421:35">0</literal> <operator pos:start="421:37" pos:end="421:38">&amp;&amp;</operator> <name pos:start="421:40" pos:end="421:44">lpes1</name> <operator pos:start="421:46" pos:end="421:47">==</operator> <literal type="number" pos:start="421:49" pos:end="421:49">0</literal><operator pos:start="421:50" pos:end="421:50">)</operator></expr>)</condition> <block pos:start="421:53" pos:end="425:9">{<block_content pos:start="423:13" pos:end="423:45">

            <expr_stmt pos:start="423:13" pos:end="423:45"><expr pos:start="423:13" pos:end="423:44"><name pos:start="423:13" pos:end="423:19">new_msr</name> <operator pos:start="423:21" pos:end="423:22">|=</operator> <operator pos:start="423:24" pos:end="423:24">(</operator><name pos:start="423:25" pos:end="423:36">target_ulong</name><operator pos:start="423:37" pos:end="423:37">)</operator><name pos:start="423:38" pos:end="423:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="427:9" pos:end="427:24">goto <name pos:start="427:14" pos:end="427:23">store_next</name>;</goto>

    <case pos:start="429:5" pos:end="429:26">case <expr pos:start="429:10" pos:end="429:25"><name pos:start="429:10" pos:end="429:25">POWERPC_EXCP_APU</name></expr>:</case>       <comment type="block" pos:start="429:34" pos:end="429:79">/* Auxiliary processor unavailable          */</comment>

        <goto pos:start="431:9" pos:end="431:27">goto <name pos:start="431:14" pos:end="431:26">store_current</name>;</goto>

    <case pos:start="433:5" pos:end="433:27">case <expr pos:start="433:10" pos:end="433:26"><name pos:start="433:10" pos:end="433:26">POWERPC_EXCP_DECR</name></expr>:</case>      <comment type="block" pos:start="433:34" pos:end="433:79">/* Decrementer exception                    */</comment>

        <if_stmt pos:start="435:9" pos:end="439:9"><if pos:start="435:9" pos:end="439:9">if <condition pos:start="435:12" pos:end="435:23">(<expr pos:start="435:13" pos:end="435:22"><name pos:start="435:13" pos:end="435:17">lpes1</name> <operator pos:start="435:19" pos:end="435:20">==</operator> <literal type="number" pos:start="435:22" pos:end="435:22">0</literal></expr>)</condition> <block pos:start="435:25" pos:end="439:9">{<block_content pos:start="437:13" pos:end="437:45">

            <expr_stmt pos:start="437:13" pos:end="437:45"><expr pos:start="437:13" pos:end="437:44"><name pos:start="437:13" pos:end="437:19">new_msr</name> <operator pos:start="437:21" pos:end="437:22">|=</operator> <operator pos:start="437:24" pos:end="437:24">(</operator><name pos:start="437:25" pos:end="437:36">target_ulong</name><operator pos:start="437:37" pos:end="437:37">)</operator><name pos:start="437:38" pos:end="437:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="441:9" pos:end="441:24">goto <name pos:start="441:14" pos:end="441:23">store_next</name>;</goto>

    <case pos:start="443:5" pos:end="443:26">case <expr pos:start="443:10" pos:end="443:25"><name pos:start="443:10" pos:end="443:25">POWERPC_EXCP_FIT</name></expr>:</case>       <comment type="block" pos:start="443:34" pos:end="443:79">/* Fixed-interval timer interrupt           */</comment>

        <comment type="block" pos:start="445:9" pos:end="445:24">/* FIT on 4xx */</comment>

        <expr_stmt pos:start="447:9" pos:end="447:36"><expr pos:start="447:9" pos:end="447:35"><call pos:start="447:9" pos:end="447:35"><name pos:start="447:9" pos:end="447:16">LOG_EXCP</name><argument_list pos:start="447:17" pos:end="447:35">(<argument pos:start="447:18" pos:end="447:34"><expr pos:start="447:18" pos:end="447:34"><literal type="string" pos:start="447:18" pos:end="447:34">"FIT exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="449:9" pos:end="449:24">goto <name pos:start="449:14" pos:end="449:23">store_next</name>;</goto>

    <case pos:start="451:5" pos:end="451:26">case <expr pos:start="451:10" pos:end="451:25"><name pos:start="451:10" pos:end="451:25">POWERPC_EXCP_WDT</name></expr>:</case>       <comment type="block" pos:start="451:34" pos:end="451:79">/* Watchdog timer interrupt                 */</comment>

        <expr_stmt pos:start="453:9" pos:end="453:36"><expr pos:start="453:9" pos:end="453:35"><call pos:start="453:9" pos:end="453:35"><name pos:start="453:9" pos:end="453:16">LOG_EXCP</name><argument_list pos:start="453:17" pos:end="453:35">(<argument pos:start="453:18" pos:end="453:34"><expr pos:start="453:18" pos:end="453:34"><literal type="string" pos:start="453:18" pos:end="453:34">"WDT exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="455:9" pos:end="469:9">switch <condition pos:start="455:16" pos:end="455:27">(<expr pos:start="455:17" pos:end="455:26"><name pos:start="455:17" pos:end="455:26">excp_model</name></expr>)</condition> <block pos:start="455:29" pos:end="469:9">{<block_content pos:start="457:9" pos:end="467:18">

        <case pos:start="457:9" pos:end="457:32">case <expr pos:start="457:14" pos:end="457:31"><name pos:start="457:14" pos:end="457:31">POWERPC_EXCP_BOOKE</name></expr>:</case>

            <expr_stmt pos:start="459:13" pos:end="459:35"><expr pos:start="459:13" pos:end="459:34"><name pos:start="459:13" pos:end="459:16">srr0</name> <operator pos:start="459:18" pos:end="459:18">=</operator> <name pos:start="459:20" pos:end="459:34">SPR_BOOKE_CSRR0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="461:13" pos:end="461:35"><expr pos:start="461:13" pos:end="461:34"><name pos:start="461:13" pos:end="461:16">srr1</name> <operator pos:start="461:18" pos:end="461:18">=</operator> <name pos:start="461:20" pos:end="461:34">SPR_BOOKE_CSRR1</name></expr>;</expr_stmt>

            <break pos:start="463:13" pos:end="463:18">break;</break>

        <default pos:start="465:9" pos:end="465:16">default:</default>

            <break pos:start="467:13" pos:end="467:18">break;</break>

        </block_content>}</block></switch>

        <goto pos:start="471:9" pos:end="471:24">goto <name pos:start="471:14" pos:end="471:23">store_next</name>;</goto>

    <case pos:start="473:5" pos:end="473:27">case <expr pos:start="473:10" pos:end="473:26"><name pos:start="473:10" pos:end="473:26">POWERPC_EXCP_DTLB</name></expr>:</case>      <comment type="block" pos:start="473:34" pos:end="473:79">/* Data TLB error                           */</comment>

        <goto pos:start="475:9" pos:end="475:24">goto <name pos:start="475:14" pos:end="475:23">store_next</name>;</goto>

    <case pos:start="477:5" pos:end="477:27">case <expr pos:start="477:10" pos:end="477:26"><name pos:start="477:10" pos:end="477:26">POWERPC_EXCP_ITLB</name></expr>:</case>      <comment type="block" pos:start="477:34" pos:end="477:79">/* Instruction TLB error                    */</comment>

        <goto pos:start="479:9" pos:end="479:24">goto <name pos:start="479:14" pos:end="479:23">store_next</name>;</goto>

    <case pos:start="481:5" pos:end="481:28">case <expr pos:start="481:10" pos:end="481:27"><name pos:start="481:10" pos:end="481:27">POWERPC_EXCP_DEBUG</name></expr>:</case>     <comment type="block" pos:start="481:34" pos:end="481:79">/* Debug interrupt                          */</comment>

        <switch pos:start="483:9" pos:end="503:9">switch <condition pos:start="483:16" pos:end="483:27">(<expr pos:start="483:17" pos:end="483:26"><name pos:start="483:17" pos:end="483:26">excp_model</name></expr>)</condition> <block pos:start="483:29" pos:end="503:9">{<block_content pos:start="485:9" pos:end="501:18">

        <case pos:start="485:9" pos:end="485:32">case <expr pos:start="485:14" pos:end="485:31"><name pos:start="485:14" pos:end="485:31">POWERPC_EXCP_BOOKE</name></expr>:</case>

            <comment type="block" pos:start="487:13" pos:end="487:66">/* FIXME: choose one or the other based on CPU type */</comment>

            <expr_stmt pos:start="489:13" pos:end="489:35"><expr pos:start="489:13" pos:end="489:34"><name pos:start="489:13" pos:end="489:16">srr0</name> <operator pos:start="489:18" pos:end="489:18">=</operator> <name pos:start="489:20" pos:end="489:34">SPR_BOOKE_DSRR0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="491:13" pos:end="491:35"><expr pos:start="491:13" pos:end="491:34"><name pos:start="491:13" pos:end="491:16">srr1</name> <operator pos:start="491:18" pos:end="491:18">=</operator> <name pos:start="491:20" pos:end="491:34">SPR_BOOKE_DSRR1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="493:13" pos:end="493:36"><expr pos:start="493:13" pos:end="493:35"><name pos:start="493:13" pos:end="493:17">asrr0</name> <operator pos:start="493:19" pos:end="493:19">=</operator> <name pos:start="493:21" pos:end="493:35">SPR_BOOKE_CSRR0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="495:13" pos:end="495:36"><expr pos:start="495:13" pos:end="495:35"><name pos:start="495:13" pos:end="495:17">asrr1</name> <operator pos:start="495:19" pos:end="495:19">=</operator> <name pos:start="495:21" pos:end="495:35">SPR_BOOKE_CSRR1</name></expr>;</expr_stmt>

            <break pos:start="497:13" pos:end="497:18">break;</break>

        <default pos:start="499:9" pos:end="499:16">default:</default>

            <break pos:start="501:13" pos:end="501:18">break;</break>

        </block_content>}</block></switch>

        <comment type="block" pos:start="505:9" pos:end="505:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="507:9" pos:end="507:68"><expr pos:start="507:9" pos:end="507:67"><call pos:start="507:9" pos:end="507:67"><name pos:start="507:9" pos:end="507:17">cpu_abort</name><argument_list pos:start="507:18" pos:end="507:67">(<argument pos:start="507:19" pos:end="507:20"><expr pos:start="507:19" pos:end="507:20"><name pos:start="507:19" pos:end="507:20">cs</name></expr></argument>, <argument pos:start="507:23" pos:end="507:66"><expr pos:start="507:23" pos:end="507:66"><literal type="string" pos:start="507:23" pos:end="507:66">"Debug exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="509:9" pos:end="509:24">goto <name pos:start="509:14" pos:end="509:23">store_next</name>;</goto>

    <case pos:start="511:5" pos:end="511:27">case <expr pos:start="511:10" pos:end="511:26"><name pos:start="511:10" pos:end="511:26">POWERPC_EXCP_SPEU</name></expr>:</case>      <comment type="block" pos:start="511:34" pos:end="511:79">/* SPE/embedded floating-point unavailable  */</comment>

        <expr_stmt pos:start="513:9" pos:end="513:42"><expr pos:start="513:9" pos:end="513:41"><name pos:start="513:9" pos:end="513:31"><name pos:start="513:9" pos:end="513:11">env</name><operator pos:start="513:12" pos:end="513:13">-&gt;</operator><name pos:start="513:14" pos:end="513:16">spr</name><index pos:start="513:17" pos:end="513:31">[<expr pos:start="513:18" pos:end="513:30"><name pos:start="513:18" pos:end="513:30">SPR_BOOKE_ESR</name></expr>]</index></name> <operator pos:start="513:33" pos:end="513:33">=</operator> <name pos:start="513:35" pos:end="513:41">ESR_SPV</name></expr>;</expr_stmt>

        <goto pos:start="515:9" pos:end="515:27">goto <name pos:start="515:14" pos:end="515:26">store_current</name>;</goto>

    <case pos:start="517:5" pos:end="517:28">case <expr pos:start="517:10" pos:end="517:27"><name pos:start="517:10" pos:end="517:27">POWERPC_EXCP_EFPDI</name></expr>:</case>     <comment type="block" pos:start="517:34" pos:end="517:79">/* Embedded floating-point data interrupt   */</comment>

        <comment type="block" pos:start="519:9" pos:end="519:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="521:9" pos:end="523:48"><expr pos:start="521:9" pos:end="523:47"><call pos:start="521:9" pos:end="523:47"><name pos:start="521:9" pos:end="521:17">cpu_abort</name><argument_list pos:start="521:18" pos:end="523:47">(<argument pos:start="521:19" pos:end="521:20"><expr pos:start="521:19" pos:end="521:20"><name pos:start="521:19" pos:end="521:20">cs</name></expr></argument>, <argument pos:start="521:23" pos:end="523:46"><expr pos:start="521:23" pos:end="523:46"><literal type="string" pos:start="521:23" pos:end="521:63">"Embedded floating point data exception "</literal>

                  <literal type="string" pos:start="523:19" pos:end="523:46">"is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="525:9" pos:end="525:42"><expr pos:start="525:9" pos:end="525:41"><name pos:start="525:9" pos:end="525:31"><name pos:start="525:9" pos:end="525:11">env</name><operator pos:start="525:12" pos:end="525:13">-&gt;</operator><name pos:start="525:14" pos:end="525:16">spr</name><index pos:start="525:17" pos:end="525:31">[<expr pos:start="525:18" pos:end="525:30"><name pos:start="525:18" pos:end="525:30">SPR_BOOKE_ESR</name></expr>]</index></name> <operator pos:start="525:33" pos:end="525:33">=</operator> <name pos:start="525:35" pos:end="525:41">ESR_SPV</name></expr>;</expr_stmt>

        <goto pos:start="527:9" pos:end="527:24">goto <name pos:start="527:14" pos:end="527:23">store_next</name>;</goto>

    <case pos:start="529:5" pos:end="529:28">case <expr pos:start="529:10" pos:end="529:27"><name pos:start="529:10" pos:end="529:27">POWERPC_EXCP_EFPRI</name></expr>:</case>     <comment type="block" pos:start="529:34" pos:end="529:79">/* Embedded floating-point round interrupt  */</comment>

        <comment type="block" pos:start="531:9" pos:end="531:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="533:9" pos:end="535:48"><expr pos:start="533:9" pos:end="535:47"><call pos:start="533:9" pos:end="535:47"><name pos:start="533:9" pos:end="533:17">cpu_abort</name><argument_list pos:start="533:18" pos:end="535:47">(<argument pos:start="533:19" pos:end="533:20"><expr pos:start="533:19" pos:end="533:20"><name pos:start="533:19" pos:end="533:20">cs</name></expr></argument>, <argument pos:start="533:23" pos:end="535:46"><expr pos:start="533:23" pos:end="535:46"><literal type="string" pos:start="533:23" pos:end="533:64">"Embedded floating point round exception "</literal>

                  <literal type="string" pos:start="535:19" pos:end="535:46">"is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="537:9" pos:end="537:42"><expr pos:start="537:9" pos:end="537:41"><name pos:start="537:9" pos:end="537:31"><name pos:start="537:9" pos:end="537:11">env</name><operator pos:start="537:12" pos:end="537:13">-&gt;</operator><name pos:start="537:14" pos:end="537:16">spr</name><index pos:start="537:17" pos:end="537:31">[<expr pos:start="537:18" pos:end="537:30"><name pos:start="537:18" pos:end="537:30">SPR_BOOKE_ESR</name></expr>]</index></name> <operator pos:start="537:33" pos:end="537:33">=</operator> <name pos:start="537:35" pos:end="537:41">ESR_SPV</name></expr>;</expr_stmt>

        <goto pos:start="539:9" pos:end="539:24">goto <name pos:start="539:14" pos:end="539:23">store_next</name>;</goto>

    <case pos:start="541:5" pos:end="541:29">case <expr pos:start="541:10" pos:end="541:28"><name pos:start="541:10" pos:end="541:28">POWERPC_EXCP_EPERFM</name></expr>:</case>    <comment type="block" pos:start="541:34" pos:end="541:79">/* Embedded performance monitor interrupt   */</comment>

        <comment type="block" pos:start="543:9" pos:end="543:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="545:9" pos:end="547:78"><expr pos:start="545:9" pos:end="547:77"><call pos:start="545:9" pos:end="547:77"><name pos:start="545:9" pos:end="545:17">cpu_abort</name><argument_list pos:start="545:18" pos:end="547:77">(<argument pos:start="545:19" pos:end="545:20"><expr pos:start="545:19" pos:end="545:20"><name pos:start="545:19" pos:end="545:20">cs</name></expr></argument>,

                  <argument pos:start="547:19" pos:end="547:76"><expr pos:start="547:19" pos:end="547:76"><literal type="string" pos:start="547:19" pos:end="547:76">"Performance counter exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="549:9" pos:end="549:24">goto <name pos:start="549:14" pos:end="549:23">store_next</name>;</goto>

    <case pos:start="551:5" pos:end="551:28">case <expr pos:start="551:10" pos:end="551:27"><name pos:start="551:10" pos:end="551:27">POWERPC_EXCP_DOORI</name></expr>:</case>     <comment type="block" pos:start="551:34" pos:end="551:79">/* Embedded doorbell interrupt              */</comment>

        <goto pos:start="553:9" pos:end="553:24">goto <name pos:start="553:14" pos:end="553:23">store_next</name>;</goto>

    <case pos:start="555:5" pos:end="555:29">case <expr pos:start="555:10" pos:end="555:28"><name pos:start="555:10" pos:end="555:28">POWERPC_EXCP_DOORCI</name></expr>:</case>    <comment type="block" pos:start="555:34" pos:end="555:79">/* Embedded doorbell critical interrupt     */</comment>

        <expr_stmt pos:start="557:9" pos:end="557:31"><expr pos:start="557:9" pos:end="557:30"><name pos:start="557:9" pos:end="557:12">srr0</name> <operator pos:start="557:14" pos:end="557:14">=</operator> <name pos:start="557:16" pos:end="557:30">SPR_BOOKE_CSRR0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="559:9" pos:end="559:31"><expr pos:start="559:9" pos:end="559:30"><name pos:start="559:9" pos:end="559:12">srr1</name> <operator pos:start="559:14" pos:end="559:14">=</operator> <name pos:start="559:16" pos:end="559:30">SPR_BOOKE_CSRR1</name></expr>;</expr_stmt>

        <goto pos:start="561:9" pos:end="561:24">goto <name pos:start="561:14" pos:end="561:23">store_next</name>;</goto>

    <case pos:start="563:5" pos:end="563:28">case <expr pos:start="563:10" pos:end="563:27"><name pos:start="563:10" pos:end="563:27">POWERPC_EXCP_RESET</name></expr>:</case>     <comment type="block" pos:start="563:34" pos:end="563:79">/* System reset exception                   */</comment>

        <if_stmt pos:start="565:9" pos:end="575:9"><if pos:start="565:9" pos:end="571:9">if <condition pos:start="565:12" pos:end="565:20">(<expr pos:start="565:13" pos:end="565:19"><name pos:start="565:13" pos:end="565:19">msr_pow</name></expr>)</condition> <block pos:start="565:22" pos:end="571:9">{<block_content pos:start="569:13" pos:end="569:27">

            <comment type="block" pos:start="567:13" pos:end="567:63">/* indicate that we resumed from power save mode */</comment>

            <expr_stmt pos:start="569:13" pos:end="569:27"><expr pos:start="569:13" pos:end="569:26"><name pos:start="569:13" pos:end="569:15">msr</name> <operator pos:start="569:17" pos:end="569:18">|=</operator> <literal type="number" pos:start="569:20" pos:end="569:26">0x10000</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="571:11" pos:end="575:9">else <block pos:start="571:16" pos:end="575:9">{<block_content pos:start="573:13" pos:end="573:52">

            <expr_stmt pos:start="573:13" pos:end="573:52"><expr pos:start="573:13" pos:end="573:51"><name pos:start="573:13" pos:end="573:19">new_msr</name> <operator pos:start="573:21" pos:end="573:22">&amp;=</operator> <operator pos:start="573:24" pos:end="573:24">~</operator><operator pos:start="573:25" pos:end="573:25">(</operator><operator pos:start="573:26" pos:end="573:26">(</operator><name pos:start="573:27" pos:end="573:38">target_ulong</name><operator pos:start="573:39" pos:end="573:39">)</operator><literal type="number" pos:start="573:40" pos:end="573:40">1</literal> <operator pos:start="573:42" pos:end="573:43">&lt;&lt;</operator> <name pos:start="573:45" pos:end="573:50">MSR_ME</name><operator pos:start="573:51" pos:end="573:51">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="579:9" pos:end="585:9"><if pos:start="579:9" pos:end="585:9">if <condition pos:start="579:12" pos:end="579:14">(<expr pos:start="579:13" pos:end="579:13"><literal type="number" pos:start="579:13" pos:end="579:13">0</literal></expr>)</condition> <block pos:start="579:16" pos:end="585:9">{<block_content pos:start="583:13" pos:end="583:45">

            <comment type="block" pos:start="581:13" pos:end="581:78">/* XXX: find a suitable condition to enable the hypervisor mode */</comment>

            <expr_stmt pos:start="583:13" pos:end="583:45"><expr pos:start="583:13" pos:end="583:44"><name pos:start="583:13" pos:end="583:19">new_msr</name> <operator pos:start="583:21" pos:end="583:22">|=</operator> <operator pos:start="583:24" pos:end="583:24">(</operator><name pos:start="583:25" pos:end="583:36">target_ulong</name><operator pos:start="583:37" pos:end="583:37">)</operator><name pos:start="583:38" pos:end="583:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="587:9" pos:end="587:16"><expr pos:start="587:9" pos:end="587:15"><name pos:start="587:9" pos:end="587:11">ail</name> <operator pos:start="587:13" pos:end="587:13">=</operator> <literal type="number" pos:start="587:15" pos:end="587:15">0</literal></expr>;</expr_stmt>

        <goto pos:start="589:9" pos:end="589:24">goto <name pos:start="589:14" pos:end="589:23">store_next</name>;</goto>

    <case pos:start="591:5" pos:end="591:27">case <expr pos:start="591:10" pos:end="591:26"><name pos:start="591:10" pos:end="591:26">POWERPC_EXCP_DSEG</name></expr>:</case>      <comment type="block" pos:start="591:34" pos:end="591:79">/* Data segment exception                   */</comment>

        <if_stmt pos:start="593:9" pos:end="597:9"><if pos:start="593:9" pos:end="597:9">if <condition pos:start="593:12" pos:end="593:23">(<expr pos:start="593:13" pos:end="593:22"><name pos:start="593:13" pos:end="593:17">lpes1</name> <operator pos:start="593:19" pos:end="593:20">==</operator> <literal type="number" pos:start="593:22" pos:end="593:22">0</literal></expr>)</condition> <block pos:start="593:25" pos:end="597:9">{<block_content pos:start="595:13" pos:end="595:45">

            <expr_stmt pos:start="595:13" pos:end="595:45"><expr pos:start="595:13" pos:end="595:44"><name pos:start="595:13" pos:end="595:19">new_msr</name> <operator pos:start="595:21" pos:end="595:22">|=</operator> <operator pos:start="595:24" pos:end="595:24">(</operator><name pos:start="595:25" pos:end="595:36">target_ulong</name><operator pos:start="595:37" pos:end="595:37">)</operator><name pos:start="595:38" pos:end="595:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="599:9" pos:end="599:24">goto <name pos:start="599:14" pos:end="599:23">store_next</name>;</goto>

    <case pos:start="601:5" pos:end="601:27">case <expr pos:start="601:10" pos:end="601:26"><name pos:start="601:10" pos:end="601:26">POWERPC_EXCP_ISEG</name></expr>:</case>      <comment type="block" pos:start="601:34" pos:end="601:79">/* Instruction segment exception            */</comment>

        <if_stmt pos:start="603:9" pos:end="607:9"><if pos:start="603:9" pos:end="607:9">if <condition pos:start="603:12" pos:end="603:23">(<expr pos:start="603:13" pos:end="603:22"><name pos:start="603:13" pos:end="603:17">lpes1</name> <operator pos:start="603:19" pos:end="603:20">==</operator> <literal type="number" pos:start="603:22" pos:end="603:22">0</literal></expr>)</condition> <block pos:start="603:25" pos:end="607:9">{<block_content pos:start="605:13" pos:end="605:45">

            <expr_stmt pos:start="605:13" pos:end="605:45"><expr pos:start="605:13" pos:end="605:44"><name pos:start="605:13" pos:end="605:19">new_msr</name> <operator pos:start="605:21" pos:end="605:22">|=</operator> <operator pos:start="605:24" pos:end="605:24">(</operator><name pos:start="605:25" pos:end="605:36">target_ulong</name><operator pos:start="605:37" pos:end="605:37">)</operator><name pos:start="605:38" pos:end="605:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="609:9" pos:end="609:24">goto <name pos:start="609:14" pos:end="609:23">store_next</name>;</goto>

    <case pos:start="611:5" pos:end="611:28">case <expr pos:start="611:10" pos:end="611:27"><name pos:start="611:10" pos:end="611:27">POWERPC_EXCP_HDECR</name></expr>:</case>     <comment type="block" pos:start="611:34" pos:end="611:79">/* Hypervisor decrementer exception         */</comment>

        <expr_stmt pos:start="613:9" pos:end="613:25"><expr pos:start="613:9" pos:end="613:24"><name pos:start="613:9" pos:end="613:12">srr0</name> <operator pos:start="613:14" pos:end="613:14">=</operator> <name pos:start="613:16" pos:end="613:24">SPR_HSRR0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="615:9" pos:end="615:25"><expr pos:start="615:9" pos:end="615:24"><name pos:start="615:9" pos:end="615:12">srr1</name> <operator pos:start="615:14" pos:end="615:14">=</operator> <name pos:start="615:16" pos:end="615:24">SPR_HSRR1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="617:9" pos:end="617:41"><expr pos:start="617:9" pos:end="617:40"><name pos:start="617:9" pos:end="617:15">new_msr</name> <operator pos:start="617:17" pos:end="617:18">|=</operator> <operator pos:start="617:20" pos:end="617:20">(</operator><name pos:start="617:21" pos:end="617:32">target_ulong</name><operator pos:start="617:33" pos:end="617:33">)</operator><name pos:start="617:34" pos:end="617:40">MSR_HVB</name></expr>;</expr_stmt>

        <expr_stmt pos:start="619:9" pos:end="619:58"><expr pos:start="619:9" pos:end="619:57"><name pos:start="619:9" pos:end="619:15">new_msr</name> <operator pos:start="619:17" pos:end="619:18">|=</operator> <name pos:start="619:20" pos:end="619:27"><name pos:start="619:20" pos:end="619:22">env</name><operator pos:start="619:23" pos:end="619:24">-&gt;</operator><name pos:start="619:25" pos:end="619:27">msr</name></name> <operator pos:start="619:29" pos:end="619:29">&amp;</operator> <operator pos:start="619:31" pos:end="619:31">(</operator><operator pos:start="619:32" pos:end="619:32">(</operator><name pos:start="619:33" pos:end="619:44">target_ulong</name><operator pos:start="619:45" pos:end="619:45">)</operator><literal type="number" pos:start="619:46" pos:end="619:46">1</literal> <operator pos:start="619:48" pos:end="619:49">&lt;&lt;</operator> <name pos:start="619:51" pos:end="619:56">MSR_RI</name><operator pos:start="619:57" pos:end="619:57">)</operator></expr>;</expr_stmt>

        <goto pos:start="621:9" pos:end="621:24">goto <name pos:start="621:14" pos:end="621:23">store_next</name>;</goto>

    <case pos:start="623:5" pos:end="623:28">case <expr pos:start="623:10" pos:end="623:27"><name pos:start="623:10" pos:end="623:27">POWERPC_EXCP_TRACE</name></expr>:</case>     <comment type="block" pos:start="623:34" pos:end="623:79">/* Trace exception                          */</comment>

        <if_stmt pos:start="625:9" pos:end="629:9"><if pos:start="625:9" pos:end="629:9">if <condition pos:start="625:12" pos:end="625:23">(<expr pos:start="625:13" pos:end="625:22"><name pos:start="625:13" pos:end="625:17">lpes1</name> <operator pos:start="625:19" pos:end="625:20">==</operator> <literal type="number" pos:start="625:22" pos:end="625:22">0</literal></expr>)</condition> <block pos:start="625:25" pos:end="629:9">{<block_content pos:start="627:13" pos:end="627:45">

            <expr_stmt pos:start="627:13" pos:end="627:45"><expr pos:start="627:13" pos:end="627:44"><name pos:start="627:13" pos:end="627:19">new_msr</name> <operator pos:start="627:21" pos:end="627:22">|=</operator> <operator pos:start="627:24" pos:end="627:24">(</operator><name pos:start="627:25" pos:end="627:36">target_ulong</name><operator pos:start="627:37" pos:end="627:37">)</operator><name pos:start="627:38" pos:end="627:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="631:9" pos:end="631:24">goto <name pos:start="631:14" pos:end="631:23">store_next</name>;</goto>

    <case pos:start="633:5" pos:end="633:27">case <expr pos:start="633:10" pos:end="633:26"><name pos:start="633:10" pos:end="633:26">POWERPC_EXCP_HDSI</name></expr>:</case>      <comment type="block" pos:start="633:34" pos:end="633:79">/* Hypervisor data storage exception        */</comment>

        <expr_stmt pos:start="635:9" pos:end="635:25"><expr pos:start="635:9" pos:end="635:24"><name pos:start="635:9" pos:end="635:12">srr0</name> <operator pos:start="635:14" pos:end="635:14">=</operator> <name pos:start="635:16" pos:end="635:24">SPR_HSRR0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="637:9" pos:end="637:25"><expr pos:start="637:9" pos:end="637:24"><name pos:start="637:9" pos:end="637:12">srr1</name> <operator pos:start="637:14" pos:end="637:14">=</operator> <name pos:start="637:16" pos:end="637:24">SPR_HSRR1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="639:9" pos:end="639:41"><expr pos:start="639:9" pos:end="639:40"><name pos:start="639:9" pos:end="639:15">new_msr</name> <operator pos:start="639:17" pos:end="639:18">|=</operator> <operator pos:start="639:20" pos:end="639:20">(</operator><name pos:start="639:21" pos:end="639:32">target_ulong</name><operator pos:start="639:33" pos:end="639:33">)</operator><name pos:start="639:34" pos:end="639:40">MSR_HVB</name></expr>;</expr_stmt>

        <expr_stmt pos:start="641:9" pos:end="641:58"><expr pos:start="641:9" pos:end="641:57"><name pos:start="641:9" pos:end="641:15">new_msr</name> <operator pos:start="641:17" pos:end="641:18">|=</operator> <name pos:start="641:20" pos:end="641:27"><name pos:start="641:20" pos:end="641:22">env</name><operator pos:start="641:23" pos:end="641:24">-&gt;</operator><name pos:start="641:25" pos:end="641:27">msr</name></name> <operator pos:start="641:29" pos:end="641:29">&amp;</operator> <operator pos:start="641:31" pos:end="641:31">(</operator><operator pos:start="641:32" pos:end="641:32">(</operator><name pos:start="641:33" pos:end="641:44">target_ulong</name><operator pos:start="641:45" pos:end="641:45">)</operator><literal type="number" pos:start="641:46" pos:end="641:46">1</literal> <operator pos:start="641:48" pos:end="641:49">&lt;&lt;</operator> <name pos:start="641:51" pos:end="641:56">MSR_RI</name><operator pos:start="641:57" pos:end="641:57">)</operator></expr>;</expr_stmt>

        <goto pos:start="643:9" pos:end="643:24">goto <name pos:start="643:14" pos:end="643:23">store_next</name>;</goto>

    <case pos:start="645:5" pos:end="645:27">case <expr pos:start="645:10" pos:end="645:26"><name pos:start="645:10" pos:end="645:26">POWERPC_EXCP_HISI</name></expr>:</case>      <comment type="block" pos:start="645:34" pos:end="645:79">/* Hypervisor instruction storage exception */</comment>

        <expr_stmt pos:start="647:9" pos:end="647:25"><expr pos:start="647:9" pos:end="647:24"><name pos:start="647:9" pos:end="647:12">srr0</name> <operator pos:start="647:14" pos:end="647:14">=</operator> <name pos:start="647:16" pos:end="647:24">SPR_HSRR0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="649:9" pos:end="649:25"><expr pos:start="649:9" pos:end="649:24"><name pos:start="649:9" pos:end="649:12">srr1</name> <operator pos:start="649:14" pos:end="649:14">=</operator> <name pos:start="649:16" pos:end="649:24">SPR_HSRR1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="651:9" pos:end="651:41"><expr pos:start="651:9" pos:end="651:40"><name pos:start="651:9" pos:end="651:15">new_msr</name> <operator pos:start="651:17" pos:end="651:18">|=</operator> <operator pos:start="651:20" pos:end="651:20">(</operator><name pos:start="651:21" pos:end="651:32">target_ulong</name><operator pos:start="651:33" pos:end="651:33">)</operator><name pos:start="651:34" pos:end="651:40">MSR_HVB</name></expr>;</expr_stmt>

        <expr_stmt pos:start="653:9" pos:end="653:58"><expr pos:start="653:9" pos:end="653:57"><name pos:start="653:9" pos:end="653:15">new_msr</name> <operator pos:start="653:17" pos:end="653:18">|=</operator> <name pos:start="653:20" pos:end="653:27"><name pos:start="653:20" pos:end="653:22">env</name><operator pos:start="653:23" pos:end="653:24">-&gt;</operator><name pos:start="653:25" pos:end="653:27">msr</name></name> <operator pos:start="653:29" pos:end="653:29">&amp;</operator> <operator pos:start="653:31" pos:end="653:31">(</operator><operator pos:start="653:32" pos:end="653:32">(</operator><name pos:start="653:33" pos:end="653:44">target_ulong</name><operator pos:start="653:45" pos:end="653:45">)</operator><literal type="number" pos:start="653:46" pos:end="653:46">1</literal> <operator pos:start="653:48" pos:end="653:49">&lt;&lt;</operator> <name pos:start="653:51" pos:end="653:56">MSR_RI</name><operator pos:start="653:57" pos:end="653:57">)</operator></expr>;</expr_stmt>

        <goto pos:start="655:9" pos:end="655:24">goto <name pos:start="655:14" pos:end="655:23">store_next</name>;</goto>

    <case pos:start="657:5" pos:end="657:28">case <expr pos:start="657:10" pos:end="657:27"><name pos:start="657:10" pos:end="657:27">POWERPC_EXCP_HDSEG</name></expr>:</case>     <comment type="block" pos:start="657:34" pos:end="657:79">/* Hypervisor data segment exception        */</comment>

        <expr_stmt pos:start="659:9" pos:end="659:25"><expr pos:start="659:9" pos:end="659:24"><name pos:start="659:9" pos:end="659:12">srr0</name> <operator pos:start="659:14" pos:end="659:14">=</operator> <name pos:start="659:16" pos:end="659:24">SPR_HSRR0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="661:9" pos:end="661:25"><expr pos:start="661:9" pos:end="661:24"><name pos:start="661:9" pos:end="661:12">srr1</name> <operator pos:start="661:14" pos:end="661:14">=</operator> <name pos:start="661:16" pos:end="661:24">SPR_HSRR1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="663:9" pos:end="663:41"><expr pos:start="663:9" pos:end="663:40"><name pos:start="663:9" pos:end="663:15">new_msr</name> <operator pos:start="663:17" pos:end="663:18">|=</operator> <operator pos:start="663:20" pos:end="663:20">(</operator><name pos:start="663:21" pos:end="663:32">target_ulong</name><operator pos:start="663:33" pos:end="663:33">)</operator><name pos:start="663:34" pos:end="663:40">MSR_HVB</name></expr>;</expr_stmt>

        <expr_stmt pos:start="665:9" pos:end="665:58"><expr pos:start="665:9" pos:end="665:57"><name pos:start="665:9" pos:end="665:15">new_msr</name> <operator pos:start="665:17" pos:end="665:18">|=</operator> <name pos:start="665:20" pos:end="665:27"><name pos:start="665:20" pos:end="665:22">env</name><operator pos:start="665:23" pos:end="665:24">-&gt;</operator><name pos:start="665:25" pos:end="665:27">msr</name></name> <operator pos:start="665:29" pos:end="665:29">&amp;</operator> <operator pos:start="665:31" pos:end="665:31">(</operator><operator pos:start="665:32" pos:end="665:32">(</operator><name pos:start="665:33" pos:end="665:44">target_ulong</name><operator pos:start="665:45" pos:end="665:45">)</operator><literal type="number" pos:start="665:46" pos:end="665:46">1</literal> <operator pos:start="665:48" pos:end="665:49">&lt;&lt;</operator> <name pos:start="665:51" pos:end="665:56">MSR_RI</name><operator pos:start="665:57" pos:end="665:57">)</operator></expr>;</expr_stmt>

        <goto pos:start="667:9" pos:end="667:24">goto <name pos:start="667:14" pos:end="667:23">store_next</name>;</goto>

    <case pos:start="669:5" pos:end="669:28">case <expr pos:start="669:10" pos:end="669:27"><name pos:start="669:10" pos:end="669:27">POWERPC_EXCP_HISEG</name></expr>:</case>     <comment type="block" pos:start="669:34" pos:end="669:79">/* Hypervisor instruction segment exception */</comment>

        <expr_stmt pos:start="671:9" pos:end="671:25"><expr pos:start="671:9" pos:end="671:24"><name pos:start="671:9" pos:end="671:12">srr0</name> <operator pos:start="671:14" pos:end="671:14">=</operator> <name pos:start="671:16" pos:end="671:24">SPR_HSRR0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="673:9" pos:end="673:25"><expr pos:start="673:9" pos:end="673:24"><name pos:start="673:9" pos:end="673:12">srr1</name> <operator pos:start="673:14" pos:end="673:14">=</operator> <name pos:start="673:16" pos:end="673:24">SPR_HSRR1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="675:9" pos:end="675:41"><expr pos:start="675:9" pos:end="675:40"><name pos:start="675:9" pos:end="675:15">new_msr</name> <operator pos:start="675:17" pos:end="675:18">|=</operator> <operator pos:start="675:20" pos:end="675:20">(</operator><name pos:start="675:21" pos:end="675:32">target_ulong</name><operator pos:start="675:33" pos:end="675:33">)</operator><name pos:start="675:34" pos:end="675:40">MSR_HVB</name></expr>;</expr_stmt>

        <expr_stmt pos:start="677:9" pos:end="677:58"><expr pos:start="677:9" pos:end="677:57"><name pos:start="677:9" pos:end="677:15">new_msr</name> <operator pos:start="677:17" pos:end="677:18">|=</operator> <name pos:start="677:20" pos:end="677:27"><name pos:start="677:20" pos:end="677:22">env</name><operator pos:start="677:23" pos:end="677:24">-&gt;</operator><name pos:start="677:25" pos:end="677:27">msr</name></name> <operator pos:start="677:29" pos:end="677:29">&amp;</operator> <operator pos:start="677:31" pos:end="677:31">(</operator><operator pos:start="677:32" pos:end="677:32">(</operator><name pos:start="677:33" pos:end="677:44">target_ulong</name><operator pos:start="677:45" pos:end="677:45">)</operator><literal type="number" pos:start="677:46" pos:end="677:46">1</literal> <operator pos:start="677:48" pos:end="677:49">&lt;&lt;</operator> <name pos:start="677:51" pos:end="677:56">MSR_RI</name><operator pos:start="677:57" pos:end="677:57">)</operator></expr>;</expr_stmt>

        <goto pos:start="679:9" pos:end="679:24">goto <name pos:start="679:14" pos:end="679:23">store_next</name>;</goto>

    <case pos:start="681:5" pos:end="681:26">case <expr pos:start="681:10" pos:end="681:25"><name pos:start="681:10" pos:end="681:25">POWERPC_EXCP_VPU</name></expr>:</case>       <comment type="block" pos:start="681:34" pos:end="681:79">/* Vector unavailable exception             */</comment>

        <if_stmt pos:start="683:9" pos:end="687:9"><if pos:start="683:9" pos:end="687:9">if <condition pos:start="683:12" pos:end="683:23">(<expr pos:start="683:13" pos:end="683:22"><name pos:start="683:13" pos:end="683:17">lpes1</name> <operator pos:start="683:19" pos:end="683:20">==</operator> <literal type="number" pos:start="683:22" pos:end="683:22">0</literal></expr>)</condition> <block pos:start="683:25" pos:end="687:9">{<block_content pos:start="685:13" pos:end="685:45">

            <expr_stmt pos:start="685:13" pos:end="685:45"><expr pos:start="685:13" pos:end="685:44"><name pos:start="685:13" pos:end="685:19">new_msr</name> <operator pos:start="685:21" pos:end="685:22">|=</operator> <operator pos:start="685:24" pos:end="685:24">(</operator><name pos:start="685:25" pos:end="685:36">target_ulong</name><operator pos:start="685:37" pos:end="685:37">)</operator><name pos:start="685:38" pos:end="685:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="689:9" pos:end="689:27">goto <name pos:start="689:14" pos:end="689:26">store_current</name>;</goto>

    <case pos:start="691:5" pos:end="691:27">case <expr pos:start="691:10" pos:end="691:26"><name pos:start="691:10" pos:end="691:26">POWERPC_EXCP_VSXU</name></expr>:</case>       <comment type="block" pos:start="691:35" pos:end="691:79">/* VSX unavailable exception               */</comment>

        <if_stmt pos:start="693:9" pos:end="697:9"><if pos:start="693:9" pos:end="697:9">if <condition pos:start="693:12" pos:end="693:23">(<expr pos:start="693:13" pos:end="693:22"><name pos:start="693:13" pos:end="693:17">lpes1</name> <operator pos:start="693:19" pos:end="693:20">==</operator> <literal type="number" pos:start="693:22" pos:end="693:22">0</literal></expr>)</condition> <block pos:start="693:25" pos:end="697:9">{<block_content pos:start="695:13" pos:end="695:45">

            <expr_stmt pos:start="695:13" pos:end="695:45"><expr pos:start="695:13" pos:end="695:44"><name pos:start="695:13" pos:end="695:19">new_msr</name> <operator pos:start="695:21" pos:end="695:22">|=</operator> <operator pos:start="695:24" pos:end="695:24">(</operator><name pos:start="695:25" pos:end="695:36">target_ulong</name><operator pos:start="695:37" pos:end="695:37">)</operator><name pos:start="695:38" pos:end="695:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="699:9" pos:end="699:27">goto <name pos:start="699:14" pos:end="699:26">store_current</name>;</goto>

    <case pos:start="701:5" pos:end="701:25">case <expr pos:start="701:10" pos:end="701:24"><name pos:start="701:10" pos:end="701:24">POWERPC_EXCP_FU</name></expr>:</case>         <comment type="block" pos:start="701:35" pos:end="701:79">/* Facility unavailable exception          */</comment>

        <if_stmt pos:start="703:9" pos:end="707:9"><if pos:start="703:9" pos:end="707:9">if <condition pos:start="703:12" pos:end="703:23">(<expr pos:start="703:13" pos:end="703:22"><name pos:start="703:13" pos:end="703:17">lpes1</name> <operator pos:start="703:19" pos:end="703:20">==</operator> <literal type="number" pos:start="703:22" pos:end="703:22">0</literal></expr>)</condition> <block pos:start="703:25" pos:end="707:9">{<block_content pos:start="705:13" pos:end="705:45">

            <expr_stmt pos:start="705:13" pos:end="705:45"><expr pos:start="705:13" pos:end="705:44"><name pos:start="705:13" pos:end="705:19">new_msr</name> <operator pos:start="705:21" pos:end="705:22">|=</operator> <operator pos:start="705:24" pos:end="705:24">(</operator><name pos:start="705:25" pos:end="705:36">target_ulong</name><operator pos:start="705:37" pos:end="705:37">)</operator><name pos:start="705:38" pos:end="705:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="709:9" pos:end="709:27">goto <name pos:start="709:14" pos:end="709:26">store_current</name>;</goto>

    <case pos:start="711:5" pos:end="711:26">case <expr pos:start="711:10" pos:end="711:25"><name pos:start="711:10" pos:end="711:25">POWERPC_EXCP_PIT</name></expr>:</case>       <comment type="block" pos:start="711:34" pos:end="711:79">/* Programmable interval timer interrupt    */</comment>

        <expr_stmt pos:start="713:9" pos:end="713:36"><expr pos:start="713:9" pos:end="713:35"><call pos:start="713:9" pos:end="713:35"><name pos:start="713:9" pos:end="713:16">LOG_EXCP</name><argument_list pos:start="713:17" pos:end="713:35">(<argument pos:start="713:18" pos:end="713:34"><expr pos:start="713:18" pos:end="713:34"><literal type="string" pos:start="713:18" pos:end="713:34">"PIT exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="715:9" pos:end="715:24">goto <name pos:start="715:14" pos:end="715:23">store_next</name>;</goto>

    <case pos:start="717:5" pos:end="717:25">case <expr pos:start="717:10" pos:end="717:24"><name pos:start="717:10" pos:end="717:24">POWERPC_EXCP_IO</name></expr>:</case>        <comment type="block" pos:start="717:34" pos:end="717:79">/* IO error exception                       */</comment>

        <comment type="block" pos:start="719:9" pos:end="719:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="721:9" pos:end="721:75"><expr pos:start="721:9" pos:end="721:74"><call pos:start="721:9" pos:end="721:74"><name pos:start="721:9" pos:end="721:17">cpu_abort</name><argument_list pos:start="721:18" pos:end="721:74">(<argument pos:start="721:19" pos:end="721:20"><expr pos:start="721:19" pos:end="721:20"><name pos:start="721:19" pos:end="721:20">cs</name></expr></argument>, <argument pos:start="721:23" pos:end="721:73"><expr pos:start="721:23" pos:end="721:73"><literal type="string" pos:start="721:23" pos:end="721:73">"601 IO error exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="723:9" pos:end="723:24">goto <name pos:start="723:14" pos:end="723:23">store_next</name>;</goto>

    <case pos:start="725:5" pos:end="725:27">case <expr pos:start="725:10" pos:end="725:26"><name pos:start="725:10" pos:end="725:26">POWERPC_EXCP_RUNM</name></expr>:</case>      <comment type="block" pos:start="725:34" pos:end="725:79">/* Run mode exception                       */</comment>

        <comment type="block" pos:start="727:9" pos:end="727:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="729:9" pos:end="729:75"><expr pos:start="729:9" pos:end="729:74"><call pos:start="729:9" pos:end="729:74"><name pos:start="729:9" pos:end="729:17">cpu_abort</name><argument_list pos:start="729:18" pos:end="729:74">(<argument pos:start="729:19" pos:end="729:20"><expr pos:start="729:19" pos:end="729:20"><name pos:start="729:19" pos:end="729:20">cs</name></expr></argument>, <argument pos:start="729:23" pos:end="729:73"><expr pos:start="729:23" pos:end="729:73"><literal type="string" pos:start="729:23" pos:end="729:73">"601 run mode exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="731:9" pos:end="731:24">goto <name pos:start="731:14" pos:end="731:23">store_next</name>;</goto>

    <case pos:start="733:5" pos:end="733:27">case <expr pos:start="733:10" pos:end="733:26"><name pos:start="733:10" pos:end="733:26">POWERPC_EXCP_EMUL</name></expr>:</case>      <comment type="block" pos:start="733:34" pos:end="733:79">/* Emulation trap exception                 */</comment>

        <comment type="block" pos:start="735:9" pos:end="735:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="737:9" pos:end="739:48"><expr pos:start="737:9" pos:end="739:47"><call pos:start="737:9" pos:end="739:47"><name pos:start="737:9" pos:end="737:17">cpu_abort</name><argument_list pos:start="737:18" pos:end="739:47">(<argument pos:start="737:19" pos:end="737:20"><expr pos:start="737:19" pos:end="737:20"><name pos:start="737:19" pos:end="737:20">cs</name></expr></argument>, <argument pos:start="737:23" pos:end="739:46"><expr pos:start="737:23" pos:end="739:46"><literal type="string" pos:start="737:23" pos:end="737:53">"602 emulation trap exception "</literal>

                  <literal type="string" pos:start="739:19" pos:end="739:46">"is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="741:9" pos:end="741:24">goto <name pos:start="741:14" pos:end="741:23">store_next</name>;</goto>

    <case pos:start="743:5" pos:end="743:28">case <expr pos:start="743:10" pos:end="743:27"><name pos:start="743:10" pos:end="743:27">POWERPC_EXCP_IFTLB</name></expr>:</case>     <comment type="block" pos:start="743:34" pos:end="743:79">/* Instruction fetch TLB error              */</comment>

        <if_stmt pos:start="745:9" pos:end="749:9"><if pos:start="745:9" pos:end="749:9">if <condition pos:start="745:12" pos:end="745:23">(<expr pos:start="745:13" pos:end="745:22"><name pos:start="745:13" pos:end="745:17">lpes1</name> <operator pos:start="745:19" pos:end="745:20">==</operator> <literal type="number" pos:start="745:22" pos:end="745:22">0</literal></expr>)</condition> <block pos:start="745:25" pos:end="749:9">{<block_content pos:start="747:13" pos:end="747:45"> <comment type="block" pos:start="745:27" pos:end="745:47">/* XXX: check this */</comment>

            <expr_stmt pos:start="747:13" pos:end="747:45"><expr pos:start="747:13" pos:end="747:44"><name pos:start="747:13" pos:end="747:19">new_msr</name> <operator pos:start="747:21" pos:end="747:22">|=</operator> <operator pos:start="747:24" pos:end="747:24">(</operator><name pos:start="747:25" pos:end="747:36">target_ulong</name><operator pos:start="747:37" pos:end="747:37">)</operator><name pos:start="747:38" pos:end="747:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="751:9" pos:end="777:9">switch <condition pos:start="751:16" pos:end="751:27">(<expr pos:start="751:17" pos:end="751:26"><name pos:start="751:17" pos:end="751:26">excp_model</name></expr>)</condition> <block pos:start="751:29" pos:end="777:9">{<block_content pos:start="753:9" pos:end="775:18">

        <case pos:start="753:9" pos:end="753:30">case <expr pos:start="753:14" pos:end="753:29"><name pos:start="753:14" pos:end="753:29">POWERPC_EXCP_602</name></expr>:</case>

        <case pos:start="755:9" pos:end="755:30">case <expr pos:start="755:14" pos:end="755:29"><name pos:start="755:14" pos:end="755:29">POWERPC_EXCP_603</name></expr>:</case>

        <case pos:start="757:9" pos:end="757:31">case <expr pos:start="757:14" pos:end="757:30"><name pos:start="757:14" pos:end="757:30">POWERPC_EXCP_603E</name></expr>:</case>

        <case pos:start="759:9" pos:end="759:29">case <expr pos:start="759:14" pos:end="759:28"><name pos:start="759:14" pos:end="759:28">POWERPC_EXCP_G2</name></expr>:</case>

            <goto pos:start="761:13" pos:end="761:31">goto <name pos:start="761:18" pos:end="761:30">tlb_miss_tgpr</name>;</goto>

        <case pos:start="763:9" pos:end="763:30">case <expr pos:start="763:14" pos:end="763:29"><name pos:start="763:14" pos:end="763:29">POWERPC_EXCP_7x5</name></expr>:</case>

            <goto pos:start="765:13" pos:end="765:26">goto <name pos:start="765:18" pos:end="765:25">tlb_miss</name>;</goto>

        <case pos:start="767:9" pos:end="767:31">case <expr pos:start="767:14" pos:end="767:30"><name pos:start="767:14" pos:end="767:30">POWERPC_EXCP_74xx</name></expr>:</case>

            <goto pos:start="769:13" pos:end="769:31">goto <name pos:start="769:18" pos:end="769:30">tlb_miss_74xx</name>;</goto>

        <default pos:start="771:9" pos:end="771:16">default:</default>

            <expr_stmt pos:start="773:13" pos:end="773:70"><expr pos:start="773:13" pos:end="773:69"><call pos:start="773:13" pos:end="773:69"><name pos:start="773:13" pos:end="773:21">cpu_abort</name><argument_list pos:start="773:22" pos:end="773:69">(<argument pos:start="773:23" pos:end="773:24"><expr pos:start="773:23" pos:end="773:24"><name pos:start="773:23" pos:end="773:24">cs</name></expr></argument>, <argument pos:start="773:27" pos:end="773:68"><expr pos:start="773:27" pos:end="773:68"><literal type="string" pos:start="773:27" pos:end="773:68">"Invalid instruction TLB miss exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="775:13" pos:end="775:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="779:9" pos:end="779:14">break;</break>

    <case pos:start="781:5" pos:end="781:28">case <expr pos:start="781:10" pos:end="781:27"><name pos:start="781:10" pos:end="781:27">POWERPC_EXCP_DLTLB</name></expr>:</case>     <comment type="block" pos:start="781:34" pos:end="781:79">/* Data load TLB miss                       */</comment>

        <if_stmt pos:start="783:9" pos:end="787:9"><if pos:start="783:9" pos:end="787:9">if <condition pos:start="783:12" pos:end="783:23">(<expr pos:start="783:13" pos:end="783:22"><name pos:start="783:13" pos:end="783:17">lpes1</name> <operator pos:start="783:19" pos:end="783:20">==</operator> <literal type="number" pos:start="783:22" pos:end="783:22">0</literal></expr>)</condition> <block pos:start="783:25" pos:end="787:9">{<block_content pos:start="785:13" pos:end="785:45"> <comment type="block" pos:start="783:27" pos:end="783:47">/* XXX: check this */</comment>

            <expr_stmt pos:start="785:13" pos:end="785:45"><expr pos:start="785:13" pos:end="785:44"><name pos:start="785:13" pos:end="785:19">new_msr</name> <operator pos:start="785:21" pos:end="785:22">|=</operator> <operator pos:start="785:24" pos:end="785:24">(</operator><name pos:start="785:25" pos:end="785:36">target_ulong</name><operator pos:start="785:37" pos:end="785:37">)</operator><name pos:start="785:38" pos:end="785:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="789:9" pos:end="815:9">switch <condition pos:start="789:16" pos:end="789:27">(<expr pos:start="789:17" pos:end="789:26"><name pos:start="789:17" pos:end="789:26">excp_model</name></expr>)</condition> <block pos:start="789:29" pos:end="815:9">{<block_content pos:start="791:9" pos:end="813:18">

        <case pos:start="791:9" pos:end="791:30">case <expr pos:start="791:14" pos:end="791:29"><name pos:start="791:14" pos:end="791:29">POWERPC_EXCP_602</name></expr>:</case>

        <case pos:start="793:9" pos:end="793:30">case <expr pos:start="793:14" pos:end="793:29"><name pos:start="793:14" pos:end="793:29">POWERPC_EXCP_603</name></expr>:</case>

        <case pos:start="795:9" pos:end="795:31">case <expr pos:start="795:14" pos:end="795:30"><name pos:start="795:14" pos:end="795:30">POWERPC_EXCP_603E</name></expr>:</case>

        <case pos:start="797:9" pos:end="797:29">case <expr pos:start="797:14" pos:end="797:28"><name pos:start="797:14" pos:end="797:28">POWERPC_EXCP_G2</name></expr>:</case>

            <goto pos:start="799:13" pos:end="799:31">goto <name pos:start="799:18" pos:end="799:30">tlb_miss_tgpr</name>;</goto>

        <case pos:start="801:9" pos:end="801:30">case <expr pos:start="801:14" pos:end="801:29"><name pos:start="801:14" pos:end="801:29">POWERPC_EXCP_7x5</name></expr>:</case>

            <goto pos:start="803:13" pos:end="803:26">goto <name pos:start="803:18" pos:end="803:25">tlb_miss</name>;</goto>

        <case pos:start="805:9" pos:end="805:31">case <expr pos:start="805:14" pos:end="805:30"><name pos:start="805:14" pos:end="805:30">POWERPC_EXCP_74xx</name></expr>:</case>

            <goto pos:start="807:13" pos:end="807:31">goto <name pos:start="807:18" pos:end="807:30">tlb_miss_74xx</name>;</goto>

        <default pos:start="809:9" pos:end="809:16">default:</default>

            <expr_stmt pos:start="811:13" pos:end="811:68"><expr pos:start="811:13" pos:end="811:67"><call pos:start="811:13" pos:end="811:67"><name pos:start="811:13" pos:end="811:21">cpu_abort</name><argument_list pos:start="811:22" pos:end="811:67">(<argument pos:start="811:23" pos:end="811:24"><expr pos:start="811:23" pos:end="811:24"><name pos:start="811:23" pos:end="811:24">cs</name></expr></argument>, <argument pos:start="811:27" pos:end="811:66"><expr pos:start="811:27" pos:end="811:66"><literal type="string" pos:start="811:27" pos:end="811:66">"Invalid data load TLB miss exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="813:13" pos:end="813:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="817:9" pos:end="817:14">break;</break>

    <case pos:start="819:5" pos:end="819:28">case <expr pos:start="819:10" pos:end="819:27"><name pos:start="819:10" pos:end="819:27">POWERPC_EXCP_DSTLB</name></expr>:</case>     <comment type="block" pos:start="819:34" pos:end="819:79">/* Data store TLB miss                      */</comment>

        <if_stmt pos:start="821:9" pos:end="825:9"><if pos:start="821:9" pos:end="825:9">if <condition pos:start="821:12" pos:end="821:23">(<expr pos:start="821:13" pos:end="821:22"><name pos:start="821:13" pos:end="821:17">lpes1</name> <operator pos:start="821:19" pos:end="821:20">==</operator> <literal type="number" pos:start="821:22" pos:end="821:22">0</literal></expr>)</condition> <block pos:start="821:25" pos:end="825:9">{<block_content pos:start="823:13" pos:end="823:45"> <comment type="block" pos:start="821:27" pos:end="821:47">/* XXX: check this */</comment>

            <expr_stmt pos:start="823:13" pos:end="823:45"><expr pos:start="823:13" pos:end="823:44"><name pos:start="823:13" pos:end="823:19">new_msr</name> <operator pos:start="823:21" pos:end="823:22">|=</operator> <operator pos:start="823:24" pos:end="823:24">(</operator><name pos:start="823:25" pos:end="823:36">target_ulong</name><operator pos:start="823:37" pos:end="823:37">)</operator><name pos:start="823:38" pos:end="823:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="827:9" pos:end="987:9">switch <condition pos:start="827:16" pos:end="827:27">(<expr pos:start="827:17" pos:end="827:26"><name pos:start="827:17" pos:end="827:26">excp_model</name></expr>)</condition> <block pos:start="827:29" pos:end="987:9">{<block_content pos:start="829:9" pos:end="985:18">

        <case pos:start="829:9" pos:end="829:30">case <expr pos:start="829:14" pos:end="829:29"><name pos:start="829:14" pos:end="829:29">POWERPC_EXCP_602</name></expr>:</case>

        <case pos:start="831:9" pos:end="831:30">case <expr pos:start="831:14" pos:end="831:29"><name pos:start="831:14" pos:end="831:29">POWERPC_EXCP_603</name></expr>:</case>

        <case pos:start="833:9" pos:end="833:31">case <expr pos:start="833:14" pos:end="833:30"><name pos:start="833:14" pos:end="833:30">POWERPC_EXCP_603E</name></expr>:</case>

        <case pos:start="835:9" pos:end="835:29">case <expr pos:start="835:14" pos:end="835:28"><name pos:start="835:14" pos:end="835:28">POWERPC_EXCP_G2</name></expr>:</case>

        <label pos:start="837:9" pos:end="837:22"><name pos:start="837:9" pos:end="837:21">tlb_miss_tgpr</name>:</label>

            <comment type="block" pos:start="839:13" pos:end="839:58">/* Swap temporary saved registers with GPRs */</comment>

            <if_stmt pos:start="841:13" pos:end="847:13"><if pos:start="841:13" pos:end="847:13">if <condition pos:start="841:16" pos:end="841:59">(<expr pos:start="841:17" pos:end="841:58"><operator pos:start="841:17" pos:end="841:17">!</operator><operator pos:start="841:18" pos:end="841:18">(</operator><name pos:start="841:19" pos:end="841:25">new_msr</name> <operator pos:start="841:27" pos:end="841:27">&amp;</operator> <operator pos:start="841:29" pos:end="841:29">(</operator><operator pos:start="841:30" pos:end="841:30">(</operator><name pos:start="841:31" pos:end="841:42">target_ulong</name><operator pos:start="841:43" pos:end="841:43">)</operator><literal type="number" pos:start="841:44" pos:end="841:44">1</literal> <operator pos:start="841:46" pos:end="841:47">&lt;&lt;</operator> <name pos:start="841:49" pos:end="841:56">MSR_TGPR</name><operator pos:start="841:57" pos:end="841:57">)</operator><operator pos:start="841:58" pos:end="841:58">)</operator></expr>)</condition> <block pos:start="841:61" pos:end="847:13">{<block_content pos:start="843:17" pos:end="845:40">

                <expr_stmt pos:start="843:17" pos:end="843:55"><expr pos:start="843:17" pos:end="843:54"><name pos:start="843:17" pos:end="843:23">new_msr</name> <operator pos:start="843:25" pos:end="843:26">|=</operator> <operator pos:start="843:28" pos:end="843:28">(</operator><name pos:start="843:29" pos:end="843:40">target_ulong</name><operator pos:start="843:41" pos:end="843:41">)</operator><literal type="number" pos:start="843:42" pos:end="843:42">1</literal> <operator pos:start="843:44" pos:end="843:45">&lt;&lt;</operator> <name pos:start="843:47" pos:end="843:54">MSR_TGPR</name></expr>;</expr_stmt>

                <expr_stmt pos:start="845:17" pos:end="845:40"><expr pos:start="845:17" pos:end="845:39"><call pos:start="845:17" pos:end="845:39"><name pos:start="845:17" pos:end="845:34">hreg_swap_gpr_tgpr</name><argument_list pos:start="845:35" pos:end="845:39">(<argument pos:start="845:36" pos:end="845:38"><expr pos:start="845:36" pos:end="845:38"><name pos:start="845:36" pos:end="845:38">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="849:13" pos:end="849:26">goto <name pos:start="849:18" pos:end="849:25">tlb_miss</name>;</goto>

        <case pos:start="851:9" pos:end="851:30">case <expr pos:start="851:14" pos:end="851:29"><name pos:start="851:14" pos:end="851:29">POWERPC_EXCP_7x5</name></expr>:</case>

        <label pos:start="853:9" pos:end="856:0"><name pos:start="853:9" pos:end="853:16">tlb_miss</name>:</label>

<cpp:if pos:start="855:1" pos:end="855:31">#<cpp:directive pos:start="855:2" pos:end="855:3">if</cpp:directive> <expr pos:start="855:5" pos:end="855:31"><call pos:start="855:5" pos:end="855:31"><name pos:start="855:5" pos:end="855:11">defined</name><argument_list pos:start="855:12" pos:end="855:31">(<argument pos:start="855:13" pos:end="855:30"><expr pos:start="855:13" pos:end="855:30"><name pos:start="855:13" pos:end="855:30">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="857:13" pos:end="910:0"><if pos:start="857:13" pos:end="910:0">if <condition pos:start="857:16" pos:end="857:35">(<expr pos:start="857:17" pos:end="857:34"><call pos:start="857:17" pos:end="857:34"><name pos:start="857:17" pos:end="857:32">qemu_log_enabled</name><argument_list pos:start="857:33" pos:end="857:34">()</argument_list></call></expr>)</condition> <block pos:start="857:37" pos:end="910:0">{<block_content pos:start="859:17" pos:end="905:42">

                <decl_stmt pos:start="859:17" pos:end="859:31"><decl pos:start="859:17" pos:end="859:30"><type pos:start="859:17" pos:end="859:28"><specifier pos:start="859:17" pos:end="859:21">const</specifier> <name pos:start="859:23" pos:end="859:26">char</name> <modifier pos:start="859:28" pos:end="859:28">*</modifier></type><name pos:start="859:29" pos:end="859:30">es</name></decl>;</decl_stmt>

                <decl_stmt pos:start="861:17" pos:end="861:41"><decl pos:start="861:17" pos:end="861:34"><type pos:start="861:17" pos:end="861:30"><name pos:start="861:17" pos:end="861:28">target_ulong</name> <modifier pos:start="861:30" pos:end="861:30">*</modifier></type><name pos:start="861:31" pos:end="861:34">miss</name></decl>, <decl pos:start="861:37" pos:end="861:40"><type ref="prev" pos:start="861:17" pos:end="861:30"><modifier pos:start="861:37" pos:end="861:37">*</modifier></type><name pos:start="861:38" pos:end="861:40">cmp</name></decl>;</decl_stmt>

                <decl_stmt pos:start="863:17" pos:end="863:23"><decl pos:start="863:17" pos:end="863:22"><type pos:start="863:17" pos:end="863:19"><name pos:start="863:17" pos:end="863:19">int</name></type> <name pos:start="863:21" pos:end="863:22">en</name></decl>;</decl_stmt>



                <if_stmt pos:start="867:17" pos:end="895:17"><if pos:start="867:17" pos:end="877:17">if <condition pos:start="867:20" pos:end="867:47">(<expr pos:start="867:21" pos:end="867:46"><name pos:start="867:21" pos:end="867:24">excp</name> <operator pos:start="867:26" pos:end="867:27">==</operator> <name pos:start="867:29" pos:end="867:46">POWERPC_EXCP_IFTLB</name></expr>)</condition> <block pos:start="867:49" pos:end="877:17">{<block_content pos:start="869:21" pos:end="875:46">

                    <expr_stmt pos:start="869:21" pos:end="869:29"><expr pos:start="869:21" pos:end="869:28"><name pos:start="869:21" pos:end="869:22">es</name> <operator pos:start="869:24" pos:end="869:24">=</operator> <literal type="string" pos:start="869:26" pos:end="869:28">"I"</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="871:21" pos:end="871:29"><expr pos:start="871:21" pos:end="871:28"><name pos:start="871:21" pos:end="871:22">en</name> <operator pos:start="871:24" pos:end="871:24">=</operator> <literal type="char" pos:start="871:26" pos:end="871:28">'I'</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="873:21" pos:end="873:48"><expr pos:start="873:21" pos:end="873:47"><name pos:start="873:21" pos:end="873:24">miss</name> <operator pos:start="873:26" pos:end="873:26">=</operator> <operator pos:start="873:28" pos:end="873:28">&amp;</operator><name pos:start="873:29" pos:end="873:47"><name pos:start="873:29" pos:end="873:31">env</name><operator pos:start="873:32" pos:end="873:33">-&gt;</operator><name pos:start="873:34" pos:end="873:36">spr</name><index pos:start="873:37" pos:end="873:47">[<expr pos:start="873:38" pos:end="873:46"><name pos:start="873:38" pos:end="873:46">SPR_IMISS</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="875:21" pos:end="875:46"><expr pos:start="875:21" pos:end="875:45"><name pos:start="875:21" pos:end="875:23">cmp</name> <operator pos:start="875:25" pos:end="875:25">=</operator> <operator pos:start="875:27" pos:end="875:27">&amp;</operator><name pos:start="875:28" pos:end="875:45"><name pos:start="875:28" pos:end="875:30">env</name><operator pos:start="875:31" pos:end="875:32">-&gt;</operator><name pos:start="875:33" pos:end="875:35">spr</name><index pos:start="875:36" pos:end="875:45">[<expr pos:start="875:37" pos:end="875:44"><name pos:start="875:37" pos:end="875:44">SPR_ICMP</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="877:19" pos:end="895:17">else <block pos:start="877:24" pos:end="895:17">{<block_content pos:start="879:21" pos:end="893:46">

                    <if_stmt pos:start="879:21" pos:end="887:21"><if pos:start="879:21" pos:end="883:21">if <condition pos:start="879:24" pos:end="879:51">(<expr pos:start="879:25" pos:end="879:50"><name pos:start="879:25" pos:end="879:28">excp</name> <operator pos:start="879:30" pos:end="879:31">==</operator> <name pos:start="879:33" pos:end="879:50">POWERPC_EXCP_DLTLB</name></expr>)</condition> <block pos:start="879:53" pos:end="883:21">{<block_content pos:start="881:25" pos:end="881:34">

                        <expr_stmt pos:start="881:25" pos:end="881:34"><expr pos:start="881:25" pos:end="881:33"><name pos:start="881:25" pos:end="881:26">es</name> <operator pos:start="881:28" pos:end="881:28">=</operator> <literal type="string" pos:start="881:30" pos:end="881:33">"DL"</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="883:23" pos:end="887:21">else <block pos:start="883:28" pos:end="887:21">{<block_content pos:start="885:25" pos:end="885:34">

                        <expr_stmt pos:start="885:25" pos:end="885:34"><expr pos:start="885:25" pos:end="885:33"><name pos:start="885:25" pos:end="885:26">es</name> <operator pos:start="885:28" pos:end="885:28">=</operator> <literal type="string" pos:start="885:30" pos:end="885:33">"DS"</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="889:21" pos:end="889:29"><expr pos:start="889:21" pos:end="889:28"><name pos:start="889:21" pos:end="889:22">en</name> <operator pos:start="889:24" pos:end="889:24">=</operator> <literal type="char" pos:start="889:26" pos:end="889:28">'D'</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="891:21" pos:end="891:48"><expr pos:start="891:21" pos:end="891:47"><name pos:start="891:21" pos:end="891:24">miss</name> <operator pos:start="891:26" pos:end="891:26">=</operator> <operator pos:start="891:28" pos:end="891:28">&amp;</operator><name pos:start="891:29" pos:end="891:47"><name pos:start="891:29" pos:end="891:31">env</name><operator pos:start="891:32" pos:end="891:33">-&gt;</operator><name pos:start="891:34" pos:end="891:36">spr</name><index pos:start="891:37" pos:end="891:47">[<expr pos:start="891:38" pos:end="891:46"><name pos:start="891:38" pos:end="891:46">SPR_DMISS</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="893:21" pos:end="893:46"><expr pos:start="893:21" pos:end="893:45"><name pos:start="893:21" pos:end="893:23">cmp</name> <operator pos:start="893:25" pos:end="893:25">=</operator> <operator pos:start="893:27" pos:end="893:27">&amp;</operator><name pos:start="893:28" pos:end="893:45"><name pos:start="893:28" pos:end="893:30">env</name><operator pos:start="893:31" pos:end="893:32">-&gt;</operator><name pos:start="893:33" pos:end="893:35">spr</name><index pos:start="893:36" pos:end="893:45">[<expr pos:start="893:37" pos:end="893:44"><name pos:start="893:37" pos:end="893:44">SPR_DCMP</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="897:17" pos:end="905:42"><expr pos:start="897:17" pos:end="905:41"><call pos:start="897:17" pos:end="905:41"><name pos:start="897:17" pos:end="897:24">qemu_log</name><argument_list pos:start="897:25" pos:end="905:41">(<argument pos:start="897:26" pos:end="901:48"><expr pos:start="897:26" pos:end="901:48"><literal type="string" pos:start="897:26" pos:end="897:47">"6xx %sTLB miss: %cM "</literal> <name pos:start="897:49" pos:end="897:61">TARGET_FMT_lx</name> <literal type="string" pos:start="897:63" pos:end="897:69">" %cC "</literal>

                         <name pos:start="899:26" pos:end="899:38">TARGET_FMT_lx</name> <literal type="string" pos:start="899:40" pos:end="899:45">" H1 "</literal> <name pos:start="899:47" pos:end="899:59">TARGET_FMT_lx</name> <literal type="string" pos:start="899:61" pos:end="899:66">" H2 "</literal>

                         <name pos:start="901:26" pos:end="901:38">TARGET_FMT_lx</name> <literal type="string" pos:start="901:40" pos:end="901:48">" %08x\n"</literal></expr></argument>, <argument pos:start="901:51" pos:end="901:52"><expr pos:start="901:51" pos:end="901:52"><name pos:start="901:51" pos:end="901:52">es</name></expr></argument>, <argument pos:start="901:55" pos:end="901:56"><expr pos:start="901:55" pos:end="901:56"><name pos:start="901:55" pos:end="901:56">en</name></expr></argument>, <argument pos:start="901:59" pos:end="901:63"><expr pos:start="901:59" pos:end="901:63"><operator pos:start="901:59" pos:end="901:59">*</operator><name pos:start="901:60" pos:end="901:63">miss</name></expr></argument>, <argument pos:start="901:66" pos:end="901:67"><expr pos:start="901:66" pos:end="901:67"><name pos:start="901:66" pos:end="901:67">en</name></expr></argument>, <argument pos:start="901:70" pos:end="901:73"><expr pos:start="901:70" pos:end="901:73"><operator pos:start="901:70" pos:end="901:70">*</operator><name pos:start="901:71" pos:end="901:73">cmp</name></expr></argument>,

                         <argument pos:start="903:26" pos:end="903:44"><expr pos:start="903:26" pos:end="903:44"><name pos:start="903:26" pos:end="903:44"><name pos:start="903:26" pos:end="903:28">env</name><operator pos:start="903:29" pos:end="903:30">-&gt;</operator><name pos:start="903:31" pos:end="903:33">spr</name><index pos:start="903:34" pos:end="903:44">[<expr pos:start="903:35" pos:end="903:43"><name pos:start="903:35" pos:end="903:43">SPR_HASH1</name></expr>]</index></name></expr></argument>, <argument pos:start="903:47" pos:end="903:65"><expr pos:start="903:47" pos:end="903:65"><name pos:start="903:47" pos:end="903:65"><name pos:start="903:47" pos:end="903:49">env</name><operator pos:start="903:50" pos:end="903:51">-&gt;</operator><name pos:start="903:52" pos:end="903:54">spr</name><index pos:start="903:55" pos:end="903:65">[<expr pos:start="903:56" pos:end="903:64"><name pos:start="903:56" pos:end="903:64">SPR_HASH2</name></expr>]</index></name></expr></argument>,

                         <argument pos:start="905:26" pos:end="905:40"><expr pos:start="905:26" pos:end="905:40"><name pos:start="905:26" pos:end="905:40"><name pos:start="905:26" pos:end="905:28">env</name><operator pos:start="905:29" pos:end="905:30">-&gt;</operator><name pos:start="905:31" pos:end="905:40">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="909:1" pos:end="909:6">#<cpp:directive pos:start="909:2" pos:end="909:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="911:13" pos:end="911:37"><expr pos:start="911:13" pos:end="911:36"><name pos:start="911:13" pos:end="911:15">msr</name> <operator pos:start="911:17" pos:end="911:18">|=</operator> <name pos:start="911:20" pos:end="911:30"><name pos:start="911:20" pos:end="911:22">env</name><operator pos:start="911:23" pos:end="911:24">-&gt;</operator><name pos:start="911:25" pos:end="911:27">crf</name><index pos:start="911:28" pos:end="911:30">[<expr pos:start="911:29" pos:end="911:29"><literal type="number" pos:start="911:29" pos:end="911:29">0</literal></expr>]</index></name> <operator pos:start="911:32" pos:end="911:33">&lt;&lt;</operator> <literal type="number" pos:start="911:35" pos:end="911:36">28</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="913:13" pos:end="913:35"><expr pos:start="913:13" pos:end="913:34"><name pos:start="913:13" pos:end="913:15">msr</name> <operator pos:start="913:17" pos:end="913:18">|=</operator> <name pos:start="913:20" pos:end="913:34"><name pos:start="913:20" pos:end="913:22">env</name><operator pos:start="913:23" pos:end="913:24">-&gt;</operator><name pos:start="913:25" pos:end="913:34">error_code</name></name></expr>;</expr_stmt> <comment type="block" pos:start="913:37" pos:end="913:60">/* key, D/I, S/L bits */</comment>

            <comment type="block" pos:start="915:13" pos:end="915:47">/* Set way using a LRU mechanism */</comment>

            <expr_stmt pos:start="917:13" pos:end="917:68"><expr pos:start="917:13" pos:end="917:67"><name pos:start="917:13" pos:end="917:15">msr</name> <operator pos:start="917:17" pos:end="917:18">|=</operator> <operator pos:start="917:20" pos:end="917:20">(</operator><operator pos:start="917:21" pos:end="917:21">(</operator><name pos:start="917:22" pos:end="917:34"><name pos:start="917:22" pos:end="917:24">env</name><operator pos:start="917:25" pos:end="917:26">-&gt;</operator><name pos:start="917:27" pos:end="917:34">last_way</name></name> <operator pos:start="917:36" pos:end="917:36">+</operator> <literal type="number" pos:start="917:38" pos:end="917:38">1</literal><operator pos:start="917:39" pos:end="917:39">)</operator> <operator pos:start="917:41" pos:end="917:41">&amp;</operator> <operator pos:start="917:43" pos:end="917:43">(</operator><name pos:start="917:44" pos:end="917:55"><name pos:start="917:44" pos:end="917:46">env</name><operator pos:start="917:47" pos:end="917:48">-&gt;</operator><name pos:start="917:49" pos:end="917:55">nb_ways</name></name> <operator pos:start="917:57" pos:end="917:57">-</operator> <literal type="number" pos:start="917:59" pos:end="917:59">1</literal><operator pos:start="917:60" pos:end="917:60">)</operator><operator pos:start="917:61" pos:end="917:61">)</operator> <operator pos:start="917:63" pos:end="917:64">&lt;&lt;</operator> <literal type="number" pos:start="917:66" pos:end="917:67">17</literal></expr>;</expr_stmt>

            <break pos:start="919:13" pos:end="919:18">break;</break>

        <case pos:start="921:9" pos:end="921:31">case <expr pos:start="921:14" pos:end="921:30"><name pos:start="921:14" pos:end="921:30">POWERPC_EXCP_74xx</name></expr>:</case>

        <label pos:start="923:9" pos:end="926:0"><name pos:start="923:9" pos:end="923:21">tlb_miss_74xx</name>:</label>

<cpp:if pos:start="925:1" pos:end="925:31">#<cpp:directive pos:start="925:2" pos:end="925:3">if</cpp:directive> <expr pos:start="925:5" pos:end="925:31"><call pos:start="925:5" pos:end="925:31"><name pos:start="925:5" pos:end="925:11">defined</name><argument_list pos:start="925:12" pos:end="925:31">(<argument pos:start="925:13" pos:end="925:30"><expr pos:start="925:13" pos:end="925:30"><name pos:start="925:13" pos:end="925:30">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="927:13" pos:end="976:0"><if pos:start="927:13" pos:end="976:0">if <condition pos:start="927:16" pos:end="927:35">(<expr pos:start="927:17" pos:end="927:34"><call pos:start="927:17" pos:end="927:34"><name pos:start="927:17" pos:end="927:32">qemu_log_enabled</name><argument_list pos:start="927:33" pos:end="927:34">()</argument_list></call></expr>)</condition> <block pos:start="927:37" pos:end="976:0">{<block_content pos:start="929:17" pos:end="971:42">

                <decl_stmt pos:start="929:17" pos:end="929:31"><decl pos:start="929:17" pos:end="929:30"><type pos:start="929:17" pos:end="929:28"><specifier pos:start="929:17" pos:end="929:21">const</specifier> <name pos:start="929:23" pos:end="929:26">char</name> <modifier pos:start="929:28" pos:end="929:28">*</modifier></type><name pos:start="929:29" pos:end="929:30">es</name></decl>;</decl_stmt>

                <decl_stmt pos:start="931:17" pos:end="931:41"><decl pos:start="931:17" pos:end="931:34"><type pos:start="931:17" pos:end="931:30"><name pos:start="931:17" pos:end="931:28">target_ulong</name> <modifier pos:start="931:30" pos:end="931:30">*</modifier></type><name pos:start="931:31" pos:end="931:34">miss</name></decl>, <decl pos:start="931:37" pos:end="931:40"><type ref="prev" pos:start="931:17" pos:end="931:30"><modifier pos:start="931:37" pos:end="931:37">*</modifier></type><name pos:start="931:38" pos:end="931:40">cmp</name></decl>;</decl_stmt>

                <decl_stmt pos:start="933:17" pos:end="933:23"><decl pos:start="933:17" pos:end="933:22"><type pos:start="933:17" pos:end="933:19"><name pos:start="933:17" pos:end="933:19">int</name></type> <name pos:start="933:21" pos:end="933:22">en</name></decl>;</decl_stmt>



                <if_stmt pos:start="937:17" pos:end="965:17"><if pos:start="937:17" pos:end="947:17">if <condition pos:start="937:20" pos:end="937:47">(<expr pos:start="937:21" pos:end="937:46"><name pos:start="937:21" pos:end="937:24">excp</name> <operator pos:start="937:26" pos:end="937:27">==</operator> <name pos:start="937:29" pos:end="937:46">POWERPC_EXCP_IFTLB</name></expr>)</condition> <block pos:start="937:49" pos:end="947:17">{<block_content pos:start="939:21" pos:end="945:47">

                    <expr_stmt pos:start="939:21" pos:end="939:29"><expr pos:start="939:21" pos:end="939:28"><name pos:start="939:21" pos:end="939:22">es</name> <operator pos:start="939:24" pos:end="939:24">=</operator> <literal type="string" pos:start="939:26" pos:end="939:28">"I"</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="941:21" pos:end="941:29"><expr pos:start="941:21" pos:end="941:28"><name pos:start="941:21" pos:end="941:22">en</name> <operator pos:start="941:24" pos:end="941:24">=</operator> <literal type="char" pos:start="941:26" pos:end="941:28">'I'</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="943:21" pos:end="943:50"><expr pos:start="943:21" pos:end="943:49"><name pos:start="943:21" pos:end="943:24">miss</name> <operator pos:start="943:26" pos:end="943:26">=</operator> <operator pos:start="943:28" pos:end="943:28">&amp;</operator><name pos:start="943:29" pos:end="943:49"><name pos:start="943:29" pos:end="943:31">env</name><operator pos:start="943:32" pos:end="943:33">-&gt;</operator><name pos:start="943:34" pos:end="943:36">spr</name><index pos:start="943:37" pos:end="943:49">[<expr pos:start="943:38" pos:end="943:48"><name pos:start="943:38" pos:end="943:48">SPR_TLBMISS</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="945:21" pos:end="945:47"><expr pos:start="945:21" pos:end="945:46"><name pos:start="945:21" pos:end="945:23">cmp</name> <operator pos:start="945:25" pos:end="945:25">=</operator> <operator pos:start="945:27" pos:end="945:27">&amp;</operator><name pos:start="945:28" pos:end="945:46"><name pos:start="945:28" pos:end="945:30">env</name><operator pos:start="945:31" pos:end="945:32">-&gt;</operator><name pos:start="945:33" pos:end="945:35">spr</name><index pos:start="945:36" pos:end="945:46">[<expr pos:start="945:37" pos:end="945:45"><name pos:start="945:37" pos:end="945:45">SPR_PTEHI</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="947:19" pos:end="965:17">else <block pos:start="947:24" pos:end="965:17">{<block_content pos:start="949:21" pos:end="963:47">

                    <if_stmt pos:start="949:21" pos:end="957:21"><if pos:start="949:21" pos:end="953:21">if <condition pos:start="949:24" pos:end="949:51">(<expr pos:start="949:25" pos:end="949:50"><name pos:start="949:25" pos:end="949:28">excp</name> <operator pos:start="949:30" pos:end="949:31">==</operator> <name pos:start="949:33" pos:end="949:50">POWERPC_EXCP_DLTLB</name></expr>)</condition> <block pos:start="949:53" pos:end="953:21">{<block_content pos:start="951:25" pos:end="951:34">

                        <expr_stmt pos:start="951:25" pos:end="951:34"><expr pos:start="951:25" pos:end="951:33"><name pos:start="951:25" pos:end="951:26">es</name> <operator pos:start="951:28" pos:end="951:28">=</operator> <literal type="string" pos:start="951:30" pos:end="951:33">"DL"</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="953:23" pos:end="957:21">else <block pos:start="953:28" pos:end="957:21">{<block_content pos:start="955:25" pos:end="955:34">

                        <expr_stmt pos:start="955:25" pos:end="955:34"><expr pos:start="955:25" pos:end="955:33"><name pos:start="955:25" pos:end="955:26">es</name> <operator pos:start="955:28" pos:end="955:28">=</operator> <literal type="string" pos:start="955:30" pos:end="955:33">"DS"</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="959:21" pos:end="959:29"><expr pos:start="959:21" pos:end="959:28"><name pos:start="959:21" pos:end="959:22">en</name> <operator pos:start="959:24" pos:end="959:24">=</operator> <literal type="char" pos:start="959:26" pos:end="959:28">'D'</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="961:21" pos:end="961:50"><expr pos:start="961:21" pos:end="961:49"><name pos:start="961:21" pos:end="961:24">miss</name> <operator pos:start="961:26" pos:end="961:26">=</operator> <operator pos:start="961:28" pos:end="961:28">&amp;</operator><name pos:start="961:29" pos:end="961:49"><name pos:start="961:29" pos:end="961:31">env</name><operator pos:start="961:32" pos:end="961:33">-&gt;</operator><name pos:start="961:34" pos:end="961:36">spr</name><index pos:start="961:37" pos:end="961:49">[<expr pos:start="961:38" pos:end="961:48"><name pos:start="961:38" pos:end="961:48">SPR_TLBMISS</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="963:21" pos:end="963:47"><expr pos:start="963:21" pos:end="963:46"><name pos:start="963:21" pos:end="963:23">cmp</name> <operator pos:start="963:25" pos:end="963:25">=</operator> <operator pos:start="963:27" pos:end="963:27">&amp;</operator><name pos:start="963:28" pos:end="963:46"><name pos:start="963:28" pos:end="963:30">env</name><operator pos:start="963:31" pos:end="963:32">-&gt;</operator><name pos:start="963:33" pos:end="963:35">spr</name><index pos:start="963:36" pos:end="963:46">[<expr pos:start="963:37" pos:end="963:45"><name pos:start="963:37" pos:end="963:45">SPR_PTEHI</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="967:17" pos:end="971:42"><expr pos:start="967:17" pos:end="971:41"><call pos:start="967:17" pos:end="971:41"><name pos:start="967:17" pos:end="967:24">qemu_log</name><argument_list pos:start="967:25" pos:end="971:41">(<argument pos:start="967:26" pos:end="969:48"><expr pos:start="967:26" pos:end="969:48"><literal type="string" pos:start="967:26" pos:end="967:48">"74xx %sTLB miss: %cM "</literal> <name pos:start="967:50" pos:end="967:62">TARGET_FMT_lx</name> <literal type="string" pos:start="967:64" pos:end="967:70">" %cC "</literal>

                         <name pos:start="969:26" pos:end="969:38">TARGET_FMT_lx</name> <literal type="string" pos:start="969:40" pos:end="969:48">" %08x\n"</literal></expr></argument>, <argument pos:start="969:51" pos:end="969:52"><expr pos:start="969:51" pos:end="969:52"><name pos:start="969:51" pos:end="969:52">es</name></expr></argument>, <argument pos:start="969:55" pos:end="969:56"><expr pos:start="969:55" pos:end="969:56"><name pos:start="969:55" pos:end="969:56">en</name></expr></argument>, <argument pos:start="969:59" pos:end="969:63"><expr pos:start="969:59" pos:end="969:63"><operator pos:start="969:59" pos:end="969:59">*</operator><name pos:start="969:60" pos:end="969:63">miss</name></expr></argument>, <argument pos:start="969:66" pos:end="969:67"><expr pos:start="969:66" pos:end="969:67"><name pos:start="969:66" pos:end="969:67">en</name></expr></argument>, <argument pos:start="969:70" pos:end="969:73"><expr pos:start="969:70" pos:end="969:73"><operator pos:start="969:70" pos:end="969:70">*</operator><name pos:start="969:71" pos:end="969:73">cmp</name></expr></argument>,

                         <argument pos:start="971:26" pos:end="971:40"><expr pos:start="971:26" pos:end="971:40"><name pos:start="971:26" pos:end="971:40"><name pos:start="971:26" pos:end="971:28">env</name><operator pos:start="971:29" pos:end="971:30">-&gt;</operator><name pos:start="971:31" pos:end="971:40">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="975:1" pos:end="975:6">#<cpp:directive pos:start="975:2" pos:end="975:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="977:13" pos:end="977:35"><expr pos:start="977:13" pos:end="977:34"><name pos:start="977:13" pos:end="977:15">msr</name> <operator pos:start="977:17" pos:end="977:18">|=</operator> <name pos:start="977:20" pos:end="977:34"><name pos:start="977:20" pos:end="977:22">env</name><operator pos:start="977:23" pos:end="977:24">-&gt;</operator><name pos:start="977:25" pos:end="977:34">error_code</name></name></expr>;</expr_stmt> <comment type="block" pos:start="977:37" pos:end="977:49">/* key bit */</comment>

            <break pos:start="979:13" pos:end="979:18">break;</break>

        <default pos:start="981:9" pos:end="981:16">default:</default>

            <expr_stmt pos:start="983:13" pos:end="983:69"><expr pos:start="983:13" pos:end="983:68"><call pos:start="983:13" pos:end="983:68"><name pos:start="983:13" pos:end="983:21">cpu_abort</name><argument_list pos:start="983:22" pos:end="983:68">(<argument pos:start="983:23" pos:end="983:24"><expr pos:start="983:23" pos:end="983:24"><name pos:start="983:23" pos:end="983:24">cs</name></expr></argument>, <argument pos:start="983:27" pos:end="983:67"><expr pos:start="983:27" pos:end="983:67"><literal type="string" pos:start="983:27" pos:end="983:67">"Invalid data store TLB miss exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="985:13" pos:end="985:18">break;</break>

        </block_content>}</block></switch>

        <goto pos:start="989:9" pos:end="989:24">goto <name pos:start="989:14" pos:end="989:23">store_next</name>;</goto>

    <case pos:start="991:5" pos:end="991:26">case <expr pos:start="991:10" pos:end="991:25"><name pos:start="991:10" pos:end="991:25">POWERPC_EXCP_FPA</name></expr>:</case>       <comment type="block" pos:start="991:34" pos:end="991:79">/* Floating-point assist exception          */</comment>

        <comment type="block" pos:start="993:9" pos:end="993:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="995:9" pos:end="997:48"><expr pos:start="995:9" pos:end="997:47"><call pos:start="995:9" pos:end="997:47"><name pos:start="995:9" pos:end="995:17">cpu_abort</name><argument_list pos:start="995:18" pos:end="997:47">(<argument pos:start="995:19" pos:end="995:20"><expr pos:start="995:19" pos:end="995:20"><name pos:start="995:19" pos:end="995:20">cs</name></expr></argument>, <argument pos:start="995:23" pos:end="997:46"><expr pos:start="995:23" pos:end="997:46"><literal type="string" pos:start="995:23" pos:end="995:56">"Floating point assist exception "</literal>

                  <literal type="string" pos:start="997:19" pos:end="997:46">"is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="999:9" pos:end="999:24">goto <name pos:start="999:14" pos:end="999:23">store_next</name>;</goto>

    <case pos:start="1001:5" pos:end="1001:27">case <expr pos:start="1001:10" pos:end="1001:26"><name pos:start="1001:10" pos:end="1001:26">POWERPC_EXCP_DABR</name></expr>:</case>      <comment type="block" pos:start="1001:34" pos:end="1001:79">/* Data address breakpoint                  */</comment>

        <comment type="block" pos:start="1003:9" pos:end="1003:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1005:9" pos:end="1005:67"><expr pos:start="1005:9" pos:end="1005:66"><call pos:start="1005:9" pos:end="1005:66"><name pos:start="1005:9" pos:end="1005:17">cpu_abort</name><argument_list pos:start="1005:18" pos:end="1005:66">(<argument pos:start="1005:19" pos:end="1005:20"><expr pos:start="1005:19" pos:end="1005:20"><name pos:start="1005:19" pos:end="1005:20">cs</name></expr></argument>, <argument pos:start="1005:23" pos:end="1005:65"><expr pos:start="1005:23" pos:end="1005:65"><literal type="string" pos:start="1005:23" pos:end="1005:65">"DABR exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1007:9" pos:end="1007:24">goto <name pos:start="1007:14" pos:end="1007:23">store_next</name>;</goto>

    <case pos:start="1009:5" pos:end="1009:27">case <expr pos:start="1009:10" pos:end="1009:26"><name pos:start="1009:10" pos:end="1009:26">POWERPC_EXCP_IABR</name></expr>:</case>      <comment type="block" pos:start="1009:34" pos:end="1009:79">/* Instruction address breakpoint           */</comment>

        <comment type="block" pos:start="1011:9" pos:end="1011:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1013:9" pos:end="1013:67"><expr pos:start="1013:9" pos:end="1013:66"><call pos:start="1013:9" pos:end="1013:66"><name pos:start="1013:9" pos:end="1013:17">cpu_abort</name><argument_list pos:start="1013:18" pos:end="1013:66">(<argument pos:start="1013:19" pos:end="1013:20"><expr pos:start="1013:19" pos:end="1013:20"><name pos:start="1013:19" pos:end="1013:20">cs</name></expr></argument>, <argument pos:start="1013:23" pos:end="1013:65"><expr pos:start="1013:23" pos:end="1013:65"><literal type="string" pos:start="1013:23" pos:end="1013:65">"IABR exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1015:9" pos:end="1015:24">goto <name pos:start="1015:14" pos:end="1015:23">store_next</name>;</goto>

    <case pos:start="1017:5" pos:end="1017:26">case <expr pos:start="1017:10" pos:end="1017:25"><name pos:start="1017:10" pos:end="1017:25">POWERPC_EXCP_SMI</name></expr>:</case>       <comment type="block" pos:start="1017:34" pos:end="1017:79">/* System management interrupt              */</comment>

        <comment type="block" pos:start="1019:9" pos:end="1019:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1021:9" pos:end="1021:66"><expr pos:start="1021:9" pos:end="1021:65"><call pos:start="1021:9" pos:end="1021:65"><name pos:start="1021:9" pos:end="1021:17">cpu_abort</name><argument_list pos:start="1021:18" pos:end="1021:65">(<argument pos:start="1021:19" pos:end="1021:20"><expr pos:start="1021:19" pos:end="1021:20"><name pos:start="1021:19" pos:end="1021:20">cs</name></expr></argument>, <argument pos:start="1021:23" pos:end="1021:64"><expr pos:start="1021:23" pos:end="1021:64"><literal type="string" pos:start="1021:23" pos:end="1021:64">"SMI exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1023:9" pos:end="1023:24">goto <name pos:start="1023:14" pos:end="1023:23">store_next</name>;</goto>

    <case pos:start="1025:5" pos:end="1025:28">case <expr pos:start="1025:10" pos:end="1025:27"><name pos:start="1025:10" pos:end="1025:27">POWERPC_EXCP_THERM</name></expr>:</case>     <comment type="block" pos:start="1025:34" pos:end="1025:79">/* Thermal interrupt                        */</comment>

        <comment type="block" pos:start="1027:9" pos:end="1027:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1029:9" pos:end="1031:48"><expr pos:start="1029:9" pos:end="1031:47"><call pos:start="1029:9" pos:end="1031:47"><name pos:start="1029:9" pos:end="1029:17">cpu_abort</name><argument_list pos:start="1029:18" pos:end="1031:47">(<argument pos:start="1029:19" pos:end="1029:20"><expr pos:start="1029:19" pos:end="1029:20"><name pos:start="1029:19" pos:end="1029:20">cs</name></expr></argument>, <argument pos:start="1029:23" pos:end="1031:46"><expr pos:start="1029:23" pos:end="1031:46"><literal type="string" pos:start="1029:23" pos:end="1029:53">"Thermal management exception "</literal>

                  <literal type="string" pos:start="1031:19" pos:end="1031:46">"is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1033:9" pos:end="1033:24">goto <name pos:start="1033:14" pos:end="1033:23">store_next</name>;</goto>

    <case pos:start="1035:5" pos:end="1035:28">case <expr pos:start="1035:10" pos:end="1035:27"><name pos:start="1035:10" pos:end="1035:27">POWERPC_EXCP_PERFM</name></expr>:</case>     <comment type="block" pos:start="1035:34" pos:end="1035:79">/* Embedded performance monitor interrupt   */</comment>

        <if_stmt pos:start="1037:9" pos:end="1041:9"><if pos:start="1037:9" pos:end="1041:9">if <condition pos:start="1037:12" pos:end="1037:23">(<expr pos:start="1037:13" pos:end="1037:22"><name pos:start="1037:13" pos:end="1037:17">lpes1</name> <operator pos:start="1037:19" pos:end="1037:20">==</operator> <literal type="number" pos:start="1037:22" pos:end="1037:22">0</literal></expr>)</condition> <block pos:start="1037:25" pos:end="1041:9">{<block_content pos:start="1039:13" pos:end="1039:45">

            <expr_stmt pos:start="1039:13" pos:end="1039:45"><expr pos:start="1039:13" pos:end="1039:44"><name pos:start="1039:13" pos:end="1039:19">new_msr</name> <operator pos:start="1039:21" pos:end="1039:22">|=</operator> <operator pos:start="1039:24" pos:end="1039:24">(</operator><name pos:start="1039:25" pos:end="1039:36">target_ulong</name><operator pos:start="1039:37" pos:end="1039:37">)</operator><name pos:start="1039:38" pos:end="1039:44">MSR_HVB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="1043:9" pos:end="1043:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1045:9" pos:end="1047:78"><expr pos:start="1045:9" pos:end="1047:77"><call pos:start="1045:9" pos:end="1047:77"><name pos:start="1045:9" pos:end="1045:17">cpu_abort</name><argument_list pos:start="1045:18" pos:end="1047:77">(<argument pos:start="1045:19" pos:end="1045:20"><expr pos:start="1045:19" pos:end="1045:20"><name pos:start="1045:19" pos:end="1045:20">cs</name></expr></argument>,

                  <argument pos:start="1047:19" pos:end="1047:76"><expr pos:start="1047:19" pos:end="1047:76"><literal type="string" pos:start="1047:19" pos:end="1047:76">"Performance counter exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1049:9" pos:end="1049:24">goto <name pos:start="1049:14" pos:end="1049:23">store_next</name>;</goto>

    <case pos:start="1051:5" pos:end="1051:27">case <expr pos:start="1051:10" pos:end="1051:26"><name pos:start="1051:10" pos:end="1051:26">POWERPC_EXCP_VPUA</name></expr>:</case>      <comment type="block" pos:start="1051:34" pos:end="1051:79">/* Vector assist exception                  */</comment>

        <comment type="block" pos:start="1053:9" pos:end="1053:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1055:9" pos:end="1055:73"><expr pos:start="1055:9" pos:end="1055:72"><call pos:start="1055:9" pos:end="1055:72"><name pos:start="1055:9" pos:end="1055:17">cpu_abort</name><argument_list pos:start="1055:18" pos:end="1055:72">(<argument pos:start="1055:19" pos:end="1055:20"><expr pos:start="1055:19" pos:end="1055:20"><name pos:start="1055:19" pos:end="1055:20">cs</name></expr></argument>, <argument pos:start="1055:23" pos:end="1055:71"><expr pos:start="1055:23" pos:end="1055:71"><literal type="string" pos:start="1055:23" pos:end="1055:71">"VPU assist exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1057:9" pos:end="1057:24">goto <name pos:start="1057:14" pos:end="1057:23">store_next</name>;</goto>

    <case pos:start="1059:5" pos:end="1059:28">case <expr pos:start="1059:10" pos:end="1059:27"><name pos:start="1059:10" pos:end="1059:27">POWERPC_EXCP_SOFTP</name></expr>:</case>     <comment type="block" pos:start="1059:34" pos:end="1059:79">/* Soft patch exception                     */</comment>

        <comment type="block" pos:start="1061:9" pos:end="1061:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1063:9" pos:end="1065:73"><expr pos:start="1063:9" pos:end="1065:72"><call pos:start="1063:9" pos:end="1065:72"><name pos:start="1063:9" pos:end="1063:17">cpu_abort</name><argument_list pos:start="1063:18" pos:end="1065:72">(<argument pos:start="1063:19" pos:end="1063:20"><expr pos:start="1063:19" pos:end="1063:20"><name pos:start="1063:19" pos:end="1063:20">cs</name></expr></argument>,

                  <argument pos:start="1065:19" pos:end="1065:71"><expr pos:start="1065:19" pos:end="1065:71"><literal type="string" pos:start="1065:19" pos:end="1065:71">"970 soft-patch exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1067:9" pos:end="1067:24">goto <name pos:start="1067:14" pos:end="1067:23">store_next</name>;</goto>

    <case pos:start="1069:5" pos:end="1069:28">case <expr pos:start="1069:10" pos:end="1069:27"><name pos:start="1069:10" pos:end="1069:27">POWERPC_EXCP_MAINT</name></expr>:</case>     <comment type="block" pos:start="1069:34" pos:end="1069:79">/* Maintenance exception                    */</comment>

        <comment type="block" pos:start="1071:9" pos:end="1071:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1073:9" pos:end="1075:74"><expr pos:start="1073:9" pos:end="1075:73"><call pos:start="1073:9" pos:end="1075:73"><name pos:start="1073:9" pos:end="1073:17">cpu_abort</name><argument_list pos:start="1073:18" pos:end="1075:73">(<argument pos:start="1073:19" pos:end="1073:20"><expr pos:start="1073:19" pos:end="1073:20"><name pos:start="1073:19" pos:end="1073:20">cs</name></expr></argument>,

                  <argument pos:start="1075:19" pos:end="1075:72"><expr pos:start="1075:19" pos:end="1075:72"><literal type="string" pos:start="1075:19" pos:end="1075:72">"970 maintenance exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1077:9" pos:end="1077:24">goto <name pos:start="1077:14" pos:end="1077:23">store_next</name>;</goto>

    <case pos:start="1079:5" pos:end="1079:29">case <expr pos:start="1079:10" pos:end="1079:28"><name pos:start="1079:10" pos:end="1079:28">POWERPC_EXCP_MEXTBR</name></expr>:</case>    <comment type="block" pos:start="1079:34" pos:end="1079:79">/* Maskable external breakpoint             */</comment>

        <comment type="block" pos:start="1081:9" pos:end="1081:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1083:9" pos:end="1085:48"><expr pos:start="1083:9" pos:end="1085:47"><call pos:start="1083:9" pos:end="1085:47"><name pos:start="1083:9" pos:end="1083:17">cpu_abort</name><argument_list pos:start="1083:18" pos:end="1085:47">(<argument pos:start="1083:19" pos:end="1083:20"><expr pos:start="1083:19" pos:end="1083:20"><name pos:start="1083:19" pos:end="1083:20">cs</name></expr></argument>, <argument pos:start="1083:23" pos:end="1085:46"><expr pos:start="1083:23" pos:end="1085:46"><literal type="string" pos:start="1083:23" pos:end="1083:52">"Maskable external exception "</literal>

                  <literal type="string" pos:start="1085:19" pos:end="1085:46">"is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1087:9" pos:end="1087:24">goto <name pos:start="1087:14" pos:end="1087:23">store_next</name>;</goto>

    <case pos:start="1089:5" pos:end="1089:30">case <expr pos:start="1089:10" pos:end="1089:29"><name pos:start="1089:10" pos:end="1089:29">POWERPC_EXCP_NMEXTBR</name></expr>:</case>   <comment type="block" pos:start="1089:34" pos:end="1089:79">/* Non maskable external breakpoint         */</comment>

        <comment type="block" pos:start="1091:9" pos:end="1091:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1093:9" pos:end="1095:48"><expr pos:start="1093:9" pos:end="1095:47"><call pos:start="1093:9" pos:end="1095:47"><name pos:start="1093:9" pos:end="1093:17">cpu_abort</name><argument_list pos:start="1093:18" pos:end="1095:47">(<argument pos:start="1093:19" pos:end="1093:20"><expr pos:start="1093:19" pos:end="1093:20"><name pos:start="1093:19" pos:end="1093:20">cs</name></expr></argument>, <argument pos:start="1093:23" pos:end="1095:46"><expr pos:start="1093:23" pos:end="1095:46"><literal type="string" pos:start="1093:23" pos:end="1093:56">"Non maskable external exception "</literal>

                  <literal type="string" pos:start="1095:19" pos:end="1095:46">"is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1097:9" pos:end="1097:24">goto <name pos:start="1097:14" pos:end="1097:23">store_next</name>;</goto>

    <default pos:start="1099:5" pos:end="1099:12">default:</default>

    <label pos:start="1101:5" pos:end="1101:17"><name pos:start="1101:5" pos:end="1101:16">excp_invalid</name>:</label>

        <expr_stmt pos:start="1103:9" pos:end="1103:72"><expr pos:start="1103:9" pos:end="1103:71"><call pos:start="1103:9" pos:end="1103:71"><name pos:start="1103:9" pos:end="1103:17">cpu_abort</name><argument_list pos:start="1103:18" pos:end="1103:71">(<argument pos:start="1103:19" pos:end="1103:20"><expr pos:start="1103:19" pos:end="1103:20"><name pos:start="1103:19" pos:end="1103:20">cs</name></expr></argument>, <argument pos:start="1103:23" pos:end="1103:64"><expr pos:start="1103:23" pos:end="1103:64"><literal type="string" pos:start="1103:23" pos:end="1103:64">"Invalid PowerPC exception %d. Aborting\n"</literal></expr></argument>, <argument pos:start="1103:67" pos:end="1103:70"><expr pos:start="1103:67" pos:end="1103:70"><name pos:start="1103:67" pos:end="1103:70">excp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1105:9" pos:end="1105:14">break;</break>

    <label pos:start="1107:5" pos:end="1107:18"><name pos:start="1107:5" pos:end="1107:17">store_current</name>:</label>

        <comment type="block" pos:start="1109:9" pos:end="1109:47">/* save current instruction location */</comment>

        <expr_stmt pos:start="1111:9" pos:end="1111:38"><expr pos:start="1111:9" pos:end="1111:37"><name pos:start="1111:9" pos:end="1111:22"><name pos:start="1111:9" pos:end="1111:11">env</name><operator pos:start="1111:12" pos:end="1111:13">-&gt;</operator><name pos:start="1111:14" pos:end="1111:16">spr</name><index pos:start="1111:17" pos:end="1111:22">[<expr pos:start="1111:18" pos:end="1111:21"><name pos:start="1111:18" pos:end="1111:21">srr0</name></expr>]</index></name> <operator pos:start="1111:24" pos:end="1111:24">=</operator> <name pos:start="1111:26" pos:end="1111:33"><name pos:start="1111:26" pos:end="1111:28">env</name><operator pos:start="1111:29" pos:end="1111:30">-&gt;</operator><name pos:start="1111:31" pos:end="1111:33">nip</name></name> <operator pos:start="1111:35" pos:end="1111:35">-</operator> <literal type="number" pos:start="1111:37" pos:end="1111:37">4</literal></expr>;</expr_stmt>

        <break pos:start="1113:9" pos:end="1113:14">break;</break>

    <label pos:start="1115:5" pos:end="1115:15"><name pos:start="1115:5" pos:end="1115:14">store_next</name>:</label>

        <comment type="block" pos:start="1117:9" pos:end="1117:44">/* save next instruction location */</comment>

        <expr_stmt pos:start="1119:9" pos:end="1119:34"><expr pos:start="1119:9" pos:end="1119:33"><name pos:start="1119:9" pos:end="1119:22"><name pos:start="1119:9" pos:end="1119:11">env</name><operator pos:start="1119:12" pos:end="1119:13">-&gt;</operator><name pos:start="1119:14" pos:end="1119:16">spr</name><index pos:start="1119:17" pos:end="1119:22">[<expr pos:start="1119:18" pos:end="1119:21"><name pos:start="1119:18" pos:end="1119:21">srr0</name></expr>]</index></name> <operator pos:start="1119:24" pos:end="1119:24">=</operator> <name pos:start="1119:26" pos:end="1119:33"><name pos:start="1119:26" pos:end="1119:28">env</name><operator pos:start="1119:29" pos:end="1119:30">-&gt;</operator><name pos:start="1119:31" pos:end="1119:33">nip</name></name></expr>;</expr_stmt>

        <break pos:start="1121:9" pos:end="1121:14">break;</break>

    </block_content>}</block></switch>

    <comment type="block" pos:start="1125:5" pos:end="1125:18">/* Save MSR */</comment>

    <expr_stmt pos:start="1127:5" pos:end="1127:25"><expr pos:start="1127:5" pos:end="1127:24"><name pos:start="1127:5" pos:end="1127:18"><name pos:start="1127:5" pos:end="1127:7">env</name><operator pos:start="1127:8" pos:end="1127:9">-&gt;</operator><name pos:start="1127:10" pos:end="1127:12">spr</name><index pos:start="1127:13" pos:end="1127:18">[<expr pos:start="1127:14" pos:end="1127:17"><name pos:start="1127:14" pos:end="1127:17">srr1</name></expr>]</index></name> <operator pos:start="1127:20" pos:end="1127:20">=</operator> <name pos:start="1127:22" pos:end="1127:24">msr</name></expr>;</expr_stmt>

    <comment type="block" pos:start="1129:5" pos:end="1129:75">/* If any alternate SRR register are defined, duplicate saved values */</comment>

    <if_stmt pos:start="1131:5" pos:end="1135:5"><if pos:start="1131:5" pos:end="1135:5">if <condition pos:start="1131:8" pos:end="1131:20">(<expr pos:start="1131:9" pos:end="1131:19"><name pos:start="1131:9" pos:end="1131:13">asrr0</name> <operator pos:start="1131:15" pos:end="1131:16">!=</operator> <operator pos:start="1131:18" pos:end="1131:18">-</operator><literal type="number" pos:start="1131:19" pos:end="1131:19">1</literal></expr>)</condition> <block pos:start="1131:22" pos:end="1135:5">{<block_content pos:start="1133:9" pos:end="1133:41">

        <expr_stmt pos:start="1133:9" pos:end="1133:41"><expr pos:start="1133:9" pos:end="1133:40"><name pos:start="1133:9" pos:end="1133:23"><name pos:start="1133:9" pos:end="1133:11">env</name><operator pos:start="1133:12" pos:end="1133:13">-&gt;</operator><name pos:start="1133:14" pos:end="1133:16">spr</name><index pos:start="1133:17" pos:end="1133:23">[<expr pos:start="1133:18" pos:end="1133:22"><name pos:start="1133:18" pos:end="1133:22">asrr0</name></expr>]</index></name> <operator pos:start="1133:25" pos:end="1133:25">=</operator> <name pos:start="1133:27" pos:end="1133:40"><name pos:start="1133:27" pos:end="1133:29">env</name><operator pos:start="1133:30" pos:end="1133:31">-&gt;</operator><name pos:start="1133:32" pos:end="1133:34">spr</name><index pos:start="1133:35" pos:end="1133:40">[<expr pos:start="1133:36" pos:end="1133:39"><name pos:start="1133:36" pos:end="1133:39">srr0</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="1137:5" pos:end="1141:5"><if pos:start="1137:5" pos:end="1141:5">if <condition pos:start="1137:8" pos:end="1137:20">(<expr pos:start="1137:9" pos:end="1137:19"><name pos:start="1137:9" pos:end="1137:13">asrr1</name> <operator pos:start="1137:15" pos:end="1137:16">!=</operator> <operator pos:start="1137:18" pos:end="1137:18">-</operator><literal type="number" pos:start="1137:19" pos:end="1137:19">1</literal></expr>)</condition> <block pos:start="1137:22" pos:end="1141:5">{<block_content pos:start="1139:9" pos:end="1139:41">

        <expr_stmt pos:start="1139:9" pos:end="1139:41"><expr pos:start="1139:9" pos:end="1139:40"><name pos:start="1139:9" pos:end="1139:23"><name pos:start="1139:9" pos:end="1139:11">env</name><operator pos:start="1139:12" pos:end="1139:13">-&gt;</operator><name pos:start="1139:14" pos:end="1139:16">spr</name><index pos:start="1139:17" pos:end="1139:23">[<expr pos:start="1139:18" pos:end="1139:22"><name pos:start="1139:18" pos:end="1139:22">asrr1</name></expr>]</index></name> <operator pos:start="1139:25" pos:end="1139:25">=</operator> <name pos:start="1139:27" pos:end="1139:40"><name pos:start="1139:27" pos:end="1139:29">env</name><operator pos:start="1139:30" pos:end="1139:31">-&gt;</operator><name pos:start="1139:32" pos:end="1139:34">spr</name><index pos:start="1139:35" pos:end="1139:40">[<expr pos:start="1139:36" pos:end="1139:39"><name pos:start="1139:36" pos:end="1139:39">srr1</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1145:5" pos:end="1154:0"><if pos:start="1145:5" pos:end="1154:0">if <condition pos:start="1145:8" pos:end="1145:38">(<expr pos:start="1145:9" pos:end="1145:37"><name pos:start="1145:9" pos:end="1145:26"><name pos:start="1145:9" pos:end="1145:11">env</name><operator pos:start="1145:12" pos:end="1145:13">-&gt;</operator><name pos:start="1145:14" pos:end="1145:16">spr</name><index pos:start="1145:17" pos:end="1145:26">[<expr pos:start="1145:18" pos:end="1145:25"><name pos:start="1145:18" pos:end="1145:25">SPR_LPCR</name></expr>]</index></name> <operator pos:start="1145:28" pos:end="1145:28">&amp;</operator> <name pos:start="1145:30" pos:end="1145:37">LPCR_AIL</name></expr>)</condition> <block pos:start="1145:40" pos:end="1154:0">{<block_content pos:start="1147:9" pos:end="1147:49">

        <expr_stmt pos:start="1147:9" pos:end="1147:49"><expr pos:start="1147:9" pos:end="1147:48"><name pos:start="1147:9" pos:end="1147:15">new_msr</name> <operator pos:start="1147:17" pos:end="1147:18">|=</operator> <operator pos:start="1147:20" pos:end="1147:20">(</operator><literal type="number" pos:start="1147:21" pos:end="1147:21">1</literal> <operator pos:start="1147:23" pos:end="1147:24">&lt;&lt;</operator> <name pos:start="1147:26" pos:end="1147:31">MSR_IR</name><operator pos:start="1147:32" pos:end="1147:32">)</operator> <operator pos:start="1147:34" pos:end="1147:34">|</operator> <operator pos:start="1147:36" pos:end="1147:36">(</operator><literal type="number" pos:start="1147:37" pos:end="1147:37">1</literal> <operator pos:start="1147:39" pos:end="1147:40">&lt;&lt;</operator> <name pos:start="1147:42" pos:end="1147:47">MSR_DR</name><operator pos:start="1147:48" pos:end="1147:48">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="1153:1" pos:end="1153:19">#<cpp:directive pos:start="1153:2" pos:end="1153:6">ifdef</cpp:directive> <name pos:start="1153:8" pos:end="1153:19">TARGET_PPC64</name></cpp:ifdef>

    <if_stmt pos:start="1155:5" pos:end="1172:0"><if pos:start="1155:5" pos:end="1165:5">if <condition pos:start="1155:8" pos:end="1157:42">(<expr pos:start="1155:9" pos:end="1157:41"><name pos:start="1155:9" pos:end="1155:18">excp_model</name> <operator pos:start="1155:20" pos:end="1155:21">==</operator> <name pos:start="1155:23" pos:end="1155:41">POWERPC_EXCP_POWER7</name> <operator pos:start="1155:43" pos:end="1155:44">||</operator>

        <name pos:start="1157:9" pos:end="1157:18">excp_model</name> <operator pos:start="1157:20" pos:end="1157:21">==</operator> <name pos:start="1157:23" pos:end="1157:41">POWERPC_EXCP_POWER8</name></expr>)</condition> <block pos:start="1157:44" pos:end="1165:5">{<block_content pos:start="1159:9" pos:end="1163:9">

        <if_stmt pos:start="1159:9" pos:end="1163:9"><if pos:start="1159:9" pos:end="1163:9">if <condition pos:start="1159:12" pos:end="1159:42">(<expr pos:start="1159:13" pos:end="1159:41"><name pos:start="1159:13" pos:end="1159:30"><name pos:start="1159:13" pos:end="1159:15">env</name><operator pos:start="1159:16" pos:end="1159:17">-&gt;</operator><name pos:start="1159:18" pos:end="1159:20">spr</name><index pos:start="1159:21" pos:end="1159:30">[<expr pos:start="1159:22" pos:end="1159:29"><name pos:start="1159:22" pos:end="1159:29">SPR_LPCR</name></expr>]</index></name> <operator pos:start="1159:32" pos:end="1159:32">&amp;</operator> <name pos:start="1159:34" pos:end="1159:41">LPCR_ILE</name></expr>)</condition> <block pos:start="1159:44" pos:end="1163:9">{<block_content pos:start="1161:13" pos:end="1161:49">

            <expr_stmt pos:start="1161:13" pos:end="1161:49"><expr pos:start="1161:13" pos:end="1161:48"><name pos:start="1161:13" pos:end="1161:19">new_msr</name> <operator pos:start="1161:21" pos:end="1161:22">|=</operator> <operator pos:start="1161:24" pos:end="1161:24">(</operator><name pos:start="1161:25" pos:end="1161:36">target_ulong</name><operator pos:start="1161:37" pos:end="1161:37">)</operator><literal type="number" pos:start="1161:38" pos:end="1161:38">1</literal> <operator pos:start="1161:40" pos:end="1161:41">&lt;&lt;</operator> <name pos:start="1161:43" pos:end="1161:48">MSR_LE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="1165:7" pos:end="1172:0">else if <condition pos:start="1165:15" pos:end="1165:23">(<expr pos:start="1165:16" pos:end="1165:22"><name pos:start="1165:16" pos:end="1165:22">msr_ile</name></expr>)</condition> <block pos:start="1165:25" pos:end="1172:0">{<block_content pos:start="1167:9" pos:end="1167:45">

        <expr_stmt pos:start="1167:9" pos:end="1167:45"><expr pos:start="1167:9" pos:end="1167:44"><name pos:start="1167:9" pos:end="1167:15">new_msr</name> <operator pos:start="1167:17" pos:end="1167:18">|=</operator> <operator pos:start="1167:20" pos:end="1167:20">(</operator><name pos:start="1167:21" pos:end="1167:32">target_ulong</name><operator pos:start="1167:33" pos:end="1167:33">)</operator><literal type="number" pos:start="1167:34" pos:end="1167:34">1</literal> <operator pos:start="1167:36" pos:end="1167:37">&lt;&lt;</operator> <name pos:start="1167:39" pos:end="1167:44">MSR_LE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:else pos:start="1171:1" pos:end="1171:5">#<cpp:directive pos:start="1171:2" pos:end="1171:5">else</cpp:directive></cpp:else>

    <if_stmt pos:start="1173:5" pos:end="1180:0"><if pos:start="1173:5" pos:end="1180:0">if <condition pos:start="1173:8" pos:end="1173:16">(<expr pos:start="1173:9" pos:end="1173:15"><name pos:start="1173:9" pos:end="1173:15">msr_ile</name></expr>)</condition> <block pos:start="1173:18" pos:end="1180:0">{<block_content pos:start="1175:9" pos:end="1175:45">

        <expr_stmt pos:start="1175:9" pos:end="1175:45"><expr pos:start="1175:9" pos:end="1175:44"><name pos:start="1175:9" pos:end="1175:15">new_msr</name> <operator pos:start="1175:17" pos:end="1175:18">|=</operator> <operator pos:start="1175:20" pos:end="1175:20">(</operator><name pos:start="1175:21" pos:end="1175:32">target_ulong</name><operator pos:start="1175:33" pos:end="1175:33">)</operator><literal type="number" pos:start="1175:34" pos:end="1175:34">1</literal> <operator pos:start="1175:36" pos:end="1175:37">&lt;&lt;</operator> <name pos:start="1175:39" pos:end="1175:44">MSR_LE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="1179:1" pos:end="1179:6">#<cpp:directive pos:start="1179:2" pos:end="1179:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="1183:5" pos:end="1183:25">/* Jump to handler */</comment>

    <expr_stmt pos:start="1185:5" pos:end="1185:37"><expr pos:start="1185:5" pos:end="1185:36"><name pos:start="1185:5" pos:end="1185:10">vector</name> <operator pos:start="1185:12" pos:end="1185:12">=</operator> <name pos:start="1185:14" pos:end="1185:36"><name pos:start="1185:14" pos:end="1185:16">env</name><operator pos:start="1185:17" pos:end="1185:18">-&gt;</operator><name pos:start="1185:19" pos:end="1185:30">excp_vectors</name><index pos:start="1185:31" pos:end="1185:36">[<expr pos:start="1185:32" pos:end="1185:35"><name pos:start="1185:32" pos:end="1185:35">excp</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="1187:5" pos:end="1193:5"><if pos:start="1187:5" pos:end="1193:5">if <condition pos:start="1187:8" pos:end="1187:38">(<expr pos:start="1187:9" pos:end="1187:37"><name pos:start="1187:9" pos:end="1187:14">vector</name> <operator pos:start="1187:16" pos:end="1187:17">==</operator> <operator pos:start="1187:19" pos:end="1187:19">(</operator><name pos:start="1187:20" pos:end="1187:31">target_ulong</name><operator pos:start="1187:32" pos:end="1187:32">)</operator><operator pos:start="1187:33" pos:end="1187:33">-</operator><literal type="number" pos:start="1187:34" pos:end="1187:37">1ULL</literal></expr>)</condition> <block pos:start="1187:40" pos:end="1193:5">{<block_content pos:start="1189:9" pos:end="1191:24">

        <expr_stmt pos:start="1189:9" pos:end="1191:24"><expr pos:start="1189:9" pos:end="1191:23"><call pos:start="1189:9" pos:end="1191:23"><name pos:start="1189:9" pos:end="1189:17">cpu_abort</name><argument_list pos:start="1189:18" pos:end="1191:23">(<argument pos:start="1189:19" pos:end="1189:20"><expr pos:start="1189:19" pos:end="1189:20"><name pos:start="1189:19" pos:end="1189:20">cs</name></expr></argument>, <argument pos:start="1189:23" pos:end="1189:71"><expr pos:start="1189:23" pos:end="1189:71"><literal type="string" pos:start="1189:23" pos:end="1189:71">"Raised an exception without defined vector %d\n"</literal></expr></argument>,

                  <argument pos:start="1191:19" pos:end="1191:22"><expr pos:start="1191:19" pos:end="1191:22"><name pos:start="1191:19" pos:end="1191:22">excp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1195:5" pos:end="1195:31"><expr pos:start="1195:5" pos:end="1195:30"><name pos:start="1195:5" pos:end="1195:10">vector</name> <operator pos:start="1195:12" pos:end="1195:13">|=</operator> <name pos:start="1195:15" pos:end="1195:30"><name pos:start="1195:15" pos:end="1195:17">env</name><operator pos:start="1195:18" pos:end="1195:19">-&gt;</operator><name pos:start="1195:20" pos:end="1195:30">excp_prefix</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="1199:5" pos:end="1203:7">/* AIL only works if there is no HV transition and we are running with

     * translations enabled

     */</comment>

    <if_stmt pos:start="1205:5" pos:end="1209:5"><if pos:start="1205:5" pos:end="1209:5">if <condition pos:start="1205:8" pos:end="1205:57">(<expr pos:start="1205:9" pos:end="1205:56"><operator pos:start="1205:9" pos:end="1205:9">!</operator><operator pos:start="1205:10" pos:end="1205:10">(</operator><operator pos:start="1205:11" pos:end="1205:11">(</operator><name pos:start="1205:12" pos:end="1205:14">msr</name> <operator pos:start="1205:16" pos:end="1205:17">&gt;&gt;</operator> <name pos:start="1205:19" pos:end="1205:24">MSR_IR</name><operator pos:start="1205:25" pos:end="1205:25">)</operator> <operator pos:start="1205:27" pos:end="1205:27">&amp;</operator> <literal type="number" pos:start="1205:29" pos:end="1205:29">1</literal><operator pos:start="1205:30" pos:end="1205:30">)</operator> <operator pos:start="1205:32" pos:end="1205:33">||</operator> <operator pos:start="1205:35" pos:end="1205:35">!</operator><operator pos:start="1205:36" pos:end="1205:36">(</operator><operator pos:start="1205:37" pos:end="1205:37">(</operator><name pos:start="1205:38" pos:end="1205:40">msr</name> <operator pos:start="1205:42" pos:end="1205:43">&gt;&gt;</operator> <name pos:start="1205:45" pos:end="1205:50">MSR_DR</name><operator pos:start="1205:51" pos:end="1205:51">)</operator> <operator pos:start="1205:53" pos:end="1205:53">&amp;</operator> <literal type="number" pos:start="1205:55" pos:end="1205:55">1</literal><operator pos:start="1205:56" pos:end="1205:56">)</operator></expr>)</condition> <block pos:start="1205:59" pos:end="1209:5">{<block_content pos:start="1207:9" pos:end="1207:16">

        <expr_stmt pos:start="1207:9" pos:end="1207:16"><expr pos:start="1207:9" pos:end="1207:15"><name pos:start="1207:9" pos:end="1207:11">ail</name> <operator pos:start="1207:13" pos:end="1207:13">=</operator> <literal type="number" pos:start="1207:15" pos:end="1207:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="1211:5" pos:end="1211:20">/* Handle AIL */</comment>

    <if_stmt pos:start="1213:5" pos:end="1244:0"><if pos:start="1213:5" pos:end="1244:0">if <condition pos:start="1213:8" pos:end="1213:12">(<expr pos:start="1213:9" pos:end="1213:11"><name pos:start="1213:9" pos:end="1213:11">ail</name></expr>)</condition> <block pos:start="1213:14" pos:end="1244:0">{<block_content pos:start="1215:9" pos:end="1237:9">

        <expr_stmt pos:start="1215:9" pos:end="1215:49"><expr pos:start="1215:9" pos:end="1215:48"><name pos:start="1215:9" pos:end="1215:15">new_msr</name> <operator pos:start="1215:17" pos:end="1215:18">|=</operator> <operator pos:start="1215:20" pos:end="1215:20">(</operator><literal type="number" pos:start="1215:21" pos:end="1215:21">1</literal> <operator pos:start="1215:23" pos:end="1215:24">&lt;&lt;</operator> <name pos:start="1215:26" pos:end="1215:31">MSR_IR</name><operator pos:start="1215:32" pos:end="1215:32">)</operator> <operator pos:start="1215:34" pos:end="1215:34">|</operator> <operator pos:start="1215:36" pos:end="1215:36">(</operator><literal type="number" pos:start="1215:37" pos:end="1215:37">1</literal> <operator pos:start="1215:39" pos:end="1215:40">&lt;&lt;</operator> <name pos:start="1215:42" pos:end="1215:47">MSR_DR</name><operator pos:start="1215:48" pos:end="1215:48">)</operator></expr>;</expr_stmt>

        <switch pos:start="1217:9" pos:end="1237:9">switch<condition pos:start="1217:15" pos:end="1217:19">(<expr pos:start="1217:16" pos:end="1217:18"><name pos:start="1217:16" pos:end="1217:18">ail</name></expr>)</condition> <block pos:start="1217:21" pos:end="1237:9">{<block_content pos:start="1219:9" pos:end="1235:18">

        <case pos:start="1219:9" pos:end="1219:27">case <expr pos:start="1219:14" pos:end="1219:26"><name pos:start="1219:14" pos:end="1219:26">AIL_0001_8000</name></expr>:</case>

            <expr_stmt pos:start="1221:13" pos:end="1221:30"><expr pos:start="1221:13" pos:end="1221:29"><name pos:start="1221:13" pos:end="1221:18">vector</name> <operator pos:start="1221:20" pos:end="1221:21">|=</operator> <literal type="number" pos:start="1221:23" pos:end="1221:29">0x18000</literal></expr>;</expr_stmt>

            <break pos:start="1223:13" pos:end="1223:18">break;</break>

        <case pos:start="1225:9" pos:end="1225:37">case <expr pos:start="1225:14" pos:end="1225:36"><name pos:start="1225:14" pos:end="1225:36">AIL_C000_0000_0000_4000</name></expr>:</case>

            <expr_stmt pos:start="1227:13" pos:end="1227:44"><expr pos:start="1227:13" pos:end="1227:43"><name pos:start="1227:13" pos:end="1227:18">vector</name> <operator pos:start="1227:20" pos:end="1227:21">|=</operator> <literal type="number" pos:start="1227:23" pos:end="1227:43">0xc000000000004000ull</literal></expr>;</expr_stmt>

            <break pos:start="1229:13" pos:end="1229:18">break;</break>

        <default pos:start="1231:9" pos:end="1231:16">default:</default>

            <expr_stmt pos:start="1233:13" pos:end="1233:63"><expr pos:start="1233:13" pos:end="1233:62"><call pos:start="1233:13" pos:end="1233:62"><name pos:start="1233:13" pos:end="1233:21">cpu_abort</name><argument_list pos:start="1233:22" pos:end="1233:62">(<argument pos:start="1233:23" pos:end="1233:24"><expr pos:start="1233:23" pos:end="1233:24"><name pos:start="1233:23" pos:end="1233:24">cs</name></expr></argument>, <argument pos:start="1233:27" pos:end="1233:56"><expr pos:start="1233:27" pos:end="1233:56"><literal type="string" pos:start="1233:27" pos:end="1233:56">"Invalid AIL combination %d\n"</literal></expr></argument>, <argument pos:start="1233:59" pos:end="1233:61"><expr pos:start="1233:59" pos:end="1233:61"><name pos:start="1233:59" pos:end="1233:61">ail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1235:13" pos:end="1235:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="1243:1" pos:end="1243:25">#<cpp:directive pos:start="1243:2" pos:end="1243:3">if</cpp:directive> <expr pos:start="1243:5" pos:end="1243:25"><call pos:start="1243:5" pos:end="1243:25"><name pos:start="1243:5" pos:end="1243:11">defined</name><argument_list pos:start="1243:12" pos:end="1243:25">(<argument pos:start="1243:13" pos:end="1243:24"><expr pos:start="1243:13" pos:end="1243:24"><name pos:start="1243:13" pos:end="1243:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="1245:5" pos:end="1274:0"><if pos:start="1245:5" pos:end="1259:5">if <condition pos:start="1245:8" pos:end="1245:41">(<expr pos:start="1245:9" pos:end="1245:40"><name pos:start="1245:9" pos:end="1245:18">excp_model</name> <operator pos:start="1245:20" pos:end="1245:21">==</operator> <name pos:start="1245:23" pos:end="1245:40">POWERPC_EXCP_BOOKE</name></expr>)</condition> <block pos:start="1245:43" pos:end="1259:5">{<block_content pos:start="1247:9" pos:end="1257:9">

        <if_stmt pos:start="1247:9" pos:end="1257:9"><if pos:start="1247:9" pos:end="1253:9">if <condition pos:start="1247:12" pos:end="1247:48">(<expr pos:start="1247:13" pos:end="1247:47"><name pos:start="1247:13" pos:end="1247:36"><name pos:start="1247:13" pos:end="1247:15">env</name><operator pos:start="1247:16" pos:end="1247:17">-&gt;</operator><name pos:start="1247:18" pos:end="1247:20">spr</name><index pos:start="1247:21" pos:end="1247:36">[<expr pos:start="1247:22" pos:end="1247:35"><name pos:start="1247:22" pos:end="1247:35">SPR_BOOKE_EPCR</name></expr>]</index></name> <operator pos:start="1247:38" pos:end="1247:38">&amp;</operator> <name pos:start="1247:40" pos:end="1247:47">EPCR_ICM</name></expr>)</condition> <block pos:start="1247:50" pos:end="1253:9">{<block_content pos:start="1251:13" pos:end="1251:49">

            <comment type="block" pos:start="1249:13" pos:end="1249:58">/* Cat.64-bit: EPCR.ICM is copied to MSR.CM */</comment>

            <expr_stmt pos:start="1251:13" pos:end="1251:49"><expr pos:start="1251:13" pos:end="1251:48"><name pos:start="1251:13" pos:end="1251:19">new_msr</name> <operator pos:start="1251:21" pos:end="1251:22">|=</operator> <operator pos:start="1251:24" pos:end="1251:24">(</operator><name pos:start="1251:25" pos:end="1251:36">target_ulong</name><operator pos:start="1251:37" pos:end="1251:37">)</operator><literal type="number" pos:start="1251:38" pos:end="1251:38">1</literal> <operator pos:start="1251:40" pos:end="1251:41">&lt;&lt;</operator> <name pos:start="1251:43" pos:end="1251:48">MSR_CM</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1253:11" pos:end="1257:9">else <block pos:start="1253:16" pos:end="1257:9">{<block_content pos:start="1255:13" pos:end="1255:38">

            <expr_stmt pos:start="1255:13" pos:end="1255:38"><expr pos:start="1255:13" pos:end="1255:37"><name pos:start="1255:13" pos:end="1255:18">vector</name> <operator pos:start="1255:20" pos:end="1255:20">=</operator> <operator pos:start="1255:22" pos:end="1255:22">(</operator><name pos:start="1255:23" pos:end="1255:30">uint32_t</name><operator pos:start="1255:31" pos:end="1255:31">)</operator><name pos:start="1255:32" pos:end="1255:37">vector</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="1259:7" pos:end="1274:0">else <block pos:start="1259:12" pos:end="1274:0">{<block_content pos:start="1261:9" pos:end="1269:9">

        <if_stmt pos:start="1261:9" pos:end="1269:9"><if pos:start="1261:9" pos:end="1265:9">if <condition pos:start="1261:12" pos:end="1261:59">(<expr pos:start="1261:13" pos:end="1261:58"><operator pos:start="1261:13" pos:end="1261:13">!</operator><name pos:start="1261:14" pos:end="1261:20">msr_isf</name> <operator pos:start="1261:22" pos:end="1261:23">&amp;&amp;</operator> <operator pos:start="1261:25" pos:end="1261:25">!</operator><operator pos:start="1261:26" pos:end="1261:26">(</operator><name pos:start="1261:27" pos:end="1261:40"><name pos:start="1261:27" pos:end="1261:29">env</name><operator pos:start="1261:30" pos:end="1261:31">-&gt;</operator><name pos:start="1261:32" pos:end="1261:40">mmu_model</name></name> <operator pos:start="1261:42" pos:end="1261:42">&amp;</operator> <name pos:start="1261:44" pos:end="1261:57">POWERPC_MMU_64</name><operator pos:start="1261:58" pos:end="1261:58">)</operator></expr>)</condition> <block pos:start="1261:61" pos:end="1265:9">{<block_content pos:start="1263:13" pos:end="1263:38">

            <expr_stmt pos:start="1263:13" pos:end="1263:38"><expr pos:start="1263:13" pos:end="1263:37"><name pos:start="1263:13" pos:end="1263:18">vector</name> <operator pos:start="1263:20" pos:end="1263:20">=</operator> <operator pos:start="1263:22" pos:end="1263:22">(</operator><name pos:start="1263:23" pos:end="1263:30">uint32_t</name><operator pos:start="1263:31" pos:end="1263:31">)</operator><name pos:start="1263:32" pos:end="1263:37">vector</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1265:11" pos:end="1269:9">else <block pos:start="1265:16" pos:end="1269:9">{<block_content pos:start="1267:13" pos:end="1267:49">

            <expr_stmt pos:start="1267:13" pos:end="1267:49"><expr pos:start="1267:13" pos:end="1267:48"><name pos:start="1267:13" pos:end="1267:19">new_msr</name> <operator pos:start="1267:21" pos:end="1267:22">|=</operator> <operator pos:start="1267:24" pos:end="1267:24">(</operator><name pos:start="1267:25" pos:end="1267:36">target_ulong</name><operator pos:start="1267:37" pos:end="1267:37">)</operator><literal type="number" pos:start="1267:38" pos:end="1267:38">1</literal> <operator pos:start="1267:40" pos:end="1267:41">&lt;&lt;</operator> <name pos:start="1267:43" pos:end="1267:48">MSR_SF</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="1273:1" pos:end="1273:6">#<cpp:directive pos:start="1273:2" pos:end="1273:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="1275:5" pos:end="1287:7">/* We don't use hreg_store_msr here as already have treated

     * any special case that could occur. Just store MSR and update hflags

     *

     * Note: We *MUST* not use hreg_store_msr() as-is anyway because it

     * will prevent setting of the HV bit which some exceptions might need

     * to do.

     */</comment>

    <expr_stmt pos:start="1289:5" pos:end="1289:39"><expr pos:start="1289:5" pos:end="1289:38"><name pos:start="1289:5" pos:end="1289:12"><name pos:start="1289:5" pos:end="1289:7">env</name><operator pos:start="1289:8" pos:end="1289:9">-&gt;</operator><name pos:start="1289:10" pos:end="1289:12">msr</name></name> <operator pos:start="1289:14" pos:end="1289:14">=</operator> <name pos:start="1289:16" pos:end="1289:22">new_msr</name> <operator pos:start="1289:24" pos:end="1289:24">&amp;</operator> <name pos:start="1289:26" pos:end="1289:38"><name pos:start="1289:26" pos:end="1289:28">env</name><operator pos:start="1289:29" pos:end="1289:30">-&gt;</operator><name pos:start="1289:31" pos:end="1289:38">msr_mask</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="1291:5" pos:end="1291:29"><expr pos:start="1291:5" pos:end="1291:28"><call pos:start="1291:5" pos:end="1291:28"><name pos:start="1291:5" pos:end="1291:23">hreg_compute_hflags</name><argument_list pos:start="1291:24" pos:end="1291:28">(<argument pos:start="1291:25" pos:end="1291:27"><expr pos:start="1291:25" pos:end="1291:27"><name pos:start="1291:25" pos:end="1291:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1293:5" pos:end="1293:22"><expr pos:start="1293:5" pos:end="1293:21"><name pos:start="1293:5" pos:end="1293:12"><name pos:start="1293:5" pos:end="1293:7">env</name><operator pos:start="1293:8" pos:end="1293:9">-&gt;</operator><name pos:start="1293:10" pos:end="1293:12">nip</name></name> <operator pos:start="1293:14" pos:end="1293:14">=</operator> <name pos:start="1293:16" pos:end="1293:21">vector</name></expr>;</expr_stmt>

    <comment type="block" pos:start="1295:5" pos:end="1295:31">/* Reset exception state */</comment>

    <expr_stmt pos:start="1297:5" pos:end="1297:44"><expr pos:start="1297:5" pos:end="1297:43"><name pos:start="1297:5" pos:end="1297:23"><name pos:start="1297:5" pos:end="1297:6">cs</name><operator pos:start="1297:7" pos:end="1297:8">-&gt;</operator><name pos:start="1297:9" pos:end="1297:23">exception_index</name></name> <operator pos:start="1297:25" pos:end="1297:25">=</operator> <name pos:start="1297:27" pos:end="1297:43">POWERPC_EXCP_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1299:5" pos:end="1299:24"><expr pos:start="1299:5" pos:end="1299:23"><name pos:start="1299:5" pos:end="1299:19"><name pos:start="1299:5" pos:end="1299:7">env</name><operator pos:start="1299:8" pos:end="1299:9">-&gt;</operator><name pos:start="1299:10" pos:end="1299:19">error_code</name></name> <operator pos:start="1299:21" pos:end="1299:21">=</operator> <literal type="number" pos:start="1299:23" pos:end="1299:23">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="1303:5" pos:end="1307:7">/* Any interrupt is context synchronizing, check if TCG TLB

     * needs a delayed flush on ppc64

     */</comment>

    <expr_stmt pos:start="1309:5" pos:end="1309:25"><expr pos:start="1309:5" pos:end="1309:24"><call pos:start="1309:5" pos:end="1309:24"><name pos:start="1309:5" pos:end="1309:19">check_tlb_flush</name><argument_list pos:start="1309:20" pos:end="1309:24">(<argument pos:start="1309:21" pos:end="1309:23"><expr pos:start="1309:21" pos:end="1309:23"><name pos:start="1309:21" pos:end="1309:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
