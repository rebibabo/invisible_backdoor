<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23780.c" pos:tabs="8"><function pos:start="1:1" pos:end="333:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">gif_read_image</name><parameter_list pos:start="1:26" pos:end="1:54">(<parameter pos:start="1:27" pos:end="1:37"><decl pos:start="1:27" pos:end="1:37"><type pos:start="1:27" pos:end="1:37"><name pos:start="1:27" pos:end="1:34">GifState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:53"><decl pos:start="1:40" pos:end="1:53"><type pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:46">AVFrame</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="333:1">{<block_content pos:start="5:5" pos:end="331:13">

    <decl_stmt pos:start="5:5" pos:end="5:67"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">left</name></decl>, <decl pos:start="5:15" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:17">top</name></decl>, <decl pos:start="5:20" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:24">width</name></decl>, <decl pos:start="5:27" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:27" pos:end="5:32">height</name></decl>, <decl pos:start="5:35" pos:end="5:48"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:35" pos:end="5:48">bits_per_pixel</name></decl>, <decl pos:start="5:51" pos:end="5:59"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:51" pos:end="5:59">code_size</name></decl>, <decl pos:start="5:62" pos:end="5:66"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:62" pos:end="5:66">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:75"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:22">is_interleaved</name></decl>, <decl pos:start="7:25" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:41">has_local_palette</name></decl>, <decl pos:start="7:44" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:44" pos:end="7:44">y</name></decl>, <decl pos:start="7:47" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:47" pos:end="7:50">pass</name></decl>, <decl pos:start="7:53" pos:end="7:54"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:53" pos:end="7:54">y1</name></decl>, <decl pos:start="7:57" pos:end="7:64"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:57" pos:end="7:64">linesize</name></decl>, <decl pos:start="7:67" pos:end="7:74"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:67" pos:end="7:74">pal_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">uint32_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">ptr</name></decl>, <decl pos:start="9:20" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:14"><modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">pal</name></decl>, <decl pos:start="9:26" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:14"><modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:28">px</name></decl>, <decl pos:start="9:31" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:14"><modifier pos:start="9:31" pos:end="9:31">*</modifier></type><name pos:start="9:32" pos:end="9:33">pr</name></decl>, <decl pos:start="9:36" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:14"><modifier pos:start="9:36" pos:end="9:36">*</modifier></type><name pos:start="9:37" pos:end="9:40">ptr1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">idx</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:47">/* At least 9 bytes of Image Descriptor. */</comment>

    <if_stmt pos:start="19:5" pos:end="21:35"><if pos:start="19:5" pos:end="21:35">if <condition pos:start="19:8" pos:end="19:47">(<expr pos:start="19:9" pos:end="19:46"><call pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:34">bytestream2_get_bytes_left</name><argument_list pos:start="19:35" pos:end="19:42">(<argument pos:start="19:36" pos:end="19:41"><expr pos:start="19:36" pos:end="19:41"><operator pos:start="19:36" pos:end="19:36">&amp;</operator><name pos:start="19:37" pos:end="19:41"><name pos:start="19:37" pos:end="19:37">s</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:44" pos:end="19:44">&lt;</operator> <literal type="number" pos:start="19:46" pos:end="19:46">9</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:35"><block_content pos:start="21:9" pos:end="21:35">

        <return pos:start="21:9" pos:end="21:35">return <expr pos:start="21:16" pos:end="21:34"><name pos:start="21:16" pos:end="21:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:8">left</name>   <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:42"><name pos:start="25:14" pos:end="25:34">bytestream2_get_le16u</name><argument_list pos:start="25:35" pos:end="25:42">(<argument pos:start="25:36" pos:end="25:41"><expr pos:start="25:36" pos:end="25:41"><operator pos:start="25:36" pos:end="25:36">&amp;</operator><name pos:start="25:37" pos:end="25:41"><name pos:start="25:37" pos:end="25:37">s</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:43"><expr pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:7">top</name>    <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:42"><name pos:start="27:14" pos:end="27:34">bytestream2_get_le16u</name><argument_list pos:start="27:35" pos:end="27:42">(<argument pos:start="27:36" pos:end="27:41"><expr pos:start="27:36" pos:end="27:41"><operator pos:start="27:36" pos:end="27:36">&amp;</operator><name pos:start="27:37" pos:end="27:41"><name pos:start="27:37" pos:end="27:37">s</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:43"><expr pos:start="29:5" pos:end="29:42"><name pos:start="29:5" pos:end="29:9">width</name>  <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:42"><name pos:start="29:14" pos:end="29:34">bytestream2_get_le16u</name><argument_list pos:start="29:35" pos:end="29:42">(<argument pos:start="29:36" pos:end="29:41"><expr pos:start="29:36" pos:end="29:41"><operator pos:start="29:36" pos:end="29:36">&amp;</operator><name pos:start="29:37" pos:end="29:41"><name pos:start="29:37" pos:end="29:37">s</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:10">height</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:42"><name pos:start="31:14" pos:end="31:34">bytestream2_get_le16u</name><argument_list pos:start="31:35" pos:end="31:42">(<argument pos:start="31:36" pos:end="31:41"><expr pos:start="31:36" pos:end="31:41"><operator pos:start="31:36" pos:end="31:36">&amp;</operator><name pos:start="31:37" pos:end="31:41"><name pos:start="31:37" pos:end="31:37">s</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:9">flags</name>  <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:42"><name pos:start="33:14" pos:end="33:34">bytestream2_get_byteu</name><argument_list pos:start="33:35" pos:end="33:42">(<argument pos:start="33:36" pos:end="33:41"><expr pos:start="33:36" pos:end="33:41"><operator pos:start="33:36" pos:end="33:36">&amp;</operator><name pos:start="33:37" pos:end="33:41"><name pos:start="33:37" pos:end="33:37">s</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:34"><expr pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:18">is_interleaved</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:26">flags</name> <operator pos:start="35:28" pos:end="35:28">&amp;</operator> <literal type="number" pos:start="35:30" pos:end="35:33">0x40</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:21">has_local_palette</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:29">flags</name> <operator pos:start="37:31" pos:end="37:31">&amp;</operator> <literal type="number" pos:start="37:33" pos:end="37:36">0x80</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:18">bits_per_pixel</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <operator pos:start="39:22" pos:end="39:22">(</operator><name pos:start="39:23" pos:end="39:27">flags</name> <operator pos:start="39:29" pos:end="39:29">&amp;</operator> <literal type="number" pos:start="39:31" pos:end="39:34">0x07</literal><operator pos:start="39:35" pos:end="39:35">)</operator> <operator pos:start="39:37" pos:end="39:37">+</operator> <literal type="number" pos:start="39:39" pos:end="39:39">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:79"><expr pos:start="43:5" pos:end="43:78"><call pos:start="43:5" pos:end="43:78"><name pos:start="43:5" pos:end="43:11">av_dlog</name><argument_list pos:start="43:12" pos:end="43:78">(<argument pos:start="43:13" pos:end="43:20"><expr pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:20">avctx</name></name></expr></argument>, <argument pos:start="43:23" pos:end="43:51"><expr pos:start="43:23" pos:end="43:51"><literal type="string" pos:start="43:23" pos:end="43:51">"image x=%d y=%d w=%d h=%d\n"</literal></expr></argument>, <argument pos:start="43:54" pos:end="43:57"><expr pos:start="43:54" pos:end="43:57"><name pos:start="43:54" pos:end="43:57">left</name></expr></argument>, <argument pos:start="43:60" pos:end="43:62"><expr pos:start="43:60" pos:end="43:62"><name pos:start="43:60" pos:end="43:62">top</name></expr></argument>, <argument pos:start="43:65" pos:end="43:69"><expr pos:start="43:65" pos:end="43:69"><name pos:start="43:65" pos:end="43:69">width</name></expr></argument>, <argument pos:start="43:72" pos:end="43:77"><expr pos:start="43:72" pos:end="43:77"><name pos:start="43:72" pos:end="43:77">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="77:5"><if pos:start="47:5" pos:end="63:5">if <condition pos:start="47:8" pos:end="47:26">(<expr pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:25">has_local_palette</name></expr>)</condition> <block pos:start="47:28" pos:end="63:5">{<block_content pos:start="49:9" pos:end="61:31">

        <expr_stmt pos:start="49:9" pos:end="49:39"><expr pos:start="49:9" pos:end="49:38"><name pos:start="49:9" pos:end="49:16">pal_size</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <literal type="number" pos:start="49:20" pos:end="49:20">1</literal> <operator pos:start="49:22" pos:end="49:23">&lt;&lt;</operator> <name pos:start="49:25" pos:end="49:38">bits_per_pixel</name></expr>;</expr_stmt>



        <if_stmt pos:start="53:9" pos:end="55:39"><if pos:start="53:9" pos:end="55:39">if <condition pos:start="53:12" pos:end="53:62">(<expr pos:start="53:13" pos:end="53:61"><call pos:start="53:13" pos:end="53:46"><name pos:start="53:13" pos:end="53:38">bytestream2_get_bytes_left</name><argument_list pos:start="53:39" pos:end="53:46">(<argument pos:start="53:40" pos:end="53:45"><expr pos:start="53:40" pos:end="53:45"><operator pos:start="53:40" pos:end="53:40">&amp;</operator><name pos:start="53:41" pos:end="53:45"><name pos:start="53:41" pos:end="53:41">s</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:45">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="53:48" pos:end="53:48">&lt;</operator> <name pos:start="53:50" pos:end="53:57">pal_size</name> <operator pos:start="53:59" pos:end="53:59">*</operator> <literal type="number" pos:start="53:61" pos:end="53:61">3</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:39"><block_content pos:start="55:13" pos:end="55:39">

            <return pos:start="55:13" pos:end="55:39">return <expr pos:start="55:20" pos:end="55:38"><name pos:start="55:20" pos:end="55:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:56"><expr pos:start="59:9" pos:end="59:55"><call pos:start="59:9" pos:end="59:55"><name pos:start="59:9" pos:end="59:24">gif_read_palette</name><argument_list pos:start="59:25" pos:end="59:55">(<argument pos:start="59:26" pos:end="59:26"><expr pos:start="59:26" pos:end="59:26"><name pos:start="59:26" pos:end="59:26">s</name></expr></argument>, <argument pos:start="59:29" pos:end="59:44"><expr pos:start="59:29" pos:end="59:44"><name pos:start="59:29" pos:end="59:44"><name pos:start="59:29" pos:end="59:29">s</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:44">local_palette</name></name></expr></argument>, <argument pos:start="59:47" pos:end="59:54"><expr pos:start="59:47" pos:end="59:54"><name pos:start="59:47" pos:end="59:54">pal_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:11">pal</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <name pos:start="61:15" pos:end="61:30"><name pos:start="61:15" pos:end="61:15">s</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:30">local_palette</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="77:5">else <block pos:start="63:12" pos:end="77:5">{<block_content pos:start="65:9" pos:end="75:32">

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:35">(<expr pos:start="65:13" pos:end="65:34"><operator pos:start="65:13" pos:end="65:13">!</operator><name pos:start="65:14" pos:end="65:34"><name pos:start="65:14" pos:end="65:14">s</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:34">has_global_palette</name></name></expr>)</condition> <block pos:start="65:37" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:39">

            <expr_stmt pos:start="67:13" pos:end="67:101"><expr pos:start="67:13" pos:end="67:100"><call pos:start="67:13" pos:end="67:100"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="67:100">(<argument pos:start="67:20" pos:end="67:27"><expr pos:start="67:20" pos:end="67:27"><name pos:start="67:20" pos:end="67:27"><name pos:start="67:20" pos:end="67:20">s</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:27">avctx</name></name></expr></argument>, <argument pos:start="67:30" pos:end="67:41"><expr pos:start="67:30" pos:end="67:41"><name pos:start="67:30" pos:end="67:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:44" pos:end="67:99"><expr pos:start="67:44" pos:end="67:99"><literal type="string" pos:start="67:44" pos:end="67:99">"picture doesn't have either global or local palette.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:39">return <expr pos:start="69:20" pos:end="69:38"><name pos:start="69:20" pos:end="69:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:32"><expr pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:11">pal</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:31"><name pos:start="75:15" pos:end="75:15">s</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:31">global_palette</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="81:5" pos:end="99:5"><if pos:start="81:5" pos:end="99:5">if <condition pos:start="81:8" pos:end="81:20">(<expr pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:19">keyframe</name></name></expr>)</condition> <block pos:start="81:22" pos:end="99:5">{<block_content pos:start="83:9" pos:end="97:9">

        <if_stmt pos:start="83:9" pos:end="97:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:70">(<expr pos:start="83:13" pos:end="83:69"><name pos:start="83:13" pos:end="83:38"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:38">transparent_color_index</name></name> <operator pos:start="83:40" pos:end="83:41">==</operator> <operator pos:start="83:43" pos:end="83:43">-</operator><literal type="number" pos:start="83:44" pos:end="83:44">1</literal> <operator pos:start="83:46" pos:end="83:47">&amp;&amp;</operator> <name pos:start="83:49" pos:end="83:69"><name pos:start="83:49" pos:end="83:49">s</name><operator pos:start="83:50" pos:end="83:51">-&gt;</operator><name pos:start="83:52" pos:end="83:69">has_global_palette</name></name></expr>)</condition> <block pos:start="83:72" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:41">

            <comment type="block" pos:start="85:13" pos:end="85:92">/* transparency wasn't set before the first frame, fill with background color */</comment>

            <expr_stmt pos:start="87:13" pos:end="87:41"><expr pos:start="87:13" pos:end="87:40"><call pos:start="87:13" pos:end="87:40"><name pos:start="87:13" pos:end="87:20">gif_fill</name><argument_list pos:start="87:21" pos:end="87:40">(<argument pos:start="87:22" pos:end="87:26"><expr pos:start="87:22" pos:end="87:26"><name pos:start="87:22" pos:end="87:26">frame</name></expr></argument>, <argument pos:start="87:29" pos:end="87:39"><expr pos:start="87:29" pos:end="87:39"><name pos:start="87:29" pos:end="87:39"><name pos:start="87:29" pos:end="87:29">s</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:39">bg_color</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="89:11" pos:end="97:9">else <block pos:start="89:16" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:44">

            <comment type="block" pos:start="91:13" pos:end="93:84">/* otherwise fill with transparent color.

             * this is necessary since by default picture filled with 0x80808080. */</comment>

            <expr_stmt pos:start="95:13" pos:end="95:44"><expr pos:start="95:13" pos:end="95:43"><call pos:start="95:13" pos:end="95:43"><name pos:start="95:13" pos:end="95:20">gif_fill</name><argument_list pos:start="95:21" pos:end="95:43">(<argument pos:start="95:22" pos:end="95:26"><expr pos:start="95:22" pos:end="95:26"><name pos:start="95:22" pos:end="95:26">frame</name></expr></argument>, <argument pos:start="95:29" pos:end="95:42"><expr pos:start="95:29" pos:end="95:42"><name pos:start="95:29" pos:end="95:42"><name pos:start="95:29" pos:end="95:29">s</name><operator pos:start="95:30" pos:end="95:31">-&gt;</operator><name pos:start="95:32" pos:end="95:42">trans_color</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:67">/* verify that all the image is inside the screen dimensions */</comment>

    <if_stmt pos:start="105:5" pos:end="113:5"><if pos:start="105:5" pos:end="113:5">if <condition pos:start="105:8" pos:end="107:40">(<expr pos:start="105:9" pos:end="107:39"><name pos:start="105:9" pos:end="105:12">left</name> <operator pos:start="105:14" pos:end="105:14">+</operator> <name pos:start="105:16" pos:end="105:20">width</name> <operator pos:start="105:22" pos:end="105:22">&gt;</operator> <name pos:start="105:24" pos:end="105:38"><name pos:start="105:24" pos:end="105:24">s</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:38">screen_width</name></name> <operator pos:start="105:40" pos:end="105:41">||</operator>

        <name pos:start="107:9" pos:end="107:11">top</name> <operator pos:start="107:13" pos:end="107:13">+</operator> <name pos:start="107:15" pos:end="107:20">height</name> <operator pos:start="107:22" pos:end="107:22">&gt;</operator> <name pos:start="107:24" pos:end="107:39"><name pos:start="107:24" pos:end="107:24">s</name><operator pos:start="107:25" pos:end="107:26">-&gt;</operator><name pos:start="107:27" pos:end="107:39">screen_height</name></name></expr>)</condition> <block pos:start="107:42" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:35">

        <expr_stmt pos:start="109:9" pos:end="109:84"><expr pos:start="109:9" pos:end="109:83"><call pos:start="109:9" pos:end="109:83"><name pos:start="109:9" pos:end="109:14">av_log</name><argument_list pos:start="109:15" pos:end="109:83">(<argument pos:start="109:16" pos:end="109:23"><expr pos:start="109:16" pos:end="109:23"><name pos:start="109:16" pos:end="109:23"><name pos:start="109:16" pos:end="109:16">s</name><operator pos:start="109:17" pos:end="109:18">-&gt;</operator><name pos:start="109:19" pos:end="109:23">avctx</name></name></expr></argument>, <argument pos:start="109:26" pos:end="109:37"><expr pos:start="109:26" pos:end="109:37"><name pos:start="109:26" pos:end="109:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="109:40" pos:end="109:82"><expr pos:start="109:40" pos:end="109:82"><literal type="string" pos:start="109:40" pos:end="109:82">"image is outside the screen dimensions.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="111:9" pos:end="111:35">return <expr pos:start="111:16" pos:end="111:34"><name pos:start="111:16" pos:end="111:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:34">(<expr pos:start="115:9" pos:end="115:33"><name pos:start="115:9" pos:end="115:13">width</name> <operator pos:start="115:15" pos:end="115:16">&lt;=</operator> <literal type="number" pos:start="115:18" pos:end="115:18">0</literal> <operator pos:start="115:20" pos:end="115:21">||</operator> <name pos:start="115:23" pos:end="115:28">height</name> <operator pos:start="115:30" pos:end="115:31">&lt;=</operator> <literal type="number" pos:start="115:33" pos:end="115:33">0</literal></expr>)</condition> <block pos:start="115:36" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:35">

        <expr_stmt pos:start="117:9" pos:end="117:70"><expr pos:start="117:9" pos:end="117:69"><call pos:start="117:9" pos:end="117:69"><name pos:start="117:9" pos:end="117:14">av_log</name><argument_list pos:start="117:15" pos:end="117:69">(<argument pos:start="117:16" pos:end="117:23"><expr pos:start="117:16" pos:end="117:23"><name pos:start="117:16" pos:end="117:23"><name pos:start="117:16" pos:end="117:16">s</name><operator pos:start="117:17" pos:end="117:18">-&gt;</operator><name pos:start="117:19" pos:end="117:23">avctx</name></name></expr></argument>, <argument pos:start="117:26" pos:end="117:37"><expr pos:start="117:26" pos:end="117:37"><name pos:start="117:26" pos:end="117:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="117:40" pos:end="117:68"><expr pos:start="117:40" pos:end="117:68"><literal type="string" pos:start="117:40" pos:end="117:68">"Invalid image dimensions.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="119:9" pos:end="119:35">return <expr pos:start="119:16" pos:end="119:34"><name pos:start="119:16" pos:end="119:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="125:5" pos:end="125:33">/* process disposal method */</comment>

    <if_stmt pos:start="127:5" pos:end="137:5"><if pos:start="127:5" pos:end="131:5">if <condition pos:start="127:8" pos:end="127:56">(<expr pos:start="127:9" pos:end="127:55"><name pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:28">gce_prev_disposal</name></name> <operator pos:start="127:30" pos:end="127:31">==</operator> <name pos:start="127:33" pos:end="127:55">GCE_DISPOSAL_BACKGROUND</name></expr>)</condition> <block pos:start="127:58" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:89">

        <expr_stmt pos:start="129:9" pos:end="129:89"><expr pos:start="129:9" pos:end="129:88"><call pos:start="129:9" pos:end="129:88"><name pos:start="129:9" pos:end="129:21">gif_fill_rect</name><argument_list pos:start="129:22" pos:end="129:88">(<argument pos:start="129:23" pos:end="129:27"><expr pos:start="129:23" pos:end="129:27"><name pos:start="129:23" pos:end="129:27">frame</name></expr></argument>, <argument pos:start="129:30" pos:end="129:47"><expr pos:start="129:30" pos:end="129:47"><name pos:start="129:30" pos:end="129:47"><name pos:start="129:30" pos:end="129:30">s</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:47">stored_bg_color</name></name></expr></argument>, <argument pos:start="129:50" pos:end="129:57"><expr pos:start="129:50" pos:end="129:57"><name pos:start="129:50" pos:end="129:57"><name pos:start="129:50" pos:end="129:50">s</name><operator pos:start="129:51" pos:end="129:52">-&gt;</operator><name pos:start="129:53" pos:end="129:57">gce_l</name></name></expr></argument>, <argument pos:start="129:60" pos:end="129:67"><expr pos:start="129:60" pos:end="129:67"><name pos:start="129:60" pos:end="129:67"><name pos:start="129:60" pos:end="129:60">s</name><operator pos:start="129:61" pos:end="129:62">-&gt;</operator><name pos:start="129:63" pos:end="129:67">gce_t</name></name></expr></argument>, <argument pos:start="129:70" pos:end="129:77"><expr pos:start="129:70" pos:end="129:77"><name pos:start="129:70" pos:end="129:77"><name pos:start="129:70" pos:end="129:70">s</name><operator pos:start="129:71" pos:end="129:72">-&gt;</operator><name pos:start="129:73" pos:end="129:77">gce_w</name></name></expr></argument>, <argument pos:start="129:80" pos:end="129:87"><expr pos:start="129:80" pos:end="129:87"><name pos:start="129:80" pos:end="129:87"><name pos:start="129:80" pos:end="129:80">s</name><operator pos:start="129:81" pos:end="129:82">-&gt;</operator><name pos:start="129:83" pos:end="129:87">gce_h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="131:7" pos:end="137:5">else if <condition pos:start="131:15" pos:end="131:60">(<expr pos:start="131:16" pos:end="131:59"><name pos:start="131:16" pos:end="131:35"><name pos:start="131:16" pos:end="131:16">s</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:35">gce_prev_disposal</name></name> <operator pos:start="131:37" pos:end="131:38">==</operator> <name pos:start="131:40" pos:end="131:59">GCE_DISPOSAL_RESTORE</name></expr>)</condition> <block pos:start="131:62" pos:end="137:5">{<block_content pos:start="133:9" pos:end="135:91">

        <expr_stmt pos:start="133:9" pos:end="135:91"><expr pos:start="133:9" pos:end="135:90"><call pos:start="133:9" pos:end="135:90"><name pos:start="133:9" pos:end="133:25">gif_copy_img_rect</name><argument_list pos:start="133:26" pos:end="135:90">(<argument pos:start="133:27" pos:end="133:39"><expr pos:start="133:27" pos:end="133:39"><name pos:start="133:27" pos:end="133:39"><name pos:start="133:27" pos:end="133:27">s</name><operator pos:start="133:28" pos:end="133:29">-&gt;</operator><name pos:start="133:30" pos:end="133:39">stored_img</name></name></expr></argument>, <argument pos:start="133:42" pos:end="133:67"><expr pos:start="133:42" pos:end="133:67"><operator pos:start="133:42" pos:end="133:42">(</operator><name pos:start="133:43" pos:end="133:50">uint32_t</name> <operator pos:start="133:52" pos:end="133:52">*</operator><operator pos:start="133:53" pos:end="133:53">)</operator><name pos:start="133:54" pos:end="133:67"><name pos:start="133:54" pos:end="133:58">frame</name><operator pos:start="133:59" pos:end="133:60">-&gt;</operator><name pos:start="133:61" pos:end="133:64">data</name><index pos:start="133:65" pos:end="133:67">[<expr pos:start="133:66" pos:end="133:66"><literal type="number" pos:start="133:66" pos:end="133:66">0</literal></expr>]</index></name></expr></argument>,

            <argument pos:start="135:13" pos:end="135:49"><expr pos:start="135:13" pos:end="135:49"><name pos:start="135:13" pos:end="135:30"><name pos:start="135:13" pos:end="135:17">frame</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:27">linesize</name><index pos:start="135:28" pos:end="135:30">[<expr pos:start="135:29" pos:end="135:29"><literal type="number" pos:start="135:29" pos:end="135:29">0</literal></expr>]</index></name> <operator pos:start="135:32" pos:end="135:32">/</operator> <sizeof pos:start="135:34" pos:end="135:49">sizeof<argument_list pos:start="135:40" pos:end="135:49">(<argument pos:start="135:41" pos:end="135:48"><expr pos:start="135:41" pos:end="135:48"><name pos:start="135:41" pos:end="135:48">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="135:52" pos:end="135:59"><expr pos:start="135:52" pos:end="135:59"><name pos:start="135:52" pos:end="135:59"><name pos:start="135:52" pos:end="135:52">s</name><operator pos:start="135:53" pos:end="135:54">-&gt;</operator><name pos:start="135:55" pos:end="135:59">gce_l</name></name></expr></argument>, <argument pos:start="135:62" pos:end="135:69"><expr pos:start="135:62" pos:end="135:69"><name pos:start="135:62" pos:end="135:69"><name pos:start="135:62" pos:end="135:62">s</name><operator pos:start="135:63" pos:end="135:64">-&gt;</operator><name pos:start="135:65" pos:end="135:69">gce_t</name></name></expr></argument>, <argument pos:start="135:72" pos:end="135:79"><expr pos:start="135:72" pos:end="135:79"><name pos:start="135:72" pos:end="135:79"><name pos:start="135:72" pos:end="135:72">s</name><operator pos:start="135:73" pos:end="135:74">-&gt;</operator><name pos:start="135:75" pos:end="135:79">gce_w</name></name></expr></argument>, <argument pos:start="135:82" pos:end="135:89"><expr pos:start="135:82" pos:end="135:89"><name pos:start="135:82" pos:end="135:89"><name pos:start="135:82" pos:end="135:82">s</name><operator pos:start="135:83" pos:end="135:84">-&gt;</operator><name pos:start="135:85" pos:end="135:89">gce_h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:43"><expr pos:start="141:5" pos:end="141:42"><name pos:start="141:5" pos:end="141:24"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:24">gce_prev_disposal</name></name> <operator pos:start="141:26" pos:end="141:26">=</operator> <name pos:start="141:28" pos:end="141:42"><name pos:start="141:28" pos:end="141:28">s</name><operator pos:start="141:29" pos:end="141:30">-&gt;</operator><name pos:start="141:31" pos:end="141:42">gce_disposal</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="145:5" pos:end="179:5"><if pos:start="145:5" pos:end="179:5">if <condition pos:start="145:8" pos:end="145:45">(<expr pos:start="145:9" pos:end="145:44"><name pos:start="145:9" pos:end="145:23"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:23">gce_disposal</name></name> <operator pos:start="145:25" pos:end="145:26">!=</operator> <name pos:start="145:28" pos:end="145:44">GCE_DISPOSAL_NONE</name></expr>)</condition> <block pos:start="145:47" pos:end="179:5">{<block_content pos:start="147:9" pos:end="177:9">

        <expr_stmt pos:start="147:9" pos:end="147:24"><expr pos:start="147:9" pos:end="147:23"><name pos:start="147:9" pos:end="147:16"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:16">gce_l</name></name> <operator pos:start="147:18" pos:end="147:18">=</operator> <name pos:start="147:20" pos:end="147:23">left</name></expr>;</expr_stmt>  <expr_stmt pos:start="147:27" pos:end="147:41"><expr pos:start="147:27" pos:end="147:40"><name pos:start="147:27" pos:end="147:34"><name pos:start="147:27" pos:end="147:27">s</name><operator pos:start="147:28" pos:end="147:29">-&gt;</operator><name pos:start="147:30" pos:end="147:34">gce_t</name></name> <operator pos:start="147:36" pos:end="147:36">=</operator> <name pos:start="147:38" pos:end="147:40">top</name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:25"><expr pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:16"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:16">gce_w</name></name> <operator pos:start="149:18" pos:end="149:18">=</operator> <name pos:start="149:20" pos:end="149:24">width</name></expr>;</expr_stmt> <expr_stmt pos:start="149:27" pos:end="149:44"><expr pos:start="149:27" pos:end="149:43"><name pos:start="149:27" pos:end="149:34"><name pos:start="149:27" pos:end="149:27">s</name><operator pos:start="149:28" pos:end="149:29">-&gt;</operator><name pos:start="149:30" pos:end="149:34">gce_h</name></name> <operator pos:start="149:36" pos:end="149:36">=</operator> <name pos:start="149:38" pos:end="149:43">height</name></expr>;</expr_stmt>



        <if_stmt pos:start="153:9" pos:end="177:9"><if pos:start="153:9" pos:end="163:9">if <condition pos:start="153:12" pos:end="153:55">(<expr pos:start="153:13" pos:end="153:54"><name pos:start="153:13" pos:end="153:27"><name pos:start="153:13" pos:end="153:13">s</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:27">gce_disposal</name></name> <operator pos:start="153:29" pos:end="153:30">==</operator> <name pos:start="153:32" pos:end="153:54">GCE_DISPOSAL_BACKGROUND</name></expr>)</condition> <block pos:start="153:57" pos:end="163:9">{<block_content pos:start="155:13" pos:end="161:49">

            <if_stmt pos:start="155:13" pos:end="161:49"><if pos:start="155:13" pos:end="157:52">if <condition pos:start="155:16" pos:end="155:48">(<expr pos:start="155:17" pos:end="155:47"><name pos:start="155:17" pos:end="155:42"><name pos:start="155:17" pos:end="155:17">s</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:42">transparent_color_index</name></name> <operator pos:start="155:44" pos:end="155:45">&gt;=</operator> <literal type="number" pos:start="155:47" pos:end="155:47">0</literal></expr>)</condition><block type="pseudo" pos:start="157:17" pos:end="157:52"><block_content pos:start="157:17" pos:end="157:52">

                <expr_stmt pos:start="157:17" pos:end="157:52"><expr pos:start="157:17" pos:end="157:51"><name pos:start="157:17" pos:end="157:34"><name pos:start="157:17" pos:end="157:17">s</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:34">stored_bg_color</name></name> <operator pos:start="157:36" pos:end="157:36">=</operator> <name pos:start="157:38" pos:end="157:51"><name pos:start="157:38" pos:end="157:38">s</name><operator pos:start="157:39" pos:end="157:40">-&gt;</operator><name pos:start="157:41" pos:end="157:51">trans_color</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="159:13" pos:end="161:49">else<block type="pseudo" pos:start="161:17" pos:end="161:49"><block_content pos:start="161:17" pos:end="161:49">

                <expr_stmt pos:start="161:17" pos:end="161:49"><expr pos:start="161:17" pos:end="161:48"><name pos:start="161:17" pos:end="161:34"><name pos:start="161:17" pos:end="161:17">s</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:34">stored_bg_color</name></name> <operator pos:start="161:36" pos:end="161:36">=</operator> <name pos:start="161:38" pos:end="161:48"><name pos:start="161:38" pos:end="161:38">s</name><operator pos:start="161:39" pos:end="161:40">-&gt;</operator><name pos:start="161:41" pos:end="161:48">bg_color</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="163:11" pos:end="177:9">else if <condition pos:start="163:19" pos:end="163:59">(<expr pos:start="163:20" pos:end="163:58"><name pos:start="163:20" pos:end="163:34"><name pos:start="163:20" pos:end="163:20">s</name><operator pos:start="163:21" pos:end="163:22">-&gt;</operator><name pos:start="163:23" pos:end="163:34">gce_disposal</name></name> <operator pos:start="163:36" pos:end="163:37">==</operator> <name pos:start="163:39" pos:end="163:58">GCE_DISPOSAL_RESTORE</name></expr>)</condition> <block pos:start="163:61" pos:end="177:9">{<block_content pos:start="165:13" pos:end="175:81">

            <expr_stmt pos:start="165:13" pos:end="165:100"><expr pos:start="165:13" pos:end="165:99"><call pos:start="165:13" pos:end="165:99"><name pos:start="165:13" pos:end="165:26">av_fast_malloc</name><argument_list pos:start="165:27" pos:end="165:99">(<argument pos:start="165:28" pos:end="165:41"><expr pos:start="165:28" pos:end="165:41"><operator pos:start="165:28" pos:end="165:28">&amp;</operator><name pos:start="165:29" pos:end="165:41"><name pos:start="165:29" pos:end="165:29">s</name><operator pos:start="165:30" pos:end="165:31">-&gt;</operator><name pos:start="165:32" pos:end="165:41">stored_img</name></name></expr></argument>, <argument pos:start="165:44" pos:end="165:62"><expr pos:start="165:44" pos:end="165:62"><operator pos:start="165:44" pos:end="165:44">&amp;</operator><name pos:start="165:45" pos:end="165:62"><name pos:start="165:45" pos:end="165:45">s</name><operator pos:start="165:46" pos:end="165:47">-&gt;</operator><name pos:start="165:48" pos:end="165:62">stored_img_size</name></name></expr></argument>, <argument pos:start="165:65" pos:end="165:98"><expr pos:start="165:65" pos:end="165:98"><name pos:start="165:65" pos:end="165:82"><name pos:start="165:65" pos:end="165:69">frame</name><operator pos:start="165:70" pos:end="165:71">-&gt;</operator><name pos:start="165:72" pos:end="165:79">linesize</name><index pos:start="165:80" pos:end="165:82">[<expr pos:start="165:81" pos:end="165:81"><literal type="number" pos:start="165:81" pos:end="165:81">0</literal></expr>]</index></name> <operator pos:start="165:84" pos:end="165:84">*</operator> <name pos:start="165:86" pos:end="165:98"><name pos:start="165:86" pos:end="165:90">frame</name><operator pos:start="165:91" pos:end="165:92">-&gt;</operator><name pos:start="165:93" pos:end="165:98">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="167:13" pos:end="169:39"><if pos:start="167:13" pos:end="169:39">if <condition pos:start="167:16" pos:end="167:31">(<expr pos:start="167:17" pos:end="167:30"><operator pos:start="167:17" pos:end="167:17">!</operator><name pos:start="167:18" pos:end="167:30"><name pos:start="167:18" pos:end="167:18">s</name><operator pos:start="167:19" pos:end="167:20">-&gt;</operator><name pos:start="167:21" pos:end="167:30">stored_img</name></name></expr>)</condition><block type="pseudo" pos:start="169:17" pos:end="169:39"><block_content pos:start="169:17" pos:end="169:39">

                <return pos:start="169:17" pos:end="169:39">return <expr pos:start="169:24" pos:end="169:38"><call pos:start="169:24" pos:end="169:38"><name pos:start="169:24" pos:end="169:30">AVERROR</name><argument_list pos:start="169:31" pos:end="169:38">(<argument pos:start="169:32" pos:end="169:37"><expr pos:start="169:32" pos:end="169:37"><name pos:start="169:32" pos:end="169:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="173:13" pos:end="175:81"><expr pos:start="173:13" pos:end="175:80"><call pos:start="173:13" pos:end="175:80"><name pos:start="173:13" pos:end="173:29">gif_copy_img_rect</name><argument_list pos:start="173:30" pos:end="175:80">(<argument pos:start="173:31" pos:end="173:56"><expr pos:start="173:31" pos:end="173:56"><operator pos:start="173:31" pos:end="173:31">(</operator><name pos:start="173:32" pos:end="173:39">uint32_t</name> <operator pos:start="173:41" pos:end="173:41">*</operator><operator pos:start="173:42" pos:end="173:42">)</operator><name pos:start="173:43" pos:end="173:56"><name pos:start="173:43" pos:end="173:47">frame</name><operator pos:start="173:48" pos:end="173:49">-&gt;</operator><name pos:start="173:50" pos:end="173:53">data</name><index pos:start="173:54" pos:end="173:56">[<expr pos:start="173:55" pos:end="173:55"><literal type="number" pos:start="173:55" pos:end="173:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="173:59" pos:end="173:71"><expr pos:start="173:59" pos:end="173:71"><name pos:start="173:59" pos:end="173:71"><name pos:start="173:59" pos:end="173:59">s</name><operator pos:start="173:60" pos:end="173:61">-&gt;</operator><name pos:start="173:62" pos:end="173:71">stored_img</name></name></expr></argument>,

                <argument pos:start="175:17" pos:end="175:53"><expr pos:start="175:17" pos:end="175:53"><name pos:start="175:17" pos:end="175:34"><name pos:start="175:17" pos:end="175:21">frame</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:31">linesize</name><index pos:start="175:32" pos:end="175:34">[<expr pos:start="175:33" pos:end="175:33"><literal type="number" pos:start="175:33" pos:end="175:33">0</literal></expr>]</index></name> <operator pos:start="175:36" pos:end="175:36">/</operator> <sizeof pos:start="175:38" pos:end="175:53">sizeof<argument_list pos:start="175:44" pos:end="175:53">(<argument pos:start="175:45" pos:end="175:52"><expr pos:start="175:45" pos:end="175:52"><name pos:start="175:45" pos:end="175:52">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="175:56" pos:end="175:59"><expr pos:start="175:56" pos:end="175:59"><name pos:start="175:56" pos:end="175:59">left</name></expr></argument>, <argument pos:start="175:62" pos:end="175:64"><expr pos:start="175:62" pos:end="175:64"><name pos:start="175:62" pos:end="175:64">top</name></expr></argument>, <argument pos:start="175:67" pos:end="175:71"><expr pos:start="175:67" pos:end="175:71"><name pos:start="175:67" pos:end="175:71">width</name></expr></argument>, <argument pos:start="175:74" pos:end="175:79"><expr pos:start="175:74" pos:end="175:79"><name pos:start="175:74" pos:end="175:79">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="183:5" pos:end="183:76">/* Expect at least 2 bytes: 1 for lzw code size and 1 for block size. */</comment>

    <if_stmt pos:start="185:5" pos:end="187:35"><if pos:start="185:5" pos:end="187:35">if <condition pos:start="185:8" pos:end="185:47">(<expr pos:start="185:9" pos:end="185:46"><call pos:start="185:9" pos:end="185:42"><name pos:start="185:9" pos:end="185:34">bytestream2_get_bytes_left</name><argument_list pos:start="185:35" pos:end="185:42">(<argument pos:start="185:36" pos:end="185:41"><expr pos:start="185:36" pos:end="185:41"><operator pos:start="185:36" pos:end="185:36">&amp;</operator><name pos:start="185:37" pos:end="185:41"><name pos:start="185:37" pos:end="185:37">s</name><operator pos:start="185:38" pos:end="185:39">-&gt;</operator><name pos:start="185:40" pos:end="185:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="185:44" pos:end="185:44">&lt;</operator> <literal type="number" pos:start="185:46" pos:end="185:46">2</literal></expr>)</condition><block type="pseudo" pos:start="187:9" pos:end="187:35"><block_content pos:start="187:9" pos:end="187:35">

        <return pos:start="187:9" pos:end="187:35">return <expr pos:start="187:16" pos:end="187:34"><name pos:start="187:16" pos:end="187:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="191:5" pos:end="191:32">/* now get the image data */</comment>

    <expr_stmt pos:start="193:5" pos:end="193:46"><expr pos:start="193:5" pos:end="193:45"><name pos:start="193:5" pos:end="193:13">code_size</name> <operator pos:start="193:15" pos:end="193:15">=</operator> <call pos:start="193:17" pos:end="193:45"><name pos:start="193:17" pos:end="193:37">bytestream2_get_byteu</name><argument_list pos:start="193:38" pos:end="193:45">(<argument pos:start="193:39" pos:end="193:44"><expr pos:start="193:39" pos:end="193:44"><operator pos:start="193:39" pos:end="193:39">&amp;</operator><name pos:start="193:40" pos:end="193:44"><name pos:start="193:40" pos:end="193:40">s</name><operator pos:start="193:41" pos:end="193:42">-&gt;</operator><name pos:start="193:43" pos:end="193:44">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="195:5" pos:end="203:5"><if pos:start="195:5" pos:end="203:5">if <condition pos:start="195:8" pos:end="197:87">(<expr pos:start="195:9" pos:end="197:86"><operator pos:start="195:9" pos:end="195:9">(</operator><name pos:start="195:10" pos:end="195:12">ret</name> <operator pos:start="195:14" pos:end="195:14">=</operator> <call pos:start="195:16" pos:end="197:81"><name pos:start="195:16" pos:end="195:33">ff_lzw_decode_init</name><argument_list pos:start="195:34" pos:end="197:81">(<argument pos:start="195:35" pos:end="195:40"><expr pos:start="195:35" pos:end="195:40"><name pos:start="195:35" pos:end="195:40"><name pos:start="195:35" pos:end="195:35">s</name><operator pos:start="195:36" pos:end="195:37">-&gt;</operator><name pos:start="195:38" pos:end="195:40">lzw</name></name></expr></argument>, <argument pos:start="195:43" pos:end="195:51"><expr pos:start="195:43" pos:end="195:51"><name pos:start="195:43" pos:end="195:51">code_size</name></expr></argument>, <argument pos:start="195:54" pos:end="195:65"><expr pos:start="195:54" pos:end="195:65"><name pos:start="195:54" pos:end="195:65"><name pos:start="195:54" pos:end="195:54">s</name><operator pos:start="195:55" pos:end="195:56">-&gt;</operator><name pos:start="195:57" pos:end="195:58">gb</name><operator pos:start="195:59" pos:end="195:59">.</operator><name pos:start="195:60" pos:end="195:65">buffer</name></name></expr></argument>,

                                  <argument pos:start="197:35" pos:end="197:68"><expr pos:start="197:35" pos:end="197:68"><call pos:start="197:35" pos:end="197:68"><name pos:start="197:35" pos:end="197:60">bytestream2_get_bytes_left</name><argument_list pos:start="197:61" pos:end="197:68">(<argument pos:start="197:62" pos:end="197:67"><expr pos:start="197:62" pos:end="197:67"><operator pos:start="197:62" pos:end="197:62">&amp;</operator><name pos:start="197:63" pos:end="197:67"><name pos:start="197:63" pos:end="197:63">s</name><operator pos:start="197:64" pos:end="197:65">-&gt;</operator><name pos:start="197:66" pos:end="197:67">gb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="197:71" pos:end="197:80"><expr pos:start="197:71" pos:end="197:80"><name pos:start="197:71" pos:end="197:80">FF_LZW_GIF</name></expr></argument>)</argument_list></call><operator pos:start="197:82" pos:end="197:82">)</operator> <operator pos:start="197:84" pos:end="197:84">&lt;</operator> <literal type="number" pos:start="197:86" pos:end="197:86">0</literal></expr>)</condition> <block pos:start="197:89" pos:end="203:5">{<block_content pos:start="199:9" pos:end="201:19">

        <expr_stmt pos:start="199:9" pos:end="199:60"><expr pos:start="199:9" pos:end="199:59"><call pos:start="199:9" pos:end="199:59"><name pos:start="199:9" pos:end="199:14">av_log</name><argument_list pos:start="199:15" pos:end="199:59">(<argument pos:start="199:16" pos:end="199:23"><expr pos:start="199:16" pos:end="199:23"><name pos:start="199:16" pos:end="199:23"><name pos:start="199:16" pos:end="199:16">s</name><operator pos:start="199:17" pos:end="199:18">-&gt;</operator><name pos:start="199:19" pos:end="199:23">avctx</name></name></expr></argument>, <argument pos:start="199:26" pos:end="199:37"><expr pos:start="199:26" pos:end="199:37"><name pos:start="199:26" pos:end="199:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="199:40" pos:end="199:58"><expr pos:start="199:40" pos:end="199:58"><literal type="string" pos:start="199:40" pos:end="199:58">"LZW init failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="201:9" pos:end="201:19">return <expr pos:start="201:16" pos:end="201:18"><name pos:start="201:16" pos:end="201:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="207:5" pos:end="207:28">/* read all the image */</comment>

    <expr_stmt pos:start="209:5" pos:end="209:53"><expr pos:start="209:5" pos:end="209:52"><name pos:start="209:5" pos:end="209:12">linesize</name> <operator pos:start="209:14" pos:end="209:14">=</operator> <name pos:start="209:16" pos:end="209:33"><name pos:start="209:16" pos:end="209:20">frame</name><operator pos:start="209:21" pos:end="209:22">-&gt;</operator><name pos:start="209:23" pos:end="209:30">linesize</name><index pos:start="209:31" pos:end="209:33">[<expr pos:start="209:32" pos:end="209:32"><literal type="number" pos:start="209:32" pos:end="209:32">0</literal></expr>]</index></name> <operator pos:start="209:35" pos:end="209:35">/</operator> <sizeof pos:start="209:37" pos:end="209:52">sizeof<argument_list pos:start="209:43" pos:end="209:52">(<argument pos:start="209:44" pos:end="209:51"><expr pos:start="209:44" pos:end="209:51"><name pos:start="209:44" pos:end="209:51">uint32_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:62"><expr pos:start="211:5" pos:end="211:61"><name pos:start="211:5" pos:end="211:8">ptr1</name> <operator pos:start="211:10" pos:end="211:10">=</operator> <operator pos:start="211:12" pos:end="211:12">(</operator><name pos:start="211:13" pos:end="211:20">uint32_t</name> <operator pos:start="211:22" pos:end="211:22">*</operator><operator pos:start="211:23" pos:end="211:23">)</operator><name pos:start="211:24" pos:end="211:37"><name pos:start="211:24" pos:end="211:28">frame</name><operator pos:start="211:29" pos:end="211:30">-&gt;</operator><name pos:start="211:31" pos:end="211:34">data</name><index pos:start="211:35" pos:end="211:37">[<expr pos:start="211:36" pos:end="211:36"><literal type="number" pos:start="211:36" pos:end="211:36">0</literal></expr>]</index></name> <operator pos:start="211:39" pos:end="211:39">+</operator> <name pos:start="211:41" pos:end="211:43">top</name> <operator pos:start="211:45" pos:end="211:45">*</operator> <name pos:start="211:47" pos:end="211:54">linesize</name> <operator pos:start="211:56" pos:end="211:56">+</operator> <name pos:start="211:58" pos:end="211:61">left</name></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:15"><expr pos:start="213:5" pos:end="213:14"><name pos:start="213:5" pos:end="213:7">ptr</name> <operator pos:start="213:9" pos:end="213:9">=</operator> <name pos:start="213:11" pos:end="213:14">ptr1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:13"><expr pos:start="215:5" pos:end="215:12"><name pos:start="215:5" pos:end="215:8">pass</name> <operator pos:start="215:10" pos:end="215:10">=</operator> <literal type="number" pos:start="215:12" pos:end="215:12">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:11"><expr pos:start="217:5" pos:end="217:10"><name pos:start="217:5" pos:end="217:6">y1</name> <operator pos:start="217:8" pos:end="217:8">=</operator> <literal type="number" pos:start="217:10" pos:end="217:10">0</literal></expr>;</expr_stmt>

    <for pos:start="219:5" pos:end="309:5">for <control pos:start="219:9" pos:end="219:32">(<init pos:start="219:10" pos:end="219:15"><expr pos:start="219:10" pos:end="219:14"><name pos:start="219:10" pos:end="219:10">y</name> <operator pos:start="219:12" pos:end="219:12">=</operator> <literal type="number" pos:start="219:14" pos:end="219:14">0</literal></expr>;</init> <condition pos:start="219:17" pos:end="219:27"><expr pos:start="219:17" pos:end="219:26"><name pos:start="219:17" pos:end="219:17">y</name> <operator pos:start="219:19" pos:end="219:19">&lt;</operator> <name pos:start="219:21" pos:end="219:26">height</name></expr>;</condition> <incr pos:start="219:29" pos:end="219:31"><expr pos:start="219:29" pos:end="219:31"><name pos:start="219:29" pos:end="219:29">y</name><operator pos:start="219:30" pos:end="219:31">++</operator></expr></incr>)</control> <block pos:start="219:34" pos:end="309:5">{<block_content pos:start="221:9" pos:end="307:9">

        <decl_stmt pos:start="221:9" pos:end="221:62"><decl pos:start="221:9" pos:end="221:61"><type pos:start="221:9" pos:end="221:11"><name pos:start="221:9" pos:end="221:11">int</name></type> <name pos:start="221:13" pos:end="221:17">count</name> <init pos:start="221:19" pos:end="221:61">= <expr pos:start="221:21" pos:end="221:61"><call pos:start="221:21" pos:end="221:61"><name pos:start="221:21" pos:end="221:33">ff_lzw_decode</name><argument_list pos:start="221:34" pos:end="221:61">(<argument pos:start="221:35" pos:end="221:40"><expr pos:start="221:35" pos:end="221:40"><name pos:start="221:35" pos:end="221:40"><name pos:start="221:35" pos:end="221:35">s</name><operator pos:start="221:36" pos:end="221:37">-&gt;</operator><name pos:start="221:38" pos:end="221:40">lzw</name></name></expr></argument>, <argument pos:start="221:43" pos:end="221:53"><expr pos:start="221:43" pos:end="221:53"><name pos:start="221:43" pos:end="221:53"><name pos:start="221:43" pos:end="221:43">s</name><operator pos:start="221:44" pos:end="221:45">-&gt;</operator><name pos:start="221:46" pos:end="221:53">idx_line</name></name></expr></argument>, <argument pos:start="221:56" pos:end="221:60"><expr pos:start="221:56" pos:end="221:60"><name pos:start="221:56" pos:end="221:60">width</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="223:9" pos:end="231:9"><if pos:start="223:9" pos:end="231:9">if <condition pos:start="223:12" pos:end="223:27">(<expr pos:start="223:13" pos:end="223:26"><name pos:start="223:13" pos:end="223:17">count</name> <operator pos:start="223:19" pos:end="223:20">!=</operator> <name pos:start="223:22" pos:end="223:26">width</name></expr>)</condition> <block pos:start="223:29" pos:end="231:9">{<block_content pos:start="225:13" pos:end="229:29">

            <if_stmt pos:start="225:13" pos:end="227:70"><if pos:start="225:13" pos:end="227:70">if <condition pos:start="225:16" pos:end="225:22">(<expr pos:start="225:17" pos:end="225:21"><name pos:start="225:17" pos:end="225:21">count</name></expr>)</condition><block type="pseudo" pos:start="227:17" pos:end="227:70"><block_content pos:start="227:17" pos:end="227:70">

                <expr_stmt pos:start="227:17" pos:end="227:70"><expr pos:start="227:17" pos:end="227:69"><call pos:start="227:17" pos:end="227:69"><name pos:start="227:17" pos:end="227:22">av_log</name><argument_list pos:start="227:23" pos:end="227:69">(<argument pos:start="227:24" pos:end="227:31"><expr pos:start="227:24" pos:end="227:31"><name pos:start="227:24" pos:end="227:31"><name pos:start="227:24" pos:end="227:24">s</name><operator pos:start="227:25" pos:end="227:26">-&gt;</operator><name pos:start="227:27" pos:end="227:31">avctx</name></name></expr></argument>, <argument pos:start="227:34" pos:end="227:45"><expr pos:start="227:34" pos:end="227:45"><name pos:start="227:34" pos:end="227:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="227:48" pos:end="227:68"><expr pos:start="227:48" pos:end="227:68"><literal type="string" pos:start="227:48" pos:end="227:68">"LZW decode failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <goto pos:start="229:13" pos:end="229:29">goto <name pos:start="229:18" pos:end="229:28">decode_tail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="235:9" pos:end="235:25"><expr pos:start="235:9" pos:end="235:24"><name pos:start="235:9" pos:end="235:10">pr</name> <operator pos:start="235:12" pos:end="235:12">=</operator> <name pos:start="235:14" pos:end="235:16">ptr</name> <operator pos:start="235:18" pos:end="235:18">+</operator> <name pos:start="235:20" pos:end="235:24">width</name></expr>;</expr_stmt>



        <for pos:start="239:9" pos:end="245:9">for <control pos:start="239:13" pos:end="239:63">(<init pos:start="239:14" pos:end="239:41"><expr pos:start="239:14" pos:end="239:21"><name pos:start="239:14" pos:end="239:15">px</name> <operator pos:start="239:17" pos:end="239:17">=</operator> <name pos:start="239:19" pos:end="239:21">ptr</name></expr><operator pos:start="239:22" pos:end="239:22">,</operator> <expr pos:start="239:24" pos:end="239:40"><name pos:start="239:24" pos:end="239:26">idx</name> <operator pos:start="239:28" pos:end="239:28">=</operator> <name pos:start="239:30" pos:end="239:40"><name pos:start="239:30" pos:end="239:30">s</name><operator pos:start="239:31" pos:end="239:32">-&gt;</operator><name pos:start="239:33" pos:end="239:40">idx_line</name></name></expr>;</init> <condition pos:start="239:43" pos:end="239:50"><expr pos:start="239:43" pos:end="239:49"><name pos:start="239:43" pos:end="239:44">px</name> <operator pos:start="239:46" pos:end="239:46">&lt;</operator> <name pos:start="239:48" pos:end="239:49">pr</name></expr>;</condition> <incr pos:start="239:52" pos:end="239:62"><expr pos:start="239:52" pos:end="239:55"><name pos:start="239:52" pos:end="239:53">px</name><operator pos:start="239:54" pos:end="239:55">++</operator></expr><operator pos:start="239:56" pos:end="239:56">,</operator> <expr pos:start="239:58" pos:end="239:62"><name pos:start="239:58" pos:end="239:60">idx</name><operator pos:start="239:61" pos:end="239:62">++</operator></expr></incr>)</control> <block pos:start="239:65" pos:end="245:9">{<block_content pos:start="241:13" pos:end="243:32">

            <if_stmt pos:start="241:13" pos:end="243:32"><if pos:start="241:13" pos:end="243:32">if <condition pos:start="241:16" pos:end="241:51">(<expr pos:start="241:17" pos:end="241:50"><operator pos:start="241:17" pos:end="241:17">*</operator><name pos:start="241:18" pos:end="241:20">idx</name> <operator pos:start="241:22" pos:end="241:23">!=</operator> <name pos:start="241:25" pos:end="241:50"><name pos:start="241:25" pos:end="241:25">s</name><operator pos:start="241:26" pos:end="241:27">-&gt;</operator><name pos:start="241:28" pos:end="241:50">transparent_color_index</name></name></expr>)</condition><block type="pseudo" pos:start="243:17" pos:end="243:32"><block_content pos:start="243:17" pos:end="243:32">

                <expr_stmt pos:start="243:17" pos:end="243:32"><expr pos:start="243:17" pos:end="243:31"><operator pos:start="243:17" pos:end="243:17">*</operator><name pos:start="243:18" pos:end="243:19">px</name> <operator pos:start="243:21" pos:end="243:21">=</operator> <name pos:start="243:23" pos:end="243:31"><name pos:start="243:23" pos:end="243:25">pal</name><index pos:start="243:26" pos:end="243:31">[<expr pos:start="243:27" pos:end="243:30"><operator pos:start="243:27" pos:end="243:27">*</operator><name pos:start="243:28" pos:end="243:30">idx</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="249:9" pos:end="307:9"><if pos:start="249:9" pos:end="303:9">if <condition pos:start="249:12" pos:end="249:27">(<expr pos:start="249:13" pos:end="249:26"><name pos:start="249:13" pos:end="249:26">is_interleaved</name></expr>)</condition> <block pos:start="249:29" pos:end="303:9">{<block_content pos:start="251:13" pos:end="301:13">

            <switch pos:start="251:13" pos:end="301:13">switch<condition pos:start="251:19" pos:end="251:24">(<expr pos:start="251:20" pos:end="251:23"><name pos:start="251:20" pos:end="251:23">pass</name></expr>)</condition> <block pos:start="251:26" pos:end="301:13">{<block_content pos:start="253:13" pos:end="299:22">

            <default pos:start="253:13" pos:end="253:20">default:</default>

            <case pos:start="255:13" pos:end="255:19">case <expr pos:start="255:18" pos:end="255:18"><literal type="number" pos:start="255:18" pos:end="255:18">0</literal></expr>:</case>

            <case pos:start="257:13" pos:end="257:19">case <expr pos:start="257:18" pos:end="257:18"><literal type="number" pos:start="257:18" pos:end="257:18">1</literal></expr>:</case>

                <expr_stmt pos:start="259:17" pos:end="259:24"><expr pos:start="259:17" pos:end="259:23"><name pos:start="259:17" pos:end="259:18">y1</name> <operator pos:start="259:20" pos:end="259:21">+=</operator> <literal type="number" pos:start="259:23" pos:end="259:23">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="261:17" pos:end="261:36"><expr pos:start="261:17" pos:end="261:35"><name pos:start="261:17" pos:end="261:19">ptr</name> <operator pos:start="261:21" pos:end="261:22">+=</operator> <name pos:start="261:24" pos:end="261:31">linesize</name> <operator pos:start="261:33" pos:end="261:33">*</operator> <literal type="number" pos:start="261:35" pos:end="261:35">8</literal></expr>;</expr_stmt>

                <if_stmt pos:start="263:17" pos:end="271:17"><if pos:start="263:17" pos:end="271:17">if <condition pos:start="263:20" pos:end="263:33">(<expr pos:start="263:21" pos:end="263:32"><name pos:start="263:21" pos:end="263:22">y1</name> <operator pos:start="263:24" pos:end="263:25">&gt;=</operator> <name pos:start="263:27" pos:end="263:32">height</name></expr>)</condition> <block pos:start="263:35" pos:end="271:17">{<block_content pos:start="265:21" pos:end="269:27">

                    <expr_stmt pos:start="265:21" pos:end="265:38"><expr pos:start="265:21" pos:end="265:37"><name pos:start="265:21" pos:end="265:22">y1</name> <operator pos:start="265:24" pos:end="265:24">=</operator> <ternary pos:start="265:26" pos:end="265:37"><condition pos:start="265:26" pos:end="265:31"><expr pos:start="265:26" pos:end="265:29"><name pos:start="265:26" pos:end="265:29">pass</name></expr> ?</condition><then pos:start="265:33" pos:end="265:33"> <expr pos:start="265:33" pos:end="265:33"><literal type="number" pos:start="265:33" pos:end="265:33">2</literal></expr> </then><else pos:start="265:35" pos:end="265:37">: <expr pos:start="265:37" pos:end="265:37"><literal type="number" pos:start="265:37" pos:end="265:37">4</literal></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="267:21" pos:end="267:47"><expr pos:start="267:21" pos:end="267:46"><name pos:start="267:21" pos:end="267:23">ptr</name> <operator pos:start="267:25" pos:end="267:25">=</operator> <name pos:start="267:27" pos:end="267:30">ptr1</name> <operator pos:start="267:32" pos:end="267:32">+</operator> <name pos:start="267:34" pos:end="267:41">linesize</name> <operator pos:start="267:43" pos:end="267:43">*</operator> <name pos:start="267:45" pos:end="267:46">y1</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="269:21" pos:end="269:27"><expr pos:start="269:21" pos:end="269:26"><name pos:start="269:21" pos:end="269:24">pass</name><operator pos:start="269:25" pos:end="269:26">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="273:17" pos:end="273:22">break;</break>

            <case pos:start="275:13" pos:end="275:19">case <expr pos:start="275:18" pos:end="275:18"><literal type="number" pos:start="275:18" pos:end="275:18">2</literal></expr>:</case>

                <expr_stmt pos:start="277:17" pos:end="277:24"><expr pos:start="277:17" pos:end="277:23"><name pos:start="277:17" pos:end="277:18">y1</name> <operator pos:start="277:20" pos:end="277:21">+=</operator> <literal type="number" pos:start="277:23" pos:end="277:23">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:36"><expr pos:start="279:17" pos:end="279:35"><name pos:start="279:17" pos:end="279:19">ptr</name> <operator pos:start="279:21" pos:end="279:22">+=</operator> <name pos:start="279:24" pos:end="279:31">linesize</name> <operator pos:start="279:33" pos:end="279:33">*</operator> <literal type="number" pos:start="279:35" pos:end="279:35">4</literal></expr>;</expr_stmt>

                <if_stmt pos:start="281:17" pos:end="289:17"><if pos:start="281:17" pos:end="289:17">if <condition pos:start="281:20" pos:end="281:33">(<expr pos:start="281:21" pos:end="281:32"><name pos:start="281:21" pos:end="281:22">y1</name> <operator pos:start="281:24" pos:end="281:25">&gt;=</operator> <name pos:start="281:27" pos:end="281:32">height</name></expr>)</condition> <block pos:start="281:35" pos:end="289:17">{<block_content pos:start="283:21" pos:end="287:27">

                    <expr_stmt pos:start="283:21" pos:end="283:27"><expr pos:start="283:21" pos:end="283:26"><name pos:start="283:21" pos:end="283:22">y1</name> <operator pos:start="283:24" pos:end="283:24">=</operator> <literal type="number" pos:start="283:26" pos:end="283:26">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="285:21" pos:end="285:42"><expr pos:start="285:21" pos:end="285:41"><name pos:start="285:21" pos:end="285:23">ptr</name> <operator pos:start="285:25" pos:end="285:25">=</operator> <name pos:start="285:27" pos:end="285:30">ptr1</name> <operator pos:start="285:32" pos:end="285:32">+</operator> <name pos:start="285:34" pos:end="285:41">linesize</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="287:21" pos:end="287:27"><expr pos:start="287:21" pos:end="287:26"><name pos:start="287:21" pos:end="287:24">pass</name><operator pos:start="287:25" pos:end="287:26">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="291:17" pos:end="291:22">break;</break>

            <case pos:start="293:13" pos:end="293:19">case <expr pos:start="293:18" pos:end="293:18"><literal type="number" pos:start="293:18" pos:end="293:18">3</literal></expr>:</case>

                <expr_stmt pos:start="295:17" pos:end="295:24"><expr pos:start="295:17" pos:end="295:23"><name pos:start="295:17" pos:end="295:18">y1</name> <operator pos:start="295:20" pos:end="295:21">+=</operator> <literal type="number" pos:start="295:23" pos:end="295:23">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="297:17" pos:end="297:36"><expr pos:start="297:17" pos:end="297:35"><name pos:start="297:17" pos:end="297:19">ptr</name> <operator pos:start="297:21" pos:end="297:22">+=</operator> <name pos:start="297:24" pos:end="297:31">linesize</name> <operator pos:start="297:33" pos:end="297:33">*</operator> <literal type="number" pos:start="297:35" pos:end="297:35">2</literal></expr>;</expr_stmt>

                <break pos:start="299:17" pos:end="299:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="303:11" pos:end="307:9">else <block pos:start="303:16" pos:end="307:9">{<block_content pos:start="305:13" pos:end="305:28">

            <expr_stmt pos:start="305:13" pos:end="305:28"><expr pos:start="305:13" pos:end="305:27"><name pos:start="305:13" pos:end="305:15">ptr</name> <operator pos:start="305:17" pos:end="305:18">+=</operator> <name pos:start="305:20" pos:end="305:27">linesize</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



 <label pos:start="313:2" pos:end="313:13"><name pos:start="313:2" pos:end="313:12">decode_tail</name>:</label>

    <comment type="block" pos:start="315:5" pos:end="315:57">/* read the garbage data until end marker is found */</comment>

    <expr_stmt pos:start="317:5" pos:end="317:31"><expr pos:start="317:5" pos:end="317:30"><call pos:start="317:5" pos:end="317:30"><name pos:start="317:5" pos:end="317:22">ff_lzw_decode_tail</name><argument_list pos:start="317:23" pos:end="317:30">(<argument pos:start="317:24" pos:end="317:29"><expr pos:start="317:24" pos:end="317:29"><name pos:start="317:24" pos:end="317:29"><name pos:start="317:24" pos:end="317:24">s</name><operator pos:start="317:25" pos:end="317:26">-&gt;</operator><name pos:start="317:27" pos:end="317:29">lzw</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="321:5" pos:end="323:31">/* Graphic Control Extension's scope is single frame.

     * Remove its influence. */</comment>

    <expr_stmt pos:start="325:5" pos:end="325:36"><expr pos:start="325:5" pos:end="325:35"><name pos:start="325:5" pos:end="325:30"><name pos:start="325:5" pos:end="325:5">s</name><operator pos:start="325:6" pos:end="325:7">-&gt;</operator><name pos:start="325:8" pos:end="325:30">transparent_color_index</name></name> <operator pos:start="325:32" pos:end="325:32">=</operator> <operator pos:start="325:34" pos:end="325:34">-</operator><literal type="number" pos:start="325:35" pos:end="325:35">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="327:5" pos:end="327:40"><expr pos:start="327:5" pos:end="327:39"><name pos:start="327:5" pos:end="327:19"><name pos:start="327:5" pos:end="327:5">s</name><operator pos:start="327:6" pos:end="327:7">-&gt;</operator><name pos:start="327:8" pos:end="327:19">gce_disposal</name></name> <operator pos:start="327:21" pos:end="327:21">=</operator> <name pos:start="327:23" pos:end="327:39">GCE_DISPOSAL_NONE</name></expr>;</expr_stmt>



    <return pos:start="331:5" pos:end="331:13">return <expr pos:start="331:12" pos:end="331:12"><literal type="number" pos:start="331:12" pos:end="331:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
