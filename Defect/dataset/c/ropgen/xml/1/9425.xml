<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9425.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:40"><name pos:start="1:1" pos:end="1:15">vu_queue_notify</name><argument_list pos:start="1:16" pos:end="1:40">(<argument pos:start="1:17" pos:end="1:26">VuDev *dev</argument>, <argument pos:start="1:29" pos:end="1:39">VuVirtq *vq</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:5">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:30">(<expr pos:start="5:9" pos:end="5:29"><call pos:start="5:9" pos:end="5:29"><name pos:start="5:9" pos:end="5:16">unlikely</name><argument_list pos:start="5:17" pos:end="5:29">(<argument pos:start="5:18" pos:end="5:28"><expr pos:start="5:18" pos:end="5:28"><name pos:start="5:18" pos:end="5:28"><name pos:start="5:18" pos:end="5:20">dev</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:28">broken</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:32" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:15">

        <return pos:start="7:9" pos:end="7:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:31">(<expr pos:start="13:9" pos:end="13:30"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:30"><name pos:start="13:10" pos:end="13:21">vring_notify</name><argument_list pos:start="13:22" pos:end="13:30">(<argument pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:25">dev</name></expr></argument>, <argument pos:start="13:28" pos:end="13:29"><expr pos:start="13:28" pos:end="13:29"><name pos:start="13:28" pos:end="13:29">vq</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:33" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:38"><expr pos:start="15:9" pos:end="15:37"><call pos:start="15:9" pos:end="15:37"><name pos:start="15:9" pos:end="15:14">DPRINT</name><argument_list pos:start="15:15" pos:end="15:37">(<argument pos:start="15:16" pos:end="15:36"><expr pos:start="15:16" pos:end="15:36"><literal type="string" pos:start="15:16" pos:end="15:36">"skipped notify...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:42">(<expr pos:start="23:9" pos:end="23:41"><call pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:21">eventfd_write</name><argument_list pos:start="23:22" pos:end="23:37">(<argument pos:start="23:23" pos:end="23:33"><expr pos:start="23:23" pos:end="23:33"><name pos:start="23:23" pos:end="23:33"><name pos:start="23:23" pos:end="23:24">vq</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:33">call_fd</name></name></expr></argument>, <argument pos:start="23:36" pos:end="23:36"><expr pos:start="23:36" pos:end="23:36"><literal type="number" pos:start="23:36" pos:end="23:36">1</literal></expr></argument>)</argument_list></call> <operator pos:start="23:39" pos:end="23:39">&lt;</operator> <literal type="number" pos:start="23:41" pos:end="23:41">0</literal></expr>)</condition> <block pos:start="23:44" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:68">

        <expr_stmt pos:start="25:9" pos:end="25:68"><expr pos:start="25:9" pos:end="25:67"><call pos:start="25:9" pos:end="25:67"><name pos:start="25:9" pos:end="25:16">vu_panic</name><argument_list pos:start="25:17" pos:end="25:67">(<argument pos:start="25:18" pos:end="25:20"><expr pos:start="25:18" pos:end="25:20"><name pos:start="25:18" pos:end="25:20">dev</name></expr></argument>, <argument pos:start="25:23" pos:end="25:49"><expr pos:start="25:23" pos:end="25:49"><literal type="string" pos:start="25:23" pos:end="25:49">"Error writing eventfd: %s"</literal></expr></argument>, <argument pos:start="25:52" pos:end="25:66"><expr pos:start="25:52" pos:end="25:66"><call pos:start="25:52" pos:end="25:66"><name pos:start="25:52" pos:end="25:59">strerror</name><argument_list pos:start="25:60" pos:end="25:66">(<argument pos:start="25:61" pos:end="25:65"><expr pos:start="25:61" pos:end="25:65"><name pos:start="25:61" pos:end="25:65">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block>
</unit>
