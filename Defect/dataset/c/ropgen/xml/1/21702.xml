<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21702.c" pos:tabs="8"><function pos:start="1:1" pos:end="195:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">vbe_ioport_write_data</name><parameter_list pos:start="1:27" pos:end="1:69">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:49">uint32_t</name></type> <name pos:start="1:51" pos:end="1:54">addr</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:64">uint32_t</name></type> <name pos:start="1:66" pos:end="1:68">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="195:1">{<block_content pos:start="5:5" pos:end="193:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VGACommonState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="193:5"><if pos:start="9:5" pos:end="193:5">if <condition pos:start="9:8" pos:end="9:43">(<expr pos:start="9:9" pos:end="9:42"><name pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:20">vbe_index</name></name> <operator pos:start="9:22" pos:end="9:23">&lt;=</operator> <name pos:start="9:25" pos:end="9:42">VBE_DISPI_INDEX_NB</name></expr>)</condition> <block pos:start="9:45" pos:end="193:5">{<block_content pos:start="13:9" pos:end="191:9">

<cpp:ifdef pos:start="11:1" pos:end="11:22">#<cpp:directive pos:start="11:2" pos:end="11:6">ifdef</cpp:directive> <name pos:start="11:8" pos:end="11:22">DEBUG_BOCHS_VBE</name></cpp:ifdef>

        <expr_stmt pos:start="13:9" pos:end="16:0"><expr pos:start="13:9" pos:end="13:69"><call pos:start="13:9" pos:end="13:69"><name pos:start="13:9" pos:end="13:14">printf</name><argument_list pos:start="13:15" pos:end="13:69">(<argument pos:start="13:16" pos:end="13:49"><expr pos:start="13:16" pos:end="13:49"><literal type="string" pos:start="13:16" pos:end="13:49">"VBE: write index=0x%x val=0x%x\n"</literal></expr></argument>, <argument pos:start="13:52" pos:end="13:63"><expr pos:start="13:52" pos:end="13:63"><name pos:start="13:52" pos:end="13:63"><name pos:start="13:52" pos:end="13:52">s</name><operator pos:start="13:53" pos:end="13:54">-&gt;</operator><name pos:start="13:55" pos:end="13:63">vbe_index</name></name></expr></argument>, <argument pos:start="13:66" pos:end="13:68"><expr pos:start="13:66" pos:end="13:68"><name pos:start="13:66" pos:end="13:68">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>

        <switch pos:start="17:9" pos:end="191:9">switch<condition pos:start="17:15" pos:end="17:28">(<expr pos:start="17:16" pos:end="17:27"><name pos:start="17:16" pos:end="17:27"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:27">vbe_index</name></name></expr>)</condition> <block pos:start="17:30" pos:end="191:9">{<block_content pos:start="19:9" pos:end="189:18">

        <case pos:start="19:9" pos:end="19:32">case <expr pos:start="19:14" pos:end="19:31"><name pos:start="19:14" pos:end="19:31">VBE_DISPI_INDEX_ID</name></expr>:</case>

            <if_stmt pos:start="21:13" pos:end="33:13"><if pos:start="21:13" pos:end="33:13">if <condition pos:start="21:16" pos:end="29:37">(<expr pos:start="21:17" pos:end="29:36"><name pos:start="21:17" pos:end="21:19">val</name> <operator pos:start="21:21" pos:end="21:22">==</operator> <name pos:start="21:24" pos:end="21:36">VBE_DISPI_ID0</name> <operator pos:start="21:38" pos:end="21:39">||</operator>

                <name pos:start="23:17" pos:end="23:19">val</name> <operator pos:start="23:21" pos:end="23:22">==</operator> <name pos:start="23:24" pos:end="23:36">VBE_DISPI_ID1</name> <operator pos:start="23:38" pos:end="23:39">||</operator>

                <name pos:start="25:17" pos:end="25:19">val</name> <operator pos:start="25:21" pos:end="25:22">==</operator> <name pos:start="25:24" pos:end="25:36">VBE_DISPI_ID2</name> <operator pos:start="25:38" pos:end="25:39">||</operator>

                <name pos:start="27:17" pos:end="27:19">val</name> <operator pos:start="27:21" pos:end="27:22">==</operator> <name pos:start="27:24" pos:end="27:36">VBE_DISPI_ID3</name> <operator pos:start="27:38" pos:end="27:39">||</operator>

                <name pos:start="29:17" pos:end="29:19">val</name> <operator pos:start="29:21" pos:end="29:22">==</operator> <name pos:start="29:24" pos:end="29:36">VBE_DISPI_ID4</name></expr>)</condition> <block pos:start="29:39" pos:end="33:13">{<block_content pos:start="31:17" pos:end="31:48">

                <expr_stmt pos:start="31:17" pos:end="31:48"><expr pos:start="31:17" pos:end="31:47"><name pos:start="31:17" pos:end="31:41"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:27">vbe_regs</name><index pos:start="31:28" pos:end="31:41">[<expr pos:start="31:29" pos:end="31:40"><name pos:start="31:29" pos:end="31:40"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:40">vbe_index</name></name></expr>]</index></name> <operator pos:start="31:43" pos:end="31:43">=</operator> <name pos:start="31:45" pos:end="31:47">val</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <case pos:start="37:9" pos:end="37:34">case <expr pos:start="37:14" pos:end="37:33"><name pos:start="37:14" pos:end="37:33">VBE_DISPI_INDEX_XRES</name></expr>:</case>

        <case pos:start="39:9" pos:end="39:34">case <expr pos:start="39:14" pos:end="39:33"><name pos:start="39:14" pos:end="39:33">VBE_DISPI_INDEX_YRES</name></expr>:</case>

        <case pos:start="41:9" pos:end="41:33">case <expr pos:start="41:14" pos:end="41:32"><name pos:start="41:14" pos:end="41:32">VBE_DISPI_INDEX_BPP</name></expr>:</case>

        <case pos:start="43:9" pos:end="43:40">case <expr pos:start="43:14" pos:end="43:39"><name pos:start="43:14" pos:end="43:39">VBE_DISPI_INDEX_VIRT_WIDTH</name></expr>:</case>

        <case pos:start="45:9" pos:end="45:38">case <expr pos:start="45:14" pos:end="45:37"><name pos:start="45:14" pos:end="45:37">VBE_DISPI_INDEX_X_OFFSET</name></expr>:</case>

        <case pos:start="47:9" pos:end="47:38">case <expr pos:start="47:14" pos:end="47:37"><name pos:start="47:14" pos:end="47:37">VBE_DISPI_INDEX_Y_OFFSET</name></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:44"><expr pos:start="49:13" pos:end="49:43"><name pos:start="49:13" pos:end="49:37"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:23">vbe_regs</name><index pos:start="49:24" pos:end="49:37">[<expr pos:start="49:25" pos:end="49:36"><name pos:start="49:25" pos:end="49:36"><name pos:start="49:25" pos:end="49:25">s</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:36">vbe_index</name></name></expr>]</index></name> <operator pos:start="49:39" pos:end="49:39">=</operator> <name pos:start="49:41" pos:end="49:43">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:30"><expr pos:start="51:13" pos:end="51:29"><call pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:26">vbe_fixup_regs</name><argument_list pos:start="51:27" pos:end="51:29">(<argument pos:start="51:28" pos:end="51:28"><expr pos:start="51:28" pos:end="51:28"><name pos:start="51:28" pos:end="51:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:34">case <expr pos:start="55:14" pos:end="55:33"><name pos:start="55:14" pos:end="55:33">VBE_DISPI_INDEX_BANK</name></expr>:</case>

            <if_stmt pos:start="57:13" pos:end="65:13"><if pos:start="57:13" pos:end="61:13">if <condition pos:start="57:16" pos:end="57:54">(<expr pos:start="57:17" pos:end="57:53"><name pos:start="57:17" pos:end="57:48"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:27">vbe_regs</name><index pos:start="57:28" pos:end="57:48">[<expr pos:start="57:29" pos:end="57:47"><name pos:start="57:29" pos:end="57:47">VBE_DISPI_INDEX_BPP</name></expr>]</index></name> <operator pos:start="57:50" pos:end="57:51">==</operator> <literal type="number" pos:start="57:53" pos:end="57:53">4</literal></expr>)</condition> <block pos:start="57:56" pos:end="61:13">{<block_content pos:start="59:15" pos:end="59:45">

              <expr_stmt pos:start="59:15" pos:end="59:45"><expr pos:start="59:15" pos:end="59:44"><name pos:start="59:15" pos:end="59:17">val</name> <operator pos:start="59:19" pos:end="59:20">&amp;=</operator> <operator pos:start="59:22" pos:end="59:22">(</operator><name pos:start="59:23" pos:end="59:38"><name pos:start="59:23" pos:end="59:23">s</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:38">vbe_bank_mask</name></name> <operator pos:start="59:40" pos:end="59:41">&gt;&gt;</operator> <literal type="number" pos:start="59:43" pos:end="59:43">2</literal><operator pos:start="59:44" pos:end="59:44">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="61:15" pos:end="65:13">else <block pos:start="61:20" pos:end="65:13">{<block_content pos:start="63:15" pos:end="63:38">

              <expr_stmt pos:start="63:15" pos:end="63:38"><expr pos:start="63:15" pos:end="63:37"><name pos:start="63:15" pos:end="63:17">val</name> <operator pos:start="63:19" pos:end="63:20">&amp;=</operator> <name pos:start="63:22" pos:end="63:37"><name pos:start="63:22" pos:end="63:22">s</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:37">vbe_bank_mask</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:44"><expr pos:start="67:13" pos:end="67:43"><name pos:start="67:13" pos:end="67:37"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:23">vbe_regs</name><index pos:start="67:24" pos:end="67:37">[<expr pos:start="67:25" pos:end="67:36"><name pos:start="67:25" pos:end="67:36"><name pos:start="67:25" pos:end="67:25">s</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:36">vbe_index</name></name></expr>]</index></name> <operator pos:start="67:39" pos:end="67:39">=</operator> <name pos:start="67:41" pos:end="67:43">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:41"><expr pos:start="69:13" pos:end="69:40"><name pos:start="69:13" pos:end="69:26"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:26">bank_offset</name></name> <operator pos:start="69:28" pos:end="69:28">=</operator> <operator pos:start="69:30" pos:end="69:30">(</operator><name pos:start="69:31" pos:end="69:33">val</name> <operator pos:start="69:35" pos:end="69:36">&lt;&lt;</operator> <literal type="number" pos:start="69:38" pos:end="69:39">16</literal><operator pos:start="69:40" pos:end="69:40">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:40"><expr pos:start="71:13" pos:end="71:39"><call pos:start="71:13" pos:end="71:39"><name pos:start="71:13" pos:end="71:36">vga_update_memory_access</name><argument_list pos:start="71:37" pos:end="71:39">(<argument pos:start="71:38" pos:end="71:38"><expr pos:start="71:38" pos:end="71:38"><name pos:start="71:38" pos:end="71:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        <case pos:start="75:9" pos:end="75:36">case <expr pos:start="75:14" pos:end="75:35"><name pos:start="75:14" pos:end="75:35">VBE_DISPI_INDEX_ENABLE</name></expr>:</case>

            <if_stmt pos:start="77:13" pos:end="177:13"><if pos:start="77:13" pos:end="173:13">if <condition pos:start="77:16" pos:end="79:75">(<expr pos:start="77:17" pos:end="79:74"><operator pos:start="77:17" pos:end="77:17">(</operator><name pos:start="77:18" pos:end="77:20">val</name> <operator pos:start="77:22" pos:end="77:22">&amp;</operator> <name pos:start="77:24" pos:end="77:40">VBE_DISPI_ENABLED</name><operator pos:start="77:41" pos:end="77:41">)</operator> <operator pos:start="77:43" pos:end="77:44">&amp;&amp;</operator>

                <operator pos:start="79:17" pos:end="79:17">!</operator><operator pos:start="79:18" pos:end="79:18">(</operator><name pos:start="79:19" pos:end="79:53"><name pos:start="79:19" pos:end="79:19">s</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:29">vbe_regs</name><index pos:start="79:30" pos:end="79:53">[<expr pos:start="79:31" pos:end="79:52"><name pos:start="79:31" pos:end="79:52">VBE_DISPI_INDEX_ENABLE</name></expr>]</index></name> <operator pos:start="79:55" pos:end="79:55">&amp;</operator> <name pos:start="79:57" pos:end="79:73">VBE_DISPI_ENABLED</name><operator pos:start="79:74" pos:end="79:74">)</operator></expr>)</condition> <block pos:start="79:77" pos:end="173:13">{<block_content pos:start="81:17" pos:end="171:50">

                <decl_stmt pos:start="81:17" pos:end="81:37"><decl pos:start="81:17" pos:end="81:21"><type pos:start="81:17" pos:end="81:19"><name pos:start="81:17" pos:end="81:19">int</name></type> <name pos:start="81:21" pos:end="81:21">h</name></decl>, <decl pos:start="81:24" pos:end="81:36"><type ref="prev" pos:start="81:17" pos:end="81:19"/><name pos:start="81:24" pos:end="81:36">shift_control</name></decl>;</decl_stmt>



                <expr_stmt pos:start="85:17" pos:end="85:60"><expr pos:start="85:17" pos:end="85:59"><name pos:start="85:17" pos:end="85:55"><name pos:start="85:17" pos:end="85:17">s</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:27">vbe_regs</name><index pos:start="85:28" pos:end="85:55">[<expr pos:start="85:29" pos:end="85:54"><name pos:start="85:29" pos:end="85:54">VBE_DISPI_INDEX_VIRT_WIDTH</name></expr>]</index></name> <operator pos:start="85:57" pos:end="85:57">=</operator> <literal type="number" pos:start="85:59" pos:end="85:59">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:58"><expr pos:start="87:17" pos:end="87:57"><name pos:start="87:17" pos:end="87:53"><name pos:start="87:17" pos:end="87:17">s</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:27">vbe_regs</name><index pos:start="87:28" pos:end="87:53">[<expr pos:start="87:29" pos:end="87:52"><name pos:start="87:29" pos:end="87:52">VBE_DISPI_INDEX_X_OFFSET</name></expr>]</index></name> <operator pos:start="87:55" pos:end="87:55">=</operator> <literal type="number" pos:start="87:57" pos:end="87:57">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:58"><expr pos:start="89:17" pos:end="89:57"><name pos:start="89:17" pos:end="89:53"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:27">vbe_regs</name><index pos:start="89:28" pos:end="89:53">[<expr pos:start="89:29" pos:end="89:52"><name pos:start="89:29" pos:end="89:52">VBE_DISPI_INDEX_Y_OFFSET</name></expr>]</index></name> <operator pos:start="89:55" pos:end="89:55">=</operator> <literal type="number" pos:start="89:57" pos:end="89:57">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:73"><expr pos:start="91:17" pos:end="91:72"><name pos:start="91:17" pos:end="91:51"><name pos:start="91:17" pos:end="91:17">s</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:27">vbe_regs</name><index pos:start="91:28" pos:end="91:51">[<expr pos:start="91:29" pos:end="91:50"><name pos:start="91:29" pos:end="91:50">VBE_DISPI_INDEX_ENABLE</name></expr>]</index></name> <operator pos:start="91:53" pos:end="91:54">|=</operator> <name pos:start="91:56" pos:end="91:72">VBE_DISPI_ENABLED</name></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:34"><expr pos:start="93:17" pos:end="93:33"><call pos:start="93:17" pos:end="93:33"><name pos:start="93:17" pos:end="93:30">vbe_fixup_regs</name><argument_list pos:start="93:31" pos:end="93:33">(<argument pos:start="93:32" pos:end="93:32"><expr pos:start="93:32" pos:end="93:32"><name pos:start="93:32" pos:end="93:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="97:17" pos:end="97:38">/* clear the screen */</comment>

                <if_stmt pos:start="99:17" pos:end="105:17"><if pos:start="99:17" pos:end="105:17">if <condition pos:start="99:20" pos:end="99:50">(<expr pos:start="99:21" pos:end="99:49"><operator pos:start="99:21" pos:end="99:21">!</operator><operator pos:start="99:22" pos:end="99:22">(</operator><name pos:start="99:23" pos:end="99:25">val</name> <operator pos:start="99:27" pos:end="99:27">&amp;</operator> <name pos:start="99:29" pos:end="99:48">VBE_DISPI_NOCLEARMEM</name><operator pos:start="99:49" pos:end="99:49">)</operator></expr>)</condition> <block pos:start="99:52" pos:end="105:17">{<block_content pos:start="101:21" pos:end="103:83">

                    <expr_stmt pos:start="101:21" pos:end="103:83"><expr pos:start="101:21" pos:end="103:82"><call pos:start="101:21" pos:end="103:82"><name pos:start="101:21" pos:end="101:26">memset</name><argument_list pos:start="101:27" pos:end="103:82">(<argument pos:start="101:28" pos:end="101:38"><expr pos:start="101:28" pos:end="101:38"><name pos:start="101:28" pos:end="101:38"><name pos:start="101:28" pos:end="101:28">s</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:38">vram_ptr</name></name></expr></argument>, <argument pos:start="101:41" pos:end="101:41"><expr pos:start="101:41" pos:end="101:41"><literal type="number" pos:start="101:41" pos:end="101:41">0</literal></expr></argument>,

                           <argument pos:start="103:28" pos:end="103:81"><expr pos:start="103:28" pos:end="103:81"><name pos:start="103:28" pos:end="103:60"><name pos:start="103:28" pos:end="103:28">s</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:38">vbe_regs</name><index pos:start="103:39" pos:end="103:60">[<expr pos:start="103:40" pos:end="103:59"><name pos:start="103:40" pos:end="103:59">VBE_DISPI_INDEX_YRES</name></expr>]</index></name> <operator pos:start="103:62" pos:end="103:62">*</operator> <name pos:start="103:64" pos:end="103:81"><name pos:start="103:64" pos:end="103:64">s</name><operator pos:start="103:65" pos:end="103:66">-&gt;</operator><name pos:start="103:67" pos:end="103:81">vbe_line_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="109:17" pos:end="109:56">/* we initialize the VGA graphic mode */</comment>

                <comment type="block" pos:start="111:17" pos:end="111:49">/* graphic mode + memory map 1 */</comment>

                <expr_stmt pos:start="113:17" pos:end="115:43"><expr pos:start="113:17" pos:end="115:42"><name pos:start="113:17" pos:end="113:35"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:21">gr</name><index pos:start="113:22" pos:end="113:35">[<expr pos:start="113:23" pos:end="113:34"><name pos:start="113:23" pos:end="113:34">VGA_GFX_MISC</name></expr>]</index></name> <operator pos:start="113:37" pos:end="113:37">=</operator> <operator pos:start="113:39" pos:end="113:39">(</operator><name pos:start="113:40" pos:end="113:58"><name pos:start="113:40" pos:end="113:40">s</name><operator pos:start="113:41" pos:end="113:42">-&gt;</operator><name pos:start="113:43" pos:end="113:44">gr</name><index pos:start="113:45" pos:end="113:58">[<expr pos:start="113:46" pos:end="113:57"><name pos:start="113:46" pos:end="113:57">VGA_GFX_MISC</name></expr>]</index></name> <operator pos:start="113:60" pos:end="113:60">&amp;</operator> <operator pos:start="113:62" pos:end="113:62">~</operator><literal type="number" pos:start="113:63" pos:end="113:66">0x0c</literal><operator pos:start="113:67" pos:end="113:67">)</operator> <operator pos:start="113:69" pos:end="113:69">|</operator> <literal type="number" pos:start="113:71" pos:end="113:74">0x04</literal> <operator pos:start="113:76" pos:end="113:76">|</operator>

                    <name pos:start="115:21" pos:end="115:42">VGA_GR06_GRAPHICS_MODE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:42"><expr pos:start="117:17" pos:end="117:41"><name pos:start="117:17" pos:end="117:36"><name pos:start="117:17" pos:end="117:17">s</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:21">cr</name><index pos:start="117:22" pos:end="117:36">[<expr pos:start="117:23" pos:end="117:35"><name pos:start="117:23" pos:end="117:35">VGA_CRTC_MODE</name></expr>]</index></name> <operator pos:start="117:38" pos:end="117:39">|=</operator> <literal type="number" pos:start="117:41" pos:end="117:41">3</literal></expr>;</expr_stmt> <comment type="block" pos:start="117:44" pos:end="117:61">/* no CGA modes */</comment>

                <expr_stmt pos:start="119:17" pos:end="119:65"><expr pos:start="119:17" pos:end="119:64"><name pos:start="119:17" pos:end="119:38"><name pos:start="119:17" pos:end="119:17">s</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:21">cr</name><index pos:start="119:22" pos:end="119:38">[<expr pos:start="119:23" pos:end="119:37"><name pos:start="119:23" pos:end="119:37">VGA_CRTC_OFFSET</name></expr>]</index></name> <operator pos:start="119:40" pos:end="119:40">=</operator> <name pos:start="119:42" pos:end="119:59"><name pos:start="119:42" pos:end="119:42">s</name><operator pos:start="119:43" pos:end="119:44">-&gt;</operator><name pos:start="119:45" pos:end="119:59">vbe_line_offset</name></name> <operator pos:start="119:61" pos:end="119:62">&gt;&gt;</operator> <literal type="number" pos:start="119:64" pos:end="119:64">3</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="121:17" pos:end="121:27">/* width */</comment>

                <expr_stmt pos:start="123:17" pos:end="125:65"><expr pos:start="123:17" pos:end="125:64"><name pos:start="123:17" pos:end="123:38"><name pos:start="123:17" pos:end="123:17">s</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:21">cr</name><index pos:start="123:22" pos:end="123:38">[<expr pos:start="123:23" pos:end="123:37"><name pos:start="123:23" pos:end="123:37">VGA_CRTC_H_DISP</name></expr>]</index></name> <operator pos:start="123:40" pos:end="123:40">=</operator>

                    <operator pos:start="125:21" pos:end="125:21">(</operator><name pos:start="125:22" pos:end="125:54"><name pos:start="125:22" pos:end="125:22">s</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:32">vbe_regs</name><index pos:start="125:33" pos:end="125:54">[<expr pos:start="125:34" pos:end="125:53"><name pos:start="125:34" pos:end="125:53">VBE_DISPI_INDEX_XRES</name></expr>]</index></name> <operator pos:start="125:56" pos:end="125:57">&gt;&gt;</operator> <literal type="number" pos:start="125:59" pos:end="125:59">3</literal><operator pos:start="125:60" pos:end="125:60">)</operator> <operator pos:start="125:62" pos:end="125:62">-</operator> <literal type="number" pos:start="125:64" pos:end="125:64">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="127:17" pos:end="127:56">/* height (only meaningful if &lt; 1024) */</comment>

                <expr_stmt pos:start="129:17" pos:end="129:58"><expr pos:start="129:17" pos:end="129:57"><name pos:start="129:17" pos:end="129:17">h</name> <operator pos:start="129:19" pos:end="129:19">=</operator> <name pos:start="129:21" pos:end="129:53"><name pos:start="129:21" pos:end="129:21">s</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:31">vbe_regs</name><index pos:start="129:32" pos:end="129:53">[<expr pos:start="129:33" pos:end="129:52"><name pos:start="129:33" pos:end="129:52">VBE_DISPI_INDEX_YRES</name></expr>]</index></name> <operator pos:start="129:55" pos:end="129:55">-</operator> <literal type="number" pos:start="129:57" pos:end="129:57">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:47"><expr pos:start="131:17" pos:end="131:46"><name pos:start="131:17" pos:end="131:42"><name pos:start="131:17" pos:end="131:17">s</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:21">cr</name><index pos:start="131:22" pos:end="131:42">[<expr pos:start="131:23" pos:end="131:41"><name pos:start="131:23" pos:end="131:41">VGA_CRTC_V_DISP_END</name></expr>]</index></name> <operator pos:start="131:44" pos:end="131:44">=</operator> <name pos:start="131:46" pos:end="131:46">h</name></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="135:58"><expr pos:start="133:17" pos:end="135:57"><name pos:start="133:17" pos:end="133:40"><name pos:start="133:17" pos:end="133:17">s</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:21">cr</name><index pos:start="133:22" pos:end="133:40">[<expr pos:start="133:23" pos:end="133:39"><name pos:start="133:23" pos:end="133:39">VGA_CRTC_OVERFLOW</name></expr>]</index></name> <operator pos:start="133:42" pos:end="133:42">=</operator> <operator pos:start="133:44" pos:end="133:44">(</operator><name pos:start="133:45" pos:end="133:68"><name pos:start="133:45" pos:end="133:45">s</name><operator pos:start="133:46" pos:end="133:47">-&gt;</operator><name pos:start="133:48" pos:end="133:49">cr</name><index pos:start="133:50" pos:end="133:68">[<expr pos:start="133:51" pos:end="133:67"><name pos:start="133:51" pos:end="133:67">VGA_CRTC_OVERFLOW</name></expr>]</index></name> <operator pos:start="133:70" pos:end="133:70">&amp;</operator> <operator pos:start="133:72" pos:end="133:72">~</operator><literal type="number" pos:start="133:73" pos:end="133:76">0x42</literal><operator pos:start="133:77" pos:end="133:77">)</operator> <operator pos:start="133:79" pos:end="133:79">|</operator>

                    <operator pos:start="135:21" pos:end="135:21">(</operator><operator pos:start="135:22" pos:end="135:22">(</operator><name pos:start="135:23" pos:end="135:23">h</name> <operator pos:start="135:25" pos:end="135:26">&gt;&gt;</operator> <literal type="number" pos:start="135:28" pos:end="135:28">7</literal><operator pos:start="135:29" pos:end="135:29">)</operator> <operator pos:start="135:31" pos:end="135:31">&amp;</operator> <literal type="number" pos:start="135:33" pos:end="135:36">0x02</literal><operator pos:start="135:37" pos:end="135:37">)</operator> <operator pos:start="135:39" pos:end="135:39">|</operator> <operator pos:start="135:41" pos:end="135:41">(</operator><operator pos:start="135:42" pos:end="135:42">(</operator><name pos:start="135:43" pos:end="135:43">h</name> <operator pos:start="135:45" pos:end="135:46">&gt;&gt;</operator> <literal type="number" pos:start="135:48" pos:end="135:48">3</literal><operator pos:start="135:49" pos:end="135:49">)</operator> <operator pos:start="135:51" pos:end="135:51">&amp;</operator> <literal type="number" pos:start="135:53" pos:end="135:56">0x40</literal><operator pos:start="135:57" pos:end="135:57">)</operator></expr>;</expr_stmt>

                <comment type="block" pos:start="137:17" pos:end="137:42">/* line compare to 1023 */</comment>

                <expr_stmt pos:start="139:17" pos:end="139:52"><expr pos:start="139:17" pos:end="139:51"><name pos:start="139:17" pos:end="139:44"><name pos:start="139:17" pos:end="139:17">s</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:21">cr</name><index pos:start="139:22" pos:end="139:44">[<expr pos:start="139:23" pos:end="139:43"><name pos:start="139:23" pos:end="139:43">VGA_CRTC_LINE_COMPARE</name></expr>]</index></name> <operator pos:start="139:46" pos:end="139:46">=</operator> <literal type="number" pos:start="139:48" pos:end="139:51">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:49"><expr pos:start="141:17" pos:end="141:48"><name pos:start="141:17" pos:end="141:40"><name pos:start="141:17" pos:end="141:17">s</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:21">cr</name><index pos:start="141:22" pos:end="141:40">[<expr pos:start="141:23" pos:end="141:39"><name pos:start="141:23" pos:end="141:39">VGA_CRTC_OVERFLOW</name></expr>]</index></name> <operator pos:start="141:42" pos:end="141:43">|=</operator> <literal type="number" pos:start="141:45" pos:end="141:48">0x10</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:49"><expr pos:start="143:17" pos:end="143:48"><name pos:start="143:17" pos:end="143:40"><name pos:start="143:17" pos:end="143:17">s</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:21">cr</name><index pos:start="143:22" pos:end="143:40">[<expr pos:start="143:23" pos:end="143:39"><name pos:start="143:23" pos:end="143:39">VGA_CRTC_MAX_SCAN</name></expr>]</index></name> <operator pos:start="143:42" pos:end="143:43">|=</operator> <literal type="number" pos:start="143:45" pos:end="143:48">0x40</literal></expr>;</expr_stmt>



                <if_stmt pos:start="147:17" pos:end="165:17"><if pos:start="147:17" pos:end="153:17">if <condition pos:start="147:20" pos:end="147:58">(<expr pos:start="147:21" pos:end="147:57"><name pos:start="147:21" pos:end="147:52"><name pos:start="147:21" pos:end="147:21">s</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:31">vbe_regs</name><index pos:start="147:32" pos:end="147:52">[<expr pos:start="147:33" pos:end="147:51"><name pos:start="147:33" pos:end="147:51">VBE_DISPI_INDEX_BPP</name></expr>]</index></name> <operator pos:start="147:54" pos:end="147:55">==</operator> <literal type="number" pos:start="147:57" pos:end="147:57">4</literal></expr>)</condition> <block pos:start="147:60" pos:end="153:17">{<block_content pos:start="149:21" pos:end="151:52">

                    <expr_stmt pos:start="149:21" pos:end="149:38"><expr pos:start="149:21" pos:end="149:37"><name pos:start="149:21" pos:end="149:33">shift_control</name> <operator pos:start="149:35" pos:end="149:35">=</operator> <literal type="number" pos:start="149:37" pos:end="149:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:52"><expr pos:start="151:21" pos:end="151:51"><name pos:start="151:21" pos:end="151:45"><name pos:start="151:21" pos:end="151:21">s</name><operator pos:start="151:22" pos:end="151:23">-&gt;</operator><name pos:start="151:24" pos:end="151:25">sr</name><index pos:start="151:26" pos:end="151:45">[<expr pos:start="151:27" pos:end="151:44"><name pos:start="151:27" pos:end="151:44">VGA_SEQ_CLOCK_MODE</name></expr>]</index></name> <operator pos:start="151:47" pos:end="151:48">&amp;=</operator> <operator pos:start="151:50" pos:end="151:50">~</operator><literal type="number" pos:start="151:51" pos:end="151:51">8</literal></expr>;</expr_stmt> <comment type="block" pos:start="151:54" pos:end="151:73">/* no double line */</comment>

                </block_content>}</block></if> <else pos:start="153:19" pos:end="165:17">else <block pos:start="153:24" pos:end="165:17">{<block_content pos:start="155:21" pos:end="163:70">

                    <expr_stmt pos:start="155:21" pos:end="155:38"><expr pos:start="155:21" pos:end="155:37"><name pos:start="155:21" pos:end="155:33">shift_control</name> <operator pos:start="155:35" pos:end="155:35">=</operator> <literal type="number" pos:start="155:37" pos:end="155:37">2</literal></expr>;</expr_stmt>

                    <comment type="block" pos:start="157:21" pos:end="157:42">/* set chain 4 mode */</comment>

                    <expr_stmt pos:start="159:21" pos:end="159:66"><expr pos:start="159:21" pos:end="159:65"><name pos:start="159:21" pos:end="159:46"><name pos:start="159:21" pos:end="159:21">s</name><operator pos:start="159:22" pos:end="159:23">-&gt;</operator><name pos:start="159:24" pos:end="159:25">sr</name><index pos:start="159:26" pos:end="159:46">[<expr pos:start="159:27" pos:end="159:45"><name pos:start="159:27" pos:end="159:45">VGA_SEQ_MEMORY_MODE</name></expr>]</index></name> <operator pos:start="159:48" pos:end="159:49">|=</operator> <name pos:start="159:51" pos:end="159:65">VGA_SR04_CHN_4M</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="161:21" pos:end="161:45">/* activate all planes */</comment>

                    <expr_stmt pos:start="163:21" pos:end="163:70"><expr pos:start="163:21" pos:end="163:69"><name pos:start="163:21" pos:end="163:46"><name pos:start="163:21" pos:end="163:21">s</name><operator pos:start="163:22" pos:end="163:23">-&gt;</operator><name pos:start="163:24" pos:end="163:25">sr</name><index pos:start="163:26" pos:end="163:46">[<expr pos:start="163:27" pos:end="163:45"><name pos:start="163:27" pos:end="163:45">VGA_SEQ_PLANE_WRITE</name></expr>]</index></name> <operator pos:start="163:48" pos:end="163:49">|=</operator> <name pos:start="163:51" pos:end="163:69">VGA_SR02_ALL_PLANES</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="167:17" pos:end="169:41"><expr pos:start="167:17" pos:end="169:40"><name pos:start="167:17" pos:end="167:35"><name pos:start="167:17" pos:end="167:17">s</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:21">gr</name><index pos:start="167:22" pos:end="167:35">[<expr pos:start="167:23" pos:end="167:34"><name pos:start="167:23" pos:end="167:34">VGA_GFX_MODE</name></expr>]</index></name> <operator pos:start="167:37" pos:end="167:37">=</operator> <operator pos:start="167:39" pos:end="167:39">(</operator><name pos:start="167:40" pos:end="167:58"><name pos:start="167:40" pos:end="167:40">s</name><operator pos:start="167:41" pos:end="167:42">-&gt;</operator><name pos:start="167:43" pos:end="167:44">gr</name><index pos:start="167:45" pos:end="167:58">[<expr pos:start="167:46" pos:end="167:57"><name pos:start="167:46" pos:end="167:57">VGA_GFX_MODE</name></expr>]</index></name> <operator pos:start="167:60" pos:end="167:60">&amp;</operator> <operator pos:start="167:62" pos:end="167:62">~</operator><literal type="number" pos:start="167:63" pos:end="167:66">0x60</literal><operator pos:start="167:67" pos:end="167:67">)</operator> <operator pos:start="167:69" pos:end="167:69">|</operator>

                    <operator pos:start="169:21" pos:end="169:21">(</operator><name pos:start="169:22" pos:end="169:34">shift_control</name> <operator pos:start="169:36" pos:end="169:37">&lt;&lt;</operator> <literal type="number" pos:start="169:39" pos:end="169:39">5</literal><operator pos:start="169:40" pos:end="169:40">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:50"><expr pos:start="171:17" pos:end="171:49"><name pos:start="171:17" pos:end="171:40"><name pos:start="171:17" pos:end="171:17">s</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:21">cr</name><index pos:start="171:22" pos:end="171:40">[<expr pos:start="171:23" pos:end="171:39"><name pos:start="171:23" pos:end="171:39">VGA_CRTC_MAX_SCAN</name></expr>]</index></name> <operator pos:start="171:42" pos:end="171:43">&amp;=</operator> <operator pos:start="171:45" pos:end="171:45">~</operator><literal type="number" pos:start="171:46" pos:end="171:49">0x9f</literal></expr>;</expr_stmt> <comment type="block" pos:start="171:52" pos:end="171:71">/* no double scan */</comment>

            </block_content>}</block></if> <else pos:start="173:15" pos:end="177:13">else <block pos:start="173:20" pos:end="177:13">{<block_content pos:start="175:17" pos:end="175:35">

                <expr_stmt pos:start="175:17" pos:end="175:35"><expr pos:start="175:17" pos:end="175:34"><name pos:start="175:17" pos:end="175:30"><name pos:start="175:17" pos:end="175:17">s</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:30">bank_offset</name></name> <operator pos:start="175:32" pos:end="175:32">=</operator> <literal type="number" pos:start="175:34" pos:end="175:34">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:57"><expr pos:start="179:13" pos:end="179:56"><name pos:start="179:13" pos:end="179:23"><name pos:start="179:13" pos:end="179:13">s</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:23">dac_8bit</name></name> <operator pos:start="179:25" pos:end="179:25">=</operator> <operator pos:start="179:27" pos:end="179:27">(</operator><name pos:start="179:28" pos:end="179:30">val</name> <operator pos:start="179:32" pos:end="179:32">&amp;</operator> <name pos:start="179:34" pos:end="179:51">VBE_DISPI_8BIT_DAC</name><operator pos:start="179:52" pos:end="179:52">)</operator> <operator pos:start="179:54" pos:end="179:54">&gt;</operator> <literal type="number" pos:start="179:56" pos:end="179:56">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:44"><expr pos:start="181:13" pos:end="181:43"><name pos:start="181:13" pos:end="181:37"><name pos:start="181:13" pos:end="181:13">s</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:23">vbe_regs</name><index pos:start="181:24" pos:end="181:37">[<expr pos:start="181:25" pos:end="181:36"><name pos:start="181:25" pos:end="181:36"><name pos:start="181:25" pos:end="181:25">s</name><operator pos:start="181:26" pos:end="181:27">-&gt;</operator><name pos:start="181:28" pos:end="181:36">vbe_index</name></name></expr>]</index></name> <operator pos:start="181:39" pos:end="181:39">=</operator> <name pos:start="181:41" pos:end="181:43">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:40"><expr pos:start="183:13" pos:end="183:39"><call pos:start="183:13" pos:end="183:39"><name pos:start="183:13" pos:end="183:36">vga_update_memory_access</name><argument_list pos:start="183:37" pos:end="183:39">(<argument pos:start="183:38" pos:end="183:38"><expr pos:start="183:38" pos:end="183:38"><name pos:start="183:38" pos:end="183:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="185:13" pos:end="185:18">break;</break>

        <default pos:start="187:9" pos:end="187:16">default:</default>

            <break pos:start="189:13" pos:end="189:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
