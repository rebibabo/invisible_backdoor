<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24973.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:30">spx_strategy</name><parameter_list pos:start="1:31" pos:end="1:60">(<parameter pos:start="1:32" pos:end="1:50"><decl pos:start="1:32" pos:end="1:50"><type pos:start="1:32" pos:end="1:50"><name pos:start="1:32" pos:end="1:47">AC3DecodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:59"><decl pos:start="1:53" pos:end="1:59"><type pos:start="1:53" pos:end="1:59"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:59">blk</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">bc</name> <init pos:start="5:23" pos:end="5:31">= <expr pos:start="5:25" pos:end="5:31"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:31"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:31">gbc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:20">fbw_channels</name> <init pos:start="7:22" pos:end="7:38">= <expr pos:start="7:24" pos:end="7:38"><name pos:start="7:24" pos:end="7:38"><name pos:start="7:24" pos:end="7:24">s</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:38">fbw_channels</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="11:39"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">dst_start_freq</name></decl>, <decl pos:start="9:25" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:36">dst_end_freq</name></decl>, <decl pos:start="9:39" pos:end="9:52"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:39" pos:end="9:52">src_start_freq</name></decl>,

        <decl pos:start="11:9" pos:end="11:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="11:9" pos:end="11:21">start_subband</name></decl>, <decl pos:start="11:24" pos:end="11:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="11:24" pos:end="11:34">end_subband</name></decl>, <decl pos:start="11:37" pos:end="11:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="11:37" pos:end="11:38">ch</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:42">/* determine which channels use spx */</comment>

    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:43">(<expr pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:23">channel_mode</name></name> <operator pos:start="17:25" pos:end="17:26">==</operator> <name pos:start="17:28" pos:end="17:42">AC3_CHMODE_MONO</name></expr>)</condition> <block pos:start="17:45" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:35">

        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:27">channel_uses_spx</name><index pos:start="19:28" pos:end="19:30">[<expr pos:start="19:29" pos:end="19:29"><literal type="number" pos:start="19:29" pos:end="19:29">1</literal></expr>]</index></name> <operator pos:start="19:32" pos:end="19:32">=</operator> <literal type="number" pos:start="19:34" pos:end="19:34">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="27:5">else <block pos:start="21:12" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:52">

        <for pos:start="23:9" pos:end="25:52">for <control pos:start="23:13" pos:end="23:46">(<init pos:start="23:14" pos:end="23:20"><expr pos:start="23:14" pos:end="23:19"><name pos:start="23:14" pos:end="23:15">ch</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <literal type="number" pos:start="23:19" pos:end="23:19">1</literal></expr>;</init> <condition pos:start="23:22" pos:end="23:40"><expr pos:start="23:22" pos:end="23:39"><name pos:start="23:22" pos:end="23:23">ch</name> <operator pos:start="23:25" pos:end="23:26">&lt;=</operator> <name pos:start="23:28" pos:end="23:39">fbw_channels</name></expr>;</condition> <incr pos:start="23:42" pos:end="23:45"><expr pos:start="23:42" pos:end="23:45"><name pos:start="23:42" pos:end="23:43">ch</name><operator pos:start="23:44" pos:end="23:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="25:13" pos:end="25:52"><block_content pos:start="25:13" pos:end="25:52">

            <expr_stmt pos:start="25:13" pos:end="25:52"><expr pos:start="25:13" pos:end="25:51"><name pos:start="25:13" pos:end="25:35"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:31">channel_uses_spx</name><index pos:start="25:32" pos:end="25:35">[<expr pos:start="25:33" pos:end="25:34"><name pos:start="25:33" pos:end="25:34">ch</name></expr>]</index></name> <operator pos:start="25:37" pos:end="25:37">=</operator> <call pos:start="25:39" pos:end="25:51"><name pos:start="25:39" pos:end="25:47">get_bits1</name><argument_list pos:start="25:48" pos:end="25:51">(<argument pos:start="25:49" pos:end="25:50"><expr pos:start="25:49" pos:end="25:50"><name pos:start="25:49" pos:end="25:50">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="33:26">/* get the frequency bins of the spx copy region and the spx start

       and end subbands */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:37"><expr pos:start="35:5" pos:end="35:36"><name pos:start="35:5" pos:end="35:18">dst_start_freq</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <call pos:start="35:22" pos:end="35:36"><name pos:start="35:22" pos:end="35:29">get_bits</name><argument_list pos:start="35:30" pos:end="35:36">(<argument pos:start="35:31" pos:end="35:32"><expr pos:start="35:31" pos:end="35:32"><name pos:start="35:31" pos:end="35:32">bc</name></expr></argument>, <argument pos:start="35:35" pos:end="35:35"><expr pos:start="35:35" pos:end="35:35"><literal type="number" pos:start="35:35" pos:end="35:35">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:17">start_subband</name>  <operator pos:start="37:20" pos:end="37:20">=</operator> <call pos:start="37:22" pos:end="37:36"><name pos:start="37:22" pos:end="37:29">get_bits</name><argument_list pos:start="37:30" pos:end="37:36">(<argument pos:start="37:31" pos:end="37:32"><expr pos:start="37:31" pos:end="37:32"><name pos:start="37:31" pos:end="37:32">bc</name></expr></argument>, <argument pos:start="37:35" pos:end="37:35"><expr pos:start="37:35" pos:end="37:35"><literal type="number" pos:start="37:35" pos:end="37:35">3</literal></expr></argument>)</argument_list></call> <operator pos:start="37:38" pos:end="37:38">+</operator> <literal type="number" pos:start="37:40" pos:end="37:40">2</literal></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:43"><if pos:start="39:5" pos:end="41:43">if <condition pos:start="39:8" pos:end="39:26">(<expr pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:21">start_subband</name> <operator pos:start="39:23" pos:end="39:23">&gt;</operator> <literal type="number" pos:start="39:25" pos:end="39:25">7</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:43"><block_content pos:start="41:9" pos:end="41:43">

        <expr_stmt pos:start="41:9" pos:end="41:43"><expr pos:start="41:9" pos:end="41:42"><name pos:start="41:9" pos:end="41:21">start_subband</name> <operator pos:start="41:23" pos:end="41:24">+=</operator> <name pos:start="41:26" pos:end="41:38">start_subband</name> <operator pos:start="41:40" pos:end="41:40">-</operator> <literal type="number" pos:start="41:42" pos:end="41:42">7</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="46:0"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:15">end_subband</name>    <operator pos:start="43:20" pos:end="43:20">=</operator> <call pos:start="43:22" pos:end="43:36"><name pos:start="43:22" pos:end="43:29">get_bits</name><argument_list pos:start="43:30" pos:end="43:36">(<argument pos:start="43:31" pos:end="43:32"><expr pos:start="43:31" pos:end="43:32"><name pos:start="43:31" pos:end="43:32">bc</name></expr></argument>, <argument pos:start="43:35" pos:end="43:35"><expr pos:start="43:35" pos:end="43:35"><literal type="number" pos:start="43:35" pos:end="43:35">3</literal></expr></argument>)</argument_list></call> <operator pos:start="43:38" pos:end="43:38">+</operator> <literal type="number" pos:start="43:40" pos:end="43:40">5</literal></expr>;</expr_stmt>

<cpp:if pos:start="45:1" pos:end="45:13">#<cpp:directive pos:start="45:2" pos:end="45:3">if</cpp:directive> <expr pos:start="45:5" pos:end="45:13"><name pos:start="45:5" pos:end="45:13">USE_FIXED</name></expr></cpp:if>

    <expr_stmt pos:start="47:5" pos:end="50:0"><expr pos:start="47:5" pos:end="47:57"><name pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:23">spx_dst_end_freq</name></name> <operator pos:start="47:25" pos:end="47:25">=</operator> <name pos:start="47:27" pos:end="47:57"><name pos:start="47:27" pos:end="47:42">end_freq_inv_tab</name><index pos:start="47:43" pos:end="47:57">[<expr pos:start="47:44" pos:end="47:56"><name pos:start="47:44" pos:end="47:54">end_subband</name><operator pos:start="47:55" pos:end="47:55">-</operator><literal type="number" pos:start="47:56" pos:end="47:56">5</literal></expr>]</index></name></expr>;</expr_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="51:5" pos:end="53:43"><if pos:start="51:5" pos:end="53:43">if <condition pos:start="51:8" pos:end="51:26">(<expr pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:19">end_subband</name>   <operator pos:start="51:23" pos:end="51:23">&gt;</operator> <literal type="number" pos:start="51:25" pos:end="51:25">7</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:43"><block_content pos:start="53:9" pos:end="53:43">

        <expr_stmt pos:start="53:9" pos:end="53:43"><expr pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:19">end_subband</name>   <operator pos:start="53:23" pos:end="53:24">+=</operator> <name pos:start="53:26" pos:end="53:36">end_subband</name>   <operator pos:start="53:40" pos:end="53:40">-</operator> <literal type="number" pos:start="53:42" pos:end="53:42">7</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:46"><expr pos:start="55:5" pos:end="55:45"><name pos:start="55:5" pos:end="55:18">dst_start_freq</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:35">dst_start_freq</name> <operator pos:start="55:37" pos:end="55:37">*</operator> <literal type="number" pos:start="55:39" pos:end="55:42">12</literal> <operator pos:start="55:42" pos:end="55:42">+</operator> <literal type="number" pos:start="55:44" pos:end="55:45">25</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:46"><expr pos:start="57:5" pos:end="57:45"><name pos:start="57:5" pos:end="57:18">src_start_freq</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:34">start_subband</name>  <operator pos:start="57:37" pos:end="57:37">*</operator> <literal type="number" pos:start="57:39" pos:end="57:42">12</literal> <operator pos:start="57:42" pos:end="57:42">+</operator> <literal type="number" pos:start="57:44" pos:end="57:45">25</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:46"><expr pos:start="59:5" pos:end="59:45"><name pos:start="59:5" pos:end="59:16">dst_end_freq</name>   <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:32">end_subband</name>    <operator pos:start="59:37" pos:end="59:37">*</operator> <literal type="number" pos:start="59:39" pos:end="59:42">12</literal> <operator pos:start="59:42" pos:end="59:42">+</operator> <literal type="number" pos:start="59:44" pos:end="59:45">25</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:38">/* check validity of spx ranges */</comment>

    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="73:5">if <condition pos:start="65:8" pos:end="65:37">(<expr pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:21">start_subband</name> <operator pos:start="65:23" pos:end="65:24">&gt;=</operator> <name pos:start="65:26" pos:end="65:36">end_subband</name></expr>)</condition> <block pos:start="65:39" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:35">

        <expr_stmt pos:start="67:9" pos:end="69:65"><expr pos:start="67:9" pos:end="69:64"><call pos:start="67:9" pos:end="69:64"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="69:64">(<argument pos:start="67:16" pos:end="67:23"><expr pos:start="67:16" pos:end="67:23"><name pos:start="67:16" pos:end="67:23"><name pos:start="67:16" pos:end="67:16">s</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:23">avctx</name></name></expr></argument>, <argument pos:start="67:26" pos:end="67:37"><expr pos:start="67:26" pos:end="67:37"><name pos:start="67:26" pos:end="67:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:40" pos:end="69:35"><expr pos:start="67:40" pos:end="69:35"><literal type="string" pos:start="67:40" pos:end="67:68">"invalid spectral extension "</literal>

               <literal type="string" pos:start="69:16" pos:end="69:35">"range (%d &gt;= %d)\n"</literal></expr></argument>, <argument pos:start="69:38" pos:end="69:50"><expr pos:start="69:38" pos:end="69:50"><name pos:start="69:38" pos:end="69:50">start_subband</name></expr></argument>, <argument pos:start="69:53" pos:end="69:63"><expr pos:start="69:53" pos:end="69:63"><name pos:start="69:53" pos:end="69:63">end_subband</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:35">return <expr pos:start="71:16" pos:end="71:34"><name pos:start="71:16" pos:end="71:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="83:5">if <condition pos:start="75:8" pos:end="75:41">(<expr pos:start="75:9" pos:end="75:40"><name pos:start="75:9" pos:end="75:22">dst_start_freq</name> <operator pos:start="75:24" pos:end="75:25">&gt;=</operator> <name pos:start="75:27" pos:end="75:40">src_start_freq</name></expr>)</condition> <block pos:start="75:43" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:35">

        <expr_stmt pos:start="77:9" pos:end="79:78"><expr pos:start="77:9" pos:end="79:77"><call pos:start="77:9" pos:end="79:77"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="79:77">(<argument pos:start="77:16" pos:end="77:23"><expr pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:16">s</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:23">avctx</name></name></expr></argument>, <argument pos:start="77:26" pos:end="77:37"><expr pos:start="77:26" pos:end="77:37"><name pos:start="77:26" pos:end="77:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:40" pos:end="79:44"><expr pos:start="77:40" pos:end="79:44"><literal type="string" pos:start="77:40" pos:end="77:68">"invalid spectral extension "</literal>

               <literal type="string" pos:start="79:16" pos:end="79:44">"copy start bin (%d &gt;= %d)\n"</literal></expr></argument>, <argument pos:start="79:47" pos:end="79:60"><expr pos:start="79:47" pos:end="79:60"><name pos:start="79:47" pos:end="79:60">dst_start_freq</name></expr></argument>, <argument pos:start="79:63" pos:end="79:76"><expr pos:start="79:63" pos:end="79:76"><name pos:start="79:63" pos:end="79:76">src_start_freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:35">return <expr pos:start="81:16" pos:end="81:34"><name pos:start="81:16" pos:end="81:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:43"><expr pos:start="87:5" pos:end="87:42"><name pos:start="87:5" pos:end="87:25"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:25">spx_dst_start_freq</name></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <name pos:start="87:29" pos:end="87:42">dst_start_freq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:43"><expr pos:start="89:5" pos:end="89:42"><name pos:start="89:5" pos:end="89:25"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:25">spx_src_start_freq</name></name> <operator pos:start="89:27" pos:end="89:27">=</operator> <name pos:start="89:29" pos:end="89:42">src_start_freq</name></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="93:45"><if pos:start="91:5" pos:end="93:45">if <condition pos:start="91:8" pos:end="91:19">(<expr pos:start="91:9" pos:end="91:18"><operator pos:start="91:9" pos:end="91:9">!</operator><name pos:start="91:10" pos:end="91:18">USE_FIXED</name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:45"><block_content pos:start="93:9" pos:end="93:45">

        <expr_stmt pos:start="93:9" pos:end="93:45"><expr pos:start="93:9" pos:end="93:44"><name pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:27">spx_dst_end_freq</name></name>   <operator pos:start="93:31" pos:end="93:31">=</operator> <name pos:start="93:33" pos:end="93:44">dst_end_freq</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="105:45"><expr pos:start="97:5" pos:end="105:44"><call pos:start="97:5" pos:end="105:44"><name pos:start="97:5" pos:end="97:25">decode_band_structure</name><argument_list pos:start="97:26" pos:end="105:44">(<argument pos:start="97:27" pos:end="97:28"><expr pos:start="97:27" pos:end="97:28"><name pos:start="97:27" pos:end="97:28">bc</name></expr></argument>, <argument pos:start="97:31" pos:end="97:33"><expr pos:start="97:31" pos:end="97:33"><name pos:start="97:31" pos:end="97:33">blk</name></expr></argument>, <argument pos:start="97:36" pos:end="97:42"><expr pos:start="97:36" pos:end="97:42"><name pos:start="97:36" pos:end="97:42"><name pos:start="97:36" pos:end="97:36">s</name><operator pos:start="97:37" pos:end="97:38">-&gt;</operator><name pos:start="97:39" pos:end="97:42">eac3</name></name></expr></argument>, <argument pos:start="97:45" pos:end="97:45"><expr pos:start="97:45" pos:end="97:45"><literal type="number" pos:start="97:45" pos:end="97:45">0</literal></expr></argument>,

                          <argument pos:start="99:27" pos:end="99:39"><expr pos:start="99:27" pos:end="99:39"><name pos:start="99:27" pos:end="99:39">start_subband</name></expr></argument>, <argument pos:start="99:42" pos:end="99:52"><expr pos:start="99:42" pos:end="99:52"><name pos:start="99:42" pos:end="99:52">end_subband</name></expr></argument>,

                          <argument pos:start="101:27" pos:end="101:57"><expr pos:start="101:27" pos:end="101:57"><name pos:start="101:27" pos:end="101:57">ff_eac3_default_spx_band_struct</name></expr></argument>,

                          <argument pos:start="103:27" pos:end="103:43"><expr pos:start="103:27" pos:end="103:43"><operator pos:start="103:27" pos:end="103:27">&amp;</operator><name pos:start="103:28" pos:end="103:43"><name pos:start="103:28" pos:end="103:28">s</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:43">num_spx_bands</name></name></expr></argument>,

                          <argument pos:start="105:27" pos:end="105:43"><expr pos:start="105:27" pos:end="105:43"><name pos:start="105:27" pos:end="105:43"><name pos:start="105:27" pos:end="105:27">s</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:43">spx_band_sizes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
