<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25651.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">disas_cp_insn</name><parameter_list pos:start="1:25" pos:end="1:71">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:33">CPUState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">env</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:52">DisasContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:70"><decl pos:start="1:58" pos:end="1:70"><type pos:start="1:58" pos:end="1:70"><name pos:start="1:58" pos:end="1:65">uint32_t</name></type> <name pos:start="1:67" pos:end="1:70">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:12">tmp</name></decl>, <decl pos:start="5:15" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:8"/><name pos:start="5:15" pos:end="5:18">tmp2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:15">rd</name> <init pos:start="7:17" pos:end="7:36">= <expr pos:start="7:19" pos:end="7:36"><operator pos:start="7:19" pos:end="7:19">(</operator><name pos:start="7:20" pos:end="7:23">insn</name> <operator pos:start="7:25" pos:end="7:26">&gt;&gt;</operator> <literal type="number" pos:start="7:28" pos:end="7:29">12</literal><operator pos:start="7:30" pos:end="7:30">)</operator> <operator pos:start="7:32" pos:end="7:32">&amp;</operator> <literal type="number" pos:start="7:34" pos:end="7:36">0xf</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:15">cp</name> <init pos:start="9:17" pos:end="9:35">= <expr pos:start="9:19" pos:end="9:35"><operator pos:start="9:19" pos:end="9:19">(</operator><name pos:start="9:20" pos:end="9:23">insn</name> <operator pos:start="9:25" pos:end="9:26">&gt;&gt;</operator> <literal type="number" pos:start="9:28" pos:end="9:28">8</literal><operator pos:start="9:29" pos:end="9:29">)</operator> <operator pos:start="9:31" pos:end="9:31">&amp;</operator> <literal type="number" pos:start="9:33" pos:end="9:35">0xf</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:19">(<expr pos:start="11:9" pos:end="11:18"><call pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:15">IS_USER</name><argument_list pos:start="11:16" pos:end="11:18">(<argument pos:start="11:17" pos:end="11:17"><expr pos:start="11:17" pos:end="11:17"><name pos:start="11:17" pos:end="11:17">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:21" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="55:5"><if pos:start="19:5" pos:end="37:5">if <condition pos:start="19:8" pos:end="19:29">(<expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:12">insn</name> <operator pos:start="19:14" pos:end="19:14">&amp;</operator> <name pos:start="19:16" pos:end="19:28">ARM_CP_RW_BIT</name></expr>)</condition> <block pos:start="19:31" pos:end="37:5">{<block_content pos:start="21:9" pos:end="35:30">

        <if_stmt pos:start="21:9" pos:end="23:21"><if pos:start="21:9" pos:end="23:21">if <condition pos:start="21:12" pos:end="21:33">(<expr pos:start="21:13" pos:end="21:32"><operator pos:start="21:13" pos:end="21:13">!</operator><name pos:start="21:14" pos:end="21:24"><name pos:start="21:14" pos:end="21:16">env</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:20">cp</name><index pos:start="21:21" pos:end="21:24">[<expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">cp</name></expr>]</index></name><operator pos:start="21:25" pos:end="21:25">.</operator><name pos:start="21:26" pos:end="21:32">cp_read</name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:21"><block_content pos:start="23:13" pos:end="23:21">

            <return pos:start="23:13" pos:end="23:21">return <expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><call pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:21">gen_set_pc_im</name><argument_list pos:start="25:22" pos:end="25:28">(<argument pos:start="25:23" pos:end="25:27"><expr pos:start="25:23" pos:end="25:27"><name pos:start="25:23" pos:end="25:27"><name pos:start="25:23" pos:end="25:23">s</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:27">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:24"><expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:11">tmp</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:23"><name pos:start="27:15" pos:end="27:21">new_tmp</name><argument_list pos:start="27:22" pos:end="27:23">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:12">tmp2</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:34"><name pos:start="29:16" pos:end="29:28">tcg_const_i32</name><argument_list pos:start="29:29" pos:end="29:34">(<argument pos:start="29:30" pos:end="29:33"><expr pos:start="29:30" pos:end="29:33"><name pos:start="29:30" pos:end="29:33">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:46"><expr pos:start="31:9" pos:end="31:45"><call pos:start="31:9" pos:end="31:45"><name pos:start="31:9" pos:end="31:25">gen_helper_get_cp</name><argument_list pos:start="31:26" pos:end="31:45">(<argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">tmp</name></expr></argument>, <argument pos:start="31:32" pos:end="31:38"><expr pos:start="31:32" pos:end="31:38"><name pos:start="31:32" pos:end="31:38">cpu_env</name></expr></argument>, <argument pos:start="31:41" pos:end="31:44"><expr pos:start="31:41" pos:end="31:44"><name pos:start="31:41" pos:end="31:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:28"><expr pos:start="33:9" pos:end="33:27"><call pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:21">tcg_temp_free</name><argument_list pos:start="33:22" pos:end="33:27">(<argument pos:start="33:23" pos:end="33:26"><expr pos:start="33:23" pos:end="33:26"><name pos:start="33:23" pos:end="33:26">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:30"><expr pos:start="35:9" pos:end="35:29"><call pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:17">store_reg</name><argument_list pos:start="35:18" pos:end="35:29">(<argument pos:start="35:19" pos:end="35:19"><expr pos:start="35:19" pos:end="35:19"><name pos:start="35:19" pos:end="35:19">s</name></expr></argument>, <argument pos:start="35:22" pos:end="35:23"><expr pos:start="35:22" pos:end="35:23"><name pos:start="35:22" pos:end="35:23">rd</name></expr></argument>, <argument pos:start="35:26" pos:end="35:28"><expr pos:start="35:26" pos:end="35:28"><name pos:start="35:26" pos:end="35:28">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="55:5">else <block pos:start="37:12" pos:end="55:5">{<block_content pos:start="39:9" pos:end="53:22">

        <if_stmt pos:start="39:9" pos:end="41:21"><if pos:start="39:9" pos:end="41:21">if <condition pos:start="39:12" pos:end="39:34">(<expr pos:start="39:13" pos:end="39:33"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:24"><name pos:start="39:14" pos:end="39:16">env</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:20">cp</name><index pos:start="39:21" pos:end="39:24">[<expr pos:start="39:22" pos:end="39:23"><name pos:start="39:22" pos:end="39:23">cp</name></expr>]</index></name><operator pos:start="39:25" pos:end="39:25">.</operator><name pos:start="39:26" pos:end="39:33">cp_write</name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:21"><block_content pos:start="41:13" pos:end="41:21">

            <return pos:start="41:13" pos:end="41:21">return <expr pos:start="41:20" pos:end="41:20"><literal type="number" pos:start="41:20" pos:end="41:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:29"><expr pos:start="43:9" pos:end="43:28"><call pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:21">gen_set_pc_im</name><argument_list pos:start="43:22" pos:end="43:28">(<argument pos:start="43:23" pos:end="43:27"><expr pos:start="43:23" pos:end="43:27"><name pos:start="43:23" pos:end="43:27"><name pos:start="43:23" pos:end="43:23">s</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:27">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:11">tmp</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:29"><name pos:start="45:15" pos:end="45:22">load_reg</name><argument_list pos:start="45:23" pos:end="45:29">(<argument pos:start="45:24" pos:end="45:24"><expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">s</name></expr></argument>, <argument pos:start="45:27" pos:end="45:28"><expr pos:start="45:27" pos:end="45:28"><name pos:start="45:27" pos:end="45:28">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:35"><expr pos:start="47:9" pos:end="47:34"><name pos:start="47:9" pos:end="47:12">tmp2</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:34"><name pos:start="47:16" pos:end="47:28">tcg_const_i32</name><argument_list pos:start="47:29" pos:end="47:34">(<argument pos:start="47:30" pos:end="47:33"><expr pos:start="47:30" pos:end="47:33"><name pos:start="47:30" pos:end="47:33">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><call pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:25">gen_helper_set_cp</name><argument_list pos:start="49:26" pos:end="49:45">(<argument pos:start="49:27" pos:end="49:33"><expr pos:start="49:27" pos:end="49:33"><name pos:start="49:27" pos:end="49:33">cpu_env</name></expr></argument>, <argument pos:start="49:36" pos:end="49:39"><expr pos:start="49:36" pos:end="49:39"><name pos:start="49:36" pos:end="49:39">tmp2</name></expr></argument>, <argument pos:start="49:42" pos:end="49:44"><expr pos:start="49:42" pos:end="49:44"><name pos:start="49:42" pos:end="49:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:28"><expr pos:start="51:9" pos:end="51:27"><call pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:21">tcg_temp_free</name><argument_list pos:start="51:22" pos:end="51:27">(<argument pos:start="51:23" pos:end="51:26"><expr pos:start="51:23" pos:end="51:26"><name pos:start="51:23" pos:end="51:26">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><call pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:16">dead_tmp</name><argument_list pos:start="53:17" pos:end="53:21">(<argument pos:start="53:18" pos:end="53:20"><expr pos:start="53:18" pos:end="53:20"><name pos:start="53:18" pos:end="53:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
