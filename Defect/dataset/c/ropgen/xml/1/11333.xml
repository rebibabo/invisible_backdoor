<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11333.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">webvtt_event_to_ass</name><parameter_list pos:start="1:31" pos:end="1:60">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:39">AVBPrint</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">buf</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:13">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:16">again</name></decl>, <decl pos:start="5:19" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:22">skip</name> <init pos:start="5:24" pos:end="5:26">= <expr pos:start="5:26" pos:end="5:26"><literal type="number" pos:start="5:26" pos:end="5:26">0</literal></expr></init></decl>;</decl_stmt>



    <while pos:start="9:5" pos:end="67:5">while <condition pos:start="9:11" pos:end="9:14">(<expr pos:start="9:12" pos:end="9:13"><operator pos:start="9:12" pos:end="9:12">*</operator><name pos:start="9:13" pos:end="9:13">p</name></expr>)</condition> <block pos:start="9:16" pos:end="67:5">{<block_content pos:start="13:9" pos:end="65:12">



        <for pos:start="13:9" pos:end="31:9">for <control pos:start="13:13" pos:end="13:64">(<init pos:start="13:14" pos:end="13:19"><expr pos:start="13:14" pos:end="13:18"><name pos:start="13:14" pos:end="13:14">i</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>;</init> <condition pos:start="13:21" pos:end="13:59"><expr pos:start="13:21" pos:end="13:58"><name pos:start="13:21" pos:end="13:21">i</name> <operator pos:start="13:23" pos:end="13:23">&lt;</operator> <call pos:start="13:25" pos:end="13:58"><name pos:start="13:25" pos:end="13:38">FF_ARRAY_ELEMS</name><argument_list pos:start="13:39" pos:end="13:58">(<argument pos:start="13:40" pos:end="13:57"><expr pos:start="13:40" pos:end="13:57"><name pos:start="13:40" pos:end="13:57">webvtt_tag_replace</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="13:61" pos:end="13:63"><expr pos:start="13:61" pos:end="13:63"><name pos:start="13:61" pos:end="13:61">i</name><operator pos:start="13:62" pos:end="13:63">++</operator></expr></incr>)</control> <block pos:start="13:66" pos:end="31:9">{<block_content pos:start="15:13" pos:end="29:13">

            <decl_stmt pos:start="15:13" pos:end="15:58"><decl pos:start="15:13" pos:end="15:57"><type pos:start="15:13" pos:end="15:24"><specifier pos:start="15:13" pos:end="15:17">const</specifier> <name pos:start="15:19" pos:end="15:22">char</name> <modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:28">from</name> <init pos:start="15:30" pos:end="15:57">= <expr pos:start="15:32" pos:end="15:57"><name pos:start="15:32" pos:end="15:52"><name pos:start="15:32" pos:end="15:49">webvtt_tag_replace</name><index pos:start="15:50" pos:end="15:52">[<expr pos:start="15:51" pos:end="15:51"><name pos:start="15:51" pos:end="15:51">i</name></expr>]</index></name><operator pos:start="15:53" pos:end="15:53">.</operator><name pos:start="15:54" pos:end="15:57">from</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="17:13" pos:end="17:44"><decl pos:start="17:13" pos:end="17:43"><type pos:start="17:13" pos:end="17:24"><specifier pos:start="17:13" pos:end="17:17">const</specifier> <name pos:start="17:19" pos:end="17:24">size_t</name></type> <name pos:start="17:26" pos:end="17:28">len</name> <init pos:start="17:30" pos:end="17:43">= <expr pos:start="17:32" pos:end="17:43"><call pos:start="17:32" pos:end="17:43"><name pos:start="17:32" pos:end="17:37">strlen</name><argument_list pos:start="17:38" pos:end="17:43">(<argument pos:start="17:39" pos:end="17:42"><expr pos:start="17:39" pos:end="17:42"><name pos:start="17:39" pos:end="17:42">from</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="19:13" pos:end="29:13"><if pos:start="19:13" pos:end="29:13">if <condition pos:start="19:16" pos:end="19:39">(<expr pos:start="19:17" pos:end="19:38"><operator pos:start="19:17" pos:end="19:17">!</operator><call pos:start="19:18" pos:end="19:38"><name pos:start="19:18" pos:end="19:24">strncmp</name><argument_list pos:start="19:25" pos:end="19:38">(<argument pos:start="19:26" pos:end="19:26"><expr pos:start="19:26" pos:end="19:26"><name pos:start="19:26" pos:end="19:26">p</name></expr></argument>, <argument pos:start="19:29" pos:end="19:32"><expr pos:start="19:29" pos:end="19:32"><name pos:start="19:29" pos:end="19:32">from</name></expr></argument>, <argument pos:start="19:35" pos:end="19:37"><expr pos:start="19:35" pos:end="19:37"><name pos:start="19:35" pos:end="19:37">len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:41" pos:end="29:13">{<block_content pos:start="21:17" pos:end="27:22">

                <expr_stmt pos:start="21:17" pos:end="21:64"><expr pos:start="21:17" pos:end="21:63"><call pos:start="21:17" pos:end="21:63"><name pos:start="21:17" pos:end="21:26">av_bprintf</name><argument_list pos:start="21:27" pos:end="21:63">(<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">buf</name></expr></argument>, <argument pos:start="21:33" pos:end="21:36"><expr pos:start="21:33" pos:end="21:36"><literal type="string" pos:start="21:33" pos:end="21:36">"%s"</literal></expr></argument>, <argument pos:start="21:39" pos:end="21:62"><expr pos:start="21:39" pos:end="21:62"><name pos:start="21:39" pos:end="21:59"><name pos:start="21:39" pos:end="21:56">webvtt_tag_replace</name><index pos:start="21:57" pos:end="21:59">[<expr pos:start="21:58" pos:end="21:58"><name pos:start="21:58" pos:end="21:58">i</name></expr>]</index></name><operator pos:start="21:60" pos:end="21:60">.</operator><name pos:start="21:61" pos:end="21:62">to</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="23:17" pos:end="23:25"><expr pos:start="23:17" pos:end="23:24"><name pos:start="23:17" pos:end="23:17">p</name> <operator pos:start="23:19" pos:end="23:20">+=</operator> <name pos:start="23:22" pos:end="23:24">len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="25:17" pos:end="25:26"><expr pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:21">again</name> <operator pos:start="25:23" pos:end="25:23">=</operator> <literal type="number" pos:start="25:25" pos:end="25:25">1</literal></expr>;</expr_stmt>

                <break pos:start="27:17" pos:end="27:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="33:9" pos:end="35:18"><if pos:start="33:9" pos:end="35:18">if <condition pos:start="33:12" pos:end="33:16">(<expr pos:start="33:13" pos:end="33:15"><operator pos:start="33:13" pos:end="33:13">!</operator><operator pos:start="33:14" pos:end="33:14">*</operator><name pos:start="33:15" pos:end="33:15">p</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:18"><block_content pos:start="35:13" pos:end="35:18">

            <break pos:start="35:13" pos:end="35:18">break;</break></block_content></block></if></if_stmt>



        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="47:9">if <condition pos:start="39:12" pos:end="39:18">(<expr pos:start="39:13" pos:end="39:17"><name pos:start="39:13" pos:end="39:17">again</name></expr>)</condition> <block pos:start="39:20" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:21">

            <expr_stmt pos:start="41:13" pos:end="41:22"><expr pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:17">again</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <literal type="number" pos:start="41:21" pos:end="41:21">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:21"><expr pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:16">skip</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <literal type="number" pos:start="43:20" pos:end="43:20">0</literal></expr>;</expr_stmt>

            <continue pos:start="45:13" pos:end="45:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="63:40"><if pos:start="49:9" pos:end="51:21">if <condition pos:start="49:12" pos:end="49:22">(<expr pos:start="49:13" pos:end="49:21"><operator pos:start="49:13" pos:end="49:13">*</operator><name pos:start="49:14" pos:end="49:14">p</name> <operator pos:start="49:16" pos:end="49:17">==</operator> <literal type="char" pos:start="49:19" pos:end="49:21">'&lt;'</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:21"><block_content pos:start="51:13" pos:end="51:21">

            <expr_stmt pos:start="51:13" pos:end="51:21"><expr pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:16">skip</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">1</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="53:9" pos:end="55:21">else if <condition pos:start="53:17" pos:end="53:27">(<expr pos:start="53:18" pos:end="53:26"><operator pos:start="53:18" pos:end="53:18">*</operator><name pos:start="53:19" pos:end="53:19">p</name> <operator pos:start="53:21" pos:end="53:22">==</operator> <literal type="char" pos:start="53:24" pos:end="53:26">'&gt;'</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:21"><block_content pos:start="55:13" pos:end="55:21">

            <expr_stmt pos:start="55:13" pos:end="55:21"><expr pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:16">skip</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <literal type="number" pos:start="55:20" pos:end="55:20">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="57:9" pos:end="59:35">else if <condition pos:start="57:17" pos:end="57:38">(<expr pos:start="57:18" pos:end="57:37"><name pos:start="57:18" pos:end="57:21"><name pos:start="57:18" pos:end="57:18">p</name><index pos:start="57:19" pos:end="57:21">[<expr pos:start="57:20" pos:end="57:20"><literal type="number" pos:start="57:20" pos:end="57:20">0</literal></expr>]</index></name> <operator pos:start="57:23" pos:end="57:24">==</operator> <literal type="char" pos:start="57:26" pos:end="57:29">'\n'</literal> <operator pos:start="57:31" pos:end="57:32">&amp;&amp;</operator> <name pos:start="57:34" pos:end="57:37"><name pos:start="57:34" pos:end="57:34">p</name><index pos:start="57:35" pos:end="57:37">[<expr pos:start="57:36" pos:end="57:36"><literal type="number" pos:start="57:36" pos:end="57:36">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:35"><block_content pos:start="59:13" pos:end="59:35">

            <expr_stmt pos:start="59:13" pos:end="59:35"><expr pos:start="59:13" pos:end="59:34"><call pos:start="59:13" pos:end="59:34"><name pos:start="59:13" pos:end="59:22">av_bprintf</name><argument_list pos:start="59:23" pos:end="59:34">(<argument pos:start="59:24" pos:end="59:26"><expr pos:start="59:24" pos:end="59:26"><name pos:start="59:24" pos:end="59:26">buf</name></expr></argument>, <argument pos:start="59:29" pos:end="59:33"><expr pos:start="59:29" pos:end="59:33"><literal type="string" pos:start="59:29" pos:end="59:33">"\\N"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="61:9" pos:end="63:40">else if <condition pos:start="61:17" pos:end="61:37">(<expr pos:start="61:18" pos:end="61:36"><operator pos:start="61:18" pos:end="61:18">!</operator><name pos:start="61:19" pos:end="61:22">skip</name> <operator pos:start="61:24" pos:end="61:25">&amp;&amp;</operator> <operator pos:start="61:27" pos:end="61:27">*</operator><name pos:start="61:28" pos:end="61:28">p</name> <operator pos:start="61:30" pos:end="61:31">!=</operator> <literal type="char" pos:start="61:33" pos:end="61:36">'\r'</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:40"><block_content pos:start="63:13" pos:end="63:40">

            <expr_stmt pos:start="63:13" pos:end="63:40"><expr pos:start="63:13" pos:end="63:39"><call pos:start="63:13" pos:end="63:39"><name pos:start="63:13" pos:end="63:27">av_bprint_chars</name><argument_list pos:start="63:28" pos:end="63:39">(<argument pos:start="63:29" pos:end="63:31"><expr pos:start="63:29" pos:end="63:31"><name pos:start="63:29" pos:end="63:31">buf</name></expr></argument>, <argument pos:start="63:34" pos:end="63:35"><expr pos:start="63:34" pos:end="63:35"><operator pos:start="63:34" pos:end="63:34">*</operator><name pos:start="63:35" pos:end="63:35">p</name></expr></argument>, <argument pos:start="63:38" pos:end="63:38"><expr pos:start="63:38" pos:end="63:38"><literal type="number" pos:start="63:38" pos:end="63:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:12"><expr pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:9">p</name><operator pos:start="65:10" pos:end="65:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
