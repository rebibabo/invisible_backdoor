<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9416.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:19">dec_sru</name><parameter_list pos:start="1:20" pos:end="1:37">(<parameter pos:start="1:21" pos:end="1:36"><decl pos:start="1:21" pos:end="1:36"><type pos:start="1:21" pos:end="1:34"><name pos:start="1:21" pos:end="1:32">DisasContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:5">

    <if_stmt pos:start="5:5" pos:end="13:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:32">(<expr pos:start="5:9" pos:end="5:31"><name pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:10">dc</name><operator pos:start="5:11" pos:end="5:12">-&gt;</operator><name pos:start="5:13" pos:end="5:18">format</name></name> <operator pos:start="5:20" pos:end="5:21">==</operator> <name pos:start="5:23" pos:end="5:31">OP_FMT_RI</name></expr>)</condition> <block pos:start="5:34" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:65">

        <expr_stmt pos:start="7:9" pos:end="7:65"><expr pos:start="7:9" pos:end="7:64"><call pos:start="7:9" pos:end="7:64"><name pos:start="7:9" pos:end="7:15">LOG_DIS</name><argument_list pos:start="7:16" pos:end="7:64">(<argument pos:start="7:17" pos:end="7:37"><expr pos:start="7:17" pos:end="7:37"><literal type="string" pos:start="7:17" pos:end="7:37">"srui r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="7:40" pos:end="7:45"><expr pos:start="7:40" pos:end="7:45"><name pos:start="7:40" pos:end="7:45"><name pos:start="7:40" pos:end="7:41">dc</name><operator pos:start="7:42" pos:end="7:43">-&gt;</operator><name pos:start="7:44" pos:end="7:45">r1</name></name></expr></argument>, <argument pos:start="7:48" pos:end="7:53"><expr pos:start="7:48" pos:end="7:53"><name pos:start="7:48" pos:end="7:53"><name pos:start="7:48" pos:end="7:49">dc</name><operator pos:start="7:50" pos:end="7:51">-&gt;</operator><name pos:start="7:52" pos:end="7:53">r0</name></name></expr></argument>, <argument pos:start="7:56" pos:end="7:63"><expr pos:start="7:56" pos:end="7:63"><name pos:start="7:56" pos:end="7:63"><name pos:start="7:56" pos:end="7:57">dc</name><operator pos:start="7:58" pos:end="7:59">-&gt;</operator><name pos:start="7:60" pos:end="7:63">imm5</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="9:7" pos:end="13:5">else <block pos:start="9:12" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:63">

        <expr_stmt pos:start="11:9" pos:end="11:63"><expr pos:start="11:9" pos:end="11:62"><call pos:start="11:9" pos:end="11:62"><name pos:start="11:9" pos:end="11:15">LOG_DIS</name><argument_list pos:start="11:16" pos:end="11:62">(<argument pos:start="11:17" pos:end="11:37"><expr pos:start="11:17" pos:end="11:37"><literal type="string" pos:start="11:17" pos:end="11:37">"sru r%d, r%d, r%d\n"</literal></expr></argument>, <argument pos:start="11:40" pos:end="11:45"><expr pos:start="11:40" pos:end="11:45"><name pos:start="11:40" pos:end="11:45"><name pos:start="11:40" pos:end="11:41">dc</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:45">r2</name></name></expr></argument>, <argument pos:start="11:48" pos:end="11:53"><expr pos:start="11:48" pos:end="11:53"><name pos:start="11:48" pos:end="11:53"><name pos:start="11:48" pos:end="11:49">dc</name><operator pos:start="11:50" pos:end="11:51">-&gt;</operator><name pos:start="11:52" pos:end="11:53">r0</name></name></expr></argument>, <argument pos:start="11:56" pos:end="11:61"><expr pos:start="11:56" pos:end="11:61"><name pos:start="11:56" pos:end="11:61"><name pos:start="11:56" pos:end="11:57">dc</name><operator pos:start="11:58" pos:end="11:59">-&gt;</operator><name pos:start="11:60" pos:end="11:61">r1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="17:5" pos:end="33:5"><if pos:start="17:5" pos:end="33:5">if <condition pos:start="17:8" pos:end="17:50">(<expr pos:start="17:9" pos:end="17:49"><operator pos:start="17:9" pos:end="17:9">!</operator><operator pos:start="17:10" pos:end="17:10">(</operator><name pos:start="17:11" pos:end="17:27"><name pos:start="17:11" pos:end="17:12">dc</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:17">env</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:27">features</name></name> <operator pos:start="17:29" pos:end="17:29">&amp;</operator> <name pos:start="17:31" pos:end="17:48">LM32_FEATURE_SHIFT</name><operator pos:start="17:49" pos:end="17:49">)</operator></expr>)</condition> <block pos:start="17:52" pos:end="33:5">{<block_content pos:start="19:9" pos:end="31:9">

        <if_stmt pos:start="19:9" pos:end="31:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:36">(<expr pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:14">dc</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:22">format</name></name> <operator pos:start="19:24" pos:end="19:25">==</operator> <name pos:start="19:27" pos:end="19:35">OP_FMT_RI</name></expr>)</condition> <block pos:start="19:38" pos:end="23:9">{<block_content>

            <comment type="block" pos:start="21:13" pos:end="21:52">/* TODO: check r1 == 1 during runtime */</comment>

        </block_content>}</block></if> <else pos:start="23:11" pos:end="31:9">else <block pos:start="23:16" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:13">

            <if_stmt pos:start="25:13" pos:end="29:13"><if pos:start="25:13" pos:end="29:13">if <condition pos:start="25:16" pos:end="25:30">(<expr pos:start="25:17" pos:end="25:29"><name pos:start="25:17" pos:end="25:24"><name pos:start="25:17" pos:end="25:18">dc</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:24">imm5</name></name> <operator pos:start="25:26" pos:end="25:27">!=</operator> <literal type="number" pos:start="25:29" pos:end="25:29">1</literal></expr>)</condition> <block pos:start="25:32" pos:end="29:13">{<block_content pos:start="27:17" pos:end="27:74">

                <expr_stmt pos:start="27:17" pos:end="27:74"><expr pos:start="27:17" pos:end="27:73"><call pos:start="27:17" pos:end="27:73"><name pos:start="27:17" pos:end="27:25">cpu_abort</name><argument_list pos:start="27:26" pos:end="27:73">(<argument pos:start="27:27" pos:end="27:33"><expr pos:start="27:27" pos:end="27:33"><name pos:start="27:27" pos:end="27:33"><name pos:start="27:27" pos:end="27:28">dc</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:33">env</name></name></expr></argument>, <argument pos:start="27:36" pos:end="27:72"><expr pos:start="27:36" pos:end="27:72"><literal type="string" pos:start="27:36" pos:end="27:72">"hardware shifter is not available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="51:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:32">(<expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:10">dc</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:18">format</name></name> <operator pos:start="37:20" pos:end="37:21">==</operator> <name pos:start="37:23" pos:end="37:31">OP_FMT_RI</name></expr>)</condition> <block pos:start="37:34" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:64">

        <expr_stmt pos:start="39:9" pos:end="39:64"><expr pos:start="39:9" pos:end="39:63"><call pos:start="39:9" pos:end="39:63"><name pos:start="39:9" pos:end="39:23">tcg_gen_shri_tl</name><argument_list pos:start="39:24" pos:end="39:63">(<argument pos:start="39:25" pos:end="39:37"><expr pos:start="39:25" pos:end="39:37"><name pos:start="39:25" pos:end="39:37"><name pos:start="39:25" pos:end="39:29">cpu_R</name><index pos:start="39:30" pos:end="39:37">[<expr pos:start="39:31" pos:end="39:36"><name pos:start="39:31" pos:end="39:36"><name pos:start="39:31" pos:end="39:32">dc</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:36">r1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="39:40" pos:end="39:52"><expr pos:start="39:40" pos:end="39:52"><name pos:start="39:40" pos:end="39:52"><name pos:start="39:40" pos:end="39:44">cpu_R</name><index pos:start="39:45" pos:end="39:52">[<expr pos:start="39:46" pos:end="39:51"><name pos:start="39:46" pos:end="39:51"><name pos:start="39:46" pos:end="39:47">dc</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:51">r0</name></name></expr>]</index></name></expr></argument>, <argument pos:start="39:55" pos:end="39:62"><expr pos:start="39:55" pos:end="39:62"><name pos:start="39:55" pos:end="39:62"><name pos:start="39:55" pos:end="39:56">dc</name><operator pos:start="39:57" pos:end="39:58">-&gt;</operator><name pos:start="39:59" pos:end="39:62">imm5</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="51:5">else <block pos:start="41:12" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:26">

        <decl_stmt pos:start="43:9" pos:end="43:33"><decl pos:start="43:9" pos:end="43:32"><type pos:start="43:9" pos:end="43:12"><name pos:start="43:9" pos:end="43:12">TCGv</name></type> <name pos:start="43:14" pos:end="43:15">t0</name> <init pos:start="43:17" pos:end="43:32">= <expr pos:start="43:19" pos:end="43:32"><call pos:start="43:19" pos:end="43:32"><name pos:start="43:19" pos:end="43:30">tcg_temp_new</name><argument_list pos:start="43:31" pos:end="43:32">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:49"><expr pos:start="45:9" pos:end="45:48"><call pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:23">tcg_gen_andi_tl</name><argument_list pos:start="45:24" pos:end="45:48">(<argument pos:start="45:25" pos:end="45:26"><expr pos:start="45:25" pos:end="45:26"><name pos:start="45:25" pos:end="45:26">t0</name></expr></argument>, <argument pos:start="45:29" pos:end="45:41"><expr pos:start="45:29" pos:end="45:41"><name pos:start="45:29" pos:end="45:41"><name pos:start="45:29" pos:end="45:33">cpu_R</name><index pos:start="45:34" pos:end="45:41">[<expr pos:start="45:35" pos:end="45:40"><name pos:start="45:35" pos:end="45:40"><name pos:start="45:35" pos:end="45:36">dc</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:40">r1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="45:44" pos:end="45:47"><expr pos:start="45:44" pos:end="45:47"><literal type="number" pos:start="45:44" pos:end="45:47">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:57"><expr pos:start="47:9" pos:end="47:56"><call pos:start="47:9" pos:end="47:56"><name pos:start="47:9" pos:end="47:22">tcg_gen_shr_tl</name><argument_list pos:start="47:23" pos:end="47:56">(<argument pos:start="47:24" pos:end="47:36"><expr pos:start="47:24" pos:end="47:36"><name pos:start="47:24" pos:end="47:36"><name pos:start="47:24" pos:end="47:28">cpu_R</name><index pos:start="47:29" pos:end="47:36">[<expr pos:start="47:30" pos:end="47:35"><name pos:start="47:30" pos:end="47:35"><name pos:start="47:30" pos:end="47:31">dc</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:35">r2</name></name></expr>]</index></name></expr></argument>, <argument pos:start="47:39" pos:end="47:51"><expr pos:start="47:39" pos:end="47:51"><name pos:start="47:39" pos:end="47:51"><name pos:start="47:39" pos:end="47:43">cpu_R</name><index pos:start="47:44" pos:end="47:51">[<expr pos:start="47:45" pos:end="47:50"><name pos:start="47:45" pos:end="47:50"><name pos:start="47:45" pos:end="47:46">dc</name><operator pos:start="47:47" pos:end="47:48">-&gt;</operator><name pos:start="47:49" pos:end="47:50">r0</name></name></expr>]</index></name></expr></argument>, <argument pos:start="47:54" pos:end="47:55"><expr pos:start="47:54" pos:end="47:55"><name pos:start="47:54" pos:end="47:55">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><call pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:21">tcg_temp_free</name><argument_list pos:start="49:22" pos:end="49:25">(<argument pos:start="49:23" pos:end="49:24"><expr pos:start="49:23" pos:end="49:24"><name pos:start="49:23" pos:end="49:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
