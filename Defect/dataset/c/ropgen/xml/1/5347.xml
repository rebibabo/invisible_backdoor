<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5347.c" pos:tabs="8"><function pos:start="1:1" pos:end="40:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">send_sub_rect_nojpeg</name><parameter_list pos:start="1:32" pos:end="3:80">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:40">VncState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">vs</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:51"><decl pos:start="1:47" pos:end="1:51"><type pos:start="1:47" pos:end="1:51"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:51">x</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:58"><decl pos:start="1:54" pos:end="1:58"><type pos:start="1:54" pos:end="1:58"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:58">y</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:65"><decl pos:start="1:61" pos:end="1:65"><type pos:start="1:61" pos:end="1:65"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:65">w</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:72"><decl pos:start="1:68" pos:end="1:72"><type pos:start="1:68" pos:end="1:72"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:72">h</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:38"><decl pos:start="3:33" pos:end="3:38"><type pos:start="3:33" pos:end="3:38"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:38">bg</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:46"><decl pos:start="3:41" pos:end="3:46"><type pos:start="3:41" pos:end="3:46"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:46">fg</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:58"><decl pos:start="3:49" pos:end="3:58"><type pos:start="3:49" pos:end="3:58"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:58">colors</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:79"><decl pos:start="3:61" pos:end="3:79"><type pos:start="3:61" pos:end="3:79"><name pos:start="3:61" pos:end="3:70">VncPalette</name> <modifier pos:start="3:72" pos:end="3:72">*</modifier></type><name pos:start="3:73" pos:end="3:79">palette</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="40:1">{<block_content pos:start="7:5" pos:end="38:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="36:5"><if pos:start="11:5" pos:end="22:5">if <condition pos:start="11:8" pos:end="11:20">(<expr pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:14">colors</name> <operator pos:start="11:16" pos:end="11:17">==</operator> <literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr>)</condition> <block pos:start="11:22" pos:end="22:5">{<block_content pos:start="13:9" pos:end="20:9">

        <if_stmt pos:start="13:9" pos:end="20:9"><if pos:start="13:9" pos:end="20:9">if <condition pos:start="13:12" pos:end="13:48">(<expr pos:start="13:13" pos:end="13:47"><call pos:start="13:13" pos:end="13:47"><name pos:start="13:13" pos:end="13:37">tight_detect_smooth_image</name><argument_list pos:start="13:38" pos:end="13:47">(<argument pos:start="13:39" pos:end="13:40"><expr pos:start="13:39" pos:end="13:40"><name pos:start="13:39" pos:end="13:40">vs</name></expr></argument>, <argument pos:start="13:43" pos:end="13:43"><expr pos:start="13:43" pos:end="13:43"><name pos:start="13:43" pos:end="13:43">w</name></expr></argument>, <argument pos:start="13:46" pos:end="13:46"><expr pos:start="13:46" pos:end="13:46"><name pos:start="13:46" pos:end="13:46">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:50" pos:end="20:9">{<block_content pos:start="15:13" pos:end="18:55">

            <expr_stmt pos:start="15:13" pos:end="15:53"><expr pos:start="15:13" pos:end="15:52"><name pos:start="15:13" pos:end="15:15">ret</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <call pos:start="15:19" pos:end="15:52"><name pos:start="15:19" pos:end="15:36">send_gradient_rect</name><argument_list pos:start="15:37" pos:end="15:52">(<argument pos:start="15:38" pos:end="15:39"><expr pos:start="15:38" pos:end="15:39"><name pos:start="15:38" pos:end="15:39">vs</name></expr></argument>, <argument pos:start="15:42" pos:end="15:42"><expr pos:start="15:42" pos:end="15:42"><name pos:start="15:42" pos:end="15:42">x</name></expr></argument>, <argument pos:start="15:45" pos:end="15:45"><expr pos:start="15:45" pos:end="15:45"><name pos:start="15:45" pos:end="15:45">y</name></expr></argument>, <argument pos:start="15:48" pos:end="15:48"><expr pos:start="15:48" pos:end="15:48"><name pos:start="15:48" pos:end="15:48">w</name></expr></argument>, <argument pos:start="15:51" pos:end="15:51"><expr pos:start="15:51" pos:end="15:51"><name pos:start="15:51" pos:end="15:51">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <expr_stmt pos:start="18:13" pos:end="18:55"><expr pos:start="18:13" pos:end="18:54"><name pos:start="18:13" pos:end="18:15">ret</name> <operator pos:start="18:17" pos:end="18:17">=</operator> <call pos:start="18:19" pos:end="18:54"><name pos:start="18:19" pos:end="18:38">send_full_color_rect</name><argument_list pos:start="18:39" pos:end="18:54">(<argument pos:start="18:40" pos:end="18:41"><expr pos:start="18:40" pos:end="18:41"><name pos:start="18:40" pos:end="18:41">vs</name></expr></argument>, <argument pos:start="18:44" pos:end="18:44"><expr pos:start="18:44" pos:end="18:44"><name pos:start="18:44" pos:end="18:44">x</name></expr></argument>, <argument pos:start="18:47" pos:end="18:47"><expr pos:start="18:47" pos:end="18:47"><name pos:start="18:47" pos:end="18:47">y</name></expr></argument>, <argument pos:start="18:50" pos:end="18:50"><expr pos:start="18:50" pos:end="18:50"><name pos:start="18:50" pos:end="18:50">w</name></expr></argument>, <argument pos:start="18:53" pos:end="18:53"><expr pos:start="18:53" pos:end="18:53"><name pos:start="18:53" pos:end="18:53">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="22:7" pos:end="26:5">else if <condition pos:start="22:15" pos:end="22:27">(<expr pos:start="22:16" pos:end="22:26"><name pos:start="22:16" pos:end="22:21">colors</name> <operator pos:start="22:23" pos:end="22:24">==</operator> <literal type="number" pos:start="22:26" pos:end="22:26">1</literal></expr>)</condition> <block pos:start="22:29" pos:end="26:5">{<block_content pos:start="24:9" pos:end="24:34">

        <expr_stmt pos:start="24:9" pos:end="24:34"><expr pos:start="24:9" pos:end="24:33"><name pos:start="24:9" pos:end="24:11">ret</name> <operator pos:start="24:13" pos:end="24:13">=</operator> <call pos:start="24:15" pos:end="24:33"><name pos:start="24:15" pos:end="24:29">send_solid_rect</name><argument_list pos:start="24:30" pos:end="24:33">(<argument pos:start="24:31" pos:end="24:32"><expr pos:start="24:31" pos:end="24:32"><name pos:start="24:31" pos:end="24:32">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="26:7" pos:end="30:5">else if <condition pos:start="26:15" pos:end="26:27">(<expr pos:start="26:16" pos:end="26:26"><name pos:start="26:16" pos:end="26:21">colors</name> <operator pos:start="26:23" pos:end="26:24">==</operator> <literal type="number" pos:start="26:26" pos:end="26:26">2</literal></expr>)</condition> <block pos:start="26:29" pos:end="30:5">{<block_content pos:start="28:9" pos:end="28:53">

        <expr_stmt pos:start="28:9" pos:end="28:53"><expr pos:start="28:9" pos:end="28:52"><name pos:start="28:9" pos:end="28:11">ret</name> <operator pos:start="28:13" pos:end="28:13">=</operator> <call pos:start="28:15" pos:end="28:52"><name pos:start="28:15" pos:end="28:28">send_mono_rect</name><argument_list pos:start="28:29" pos:end="28:52">(<argument pos:start="28:30" pos:end="28:31"><expr pos:start="28:30" pos:end="28:31"><name pos:start="28:30" pos:end="28:31">vs</name></expr></argument>, <argument pos:start="28:34" pos:end="28:34"><expr pos:start="28:34" pos:end="28:34"><name pos:start="28:34" pos:end="28:34">x</name></expr></argument>, <argument pos:start="28:37" pos:end="28:37"><expr pos:start="28:37" pos:end="28:37"><name pos:start="28:37" pos:end="28:37">y</name></expr></argument>, <argument pos:start="28:40" pos:end="28:40"><expr pos:start="28:40" pos:end="28:40"><name pos:start="28:40" pos:end="28:40">w</name></expr></argument>, <argument pos:start="28:43" pos:end="28:43"><expr pos:start="28:43" pos:end="28:43"><name pos:start="28:43" pos:end="28:43">h</name></expr></argument>, <argument pos:start="28:46" pos:end="28:47"><expr pos:start="28:46" pos:end="28:47"><name pos:start="28:46" pos:end="28:47">bg</name></expr></argument>, <argument pos:start="28:50" pos:end="28:51"><expr pos:start="28:50" pos:end="28:51"><name pos:start="28:50" pos:end="28:51">fg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="30:7" pos:end="36:5">else if <condition pos:start="30:15" pos:end="30:29">(<expr pos:start="30:16" pos:end="30:28"><name pos:start="30:16" pos:end="30:21">colors</name> <operator pos:start="30:23" pos:end="30:24">&lt;=</operator> <literal type="number" pos:start="30:26" pos:end="30:28">256</literal></expr>)</condition> <block pos:start="30:31" pos:end="36:5">{<block_content pos:start="32:9" pos:end="32:57">

        <expr_stmt pos:start="32:9" pos:end="32:57"><expr pos:start="32:9" pos:end="32:56"><name pos:start="32:9" pos:end="32:11">ret</name> <operator pos:start="32:13" pos:end="32:13">=</operator> <call pos:start="32:15" pos:end="32:56"><name pos:start="32:15" pos:end="32:31">send_palette_rect</name><argument_list pos:start="32:32" pos:end="32:56">(<argument pos:start="32:33" pos:end="32:34"><expr pos:start="32:33" pos:end="32:34"><name pos:start="32:33" pos:end="32:34">vs</name></expr></argument>, <argument pos:start="32:37" pos:end="32:37"><expr pos:start="32:37" pos:end="32:37"><name pos:start="32:37" pos:end="32:37">x</name></expr></argument>, <argument pos:start="32:40" pos:end="32:40"><expr pos:start="32:40" pos:end="32:40"><name pos:start="32:40" pos:end="32:40">y</name></expr></argument>, <argument pos:start="32:43" pos:end="32:43"><expr pos:start="32:43" pos:end="32:43"><name pos:start="32:43" pos:end="32:43">w</name></expr></argument>, <argument pos:start="32:46" pos:end="32:46"><expr pos:start="32:46" pos:end="32:46"><name pos:start="32:46" pos:end="32:46">h</name></expr></argument>, <argument pos:start="32:49" pos:end="32:55"><expr pos:start="32:49" pos:end="32:55"><name pos:start="32:49" pos:end="32:55">palette</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if></if_stmt>

    <return pos:start="38:5" pos:end="38:15">return <expr pos:start="38:12" pos:end="38:14"><name pos:start="38:12" pos:end="38:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
