<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16439.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">xan_unpack</name><parameter_list pos:start="1:22" pos:end="3:60">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:29">uint8_t</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:35">dest</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:55">dest_len</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:40"><decl pos:start="3:23" pos:end="3:40"><type pos:start="3:23" pos:end="3:40"><specifier pos:start="3:23" pos:end="3:27">const</specifier> <name pos:start="3:29" pos:end="3:35">uint8_t</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">src</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:59"><decl pos:start="3:43" pos:end="3:59"><type pos:start="3:43" pos:end="3:59"><specifier pos:start="3:43" pos:end="3:47">const</specifier> <name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:59">src_len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="99:1">{<block_content pos:start="7:5" pos:end="97:28">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:18">opcode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:22">orig_dest</name> <init pos:start="11:24" pos:end="11:29">= <expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">dest</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">src_end</name> <init pos:start="13:28" pos:end="13:42">= <expr pos:start="13:30" pos:end="13:42"><name pos:start="13:30" pos:end="13:32">src</name> <operator pos:start="13:34" pos:end="13:34">+</operator> <name pos:start="13:36" pos:end="13:42">src_len</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:46"><decl pos:start="15:5" pos:end="15:45"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:27">dest_end</name> <init pos:start="15:29" pos:end="15:45">= <expr pos:start="15:31" pos:end="15:45"><name pos:start="15:31" pos:end="15:34">dest</name> <operator pos:start="15:36" pos:end="15:36">+</operator> <name pos:start="15:38" pos:end="15:45">dest_len</name></expr></init></decl>;</decl_stmt>



    <while pos:start="19:5" pos:end="95:5">while <condition pos:start="19:11" pos:end="19:27">(<expr pos:start="19:12" pos:end="19:26"><name pos:start="19:12" pos:end="19:15">dest</name> <operator pos:start="19:17" pos:end="19:17">&lt;</operator> <name pos:start="19:19" pos:end="19:26">dest_end</name></expr>)</condition> <block pos:start="19:29" pos:end="95:5">{<block_content pos:start="21:9" pos:end="93:9">

        <expr_stmt pos:start="21:9" pos:end="21:24"><expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:14">opcode</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <operator pos:start="21:18" pos:end="21:18">*</operator><name pos:start="21:19" pos:end="21:21">src</name><operator pos:start="21:22" pos:end="21:23">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="25:9" pos:end="93:9"><if pos:start="25:9" pos:end="73:9">if <condition pos:start="25:12" pos:end="25:26">(<expr pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:18">opcode</name> <operator pos:start="25:20" pos:end="25:20">&lt;</operator> <literal type="number" pos:start="25:22" pos:end="25:25">0xe0</literal></expr>)</condition> <block pos:start="25:28" pos:end="73:9">{<block_content pos:start="27:13" pos:end="71:26">

            <decl_stmt pos:start="27:13" pos:end="27:28"><decl pos:start="27:13" pos:end="27:21"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:21">size2</name></decl>, <decl pos:start="27:24" pos:end="27:27"><type ref="prev" pos:start="27:13" pos:end="27:15"/><name pos:start="27:24" pos:end="27:27">back</name></decl>;</decl_stmt>

            <if_stmt pos:start="29:13" pos:end="57:13"><if pos:start="29:13" pos:end="37:13">if <condition pos:start="29:16" pos:end="29:37">(<expr pos:start="29:17" pos:end="29:36"><operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:23">opcode</name> <operator pos:start="29:25" pos:end="29:25">&amp;</operator> <literal type="number" pos:start="29:27" pos:end="29:30">0x80</literal><operator pos:start="29:31" pos:end="29:31">)</operator> <operator pos:start="29:33" pos:end="29:34">==</operator> <literal type="number" pos:start="29:36" pos:end="29:36">0</literal></expr>)</condition> <block pos:start="29:39" pos:end="37:13">{<block_content pos:start="31:17" pos:end="35:51">

                <expr_stmt pos:start="31:17" pos:end="31:35"><expr pos:start="31:17" pos:end="31:34"><name pos:start="31:17" pos:end="31:20">size</name>  <operator pos:start="31:23" pos:end="31:23">=</operator> <name pos:start="31:25" pos:end="31:30">opcode</name> <operator pos:start="31:32" pos:end="31:32">&amp;</operator> <literal type="number" pos:start="31:34" pos:end="31:34">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:60"><expr pos:start="33:17" pos:end="33:59"><name pos:start="33:17" pos:end="33:20">back</name>  <operator pos:start="33:23" pos:end="33:23">=</operator> <operator pos:start="33:25" pos:end="33:25">(</operator><operator pos:start="33:26" pos:end="33:26">(</operator><name pos:start="33:27" pos:end="33:32">opcode</name> <operator pos:start="33:34" pos:end="33:34">&amp;</operator> <literal type="number" pos:start="33:36" pos:end="33:39">0x60</literal><operator pos:start="33:40" pos:end="33:40">)</operator> <operator pos:start="33:42" pos:end="33:43">&lt;&lt;</operator> <literal type="number" pos:start="33:45" pos:end="33:45">3</literal><operator pos:start="33:46" pos:end="33:46">)</operator> <operator pos:start="33:48" pos:end="33:48">+</operator> <operator pos:start="33:50" pos:end="33:50">*</operator><name pos:start="33:51" pos:end="33:53">src</name><operator pos:start="33:54" pos:end="33:55">++</operator> <operator pos:start="33:57" pos:end="33:57">+</operator> <literal type="number" pos:start="33:59" pos:end="33:59">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:51"><expr pos:start="35:17" pos:end="35:50"><name pos:start="35:17" pos:end="35:21">size2</name> <operator pos:start="35:23" pos:end="35:23">=</operator> <operator pos:start="35:25" pos:end="35:25">(</operator><operator pos:start="35:26" pos:end="35:26">(</operator><name pos:start="35:27" pos:end="35:32">opcode</name> <operator pos:start="35:34" pos:end="35:34">&amp;</operator> <literal type="number" pos:start="35:36" pos:end="35:39">0x1c</literal><operator pos:start="35:40" pos:end="35:40">)</operator> <operator pos:start="35:42" pos:end="35:43">&gt;&gt;</operator> <literal type="number" pos:start="35:45" pos:end="35:45">2</literal><operator pos:start="35:46" pos:end="35:46">)</operator> <operator pos:start="35:48" pos:end="35:48">+</operator> <literal type="number" pos:start="35:50" pos:end="35:50">3</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="37:15" pos:end="45:13">else if <condition pos:start="37:23" pos:end="37:44">(<expr pos:start="37:24" pos:end="37:43"><operator pos:start="37:24" pos:end="37:24">(</operator><name pos:start="37:25" pos:end="37:30">opcode</name> <operator pos:start="37:32" pos:end="37:32">&amp;</operator> <literal type="number" pos:start="37:34" pos:end="37:37">0x40</literal><operator pos:start="37:38" pos:end="37:38">)</operator> <operator pos:start="37:40" pos:end="37:41">==</operator> <literal type="number" pos:start="37:43" pos:end="37:43">0</literal></expr>)</condition> <block pos:start="37:46" pos:end="45:13">{<block_content pos:start="39:17" pos:end="43:44">

                <expr_stmt pos:start="39:17" pos:end="39:34"><expr pos:start="39:17" pos:end="39:33"><name pos:start="39:17" pos:end="39:20">size</name>  <operator pos:start="39:23" pos:end="39:23">=</operator> <operator pos:start="39:25" pos:end="39:25">*</operator><name pos:start="39:26" pos:end="39:28">src</name> <operator pos:start="39:30" pos:end="39:31">&gt;&gt;</operator> <literal type="number" pos:start="39:33" pos:end="39:33">6</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:65"><expr pos:start="41:17" pos:end="41:64"><name pos:start="41:17" pos:end="41:20">back</name>  <operator pos:start="41:23" pos:end="41:23">=</operator> <operator pos:start="41:25" pos:end="41:25">(</operator><call pos:start="41:26" pos:end="41:50"><name pos:start="41:26" pos:end="41:44">bytestream_get_be16</name><argument_list pos:start="41:45" pos:end="41:50">(<argument pos:start="41:46" pos:end="41:49"><expr pos:start="41:46" pos:end="41:49"><operator pos:start="41:46" pos:end="41:46">&amp;</operator><name pos:start="41:47" pos:end="41:49">src</name></expr></argument>)</argument_list></call> <operator pos:start="41:52" pos:end="41:52">&amp;</operator> <literal type="number" pos:start="41:54" pos:end="41:59">0x3fff</literal><operator pos:start="41:60" pos:end="41:60">)</operator> <operator pos:start="41:62" pos:end="41:62">+</operator> <literal type="number" pos:start="41:64" pos:end="41:64">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:44"><expr pos:start="43:17" pos:end="43:43"><name pos:start="43:17" pos:end="43:21">size2</name> <operator pos:start="43:23" pos:end="43:23">=</operator> <operator pos:start="43:25" pos:end="43:25">(</operator><name pos:start="43:26" pos:end="43:31">opcode</name> <operator pos:start="43:33" pos:end="43:33">&amp;</operator> <literal type="number" pos:start="43:35" pos:end="43:38">0x3f</literal><operator pos:start="43:39" pos:end="43:39">)</operator> <operator pos:start="43:41" pos:end="43:41">+</operator> <literal type="number" pos:start="43:43" pos:end="43:43">4</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="45:15" pos:end="57:13">else <block pos:start="45:20" pos:end="57:13">{<block_content pos:start="47:17" pos:end="55:26">

                <expr_stmt pos:start="47:17" pos:end="47:35"><expr pos:start="47:17" pos:end="47:34"><name pos:start="47:17" pos:end="47:20">size</name>  <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:30">opcode</name> <operator pos:start="47:32" pos:end="47:32">&amp;</operator> <literal type="number" pos:start="47:34" pos:end="47:34">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:80"><expr pos:start="49:17" pos:end="49:79"><name pos:start="49:17" pos:end="49:20">back</name>  <operator pos:start="49:23" pos:end="49:23">=</operator> <operator pos:start="49:25" pos:end="49:25">(</operator><operator pos:start="49:26" pos:end="49:26">(</operator><name pos:start="49:27" pos:end="49:32">opcode</name> <operator pos:start="49:34" pos:end="49:34">&amp;</operator> <literal type="number" pos:start="49:36" pos:end="49:39">0x10</literal><operator pos:start="49:40" pos:end="49:40">)</operator> <operator pos:start="49:42" pos:end="49:43">&lt;&lt;</operator> <literal type="number" pos:start="49:45" pos:end="49:46">12</literal><operator pos:start="49:47" pos:end="49:47">)</operator> <operator pos:start="49:49" pos:end="49:49">+</operator> <call pos:start="49:51" pos:end="49:75"><name pos:start="49:51" pos:end="49:69">bytestream_get_be16</name><argument_list pos:start="49:70" pos:end="49:75">(<argument pos:start="49:71" pos:end="49:74"><expr pos:start="49:71" pos:end="49:74"><operator pos:start="49:71" pos:end="49:71">&amp;</operator><name pos:start="49:72" pos:end="49:74">src</name></expr></argument>)</argument_list></call> <operator pos:start="49:77" pos:end="49:77">+</operator> <literal type="number" pos:start="49:79" pos:end="49:79">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:61"><expr pos:start="51:17" pos:end="51:60"><name pos:start="51:17" pos:end="51:21">size2</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <operator pos:start="51:25" pos:end="51:25">(</operator><operator pos:start="51:26" pos:end="51:26">(</operator><name pos:start="51:27" pos:end="51:32">opcode</name> <operator pos:start="51:34" pos:end="51:34">&amp;</operator> <literal type="number" pos:start="51:36" pos:end="51:39">0x0c</literal><operator pos:start="51:40" pos:end="51:40">)</operator> <operator pos:start="51:42" pos:end="51:43">&lt;&lt;</operator>  <literal type="number" pos:start="51:46" pos:end="51:46">6</literal><operator pos:start="51:47" pos:end="51:47">)</operator> <operator pos:start="51:49" pos:end="51:49">+</operator> <operator pos:start="51:51" pos:end="51:51">*</operator><name pos:start="51:52" pos:end="51:54">src</name><operator pos:start="51:55" pos:end="51:56">++</operator> <operator pos:start="51:58" pos:end="51:58">+</operator> <literal type="number" pos:start="51:60" pos:end="51:60">5</literal></expr>;</expr_stmt>

                <if_stmt pos:start="53:17" pos:end="55:26"><if pos:start="53:17" pos:end="55:26">if <condition pos:start="53:20" pos:end="53:51">(<expr pos:start="53:21" pos:end="53:50"><name pos:start="53:21" pos:end="53:24">size</name> <operator pos:start="53:26" pos:end="53:26">+</operator> <name pos:start="53:28" pos:end="53:32">size2</name> <operator pos:start="53:34" pos:end="53:34">&gt;</operator> <name pos:start="53:36" pos:end="53:43">dest_end</name> <operator pos:start="53:45" pos:end="53:45">-</operator> <name pos:start="53:47" pos:end="53:50">dest</name></expr>)</condition><block type="pseudo" pos:start="55:21" pos:end="55:26"><block_content pos:start="55:21" pos:end="55:26">

                    <break pos:start="55:21" pos:end="55:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="59:13" pos:end="63:26"><if pos:start="59:13" pos:end="63:26">if <condition pos:start="59:16" pos:end="61:47">(<expr pos:start="59:17" pos:end="61:46"><name pos:start="59:17" pos:end="59:19">src</name> <operator pos:start="59:21" pos:end="59:21">+</operator> <name pos:start="59:23" pos:end="59:26">size</name> <operator pos:start="59:28" pos:end="59:28">&gt;</operator> <name pos:start="59:30" pos:end="59:36">src_end</name> <operator pos:start="59:38" pos:end="59:39">||</operator> <name pos:start="59:41" pos:end="59:44">dest</name> <operator pos:start="59:46" pos:end="59:46">+</operator> <name pos:start="59:48" pos:end="59:51">size</name> <operator pos:start="59:53" pos:end="59:53">+</operator> <name pos:start="59:55" pos:end="59:59">size2</name> <operator pos:start="59:61" pos:end="59:61">&gt;</operator> <name pos:start="59:63" pos:end="59:70">dest_end</name> <operator pos:start="59:72" pos:end="59:73">||</operator>

                <name pos:start="61:17" pos:end="61:20">dest</name> <operator pos:start="61:22" pos:end="61:22">-</operator> <name pos:start="61:24" pos:end="61:32">orig_dest</name> <operator pos:start="61:34" pos:end="61:34">+</operator> <name pos:start="61:36" pos:end="61:39">size</name> <operator pos:start="61:41" pos:end="61:41">&lt;</operator> <name pos:start="61:43" pos:end="61:46">back</name></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:26"><block_content pos:start="63:17" pos:end="63:26">

                <return pos:start="63:17" pos:end="63:26">return <expr pos:start="63:24" pos:end="63:25"><operator pos:start="63:24" pos:end="63:24">-</operator><literal type="number" pos:start="63:25" pos:end="63:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:52"><expr pos:start="65:13" pos:end="65:51"><call pos:start="65:13" pos:end="65:51"><name pos:start="65:13" pos:end="65:33">bytestream_get_buffer</name><argument_list pos:start="65:34" pos:end="65:51">(<argument pos:start="65:35" pos:end="65:38"><expr pos:start="65:35" pos:end="65:38"><operator pos:start="65:35" pos:end="65:35">&amp;</operator><name pos:start="65:36" pos:end="65:38">src</name></expr></argument>, <argument pos:start="65:41" pos:end="65:44"><expr pos:start="65:41" pos:end="65:44"><name pos:start="65:41" pos:end="65:44">dest</name></expr></argument>, <argument pos:start="65:47" pos:end="65:50"><expr pos:start="65:47" pos:end="65:50"><name pos:start="65:47" pos:end="65:50">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:25"><expr pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:16">dest</name> <operator pos:start="67:18" pos:end="67:19">+=</operator> <name pos:start="67:21" pos:end="67:24">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:49"><expr pos:start="69:13" pos:end="69:48"><call pos:start="69:13" pos:end="69:48"><name pos:start="69:13" pos:end="69:29">av_memcpy_backptr</name><argument_list pos:start="69:30" pos:end="69:48">(<argument pos:start="69:31" pos:end="69:34"><expr pos:start="69:31" pos:end="69:34"><name pos:start="69:31" pos:end="69:34">dest</name></expr></argument>, <argument pos:start="69:37" pos:end="69:40"><expr pos:start="69:37" pos:end="69:40"><name pos:start="69:37" pos:end="69:40">back</name></expr></argument>, <argument pos:start="69:43" pos:end="69:47"><expr pos:start="69:43" pos:end="69:47"><name pos:start="69:43" pos:end="69:47">size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:26"><expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:16">dest</name> <operator pos:start="71:18" pos:end="71:19">+=</operator> <name pos:start="71:21" pos:end="71:25">size2</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="73:11" pos:end="93:9">else <block pos:start="73:16" pos:end="93:9">{<block_content pos:start="75:13" pos:end="91:22">

            <decl_stmt pos:start="75:13" pos:end="75:40"><decl pos:start="75:13" pos:end="75:39"><type pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:15">int</name></type> <name pos:start="75:17" pos:end="75:22">finish</name> <init pos:start="75:24" pos:end="75:39">= <expr pos:start="75:26" pos:end="75:39"><name pos:start="75:26" pos:end="75:31">opcode</name> <operator pos:start="75:33" pos:end="75:34">&gt;=</operator> <literal type="number" pos:start="75:36" pos:end="75:39">0xfc</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="79:13" pos:end="79:68"><expr pos:start="79:13" pos:end="79:67"><name pos:start="79:13" pos:end="79:16">size</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <ternary pos:start="79:20" pos:end="79:67"><condition pos:start="79:20" pos:end="79:27"><expr pos:start="79:20" pos:end="79:25"><name pos:start="79:20" pos:end="79:25">finish</name></expr> ?</condition><then pos:start="79:29" pos:end="79:38"> <expr pos:start="79:29" pos:end="79:38"><name pos:start="79:29" pos:end="79:34">opcode</name> <operator pos:start="79:36" pos:end="79:36">&amp;</operator> <literal type="number" pos:start="79:38" pos:end="79:38">3</literal></expr> </then><else pos:start="79:40" pos:end="79:67">: <expr pos:start="79:42" pos:end="79:67"><operator pos:start="79:42" pos:end="79:42">(</operator><operator pos:start="79:43" pos:end="79:43">(</operator><name pos:start="79:44" pos:end="79:49">opcode</name> <operator pos:start="79:51" pos:end="79:51">&amp;</operator> <literal type="number" pos:start="79:53" pos:end="79:56">0x1f</literal><operator pos:start="79:57" pos:end="79:57">)</operator> <operator pos:start="79:59" pos:end="79:60">&lt;&lt;</operator> <literal type="number" pos:start="79:62" pos:end="79:62">2</literal><operator pos:start="79:63" pos:end="79:63">)</operator> <operator pos:start="79:65" pos:end="79:65">+</operator> <literal type="number" pos:start="79:67" pos:end="79:67">4</literal></expr></else></ternary></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="83:26"><if pos:start="81:13" pos:end="83:26">if <condition pos:start="81:16" pos:end="81:63">(<expr pos:start="81:17" pos:end="81:62"><name pos:start="81:17" pos:end="81:19">src</name> <operator pos:start="81:21" pos:end="81:21">+</operator> <name pos:start="81:23" pos:end="81:26">size</name> <operator pos:start="81:28" pos:end="81:28">&gt;</operator> <name pos:start="81:30" pos:end="81:36">src_end</name> <operator pos:start="81:38" pos:end="81:39">||</operator> <name pos:start="81:41" pos:end="81:44">dest</name> <operator pos:start="81:46" pos:end="81:46">+</operator> <name pos:start="81:48" pos:end="81:51">size</name> <operator pos:start="81:53" pos:end="81:53">&gt;</operator> <name pos:start="81:55" pos:end="81:62">dest_end</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:26"><block_content pos:start="83:17" pos:end="83:26">

                <return pos:start="83:17" pos:end="83:26">return <expr pos:start="83:24" pos:end="83:25"><operator pos:start="83:24" pos:end="83:24">-</operator><literal type="number" pos:start="83:25" pos:end="83:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:52"><expr pos:start="85:13" pos:end="85:51"><call pos:start="85:13" pos:end="85:51"><name pos:start="85:13" pos:end="85:33">bytestream_get_buffer</name><argument_list pos:start="85:34" pos:end="85:51">(<argument pos:start="85:35" pos:end="85:38"><expr pos:start="85:35" pos:end="85:38"><operator pos:start="85:35" pos:end="85:35">&amp;</operator><name pos:start="85:36" pos:end="85:38">src</name></expr></argument>, <argument pos:start="85:41" pos:end="85:44"><expr pos:start="85:41" pos:end="85:44"><name pos:start="85:41" pos:end="85:44">dest</name></expr></argument>, <argument pos:start="85:47" pos:end="85:50"><expr pos:start="85:47" pos:end="85:50"><name pos:start="85:47" pos:end="85:50">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:25"><expr pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:16">dest</name> <operator pos:start="87:18" pos:end="87:19">+=</operator> <name pos:start="87:21" pos:end="87:24">size</name></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="91:22"><if pos:start="89:13" pos:end="91:22">if <condition pos:start="89:16" pos:end="89:23">(<expr pos:start="89:17" pos:end="89:22"><name pos:start="89:17" pos:end="89:22">finish</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:22"><block_content pos:start="91:17" pos:end="91:22">

                <break pos:start="91:17" pos:end="91:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <return pos:start="97:5" pos:end="97:28">return <expr pos:start="97:12" pos:end="97:27"><name pos:start="97:12" pos:end="97:15">dest</name> <operator pos:start="97:17" pos:end="97:17">-</operator> <name pos:start="97:19" pos:end="97:27">orig_dest</name></expr>;</return>

</block_content>}</block></function>
</unit>
