<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1876.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">write_extradata</name><parameter_list pos:start="1:27" pos:end="1:42">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:38">FFV1Context</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="143:1">{<block_content pos:start="5:5" pos:end="141:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:14">RangeCoder</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier><specifier pos:start="5:17" pos:end="5:21">const</specifier></type> <name pos:start="5:23" pos:end="5:23">c</name> <init pos:start="5:25" pos:end="5:31">= <expr pos:start="5:27" pos:end="5:31"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:28">f</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:31">c</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:31"><name pos:start="7:13" pos:end="7:17">state</name><index pos:start="7:18" pos:end="7:31">[<expr pos:start="7:19" pos:end="7:30"><name pos:start="7:19" pos:end="7:30">CONTEXT_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:36"><name pos:start="11:13" pos:end="11:18">state2</name><index pos:start="11:19" pos:end="11:22">[<expr pos:start="11:20" pos:end="11:21"><literal type="number" pos:start="11:20" pos:end="11:21">32</literal></expr>]</index><index pos:start="11:23" pos:end="11:36">[<expr pos:start="11:24" pos:end="11:35"><name pos:start="11:24" pos:end="11:35">CONTEXT_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:14">v</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:40"><expr pos:start="17:5" pos:end="17:39"><call pos:start="17:5" pos:end="17:39"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:39">(<argument pos:start="17:12" pos:end="17:17"><expr pos:start="17:12" pos:end="17:17"><name pos:start="17:12" pos:end="17:17">state2</name></expr></argument>, <argument pos:start="17:20" pos:end="17:22"><expr pos:start="17:20" pos:end="17:22"><literal type="number" pos:start="17:20" pos:end="17:22">128</literal></expr></argument>, <argument pos:start="17:25" pos:end="17:38"><expr pos:start="17:25" pos:end="17:38"><sizeof pos:start="17:25" pos:end="17:38">sizeof<argument_list pos:start="17:31" pos:end="17:38">(<argument pos:start="17:32" pos:end="17:37"><expr pos:start="17:32" pos:end="17:37"><name pos:start="17:32" pos:end="17:37">state2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><call pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:10">memset</name><argument_list pos:start="19:11" pos:end="19:37">(<argument pos:start="19:12" pos:end="19:16"><expr pos:start="19:12" pos:end="19:16"><name pos:start="19:12" pos:end="19:16">state</name></expr></argument>, <argument pos:start="19:19" pos:end="19:21"><expr pos:start="19:19" pos:end="19:21"><literal type="number" pos:start="19:19" pos:end="19:21">128</literal></expr></argument>, <argument pos:start="19:24" pos:end="19:36"><expr pos:start="19:24" pos:end="19:36"><sizeof pos:start="19:24" pos:end="19:36">sizeof<argument_list pos:start="19:30" pos:end="19:36">(<argument pos:start="19:31" pos:end="19:35"><expr pos:start="19:31" pos:end="19:35"><name pos:start="19:31" pos:end="19:35">state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:78"><expr pos:start="23:5" pos:end="25:77"><name pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:5">f</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:12">avctx</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:28">extradata_size</name></name> <operator pos:start="23:30" pos:end="23:30">=</operator> <literal type="number" pos:start="23:32" pos:end="23:38">10000</literal> <operator pos:start="23:38" pos:end="23:38">+</operator> <literal type="number" pos:start="23:40" pos:end="23:42">4</literal> <operator pos:start="23:42" pos:end="23:42">+</operator>

                                    <operator pos:start="25:37" pos:end="25:37">(</operator><literal type="number" pos:start="25:38" pos:end="25:39">11</literal> <operator pos:start="25:41" pos:end="25:41">*</operator> <literal type="number" pos:start="25:43" pos:end="25:44">11</literal> <operator pos:start="25:46" pos:end="25:46">*</operator> <literal type="number" pos:start="25:48" pos:end="25:48">5</literal> <operator pos:start="25:50" pos:end="25:50">*</operator> <literal type="number" pos:start="25:52" pos:end="25:52">5</literal> <operator pos:start="25:54" pos:end="25:54">*</operator> <literal type="number" pos:start="25:56" pos:end="25:58">5</literal> <operator pos:start="25:58" pos:end="25:58">+</operator> <literal type="number" pos:start="25:60" pos:end="25:61">11</literal> <operator pos:start="25:63" pos:end="25:63">*</operator> <literal type="number" pos:start="25:65" pos:end="25:66">11</literal> <operator pos:start="25:68" pos:end="25:68">*</operator> <literal type="number" pos:start="25:70" pos:end="25:71">11</literal><operator pos:start="25:72" pos:end="25:72">)</operator> <operator pos:start="25:74" pos:end="25:74">*</operator> <literal type="number" pos:start="25:76" pos:end="25:77">32</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:62"><expr pos:start="27:5" pos:end="27:61"><name pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:5">f</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:12">avctx</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:23">extradata</name></name> <operator pos:start="27:25" pos:end="27:25">=</operator> <call pos:start="27:27" pos:end="27:61"><name pos:start="27:27" pos:end="27:35">av_malloc</name><argument_list pos:start="27:36" pos:end="27:61">(<argument pos:start="27:37" pos:end="27:60"><expr pos:start="27:37" pos:end="27:60"><name pos:start="27:37" pos:end="27:60"><name pos:start="27:37" pos:end="27:37">f</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:44">avctx</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:60">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:76"><expr pos:start="31:5" pos:end="31:75"><call pos:start="31:5" pos:end="31:75"><name pos:start="31:5" pos:end="31:25">ff_init_range_encoder</name><argument_list pos:start="31:26" pos:end="31:75">(<argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><name pos:start="31:27" pos:end="31:27">c</name></expr></argument>, <argument pos:start="31:30" pos:end="31:48"><expr pos:start="31:30" pos:end="31:48"><name pos:start="31:30" pos:end="31:48"><name pos:start="31:30" pos:end="31:30">f</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:37">avctx</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:48">extradata</name></name></expr></argument>, <argument pos:start="31:51" pos:end="31:74"><expr pos:start="31:51" pos:end="31:74"><name pos:start="31:51" pos:end="31:74"><name pos:start="31:51" pos:end="31:51">f</name><operator pos:start="31:52" pos:end="31:53">-&gt;</operator><name pos:start="31:54" pos:end="31:58">avctx</name><operator pos:start="31:59" pos:end="31:60">-&gt;</operator><name pos:start="31:61" pos:end="31:74">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:56"><expr pos:start="33:5" pos:end="33:55"><call pos:start="33:5" pos:end="33:55"><name pos:start="33:5" pos:end="33:23">ff_build_rac_states</name><argument_list pos:start="33:24" pos:end="33:55">(<argument pos:start="33:25" pos:end="33:25"><expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">c</name></expr></argument>, <argument pos:start="33:28" pos:end="33:45"><expr pos:start="33:28" pos:end="33:45"><literal type="number" pos:start="33:28" pos:end="33:31">0.05</literal> <operator pos:start="33:33" pos:end="33:33">*</operator> <operator pos:start="33:35" pos:end="33:35">(</operator><literal type="number" pos:start="33:36" pos:end="33:38">1LL</literal> <operator pos:start="33:40" pos:end="33:41">&lt;&lt;</operator> <literal type="number" pos:start="33:43" pos:end="33:44">32</literal><operator pos:start="33:45" pos:end="33:45">)</operator></expr></argument>, <argument pos:start="33:48" pos:end="33:54"><expr pos:start="33:48" pos:end="33:54"><literal type="number" pos:start="33:48" pos:end="33:52">256</literal> <operator pos:start="33:52" pos:end="33:52">-</operator> <literal type="number" pos:start="33:54" pos:end="33:54">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><call pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:14">put_symbol</name><argument_list pos:start="37:15" pos:end="37:39">(<argument pos:start="37:16" pos:end="37:16"><expr pos:start="37:16" pos:end="37:16"><name pos:start="37:16" pos:end="37:16">c</name></expr></argument>, <argument pos:start="37:19" pos:end="37:23"><expr pos:start="37:19" pos:end="37:23"><name pos:start="37:19" pos:end="37:23">state</name></expr></argument>, <argument pos:start="37:26" pos:end="37:35"><expr pos:start="37:26" pos:end="37:35"><name pos:start="37:26" pos:end="37:35"><name pos:start="37:26" pos:end="37:26">f</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:35">version</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:38"><expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:23">(<expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:9">f</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:18">version</name></name> <operator pos:start="39:20" pos:end="39:20">&gt;</operator> <literal type="number" pos:start="39:22" pos:end="39:22">2</literal></expr>)</condition> <block pos:start="39:25" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:50">

        <if_stmt pos:start="41:9" pos:end="43:33"><if pos:start="41:9" pos:end="43:33">if <condition pos:start="41:12" pos:end="41:28">(<expr pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:13">f</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:22">version</name></name> <operator pos:start="41:24" pos:end="41:25">==</operator> <literal type="number" pos:start="41:27" pos:end="41:27">3</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:33"><block_content pos:start="43:13" pos:end="43:33">

            <expr_stmt pos:start="43:13" pos:end="43:33"><expr pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:13">f</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:28">minor_version</name></name> <operator pos:start="43:30" pos:end="43:30">=</operator> <literal type="number" pos:start="43:32" pos:end="43:32">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:50"><expr pos:start="45:9" pos:end="45:49"><call pos:start="45:9" pos:end="45:49"><name pos:start="45:9" pos:end="45:18">put_symbol</name><argument_list pos:start="45:19" pos:end="45:49">(<argument pos:start="45:20" pos:end="45:20"><expr pos:start="45:20" pos:end="45:20"><name pos:start="45:20" pos:end="45:20">c</name></expr></argument>, <argument pos:start="45:23" pos:end="45:27"><expr pos:start="45:23" pos:end="45:27"><name pos:start="45:23" pos:end="45:27">state</name></expr></argument>, <argument pos:start="45:30" pos:end="45:45"><expr pos:start="45:30" pos:end="45:45"><name pos:start="45:30" pos:end="45:45"><name pos:start="45:30" pos:end="45:30">f</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:45">minor_version</name></name></expr></argument>, <argument pos:start="45:48" pos:end="45:48"><expr pos:start="45:48" pos:end="45:48"><literal type="number" pos:start="45:48" pos:end="45:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:35"><expr pos:start="51:5" pos:end="51:34"><call pos:start="51:5" pos:end="51:34"><name pos:start="51:5" pos:end="51:14">put_symbol</name><argument_list pos:start="51:15" pos:end="51:34">(<argument pos:start="51:16" pos:end="51:16"><expr pos:start="51:16" pos:end="51:16"><name pos:start="51:16" pos:end="51:16">c</name></expr></argument>, <argument pos:start="51:19" pos:end="51:23"><expr pos:start="51:19" pos:end="51:23"><name pos:start="51:19" pos:end="51:23">state</name></expr></argument>, <argument pos:start="51:26" pos:end="51:30"><expr pos:start="51:26" pos:end="51:30"><name pos:start="51:26" pos:end="51:30"><name pos:start="51:26" pos:end="51:26">f</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:30">ac</name></name></expr></argument>, <argument pos:start="51:33" pos:end="51:33"><expr pos:start="51:33" pos:end="51:33"><literal type="number" pos:start="51:33" pos:end="51:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="57:78"><if pos:start="53:5" pos:end="57:78">if <condition pos:start="53:8" pos:end="53:18">(<expr pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:13"><name pos:start="53:9" pos:end="53:9">f</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:13">ac</name></name> <operator pos:start="53:15" pos:end="53:15">&gt;</operator> <literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="57:78"><block_content pos:start="55:9" pos:end="57:78">

        <for pos:start="55:9" pos:end="57:78">for <control pos:start="55:13" pos:end="55:33">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">1</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:28"><expr pos:start="55:21" pos:end="55:27"><name pos:start="55:21" pos:end="55:21">i</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <literal type="number" pos:start="55:25" pos:end="55:27">256</literal></expr>;</condition> <incr pos:start="55:30" pos:end="55:32"><expr pos:start="55:30" pos:end="55:32"><name pos:start="55:30" pos:end="55:30">i</name><operator pos:start="55:31" pos:end="55:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:13" pos:end="57:78"><block_content pos:start="57:13" pos:end="57:78">

            <expr_stmt pos:start="57:13" pos:end="57:78"><expr pos:start="57:13" pos:end="57:77"><call pos:start="57:13" pos:end="57:77"><name pos:start="57:13" pos:end="57:22">put_symbol</name><argument_list pos:start="57:23" pos:end="57:77">(<argument pos:start="57:24" pos:end="57:24"><expr pos:start="57:24" pos:end="57:24"><name pos:start="57:24" pos:end="57:24">c</name></expr></argument>, <argument pos:start="57:27" pos:end="57:31"><expr pos:start="57:27" pos:end="57:31"><name pos:start="57:27" pos:end="57:31">state</name></expr></argument>, <argument pos:start="57:34" pos:end="57:73"><expr pos:start="57:34" pos:end="57:73"><name pos:start="57:34" pos:end="57:55"><name pos:start="57:34" pos:end="57:34">f</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:52">state_transition</name><index pos:start="57:53" pos:end="57:55">[<expr pos:start="57:54" pos:end="57:54"><name pos:start="57:54" pos:end="57:54">i</name></expr>]</index></name> <operator pos:start="57:57" pos:end="57:57">-</operator> <name pos:start="57:59" pos:end="57:73"><name pos:start="57:59" pos:end="57:59">c</name><operator pos:start="57:60" pos:end="57:61">-&gt;</operator><name pos:start="57:62" pos:end="57:70">one_state</name><index pos:start="57:71" pos:end="57:73">[<expr pos:start="57:72" pos:end="57:72"><name pos:start="57:72" pos:end="57:72">i</name></expr>]</index></name></expr></argument>, <argument pos:start="57:76" pos:end="57:76"><expr pos:start="57:76" pos:end="57:76"><literal type="number" pos:start="57:76" pos:end="57:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:43"><expr pos:start="61:5" pos:end="61:42"><call pos:start="61:5" pos:end="61:42"><name pos:start="61:5" pos:end="61:14">put_symbol</name><argument_list pos:start="61:15" pos:end="61:42">(<argument pos:start="61:16" pos:end="61:16"><expr pos:start="61:16" pos:end="61:16"><name pos:start="61:16" pos:end="61:16">c</name></expr></argument>, <argument pos:start="61:19" pos:end="61:23"><expr pos:start="61:19" pos:end="61:23"><name pos:start="61:19" pos:end="61:23">state</name></expr></argument>, <argument pos:start="61:26" pos:end="61:38"><expr pos:start="61:26" pos:end="61:38"><name pos:start="61:26" pos:end="61:38"><name pos:start="61:26" pos:end="61:26">f</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:38">colorspace</name></name></expr></argument>, <argument pos:start="61:41" pos:end="61:41"><expr pos:start="61:41" pos:end="61:41"><literal type="number" pos:start="61:41" pos:end="61:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="61:45" pos:end="61:58">// YUV cs type</comment>

    <expr_stmt pos:start="63:5" pos:end="63:52"><expr pos:start="63:5" pos:end="63:51"><call pos:start="63:5" pos:end="63:51"><name pos:start="63:5" pos:end="63:14">put_symbol</name><argument_list pos:start="63:15" pos:end="63:51">(<argument pos:start="63:16" pos:end="63:16"><expr pos:start="63:16" pos:end="63:16"><name pos:start="63:16" pos:end="63:16">c</name></expr></argument>, <argument pos:start="63:19" pos:end="63:23"><expr pos:start="63:19" pos:end="63:23"><name pos:start="63:19" pos:end="63:23">state</name></expr></argument>, <argument pos:start="63:26" pos:end="63:47"><expr pos:start="63:26" pos:end="63:47"><name pos:start="63:26" pos:end="63:47"><name pos:start="63:26" pos:end="63:26">f</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:47">bits_per_raw_sample</name></name></expr></argument>, <argument pos:start="63:50" pos:end="63:50"><expr pos:start="63:50" pos:end="63:50"><literal type="number" pos:start="63:50" pos:end="63:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:40"><expr pos:start="65:5" pos:end="65:39"><call pos:start="65:5" pos:end="65:39"><name pos:start="65:5" pos:end="65:11">put_rac</name><argument_list pos:start="65:12" pos:end="65:39">(<argument pos:start="65:13" pos:end="65:13"><expr pos:start="65:13" pos:end="65:13"><name pos:start="65:13" pos:end="65:13">c</name></expr></argument>, <argument pos:start="65:16" pos:end="65:20"><expr pos:start="65:16" pos:end="65:20"><name pos:start="65:16" pos:end="65:20">state</name></expr></argument>, <argument pos:start="65:23" pos:end="65:38"><expr pos:start="65:23" pos:end="65:38"><name pos:start="65:23" pos:end="65:38"><name pos:start="65:23" pos:end="65:23">f</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:38">chroma_planes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:47"><expr pos:start="67:5" pos:end="67:46"><call pos:start="67:5" pos:end="67:46"><name pos:start="67:5" pos:end="67:14">put_symbol</name><argument_list pos:start="67:15" pos:end="67:46">(<argument pos:start="67:16" pos:end="67:16"><expr pos:start="67:16" pos:end="67:16"><name pos:start="67:16" pos:end="67:16">c</name></expr></argument>, <argument pos:start="67:19" pos:end="67:23"><expr pos:start="67:19" pos:end="67:23"><name pos:start="67:19" pos:end="67:23">state</name></expr></argument>, <argument pos:start="67:26" pos:end="67:42"><expr pos:start="67:26" pos:end="67:42"><name pos:start="67:26" pos:end="67:42"><name pos:start="67:26" pos:end="67:26">f</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:42">chroma_h_shift</name></name></expr></argument>, <argument pos:start="67:45" pos:end="67:45"><expr pos:start="67:45" pos:end="67:45"><literal type="number" pos:start="67:45" pos:end="67:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:47"><expr pos:start="69:5" pos:end="69:46"><call pos:start="69:5" pos:end="69:46"><name pos:start="69:5" pos:end="69:14">put_symbol</name><argument_list pos:start="69:15" pos:end="69:46">(<argument pos:start="69:16" pos:end="69:16"><expr pos:start="69:16" pos:end="69:16"><name pos:start="69:16" pos:end="69:16">c</name></expr></argument>, <argument pos:start="69:19" pos:end="69:23"><expr pos:start="69:19" pos:end="69:23"><name pos:start="69:19" pos:end="69:23">state</name></expr></argument>, <argument pos:start="69:26" pos:end="69:42"><expr pos:start="69:26" pos:end="69:42"><name pos:start="69:26" pos:end="69:42"><name pos:start="69:26" pos:end="69:26">f</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:42">chroma_v_shift</name></name></expr></argument>, <argument pos:start="69:45" pos:end="69:45"><expr pos:start="69:45" pos:end="69:45"><literal type="number" pos:start="69:45" pos:end="69:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:39"><expr pos:start="71:5" pos:end="71:38"><call pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:11">put_rac</name><argument_list pos:start="71:12" pos:end="71:38">(<argument pos:start="71:13" pos:end="71:13"><expr pos:start="71:13" pos:end="71:13"><name pos:start="71:13" pos:end="71:13">c</name></expr></argument>, <argument pos:start="71:16" pos:end="71:20"><expr pos:start="71:16" pos:end="71:20"><name pos:start="71:16" pos:end="71:20">state</name></expr></argument>, <argument pos:start="71:23" pos:end="71:37"><expr pos:start="71:23" pos:end="71:37"><name pos:start="71:23" pos:end="71:37"><name pos:start="71:23" pos:end="71:23">f</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:37">transparency</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:49"><expr pos:start="73:5" pos:end="73:48"><call pos:start="73:5" pos:end="73:48"><name pos:start="73:5" pos:end="73:14">put_symbol</name><argument_list pos:start="73:15" pos:end="73:48">(<argument pos:start="73:16" pos:end="73:16"><expr pos:start="73:16" pos:end="73:16"><name pos:start="73:16" pos:end="73:16">c</name></expr></argument>, <argument pos:start="73:19" pos:end="73:23"><expr pos:start="73:19" pos:end="73:23"><name pos:start="73:19" pos:end="73:23">state</name></expr></argument>, <argument pos:start="73:26" pos:end="73:44"><expr pos:start="73:26" pos:end="73:44"><name pos:start="73:26" pos:end="73:40"><name pos:start="73:26" pos:end="73:26">f</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:40">num_h_slices</name></name> <operator pos:start="73:42" pos:end="73:42">-</operator> <literal type="number" pos:start="73:44" pos:end="73:44">1</literal></expr></argument>, <argument pos:start="73:47" pos:end="73:47"><expr pos:start="73:47" pos:end="73:47"><literal type="number" pos:start="73:47" pos:end="73:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:49"><expr pos:start="75:5" pos:end="75:48"><call pos:start="75:5" pos:end="75:48"><name pos:start="75:5" pos:end="75:14">put_symbol</name><argument_list pos:start="75:15" pos:end="75:48">(<argument pos:start="75:16" pos:end="75:16"><expr pos:start="75:16" pos:end="75:16"><name pos:start="75:16" pos:end="75:16">c</name></expr></argument>, <argument pos:start="75:19" pos:end="75:23"><expr pos:start="75:19" pos:end="75:23"><name pos:start="75:19" pos:end="75:23">state</name></expr></argument>, <argument pos:start="75:26" pos:end="75:44"><expr pos:start="75:26" pos:end="75:44"><name pos:start="75:26" pos:end="75:40"><name pos:start="75:26" pos:end="75:26">f</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:40">num_v_slices</name></name> <operator pos:start="75:42" pos:end="75:42">-</operator> <literal type="number" pos:start="75:44" pos:end="75:44">1</literal></expr></argument>, <argument pos:start="75:47" pos:end="75:47"><expr pos:start="75:47" pos:end="75:47"><literal type="number" pos:start="75:47" pos:end="75:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:50"><expr pos:start="79:5" pos:end="79:49"><call pos:start="79:5" pos:end="79:49"><name pos:start="79:5" pos:end="79:14">put_symbol</name><argument_list pos:start="79:15" pos:end="79:49">(<argument pos:start="79:16" pos:end="79:16"><expr pos:start="79:16" pos:end="79:16"><name pos:start="79:16" pos:end="79:16">c</name></expr></argument>, <argument pos:start="79:19" pos:end="79:23"><expr pos:start="79:19" pos:end="79:23"><name pos:start="79:19" pos:end="79:23">state</name></expr></argument>, <argument pos:start="79:26" pos:end="79:45"><expr pos:start="79:26" pos:end="79:45"><name pos:start="79:26" pos:end="79:45"><name pos:start="79:26" pos:end="79:26">f</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:45">quant_table_count</name></name></expr></argument>, <argument pos:start="79:48" pos:end="79:48"><expr pos:start="79:48" pos:end="79:48"><literal type="number" pos:start="79:48" pos:end="79:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="81:5" pos:end="83:50">for <control pos:start="81:9" pos:end="81:46">(<init pos:start="81:10" pos:end="81:15"><expr pos:start="81:10" pos:end="81:14"><name pos:start="81:10" pos:end="81:10">i</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>;</init> <condition pos:start="81:17" pos:end="81:41"><expr pos:start="81:17" pos:end="81:40"><name pos:start="81:17" pos:end="81:17">i</name> <operator pos:start="81:19" pos:end="81:19">&lt;</operator> <name pos:start="81:21" pos:end="81:40"><name pos:start="81:21" pos:end="81:21">f</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:40">quant_table_count</name></name></expr>;</condition> <incr pos:start="81:43" pos:end="81:45"><expr pos:start="81:43" pos:end="81:45"><name pos:start="81:43" pos:end="81:43">i</name><operator pos:start="81:44" pos:end="81:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="83:9" pos:end="83:50"><block_content pos:start="83:9" pos:end="83:50">

        <expr_stmt pos:start="83:9" pos:end="83:50"><expr pos:start="83:9" pos:end="83:49"><call pos:start="83:9" pos:end="83:49"><name pos:start="83:9" pos:end="83:26">write_quant_tables</name><argument_list pos:start="83:27" pos:end="83:49">(<argument pos:start="83:28" pos:end="83:28"><expr pos:start="83:28" pos:end="83:28"><name pos:start="83:28" pos:end="83:28">c</name></expr></argument>, <argument pos:start="83:31" pos:end="83:48"><expr pos:start="83:31" pos:end="83:48"><name pos:start="83:31" pos:end="83:48"><name pos:start="83:31" pos:end="83:31">f</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:45">quant_tables</name><index pos:start="83:46" pos:end="83:48">[<expr pos:start="83:47" pos:end="83:47"><name pos:start="83:47" pos:end="83:47">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="87:5" pos:end="117:5">for <control pos:start="87:9" pos:end="87:46">(<init pos:start="87:10" pos:end="87:15"><expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:10">i</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr>;</init> <condition pos:start="87:17" pos:end="87:41"><expr pos:start="87:17" pos:end="87:40"><name pos:start="87:17" pos:end="87:17">i</name> <operator pos:start="87:19" pos:end="87:19">&lt;</operator> <name pos:start="87:21" pos:end="87:40"><name pos:start="87:21" pos:end="87:21">f</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:40">quant_table_count</name></name></expr>;</condition> <incr pos:start="87:43" pos:end="87:45"><expr pos:start="87:43" pos:end="87:45"><name pos:start="87:43" pos:end="87:43">i</name><operator pos:start="87:44" pos:end="87:45">++</operator></expr></incr>)</control> <block pos:start="87:48" pos:end="117:5">{<block_content pos:start="89:9" pos:end="115:9">

        <for pos:start="89:9" pos:end="93:22">for <control pos:start="89:13" pos:end="89:64">(<init pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">j</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">0</literal></expr>;</init> <condition pos:start="89:21" pos:end="89:59"><expr pos:start="89:21" pos:end="89:58"><name pos:start="89:21" pos:end="89:21">j</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <name pos:start="89:25" pos:end="89:43"><name pos:start="89:25" pos:end="89:25">f</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:40">context_count</name><index pos:start="89:41" pos:end="89:43">[<expr pos:start="89:42" pos:end="89:42"><name pos:start="89:42" pos:end="89:42">i</name></expr>]</index></name> <operator pos:start="89:45" pos:end="89:45">*</operator> <name pos:start="89:47" pos:end="89:58">CONTEXT_SIZE</name></expr>;</condition> <incr pos:start="89:61" pos:end="89:63"><expr pos:start="89:61" pos:end="89:63"><name pos:start="89:61" pos:end="89:61">j</name><operator pos:start="89:62" pos:end="89:63">++</operator></expr></incr>)</control><block type="pseudo" pos:start="91:13" pos:end="93:22"><block_content pos:start="91:13" pos:end="93:22">

            <if_stmt pos:start="91:13" pos:end="93:22"><if pos:start="91:13" pos:end="93:22">if <condition pos:start="91:16" pos:end="91:74">(<expr pos:start="91:17" pos:end="91:73"><name pos:start="91:17" pos:end="91:36"><name pos:start="91:17" pos:end="91:17">f</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:33">initial_states</name><index pos:start="91:34" pos:end="91:36">[<expr pos:start="91:35" pos:end="91:35"><name pos:start="91:35" pos:end="91:35">i</name></expr>]</index></name> <operator pos:start="91:38" pos:end="91:39">&amp;&amp;</operator> <name pos:start="91:41" pos:end="91:66"><name pos:start="91:41" pos:end="91:41">f</name><operator pos:start="91:42" pos:end="91:43">-&gt;</operator><name pos:start="91:44" pos:end="91:57">initial_states</name><index pos:start="91:58" pos:end="91:60">[<expr pos:start="91:59" pos:end="91:59"><name pos:start="91:59" pos:end="91:59">i</name></expr>]</index><index pos:start="91:61" pos:end="91:63">[<expr pos:start="91:62" pos:end="91:62"><literal type="number" pos:start="91:62" pos:end="91:62">0</literal></expr>]</index><index pos:start="91:64" pos:end="91:66">[<expr pos:start="91:65" pos:end="91:65"><name pos:start="91:65" pos:end="91:65">j</name></expr>]</index></name> <operator pos:start="91:68" pos:end="91:69">!=</operator> <literal type="number" pos:start="91:71" pos:end="91:73">128</literal></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:22"><block_content pos:start="93:17" pos:end="93:22">

                <break pos:start="93:17" pos:end="93:22">break;</break></block_content></block></if></if_stmt></block_content></block></for>

        <if_stmt pos:start="95:9" pos:end="115:9"><if pos:start="95:9" pos:end="111:9">if <condition pos:start="95:12" pos:end="95:51">(<expr pos:start="95:13" pos:end="95:50"><name pos:start="95:13" pos:end="95:13">j</name> <operator pos:start="95:15" pos:end="95:15">&lt;</operator> <name pos:start="95:17" pos:end="95:35"><name pos:start="95:17" pos:end="95:17">f</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:32">context_count</name><index pos:start="95:33" pos:end="95:35">[<expr pos:start="95:34" pos:end="95:34"><name pos:start="95:34" pos:end="95:34">i</name></expr>]</index></name> <operator pos:start="95:37" pos:end="95:37">*</operator> <name pos:start="95:39" pos:end="95:50">CONTEXT_SIZE</name></expr>)</condition> <block pos:start="95:53" pos:end="111:9">{<block_content pos:start="97:13" pos:end="109:17">

            <expr_stmt pos:start="97:13" pos:end="97:33"><expr pos:start="97:13" pos:end="97:32"><call pos:start="97:13" pos:end="97:32"><name pos:start="97:13" pos:end="97:19">put_rac</name><argument_list pos:start="97:20" pos:end="97:32">(<argument pos:start="97:21" pos:end="97:21"><expr pos:start="97:21" pos:end="97:21"><name pos:start="97:21" pos:end="97:21">c</name></expr></argument>, <argument pos:start="97:24" pos:end="97:28"><expr pos:start="97:24" pos:end="97:28"><name pos:start="97:24" pos:end="97:28">state</name></expr></argument>, <argument pos:start="97:31" pos:end="97:31"><expr pos:start="97:31" pos:end="97:31"><literal type="number" pos:start="97:31" pos:end="97:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="99:13" pos:end="109:17">for <control pos:start="99:17" pos:end="99:53">(<init pos:start="99:18" pos:end="99:23"><expr pos:start="99:18" pos:end="99:22"><name pos:start="99:18" pos:end="99:18">j</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>;</init> <condition pos:start="99:25" pos:end="99:48"><expr pos:start="99:25" pos:end="99:47"><name pos:start="99:25" pos:end="99:25">j</name> <operator pos:start="99:27" pos:end="99:27">&lt;</operator> <name pos:start="99:29" pos:end="99:47"><name pos:start="99:29" pos:end="99:29">f</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:44">context_count</name><index pos:start="99:45" pos:end="99:47">[<expr pos:start="99:46" pos:end="99:46"><name pos:start="99:46" pos:end="99:46">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="99:50" pos:end="99:52"><expr pos:start="99:50" pos:end="99:52"><name pos:start="99:50" pos:end="99:50">j</name><operator pos:start="99:51" pos:end="99:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="101:17" pos:end="109:17"><block_content pos:start="101:17" pos:end="109:17">

                <for pos:start="101:17" pos:end="109:17">for <control pos:start="101:21" pos:end="101:50">(<init pos:start="101:22" pos:end="101:27"><expr pos:start="101:22" pos:end="101:26"><name pos:start="101:22" pos:end="101:22">k</name> <operator pos:start="101:24" pos:end="101:24">=</operator> <literal type="number" pos:start="101:26" pos:end="101:26">0</literal></expr>;</init> <condition pos:start="101:29" pos:end="101:45"><expr pos:start="101:29" pos:end="101:44"><name pos:start="101:29" pos:end="101:29">k</name> <operator pos:start="101:31" pos:end="101:31">&lt;</operator> <name pos:start="101:33" pos:end="101:44">CONTEXT_SIZE</name></expr>;</condition> <incr pos:start="101:47" pos:end="101:49"><expr pos:start="101:47" pos:end="101:49"><name pos:start="101:47" pos:end="101:47">k</name><operator pos:start="101:48" pos:end="101:49">++</operator></expr></incr>)</control> <block pos:start="101:52" pos:end="109:17">{<block_content pos:start="103:21" pos:end="107:79">

                    <decl_stmt pos:start="103:21" pos:end="103:72"><decl pos:start="103:21" pos:end="103:71"><type pos:start="103:21" pos:end="103:23"><name pos:start="103:21" pos:end="103:23">int</name></type> <name pos:start="103:25" pos:end="103:28">pred</name> <init pos:start="103:30" pos:end="103:71">= <expr pos:start="103:32" pos:end="103:71"><ternary pos:start="103:32" pos:end="103:71"><condition pos:start="103:32" pos:end="103:34"><expr pos:start="103:32" pos:end="103:32"><name pos:start="103:32" pos:end="103:32">j</name></expr> ?</condition><then pos:start="103:36" pos:end="103:65"> <expr pos:start="103:36" pos:end="103:65"><name pos:start="103:36" pos:end="103:65"><name pos:start="103:36" pos:end="103:36">f</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:52">initial_states</name><index pos:start="103:53" pos:end="103:55">[<expr pos:start="103:54" pos:end="103:54"><name pos:start="103:54" pos:end="103:54">i</name></expr>]</index><index pos:start="103:56" pos:end="103:62">[<expr pos:start="103:57" pos:end="103:61"><name pos:start="103:57" pos:end="103:57">j</name> <operator pos:start="103:59" pos:end="103:59">-</operator> <literal type="number" pos:start="103:61" pos:end="103:61">1</literal></expr>]</index><index pos:start="103:63" pos:end="103:65">[<expr pos:start="103:64" pos:end="103:64"><name pos:start="103:64" pos:end="103:64">k</name></expr>]</index></name></expr> </then><else pos:start="103:67" pos:end="103:71">: <expr pos:start="103:69" pos:end="103:71"><literal type="number" pos:start="103:69" pos:end="103:71">128</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="105:21" pos:end="107:79"><expr pos:start="105:21" pos:end="107:78"><call pos:start="105:21" pos:end="107:78"><name pos:start="105:21" pos:end="105:30">put_symbol</name><argument_list pos:start="105:31" pos:end="107:78">(<argument pos:start="105:32" pos:end="105:32"><expr pos:start="105:32" pos:end="105:32"><name pos:start="105:32" pos:end="105:32">c</name></expr></argument>, <argument pos:start="105:35" pos:end="105:43"><expr pos:start="105:35" pos:end="105:43"><name pos:start="105:35" pos:end="105:43"><name pos:start="105:35" pos:end="105:40">state2</name><index pos:start="105:41" pos:end="105:43">[<expr pos:start="105:42" pos:end="105:42"><name pos:start="105:42" pos:end="105:42">k</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="107:32" pos:end="107:74"><expr pos:start="107:32" pos:end="107:74"><operator pos:start="107:32" pos:end="107:32">(</operator><name pos:start="107:33" pos:end="107:38">int8_t</name><operator pos:start="107:39" pos:end="107:39">)</operator><operator pos:start="107:40" pos:end="107:40">(</operator><name pos:start="107:41" pos:end="107:66"><name pos:start="107:41" pos:end="107:41">f</name><operator pos:start="107:42" pos:end="107:43">-&gt;</operator><name pos:start="107:44" pos:end="107:57">initial_states</name><index pos:start="107:58" pos:end="107:60">[<expr pos:start="107:59" pos:end="107:59"><name pos:start="107:59" pos:end="107:59">i</name></expr>]</index><index pos:start="107:61" pos:end="107:63">[<expr pos:start="107:62" pos:end="107:62"><name pos:start="107:62" pos:end="107:62">j</name></expr>]</index><index pos:start="107:64" pos:end="107:66">[<expr pos:start="107:65" pos:end="107:65"><name pos:start="107:65" pos:end="107:65">k</name></expr>]</index></name> <operator pos:start="107:68" pos:end="107:68">-</operator> <name pos:start="107:70" pos:end="107:73">pred</name><operator pos:start="107:74" pos:end="107:74">)</operator></expr></argument>, <argument pos:start="107:77" pos:end="107:77"><expr pos:start="107:77" pos:end="107:77"><literal type="number" pos:start="107:77" pos:end="107:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for></block_content></block></for>

        </block_content>}</block></if> <else pos:start="111:11" pos:end="115:9">else <block pos:start="111:16" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:33">

            <expr_stmt pos:start="113:13" pos:end="113:33"><expr pos:start="113:13" pos:end="113:32"><call pos:start="113:13" pos:end="113:32"><name pos:start="113:13" pos:end="113:19">put_rac</name><argument_list pos:start="113:20" pos:end="113:32">(<argument pos:start="113:21" pos:end="113:21"><expr pos:start="113:21" pos:end="113:21"><name pos:start="113:21" pos:end="113:21">c</name></expr></argument>, <argument pos:start="113:24" pos:end="113:28"><expr pos:start="113:24" pos:end="113:28"><name pos:start="113:24" pos:end="113:28">state</name></expr></argument>, <argument pos:start="113:31" pos:end="113:31"><expr pos:start="113:31" pos:end="113:31"><literal type="number" pos:start="113:31" pos:end="113:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="121:5" pos:end="127:5"><if pos:start="121:5" pos:end="127:5">if <condition pos:start="121:8" pos:end="121:23">(<expr pos:start="121:9" pos:end="121:22"><name pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:9">f</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:18">version</name></name> <operator pos:start="121:20" pos:end="121:20">&gt;</operator> <literal type="number" pos:start="121:22" pos:end="121:22">2</literal></expr>)</condition> <block pos:start="121:25" pos:end="127:5">{<block_content pos:start="123:9" pos:end="125:69">

        <expr_stmt pos:start="123:9" pos:end="123:39"><expr pos:start="123:9" pos:end="123:38"><call pos:start="123:9" pos:end="123:38"><name pos:start="123:9" pos:end="123:18">put_symbol</name><argument_list pos:start="123:19" pos:end="123:38">(<argument pos:start="123:20" pos:end="123:20"><expr pos:start="123:20" pos:end="123:20"><name pos:start="123:20" pos:end="123:20">c</name></expr></argument>, <argument pos:start="123:23" pos:end="123:27"><expr pos:start="123:23" pos:end="123:27"><name pos:start="123:23" pos:end="123:27">state</name></expr></argument>, <argument pos:start="123:30" pos:end="123:34"><expr pos:start="123:30" pos:end="123:34"><name pos:start="123:30" pos:end="123:34"><name pos:start="123:30" pos:end="123:30">f</name><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:34">ec</name></name></expr></argument>, <argument pos:start="123:37" pos:end="123:37"><expr pos:start="123:37" pos:end="123:37"><literal type="number" pos:start="123:37" pos:end="123:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:69"><expr pos:start="125:9" pos:end="125:68"><call pos:start="125:9" pos:end="125:68"><name pos:start="125:9" pos:end="125:18">put_symbol</name><argument_list pos:start="125:19" pos:end="125:68">(<argument pos:start="125:20" pos:end="125:20"><expr pos:start="125:20" pos:end="125:20"><name pos:start="125:20" pos:end="125:20">c</name></expr></argument>, <argument pos:start="125:23" pos:end="125:27"><expr pos:start="125:23" pos:end="125:27"><name pos:start="125:23" pos:end="125:27">state</name></expr></argument>, <argument pos:start="125:30" pos:end="125:64"><expr pos:start="125:30" pos:end="125:64"><name pos:start="125:30" pos:end="125:37"><name pos:start="125:30" pos:end="125:30">f</name><operator pos:start="125:31" pos:end="125:32">-&gt;</operator><name pos:start="125:33" pos:end="125:37">intra</name></name> <operator pos:start="125:39" pos:end="125:39">=</operator> <operator pos:start="125:41" pos:end="125:41">(</operator><name pos:start="125:42" pos:end="125:59"><name pos:start="125:42" pos:end="125:42">f</name><operator pos:start="125:43" pos:end="125:44">-&gt;</operator><name pos:start="125:45" pos:end="125:49">avctx</name><operator pos:start="125:50" pos:end="125:51">-&gt;</operator><name pos:start="125:52" pos:end="125:59">gop_size</name></name> <operator pos:start="125:61" pos:end="125:61">&lt;</operator> <literal type="number" pos:start="125:63" pos:end="125:63">2</literal><operator pos:start="125:64" pos:end="125:64">)</operator></expr></argument>, <argument pos:start="125:67" pos:end="125:67"><expr pos:start="125:67" pos:end="125:67"><literal type="number" pos:start="125:67" pos:end="125:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:51"><expr pos:start="131:5" pos:end="131:50"><name pos:start="131:5" pos:end="131:28"><name pos:start="131:5" pos:end="131:5">f</name><operator pos:start="131:6" pos:end="131:7">-&gt;</operator><name pos:start="131:8" pos:end="131:12">avctx</name><operator pos:start="131:13" pos:end="131:14">-&gt;</operator><name pos:start="131:15" pos:end="131:28">extradata_size</name></name> <operator pos:start="131:30" pos:end="131:30">=</operator> <call pos:start="131:32" pos:end="131:50"><name pos:start="131:32" pos:end="131:47">ff_rac_terminate</name><argument_list pos:start="131:48" pos:end="131:50">(<argument pos:start="131:49" pos:end="131:49"><expr pos:start="131:49" pos:end="131:49"><name pos:start="131:49" pos:end="131:49">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:99"><expr pos:start="133:5" pos:end="133:98"><name pos:start="133:5" pos:end="133:5">v</name> <operator pos:start="133:7" pos:end="133:7">=</operator> <call pos:start="133:9" pos:end="133:98"><name pos:start="133:9" pos:end="133:14">av_crc</name><argument_list pos:start="133:15" pos:end="133:98">(<argument pos:start="133:16" pos:end="133:47"><expr pos:start="133:16" pos:end="133:47"><call pos:start="133:16" pos:end="133:47"><name pos:start="133:16" pos:end="133:31">av_crc_get_table</name><argument_list pos:start="133:32" pos:end="133:47">(<argument pos:start="133:33" pos:end="133:46"><expr pos:start="133:33" pos:end="133:46"><name pos:start="133:33" pos:end="133:46">AV_CRC_32_IEEE</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="133:50" pos:end="133:50"><expr pos:start="133:50" pos:end="133:50"><literal type="number" pos:start="133:50" pos:end="133:50">0</literal></expr></argument>, <argument pos:start="133:53" pos:end="133:71"><expr pos:start="133:53" pos:end="133:71"><name pos:start="133:53" pos:end="133:71"><name pos:start="133:53" pos:end="133:53">f</name><operator pos:start="133:54" pos:end="133:55">-&gt;</operator><name pos:start="133:56" pos:end="133:60">avctx</name><operator pos:start="133:61" pos:end="133:62">-&gt;</operator><name pos:start="133:63" pos:end="133:71">extradata</name></name></expr></argument>, <argument pos:start="133:74" pos:end="133:97"><expr pos:start="133:74" pos:end="133:97"><name pos:start="133:74" pos:end="133:97"><name pos:start="133:74" pos:end="133:74">f</name><operator pos:start="133:75" pos:end="133:76">-&gt;</operator><name pos:start="133:77" pos:end="133:81">avctx</name><operator pos:start="133:82" pos:end="133:83">-&gt;</operator><name pos:start="133:84" pos:end="133:97">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:63"><expr pos:start="135:5" pos:end="135:62"><call pos:start="135:5" pos:end="135:62"><name pos:start="135:5" pos:end="135:11">AV_WL32</name><argument_list pos:start="135:12" pos:end="135:62">(<argument pos:start="135:13" pos:end="135:58"><expr pos:start="135:13" pos:end="135:58"><name pos:start="135:13" pos:end="135:31"><name pos:start="135:13" pos:end="135:13">f</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:20">avctx</name><operator pos:start="135:21" pos:end="135:22">-&gt;</operator><name pos:start="135:23" pos:end="135:31">extradata</name></name> <operator pos:start="135:33" pos:end="135:33">+</operator> <name pos:start="135:35" pos:end="135:58"><name pos:start="135:35" pos:end="135:35">f</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:42">avctx</name><operator pos:start="135:43" pos:end="135:44">-&gt;</operator><name pos:start="135:45" pos:end="135:58">extradata_size</name></name></expr></argument>, <argument pos:start="135:61" pos:end="135:61"><expr pos:start="135:61" pos:end="135:61"><name pos:start="135:61" pos:end="135:61">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:34"><expr pos:start="137:5" pos:end="137:33"><name pos:start="137:5" pos:end="137:28"><name pos:start="137:5" pos:end="137:5">f</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:12">avctx</name><operator pos:start="137:13" pos:end="137:14">-&gt;</operator><name pos:start="137:15" pos:end="137:28">extradata_size</name></name> <operator pos:start="137:30" pos:end="137:31">+=</operator> <literal type="number" pos:start="137:33" pos:end="137:33">4</literal></expr>;</expr_stmt>



    <return pos:start="141:5" pos:end="141:13">return <expr pos:start="141:12" pos:end="141:12"><literal type="number" pos:start="141:12" pos:end="141:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
