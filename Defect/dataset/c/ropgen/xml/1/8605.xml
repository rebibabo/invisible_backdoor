<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8605.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">unix_close</name><parameter_list pos:start="1:22" pos:end="1:40">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:36">MigrationState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:13">

    <expr_stmt pos:start="5:5" pos:end="5:28"><expr pos:start="5:5" pos:end="5:27"><call pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:11">DPRINTF</name><argument_list pos:start="5:12" pos:end="5:27">(<argument pos:start="5:13" pos:end="5:26"><expr pos:start="5:13" pos:end="5:26"><literal type="string" pos:start="5:13" pos:end="5:26">"unix_close\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="7:5" pos:end="13:5"><if pos:start="7:5" pos:end="13:5">if <condition pos:start="7:8" pos:end="7:20">(<expr pos:start="7:9" pos:end="7:19"><name pos:start="7:9" pos:end="7:13"><name pos:start="7:9" pos:end="7:9">s</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:13">fd</name></name> <operator pos:start="7:15" pos:end="7:16">!=</operator> <operator pos:start="7:18" pos:end="7:18">-</operator><literal type="number" pos:start="7:19" pos:end="7:19">1</literal></expr>)</condition> <block pos:start="7:22" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:19">

        <expr_stmt pos:start="9:9" pos:end="9:21"><expr pos:start="9:9" pos:end="9:20"><call pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:13">close</name><argument_list pos:start="9:14" pos:end="9:20">(<argument pos:start="9:15" pos:end="9:19"><expr pos:start="9:15" pos:end="9:19"><name pos:start="9:15" pos:end="9:19"><name pos:start="9:15" pos:end="9:15">s</name><operator pos:start="9:16" pos:end="9:17">-&gt;</operator><name pos:start="9:18" pos:end="9:19">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:19"><expr pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:13"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:13">fd</name></name> <operator pos:start="11:15" pos:end="11:15">=</operator> <operator pos:start="11:17" pos:end="11:17">-</operator><literal type="number" pos:start="11:18" pos:end="11:18">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="15:5" pos:end="15:13">return <expr pos:start="15:12" pos:end="15:12"><literal type="number" pos:start="15:12" pos:end="15:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
