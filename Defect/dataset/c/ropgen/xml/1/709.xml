<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/709.c" pos:tabs="8"><function pos:start="1:1" pos:end="321:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">http_server</name><parameter_list pos:start="1:23" pos:end="1:50">(<parameter pos:start="1:24" pos:end="1:49"><decl pos:start="1:24" pos:end="1:49"><type pos:start="1:24" pos:end="1:49"><name pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:29">struct</name> <name pos:start="1:31" pos:end="1:41">sockaddr_in</name></name></type> <name pos:start="1:43" pos:end="1:49">my_addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="321:1">{<block_content pos:start="5:5" pos:end="319:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">server_fd</name></decl>, <decl pos:start="5:20" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:22">tmp</name></decl>, <decl pos:start="5:25" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:25" pos:end="5:27">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">sockaddr_in</name></name></type> <name pos:start="7:24" pos:end="7:32">from_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:68"><decl pos:start="9:5" pos:end="9:54"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:17">pollfd</name></name></type> <name pos:start="9:19" pos:end="9:54"><name pos:start="9:19" pos:end="9:28">poll_table</name><index pos:start="9:29" pos:end="9:54">[<expr pos:start="9:30" pos:end="9:53"><name pos:start="9:30" pos:end="9:49">HTTP_MAX_CONNECTIONS</name> <operator pos:start="9:51" pos:end="9:51">+</operator> <literal type="number" pos:start="9:53" pos:end="9:53">1</literal></expr>]</index></name></decl>, <decl pos:start="9:57" pos:end="9:67"><type ref="prev" pos:start="9:5" pos:end="9:17"><modifier pos:start="9:57" pos:end="9:57">*</modifier></type><name pos:start="9:58" pos:end="9:67">poll_entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">HTTPContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">c</name></decl>, <decl pos:start="11:21" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:17"><modifier pos:start="11:21" pos:end="11:21">*</modifier><modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:24">cp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">long</name></type> <name pos:start="13:10" pos:end="13:17">cur_time</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:13">server_fd</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:45"><name pos:start="17:17" pos:end="17:22">socket</name><argument_list pos:start="17:23" pos:end="17:45">(<argument pos:start="17:24" pos:end="17:30"><expr pos:start="17:24" pos:end="17:30"><name pos:start="17:24" pos:end="17:30">AF_INET</name></expr></argument>,<argument pos:start="17:32" pos:end="17:42"><expr pos:start="17:32" pos:end="17:42"><name pos:start="17:32" pos:end="17:42">SOCK_STREAM</name></expr></argument>,<argument pos:start="17:44" pos:end="17:44"><expr pos:start="17:44" pos:end="17:44"><literal type="number" pos:start="17:44" pos:end="17:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:17">server_fd</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>)</condition> <block pos:start="19:24" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><call pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:14">perror</name> <argument_list pos:start="21:16" pos:end="21:25">(<argument pos:start="21:17" pos:end="21:24"><expr pos:start="21:17" pos:end="21:24"><literal type="string" pos:start="21:17" pos:end="21:24">"socket"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

        

    <expr_stmt pos:start="29:5" pos:end="29:12"><expr pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:7">tmp</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <literal type="number" pos:start="29:11" pos:end="29:11">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:71"><expr pos:start="31:5" pos:end="31:70"><call pos:start="31:5" pos:end="31:70"><name pos:start="31:5" pos:end="31:14">setsockopt</name><argument_list pos:start="31:15" pos:end="31:70">(<argument pos:start="31:16" pos:end="31:24"><expr pos:start="31:16" pos:end="31:24"><name pos:start="31:16" pos:end="31:24">server_fd</name></expr></argument>, <argument pos:start="31:27" pos:end="31:36"><expr pos:start="31:27" pos:end="31:36"><name pos:start="31:27" pos:end="31:36">SOL_SOCKET</name></expr></argument>, <argument pos:start="31:39" pos:end="31:50"><expr pos:start="31:39" pos:end="31:50"><name pos:start="31:39" pos:end="31:50">SO_REUSEADDR</name></expr></argument>, <argument pos:start="31:53" pos:end="31:56"><expr pos:start="31:53" pos:end="31:56"><operator pos:start="31:53" pos:end="31:53">&amp;</operator><name pos:start="31:54" pos:end="31:56">tmp</name></expr></argument>, <argument pos:start="31:59" pos:end="31:69"><expr pos:start="31:59" pos:end="31:69"><sizeof pos:start="31:59" pos:end="31:69">sizeof<argument_list pos:start="31:65" pos:end="31:69">(<argument pos:start="31:66" pos:end="31:68"><expr pos:start="31:66" pos:end="31:68"><name pos:start="31:66" pos:end="31:68">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:77">(<expr pos:start="35:9" pos:end="35:76"><call pos:start="35:9" pos:end="35:72"><name pos:start="35:9" pos:end="35:12">bind</name> <argument_list pos:start="35:14" pos:end="35:72">(<argument pos:start="35:15" pos:end="35:23"><expr pos:start="35:15" pos:end="35:23"><name pos:start="35:15" pos:end="35:23">server_fd</name></expr></argument>, <argument pos:start="35:26" pos:end="35:53"><expr pos:start="35:26" pos:end="35:53"><operator pos:start="35:26" pos:end="35:26">(</operator>struct <name pos:start="35:34" pos:end="35:41">sockaddr</name> <operator pos:start="35:43" pos:end="35:43">*</operator><operator pos:start="35:44" pos:end="35:44">)</operator> <operator pos:start="35:46" pos:end="35:46">&amp;</operator><name pos:start="35:47" pos:end="35:53">my_addr</name></expr></argument>, <argument pos:start="35:56" pos:end="35:71"><expr pos:start="35:56" pos:end="35:71"><sizeof pos:start="35:56" pos:end="35:71">sizeof <argument_list pos:start="35:63" pos:end="35:71">(<argument pos:start="35:64" pos:end="35:70"><expr pos:start="35:64" pos:end="35:70"><name pos:start="35:64" pos:end="35:70">my_addr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="35:74" pos:end="35:74">&lt;</operator> <literal type="number" pos:start="35:76" pos:end="35:76">0</literal></expr>)</condition> <block pos:start="35:79" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:18">

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><call pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:14">perror</name> <argument_list pos:start="37:16" pos:end="37:23">(<argument pos:start="37:17" pos:end="37:22"><expr pos:start="37:17" pos:end="37:22"><literal type="string" pos:start="37:17" pos:end="37:22">"bind"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:25"><expr pos:start="39:9" pos:end="39:24"><call pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:13">close</name><argument_list pos:start="39:14" pos:end="39:24">(<argument pos:start="39:15" pos:end="39:23"><expr pos:start="39:15" pos:end="39:23"><name pos:start="39:15" pos:end="39:23">server_fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

  

    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:34">(<expr pos:start="47:9" pos:end="47:33"><call pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:14">listen</name> <argument_list pos:start="47:16" pos:end="47:29">(<argument pos:start="47:17" pos:end="47:25"><expr pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:25">server_fd</name></expr></argument>, <argument pos:start="47:28" pos:end="47:28"><expr pos:start="47:28" pos:end="47:28"><literal type="number" pos:start="47:28" pos:end="47:28">5</literal></expr></argument>)</argument_list></call> <operator pos:start="47:31" pos:end="47:31">&lt;</operator> <literal type="number" pos:start="47:33" pos:end="47:33">0</literal></expr>)</condition> <block pos:start="47:36" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:18">

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><call pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:14">perror</name> <argument_list pos:start="49:16" pos:end="49:25">(<argument pos:start="49:17" pos:end="49:24"><expr pos:start="49:17" pos:end="49:24"><literal type="string" pos:start="49:17" pos:end="49:24">"listen"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:25"><expr pos:start="51:9" pos:end="51:24"><call pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:13">close</name><argument_list pos:start="51:14" pos:end="51:24">(<argument pos:start="51:15" pos:end="51:23"><expr pos:start="51:15" pos:end="51:23"><name pos:start="51:15" pos:end="51:23">server_fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><call pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:12">http_log</name><argument_list pos:start="59:13" pos:end="59:35">(<argument pos:start="59:14" pos:end="59:34"><expr pos:start="59:14" pos:end="59:34"><literal type="string" pos:start="59:14" pos:end="59:34">"ffserver started.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><call pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:18">start_children</name><argument_list pos:start="63:19" pos:end="63:30">(<argument pos:start="63:20" pos:end="63:29"><expr pos:start="63:20" pos:end="63:29"><name pos:start="63:20" pos:end="63:29">first_feed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:42"><expr pos:start="67:5" pos:end="67:41"><call pos:start="67:5" pos:end="67:41"><name pos:start="67:5" pos:end="67:9">fcntl</name><argument_list pos:start="67:10" pos:end="67:41">(<argument pos:start="67:11" pos:end="67:19"><expr pos:start="67:11" pos:end="67:19"><name pos:start="67:11" pos:end="67:19">server_fd</name></expr></argument>, <argument pos:start="67:22" pos:end="67:28"><expr pos:start="67:22" pos:end="67:28"><name pos:start="67:22" pos:end="67:28">F_SETFL</name></expr></argument>, <argument pos:start="67:31" pos:end="67:40"><expr pos:start="67:31" pos:end="67:40"><name pos:start="67:31" pos:end="67:40">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:26"><expr pos:start="69:5" pos:end="69:25"><name pos:start="69:5" pos:end="69:18">first_http_ctx</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:23"><expr pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:18">nb_connections</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:26"><expr pos:start="73:5" pos:end="73:25"><name pos:start="73:5" pos:end="73:18">first_http_ctx</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <name pos:start="73:22" pos:end="73:25">NULL</name></expr>;</expr_stmt>

    <for pos:start="75:5" pos:end="319:5">for<control pos:start="75:8" pos:end="75:11">(<init pos:start="75:9" pos:end="75:9">;</init><condition pos:start="75:10" pos:end="75:10">;</condition><incr/>)</control> <block pos:start="75:13" pos:end="319:5">{<block_content pos:start="77:9" pos:end="317:21">

        <expr_stmt pos:start="77:9" pos:end="77:32"><expr pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:18">poll_entry</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:31">poll_table</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:35"><expr pos:start="79:9" pos:end="79:34"><name pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:18">poll_entry</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:22">fd</name></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:34">server_fd</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:36"><expr pos:start="81:9" pos:end="81:35"><name pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:18">poll_entry</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:26">events</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:35">POLLIN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:21"><expr pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:18">poll_entry</name><operator pos:start="83:19" pos:end="83:20">++</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="87:9" pos:end="87:49">/* wait for events on each HTTP handle */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:27"><expr pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:9">c</name> <operator pos:start="89:11" pos:end="89:11">=</operator> <name pos:start="89:13" pos:end="89:26">first_http_ctx</name></expr>;</expr_stmt>

        <while pos:start="91:9" pos:end="165:9">while <condition pos:start="91:15" pos:end="91:25">(<expr pos:start="91:16" pos:end="91:24"><name pos:start="91:16" pos:end="91:16">c</name> <operator pos:start="91:18" pos:end="91:19">!=</operator> <name pos:start="91:21" pos:end="91:24">NULL</name></expr>)</condition> <block pos:start="91:27" pos:end="165:9">{<block_content pos:start="93:13" pos:end="163:24">

            <decl_stmt pos:start="93:13" pos:end="93:19"><decl pos:start="93:13" pos:end="93:18"><type pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:15">int</name></type> <name pos:start="93:17" pos:end="93:18">fd</name></decl>;</decl_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:23"><expr pos:start="95:13" pos:end="95:22"><name pos:start="95:13" pos:end="95:14">fd</name> <operator pos:start="95:16" pos:end="95:16">=</operator> <name pos:start="95:18" pos:end="95:22"><name pos:start="95:18" pos:end="95:18">c</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:22">fd</name></name></expr>;</expr_stmt>

            <switch pos:start="97:13" pos:end="161:13">switch<condition pos:start="97:19" pos:end="97:28">(<expr pos:start="97:20" pos:end="97:27"><name pos:start="97:20" pos:end="97:27"><name pos:start="97:20" pos:end="97:20">c</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:27">state</name></name></expr>)</condition> <block pos:start="97:30" pos:end="161:13">{<block_content pos:start="99:13" pos:end="159:22">

            <case pos:start="99:13" pos:end="99:40">case <expr pos:start="99:18" pos:end="99:39"><name pos:start="99:18" pos:end="99:39">HTTPSTATE_WAIT_REQUEST</name></expr>:</case>

                <expr_stmt pos:start="101:17" pos:end="101:43"><expr pos:start="101:17" pos:end="101:42"><name pos:start="101:17" pos:end="101:29"><name pos:start="101:17" pos:end="101:17">c</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:29">poll_entry</name></name> <operator pos:start="101:31" pos:end="101:31">=</operator> <name pos:start="101:33" pos:end="101:42">poll_entry</name></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:36"><expr pos:start="103:17" pos:end="103:35"><name pos:start="103:17" pos:end="103:30"><name pos:start="103:17" pos:end="103:26">poll_entry</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:30">fd</name></name> <operator pos:start="103:32" pos:end="103:32">=</operator> <name pos:start="103:34" pos:end="103:35">fd</name></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:44"><expr pos:start="105:17" pos:end="105:43"><name pos:start="105:17" pos:end="105:34"><name pos:start="105:17" pos:end="105:26">poll_entry</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:34">events</name></name> <operator pos:start="105:36" pos:end="105:36">=</operator> <name pos:start="105:38" pos:end="105:43">POLLIN</name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:29"><expr pos:start="107:17" pos:end="107:28"><name pos:start="107:17" pos:end="107:26">poll_entry</name><operator pos:start="107:27" pos:end="107:28">++</operator></expr>;</expr_stmt>

                <break pos:start="109:17" pos:end="109:22">break;</break>

            <case pos:start="111:13" pos:end="111:39">case <expr pos:start="111:18" pos:end="111:38"><name pos:start="111:18" pos:end="111:38">HTTPSTATE_SEND_HEADER</name></expr>:</case>

            <case pos:start="113:13" pos:end="113:44">case <expr pos:start="113:18" pos:end="113:43"><name pos:start="113:18" pos:end="113:43">HTTPSTATE_SEND_DATA_HEADER</name></expr>:</case>

            <case pos:start="115:13" pos:end="115:37">case <expr pos:start="115:18" pos:end="115:36"><name pos:start="115:18" pos:end="115:36">HTTPSTATE_SEND_DATA</name></expr>:</case>

            <case pos:start="117:13" pos:end="117:45">case <expr pos:start="117:18" pos:end="117:44"><name pos:start="117:18" pos:end="117:44">HTTPSTATE_SEND_DATA_TRAILER</name></expr>:</case>

                <expr_stmt pos:start="119:17" pos:end="119:43"><expr pos:start="119:17" pos:end="119:42"><name pos:start="119:17" pos:end="119:29"><name pos:start="119:17" pos:end="119:17">c</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:29">poll_entry</name></name> <operator pos:start="119:31" pos:end="119:31">=</operator> <name pos:start="119:33" pos:end="119:42">poll_entry</name></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:36"><expr pos:start="121:17" pos:end="121:35"><name pos:start="121:17" pos:end="121:30"><name pos:start="121:17" pos:end="121:26">poll_entry</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:30">fd</name></name> <operator pos:start="121:32" pos:end="121:32">=</operator> <name pos:start="121:34" pos:end="121:35">fd</name></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:45"><expr pos:start="123:17" pos:end="123:44"><name pos:start="123:17" pos:end="123:34"><name pos:start="123:17" pos:end="123:26">poll_entry</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:34">events</name></name> <operator pos:start="123:36" pos:end="123:36">=</operator> <name pos:start="123:38" pos:end="123:44">POLLOUT</name></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:29"><expr pos:start="125:17" pos:end="125:28"><name pos:start="125:17" pos:end="125:26">poll_entry</name><operator pos:start="125:27" pos:end="125:28">++</operator></expr>;</expr_stmt>

                <break pos:start="127:17" pos:end="127:22">break;</break>

            <case pos:start="129:13" pos:end="129:40">case <expr pos:start="129:18" pos:end="129:39"><name pos:start="129:18" pos:end="129:39">HTTPSTATE_RECEIVE_DATA</name></expr>:</case>

                <expr_stmt pos:start="131:17" pos:end="131:43"><expr pos:start="131:17" pos:end="131:42"><name pos:start="131:17" pos:end="131:29"><name pos:start="131:17" pos:end="131:17">c</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:29">poll_entry</name></name> <operator pos:start="131:31" pos:end="131:31">=</operator> <name pos:start="131:33" pos:end="131:42">poll_entry</name></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:36"><expr pos:start="133:17" pos:end="133:35"><name pos:start="133:17" pos:end="133:30"><name pos:start="133:17" pos:end="133:26">poll_entry</name><operator pos:start="133:27" pos:end="133:28">-&gt;</operator><name pos:start="133:29" pos:end="133:30">fd</name></name> <operator pos:start="133:32" pos:end="133:32">=</operator> <name pos:start="133:34" pos:end="133:35">fd</name></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:44"><expr pos:start="135:17" pos:end="135:43"><name pos:start="135:17" pos:end="135:34"><name pos:start="135:17" pos:end="135:26">poll_entry</name><operator pos:start="135:27" pos:end="135:28">-&gt;</operator><name pos:start="135:29" pos:end="135:34">events</name></name> <operator pos:start="135:36" pos:end="135:36">=</operator> <name pos:start="135:38" pos:end="135:43">POLLIN</name></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:29"><expr pos:start="137:17" pos:end="137:28"><name pos:start="137:17" pos:end="137:26">poll_entry</name><operator pos:start="137:27" pos:end="137:28">++</operator></expr>;</expr_stmt>

                <break pos:start="139:17" pos:end="139:22">break;</break>

            <case pos:start="141:13" pos:end="141:37">case <expr pos:start="141:18" pos:end="141:36"><name pos:start="141:18" pos:end="141:36">HTTPSTATE_WAIT_FEED</name></expr>:</case>

                <comment type="block" pos:start="143:17" pos:end="143:42">/* need to catch errors */</comment>

                <expr_stmt pos:start="145:17" pos:end="145:43"><expr pos:start="145:17" pos:end="145:42"><name pos:start="145:17" pos:end="145:29"><name pos:start="145:17" pos:end="145:17">c</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:29">poll_entry</name></name> <operator pos:start="145:31" pos:end="145:31">=</operator> <name pos:start="145:33" pos:end="145:42">poll_entry</name></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:36"><expr pos:start="147:17" pos:end="147:35"><name pos:start="147:17" pos:end="147:30"><name pos:start="147:17" pos:end="147:26">poll_entry</name><operator pos:start="147:27" pos:end="147:28">-&gt;</operator><name pos:start="147:29" pos:end="147:30">fd</name></name> <operator pos:start="147:32" pos:end="147:32">=</operator> <name pos:start="147:34" pos:end="147:35">fd</name></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:44"><expr pos:start="149:17" pos:end="149:43"><name pos:start="149:17" pos:end="149:34"><name pos:start="149:17" pos:end="149:26">poll_entry</name><operator pos:start="149:27" pos:end="149:28">-&gt;</operator><name pos:start="149:29" pos:end="149:34">events</name></name> <operator pos:start="149:36" pos:end="149:36">=</operator> <name pos:start="149:38" pos:end="149:43">POLLIN</name></expr>;</expr_stmt><comment type="block" pos:start="149:45" pos:end="149:70">/* Maybe this will work */</comment>

                <expr_stmt pos:start="151:17" pos:end="151:29"><expr pos:start="151:17" pos:end="151:28"><name pos:start="151:17" pos:end="151:26">poll_entry</name><operator pos:start="151:27" pos:end="151:28">++</operator></expr>;</expr_stmt>

                <break pos:start="153:17" pos:end="153:22">break;</break>

            <default pos:start="155:13" pos:end="155:20">default:</default>

                <expr_stmt pos:start="157:17" pos:end="157:37"><expr pos:start="157:17" pos:end="157:36"><name pos:start="157:17" pos:end="157:29"><name pos:start="157:17" pos:end="157:17">c</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:29">poll_entry</name></name> <operator pos:start="157:31" pos:end="157:31">=</operator> <name pos:start="157:33" pos:end="157:36">NULL</name></expr>;</expr_stmt>

                <break pos:start="159:17" pos:end="159:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="163:13" pos:end="163:24"><expr pos:start="163:13" pos:end="163:23"><name pos:start="163:13" pos:end="163:13">c</name> <operator pos:start="163:15" pos:end="163:15">=</operator> <name pos:start="163:17" pos:end="163:23"><name pos:start="163:17" pos:end="163:17">c</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:23">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></while>



        <comment type="block" pos:start="169:9" pos:end="171:39">/* wait for an event on one connection. We poll at least every

           second to handle timeouts */</comment>

        <do pos:start="173:9" pos:end="177:28">do <block pos:start="173:12" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:66">

            <expr_stmt pos:start="175:13" pos:end="175:66"><expr pos:start="175:13" pos:end="175:65"><name pos:start="175:13" pos:end="175:15">ret</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <call pos:start="175:19" pos:end="175:65"><name pos:start="175:19" pos:end="175:22">poll</name><argument_list pos:start="175:23" pos:end="175:65">(<argument pos:start="175:24" pos:end="175:33"><expr pos:start="175:24" pos:end="175:33"><name pos:start="175:24" pos:end="175:33">poll_table</name></expr></argument>, <argument pos:start="175:36" pos:end="175:58"><expr pos:start="175:36" pos:end="175:58"><name pos:start="175:36" pos:end="175:45">poll_entry</name> <operator pos:start="175:47" pos:end="175:47">-</operator> <name pos:start="175:49" pos:end="175:58">poll_table</name></expr></argument>, <argument pos:start="175:61" pos:end="175:64"><expr pos:start="175:61" pos:end="175:64"><literal type="number" pos:start="175:61" pos:end="175:64">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="177:17" pos:end="177:27">(<expr pos:start="177:18" pos:end="177:26"><name pos:start="177:18" pos:end="177:20">ret</name> <operator pos:start="177:22" pos:end="177:23">==</operator> <operator pos:start="177:25" pos:end="177:25">-</operator><literal type="number" pos:start="177:26" pos:end="177:26">1</literal></expr>)</condition>;</do>

        

        <expr_stmt pos:start="181:9" pos:end="181:32"><expr pos:start="181:9" pos:end="181:31"><name pos:start="181:9" pos:end="181:16">cur_time</name> <operator pos:start="181:18" pos:end="181:18">=</operator> <call pos:start="181:20" pos:end="181:31"><name pos:start="181:20" pos:end="181:29">gettime_ms</name><argument_list pos:start="181:30" pos:end="181:31">()</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="185:9" pos:end="185:35">/* now handle the events */</comment>



        <expr_stmt pos:start="189:9" pos:end="189:29"><expr pos:start="189:9" pos:end="189:28"><name pos:start="189:9" pos:end="189:10">cp</name> <operator pos:start="189:12" pos:end="189:12">=</operator> <operator pos:start="189:14" pos:end="189:14">&amp;</operator><name pos:start="189:15" pos:end="189:28">first_http_ctx</name></expr>;</expr_stmt>

        <while pos:start="191:9" pos:end="225:9">while <condition pos:start="191:15" pos:end="191:29">(<expr pos:start="191:16" pos:end="191:28"><operator pos:start="191:16" pos:end="191:16">(</operator><operator pos:start="191:17" pos:end="191:17">*</operator><name pos:start="191:18" pos:end="191:19">cp</name><operator pos:start="191:20" pos:end="191:20">)</operator> <operator pos:start="191:22" pos:end="191:23">!=</operator> <name pos:start="191:25" pos:end="191:28">NULL</name></expr>)</condition> <block pos:start="191:31" pos:end="225:9">{<block_content pos:start="193:13" pos:end="223:13">

            <expr_stmt pos:start="193:13" pos:end="193:20"><expr pos:start="193:13" pos:end="193:19"><name pos:start="193:13" pos:end="193:13">c</name> <operator pos:start="193:15" pos:end="193:15">=</operator> <operator pos:start="193:17" pos:end="193:17">*</operator><name pos:start="193:18" pos:end="193:19">cp</name></expr>;</expr_stmt>

            <if_stmt pos:start="195:13" pos:end="223:13"><if pos:start="195:13" pos:end="219:13">if <condition pos:start="195:16" pos:end="195:46">(<expr pos:start="195:17" pos:end="195:45"><call pos:start="195:17" pos:end="195:41"><name pos:start="195:17" pos:end="195:27">handle_http</name> <argument_list pos:start="195:29" pos:end="195:41">(<argument pos:start="195:30" pos:end="195:30"><expr pos:start="195:30" pos:end="195:30"><name pos:start="195:30" pos:end="195:30">c</name></expr></argument>, <argument pos:start="195:33" pos:end="195:40"><expr pos:start="195:33" pos:end="195:40"><name pos:start="195:33" pos:end="195:40">cur_time</name></expr></argument>)</argument_list></call> <operator pos:start="195:43" pos:end="195:43">&lt;</operator> <literal type="number" pos:start="195:45" pos:end="195:45">0</literal></expr>)</condition> <block pos:start="195:48" pos:end="219:13">{<block_content pos:start="199:17" pos:end="217:33">

                <comment type="block" pos:start="197:17" pos:end="197:51">/* close and free the connection */</comment>

                <expr_stmt pos:start="199:17" pos:end="199:34"><expr pos:start="199:17" pos:end="199:33"><call pos:start="199:17" pos:end="199:33"><name pos:start="199:17" pos:end="199:30">log_connection</name><argument_list pos:start="199:31" pos:end="199:33">(<argument pos:start="199:32" pos:end="199:32"><expr pos:start="199:32" pos:end="199:32"><name pos:start="199:32" pos:end="199:32">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:29"><expr pos:start="201:17" pos:end="201:28"><call pos:start="201:17" pos:end="201:28"><name pos:start="201:17" pos:end="201:21">close</name><argument_list pos:start="201:22" pos:end="201:28">(<argument pos:start="201:23" pos:end="201:27"><expr pos:start="201:23" pos:end="201:27"><name pos:start="201:23" pos:end="201:27"><name pos:start="201:23" pos:end="201:23">c</name><operator pos:start="201:24" pos:end="201:25">-&gt;</operator><name pos:start="201:26" pos:end="201:27">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="203:17" pos:end="205:51"><if pos:start="203:17" pos:end="205:51">if <condition pos:start="203:20" pos:end="203:30">(<expr pos:start="203:21" pos:end="203:29"><name pos:start="203:21" pos:end="203:29"><name pos:start="203:21" pos:end="203:21">c</name><operator pos:start="203:22" pos:end="203:23">-&gt;</operator><name pos:start="203:24" pos:end="203:29">fmt_in</name></name></expr>)</condition><block type="pseudo" pos:start="205:21" pos:end="205:51"><block_content pos:start="205:21" pos:end="205:51">

                    <expr_stmt pos:start="205:21" pos:end="205:51"><expr pos:start="205:21" pos:end="205:50"><call pos:start="205:21" pos:end="205:50"><name pos:start="205:21" pos:end="205:39">av_close_input_file</name><argument_list pos:start="205:40" pos:end="205:50">(<argument pos:start="205:41" pos:end="205:49"><expr pos:start="205:41" pos:end="205:49"><name pos:start="205:41" pos:end="205:49"><name pos:start="205:41" pos:end="205:41">c</name><operator pos:start="205:42" pos:end="205:43">-&gt;</operator><name pos:start="205:44" pos:end="205:49">fmt_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:30"><expr pos:start="207:17" pos:end="207:29"><operator pos:start="207:17" pos:end="207:17">*</operator><name pos:start="207:18" pos:end="207:19">cp</name> <operator pos:start="207:21" pos:end="207:21">=</operator> <name pos:start="207:23" pos:end="207:29"><name pos:start="207:23" pos:end="207:23">c</name><operator pos:start="207:24" pos:end="207:25">-&gt;</operator><name pos:start="207:26" pos:end="207:29">next</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:45"><expr pos:start="209:17" pos:end="209:44"><name pos:start="209:17" pos:end="209:28">nb_bandwidth</name> <operator pos:start="209:30" pos:end="209:31">-=</operator> <name pos:start="209:33" pos:end="209:44"><name pos:start="209:33" pos:end="209:33">c</name><operator pos:start="209:34" pos:end="209:35">-&gt;</operator><name pos:start="209:36" pos:end="209:44">bandwidth</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:35"><expr pos:start="211:17" pos:end="211:34"><call pos:start="211:17" pos:end="211:34"><name pos:start="211:17" pos:end="211:23">av_free</name><argument_list pos:start="211:24" pos:end="211:34">(<argument pos:start="211:25" pos:end="211:33"><expr pos:start="211:25" pos:end="211:33"><name pos:start="211:25" pos:end="211:33"><name pos:start="211:25" pos:end="211:25">c</name><operator pos:start="211:26" pos:end="211:27">-&gt;</operator><name pos:start="211:28" pos:end="211:33">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:36"><expr pos:start="213:17" pos:end="213:35"><call pos:start="213:17" pos:end="213:35"><name pos:start="213:17" pos:end="213:23">av_free</name><argument_list pos:start="213:24" pos:end="213:35">(<argument pos:start="213:25" pos:end="213:34"><expr pos:start="213:25" pos:end="213:34"><name pos:start="213:25" pos:end="213:34"><name pos:start="213:25" pos:end="213:25">c</name><operator pos:start="213:26" pos:end="213:27">-&gt;</operator><name pos:start="213:28" pos:end="213:34">pbuffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:27"><expr pos:start="215:17" pos:end="215:26"><call pos:start="215:17" pos:end="215:26"><name pos:start="215:17" pos:end="215:23">av_free</name><argument_list pos:start="215:24" pos:end="215:26">(<argument pos:start="215:25" pos:end="215:25"><expr pos:start="215:25" pos:end="215:25"><name pos:start="215:25" pos:end="215:25">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:33"><expr pos:start="217:17" pos:end="217:32"><name pos:start="217:17" pos:end="217:30">nb_connections</name><operator pos:start="217:31" pos:end="217:32">--</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="219:15" pos:end="223:13">else <block pos:start="219:20" pos:end="223:13">{<block_content pos:start="221:17" pos:end="221:30">

                <expr_stmt pos:start="221:17" pos:end="221:30"><expr pos:start="221:17" pos:end="221:29"><name pos:start="221:17" pos:end="221:18">cp</name> <operator pos:start="221:20" pos:end="221:20">=</operator> <operator pos:start="221:22" pos:end="221:22">&amp;</operator><name pos:start="221:23" pos:end="221:29"><name pos:start="221:23" pos:end="221:23">c</name><operator pos:start="221:24" pos:end="221:25">-&gt;</operator><name pos:start="221:26" pos:end="221:29">next</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>



        <comment type="block" pos:start="229:9" pos:end="229:38">/* new connection request ? */</comment>

        <expr_stmt pos:start="231:9" pos:end="231:32"><expr pos:start="231:9" pos:end="231:31"><name pos:start="231:9" pos:end="231:18">poll_entry</name> <operator pos:start="231:20" pos:end="231:20">=</operator> <name pos:start="231:22" pos:end="231:31">poll_table</name></expr>;</expr_stmt>

        <if_stmt pos:start="233:9" pos:end="315:9"><if pos:start="233:9" pos:end="315:9">if <condition pos:start="233:12" pos:end="233:41">(<expr pos:start="233:13" pos:end="233:40"><name pos:start="233:13" pos:end="233:31"><name pos:start="233:13" pos:end="233:22">poll_entry</name><operator pos:start="233:23" pos:end="233:24">-&gt;</operator><name pos:start="233:25" pos:end="233:31">revents</name></name> <operator pos:start="233:33" pos:end="233:33">&amp;</operator> <name pos:start="233:35" pos:end="233:40">POLLIN</name></expr>)</condition> <block pos:start="233:43" pos:end="315:9">{<block_content pos:start="235:13" pos:end="313:13">

            <decl_stmt pos:start="235:13" pos:end="235:24"><decl pos:start="235:13" pos:end="235:18"><type pos:start="235:13" pos:end="235:15"><name pos:start="235:13" pos:end="235:15">int</name></type> <name pos:start="235:17" pos:end="235:18">fd</name></decl>, <decl pos:start="235:21" pos:end="235:23"><type ref="prev" pos:start="235:13" pos:end="235:15"/><name pos:start="235:21" pos:end="235:23">len</name></decl>;</decl_stmt>



            <expr_stmt pos:start="239:13" pos:end="239:36"><expr pos:start="239:13" pos:end="239:35"><name pos:start="239:13" pos:end="239:15">len</name> <operator pos:start="239:17" pos:end="239:17">=</operator> <sizeof pos:start="239:19" pos:end="239:35">sizeof<argument_list pos:start="239:25" pos:end="239:35">(<argument pos:start="239:26" pos:end="239:34"><expr pos:start="239:26" pos:end="239:34"><name pos:start="239:26" pos:end="239:34">from_addr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="243:30"><expr pos:start="241:13" pos:end="243:29"><name pos:start="241:13" pos:end="241:14">fd</name> <operator pos:start="241:16" pos:end="241:16">=</operator> <call pos:start="241:18" pos:end="243:29"><name pos:start="241:18" pos:end="241:23">accept</name><argument_list pos:start="241:24" pos:end="243:29">(<argument pos:start="241:25" pos:end="241:33"><expr pos:start="241:25" pos:end="241:33"><name pos:start="241:25" pos:end="241:33">server_fd</name></expr></argument>, <argument pos:start="241:36" pos:end="241:64"><expr pos:start="241:36" pos:end="241:64"><operator pos:start="241:36" pos:end="241:36">(</operator>struct <name pos:start="241:44" pos:end="241:51">sockaddr</name> <operator pos:start="241:53" pos:end="241:53">*</operator><operator pos:start="241:54" pos:end="241:54">)</operator><operator pos:start="241:55" pos:end="241:55">&amp;</operator><name pos:start="241:56" pos:end="241:64">from_addr</name></expr></argument>, 

                        <argument pos:start="243:25" pos:end="243:28"><expr pos:start="243:25" pos:end="243:28"><operator pos:start="243:25" pos:end="243:25">&amp;</operator><name pos:start="243:26" pos:end="243:28">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="245:13" pos:end="313:13"><if pos:start="245:13" pos:end="313:13">if <condition pos:start="245:16" pos:end="245:24">(<expr pos:start="245:17" pos:end="245:23"><name pos:start="245:17" pos:end="245:18">fd</name> <operator pos:start="245:20" pos:end="245:21">&gt;=</operator> <literal type="number" pos:start="245:23" pos:end="245:23">0</literal></expr>)</condition> <block pos:start="245:26" pos:end="313:13">{<block_content pos:start="247:17" pos:end="311:17">

                <expr_stmt pos:start="247:17" pos:end="247:47"><expr pos:start="247:17" pos:end="247:46"><call pos:start="247:17" pos:end="247:46"><name pos:start="247:17" pos:end="247:21">fcntl</name><argument_list pos:start="247:22" pos:end="247:46">(<argument pos:start="247:23" pos:end="247:24"><expr pos:start="247:23" pos:end="247:24"><name pos:start="247:23" pos:end="247:24">fd</name></expr></argument>, <argument pos:start="247:27" pos:end="247:33"><expr pos:start="247:27" pos:end="247:33"><name pos:start="247:27" pos:end="247:33">F_SETFL</name></expr></argument>, <argument pos:start="247:36" pos:end="247:45"><expr pos:start="247:36" pos:end="247:45"><name pos:start="247:36" pos:end="247:45">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="249:17" pos:end="251:51">/* XXX: should output a warning page when coming

                   close to the connection limit */</comment>

                <if_stmt pos:start="253:17" pos:end="305:17"><if pos:start="253:17" pos:end="257:17">if <condition pos:start="253:20" pos:end="253:57">(<expr pos:start="253:21" pos:end="253:56"><name pos:start="253:21" pos:end="253:34">nb_connections</name> <operator pos:start="253:36" pos:end="253:37">&gt;=</operator> <name pos:start="253:39" pos:end="253:56">nb_max_connections</name></expr>)</condition> <block pos:start="253:59" pos:end="257:17">{<block_content pos:start="255:21" pos:end="255:29">

                    <expr_stmt pos:start="255:21" pos:end="255:29"><expr pos:start="255:21" pos:end="255:28"><name pos:start="255:21" pos:end="255:21">c</name> <operator pos:start="255:23" pos:end="255:23">=</operator> <name pos:start="255:25" pos:end="255:28">NULL</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="257:19" pos:end="305:17">else <block pos:start="257:24" pos:end="305:17">{<block_content pos:start="261:21" pos:end="303:21">

                    <comment type="block" pos:start="259:21" pos:end="259:46">/* add a new connection */</comment>

                    <expr_stmt pos:start="261:21" pos:end="261:56"><expr pos:start="261:21" pos:end="261:55"><name pos:start="261:21" pos:end="261:21">c</name> <operator pos:start="261:23" pos:end="261:23">=</operator> <call pos:start="261:25" pos:end="261:55"><name pos:start="261:25" pos:end="261:34">av_mallocz</name><argument_list pos:start="261:35" pos:end="261:55">(<argument pos:start="261:36" pos:end="261:54"><expr pos:start="261:36" pos:end="261:54"><sizeof pos:start="261:36" pos:end="261:54">sizeof<argument_list pos:start="261:42" pos:end="261:54">(<argument pos:start="261:43" pos:end="261:53"><expr pos:start="261:43" pos:end="261:53"><name pos:start="261:43" pos:end="261:53">HTTPContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="263:21" pos:end="303:21"><if pos:start="263:21" pos:end="303:21">if <condition pos:start="263:24" pos:end="263:26">(<expr pos:start="263:25" pos:end="263:25"><name pos:start="263:25" pos:end="263:25">c</name></expr>)</condition> <block pos:start="263:28" pos:end="303:21">{<block_content pos:start="265:25" pos:end="301:25">

                        <expr_stmt pos:start="265:25" pos:end="265:49"><expr pos:start="265:25" pos:end="265:48"><name pos:start="265:25" pos:end="265:31"><name pos:start="265:25" pos:end="265:25">c</name><operator pos:start="265:26" pos:end="265:27">-&gt;</operator><name pos:start="265:28" pos:end="265:31">next</name></name> <operator pos:start="265:33" pos:end="265:33">=</operator> <name pos:start="265:35" pos:end="265:48">first_http_ctx</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="267:25" pos:end="267:43"><expr pos:start="267:25" pos:end="267:42"><name pos:start="267:25" pos:end="267:38">first_http_ctx</name> <operator pos:start="267:40" pos:end="267:40">=</operator> <name pos:start="267:42" pos:end="267:42">c</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="269:25" pos:end="269:35"><expr pos:start="269:25" pos:end="269:34"><name pos:start="269:25" pos:end="269:29"><name pos:start="269:25" pos:end="269:25">c</name><operator pos:start="269:26" pos:end="269:27">-&gt;</operator><name pos:start="269:28" pos:end="269:29">fd</name></name> <operator pos:start="269:31" pos:end="269:31">=</operator> <name pos:start="269:33" pos:end="269:34">fd</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="271:25" pos:end="271:45"><expr pos:start="271:25" pos:end="271:44"><name pos:start="271:25" pos:end="271:37"><name pos:start="271:25" pos:end="271:25">c</name><operator pos:start="271:26" pos:end="271:27">-&gt;</operator><name pos:start="271:28" pos:end="271:37">poll_entry</name></name> <operator pos:start="271:39" pos:end="271:39">=</operator> <name pos:start="271:41" pos:end="271:44">NULL</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="273:25" pos:end="273:49"><expr pos:start="273:25" pos:end="273:48"><name pos:start="273:25" pos:end="273:36"><name pos:start="273:25" pos:end="273:25">c</name><operator pos:start="273:26" pos:end="273:27">-&gt;</operator><name pos:start="273:28" pos:end="273:36">from_addr</name></name> <operator pos:start="273:38" pos:end="273:38">=</operator> <name pos:start="273:40" pos:end="273:48">from_addr</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="275:25" pos:end="275:58"><expr pos:start="275:25" pos:end="275:57"><name pos:start="275:25" pos:end="275:32"><name pos:start="275:25" pos:end="275:25">c</name><operator pos:start="275:26" pos:end="275:27">-&gt;</operator><name pos:start="275:28" pos:end="275:32">state</name></name> <operator pos:start="275:34" pos:end="275:34">=</operator> <name pos:start="275:36" pos:end="275:57">HTTPSTATE_WAIT_REQUEST</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="277:25" pos:end="277:83"><expr pos:start="277:25" pos:end="277:82"><name pos:start="277:25" pos:end="277:33"><name pos:start="277:25" pos:end="277:25">c</name><operator pos:start="277:26" pos:end="277:27">-&gt;</operator><name pos:start="277:28" pos:end="277:33">buffer</name></name> <operator pos:start="277:35" pos:end="277:35">=</operator> <call pos:start="277:37" pos:end="277:82"><name pos:start="277:37" pos:end="277:45">av_malloc</name><argument_list pos:start="277:46" pos:end="277:82">(<argument pos:start="277:47" pos:end="277:81"><expr pos:start="277:47" pos:end="277:81"><name pos:start="277:47" pos:end="277:60"><name pos:start="277:47" pos:end="277:47">c</name><operator pos:start="277:48" pos:end="277:49">-&gt;</operator><name pos:start="277:50" pos:end="277:60">buffer_size</name></name> <operator pos:start="277:62" pos:end="277:62">=</operator> <name pos:start="277:64" pos:end="277:81">IOBUFFER_INIT_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="279:25" pos:end="279:84"><expr pos:start="279:25" pos:end="279:83"><name pos:start="279:25" pos:end="279:34"><name pos:start="279:25" pos:end="279:25">c</name><operator pos:start="279:26" pos:end="279:27">-&gt;</operator><name pos:start="279:28" pos:end="279:34">pbuffer</name></name> <operator pos:start="279:36" pos:end="279:36">=</operator> <call pos:start="279:38" pos:end="279:83"><name pos:start="279:38" pos:end="279:46">av_malloc</name><argument_list pos:start="279:47" pos:end="279:83">(<argument pos:start="279:48" pos:end="279:82"><expr pos:start="279:48" pos:end="279:82"><name pos:start="279:48" pos:end="279:62"><name pos:start="279:48" pos:end="279:48">c</name><operator pos:start="279:49" pos:end="279:50">-&gt;</operator><name pos:start="279:51" pos:end="279:62">pbuffer_size</name></name> <operator pos:start="279:64" pos:end="279:64">=</operator> <name pos:start="279:66" pos:end="279:82">PBUFFER_INIT_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="281:25" pos:end="301:25"><if pos:start="281:25" pos:end="289:25">if <condition pos:start="281:28" pos:end="281:54">(<expr pos:start="281:29" pos:end="281:53"><operator pos:start="281:29" pos:end="281:29">!</operator><name pos:start="281:30" pos:end="281:38"><name pos:start="281:30" pos:end="281:30">c</name><operator pos:start="281:31" pos:end="281:32">-&gt;</operator><name pos:start="281:33" pos:end="281:38">buffer</name></name> <operator pos:start="281:40" pos:end="281:41">||</operator> <operator pos:start="281:43" pos:end="281:43">!</operator><name pos:start="281:44" pos:end="281:53"><name pos:start="281:44" pos:end="281:44">c</name><operator pos:start="281:45" pos:end="281:46">-&gt;</operator><name pos:start="281:47" pos:end="281:53">pbuffer</name></name></expr>)</condition> <block pos:start="281:56" pos:end="289:25">{<block_content pos:start="283:29" pos:end="287:41">

                            <expr_stmt pos:start="283:29" pos:end="283:47"><expr pos:start="283:29" pos:end="283:46"><call pos:start="283:29" pos:end="283:46"><name pos:start="283:29" pos:end="283:35">av_free</name><argument_list pos:start="283:36" pos:end="283:46">(<argument pos:start="283:37" pos:end="283:45"><expr pos:start="283:37" pos:end="283:45"><name pos:start="283:37" pos:end="283:45"><name pos:start="283:37" pos:end="283:37">c</name><operator pos:start="283:38" pos:end="283:39">-&gt;</operator><name pos:start="283:40" pos:end="283:45">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="285:29" pos:end="285:48"><expr pos:start="285:29" pos:end="285:47"><call pos:start="285:29" pos:end="285:47"><name pos:start="285:29" pos:end="285:35">av_free</name><argument_list pos:start="285:36" pos:end="285:47">(<argument pos:start="285:37" pos:end="285:46"><expr pos:start="285:37" pos:end="285:46"><name pos:start="285:37" pos:end="285:46"><name pos:start="285:37" pos:end="285:37">c</name><operator pos:start="285:38" pos:end="285:39">-&gt;</operator><name pos:start="285:40" pos:end="285:46">pbuffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="287:29" pos:end="287:41"><expr pos:start="287:29" pos:end="287:40"><call pos:start="287:29" pos:end="287:40"><name pos:start="287:29" pos:end="287:36">av_freep</name><argument_list pos:start="287:37" pos:end="287:40">(<argument pos:start="287:38" pos:end="287:39"><expr pos:start="287:38" pos:end="287:39"><operator pos:start="287:38" pos:end="287:38">&amp;</operator><name pos:start="287:39" pos:end="287:39">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="289:27" pos:end="301:25">else <block pos:start="289:32" pos:end="301:25">{<block_content pos:start="291:29" pos:end="299:45">

                            <expr_stmt pos:start="291:29" pos:end="291:54"><expr pos:start="291:29" pos:end="291:53"><name pos:start="291:29" pos:end="291:41"><name pos:start="291:29" pos:end="291:29">c</name><operator pos:start="291:30" pos:end="291:31">-&gt;</operator><name pos:start="291:32" pos:end="291:41">buffer_ptr</name></name> <operator pos:start="291:43" pos:end="291:43">=</operator> <name pos:start="291:45" pos:end="291:53"><name pos:start="291:45" pos:end="291:45">c</name><operator pos:start="291:46" pos:end="291:47">-&gt;</operator><name pos:start="291:48" pos:end="291:53">buffer</name></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="293:29" pos:end="293:71"><expr pos:start="293:29" pos:end="293:70"><name pos:start="293:29" pos:end="293:41"><name pos:start="293:29" pos:end="293:29">c</name><operator pos:start="293:30" pos:end="293:31">-&gt;</operator><name pos:start="293:32" pos:end="293:41">buffer_end</name></name> <operator pos:start="293:43" pos:end="293:43">=</operator> <name pos:start="293:45" pos:end="293:53"><name pos:start="293:45" pos:end="293:45">c</name><operator pos:start="293:46" pos:end="293:47">-&gt;</operator><name pos:start="293:48" pos:end="293:53">buffer</name></name> <operator pos:start="293:55" pos:end="293:55">+</operator> <name pos:start="293:57" pos:end="293:70"><name pos:start="293:57" pos:end="293:57">c</name><operator pos:start="293:58" pos:end="293:59">-&gt;</operator><name pos:start="293:60" pos:end="293:70">buffer_size</name></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="295:29" pos:end="295:68"><expr pos:start="295:29" pos:end="295:67"><name pos:start="295:29" pos:end="295:38"><name pos:start="295:29" pos:end="295:29">c</name><operator pos:start="295:30" pos:end="295:31">-&gt;</operator><name pos:start="295:32" pos:end="295:38">timeout</name></name> <operator pos:start="295:40" pos:end="295:40">=</operator> <name pos:start="295:42" pos:end="295:49">cur_time</name> <operator pos:start="295:51" pos:end="295:51">+</operator> <name pos:start="295:53" pos:end="295:67">REQUEST_TIMEOUT</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="297:29" pos:end="297:53"><expr pos:start="297:29" pos:end="297:52"><name pos:start="297:29" pos:end="297:41"><name pos:start="297:29" pos:end="297:29">c</name><operator pos:start="297:30" pos:end="297:31">-&gt;</operator><name pos:start="297:32" pos:end="297:41">start_time</name></name> <operator pos:start="297:43" pos:end="297:43">=</operator> <name pos:start="297:45" pos:end="297:52">cur_time</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="299:29" pos:end="299:45"><expr pos:start="299:29" pos:end="299:44"><name pos:start="299:29" pos:end="299:42">nb_connections</name><operator pos:start="299:43" pos:end="299:44">++</operator></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="307:17" pos:end="311:17"><if pos:start="307:17" pos:end="311:17">if <condition pos:start="307:20" pos:end="307:23">(<expr pos:start="307:21" pos:end="307:22"><operator pos:start="307:21" pos:end="307:21">!</operator><name pos:start="307:22" pos:end="307:22">c</name></expr>)</condition> <block pos:start="307:25" pos:end="311:17">{<block_content pos:start="309:21" pos:end="309:30">

                    <expr_stmt pos:start="309:21" pos:end="309:30"><expr pos:start="309:21" pos:end="309:29"><call pos:start="309:21" pos:end="309:29"><name pos:start="309:21" pos:end="309:25">close</name><argument_list pos:start="309:26" pos:end="309:29">(<argument pos:start="309:27" pos:end="309:28"><expr pos:start="309:27" pos:end="309:28"><name pos:start="309:27" pos:end="309:28">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:21"><expr pos:start="317:9" pos:end="317:20"><name pos:start="317:9" pos:end="317:18">poll_entry</name><operator pos:start="317:19" pos:end="317:20">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
