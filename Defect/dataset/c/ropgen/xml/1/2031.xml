<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2031.c" pos:tabs="8"><function pos:start="1:1" pos:end="96:13"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">ff_hevc_decode_short_term_rps</name><parameter_list pos:start="1:34" pos:end="2:93">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:47">GetBitContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">gb</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:74"><decl pos:start="1:54" pos:end="1:74"><type pos:start="1:54" pos:end="1:74"><name pos:start="1:54" pos:end="1:67">AVCodecContext</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:74">avctx</name></decl></parameter>,
                                  <parameter pos:start="2:35" pos:end="2:51"><decl pos:start="2:35" pos:end="2:51"><type pos:start="2:35" pos:end="2:51"><name pos:start="2:35" pos:end="2:46">ShortTermRPS</name> <modifier pos:start="2:48" pos:end="2:48">*</modifier></type><name pos:start="2:49" pos:end="2:51">rps</name></decl></parameter>, <parameter pos:start="2:54" pos:end="2:71"><decl pos:start="2:54" pos:end="2:71"><type pos:start="2:54" pos:end="2:71"><specifier pos:start="2:54" pos:end="2:58">const</specifier> <name pos:start="2:60" pos:end="2:66">HEVCSPS</name> <modifier pos:start="2:68" pos:end="2:68">*</modifier></type><name pos:start="2:69" pos:end="2:71">sps</name></decl></parameter>, <parameter pos:start="2:74" pos:end="2:92"><decl pos:start="2:74" pos:end="2:92"><type pos:start="2:74" pos:end="2:92"><name pos:start="2:74" pos:end="2:76">int</name></type> <name pos:start="2:78" pos:end="2:92">is_slice_header</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="96:13">{<block_content pos:start="4:5" pos:end="96:13">
    <decl_stmt pos:start="4:5" pos:end="4:28"><decl pos:start="4:5" pos:end="4:27"><type pos:start="4:5" pos:end="4:11"><name pos:start="4:5" pos:end="4:11">uint8_t</name></type> <name pos:start="4:13" pos:end="4:23">rps_predict</name> <init pos:start="4:25" pos:end="4:27">= <expr pos:start="4:27" pos:end="4:27"><literal type="number" pos:start="4:27" pos:end="4:27">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">delta_poc</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:15"><decl pos:start="6:5" pos:end="6:14"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:10">k0</name> <init pos:start="6:12" pos:end="6:14">= <expr pos:start="6:14" pos:end="6:14"><literal type="number" pos:start="6:14" pos:end="6:14">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">k1</name> <init pos:start="7:12" pos:end="7:14">= <expr pos:start="7:14" pos:end="7:14"><literal type="number" pos:start="7:14" pos:end="7:14">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:15"><decl pos:start="8:5" pos:end="8:14"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:9">k</name>  <init pos:start="8:12" pos:end="8:14">= <expr pos:start="8:14" pos:end="8:14"><literal type="number" pos:start="8:14" pos:end="8:14">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>
    <if_stmt pos:start="10:5" pos:end="11:36"><if pos:start="10:5" pos:end="11:36">if <condition pos:start="10:8" pos:end="10:45">(<expr pos:start="10:9" pos:end="10:44"><name pos:start="10:9" pos:end="10:11">rps</name> <operator pos:start="10:13" pos:end="10:14">!=</operator> <name pos:start="10:16" pos:end="10:26"><name pos:start="10:16" pos:end="10:18">sps</name><operator pos:start="10:19" pos:end="10:20">-&gt;</operator><name pos:start="10:21" pos:end="10:26">st_rps</name></name> <operator pos:start="10:28" pos:end="10:29">&amp;&amp;</operator> <name pos:start="10:31" pos:end="10:44"><name pos:start="10:31" pos:end="10:33">sps</name><operator pos:start="10:34" pos:end="10:35">-&gt;</operator><name pos:start="10:36" pos:end="10:44">nb_st_rps</name></name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:36"><block_content pos:start="11:9" pos:end="11:36">
        <expr_stmt pos:start="11:9" pos:end="11:36"><expr pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:19">rps_predict</name> <operator pos:start="11:21" pos:end="11:21">=</operator> <call pos:start="11:23" pos:end="11:35"><name pos:start="11:23" pos:end="11:31">get_bits1</name><argument_list pos:start="11:32" pos:end="11:35">(<argument pos:start="11:33" pos:end="11:34"><expr pos:start="11:33" pos:end="11:34"><name pos:start="11:33" pos:end="11:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="12:5" pos:end="96:13"><if pos:start="12:5" pos:end="96:13">if <condition pos:start="12:8" pos:end="12:20">(<expr pos:start="12:9" pos:end="12:19"><name pos:start="12:9" pos:end="12:19">rps_predict</name></expr>)</condition> <block pos:start="12:22" pos:end="96:13">{<block_content pos:start="13:9" pos:end="96:13">
        <decl_stmt pos:start="13:9" pos:end="13:37"><decl pos:start="13:9" pos:end="13:36"><type pos:start="13:9" pos:end="13:28"><specifier pos:start="13:9" pos:end="13:13">const</specifier> <name pos:start="13:15" pos:end="13:26">ShortTermRPS</name> <modifier pos:start="13:28" pos:end="13:28">*</modifier></type><name pos:start="13:29" pos:end="13:36">rps_ridx</name></decl>;</decl_stmt>
        <decl_stmt pos:start="14:9" pos:end="14:22"><decl pos:start="14:9" pos:end="14:21"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:21">delta_rps</name></decl>;</decl_stmt>
        <decl_stmt pos:start="15:9" pos:end="15:31"><decl pos:start="15:9" pos:end="15:30"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">unsigned</name></type> <name pos:start="15:18" pos:end="15:30">abs_delta_rps</name></decl>;</decl_stmt>
        <decl_stmt pos:start="16:9" pos:end="16:35"><decl pos:start="16:9" pos:end="16:34"><type pos:start="16:9" pos:end="16:15"><name pos:start="16:9" pos:end="16:15">uint8_t</name></type> <name pos:start="16:17" pos:end="16:30">use_delta_flag</name> <init pos:start="16:32" pos:end="16:34">= <expr pos:start="16:34" pos:end="16:34"><literal type="number" pos:start="16:34" pos:end="16:34">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="17:9" pos:end="17:31"><decl pos:start="17:9" pos:end="17:30"><type pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:15">uint8_t</name></type> <name pos:start="17:17" pos:end="17:30">delta_rps_sign</name></decl>;</decl_stmt>
        <if_stmt pos:start="18:9" pos:end="26:59"><if pos:start="18:9" pos:end="25:9">if <condition pos:start="18:12" pos:end="18:28">(<expr pos:start="18:13" pos:end="18:27"><name pos:start="18:13" pos:end="18:27">is_slice_header</name></expr>)</condition> <block pos:start="18:30" pos:end="25:9">{<block_content pos:start="19:13" pos:end="24:67">
            <decl_stmt pos:start="19:13" pos:end="19:64"><decl pos:start="19:13" pos:end="19:63"><type pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:20">unsigned</name> <name pos:start="19:22" pos:end="19:24">int</name></type> <name pos:start="19:26" pos:end="19:34">delta_idx</name> <init pos:start="19:36" pos:end="19:63">= <expr pos:start="19:38" pos:end="19:63"><call pos:start="19:38" pos:end="19:59"><name pos:start="19:38" pos:end="19:55">get_ue_golomb_long</name><argument_list pos:start="19:56" pos:end="19:59">(<argument pos:start="19:57" pos:end="19:58"><expr pos:start="19:57" pos:end="19:58"><name pos:start="19:57" pos:end="19:58">gb</name></expr></argument>)</argument_list></call> <operator pos:start="19:61" pos:end="19:61">+</operator> <literal type="number" pos:start="19:63" pos:end="19:63">1</literal></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="20:13" pos:end="22:50"><if pos:start="20:13" pos:end="22:50">if <condition pos:start="20:16" pos:end="20:43">(<expr pos:start="20:17" pos:end="20:42"><name pos:start="20:17" pos:end="20:25">delta_idx</name> <operator pos:start="20:27" pos:end="20:27">&gt;</operator> <name pos:start="20:29" pos:end="20:42"><name pos:start="20:29" pos:end="20:31">sps</name><operator pos:start="20:32" pos:end="20:33">-&gt;</operator><name pos:start="20:34" pos:end="20:42">nb_st_rps</name></name></expr>)</condition> <block pos:start="20:45" pos:end="22:49">{<block_content pos:start="21:24" pos:end="22:49">
                       <expr_stmt pos:start="21:24" pos:end="22:48"><expr pos:start="21:24" pos:end="21:83"><literal type="string" pos:start="21:24" pos:end="21:83">"Invalid value of delta_idx in slice header RPS: %d &gt; %d.\n"</literal></expr><operator pos:start="21:84" pos:end="21:84">,</operator>
                       <expr pos:start="22:24" pos:end="22:32"><name pos:start="22:24" pos:end="22:32">delta_idx</name></expr><operator pos:start="22:33" pos:end="22:33">,</operator> <expr pos:start="22:35" pos:end="22:48"><name pos:start="22:35" pos:end="22:48"><name pos:start="22:35" pos:end="22:37">sps</name><operator pos:start="22:38" pos:end="22:39">-&gt;</operator><name pos:start="22:40" pos:end="22:48">nb_st_rps</name></name></expr></expr_stmt>)</block_content></block><empty_stmt pos:start="22:50" pos:end="22:50">;</empty_stmt></if></if_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:64"><expr pos:start="23:13" pos:end="23:63"><name pos:start="23:13" pos:end="23:20">rps_ridx</name> <operator pos:start="23:22" pos:end="23:22">=</operator> <operator pos:start="23:24" pos:end="23:24">&amp;</operator><name pos:start="23:25" pos:end="23:63"><name pos:start="23:25" pos:end="23:27">sps</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:35">st_rps</name><index pos:start="23:36" pos:end="23:63">[<expr pos:start="23:37" pos:end="23:62"><name pos:start="23:37" pos:end="23:50"><name pos:start="23:37" pos:end="23:39">sps</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:50">nb_st_rps</name></name> <operator pos:start="23:52" pos:end="23:52">-</operator> <name pos:start="23:54" pos:end="23:62">delta_idx</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="24:13" pos:end="24:67"><expr pos:start="24:13" pos:end="24:66"><name pos:start="24:13" pos:end="24:39"><name pos:start="24:13" pos:end="24:15">rps</name><operator pos:start="24:16" pos:end="24:17">-&gt;</operator><name pos:start="24:18" pos:end="24:39">rps_idx_num_delta_pocs</name></name> <operator pos:start="24:41" pos:end="24:41">=</operator> <name pos:start="24:43" pos:end="24:66"><name pos:start="24:43" pos:end="24:50">rps_ridx</name><operator pos:start="24:51" pos:end="24:52">-&gt;</operator><name pos:start="24:53" pos:end="24:66">num_delta_pocs</name></name></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="25:11" pos:end="26:59">else<block type="pseudo" pos:start="26:13" pos:end="26:59"><block_content pos:start="26:13" pos:end="26:59">
            <expr_stmt pos:start="26:13" pos:end="26:59"><expr pos:start="26:13" pos:end="26:58"><name pos:start="26:13" pos:end="26:20">rps_ridx</name> <operator pos:start="26:22" pos:end="26:22">=</operator> <operator pos:start="26:24" pos:end="26:24">&amp;</operator><name pos:start="26:25" pos:end="26:58"><name pos:start="26:25" pos:end="26:27">sps</name><operator pos:start="26:28" pos:end="26:29">-&gt;</operator><name pos:start="26:30" pos:end="26:35">st_rps</name><index pos:start="26:36" pos:end="26:58">[<expr pos:start="26:37" pos:end="26:57"><name pos:start="26:37" pos:end="26:39">rps</name> <operator pos:start="26:41" pos:end="26:41">-</operator> <name pos:start="26:43" pos:end="26:53"><name pos:start="26:43" pos:end="26:45">sps</name><operator pos:start="26:46" pos:end="26:47">-&gt;</operator><name pos:start="26:48" pos:end="26:53">st_rps</name></name> <operator pos:start="26:55" pos:end="26:55">-</operator> <literal type="number" pos:start="26:57" pos:end="26:57">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <expr_stmt pos:start="27:9" pos:end="27:39"><expr pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:22">delta_rps_sign</name> <operator pos:start="27:24" pos:end="27:24">=</operator> <call pos:start="27:26" pos:end="27:38"><name pos:start="27:26" pos:end="27:34">get_bits1</name><argument_list pos:start="27:35" pos:end="27:38">(<argument pos:start="27:36" pos:end="27:37"><expr pos:start="27:36" pos:end="27:37"><name pos:start="27:36" pos:end="27:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:52"><expr pos:start="28:9" pos:end="28:51"><name pos:start="28:9" pos:end="28:21">abs_delta_rps</name>  <operator pos:start="28:24" pos:end="28:24">=</operator> <call pos:start="28:26" pos:end="28:47"><name pos:start="28:26" pos:end="28:43">get_ue_golomb_long</name><argument_list pos:start="28:44" pos:end="28:47">(<argument pos:start="28:45" pos:end="28:46"><expr pos:start="28:45" pos:end="28:46"><name pos:start="28:45" pos:end="28:46">gb</name></expr></argument>)</argument_list></call> <operator pos:start="28:49" pos:end="28:49">+</operator> <literal type="number" pos:start="28:51" pos:end="28:51">1</literal></expr>;</expr_stmt>
        <if_stmt pos:start="29:9" pos:end="31:34"><if pos:start="29:9" pos:end="31:34">if <condition pos:start="29:12" pos:end="29:55">(<expr pos:start="29:13" pos:end="29:54"><name pos:start="29:13" pos:end="29:48"><name pos:start="29:13" pos:end="29:25">abs_delta_rps</name> <argument_list type="generic" pos:start="29:27" pos:end="29:48">&lt; <argument pos:start="29:29" pos:end="29:46"><expr pos:start="29:29" pos:end="29:46"><literal type="number" pos:start="29:29" pos:end="29:29">1</literal> <operator pos:start="29:31" pos:end="29:32">||</operator> <name pos:start="29:34" pos:end="29:46">abs_delta_rps</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="29:50" pos:end="29:54">32768</literal></expr>)</condition> <block pos:start="29:57" pos:end="31:33">{<block_content pos:start="30:20" pos:end="31:33">
                   <expr_stmt pos:start="30:20" pos:end="31:32"><expr pos:start="30:20" pos:end="30:57"><literal type="string" pos:start="30:20" pos:end="30:57">"Invalid value of abs_delta_rps: %d\n"</literal></expr><operator pos:start="30:58" pos:end="30:58">,</operator>
                   <expr pos:start="31:20" pos:end="31:32"><name pos:start="31:20" pos:end="31:32">abs_delta_rps</name></expr></expr_stmt>)</block_content></block><empty_stmt pos:start="31:34" pos:end="31:34">;</empty_stmt></if></if_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:69"><expr pos:start="32:9" pos:end="32:68"><name pos:start="32:9" pos:end="32:17">delta_rps</name>      <operator pos:start="32:24" pos:end="32:24">=</operator> <operator pos:start="32:26" pos:end="32:26">(</operator><literal type="number" pos:start="32:27" pos:end="32:29">1</literal> <operator pos:start="32:29" pos:end="32:29">-</operator> <operator pos:start="32:31" pos:end="32:31">(</operator><name pos:start="32:32" pos:end="32:45">delta_rps_sign</name> <operator pos:start="32:47" pos:end="32:48">&lt;&lt;</operator> <literal type="number" pos:start="32:50" pos:end="32:50">1</literal><operator pos:start="32:51" pos:end="32:51">)</operator><operator pos:start="32:52" pos:end="32:52">)</operator> <operator pos:start="32:54" pos:end="32:54">*</operator> <name pos:start="32:56" pos:end="32:68">abs_delta_rps</name></expr>;</expr_stmt>
        <for pos:start="33:9" pos:end="96:13">for <control pos:start="33:13" pos:end="33:55">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">i</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:50"><expr pos:start="33:21" pos:end="33:49"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:24">&lt;=</operator> <name pos:start="33:26" pos:end="33:49"><name pos:start="33:26" pos:end="33:33">rps_ridx</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:49">num_delta_pocs</name></name></expr>;</condition> <incr pos:start="33:52" pos:end="33:54"><expr pos:start="33:52" pos:end="33:54"><name pos:start="33:52" pos:end="33:52">i</name><operator pos:start="33:53" pos:end="33:54">++</operator></expr></incr>)</control> <block pos:start="33:57" pos:end="96:13">{<block_content pos:start="34:13" pos:end="96:13">
            <decl_stmt pos:start="34:13" pos:end="34:52"><decl pos:start="34:13" pos:end="34:51"><type pos:start="34:13" pos:end="34:15"><name pos:start="34:13" pos:end="34:15">int</name></type> <name pos:start="34:17" pos:end="34:20">used</name> <init pos:start="34:22" pos:end="34:51">= <expr pos:start="34:24" pos:end="34:51"><name pos:start="34:24" pos:end="34:35"><name pos:start="34:24" pos:end="34:26">rps</name><operator pos:start="34:27" pos:end="34:28">-&gt;</operator><name pos:start="34:29" pos:end="34:32">used</name><index pos:start="34:33" pos:end="34:35">[<expr pos:start="34:34" pos:end="34:34"><name pos:start="34:34" pos:end="34:34">k</name></expr>]</index></name> <operator pos:start="34:37" pos:end="34:37">=</operator> <call pos:start="34:39" pos:end="34:51"><name pos:start="34:39" pos:end="34:47">get_bits1</name><argument_list pos:start="34:48" pos:end="34:51">(<argument pos:start="34:49" pos:end="34:50"><expr pos:start="34:49" pos:end="34:50"><name pos:start="34:49" pos:end="34:50">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="35:13" pos:end="36:47"><if pos:start="35:13" pos:end="36:47">if <condition pos:start="35:16" pos:end="35:22">(<expr pos:start="35:17" pos:end="35:21"><operator pos:start="35:17" pos:end="35:17">!</operator><name pos:start="35:18" pos:end="35:21">used</name></expr>)</condition><block type="pseudo" pos:start="36:17" pos:end="36:47"><block_content pos:start="36:17" pos:end="36:47">
                <expr_stmt pos:start="36:17" pos:end="36:47"><expr pos:start="36:17" pos:end="36:46"><name pos:start="36:17" pos:end="36:30">use_delta_flag</name> <operator pos:start="36:32" pos:end="36:32">=</operator> <call pos:start="36:34" pos:end="36:46"><name pos:start="36:34" pos:end="36:42">get_bits1</name><argument_list pos:start="36:43" pos:end="36:46">(<argument pos:start="36:44" pos:end="36:45"><expr pos:start="36:44" pos:end="36:45"><name pos:start="36:44" pos:end="36:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="37:13" pos:end="96:13"><if pos:start="37:13" pos:end="96:13">if <condition pos:start="37:16" pos:end="37:39">(<expr pos:start="37:17" pos:end="37:38"><name pos:start="37:17" pos:end="37:20">used</name> <operator pos:start="37:22" pos:end="37:23">||</operator> <name pos:start="37:25" pos:end="37:38">use_delta_flag</name></expr>)</condition> <block pos:start="37:41" pos:end="96:13">{<block_content pos:start="38:17" pos:end="96:13">
                <if_stmt pos:start="38:17" pos:end="41:42"><if pos:start="38:17" pos:end="39:67">if <condition pos:start="38:20" pos:end="38:49">(<expr pos:start="38:21" pos:end="38:48"><name pos:start="38:21" pos:end="38:21">i</name> <operator pos:start="38:23" pos:end="38:23">&lt;</operator> <name pos:start="38:25" pos:end="38:48"><name pos:start="38:25" pos:end="38:32">rps_ridx</name><operator pos:start="38:33" pos:end="38:34">-&gt;</operator><name pos:start="38:35" pos:end="38:48">num_delta_pocs</name></name></expr>)</condition><block type="pseudo" pos:start="39:21" pos:end="39:67"><block_content pos:start="39:21" pos:end="39:67">
                    <expr_stmt pos:start="39:21" pos:end="39:67"><expr pos:start="39:21" pos:end="39:66"><name pos:start="39:21" pos:end="39:29">delta_poc</name> <operator pos:start="39:31" pos:end="39:31">=</operator> <name pos:start="39:33" pos:end="39:41">delta_rps</name> <operator pos:start="39:43" pos:end="39:43">+</operator> <name pos:start="39:45" pos:end="39:66"><name pos:start="39:45" pos:end="39:52">rps_ridx</name><operator pos:start="39:53" pos:end="39:54">-&gt;</operator><name pos:start="39:55" pos:end="39:63">delta_poc</name><index pos:start="39:64" pos:end="39:66">[<expr pos:start="39:65" pos:end="39:65"><name pos:start="39:65" pos:end="39:65">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="40:17" pos:end="41:42">else<block type="pseudo" pos:start="41:21" pos:end="41:42"><block_content pos:start="41:21" pos:end="41:42">
                    <expr_stmt pos:start="41:21" pos:end="41:42"><expr pos:start="41:21" pos:end="41:41"><name pos:start="41:21" pos:end="41:29">delta_poc</name> <operator pos:start="41:31" pos:end="41:31">=</operator> <name pos:start="41:33" pos:end="41:41">delta_rps</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
                <expr_stmt pos:start="42:17" pos:end="42:46"><expr pos:start="42:17" pos:end="42:45"><name pos:start="42:17" pos:end="42:33"><name pos:start="42:17" pos:end="42:19">rps</name><operator pos:start="42:20" pos:end="42:21">-&gt;</operator><name pos:start="42:22" pos:end="42:30">delta_poc</name><index pos:start="42:31" pos:end="42:33">[<expr pos:start="42:32" pos:end="42:32"><name pos:start="42:32" pos:end="42:32">k</name></expr>]</index></name> <operator pos:start="42:35" pos:end="42:35">=</operator> <name pos:start="42:37" pos:end="42:45">delta_poc</name></expr>;</expr_stmt>
                <if_stmt pos:start="43:17" pos:end="46:25"><if pos:start="43:17" pos:end="44:25">if <condition pos:start="43:20" pos:end="43:34">(<expr pos:start="43:21" pos:end="43:33"><name pos:start="43:21" pos:end="43:29">delta_poc</name> <operator pos:start="43:31" pos:end="43:31">&lt;</operator> <literal type="number" pos:start="43:33" pos:end="43:33">0</literal></expr>)</condition><block type="pseudo" pos:start="44:21" pos:end="44:25"><block_content pos:start="44:21" pos:end="44:25">
                    <expr_stmt pos:start="44:21" pos:end="44:25"><expr pos:start="44:21" pos:end="44:24"><name pos:start="44:21" pos:end="44:22">k0</name><operator pos:start="44:23" pos:end="44:24">++</operator></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="45:17" pos:end="46:25">else<block type="pseudo" pos:start="46:21" pos:end="46:25"><block_content pos:start="46:21" pos:end="46:25">
                    <expr_stmt pos:start="46:21" pos:end="46:25"><expr pos:start="46:21" pos:end="46:24"><name pos:start="46:21" pos:end="46:22">k1</name><operator pos:start="46:23" pos:end="46:24">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
                <expr_stmt pos:start="47:17" pos:end="47:20"><expr pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:17">k</name><operator pos:start="47:18" pos:end="47:19">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="48:9" pos:end="48:35"><expr pos:start="48:9" pos:end="48:34"><name pos:start="48:9" pos:end="48:27"><name pos:start="48:9" pos:end="48:11">rps</name><operator pos:start="48:12" pos:end="48:13">-&gt;</operator><name pos:start="48:14" pos:end="48:27">num_delta_pocs</name></name>    <operator pos:start="48:32" pos:end="48:32">=</operator> <name pos:start="48:34" pos:end="48:34">k</name></expr>;</expr_stmt>
        <expr_stmt pos:start="49:9" pos:end="49:36"><expr pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:11">rps</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:30">num_negative_pics</name></name> <operator pos:start="49:32" pos:end="49:32">=</operator> <name pos:start="49:34" pos:end="49:35">k0</name></expr>;</expr_stmt>
        <comment type="line" pos:start="50:9" pos:end="50:52">// sort in increasing order (smallest first)</comment>
        <if_stmt pos:start="51:9" pos:end="96:13"><if pos:start="51:9" pos:end="96:13">if <condition pos:start="51:12" pos:end="51:37">(<expr pos:start="51:13" pos:end="51:36"><name pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:15">rps</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:31">num_delta_pocs</name></name> <operator pos:start="51:33" pos:end="51:34">!=</operator> <literal type="number" pos:start="51:36" pos:end="51:36">0</literal></expr>)</condition> <block pos:start="51:39" pos:end="96:13">{<block_content pos:start="52:13" pos:end="96:13">
            <decl_stmt pos:start="52:13" pos:end="52:26"><decl pos:start="52:13" pos:end="52:20"><type pos:start="52:13" pos:end="52:15"><name pos:start="52:13" pos:end="52:15">int</name></type> <name pos:start="52:17" pos:end="52:20">used</name></decl>, <decl pos:start="52:23" pos:end="52:25"><type ref="prev" pos:start="52:13" pos:end="52:15"/><name pos:start="52:23" pos:end="52:25">tmp</name></decl>;</decl_stmt>
            <for pos:start="53:13" pos:end="96:13">for <control pos:start="53:17" pos:end="53:53">(<init pos:start="53:18" pos:end="53:23"><expr pos:start="53:18" pos:end="53:22"><name pos:start="53:18" pos:end="53:18">i</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <literal type="number" pos:start="53:22" pos:end="53:22">1</literal></expr>;</init> <condition pos:start="53:25" pos:end="53:48"><expr pos:start="53:25" pos:end="53:47"><name pos:start="53:25" pos:end="53:25">i</name> <operator pos:start="53:27" pos:end="53:27">&lt;</operator> <name pos:start="53:29" pos:end="53:47"><name pos:start="53:29" pos:end="53:31">rps</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:47">num_delta_pocs</name></name></expr>;</condition> <incr pos:start="53:50" pos:end="53:52"><expr pos:start="53:50" pos:end="53:52"><name pos:start="53:50" pos:end="53:50">i</name><operator pos:start="53:51" pos:end="53:52">++</operator></expr></incr>)</control> <block pos:start="53:55" pos:end="96:13">{<block_content pos:start="54:17" pos:end="96:13">
                <expr_stmt pos:start="54:17" pos:end="54:46"><expr pos:start="54:17" pos:end="54:45"><name pos:start="54:17" pos:end="54:25">delta_poc</name> <operator pos:start="54:27" pos:end="54:27">=</operator> <name pos:start="54:29" pos:end="54:45"><name pos:start="54:29" pos:end="54:31">rps</name><operator pos:start="54:32" pos:end="54:33">-&gt;</operator><name pos:start="54:34" pos:end="54:42">delta_poc</name><index pos:start="54:43" pos:end="54:45">[<expr pos:start="54:44" pos:end="54:44"><name pos:start="54:44" pos:end="54:44">i</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="55:17" pos:end="55:41"><expr pos:start="55:17" pos:end="55:40"><name pos:start="55:17" pos:end="55:20">used</name>      <operator pos:start="55:27" pos:end="55:27">=</operator> <name pos:start="55:29" pos:end="55:40"><name pos:start="55:29" pos:end="55:31">rps</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:37">used</name><index pos:start="55:38" pos:end="55:40">[<expr pos:start="55:39" pos:end="55:39"><name pos:start="55:39" pos:end="55:39">i</name></expr>]</index></name></expr>;</expr_stmt>
                <for pos:start="56:17" pos:end="96:13">for <control pos:start="56:21" pos:end="56:44">(<init pos:start="56:22" pos:end="56:31"><expr pos:start="56:22" pos:end="56:30"><name pos:start="56:22" pos:end="56:22">k</name> <operator pos:start="56:24" pos:end="56:24">=</operator> <name pos:start="56:26" pos:end="56:26">i</name> <operator pos:start="56:28" pos:end="56:28">-</operator> <literal type="number" pos:start="56:30" pos:end="56:30">1</literal></expr>;</init> <condition pos:start="56:33" pos:end="56:39"><expr pos:start="56:33" pos:end="56:38"><name pos:start="56:33" pos:end="56:33">k</name> <operator pos:start="56:35" pos:end="56:36">&gt;=</operator> <literal type="number" pos:start="56:38" pos:end="56:38">0</literal></expr>;</condition> <incr pos:start="56:41" pos:end="56:43"><expr pos:start="56:41" pos:end="56:43"><name pos:start="56:41" pos:end="56:41">k</name><operator pos:start="56:42" pos:end="56:43">--</operator></expr></incr>)</control> <block pos:start="56:46" pos:end="96:13">{<block_content pos:start="57:21" pos:end="96:13">
                    <expr_stmt pos:start="57:21" pos:end="57:44"><expr pos:start="57:21" pos:end="57:43"><name pos:start="57:21" pos:end="57:23">tmp</name> <operator pos:start="57:25" pos:end="57:25">=</operator> <name pos:start="57:27" pos:end="57:43"><name pos:start="57:27" pos:end="57:29">rps</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:40">delta_poc</name><index pos:start="57:41" pos:end="57:43">[<expr pos:start="57:42" pos:end="57:42"><name pos:start="57:42" pos:end="57:42">k</name></expr>]</index></name></expr>;</expr_stmt>
                    <if_stmt pos:start="58:21" pos:end="96:13"><if pos:start="58:21" pos:end="96:13">if <condition pos:start="58:24" pos:end="58:40">(<expr pos:start="58:25" pos:end="58:39"><name pos:start="58:25" pos:end="58:33">delta_poc</name> <operator pos:start="58:35" pos:end="58:35">&lt;</operator> <name pos:start="58:37" pos:end="58:39">tmp</name></expr>)</condition> <block pos:start="58:42" pos:end="96:13">{<block_content pos:start="59:25" pos:end="96:13">
                        <expr_stmt pos:start="59:25" pos:end="59:52"><expr pos:start="59:25" pos:end="59:51"><name pos:start="59:25" pos:end="59:45"><name pos:start="59:25" pos:end="59:27">rps</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:38">delta_poc</name><index pos:start="59:39" pos:end="59:45">[<expr pos:start="59:40" pos:end="59:44"><name pos:start="59:40" pos:end="59:40">k</name> <operator pos:start="59:42" pos:end="59:42">+</operator> <literal type="number" pos:start="59:44" pos:end="59:44">1</literal></expr>]</index></name> <operator pos:start="59:47" pos:end="59:47">=</operator> <name pos:start="59:49" pos:end="59:51">tmp</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="60:25" pos:end="60:61"><expr pos:start="60:25" pos:end="60:60"><name pos:start="60:25" pos:end="60:40"><name pos:start="60:25" pos:end="60:27">rps</name><operator pos:start="60:28" pos:end="60:29">-&gt;</operator><name pos:start="60:30" pos:end="60:33">used</name><index pos:start="60:34" pos:end="60:40">[<expr pos:start="60:35" pos:end="60:39"><name pos:start="60:35" pos:end="60:35">k</name> <operator pos:start="60:37" pos:end="60:37">+</operator> <literal type="number" pos:start="60:39" pos:end="60:39">1</literal></expr>]</index></name>      <operator pos:start="60:47" pos:end="60:47">=</operator> <name pos:start="60:49" pos:end="60:60"><name pos:start="60:49" pos:end="60:51">rps</name><operator pos:start="60:52" pos:end="60:53">-&gt;</operator><name pos:start="60:54" pos:end="60:57">used</name><index pos:start="60:58" pos:end="60:60">[<expr pos:start="60:59" pos:end="60:59"><name pos:start="60:59" pos:end="60:59">k</name></expr>]</index></name></expr>;</expr_stmt>
                        <expr_stmt pos:start="61:25" pos:end="61:58"><expr pos:start="61:25" pos:end="61:57"><name pos:start="61:25" pos:end="61:41"><name pos:start="61:25" pos:end="61:27">rps</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:38">delta_poc</name><index pos:start="61:39" pos:end="61:41">[<expr pos:start="61:40" pos:end="61:40"><name pos:start="61:40" pos:end="61:40">k</name></expr>]</index></name>     <operator pos:start="61:47" pos:end="61:47">=</operator> <name pos:start="61:49" pos:end="61:57">delta_poc</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="62:25" pos:end="62:53"><expr pos:start="62:25" pos:end="62:52"><name pos:start="62:25" pos:end="62:36"><name pos:start="62:25" pos:end="62:27">rps</name><operator pos:start="62:28" pos:end="62:29">-&gt;</operator><name pos:start="62:30" pos:end="62:33">used</name><index pos:start="62:34" pos:end="62:36">[<expr pos:start="62:35" pos:end="62:35"><name pos:start="62:35" pos:end="62:35">k</name></expr>]</index></name>          <operator pos:start="62:47" pos:end="62:47">=</operator> <name pos:start="62:49" pos:end="62:52">used</name></expr>;</expr_stmt>
        <if_stmt pos:start="63:9" pos:end="96:13"><if pos:start="63:9" pos:end="96:13">if <condition pos:start="63:12" pos:end="63:47">(<expr pos:start="63:13" pos:end="63:46"><operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:35"><name pos:start="63:14" pos:end="63:16">rps</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:35">num_negative_pics</name></name> <operator pos:start="63:37" pos:end="63:38">&gt;&gt;</operator> <literal type="number" pos:start="63:40" pos:end="63:40">1</literal><operator pos:start="63:41" pos:end="63:41">)</operator> <operator pos:start="63:43" pos:end="63:44">!=</operator> <literal type="number" pos:start="63:46" pos:end="63:46">0</literal></expr>)</condition> <block pos:start="63:49" pos:end="96:13">{<block_content pos:start="64:13" pos:end="96:13">
            <decl_stmt pos:start="64:13" pos:end="64:21"><decl pos:start="64:13" pos:end="64:20"><type pos:start="64:13" pos:end="64:15"><name pos:start="64:13" pos:end="64:15">int</name></type> <name pos:start="64:17" pos:end="64:20">used</name></decl>;</decl_stmt>
            <expr_stmt pos:start="65:13" pos:end="65:43"><expr pos:start="65:13" pos:end="65:42"><name pos:start="65:13" pos:end="65:13">k</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:38"><name pos:start="65:17" pos:end="65:19">rps</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:38">num_negative_pics</name></name> <operator pos:start="65:40" pos:end="65:40">-</operator> <literal type="number" pos:start="65:42" pos:end="65:42">1</literal></expr>;</expr_stmt>
            <comment type="line" pos:start="66:13" pos:end="66:56">// flip the negative values to largest first</comment>
            <for pos:start="67:13" pos:end="75:5">for <control pos:start="67:17" pos:end="67:61">(<init pos:start="67:18" pos:end="67:23"><expr pos:start="67:18" pos:end="67:22"><name pos:start="67:18" pos:end="67:18">i</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>;</init> <condition pos:start="67:25" pos:end="67:56"><expr pos:start="67:25" pos:end="67:55"><name pos:start="67:25" pos:end="67:52"><name pos:start="67:25" pos:end="67:25">i</name> <argument_list type="generic" pos:start="67:27" pos:end="67:52">&lt; <argument pos:start="67:29" pos:end="67:50"><expr pos:start="67:29" pos:end="67:50"><name pos:start="67:29" pos:end="67:50"><name pos:start="67:29" pos:end="67:31">rps</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:50">num_negative_pics</name></name></expr></argument> &gt;</argument_list></name><operator pos:start="67:53" pos:end="67:53">&gt;</operator> <literal type="number" pos:start="67:55" pos:end="67:55">1</literal></expr>;</condition> <incr pos:start="67:58" pos:end="67:60"><expr pos:start="67:58" pos:end="67:60"><name pos:start="67:58" pos:end="67:58">i</name><operator pos:start="67:59" pos:end="67:60">++</operator></expr></incr>)</control> <block pos:start="67:63" pos:end="75:5">{<block_content pos:start="68:17" pos:end="74:20">
                <expr_stmt pos:start="68:17" pos:end="68:54"><expr pos:start="68:17" pos:end="68:53"><name pos:start="68:17" pos:end="68:25">delta_poc</name>         <operator pos:start="68:35" pos:end="68:35">=</operator> <name pos:start="68:37" pos:end="68:53"><name pos:start="68:37" pos:end="68:39">rps</name><operator pos:start="68:40" pos:end="68:41">-&gt;</operator><name pos:start="68:42" pos:end="68:50">delta_poc</name><index pos:start="68:51" pos:end="68:53">[<expr pos:start="68:52" pos:end="68:52"><name pos:start="68:52" pos:end="68:52">i</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="69:17" pos:end="69:49"><expr pos:start="69:17" pos:end="69:48"><name pos:start="69:17" pos:end="69:20">used</name>              <operator pos:start="69:35" pos:end="69:35">=</operator> <name pos:start="69:37" pos:end="69:48"><name pos:start="69:37" pos:end="69:39">rps</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:45">used</name><index pos:start="69:46" pos:end="69:48">[<expr pos:start="69:47" pos:end="69:47"><name pos:start="69:47" pos:end="69:47">i</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="70:17" pos:end="70:54"><expr pos:start="70:17" pos:end="70:53"><name pos:start="70:17" pos:end="70:33"><name pos:start="70:17" pos:end="70:19">rps</name><operator pos:start="70:20" pos:end="70:21">-&gt;</operator><name pos:start="70:22" pos:end="70:30">delta_poc</name><index pos:start="70:31" pos:end="70:33">[<expr pos:start="70:32" pos:end="70:32"><name pos:start="70:32" pos:end="70:32">i</name></expr>]</index></name> <operator pos:start="70:35" pos:end="70:35">=</operator> <name pos:start="70:37" pos:end="70:53"><name pos:start="70:37" pos:end="70:39">rps</name><operator pos:start="70:40" pos:end="70:41">-&gt;</operator><name pos:start="70:42" pos:end="70:50">delta_poc</name><index pos:start="70:51" pos:end="70:53">[<expr pos:start="70:52" pos:end="70:52"><name pos:start="70:52" pos:end="70:52">k</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="71:17" pos:end="71:49"><expr pos:start="71:17" pos:end="71:48"><name pos:start="71:17" pos:end="71:28"><name pos:start="71:17" pos:end="71:19">rps</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:25">used</name><index pos:start="71:26" pos:end="71:28">[<expr pos:start="71:27" pos:end="71:27"><name pos:start="71:27" pos:end="71:27">i</name></expr>]</index></name>      <operator pos:start="71:35" pos:end="71:35">=</operator> <name pos:start="71:37" pos:end="71:48"><name pos:start="71:37" pos:end="71:39">rps</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:45">used</name><index pos:start="71:46" pos:end="71:48">[<expr pos:start="71:47" pos:end="71:47"><name pos:start="71:47" pos:end="71:47">k</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="72:17" pos:end="72:46"><expr pos:start="72:17" pos:end="72:45"><name pos:start="72:17" pos:end="72:33"><name pos:start="72:17" pos:end="72:19">rps</name><operator pos:start="72:20" pos:end="72:21">-&gt;</operator><name pos:start="72:22" pos:end="72:30">delta_poc</name><index pos:start="72:31" pos:end="72:33">[<expr pos:start="72:32" pos:end="72:32"><name pos:start="72:32" pos:end="72:32">k</name></expr>]</index></name> <operator pos:start="72:35" pos:end="72:35">=</operator> <name pos:start="72:37" pos:end="72:45">delta_poc</name></expr>;</expr_stmt>
                <expr_stmt pos:start="73:17" pos:end="73:41"><expr pos:start="73:17" pos:end="73:40"><name pos:start="73:17" pos:end="73:28"><name pos:start="73:17" pos:end="73:19">rps</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:25">used</name><index pos:start="73:26" pos:end="73:28">[<expr pos:start="73:27" pos:end="73:27"><name pos:start="73:27" pos:end="73:27">k</name></expr>]</index></name>      <operator pos:start="73:35" pos:end="73:35">=</operator> <name pos:start="73:37" pos:end="73:40">used</name></expr>;</expr_stmt>
                <expr_stmt pos:start="74:17" pos:end="74:20"><expr pos:start="74:17" pos:end="74:19"><name pos:start="74:17" pos:end="74:17">k</name><operator pos:start="74:18" pos:end="74:19">--</operator></expr>;</expr_stmt>
    </block_content>}</block></for> <if_stmt pos:start="75:7" pos:end="96:13"><else pos:start="75:7" pos:end="96:13">else <block pos:start="75:12" pos:end="96:13">{<block_content pos:start="76:9" pos:end="96:13">
        <decl_stmt pos:start="76:9" pos:end="76:44"><decl pos:start="76:9" pos:end="76:25"><type pos:start="76:9" pos:end="76:20"><name pos:start="76:9" pos:end="76:16">unsigned</name> <name pos:start="76:18" pos:end="76:20">int</name></type> <name pos:start="76:22" pos:end="76:25">prev</name></decl>, <decl pos:start="76:28" pos:end="76:43"><type ref="prev" pos:start="76:9" pos:end="76:20"/><name pos:start="76:28" pos:end="76:43">nb_positive_pics</name></decl>;</decl_stmt>
        <expr_stmt pos:start="77:9" pos:end="77:56"><expr pos:start="77:9" pos:end="77:55"><name pos:start="77:9" pos:end="77:30"><name pos:start="77:9" pos:end="77:11">rps</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:30">num_negative_pics</name></name> <operator pos:start="77:32" pos:end="77:32">=</operator> <call pos:start="77:34" pos:end="77:55"><name pos:start="77:34" pos:end="77:51">get_ue_golomb_long</name><argument_list pos:start="77:52" pos:end="77:55">(<argument pos:start="77:53" pos:end="77:54"><expr pos:start="77:53" pos:end="77:54"><name pos:start="77:53" pos:end="77:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="78:9" pos:end="78:56"><expr pos:start="78:9" pos:end="78:55"><name pos:start="78:9" pos:end="78:24">nb_positive_pics</name>       <operator pos:start="78:32" pos:end="78:32">=</operator> <call pos:start="78:34" pos:end="78:55"><name pos:start="78:34" pos:end="78:51">get_ue_golomb_long</name><argument_list pos:start="78:52" pos:end="78:55">(<argument pos:start="78:53" pos:end="78:54"><expr pos:start="78:53" pos:end="78:54"><name pos:start="78:53" pos:end="78:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="79:9" pos:end="96:13"><if pos:start="79:9" pos:end="96:13">if <condition pos:start="79:12" pos:end="80:46">(<expr pos:start="79:13" pos:end="80:45"><name pos:start="79:13" pos:end="79:34"><name pos:start="79:13" pos:end="79:15">rps</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:34">num_negative_pics</name></name> <operator pos:start="79:36" pos:end="79:37">&gt;=</operator> <name pos:start="79:39" pos:end="79:51">HEVC_MAX_REFS</name> <operator pos:start="79:53" pos:end="79:54">||</operator>
            <name pos:start="80:13" pos:end="80:28">nb_positive_pics</name> <operator pos:start="80:30" pos:end="80:31">&gt;=</operator> <name pos:start="80:33" pos:end="80:45">HEVC_MAX_REFS</name></expr>)</condition> <block pos:start="80:48" pos:end="96:13">{<block_content pos:start="81:13" pos:end="96:13">
            <expr_stmt pos:start="81:13" pos:end="81:80"><expr pos:start="81:13" pos:end="81:79"><call pos:start="81:13" pos:end="81:79"><name pos:start="81:13" pos:end="81:18">av_log</name><argument_list pos:start="81:19" pos:end="81:79">(<argument pos:start="81:20" pos:end="81:24"><expr pos:start="81:20" pos:end="81:24"><name pos:start="81:20" pos:end="81:24">avctx</name></expr></argument>, <argument pos:start="81:27" pos:end="81:38"><expr pos:start="81:27" pos:end="81:38"><name pos:start="81:27" pos:end="81:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:41" pos:end="81:78"><expr pos:start="81:41" pos:end="81:78"><literal type="string" pos:start="81:41" pos:end="81:78">"Too many refs in a short term RPS.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="82:9" pos:end="82:72"><expr pos:start="82:9" pos:end="82:71"><name pos:start="82:9" pos:end="82:27"><name pos:start="82:9" pos:end="82:11">rps</name><operator pos:start="82:12" pos:end="82:13">-&gt;</operator><name pos:start="82:14" pos:end="82:27">num_delta_pocs</name></name> <operator pos:start="82:29" pos:end="82:29">=</operator> <name pos:start="82:31" pos:end="82:52"><name pos:start="82:31" pos:end="82:33">rps</name><operator pos:start="82:34" pos:end="82:35">-&gt;</operator><name pos:start="82:36" pos:end="82:52">num_negative_pics</name></name> <operator pos:start="82:54" pos:end="82:54">+</operator> <name pos:start="82:56" pos:end="82:71">nb_positive_pics</name></expr>;</expr_stmt>
        <if_stmt pos:start="83:9" pos:end="96:13"><if pos:start="83:9" pos:end="96:13">if <condition pos:start="83:12" pos:end="83:32">(<expr pos:start="83:13" pos:end="83:31"><name pos:start="83:13" pos:end="83:31"><name pos:start="83:13" pos:end="83:15">rps</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:31">num_delta_pocs</name></name></expr>)</condition> <block pos:start="83:34" pos:end="96:13">{<block_content pos:start="84:13" pos:end="96:13">
            <expr_stmt pos:start="84:13" pos:end="84:21"><expr pos:start="84:13" pos:end="84:20"><name pos:start="84:13" pos:end="84:16">prev</name> <operator pos:start="84:18" pos:end="84:18">=</operator> <literal type="number" pos:start="84:20" pos:end="84:20">0</literal></expr>;</expr_stmt>
            <for pos:start="85:13" pos:end="96:13">for <control pos:start="85:17" pos:end="85:56">(<init pos:start="85:18" pos:end="85:23"><expr pos:start="85:18" pos:end="85:22"><name pos:start="85:18" pos:end="85:18">i</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <literal type="number" pos:start="85:22" pos:end="85:22">0</literal></expr>;</init> <condition pos:start="85:25" pos:end="85:51"><expr pos:start="85:25" pos:end="85:50"><name pos:start="85:25" pos:end="85:25">i</name> <operator pos:start="85:27" pos:end="85:27">&lt;</operator> <name pos:start="85:29" pos:end="85:50"><name pos:start="85:29" pos:end="85:31">rps</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:50">num_negative_pics</name></name></expr>;</condition> <incr pos:start="85:53" pos:end="85:55"><expr pos:start="85:53" pos:end="85:55"><name pos:start="85:53" pos:end="85:53">i</name><operator pos:start="85:54" pos:end="85:55">++</operator></expr></incr>)</control> <block pos:start="85:58" pos:end="96:13">{<block_content pos:start="86:17" pos:end="96:13">
                <expr_stmt pos:start="86:17" pos:end="86:55"><expr pos:start="86:17" pos:end="86:54"><name pos:start="86:17" pos:end="86:25">delta_poc</name> <operator pos:start="86:27" pos:end="86:27">=</operator> <call pos:start="86:29" pos:end="86:50"><name pos:start="86:29" pos:end="86:46">get_ue_golomb_long</name><argument_list pos:start="86:47" pos:end="86:50">(<argument pos:start="86:48" pos:end="86:49"><expr pos:start="86:48" pos:end="86:49"><name pos:start="86:48" pos:end="86:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="86:52" pos:end="86:52">+</operator> <literal type="number" pos:start="86:54" pos:end="86:54">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="87:17" pos:end="87:34"><expr pos:start="87:17" pos:end="87:33"><name pos:start="87:17" pos:end="87:20">prev</name> <operator pos:start="87:22" pos:end="87:23">-=</operator> <name pos:start="87:25" pos:end="87:33">delta_poc</name></expr>;</expr_stmt>
                <expr_stmt pos:start="88:17" pos:end="88:41"><expr pos:start="88:17" pos:end="88:40"><name pos:start="88:17" pos:end="88:33"><name pos:start="88:17" pos:end="88:19">rps</name><operator pos:start="88:20" pos:end="88:21">-&gt;</operator><name pos:start="88:22" pos:end="88:30">delta_poc</name><index pos:start="88:31" pos:end="88:33">[<expr pos:start="88:32" pos:end="88:32"><name pos:start="88:32" pos:end="88:32">i</name></expr>]</index></name> <operator pos:start="88:35" pos:end="88:35">=</operator> <name pos:start="88:37" pos:end="88:40">prev</name></expr>;</expr_stmt>
                <expr_stmt pos:start="89:17" pos:end="89:50"><expr pos:start="89:17" pos:end="89:49"><name pos:start="89:17" pos:end="89:28"><name pos:start="89:17" pos:end="89:19">rps</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:25">used</name><index pos:start="89:26" pos:end="89:28">[<expr pos:start="89:27" pos:end="89:27"><name pos:start="89:27" pos:end="89:27">i</name></expr>]</index></name>      <operator pos:start="89:35" pos:end="89:35">=</operator> <call pos:start="89:37" pos:end="89:49"><name pos:start="89:37" pos:end="89:45">get_bits1</name><argument_list pos:start="89:46" pos:end="89:49">(<argument pos:start="89:47" pos:end="89:48"><expr pos:start="89:47" pos:end="89:48"><name pos:start="89:47" pos:end="89:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="90:13" pos:end="90:21"><expr pos:start="90:13" pos:end="90:20"><name pos:start="90:13" pos:end="90:16">prev</name> <operator pos:start="90:18" pos:end="90:18">=</operator> <literal type="number" pos:start="90:20" pos:end="90:20">0</literal></expr>;</expr_stmt>
            <for pos:start="91:13" pos:end="96:13">for <control pos:start="91:17" pos:end="91:50">(<init pos:start="91:18" pos:end="91:23"><expr pos:start="91:18" pos:end="91:22"><name pos:start="91:18" pos:end="91:18">i</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <literal type="number" pos:start="91:22" pos:end="91:22">0</literal></expr>;</init> <condition pos:start="91:25" pos:end="91:45"><expr pos:start="91:25" pos:end="91:44"><name pos:start="91:25" pos:end="91:25">i</name> <operator pos:start="91:27" pos:end="91:27">&lt;</operator> <name pos:start="91:29" pos:end="91:44">nb_positive_pics</name></expr>;</condition> <incr pos:start="91:47" pos:end="91:49"><expr pos:start="91:47" pos:end="91:49"><name pos:start="91:47" pos:end="91:47">i</name><operator pos:start="91:48" pos:end="91:49">++</operator></expr></incr>)</control> <block pos:start="91:52" pos:end="96:13">{<block_content pos:start="92:17" pos:end="96:13">
                <expr_stmt pos:start="92:17" pos:end="92:55"><expr pos:start="92:17" pos:end="92:54"><name pos:start="92:17" pos:end="92:25">delta_poc</name> <operator pos:start="92:27" pos:end="92:27">=</operator> <call pos:start="92:29" pos:end="92:50"><name pos:start="92:29" pos:end="92:46">get_ue_golomb_long</name><argument_list pos:start="92:47" pos:end="92:50">(<argument pos:start="92:48" pos:end="92:49"><expr pos:start="92:48" pos:end="92:49"><name pos:start="92:48" pos:end="92:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="92:52" pos:end="92:52">+</operator> <literal type="number" pos:start="92:54" pos:end="92:54">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="93:17" pos:end="93:34"><expr pos:start="93:17" pos:end="93:33"><name pos:start="93:17" pos:end="93:20">prev</name> <operator pos:start="93:22" pos:end="93:23">+=</operator> <name pos:start="93:25" pos:end="93:33">delta_poc</name></expr>;</expr_stmt>
                <expr_stmt pos:start="94:17" pos:end="94:66"><expr pos:start="94:17" pos:end="94:65"><name pos:start="94:17" pos:end="94:58"><name pos:start="94:17" pos:end="94:19">rps</name><operator pos:start="94:20" pos:end="94:21">-&gt;</operator><name pos:start="94:22" pos:end="94:30">delta_poc</name><index pos:start="94:31" pos:end="94:58">[<expr pos:start="94:32" pos:end="94:57"><name pos:start="94:32" pos:end="94:53"><name pos:start="94:32" pos:end="94:34">rps</name><operator pos:start="94:35" pos:end="94:36">-&gt;</operator><name pos:start="94:37" pos:end="94:53">num_negative_pics</name></name> <operator pos:start="94:55" pos:end="94:55">+</operator> <name pos:start="94:57" pos:end="94:57">i</name></expr>]</index></name> <operator pos:start="94:60" pos:end="94:60">=</operator> <name pos:start="94:62" pos:end="94:65">prev</name></expr>;</expr_stmt>
                <expr_stmt pos:start="95:17" pos:end="95:75"><expr pos:start="95:17" pos:end="95:74"><name pos:start="95:17" pos:end="95:53"><name pos:start="95:17" pos:end="95:19">rps</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:25">used</name><index pos:start="95:26" pos:end="95:53">[<expr pos:start="95:27" pos:end="95:52"><name pos:start="95:27" pos:end="95:48"><name pos:start="95:27" pos:end="95:29">rps</name><operator pos:start="95:30" pos:end="95:31">-&gt;</operator><name pos:start="95:32" pos:end="95:48">num_negative_pics</name></name> <operator pos:start="95:50" pos:end="95:50">+</operator> <name pos:start="95:52" pos:end="95:52">i</name></expr>]</index></name>      <operator pos:start="95:60" pos:end="95:60">=</operator> <call pos:start="95:62" pos:end="95:74"><name pos:start="95:62" pos:end="95:70">get_bits1</name><argument_list pos:start="95:71" pos:end="95:74">(<argument pos:start="95:72" pos:end="95:73"><expr pos:start="95:72" pos:end="95:73"><name pos:start="95:72" pos:end="95:73">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="96:5" pos:end="96:13">return <expr pos:start="96:12" pos:end="96:12"><literal type="number" pos:start="96:12" pos:end="96:12">0</literal></expr>;</return></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></unit>
