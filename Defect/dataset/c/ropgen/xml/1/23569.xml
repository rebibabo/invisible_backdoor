<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23569.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">vfio_msi_interrupt</name><parameter_list pos:start="1:31" pos:end="1:44">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:37"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">VFIOMSIVector</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:25">vector</name> <init pos:start="5:27" pos:end="5:34">= <expr pos:start="5:29" pos:end="5:34"><name pos:start="5:29" pos:end="5:34">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">VFIODevice</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:20">vdev</name> <init pos:start="7:22" pos:end="7:35">= <expr pos:start="7:24" pos:end="7:35"><name pos:start="7:24" pos:end="7:35"><name pos:start="7:24" pos:end="7:29">vector</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:35">vdev</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">nr</name> <init pos:start="9:12" pos:end="9:39">= <expr pos:start="9:14" pos:end="9:39"><name pos:start="9:14" pos:end="9:19">vector</name> <operator pos:start="9:21" pos:end="9:21">-</operator> <name pos:start="9:23" pos:end="9:39"><name pos:start="9:23" pos:end="9:26">vdev</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:39">msi_vectors</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:59">(<expr pos:start="13:9" pos:end="13:58"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:58"><name pos:start="13:10" pos:end="13:38">event_notifier_test_and_clear</name><argument_list pos:start="13:39" pos:end="13:58">(<argument pos:start="13:40" pos:end="13:57"><expr pos:start="13:40" pos:end="13:57"><operator pos:start="13:40" pos:end="13:40">&amp;</operator><name pos:start="13:41" pos:end="13:57"><name pos:start="13:41" pos:end="13:46">vector</name><operator pos:start="13:47" pos:end="13:48">-&gt;</operator><name pos:start="13:49" pos:end="13:57">interrupt</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:61" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="25:37"><expr pos:start="21:5" pos:end="25:36"><call pos:start="21:5" pos:end="25:36"><name pos:start="21:5" pos:end="21:11">DPRINTF</name><argument_list pos:start="21:12" pos:end="25:36">(<argument pos:start="21:13" pos:end="21:47"><expr pos:start="21:13" pos:end="21:47"><literal type="string" pos:start="21:13" pos:end="21:47">"%s(%04x:%02x:%02x.%x) vector %d\n"</literal></expr></argument>, <argument pos:start="21:50" pos:end="21:57"><expr pos:start="21:50" pos:end="21:57"><name pos:start="21:50" pos:end="21:57">__func__</name></expr></argument>,

            <argument pos:start="23:13" pos:end="23:29"><expr pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:16">vdev</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:22">host</name><operator pos:start="23:23" pos:end="23:23">.</operator><name pos:start="23:24" pos:end="23:29">domain</name></name></expr></argument>, <argument pos:start="23:32" pos:end="23:45"><expr pos:start="23:32" pos:end="23:45"><name pos:start="23:32" pos:end="23:45"><name pos:start="23:32" pos:end="23:35">vdev</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:41">host</name><operator pos:start="23:42" pos:end="23:42">.</operator><name pos:start="23:43" pos:end="23:45">bus</name></name></expr></argument>, <argument pos:start="23:48" pos:end="23:62"><expr pos:start="23:48" pos:end="23:62"><name pos:start="23:48" pos:end="23:62"><name pos:start="23:48" pos:end="23:51">vdev</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:57">host</name><operator pos:start="23:58" pos:end="23:58">.</operator><name pos:start="23:59" pos:end="23:62">slot</name></name></expr></argument>,

            <argument pos:start="25:13" pos:end="25:31"><expr pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:16">vdev</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:22">host</name><operator pos:start="25:23" pos:end="25:23">.</operator><name pos:start="25:24" pos:end="25:31">function</name></name></expr></argument>, <argument pos:start="25:34" pos:end="25:35"><expr pos:start="25:34" pos:end="25:35"><name pos:start="25:34" pos:end="25:35">nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="41:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:41">(<expr pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:12">vdev</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:23">interrupt</name></name> <operator pos:start="29:25" pos:end="29:26">==</operator> <name pos:start="29:28" pos:end="29:40">VFIO_INT_MSIX</name></expr>)</condition> <block pos:start="29:43" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:37">

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><call pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:19">msix_notify</name><argument_list pos:start="31:20" pos:end="31:36">(<argument pos:start="31:21" pos:end="31:31"><expr pos:start="31:21" pos:end="31:31"><operator pos:start="31:21" pos:end="31:21">&amp;</operator><name pos:start="31:22" pos:end="31:31"><name pos:start="31:22" pos:end="31:25">vdev</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:31">pdev</name></name></expr></argument>, <argument pos:start="31:34" pos:end="31:35"><expr pos:start="31:34" pos:end="31:35"><name pos:start="31:34" pos:end="31:35">nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="33:7" pos:end="37:5">else if <condition pos:start="33:15" pos:end="33:47">(<expr pos:start="33:16" pos:end="33:46"><name pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:19">vdev</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:30">interrupt</name></name> <operator pos:start="33:32" pos:end="33:33">==</operator> <name pos:start="33:35" pos:end="33:46">VFIO_INT_MSI</name></expr>)</condition> <block pos:start="33:49" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:36">

        <expr_stmt pos:start="35:9" pos:end="35:36"><expr pos:start="35:9" pos:end="35:35"><call pos:start="35:9" pos:end="35:35"><name pos:start="35:9" pos:end="35:18">msi_notify</name><argument_list pos:start="35:19" pos:end="35:35">(<argument pos:start="35:20" pos:end="35:30"><expr pos:start="35:20" pos:end="35:30"><operator pos:start="35:20" pos:end="35:20">&amp;</operator><name pos:start="35:21" pos:end="35:30"><name pos:start="35:21" pos:end="35:24">vdev</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:30">pdev</name></name></expr></argument>, <argument pos:start="35:33" pos:end="35:34"><expr pos:start="35:33" pos:end="35:34"><name pos:start="35:33" pos:end="35:34">nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="41:5">else <block pos:start="37:12" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:72">

        <expr_stmt pos:start="39:9" pos:end="39:72"><expr pos:start="39:9" pos:end="39:71"><call pos:start="39:9" pos:end="39:71"><name pos:start="39:9" pos:end="39:20">error_report</name><argument_list pos:start="39:21" pos:end="39:71">(<argument pos:start="39:22" pos:end="39:70"><expr pos:start="39:22" pos:end="39:70"><literal type="string" pos:start="39:22" pos:end="39:70">"vfio: MSI interrupt receieved, but not enabled?"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
