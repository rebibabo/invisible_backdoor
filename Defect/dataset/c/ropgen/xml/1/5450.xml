<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5450.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">mipsnet_init</name> <parameter_list pos:start="1:19" pos:end="1:55">(<parameter pos:start="1:20" pos:end="1:27"><decl pos:start="1:20" pos:end="1:27"><type pos:start="1:20" pos:end="1:27"><name pos:start="1:20" pos:end="1:22">int</name></type> <name pos:start="1:24" pos:end="1:27">base</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:37">qemu_irq</name></type> <name pos:start="1:39" pos:end="1:41">irq</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:54"><decl pos:start="1:44" pos:end="1:54"><type pos:start="1:44" pos:end="1:54"><name pos:start="1:44" pos:end="1:50">NICInfo</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">nd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:68">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MIPSnetState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:40"><expr pos:start="9:5" pos:end="9:39"><call pos:start="9:5" pos:end="9:39"><name pos:start="9:5" pos:end="9:24">qemu_check_nic_model</name><argument_list pos:start="9:25" pos:end="9:39">(<argument pos:start="9:26" pos:end="9:27"><expr pos:start="9:26" pos:end="9:27"><name pos:start="9:26" pos:end="9:27">nd</name></expr></argument>, <argument pos:start="9:30" pos:end="9:38"><expr pos:start="9:30" pos:end="9:38"><literal type="string" pos:start="9:30" pos:end="9:38">"mipsnet"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:5">s</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="13:42"><name pos:start="13:9" pos:end="13:20">qemu_mallocz</name><argument_list pos:start="13:21" pos:end="13:42">(<argument pos:start="13:22" pos:end="13:41"><expr pos:start="13:22" pos:end="13:41"><sizeof pos:start="13:22" pos:end="13:41">sizeof<argument_list pos:start="13:28" pos:end="13:41">(<argument pos:start="13:29" pos:end="13:40"><expr pos:start="13:29" pos:end="13:40"><name pos:start="13:29" pos:end="13:40">MIPSnetState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:64"><expr pos:start="17:5" pos:end="17:63"><call pos:start="17:5" pos:end="17:63"><name pos:start="17:5" pos:end="17:25">register_ioport_write</name><argument_list pos:start="17:26" pos:end="17:63">(<argument pos:start="17:27" pos:end="17:30"><expr pos:start="17:27" pos:end="17:30"><name pos:start="17:27" pos:end="17:30">base</name></expr></argument>, <argument pos:start="17:33" pos:end="17:34"><expr pos:start="17:33" pos:end="17:34"><literal type="number" pos:start="17:33" pos:end="17:34">36</literal></expr></argument>, <argument pos:start="17:37" pos:end="17:37"><expr pos:start="17:37" pos:end="17:37"><literal type="number" pos:start="17:37" pos:end="17:37">1</literal></expr></argument>, <argument pos:start="17:40" pos:end="17:59"><expr pos:start="17:40" pos:end="17:59"><name pos:start="17:40" pos:end="17:59">mipsnet_ioport_write</name></expr></argument>, <argument pos:start="17:62" pos:end="17:62"><expr pos:start="17:62" pos:end="17:62"><name pos:start="17:62" pos:end="17:62">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:62"><expr pos:start="19:5" pos:end="19:61"><call pos:start="19:5" pos:end="19:61"><name pos:start="19:5" pos:end="19:24">register_ioport_read</name><argument_list pos:start="19:25" pos:end="19:61">(<argument pos:start="19:26" pos:end="19:29"><expr pos:start="19:26" pos:end="19:29"><name pos:start="19:26" pos:end="19:29">base</name></expr></argument>, <argument pos:start="19:32" pos:end="19:33"><expr pos:start="19:32" pos:end="19:33"><literal type="number" pos:start="19:32" pos:end="19:33">36</literal></expr></argument>, <argument pos:start="19:36" pos:end="19:36"><expr pos:start="19:36" pos:end="19:36"><literal type="number" pos:start="19:36" pos:end="19:36">1</literal></expr></argument>, <argument pos:start="19:39" pos:end="19:57"><expr pos:start="19:39" pos:end="19:57"><name pos:start="19:39" pos:end="19:57">mipsnet_ioport_read</name></expr></argument>, <argument pos:start="19:60" pos:end="19:60"><expr pos:start="19:60" pos:end="19:60"><name pos:start="19:60" pos:end="19:60">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:64"><expr pos:start="21:5" pos:end="21:63"><call pos:start="21:5" pos:end="21:63"><name pos:start="21:5" pos:end="21:25">register_ioport_write</name><argument_list pos:start="21:26" pos:end="21:63">(<argument pos:start="21:27" pos:end="21:30"><expr pos:start="21:27" pos:end="21:30"><name pos:start="21:27" pos:end="21:30">base</name></expr></argument>, <argument pos:start="21:33" pos:end="21:34"><expr pos:start="21:33" pos:end="21:34"><literal type="number" pos:start="21:33" pos:end="21:34">36</literal></expr></argument>, <argument pos:start="21:37" pos:end="21:37"><expr pos:start="21:37" pos:end="21:37"><literal type="number" pos:start="21:37" pos:end="21:37">2</literal></expr></argument>, <argument pos:start="21:40" pos:end="21:59"><expr pos:start="21:40" pos:end="21:59"><name pos:start="21:40" pos:end="21:59">mipsnet_ioport_write</name></expr></argument>, <argument pos:start="21:62" pos:end="21:62"><expr pos:start="21:62" pos:end="21:62"><name pos:start="21:62" pos:end="21:62">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:62"><expr pos:start="23:5" pos:end="23:61"><call pos:start="23:5" pos:end="23:61"><name pos:start="23:5" pos:end="23:24">register_ioport_read</name><argument_list pos:start="23:25" pos:end="23:61">(<argument pos:start="23:26" pos:end="23:29"><expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">base</name></expr></argument>, <argument pos:start="23:32" pos:end="23:33"><expr pos:start="23:32" pos:end="23:33"><literal type="number" pos:start="23:32" pos:end="23:33">36</literal></expr></argument>, <argument pos:start="23:36" pos:end="23:36"><expr pos:start="23:36" pos:end="23:36"><literal type="number" pos:start="23:36" pos:end="23:36">2</literal></expr></argument>, <argument pos:start="23:39" pos:end="23:57"><expr pos:start="23:39" pos:end="23:57"><name pos:start="23:39" pos:end="23:57">mipsnet_ioport_read</name></expr></argument>, <argument pos:start="23:60" pos:end="23:60"><expr pos:start="23:60" pos:end="23:60"><name pos:start="23:60" pos:end="23:60">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:64"><expr pos:start="25:5" pos:end="25:63"><call pos:start="25:5" pos:end="25:63"><name pos:start="25:5" pos:end="25:25">register_ioport_write</name><argument_list pos:start="25:26" pos:end="25:63">(<argument pos:start="25:27" pos:end="25:30"><expr pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:30">base</name></expr></argument>, <argument pos:start="25:33" pos:end="25:34"><expr pos:start="25:33" pos:end="25:34"><literal type="number" pos:start="25:33" pos:end="25:34">36</literal></expr></argument>, <argument pos:start="25:37" pos:end="25:37"><expr pos:start="25:37" pos:end="25:37"><literal type="number" pos:start="25:37" pos:end="25:37">4</literal></expr></argument>, <argument pos:start="25:40" pos:end="25:59"><expr pos:start="25:40" pos:end="25:59"><name pos:start="25:40" pos:end="25:59">mipsnet_ioport_write</name></expr></argument>, <argument pos:start="25:62" pos:end="25:62"><expr pos:start="25:62" pos:end="25:62"><name pos:start="25:62" pos:end="25:62">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:62"><expr pos:start="27:5" pos:end="27:61"><call pos:start="27:5" pos:end="27:61"><name pos:start="27:5" pos:end="27:24">register_ioport_read</name><argument_list pos:start="27:25" pos:end="27:61">(<argument pos:start="27:26" pos:end="27:29"><expr pos:start="27:26" pos:end="27:29"><name pos:start="27:26" pos:end="27:29">base</name></expr></argument>, <argument pos:start="27:32" pos:end="27:33"><expr pos:start="27:32" pos:end="27:33"><literal type="number" pos:start="27:32" pos:end="27:33">36</literal></expr></argument>, <argument pos:start="27:36" pos:end="27:36"><expr pos:start="27:36" pos:end="27:36"><literal type="number" pos:start="27:36" pos:end="27:36">4</literal></expr></argument>, <argument pos:start="27:39" pos:end="27:57"><expr pos:start="27:39" pos:end="27:57"><name pos:start="27:39" pos:end="27:57">mipsnet_ioport_read</name></expr></argument>, <argument pos:start="27:60" pos:end="27:60"><expr pos:start="27:60" pos:end="27:60"><name pos:start="27:60" pos:end="27:60">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:14">io_base</name></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:21">base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:17"><expr pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:10">irq</name></name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:16">irq</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:23">(<expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:10">nd</name> <operator pos:start="35:12" pos:end="35:13">&amp;&amp;</operator> <name pos:start="35:15" pos:end="35:22"><name pos:start="35:15" pos:end="35:16">nd</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:22">vlan</name></name></expr>)</condition> <block pos:start="35:25" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:57">

        <expr_stmt pos:start="37:9" pos:end="41:57"><expr pos:start="37:9" pos:end="41:56"><name pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:13">vc</name></name> <operator pos:start="37:15" pos:end="37:15">=</operator> <call pos:start="37:17" pos:end="41:56"><name pos:start="37:17" pos:end="37:36">qemu_new_vlan_client</name><argument_list pos:start="37:37" pos:end="41:56">(<argument pos:start="37:38" pos:end="37:45"><expr pos:start="37:38" pos:end="37:45"><name pos:start="37:38" pos:end="37:45"><name pos:start="37:38" pos:end="37:39">nd</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:45">vlan</name></name></expr></argument>, <argument pos:start="37:48" pos:end="37:56"><expr pos:start="37:48" pos:end="37:56"><name pos:start="37:48" pos:end="37:56"><name pos:start="37:48" pos:end="37:49">nd</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:56">model</name></name></expr></argument>, <argument pos:start="37:59" pos:end="37:66"><expr pos:start="37:59" pos:end="37:66"><name pos:start="37:59" pos:end="37:66"><name pos:start="37:59" pos:end="37:60">nd</name><operator pos:start="37:61" pos:end="37:62">-&gt;</operator><name pos:start="37:63" pos:end="37:66">name</name></name></expr></argument>,

                                     <argument pos:start="39:38" pos:end="39:56"><expr pos:start="39:38" pos:end="39:56"><name pos:start="39:38" pos:end="39:56">mipsnet_can_receive</name></expr></argument>, <argument pos:start="39:59" pos:end="39:73"><expr pos:start="39:59" pos:end="39:73"><name pos:start="39:59" pos:end="39:73">mipsnet_receive</name></expr></argument>, <argument pos:start="39:76" pos:end="39:79"><expr pos:start="39:76" pos:end="39:79"><name pos:start="39:76" pos:end="39:79">NULL</name></expr></argument>,

                                     <argument pos:start="41:38" pos:end="41:52"><expr pos:start="41:38" pos:end="41:52"><name pos:start="41:38" pos:end="41:52">mipsnet_cleanup</name></expr></argument>, <argument pos:start="41:55" pos:end="41:55"><expr pos:start="41:55" pos:end="41:55"><name pos:start="41:55" pos:end="41:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="47:5">else <block pos:start="43:12" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:21">

        <expr_stmt pos:start="45:9" pos:end="45:21"><expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:13"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:13">vc</name></name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:20">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:49"><expr pos:start="51:5" pos:end="51:48"><call pos:start="51:5" pos:end="51:48"><name pos:start="51:5" pos:end="51:28">qemu_format_nic_info_str</name><argument_list pos:start="51:29" pos:end="51:48">(<argument pos:start="51:30" pos:end="51:34"><expr pos:start="51:30" pos:end="51:34"><name pos:start="51:30" pos:end="51:34"><name pos:start="51:30" pos:end="51:30">s</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:34">vc</name></name></expr></argument>, <argument pos:start="51:37" pos:end="51:47"><expr pos:start="51:37" pos:end="51:47"><name pos:start="51:37" pos:end="51:47"><name pos:start="51:37" pos:end="51:38">nd</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:47">macaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:21"><expr pos:start="55:5" pos:end="55:20"><call pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:17">mipsnet_reset</name><argument_list pos:start="55:18" pos:end="55:20">(<argument pos:start="55:19" pos:end="55:19"><expr pos:start="55:19" pos:end="55:19"><name pos:start="55:19" pos:end="55:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:68"><expr pos:start="57:5" pos:end="57:67"><call pos:start="57:5" pos:end="57:67"><name pos:start="57:5" pos:end="57:19">register_savevm</name><argument_list pos:start="57:20" pos:end="57:67">(<argument pos:start="57:21" pos:end="57:29"><expr pos:start="57:21" pos:end="57:29"><literal type="string" pos:start="57:21" pos:end="57:29">"mipsnet"</literal></expr></argument>, <argument pos:start="57:32" pos:end="57:32"><expr pos:start="57:32" pos:end="57:32"><literal type="number" pos:start="57:32" pos:end="57:32">0</literal></expr></argument>, <argument pos:start="57:35" pos:end="57:35"><expr pos:start="57:35" pos:end="57:35"><literal type="number" pos:start="57:35" pos:end="57:35">0</literal></expr></argument>, <argument pos:start="57:38" pos:end="57:49"><expr pos:start="57:38" pos:end="57:49"><name pos:start="57:38" pos:end="57:49">mipsnet_save</name></expr></argument>, <argument pos:start="57:52" pos:end="57:63"><expr pos:start="57:52" pos:end="57:63"><name pos:start="57:52" pos:end="57:63">mipsnet_load</name></expr></argument>, <argument pos:start="57:66" pos:end="57:66"><expr pos:start="57:66" pos:end="57:66"><name pos:start="57:66" pos:end="57:66">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
