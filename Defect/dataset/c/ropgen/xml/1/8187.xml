<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8187.c" pos:tabs="8"><function pos:start="1:1" pos:end="15:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">pcx_palette</name><parameter_list pos:start="1:24" pos:end="1:80">(<parameter pos:start="1:25" pos:end="1:43"><decl pos:start="1:25" pos:end="1:43"><type pos:start="1:25" pos:end="1:43"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:37">uint8_t</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier><modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">src</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">uint32_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">dst</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:79"><decl pos:start="1:61" pos:end="1:79"><type pos:start="1:61" pos:end="1:79"><name pos:start="1:61" pos:end="1:68">unsigned</name> <name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:79">pallen</name></decl></parameter>)</parameter_list> <block pos:start="1:82" pos:end="15:1">{<block_content pos:start="3:5" pos:end="13:54">

    <decl_stmt pos:start="3:5" pos:end="3:19"><decl pos:start="3:5" pos:end="3:18"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:12">unsigned</name> <name pos:start="3:14" pos:end="3:16">int</name></type> <name pos:start="3:18" pos:end="3:18">i</name></decl>;</decl_stmt>



    <for pos:start="7:5" pos:end="9:55">for <control pos:start="7:9" pos:end="7:28">(<init pos:start="7:10" pos:end="7:13"><expr pos:start="7:10" pos:end="7:12"><name pos:start="7:10" pos:end="7:10">i</name><operator pos:start="7:11" pos:end="7:11">=</operator><literal type="number" pos:start="7:12" pos:end="7:12">0</literal></expr>;</init> <condition pos:start="7:15" pos:end="7:23"><expr pos:start="7:15" pos:end="7:22"><name pos:start="7:15" pos:end="7:15">i</name><operator pos:start="7:16" pos:end="7:16">&lt;</operator><name pos:start="7:17" pos:end="7:22">pallen</name></expr>;</condition> <incr pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:25">i</name><operator pos:start="7:26" pos:end="7:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="9:9" pos:end="9:55"><block_content pos:start="9:9" pos:end="9:55">

        <expr_stmt pos:start="9:9" pos:end="9:55"><expr pos:start="9:9" pos:end="9:54"><operator pos:start="9:9" pos:end="9:9">*</operator><name pos:start="9:10" pos:end="9:12">dst</name><operator pos:start="9:13" pos:end="9:14">++</operator> <operator pos:start="9:16" pos:end="9:16">=</operator> <literal type="number" pos:start="9:18" pos:end="9:27">0xFF000000</literal> <operator pos:start="9:29" pos:end="9:29">|</operator> <call pos:start="9:31" pos:end="9:54"><name pos:start="9:31" pos:end="9:49">bytestream_get_be24</name><argument_list pos:start="9:50" pos:end="9:54">(<argument pos:start="9:51" pos:end="9:53"><expr pos:start="9:51" pos:end="9:53"><name pos:start="9:51" pos:end="9:53">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <if_stmt pos:start="11:5" pos:end="13:54"><if pos:start="11:5" pos:end="13:54">if <condition pos:start="11:8" pos:end="11:21">(<expr pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:14">pallen</name> <operator pos:start="11:16" pos:end="11:16">&lt;</operator> <literal type="number" pos:start="11:18" pos:end="11:20">256</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:54"><block_content pos:start="13:9" pos:end="13:54">

        <expr_stmt pos:start="13:9" pos:end="13:54"><expr pos:start="13:9" pos:end="13:53"><call pos:start="13:9" pos:end="13:53"><name pos:start="13:9" pos:end="13:14">memset</name><argument_list pos:start="13:15" pos:end="13:53">(<argument pos:start="13:16" pos:end="13:18"><expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">dst</name></expr></argument>, <argument pos:start="13:21" pos:end="13:21"><expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr></argument>, <argument pos:start="13:24" pos:end="13:52"><expr pos:start="13:24" pos:end="13:52"><operator pos:start="13:24" pos:end="13:24">(</operator><literal type="number" pos:start="13:25" pos:end="13:29">256</literal> <operator pos:start="13:29" pos:end="13:29">-</operator> <name pos:start="13:31" pos:end="13:36">pallen</name><operator pos:start="13:37" pos:end="13:37">)</operator> <operator pos:start="13:39" pos:end="13:39">*</operator> <sizeof pos:start="13:41" pos:end="13:52">sizeof<argument_list pos:start="13:47" pos:end="13:52">(<argument pos:start="13:48" pos:end="13:51"><expr pos:start="13:48" pos:end="13:51"><operator pos:start="13:48" pos:end="13:48">*</operator><name pos:start="13:49" pos:end="13:51">dst</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
