<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9506.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">shall_we_drop</name><parameter_list pos:start="1:25" pos:end="1:44">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">dshow_ctx</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">ctx</name> <init pos:start="5:27" pos:end="5:40">= <expr pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:56"><type pos:start="7:5" pos:end="7:24"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:24">uint8_t</name></type> <name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:34">dropscore</name><index pos:start="7:35" pos:end="7:36">[]</index></name> <init pos:start="7:38" pos:end="7:56">= <expr pos:start="7:40" pos:end="7:56"><block pos:start="7:40" pos:end="7:56">{<expr pos:start="7:41" pos:end="7:42"><literal type="number" pos:start="7:41" pos:end="7:42">62</literal></expr>, <expr pos:start="7:45" pos:end="7:46"><literal type="number" pos:start="7:45" pos:end="7:46">75</literal></expr>, <expr pos:start="7:49" pos:end="7:50"><literal type="number" pos:start="7:49" pos:end="7:50">87</literal></expr>, <expr pos:start="7:53" pos:end="7:55"><literal type="number" pos:start="7:53" pos:end="7:55">100</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:25">ndropscores</name> <init pos:start="9:27" pos:end="9:53">= <expr pos:start="9:29" pos:end="9:53"><call pos:start="9:29" pos:end="9:53"><name pos:start="9:29" pos:end="9:42">FF_ARRAY_ELEMS</name><argument_list pos:start="9:43" pos:end="9:53">(<argument pos:start="9:44" pos:end="9:52"><expr pos:start="9:44" pos:end="9:52"><name pos:start="9:44" pos:end="9:52">dropscore</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:79"><decl pos:start="11:5" pos:end="11:78"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:32">buffer_fullness</name> <init pos:start="11:34" pos:end="11:78">= <expr pos:start="11:36" pos:end="11:78"><operator pos:start="11:36" pos:end="11:36">(</operator><name pos:start="11:37" pos:end="11:51"><name pos:start="11:37" pos:end="11:39">ctx</name><operator pos:start="11:40" pos:end="11:41">-&gt;</operator><name pos:start="11:42" pos:end="11:51">curbufsize</name></name><operator pos:start="11:52" pos:end="11:52">*</operator><literal type="number" pos:start="11:53" pos:end="11:55">100</literal><operator pos:start="11:56" pos:end="11:56">)</operator><operator pos:start="11:57" pos:end="11:57">/</operator><name pos:start="11:58" pos:end="11:78"><name pos:start="11:58" pos:end="11:58">s</name><operator pos:start="11:59" pos:end="11:60">-&gt;</operator><name pos:start="11:61" pos:end="11:78">max_picture_buffer</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if<condition pos:start="15:7" pos:end="15:72">(<expr pos:start="15:8" pos:end="15:71"><name pos:start="15:8" pos:end="15:52"><name pos:start="15:8" pos:end="15:16">dropscore</name><index pos:start="15:17" pos:end="15:52">[<expr pos:start="15:18" pos:end="15:51"><operator pos:start="15:18" pos:end="15:19">++</operator><name pos:start="15:20" pos:end="15:39"><name pos:start="15:20" pos:end="15:22">ctx</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:39">video_frame_num</name></name><operator pos:start="15:40" pos:end="15:40">%</operator><name pos:start="15:41" pos:end="15:51">ndropscores</name></expr>]</index></name> <operator pos:start="15:54" pos:end="15:55">&lt;=</operator> <name pos:start="15:57" pos:end="15:71">buffer_fullness</name></expr>)</condition> <block pos:start="15:74" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:17">

        <expr_stmt pos:start="17:9" pos:end="19:79"><expr pos:start="17:9" pos:end="19:78"><call pos:start="17:9" pos:end="19:78"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="19:78">(<argument pos:start="17:16" pos:end="17:16"><expr pos:start="17:16" pos:end="17:16"><name pos:start="17:16" pos:end="17:16">s</name></expr></argument>, <argument pos:start="17:19" pos:end="17:30"><expr pos:start="17:19" pos:end="17:30"><name pos:start="17:19" pos:end="17:30">AV_LOG_ERROR</name></expr></argument>,

              <argument pos:start="19:15" pos:end="19:60"><expr pos:start="19:15" pos:end="19:60"><literal type="string" pos:start="19:15" pos:end="19:60">"real-time buffer %d%% full! frame dropped!\n"</literal></expr></argument>, <argument pos:start="19:63" pos:end="19:77"><expr pos:start="19:63" pos:end="19:77"><name pos:start="19:63" pos:end="19:77">buffer_fullness</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
