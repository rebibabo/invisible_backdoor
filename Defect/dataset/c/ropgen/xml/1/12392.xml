<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12392.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:27">_find_pte</name><parameter_list pos:start="1:28" pos:end="3:67">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:36">CPUState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:52">mmu_ctx_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">ctx</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:69"><decl pos:start="1:60" pos:end="1:69"><type pos:start="1:60" pos:end="1:69"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:69">is_64b</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:76"><decl pos:start="1:72" pos:end="1:76"><type pos:start="1:72" pos:end="1:76"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:76">h</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:34"><decl pos:start="3:29" pos:end="3:34"><type pos:start="3:29" pos:end="3:34"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:34">rw</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:44"><decl pos:start="3:37" pos:end="3:44"><type pos:start="3:37" pos:end="3:44"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:44">type</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:66"><decl pos:start="3:47" pos:end="3:66"><type pos:start="3:47" pos:end="3:66"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:66">target_page_bits</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="209:1">{<block_content pos:start="7:5" pos:end="207:15">

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">target_phys_addr_t</name></type> <name pos:start="7:24" pos:end="7:31">pteg_off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:21">pte0</name></decl>, <decl pos:start="9:24" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:24" pos:end="9:27">pte1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:15">good</name> <init pos:start="11:17" pos:end="11:20">= <expr pos:start="11:19" pos:end="11:20"><operator pos:start="11:19" pos:end="11:19">-</operator><literal type="number" pos:start="11:20" pos:end="11:20">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:14">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:13"><expr pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <operator pos:start="17:11" pos:end="17:11">-</operator><literal type="number" pos:start="17:12" pos:end="17:12">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="17:15" pos:end="17:34">/* No entry found */</comment>

    <expr_stmt pos:start="19:5" pos:end="21:77"><expr pos:start="19:5" pos:end="21:76"><name pos:start="19:5" pos:end="19:12">pteg_off</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="21:76"><name pos:start="19:16" pos:end="19:30">get_pteg_offset</name><argument_list pos:start="19:31" pos:end="21:76">(<argument pos:start="19:32" pos:end="19:34"><expr pos:start="19:32" pos:end="19:34"><name pos:start="19:32" pos:end="19:34">env</name></expr></argument>, <argument pos:start="19:37" pos:end="19:48"><expr pos:start="19:37" pos:end="19:48"><name pos:start="19:37" pos:end="19:48"><name pos:start="19:37" pos:end="19:39">ctx</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:45">hash</name><index pos:start="19:46" pos:end="19:48">[<expr pos:start="19:47" pos:end="19:47"><name pos:start="19:47" pos:end="19:47">h</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="21:32" pos:end="21:75"><expr pos:start="21:32" pos:end="21:75"><ternary pos:start="21:32" pos:end="21:75"><condition pos:start="21:32" pos:end="21:39"><expr pos:start="21:32" pos:end="21:37"><name pos:start="21:32" pos:end="21:37">is_64b</name></expr> ?</condition><then pos:start="21:41" pos:end="21:56"> <expr pos:start="21:41" pos:end="21:56"><name pos:start="21:41" pos:end="21:56">HASH_PTE_SIZE_64</name></expr> </then><else pos:start="21:58" pos:end="21:75">: <expr pos:start="21:60" pos:end="21:75"><name pos:start="21:60" pos:end="21:75">HASH_PTE_SIZE_32</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="145:5">for <control pos:start="23:9" pos:end="23:27">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:21"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <literal type="number" pos:start="23:21" pos:end="23:21">8</literal></expr>;</condition> <incr pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:24">i</name><operator pos:start="23:25" pos:end="23:26">++</operator></expr></incr>)</control> <block pos:start="23:29" pos:end="145:5">{<block_content pos:start="27:9" pos:end="143:9">

<cpp:if pos:start="25:1" pos:end="25:25">#<cpp:directive pos:start="25:2" pos:end="25:3">if</cpp:directive> <expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:11">defined</name><argument_list pos:start="25:12" pos:end="25:25">(<argument pos:start="25:13" pos:end="25:24"><expr pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="27:9" pos:end="97:9"><if pos:start="27:9" pos:end="67:9">if <condition pos:start="27:12" pos:end="27:19">(<expr pos:start="27:13" pos:end="27:18"><name pos:start="27:13" pos:end="27:18">is_64b</name></expr>)</condition> <block pos:start="27:21" pos:end="67:9">{<block_content pos:start="29:13" pos:end="65:55">

            <if_stmt pos:start="29:13" pos:end="41:13"><if pos:start="29:13" pos:end="35:13">if <condition pos:start="29:16" pos:end="29:35">(<expr pos:start="29:17" pos:end="29:34"><name pos:start="29:17" pos:end="29:34"><name pos:start="29:17" pos:end="29:19">env</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:34">external_htab</name></name></expr>)</condition> <block pos:start="29:37" pos:end="35:13">{<block_content pos:start="31:17" pos:end="33:75">

                <expr_stmt pos:start="31:17" pos:end="31:71"><expr pos:start="31:17" pos:end="31:70"><name pos:start="31:17" pos:end="31:20">pte0</name> <operator pos:start="31:22" pos:end="31:22">=</operator> <call pos:start="31:24" pos:end="31:70"><name pos:start="31:24" pos:end="31:28">ldq_p</name><argument_list pos:start="31:29" pos:end="31:70">(<argument pos:start="31:30" pos:end="31:69"><expr pos:start="31:30" pos:end="31:69"><name pos:start="31:30" pos:end="31:47"><name pos:start="31:30" pos:end="31:32">env</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:47">external_htab</name></name> <operator pos:start="31:49" pos:end="31:49">+</operator> <name pos:start="31:51" pos:end="31:58">pteg_off</name> <operator pos:start="31:60" pos:end="31:60">+</operator> <operator pos:start="31:62" pos:end="31:62">(</operator><name pos:start="31:63" pos:end="31:63">i</name> <operator pos:start="31:65" pos:end="31:65">*</operator> <literal type="number" pos:start="31:67" pos:end="31:68">16</literal><operator pos:start="31:69" pos:end="31:69">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:75"><expr pos:start="33:17" pos:end="33:74"><name pos:start="33:17" pos:end="33:20">pte1</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <call pos:start="33:24" pos:end="33:74"><name pos:start="33:24" pos:end="33:28">ldq_p</name><argument_list pos:start="33:29" pos:end="33:74">(<argument pos:start="33:30" pos:end="33:73"><expr pos:start="33:30" pos:end="33:73"><name pos:start="33:30" pos:end="33:47"><name pos:start="33:30" pos:end="33:32">env</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:47">external_htab</name></name> <operator pos:start="33:49" pos:end="33:49">+</operator> <name pos:start="33:51" pos:end="33:58">pteg_off</name> <operator pos:start="33:60" pos:end="33:60">+</operator> <operator pos:start="33:62" pos:end="33:62">(</operator><name pos:start="33:63" pos:end="33:63">i</name> <operator pos:start="33:65" pos:end="33:65">*</operator> <literal type="number" pos:start="33:67" pos:end="33:68">16</literal><operator pos:start="33:69" pos:end="33:69">)</operator> <operator pos:start="33:71" pos:end="33:71">+</operator> <literal type="number" pos:start="33:73" pos:end="33:73">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="35:15" pos:end="41:13">else <block pos:start="35:20" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:74">

                <expr_stmt pos:start="37:17" pos:end="37:70"><expr pos:start="37:17" pos:end="37:69"><name pos:start="37:17" pos:end="37:20">pte0</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <call pos:start="37:24" pos:end="37:69"><name pos:start="37:24" pos:end="37:31">ldq_phys</name><argument_list pos:start="37:32" pos:end="37:69">(<argument pos:start="37:33" pos:end="37:68"><expr pos:start="37:33" pos:end="37:68"><name pos:start="37:33" pos:end="37:46"><name pos:start="37:33" pos:end="37:35">env</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:46">htab_base</name></name> <operator pos:start="37:48" pos:end="37:48">+</operator> <name pos:start="37:50" pos:end="37:57">pteg_off</name> <operator pos:start="37:59" pos:end="37:59">+</operator> <operator pos:start="37:61" pos:end="37:61">(</operator><name pos:start="37:62" pos:end="37:62">i</name> <operator pos:start="37:64" pos:end="37:64">*</operator> <literal type="number" pos:start="37:66" pos:end="37:67">16</literal><operator pos:start="37:68" pos:end="37:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:74"><expr pos:start="39:17" pos:end="39:73"><name pos:start="39:17" pos:end="39:20">pte1</name> <operator pos:start="39:22" pos:end="39:22">=</operator> <call pos:start="39:24" pos:end="39:73"><name pos:start="39:24" pos:end="39:31">ldq_phys</name><argument_list pos:start="39:32" pos:end="39:73">(<argument pos:start="39:33" pos:end="39:72"><expr pos:start="39:33" pos:end="39:72"><name pos:start="39:33" pos:end="39:46"><name pos:start="39:33" pos:end="39:35">env</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:46">htab_base</name></name> <operator pos:start="39:48" pos:end="39:48">+</operator> <name pos:start="39:50" pos:end="39:57">pteg_off</name> <operator pos:start="39:59" pos:end="39:59">+</operator> <operator pos:start="39:61" pos:end="39:61">(</operator><name pos:start="39:62" pos:end="39:62">i</name> <operator pos:start="39:64" pos:end="39:64">*</operator> <literal type="number" pos:start="39:66" pos:end="39:67">16</literal><operator pos:start="39:68" pos:end="39:68">)</operator> <operator pos:start="39:70" pos:end="39:70">+</operator> <literal type="number" pos:start="39:72" pos:end="39:72">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <comment type="block" pos:start="45:13" pos:end="47:48">/* We have a TLB that saves 4K pages, so let's

             * split a huge page to 4k chunks */</comment>

            <if_stmt pos:start="49:13" pos:end="53:43"><if pos:start="49:13" pos:end="53:43">if <condition pos:start="49:16" pos:end="49:53">(<expr pos:start="49:17" pos:end="49:52"><name pos:start="49:17" pos:end="49:32">target_page_bits</name> <operator pos:start="49:34" pos:end="49:35">!=</operator> <name pos:start="49:37" pos:end="49:52">TARGET_PAGE_BITS</name></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="53:43"><block_content pos:start="51:17" pos:end="53:43">

                <expr_stmt pos:start="51:17" pos:end="53:43"><expr pos:start="51:17" pos:end="53:42"><name pos:start="51:17" pos:end="51:20">pte1</name> <operator pos:start="51:22" pos:end="51:23">|=</operator> <operator pos:start="51:25" pos:end="51:25">(</operator><name pos:start="51:26" pos:end="51:35"><name pos:start="51:26" pos:end="51:28">ctx</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:35">eaddr</name></name> <operator pos:start="51:37" pos:end="51:37">&amp;</operator> <operator pos:start="51:39" pos:end="51:39">(</operator><operator pos:start="51:40" pos:end="51:40">(</operator> <literal type="number" pos:start="51:42" pos:end="51:42">1</literal> <operator pos:start="51:44" pos:end="51:45">&lt;&lt;</operator> <name pos:start="51:47" pos:end="51:62">target_page_bits</name> <operator pos:start="51:64" pos:end="51:64">)</operator> <operator pos:start="51:66" pos:end="51:66">-</operator> <literal type="number" pos:start="51:68" pos:end="51:68">1</literal><operator pos:start="51:69" pos:end="51:69">)</operator><operator pos:start="51:70" pos:end="51:70">)</operator>

                        <operator pos:start="53:25" pos:end="53:25">&amp;</operator> <name pos:start="53:27" pos:end="53:42">TARGET_PAGE_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="57:13" pos:end="57:58"><expr pos:start="57:13" pos:end="57:57"><name pos:start="57:13" pos:end="57:13">r</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <call pos:start="57:17" pos:end="57:57"><name pos:start="57:17" pos:end="57:27">pte64_check</name><argument_list pos:start="57:28" pos:end="57:57">(<argument pos:start="57:29" pos:end="57:31"><expr pos:start="57:29" pos:end="57:31"><name pos:start="57:29" pos:end="57:31">ctx</name></expr></argument>, <argument pos:start="57:34" pos:end="57:37"><expr pos:start="57:34" pos:end="57:37"><name pos:start="57:34" pos:end="57:37">pte0</name></expr></argument>, <argument pos:start="57:40" pos:end="57:43"><expr pos:start="57:40" pos:end="57:43"><name pos:start="57:40" pos:end="57:43">pte1</name></expr></argument>, <argument pos:start="57:46" pos:end="57:46"><expr pos:start="57:46" pos:end="57:46"><name pos:start="57:46" pos:end="57:46">h</name></expr></argument>, <argument pos:start="57:49" pos:end="57:50"><expr pos:start="57:49" pos:end="57:50"><name pos:start="57:49" pos:end="57:50">rw</name></expr></argument>, <argument pos:start="57:53" pos:end="57:56"><expr pos:start="57:53" pos:end="57:56"><name pos:start="57:53" pos:end="57:56">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="65:55"><expr pos:start="59:13" pos:end="65:54"><call pos:start="59:13" pos:end="65:54"><name pos:start="59:13" pos:end="59:19">LOG_MMU</name><argument_list pos:start="59:20" pos:end="65:54">(<argument pos:start="59:21" pos:end="61:65"><expr pos:start="59:21" pos:end="61:65"><literal type="string" pos:start="59:21" pos:end="59:36">"Load pte from "</literal> <name pos:start="59:38" pos:end="59:50">TARGET_FMT_lx</name> <literal type="string" pos:start="59:52" pos:end="59:57">" =&gt; "</literal> <name pos:start="59:59" pos:end="59:71">TARGET_FMT_lx</name> <literal type="string" pos:start="59:73" pos:end="59:75">" "</literal>

                    <name pos:start="61:21" pos:end="61:33">TARGET_FMT_lx</name> <literal type="string" pos:start="61:35" pos:end="61:46">" %d %d %d "</literal> <name pos:start="61:48" pos:end="61:60">TARGET_FMT_lx</name> <literal type="string" pos:start="61:62" pos:end="61:65">"\n"</literal></expr></argument>,

                    <argument pos:start="63:21" pos:end="63:40"><expr pos:start="63:21" pos:end="63:40"><name pos:start="63:21" pos:end="63:29">pteg_base</name> <operator pos:start="63:31" pos:end="63:31">+</operator> <operator pos:start="63:33" pos:end="63:33">(</operator><name pos:start="63:34" pos:end="63:34">i</name> <operator pos:start="63:36" pos:end="63:36">*</operator> <literal type="number" pos:start="63:38" pos:end="63:39">16</literal><operator pos:start="63:40" pos:end="63:40">)</operator></expr></argument>, <argument pos:start="63:43" pos:end="63:46"><expr pos:start="63:43" pos:end="63:46"><name pos:start="63:43" pos:end="63:46">pte0</name></expr></argument>, <argument pos:start="63:49" pos:end="63:52"><expr pos:start="63:49" pos:end="63:52"><name pos:start="63:49" pos:end="63:52">pte1</name></expr></argument>, <argument pos:start="63:55" pos:end="63:69"><expr pos:start="63:55" pos:end="63:69"><operator pos:start="63:55" pos:end="63:55">(</operator><name pos:start="63:56" pos:end="63:58">int</name><operator pos:start="63:59" pos:end="63:59">)</operator><operator pos:start="63:60" pos:end="63:60">(</operator><name pos:start="63:61" pos:end="63:64">pte0</name> <operator pos:start="63:66" pos:end="63:66">&amp;</operator> <literal type="number" pos:start="63:68" pos:end="63:68">1</literal><operator pos:start="63:69" pos:end="63:69">)</operator></expr></argument>, <argument pos:start="63:72" pos:end="63:72"><expr pos:start="63:72" pos:end="63:72"><name pos:start="63:72" pos:end="63:72">h</name></expr></argument>,

                    <argument pos:start="65:21" pos:end="65:42"><expr pos:start="65:21" pos:end="65:42"><operator pos:start="65:21" pos:end="65:21">(</operator><name pos:start="65:22" pos:end="65:24">int</name><operator pos:start="65:25" pos:end="65:25">)</operator><operator pos:start="65:26" pos:end="65:26">(</operator><operator pos:start="65:27" pos:end="65:27">(</operator><name pos:start="65:28" pos:end="65:31">pte0</name> <operator pos:start="65:33" pos:end="65:34">&gt;&gt;</operator> <literal type="number" pos:start="65:36" pos:end="65:36">1</literal><operator pos:start="65:37" pos:end="65:37">)</operator> <operator pos:start="65:39" pos:end="65:39">&amp;</operator> <literal type="number" pos:start="65:41" pos:end="65:41">1</literal><operator pos:start="65:42" pos:end="65:42">)</operator></expr></argument>, <argument pos:start="65:45" pos:end="65:53"><expr pos:start="65:45" pos:end="65:53"><name pos:start="65:45" pos:end="65:53"><name pos:start="65:45" pos:end="65:47">ctx</name><operator pos:start="65:48" pos:end="65:49">-&gt;</operator><name pos:start="65:50" pos:end="65:53">ptem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="97:9">else

<cpp:endif pos:start="69:1" pos:end="69:6">#<cpp:directive pos:start="69:2" pos:end="69:6">endif</cpp:directive></cpp:endif>

        <block pos:start="71:9" pos:end="97:9">{<block_content pos:start="73:13" pos:end="95:55">

            <if_stmt pos:start="73:13" pos:end="85:13"><if pos:start="73:13" pos:end="79:13">if <condition pos:start="73:16" pos:end="73:35">(<expr pos:start="73:17" pos:end="73:34"><name pos:start="73:17" pos:end="73:34"><name pos:start="73:17" pos:end="73:19">env</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:34">external_htab</name></name></expr>)</condition> <block pos:start="73:37" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:74">

                <expr_stmt pos:start="75:17" pos:end="75:70"><expr pos:start="75:17" pos:end="75:69"><name pos:start="75:17" pos:end="75:20">pte0</name> <operator pos:start="75:22" pos:end="75:22">=</operator> <call pos:start="75:24" pos:end="75:69"><name pos:start="75:24" pos:end="75:28">ldl_p</name><argument_list pos:start="75:29" pos:end="75:69">(<argument pos:start="75:30" pos:end="75:68"><expr pos:start="75:30" pos:end="75:68"><name pos:start="75:30" pos:end="75:47"><name pos:start="75:30" pos:end="75:32">env</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:47">external_htab</name></name> <operator pos:start="75:49" pos:end="75:49">+</operator> <name pos:start="75:51" pos:end="75:58">pteg_off</name> <operator pos:start="75:60" pos:end="75:60">+</operator> <operator pos:start="75:62" pos:end="75:62">(</operator><name pos:start="75:63" pos:end="75:63">i</name> <operator pos:start="75:65" pos:end="75:65">*</operator> <literal type="number" pos:start="75:67" pos:end="75:67">8</literal><operator pos:start="75:68" pos:end="75:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:74"><expr pos:start="77:17" pos:end="77:73"><name pos:start="77:17" pos:end="77:20">pte1</name> <operator pos:start="77:22" pos:end="77:22">=</operator> <call pos:start="77:24" pos:end="77:73"><name pos:start="77:24" pos:end="77:28">ldl_p</name><argument_list pos:start="77:29" pos:end="77:73">(<argument pos:start="77:30" pos:end="77:72"><expr pos:start="77:30" pos:end="77:72"><name pos:start="77:30" pos:end="77:47"><name pos:start="77:30" pos:end="77:32">env</name><operator pos:start="77:33" pos:end="77:34">-&gt;</operator><name pos:start="77:35" pos:end="77:47">external_htab</name></name> <operator pos:start="77:49" pos:end="77:49">+</operator> <name pos:start="77:51" pos:end="77:58">pteg_off</name> <operator pos:start="77:60" pos:end="77:60">+</operator> <operator pos:start="77:62" pos:end="77:62">(</operator><name pos:start="77:63" pos:end="77:63">i</name> <operator pos:start="77:65" pos:end="77:65">*</operator> <literal type="number" pos:start="77:67" pos:end="77:67">8</literal><operator pos:start="77:68" pos:end="77:68">)</operator> <operator pos:start="77:70" pos:end="77:70">+</operator> <literal type="number" pos:start="77:72" pos:end="77:72">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="79:15" pos:end="85:13">else <block pos:start="79:20" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:73">

                <expr_stmt pos:start="81:17" pos:end="81:69"><expr pos:start="81:17" pos:end="81:68"><name pos:start="81:17" pos:end="81:20">pte0</name> <operator pos:start="81:22" pos:end="81:22">=</operator> <call pos:start="81:24" pos:end="81:68"><name pos:start="81:24" pos:end="81:31">ldl_phys</name><argument_list pos:start="81:32" pos:end="81:68">(<argument pos:start="81:33" pos:end="81:67"><expr pos:start="81:33" pos:end="81:67"><name pos:start="81:33" pos:end="81:46"><name pos:start="81:33" pos:end="81:35">env</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:46">htab_base</name></name> <operator pos:start="81:48" pos:end="81:48">+</operator> <name pos:start="81:50" pos:end="81:57">pteg_off</name> <operator pos:start="81:59" pos:end="81:59">+</operator> <operator pos:start="81:61" pos:end="81:61">(</operator><name pos:start="81:62" pos:end="81:62">i</name> <operator pos:start="81:64" pos:end="81:64">*</operator> <literal type="number" pos:start="81:66" pos:end="81:66">8</literal><operator pos:start="81:67" pos:end="81:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:73"><expr pos:start="83:17" pos:end="83:72"><name pos:start="83:17" pos:end="83:20">pte1</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <call pos:start="83:24" pos:end="83:72"><name pos:start="83:24" pos:end="83:31">ldl_phys</name><argument_list pos:start="83:32" pos:end="83:72">(<argument pos:start="83:33" pos:end="83:71"><expr pos:start="83:33" pos:end="83:71"><name pos:start="83:33" pos:end="83:46"><name pos:start="83:33" pos:end="83:35">env</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:46">htab_base</name></name> <operator pos:start="83:48" pos:end="83:48">+</operator> <name pos:start="83:50" pos:end="83:57">pteg_off</name> <operator pos:start="83:59" pos:end="83:59">+</operator> <operator pos:start="83:61" pos:end="83:61">(</operator><name pos:start="83:62" pos:end="83:62">i</name> <operator pos:start="83:64" pos:end="83:64">*</operator> <literal type="number" pos:start="83:66" pos:end="83:66">8</literal><operator pos:start="83:67" pos:end="83:67">)</operator> <operator pos:start="83:69" pos:end="83:69">+</operator> <literal type="number" pos:start="83:71" pos:end="83:71">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:58"><expr pos:start="87:13" pos:end="87:57"><name pos:start="87:13" pos:end="87:13">r</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <call pos:start="87:17" pos:end="87:57"><name pos:start="87:17" pos:end="87:27">pte32_check</name><argument_list pos:start="87:28" pos:end="87:57">(<argument pos:start="87:29" pos:end="87:31"><expr pos:start="87:29" pos:end="87:31"><name pos:start="87:29" pos:end="87:31">ctx</name></expr></argument>, <argument pos:start="87:34" pos:end="87:37"><expr pos:start="87:34" pos:end="87:37"><name pos:start="87:34" pos:end="87:37">pte0</name></expr></argument>, <argument pos:start="87:40" pos:end="87:43"><expr pos:start="87:40" pos:end="87:43"><name pos:start="87:40" pos:end="87:43">pte1</name></expr></argument>, <argument pos:start="87:46" pos:end="87:46"><expr pos:start="87:46" pos:end="87:46"><name pos:start="87:46" pos:end="87:46">h</name></expr></argument>, <argument pos:start="87:49" pos:end="87:50"><expr pos:start="87:49" pos:end="87:50"><name pos:start="87:49" pos:end="87:50">rw</name></expr></argument>, <argument pos:start="87:53" pos:end="87:56"><expr pos:start="87:53" pos:end="87:56"><name pos:start="87:53" pos:end="87:56">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="95:55"><expr pos:start="89:13" pos:end="95:54"><call pos:start="89:13" pos:end="95:54"><name pos:start="89:13" pos:end="89:19">LOG_MMU</name><argument_list pos:start="89:20" pos:end="95:54">(<argument pos:start="89:21" pos:end="91:65"><expr pos:start="89:21" pos:end="91:65"><literal type="string" pos:start="89:21" pos:end="89:36">"Load pte from "</literal> <name pos:start="89:38" pos:end="89:50">TARGET_FMT_lx</name> <literal type="string" pos:start="89:52" pos:end="89:57">" =&gt; "</literal> <name pos:start="89:59" pos:end="89:71">TARGET_FMT_lx</name> <literal type="string" pos:start="89:73" pos:end="89:75">" "</literal>

                    <name pos:start="91:21" pos:end="91:33">TARGET_FMT_lx</name> <literal type="string" pos:start="91:35" pos:end="91:46">" %d %d %d "</literal> <name pos:start="91:48" pos:end="91:60">TARGET_FMT_lx</name> <literal type="string" pos:start="91:62" pos:end="91:65">"\n"</literal></expr></argument>,

                    <argument pos:start="93:21" pos:end="93:39"><expr pos:start="93:21" pos:end="93:39"><name pos:start="93:21" pos:end="93:29">pteg_base</name> <operator pos:start="93:31" pos:end="93:31">+</operator> <operator pos:start="93:33" pos:end="93:33">(</operator><name pos:start="93:34" pos:end="93:34">i</name> <operator pos:start="93:36" pos:end="93:36">*</operator> <literal type="number" pos:start="93:38" pos:end="93:38">8</literal><operator pos:start="93:39" pos:end="93:39">)</operator></expr></argument>, <argument pos:start="93:42" pos:end="93:45"><expr pos:start="93:42" pos:end="93:45"><name pos:start="93:42" pos:end="93:45">pte0</name></expr></argument>, <argument pos:start="93:48" pos:end="93:51"><expr pos:start="93:48" pos:end="93:51"><name pos:start="93:48" pos:end="93:51">pte1</name></expr></argument>, <argument pos:start="93:54" pos:end="93:70"><expr pos:start="93:54" pos:end="93:70"><operator pos:start="93:54" pos:end="93:54">(</operator><name pos:start="93:55" pos:end="93:57">int</name><operator pos:start="93:58" pos:end="93:58">)</operator><operator pos:start="93:59" pos:end="93:59">(</operator><name pos:start="93:60" pos:end="93:63">pte0</name> <operator pos:start="93:65" pos:end="93:66">&gt;&gt;</operator> <literal type="number" pos:start="93:68" pos:end="93:69">31</literal><operator pos:start="93:70" pos:end="93:70">)</operator></expr></argument>, <argument pos:start="93:73" pos:end="93:73"><expr pos:start="93:73" pos:end="93:73"><name pos:start="93:73" pos:end="93:73">h</name></expr></argument>,

                    <argument pos:start="95:21" pos:end="95:42"><expr pos:start="95:21" pos:end="95:42"><operator pos:start="95:21" pos:end="95:21">(</operator><name pos:start="95:22" pos:end="95:24">int</name><operator pos:start="95:25" pos:end="95:25">)</operator><operator pos:start="95:26" pos:end="95:26">(</operator><operator pos:start="95:27" pos:end="95:27">(</operator><name pos:start="95:28" pos:end="95:31">pte0</name> <operator pos:start="95:33" pos:end="95:34">&gt;&gt;</operator> <literal type="number" pos:start="95:36" pos:end="95:36">6</literal><operator pos:start="95:37" pos:end="95:37">)</operator> <operator pos:start="95:39" pos:end="95:39">&amp;</operator> <literal type="number" pos:start="95:41" pos:end="95:41">1</literal><operator pos:start="95:42" pos:end="95:42">)</operator></expr></argument>, <argument pos:start="95:45" pos:end="95:53"><expr pos:start="95:45" pos:end="95:53"><name pos:start="95:45" pos:end="95:53"><name pos:start="95:45" pos:end="95:47">ctx</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:53">ptem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <switch pos:start="99:9" pos:end="143:9">switch <condition pos:start="99:16" pos:end="99:18">(<expr pos:start="99:17" pos:end="99:17"><name pos:start="99:17" pos:end="99:17">r</name></expr>)</condition> <block pos:start="99:20" pos:end="143:9">{<block_content pos:start="101:9" pos:end="141:22">

        <case pos:start="101:9" pos:end="101:16">case <expr pos:start="101:14" pos:end="101:15"><operator pos:start="101:14" pos:end="101:14">-</operator><literal type="number" pos:start="101:15" pos:end="101:15">3</literal></expr>:</case>

            <comment type="block" pos:start="103:13" pos:end="103:35">/* PTE inconsistency */</comment>

            <return pos:start="105:13" pos:end="105:22">return <expr pos:start="105:20" pos:end="105:21"><operator pos:start="105:20" pos:end="105:20">-</operator><literal type="number" pos:start="105:21" pos:end="105:21">1</literal></expr>;</return>

        <case pos:start="107:9" pos:end="107:16">case <expr pos:start="107:14" pos:end="107:15"><operator pos:start="107:14" pos:end="107:14">-</operator><literal type="number" pos:start="107:15" pos:end="107:15">2</literal></expr>:</case>

            <comment type="block" pos:start="109:13" pos:end="109:34">/* Access violation */</comment>

            <expr_stmt pos:start="111:13" pos:end="111:21"><expr pos:start="111:13" pos:end="111:20"><name pos:start="111:13" pos:end="111:15">ret</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <operator pos:start="111:19" pos:end="111:19">-</operator><literal type="number" pos:start="111:20" pos:end="111:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:21"><expr pos:start="113:13" pos:end="113:20"><name pos:start="113:13" pos:end="113:16">good</name> <operator pos:start="113:18" pos:end="113:18">=</operator> <name pos:start="113:20" pos:end="113:20">i</name></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        <case pos:start="117:9" pos:end="117:16">case <expr pos:start="117:14" pos:end="117:15"><operator pos:start="117:14" pos:end="117:14">-</operator><literal type="number" pos:start="117:15" pos:end="117:15">1</literal></expr>:</case>

        <default pos:start="119:9" pos:end="119:16">default:</default>

            <comment type="block" pos:start="121:13" pos:end="121:30">/* No PTE match */</comment>

            <break pos:start="123:13" pos:end="123:18">break;</break>

        <case pos:start="125:9" pos:end="125:15">case <expr pos:start="125:14" pos:end="125:14"><literal type="number" pos:start="125:14" pos:end="125:14">0</literal></expr>:</case>

            <comment type="block" pos:start="127:13" pos:end="127:32">/* access granted */</comment>

            <comment type="block" pos:start="129:13" pos:end="135:15">/* XXX: we should go on looping to check all PTEs consistency

             *      but if we can speed-up the whole thing as the

             *      result would be undefined if PTEs are not consistent.

             */</comment>

            <expr_stmt pos:start="137:13" pos:end="137:20"><expr pos:start="137:13" pos:end="137:19"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <literal type="number" pos:start="137:19" pos:end="137:19">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:21"><expr pos:start="139:13" pos:end="139:20"><name pos:start="139:13" pos:end="139:16">good</name> <operator pos:start="139:18" pos:end="139:18">=</operator> <name pos:start="139:20" pos:end="139:20">i</name></expr>;</expr_stmt>

            <goto pos:start="141:13" pos:end="141:22">goto <name pos:start="141:18" pos:end="141:21">done</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></for>

    <if_stmt pos:start="147:5" pos:end="203:5"><if pos:start="147:5" pos:end="203:5">if <condition pos:start="147:8" pos:end="147:19">(<expr pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:12">good</name> <operator pos:start="147:14" pos:end="147:15">!=</operator> <operator pos:start="147:17" pos:end="147:17">-</operator><literal type="number" pos:start="147:18" pos:end="147:18">1</literal></expr>)</condition> <block pos:start="147:21" pos:end="203:5">{<block_content pos:start="149:5" pos:end="201:9">

    <label pos:start="149:5" pos:end="149:9"><name pos:start="149:5" pos:end="149:8">done</name>:</label>

        <expr_stmt pos:start="151:9" pos:end="153:44"><expr pos:start="151:9" pos:end="153:43"><call pos:start="151:9" pos:end="153:43"><name pos:start="151:9" pos:end="151:15">LOG_MMU</name><argument_list pos:start="151:16" pos:end="153:43">(<argument pos:start="151:17" pos:end="151:72"><expr pos:start="151:17" pos:end="151:72"><literal type="string" pos:start="151:17" pos:end="151:36">"found PTE at addr "</literal> <name pos:start="151:38" pos:end="151:50">TARGET_FMT_lx</name> <literal type="string" pos:start="151:52" pos:end="151:72">" prot=%01x ret=%d\n"</literal></expr></argument>,

                <argument pos:start="153:17" pos:end="153:26"><expr pos:start="153:17" pos:end="153:26"><name pos:start="153:17" pos:end="153:26"><name pos:start="153:17" pos:end="153:19">ctx</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:26">raddr</name></name></expr></argument>, <argument pos:start="153:29" pos:end="153:37"><expr pos:start="153:29" pos:end="153:37"><name pos:start="153:29" pos:end="153:37"><name pos:start="153:29" pos:end="153:31">ctx</name><operator pos:start="153:32" pos:end="153:33">-&gt;</operator><name pos:start="153:34" pos:end="153:37">prot</name></name></expr></argument>, <argument pos:start="153:40" pos:end="153:42"><expr pos:start="153:40" pos:end="153:42"><name pos:start="153:40" pos:end="153:42">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="155:9" pos:end="155:31">/* Update page flags */</comment>

        <expr_stmt pos:start="157:9" pos:end="157:26"><expr pos:start="157:9" pos:end="157:25"><name pos:start="157:9" pos:end="157:12">pte1</name> <operator pos:start="157:14" pos:end="157:14">=</operator> <name pos:start="157:16" pos:end="157:25"><name pos:start="157:16" pos:end="157:18">ctx</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:25">raddr</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="201:9"><if pos:start="159:9" pos:end="201:9">if <condition pos:start="159:12" pos:end="159:55">(<expr pos:start="159:13" pos:end="159:54"><call pos:start="159:13" pos:end="159:49"><name pos:start="159:13" pos:end="159:28">pte_update_flags</name><argument_list pos:start="159:29" pos:end="159:49">(<argument pos:start="159:30" pos:end="159:32"><expr pos:start="159:30" pos:end="159:32"><name pos:start="159:30" pos:end="159:32">ctx</name></expr></argument>, <argument pos:start="159:35" pos:end="159:39"><expr pos:start="159:35" pos:end="159:39"><operator pos:start="159:35" pos:end="159:35">&amp;</operator><name pos:start="159:36" pos:end="159:39">pte1</name></expr></argument>, <argument pos:start="159:42" pos:end="159:44"><expr pos:start="159:42" pos:end="159:44"><name pos:start="159:42" pos:end="159:44">ret</name></expr></argument>, <argument pos:start="159:47" pos:end="159:48"><expr pos:start="159:47" pos:end="159:48"><name pos:start="159:47" pos:end="159:48">rw</name></expr></argument>)</argument_list></call> <operator pos:start="159:51" pos:end="159:52">==</operator> <literal type="number" pos:start="159:54" pos:end="159:54">1</literal></expr>)</condition> <block pos:start="159:57" pos:end="201:9">{<block_content pos:start="163:13" pos:end="199:13">

<cpp:if pos:start="161:1" pos:end="161:25">#<cpp:directive pos:start="161:2" pos:end="161:3">if</cpp:directive> <expr pos:start="161:5" pos:end="161:25"><call pos:start="161:5" pos:end="161:25"><name pos:start="161:5" pos:end="161:11">defined</name><argument_list pos:start="161:12" pos:end="161:25">(<argument pos:start="161:13" pos:end="161:24"><expr pos:start="161:13" pos:end="161:24"><name pos:start="161:13" pos:end="161:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="163:13" pos:end="199:13"><if pos:start="163:13" pos:end="179:13">if <condition pos:start="163:16" pos:end="163:23">(<expr pos:start="163:17" pos:end="163:22"><name pos:start="163:17" pos:end="163:22">is_64b</name></expr>)</condition> <block pos:start="163:25" pos:end="179:13">{<block_content pos:start="165:17" pos:end="177:17">

                <if_stmt pos:start="165:17" pos:end="177:17"><if pos:start="165:17" pos:end="171:17">if <condition pos:start="165:20" pos:end="165:39">(<expr pos:start="165:21" pos:end="165:38"><name pos:start="165:21" pos:end="165:38"><name pos:start="165:21" pos:end="165:23">env</name><operator pos:start="165:24" pos:end="165:25">-&gt;</operator><name pos:start="165:26" pos:end="165:38">external_htab</name></name></expr>)</condition> <block pos:start="165:41" pos:end="171:17">{<block_content pos:start="167:21" pos:end="169:32">

                    <expr_stmt pos:start="167:21" pos:end="169:32"><expr pos:start="167:21" pos:end="169:31"><call pos:start="167:21" pos:end="169:31"><name pos:start="167:21" pos:end="167:25">stq_p</name><argument_list pos:start="167:26" pos:end="169:31">(<argument pos:start="167:27" pos:end="167:73"><expr pos:start="167:27" pos:end="167:73"><name pos:start="167:27" pos:end="167:44"><name pos:start="167:27" pos:end="167:29">env</name><operator pos:start="167:30" pos:end="167:31">-&gt;</operator><name pos:start="167:32" pos:end="167:44">external_htab</name></name> <operator pos:start="167:46" pos:end="167:46">+</operator> <name pos:start="167:48" pos:end="167:55">pteg_off</name> <operator pos:start="167:57" pos:end="167:57">+</operator> <operator pos:start="167:59" pos:end="167:59">(</operator><name pos:start="167:60" pos:end="167:63">good</name> <operator pos:start="167:65" pos:end="167:65">*</operator> <literal type="number" pos:start="167:67" pos:end="167:68">16</literal><operator pos:start="167:69" pos:end="167:69">)</operator> <operator pos:start="167:71" pos:end="167:71">+</operator> <literal type="number" pos:start="167:73" pos:end="167:73">8</literal></expr></argument>,

                          <argument pos:start="169:27" pos:end="169:30"><expr pos:start="169:27" pos:end="169:30"><name pos:start="169:27" pos:end="169:30">pte1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="171:19" pos:end="177:17">else <block pos:start="171:24" pos:end="177:17">{<block_content pos:start="173:21" pos:end="175:61">

                    <expr_stmt pos:start="173:21" pos:end="175:61"><expr pos:start="173:21" pos:end="175:60"><call pos:start="173:21" pos:end="175:60"><name pos:start="173:21" pos:end="173:37">stq_phys_notdirty</name><argument_list pos:start="173:38" pos:end="175:60">(<argument pos:start="173:39" pos:end="175:53"><expr pos:start="173:39" pos:end="175:53"><name pos:start="173:39" pos:end="173:52"><name pos:start="173:39" pos:end="173:41">env</name><operator pos:start="173:42" pos:end="173:43">-&gt;</operator><name pos:start="173:44" pos:end="173:52">htab_base</name></name> <operator pos:start="173:54" pos:end="173:54">+</operator> <name pos:start="173:56" pos:end="173:63">pteg_off</name> <operator pos:start="173:65" pos:end="173:65">+</operator>

                                      <operator pos:start="175:39" pos:end="175:39">(</operator><name pos:start="175:40" pos:end="175:43">good</name> <operator pos:start="175:45" pos:end="175:45">*</operator> <literal type="number" pos:start="175:47" pos:end="175:48">16</literal><operator pos:start="175:49" pos:end="175:49">)</operator> <operator pos:start="175:51" pos:end="175:51">+</operator> <literal type="number" pos:start="175:53" pos:end="175:53">8</literal></expr></argument>, <argument pos:start="175:56" pos:end="175:59"><expr pos:start="175:56" pos:end="175:59"><name pos:start="175:56" pos:end="175:59">pte1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="179:15" pos:end="199:13">else

<cpp:endif pos:start="181:1" pos:end="181:6">#<cpp:directive pos:start="181:2" pos:end="181:6">endif</cpp:directive></cpp:endif>

            <block pos:start="183:13" pos:end="199:13">{<block_content pos:start="185:17" pos:end="197:17">

                <if_stmt pos:start="185:17" pos:end="197:17"><if pos:start="185:17" pos:end="191:17">if <condition pos:start="185:20" pos:end="185:39">(<expr pos:start="185:21" pos:end="185:38"><name pos:start="185:21" pos:end="185:38"><name pos:start="185:21" pos:end="185:23">env</name><operator pos:start="185:24" pos:end="185:25">-&gt;</operator><name pos:start="185:26" pos:end="185:38">external_htab</name></name></expr>)</condition> <block pos:start="185:41" pos:end="191:17">{<block_content pos:start="187:21" pos:end="189:32">

                    <expr_stmt pos:start="187:21" pos:end="189:32"><expr pos:start="187:21" pos:end="189:31"><call pos:start="187:21" pos:end="189:31"><name pos:start="187:21" pos:end="187:25">stl_p</name><argument_list pos:start="187:26" pos:end="189:31">(<argument pos:start="187:27" pos:end="187:72"><expr pos:start="187:27" pos:end="187:72"><name pos:start="187:27" pos:end="187:44"><name pos:start="187:27" pos:end="187:29">env</name><operator pos:start="187:30" pos:end="187:31">-&gt;</operator><name pos:start="187:32" pos:end="187:44">external_htab</name></name> <operator pos:start="187:46" pos:end="187:46">+</operator> <name pos:start="187:48" pos:end="187:55">pteg_off</name> <operator pos:start="187:57" pos:end="187:57">+</operator> <operator pos:start="187:59" pos:end="187:59">(</operator><name pos:start="187:60" pos:end="187:63">good</name> <operator pos:start="187:65" pos:end="187:65">*</operator> <literal type="number" pos:start="187:67" pos:end="187:67">8</literal><operator pos:start="187:68" pos:end="187:68">)</operator> <operator pos:start="187:70" pos:end="187:70">+</operator> <literal type="number" pos:start="187:72" pos:end="187:72">4</literal></expr></argument>,

                          <argument pos:start="189:27" pos:end="189:30"><expr pos:start="189:27" pos:end="189:30"><name pos:start="189:27" pos:end="189:30">pte1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="191:19" pos:end="197:17">else <block pos:start="191:24" pos:end="197:17">{<block_content pos:start="193:21" pos:end="195:60">

                    <expr_stmt pos:start="193:21" pos:end="195:60"><expr pos:start="193:21" pos:end="195:59"><call pos:start="193:21" pos:end="195:59"><name pos:start="193:21" pos:end="193:37">stl_phys_notdirty</name><argument_list pos:start="193:38" pos:end="195:59">(<argument pos:start="193:39" pos:end="195:52"><expr pos:start="193:39" pos:end="195:52"><name pos:start="193:39" pos:end="193:52"><name pos:start="193:39" pos:end="193:41">env</name><operator pos:start="193:42" pos:end="193:43">-&gt;</operator><name pos:start="193:44" pos:end="193:52">htab_base</name></name> <operator pos:start="193:54" pos:end="193:54">+</operator> <name pos:start="193:56" pos:end="193:63">pteg_off</name> <operator pos:start="193:65" pos:end="193:65">+</operator>

                                      <operator pos:start="195:39" pos:end="195:39">(</operator><name pos:start="195:40" pos:end="195:43">good</name> <operator pos:start="195:45" pos:end="195:45">*</operator> <literal type="number" pos:start="195:47" pos:end="195:47">8</literal><operator pos:start="195:48" pos:end="195:48">)</operator> <operator pos:start="195:50" pos:end="195:50">+</operator> <literal type="number" pos:start="195:52" pos:end="195:52">4</literal></expr></argument>, <argument pos:start="195:55" pos:end="195:58"><expr pos:start="195:55" pos:end="195:58"><name pos:start="195:55" pos:end="195:58">pte1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="207:5" pos:end="207:15">return <expr pos:start="207:12" pos:end="207:14"><name pos:start="207:12" pos:end="207:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
