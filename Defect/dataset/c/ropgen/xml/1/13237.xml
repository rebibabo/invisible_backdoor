<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13237.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">QemuOpts</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:25">qemu_opts_parse</name><parameter_list pos:start="1:26" pos:end="3:44">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:38">QemuOptsList</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">list</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:64">params</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:43"><decl pos:start="3:27" pos:end="3:43"><type pos:start="3:27" pos:end="3:43"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:43">permit_abbrev</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:16">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:25">firstname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:20"><name pos:start="9:10" pos:end="9:14">value</name><index pos:start="9:15" pos:end="9:20">[<expr pos:start="9:16" pos:end="9:19"><literal type="number" pos:start="9:16" pos:end="9:19">1024</literal></expr>]</index></name></decl>, <decl pos:start="9:23" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:8"><modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:25">id</name> <init pos:start="9:27" pos:end="9:32">= <expr pos:start="9:29" pos:end="9:32"><name pos:start="9:29" pos:end="9:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">QemuOpts</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:18">opts</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:53"><expr pos:start="17:5" pos:end="17:52"><call pos:start="17:5" pos:end="17:52"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:52">(<argument pos:start="17:12" pos:end="17:51"><expr pos:start="17:12" pos:end="17:51"><operator pos:start="17:12" pos:end="17:12">!</operator><name pos:start="17:13" pos:end="17:25">permit_abbrev</name> <operator pos:start="17:27" pos:end="17:28">||</operator> <name pos:start="17:30" pos:end="17:51"><name pos:start="17:30" pos:end="17:33">list</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:51">implied_opt_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:62"><expr pos:start="19:5" pos:end="19:61"><name pos:start="19:5" pos:end="19:13">firstname</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <ternary pos:start="19:17" pos:end="19:61"><condition pos:start="19:17" pos:end="19:31"><expr pos:start="19:17" pos:end="19:29"><name pos:start="19:17" pos:end="19:29">permit_abbrev</name></expr> ?</condition><then pos:start="19:33" pos:end="19:54"> <expr pos:start="19:33" pos:end="19:54"><name pos:start="19:33" pos:end="19:54"><name pos:start="19:33" pos:end="19:36">list</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:54">implied_opt_name</name></name></expr> </then><else pos:start="19:56" pos:end="19:61">: <expr pos:start="19:58" pos:end="19:61"><name pos:start="19:58" pos:end="19:61">NULL</name></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:39">(<expr pos:start="23:9" pos:end="23:38"><call pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:15">strncmp</name><argument_list pos:start="23:16" pos:end="23:33">(<argument pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">params</name></expr></argument>, <argument pos:start="23:25" pos:end="23:29"><expr pos:start="23:25" pos:end="23:29"><literal type="string" pos:start="23:25" pos:end="23:29">"id="</literal></expr></argument>, <argument pos:start="23:32" pos:end="23:32"><expr pos:start="23:32" pos:end="23:32"><literal type="number" pos:start="23:32" pos:end="23:32">3</literal></expr></argument>)</argument_list></call> <operator pos:start="23:35" pos:end="23:36">==</operator> <literal type="number" pos:start="23:38" pos:end="23:38">0</literal></expr>)</condition> <block pos:start="23:41" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:32">

        <expr_stmt pos:start="25:9" pos:end="25:54"><expr pos:start="25:9" pos:end="25:53"><call pos:start="25:9" pos:end="25:53"><name pos:start="25:9" pos:end="25:21">get_opt_value</name><argument_list pos:start="25:22" pos:end="25:53">(<argument pos:start="25:23" pos:end="25:27"><expr pos:start="25:23" pos:end="25:27"><name pos:start="25:23" pos:end="25:27">value</name></expr></argument>, <argument pos:start="25:30" pos:end="25:42"><expr pos:start="25:30" pos:end="25:42"><sizeof pos:start="25:30" pos:end="25:42">sizeof<argument_list pos:start="25:36" pos:end="25:42">(<argument pos:start="25:37" pos:end="25:41"><expr pos:start="25:37" pos:end="25:41"><name pos:start="25:37" pos:end="25:41">value</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:45" pos:end="25:52"><expr pos:start="25:45" pos:end="25:52"><name pos:start="25:45" pos:end="25:50">params</name><operator pos:start="25:51" pos:end="25:51">+</operator><literal type="number" pos:start="25:52" pos:end="25:52">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:32"><expr pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:10">id</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:31"><name pos:start="27:14" pos:end="27:24">qemu_strdup</name><argument_list pos:start="27:25" pos:end="27:31">(<argument pos:start="27:26" pos:end="27:30"><expr pos:start="27:26" pos:end="27:30"><name pos:start="27:26" pos:end="27:30">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="29:7" pos:end="35:5">else if <condition pos:start="29:15" pos:end="29:52">(<expr pos:start="29:16" pos:end="29:51"><operator pos:start="29:16" pos:end="29:16">(</operator><name pos:start="29:17" pos:end="29:17">p</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <call pos:start="29:21" pos:end="29:42"><name pos:start="29:21" pos:end="29:26">strstr</name><argument_list pos:start="29:27" pos:end="29:42">(<argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><name pos:start="29:28" pos:end="29:33">params</name></expr></argument>, <argument pos:start="29:36" pos:end="29:41"><expr pos:start="29:36" pos:end="29:41"><literal type="string" pos:start="29:36" pos:end="29:41">",id="</literal></expr></argument>)</argument_list></call><operator pos:start="29:43" pos:end="29:43">)</operator> <operator pos:start="29:45" pos:end="29:46">!=</operator> <name pos:start="29:48" pos:end="29:51">NULL</name></expr>)</condition> <block pos:start="29:54" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:32">

        <expr_stmt pos:start="31:9" pos:end="31:49"><expr pos:start="31:9" pos:end="31:48"><call pos:start="31:9" pos:end="31:48"><name pos:start="31:9" pos:end="31:21">get_opt_value</name><argument_list pos:start="31:22" pos:end="31:48">(<argument pos:start="31:23" pos:end="31:27"><expr pos:start="31:23" pos:end="31:27"><name pos:start="31:23" pos:end="31:27">value</name></expr></argument>, <argument pos:start="31:30" pos:end="31:42"><expr pos:start="31:30" pos:end="31:42"><sizeof pos:start="31:30" pos:end="31:42">sizeof<argument_list pos:start="31:36" pos:end="31:42">(<argument pos:start="31:37" pos:end="31:41"><expr pos:start="31:37" pos:end="31:41"><name pos:start="31:37" pos:end="31:41">value</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:45" pos:end="31:47"><expr pos:start="31:45" pos:end="31:47"><name pos:start="31:45" pos:end="31:45">p</name><operator pos:start="31:46" pos:end="31:46">+</operator><literal type="number" pos:start="31:47" pos:end="31:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:10">id</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:31"><name pos:start="33:14" pos:end="33:24">qemu_strdup</name><argument_list pos:start="33:25" pos:end="33:31">(<argument pos:start="33:26" pos:end="33:30"><expr pos:start="33:26" pos:end="33:30"><name pos:start="33:26" pos:end="33:30">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:8">opts</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:40"><name pos:start="37:12" pos:end="37:27">qemu_opts_create</name><argument_list pos:start="37:28" pos:end="37:40">(<argument pos:start="37:29" pos:end="37:32"><expr pos:start="37:29" pos:end="37:32"><name pos:start="37:29" pos:end="37:32">list</name></expr></argument>, <argument pos:start="37:35" pos:end="37:36"><expr pos:start="37:35" pos:end="37:36"><name pos:start="37:35" pos:end="37:36">id</name></expr></argument>, <argument pos:start="37:39" pos:end="37:39"><expr pos:start="37:39" pos:end="37:39"><literal type="number" pos:start="37:39" pos:end="37:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:20"><if pos:start="39:5" pos:end="41:20">if <condition pos:start="39:8" pos:end="39:21">(<expr pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:12">opts</name> <operator pos:start="39:14" pos:end="39:15">==</operator> <name pos:start="39:17" pos:end="39:20">NULL</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:20"><block_content pos:start="41:9" pos:end="41:20">

        <return pos:start="41:9" pos:end="41:20">return <expr pos:start="41:16" pos:end="41:19"><name pos:start="41:16" pos:end="41:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:57">(<expr pos:start="45:9" pos:end="45:56"><call pos:start="45:9" pos:end="45:51"><name pos:start="45:9" pos:end="45:26">qemu_opts_do_parse</name><argument_list pos:start="45:27" pos:end="45:51">(<argument pos:start="45:28" pos:end="45:31"><expr pos:start="45:28" pos:end="45:31"><name pos:start="45:28" pos:end="45:31">opts</name></expr></argument>, <argument pos:start="45:34" pos:end="45:39"><expr pos:start="45:34" pos:end="45:39"><name pos:start="45:34" pos:end="45:39">params</name></expr></argument>, <argument pos:start="45:42" pos:end="45:50"><expr pos:start="45:42" pos:end="45:50"><name pos:start="45:42" pos:end="45:50">firstname</name></expr></argument>)</argument_list></call> <operator pos:start="45:53" pos:end="45:54">!=</operator> <literal type="number" pos:start="45:56" pos:end="45:56">0</literal></expr>)</condition> <block pos:start="45:59" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:20">

        <expr_stmt pos:start="47:9" pos:end="47:28"><expr pos:start="47:9" pos:end="47:27"><call pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:21">qemu_opts_del</name><argument_list pos:start="47:22" pos:end="47:27">(<argument pos:start="47:23" pos:end="47:26"><expr pos:start="47:23" pos:end="47:26"><name pos:start="47:23" pos:end="47:26">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:20">return <expr pos:start="49:16" pos:end="49:19"><name pos:start="49:16" pos:end="49:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="55:5" pos:end="55:16">return <expr pos:start="55:12" pos:end="55:15"><name pos:start="55:12" pos:end="55:15">opts</name></expr>;</return>

</block_content>}</block></function>
</unit>
