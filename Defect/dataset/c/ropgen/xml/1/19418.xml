<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19418.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="1:71">(<parameter pos:start="1:25" pos:end="1:39"><decl pos:start="1:25" pos:end="1:39"><type pos:start="1:25" pos:end="1:39"><name pos:start="1:25" pos:end="1:34">NUTContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">nut</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:49">AVPacket</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">pkt</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:70"><decl pos:start="1:57" pos:end="1:70"><type pos:start="1:57" pos:end="1:70"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:70">frame_code</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:33">= <expr pos:start="5:26" pos:end="5:33"><name pos:start="5:26" pos:end="5:33"><name pos:start="5:26" pos:end="5:28">nut</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:33">avf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">bc</name>    <init pos:start="7:24" pos:end="7:30">= <expr pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name></decl>, <decl pos:start="9:15" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:23">stream_id</name></decl>, <decl pos:start="9:26" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:32">discard</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">pts</name></decl>, <decl pos:start="11:18" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:18" pos:end="11:28">last_IP_pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">StreamContext</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">stc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:22">header_idx</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:79"><expr pos:start="19:5" pos:end="19:78"><name pos:start="19:5" pos:end="19:8">size</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:78"><name pos:start="19:12" pos:end="19:30">decode_frame_header</name><argument_list pos:start="19:31" pos:end="19:78">(<argument pos:start="19:32" pos:end="19:34"><expr pos:start="19:32" pos:end="19:34"><name pos:start="19:32" pos:end="19:34">nut</name></expr></argument>, <argument pos:start="19:37" pos:end="19:40"><expr pos:start="19:37" pos:end="19:40"><operator pos:start="19:37" pos:end="19:37">&amp;</operator><name pos:start="19:38" pos:end="19:40">pts</name></expr></argument>, <argument pos:start="19:43" pos:end="19:52"><expr pos:start="19:43" pos:end="19:52"><operator pos:start="19:43" pos:end="19:43">&amp;</operator><name pos:start="19:44" pos:end="19:52">stream_id</name></expr></argument>, <argument pos:start="19:55" pos:end="19:65"><expr pos:start="19:55" pos:end="19:65"><operator pos:start="19:55" pos:end="19:55">&amp;</operator><name pos:start="19:56" pos:end="19:65">header_idx</name></expr></argument>, <argument pos:start="19:68" pos:end="19:77"><expr pos:start="19:68" pos:end="19:77"><name pos:start="19:68" pos:end="19:77">frame_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:20"><if pos:start="21:5" pos:end="23:20">if <condition pos:start="21:8" pos:end="21:17">(<expr pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:12">size</name> <operator pos:start="21:14" pos:end="21:14">&lt;</operator> <literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:20"><block_content pos:start="23:9" pos:end="23:20">

        <return pos:start="23:9" pos:end="23:20">return <expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">size</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:7">stc</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <operator pos:start="27:11" pos:end="27:11">&amp;</operator><name pos:start="27:12" pos:end="27:33"><name pos:start="27:12" pos:end="27:14">nut</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:22">stream</name><index pos:start="27:23" pos:end="27:33">[<expr pos:start="27:24" pos:end="27:32"><name pos:start="27:24" pos:end="27:32">stream_id</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="33:38"><if pos:start="31:5" pos:end="33:38">if <condition pos:start="31:8" pos:end="31:35">(<expr pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:11">stc</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:23">last_flags</name></name> <operator pos:start="31:25" pos:end="31:25">&amp;</operator> <name pos:start="31:27" pos:end="31:34">FLAG_KEY</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:38"><block_content pos:start="33:9" pos:end="33:38">

        <expr_stmt pos:start="33:9" pos:end="33:38"><expr pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:11">stc</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:33">skip_until_key_frame</name></name> <operator pos:start="33:35" pos:end="33:35">=</operator> <literal type="number" pos:start="33:37" pos:end="33:37">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:49"><expr pos:start="37:5" pos:end="37:48"><name pos:start="37:5" pos:end="37:11">discard</name>     <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:39"><name pos:start="37:19" pos:end="37:19">s</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:28">streams</name><index pos:start="37:29" pos:end="37:39">[<expr pos:start="37:30" pos:end="37:38"><name pos:start="37:30" pos:end="37:38">stream_id</name></expr>]</index></name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:48">discard</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:53"><expr pos:start="39:5" pos:end="39:52"><name pos:start="39:5" pos:end="39:15">last_IP_pts</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:39"><name pos:start="39:19" pos:end="39:19">s</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:28">streams</name><index pos:start="39:29" pos:end="39:39">[<expr pos:start="39:30" pos:end="39:38"><name pos:start="39:30" pos:end="39:38">stream_id</name></expr>]</index></name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:52">last_IP_pts</name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="55:5"><if pos:start="41:5" pos:end="55:5">if <condition pos:start="41:8" pos:end="49:34">(<expr pos:start="41:9" pos:end="49:33"><operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:16">discard</name> <operator pos:start="41:18" pos:end="41:19">&gt;=</operator> <name pos:start="41:21" pos:end="41:36">AVDISCARD_NONKEY</name> <operator pos:start="41:38" pos:end="41:39">&amp;&amp;</operator> <operator pos:start="41:41" pos:end="41:41">!</operator><operator pos:start="41:42" pos:end="41:42">(</operator><name pos:start="41:43" pos:end="41:57"><name pos:start="41:43" pos:end="41:45">stc</name><operator pos:start="41:46" pos:end="41:47">-&gt;</operator><name pos:start="41:48" pos:end="41:57">last_flags</name></name> <operator pos:start="41:59" pos:end="41:59">&amp;</operator> <name pos:start="41:61" pos:end="41:68">FLAG_KEY</name><operator pos:start="41:69" pos:end="41:69">)</operator><operator pos:start="41:70" pos:end="41:70">)</operator> <operator pos:start="41:72" pos:end="41:73">||</operator>

        <operator pos:start="43:9" pos:end="43:9">(</operator><name pos:start="43:10" pos:end="43:16">discard</name> <operator pos:start="43:18" pos:end="43:19">&gt;=</operator> <name pos:start="43:21" pos:end="43:35">AVDISCARD_BIDIR</name>  <operator pos:start="43:38" pos:end="43:39">&amp;&amp;</operator> <name pos:start="43:41" pos:end="43:51">last_IP_pts</name> <operator pos:start="43:53" pos:end="43:54">!=</operator> <name pos:start="43:56" pos:end="43:69">AV_NOPTS_VALUE</name> <operator pos:start="43:71" pos:end="43:72">&amp;&amp;</operator>

         <name pos:start="45:10" pos:end="45:20">last_IP_pts</name> <operator pos:start="45:22" pos:end="45:22">&gt;</operator> <name pos:start="45:24" pos:end="45:26">pts</name><operator pos:start="45:27" pos:end="45:27">)</operator> <operator pos:start="45:29" pos:end="45:30">||</operator>

        <name pos:start="47:9" pos:end="47:15">discard</name> <operator pos:start="47:17" pos:end="47:18">&gt;=</operator> <name pos:start="47:20" pos:end="47:32">AVDISCARD_ALL</name> <operator pos:start="47:34" pos:end="47:35">||</operator>

        <name pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:11">stc</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:33">skip_until_key_frame</name></name></expr>)</condition> <block pos:start="49:36" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:17">

        <expr_stmt pos:start="51:9" pos:end="51:28"><expr pos:start="51:9" pos:end="51:27"><call pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:17">avio_skip</name><argument_list pos:start="51:18" pos:end="51:27">(<argument pos:start="51:19" pos:end="51:20"><expr pos:start="51:19" pos:end="51:20"><name pos:start="51:19" pos:end="51:20">bc</name></expr></argument>, <argument pos:start="51:23" pos:end="51:26"><expr pos:start="51:23" pos:end="51:26"><name pos:start="51:23" pos:end="51:26">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="61:31"><if pos:start="59:5" pos:end="61:31">if <condition pos:start="59:8" pos:end="59:67">(<expr pos:start="59:9" pos:end="59:66"><call pos:start="59:9" pos:end="59:62"><name pos:start="59:9" pos:end="59:21">av_new_packet</name><argument_list pos:start="59:22" pos:end="59:62">(<argument pos:start="59:23" pos:end="59:25"><expr pos:start="59:23" pos:end="59:25"><name pos:start="59:23" pos:end="59:25">pkt</name></expr></argument>, <argument pos:start="59:28" pos:end="59:61"><expr pos:start="59:28" pos:end="59:61"><name pos:start="59:28" pos:end="59:31">size</name> <operator pos:start="59:33" pos:end="59:33">+</operator> <name pos:start="59:35" pos:end="59:61"><name pos:start="59:35" pos:end="59:37">nut</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:49">header_len</name><index pos:start="59:50" pos:end="59:61">[<expr pos:start="59:51" pos:end="59:60"><name pos:start="59:51" pos:end="59:60">header_idx</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="59:64" pos:end="59:64">&lt;</operator> <literal type="number" pos:start="59:66" pos:end="59:66">0</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:31"><block_content pos:start="61:9" pos:end="61:31">

        <return pos:start="61:9" pos:end="61:31">return <expr pos:start="61:16" pos:end="61:30"><call pos:start="61:16" pos:end="61:30"><name pos:start="61:16" pos:end="61:22">AVERROR</name><argument_list pos:start="61:23" pos:end="61:30">(<argument pos:start="61:24" pos:end="61:29"><expr pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:76"><expr pos:start="63:5" pos:end="63:75"><call pos:start="63:5" pos:end="63:75"><name pos:start="63:5" pos:end="63:10">memcpy</name><argument_list pos:start="63:11" pos:end="63:75">(<argument pos:start="63:12" pos:end="63:20"><expr pos:start="63:12" pos:end="63:20"><name pos:start="63:12" pos:end="63:20"><name pos:start="63:12" pos:end="63:14">pkt</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:20">data</name></name></expr></argument>, <argument pos:start="63:23" pos:end="63:45"><expr pos:start="63:23" pos:end="63:45"><name pos:start="63:23" pos:end="63:45"><name pos:start="63:23" pos:end="63:25">nut</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:33">header</name><index pos:start="63:34" pos:end="63:45">[<expr pos:start="63:35" pos:end="63:44"><name pos:start="63:35" pos:end="63:44">header_idx</name></expr>]</index></name></expr></argument>, <argument pos:start="63:48" pos:end="63:74"><expr pos:start="63:48" pos:end="63:74"><name pos:start="63:48" pos:end="63:74"><name pos:start="63:48" pos:end="63:50">nut</name><operator pos:start="63:51" pos:end="63:52">-&gt;</operator><name pos:start="63:53" pos:end="63:62">header_len</name><index pos:start="63:63" pos:end="63:74">[<expr pos:start="63:64" pos:end="63:73"><name pos:start="63:64" pos:end="63:73">header_idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:29"><expr pos:start="65:5" pos:end="65:28"><name pos:start="65:5" pos:end="65:12"><name pos:start="65:5" pos:end="65:7">pkt</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:12">pos</name></name> <operator pos:start="65:14" pos:end="65:14">=</operator> <call pos:start="65:16" pos:end="65:28"><name pos:start="65:16" pos:end="65:24">avio_tell</name><argument_list pos:start="65:25" pos:end="65:28">(<argument pos:start="65:26" pos:end="65:27"><expr pos:start="65:26" pos:end="65:27"><name pos:start="65:26" pos:end="65:27">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="65:31" pos:end="65:38">// FIXME</comment>

    <if_stmt pos:start="67:5" pos:end="85:5"><if pos:start="67:5" pos:end="85:5">if <condition pos:start="67:8" pos:end="67:39">(<expr pos:start="67:9" pos:end="67:38"><name pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:11">stc</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:23">last_flags</name></name> <operator pos:start="67:25" pos:end="67:25">&amp;</operator> <name pos:start="67:27" pos:end="67:38">FLAG_SM_DATA</name></expr>)</condition> <block pos:start="67:41" pos:end="85:5">{<block_content pos:start="69:9" pos:end="83:29">

        <decl_stmt pos:start="69:9" pos:end="69:20"><decl pos:start="69:9" pos:end="69:19"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:19">sm_size</name></decl>;</decl_stmt>

        <if_stmt pos:start="71:9" pos:end="73:39"><if pos:start="71:9" pos:end="73:39">if <condition pos:start="71:12" pos:end="71:61">(<expr pos:start="71:13" pos:end="71:60"><call pos:start="71:13" pos:end="71:56"><name pos:start="71:13" pos:end="71:24">read_sm_data</name><argument_list pos:start="71:25" pos:end="71:56">(<argument pos:start="71:26" pos:end="71:26"><expr pos:start="71:26" pos:end="71:26"><name pos:start="71:26" pos:end="71:26">s</name></expr></argument>, <argument pos:start="71:29" pos:end="71:30"><expr pos:start="71:29" pos:end="71:30"><name pos:start="71:29" pos:end="71:30">bc</name></expr></argument>, <argument pos:start="71:33" pos:end="71:35"><expr pos:start="71:33" pos:end="71:35"><name pos:start="71:33" pos:end="71:35">pkt</name></expr></argument>, <argument pos:start="71:38" pos:end="71:38"><expr pos:start="71:38" pos:end="71:38"><literal type="number" pos:start="71:38" pos:end="71:38">0</literal></expr></argument>, <argument pos:start="71:41" pos:end="71:55"><expr pos:start="71:41" pos:end="71:55"><name pos:start="71:41" pos:end="71:48"><name pos:start="71:41" pos:end="71:43">pkt</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:48">pos</name></name> <operator pos:start="71:50" pos:end="71:50">+</operator> <name pos:start="71:52" pos:end="71:55">size</name></expr></argument>)</argument_list></call> <operator pos:start="71:58" pos:end="71:58">&lt;</operator> <literal type="number" pos:start="71:60" pos:end="71:60">0</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:39"><block_content pos:start="73:13" pos:end="73:39">

            <return pos:start="73:13" pos:end="73:39">return <expr pos:start="73:20" pos:end="73:38"><name pos:start="73:20" pos:end="73:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="75:9" pos:end="77:39"><if pos:start="75:9" pos:end="77:39">if <condition pos:start="75:12" pos:end="75:61">(<expr pos:start="75:13" pos:end="75:60"><call pos:start="75:13" pos:end="75:56"><name pos:start="75:13" pos:end="75:24">read_sm_data</name><argument_list pos:start="75:25" pos:end="75:56">(<argument pos:start="75:26" pos:end="75:26"><expr pos:start="75:26" pos:end="75:26"><name pos:start="75:26" pos:end="75:26">s</name></expr></argument>, <argument pos:start="75:29" pos:end="75:30"><expr pos:start="75:29" pos:end="75:30"><name pos:start="75:29" pos:end="75:30">bc</name></expr></argument>, <argument pos:start="75:33" pos:end="75:35"><expr pos:start="75:33" pos:end="75:35"><name pos:start="75:33" pos:end="75:35">pkt</name></expr></argument>, <argument pos:start="75:38" pos:end="75:38"><expr pos:start="75:38" pos:end="75:38"><literal type="number" pos:start="75:38" pos:end="75:38">1</literal></expr></argument>, <argument pos:start="75:41" pos:end="75:55"><expr pos:start="75:41" pos:end="75:55"><name pos:start="75:41" pos:end="75:48"><name pos:start="75:41" pos:end="75:43">pkt</name><operator pos:start="75:44" pos:end="75:45">-&gt;</operator><name pos:start="75:46" pos:end="75:48">pos</name></name> <operator pos:start="75:50" pos:end="75:50">+</operator> <name pos:start="75:52" pos:end="75:55">size</name></expr></argument>)</argument_list></call> <operator pos:start="75:58" pos:end="75:58">&lt;</operator> <literal type="number" pos:start="75:60" pos:end="75:60">0</literal></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:39"><block_content pos:start="77:13" pos:end="77:39">

            <return pos:start="77:13" pos:end="77:39">return <expr pos:start="77:20" pos:end="77:38"><name pos:start="77:20" pos:end="77:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:43"><expr pos:start="79:9" pos:end="79:42"><name pos:start="79:9" pos:end="79:15">sm_size</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <call pos:start="79:19" pos:end="79:31"><name pos:start="79:19" pos:end="79:27">avio_tell</name><argument_list pos:start="79:28" pos:end="79:31">(<argument pos:start="79:29" pos:end="79:30"><expr pos:start="79:29" pos:end="79:30"><name pos:start="79:29" pos:end="79:30">bc</name></expr></argument>)</argument_list></call> <operator pos:start="79:33" pos:end="79:33">-</operator> <name pos:start="79:35" pos:end="79:42"><name pos:start="79:35" pos:end="79:37">pkt</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:42">pos</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:29"><expr pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:12">size</name>      <operator pos:start="81:19" pos:end="81:20">-=</operator> <name pos:start="81:22" pos:end="81:28">sm_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:29"><expr pos:start="83:9" pos:end="83:28"><name pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:11">pkt</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:17">size</name></name> <operator pos:start="83:19" pos:end="83:20">-=</operator> <name pos:start="83:22" pos:end="83:28">sm_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:65"><expr pos:start="89:5" pos:end="89:64"><call pos:start="89:5" pos:end="89:64"><name pos:start="89:5" pos:end="89:13">avio_read</name><argument_list pos:start="89:14" pos:end="89:64">(<argument pos:start="89:15" pos:end="89:16"><expr pos:start="89:15" pos:end="89:16"><name pos:start="89:15" pos:end="89:16">bc</name></expr></argument>, <argument pos:start="89:19" pos:end="89:57"><expr pos:start="89:19" pos:end="89:57"><name pos:start="89:19" pos:end="89:27"><name pos:start="89:19" pos:end="89:21">pkt</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:27">data</name></name> <operator pos:start="89:29" pos:end="89:29">+</operator> <name pos:start="89:31" pos:end="89:57"><name pos:start="89:31" pos:end="89:33">nut</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:45">header_len</name><index pos:start="89:46" pos:end="89:57">[<expr pos:start="89:47" pos:end="89:56"><name pos:start="89:47" pos:end="89:56">header_idx</name></expr>]</index></name></expr></argument>, <argument pos:start="89:60" pos:end="89:63"><expr pos:start="89:60" pos:end="89:63"><name pos:start="89:60" pos:end="89:63">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:34"><expr pos:start="93:5" pos:end="93:33"><name pos:start="93:5" pos:end="93:21"><name pos:start="93:5" pos:end="93:7">pkt</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:21">stream_index</name></name> <operator pos:start="93:23" pos:end="93:23">=</operator> <name pos:start="93:25" pos:end="93:33">stream_id</name></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="97:38"><if pos:start="95:5" pos:end="97:38">if <condition pos:start="95:8" pos:end="95:35">(<expr pos:start="95:9" pos:end="95:34"><name pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:11">stc</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:23">last_flags</name></name> <operator pos:start="95:25" pos:end="95:25">&amp;</operator> <name pos:start="95:27" pos:end="95:34">FLAG_KEY</name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:38"><block_content pos:start="97:9" pos:end="97:38">

        <expr_stmt pos:start="97:9" pos:end="97:38"><expr pos:start="97:9" pos:end="97:37"><name pos:start="97:9" pos:end="97:18"><name pos:start="97:9" pos:end="97:11">pkt</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:18">flags</name></name> <operator pos:start="97:20" pos:end="97:21">|=</operator> <name pos:start="97:23" pos:end="97:37">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:19"><expr pos:start="99:5" pos:end="99:18"><name pos:start="99:5" pos:end="99:12"><name pos:start="99:5" pos:end="99:7">pkt</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:12">pts</name></name> <operator pos:start="99:14" pos:end="99:14">=</operator> <name pos:start="99:16" pos:end="99:18">pts</name></expr>;</expr_stmt>



    <return pos:start="103:5" pos:end="103:13">return <expr pos:start="103:12" pos:end="103:12"><literal type="number" pos:start="103:12" pos:end="103:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
