<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11058.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">qtrle_decode_frame</name><parameter_list pos:start="1:30" pos:end="5:46">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:40"><decl pos:start="3:31" pos:end="3:40"><type pos:start="3:31" pos:end="3:40"><name pos:start="3:31" pos:end="3:34">void</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">data</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:45">int</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:56">data_size</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:45"><decl pos:start="5:31" pos:end="5:45"><type pos:start="5:31" pos:end="5:45"><name pos:start="5:31" pos:end="5:38">AVPacket</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:45">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="215:1">{<block_content pos:start="9:5" pos:end="213:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">QtrleContext</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:19">s</name> <init pos:start="13:21" pos:end="13:38">= <expr pos:start="13:23" pos:end="13:38"><name pos:start="13:23" pos:end="13:38"><name pos:start="13:23" pos:end="13:27">avctx</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">header</name></decl>, <decl pos:start="15:17" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:17" pos:end="15:26">start_line</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:18">stream_ptr</name></decl>, <decl pos:start="17:21" pos:end="17:26"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:21" pos:end="17:26">height</name></decl>, <decl pos:start="17:29" pos:end="17:35"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:29" pos:end="17:35">row_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:19">has_palette</name> <init pos:start="19:21" pos:end="19:23">= <expr pos:start="19:23" pos:end="19:23"><literal type="number" pos:start="19:23" pos:end="19:23">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:10">buf</name></name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:16">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:11">size</name></name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:22">buf_size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:12">frame</name><operator pos:start="29:13" pos:end="29:13">.</operator><name pos:start="29:14" pos:end="29:22">reference</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="33:80"><expr pos:start="31:5" pos:end="33:79"><name pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:12">frame</name><operator pos:start="31:13" pos:end="31:13">.</operator><name pos:start="31:14" pos:end="31:25">buffer_hints</name></name> <operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:49">FF_BUFFER_HINTS_VALID</name> <operator pos:start="31:51" pos:end="31:51">|</operator> <name pos:start="31:53" pos:end="31:76">FF_BUFFER_HINTS_PRESERVE</name> <operator pos:start="31:78" pos:end="31:78">|</operator>

                            <name pos:start="33:29" pos:end="33:52">FF_BUFFER_HINTS_REUSABLE</name> <operator pos:start="33:54" pos:end="33:54">|</operator> <name pos:start="33:56" pos:end="33:79">FF_BUFFER_HINTS_READABLE</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:46">(<expr pos:start="35:9" pos:end="35:45"><call pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:13">avctx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:27">reget_buffer</name></name><argument_list pos:start="35:28" pos:end="35:45">(<argument pos:start="35:29" pos:end="35:33"><expr pos:start="35:29" pos:end="35:33"><name pos:start="35:29" pos:end="35:33">avctx</name></expr></argument>, <argument pos:start="35:36" pos:end="35:44"><expr pos:start="35:36" pos:end="35:44"><operator pos:start="35:36" pos:end="35:36">&amp;</operator><name pos:start="35:37" pos:end="35:44"><name pos:start="35:37" pos:end="35:37">s</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:44">frame</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:48" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <expr_stmt pos:start="37:9" pos:end="37:67"><expr pos:start="37:9" pos:end="37:66"><call pos:start="37:9" pos:end="37:66"><name pos:start="37:9" pos:end="37:14">av_log</name> <argument_list pos:start="37:16" pos:end="37:66">(<argument pos:start="37:17" pos:end="37:24"><expr pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:24">avctx</name></name></expr></argument>, <argument pos:start="37:27" pos:end="37:38"><expr pos:start="37:27" pos:end="37:38"><name pos:start="37:27" pos:end="37:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:41" pos:end="37:65"><expr pos:start="37:41" pos:end="37:65"><literal type="string" pos:start="37:41" pos:end="37:65">"reget_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:56">/* check if this frame is even supposed to change */</comment>

    <if_stmt pos:start="47:5" pos:end="49:18"><if pos:start="47:5" pos:end="49:18">if <condition pos:start="47:8" pos:end="47:20">(<expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:15">size</name></name> <operator pos:start="47:17" pos:end="47:17">&lt;</operator> <literal type="number" pos:start="47:19" pos:end="47:19">8</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:18"><block_content pos:start="49:9" pos:end="49:18">

        <goto pos:start="49:9" pos:end="49:18">goto <name pos:start="49:14" pos:end="49:17">done</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:36">/* start after the chunk size */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:19"><expr pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:14">stream_ptr</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">4</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:26">/* fetch the header */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:42"><expr pos:start="61:5" pos:end="61:41"><name pos:start="61:5" pos:end="61:10">header</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <call pos:start="61:14" pos:end="61:41"><name pos:start="61:14" pos:end="61:20">AV_RB16</name><argument_list pos:start="61:21" pos:end="61:41">(<argument pos:start="61:22" pos:end="61:40"><expr pos:start="61:22" pos:end="61:40"><operator pos:start="61:22" pos:end="61:22">&amp;</operator><name pos:start="61:23" pos:end="61:40"><name pos:start="61:23" pos:end="61:23">s</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:28">buf</name><index pos:start="61:29" pos:end="61:40">[<expr pos:start="61:30" pos:end="61:39"><name pos:start="61:30" pos:end="61:39">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:20"><expr pos:start="63:5" pos:end="63:19"><name pos:start="63:5" pos:end="63:14">stream_ptr</name> <operator pos:start="63:16" pos:end="63:17">+=</operator> <literal type="number" pos:start="63:19" pos:end="63:19">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:70">/* if a header is present, fetch additional decoding parameters */</comment>

    <if_stmt pos:start="69:5" pos:end="89:5"><if pos:start="69:5" pos:end="83:5">if <condition pos:start="69:8" pos:end="69:24">(<expr pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:14">header</name> <operator pos:start="69:16" pos:end="69:16">&amp;</operator> <literal type="number" pos:start="69:18" pos:end="69:23">0x0008</literal></expr>)</condition> <block pos:start="69:26" pos:end="83:5">{<block_content pos:start="71:9" pos:end="81:24">

        <if_stmt pos:start="71:9" pos:end="73:22"><if pos:start="71:9" pos:end="73:22">if<condition pos:start="71:11" pos:end="71:24">(<expr pos:start="71:12" pos:end="71:23"><name pos:start="71:12" pos:end="71:18"><name pos:start="71:12" pos:end="71:12">s</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:18">size</name></name> <operator pos:start="71:20" pos:end="71:20">&lt;</operator> <literal type="number" pos:start="71:22" pos:end="71:23">14</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:22"><block_content pos:start="73:13" pos:end="73:22">

            <goto pos:start="73:13" pos:end="73:22">goto <name pos:start="73:18" pos:end="73:21">done</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:50"><expr pos:start="75:9" pos:end="75:49"><name pos:start="75:9" pos:end="75:18">start_line</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <call pos:start="75:22" pos:end="75:49"><name pos:start="75:22" pos:end="75:28">AV_RB16</name><argument_list pos:start="75:29" pos:end="75:49">(<argument pos:start="75:30" pos:end="75:48"><expr pos:start="75:30" pos:end="75:48"><operator pos:start="75:30" pos:end="75:30">&amp;</operator><name pos:start="75:31" pos:end="75:48"><name pos:start="75:31" pos:end="75:31">s</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:36">buf</name><index pos:start="75:37" pos:end="75:48">[<expr pos:start="75:38" pos:end="75:47"><name pos:start="75:38" pos:end="75:47">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:24"><expr pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:18">stream_ptr</name> <operator pos:start="77:20" pos:end="77:21">+=</operator> <literal type="number" pos:start="77:23" pos:end="77:23">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:46"><expr pos:start="79:9" pos:end="79:45"><name pos:start="79:9" pos:end="79:14">height</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <call pos:start="79:18" pos:end="79:45"><name pos:start="79:18" pos:end="79:24">AV_RB16</name><argument_list pos:start="79:25" pos:end="79:45">(<argument pos:start="79:26" pos:end="79:44"><expr pos:start="79:26" pos:end="79:44"><operator pos:start="79:26" pos:end="79:26">&amp;</operator><name pos:start="79:27" pos:end="79:44"><name pos:start="79:27" pos:end="79:27">s</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:32">buf</name><index pos:start="79:33" pos:end="79:44">[<expr pos:start="79:34" pos:end="79:43"><name pos:start="79:34" pos:end="79:43">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:24"><expr pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:18">stream_ptr</name> <operator pos:start="81:20" pos:end="81:21">+=</operator> <literal type="number" pos:start="81:23" pos:end="81:23">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="89:5">else <block pos:start="83:12" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:34">

        <expr_stmt pos:start="85:9" pos:end="85:23"><expr pos:start="85:9" pos:end="85:22"><name pos:start="85:9" pos:end="85:18">start_line</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <literal type="number" pos:start="85:22" pos:end="85:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:34"><expr pos:start="87:9" pos:end="87:33"><name pos:start="87:9" pos:end="87:14">height</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <name pos:start="87:18" pos:end="87:33"><name pos:start="87:18" pos:end="87:18">s</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:25">avctx</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:33">height</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:48"><expr pos:start="91:5" pos:end="91:47"><name pos:start="91:5" pos:end="91:11">row_ptr</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <name pos:start="91:15" pos:end="91:34"><name pos:start="91:15" pos:end="91:15">s</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:22">frame</name><operator pos:start="91:23" pos:end="91:23">.</operator><name pos:start="91:24" pos:end="91:31">linesize</name><index pos:start="91:32" pos:end="91:34">[<expr pos:start="91:33" pos:end="91:33"><literal type="number" pos:start="91:33" pos:end="91:33">0</literal></expr>]</index></name> <operator pos:start="91:36" pos:end="91:36">*</operator> <name pos:start="91:38" pos:end="91:47">start_line</name></expr>;</expr_stmt>



    <switch pos:start="95:5" pos:end="175:5">switch <condition pos:start="95:12" pos:end="95:41">(<expr pos:start="95:13" pos:end="95:40"><name pos:start="95:13" pos:end="95:40"><name pos:start="95:13" pos:end="95:17">avctx</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:40">bits_per_coded_sample</name></name></expr>)</condition> <block pos:start="95:43" pos:end="175:5">{<block_content pos:start="97:5" pos:end="173:14">

    <case pos:start="97:5" pos:end="97:11">case <expr pos:start="97:10" pos:end="97:10"><literal type="number" pos:start="97:10" pos:end="97:10">1</literal></expr>:</case>

    <case pos:start="99:5" pos:end="99:12">case <expr pos:start="99:10" pos:end="99:11"><literal type="number" pos:start="99:10" pos:end="99:11">33</literal></expr>:</case>

        <expr_stmt pos:start="101:9" pos:end="101:58"><expr pos:start="101:9" pos:end="101:57"><call pos:start="101:9" pos:end="101:57"><name pos:start="101:9" pos:end="101:25">qtrle_decode_1bpp</name><argument_list pos:start="101:26" pos:end="101:57">(<argument pos:start="101:27" pos:end="101:27"><expr pos:start="101:27" pos:end="101:27"><name pos:start="101:27" pos:end="101:27">s</name></expr></argument>, <argument pos:start="101:30" pos:end="101:39"><expr pos:start="101:30" pos:end="101:39"><name pos:start="101:30" pos:end="101:39">stream_ptr</name></expr></argument>, <argument pos:start="101:42" pos:end="101:48"><expr pos:start="101:42" pos:end="101:48"><name pos:start="101:42" pos:end="101:48">row_ptr</name></expr></argument>, <argument pos:start="101:51" pos:end="101:56"><expr pos:start="101:51" pos:end="101:56"><name pos:start="101:51" pos:end="101:56">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>



    <case pos:start="107:5" pos:end="107:11">case <expr pos:start="107:10" pos:end="107:10"><literal type="number" pos:start="107:10" pos:end="107:10">2</literal></expr>:</case>

    <case pos:start="109:5" pos:end="109:12">case <expr pos:start="109:10" pos:end="109:11"><literal type="number" pos:start="109:10" pos:end="109:11">34</literal></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:63"><expr pos:start="111:9" pos:end="111:62"><call pos:start="111:9" pos:end="111:62"><name pos:start="111:9" pos:end="111:27">qtrle_decode_2n4bpp</name><argument_list pos:start="111:28" pos:end="111:62">(<argument pos:start="111:29" pos:end="111:29"><expr pos:start="111:29" pos:end="111:29"><name pos:start="111:29" pos:end="111:29">s</name></expr></argument>, <argument pos:start="111:32" pos:end="111:41"><expr pos:start="111:32" pos:end="111:41"><name pos:start="111:32" pos:end="111:41">stream_ptr</name></expr></argument>, <argument pos:start="111:44" pos:end="111:50"><expr pos:start="111:44" pos:end="111:50"><name pos:start="111:44" pos:end="111:50">row_ptr</name></expr></argument>, <argument pos:start="111:53" pos:end="111:58"><expr pos:start="111:53" pos:end="111:58"><name pos:start="111:53" pos:end="111:58">height</name></expr></argument>, <argument pos:start="111:61" pos:end="111:61"><expr pos:start="111:61" pos:end="111:61"><literal type="number" pos:start="111:61" pos:end="111:61">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:24"><expr pos:start="113:9" pos:end="113:23"><name pos:start="113:9" pos:end="113:19">has_palette</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <literal type="number" pos:start="113:23" pos:end="113:23">1</literal></expr>;</expr_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>



    <case pos:start="119:5" pos:end="119:11">case <expr pos:start="119:10" pos:end="119:10"><literal type="number" pos:start="119:10" pos:end="119:10">4</literal></expr>:</case>

    <case pos:start="121:5" pos:end="121:12">case <expr pos:start="121:10" pos:end="121:11"><literal type="number" pos:start="121:10" pos:end="121:11">36</literal></expr>:</case>

        <expr_stmt pos:start="123:9" pos:end="123:63"><expr pos:start="123:9" pos:end="123:62"><call pos:start="123:9" pos:end="123:62"><name pos:start="123:9" pos:end="123:27">qtrle_decode_2n4bpp</name><argument_list pos:start="123:28" pos:end="123:62">(<argument pos:start="123:29" pos:end="123:29"><expr pos:start="123:29" pos:end="123:29"><name pos:start="123:29" pos:end="123:29">s</name></expr></argument>, <argument pos:start="123:32" pos:end="123:41"><expr pos:start="123:32" pos:end="123:41"><name pos:start="123:32" pos:end="123:41">stream_ptr</name></expr></argument>, <argument pos:start="123:44" pos:end="123:50"><expr pos:start="123:44" pos:end="123:50"><name pos:start="123:44" pos:end="123:50">row_ptr</name></expr></argument>, <argument pos:start="123:53" pos:end="123:58"><expr pos:start="123:53" pos:end="123:58"><name pos:start="123:53" pos:end="123:58">height</name></expr></argument>, <argument pos:start="123:61" pos:end="123:61"><expr pos:start="123:61" pos:end="123:61"><literal type="number" pos:start="123:61" pos:end="123:61">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:24"><expr pos:start="125:9" pos:end="125:23"><name pos:start="125:9" pos:end="125:19">has_palette</name> <operator pos:start="125:21" pos:end="125:21">=</operator> <literal type="number" pos:start="125:23" pos:end="125:23">1</literal></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>



    <case pos:start="131:5" pos:end="131:11">case <expr pos:start="131:10" pos:end="131:10"><literal type="number" pos:start="131:10" pos:end="131:10">8</literal></expr>:</case>

    <case pos:start="133:5" pos:end="133:12">case <expr pos:start="133:10" pos:end="133:11"><literal type="number" pos:start="133:10" pos:end="133:11">40</literal></expr>:</case>

        <expr_stmt pos:start="135:9" pos:end="135:58"><expr pos:start="135:9" pos:end="135:57"><call pos:start="135:9" pos:end="135:57"><name pos:start="135:9" pos:end="135:25">qtrle_decode_8bpp</name><argument_list pos:start="135:26" pos:end="135:57">(<argument pos:start="135:27" pos:end="135:27"><expr pos:start="135:27" pos:end="135:27"><name pos:start="135:27" pos:end="135:27">s</name></expr></argument>, <argument pos:start="135:30" pos:end="135:39"><expr pos:start="135:30" pos:end="135:39"><name pos:start="135:30" pos:end="135:39">stream_ptr</name></expr></argument>, <argument pos:start="135:42" pos:end="135:48"><expr pos:start="135:42" pos:end="135:48"><name pos:start="135:42" pos:end="135:48">row_ptr</name></expr></argument>, <argument pos:start="135:51" pos:end="135:56"><expr pos:start="135:51" pos:end="135:56"><name pos:start="135:51" pos:end="135:56">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:24"><expr pos:start="137:9" pos:end="137:23"><name pos:start="137:9" pos:end="137:19">has_palette</name> <operator pos:start="137:21" pos:end="137:21">=</operator> <literal type="number" pos:start="137:23" pos:end="137:23">1</literal></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>



    <case pos:start="143:5" pos:end="143:12">case <expr pos:start="143:10" pos:end="143:11"><literal type="number" pos:start="143:10" pos:end="143:11">16</literal></expr>:</case>

        <expr_stmt pos:start="145:9" pos:end="145:59"><expr pos:start="145:9" pos:end="145:58"><call pos:start="145:9" pos:end="145:58"><name pos:start="145:9" pos:end="145:26">qtrle_decode_16bpp</name><argument_list pos:start="145:27" pos:end="145:58">(<argument pos:start="145:28" pos:end="145:28"><expr pos:start="145:28" pos:end="145:28"><name pos:start="145:28" pos:end="145:28">s</name></expr></argument>, <argument pos:start="145:31" pos:end="145:40"><expr pos:start="145:31" pos:end="145:40"><name pos:start="145:31" pos:end="145:40">stream_ptr</name></expr></argument>, <argument pos:start="145:43" pos:end="145:49"><expr pos:start="145:43" pos:end="145:49"><name pos:start="145:43" pos:end="145:49">row_ptr</name></expr></argument>, <argument pos:start="145:52" pos:end="145:57"><expr pos:start="145:52" pos:end="145:57"><name pos:start="145:52" pos:end="145:57">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="147:9" pos:end="147:14">break;</break>



    <case pos:start="151:5" pos:end="151:12">case <expr pos:start="151:10" pos:end="151:11"><literal type="number" pos:start="151:10" pos:end="151:11">24</literal></expr>:</case>

        <expr_stmt pos:start="153:9" pos:end="153:59"><expr pos:start="153:9" pos:end="153:58"><call pos:start="153:9" pos:end="153:58"><name pos:start="153:9" pos:end="153:26">qtrle_decode_24bpp</name><argument_list pos:start="153:27" pos:end="153:58">(<argument pos:start="153:28" pos:end="153:28"><expr pos:start="153:28" pos:end="153:28"><name pos:start="153:28" pos:end="153:28">s</name></expr></argument>, <argument pos:start="153:31" pos:end="153:40"><expr pos:start="153:31" pos:end="153:40"><name pos:start="153:31" pos:end="153:40">stream_ptr</name></expr></argument>, <argument pos:start="153:43" pos:end="153:49"><expr pos:start="153:43" pos:end="153:49"><name pos:start="153:43" pos:end="153:49">row_ptr</name></expr></argument>, <argument pos:start="153:52" pos:end="153:57"><expr pos:start="153:52" pos:end="153:57"><name pos:start="153:52" pos:end="153:57">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="155:9" pos:end="155:14">break;</break>



    <case pos:start="159:5" pos:end="159:12">case <expr pos:start="159:10" pos:end="159:11"><literal type="number" pos:start="159:10" pos:end="159:11">32</literal></expr>:</case>

        <expr_stmt pos:start="161:9" pos:end="161:59"><expr pos:start="161:9" pos:end="161:58"><call pos:start="161:9" pos:end="161:58"><name pos:start="161:9" pos:end="161:26">qtrle_decode_32bpp</name><argument_list pos:start="161:27" pos:end="161:58">(<argument pos:start="161:28" pos:end="161:28"><expr pos:start="161:28" pos:end="161:28"><name pos:start="161:28" pos:end="161:28">s</name></expr></argument>, <argument pos:start="161:31" pos:end="161:40"><expr pos:start="161:31" pos:end="161:40"><name pos:start="161:31" pos:end="161:40">stream_ptr</name></expr></argument>, <argument pos:start="161:43" pos:end="161:49"><expr pos:start="161:43" pos:end="161:49"><name pos:start="161:43" pos:end="161:49">row_ptr</name></expr></argument>, <argument pos:start="161:52" pos:end="161:57"><expr pos:start="161:52" pos:end="161:57"><name pos:start="161:52" pos:end="161:57">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="163:9" pos:end="163:14">break;</break>



    <default pos:start="167:5" pos:end="167:12">default:</default>

        <expr_stmt pos:start="169:9" pos:end="171:42"><expr pos:start="169:9" pos:end="171:41"><call pos:start="169:9" pos:end="171:41"><name pos:start="169:9" pos:end="169:14">av_log</name> <argument_list pos:start="169:16" pos:end="171:41">(<argument pos:start="169:17" pos:end="169:24"><expr pos:start="169:17" pos:end="169:24"><name pos:start="169:17" pos:end="169:24"><name pos:start="169:17" pos:end="169:17">s</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator><name pos:start="169:20" pos:end="169:24">avctx</name></name></expr></argument>, <argument pos:start="169:27" pos:end="169:38"><expr pos:start="169:27" pos:end="169:38"><name pos:start="169:27" pos:end="169:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="169:41" pos:end="169:83"><expr pos:start="169:41" pos:end="169:83"><literal type="string" pos:start="169:41" pos:end="169:83">"Unsupported colorspace: %d bits/sample?\n"</literal></expr></argument>,

            <argument pos:start="171:13" pos:end="171:40"><expr pos:start="171:13" pos:end="171:40"><name pos:start="171:13" pos:end="171:40"><name pos:start="171:13" pos:end="171:17">avctx</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:40">bits_per_coded_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="173:9" pos:end="173:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="179:5" pos:end="199:5"><if pos:start="179:5" pos:end="199:5">if<condition pos:start="179:7" pos:end="179:19">(<expr pos:start="179:8" pos:end="179:18"><name pos:start="179:8" pos:end="179:18">has_palette</name></expr>)</condition> <block pos:start="179:21" pos:end="199:5">{<block_content pos:start="181:9" pos:end="197:57">

        <decl_stmt pos:start="181:9" pos:end="181:87"><decl pos:start="181:9" pos:end="181:86"><type pos:start="181:9" pos:end="181:23"><specifier pos:start="181:9" pos:end="181:13">const</specifier> <name pos:start="181:15" pos:end="181:21">uint8_t</name> <modifier pos:start="181:23" pos:end="181:23">*</modifier></type><name pos:start="181:24" pos:end="181:26">pal</name> <init pos:start="181:28" pos:end="181:86">= <expr pos:start="181:30" pos:end="181:86"><call pos:start="181:30" pos:end="181:86"><name pos:start="181:30" pos:end="181:52">av_packet_get_side_data</name><argument_list pos:start="181:53" pos:end="181:86">(<argument pos:start="181:54" pos:end="181:58"><expr pos:start="181:54" pos:end="181:58"><name pos:start="181:54" pos:end="181:58">avpkt</name></expr></argument>, <argument pos:start="181:61" pos:end="181:79"><expr pos:start="181:61" pos:end="181:79"><name pos:start="181:61" pos:end="181:79">AV_PKT_DATA_PALETTE</name></expr></argument>, <argument pos:start="181:82" pos:end="181:85"><expr pos:start="181:82" pos:end="181:85"><name pos:start="181:82" pos:end="181:85">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="185:9" pos:end="191:9"><if pos:start="185:9" pos:end="191:9">if <condition pos:start="185:12" pos:end="185:16">(<expr pos:start="185:13" pos:end="185:15"><name pos:start="185:13" pos:end="185:15">pal</name></expr>)</condition> <block pos:start="185:18" pos:end="191:9">{<block_content pos:start="187:13" pos:end="189:48">

            <expr_stmt pos:start="187:13" pos:end="187:45"><expr pos:start="187:13" pos:end="187:44"><name pos:start="187:13" pos:end="187:40"><name pos:start="187:13" pos:end="187:13">s</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:20">frame</name><operator pos:start="187:21" pos:end="187:21">.</operator><name pos:start="187:22" pos:end="187:40">palette_has_changed</name></name> <operator pos:start="187:42" pos:end="187:42">=</operator> <literal type="number" pos:start="187:44" pos:end="187:44">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:48"><expr pos:start="189:13" pos:end="189:47"><call pos:start="189:13" pos:end="189:47"><name pos:start="189:13" pos:end="189:18">memcpy</name><argument_list pos:start="189:19" pos:end="189:47">(<argument pos:start="189:20" pos:end="189:25"><expr pos:start="189:20" pos:end="189:25"><name pos:start="189:20" pos:end="189:25"><name pos:start="189:20" pos:end="189:20">s</name><operator pos:start="189:21" pos:end="189:22">-&gt;</operator><name pos:start="189:23" pos:end="189:25">pal</name></name></expr></argument>, <argument pos:start="189:28" pos:end="189:30"><expr pos:start="189:28" pos:end="189:30"><name pos:start="189:28" pos:end="189:30">pal</name></expr></argument>, <argument pos:start="189:33" pos:end="189:46"><expr pos:start="189:33" pos:end="189:46"><name pos:start="189:33" pos:end="189:46">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="195:9" pos:end="195:55">/* make the palette available on the way out */</comment>

        <expr_stmt pos:start="197:9" pos:end="197:57"><expr pos:start="197:9" pos:end="197:56"><call pos:start="197:9" pos:end="197:56"><name pos:start="197:9" pos:end="197:14">memcpy</name><argument_list pos:start="197:15" pos:end="197:56">(<argument pos:start="197:16" pos:end="197:31"><expr pos:start="197:16" pos:end="197:31"><name pos:start="197:16" pos:end="197:31"><name pos:start="197:16" pos:end="197:16">s</name><operator pos:start="197:17" pos:end="197:18">-&gt;</operator><name pos:start="197:19" pos:end="197:23">frame</name><operator pos:start="197:24" pos:end="197:24">.</operator><name pos:start="197:25" pos:end="197:28">data</name><index pos:start="197:29" pos:end="197:31">[<expr pos:start="197:30" pos:end="197:30"><literal type="number" pos:start="197:30" pos:end="197:30">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="197:34" pos:end="197:39"><expr pos:start="197:34" pos:end="197:39"><name pos:start="197:34" pos:end="197:39"><name pos:start="197:34" pos:end="197:34">s</name><operator pos:start="197:35" pos:end="197:36">-&gt;</operator><name pos:start="197:37" pos:end="197:39">pal</name></name></expr></argument>, <argument pos:start="197:42" pos:end="197:55"><expr pos:start="197:42" pos:end="197:55"><name pos:start="197:42" pos:end="197:55">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="203:1" pos:end="203:5"><name pos:start="203:1" pos:end="203:4">done</name>:</label>

    <expr_stmt pos:start="205:5" pos:end="205:33"><expr pos:start="205:5" pos:end="205:32"><operator pos:start="205:5" pos:end="205:5">*</operator><name pos:start="205:6" pos:end="205:14">data_size</name> <operator pos:start="205:16" pos:end="205:16">=</operator> <sizeof pos:start="205:18" pos:end="205:32">sizeof<argument_list pos:start="205:24" pos:end="205:32">(<argument pos:start="205:25" pos:end="205:31"><expr pos:start="205:25" pos:end="205:31"><name pos:start="205:25" pos:end="205:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:31"><expr pos:start="207:5" pos:end="207:30"><operator pos:start="207:5" pos:end="207:5">*</operator><operator pos:start="207:6" pos:end="207:6">(</operator><name pos:start="207:7" pos:end="207:13">AVFrame</name><operator pos:start="207:14" pos:end="207:14">*</operator><operator pos:start="207:15" pos:end="207:15">)</operator><name pos:start="207:16" pos:end="207:19">data</name> <operator pos:start="207:21" pos:end="207:21">=</operator> <name pos:start="207:23" pos:end="207:30"><name pos:start="207:23" pos:end="207:23">s</name><operator pos:start="207:24" pos:end="207:25">-&gt;</operator><name pos:start="207:26" pos:end="207:30">frame</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="211:5" pos:end="211:63">/* always report that the buffer was completely consumed */</comment>

    <return pos:start="213:5" pos:end="213:20">return <expr pos:start="213:12" pos:end="213:19"><name pos:start="213:12" pos:end="213:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
