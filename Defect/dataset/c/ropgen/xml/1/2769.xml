<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2769.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">encode_slices</name><parameter_list pos:start="1:25" pos:end="1:42">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:40"><name pos:start="1:26" pos:end="1:38">VC2EncContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:18">slice_x</name></decl>, <decl pos:start="7:21" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:27">slice_y</name></decl>, <decl pos:start="7:30" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:30" pos:end="7:33">skip</name> <init pos:start="7:35" pos:end="7:37">= <expr pos:start="7:37" pos:end="7:37"><literal type="number" pos:start="7:37" pos:end="7:37">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">bytes_left</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">SliceArgs</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:23">enc_args</name> <init pos:start="11:25" pos:end="11:39">= <expr pos:start="11:27" pos:end="11:39"><name pos:start="11:27" pos:end="11:39"><name pos:start="11:27" pos:end="11:27">s</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:39">slice_args</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:43"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:37"><name pos:start="15:9" pos:end="15:17">bytes_top</name><index pos:start="15:18" pos:end="15:37">[<expr pos:start="15:19" pos:end="15:36"><name pos:start="15:19" pos:end="15:36">SLICE_REDIST_TOTAL</name></expr>]</index></name> <init pos:start="15:39" pos:end="15:43">= <expr pos:start="15:41" pos:end="15:43"><block pos:start="15:41" pos:end="15:43">{<expr pos:start="15:42" pos:end="15:42"><literal type="number" pos:start="15:42" pos:end="15:42">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:52"><decl pos:start="17:5" pos:end="17:51"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">SliceArgs</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:42"><name pos:start="17:16" pos:end="17:22">top_loc</name><index pos:start="17:23" pos:end="17:42">[<expr pos:start="17:24" pos:end="17:41"><name pos:start="17:24" pos:end="17:41">SLICE_REDIST_TOTAL</name></expr>]</index></name> <init pos:start="17:44" pos:end="17:51">= <expr pos:start="17:46" pos:end="17:51"><block pos:start="17:46" pos:end="17:51">{<expr pos:start="17:47" pos:end="17:50"><name pos:start="17:47" pos:end="17:50">NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><call pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:25">avpriv_align_put_bits</name><argument_list pos:start="21:26" pos:end="21:33">(<argument pos:start="21:27" pos:end="21:32"><expr pos:start="21:27" pos:end="21:32"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:32"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:32">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><call pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:18">flush_put_bits</name><argument_list pos:start="23:19" pos:end="23:26">(<argument pos:start="23:20" pos:end="23:25"><expr pos:start="23:20" pos:end="23:25"><operator pos:start="23:20" pos:end="23:20">&amp;</operator><name pos:start="23:21" pos:end="23:25"><name pos:start="23:21" pos:end="23:21">s</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:7">buf</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:30"><name pos:start="25:11" pos:end="25:22">put_bits_ptr</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:29"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="53:5">for <control pos:start="29:9" pos:end="29:52">(<init pos:start="29:10" pos:end="29:21"><expr pos:start="29:10" pos:end="29:20"><name pos:start="29:10" pos:end="29:16">slice_y</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</init> <condition pos:start="29:23" pos:end="29:41"><expr pos:start="29:23" pos:end="29:40"><name pos:start="29:23" pos:end="29:29">slice_y</name> <operator pos:start="29:31" pos:end="29:31">&lt;</operator> <name pos:start="29:33" pos:end="29:40"><name pos:start="29:33" pos:end="29:33">s</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:40">num_y</name></name></expr>;</condition> <incr pos:start="29:43" pos:end="29:51"><expr pos:start="29:43" pos:end="29:51"><name pos:start="29:43" pos:end="29:49">slice_y</name><operator pos:start="29:50" pos:end="29:51">++</operator></expr></incr>)</control> <block pos:start="29:54" pos:end="53:5">{<block_content pos:start="31:9" pos:end="51:9">

        <for pos:start="31:9" pos:end="51:9">for <control pos:start="31:13" pos:end="31:56">(<init pos:start="31:14" pos:end="31:25"><expr pos:start="31:14" pos:end="31:24"><name pos:start="31:14" pos:end="31:20">slice_x</name> <operator pos:start="31:22" pos:end="31:22">=</operator> <literal type="number" pos:start="31:24" pos:end="31:24">0</literal></expr>;</init> <condition pos:start="31:27" pos:end="31:45"><expr pos:start="31:27" pos:end="31:44"><name pos:start="31:27" pos:end="31:33">slice_x</name> <operator pos:start="31:35" pos:end="31:35">&lt;</operator> <name pos:start="31:37" pos:end="31:44"><name pos:start="31:37" pos:end="31:37">s</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:44">num_x</name></name></expr>;</condition> <incr pos:start="31:47" pos:end="31:55"><expr pos:start="31:47" pos:end="31:55"><name pos:start="31:47" pos:end="31:53">slice_x</name><operator pos:start="31:54" pos:end="31:55">++</operator></expr></incr>)</control> <block pos:start="31:58" pos:end="51:9">{<block_content pos:start="33:13" pos:end="49:13">

            <decl_stmt pos:start="33:13" pos:end="33:68"><decl pos:start="33:13" pos:end="33:67"><type pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:21">SliceArgs</name> <modifier pos:start="33:23" pos:end="33:23">*</modifier></type><name pos:start="33:24" pos:end="33:27">args</name> <init pos:start="33:29" pos:end="33:67">= <expr pos:start="33:31" pos:end="33:67"><operator pos:start="33:31" pos:end="33:31">&amp;</operator><name pos:start="33:32" pos:end="33:67"><name pos:start="33:32" pos:end="33:39">enc_args</name><index pos:start="33:40" pos:end="33:67">[<expr pos:start="33:41" pos:end="33:66"><name pos:start="33:41" pos:end="33:48"><name pos:start="33:41" pos:end="33:41">s</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:48">num_x</name></name><operator pos:start="33:49" pos:end="33:49">*</operator><name pos:start="33:50" pos:end="33:56">slice_y</name> <operator pos:start="33:58" pos:end="33:58">+</operator> <name pos:start="33:60" pos:end="33:66">slice_x</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:43"><expr pos:start="35:13" pos:end="35:42"><name pos:start="35:13" pos:end="35:22">bytes_left</name> <operator pos:start="35:24" pos:end="35:25">+=</operator> <name pos:start="35:27" pos:end="35:42"><name pos:start="35:27" pos:end="35:30">args</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:42">bytes_left</name></name></expr>;</expr_stmt>

            <for pos:start="37:13" pos:end="49:13">for <control pos:start="37:17" pos:end="37:78">(<init pos:start="37:18" pos:end="37:23"><expr pos:start="37:18" pos:end="37:22"><name pos:start="37:18" pos:end="37:18">i</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>;</init> <condition pos:start="37:25" pos:end="37:73"><expr pos:start="37:25" pos:end="37:72"><name pos:start="37:25" pos:end="37:25">i</name> <operator pos:start="37:27" pos:end="37:27">&lt;</operator> <call pos:start="37:29" pos:end="37:72"><name pos:start="37:29" pos:end="37:33">FFMIN</name><argument_list pos:start="37:34" pos:end="37:72">(<argument pos:start="37:35" pos:end="37:52"><expr pos:start="37:35" pos:end="37:52"><name pos:start="37:35" pos:end="37:52">SLICE_REDIST_TOTAL</name></expr></argument>, <argument pos:start="37:55" pos:end="37:71"><expr pos:start="37:55" pos:end="37:71"><name pos:start="37:55" pos:end="37:62"><name pos:start="37:55" pos:end="37:55">s</name><operator pos:start="37:56" pos:end="37:57">-&gt;</operator><name pos:start="37:58" pos:end="37:62">num_x</name></name><operator pos:start="37:63" pos:end="37:63">*</operator><name pos:start="37:64" pos:end="37:71"><name pos:start="37:64" pos:end="37:64">s</name><operator pos:start="37:65" pos:end="37:66">-&gt;</operator><name pos:start="37:67" pos:end="37:71">num_y</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="37:75" pos:end="37:77"><expr pos:start="37:75" pos:end="37:77"><name pos:start="37:75" pos:end="37:75">i</name><operator pos:start="37:76" pos:end="37:77">++</operator></expr></incr>)</control> <block pos:start="37:80" pos:end="49:13">{<block_content pos:start="39:17" pos:end="47:17">

                <if_stmt pos:start="39:17" pos:end="47:17"><if pos:start="39:17" pos:end="47:17">if <condition pos:start="39:20" pos:end="39:47">(<expr pos:start="39:21" pos:end="39:46"><name pos:start="39:21" pos:end="39:31"><name pos:start="39:21" pos:end="39:24">args</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:31">bytes</name></name> <operator pos:start="39:33" pos:end="39:33">&gt;</operator> <name pos:start="39:35" pos:end="39:46"><name pos:start="39:35" pos:end="39:43">bytes_top</name><index pos:start="39:44" pos:end="39:46">[<expr pos:start="39:45" pos:end="39:45"><name pos:start="39:45" pos:end="39:45">i</name></expr>]</index></name></expr>)</condition> <block pos:start="39:49" pos:end="47:17">{<block_content pos:start="41:21" pos:end="45:26">

                    <expr_stmt pos:start="41:21" pos:end="41:47"><expr pos:start="41:21" pos:end="41:46"><name pos:start="41:21" pos:end="41:32"><name pos:start="41:21" pos:end="41:29">bytes_top</name><index pos:start="41:30" pos:end="41:32">[<expr pos:start="41:31" pos:end="41:31"><name pos:start="41:31" pos:end="41:31">i</name></expr>]</index></name> <operator pos:start="41:34" pos:end="41:34">=</operator> <name pos:start="41:36" pos:end="41:46"><name pos:start="41:36" pos:end="41:39">args</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:46">bytes</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:38"><expr pos:start="43:21" pos:end="43:37"><name pos:start="43:21" pos:end="43:30"><name pos:start="43:21" pos:end="43:27">top_loc</name><index pos:start="43:28" pos:end="43:30">[<expr pos:start="43:29" pos:end="43:29"><name pos:start="43:29" pos:end="43:29">i</name></expr>]</index></name> <operator pos:start="43:32" pos:end="43:32">=</operator> <name pos:start="43:34" pos:end="43:37">args</name></expr>;</expr_stmt>

                    <break pos:start="45:21" pos:end="45:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <while pos:start="57:5" pos:end="105:5">while <condition pos:start="57:11" pos:end="57:13">(<expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">1</literal></expr>)</condition> <block pos:start="57:15" pos:end="105:5">{<block_content pos:start="59:9" pos:end="103:18">

        <decl_stmt pos:start="59:9" pos:end="59:28"><decl pos:start="59:9" pos:end="59:27"><type pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">int</name></type> <name pos:start="59:13" pos:end="59:23">distributed</name> <init pos:start="59:25" pos:end="59:27">= <expr pos:start="59:27" pos:end="59:27"><literal type="number" pos:start="59:27" pos:end="59:27">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="61:9" pos:end="99:9">for <control pos:start="61:13" pos:end="61:74">(<init pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:18"><name pos:start="61:14" pos:end="61:14">i</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</init> <condition pos:start="61:21" pos:end="61:69"><expr pos:start="61:21" pos:end="61:68"><name pos:start="61:21" pos:end="61:21">i</name> <operator pos:start="61:23" pos:end="61:23">&lt;</operator> <call pos:start="61:25" pos:end="61:68"><name pos:start="61:25" pos:end="61:29">FFMIN</name><argument_list pos:start="61:30" pos:end="61:68">(<argument pos:start="61:31" pos:end="61:48"><expr pos:start="61:31" pos:end="61:48"><name pos:start="61:31" pos:end="61:48">SLICE_REDIST_TOTAL</name></expr></argument>, <argument pos:start="61:51" pos:end="61:67"><expr pos:start="61:51" pos:end="61:67"><name pos:start="61:51" pos:end="61:58"><name pos:start="61:51" pos:end="61:51">s</name><operator pos:start="61:52" pos:end="61:53">-&gt;</operator><name pos:start="61:54" pos:end="61:58">num_x</name></name><operator pos:start="61:59" pos:end="61:59">*</operator><name pos:start="61:60" pos:end="61:67"><name pos:start="61:60" pos:end="61:60">s</name><operator pos:start="61:61" pos:end="61:62">-&gt;</operator><name pos:start="61:63" pos:end="61:67">num_y</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="61:71" pos:end="61:73"><expr pos:start="61:71" pos:end="61:73"><name pos:start="61:71" pos:end="61:71">i</name><operator pos:start="61:72" pos:end="61:73">++</operator></expr></incr>)</control> <block pos:start="61:76" pos:end="99:9">{<block_content pos:start="63:13" pos:end="97:13">

            <decl_stmt pos:start="63:13" pos:end="63:28"><decl pos:start="63:13" pos:end="63:27"><type pos:start="63:13" pos:end="63:23"><name pos:start="63:13" pos:end="63:21">SliceArgs</name> <modifier pos:start="63:23" pos:end="63:23">*</modifier></type><name pos:start="63:24" pos:end="63:27">args</name></decl>;</decl_stmt>

            <decl_stmt pos:start="65:13" pos:end="65:55"><decl pos:start="65:13" pos:end="65:20"><type pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:15">int</name></type> <name pos:start="65:17" pos:end="65:20">bits</name></decl>, <decl pos:start="65:23" pos:end="65:27"><type ref="prev" pos:start="65:13" pos:end="65:15"/><name pos:start="65:23" pos:end="65:27">bytes</name></decl>, <decl pos:start="65:30" pos:end="65:33"><type ref="prev" pos:start="65:13" pos:end="65:15"/><name pos:start="65:30" pos:end="65:33">diff</name></decl>, <decl pos:start="65:36" pos:end="65:45"><type ref="prev" pos:start="65:13" pos:end="65:15"/><name pos:start="65:36" pos:end="65:45">prev_bytes</name></decl>, <decl pos:start="65:48" pos:end="65:54"><type ref="prev" pos:start="65:13" pos:end="65:15"/><name pos:start="65:48" pos:end="65:54">new_idx</name></decl>;</decl_stmt>

            <if_stmt pos:start="67:13" pos:end="69:22"><if pos:start="67:13" pos:end="69:22">if <condition pos:start="67:16" pos:end="67:32">(<expr pos:start="67:17" pos:end="67:31"><name pos:start="67:17" pos:end="67:26">bytes_left</name> <operator pos:start="67:28" pos:end="67:29">&lt;=</operator> <literal type="number" pos:start="67:31" pos:end="67:31">0</literal></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:22"><block_content pos:start="69:17" pos:end="69:22">

                <break pos:start="69:17" pos:end="69:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="71:13" pos:end="73:22"><if pos:start="71:13" pos:end="73:22">if <condition pos:start="71:16" pos:end="71:54">(<expr pos:start="71:17" pos:end="71:53"><operator pos:start="71:17" pos:end="71:17">!</operator><name pos:start="71:18" pos:end="71:27"><name pos:start="71:18" pos:end="71:24">top_loc</name><index pos:start="71:25" pos:end="71:27">[<expr pos:start="71:26" pos:end="71:26"><name pos:start="71:26" pos:end="71:26">i</name></expr>]</index></name> <operator pos:start="71:29" pos:end="71:30">||</operator> <operator pos:start="71:32" pos:end="71:32">!</operator><name pos:start="71:33" pos:end="71:42"><name pos:start="71:33" pos:end="71:39">top_loc</name><index pos:start="71:40" pos:end="71:42">[<expr pos:start="71:41" pos:end="71:41"><name pos:start="71:41" pos:end="71:41">i</name></expr>]</index></name><operator pos:start="71:43" pos:end="71:44">-&gt;</operator><name pos:start="71:45" pos:end="71:53">quant_idx</name></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:22"><block_content pos:start="73:17" pos:end="73:22">

                <break pos:start="73:17" pos:end="73:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:30"><expr pos:start="75:13" pos:end="75:29"><name pos:start="75:13" pos:end="75:16">args</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:29"><name pos:start="75:20" pos:end="75:26">top_loc</name><index pos:start="75:27" pos:end="75:29">[<expr pos:start="75:28" pos:end="75:28"><name pos:start="75:28" pos:end="75:28">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:37"><expr pos:start="77:13" pos:end="77:36"><name pos:start="77:13" pos:end="77:22">prev_bytes</name> <operator pos:start="77:24" pos:end="77:24">=</operator> <name pos:start="77:26" pos:end="77:36"><name pos:start="77:26" pos:end="77:29">args</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:36">bytes</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:65"><expr pos:start="79:13" pos:end="79:64"><name pos:start="79:13" pos:end="79:19">new_idx</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <call pos:start="79:23" pos:end="79:64"><name pos:start="79:23" pos:end="79:29">av_clip</name><argument_list pos:start="79:30" pos:end="79:64">(<argument pos:start="79:31" pos:end="79:49"><expr pos:start="79:31" pos:end="79:49"><name pos:start="79:31" pos:end="79:45"><name pos:start="79:31" pos:end="79:34">args</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:45">quant_idx</name></name> <operator pos:start="79:47" pos:end="79:47">-</operator> <literal type="number" pos:start="79:49" pos:end="79:49">1</literal></expr></argument>, <argument pos:start="79:52" pos:end="79:52"><expr pos:start="79:52" pos:end="79:52"><literal type="number" pos:start="79:52" pos:end="79:52">0</literal></expr></argument>, <argument pos:start="79:55" pos:end="79:63"><expr pos:start="79:55" pos:end="79:63"><name pos:start="79:55" pos:end="79:63"><name pos:start="79:55" pos:end="79:55">s</name><operator pos:start="79:56" pos:end="79:57">-&gt;</operator><name pos:start="79:58" pos:end="79:63">q_ceil</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:77"><expr pos:start="81:13" pos:end="81:76"><name pos:start="81:13" pos:end="81:16">bits</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <call pos:start="81:20" pos:end="81:76"><name pos:start="81:20" pos:end="81:33">count_hq_slice</name><argument_list pos:start="81:34" pos:end="81:76">(<argument pos:start="81:35" pos:end="81:35"><expr pos:start="81:35" pos:end="81:35"><name pos:start="81:35" pos:end="81:35">s</name></expr></argument>, <argument pos:start="81:38" pos:end="81:48"><expr pos:start="81:38" pos:end="81:48"><name pos:start="81:38" pos:end="81:48"><name pos:start="81:38" pos:end="81:41">args</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:48">cache</name></name></expr></argument>, <argument pos:start="81:51" pos:end="81:57"><expr pos:start="81:51" pos:end="81:57"><name pos:start="81:51" pos:end="81:57"><name pos:start="81:51" pos:end="81:54">args</name><operator pos:start="81:55" pos:end="81:56">-&gt;</operator><name pos:start="81:57" pos:end="81:57">x</name></name></expr></argument>, <argument pos:start="81:60" pos:end="81:66"><expr pos:start="81:60" pos:end="81:66"><name pos:start="81:60" pos:end="81:66"><name pos:start="81:60" pos:end="81:63">args</name><operator pos:start="81:64" pos:end="81:65">-&gt;</operator><name pos:start="81:66" pos:end="81:66">y</name></name></expr></argument>, <argument pos:start="81:69" pos:end="81:75"><expr pos:start="81:69" pos:end="81:75"><name pos:start="81:69" pos:end="81:75">new_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:79"><expr pos:start="83:13" pos:end="83:78"><name pos:start="83:13" pos:end="83:17">bytes</name> <operator pos:start="83:19" pos:end="83:19">=</operator> <call pos:start="83:21" pos:end="83:56"><name pos:start="83:21" pos:end="83:27">FFALIGN</name><argument_list pos:start="83:28" pos:end="83:56">(<argument pos:start="83:29" pos:end="83:39"><expr pos:start="83:29" pos:end="83:39"><operator pos:start="83:29" pos:end="83:29">(</operator><name pos:start="83:30" pos:end="83:33">bits</name> <operator pos:start="83:35" pos:end="83:36">&gt;&gt;</operator> <literal type="number" pos:start="83:38" pos:end="83:38">3</literal><operator pos:start="83:39" pos:end="83:39">)</operator></expr></argument>, <argument pos:start="83:42" pos:end="83:55"><expr pos:start="83:42" pos:end="83:55"><name pos:start="83:42" pos:end="83:55"><name pos:start="83:42" pos:end="83:42">s</name><operator pos:start="83:43" pos:end="83:44">-&gt;</operator><name pos:start="83:45" pos:end="83:55">size_scaler</name></name></expr></argument>)</argument_list></call> <operator pos:start="83:58" pos:end="83:58">+</operator> <literal type="number" pos:start="83:60" pos:end="83:62">4</literal> <operator pos:start="83:62" pos:end="83:62">+</operator> <name pos:start="83:64" pos:end="83:78"><name pos:start="83:64" pos:end="83:64">s</name><operator pos:start="83:65" pos:end="83:66">-&gt;</operator><name pos:start="83:67" pos:end="83:78">prefix_bytes</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:38"><expr pos:start="85:13" pos:end="85:37"><name pos:start="85:13" pos:end="85:16">diff</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <name pos:start="85:20" pos:end="85:24">bytes</name> <operator pos:start="85:26" pos:end="85:26">-</operator> <name pos:start="85:28" pos:end="85:37">prev_bytes</name></expr>;</expr_stmt>

            <if_stmt pos:start="87:13" pos:end="97:13"><if pos:start="87:13" pos:end="97:13">if <condition pos:start="87:16" pos:end="87:41">(<expr pos:start="87:17" pos:end="87:40"><operator pos:start="87:17" pos:end="87:17">(</operator><name pos:start="87:18" pos:end="87:27">bytes_left</name> <operator pos:start="87:29" pos:end="87:29">-</operator> <name pos:start="87:31" pos:end="87:34">diff</name><operator pos:start="87:35" pos:end="87:35">)</operator> <operator pos:start="87:37" pos:end="87:38">&gt;=</operator> <literal type="number" pos:start="87:40" pos:end="87:40">0</literal></expr>)</condition> <block pos:start="87:43" pos:end="97:13">{<block_content pos:start="89:17" pos:end="95:30">

                <expr_stmt pos:start="89:17" pos:end="89:42"><expr pos:start="89:17" pos:end="89:41"><name pos:start="89:17" pos:end="89:31"><name pos:start="89:17" pos:end="89:20">args</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:31">quant_idx</name></name> <operator pos:start="89:33" pos:end="89:33">=</operator> <name pos:start="89:35" pos:end="89:41">new_idx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:36"><expr pos:start="91:17" pos:end="91:35"><name pos:start="91:17" pos:end="91:27"><name pos:start="91:17" pos:end="91:20">args</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:27">bytes</name></name> <operator pos:start="91:29" pos:end="91:29">=</operator> <name pos:start="91:31" pos:end="91:35">bytes</name></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:35"><expr pos:start="93:17" pos:end="93:34"><name pos:start="93:17" pos:end="93:26">bytes_left</name> <operator pos:start="93:28" pos:end="93:29">-=</operator> <name pos:start="93:31" pos:end="93:34">diff</name></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:30"><expr pos:start="95:17" pos:end="95:29"><name pos:start="95:17" pos:end="95:27">distributed</name><operator pos:start="95:28" pos:end="95:29">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="101:9" pos:end="103:18"><if pos:start="101:9" pos:end="103:18">if <condition pos:start="101:12" pos:end="101:25">(<expr pos:start="101:13" pos:end="101:24"><operator pos:start="101:13" pos:end="101:13">!</operator><name pos:start="101:14" pos:end="101:24">distributed</name></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:18"><block_content pos:start="103:13" pos:end="103:18">

            <break pos:start="103:13" pos:end="103:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <for pos:start="109:5" pos:end="123:5">for <control pos:start="109:9" pos:end="109:52">(<init pos:start="109:10" pos:end="109:21"><expr pos:start="109:10" pos:end="109:20"><name pos:start="109:10" pos:end="109:16">slice_y</name> <operator pos:start="109:18" pos:end="109:18">=</operator> <literal type="number" pos:start="109:20" pos:end="109:20">0</literal></expr>;</init> <condition pos:start="109:23" pos:end="109:41"><expr pos:start="109:23" pos:end="109:40"><name pos:start="109:23" pos:end="109:29">slice_y</name> <operator pos:start="109:31" pos:end="109:31">&lt;</operator> <name pos:start="109:33" pos:end="109:40"><name pos:start="109:33" pos:end="109:33">s</name><operator pos:start="109:34" pos:end="109:35">-&gt;</operator><name pos:start="109:36" pos:end="109:40">num_y</name></name></expr>;</condition> <incr pos:start="109:43" pos:end="109:51"><expr pos:start="109:43" pos:end="109:51"><name pos:start="109:43" pos:end="109:49">slice_y</name><operator pos:start="109:50" pos:end="109:51">++</operator></expr></incr>)</control> <block pos:start="109:54" pos:end="123:5">{<block_content pos:start="111:9" pos:end="121:9">

        <for pos:start="111:9" pos:end="121:9">for <control pos:start="111:13" pos:end="111:56">(<init pos:start="111:14" pos:end="111:25"><expr pos:start="111:14" pos:end="111:24"><name pos:start="111:14" pos:end="111:20">slice_x</name> <operator pos:start="111:22" pos:end="111:22">=</operator> <literal type="number" pos:start="111:24" pos:end="111:24">0</literal></expr>;</init> <condition pos:start="111:27" pos:end="111:45"><expr pos:start="111:27" pos:end="111:44"><name pos:start="111:27" pos:end="111:33">slice_x</name> <operator pos:start="111:35" pos:end="111:35">&lt;</operator> <name pos:start="111:37" pos:end="111:44"><name pos:start="111:37" pos:end="111:37">s</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:44">num_x</name></name></expr>;</condition> <incr pos:start="111:47" pos:end="111:55"><expr pos:start="111:47" pos:end="111:55"><name pos:start="111:47" pos:end="111:53">slice_x</name><operator pos:start="111:54" pos:end="111:55">++</operator></expr></incr>)</control> <block pos:start="111:58" pos:end="121:9">{<block_content pos:start="113:13" pos:end="119:32">

            <decl_stmt pos:start="113:13" pos:end="113:68"><decl pos:start="113:13" pos:end="113:67"><type pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:21">SliceArgs</name> <modifier pos:start="113:23" pos:end="113:23">*</modifier></type><name pos:start="113:24" pos:end="113:27">args</name> <init pos:start="113:29" pos:end="113:67">= <expr pos:start="113:31" pos:end="113:67"><operator pos:start="113:31" pos:end="113:31">&amp;</operator><name pos:start="113:32" pos:end="113:67"><name pos:start="113:32" pos:end="113:39">enc_args</name><index pos:start="113:40" pos:end="113:67">[<expr pos:start="113:41" pos:end="113:66"><name pos:start="113:41" pos:end="113:48"><name pos:start="113:41" pos:end="113:41">s</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:48">num_x</name></name><operator pos:start="113:49" pos:end="113:49">*</operator><name pos:start="113:50" pos:end="113:56">slice_y</name> <operator pos:start="113:58" pos:end="113:58">+</operator> <name pos:start="113:60" pos:end="113:66">slice_x</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:62"><expr pos:start="115:13" pos:end="115:61"><call pos:start="115:13" pos:end="115:61"><name pos:start="115:13" pos:end="115:25">init_put_bits</name><argument_list pos:start="115:26" pos:end="115:61">(<argument pos:start="115:27" pos:end="115:35"><expr pos:start="115:27" pos:end="115:35"><operator pos:start="115:27" pos:end="115:27">&amp;</operator><name pos:start="115:28" pos:end="115:35"><name pos:start="115:28" pos:end="115:31">args</name><operator pos:start="115:32" pos:end="115:33">-&gt;</operator><name pos:start="115:34" pos:end="115:35">pb</name></name></expr></argument>, <argument pos:start="115:38" pos:end="115:47"><expr pos:start="115:38" pos:end="115:47"><name pos:start="115:38" pos:end="115:40">buf</name> <operator pos:start="115:42" pos:end="115:42">+</operator> <name pos:start="115:44" pos:end="115:47">skip</name></expr></argument>, <argument pos:start="115:50" pos:end="115:60"><expr pos:start="115:50" pos:end="115:60"><name pos:start="115:50" pos:end="115:60"><name pos:start="115:50" pos:end="115:53">args</name><operator pos:start="115:54" pos:end="115:55">-&gt;</operator><name pos:start="115:56" pos:end="115:60">bytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:54"><expr pos:start="117:13" pos:end="117:53"><name pos:start="117:13" pos:end="117:20"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:20">q_avg</name></name> <operator pos:start="117:22" pos:end="117:22">=</operator> <operator pos:start="117:24" pos:end="117:24">(</operator><name pos:start="117:25" pos:end="117:32"><name pos:start="117:25" pos:end="117:25">s</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:32">q_avg</name></name> <operator pos:start="117:34" pos:end="117:34">+</operator> <name pos:start="117:36" pos:end="117:50"><name pos:start="117:36" pos:end="117:39">args</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:50">quant_idx</name></name><operator pos:start="117:51" pos:end="117:51">)</operator><operator pos:start="117:52" pos:end="117:52">/</operator><literal type="number" pos:start="117:53" pos:end="117:53">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:32"><expr pos:start="119:13" pos:end="119:31"><name pos:start="119:13" pos:end="119:16">skip</name> <operator pos:start="119:18" pos:end="119:19">+=</operator> <name pos:start="119:21" pos:end="119:31"><name pos:start="119:21" pos:end="119:24">args</name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:31">bytes</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="127:5" pos:end="129:41"><expr pos:start="127:5" pos:end="129:40"><call pos:start="127:5" pos:end="129:40"><name pos:start="127:5" pos:end="127:21"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:12">avctx</name><operator pos:start="127:13" pos:end="127:14">-&gt;</operator><name pos:start="127:15" pos:end="127:21">execute</name></name><argument_list pos:start="127:22" pos:end="129:40">(<argument pos:start="127:23" pos:end="127:30"><expr pos:start="127:23" pos:end="127:30"><name pos:start="127:23" pos:end="127:30"><name pos:start="127:23" pos:end="127:23">s</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:30">avctx</name></name></expr></argument>, <argument pos:start="127:33" pos:end="127:47"><expr pos:start="127:33" pos:end="127:47"><name pos:start="127:33" pos:end="127:47">encode_hq_slice</name></expr></argument>, <argument pos:start="127:50" pos:end="127:57"><expr pos:start="127:50" pos:end="127:57"><name pos:start="127:50" pos:end="127:57">enc_args</name></expr></argument>, <argument pos:start="127:60" pos:end="127:63"><expr pos:start="127:60" pos:end="127:63"><name pos:start="127:60" pos:end="127:63">NULL</name></expr></argument>, <argument pos:start="127:66" pos:end="127:82"><expr pos:start="127:66" pos:end="127:82"><name pos:start="127:66" pos:end="127:73"><name pos:start="127:66" pos:end="127:66">s</name><operator pos:start="127:67" pos:end="127:68">-&gt;</operator><name pos:start="127:69" pos:end="127:73">num_x</name></name><operator pos:start="127:74" pos:end="127:74">*</operator><name pos:start="127:75" pos:end="127:82"><name pos:start="127:75" pos:end="127:75">s</name><operator pos:start="127:76" pos:end="127:77">-&gt;</operator><name pos:start="127:78" pos:end="127:82">num_y</name></name></expr></argument>,

                      <argument pos:start="129:23" pos:end="129:39"><expr pos:start="129:23" pos:end="129:39"><sizeof pos:start="129:23" pos:end="129:39">sizeof<argument_list pos:start="129:29" pos:end="129:39">(<argument pos:start="129:30" pos:end="129:38"><expr pos:start="129:30" pos:end="129:38"><name pos:start="129:30" pos:end="129:38">SliceArgs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:33"><expr pos:start="133:5" pos:end="133:32"><call pos:start="133:5" pos:end="133:32"><name pos:start="133:5" pos:end="133:18">skip_put_bytes</name><argument_list pos:start="133:19" pos:end="133:32">(<argument pos:start="133:20" pos:end="133:25"><expr pos:start="133:20" pos:end="133:25"><operator pos:start="133:20" pos:end="133:20">&amp;</operator><name pos:start="133:21" pos:end="133:25"><name pos:start="133:21" pos:end="133:21">s</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:25">pb</name></name></expr></argument>, <argument pos:start="133:28" pos:end="133:31"><expr pos:start="133:28" pos:end="133:31"><name pos:start="133:28" pos:end="133:31">skip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="137:5" pos:end="137:13">return <expr pos:start="137:12" pos:end="137:12"><literal type="number" pos:start="137:12" pos:end="137:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
