<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/675.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">seqvideo_decode</name><parameter_list pos:start="1:28" pos:end="1:91">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:43">SeqVideoContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">seq</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:75"><decl pos:start="1:51" pos:end="1:75"><type pos:start="1:51" pos:end="1:75"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:64">unsigned</name> <name pos:start="1:66" pos:end="1:69">char</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:75">data</name></decl></parameter>, <parameter pos:start="1:78" pos:end="1:90"><decl pos:start="1:78" pos:end="1:90"><type pos:start="1:78" pos:end="1:90"><name pos:start="1:78" pos:end="1:80">int</name></type> <name pos:start="1:82" pos:end="1:90">data_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:17">GetBitContext</name></type> <name pos:start="5:19" pos:end="5:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">flags</name></decl>, <decl pos:start="7:16" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:16">i</name></decl>, <decl pos:start="7:19" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:19">j</name></decl>, <decl pos:start="7:22" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:22">x</name></decl>, <decl pos:start="7:25" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:25">y</name></decl>, <decl pos:start="7:28" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:29">op</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name></type> <name pos:start="9:19" pos:end="9:22"><name pos:start="9:19" pos:end="9:19">c</name><index pos:start="9:20" pos:end="9:22">[<expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">char</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint32_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:21">palette</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:9">flags</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <operator pos:start="17:13" pos:end="17:13">*</operator><name pos:start="17:14" pos:end="17:17">data</name><operator pos:start="17:18" pos:end="17:19">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="37:5"><if pos:start="21:5" pos:end="37:5">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:13">flags</name> <operator pos:start="21:15" pos:end="21:15">&amp;</operator> <literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>)</condition> <block pos:start="21:20" pos:end="37:5">{<block_content pos:start="23:9" pos:end="35:43">

        <expr_stmt pos:start="23:9" pos:end="23:49"><expr pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:15">palette</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <operator pos:start="23:19" pos:end="23:19">(</operator><name pos:start="23:20" pos:end="23:27">uint32_t</name> <operator pos:start="23:29" pos:end="23:29">*</operator><operator pos:start="23:30" pos:end="23:30">)</operator><name pos:start="23:31" pos:end="23:48"><name pos:start="23:31" pos:end="23:33">seq</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:40">frame</name><operator pos:start="23:41" pos:end="23:41">.</operator><name pos:start="23:42" pos:end="23:45">data</name><index pos:start="23:46" pos:end="23:48">[<expr pos:start="23:47" pos:end="23:47"><literal type="number" pos:start="23:47" pos:end="23:47">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="25:9" pos:end="33:9">for <control pos:start="25:13" pos:end="25:33">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">i</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:28"><expr pos:start="25:21" pos:end="25:27"><name pos:start="25:21" pos:end="25:21">i</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <literal type="number" pos:start="25:25" pos:end="25:27">256</literal></expr>;</condition> <incr pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><name pos:start="25:30" pos:end="25:30">i</name><operator pos:start="25:31" pos:end="25:32">++</operator></expr></incr>)</control> <block pos:start="25:35" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:36">

            <for pos:start="27:13" pos:end="29:51">for <control pos:start="27:17" pos:end="27:43">(<init pos:start="27:18" pos:end="27:23"><expr pos:start="27:18" pos:end="27:22"><name pos:start="27:18" pos:end="27:18">j</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr>;</init> <condition pos:start="27:25" pos:end="27:30"><expr pos:start="27:25" pos:end="27:29"><name pos:start="27:25" pos:end="27:25">j</name> <operator pos:start="27:27" pos:end="27:27">&lt;</operator> <literal type="number" pos:start="27:29" pos:end="27:29">3</literal></expr>;</condition> <incr pos:start="27:32" pos:end="27:42"><expr pos:start="27:32" pos:end="27:34"><name pos:start="27:32" pos:end="27:32">j</name><operator pos:start="27:33" pos:end="27:34">++</operator></expr><operator pos:start="27:35" pos:end="27:35">,</operator> <expr pos:start="27:37" pos:end="27:42"><name pos:start="27:37" pos:end="27:40">data</name><operator pos:start="27:41" pos:end="27:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:17" pos:end="29:51"><block_content pos:start="29:17" pos:end="29:51">

                <expr_stmt pos:start="29:17" pos:end="29:51"><expr pos:start="29:17" pos:end="29:50"><name pos:start="29:17" pos:end="29:20"><name pos:start="29:17" pos:end="29:17">c</name><index pos:start="29:18" pos:end="29:20">[<expr pos:start="29:19" pos:end="29:19"><name pos:start="29:19" pos:end="29:19">j</name></expr>]</index></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <operator pos:start="29:24" pos:end="29:24">(</operator><operator pos:start="29:25" pos:end="29:25">*</operator><name pos:start="29:26" pos:end="29:29">data</name> <operator pos:start="29:31" pos:end="29:32">&lt;&lt;</operator> <literal type="number" pos:start="29:34" pos:end="29:34">2</literal><operator pos:start="29:35" pos:end="29:35">)</operator> <operator pos:start="29:37" pos:end="29:37">|</operator> <operator pos:start="29:39" pos:end="29:39">(</operator><operator pos:start="29:40" pos:end="29:40">*</operator><name pos:start="29:41" pos:end="29:44">data</name> <operator pos:start="29:46" pos:end="29:47">&gt;&gt;</operator> <literal type="number" pos:start="29:49" pos:end="29:49">4</literal><operator pos:start="29:50" pos:end="29:50">)</operator></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="31:13" pos:end="31:36"><expr pos:start="31:13" pos:end="31:35"><name pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:19">palette</name><index pos:start="31:20" pos:end="31:22">[<expr pos:start="31:21" pos:end="31:21"><name pos:start="31:21" pos:end="31:21">i</name></expr>]</index></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <call pos:start="31:26" pos:end="31:35"><name pos:start="31:26" pos:end="31:32">AV_RB24</name><argument_list pos:start="31:33" pos:end="31:35">(<argument pos:start="31:34" pos:end="31:34"><expr pos:start="31:34" pos:end="31:34"><name pos:start="31:34" pos:end="31:34">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="35:9" pos:end="35:43"><expr pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:11">seq</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:18">frame</name><operator pos:start="35:19" pos:end="35:19">.</operator><name pos:start="35:20" pos:end="35:38">palette_has_changed</name></name> <operator pos:start="35:40" pos:end="35:40">=</operator> <literal type="number" pos:start="35:42" pos:end="35:42">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="77:5"><if pos:start="41:5" pos:end="77:5">if <condition pos:start="41:8" pos:end="41:18">(<expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:13">flags</name> <operator pos:start="41:15" pos:end="41:15">&amp;</operator> <literal type="number" pos:start="41:17" pos:end="41:17">2</literal></expr>)</condition> <block pos:start="41:20" pos:end="77:5">{<block_content pos:start="43:9" pos:end="75:13">

        <expr_stmt pos:start="43:9" pos:end="43:42"><expr pos:start="43:9" pos:end="43:41"><call pos:start="43:9" pos:end="43:41"><name pos:start="43:9" pos:end="43:21">init_get_bits</name><argument_list pos:start="43:22" pos:end="43:41">(<argument pos:start="43:23" pos:end="43:25"><expr pos:start="43:23" pos:end="43:25"><operator pos:start="43:23" pos:end="43:23">&amp;</operator><name pos:start="43:24" pos:end="43:25">gb</name></expr></argument>, <argument pos:start="43:28" pos:end="43:31"><expr pos:start="43:28" pos:end="43:31"><name pos:start="43:28" pos:end="43:31">data</name></expr></argument>, <argument pos:start="43:34" pos:end="43:40"><expr pos:start="43:34" pos:end="43:40"><literal type="number" pos:start="43:34" pos:end="43:36">128</literal> <operator pos:start="43:38" pos:end="43:38">*</operator> <literal type="number" pos:start="43:40" pos:end="43:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="43:44" pos:end="43:55"><expr pos:start="43:44" pos:end="43:54"><name pos:start="43:44" pos:end="43:47">data</name> <operator pos:start="43:49" pos:end="43:50">+=</operator> <literal type="number" pos:start="43:52" pos:end="43:54">128</literal></expr>;</expr_stmt>

        <for pos:start="45:9" pos:end="75:13">for <control pos:start="45:13" pos:end="45:36">(<init pos:start="45:14" pos:end="45:19"><expr pos:start="45:14" pos:end="45:18"><name pos:start="45:14" pos:end="45:14">y</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</init> <condition pos:start="45:21" pos:end="45:28"><expr pos:start="45:21" pos:end="45:27"><name pos:start="45:21" pos:end="45:21">y</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <literal type="number" pos:start="45:25" pos:end="45:27">128</literal></expr>;</condition> <incr pos:start="45:30" pos:end="45:35"><expr pos:start="45:30" pos:end="45:35"><name pos:start="45:30" pos:end="45:30">y</name> <operator pos:start="45:32" pos:end="45:33">+=</operator> <literal type="number" pos:start="45:35" pos:end="45:35">8</literal></expr></incr>)</control><block type="pseudo" pos:start="47:13" pos:end="75:13"><block_content pos:start="47:13" pos:end="75:13">

            <for pos:start="47:13" pos:end="75:13">for <control pos:start="47:17" pos:end="47:40">(<init pos:start="47:18" pos:end="47:23"><expr pos:start="47:18" pos:end="47:22"><name pos:start="47:18" pos:end="47:18">x</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>;</init> <condition pos:start="47:25" pos:end="47:32"><expr pos:start="47:25" pos:end="47:31"><name pos:start="47:25" pos:end="47:25">x</name> <operator pos:start="47:27" pos:end="47:27">&lt;</operator> <literal type="number" pos:start="47:29" pos:end="47:31">256</literal></expr>;</condition> <incr pos:start="47:34" pos:end="47:39"><expr pos:start="47:34" pos:end="47:39"><name pos:start="47:34" pos:end="47:34">x</name> <operator pos:start="47:36" pos:end="47:37">+=</operator> <literal type="number" pos:start="47:39" pos:end="47:39">8</literal></expr></incr>)</control> <block pos:start="47:42" pos:end="75:13">{<block_content pos:start="49:17" pos:end="73:17">

                <expr_stmt pos:start="49:17" pos:end="49:74"><expr pos:start="49:17" pos:end="49:73"><name pos:start="49:17" pos:end="49:19">dst</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <operator pos:start="49:23" pos:end="49:23">&amp;</operator><name pos:start="49:24" pos:end="49:73"><name pos:start="49:24" pos:end="49:26">seq</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:33">frame</name><operator pos:start="49:34" pos:end="49:34">.</operator><name pos:start="49:35" pos:end="49:38">data</name><index pos:start="49:39" pos:end="49:41">[<expr pos:start="49:40" pos:end="49:40"><literal type="number" pos:start="49:40" pos:end="49:40">0</literal></expr>]</index><index pos:start="49:42" pos:end="49:73">[<expr pos:start="49:43" pos:end="49:72"><name pos:start="49:43" pos:end="49:43">y</name> <operator pos:start="49:45" pos:end="49:45">*</operator> <name pos:start="49:47" pos:end="49:68"><name pos:start="49:47" pos:end="49:49">seq</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:56">frame</name><operator pos:start="49:57" pos:end="49:57">.</operator><name pos:start="49:58" pos:end="49:65">linesize</name><index pos:start="49:66" pos:end="49:68">[<expr pos:start="49:67" pos:end="49:67"><literal type="number" pos:start="49:67" pos:end="49:67">0</literal></expr>]</index></name> <operator pos:start="49:70" pos:end="49:70">+</operator> <name pos:start="49:72" pos:end="49:72">x</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:38"><expr pos:start="51:17" pos:end="51:37"><name pos:start="51:17" pos:end="51:18">op</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <call pos:start="51:22" pos:end="51:37"><name pos:start="51:22" pos:end="51:29">get_bits</name><argument_list pos:start="51:30" pos:end="51:37">(<argument pos:start="51:31" pos:end="51:33"><expr pos:start="51:31" pos:end="51:33"><operator pos:start="51:31" pos:end="51:31">&amp;</operator><name pos:start="51:32" pos:end="51:33">gb</name></expr></argument>, <argument pos:start="51:36" pos:end="51:36"><expr pos:start="51:36" pos:end="51:36"><literal type="number" pos:start="51:36" pos:end="51:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="53:17" pos:end="73:17">switch <condition pos:start="53:24" pos:end="53:27">(<expr pos:start="53:25" pos:end="53:26"><name pos:start="53:25" pos:end="53:26">op</name></expr>)</condition> <block pos:start="53:29" pos:end="73:17">{<block_content pos:start="55:17" pos:end="71:26">

                <case pos:start="55:17" pos:end="55:23">case <expr pos:start="55:22" pos:end="55:22"><literal type="number" pos:start="55:22" pos:end="55:22">1</literal></expr>:</case>

                    <expr_stmt pos:start="57:21" pos:end="57:58"><expr pos:start="57:21" pos:end="57:57"><name pos:start="57:21" pos:end="57:24">data</name> <operator pos:start="57:26" pos:end="57:26">=</operator> <call pos:start="57:28" pos:end="57:57"><name pos:start="57:28" pos:end="57:41">seq_decode_op1</name><argument_list pos:start="57:42" pos:end="57:57">(<argument pos:start="57:43" pos:end="57:45"><expr pos:start="57:43" pos:end="57:45"><name pos:start="57:43" pos:end="57:45">seq</name></expr></argument>, <argument pos:start="57:48" pos:end="57:51"><expr pos:start="57:48" pos:end="57:51"><name pos:start="57:48" pos:end="57:51">data</name></expr></argument>, <argument pos:start="57:54" pos:end="57:56"><expr pos:start="57:54" pos:end="57:56"><name pos:start="57:54" pos:end="57:56">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="59:21" pos:end="59:26">break;</break>

                <case pos:start="61:17" pos:end="61:23">case <expr pos:start="61:22" pos:end="61:22"><literal type="number" pos:start="61:22" pos:end="61:22">2</literal></expr>:</case>

                    <expr_stmt pos:start="63:21" pos:end="63:58"><expr pos:start="63:21" pos:end="63:57"><name pos:start="63:21" pos:end="63:24">data</name> <operator pos:start="63:26" pos:end="63:26">=</operator> <call pos:start="63:28" pos:end="63:57"><name pos:start="63:28" pos:end="63:41">seq_decode_op2</name><argument_list pos:start="63:42" pos:end="63:57">(<argument pos:start="63:43" pos:end="63:45"><expr pos:start="63:43" pos:end="63:45"><name pos:start="63:43" pos:end="63:45">seq</name></expr></argument>, <argument pos:start="63:48" pos:end="63:51"><expr pos:start="63:48" pos:end="63:51"><name pos:start="63:48" pos:end="63:51">data</name></expr></argument>, <argument pos:start="63:54" pos:end="63:56"><expr pos:start="63:54" pos:end="63:56"><name pos:start="63:54" pos:end="63:56">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="65:21" pos:end="65:26">break;</break>

                <case pos:start="67:17" pos:end="67:23">case <expr pos:start="67:22" pos:end="67:22"><literal type="number" pos:start="67:22" pos:end="67:22">3</literal></expr>:</case>

                    <expr_stmt pos:start="69:21" pos:end="69:58"><expr pos:start="69:21" pos:end="69:57"><name pos:start="69:21" pos:end="69:24">data</name> <operator pos:start="69:26" pos:end="69:26">=</operator> <call pos:start="69:28" pos:end="69:57"><name pos:start="69:28" pos:end="69:41">seq_decode_op3</name><argument_list pos:start="69:42" pos:end="69:57">(<argument pos:start="69:43" pos:end="69:45"><expr pos:start="69:43" pos:end="69:45"><name pos:start="69:43" pos:end="69:45">seq</name></expr></argument>, <argument pos:start="69:48" pos:end="69:51"><expr pos:start="69:48" pos:end="69:51"><name pos:start="69:48" pos:end="69:51">data</name></expr></argument>, <argument pos:start="69:54" pos:end="69:56"><expr pos:start="69:54" pos:end="69:56"><name pos:start="69:54" pos:end="69:56">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="71:21" pos:end="71:26">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></for></block_content></block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
