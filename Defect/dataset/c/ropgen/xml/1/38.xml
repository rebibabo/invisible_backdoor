<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/38.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">test_acpi_asl</name><parameter_list pos:start="1:26" pos:end="1:42">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:37"><name pos:start="1:27" pos:end="1:35">test_data</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:30">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AcpiSdtTable</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">sdt</name></decl>, <decl pos:start="7:24" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:18"><modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:31">exp_sdt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">test_data</name></type> <name pos:start="9:15" pos:end="9:22">exp_data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">gboolean</name></type> <name pos:start="11:14" pos:end="11:20">exp_err</name></decl>, <decl pos:start="11:23" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:23" pos:end="11:25">err</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:43"><expr pos:start="15:5" pos:end="15:42"><call pos:start="15:5" pos:end="15:42"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:42">(<argument pos:start="15:12" pos:end="15:20"><expr pos:start="15:12" pos:end="15:20"><operator pos:start="15:12" pos:end="15:12">&amp;</operator><name pos:start="15:13" pos:end="15:20">exp_data</name></expr></argument>, <argument pos:start="15:23" pos:end="15:23"><expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></argument>, <argument pos:start="15:26" pos:end="15:41"><expr pos:start="15:26" pos:end="15:41"><sizeof pos:start="15:26" pos:end="15:41">sizeof<argument_list pos:start="15:32" pos:end="15:41">(<argument pos:start="15:33" pos:end="15:40"><expr pos:start="15:33" pos:end="15:40"><name pos:start="15:33" pos:end="15:40">exp_data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:12">exp_data</name><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:19">tables</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <call pos:start="17:23" pos:end="17:45"><name pos:start="17:23" pos:end="17:39">load_expected_aml</name><argument_list pos:start="17:40" pos:end="17:45">(<argument pos:start="17:41" pos:end="17:44"><expr pos:start="17:41" pos:end="17:44"><name pos:start="17:41" pos:end="17:44">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:18">dump_aml_files</name><argument_list pos:start="19:19" pos:end="19:31">(<argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">data</name></expr></argument>, <argument pos:start="19:26" pos:end="19:30"><expr pos:start="19:26" pos:end="19:30"><name pos:start="19:26" pos:end="19:30">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="77:5">for <control pos:start="21:9" pos:end="21:43">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:38"><expr pos:start="21:17" pos:end="21:37"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:37"><name pos:start="21:21" pos:end="21:24">data</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:32">tables</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:37">len</name></name></expr>;</condition> <incr pos:start="21:40" pos:end="21:42"><expr pos:start="21:40" pos:end="21:42"><operator pos:start="21:40" pos:end="21:41">++</operator><name pos:start="21:42" pos:end="21:42">i</name></expr></incr>)</control> <block pos:start="21:45" pos:end="77:5">{<block_content pos:start="23:9" pos:end="75:37">

        <decl_stmt pos:start="23:9" pos:end="23:31"><decl pos:start="23:9" pos:end="23:20"><type pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:15">GString</name> <modifier pos:start="23:17" pos:end="23:17">*</modifier></type><name pos:start="23:18" pos:end="23:20">asl</name></decl>, <decl pos:start="23:23" pos:end="23:30"><type ref="prev" pos:start="23:9" pos:end="23:17"><modifier pos:start="23:23" pos:end="23:23">*</modifier></type><name pos:start="23:24" pos:end="23:30">exp_asl</name></decl>;</decl_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:60"><expr pos:start="27:9" pos:end="27:59"><name pos:start="27:9" pos:end="27:11">sdt</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <operator pos:start="27:15" pos:end="27:15">&amp;</operator><call pos:start="27:16" pos:end="27:59"><name pos:start="27:16" pos:end="27:28">g_array_index</name><argument_list pos:start="27:29" pos:end="27:59">(<argument pos:start="27:30" pos:end="27:41"><expr pos:start="27:30" pos:end="27:41"><name pos:start="27:30" pos:end="27:41"><name pos:start="27:30" pos:end="27:33">data</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:41">tables</name></name></expr></argument>, <argument pos:start="27:44" pos:end="27:55"><expr pos:start="27:44" pos:end="27:55"><name pos:start="27:44" pos:end="27:55">AcpiSdtTable</name></expr></argument>, <argument pos:start="27:58" pos:end="27:58"><expr pos:start="27:58" pos:end="27:58"><name pos:start="27:58" pos:end="27:58">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:67"><expr pos:start="29:9" pos:end="29:66"><name pos:start="29:9" pos:end="29:15">exp_sdt</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <operator pos:start="29:19" pos:end="29:19">&amp;</operator><call pos:start="29:20" pos:end="29:66"><name pos:start="29:20" pos:end="29:32">g_array_index</name><argument_list pos:start="29:33" pos:end="29:66">(<argument pos:start="29:34" pos:end="29:48"><expr pos:start="29:34" pos:end="29:48"><name pos:start="29:34" pos:end="29:48"><name pos:start="29:34" pos:end="29:41">exp_data</name><operator pos:start="29:42" pos:end="29:42">.</operator><name pos:start="29:43" pos:end="29:48">tables</name></name></expr></argument>, <argument pos:start="29:51" pos:end="29:62"><expr pos:start="29:51" pos:end="29:62"><name pos:start="29:51" pos:end="29:62">AcpiSdtTable</name></expr></argument>, <argument pos:start="29:65" pos:end="29:65"><expr pos:start="29:65" pos:end="29:65"><name pos:start="29:65" pos:end="29:65">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:42"><expr pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:11">err</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:41"><name pos:start="33:15" pos:end="33:22">load_asl</name><argument_list pos:start="33:23" pos:end="33:41">(<argument pos:start="33:24" pos:end="33:35"><expr pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:27">data</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:35">tables</name></name></expr></argument>, <argument pos:start="33:38" pos:end="33:40"><expr pos:start="33:38" pos:end="33:40"><name pos:start="33:38" pos:end="33:40">sdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:38"><expr pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:11">asl</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:37"><name pos:start="35:15" pos:end="35:27">normalize_asl</name><argument_list pos:start="35:28" pos:end="35:37">(<argument pos:start="35:29" pos:end="35:36"><expr pos:start="35:29" pos:end="35:36"><name pos:start="35:29" pos:end="35:36"><name pos:start="35:29" pos:end="35:31">sdt</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:36">asl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:53"><expr pos:start="39:9" pos:end="39:52"><name pos:start="39:9" pos:end="39:15">exp_err</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:52"><name pos:start="39:19" pos:end="39:26">load_asl</name><argument_list pos:start="39:27" pos:end="39:52">(<argument pos:start="39:28" pos:end="39:42"><expr pos:start="39:28" pos:end="39:42"><name pos:start="39:28" pos:end="39:42"><name pos:start="39:28" pos:end="39:35">exp_data</name><operator pos:start="39:36" pos:end="39:36">.</operator><name pos:start="39:37" pos:end="39:42">tables</name></name></expr></argument>, <argument pos:start="39:45" pos:end="39:51"><expr pos:start="39:45" pos:end="39:51"><name pos:start="39:45" pos:end="39:51">exp_sdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:46"><expr pos:start="41:9" pos:end="41:45"><name pos:start="41:9" pos:end="41:15">exp_asl</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:45"><name pos:start="41:19" pos:end="41:31">normalize_asl</name><argument_list pos:start="41:32" pos:end="41:45">(<argument pos:start="41:33" pos:end="41:44"><expr pos:start="41:33" pos:end="41:44"><name pos:start="41:33" pos:end="41:44"><name pos:start="41:33" pos:end="41:39">exp_sdt</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:44">asl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="45:9" pos:end="45:38">/* TODO: check for warnings */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:34"><expr pos:start="47:9" pos:end="47:33"><call pos:start="47:9" pos:end="47:33"><name pos:start="47:9" pos:end="47:16">g_assert</name><argument_list pos:start="47:17" pos:end="47:33">(<argument pos:start="47:18" pos:end="47:32"><expr pos:start="47:18" pos:end="47:32"><operator pos:start="47:18" pos:end="47:18">!</operator><name pos:start="47:19" pos:end="47:21">err</name> <operator pos:start="47:23" pos:end="47:24">||</operator> <name pos:start="47:26" pos:end="47:32">exp_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="51:9" pos:end="71:9"><if pos:start="51:9" pos:end="71:9">if <condition pos:start="51:12" pos:end="51:46">(<expr pos:start="51:13" pos:end="51:45"><call pos:start="51:13" pos:end="51:45"><name pos:start="51:13" pos:end="51:21">g_strcmp0</name><argument_list pos:start="51:22" pos:end="51:45">(<argument pos:start="51:23" pos:end="51:30"><expr pos:start="51:23" pos:end="51:30"><name pos:start="51:23" pos:end="51:30"><name pos:start="51:23" pos:end="51:25">asl</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:30">str</name></name></expr></argument>, <argument pos:start="51:33" pos:end="51:44"><expr pos:start="51:33" pos:end="51:44"><name pos:start="51:33" pos:end="51:44"><name pos:start="51:33" pos:end="51:39">exp_asl</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:44">str</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:48" pos:end="71:9">{<block_content pos:start="53:13" pos:end="69:58">

            <decl_stmt pos:start="53:13" pos:end="53:72"><decl pos:start="53:13" pos:end="53:71"><type pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:20">uint32_t</name></type> <name pos:start="53:22" pos:end="53:30">signature</name> <init pos:start="53:32" pos:end="53:71">= <expr pos:start="53:34" pos:end="53:71"><call pos:start="53:34" pos:end="53:71"><name pos:start="53:34" pos:end="53:44">cpu_to_le32</name><argument_list pos:start="53:45" pos:end="53:71">(<argument pos:start="53:46" pos:end="53:70"><expr pos:start="53:46" pos:end="53:70"><name pos:start="53:46" pos:end="53:70"><name pos:start="53:46" pos:end="53:52">exp_sdt</name><operator pos:start="53:53" pos:end="53:54">-&gt;</operator><name pos:start="53:55" pos:end="53:60">header</name><operator pos:start="53:61" pos:end="53:61">.</operator><name pos:start="53:62" pos:end="53:70">signature</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:41"><expr pos:start="55:13" pos:end="55:40"><name pos:start="55:13" pos:end="55:33"><name pos:start="55:13" pos:end="55:15">sdt</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:33">tmp_files_retain</name></name> <operator pos:start="55:35" pos:end="55:35">=</operator> <name pos:start="55:37" pos:end="55:40">true</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:45"><expr pos:start="57:13" pos:end="57:44"><name pos:start="57:13" pos:end="57:37"><name pos:start="57:13" pos:end="57:19">exp_sdt</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:37">tmp_files_retain</name></name> <operator pos:start="57:39" pos:end="57:39">=</operator> <name pos:start="57:41" pos:end="57:44">true</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="69:58"><expr pos:start="59:13" pos:end="69:57"><call pos:start="59:13" pos:end="69:57"><name pos:start="59:13" pos:end="59:19">fprintf</name><argument_list pos:start="59:20" pos:end="69:57">(<argument pos:start="59:21" pos:end="59:26"><expr pos:start="59:21" pos:end="59:26"><name pos:start="59:21" pos:end="59:26">stderr</name></expr></argument>,

                    <argument pos:start="61:21" pos:end="63:75"><expr pos:start="61:21" pos:end="63:75"><literal type="string" pos:start="61:21" pos:end="61:57">"acpi-test: Warning! %.4s mismatch. "</literal>

                    <literal type="string" pos:start="63:21" pos:end="63:75">"Actual [asl:%s, aml:%s], Expected [asl:%s, aml:%s].\n"</literal></expr></argument>,

                    <argument pos:start="65:21" pos:end="65:39"><expr pos:start="65:21" pos:end="65:39"><operator pos:start="65:21" pos:end="65:21">(</operator><name pos:start="65:22" pos:end="65:26">gchar</name> <operator pos:start="65:28" pos:end="65:28">*</operator><operator pos:start="65:29" pos:end="65:29">)</operator><operator pos:start="65:30" pos:end="65:30">&amp;</operator><name pos:start="65:31" pos:end="65:39">signature</name></expr></argument>,

                    <argument pos:start="67:21" pos:end="67:33"><expr pos:start="67:21" pos:end="67:33"><name pos:start="67:21" pos:end="67:33"><name pos:start="67:21" pos:end="67:23">sdt</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:33">asl_file</name></name></expr></argument>, <argument pos:start="67:36" pos:end="67:48"><expr pos:start="67:36" pos:end="67:48"><name pos:start="67:36" pos:end="67:48"><name pos:start="67:36" pos:end="67:38">sdt</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:48">aml_file</name></name></expr></argument>,

                    <argument pos:start="69:21" pos:end="69:37"><expr pos:start="69:21" pos:end="69:37"><name pos:start="69:21" pos:end="69:37"><name pos:start="69:21" pos:end="69:27">exp_sdt</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:37">asl_file</name></name></expr></argument>, <argument pos:start="69:40" pos:end="69:56"><expr pos:start="69:40" pos:end="69:56"><name pos:start="69:40" pos:end="69:56"><name pos:start="69:40" pos:end="69:46">exp_sdt</name><operator pos:start="69:47" pos:end="69:48">-&gt;</operator><name pos:start="69:49" pos:end="69:56">aml_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:33"><expr pos:start="73:9" pos:end="73:32"><call pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:21">g_string_free</name><argument_list pos:start="73:22" pos:end="73:32">(<argument pos:start="73:23" pos:end="73:25"><expr pos:start="73:23" pos:end="73:25"><name pos:start="73:23" pos:end="73:25">asl</name></expr></argument>, <argument pos:start="73:28" pos:end="73:31"><expr pos:start="73:28" pos:end="73:31"><name pos:start="73:28" pos:end="73:31">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:37"><expr pos:start="75:9" pos:end="75:36"><call pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:21">g_string_free</name><argument_list pos:start="75:22" pos:end="75:36">(<argument pos:start="75:23" pos:end="75:29"><expr pos:start="75:23" pos:end="75:29"><name pos:start="75:23" pos:end="75:29">exp_asl</name></expr></argument>, <argument pos:start="75:32" pos:end="75:35"><expr pos:start="75:32" pos:end="75:35"><name pos:start="75:32" pos:end="75:35">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="81:5" pos:end="81:30"><expr pos:start="81:5" pos:end="81:29"><call pos:start="81:5" pos:end="81:29"><name pos:start="81:5" pos:end="81:18">free_test_data</name><argument_list pos:start="81:19" pos:end="81:29">(<argument pos:start="81:20" pos:end="81:28"><expr pos:start="81:20" pos:end="81:28"><operator pos:start="81:20" pos:end="81:20">&amp;</operator><name pos:start="81:21" pos:end="81:28">exp_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
