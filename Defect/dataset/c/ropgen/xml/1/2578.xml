<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2578.c" pos:tabs="8"><function pos:start="1:1" pos:end="268:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">dpcm_decode_frame</name><parameter_list pos:start="1:29" pos:end="5:56">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">data</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:55">data_size</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:41"><decl pos:start="5:30" pos:end="5:41"><type pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:36">uint8_t</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:41">buf</name></decl></parameter>, <parameter pos:start="5:44" pos:end="5:55"><decl pos:start="5:44" pos:end="5:55"><type pos:start="5:44" pos:end="5:55"><name pos:start="5:44" pos:end="5:46">int</name></type> <name pos:start="5:48" pos:end="5:55">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="268:1">{<block_content pos:start="9:5" pos:end="266:20">

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DPCMContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:18">s</name> <init pos:start="9:20" pos:end="9:37">= <expr pos:start="9:22" pos:end="9:37"><name pos:start="9:22" pos:end="9:37"><name pos:start="9:22" pos:end="9:26">avctx</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">in</name></decl>, <decl pos:start="11:13" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:15">out</name> <init pos:start="11:17" pos:end="11:19">= <expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:17">predictor</name><index pos:start="13:18" pos:end="13:20">[<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:22">channel_number</name> <init pos:start="15:24" pos:end="15:26">= <expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">short</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:25">output_samples</name> <init pos:start="17:27" pos:end="17:32">= <expr pos:start="17:29" pos:end="17:32"><name pos:start="17:29" pos:end="17:32">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:13">shift</name><index pos:start="19:14" pos:end="19:16">[<expr pos:start="19:15" pos:end="19:15"><literal type="number" pos:start="19:15" pos:end="19:15">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:17">char</name></type> <name pos:start="21:19" pos:end="21:22">byte</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:15"><decl pos:start="23:5" pos:end="23:14"><type pos:start="23:5" pos:end="23:9"><name pos:start="23:5" pos:end="23:9">short</name></type> <name pos:start="23:11" pos:end="23:14">diff</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="29:17"><if pos:start="27:5" pos:end="29:17">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:17">buf_size</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:17"><block_content pos:start="29:9" pos:end="29:17">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="33:5" pos:end="33:66">// almost every DPCM variant expands one byte of data into two</comment>

    <if_stmt pos:start="35:5" pos:end="260:5"><if pos:start="35:5" pos:end="260:5">if<condition pos:start="35:7" pos:end="35:31">(<expr pos:start="35:8" pos:end="35:30"><operator pos:start="35:8" pos:end="35:8">*</operator><name pos:start="35:9" pos:end="35:17">data_size</name><operator pos:start="35:18" pos:end="35:18">/</operator><literal type="number" pos:start="35:19" pos:end="35:19">2</literal> <operator pos:start="35:21" pos:end="35:21">&lt;</operator> <name pos:start="35:23" pos:end="35:30">buf_size</name></expr>)</condition><block type="pseudo" pos:start="40:5" pos:end="260:5"><block_content pos:start="40:5" pos:end="260:5">




    <switch pos:start="40:5" pos:end="260:5">switch<condition pos:start="40:11" pos:end="40:28">(<expr pos:start="40:12" pos:end="40:27"><name pos:start="40:12" pos:end="40:27"><name pos:start="40:12" pos:end="40:16">avctx</name><operator pos:start="40:17" pos:end="40:18">-&gt;</operator><name pos:start="40:19" pos:end="40:23">codec</name><operator pos:start="40:24" pos:end="40:25">-&gt;</operator><name pos:start="40:26" pos:end="40:27">id</name></name></expr>)</condition> <block pos:start="40:30" pos:end="260:5">{<block_content pos:start="44:5" pos:end="258:14">



    <case pos:start="44:5" pos:end="44:27">case <expr pos:start="44:10" pos:end="44:26"><name pos:start="44:10" pos:end="44:26">CODEC_ID_ROQ_DPCM</name></expr>:</case>

        <if_stmt pos:start="46:9" pos:end="56:9"><if pos:start="46:9" pos:end="48:44">if <condition pos:start="46:12" pos:end="46:29">(<expr pos:start="46:13" pos:end="46:28"><name pos:start="46:13" pos:end="46:23"><name pos:start="46:13" pos:end="46:13">s</name><operator pos:start="46:14" pos:end="46:15">-&gt;</operator><name pos:start="46:16" pos:end="46:23">channels</name></name> <operator pos:start="46:25" pos:end="46:26">==</operator> <literal type="number" pos:start="46:28" pos:end="46:28">1</literal></expr>)</condition><block type="pseudo" pos:start="48:13" pos:end="48:44"><block_content pos:start="48:13" pos:end="48:44">

            <expr_stmt pos:start="48:13" pos:end="48:44"><expr pos:start="48:13" pos:end="48:43"><name pos:start="48:13" pos:end="48:24"><name pos:start="48:13" pos:end="48:21">predictor</name><index pos:start="48:22" pos:end="48:24">[<expr pos:start="48:23" pos:end="48:23"><literal type="number" pos:start="48:23" pos:end="48:23">0</literal></expr>]</index></name> <operator pos:start="48:26" pos:end="48:26">=</operator> <call pos:start="48:28" pos:end="48:43"><name pos:start="48:28" pos:end="48:34">AV_RL16</name><argument_list pos:start="48:35" pos:end="48:43">(<argument pos:start="48:36" pos:end="48:42"><expr pos:start="48:36" pos:end="48:42"><operator pos:start="48:36" pos:end="48:36">&amp;</operator><name pos:start="48:37" pos:end="48:42"><name pos:start="48:37" pos:end="48:39">buf</name><index pos:start="48:40" pos:end="48:42">[<expr pos:start="48:41" pos:end="48:41"><literal type="number" pos:start="48:41" pos:end="48:41">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="50:9" pos:end="56:9">else <block pos:start="50:14" pos:end="56:9">{<block_content pos:start="52:13" pos:end="54:39">

            <expr_stmt pos:start="52:13" pos:end="52:39"><expr pos:start="52:13" pos:end="52:38"><name pos:start="52:13" pos:end="52:24"><name pos:start="52:13" pos:end="52:21">predictor</name><index pos:start="52:22" pos:end="52:24">[<expr pos:start="52:23" pos:end="52:23"><literal type="number" pos:start="52:23" pos:end="52:23">0</literal></expr>]</index></name> <operator pos:start="52:26" pos:end="52:26">=</operator> <name pos:start="52:28" pos:end="52:33"><name pos:start="52:28" pos:end="52:30">buf</name><index pos:start="52:31" pos:end="52:33">[<expr pos:start="52:32" pos:end="52:32"><literal type="number" pos:start="52:32" pos:end="52:32">7</literal></expr>]</index></name> <operator pos:start="52:35" pos:end="52:36">&lt;&lt;</operator> <literal type="number" pos:start="52:38" pos:end="52:38">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="54:13" pos:end="54:39"><expr pos:start="54:13" pos:end="54:38"><name pos:start="54:13" pos:end="54:24"><name pos:start="54:13" pos:end="54:21">predictor</name><index pos:start="54:22" pos:end="54:24">[<expr pos:start="54:23" pos:end="54:23"><literal type="number" pos:start="54:23" pos:end="54:23">1</literal></expr>]</index></name> <operator pos:start="54:26" pos:end="54:26">=</operator> <name pos:start="54:28" pos:end="54:33"><name pos:start="54:28" pos:end="54:30">buf</name><index pos:start="54:31" pos:end="54:33">[<expr pos:start="54:32" pos:end="54:32"><literal type="number" pos:start="54:32" pos:end="54:32">6</literal></expr>]</index></name> <operator pos:start="54:35" pos:end="54:36">&lt;&lt;</operator> <literal type="number" pos:start="54:38" pos:end="54:38">8</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="58:9" pos:end="58:31"><expr pos:start="58:9" pos:end="58:30"><call pos:start="58:9" pos:end="58:30"><name pos:start="58:9" pos:end="58:16">SE_16BIT</name><argument_list pos:start="58:17" pos:end="58:30">(<argument pos:start="58:18" pos:end="58:29"><expr pos:start="58:18" pos:end="58:29"><name pos:start="58:18" pos:end="58:29"><name pos:start="58:18" pos:end="58:26">predictor</name><index pos:start="58:27" pos:end="58:29">[<expr pos:start="58:28" pos:end="58:28"><literal type="number" pos:start="58:28" pos:end="58:28">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="60:9" pos:end="60:31"><expr pos:start="60:9" pos:end="60:30"><call pos:start="60:9" pos:end="60:30"><name pos:start="60:9" pos:end="60:16">SE_16BIT</name><argument_list pos:start="60:17" pos:end="60:30">(<argument pos:start="60:18" pos:end="60:29"><expr pos:start="60:18" pos:end="60:29"><name pos:start="60:18" pos:end="60:29"><name pos:start="60:18" pos:end="60:26">predictor</name><index pos:start="60:27" pos:end="60:29">[<expr pos:start="60:28" pos:end="60:28"><literal type="number" pos:start="60:28" pos:end="60:28">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="64:9" pos:end="64:32">/* decode the samples */</comment>

        <for pos:start="66:9" pos:end="80:9">for <control pos:start="66:13" pos:end="66:57">(<init pos:start="66:14" pos:end="66:29"><expr pos:start="66:14" pos:end="66:19"><name pos:start="66:14" pos:end="66:15">in</name> <operator pos:start="66:17" pos:end="66:17">=</operator> <literal type="number" pos:start="66:19" pos:end="66:19">8</literal></expr><operator pos:start="66:20" pos:end="66:20">,</operator> <expr pos:start="66:22" pos:end="66:28"><name pos:start="66:22" pos:end="66:24">out</name> <operator pos:start="66:26" pos:end="66:26">=</operator> <literal type="number" pos:start="66:28" pos:end="66:28">0</literal></expr>;</init> <condition pos:start="66:31" pos:end="66:44"><expr pos:start="66:31" pos:end="66:43"><name pos:start="66:31" pos:end="66:32">in</name> <operator pos:start="66:34" pos:end="66:34">&lt;</operator> <name pos:start="66:36" pos:end="66:43">buf_size</name></expr>;</condition> <incr pos:start="66:46" pos:end="66:56"><expr pos:start="66:46" pos:end="66:49"><name pos:start="66:46" pos:end="66:47">in</name><operator pos:start="66:48" pos:end="66:49">++</operator></expr><operator pos:start="66:50" pos:end="66:50">,</operator> <expr pos:start="66:52" pos:end="66:56"><name pos:start="66:52" pos:end="66:54">out</name><operator pos:start="66:55" pos:end="66:56">++</operator></expr></incr>)</control> <block pos:start="66:59" pos:end="80:9">{<block_content pos:start="68:13" pos:end="78:46">

            <expr_stmt pos:start="68:13" pos:end="68:70"><expr pos:start="68:13" pos:end="68:69"><name pos:start="68:13" pos:end="68:37"><name pos:start="68:13" pos:end="68:21">predictor</name><index pos:start="68:22" pos:end="68:37">[<expr pos:start="68:23" pos:end="68:36"><name pos:start="68:23" pos:end="68:36">channel_number</name></expr>]</index></name> <operator pos:start="68:39" pos:end="68:40">+=</operator> <name pos:start="68:42" pos:end="68:69"><name pos:start="68:42" pos:end="68:42">s</name><operator pos:start="68:43" pos:end="68:44">-&gt;</operator><name pos:start="68:45" pos:end="68:60">roq_square_array</name><index pos:start="68:61" pos:end="68:69">[<expr pos:start="68:62" pos:end="68:68"><name pos:start="68:62" pos:end="68:68"><name pos:start="68:62" pos:end="68:64">buf</name><index pos:start="68:65" pos:end="68:68">[<expr pos:start="68:66" pos:end="68:67"><name pos:start="68:66" pos:end="68:67">in</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="70:13" pos:end="70:81"><expr pos:start="70:13" pos:end="70:80"><name pos:start="70:13" pos:end="70:37"><name pos:start="70:13" pos:end="70:21">predictor</name><index pos:start="70:22" pos:end="70:37">[<expr pos:start="70:23" pos:end="70:36"><name pos:start="70:23" pos:end="70:36">channel_number</name></expr>]</index></name> <operator pos:start="70:39" pos:end="70:39">=</operator> <call pos:start="70:41" pos:end="70:80"><name pos:start="70:41" pos:end="70:53">av_clip_int16</name><argument_list pos:start="70:54" pos:end="70:80">(<argument pos:start="70:55" pos:end="70:79"><expr pos:start="70:55" pos:end="70:79"><name pos:start="70:55" pos:end="70:79"><name pos:start="70:55" pos:end="70:63">predictor</name><index pos:start="70:64" pos:end="70:79">[<expr pos:start="70:65" pos:end="70:78"><name pos:start="70:65" pos:end="70:78">channel_number</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="72:13" pos:end="72:60"><expr pos:start="72:13" pos:end="72:59"><name pos:start="72:13" pos:end="72:31"><name pos:start="72:13" pos:end="72:26">output_samples</name><index pos:start="72:27" pos:end="72:31">[<expr pos:start="72:28" pos:end="72:30"><name pos:start="72:28" pos:end="72:30">out</name></expr>]</index></name> <operator pos:start="72:33" pos:end="72:33">=</operator> <name pos:start="72:35" pos:end="72:59"><name pos:start="72:35" pos:end="72:43">predictor</name><index pos:start="72:44" pos:end="72:59">[<expr pos:start="72:45" pos:end="72:58"><name pos:start="72:45" pos:end="72:58">channel_number</name></expr>]</index></name></expr>;</expr_stmt>



            <comment type="block" pos:start="76:13" pos:end="76:32">/* toggle channel */</comment>

            <expr_stmt pos:start="78:13" pos:end="78:46"><expr pos:start="78:13" pos:end="78:45"><name pos:start="78:13" pos:end="78:26">channel_number</name> <operator pos:start="78:28" pos:end="78:29">^=</operator> <name pos:start="78:31" pos:end="78:41"><name pos:start="78:31" pos:end="78:31">s</name><operator pos:start="78:32" pos:end="78:33">-&gt;</operator><name pos:start="78:34" pos:end="78:41">channels</name></name> <operator pos:start="78:43" pos:end="78:43">-</operator> <literal type="number" pos:start="78:45" pos:end="78:45">1</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="82:9" pos:end="82:14">break;</break>



    <case pos:start="86:5" pos:end="86:33">case <expr pos:start="86:10" pos:end="86:32"><name pos:start="86:10" pos:end="86:32">CODEC_ID_INTERPLAY_DPCM</name></expr>:</case>

        <expr_stmt pos:start="88:9" pos:end="88:15"><expr pos:start="88:9" pos:end="88:14"><name pos:start="88:9" pos:end="88:10">in</name> <operator pos:start="88:12" pos:end="88:12">=</operator> <literal type="number" pos:start="88:14" pos:end="88:14">6</literal></expr>;</expr_stmt>  <comment type="block" pos:start="88:18" pos:end="88:66">/* skip over the stream mask and stream length */</comment>

        <expr_stmt pos:start="90:9" pos:end="90:41"><expr pos:start="90:9" pos:end="90:40"><name pos:start="90:9" pos:end="90:20"><name pos:start="90:9" pos:end="90:17">predictor</name><index pos:start="90:18" pos:end="90:20">[<expr pos:start="90:19" pos:end="90:19"><literal type="number" pos:start="90:19" pos:end="90:19">0</literal></expr>]</index></name> <operator pos:start="90:22" pos:end="90:22">=</operator> <call pos:start="90:24" pos:end="90:40"><name pos:start="90:24" pos:end="90:30">AV_RL16</name><argument_list pos:start="90:31" pos:end="90:40">(<argument pos:start="90:32" pos:end="90:39"><expr pos:start="90:32" pos:end="90:39"><operator pos:start="90:32" pos:end="90:32">&amp;</operator><name pos:start="90:33" pos:end="90:39"><name pos:start="90:33" pos:end="90:35">buf</name><index pos:start="90:36" pos:end="90:39">[<expr pos:start="90:37" pos:end="90:38"><name pos:start="90:37" pos:end="90:38">in</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="92:9" pos:end="92:16"><expr pos:start="92:9" pos:end="92:15"><name pos:start="92:9" pos:end="92:10">in</name> <operator pos:start="92:12" pos:end="92:13">+=</operator> <literal type="number" pos:start="92:15" pos:end="92:15">2</literal></expr>;</expr_stmt>

        <macro pos:start="94:9" pos:end="94:30"><name pos:start="94:9" pos:end="94:16">SE_16BIT</name><argument_list pos:start="94:17" pos:end="94:30">(<argument pos:start="94:18" pos:end="94:29">predictor[<literal type="number" pos:start="94:28" pos:end="94:28">0</literal>]</argument>)</argument_list></macro>

        <expr_stmt pos:start="96:9" pos:end="96:45"><expr pos:start="96:9" pos:end="96:44"><name pos:start="96:9" pos:end="96:29"><name pos:start="96:9" pos:end="96:22">output_samples</name><index pos:start="96:23" pos:end="96:29">[<expr pos:start="96:24" pos:end="96:28"><name pos:start="96:24" pos:end="96:26">out</name><operator pos:start="96:27" pos:end="96:28">++</operator></expr>]</index></name> <operator pos:start="96:31" pos:end="96:31">=</operator> <name pos:start="96:33" pos:end="96:44"><name pos:start="96:33" pos:end="96:41">predictor</name><index pos:start="96:42" pos:end="96:44">[<expr pos:start="96:43" pos:end="96:43"><literal type="number" pos:start="96:43" pos:end="96:43">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="98:9" pos:end="108:9"><if pos:start="98:9" pos:end="108:9">if <condition pos:start="98:12" pos:end="98:29">(<expr pos:start="98:13" pos:end="98:28"><name pos:start="98:13" pos:end="98:23"><name pos:start="98:13" pos:end="98:13">s</name><operator pos:start="98:14" pos:end="98:15">-&gt;</operator><name pos:start="98:16" pos:end="98:23">channels</name></name> <operator pos:start="98:25" pos:end="98:26">==</operator> <literal type="number" pos:start="98:28" pos:end="98:28">2</literal></expr>)</condition> <block pos:start="98:31" pos:end="108:9">{<block_content pos:start="100:13" pos:end="106:49">

            <expr_stmt pos:start="100:13" pos:end="100:45"><expr pos:start="100:13" pos:end="100:44"><name pos:start="100:13" pos:end="100:24"><name pos:start="100:13" pos:end="100:21">predictor</name><index pos:start="100:22" pos:end="100:24">[<expr pos:start="100:23" pos:end="100:23"><literal type="number" pos:start="100:23" pos:end="100:23">1</literal></expr>]</index></name> <operator pos:start="100:26" pos:end="100:26">=</operator> <call pos:start="100:28" pos:end="100:44"><name pos:start="100:28" pos:end="100:34">AV_RL16</name><argument_list pos:start="100:35" pos:end="100:44">(<argument pos:start="100:36" pos:end="100:43"><expr pos:start="100:36" pos:end="100:43"><operator pos:start="100:36" pos:end="100:36">&amp;</operator><name pos:start="100:37" pos:end="100:43"><name pos:start="100:37" pos:end="100:39">buf</name><index pos:start="100:40" pos:end="100:43">[<expr pos:start="100:41" pos:end="100:42"><name pos:start="100:41" pos:end="100:42">in</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="102:13" pos:end="102:20"><expr pos:start="102:13" pos:end="102:19"><name pos:start="102:13" pos:end="102:14">in</name> <operator pos:start="102:16" pos:end="102:17">+=</operator> <literal type="number" pos:start="102:19" pos:end="102:19">2</literal></expr>;</expr_stmt>

            <macro pos:start="104:13" pos:end="104:34"><name pos:start="104:13" pos:end="104:20">SE_16BIT</name><argument_list pos:start="104:21" pos:end="104:34">(<argument pos:start="104:22" pos:end="104:33">predictor[<literal type="number" pos:start="104:32" pos:end="104:32">1</literal>]</argument>)</argument_list></macro>

            <expr_stmt pos:start="106:13" pos:end="106:49"><expr pos:start="106:13" pos:end="106:48"><name pos:start="106:13" pos:end="106:33"><name pos:start="106:13" pos:end="106:26">output_samples</name><index pos:start="106:27" pos:end="106:33">[<expr pos:start="106:28" pos:end="106:32"><name pos:start="106:28" pos:end="106:30">out</name><operator pos:start="106:31" pos:end="106:32">++</operator></expr>]</index></name> <operator pos:start="106:35" pos:end="106:35">=</operator> <name pos:start="106:37" pos:end="106:48"><name pos:start="106:37" pos:end="106:45">predictor</name><index pos:start="106:46" pos:end="106:48">[<expr pos:start="106:47" pos:end="106:47"><literal type="number" pos:start="106:47" pos:end="106:47">1</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <while pos:start="112:9" pos:end="126:9">while <condition pos:start="112:15" pos:end="112:29">(<expr pos:start="112:16" pos:end="112:28"><name pos:start="112:16" pos:end="112:17">in</name> <operator pos:start="112:19" pos:end="112:19">&lt;</operator> <name pos:start="112:21" pos:end="112:28">buf_size</name></expr>)</condition> <block pos:start="112:31" pos:end="126:9">{<block_content pos:start="114:13" pos:end="124:46">

            <expr_stmt pos:start="114:13" pos:end="114:74"><expr pos:start="114:13" pos:end="114:73"><name pos:start="114:13" pos:end="114:37"><name pos:start="114:13" pos:end="114:21">predictor</name><index pos:start="114:22" pos:end="114:37">[<expr pos:start="114:23" pos:end="114:36"><name pos:start="114:23" pos:end="114:36">channel_number</name></expr>]</index></name> <operator pos:start="114:39" pos:end="114:40">+=</operator> <name pos:start="114:42" pos:end="114:73"><name pos:start="114:42" pos:end="114:62">interplay_delta_table</name><index pos:start="114:63" pos:end="114:73">[<expr pos:start="114:64" pos:end="114:72"><name pos:start="114:64" pos:end="114:72"><name pos:start="114:64" pos:end="114:66">buf</name><index pos:start="114:67" pos:end="114:72">[<expr pos:start="114:68" pos:end="114:71"><name pos:start="114:68" pos:end="114:69">in</name><operator pos:start="114:70" pos:end="114:71">++</operator></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="116:13" pos:end="116:81"><expr pos:start="116:13" pos:end="116:80"><name pos:start="116:13" pos:end="116:37"><name pos:start="116:13" pos:end="116:21">predictor</name><index pos:start="116:22" pos:end="116:37">[<expr pos:start="116:23" pos:end="116:36"><name pos:start="116:23" pos:end="116:36">channel_number</name></expr>]</index></name> <operator pos:start="116:39" pos:end="116:39">=</operator> <call pos:start="116:41" pos:end="116:80"><name pos:start="116:41" pos:end="116:53">av_clip_int16</name><argument_list pos:start="116:54" pos:end="116:80">(<argument pos:start="116:55" pos:end="116:79"><expr pos:start="116:55" pos:end="116:79"><name pos:start="116:55" pos:end="116:79"><name pos:start="116:55" pos:end="116:63">predictor</name><index pos:start="116:64" pos:end="116:79">[<expr pos:start="116:65" pos:end="116:78"><name pos:start="116:65" pos:end="116:78">channel_number</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="118:13" pos:end="118:62"><expr pos:start="118:13" pos:end="118:61"><name pos:start="118:13" pos:end="118:33"><name pos:start="118:13" pos:end="118:26">output_samples</name><index pos:start="118:27" pos:end="118:33">[<expr pos:start="118:28" pos:end="118:32"><name pos:start="118:28" pos:end="118:30">out</name><operator pos:start="118:31" pos:end="118:32">++</operator></expr>]</index></name> <operator pos:start="118:35" pos:end="118:35">=</operator> <name pos:start="118:37" pos:end="118:61"><name pos:start="118:37" pos:end="118:45">predictor</name><index pos:start="118:46" pos:end="118:61">[<expr pos:start="118:47" pos:end="118:60"><name pos:start="118:47" pos:end="118:60">channel_number</name></expr>]</index></name></expr>;</expr_stmt>



            <comment type="block" pos:start="122:13" pos:end="122:32">/* toggle channel */</comment>

            <expr_stmt pos:start="124:13" pos:end="124:46"><expr pos:start="124:13" pos:end="124:45"><name pos:start="124:13" pos:end="124:26">channel_number</name> <operator pos:start="124:28" pos:end="124:29">^=</operator> <name pos:start="124:31" pos:end="124:41"><name pos:start="124:31" pos:end="124:31">s</name><operator pos:start="124:32" pos:end="124:33">-&gt;</operator><name pos:start="124:34" pos:end="124:41">channels</name></name> <operator pos:start="124:43" pos:end="124:43">-</operator> <literal type="number" pos:start="124:45" pos:end="124:45">1</literal></expr>;</expr_stmt>

        </block_content>}</block></while>



        <break pos:start="130:9" pos:end="130:14">break;</break>



    <case pos:start="134:5" pos:end="134:27">case <expr pos:start="134:10" pos:end="134:26"><name pos:start="134:10" pos:end="134:26">CODEC_ID_XAN_DPCM</name></expr>:</case>

        <expr_stmt pos:start="136:9" pos:end="136:15"><expr pos:start="136:9" pos:end="136:14"><name pos:start="136:9" pos:end="136:10">in</name> <operator pos:start="136:12" pos:end="136:12">=</operator> <literal type="number" pos:start="136:14" pos:end="136:14">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="138:9" pos:end="138:32"><expr pos:start="138:9" pos:end="138:31"><name pos:start="138:9" pos:end="138:16"><name pos:start="138:9" pos:end="138:13">shift</name><index pos:start="138:14" pos:end="138:16">[<expr pos:start="138:15" pos:end="138:15"><literal type="number" pos:start="138:15" pos:end="138:15">0</literal></expr>]</index></name> <operator pos:start="138:18" pos:end="138:18">=</operator> <name pos:start="138:20" pos:end="138:27"><name pos:start="138:20" pos:end="138:24">shift</name><index pos:start="138:25" pos:end="138:27">[<expr pos:start="138:26" pos:end="138:26"><literal type="number" pos:start="138:26" pos:end="138:26">1</literal></expr>]</index></name> <operator pos:start="138:29" pos:end="138:29">=</operator> <literal type="number" pos:start="138:31" pos:end="138:31">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="140:9" pos:end="140:41"><expr pos:start="140:9" pos:end="140:40"><name pos:start="140:9" pos:end="140:20"><name pos:start="140:9" pos:end="140:17">predictor</name><index pos:start="140:18" pos:end="140:20">[<expr pos:start="140:19" pos:end="140:19"><literal type="number" pos:start="140:19" pos:end="140:19">0</literal></expr>]</index></name> <operator pos:start="140:22" pos:end="140:22">=</operator> <call pos:start="140:24" pos:end="140:40"><name pos:start="140:24" pos:end="140:30">AV_RL16</name><argument_list pos:start="140:31" pos:end="140:40">(<argument pos:start="140:32" pos:end="140:39"><expr pos:start="140:32" pos:end="140:39"><operator pos:start="140:32" pos:end="140:32">&amp;</operator><name pos:start="140:33" pos:end="140:39"><name pos:start="140:33" pos:end="140:35">buf</name><index pos:start="140:36" pos:end="140:39">[<expr pos:start="140:37" pos:end="140:38"><name pos:start="140:37" pos:end="140:38">in</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="142:9" pos:end="142:16"><expr pos:start="142:9" pos:end="142:15"><name pos:start="142:9" pos:end="142:10">in</name> <operator pos:start="142:12" pos:end="142:13">+=</operator> <literal type="number" pos:start="142:15" pos:end="142:15">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="144:9" pos:end="144:31"><expr pos:start="144:9" pos:end="144:30"><call pos:start="144:9" pos:end="144:30"><name pos:start="144:9" pos:end="144:16">SE_16BIT</name><argument_list pos:start="144:17" pos:end="144:30">(<argument pos:start="144:18" pos:end="144:29"><expr pos:start="144:18" pos:end="144:29"><name pos:start="144:18" pos:end="144:29"><name pos:start="144:18" pos:end="144:26">predictor</name><index pos:start="144:27" pos:end="144:29">[<expr pos:start="144:28" pos:end="144:28"><literal type="number" pos:start="144:28" pos:end="144:28">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="146:9" pos:end="154:9"><if pos:start="146:9" pos:end="154:9">if <condition pos:start="146:12" pos:end="146:29">(<expr pos:start="146:13" pos:end="146:28"><name pos:start="146:13" pos:end="146:23"><name pos:start="146:13" pos:end="146:13">s</name><operator pos:start="146:14" pos:end="146:15">-&gt;</operator><name pos:start="146:16" pos:end="146:23">channels</name></name> <operator pos:start="146:25" pos:end="146:26">==</operator> <literal type="number" pos:start="146:28" pos:end="146:28">2</literal></expr>)</condition> <block pos:start="146:31" pos:end="154:9">{<block_content pos:start="148:13" pos:end="152:35">

            <expr_stmt pos:start="148:13" pos:end="148:45"><expr pos:start="148:13" pos:end="148:44"><name pos:start="148:13" pos:end="148:24"><name pos:start="148:13" pos:end="148:21">predictor</name><index pos:start="148:22" pos:end="148:24">[<expr pos:start="148:23" pos:end="148:23"><literal type="number" pos:start="148:23" pos:end="148:23">1</literal></expr>]</index></name> <operator pos:start="148:26" pos:end="148:26">=</operator> <call pos:start="148:28" pos:end="148:44"><name pos:start="148:28" pos:end="148:34">AV_RL16</name><argument_list pos:start="148:35" pos:end="148:44">(<argument pos:start="148:36" pos:end="148:43"><expr pos:start="148:36" pos:end="148:43"><operator pos:start="148:36" pos:end="148:36">&amp;</operator><name pos:start="148:37" pos:end="148:43"><name pos:start="148:37" pos:end="148:39">buf</name><index pos:start="148:40" pos:end="148:43">[<expr pos:start="148:41" pos:end="148:42"><name pos:start="148:41" pos:end="148:42">in</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="150:13" pos:end="150:20"><expr pos:start="150:13" pos:end="150:19"><name pos:start="150:13" pos:end="150:14">in</name> <operator pos:start="150:16" pos:end="150:17">+=</operator> <literal type="number" pos:start="150:19" pos:end="150:19">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="152:13" pos:end="152:35"><expr pos:start="152:13" pos:end="152:34"><call pos:start="152:13" pos:end="152:34"><name pos:start="152:13" pos:end="152:20">SE_16BIT</name><argument_list pos:start="152:21" pos:end="152:34">(<argument pos:start="152:22" pos:end="152:33"><expr pos:start="152:22" pos:end="152:33"><name pos:start="152:22" pos:end="152:33"><name pos:start="152:22" pos:end="152:30">predictor</name><index pos:start="152:31" pos:end="152:33">[<expr pos:start="152:32" pos:end="152:32"><literal type="number" pos:start="152:32" pos:end="152:32">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <while pos:start="158:9" pos:end="196:9">while <condition pos:start="158:15" pos:end="158:29">(<expr pos:start="158:16" pos:end="158:28"><name pos:start="158:16" pos:end="158:17">in</name> <operator pos:start="158:19" pos:end="158:19">&lt;</operator> <name pos:start="158:21" pos:end="158:28">buf_size</name></expr>)</condition> <block pos:start="158:31" pos:end="196:9">{<block_content pos:start="160:13" pos:end="194:46">

            <expr_stmt pos:start="160:13" pos:end="160:29"><expr pos:start="160:13" pos:end="160:28"><name pos:start="160:13" pos:end="160:16">byte</name> <operator pos:start="160:18" pos:end="160:18">=</operator> <name pos:start="160:20" pos:end="160:28"><name pos:start="160:20" pos:end="160:22">buf</name><index pos:start="160:23" pos:end="160:28">[<expr pos:start="160:24" pos:end="160:27"><name pos:start="160:24" pos:end="160:25">in</name><operator pos:start="160:26" pos:end="160:27">++</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="162:13" pos:end="162:38"><expr pos:start="162:13" pos:end="162:37"><name pos:start="162:13" pos:end="162:16">diff</name> <operator pos:start="162:18" pos:end="162:18">=</operator> <operator pos:start="162:20" pos:end="162:20">(</operator><name pos:start="162:21" pos:end="162:24">byte</name> <operator pos:start="162:26" pos:end="162:26">&amp;</operator> <literal type="number" pos:start="162:28" pos:end="162:31">0xFC</literal><operator pos:start="162:32" pos:end="162:32">)</operator> <operator pos:start="162:34" pos:end="162:35">&lt;&lt;</operator> <literal type="number" pos:start="162:37" pos:end="162:37">8</literal></expr>;</expr_stmt>

            <if_stmt pos:start="164:13" pos:end="170:58"><if pos:start="164:13" pos:end="166:40">if <condition pos:start="164:16" pos:end="164:35">(<expr pos:start="164:17" pos:end="164:34"><operator pos:start="164:17" pos:end="164:17">(</operator><name pos:start="164:18" pos:end="164:21">byte</name> <operator pos:start="164:23" pos:end="164:23">&amp;</operator> <literal type="number" pos:start="164:25" pos:end="164:28">0x03</literal><operator pos:start="164:29" pos:end="164:29">)</operator> <operator pos:start="164:31" pos:end="164:32">==</operator> <literal type="number" pos:start="164:34" pos:end="164:34">3</literal></expr>)</condition><block type="pseudo" pos:start="166:17" pos:end="166:40"><block_content pos:start="166:17" pos:end="166:40">

                <expr_stmt pos:start="166:17" pos:end="166:40"><expr pos:start="166:17" pos:end="166:39"><name pos:start="166:17" pos:end="166:37"><name pos:start="166:17" pos:end="166:21">shift</name><index pos:start="166:22" pos:end="166:37">[<expr pos:start="166:23" pos:end="166:36"><name pos:start="166:23" pos:end="166:36">channel_number</name></expr>]</index></name><operator pos:start="166:38" pos:end="166:39">++</operator></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="168:13" pos:end="170:58">else<block type="pseudo" pos:start="170:17" pos:end="170:58"><block_content pos:start="170:17" pos:end="170:58">

                <expr_stmt pos:start="170:17" pos:end="170:58"><expr pos:start="170:17" pos:end="170:57"><name pos:start="170:17" pos:end="170:37"><name pos:start="170:17" pos:end="170:21">shift</name><index pos:start="170:22" pos:end="170:37">[<expr pos:start="170:23" pos:end="170:36"><name pos:start="170:23" pos:end="170:36">channel_number</name></expr>]</index></name> <operator pos:start="170:39" pos:end="170:40">-=</operator> <operator pos:start="170:42" pos:end="170:42">(</operator><literal type="number" pos:start="170:43" pos:end="170:43">2</literal> <operator pos:start="170:45" pos:end="170:45">*</operator> <operator pos:start="170:47" pos:end="170:47">(</operator><name pos:start="170:48" pos:end="170:51">byte</name> <operator pos:start="170:53" pos:end="170:53">&amp;</operator> <literal type="number" pos:start="170:55" pos:end="170:55">3</literal><operator pos:start="170:56" pos:end="170:56">)</operator><operator pos:start="170:57" pos:end="170:57">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <comment type="block" pos:start="172:13" pos:end="172:60">/* saturate the shifter to a lower limit of 0 */</comment>

            <if_stmt pos:start="174:13" pos:end="176:42"><if pos:start="174:13" pos:end="176:42">if <condition pos:start="174:16" pos:end="174:42">(<expr pos:start="174:17" pos:end="174:41"><name pos:start="174:17" pos:end="174:37"><name pos:start="174:17" pos:end="174:21">shift</name><index pos:start="174:22" pos:end="174:37">[<expr pos:start="174:23" pos:end="174:36"><name pos:start="174:23" pos:end="174:36">channel_number</name></expr>]</index></name> <operator pos:start="174:39" pos:end="174:39">&lt;</operator> <literal type="number" pos:start="174:41" pos:end="174:41">0</literal></expr>)</condition><block type="pseudo" pos:start="176:17" pos:end="176:42"><block_content pos:start="176:17" pos:end="176:42">

                <expr_stmt pos:start="176:17" pos:end="176:42"><expr pos:start="176:17" pos:end="176:41"><name pos:start="176:17" pos:end="176:37"><name pos:start="176:17" pos:end="176:21">shift</name><index pos:start="176:22" pos:end="176:37">[<expr pos:start="176:23" pos:end="176:36"><name pos:start="176:23" pos:end="176:36">channel_number</name></expr>]</index></name> <operator pos:start="176:39" pos:end="176:39">=</operator> <literal type="number" pos:start="176:41" pos:end="176:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="180:13" pos:end="180:43"><expr pos:start="180:13" pos:end="180:42"><name pos:start="180:13" pos:end="180:16">diff</name> <operator pos:start="180:18" pos:end="180:20">&gt;&gt;=</operator> <name pos:start="180:22" pos:end="180:42"><name pos:start="180:22" pos:end="180:26">shift</name><index pos:start="180:27" pos:end="180:42">[<expr pos:start="180:28" pos:end="180:41"><name pos:start="180:28" pos:end="180:41">channel_number</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="182:13" pos:end="182:46"><expr pos:start="182:13" pos:end="182:45"><name pos:start="182:13" pos:end="182:37"><name pos:start="182:13" pos:end="182:21">predictor</name><index pos:start="182:22" pos:end="182:37">[<expr pos:start="182:23" pos:end="182:36"><name pos:start="182:23" pos:end="182:36">channel_number</name></expr>]</index></name> <operator pos:start="182:39" pos:end="182:40">+=</operator> <name pos:start="182:42" pos:end="182:45">diff</name></expr>;</expr_stmt>



            <expr_stmt pos:start="186:13" pos:end="186:81"><expr pos:start="186:13" pos:end="186:80"><name pos:start="186:13" pos:end="186:37"><name pos:start="186:13" pos:end="186:21">predictor</name><index pos:start="186:22" pos:end="186:37">[<expr pos:start="186:23" pos:end="186:36"><name pos:start="186:23" pos:end="186:36">channel_number</name></expr>]</index></name> <operator pos:start="186:39" pos:end="186:39">=</operator> <call pos:start="186:41" pos:end="186:80"><name pos:start="186:41" pos:end="186:53">av_clip_int16</name><argument_list pos:start="186:54" pos:end="186:80">(<argument pos:start="186:55" pos:end="186:79"><expr pos:start="186:55" pos:end="186:79"><name pos:start="186:55" pos:end="186:79"><name pos:start="186:55" pos:end="186:63">predictor</name><index pos:start="186:64" pos:end="186:79">[<expr pos:start="186:65" pos:end="186:78"><name pos:start="186:65" pos:end="186:78">channel_number</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="188:13" pos:end="188:62"><expr pos:start="188:13" pos:end="188:61"><name pos:start="188:13" pos:end="188:33"><name pos:start="188:13" pos:end="188:26">output_samples</name><index pos:start="188:27" pos:end="188:33">[<expr pos:start="188:28" pos:end="188:32"><name pos:start="188:28" pos:end="188:30">out</name><operator pos:start="188:31" pos:end="188:32">++</operator></expr>]</index></name> <operator pos:start="188:35" pos:end="188:35">=</operator> <name pos:start="188:37" pos:end="188:61"><name pos:start="188:37" pos:end="188:45">predictor</name><index pos:start="188:46" pos:end="188:61">[<expr pos:start="188:47" pos:end="188:60"><name pos:start="188:47" pos:end="188:60">channel_number</name></expr>]</index></name></expr>;</expr_stmt>



            <comment type="block" pos:start="192:13" pos:end="192:32">/* toggle channel */</comment>

            <expr_stmt pos:start="194:13" pos:end="194:46"><expr pos:start="194:13" pos:end="194:45"><name pos:start="194:13" pos:end="194:26">channel_number</name> <operator pos:start="194:28" pos:end="194:29">^=</operator> <name pos:start="194:31" pos:end="194:41"><name pos:start="194:31" pos:end="194:31">s</name><operator pos:start="194:32" pos:end="194:33">-&gt;</operator><name pos:start="194:34" pos:end="194:41">channels</name></name> <operator pos:start="194:43" pos:end="194:43">-</operator> <literal type="number" pos:start="194:45" pos:end="194:45">1</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

        <break pos:start="198:9" pos:end="198:14">break;</break>

    <case pos:start="200:5" pos:end="200:27">case <expr pos:start="200:10" pos:end="200:26"><name pos:start="200:10" pos:end="200:26">CODEC_ID_SOL_DPCM</name></expr>:</case>

        <expr_stmt pos:start="202:9" pos:end="202:15"><expr pos:start="202:9" pos:end="202:14"><name pos:start="202:9" pos:end="202:10">in</name> <operator pos:start="202:12" pos:end="202:12">=</operator> <literal type="number" pos:start="202:14" pos:end="202:14">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="204:9" pos:end="256:9"><if pos:start="204:9" pos:end="234:9">if <condition pos:start="204:12" pos:end="204:34">(<expr pos:start="204:13" pos:end="204:33"><name pos:start="204:13" pos:end="204:28"><name pos:start="204:13" pos:end="204:17">avctx</name><operator pos:start="204:18" pos:end="204:19">-&gt;</operator><name pos:start="204:20" pos:end="204:28">codec_tag</name></name> <operator pos:start="204:30" pos:end="204:31">!=</operator> <literal type="number" pos:start="204:33" pos:end="204:33">3</literal></expr>)</condition> <block pos:start="204:36" pos:end="234:9">{<block_content pos:start="208:13" pos:end="232:13">



            <while pos:start="208:13" pos:end="232:13">while <condition pos:start="208:19" pos:end="208:33">(<expr pos:start="208:20" pos:end="208:32"><name pos:start="208:20" pos:end="208:21">in</name> <operator pos:start="208:23" pos:end="208:23">&lt;</operator> <name pos:start="208:25" pos:end="208:32">buf_size</name></expr>)</condition> <block pos:start="208:35" pos:end="232:13">{<block_content pos:start="210:17" pos:end="230:80">

                <decl_stmt pos:start="210:17" pos:end="210:27"><decl pos:start="210:17" pos:end="210:22"><type pos:start="210:17" pos:end="210:19"><name pos:start="210:17" pos:end="210:19">int</name></type> <name pos:start="210:21" pos:end="210:22">n1</name></decl>, <decl pos:start="210:25" pos:end="210:26"><type ref="prev" pos:start="210:17" pos:end="210:19"/><name pos:start="210:25" pos:end="210:26">n2</name></decl>;</decl_stmt>

                <expr_stmt pos:start="212:17" pos:end="212:42"><expr pos:start="212:17" pos:end="212:41"><name pos:start="212:17" pos:end="212:18">n1</name> <operator pos:start="212:20" pos:end="212:20">=</operator> <operator pos:start="212:22" pos:end="212:22">(</operator><name pos:start="212:23" pos:end="212:29"><name pos:start="212:23" pos:end="212:25">buf</name><index pos:start="212:26" pos:end="212:29">[<expr pos:start="212:27" pos:end="212:28"><name pos:start="212:27" pos:end="212:28">in</name></expr>]</index></name> <operator pos:start="212:31" pos:end="212:32">&gt;&gt;</operator> <literal type="number" pos:start="212:34" pos:end="212:34">4</literal><operator pos:start="212:35" pos:end="212:35">)</operator> <operator pos:start="212:37" pos:end="212:37">&amp;</operator> <literal type="number" pos:start="212:39" pos:end="212:41">0xF</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="214:17" pos:end="214:37"><expr pos:start="214:17" pos:end="214:36"><name pos:start="214:17" pos:end="214:18">n2</name> <operator pos:start="214:20" pos:end="214:20">=</operator> <name pos:start="214:22" pos:end="214:30"><name pos:start="214:22" pos:end="214:24">buf</name><index pos:start="214:25" pos:end="214:30">[<expr pos:start="214:26" pos:end="214:29"><name pos:start="214:26" pos:end="214:27">in</name><operator pos:start="214:28" pos:end="214:29">++</operator></expr>]</index></name> <operator pos:start="214:32" pos:end="214:32">&amp;</operator> <literal type="number" pos:start="214:34" pos:end="214:36">0xF</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="216:17" pos:end="216:49"><expr pos:start="216:17" pos:end="216:48"><name pos:start="216:17" pos:end="216:28"><name pos:start="216:17" pos:end="216:17">s</name><operator pos:start="216:18" pos:end="216:19">-&gt;</operator><name pos:start="216:20" pos:end="216:25">sample</name><index pos:start="216:26" pos:end="216:28">[<expr pos:start="216:27" pos:end="216:27"><literal type="number" pos:start="216:27" pos:end="216:27">0</literal></expr>]</index></name> <operator pos:start="216:30" pos:end="216:31">+=</operator> <name pos:start="216:33" pos:end="216:48"><name pos:start="216:33" pos:end="216:33">s</name><operator pos:start="216:34" pos:end="216:35">-&gt;</operator><name pos:start="216:36" pos:end="216:44">sol_table</name><index pos:start="216:45" pos:end="216:48">[<expr pos:start="216:46" pos:end="216:47"><name pos:start="216:46" pos:end="216:47">n1</name></expr>]</index></name></expr>;</expr_stmt>

                 <if_stmt pos:start="218:18" pos:end="218:56"><if pos:start="218:18" pos:end="218:56">if <condition pos:start="218:21" pos:end="218:38">(<expr pos:start="218:22" pos:end="218:37"><name pos:start="218:22" pos:end="218:33"><name pos:start="218:22" pos:end="218:22">s</name><operator pos:start="218:23" pos:end="218:24">-&gt;</operator><name pos:start="218:25" pos:end="218:30">sample</name><index pos:start="218:31" pos:end="218:33">[<expr pos:start="218:32" pos:end="218:32"><literal type="number" pos:start="218:32" pos:end="218:32">0</literal></expr>]</index></name> <operator pos:start="218:35" pos:end="218:35">&lt;</operator> <literal type="number" pos:start="218:37" pos:end="218:37">0</literal></expr>)</condition><block type="pseudo" pos:start="218:40" pos:end="218:56"><block_content pos:start="218:40" pos:end="218:56"> <expr_stmt pos:start="218:40" pos:end="218:56"><expr pos:start="218:40" pos:end="218:55"><name pos:start="218:40" pos:end="218:51"><name pos:start="218:40" pos:end="218:40">s</name><operator pos:start="218:41" pos:end="218:42">-&gt;</operator><name pos:start="218:43" pos:end="218:48">sample</name><index pos:start="218:49" pos:end="218:51">[<expr pos:start="218:50" pos:end="218:50"><literal type="number" pos:start="218:50" pos:end="218:50">0</literal></expr>]</index></name> <operator pos:start="218:53" pos:end="218:53">=</operator> <literal type="number" pos:start="218:55" pos:end="218:55">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="220:17" pos:end="220:59"><if pos:start="220:17" pos:end="220:59">if <condition pos:start="220:20" pos:end="220:39">(<expr pos:start="220:21" pos:end="220:38"><name pos:start="220:21" pos:end="220:32"><name pos:start="220:21" pos:end="220:21">s</name><operator pos:start="220:22" pos:end="220:23">-&gt;</operator><name pos:start="220:24" pos:end="220:29">sample</name><index pos:start="220:30" pos:end="220:32">[<expr pos:start="220:31" pos:end="220:31"><literal type="number" pos:start="220:31" pos:end="220:31">0</literal></expr>]</index></name> <operator pos:start="220:34" pos:end="220:34">&gt;</operator> <literal type="number" pos:start="220:36" pos:end="220:38">255</literal></expr>)</condition><block type="pseudo" pos:start="220:41" pos:end="220:59"><block_content pos:start="220:41" pos:end="220:59"> <expr_stmt pos:start="220:41" pos:end="220:59"><expr pos:start="220:41" pos:end="220:58"><name pos:start="220:41" pos:end="220:52"><name pos:start="220:41" pos:end="220:41">s</name><operator pos:start="220:42" pos:end="220:43">-&gt;</operator><name pos:start="220:44" pos:end="220:49">sample</name><index pos:start="220:50" pos:end="220:52">[<expr pos:start="220:51" pos:end="220:51"><literal type="number" pos:start="220:51" pos:end="220:51">0</literal></expr>]</index></name> <operator pos:start="220:54" pos:end="220:54">=</operator> <literal type="number" pos:start="220:56" pos:end="220:58">255</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="222:17" pos:end="222:66"><expr pos:start="222:17" pos:end="222:65"><name pos:start="222:17" pos:end="222:37"><name pos:start="222:17" pos:end="222:30">output_samples</name><index pos:start="222:31" pos:end="222:37">[<expr pos:start="222:32" pos:end="222:36"><name pos:start="222:32" pos:end="222:34">out</name><operator pos:start="222:35" pos:end="222:36">++</operator></expr>]</index></name> <operator pos:start="222:39" pos:end="222:39">=</operator> <operator pos:start="222:41" pos:end="222:41">(</operator><name pos:start="222:42" pos:end="222:53"><name pos:start="222:42" pos:end="222:42">s</name><operator pos:start="222:43" pos:end="222:44">-&gt;</operator><name pos:start="222:45" pos:end="222:50">sample</name><index pos:start="222:51" pos:end="222:53">[<expr pos:start="222:52" pos:end="222:52"><literal type="number" pos:start="222:52" pos:end="222:52">0</literal></expr>]</index></name> <operator pos:start="222:55" pos:end="222:55">-</operator> <literal type="number" pos:start="222:57" pos:end="222:59">128</literal><operator pos:start="222:60" pos:end="222:60">)</operator> <operator pos:start="222:62" pos:end="222:63">&lt;&lt;</operator> <literal type="number" pos:start="222:65" pos:end="222:65">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="224:17" pos:end="224:63"><expr pos:start="224:17" pos:end="224:62"><name pos:start="224:17" pos:end="224:42"><name pos:start="224:17" pos:end="224:17">s</name><operator pos:start="224:18" pos:end="224:19">-&gt;</operator><name pos:start="224:20" pos:end="224:25">sample</name><index pos:start="224:26" pos:end="224:42">[<expr pos:start="224:27" pos:end="224:41"><name pos:start="224:27" pos:end="224:37"><name pos:start="224:27" pos:end="224:27">s</name><operator pos:start="224:28" pos:end="224:29">-&gt;</operator><name pos:start="224:30" pos:end="224:37">channels</name></name> <operator pos:start="224:39" pos:end="224:39">-</operator> <literal type="number" pos:start="224:41" pos:end="224:41">1</literal></expr>]</index></name> <operator pos:start="224:44" pos:end="224:45">+=</operator> <name pos:start="224:47" pos:end="224:62"><name pos:start="224:47" pos:end="224:47">s</name><operator pos:start="224:48" pos:end="224:49">-&gt;</operator><name pos:start="224:50" pos:end="224:58">sol_table</name><index pos:start="224:59" pos:end="224:62">[<expr pos:start="224:60" pos:end="224:61"><name pos:start="224:60" pos:end="224:61">n2</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="226:17" pos:end="226:83"><if pos:start="226:17" pos:end="226:83">if <condition pos:start="226:20" pos:end="226:51">(<expr pos:start="226:21" pos:end="226:50"><name pos:start="226:21" pos:end="226:46"><name pos:start="226:21" pos:end="226:21">s</name><operator pos:start="226:22" pos:end="226:23">-&gt;</operator><name pos:start="226:24" pos:end="226:29">sample</name><index pos:start="226:30" pos:end="226:46">[<expr pos:start="226:31" pos:end="226:45"><name pos:start="226:31" pos:end="226:41"><name pos:start="226:31" pos:end="226:31">s</name><operator pos:start="226:32" pos:end="226:33">-&gt;</operator><name pos:start="226:34" pos:end="226:41">channels</name></name> <operator pos:start="226:43" pos:end="226:43">-</operator> <literal type="number" pos:start="226:45" pos:end="226:45">1</literal></expr>]</index></name> <operator pos:start="226:48" pos:end="226:48">&lt;</operator> <literal type="number" pos:start="226:50" pos:end="226:50">0</literal></expr>)</condition><block type="pseudo" pos:start="226:53" pos:end="226:83"><block_content pos:start="226:53" pos:end="226:83"> <expr_stmt pos:start="226:53" pos:end="226:83"><expr pos:start="226:53" pos:end="226:82"><name pos:start="226:53" pos:end="226:78"><name pos:start="226:53" pos:end="226:53">s</name><operator pos:start="226:54" pos:end="226:55">-&gt;</operator><name pos:start="226:56" pos:end="226:61">sample</name><index pos:start="226:62" pos:end="226:78">[<expr pos:start="226:63" pos:end="226:77"><name pos:start="226:63" pos:end="226:73"><name pos:start="226:63" pos:end="226:63">s</name><operator pos:start="226:64" pos:end="226:65">-&gt;</operator><name pos:start="226:66" pos:end="226:73">channels</name></name> <operator pos:start="226:75" pos:end="226:75">-</operator> <literal type="number" pos:start="226:77" pos:end="226:77">1</literal></expr>]</index></name> <operator pos:start="226:80" pos:end="226:80">=</operator> <literal type="number" pos:start="226:82" pos:end="226:82">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="228:17" pos:end="228:87"><if pos:start="228:17" pos:end="228:87">if <condition pos:start="228:20" pos:end="228:53">(<expr pos:start="228:21" pos:end="228:52"><name pos:start="228:21" pos:end="228:46"><name pos:start="228:21" pos:end="228:21">s</name><operator pos:start="228:22" pos:end="228:23">-&gt;</operator><name pos:start="228:24" pos:end="228:29">sample</name><index pos:start="228:30" pos:end="228:46">[<expr pos:start="228:31" pos:end="228:45"><name pos:start="228:31" pos:end="228:41"><name pos:start="228:31" pos:end="228:31">s</name><operator pos:start="228:32" pos:end="228:33">-&gt;</operator><name pos:start="228:34" pos:end="228:41">channels</name></name> <operator pos:start="228:43" pos:end="228:43">-</operator> <literal type="number" pos:start="228:45" pos:end="228:45">1</literal></expr>]</index></name> <operator pos:start="228:48" pos:end="228:48">&gt;</operator> <literal type="number" pos:start="228:50" pos:end="228:52">255</literal></expr>)</condition><block type="pseudo" pos:start="228:55" pos:end="228:87"><block_content pos:start="228:55" pos:end="228:87"> <expr_stmt pos:start="228:55" pos:end="228:87"><expr pos:start="228:55" pos:end="228:86"><name pos:start="228:55" pos:end="228:80"><name pos:start="228:55" pos:end="228:55">s</name><operator pos:start="228:56" pos:end="228:57">-&gt;</operator><name pos:start="228:58" pos:end="228:63">sample</name><index pos:start="228:64" pos:end="228:80">[<expr pos:start="228:65" pos:end="228:79"><name pos:start="228:65" pos:end="228:75"><name pos:start="228:65" pos:end="228:65">s</name><operator pos:start="228:66" pos:end="228:67">-&gt;</operator><name pos:start="228:68" pos:end="228:75">channels</name></name> <operator pos:start="228:77" pos:end="228:77">-</operator> <literal type="number" pos:start="228:79" pos:end="228:79">1</literal></expr>]</index></name> <operator pos:start="228:82" pos:end="228:82">=</operator> <literal type="number" pos:start="228:84" pos:end="228:86">255</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="230:17" pos:end="230:80"><expr pos:start="230:17" pos:end="230:79"><name pos:start="230:17" pos:end="230:37"><name pos:start="230:17" pos:end="230:30">output_samples</name><index pos:start="230:31" pos:end="230:37">[<expr pos:start="230:32" pos:end="230:36"><name pos:start="230:32" pos:end="230:34">out</name><operator pos:start="230:35" pos:end="230:36">++</operator></expr>]</index></name> <operator pos:start="230:39" pos:end="230:39">=</operator> <operator pos:start="230:41" pos:end="230:41">(</operator><name pos:start="230:42" pos:end="230:67"><name pos:start="230:42" pos:end="230:42">s</name><operator pos:start="230:43" pos:end="230:44">-&gt;</operator><name pos:start="230:45" pos:end="230:50">sample</name><index pos:start="230:51" pos:end="230:67">[<expr pos:start="230:52" pos:end="230:66"><name pos:start="230:52" pos:end="230:62"><name pos:start="230:52" pos:end="230:52">s</name><operator pos:start="230:53" pos:end="230:54">-&gt;</operator><name pos:start="230:55" pos:end="230:62">channels</name></name> <operator pos:start="230:64" pos:end="230:64">-</operator> <literal type="number" pos:start="230:66" pos:end="230:66">1</literal></expr>]</index></name> <operator pos:start="230:69" pos:end="230:69">-</operator> <literal type="number" pos:start="230:71" pos:end="230:73">128</literal><operator pos:start="230:74" pos:end="230:74">)</operator> <operator pos:start="230:76" pos:end="230:77">&lt;&lt;</operator> <literal type="number" pos:start="230:79" pos:end="230:79">8</literal></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></if> <else pos:start="234:11" pos:end="256:9">else <block pos:start="234:16" pos:end="256:9">{<block_content pos:start="236:13" pos:end="254:13">

            <while pos:start="236:13" pos:end="254:13">while <condition pos:start="236:19" pos:end="236:33">(<expr pos:start="236:20" pos:end="236:32"><name pos:start="236:20" pos:end="236:21">in</name> <operator pos:start="236:23" pos:end="236:23">&lt;</operator> <name pos:start="236:25" pos:end="236:32">buf_size</name></expr>)</condition> <block pos:start="236:35" pos:end="254:13">{<block_content pos:start="238:17" pos:end="252:50">

                <decl_stmt pos:start="238:17" pos:end="238:22"><decl pos:start="238:17" pos:end="238:21"><type pos:start="238:17" pos:end="238:19"><name pos:start="238:17" pos:end="238:19">int</name></type> <name pos:start="238:21" pos:end="238:21">n</name></decl>;</decl_stmt>

                <expr_stmt pos:start="240:17" pos:end="240:30"><expr pos:start="240:17" pos:end="240:29"><name pos:start="240:17" pos:end="240:17">n</name> <operator pos:start="240:19" pos:end="240:19">=</operator> <name pos:start="240:21" pos:end="240:29"><name pos:start="240:21" pos:end="240:23">buf</name><index pos:start="240:24" pos:end="240:29">[<expr pos:start="240:25" pos:end="240:28"><name pos:start="240:25" pos:end="240:26">in</name><operator pos:start="240:27" pos:end="240:28">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="242:17" pos:end="244:73"><if pos:start="242:17" pos:end="242:82">if <condition pos:start="242:20" pos:end="242:29">(<expr pos:start="242:21" pos:end="242:28"><name pos:start="242:21" pos:end="242:21">n</name> <operator pos:start="242:23" pos:end="242:23">&amp;</operator> <literal type="number" pos:start="242:25" pos:end="242:28">0x80</literal></expr>)</condition><block type="pseudo" pos:start="242:31" pos:end="242:82"><block_content pos:start="242:31" pos:end="242:82"> <expr_stmt pos:start="242:31" pos:end="242:82"><expr pos:start="242:31" pos:end="242:81"><name pos:start="242:31" pos:end="242:55"><name pos:start="242:31" pos:end="242:31">s</name><operator pos:start="242:32" pos:end="242:33">-&gt;</operator><name pos:start="242:34" pos:end="242:39">sample</name><index pos:start="242:40" pos:end="242:55">[<expr pos:start="242:41" pos:end="242:54"><name pos:start="242:41" pos:end="242:54">channel_number</name></expr>]</index></name> <operator pos:start="242:57" pos:end="242:58">-=</operator> <name pos:start="242:60" pos:end="242:81"><name pos:start="242:60" pos:end="242:60">s</name><operator pos:start="242:61" pos:end="242:62">-&gt;</operator><name pos:start="242:63" pos:end="242:71">sol_table</name><index pos:start="242:72" pos:end="242:81">[<expr pos:start="242:73" pos:end="242:80"><name pos:start="242:73" pos:end="242:73">n</name> <operator pos:start="242:75" pos:end="242:75">&amp;</operator> <literal type="number" pos:start="242:77" pos:end="242:80">0x7F</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="244:17" pos:end="244:73">else<block type="pseudo" pos:start="244:22" pos:end="244:73"><block_content pos:start="244:22" pos:end="244:73"> <expr_stmt pos:start="244:22" pos:end="244:73"><expr pos:start="244:22" pos:end="244:72"><name pos:start="244:22" pos:end="244:46"><name pos:start="244:22" pos:end="244:22">s</name><operator pos:start="244:23" pos:end="244:24">-&gt;</operator><name pos:start="244:25" pos:end="244:30">sample</name><index pos:start="244:31" pos:end="244:46">[<expr pos:start="244:32" pos:end="244:45"><name pos:start="244:32" pos:end="244:45">channel_number</name></expr>]</index></name> <operator pos:start="244:48" pos:end="244:49">+=</operator> <name pos:start="244:51" pos:end="244:72"><name pos:start="244:51" pos:end="244:51">s</name><operator pos:start="244:52" pos:end="244:53">-&gt;</operator><name pos:start="244:54" pos:end="244:62">sol_table</name><index pos:start="244:63" pos:end="244:72">[<expr pos:start="244:64" pos:end="244:71"><name pos:start="244:64" pos:end="244:64">n</name> <operator pos:start="244:66" pos:end="244:66">&amp;</operator> <literal type="number" pos:start="244:68" pos:end="244:71">0x7F</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="246:17" pos:end="246:85"><expr pos:start="246:17" pos:end="246:84"><name pos:start="246:17" pos:end="246:41"><name pos:start="246:17" pos:end="246:17">s</name><operator pos:start="246:18" pos:end="246:19">-&gt;</operator><name pos:start="246:20" pos:end="246:25">sample</name><index pos:start="246:26" pos:end="246:41">[<expr pos:start="246:27" pos:end="246:40"><name pos:start="246:27" pos:end="246:40">channel_number</name></expr>]</index></name> <operator pos:start="246:43" pos:end="246:43">=</operator> <call pos:start="246:45" pos:end="246:84"><name pos:start="246:45" pos:end="246:57">av_clip_int16</name><argument_list pos:start="246:58" pos:end="246:84">(<argument pos:start="246:59" pos:end="246:83"><expr pos:start="246:59" pos:end="246:83"><name pos:start="246:59" pos:end="246:83"><name pos:start="246:59" pos:end="246:59">s</name><operator pos:start="246:60" pos:end="246:61">-&gt;</operator><name pos:start="246:62" pos:end="246:67">sample</name><index pos:start="246:68" pos:end="246:83">[<expr pos:start="246:69" pos:end="246:82"><name pos:start="246:69" pos:end="246:82">channel_number</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="248:17" pos:end="248:66"><expr pos:start="248:17" pos:end="248:65"><name pos:start="248:17" pos:end="248:37"><name pos:start="248:17" pos:end="248:30">output_samples</name><index pos:start="248:31" pos:end="248:37">[<expr pos:start="248:32" pos:end="248:36"><name pos:start="248:32" pos:end="248:34">out</name><operator pos:start="248:35" pos:end="248:36">++</operator></expr>]</index></name> <operator pos:start="248:39" pos:end="248:39">=</operator> <name pos:start="248:41" pos:end="248:65"><name pos:start="248:41" pos:end="248:41">s</name><operator pos:start="248:42" pos:end="248:43">-&gt;</operator><name pos:start="248:44" pos:end="248:49">sample</name><index pos:start="248:50" pos:end="248:65">[<expr pos:start="248:51" pos:end="248:64"><name pos:start="248:51" pos:end="248:64">channel_number</name></expr>]</index></name></expr>;</expr_stmt>

                <comment type="block" pos:start="250:17" pos:end="250:36">/* toggle channel */</comment>

                <expr_stmt pos:start="252:17" pos:end="252:50"><expr pos:start="252:17" pos:end="252:49"><name pos:start="252:17" pos:end="252:30">channel_number</name> <operator pos:start="252:32" pos:end="252:33">^=</operator> <name pos:start="252:35" pos:end="252:45"><name pos:start="252:35" pos:end="252:35">s</name><operator pos:start="252:36" pos:end="252:37">-&gt;</operator><name pos:start="252:38" pos:end="252:45">channels</name></name> <operator pos:start="252:47" pos:end="252:47">-</operator> <literal type="number" pos:start="252:49" pos:end="252:49">1</literal></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></else></if_stmt>

        <break pos:start="258:9" pos:end="258:14">break;</break>

    </block_content>}</block></switch></block_content></block></if></if_stmt>



    <expr_stmt pos:start="264:5" pos:end="264:37"><expr pos:start="264:5" pos:end="264:36"><operator pos:start="264:5" pos:end="264:5">*</operator><name pos:start="264:6" pos:end="264:14">data_size</name> <operator pos:start="264:16" pos:end="264:16">=</operator> <name pos:start="264:18" pos:end="264:20">out</name> <operator pos:start="264:22" pos:end="264:22">*</operator> <sizeof pos:start="264:24" pos:end="264:36">sizeof<argument_list pos:start="264:30" pos:end="264:36">(<argument pos:start="264:31" pos:end="264:35"><expr pos:start="264:31" pos:end="264:35"><name pos:start="264:31" pos:end="264:35">short</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <return pos:start="266:5" pos:end="266:20">return <expr pos:start="266:12" pos:end="266:19"><name pos:start="266:12" pos:end="266:19">buf_size</name></expr>;</return>

</block_content>}</block></function></unit>
