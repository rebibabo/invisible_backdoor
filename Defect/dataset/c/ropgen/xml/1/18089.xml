<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18089.c" pos:tabs="8"><function pos:start="1:1" pos:end="311:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">dct_error</name><parameter_list pos:start="1:22" pos:end="1:79">(<parameter pos:start="1:23" pos:end="1:44"><decl pos:start="1:23" pos:end="1:44"><type pos:start="1:23" pos:end="1:44"><specifier pos:start="1:23" pos:end="1:27">const</specifier> <name pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:34">struct</name> <name pos:start="1:36" pos:end="1:39">algo</name></name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">dct</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:54"><decl pos:start="1:47" pos:end="1:54"><type pos:start="1:47" pos:end="1:54"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:54">test</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:67"><decl pos:start="1:57" pos:end="1:67"><type pos:start="1:57" pos:end="1:67"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:67">is_idct</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:78"><decl pos:start="1:70" pos:end="1:78"><type pos:start="1:70" pos:end="1:78"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:78">speed</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="311:1">{<block_content pos:start="5:5" pos:end="309:49">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">it</name></decl>, <decl pos:start="5:13" pos:end="5:13"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:13">i</name></decl>, <decl pos:start="5:16" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:20">scale</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">err_inf</name></decl>, <decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:18">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:16">err2</name></decl>, <decl pos:start="9:19" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:19" pos:end="9:20">ti</name></decl>, <decl pos:start="9:23" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:23" pos:end="9:25">ti1</name></decl>, <decl pos:start="9:28" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:28" pos:end="9:30">it1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:22"><name pos:start="11:13" pos:end="11:18">sysErr</name><index pos:start="11:19" pos:end="11:22">[<expr pos:start="11:20" pos:end="11:21"><literal type="number" pos:start="11:20" pos:end="11:21">64</literal></expr>]</index></name></decl>, <decl pos:start="11:25" pos:end="11:37"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:25" pos:end="11:33">sysErrMax</name> <init pos:start="11:35" pos:end="11:37">= <expr pos:start="11:37" pos:end="11:37"><literal type="number" pos:start="11:37" pos:end="11:37">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">maxout</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:22">blockSumErrMax</name> <init pos:start="15:24" pos:end="15:26">= <expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr></init></decl>, <decl pos:start="15:29" pos:end="15:39"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:29" pos:end="15:39">blockSumErr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:9">AVLFG</name></type> <name pos:start="17:11" pos:end="17:14">prng</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><call pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:15">av_lfg_init</name><argument_list pos:start="21:16" pos:end="21:25">(<argument pos:start="21:17" pos:end="21:21"><expr pos:start="21:17" pos:end="21:21"><operator pos:start="21:17" pos:end="21:17">&amp;</operator><name pos:start="21:18" pos:end="21:21">prng</name></expr></argument>, <argument pos:start="21:24" pos:end="21:24"><expr pos:start="21:24" pos:end="21:24"><literal type="number" pos:start="21:24" pos:end="21:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:16"><expr pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:11">err_inf</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:13"><expr pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:8">err2</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</expr_stmt>

    <for pos:start="29:5" pos:end="31:22">for <control pos:start="29:9" pos:end="29:28">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:23"><expr pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <literal type="number" pos:start="29:21" pos:end="29:22">64</literal></expr>;</condition> <incr pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:25">i</name><operator pos:start="29:26" pos:end="29:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:9" pos:end="31:22"><block_content pos:start="31:9" pos:end="31:22">

        <expr_stmt pos:start="31:9" pos:end="31:22"><expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:14">sysErr</name><index pos:start="31:15" pos:end="31:17">[<expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">i</name></expr>]</index></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="33:5" pos:end="175:5">for <control pos:start="33:9" pos:end="33:35">(<init pos:start="33:10" pos:end="33:16"><expr pos:start="33:10" pos:end="33:15"><name pos:start="33:10" pos:end="33:11">it</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>;</init> <condition pos:start="33:18" pos:end="33:29"><expr pos:start="33:18" pos:end="33:28"><name pos:start="33:18" pos:end="33:19">it</name> <operator pos:start="33:21" pos:end="33:21">&lt;</operator> <name pos:start="33:23" pos:end="33:28">NB_ITS</name></expr>;</condition> <incr pos:start="33:31" pos:end="33:34"><expr pos:start="33:31" pos:end="33:34"><name pos:start="33:31" pos:end="33:32">it</name><operator pos:start="33:33" pos:end="33:34">++</operator></expr></incr>)</control> <block pos:start="33:37" pos:end="175:5">{<block_content pos:start="35:9" pos:end="173:41">

        <for pos:start="35:9" pos:end="37:26">for <control pos:start="35:13" pos:end="35:32">(<init pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">i</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</init> <condition pos:start="35:21" pos:end="35:27"><expr pos:start="35:21" pos:end="35:26"><name pos:start="35:21" pos:end="35:21">i</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <literal type="number" pos:start="35:25" pos:end="35:26">64</literal></expr>;</condition> <incr pos:start="35:29" pos:end="35:31"><expr pos:start="35:29" pos:end="35:31"><name pos:start="35:29" pos:end="35:29">i</name><operator pos:start="35:30" pos:end="35:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:13" pos:end="37:26"><block_content pos:start="37:13" pos:end="37:26">

            <expr_stmt pos:start="37:13" pos:end="37:26"><expr pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:21"><name pos:start="37:13" pos:end="37:18">block1</name><index pos:start="37:19" pos:end="37:21">[<expr pos:start="37:20" pos:end="37:20"><name pos:start="37:20" pos:end="37:20">i</name></expr>]</index></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <literal type="number" pos:start="37:25" pos:end="37:25">0</literal></expr>;</expr_stmt></block_content></block></for>

        <switch pos:start="39:9" pos:end="81:9">switch <condition pos:start="39:16" pos:end="39:21">(<expr pos:start="39:17" pos:end="39:20"><name pos:start="39:17" pos:end="39:20">test</name></expr>)</condition> <block pos:start="39:23" pos:end="81:9">{<block_content pos:start="41:9" pos:end="79:18">

        <case pos:start="41:9" pos:end="41:15">case <expr pos:start="41:14" pos:end="41:14"><literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>:</case>

            <for pos:start="43:13" pos:end="45:60">for <control pos:start="43:17" pos:end="43:36">(<init pos:start="43:18" pos:end="43:23"><expr pos:start="43:18" pos:end="43:22"><name pos:start="43:18" pos:end="43:18">i</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</init> <condition pos:start="43:25" pos:end="43:31"><expr pos:start="43:25" pos:end="43:30"><name pos:start="43:25" pos:end="43:25">i</name> <operator pos:start="43:27" pos:end="43:27">&lt;</operator> <literal type="number" pos:start="43:29" pos:end="43:30">64</literal></expr>;</condition> <incr pos:start="43:33" pos:end="43:35"><expr pos:start="43:33" pos:end="43:35"><name pos:start="43:33" pos:end="43:33">i</name><operator pos:start="43:34" pos:end="43:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:17" pos:end="45:60"><block_content pos:start="45:17" pos:end="45:60">

                <expr_stmt pos:start="45:17" pos:end="45:60"><expr pos:start="45:17" pos:end="45:59"><name pos:start="45:17" pos:end="45:25"><name pos:start="45:17" pos:end="45:22">block1</name><index pos:start="45:23" pos:end="45:25">[<expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">i</name></expr>]</index></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <operator pos:start="45:29" pos:end="45:29">(</operator><call pos:start="45:30" pos:end="45:46"><name pos:start="45:30" pos:end="45:39">av_lfg_get</name><argument_list pos:start="45:40" pos:end="45:46">(<argument pos:start="45:41" pos:end="45:45"><expr pos:start="45:41" pos:end="45:45"><operator pos:start="45:41" pos:end="45:41">&amp;</operator><name pos:start="45:42" pos:end="45:45">prng</name></expr></argument>)</argument_list></call> <operator pos:start="45:48" pos:end="45:48">%</operator> <literal type="number" pos:start="45:50" pos:end="45:52">512</literal><operator pos:start="45:53" pos:end="45:53">)</operator> <operator pos:start="45:55" pos:end="45:55">-</operator> <literal type="number" pos:start="45:57" pos:end="45:59">256</literal></expr>;</expr_stmt></block_content></block></for>

            <if_stmt pos:start="47:13" pos:end="55:13"><if pos:start="47:13" pos:end="55:13">if <condition pos:start="47:16" pos:end="47:24">(<expr pos:start="47:17" pos:end="47:23"><name pos:start="47:17" pos:end="47:23">is_idct</name></expr>)</condition> <block pos:start="47:26" pos:end="55:13">{<block_content pos:start="49:17" pos:end="53:36">

                <expr_stmt pos:start="49:17" pos:end="49:36"><expr pos:start="49:17" pos:end="49:35"><call pos:start="49:17" pos:end="49:35"><name pos:start="49:17" pos:end="49:27">ff_ref_fdct</name><argument_list pos:start="49:28" pos:end="49:35">(<argument pos:start="49:29" pos:end="49:34"><expr pos:start="49:29" pos:end="49:34"><name pos:start="49:29" pos:end="49:34">block1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="51:17" pos:end="53:36">for <control pos:start="51:21" pos:end="51:40">(<init pos:start="51:22" pos:end="51:27"><expr pos:start="51:22" pos:end="51:26"><name pos:start="51:22" pos:end="51:22">i</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr>;</init> <condition pos:start="51:29" pos:end="51:35"><expr pos:start="51:29" pos:end="51:34"><name pos:start="51:29" pos:end="51:29">i</name> <operator pos:start="51:31" pos:end="51:31">&lt;</operator> <literal type="number" pos:start="51:33" pos:end="51:34">64</literal></expr>;</condition> <incr pos:start="51:37" pos:end="51:39"><expr pos:start="51:37" pos:end="51:39"><name pos:start="51:37" pos:end="51:37">i</name><operator pos:start="51:38" pos:end="51:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:21" pos:end="53:36"><block_content pos:start="53:21" pos:end="53:36">

                    <expr_stmt pos:start="53:21" pos:end="53:36"><expr pos:start="53:21" pos:end="53:35"><name pos:start="53:21" pos:end="53:29"><name pos:start="53:21" pos:end="53:26">block1</name><index pos:start="53:27" pos:end="53:29">[<expr pos:start="53:28" pos:end="53:28"><name pos:start="53:28" pos:end="53:28">i</name></expr>]</index></name> <operator pos:start="53:31" pos:end="53:33">&gt;&gt;=</operator> <literal type="number" pos:start="53:35" pos:end="53:35">3</literal></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:15">case <expr pos:start="59:14" pos:end="59:14"><literal type="number" pos:start="59:14" pos:end="59:14">1</literal></expr>:</case> <block pos:start="59:17" pos:end="69:13">{<block_content pos:start="61:17" pos:end="67:54">

                <decl_stmt pos:start="61:17" pos:end="61:53"><decl pos:start="61:17" pos:end="61:52"><type pos:start="61:17" pos:end="61:19"><name pos:start="61:17" pos:end="61:19">int</name></type> <name pos:start="61:21" pos:end="61:23">num</name> <init pos:start="61:25" pos:end="61:52">= <expr pos:start="61:27" pos:end="61:52"><call pos:start="61:27" pos:end="61:43"><name pos:start="61:27" pos:end="61:36">av_lfg_get</name><argument_list pos:start="61:37" pos:end="61:43">(<argument pos:start="61:38" pos:end="61:42"><expr pos:start="61:38" pos:end="61:42"><operator pos:start="61:38" pos:end="61:38">&amp;</operator><name pos:start="61:39" pos:end="61:42">prng</name></expr></argument>)</argument_list></call> <operator pos:start="61:45" pos:end="61:45">%</operator> <literal type="number" pos:start="61:47" pos:end="61:50">10</literal> <operator pos:start="61:50" pos:end="61:50">+</operator> <literal type="number" pos:start="61:52" pos:end="61:52">1</literal></expr></init></decl>;</decl_stmt>

                <for pos:start="63:17" pos:end="67:54">for <control pos:start="63:21" pos:end="63:41">(<init pos:start="63:22" pos:end="63:27"><expr pos:start="63:22" pos:end="63:26"><name pos:start="63:22" pos:end="63:22">i</name> <operator pos:start="63:24" pos:end="63:24">=</operator> <literal type="number" pos:start="63:26" pos:end="63:26">0</literal></expr>;</init> <condition pos:start="63:29" pos:end="63:36"><expr pos:start="63:29" pos:end="63:35"><name pos:start="63:29" pos:end="63:29">i</name> <operator pos:start="63:31" pos:end="63:31">&lt;</operator> <name pos:start="63:33" pos:end="63:35">num</name></expr>;</condition> <incr pos:start="63:38" pos:end="63:40"><expr pos:start="63:38" pos:end="63:40"><name pos:start="63:38" pos:end="63:38">i</name><operator pos:start="63:39" pos:end="63:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="65:21" pos:end="67:54"><block_content pos:start="65:21" pos:end="67:54">

                    <expr_stmt pos:start="65:21" pos:end="67:54"><expr pos:start="65:21" pos:end="67:53"><name pos:start="65:21" pos:end="65:50"><name pos:start="65:21" pos:end="65:26">block1</name><index pos:start="65:27" pos:end="65:50">[<expr pos:start="65:28" pos:end="65:49"><call pos:start="65:28" pos:end="65:44"><name pos:start="65:28" pos:end="65:37">av_lfg_get</name><argument_list pos:start="65:38" pos:end="65:44">(<argument pos:start="65:39" pos:end="65:43"><expr pos:start="65:39" pos:end="65:43"><operator pos:start="65:39" pos:end="65:39">&amp;</operator><name pos:start="65:40" pos:end="65:43">prng</name></expr></argument>)</argument_list></call> <operator pos:start="65:46" pos:end="65:46">%</operator> <literal type="number" pos:start="65:48" pos:end="65:49">64</literal></expr>]</index></name> <operator pos:start="65:52" pos:end="65:52">=</operator>

                        <call pos:start="67:25" pos:end="67:41"><name pos:start="67:25" pos:end="67:34">av_lfg_get</name><argument_list pos:start="67:35" pos:end="67:41">(<argument pos:start="67:36" pos:end="67:40"><expr pos:start="67:36" pos:end="67:40"><operator pos:start="67:36" pos:end="67:36">&amp;</operator><name pos:start="67:37" pos:end="67:40">prng</name></expr></argument>)</argument_list></call> <operator pos:start="67:43" pos:end="67:43">%</operator> <literal type="number" pos:start="67:45" pos:end="67:49">512</literal> <operator pos:start="67:49" pos:end="67:49">-</operator> <literal type="number" pos:start="67:51" pos:end="67:53">256</literal></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        <case pos:start="73:9" pos:end="73:15">case <expr pos:start="73:14" pos:end="73:14"><literal type="number" pos:start="73:14" pos:end="73:14">2</literal></expr>:</case>

            <expr_stmt pos:start="75:13" pos:end="75:56"><expr pos:start="75:13" pos:end="75:55"><name pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:18">block1</name><index pos:start="75:19" pos:end="75:21">[<expr pos:start="75:20" pos:end="75:20"><literal type="number" pos:start="75:20" pos:end="75:20">0</literal></expr>]</index></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <call pos:start="75:25" pos:end="75:41"><name pos:start="75:25" pos:end="75:34">av_lfg_get</name><argument_list pos:start="75:35" pos:end="75:41">(<argument pos:start="75:36" pos:end="75:40"><expr pos:start="75:36" pos:end="75:40"><operator pos:start="75:36" pos:end="75:36">&amp;</operator><name pos:start="75:37" pos:end="75:40">prng</name></expr></argument>)</argument_list></call> <operator pos:start="75:43" pos:end="75:43">%</operator> <literal type="number" pos:start="75:45" pos:end="75:50">4096</literal> <operator pos:start="75:50" pos:end="75:50">-</operator> <literal type="number" pos:start="75:52" pos:end="75:55">2048</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:45"><expr pos:start="77:13" pos:end="77:44"><name pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:18">block1</name><index pos:start="77:19" pos:end="77:22">[<expr pos:start="77:20" pos:end="77:21"><literal type="number" pos:start="77:20" pos:end="77:21">63</literal></expr>]</index></name> <operator pos:start="77:24" pos:end="77:24">=</operator> <operator pos:start="77:26" pos:end="77:26">(</operator><name pos:start="77:27" pos:end="77:35"><name pos:start="77:27" pos:end="77:32">block1</name><index pos:start="77:33" pos:end="77:35">[<expr pos:start="77:34" pos:end="77:34"><literal type="number" pos:start="77:34" pos:end="77:34">0</literal></expr>]</index></name> <operator pos:start="77:37" pos:end="77:37">&amp;</operator> <literal type="number" pos:start="77:39" pos:end="77:39">1</literal><operator pos:start="77:40" pos:end="77:40">)</operator> <operator pos:start="77:42" pos:end="77:42">^</operator> <literal type="number" pos:start="77:44" pos:end="77:44">1</literal></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        </block_content>}</block></switch>



        <for pos:start="85:9" pos:end="87:37">for <control pos:start="85:13" pos:end="85:32">(<init pos:start="85:14" pos:end="85:19"><expr pos:start="85:14" pos:end="85:18"><name pos:start="85:14" pos:end="85:14">i</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>;</init> <condition pos:start="85:21" pos:end="85:27"><expr pos:start="85:21" pos:end="85:26"><name pos:start="85:21" pos:end="85:21">i</name> <operator pos:start="85:23" pos:end="85:23">&lt;</operator> <literal type="number" pos:start="85:25" pos:end="85:26">64</literal></expr>;</condition> <incr pos:start="85:29" pos:end="85:31"><expr pos:start="85:29" pos:end="85:31"><name pos:start="85:29" pos:end="85:29">i</name><operator pos:start="85:30" pos:end="85:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="87:13" pos:end="87:37"><block_content pos:start="87:13" pos:end="87:37">

            <expr_stmt pos:start="87:13" pos:end="87:37"><expr pos:start="87:13" pos:end="87:36"><name pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:21">block_org</name><index pos:start="87:22" pos:end="87:24">[<expr pos:start="87:23" pos:end="87:23"><name pos:start="87:23" pos:end="87:23">i</name></expr>]</index></name> <operator pos:start="87:26" pos:end="87:26">=</operator> <name pos:start="87:28" pos:end="87:36"><name pos:start="87:28" pos:end="87:33">block1</name><index pos:start="87:34" pos:end="87:36">[<expr pos:start="87:35" pos:end="87:35"><name pos:start="87:35" pos:end="87:35">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="91:9" pos:end="121:9"><if pos:start="91:9" pos:end="97:9">if <condition pos:start="91:12" pos:end="91:36">(<expr pos:start="91:13" pos:end="91:35"><name pos:start="91:13" pos:end="91:23"><name pos:start="91:13" pos:end="91:15">dct</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:23">format</name></name> <operator pos:start="91:25" pos:end="91:26">==</operator> <name pos:start="91:28" pos:end="91:35">MMX_PERM</name></expr>)</condition> <block pos:start="91:38" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:52">

            <for pos:start="93:13" pos:end="95:52">for <control pos:start="93:17" pos:end="93:36">(<init pos:start="93:18" pos:end="93:23"><expr pos:start="93:18" pos:end="93:22"><name pos:start="93:18" pos:end="93:18">i</name> <operator pos:start="93:20" pos:end="93:20">=</operator> <literal type="number" pos:start="93:22" pos:end="93:22">0</literal></expr>;</init> <condition pos:start="93:25" pos:end="93:31"><expr pos:start="93:25" pos:end="93:30"><name pos:start="93:25" pos:end="93:25">i</name> <operator pos:start="93:27" pos:end="93:27">&lt;</operator> <literal type="number" pos:start="93:29" pos:end="93:30">64</literal></expr>;</condition> <incr pos:start="93:33" pos:end="93:35"><expr pos:start="93:33" pos:end="93:35"><name pos:start="93:33" pos:end="93:33">i</name><operator pos:start="93:34" pos:end="93:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="95:17" pos:end="95:52"><block_content pos:start="95:17" pos:end="95:52">

                <expr_stmt pos:start="95:17" pos:end="95:52"><expr pos:start="95:17" pos:end="95:51"><name pos:start="95:17" pos:end="95:39"><name pos:start="95:17" pos:end="95:21">block</name><index pos:start="95:22" pos:end="95:39">[<expr pos:start="95:23" pos:end="95:38"><name pos:start="95:23" pos:end="95:38"><name pos:start="95:23" pos:end="95:35">idct_mmx_perm</name><index pos:start="95:36" pos:end="95:38">[<expr pos:start="95:37" pos:end="95:37"><name pos:start="95:37" pos:end="95:37">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="95:41" pos:end="95:41">=</operator> <name pos:start="95:43" pos:end="95:51"><name pos:start="95:43" pos:end="95:48">block1</name><index pos:start="95:49" pos:end="95:51">[<expr pos:start="95:50" pos:end="95:50"><name pos:start="95:50" pos:end="95:50">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="97:11" pos:end="103:9">else if <condition pos:start="97:19" pos:end="97:50">(<expr pos:start="97:20" pos:end="97:49"><name pos:start="97:20" pos:end="97:30"><name pos:start="97:20" pos:end="97:22">dct</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:30">format</name></name> <operator pos:start="97:32" pos:end="97:33">==</operator> <name pos:start="97:35" pos:end="97:49">MMX_SIMPLE_PERM</name></expr>)</condition> <block pos:start="97:52" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:59">

            <for pos:start="99:13" pos:end="101:59">for <control pos:start="99:17" pos:end="99:36">(<init pos:start="99:18" pos:end="99:23"><expr pos:start="99:18" pos:end="99:22"><name pos:start="99:18" pos:end="99:18">i</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>;</init> <condition pos:start="99:25" pos:end="99:31"><expr pos:start="99:25" pos:end="99:30"><name pos:start="99:25" pos:end="99:25">i</name> <operator pos:start="99:27" pos:end="99:27">&lt;</operator> <literal type="number" pos:start="99:29" pos:end="99:30">64</literal></expr>;</condition> <incr pos:start="99:33" pos:end="99:35"><expr pos:start="99:33" pos:end="99:35"><name pos:start="99:33" pos:end="99:33">i</name><operator pos:start="99:34" pos:end="99:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="101:17" pos:end="101:59"><block_content pos:start="101:17" pos:end="101:59">

                <expr_stmt pos:start="101:17" pos:end="101:59"><expr pos:start="101:17" pos:end="101:58"><name pos:start="101:17" pos:end="101:46"><name pos:start="101:17" pos:end="101:21">block</name><index pos:start="101:22" pos:end="101:46">[<expr pos:start="101:23" pos:end="101:45"><name pos:start="101:23" pos:end="101:45"><name pos:start="101:23" pos:end="101:42">idct_simple_mmx_perm</name><index pos:start="101:43" pos:end="101:45">[<expr pos:start="101:44" pos:end="101:44"><name pos:start="101:44" pos:end="101:44">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="101:48" pos:end="101:48">=</operator> <name pos:start="101:50" pos:end="101:58"><name pos:start="101:50" pos:end="101:55">block1</name><index pos:start="101:56" pos:end="101:58">[<expr pos:start="101:57" pos:end="101:57"><name pos:start="101:57" pos:end="101:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="103:11" pos:end="109:9">else if <condition pos:start="103:19" pos:end="103:44">(<expr pos:start="103:20" pos:end="103:43"><name pos:start="103:20" pos:end="103:30"><name pos:start="103:20" pos:end="103:22">dct</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:30">format</name></name> <operator pos:start="103:32" pos:end="103:33">==</operator> <name pos:start="103:35" pos:end="103:43">SSE2_PERM</name></expr>)</condition> <block pos:start="103:46" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:74">

            <for pos:start="105:13" pos:end="107:74">for <control pos:start="105:17" pos:end="105:36">(<init pos:start="105:18" pos:end="105:23"><expr pos:start="105:18" pos:end="105:22"><name pos:start="105:18" pos:end="105:18">i</name> <operator pos:start="105:20" pos:end="105:20">=</operator> <literal type="number" pos:start="105:22" pos:end="105:22">0</literal></expr>;</init> <condition pos:start="105:25" pos:end="105:31"><expr pos:start="105:25" pos:end="105:30"><name pos:start="105:25" pos:end="105:25">i</name> <operator pos:start="105:27" pos:end="105:27">&lt;</operator> <literal type="number" pos:start="105:29" pos:end="105:30">64</literal></expr>;</condition> <incr pos:start="105:33" pos:end="105:35"><expr pos:start="105:33" pos:end="105:35"><name pos:start="105:33" pos:end="105:33">i</name><operator pos:start="105:34" pos:end="105:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:17" pos:end="107:74"><block_content pos:start="107:17" pos:end="107:74">

                <expr_stmt pos:start="107:17" pos:end="107:74"><expr pos:start="107:17" pos:end="107:73"><name pos:start="107:17" pos:end="107:61"><name pos:start="107:17" pos:end="107:21">block</name><index pos:start="107:22" pos:end="107:61">[<expr pos:start="107:23" pos:end="107:60"><operator pos:start="107:23" pos:end="107:23">(</operator><name pos:start="107:24" pos:end="107:24">i</name> <operator pos:start="107:26" pos:end="107:26">&amp;</operator> <literal type="number" pos:start="107:28" pos:end="107:31">0x38</literal><operator pos:start="107:32" pos:end="107:32">)</operator> <operator pos:start="107:34" pos:end="107:34">|</operator> <name pos:start="107:36" pos:end="107:60"><name pos:start="107:36" pos:end="107:53">idct_sse2_row_perm</name><index pos:start="107:54" pos:end="107:60">[<expr pos:start="107:55" pos:end="107:59"><name pos:start="107:55" pos:end="107:55">i</name> <operator pos:start="107:57" pos:end="107:57">&amp;</operator> <literal type="number" pos:start="107:59" pos:end="107:59">7</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="107:63" pos:end="107:63">=</operator> <name pos:start="107:65" pos:end="107:73"><name pos:start="107:65" pos:end="107:70">block1</name><index pos:start="107:71" pos:end="107:73">[<expr pos:start="107:72" pos:end="107:72"><name pos:start="107:72" pos:end="107:72">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="109:11" pos:end="115:9">else if <condition pos:start="109:19" pos:end="109:49">(<expr pos:start="109:20" pos:end="109:48"><name pos:start="109:20" pos:end="109:30"><name pos:start="109:20" pos:end="109:22">dct</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:30">format</name></name> <operator pos:start="109:32" pos:end="109:33">==</operator> <name pos:start="109:35" pos:end="109:48">PARTTRANS_PERM</name></expr>)</condition> <block pos:start="109:51" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:80">

            <for pos:start="111:13" pos:end="113:80">for <control pos:start="111:17" pos:end="111:36">(<init pos:start="111:18" pos:end="111:23"><expr pos:start="111:18" pos:end="111:22"><name pos:start="111:18" pos:end="111:18">i</name> <operator pos:start="111:20" pos:end="111:20">=</operator> <literal type="number" pos:start="111:22" pos:end="111:22">0</literal></expr>;</init> <condition pos:start="111:25" pos:end="111:31"><expr pos:start="111:25" pos:end="111:30"><name pos:start="111:25" pos:end="111:25">i</name> <operator pos:start="111:27" pos:end="111:27">&lt;</operator> <literal type="number" pos:start="111:29" pos:end="111:30">64</literal></expr>;</condition> <incr pos:start="111:33" pos:end="111:35"><expr pos:start="111:33" pos:end="111:35"><name pos:start="111:33" pos:end="111:33">i</name><operator pos:start="111:34" pos:end="111:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="113:17" pos:end="113:80"><block_content pos:start="113:17" pos:end="113:80">

                <expr_stmt pos:start="113:17" pos:end="113:80"><expr pos:start="113:17" pos:end="113:79"><name pos:start="113:17" pos:end="113:67"><name pos:start="113:17" pos:end="113:21">block</name><index pos:start="113:22" pos:end="113:67">[<expr pos:start="113:23" pos:end="113:66"><operator pos:start="113:23" pos:end="113:23">(</operator><name pos:start="113:24" pos:end="113:24">i</name> <operator pos:start="113:26" pos:end="113:26">&amp;</operator> <literal type="number" pos:start="113:28" pos:end="113:31">0x24</literal><operator pos:start="113:32" pos:end="113:32">)</operator> <operator pos:start="113:34" pos:end="113:34">|</operator> <operator pos:start="113:36" pos:end="113:36">(</operator><operator pos:start="113:37" pos:end="113:37">(</operator><name pos:start="113:38" pos:end="113:38">i</name> <operator pos:start="113:40" pos:end="113:40">&amp;</operator> <literal type="number" pos:start="113:42" pos:end="113:42">3</literal><operator pos:start="113:43" pos:end="113:43">)</operator> <operator pos:start="113:45" pos:end="113:46">&lt;&lt;</operator> <literal type="number" pos:start="113:48" pos:end="113:48">3</literal><operator pos:start="113:49" pos:end="113:49">)</operator> <operator pos:start="113:51" pos:end="113:51">|</operator> <operator pos:start="113:53" pos:end="113:53">(</operator><operator pos:start="113:54" pos:end="113:54">(</operator><name pos:start="113:55" pos:end="113:55">i</name> <operator pos:start="113:57" pos:end="113:58">&gt;&gt;</operator> <literal type="number" pos:start="113:60" pos:end="113:60">3</literal><operator pos:start="113:61" pos:end="113:61">)</operator> <operator pos:start="113:63" pos:end="113:63">&amp;</operator> <literal type="number" pos:start="113:65" pos:end="113:65">3</literal><operator pos:start="113:66" pos:end="113:66">)</operator></expr>]</index></name> <operator pos:start="113:69" pos:end="113:69">=</operator> <name pos:start="113:71" pos:end="113:79"><name pos:start="113:71" pos:end="113:76">block1</name><index pos:start="113:77" pos:end="113:79">[<expr pos:start="113:78" pos:end="113:78"><name pos:start="113:78" pos:end="113:78">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if> <else pos:start="115:11" pos:end="121:9">else <block pos:start="115:16" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:37">

            <for pos:start="117:13" pos:end="119:37">for <control pos:start="117:17" pos:end="117:36">(<init pos:start="117:18" pos:end="117:23"><expr pos:start="117:18" pos:end="117:22"><name pos:start="117:18" pos:end="117:18">i</name> <operator pos:start="117:20" pos:end="117:20">=</operator> <literal type="number" pos:start="117:22" pos:end="117:22">0</literal></expr>;</init> <condition pos:start="117:25" pos:end="117:31"><expr pos:start="117:25" pos:end="117:30"><name pos:start="117:25" pos:end="117:25">i</name> <operator pos:start="117:27" pos:end="117:27">&lt;</operator> <literal type="number" pos:start="117:29" pos:end="117:30">64</literal></expr>;</condition> <incr pos:start="117:33" pos:end="117:35"><expr pos:start="117:33" pos:end="117:35"><name pos:start="117:33" pos:end="117:33">i</name><operator pos:start="117:34" pos:end="117:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="119:17" pos:end="119:37"><block_content pos:start="119:17" pos:end="119:37">

                <expr_stmt pos:start="119:17" pos:end="119:37"><expr pos:start="119:17" pos:end="119:36"><name pos:start="119:17" pos:end="119:24"><name pos:start="119:17" pos:end="119:21">block</name><index pos:start="119:22" pos:end="119:24">[<expr pos:start="119:23" pos:end="119:23"><name pos:start="119:23" pos:end="119:23">i</name></expr>]</index></name> <operator pos:start="119:26" pos:end="119:26">=</operator> <name pos:start="119:28" pos:end="119:36"><name pos:start="119:28" pos:end="119:33">block1</name><index pos:start="119:34" pos:end="119:36">[<expr pos:start="119:35" pos:end="119:35"><name pos:start="119:35" pos:end="119:35">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:25"><expr pos:start="125:9" pos:end="125:24"><call pos:start="125:9" pos:end="125:24"><name pos:start="125:9" pos:end="125:17"><name pos:start="125:9" pos:end="125:11">dct</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:17">func</name></name><argument_list pos:start="125:18" pos:end="125:24">(<argument pos:start="125:19" pos:end="125:23"><expr pos:start="125:19" pos:end="125:23"><name pos:start="125:19" pos:end="125:23">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:19"><expr pos:start="127:9" pos:end="127:18"><call pos:start="127:9" pos:end="127:18"><name pos:start="127:9" pos:end="127:16">mmx_emms</name><argument_list pos:start="127:17" pos:end="127:18">()</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="131:9" pos:end="141:9"><if pos:start="131:9" pos:end="141:9">if <condition pos:start="131:12" pos:end="131:38">(<expr pos:start="131:13" pos:end="131:37"><name pos:start="131:13" pos:end="131:23"><name pos:start="131:13" pos:end="131:15">dct</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:23">format</name></name> <operator pos:start="131:25" pos:end="131:26">==</operator> <name pos:start="131:28" pos:end="131:37">SCALE_PERM</name></expr>)</condition> <block pos:start="131:40" pos:end="141:9">{<block_content pos:start="133:13" pos:end="139:13">

            <for pos:start="133:13" pos:end="139:13">for <control pos:start="133:17" pos:end="133:36">(<init pos:start="133:18" pos:end="133:23"><expr pos:start="133:18" pos:end="133:22"><name pos:start="133:18" pos:end="133:18">i</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <literal type="number" pos:start="133:22" pos:end="133:22">0</literal></expr>;</init> <condition pos:start="133:25" pos:end="133:31"><expr pos:start="133:25" pos:end="133:30"><name pos:start="133:25" pos:end="133:25">i</name> <operator pos:start="133:27" pos:end="133:27">&lt;</operator> <literal type="number" pos:start="133:29" pos:end="133:30">64</literal></expr>;</condition> <incr pos:start="133:33" pos:end="133:35"><expr pos:start="133:33" pos:end="133:35"><name pos:start="133:33" pos:end="133:33">i</name><operator pos:start="133:34" pos:end="133:35">++</operator></expr></incr>)</control> <block pos:start="133:38" pos:end="139:13">{<block_content pos:start="135:17" pos:end="137:63">

                <expr_stmt pos:start="135:17" pos:end="135:74"><expr pos:start="135:17" pos:end="135:73"><name pos:start="135:17" pos:end="135:21">scale</name> <operator pos:start="135:23" pos:end="135:23">=</operator> <literal type="number" pos:start="135:25" pos:end="135:25">8</literal> <operator pos:start="135:27" pos:end="135:27">*</operator> <operator pos:start="135:29" pos:end="135:29">(</operator><literal type="number" pos:start="135:30" pos:end="135:30">1</literal> <operator pos:start="135:32" pos:end="135:33">&lt;&lt;</operator> <operator pos:start="135:35" pos:end="135:35">(</operator><name pos:start="135:36" pos:end="135:48">AANSCALE_BITS</name> <operator pos:start="135:50" pos:end="135:50">+</operator> <literal type="number" pos:start="135:52" pos:end="135:53">11</literal><operator pos:start="135:54" pos:end="135:54">)</operator><operator pos:start="135:55" pos:end="135:55">)</operator> <operator pos:start="135:57" pos:end="135:57">/</operator> <name pos:start="135:59" pos:end="135:73"><name pos:start="135:59" pos:end="135:70">ff_aanscales</name><index pos:start="135:71" pos:end="135:73">[<expr pos:start="135:72" pos:end="135:72"><name pos:start="135:72" pos:end="135:72">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:63"><expr pos:start="137:17" pos:end="137:62"><name pos:start="137:17" pos:end="137:24"><name pos:start="137:17" pos:end="137:21">block</name><index pos:start="137:22" pos:end="137:24">[<expr pos:start="137:23" pos:end="137:23"><name pos:start="137:23" pos:end="137:23">i</name></expr>]</index></name> <operator pos:start="137:26" pos:end="137:26">=</operator> <operator pos:start="137:28" pos:end="137:28">(</operator><name pos:start="137:29" pos:end="137:36"><name pos:start="137:29" pos:end="137:33">block</name><index pos:start="137:34" pos:end="137:36">[<expr pos:start="137:35" pos:end="137:35"><name pos:start="137:35" pos:end="137:35">i</name></expr>]</index></name> <operator pos:start="137:38" pos:end="137:38">*</operator> <name pos:start="137:40" pos:end="137:44">scale</name><operator pos:start="137:45" pos:end="137:45">)</operator> <operator pos:start="137:47" pos:end="137:48">&gt;&gt;</operator> <name pos:start="137:50" pos:end="137:62">AANSCALE_BITS</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="145:9" pos:end="145:25"><expr pos:start="145:9" pos:end="145:24"><call pos:start="145:9" pos:end="145:24"><name pos:start="145:9" pos:end="145:16"><name pos:start="145:9" pos:end="145:11">dct</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:16">ref</name></name><argument_list pos:start="145:17" pos:end="145:24">(<argument pos:start="145:18" pos:end="145:23"><expr pos:start="145:18" pos:end="145:23"><name pos:start="145:18" pos:end="145:23">block1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="149:9" pos:end="149:24"><expr pos:start="149:9" pos:end="149:23"><name pos:start="149:9" pos:end="149:19">blockSumErr</name> <operator pos:start="149:21" pos:end="149:21">=</operator> <literal type="number" pos:start="149:23" pos:end="149:23">0</literal></expr>;</expr_stmt>

        <for pos:start="151:9" pos:end="169:9">for <control pos:start="151:13" pos:end="151:32">(<init pos:start="151:14" pos:end="151:19"><expr pos:start="151:14" pos:end="151:18"><name pos:start="151:14" pos:end="151:14">i</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <literal type="number" pos:start="151:18" pos:end="151:18">0</literal></expr>;</init> <condition pos:start="151:21" pos:end="151:27"><expr pos:start="151:21" pos:end="151:26"><name pos:start="151:21" pos:end="151:21">i</name> <operator pos:start="151:23" pos:end="151:23">&lt;</operator> <literal type="number" pos:start="151:25" pos:end="151:26">64</literal></expr>;</condition> <incr pos:start="151:29" pos:end="151:31"><expr pos:start="151:29" pos:end="151:31"><name pos:start="151:29" pos:end="151:29">i</name><operator pos:start="151:30" pos:end="151:31">++</operator></expr></incr>)</control> <block pos:start="151:34" pos:end="169:9">{<block_content pos:start="153:13" pos:end="167:39">

            <expr_stmt pos:start="153:13" pos:end="153:42"><expr pos:start="153:13" pos:end="153:41"><name pos:start="153:13" pos:end="153:13">v</name> <operator pos:start="153:15" pos:end="153:15">=</operator> <call pos:start="153:17" pos:end="153:41"><name pos:start="153:17" pos:end="153:19">abs</name><argument_list pos:start="153:20" pos:end="153:41">(<argument pos:start="153:21" pos:end="153:40"><expr pos:start="153:21" pos:end="153:40"><name pos:start="153:21" pos:end="153:28"><name pos:start="153:21" pos:end="153:25">block</name><index pos:start="153:26" pos:end="153:28">[<expr pos:start="153:27" pos:end="153:27"><name pos:start="153:27" pos:end="153:27">i</name></expr>]</index></name> <operator pos:start="153:30" pos:end="153:30">-</operator> <name pos:start="153:32" pos:end="153:40"><name pos:start="153:32" pos:end="153:37">block1</name><index pos:start="153:38" pos:end="153:40">[<expr pos:start="153:39" pos:end="153:39"><name pos:start="153:39" pos:end="153:39">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="155:13" pos:end="157:28"><if pos:start="155:13" pos:end="157:28">if <condition pos:start="155:16" pos:end="155:28">(<expr pos:start="155:17" pos:end="155:27"><name pos:start="155:17" pos:end="155:17">v</name> <operator pos:start="155:19" pos:end="155:19">&gt;</operator> <name pos:start="155:21" pos:end="155:27">err_inf</name></expr>)</condition><block type="pseudo" pos:start="157:17" pos:end="157:28"><block_content pos:start="157:17" pos:end="157:28">

                <expr_stmt pos:start="157:17" pos:end="157:28"><expr pos:start="157:17" pos:end="157:27"><name pos:start="157:17" pos:end="157:23">err_inf</name> <operator pos:start="157:25" pos:end="157:25">=</operator> <name pos:start="157:27" pos:end="157:27">v</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:26"><expr pos:start="159:13" pos:end="159:25"><name pos:start="159:13" pos:end="159:16">err2</name> <operator pos:start="159:18" pos:end="159:19">+=</operator> <name pos:start="159:21" pos:end="159:21">v</name> <operator pos:start="159:23" pos:end="159:23">*</operator> <name pos:start="159:25" pos:end="159:25">v</name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:46"><expr pos:start="161:13" pos:end="161:45"><name pos:start="161:13" pos:end="161:21"><name pos:start="161:13" pos:end="161:18">sysErr</name><index pos:start="161:19" pos:end="161:21">[<expr pos:start="161:20" pos:end="161:20"><name pos:start="161:20" pos:end="161:20">i</name></expr>]</index></name> <operator pos:start="161:23" pos:end="161:24">+=</operator> <name pos:start="161:26" pos:end="161:33"><name pos:start="161:26" pos:end="161:30">block</name><index pos:start="161:31" pos:end="161:33">[<expr pos:start="161:32" pos:end="161:32"><name pos:start="161:32" pos:end="161:32">i</name></expr>]</index></name> <operator pos:start="161:35" pos:end="161:35">-</operator> <name pos:start="161:37" pos:end="161:45"><name pos:start="161:37" pos:end="161:42">block1</name><index pos:start="161:43" pos:end="161:45">[<expr pos:start="161:44" pos:end="161:44"><name pos:start="161:44" pos:end="161:44">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:29"><expr pos:start="163:13" pos:end="163:28"><name pos:start="163:13" pos:end="163:23">blockSumErr</name> <operator pos:start="163:25" pos:end="163:26">+=</operator> <name pos:start="163:28" pos:end="163:28">v</name></expr>;</expr_stmt>

            <if_stmt pos:start="165:13" pos:end="167:39"><if pos:start="165:13" pos:end="167:39">if <condition pos:start="165:16" pos:end="165:39">(<expr pos:start="165:17" pos:end="165:38"><call pos:start="165:17" pos:end="165:29"><name pos:start="165:17" pos:end="165:19">abs</name><argument_list pos:start="165:20" pos:end="165:29">(<argument pos:start="165:21" pos:end="165:28"><expr pos:start="165:21" pos:end="165:28"><name pos:start="165:21" pos:end="165:28"><name pos:start="165:21" pos:end="165:25">block</name><index pos:start="165:26" pos:end="165:28">[<expr pos:start="165:27" pos:end="165:27"><name pos:start="165:27" pos:end="165:27">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="165:31" pos:end="165:31">&gt;</operator> <name pos:start="165:33" pos:end="165:38">maxout</name></expr>)</condition><block type="pseudo" pos:start="167:17" pos:end="167:39"><block_content pos:start="167:17" pos:end="167:39">

                <expr_stmt pos:start="167:17" pos:end="167:39"><expr pos:start="167:17" pos:end="167:38"><name pos:start="167:17" pos:end="167:22">maxout</name> <operator pos:start="167:24" pos:end="167:24">=</operator> <call pos:start="167:26" pos:end="167:38"><name pos:start="167:26" pos:end="167:28">abs</name><argument_list pos:start="167:29" pos:end="167:38">(<argument pos:start="167:30" pos:end="167:37"><expr pos:start="167:30" pos:end="167:37"><name pos:start="167:30" pos:end="167:37"><name pos:start="167:30" pos:end="167:34">block</name><index pos:start="167:35" pos:end="167:37">[<expr pos:start="167:36" pos:end="167:36"><name pos:start="167:36" pos:end="167:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="171:9" pos:end="173:41"><if pos:start="171:9" pos:end="173:41">if <condition pos:start="171:12" pos:end="171:41">(<expr pos:start="171:13" pos:end="171:40"><name pos:start="171:13" pos:end="171:26">blockSumErrMax</name> <operator pos:start="171:28" pos:end="171:28">&lt;</operator> <name pos:start="171:30" pos:end="171:40">blockSumErr</name></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:41"><block_content pos:start="173:13" pos:end="173:41">

            <expr_stmt pos:start="173:13" pos:end="173:41"><expr pos:start="173:13" pos:end="173:40"><name pos:start="173:13" pos:end="173:26">blockSumErrMax</name> <operator pos:start="173:28" pos:end="173:28">=</operator> <name pos:start="173:30" pos:end="173:40">blockSumErr</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <for pos:start="177:5" pos:end="179:55">for <control pos:start="177:9" pos:end="177:28">(<init pos:start="177:10" pos:end="177:15"><expr pos:start="177:10" pos:end="177:14"><name pos:start="177:10" pos:end="177:10">i</name> <operator pos:start="177:12" pos:end="177:12">=</operator> <literal type="number" pos:start="177:14" pos:end="177:14">0</literal></expr>;</init> <condition pos:start="177:17" pos:end="177:23"><expr pos:start="177:17" pos:end="177:22"><name pos:start="177:17" pos:end="177:17">i</name> <operator pos:start="177:19" pos:end="177:19">&lt;</operator> <literal type="number" pos:start="177:21" pos:end="177:22">64</literal></expr>;</condition> <incr pos:start="177:25" pos:end="177:27"><expr pos:start="177:25" pos:end="177:27"><name pos:start="177:25" pos:end="177:25">i</name><operator pos:start="177:26" pos:end="177:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="179:9" pos:end="179:55"><block_content pos:start="179:9" pos:end="179:55">

        <expr_stmt pos:start="179:9" pos:end="179:55"><expr pos:start="179:9" pos:end="179:54"><name pos:start="179:9" pos:end="179:17">sysErrMax</name> <operator pos:start="179:19" pos:end="179:19">=</operator> <call pos:start="179:21" pos:end="179:54"><name pos:start="179:21" pos:end="179:25">FFMAX</name><argument_list pos:start="179:26" pos:end="179:54">(<argument pos:start="179:27" pos:end="179:35"><expr pos:start="179:27" pos:end="179:35"><name pos:start="179:27" pos:end="179:35">sysErrMax</name></expr></argument>, <argument pos:start="179:38" pos:end="179:53"><expr pos:start="179:38" pos:end="179:53"><call pos:start="179:38" pos:end="179:53"><name pos:start="179:38" pos:end="179:42">FFABS</name><argument_list pos:start="179:43" pos:end="179:53">(<argument pos:start="179:44" pos:end="179:52"><expr pos:start="179:44" pos:end="179:52"><name pos:start="179:44" pos:end="179:52"><name pos:start="179:44" pos:end="179:49">sysErr</name><index pos:start="179:50" pos:end="179:52">[<expr pos:start="179:51" pos:end="179:51"><name pos:start="179:51" pos:end="179:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="183:5" pos:end="191:5">for <control pos:start="183:9" pos:end="183:28">(<init pos:start="183:10" pos:end="183:15"><expr pos:start="183:10" pos:end="183:14"><name pos:start="183:10" pos:end="183:10">i</name> <operator pos:start="183:12" pos:end="183:12">=</operator> <literal type="number" pos:start="183:14" pos:end="183:14">0</literal></expr>;</init> <condition pos:start="183:17" pos:end="183:23"><expr pos:start="183:17" pos:end="183:22"><name pos:start="183:17" pos:end="183:17">i</name> <operator pos:start="183:19" pos:end="183:19">&lt;</operator> <literal type="number" pos:start="183:21" pos:end="183:22">64</literal></expr>;</condition> <incr pos:start="183:25" pos:end="183:27"><expr pos:start="183:25" pos:end="183:27"><name pos:start="183:25" pos:end="183:25">i</name><operator pos:start="183:26" pos:end="183:27">++</operator></expr></incr>)</control> <block pos:start="183:30" pos:end="191:5">{<block_content pos:start="185:9" pos:end="189:40">

        <if_stmt pos:start="185:9" pos:end="187:25"><if pos:start="185:9" pos:end="187:25">if <condition pos:start="185:12" pos:end="185:23">(<expr pos:start="185:13" pos:end="185:22"><name pos:start="185:13" pos:end="185:13">i</name> <operator pos:start="185:15" pos:end="185:15">%</operator> <literal type="number" pos:start="185:17" pos:end="185:17">8</literal> <operator pos:start="185:19" pos:end="185:20">==</operator> <literal type="number" pos:start="185:22" pos:end="185:22">0</literal></expr>)</condition><block type="pseudo" pos:start="187:13" pos:end="187:25"><block_content pos:start="187:13" pos:end="187:25">

            <expr_stmt pos:start="187:13" pos:end="187:25"><expr pos:start="187:13" pos:end="187:24"><call pos:start="187:13" pos:end="187:24"><name pos:start="187:13" pos:end="187:18">printf</name><argument_list pos:start="187:19" pos:end="187:24">(<argument pos:start="187:20" pos:end="187:23"><expr pos:start="187:20" pos:end="187:23"><literal type="string" pos:start="187:20" pos:end="187:23">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:40"><expr pos:start="189:9" pos:end="189:39"><call pos:start="189:9" pos:end="189:39"><name pos:start="189:9" pos:end="189:14">printf</name><argument_list pos:start="189:15" pos:end="189:39">(<argument pos:start="189:16" pos:end="189:21"><expr pos:start="189:16" pos:end="189:21"><literal type="string" pos:start="189:16" pos:end="189:21">"%7d "</literal></expr></argument>, <argument pos:start="189:24" pos:end="189:38"><expr pos:start="189:24" pos:end="189:38"><operator pos:start="189:24" pos:end="189:24">(</operator><name pos:start="189:25" pos:end="189:27">int</name><operator pos:start="189:28" pos:end="189:28">)</operator> <name pos:start="189:30" pos:end="189:38"><name pos:start="189:30" pos:end="189:35">sysErr</name><index pos:start="189:36" pos:end="189:38">[<expr pos:start="189:37" pos:end="189:37"><name pos:start="189:37" pos:end="189:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="193:5" pos:end="193:17"><expr pos:start="193:5" pos:end="193:16"><call pos:start="193:5" pos:end="193:16"><name pos:start="193:5" pos:end="193:10">printf</name><argument_list pos:start="193:11" pos:end="193:16">(<argument pos:start="193:12" pos:end="193:15"><expr pos:start="193:12" pos:end="193:15"><literal type="string" pos:start="193:12" pos:end="193:15">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="197:5" pos:end="203:35"><expr pos:start="197:5" pos:end="203:34"><call pos:start="197:5" pos:end="203:34"><name pos:start="197:5" pos:end="197:10">printf</name><argument_list pos:start="197:11" pos:end="203:34">(<argument pos:start="197:12" pos:end="197:81"><expr pos:start="197:12" pos:end="197:81"><literal type="string" pos:start="197:12" pos:end="197:81">"%s %s: err_inf=%d err2=%0.8f syserr=%0.8f maxout=%d blockSumErr=%d\n"</literal></expr></argument>,

           <argument pos:start="199:12" pos:end="199:35"><expr pos:start="199:12" pos:end="199:35"><ternary pos:start="199:12" pos:end="199:35"><condition pos:start="199:12" pos:end="199:20"><expr pos:start="199:12" pos:end="199:18"><name pos:start="199:12" pos:end="199:18">is_idct</name></expr> ?</condition><then pos:start="199:22" pos:end="199:27"> <expr pos:start="199:22" pos:end="199:27"><literal type="string" pos:start="199:22" pos:end="199:27">"IDCT"</literal></expr> </then><else pos:start="199:29" pos:end="199:35">: <expr pos:start="199:31" pos:end="199:35"><literal type="string" pos:start="199:31" pos:end="199:35">"DCT"</literal></expr></else></ternary></expr></argument>, <argument pos:start="199:38" pos:end="199:46"><expr pos:start="199:38" pos:end="199:46"><name pos:start="199:38" pos:end="199:46"><name pos:start="199:38" pos:end="199:40">dct</name><operator pos:start="199:41" pos:end="199:42">-&gt;</operator><name pos:start="199:43" pos:end="199:46">name</name></name></expr></argument>, <argument pos:start="199:49" pos:end="199:55"><expr pos:start="199:49" pos:end="199:55"><name pos:start="199:49" pos:end="199:55">err_inf</name></expr></argument>,

           <argument pos:start="201:12" pos:end="201:40"><expr pos:start="201:12" pos:end="201:40"><operator pos:start="201:12" pos:end="201:12">(</operator><name pos:start="201:13" pos:end="201:18">double</name><operator pos:start="201:19" pos:end="201:19">)</operator> <name pos:start="201:21" pos:end="201:24">err2</name> <operator pos:start="201:26" pos:end="201:26">/</operator> <name pos:start="201:28" pos:end="201:33">NB_ITS</name> <operator pos:start="201:35" pos:end="201:35">/</operator> <literal type="number" pos:start="201:37" pos:end="201:40">64.0</literal></expr></argument>, <argument pos:start="201:43" pos:end="201:69"><expr pos:start="201:43" pos:end="201:69"><operator pos:start="201:43" pos:end="201:43">(</operator><name pos:start="201:44" pos:end="201:49">double</name><operator pos:start="201:50" pos:end="201:50">)</operator> <name pos:start="201:52" pos:end="201:60">sysErrMax</name> <operator pos:start="201:62" pos:end="201:62">/</operator> <name pos:start="201:64" pos:end="201:69">NB_ITS</name></expr></argument>,

           <argument pos:start="203:12" pos:end="203:17"><expr pos:start="203:12" pos:end="203:17"><name pos:start="203:12" pos:end="203:17">maxout</name></expr></argument>, <argument pos:start="203:20" pos:end="203:33"><expr pos:start="203:20" pos:end="203:33"><name pos:start="203:20" pos:end="203:33">blockSumErrMax</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="207:5" pos:end="209:15"><if pos:start="207:5" pos:end="209:15">if <condition pos:start="207:8" pos:end="207:15">(<expr pos:start="207:9" pos:end="207:14"><operator pos:start="207:9" pos:end="207:9">!</operator><name pos:start="207:10" pos:end="207:14">speed</name></expr>)</condition><block type="pseudo" pos:start="209:9" pos:end="209:15"><block_content pos:start="209:9" pos:end="209:15">

        <return pos:start="209:9" pos:end="209:15">return;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="213:5" pos:end="213:20">/* speed test */</comment>

    <for pos:start="215:5" pos:end="217:22">for <control pos:start="215:9" pos:end="215:28">(<init pos:start="215:10" pos:end="215:15"><expr pos:start="215:10" pos:end="215:14"><name pos:start="215:10" pos:end="215:10">i</name> <operator pos:start="215:12" pos:end="215:12">=</operator> <literal type="number" pos:start="215:14" pos:end="215:14">0</literal></expr>;</init> <condition pos:start="215:17" pos:end="215:23"><expr pos:start="215:17" pos:end="215:22"><name pos:start="215:17" pos:end="215:17">i</name> <operator pos:start="215:19" pos:end="215:19">&lt;</operator> <literal type="number" pos:start="215:21" pos:end="215:22">64</literal></expr>;</condition> <incr pos:start="215:25" pos:end="215:27"><expr pos:start="215:25" pos:end="215:27"><name pos:start="215:25" pos:end="215:25">i</name><operator pos:start="215:26" pos:end="215:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="217:9" pos:end="217:22"><block_content pos:start="217:9" pos:end="217:22">

        <expr_stmt pos:start="217:9" pos:end="217:22"><expr pos:start="217:9" pos:end="217:21"><name pos:start="217:9" pos:end="217:17"><name pos:start="217:9" pos:end="217:14">block1</name><index pos:start="217:15" pos:end="217:17">[<expr pos:start="217:16" pos:end="217:16"><name pos:start="217:16" pos:end="217:16">i</name></expr>]</index></name> <operator pos:start="217:19" pos:end="217:19">=</operator> <literal type="number" pos:start="217:21" pos:end="217:21">0</literal></expr>;</expr_stmt></block_content></block></for>



    <switch pos:start="221:5" pos:end="255:5">switch <condition pos:start="221:12" pos:end="221:17">(<expr pos:start="221:13" pos:end="221:16"><name pos:start="221:13" pos:end="221:16">test</name></expr>)</condition> <block pos:start="221:19" pos:end="255:5">{<block_content pos:start="223:5" pos:end="253:14">

    <case pos:start="223:5" pos:end="223:11">case <expr pos:start="223:10" pos:end="223:10"><literal type="number" pos:start="223:10" pos:end="223:10">0</literal></expr>:</case>

        <for pos:start="225:9" pos:end="227:54">for <control pos:start="225:13" pos:end="225:32">(<init pos:start="225:14" pos:end="225:19"><expr pos:start="225:14" pos:end="225:18"><name pos:start="225:14" pos:end="225:14">i</name> <operator pos:start="225:16" pos:end="225:16">=</operator> <literal type="number" pos:start="225:18" pos:end="225:18">0</literal></expr>;</init> <condition pos:start="225:21" pos:end="225:27"><expr pos:start="225:21" pos:end="225:26"><name pos:start="225:21" pos:end="225:21">i</name> <operator pos:start="225:23" pos:end="225:23">&lt;</operator> <literal type="number" pos:start="225:25" pos:end="225:26">64</literal></expr>;</condition> <incr pos:start="225:29" pos:end="225:31"><expr pos:start="225:29" pos:end="225:31"><name pos:start="225:29" pos:end="225:29">i</name><operator pos:start="225:30" pos:end="225:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="227:13" pos:end="227:54"><block_content pos:start="227:13" pos:end="227:54">

            <expr_stmt pos:start="227:13" pos:end="227:54"><expr pos:start="227:13" pos:end="227:53"><name pos:start="227:13" pos:end="227:21"><name pos:start="227:13" pos:end="227:18">block1</name><index pos:start="227:19" pos:end="227:21">[<expr pos:start="227:20" pos:end="227:20"><name pos:start="227:20" pos:end="227:20">i</name></expr>]</index></name> <operator pos:start="227:23" pos:end="227:23">=</operator> <call pos:start="227:25" pos:end="227:41"><name pos:start="227:25" pos:end="227:34">av_lfg_get</name><argument_list pos:start="227:35" pos:end="227:41">(<argument pos:start="227:36" pos:end="227:40"><expr pos:start="227:36" pos:end="227:40"><operator pos:start="227:36" pos:end="227:36">&amp;</operator><name pos:start="227:37" pos:end="227:40">prng</name></expr></argument>)</argument_list></call> <operator pos:start="227:43" pos:end="227:43">%</operator> <literal type="number" pos:start="227:45" pos:end="227:49">512</literal> <operator pos:start="227:49" pos:end="227:49">-</operator> <literal type="number" pos:start="227:51" pos:end="227:53">256</literal></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="229:9" pos:end="237:9"><if pos:start="229:9" pos:end="237:9">if <condition pos:start="229:12" pos:end="229:20">(<expr pos:start="229:13" pos:end="229:19"><name pos:start="229:13" pos:end="229:19">is_idct</name></expr>)</condition> <block pos:start="229:22" pos:end="237:9">{<block_content pos:start="231:13" pos:end="235:32">

            <expr_stmt pos:start="231:13" pos:end="231:32"><expr pos:start="231:13" pos:end="231:31"><call pos:start="231:13" pos:end="231:31"><name pos:start="231:13" pos:end="231:23">ff_ref_fdct</name><argument_list pos:start="231:24" pos:end="231:31">(<argument pos:start="231:25" pos:end="231:30"><expr pos:start="231:25" pos:end="231:30"><name pos:start="231:25" pos:end="231:30">block1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="233:13" pos:end="235:32">for <control pos:start="233:17" pos:end="233:36">(<init pos:start="233:18" pos:end="233:23"><expr pos:start="233:18" pos:end="233:22"><name pos:start="233:18" pos:end="233:18">i</name> <operator pos:start="233:20" pos:end="233:20">=</operator> <literal type="number" pos:start="233:22" pos:end="233:22">0</literal></expr>;</init> <condition pos:start="233:25" pos:end="233:31"><expr pos:start="233:25" pos:end="233:30"><name pos:start="233:25" pos:end="233:25">i</name> <operator pos:start="233:27" pos:end="233:27">&lt;</operator> <literal type="number" pos:start="233:29" pos:end="233:30">64</literal></expr>;</condition> <incr pos:start="233:33" pos:end="233:35"><expr pos:start="233:33" pos:end="233:35"><name pos:start="233:33" pos:end="233:33">i</name><operator pos:start="233:34" pos:end="233:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="235:17" pos:end="235:32"><block_content pos:start="235:17" pos:end="235:32">

                <expr_stmt pos:start="235:17" pos:end="235:32"><expr pos:start="235:17" pos:end="235:31"><name pos:start="235:17" pos:end="235:25"><name pos:start="235:17" pos:end="235:22">block1</name><index pos:start="235:23" pos:end="235:25">[<expr pos:start="235:24" pos:end="235:24"><name pos:start="235:24" pos:end="235:24">i</name></expr>]</index></name> <operator pos:start="235:27" pos:end="235:29">&gt;&gt;=</operator> <literal type="number" pos:start="235:31" pos:end="235:31">3</literal></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

        <break pos:start="239:9" pos:end="239:14">break;</break>

    <case pos:start="241:5" pos:end="241:11">case <expr pos:start="241:10" pos:end="241:10"><literal type="number" pos:start="241:10" pos:end="241:10">1</literal></expr>:</case>

    <case pos:start="243:5" pos:end="243:11">case <expr pos:start="243:10" pos:end="243:10"><literal type="number" pos:start="243:10" pos:end="243:10">2</literal></expr>:</case>

        <expr_stmt pos:start="245:9" pos:end="245:50"><expr pos:start="245:9" pos:end="245:49"><name pos:start="245:9" pos:end="245:17"><name pos:start="245:9" pos:end="245:14">block1</name><index pos:start="245:15" pos:end="245:17">[<expr pos:start="245:16" pos:end="245:16"><literal type="number" pos:start="245:16" pos:end="245:16">0</literal></expr>]</index></name> <operator pos:start="245:19" pos:end="245:19">=</operator> <call pos:start="245:21" pos:end="245:37"><name pos:start="245:21" pos:end="245:30">av_lfg_get</name><argument_list pos:start="245:31" pos:end="245:37">(<argument pos:start="245:32" pos:end="245:36"><expr pos:start="245:32" pos:end="245:36"><operator pos:start="245:32" pos:end="245:32">&amp;</operator><name pos:start="245:33" pos:end="245:36">prng</name></expr></argument>)</argument_list></call> <operator pos:start="245:39" pos:end="245:39">%</operator> <literal type="number" pos:start="245:41" pos:end="245:45">512</literal> <operator pos:start="245:45" pos:end="245:45">-</operator> <literal type="number" pos:start="245:47" pos:end="245:49">256</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:50"><expr pos:start="247:9" pos:end="247:49"><name pos:start="247:9" pos:end="247:17"><name pos:start="247:9" pos:end="247:14">block1</name><index pos:start="247:15" pos:end="247:17">[<expr pos:start="247:16" pos:end="247:16"><literal type="number" pos:start="247:16" pos:end="247:16">1</literal></expr>]</index></name> <operator pos:start="247:19" pos:end="247:19">=</operator> <call pos:start="247:21" pos:end="247:37"><name pos:start="247:21" pos:end="247:30">av_lfg_get</name><argument_list pos:start="247:31" pos:end="247:37">(<argument pos:start="247:32" pos:end="247:36"><expr pos:start="247:32" pos:end="247:36"><operator pos:start="247:32" pos:end="247:32">&amp;</operator><name pos:start="247:33" pos:end="247:36">prng</name></expr></argument>)</argument_list></call> <operator pos:start="247:39" pos:end="247:39">%</operator> <literal type="number" pos:start="247:41" pos:end="247:45">512</literal> <operator pos:start="247:45" pos:end="247:45">-</operator> <literal type="number" pos:start="247:47" pos:end="247:49">256</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:50"><expr pos:start="249:9" pos:end="249:49"><name pos:start="249:9" pos:end="249:17"><name pos:start="249:9" pos:end="249:14">block1</name><index pos:start="249:15" pos:end="249:17">[<expr pos:start="249:16" pos:end="249:16"><literal type="number" pos:start="249:16" pos:end="249:16">2</literal></expr>]</index></name> <operator pos:start="249:19" pos:end="249:19">=</operator> <call pos:start="249:21" pos:end="249:37"><name pos:start="249:21" pos:end="249:30">av_lfg_get</name><argument_list pos:start="249:31" pos:end="249:37">(<argument pos:start="249:32" pos:end="249:36"><expr pos:start="249:32" pos:end="249:36"><operator pos:start="249:32" pos:end="249:32">&amp;</operator><name pos:start="249:33" pos:end="249:36">prng</name></expr></argument>)</argument_list></call> <operator pos:start="249:39" pos:end="249:39">%</operator> <literal type="number" pos:start="249:41" pos:end="249:45">512</literal> <operator pos:start="249:45" pos:end="249:45">-</operator> <literal type="number" pos:start="249:47" pos:end="249:49">256</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:50"><expr pos:start="251:9" pos:end="251:49"><name pos:start="251:9" pos:end="251:17"><name pos:start="251:9" pos:end="251:14">block1</name><index pos:start="251:15" pos:end="251:17">[<expr pos:start="251:16" pos:end="251:16"><literal type="number" pos:start="251:16" pos:end="251:16">3</literal></expr>]</index></name> <operator pos:start="251:19" pos:end="251:19">=</operator> <call pos:start="251:21" pos:end="251:37"><name pos:start="251:21" pos:end="251:30">av_lfg_get</name><argument_list pos:start="251:31" pos:end="251:37">(<argument pos:start="251:32" pos:end="251:36"><expr pos:start="251:32" pos:end="251:36"><operator pos:start="251:32" pos:end="251:32">&amp;</operator><name pos:start="251:33" pos:end="251:36">prng</name></expr></argument>)</argument_list></call> <operator pos:start="251:39" pos:end="251:39">%</operator> <literal type="number" pos:start="251:41" pos:end="251:45">512</literal> <operator pos:start="251:45" pos:end="251:45">-</operator> <literal type="number" pos:start="251:47" pos:end="251:49">256</literal></expr>;</expr_stmt>

        <break pos:start="253:9" pos:end="253:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="259:5" pos:end="277:5"><if pos:start="259:5" pos:end="265:5">if <condition pos:start="259:8" pos:end="259:32">(<expr pos:start="259:9" pos:end="259:31"><name pos:start="259:9" pos:end="259:19"><name pos:start="259:9" pos:end="259:11">dct</name><operator pos:start="259:12" pos:end="259:13">-&gt;</operator><name pos:start="259:14" pos:end="259:19">format</name></name> <operator pos:start="259:21" pos:end="259:22">==</operator> <name pos:start="259:24" pos:end="259:31">MMX_PERM</name></expr>)</condition> <block pos:start="259:34" pos:end="265:5">{<block_content pos:start="261:9" pos:end="263:48">

        <for pos:start="261:9" pos:end="263:48">for <control pos:start="261:13" pos:end="261:32">(<init pos:start="261:14" pos:end="261:19"><expr pos:start="261:14" pos:end="261:18"><name pos:start="261:14" pos:end="261:14">i</name> <operator pos:start="261:16" pos:end="261:16">=</operator> <literal type="number" pos:start="261:18" pos:end="261:18">0</literal></expr>;</init> <condition pos:start="261:21" pos:end="261:27"><expr pos:start="261:21" pos:end="261:26"><name pos:start="261:21" pos:end="261:21">i</name> <operator pos:start="261:23" pos:end="261:23">&lt;</operator> <literal type="number" pos:start="261:25" pos:end="261:26">64</literal></expr>;</condition> <incr pos:start="261:29" pos:end="261:31"><expr pos:start="261:29" pos:end="261:31"><name pos:start="261:29" pos:end="261:29">i</name><operator pos:start="261:30" pos:end="261:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="263:13" pos:end="263:48"><block_content pos:start="263:13" pos:end="263:48">

            <expr_stmt pos:start="263:13" pos:end="263:48"><expr pos:start="263:13" pos:end="263:47"><name pos:start="263:13" pos:end="263:35"><name pos:start="263:13" pos:end="263:17">block</name><index pos:start="263:18" pos:end="263:35">[<expr pos:start="263:19" pos:end="263:34"><name pos:start="263:19" pos:end="263:34"><name pos:start="263:19" pos:end="263:31">idct_mmx_perm</name><index pos:start="263:32" pos:end="263:34">[<expr pos:start="263:33" pos:end="263:33"><name pos:start="263:33" pos:end="263:33">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="263:37" pos:end="263:37">=</operator> <name pos:start="263:39" pos:end="263:47"><name pos:start="263:39" pos:end="263:44">block1</name><index pos:start="263:45" pos:end="263:47">[<expr pos:start="263:46" pos:end="263:46"><name pos:start="263:46" pos:end="263:46">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="265:7" pos:end="271:5">else if <condition pos:start="265:15" pos:end="265:46">(<expr pos:start="265:16" pos:end="265:45"><name pos:start="265:16" pos:end="265:26"><name pos:start="265:16" pos:end="265:18">dct</name><operator pos:start="265:19" pos:end="265:20">-&gt;</operator><name pos:start="265:21" pos:end="265:26">format</name></name> <operator pos:start="265:28" pos:end="265:29">==</operator> <name pos:start="265:31" pos:end="265:45">MMX_SIMPLE_PERM</name></expr>)</condition> <block pos:start="265:48" pos:end="271:5">{<block_content pos:start="267:9" pos:end="269:55">

        <for pos:start="267:9" pos:end="269:55">for <control pos:start="267:13" pos:end="267:32">(<init pos:start="267:14" pos:end="267:19"><expr pos:start="267:14" pos:end="267:18"><name pos:start="267:14" pos:end="267:14">i</name> <operator pos:start="267:16" pos:end="267:16">=</operator> <literal type="number" pos:start="267:18" pos:end="267:18">0</literal></expr>;</init> <condition pos:start="267:21" pos:end="267:27"><expr pos:start="267:21" pos:end="267:26"><name pos:start="267:21" pos:end="267:21">i</name> <operator pos:start="267:23" pos:end="267:23">&lt;</operator> <literal type="number" pos:start="267:25" pos:end="267:26">64</literal></expr>;</condition> <incr pos:start="267:29" pos:end="267:31"><expr pos:start="267:29" pos:end="267:31"><name pos:start="267:29" pos:end="267:29">i</name><operator pos:start="267:30" pos:end="267:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="269:13" pos:end="269:55"><block_content pos:start="269:13" pos:end="269:55">

            <expr_stmt pos:start="269:13" pos:end="269:55"><expr pos:start="269:13" pos:end="269:54"><name pos:start="269:13" pos:end="269:42"><name pos:start="269:13" pos:end="269:17">block</name><index pos:start="269:18" pos:end="269:42">[<expr pos:start="269:19" pos:end="269:41"><name pos:start="269:19" pos:end="269:41"><name pos:start="269:19" pos:end="269:38">idct_simple_mmx_perm</name><index pos:start="269:39" pos:end="269:41">[<expr pos:start="269:40" pos:end="269:40"><name pos:start="269:40" pos:end="269:40">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="269:44" pos:end="269:44">=</operator> <name pos:start="269:46" pos:end="269:54"><name pos:start="269:46" pos:end="269:51">block1</name><index pos:start="269:52" pos:end="269:54">[<expr pos:start="269:53" pos:end="269:53"><name pos:start="269:53" pos:end="269:53">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <else pos:start="271:7" pos:end="277:5">else <block pos:start="271:12" pos:end="277:5">{<block_content pos:start="273:9" pos:end="275:33">

        <for pos:start="273:9" pos:end="275:33">for <control pos:start="273:13" pos:end="273:32">(<init pos:start="273:14" pos:end="273:19"><expr pos:start="273:14" pos:end="273:18"><name pos:start="273:14" pos:end="273:14">i</name> <operator pos:start="273:16" pos:end="273:16">=</operator> <literal type="number" pos:start="273:18" pos:end="273:18">0</literal></expr>;</init> <condition pos:start="273:21" pos:end="273:27"><expr pos:start="273:21" pos:end="273:26"><name pos:start="273:21" pos:end="273:21">i</name> <operator pos:start="273:23" pos:end="273:23">&lt;</operator> <literal type="number" pos:start="273:25" pos:end="273:26">64</literal></expr>;</condition> <incr pos:start="273:29" pos:end="273:31"><expr pos:start="273:29" pos:end="273:31"><name pos:start="273:29" pos:end="273:29">i</name><operator pos:start="273:30" pos:end="273:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="275:13" pos:end="275:33"><block_content pos:start="275:13" pos:end="275:33">

            <expr_stmt pos:start="275:13" pos:end="275:33"><expr pos:start="275:13" pos:end="275:32"><name pos:start="275:13" pos:end="275:20"><name pos:start="275:13" pos:end="275:17">block</name><index pos:start="275:18" pos:end="275:20">[<expr pos:start="275:19" pos:end="275:19"><name pos:start="275:19" pos:end="275:19">i</name></expr>]</index></name> <operator pos:start="275:22" pos:end="275:22">=</operator> <name pos:start="275:24" pos:end="275:32"><name pos:start="275:24" pos:end="275:29">block1</name><index pos:start="275:30" pos:end="275:32">[<expr pos:start="275:31" pos:end="275:31"><name pos:start="275:31" pos:end="275:31">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="281:5" pos:end="281:19"><expr pos:start="281:5" pos:end="281:18"><name pos:start="281:5" pos:end="281:6">ti</name> <operator pos:start="281:8" pos:end="281:8">=</operator> <call pos:start="281:10" pos:end="281:18"><name pos:start="281:10" pos:end="281:16">gettime</name><argument_list pos:start="281:17" pos:end="281:18">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:12"><expr pos:start="283:5" pos:end="283:11"><name pos:start="283:5" pos:end="283:7">it1</name> <operator pos:start="283:9" pos:end="283:9">=</operator> <literal type="number" pos:start="283:11" pos:end="283:11">0</literal></expr>;</expr_stmt>

    <do pos:start="285:5" pos:end="301:28">do <block pos:start="285:8" pos:end="301:5">{<block_content pos:start="287:9" pos:end="299:29">

        <for pos:start="287:9" pos:end="295:9">for <control pos:start="287:13" pos:end="287:45">(<init pos:start="287:14" pos:end="287:20"><expr pos:start="287:14" pos:end="287:19"><name pos:start="287:14" pos:end="287:15">it</name> <operator pos:start="287:17" pos:end="287:17">=</operator> <literal type="number" pos:start="287:19" pos:end="287:19">0</literal></expr>;</init> <condition pos:start="287:22" pos:end="287:39"><expr pos:start="287:22" pos:end="287:38"><name pos:start="287:22" pos:end="287:23">it</name> <operator pos:start="287:25" pos:end="287:25">&lt;</operator> <name pos:start="287:27" pos:end="287:38">NB_ITS_SPEED</name></expr>;</condition> <incr pos:start="287:41" pos:end="287:44"><expr pos:start="287:41" pos:end="287:44"><name pos:start="287:41" pos:end="287:42">it</name><operator pos:start="287:43" pos:end="287:44">++</operator></expr></incr>)</control> <block pos:start="287:47" pos:end="295:9">{<block_content pos:start="289:13" pos:end="293:29">

            <for pos:start="289:13" pos:end="291:37">for <control pos:start="289:17" pos:end="289:36">(<init pos:start="289:18" pos:end="289:23"><expr pos:start="289:18" pos:end="289:22"><name pos:start="289:18" pos:end="289:18">i</name> <operator pos:start="289:20" pos:end="289:20">=</operator> <literal type="number" pos:start="289:22" pos:end="289:22">0</literal></expr>;</init> <condition pos:start="289:25" pos:end="289:31"><expr pos:start="289:25" pos:end="289:30"><name pos:start="289:25" pos:end="289:25">i</name> <operator pos:start="289:27" pos:end="289:27">&lt;</operator> <literal type="number" pos:start="289:29" pos:end="289:30">64</literal></expr>;</condition> <incr pos:start="289:33" pos:end="289:35"><expr pos:start="289:33" pos:end="289:35"><name pos:start="289:33" pos:end="289:33">i</name><operator pos:start="289:34" pos:end="289:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="291:17" pos:end="291:37"><block_content pos:start="291:17" pos:end="291:37">

                <expr_stmt pos:start="291:17" pos:end="291:37"><expr pos:start="291:17" pos:end="291:36"><name pos:start="291:17" pos:end="291:24"><name pos:start="291:17" pos:end="291:21">block</name><index pos:start="291:22" pos:end="291:24">[<expr pos:start="291:23" pos:end="291:23"><name pos:start="291:23" pos:end="291:23">i</name></expr>]</index></name> <operator pos:start="291:26" pos:end="291:26">=</operator> <name pos:start="291:28" pos:end="291:36"><name pos:start="291:28" pos:end="291:33">block1</name><index pos:start="291:34" pos:end="291:36">[<expr pos:start="291:35" pos:end="291:35"><name pos:start="291:35" pos:end="291:35">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="293:13" pos:end="293:29"><expr pos:start="293:13" pos:end="293:28"><call pos:start="293:13" pos:end="293:28"><name pos:start="293:13" pos:end="293:21"><name pos:start="293:13" pos:end="293:15">dct</name><operator pos:start="293:16" pos:end="293:17">-&gt;</operator><name pos:start="293:18" pos:end="293:21">func</name></name><argument_list pos:start="293:22" pos:end="293:28">(<argument pos:start="293:23" pos:end="293:27"><expr pos:start="293:23" pos:end="293:27"><name pos:start="293:23" pos:end="293:27">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="297:9" pos:end="297:28"><expr pos:start="297:9" pos:end="297:27"><name pos:start="297:9" pos:end="297:11">it1</name> <operator pos:start="297:13" pos:end="297:14">+=</operator> <name pos:start="297:16" pos:end="297:27">NB_ITS_SPEED</name></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:29"><expr pos:start="299:9" pos:end="299:28"><name pos:start="299:9" pos:end="299:11">ti1</name> <operator pos:start="299:13" pos:end="299:13">=</operator> <call pos:start="299:15" pos:end="299:23"><name pos:start="299:15" pos:end="299:21">gettime</name><argument_list pos:start="299:22" pos:end="299:23">()</argument_list></call> <operator pos:start="299:25" pos:end="299:25">-</operator> <name pos:start="299:27" pos:end="299:28">ti</name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="301:13" pos:end="301:27">(<expr pos:start="301:14" pos:end="301:26"><name pos:start="301:14" pos:end="301:16">ti1</name> <operator pos:start="301:18" pos:end="301:18">&lt;</operator> <literal type="number" pos:start="301:20" pos:end="301:26">1000000</literal></expr>)</condition>;</do>

    <expr_stmt pos:start="303:5" pos:end="303:15"><expr pos:start="303:5" pos:end="303:14"><call pos:start="303:5" pos:end="303:14"><name pos:start="303:5" pos:end="303:12">mmx_emms</name><argument_list pos:start="303:13" pos:end="303:14">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="307:5" pos:end="309:49"><expr pos:start="307:5" pos:end="309:48"><call pos:start="307:5" pos:end="309:48"><name pos:start="307:5" pos:end="307:10">printf</name><argument_list pos:start="307:11" pos:end="309:48">(<argument pos:start="307:12" pos:end="307:34"><expr pos:start="307:12" pos:end="307:34"><literal type="string" pos:start="307:12" pos:end="307:34">"%s %s: %0.1f kdct/s\n"</literal></expr></argument>, <argument pos:start="307:37" pos:end="307:60"><expr pos:start="307:37" pos:end="307:60"><ternary pos:start="307:37" pos:end="307:60"><condition pos:start="307:37" pos:end="307:45"><expr pos:start="307:37" pos:end="307:43"><name pos:start="307:37" pos:end="307:43">is_idct</name></expr> ?</condition><then pos:start="307:47" pos:end="307:52"> <expr pos:start="307:47" pos:end="307:52"><literal type="string" pos:start="307:47" pos:end="307:52">"IDCT"</literal></expr> </then><else pos:start="307:54" pos:end="307:60">: <expr pos:start="307:56" pos:end="307:60"><literal type="string" pos:start="307:56" pos:end="307:60">"DCT"</literal></expr></else></ternary></expr></argument>, <argument pos:start="307:63" pos:end="307:71"><expr pos:start="307:63" pos:end="307:71"><name pos:start="307:63" pos:end="307:71"><name pos:start="307:63" pos:end="307:65">dct</name><operator pos:start="307:66" pos:end="307:67">-&gt;</operator><name pos:start="307:68" pos:end="307:71">name</name></name></expr></argument>,

           <argument pos:start="309:12" pos:end="309:47"><expr pos:start="309:12" pos:end="309:47"><operator pos:start="309:12" pos:end="309:12">(</operator><name pos:start="309:13" pos:end="309:18">double</name><operator pos:start="309:19" pos:end="309:19">)</operator> <name pos:start="309:21" pos:end="309:23">it1</name> <operator pos:start="309:25" pos:end="309:25">*</operator> <literal type="number" pos:start="309:27" pos:end="309:32">1000.0</literal> <operator pos:start="309:34" pos:end="309:34">/</operator> <operator pos:start="309:36" pos:end="309:36">(</operator><name pos:start="309:37" pos:end="309:42">double</name><operator pos:start="309:43" pos:end="309:43">)</operator> <name pos:start="309:45" pos:end="309:47">ti1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
