<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19040.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">rm_write_audio</name><parameter_list pos:start="1:26" pos:end="1:86">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:59">uint8_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">buf</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:74"><decl pos:start="1:67" pos:end="1:74"><type pos:start="1:67" pos:end="1:74"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:74">size</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:85"><decl pos:start="1:77" pos:end="1:85"><type pos:start="1:77" pos:end="1:85"><name pos:start="1:77" pos:end="1:79">int</name></type> <name pos:start="1:81" pos:end="1:85">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">buf1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">RMMuxContext</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">rm</name> <init pos:start="7:22" pos:end="7:35">= <expr pos:start="7:24" pos:end="7:35"><name pos:start="7:24" pos:end="7:35"><name pos:start="7:24" pos:end="7:24">s</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:35">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">StreamInfo</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:22">stream</name> <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:27">rm</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:41">audio_stream</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:35">/* XXX: suppress this malloc */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:8">buf1</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:44"><name pos:start="19:12" pos:end="19:20">av_malloc</name><argument_list pos:start="19:21" pos:end="19:44">(<argument pos:start="19:22" pos:end="19:43"><expr pos:start="19:22" pos:end="19:43"><name pos:start="19:22" pos:end="19:25">size</name> <operator pos:start="19:27" pos:end="19:27">*</operator> <sizeof pos:start="19:29" pos:end="19:43">sizeof<argument_list pos:start="19:35" pos:end="19:43">(<argument pos:start="19:36" pos:end="19:42"><expr pos:start="19:36" pos:end="19:42"><name pos:start="19:36" pos:end="19:42">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="25:5" pos:end="25:70"><expr pos:start="25:5" pos:end="25:69"><call pos:start="25:5" pos:end="25:69"><name pos:start="25:5" pos:end="25:23">write_packet_header</name><argument_list pos:start="25:24" pos:end="25:69">(<argument pos:start="25:25" pos:end="25:25"><expr pos:start="25:25" pos:end="25:25"><name pos:start="25:25" pos:end="25:25">s</name></expr></argument>, <argument pos:start="25:28" pos:end="25:33"><expr pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:33">stream</name></expr></argument>, <argument pos:start="25:36" pos:end="25:39"><expr pos:start="25:36" pos:end="25:39"><name pos:start="25:36" pos:end="25:39">size</name></expr></argument>, <argument pos:start="25:42" pos:end="25:68"><expr pos:start="25:42" pos:end="25:68"><operator pos:start="25:42" pos:end="25:42">!</operator><operator pos:start="25:43" pos:end="25:43">!</operator><operator pos:start="25:44" pos:end="25:44">(</operator><name pos:start="25:45" pos:end="25:49">flags</name> <operator pos:start="25:51" pos:end="25:51">&amp;</operator> <name pos:start="25:53" pos:end="25:67">AV_PKT_FLAG_KEY</name><operator pos:start="25:68" pos:end="25:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="47:5"><if pos:start="29:5" pos:end="43:5">if <condition pos:start="29:8" pos:end="29:49">(<expr pos:start="29:9" pos:end="29:48"><name pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:14">stream</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:19">enc</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:29">codec_id</name></name> <operator pos:start="29:31" pos:end="29:32">==</operator> <name pos:start="29:34" pos:end="29:48">AV_CODEC_ID_AC3</name></expr>)</condition> <block pos:start="29:51" pos:end="43:5">{<block_content pos:start="33:9" pos:end="41:35">

        <comment type="block" pos:start="31:9" pos:end="31:53">/* for AC-3, the words seem to be reversed */</comment>

        <for pos:start="33:9" pos:end="39:9">for<control pos:start="33:12" pos:end="33:28">(<init pos:start="33:13" pos:end="33:16"><expr pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:13">i</name><operator pos:start="33:14" pos:end="33:14">=</operator><literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>;</init><condition pos:start="33:17" pos:end="33:23"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:17">i</name><operator pos:start="33:18" pos:end="33:18">&lt;</operator><name pos:start="33:19" pos:end="33:22">size</name></expr>;</condition><incr pos:start="33:24" pos:end="33:27"><expr pos:start="33:24" pos:end="33:27"><name pos:start="33:24" pos:end="33:24">i</name><operator pos:start="33:25" pos:end="33:26">+=</operator><literal type="number" pos:start="33:27" pos:end="33:27">2</literal></expr></incr>)</control> <block pos:start="33:30" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:31">

            <expr_stmt pos:start="35:13" pos:end="35:31"><expr pos:start="35:13" pos:end="35:30"><name pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:16">buf1</name><index pos:start="35:17" pos:end="35:19">[<expr pos:start="35:18" pos:end="35:18"><name pos:start="35:18" pos:end="35:18">i</name></expr>]</index></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <name pos:start="35:23" pos:end="35:30"><name pos:start="35:23" pos:end="35:25">buf</name><index pos:start="35:26" pos:end="35:30">[<expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:27">i</name><operator pos:start="35:28" pos:end="35:28">+</operator><literal type="number" pos:start="35:29" pos:end="35:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:31"><expr pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:21"><name pos:start="37:13" pos:end="37:16">buf1</name><index pos:start="37:17" pos:end="37:21">[<expr pos:start="37:18" pos:end="37:20"><name pos:start="37:18" pos:end="37:18">i</name><operator pos:start="37:19" pos:end="37:19">+</operator><literal type="number" pos:start="37:20" pos:end="37:20">1</literal></expr>]</index></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:30"><name pos:start="37:25" pos:end="37:27">buf</name><index pos:start="37:28" pos:end="37:30">[<expr pos:start="37:29" pos:end="37:29"><name pos:start="37:29" pos:end="37:29">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><call pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:18">avio_write</name><argument_list pos:start="41:19" pos:end="41:34">(<argument pos:start="41:20" pos:end="41:21"><expr pos:start="41:20" pos:end="41:21"><name pos:start="41:20" pos:end="41:21">pb</name></expr></argument>, <argument pos:start="41:24" pos:end="41:27"><expr pos:start="41:24" pos:end="41:27"><name pos:start="41:24" pos:end="41:27">buf1</name></expr></argument>, <argument pos:start="41:30" pos:end="41:33"><expr pos:start="41:30" pos:end="41:33"><name pos:start="41:30" pos:end="41:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="47:5">else <block pos:start="43:12" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:34">

        <expr_stmt pos:start="45:9" pos:end="45:34"><expr pos:start="45:9" pos:end="45:33"><call pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:18">avio_write</name><argument_list pos:start="45:19" pos:end="45:33">(<argument pos:start="45:20" pos:end="45:21"><expr pos:start="45:20" pos:end="45:21"><name pos:start="45:20" pos:end="45:21">pb</name></expr></argument>, <argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">buf</name></expr></argument>, <argument pos:start="45:29" pos:end="45:32"><expr pos:start="45:29" pos:end="45:32"><name pos:start="45:29" pos:end="45:32">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:10">stream</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:21">nb_frames</name></name><operator pos:start="49:22" pos:end="49:23">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:18"><expr pos:start="51:5" pos:end="51:17"><call pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:11">av_free</name><argument_list pos:start="51:12" pos:end="51:17">(<argument pos:start="51:13" pos:end="51:16"><expr pos:start="51:13" pos:end="51:16"><name pos:start="51:13" pos:end="51:16">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
