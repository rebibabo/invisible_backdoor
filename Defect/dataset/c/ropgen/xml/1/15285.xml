<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15285.c" pos:tabs="8"><function pos:start="1:1" pos:end="217:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ism_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="217:1">{<block_content pos:start="5:5" pos:end="215:15">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:26">SmoothStreamingContext</name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:29">c</name> <init pos:start="5:31" pos:end="5:44">= <expr pos:start="5:33" pos:end="5:44"><name pos:start="5:33" pos:end="5:44"><name pos:start="5:33" pos:end="5:33">s</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>, <decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVOutputFormat</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">oformat</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:29"><expr pos:start="13:5" pos:end="13:28"><call pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:9">mkdir</name><argument_list pos:start="13:10" pos:end="13:28">(<argument pos:start="13:11" pos:end="13:21"><expr pos:start="13:11" pos:end="13:21"><name pos:start="13:11" pos:end="13:21"><name pos:start="13:11" pos:end="13:11">s</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:21">filename</name></name></expr></argument>, <argument pos:start="13:24" pos:end="13:27"><expr pos:start="13:24" pos:end="13:27"><literal type="number" pos:start="13:24" pos:end="13:27">0777</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:50"><expr pos:start="17:5" pos:end="17:49"><name pos:start="17:5" pos:end="17:11">oformat</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:49"><name pos:start="17:15" pos:end="17:29">av_guess_format</name><argument_list pos:start="17:30" pos:end="17:49">(<argument pos:start="17:31" pos:end="17:36"><expr pos:start="17:31" pos:end="17:36"><literal type="string" pos:start="17:31" pos:end="17:36">"ismv"</literal></expr></argument>, <argument pos:start="17:39" pos:end="17:42"><expr pos:start="17:39" pos:end="17:42"><name pos:start="17:39" pos:end="17:42">NULL</name></expr></argument>, <argument pos:start="17:45" pos:end="17:48"><expr pos:start="17:45" pos:end="17:48"><name pos:start="17:45" pos:end="17:48">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:16">oformat</name></expr>)</condition> <block pos:start="19:19" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:38"><expr pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:37">AVERROR_MUXER_NOT_FOUND</name></expr>;</expr_stmt>

        <goto pos:start="23:9" pos:end="23:18">goto <name pos:start="23:14" pos:end="23:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:65"><expr pos:start="29:5" pos:end="29:64"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:5">c</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:14">streams</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:64"><name pos:start="29:18" pos:end="29:27">av_mallocz</name><argument_list pos:start="29:28" pos:end="29:64">(<argument pos:start="29:29" pos:end="29:63"><expr pos:start="29:29" pos:end="29:63"><sizeof pos:start="29:29" pos:end="29:47">sizeof<argument_list pos:start="29:35" pos:end="29:47">(<argument pos:start="29:36" pos:end="29:46"><expr pos:start="29:36" pos:end="29:46"><operator pos:start="29:36" pos:end="29:36">*</operator><name pos:start="29:37" pos:end="29:46"><name pos:start="29:37" pos:end="29:37">c</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:46">streams</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="29:49" pos:end="29:49">*</operator> <name pos:start="29:51" pos:end="29:63"><name pos:start="29:51" pos:end="29:51">s</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:63">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:20">(<expr pos:start="31:9" pos:end="31:19"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:19"><name pos:start="31:10" pos:end="31:10">c</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:19">streams</name></name></expr>)</condition> <block pos:start="31:22" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:29"><name pos:start="33:15" pos:end="33:21">AVERROR</name><argument_list pos:start="33:22" pos:end="33:29">(<argument pos:start="33:23" pos:end="33:28"><expr pos:start="33:23" pos:end="33:28"><name pos:start="33:23" pos:end="33:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="35:9" pos:end="35:18">goto <name pos:start="35:14" pos:end="35:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="41:5" pos:end="193:5">for <control pos:start="41:9" pos:end="41:39">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:34"><expr pos:start="41:17" pos:end="41:33"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:33"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:33">nb_streams</name></name></expr>;</condition> <incr pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><name pos:start="41:36" pos:end="41:36">i</name><operator pos:start="41:37" pos:end="41:38">++</operator></expr></incr>)</control> <block pos:start="41:41" pos:end="193:5">{<block_content pos:start="43:9" pos:end="191:29">

        <decl_stmt pos:start="43:9" pos:end="43:42"><decl pos:start="43:9" pos:end="43:41"><type pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:20">OutputStream</name> <modifier pos:start="43:22" pos:end="43:22">*</modifier></type><name pos:start="43:23" pos:end="43:24">os</name> <init pos:start="43:26" pos:end="43:41">= <expr pos:start="43:28" pos:end="43:41"><operator pos:start="43:28" pos:end="43:28">&amp;</operator><name pos:start="43:29" pos:end="43:41"><name pos:start="43:29" pos:end="43:29">c</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:38">streams</name><index pos:start="43:39" pos:end="43:41">[<expr pos:start="43:40" pos:end="43:40"><name pos:start="43:40" pos:end="43:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:29"><decl pos:start="45:9" pos:end="45:28"><type pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:23">AVFormatContext</name> <modifier pos:start="45:25" pos:end="45:25">*</modifier></type><name pos:start="45:26" pos:end="45:28">ctx</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:21"><decl pos:start="47:9" pos:end="47:20"><type pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:16">AVStream</name> <modifier pos:start="47:18" pos:end="47:18">*</modifier></type><name pos:start="47:19" pos:end="47:20">st</name></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:34"><decl pos:start="49:9" pos:end="49:33"><type pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:20">AVDictionary</name> <modifier pos:start="49:22" pos:end="49:22">*</modifier></type><name pos:start="49:23" pos:end="49:26">opts</name> <init pos:start="49:28" pos:end="49:33">= <expr pos:start="49:30" pos:end="49:33"><name pos:start="49:30" pos:end="49:33">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:21"><decl pos:start="51:9" pos:end="51:20"><type pos:start="51:9" pos:end="51:12"><name pos:start="51:9" pos:end="51:12">char</name></type> <name pos:start="51:14" pos:end="51:20"><name pos:start="51:14" pos:end="51:16">buf</name><index pos:start="51:17" pos:end="51:20">[<expr pos:start="51:18" pos:end="51:19"><literal type="number" pos:start="51:18" pos:end="51:19">10</literal></expr>]</index></name></decl>;</decl_stmt>



        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:44">(<expr pos:start="55:13" pos:end="55:43"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:26"><name pos:start="55:14" pos:end="55:14">s</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:23">streams</name><index pos:start="55:24" pos:end="55:26">[<expr pos:start="55:25" pos:end="55:25"><name pos:start="55:25" pos:end="55:25">i</name></expr>]</index></name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:43"><name pos:start="55:29" pos:end="55:33">codec</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:43">bit_rate</name></name></expr>)</condition> <block pos:start="55:46" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:22">

            <expr_stmt pos:start="57:13" pos:end="57:74"><expr pos:start="57:13" pos:end="57:73"><call pos:start="57:13" pos:end="57:73"><name pos:start="57:13" pos:end="57:18">av_log</name><argument_list pos:start="57:19" pos:end="57:73">(<argument pos:start="57:20" pos:end="57:20"><expr pos:start="57:20" pos:end="57:20"><name pos:start="57:20" pos:end="57:20">s</name></expr></argument>, <argument pos:start="57:23" pos:end="57:34"><expr pos:start="57:23" pos:end="57:34"><name pos:start="57:23" pos:end="57:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:37" pos:end="57:69"><expr pos:start="57:37" pos:end="57:69"><literal type="string" pos:start="57:37" pos:end="57:69">"No bit rate set for stream %d\n"</literal></expr></argument>, <argument pos:start="57:72" pos:end="57:72"><expr pos:start="57:72" pos:end="57:72"><name pos:start="57:72" pos:end="57:72">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:34"><expr pos:start="59:13" pos:end="59:33"><name pos:start="59:13" pos:end="59:15">ret</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="59:33"><name pos:start="59:19" pos:end="59:25">AVERROR</name><argument_list pos:start="59:26" pos:end="59:33">(<argument pos:start="59:27" pos:end="59:32"><expr pos:start="59:27" pos:end="59:32"><name pos:start="59:27" pos:end="59:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="61:13" pos:end="61:22">goto <name pos:start="61:18" pos:end="61:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:120"><expr pos:start="65:9" pos:end="65:119"><call pos:start="65:9" pos:end="65:119"><name pos:start="65:9" pos:end="65:16">snprintf</name><argument_list pos:start="65:17" pos:end="65:119">(<argument pos:start="65:18" pos:end="65:28"><expr pos:start="65:18" pos:end="65:28"><name pos:start="65:18" pos:end="65:28"><name pos:start="65:18" pos:end="65:19">os</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:28">dirname</name></name></expr></argument>, <argument pos:start="65:31" pos:end="65:49"><expr pos:start="65:31" pos:end="65:49"><sizeof pos:start="65:31" pos:end="65:49">sizeof<argument_list pos:start="65:37" pos:end="65:49">(<argument pos:start="65:38" pos:end="65:48"><expr pos:start="65:38" pos:end="65:48"><name pos:start="65:38" pos:end="65:48"><name pos:start="65:38" pos:end="65:39">os</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:48">dirname</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="65:52" pos:end="65:73"><expr pos:start="65:52" pos:end="65:73"><literal type="string" pos:start="65:52" pos:end="65:73">"%s/QualityLevels(%d)"</literal></expr></argument>, <argument pos:start="65:76" pos:end="65:86"><expr pos:start="65:76" pos:end="65:86"><name pos:start="65:76" pos:end="65:86"><name pos:start="65:76" pos:end="65:76">s</name><operator pos:start="65:77" pos:end="65:78">-&gt;</operator><name pos:start="65:79" pos:end="65:86">filename</name></name></expr></argument>, <argument pos:start="65:89" pos:end="65:118"><expr pos:start="65:89" pos:end="65:118"><name pos:start="65:89" pos:end="65:101"><name pos:start="65:89" pos:end="65:89">s</name><operator pos:start="65:90" pos:end="65:91">-&gt;</operator><name pos:start="65:92" pos:end="65:98">streams</name><index pos:start="65:99" pos:end="65:101">[<expr pos:start="65:100" pos:end="65:100"><name pos:start="65:100" pos:end="65:100">i</name></expr>]</index></name><operator pos:start="65:102" pos:end="65:103">-&gt;</operator><name pos:start="65:104" pos:end="65:118"><name pos:start="65:104" pos:end="65:108">codec</name><operator pos:start="65:109" pos:end="65:110">-&gt;</operator><name pos:start="65:111" pos:end="65:118">bit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:33"><expr pos:start="67:9" pos:end="67:32"><call pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:13">mkdir</name><argument_list pos:start="67:14" pos:end="67:32">(<argument pos:start="67:15" pos:end="67:25"><expr pos:start="67:15" pos:end="67:25"><name pos:start="67:15" pos:end="67:25"><name pos:start="67:15" pos:end="67:16">os</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:25">dirname</name></name></expr></argument>, <argument pos:start="67:28" pos:end="67:31"><expr pos:start="67:28" pos:end="67:31"><literal type="number" pos:start="67:28" pos:end="67:31">0777</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:39"><expr pos:start="71:9" pos:end="71:38"><name pos:start="71:9" pos:end="71:11">ctx</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:38"><name pos:start="71:15" pos:end="71:36">avformat_alloc_context</name><argument_list pos:start="71:37" pos:end="71:38">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="79:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:17">(<expr pos:start="73:13" pos:end="73:16"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:16">ctx</name></expr>)</condition> <block pos:start="73:19" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:22">

            <expr_stmt pos:start="75:13" pos:end="75:34"><expr pos:start="75:13" pos:end="75:33"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <call pos:start="75:19" pos:end="75:33"><name pos:start="75:19" pos:end="75:25">AVERROR</name><argument_list pos:start="75:26" pos:end="75:33">(<argument pos:start="75:27" pos:end="75:32"><expr pos:start="75:27" pos:end="75:32"><name pos:start="75:27" pos:end="75:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="77:13" pos:end="77:22">goto <name pos:start="77:18" pos:end="77:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:22"><expr pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:10">os</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:15">ctx</name></name> <operator pos:start="81:17" pos:end="81:17">=</operator> <name pos:start="81:19" pos:end="81:21">ctx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:31"><expr pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:11">ctx</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:20">oformat</name></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:30">oformat</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:56"><expr pos:start="85:9" pos:end="85:55"><name pos:start="85:9" pos:end="85:31"><name pos:start="85:9" pos:end="85:11">ctx</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:31">interrupt_callback</name></name> <operator pos:start="85:33" pos:end="85:33">=</operator> <name pos:start="85:35" pos:end="85:55"><name pos:start="85:35" pos:end="85:35">s</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:55">interrupt_callback</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:51">(<expr pos:start="89:13" pos:end="89:50"><operator pos:start="89:13" pos:end="89:13">!</operator><operator pos:start="89:14" pos:end="89:14">(</operator><name pos:start="89:15" pos:end="89:16">st</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <call pos:start="89:20" pos:end="89:49"><name pos:start="89:20" pos:end="89:38">avformat_new_stream</name><argument_list pos:start="89:39" pos:end="89:49">(<argument pos:start="89:40" pos:end="89:42"><expr pos:start="89:40" pos:end="89:42"><name pos:start="89:40" pos:end="89:42">ctx</name></expr></argument>, <argument pos:start="89:45" pos:end="89:48"><expr pos:start="89:45" pos:end="89:48"><name pos:start="89:45" pos:end="89:48">NULL</name></expr></argument>)</argument_list></call><operator pos:start="89:50" pos:end="89:50">)</operator></expr>)</condition> <block pos:start="89:53" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:22">

            <expr_stmt pos:start="91:13" pos:end="91:34"><expr pos:start="91:13" pos:end="91:33"><name pos:start="91:13" pos:end="91:15">ret</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <call pos:start="91:19" pos:end="91:33"><name pos:start="91:19" pos:end="91:25">AVERROR</name><argument_list pos:start="91:26" pos:end="91:33">(<argument pos:start="91:27" pos:end="91:32"><expr pos:start="91:27" pos:end="91:32"><name pos:start="91:27" pos:end="91:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="93:13" pos:end="93:22">goto <name pos:start="93:18" pos:end="93:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:62"><expr pos:start="97:9" pos:end="97:61"><call pos:start="97:9" pos:end="97:61"><name pos:start="97:9" pos:end="97:28">avcodec_copy_context</name><argument_list pos:start="97:29" pos:end="97:61">(<argument pos:start="97:30" pos:end="97:38"><expr pos:start="97:30" pos:end="97:38"><name pos:start="97:30" pos:end="97:38"><name pos:start="97:30" pos:end="97:31">st</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:38">codec</name></name></expr></argument>, <argument pos:start="97:41" pos:end="97:60"><expr pos:start="97:41" pos:end="97:60"><name pos:start="97:41" pos:end="97:53"><name pos:start="97:41" pos:end="97:41">s</name><operator pos:start="97:42" pos:end="97:43">-&gt;</operator><name pos:start="97:44" pos:end="97:50">streams</name><index pos:start="97:51" pos:end="97:53">[<expr pos:start="97:52" pos:end="97:52"><name pos:start="97:52" pos:end="97:52">i</name></expr>]</index></name><operator pos:start="97:54" pos:end="97:55">-&gt;</operator><name pos:start="97:56" pos:end="97:60">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:69"><expr pos:start="99:9" pos:end="99:68"><name pos:start="99:9" pos:end="99:31"><name pos:start="99:9" pos:end="99:10">st</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:31">sample_aspect_ratio</name></name> <operator pos:start="99:33" pos:end="99:33">=</operator> <name pos:start="99:35" pos:end="99:47"><name pos:start="99:35" pos:end="99:35">s</name><operator pos:start="99:36" pos:end="99:37">-&gt;</operator><name pos:start="99:38" pos:end="99:44">streams</name><index pos:start="99:45" pos:end="99:47">[<expr pos:start="99:46" pos:end="99:46"><name pos:start="99:46" pos:end="99:46">i</name></expr>]</index></name><operator pos:start="99:48" pos:end="99:49">-&gt;</operator><name pos:start="99:50" pos:end="99:68">sample_aspect_ratio</name></expr>;</expr_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:115"><expr pos:start="103:9" pos:end="103:114"><name pos:start="103:9" pos:end="103:15"><name pos:start="103:9" pos:end="103:11">ctx</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:15">pb</name></name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:114"><name pos:start="103:19" pos:end="103:36">avio_alloc_context</name><argument_list pos:start="103:37" pos:end="103:114">(<argument pos:start="103:38" pos:end="103:46"><expr pos:start="103:38" pos:end="103:46"><name pos:start="103:38" pos:end="103:46"><name pos:start="103:38" pos:end="103:39">os</name><operator pos:start="103:40" pos:end="103:41">-&gt;</operator><name pos:start="103:42" pos:end="103:46">iobuf</name></name></expr></argument>, <argument pos:start="103:49" pos:end="103:65"><expr pos:start="103:49" pos:end="103:65"><sizeof pos:start="103:49" pos:end="103:65">sizeof<argument_list pos:start="103:55" pos:end="103:65">(<argument pos:start="103:56" pos:end="103:64"><expr pos:start="103:56" pos:end="103:64"><name pos:start="103:56" pos:end="103:64"><name pos:start="103:56" pos:end="103:57">os</name><operator pos:start="103:58" pos:end="103:59">-&gt;</operator><name pos:start="103:60" pos:end="103:64">iobuf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="103:68" pos:end="103:82"><expr pos:start="103:68" pos:end="103:82"><name pos:start="103:68" pos:end="103:82">AVIO_FLAG_WRITE</name></expr></argument>, <argument pos:start="103:85" pos:end="103:86"><expr pos:start="103:85" pos:end="103:86"><name pos:start="103:85" pos:end="103:86">os</name></expr></argument>, <argument pos:start="103:89" pos:end="103:92"><expr pos:start="103:89" pos:end="103:92"><name pos:start="103:89" pos:end="103:92">NULL</name></expr></argument>, <argument pos:start="103:95" pos:end="103:103"><expr pos:start="103:95" pos:end="103:103"><name pos:start="103:95" pos:end="103:103">ism_write</name></expr></argument>, <argument pos:start="103:106" pos:end="103:113"><expr pos:start="103:106" pos:end="103:113"><name pos:start="103:106" pos:end="103:113">ism_seek</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:21">(<expr pos:start="105:13" pos:end="105:20"><operator pos:start="105:13" pos:end="105:13">!</operator><name pos:start="105:14" pos:end="105:20"><name pos:start="105:14" pos:end="105:16">ctx</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:20">pb</name></name></expr>)</condition> <block pos:start="105:23" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:22">

            <expr_stmt pos:start="107:13" pos:end="107:34"><expr pos:start="107:13" pos:end="107:33"><name pos:start="107:13" pos:end="107:15">ret</name> <operator pos:start="107:17" pos:end="107:17">=</operator> <call pos:start="107:19" pos:end="107:33"><name pos:start="107:19" pos:end="107:25">AVERROR</name><argument_list pos:start="107:26" pos:end="107:33">(<argument pos:start="107:27" pos:end="107:32"><expr pos:start="107:27" pos:end="107:32"><name pos:start="107:27" pos:end="107:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="109:13" pos:end="109:22">goto <name pos:start="109:18" pos:end="109:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:61"><expr pos:start="115:9" pos:end="115:60"><call pos:start="115:9" pos:end="115:60"><name pos:start="115:9" pos:end="115:16">snprintf</name><argument_list pos:start="115:17" pos:end="115:60">(<argument pos:start="115:18" pos:end="115:20"><expr pos:start="115:18" pos:end="115:20"><name pos:start="115:18" pos:end="115:20">buf</name></expr></argument>, <argument pos:start="115:23" pos:end="115:33"><expr pos:start="115:23" pos:end="115:33"><sizeof pos:start="115:23" pos:end="115:33">sizeof<argument_list pos:start="115:29" pos:end="115:33">(<argument pos:start="115:30" pos:end="115:32"><expr pos:start="115:30" pos:end="115:32"><name pos:start="115:30" pos:end="115:32">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="115:36" pos:end="115:39"><expr pos:start="115:36" pos:end="115:39"><literal type="string" pos:start="115:36" pos:end="115:39">"%d"</literal></expr></argument>, <argument pos:start="115:42" pos:end="115:59"><expr pos:start="115:42" pos:end="115:59"><name pos:start="115:42" pos:end="115:59"><name pos:start="115:42" pos:end="115:42">c</name><operator pos:start="115:43" pos:end="115:44">-&gt;</operator><name pos:start="115:45" pos:end="115:59">lookahead_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:52"><expr pos:start="117:9" pos:end="117:51"><call pos:start="117:9" pos:end="117:51"><name pos:start="117:9" pos:end="117:19">av_dict_set</name><argument_list pos:start="117:20" pos:end="117:51">(<argument pos:start="117:21" pos:end="117:25"><expr pos:start="117:21" pos:end="117:25"><operator pos:start="117:21" pos:end="117:21">&amp;</operator><name pos:start="117:22" pos:end="117:25">opts</name></expr></argument>, <argument pos:start="117:28" pos:end="117:42"><expr pos:start="117:28" pos:end="117:42"><literal type="string" pos:start="117:28" pos:end="117:42">"ism_lookahead"</literal></expr></argument>, <argument pos:start="117:45" pos:end="117:47"><expr pos:start="117:45" pos:end="117:47"><name pos:start="117:45" pos:end="117:47">buf</name></expr></argument>, <argument pos:start="117:50" pos:end="117:50"><expr pos:start="117:50" pos:end="117:50"><literal type="number" pos:start="117:50" pos:end="117:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:57"><expr pos:start="119:9" pos:end="119:56"><call pos:start="119:9" pos:end="119:56"><name pos:start="119:9" pos:end="119:19">av_dict_set</name><argument_list pos:start="119:20" pos:end="119:56">(<argument pos:start="119:21" pos:end="119:25"><expr pos:start="119:21" pos:end="119:25"><operator pos:start="119:21" pos:end="119:21">&amp;</operator><name pos:start="119:22" pos:end="119:25">opts</name></expr></argument>, <argument pos:start="119:28" pos:end="119:37"><expr pos:start="119:28" pos:end="119:37"><literal type="string" pos:start="119:28" pos:end="119:37">"movflags"</literal></expr></argument>, <argument pos:start="119:40" pos:end="119:52"><expr pos:start="119:40" pos:end="119:52"><literal type="string" pos:start="119:40" pos:end="119:52">"frag_custom"</literal></expr></argument>, <argument pos:start="119:55" pos:end="119:55"><expr pos:start="119:55" pos:end="119:55"><literal type="number" pos:start="119:55" pos:end="119:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="125:9"><if pos:start="121:9" pos:end="125:9">if <condition pos:start="121:12" pos:end="121:58">(<expr pos:start="121:13" pos:end="121:57"><operator pos:start="121:13" pos:end="121:13">(</operator><name pos:start="121:14" pos:end="121:16">ret</name> <operator pos:start="121:18" pos:end="121:18">=</operator> <call pos:start="121:20" pos:end="121:52"><name pos:start="121:20" pos:end="121:40">avformat_write_header</name><argument_list pos:start="121:41" pos:end="121:52">(<argument pos:start="121:42" pos:end="121:44"><expr pos:start="121:42" pos:end="121:44"><name pos:start="121:42" pos:end="121:44">ctx</name></expr></argument>, <argument pos:start="121:47" pos:end="121:51"><expr pos:start="121:47" pos:end="121:51"><operator pos:start="121:47" pos:end="121:47">&amp;</operator><name pos:start="121:48" pos:end="121:51">opts</name></expr></argument>)</argument_list></call><operator pos:start="121:53" pos:end="121:53">)</operator> <operator pos:start="121:55" pos:end="121:55">&lt;</operator> <literal type="number" pos:start="121:57" pos:end="121:57">0</literal></expr>)</condition> <block pos:start="121:60" pos:end="125:9">{<block_content pos:start="123:14" pos:end="123:23">

             <goto pos:start="123:14" pos:end="123:23">goto <name pos:start="123:19" pos:end="123:22">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:27"><expr pos:start="127:9" pos:end="127:26"><name pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:10">os</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:22">ctx_inited</name></name> <operator pos:start="127:24" pos:end="127:24">=</operator> <literal type="number" pos:start="127:26" pos:end="127:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:28"><expr pos:start="129:9" pos:end="129:27"><call pos:start="129:9" pos:end="129:27"><name pos:start="129:9" pos:end="129:18">avio_flush</name><argument_list pos:start="129:19" pos:end="129:27">(<argument pos:start="129:20" pos:end="129:26"><expr pos:start="129:20" pos:end="129:26"><name pos:start="129:20" pos:end="129:26"><name pos:start="129:20" pos:end="129:22">ctx</name><operator pos:start="129:23" pos:end="129:24">-&gt;</operator><name pos:start="129:25" pos:end="129:26">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:28"><expr pos:start="131:9" pos:end="131:27"><call pos:start="131:9" pos:end="131:27"><name pos:start="131:9" pos:end="131:20">av_dict_free</name><argument_list pos:start="131:21" pos:end="131:27">(<argument pos:start="131:22" pos:end="131:26"><expr pos:start="131:22" pos:end="131:26"><operator pos:start="131:22" pos:end="131:22">&amp;</operator><name pos:start="131:23" pos:end="131:26">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:49"><expr pos:start="133:9" pos:end="133:48"><name pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:18">streams</name><index pos:start="133:19" pos:end="133:21">[<expr pos:start="133:20" pos:end="133:20"><name pos:start="133:20" pos:end="133:20">i</name></expr>]</index></name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:32">time_base</name> <operator pos:start="133:34" pos:end="133:34">=</operator> <name pos:start="133:36" pos:end="133:48"><name pos:start="133:36" pos:end="133:37">st</name><operator pos:start="133:38" pos:end="133:39">-&gt;</operator><name pos:start="133:40" pos:end="133:48">time_base</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="189:9"><if pos:start="135:9" pos:end="159:9">if <condition pos:start="135:12" pos:end="135:56">(<expr pos:start="135:13" pos:end="135:55"><name pos:start="135:13" pos:end="135:33"><name pos:start="135:13" pos:end="135:14">st</name><operator pos:start="135:15" pos:end="135:16">-&gt;</operator><name pos:start="135:17" pos:end="135:21">codec</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:33">codec_type</name></name> <operator pos:start="135:35" pos:end="135:36">==</operator> <name pos:start="135:38" pos:end="135:55">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="135:58" pos:end="159:9">{<block_content pos:start="137:13" pos:end="157:13">

            <expr_stmt pos:start="137:13" pos:end="137:29"><expr pos:start="137:13" pos:end="137:28"><name pos:start="137:13" pos:end="137:24"><name pos:start="137:13" pos:end="137:13">c</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:24">has_video</name></name> <operator pos:start="137:26" pos:end="137:26">=</operator> <literal type="number" pos:start="137:28" pos:end="137:28">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:42"><expr pos:start="139:13" pos:end="139:41"><name pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:14">os</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:31">stream_type_tag</name></name> <operator pos:start="139:33" pos:end="139:33">=</operator> <literal type="string" pos:start="139:35" pos:end="139:41">"video"</literal></expr>;</expr_stmt>

            <if_stmt pos:start="141:13" pos:end="157:13"><if pos:start="141:13" pos:end="145:13">if <condition pos:start="141:16" pos:end="141:56">(<expr pos:start="141:17" pos:end="141:55"><name pos:start="141:17" pos:end="141:35"><name pos:start="141:17" pos:end="141:18">st</name><operator pos:start="141:19" pos:end="141:20">-&gt;</operator><name pos:start="141:21" pos:end="141:25">codec</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:35">codec_id</name></name> <operator pos:start="141:37" pos:end="141:38">==</operator> <name pos:start="141:40" pos:end="141:55">AV_CODEC_ID_H264</name></expr>)</condition> <block pos:start="141:58" pos:end="145:13">{<block_content pos:start="143:17" pos:end="143:36">

                <expr_stmt pos:start="143:17" pos:end="143:36"><expr pos:start="143:17" pos:end="143:35"><name pos:start="143:17" pos:end="143:26"><name pos:start="143:17" pos:end="143:18">os</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:26">fourcc</name></name> <operator pos:start="143:28" pos:end="143:28">=</operator> <literal type="string" pos:start="143:30" pos:end="143:35">"H264"</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="145:15" pos:end="149:13">else if <condition pos:start="145:23" pos:end="145:62">(<expr pos:start="145:24" pos:end="145:61"><name pos:start="145:24" pos:end="145:42"><name pos:start="145:24" pos:end="145:25">st</name><operator pos:start="145:26" pos:end="145:27">-&gt;</operator><name pos:start="145:28" pos:end="145:32">codec</name><operator pos:start="145:33" pos:end="145:34">-&gt;</operator><name pos:start="145:35" pos:end="145:42">codec_id</name></name> <operator pos:start="145:44" pos:end="145:45">==</operator> <name pos:start="145:47" pos:end="145:61">AV_CODEC_ID_VC1</name></expr>)</condition> <block pos:start="145:64" pos:end="149:13">{<block_content pos:start="147:17" pos:end="147:36">

                <expr_stmt pos:start="147:17" pos:end="147:36"><expr pos:start="147:17" pos:end="147:35"><name pos:start="147:17" pos:end="147:26"><name pos:start="147:17" pos:end="147:18">os</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:26">fourcc</name></name> <operator pos:start="147:28" pos:end="147:28">=</operator> <literal type="string" pos:start="147:30" pos:end="147:35">"WVC1"</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="149:15" pos:end="157:13">else <block pos:start="149:20" pos:end="157:13">{<block_content pos:start="151:17" pos:end="155:26">

                <expr_stmt pos:start="151:17" pos:end="151:69"><expr pos:start="151:17" pos:end="151:68"><call pos:start="151:17" pos:end="151:68"><name pos:start="151:17" pos:end="151:22">av_log</name><argument_list pos:start="151:23" pos:end="151:68">(<argument pos:start="151:24" pos:end="151:24"><expr pos:start="151:24" pos:end="151:24"><name pos:start="151:24" pos:end="151:24">s</name></expr></argument>, <argument pos:start="151:27" pos:end="151:38"><expr pos:start="151:27" pos:end="151:38"><name pos:start="151:27" pos:end="151:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="151:41" pos:end="151:67"><expr pos:start="151:41" pos:end="151:67"><literal type="string" pos:start="151:41" pos:end="151:67">"Unsupported video codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:38"><expr pos:start="153:17" pos:end="153:37"><name pos:start="153:17" pos:end="153:19">ret</name> <operator pos:start="153:21" pos:end="153:21">=</operator> <call pos:start="153:23" pos:end="153:37"><name pos:start="153:23" pos:end="153:29">AVERROR</name><argument_list pos:start="153:30" pos:end="153:37">(<argument pos:start="153:31" pos:end="153:36"><expr pos:start="153:31" pos:end="153:36"><name pos:start="153:31" pos:end="153:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="155:17" pos:end="155:26">goto <name pos:start="155:22" pos:end="155:25">fail</name>;</goto>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="159:11" pos:end="189:9">else <block pos:start="159:16" pos:end="189:9">{<block_content pos:start="161:13" pos:end="187:82">

            <expr_stmt pos:start="161:13" pos:end="161:29"><expr pos:start="161:13" pos:end="161:28"><name pos:start="161:13" pos:end="161:24"><name pos:start="161:13" pos:end="161:13">c</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:24">has_audio</name></name> <operator pos:start="161:26" pos:end="161:26">=</operator> <literal type="number" pos:start="161:28" pos:end="161:28">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:42"><expr pos:start="163:13" pos:end="163:41"><name pos:start="163:13" pos:end="163:31"><name pos:start="163:13" pos:end="163:14">os</name><operator pos:start="163:15" pos:end="163:16">-&gt;</operator><name pos:start="163:17" pos:end="163:31">stream_type_tag</name></name> <operator pos:start="163:33" pos:end="163:33">=</operator> <literal type="string" pos:start="163:35" pos:end="163:41">"audio"</literal></expr>;</expr_stmt>

            <if_stmt pos:start="165:13" pos:end="185:13"><if pos:start="165:13" pos:end="171:13">if <condition pos:start="165:16" pos:end="165:55">(<expr pos:start="165:17" pos:end="165:54"><name pos:start="165:17" pos:end="165:35"><name pos:start="165:17" pos:end="165:18">st</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:25">codec</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:35">codec_id</name></name> <operator pos:start="165:37" pos:end="165:38">==</operator> <name pos:start="165:40" pos:end="165:54">AV_CODEC_ID_AAC</name></expr>)</condition> <block pos:start="165:57" pos:end="171:13">{<block_content pos:start="167:17" pos:end="169:37">

                <expr_stmt pos:start="167:17" pos:end="167:36"><expr pos:start="167:17" pos:end="167:35"><name pos:start="167:17" pos:end="167:26"><name pos:start="167:17" pos:end="167:18">os</name><operator pos:start="167:19" pos:end="167:20">-&gt;</operator><name pos:start="167:21" pos:end="167:26">fourcc</name></name> <operator pos:start="167:28" pos:end="167:28">=</operator> <literal type="string" pos:start="167:30" pos:end="167:35">"AACL"</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:37"><expr pos:start="169:17" pos:end="169:36"><name pos:start="169:17" pos:end="169:29"><name pos:start="169:17" pos:end="169:18">os</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:29">audio_tag</name></name> <operator pos:start="169:31" pos:end="169:31">=</operator> <literal type="number" pos:start="169:33" pos:end="169:36">0xff</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="171:15" pos:end="177:13">else if <condition pos:start="171:23" pos:end="171:65">(<expr pos:start="171:24" pos:end="171:64"><name pos:start="171:24" pos:end="171:42"><name pos:start="171:24" pos:end="171:25">st</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:32">codec</name><operator pos:start="171:33" pos:end="171:34">-&gt;</operator><name pos:start="171:35" pos:end="171:42">codec_id</name></name> <operator pos:start="171:44" pos:end="171:45">==</operator> <name pos:start="171:47" pos:end="171:64">AV_CODEC_ID_WMAPRO</name></expr>)</condition> <block pos:start="171:67" pos:end="177:13">{<block_content pos:start="173:17" pos:end="175:39">

                <expr_stmt pos:start="173:17" pos:end="173:36"><expr pos:start="173:17" pos:end="173:35"><name pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:18">os</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:26">fourcc</name></name> <operator pos:start="173:28" pos:end="173:28">=</operator> <literal type="string" pos:start="173:30" pos:end="173:35">"WMAP"</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:39"><expr pos:start="175:17" pos:end="175:38"><name pos:start="175:17" pos:end="175:29"><name pos:start="175:17" pos:end="175:18">os</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:29">audio_tag</name></name> <operator pos:start="175:31" pos:end="175:31">=</operator> <literal type="number" pos:start="175:33" pos:end="175:38">0x0162</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="177:15" pos:end="185:13">else <block pos:start="177:20" pos:end="185:13">{<block_content pos:start="179:17" pos:end="183:26">

                <expr_stmt pos:start="179:17" pos:end="179:69"><expr pos:start="179:17" pos:end="179:68"><call pos:start="179:17" pos:end="179:68"><name pos:start="179:17" pos:end="179:22">av_log</name><argument_list pos:start="179:23" pos:end="179:68">(<argument pos:start="179:24" pos:end="179:24"><expr pos:start="179:24" pos:end="179:24"><name pos:start="179:24" pos:end="179:24">s</name></expr></argument>, <argument pos:start="179:27" pos:end="179:38"><expr pos:start="179:27" pos:end="179:38"><name pos:start="179:27" pos:end="179:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="179:41" pos:end="179:67"><expr pos:start="179:41" pos:end="179:67"><literal type="string" pos:start="179:41" pos:end="179:67">"Unsupported audio codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:38"><expr pos:start="181:17" pos:end="181:37"><name pos:start="181:17" pos:end="181:19">ret</name> <operator pos:start="181:21" pos:end="181:21">=</operator> <call pos:start="181:23" pos:end="181:37"><name pos:start="181:23" pos:end="181:29">AVERROR</name><argument_list pos:start="181:30" pos:end="181:37">(<argument pos:start="181:31" pos:end="181:36"><expr pos:start="181:31" pos:end="181:36"><name pos:start="181:31" pos:end="181:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="183:17" pos:end="183:26">goto <name pos:start="183:22" pos:end="183:25">fail</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:82"><expr pos:start="187:13" pos:end="187:81"><name pos:start="187:13" pos:end="187:27"><name pos:start="187:13" pos:end="187:14">os</name><operator pos:start="187:15" pos:end="187:16">-&gt;</operator><name pos:start="187:17" pos:end="187:27">packet_size</name></name> <operator pos:start="187:29" pos:end="187:29">=</operator> <ternary pos:start="187:31" pos:end="187:81"><condition pos:start="187:31" pos:end="187:54"><expr pos:start="187:31" pos:end="187:52"><name pos:start="187:31" pos:end="187:52"><name pos:start="187:31" pos:end="187:32">st</name><operator pos:start="187:33" pos:end="187:34">-&gt;</operator><name pos:start="187:35" pos:end="187:39">codec</name><operator pos:start="187:40" pos:end="187:41">-&gt;</operator><name pos:start="187:42" pos:end="187:52">block_align</name></name></expr> ?</condition><then pos:start="187:56" pos:end="187:77"> <expr pos:start="187:56" pos:end="187:77"><name pos:start="187:56" pos:end="187:77"><name pos:start="187:56" pos:end="187:57">st</name><operator pos:start="187:58" pos:end="187:59">-&gt;</operator><name pos:start="187:60" pos:end="187:64">codec</name><operator pos:start="187:65" pos:end="187:66">-&gt;</operator><name pos:start="187:67" pos:end="187:77">block_align</name></name></expr> </then><else pos:start="187:79" pos:end="187:81">: <expr pos:start="187:81" pos:end="187:81"><literal type="number" pos:start="187:81" pos:end="187:81">4</literal></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:29"><expr pos:start="191:9" pos:end="191:28"><call pos:start="191:9" pos:end="191:28"><name pos:start="191:9" pos:end="191:24">get_private_data</name><argument_list pos:start="191:25" pos:end="191:28">(<argument pos:start="191:26" pos:end="191:27"><expr pos:start="191:26" pos:end="191:27"><name pos:start="191:26" pos:end="191:27">os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="197:5" pos:end="203:5"><if pos:start="197:5" pos:end="203:5">if <condition pos:start="197:8" pos:end="197:51">(<expr pos:start="197:9" pos:end="197:50"><operator pos:start="197:9" pos:end="197:9">!</operator><name pos:start="197:10" pos:end="197:21"><name pos:start="197:10" pos:end="197:10">c</name><operator pos:start="197:11" pos:end="197:12">-&gt;</operator><name pos:start="197:13" pos:end="197:21">has_video</name></name> <operator pos:start="197:23" pos:end="197:24">&amp;&amp;</operator> <name pos:start="197:26" pos:end="197:45"><name pos:start="197:26" pos:end="197:26">c</name><operator pos:start="197:27" pos:end="197:28">-&gt;</operator><name pos:start="197:29" pos:end="197:45">min_frag_duration</name></name> <operator pos:start="197:47" pos:end="197:48">&lt;=</operator> <literal type="number" pos:start="197:50" pos:end="197:50">0</literal></expr>)</condition> <block pos:start="197:53" pos:end="203:5">{<block_content pos:start="199:9" pos:end="201:30">

        <expr_stmt pos:start="199:9" pos:end="199:84"><expr pos:start="199:9" pos:end="199:83"><call pos:start="199:9" pos:end="199:83"><name pos:start="199:9" pos:end="199:14">av_log</name><argument_list pos:start="199:15" pos:end="199:83">(<argument pos:start="199:16" pos:end="199:16"><expr pos:start="199:16" pos:end="199:16"><name pos:start="199:16" pos:end="199:16">s</name></expr></argument>, <argument pos:start="199:19" pos:end="199:32"><expr pos:start="199:19" pos:end="199:32"><name pos:start="199:19" pos:end="199:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="199:35" pos:end="199:82"><expr pos:start="199:35" pos:end="199:82"><literal type="string" pos:start="199:35" pos:end="199:82">"no video stream and no min frag duration set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:30"><expr pos:start="201:9" pos:end="201:29"><name pos:start="201:9" pos:end="201:11">ret</name> <operator pos:start="201:13" pos:end="201:13">=</operator> <call pos:start="201:15" pos:end="201:29"><name pos:start="201:15" pos:end="201:21">AVERROR</name><argument_list pos:start="201:22" pos:end="201:29">(<argument pos:start="201:23" pos:end="201:28"><expr pos:start="201:23" pos:end="201:28"><name pos:start="201:23" pos:end="201:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:31"><expr pos:start="205:5" pos:end="205:30"><name pos:start="205:5" pos:end="205:7">ret</name> <operator pos:start="205:9" pos:end="205:9">=</operator> <call pos:start="205:11" pos:end="205:30"><name pos:start="205:11" pos:end="205:24">write_manifest</name><argument_list pos:start="205:25" pos:end="205:30">(<argument pos:start="205:26" pos:end="205:26"><expr pos:start="205:26" pos:end="205:26"><name pos:start="205:26" pos:end="205:26">s</name></expr></argument>, <argument pos:start="205:29" pos:end="205:29"><expr pos:start="205:29" pos:end="205:29"><literal type="number" pos:start="205:29" pos:end="205:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="209:1" pos:end="209:5"><name pos:start="209:1" pos:end="209:4">fail</name>:</label>

    <if_stmt pos:start="211:5" pos:end="213:20"><if pos:start="211:5" pos:end="213:20">if <condition pos:start="211:8" pos:end="211:12">(<expr pos:start="211:9" pos:end="211:11"><name pos:start="211:9" pos:end="211:11">ret</name></expr>)</condition><block type="pseudo" pos:start="213:9" pos:end="213:20"><block_content pos:start="213:9" pos:end="213:20">

        <expr_stmt pos:start="213:9" pos:end="213:20"><expr pos:start="213:9" pos:end="213:19"><call pos:start="213:9" pos:end="213:19"><name pos:start="213:9" pos:end="213:16">ism_free</name><argument_list pos:start="213:17" pos:end="213:19">(<argument pos:start="213:18" pos:end="213:18"><expr pos:start="213:18" pos:end="213:18"><name pos:start="213:18" pos:end="213:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="215:5" pos:end="215:15">return <expr pos:start="215:12" pos:end="215:14"><name pos:start="215:12" pos:end="215:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
