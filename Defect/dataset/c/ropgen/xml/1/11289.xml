<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11289.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">ff_aac_search_for_is</name><parameter_list pos:start="1:26" pos:end="1:87">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:39">AACEncContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:65"><decl pos:start="1:45" pos:end="1:65"><type pos:start="1:45" pos:end="1:65"><name pos:start="1:45" pos:end="1:58">AVCodecContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:65">avctx</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:86"><decl pos:start="1:68" pos:end="1:86"><type pos:start="1:68" pos:end="1:86"><name pos:start="1:68" pos:end="1:81">ChannelElement</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:86">cpe</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:27">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">SingleChannelElement</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:30">sce0</name> <init pos:start="5:32" pos:end="5:44">= <expr pos:start="5:34" pos:end="5:44"><operator pos:start="5:34" pos:end="5:34">&amp;</operator><name pos:start="5:35" pos:end="5:44"><name pos:start="5:35" pos:end="5:37">cpe</name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:41">ch</name><index pos:start="5:42" pos:end="5:44">[<expr pos:start="5:43" pos:end="5:43"><literal type="number" pos:start="5:43" pos:end="5:43">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24">SingleChannelElement</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:30">sce1</name> <init pos:start="7:32" pos:end="7:44">= <expr pos:start="7:34" pos:end="7:44"><operator pos:start="7:34" pos:end="7:34">&amp;</operator><name pos:start="7:35" pos:end="7:44"><name pos:start="7:35" pos:end="7:37">cpe</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:41">ch</name><index pos:start="7:42" pos:end="7:44">[<expr pos:start="7:43" pos:end="7:43"><literal type="number" pos:start="7:43" pos:end="7:43">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">start</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr></init></decl>, <decl pos:start="9:20" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:24">count</name> <init pos:start="9:26" pos:end="9:28">= <expr pos:start="9:28" pos:end="9:28"><literal type="number" pos:start="9:28" pos:end="9:28">0</literal></expr></init></decl>, <decl pos:start="9:31" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:31" pos:end="9:31">w</name></decl>, <decl pos:start="9:34" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:34" pos:end="9:35">w2</name></decl>, <decl pos:start="9:38" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:38" pos:end="9:38">g</name></decl>, <decl pos:start="9:41" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:41" pos:end="9:41">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:84"><decl pos:start="11:5" pos:end="11:83"><type pos:start="11:5" pos:end="11:15"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:15">float</name></type> <name pos:start="11:17" pos:end="11:25">freq_mult</name> <init pos:start="11:27" pos:end="11:83">= <expr pos:start="11:29" pos:end="11:83"><name pos:start="11:29" pos:end="11:46"><name pos:start="11:29" pos:end="11:33">avctx</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:46">sample_rate</name></name><operator pos:start="11:47" pos:end="11:47">/</operator><operator pos:start="11:48" pos:end="11:48">(</operator><literal type="number" pos:start="11:49" pos:end="11:55">1024.0f</literal><operator pos:start="11:56" pos:end="11:56">/</operator><name pos:start="11:57" pos:end="11:77"><name pos:start="11:57" pos:end="11:60">sce0</name><operator pos:start="11:61" pos:end="11:62">-&gt;</operator><name pos:start="11:63" pos:end="11:65">ics</name><operator pos:start="11:66" pos:end="11:66">.</operator><name pos:start="11:67" pos:end="11:77">num_windows</name></name><operator pos:start="11:78" pos:end="11:78">)</operator><operator pos:start="11:79" pos:end="11:79">/</operator><literal type="number" pos:start="11:80" pos:end="11:83">2.0f</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:15"><if pos:start="15:5" pos:end="17:15">if <condition pos:start="15:8" pos:end="15:28">(<expr pos:start="15:9" pos:end="15:27"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:27"><name pos:start="15:10" pos:end="15:12">cpe</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:27">common_window</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:15"><block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return></block_content></block></if></if_stmt>



    <for pos:start="21:5" pos:end="95:5">for <control pos:start="21:9" pos:end="21:71">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">w</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:42"><expr pos:start="21:17" pos:end="21:41"><name pos:start="21:17" pos:end="21:17">w</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:41"><name pos:start="21:21" pos:end="21:24">sce0</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:29">ics</name><operator pos:start="21:30" pos:end="21:30">.</operator><name pos:start="21:31" pos:end="21:41">num_windows</name></name></expr>;</condition> <incr pos:start="21:44" pos:end="21:70"><expr pos:start="21:44" pos:end="21:70"><name pos:start="21:44" pos:end="21:44">w</name> <operator pos:start="21:46" pos:end="21:47">+=</operator> <name pos:start="21:49" pos:end="21:70"><name pos:start="21:49" pos:end="21:52">sce0</name><operator pos:start="21:53" pos:end="21:54">-&gt;</operator><name pos:start="21:55" pos:end="21:57">ics</name><operator pos:start="21:58" pos:end="21:58">.</operator><name pos:start="21:59" pos:end="21:67">group_len</name><index pos:start="21:68" pos:end="21:70">[<expr pos:start="21:69" pos:end="21:69"><name pos:start="21:69" pos:end="21:69">w</name></expr>]</index></name></expr></incr>)</control> <block pos:start="21:73" pos:end="95:5">{<block_content pos:start="23:9" pos:end="93:9">

        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:13">start</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>;</expr_stmt>

        <for pos:start="25:9" pos:end="93:9">for <control pos:start="25:13" pos:end="25:48">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">g</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init>  <condition pos:start="25:22" pos:end="25:43"><expr pos:start="25:22" pos:end="25:42"><name pos:start="25:22" pos:end="25:22">g</name> <operator pos:start="25:24" pos:end="25:24">&lt;</operator> <name pos:start="25:26" pos:end="25:42"><name pos:start="25:26" pos:end="25:29">sce0</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:34">ics</name><operator pos:start="25:35" pos:end="25:35">.</operator><name pos:start="25:36" pos:end="25:42">num_swb</name></name></expr>;</condition> <incr pos:start="25:45" pos:end="25:47"><expr pos:start="25:45" pos:end="25:47"><name pos:start="25:45" pos:end="25:45">g</name><operator pos:start="25:46" pos:end="25:47">++</operator></expr></incr>)</control> <block pos:start="25:50" pos:end="93:9">{<block_content pos:start="27:13" pos:end="91:44">

            <if_stmt pos:start="27:13" pos:end="89:13"><if pos:start="27:13" pos:end="89:13">if <condition pos:start="27:16" pos:end="31:87">(<expr pos:start="27:17" pos:end="31:86"><name pos:start="27:17" pos:end="27:21">start</name><operator pos:start="27:22" pos:end="27:22">*</operator><name pos:start="27:23" pos:end="27:31">freq_mult</name> <operator pos:start="27:33" pos:end="27:33">&gt;</operator> <name pos:start="27:35" pos:end="27:54">INT_STEREO_LOW_LIMIT</name><operator pos:start="27:55" pos:end="27:55">*</operator><operator pos:start="27:56" pos:end="27:56">(</operator><name pos:start="27:57" pos:end="27:65"><name pos:start="27:57" pos:end="27:57">s</name><operator pos:start="27:58" pos:end="27:59">-&gt;</operator><name pos:start="27:60" pos:end="27:65">lambda</name></name><operator pos:start="27:66" pos:end="27:66">/</operator><literal type="number" pos:start="27:67" pos:end="27:72">170.0f</literal><operator pos:start="27:73" pos:end="27:73">)</operator> <operator pos:start="27:75" pos:end="27:76">&amp;&amp;</operator>

                <name pos:start="29:17" pos:end="29:26"><name pos:start="29:17" pos:end="29:19">cpe</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:23">ch</name><index pos:start="29:24" pos:end="29:26">[<expr pos:start="29:25" pos:end="29:25"><literal type="number" pos:start="29:25" pos:end="29:25">0</literal></expr>]</index></name><operator pos:start="29:27" pos:end="29:27">.</operator><name pos:start="29:28" pos:end="29:44"><name pos:start="29:28" pos:end="29:36">band_type</name><index pos:start="29:37" pos:end="29:44">[<expr pos:start="29:38" pos:end="29:43"><name pos:start="29:38" pos:end="29:38">w</name><operator pos:start="29:39" pos:end="29:39">*</operator><literal type="number" pos:start="29:40" pos:end="29:42">16</literal><operator pos:start="29:42" pos:end="29:42">+</operator><name pos:start="29:43" pos:end="29:43">g</name></expr>]</index></name> <operator pos:start="29:46" pos:end="29:47">!=</operator> <name pos:start="29:49" pos:end="29:56">NOISE_BT</name> <operator pos:start="29:58" pos:end="29:59">&amp;&amp;</operator> <operator pos:start="29:61" pos:end="29:61">!</operator><name pos:start="29:62" pos:end="29:71"><name pos:start="29:62" pos:end="29:64">cpe</name><operator pos:start="29:65" pos:end="29:66">-&gt;</operator><name pos:start="29:67" pos:end="29:68">ch</name><index pos:start="29:69" pos:end="29:71">[<expr pos:start="29:70" pos:end="29:70"><literal type="number" pos:start="29:70" pos:end="29:70">0</literal></expr>]</index></name><operator pos:start="29:72" pos:end="29:72">.</operator><name pos:start="29:73" pos:end="29:86"><name pos:start="29:73" pos:end="29:78">zeroes</name><index pos:start="29:79" pos:end="29:86">[<expr pos:start="29:80" pos:end="29:85"><name pos:start="29:80" pos:end="29:80">w</name><operator pos:start="29:81" pos:end="29:81">*</operator><literal type="number" pos:start="29:82" pos:end="29:84">16</literal><operator pos:start="29:84" pos:end="29:84">+</operator><name pos:start="29:85" pos:end="29:85">g</name></expr>]</index></name> <operator pos:start="29:88" pos:end="29:89">&amp;&amp;</operator>

                <name pos:start="31:17" pos:end="31:26"><name pos:start="31:17" pos:end="31:19">cpe</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:23">ch</name><index pos:start="31:24" pos:end="31:26">[<expr pos:start="31:25" pos:end="31:25"><literal type="number" pos:start="31:25" pos:end="31:25">1</literal></expr>]</index></name><operator pos:start="31:27" pos:end="31:27">.</operator><name pos:start="31:28" pos:end="31:44"><name pos:start="31:28" pos:end="31:36">band_type</name><index pos:start="31:37" pos:end="31:44">[<expr pos:start="31:38" pos:end="31:43"><name pos:start="31:38" pos:end="31:38">w</name><operator pos:start="31:39" pos:end="31:39">*</operator><literal type="number" pos:start="31:40" pos:end="31:42">16</literal><operator pos:start="31:42" pos:end="31:42">+</operator><name pos:start="31:43" pos:end="31:43">g</name></expr>]</index></name> <operator pos:start="31:46" pos:end="31:47">!=</operator> <name pos:start="31:49" pos:end="31:56">NOISE_BT</name> <operator pos:start="31:58" pos:end="31:59">&amp;&amp;</operator> <operator pos:start="31:61" pos:end="31:61">!</operator><name pos:start="31:62" pos:end="31:71"><name pos:start="31:62" pos:end="31:64">cpe</name><operator pos:start="31:65" pos:end="31:66">-&gt;</operator><name pos:start="31:67" pos:end="31:68">ch</name><index pos:start="31:69" pos:end="31:71">[<expr pos:start="31:70" pos:end="31:70"><literal type="number" pos:start="31:70" pos:end="31:70">1</literal></expr>]</index></name><operator pos:start="31:72" pos:end="31:72">.</operator><name pos:start="31:73" pos:end="31:86"><name pos:start="31:73" pos:end="31:78">zeroes</name><index pos:start="31:79" pos:end="31:86">[<expr pos:start="31:80" pos:end="31:85"><name pos:start="31:80" pos:end="31:80">w</name><operator pos:start="31:81" pos:end="31:81">*</operator><literal type="number" pos:start="31:82" pos:end="31:84">16</literal><operator pos:start="31:84" pos:end="31:84">+</operator><name pos:start="31:85" pos:end="31:85">g</name></expr>]</index></name></expr>)</condition> <block pos:start="31:89" pos:end="89:13">{<block_content pos:start="33:17" pos:end="87:17">

                <decl_stmt pos:start="33:17" pos:end="33:64"><decl pos:start="33:17" pos:end="33:34"><type pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:21">float</name></type> <name pos:start="33:23" pos:end="33:27">ener0</name> <init pos:start="33:29" pos:end="33:34">= <expr pos:start="33:31" pos:end="33:34"><literal type="number" pos:start="33:31" pos:end="33:34">0.0f</literal></expr></init></decl>, <decl pos:start="33:37" pos:end="33:48"><type ref="prev" pos:start="33:17" pos:end="33:21"/><name pos:start="33:37" pos:end="33:41">ener1</name> <init pos:start="33:43" pos:end="33:48">= <expr pos:start="33:45" pos:end="33:48"><literal type="number" pos:start="33:45" pos:end="33:48">0.0f</literal></expr></init></decl>, <decl pos:start="33:51" pos:end="33:63"><type ref="prev" pos:start="33:17" pos:end="33:21"/><name pos:start="33:51" pos:end="33:56">ener01</name> <init pos:start="33:58" pos:end="33:63">= <expr pos:start="33:60" pos:end="33:63"><literal type="number" pos:start="33:60" pos:end="33:63">0.0f</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="35:17" pos:end="35:57"><decl pos:start="35:17" pos:end="35:41"><type pos:start="35:17" pos:end="35:33"><name pos:start="35:17" pos:end="35:33"><name pos:start="35:17" pos:end="35:22">struct</name> <name pos:start="35:24" pos:end="35:33">AACISError</name></name></type> <name pos:start="35:35" pos:end="35:41">ph_err1</name></decl>, <decl pos:start="35:44" pos:end="35:50"><type ref="prev" pos:start="35:17" pos:end="35:33"/><name pos:start="35:44" pos:end="35:50">ph_err2</name></decl>, <decl pos:start="35:53" pos:end="35:56"><type ref="prev" pos:start="35:17" pos:end="35:33"><modifier pos:start="35:53" pos:end="35:53">*</modifier></type><name pos:start="35:54" pos:end="35:56">erf</name></decl>;</decl_stmt>

                <if_stmt pos:start="37:17" pos:end="45:17"><if pos:start="37:17" pos:end="45:17">if <condition pos:start="37:20" pos:end="39:56">(<expr pos:start="37:21" pos:end="39:55"><name pos:start="37:21" pos:end="37:43"><name pos:start="37:21" pos:end="37:24">sce0</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:35">band_type</name><index pos:start="37:36" pos:end="37:43">[<expr pos:start="37:37" pos:end="37:42"><name pos:start="37:37" pos:end="37:37">w</name><operator pos:start="37:38" pos:end="37:38">*</operator><literal type="number" pos:start="37:39" pos:end="37:40">16</literal><operator pos:start="37:41" pos:end="37:41">+</operator><name pos:start="37:42" pos:end="37:42">g</name></expr>]</index></name> <operator pos:start="37:45" pos:end="37:46">==</operator> <name pos:start="37:48" pos:end="37:55">NOISE_BT</name> <operator pos:start="37:57" pos:end="37:58">||</operator>

                    <name pos:start="39:21" pos:end="39:43"><name pos:start="39:21" pos:end="39:24">sce1</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:35">band_type</name><index pos:start="39:36" pos:end="39:43">[<expr pos:start="39:37" pos:end="39:42"><name pos:start="39:37" pos:end="39:37">w</name><operator pos:start="39:38" pos:end="39:38">*</operator><literal type="number" pos:start="39:39" pos:end="39:41">16</literal><operator pos:start="39:41" pos:end="39:41">+</operator><name pos:start="39:42" pos:end="39:42">g</name></expr>]</index></name> <operator pos:start="39:45" pos:end="39:46">==</operator> <name pos:start="39:48" pos:end="39:55">NOISE_BT</name></expr>)</condition> <block pos:start="39:58" pos:end="45:17">{<block_content pos:start="41:21" pos:end="43:29">

                    <expr_stmt pos:start="41:21" pos:end="41:52"><expr pos:start="41:21" pos:end="41:51"><name pos:start="41:21" pos:end="41:25">start</name> <operator pos:start="41:27" pos:end="41:28">+=</operator> <name pos:start="41:30" pos:end="41:51"><name pos:start="41:30" pos:end="41:33">sce0</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:38">ics</name><operator pos:start="41:39" pos:end="41:39">.</operator><name pos:start="41:40" pos:end="41:48">swb_sizes</name><index pos:start="41:49" pos:end="41:51">[<expr pos:start="41:50" pos:end="41:50"><name pos:start="41:50" pos:end="41:50">g</name></expr>]</index></name></expr>;</expr_stmt>

                    <continue pos:start="43:21" pos:end="43:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <for pos:start="47:17" pos:end="63:17">for <control pos:start="47:21" pos:end="47:63">(<init pos:start="47:22" pos:end="47:28"><expr pos:start="47:22" pos:end="47:27"><name pos:start="47:22" pos:end="47:23">w2</name> <operator pos:start="47:25" pos:end="47:25">=</operator> <literal type="number" pos:start="47:27" pos:end="47:27">0</literal></expr>;</init> <condition pos:start="47:30" pos:end="47:57"><expr pos:start="47:30" pos:end="47:56"><name pos:start="47:30" pos:end="47:31">w2</name> <operator pos:start="47:33" pos:end="47:33">&lt;</operator> <name pos:start="47:35" pos:end="47:56"><name pos:start="47:35" pos:end="47:38">sce0</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:43">ics</name><operator pos:start="47:44" pos:end="47:44">.</operator><name pos:start="47:45" pos:end="47:53">group_len</name><index pos:start="47:54" pos:end="47:56">[<expr pos:start="47:55" pos:end="47:55"><name pos:start="47:55" pos:end="47:55">w</name></expr>]</index></name></expr>;</condition> <incr pos:start="47:59" pos:end="47:62"><expr pos:start="47:59" pos:end="47:62"><name pos:start="47:59" pos:end="47:60">w2</name><operator pos:start="47:61" pos:end="47:62">++</operator></expr></incr>)</control> <block pos:start="47:65" pos:end="63:17">{<block_content pos:start="49:21" pos:end="61:21">

                    <for pos:start="49:21" pos:end="61:21">for <control pos:start="49:25" pos:end="49:64">(<init pos:start="49:26" pos:end="49:31"><expr pos:start="49:26" pos:end="49:30"><name pos:start="49:26" pos:end="49:26">i</name> <operator pos:start="49:28" pos:end="49:28">=</operator> <literal type="number" pos:start="49:30" pos:end="49:30">0</literal></expr>;</init> <condition pos:start="49:33" pos:end="49:59"><expr pos:start="49:33" pos:end="49:58"><name pos:start="49:33" pos:end="49:33">i</name> <operator pos:start="49:35" pos:end="49:35">&lt;</operator> <name pos:start="49:37" pos:end="49:58"><name pos:start="49:37" pos:end="49:40">sce0</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:45">ics</name><operator pos:start="49:46" pos:end="49:46">.</operator><name pos:start="49:47" pos:end="49:55">swb_sizes</name><index pos:start="49:56" pos:end="49:58">[<expr pos:start="49:57" pos:end="49:57"><name pos:start="49:57" pos:end="49:57">g</name></expr>]</index></name></expr>;</condition> <incr pos:start="49:61" pos:end="49:63"><expr pos:start="49:61" pos:end="49:63"><name pos:start="49:61" pos:end="49:61">i</name><operator pos:start="49:62" pos:end="49:63">++</operator></expr></incr>)</control> <block pos:start="49:66" pos:end="61:21">{<block_content pos:start="51:25" pos:end="59:66">

                        <decl_stmt pos:start="51:25" pos:end="51:79"><decl pos:start="51:25" pos:end="51:78"><type pos:start="51:25" pos:end="51:29"><name pos:start="51:25" pos:end="51:29">float</name></type> <name pos:start="51:31" pos:end="51:35">coef0</name> <init pos:start="51:37" pos:end="51:78">= <expr pos:start="51:39" pos:end="51:78"><call pos:start="51:39" pos:end="51:78"><name pos:start="51:39" pos:end="51:43">fabsf</name><argument_list pos:start="51:44" pos:end="51:78">(<argument pos:start="51:45" pos:end="51:77"><expr pos:start="51:45" pos:end="51:77"><name pos:start="51:45" pos:end="51:77"><name pos:start="51:45" pos:end="51:48">sce0</name><operator pos:start="51:49" pos:end="51:50">-&gt;</operator><name pos:start="51:51" pos:end="51:57">pcoeffs</name><index pos:start="51:58" pos:end="51:77">[<expr pos:start="51:59" pos:end="51:76"><name pos:start="51:59" pos:end="51:63">start</name><operator pos:start="51:64" pos:end="51:64">+</operator><operator pos:start="51:65" pos:end="51:65">(</operator><name pos:start="51:66" pos:end="51:66">w</name><operator pos:start="51:67" pos:end="51:67">+</operator><name pos:start="51:68" pos:end="51:69">w2</name><operator pos:start="51:70" pos:end="51:70">)</operator><operator pos:start="51:71" pos:end="51:71">*</operator><literal type="number" pos:start="51:72" pos:end="51:75">128</literal><operator pos:start="51:75" pos:end="51:75">+</operator><name pos:start="51:76" pos:end="51:76">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="53:25" pos:end="53:79"><decl pos:start="53:25" pos:end="53:78"><type pos:start="53:25" pos:end="53:29"><name pos:start="53:25" pos:end="53:29">float</name></type> <name pos:start="53:31" pos:end="53:35">coef1</name> <init pos:start="53:37" pos:end="53:78">= <expr pos:start="53:39" pos:end="53:78"><call pos:start="53:39" pos:end="53:78"><name pos:start="53:39" pos:end="53:43">fabsf</name><argument_list pos:start="53:44" pos:end="53:78">(<argument pos:start="53:45" pos:end="53:77"><expr pos:start="53:45" pos:end="53:77"><name pos:start="53:45" pos:end="53:77"><name pos:start="53:45" pos:end="53:48">sce1</name><operator pos:start="53:49" pos:end="53:50">-&gt;</operator><name pos:start="53:51" pos:end="53:57">pcoeffs</name><index pos:start="53:58" pos:end="53:77">[<expr pos:start="53:59" pos:end="53:76"><name pos:start="53:59" pos:end="53:63">start</name><operator pos:start="53:64" pos:end="53:64">+</operator><operator pos:start="53:65" pos:end="53:65">(</operator><name pos:start="53:66" pos:end="53:66">w</name><operator pos:start="53:67" pos:end="53:67">+</operator><name pos:start="53:68" pos:end="53:69">w2</name><operator pos:start="53:70" pos:end="53:70">)</operator><operator pos:start="53:71" pos:end="53:71">*</operator><literal type="number" pos:start="53:72" pos:end="53:75">128</literal><operator pos:start="53:75" pos:end="53:75">+</operator><name pos:start="53:76" pos:end="53:76">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="55:25" pos:end="55:46"><expr pos:start="55:25" pos:end="55:45"><name pos:start="55:25" pos:end="55:29">ener0</name>  <operator pos:start="55:32" pos:end="55:33">+=</operator> <name pos:start="55:35" pos:end="55:39">coef0</name><operator pos:start="55:40" pos:end="55:40">*</operator><name pos:start="55:41" pos:end="55:45">coef0</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="57:25" pos:end="57:46"><expr pos:start="57:25" pos:end="57:45"><name pos:start="57:25" pos:end="57:29">ener1</name>  <operator pos:start="57:32" pos:end="57:33">+=</operator> <name pos:start="57:35" pos:end="57:39">coef1</name><operator pos:start="57:40" pos:end="57:40">*</operator><name pos:start="57:41" pos:end="57:45">coef1</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="59:25" pos:end="59:66"><expr pos:start="59:25" pos:end="59:65"><name pos:start="59:25" pos:end="59:30">ener01</name> <operator pos:start="59:32" pos:end="59:33">+=</operator> <operator pos:start="59:35" pos:end="59:35">(</operator><name pos:start="59:36" pos:end="59:40">coef0</name> <operator pos:start="59:42" pos:end="59:42">+</operator> <name pos:start="59:44" pos:end="59:48">coef1</name><operator pos:start="59:49" pos:end="59:49">)</operator><operator pos:start="59:50" pos:end="59:50">*</operator><operator pos:start="59:51" pos:end="59:51">(</operator><name pos:start="59:52" pos:end="59:56">coef0</name> <operator pos:start="59:58" pos:end="59:58">+</operator> <name pos:start="59:60" pos:end="59:64">coef1</name><operator pos:start="59:65" pos:end="59:65">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

                <expr_stmt pos:start="65:17" pos:end="67:78"><expr pos:start="65:17" pos:end="67:77"><name pos:start="65:17" pos:end="65:23">ph_err1</name> <operator pos:start="65:25" pos:end="65:25">=</operator> <call pos:start="65:27" pos:end="67:77"><name pos:start="65:27" pos:end="65:48">ff_aac_is_encoding_err</name><argument_list pos:start="65:49" pos:end="67:77">(<argument pos:start="65:50" pos:end="65:50"><expr pos:start="65:50" pos:end="65:50"><name pos:start="65:50" pos:end="65:50">s</name></expr></argument>, <argument pos:start="65:53" pos:end="65:55"><expr pos:start="65:53" pos:end="65:55"><name pos:start="65:53" pos:end="65:55">cpe</name></expr></argument>, <argument pos:start="65:58" pos:end="65:62"><expr pos:start="65:58" pos:end="65:62"><name pos:start="65:58" pos:end="65:62">start</name></expr></argument>, <argument pos:start="65:65" pos:end="65:65"><expr pos:start="65:65" pos:end="65:65"><name pos:start="65:65" pos:end="65:65">w</name></expr></argument>, <argument pos:start="65:68" pos:end="65:68"><expr pos:start="65:68" pos:end="65:68"><name pos:start="65:68" pos:end="65:68">g</name></expr></argument>,

                                                 <argument pos:start="67:50" pos:end="67:54"><expr pos:start="67:50" pos:end="67:54"><name pos:start="67:50" pos:end="67:54">ener0</name></expr></argument>, <argument pos:start="67:57" pos:end="67:61"><expr pos:start="67:57" pos:end="67:61"><name pos:start="67:57" pos:end="67:61">ener1</name></expr></argument>, <argument pos:start="67:64" pos:end="67:69"><expr pos:start="67:64" pos:end="67:69"><name pos:start="67:64" pos:end="67:69">ener01</name></expr></argument>, <argument pos:start="67:72" pos:end="67:72"><expr pos:start="67:72" pos:end="67:72"><literal type="number" pos:start="67:72" pos:end="67:72">0</literal></expr></argument>, <argument pos:start="67:75" pos:end="67:76"><expr pos:start="67:75" pos:end="67:76"><operator pos:start="67:75" pos:end="67:75">-</operator><literal type="number" pos:start="67:76" pos:end="67:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="71:78"><expr pos:start="69:17" pos:end="71:77"><name pos:start="69:17" pos:end="69:23">ph_err2</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <call pos:start="69:27" pos:end="71:77"><name pos:start="69:27" pos:end="69:48">ff_aac_is_encoding_err</name><argument_list pos:start="69:49" pos:end="71:77">(<argument pos:start="69:50" pos:end="69:50"><expr pos:start="69:50" pos:end="69:50"><name pos:start="69:50" pos:end="69:50">s</name></expr></argument>, <argument pos:start="69:53" pos:end="69:55"><expr pos:start="69:53" pos:end="69:55"><name pos:start="69:53" pos:end="69:55">cpe</name></expr></argument>, <argument pos:start="69:58" pos:end="69:62"><expr pos:start="69:58" pos:end="69:62"><name pos:start="69:58" pos:end="69:62">start</name></expr></argument>, <argument pos:start="69:65" pos:end="69:65"><expr pos:start="69:65" pos:end="69:65"><name pos:start="69:65" pos:end="69:65">w</name></expr></argument>, <argument pos:start="69:68" pos:end="69:68"><expr pos:start="69:68" pos:end="69:68"><name pos:start="69:68" pos:end="69:68">g</name></expr></argument>,

                                                 <argument pos:start="71:50" pos:end="71:54"><expr pos:start="71:50" pos:end="71:54"><name pos:start="71:50" pos:end="71:54">ener0</name></expr></argument>, <argument pos:start="71:57" pos:end="71:61"><expr pos:start="71:57" pos:end="71:61"><name pos:start="71:57" pos:end="71:61">ener1</name></expr></argument>, <argument pos:start="71:64" pos:end="71:69"><expr pos:start="71:64" pos:end="71:69"><name pos:start="71:64" pos:end="71:69">ener01</name></expr></argument>, <argument pos:start="71:72" pos:end="71:72"><expr pos:start="71:72" pos:end="71:72"><literal type="number" pos:start="71:72" pos:end="71:72">0</literal></expr></argument>, <argument pos:start="71:75" pos:end="71:76"><expr pos:start="71:75" pos:end="71:76"><operator pos:start="71:75" pos:end="71:75">+</operator><literal type="number" pos:start="71:76" pos:end="71:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:74"><expr pos:start="73:17" pos:end="73:73"><name pos:start="73:17" pos:end="73:19">erf</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <ternary pos:start="73:23" pos:end="73:73"><condition pos:start="73:23" pos:end="73:53"><expr pos:start="73:23" pos:end="73:51"><name pos:start="73:23" pos:end="73:35"><name pos:start="73:23" pos:end="73:29">ph_err1</name><operator pos:start="73:30" pos:end="73:30">.</operator><name pos:start="73:31" pos:end="73:35">error</name></name> <operator pos:start="73:37" pos:end="73:37">&lt;</operator> <name pos:start="73:39" pos:end="73:51"><name pos:start="73:39" pos:end="73:45">ph_err2</name><operator pos:start="73:46" pos:end="73:46">.</operator><name pos:start="73:47" pos:end="73:51">error</name></name></expr> ?</condition><then pos:start="73:55" pos:end="73:62"> <expr pos:start="73:55" pos:end="73:62"><operator pos:start="73:55" pos:end="73:55">&amp;</operator><name pos:start="73:56" pos:end="73:62">ph_err1</name></expr> </then><else pos:start="73:64" pos:end="73:73">: <expr pos:start="73:66" pos:end="73:73"><operator pos:start="73:66" pos:end="73:66">&amp;</operator><name pos:start="73:67" pos:end="73:73">ph_err2</name></expr></else></ternary></expr>;</expr_stmt>

                <if_stmt pos:start="75:17" pos:end="87:17"><if pos:start="75:17" pos:end="87:17">if <condition pos:start="75:20" pos:end="75:30">(<expr pos:start="75:21" pos:end="75:29"><name pos:start="75:21" pos:end="75:29"><name pos:start="75:21" pos:end="75:23">erf</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:29">pass</name></name></expr>)</condition> <block pos:start="75:32" pos:end="87:17">{<block_content pos:start="77:21" pos:end="85:28">

                    <expr_stmt pos:start="77:21" pos:end="77:45"><expr pos:start="77:21" pos:end="77:44"><name pos:start="77:21" pos:end="77:40"><name pos:start="77:21" pos:end="77:23">cpe</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:32">is_mask</name><index pos:start="77:33" pos:end="77:40">[<expr pos:start="77:34" pos:end="77:39"><name pos:start="77:34" pos:end="77:34">w</name><operator pos:start="77:35" pos:end="77:35">*</operator><literal type="number" pos:start="77:36" pos:end="77:37">16</literal><operator pos:start="77:38" pos:end="77:38">+</operator><name pos:start="77:39" pos:end="77:39">g</name></expr>]</index></name> <operator pos:start="77:42" pos:end="77:42">=</operator> <literal type="number" pos:start="77:44" pos:end="77:44">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="79:21" pos:end="79:68"><expr pos:start="79:21" pos:end="79:67"><name pos:start="79:21" pos:end="79:30"><name pos:start="79:21" pos:end="79:23">cpe</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:27">ch</name><index pos:start="79:28" pos:end="79:30">[<expr pos:start="79:29" pos:end="79:29"><literal type="number" pos:start="79:29" pos:end="79:29">0</literal></expr>]</index></name><operator pos:start="79:31" pos:end="79:31">.</operator><name pos:start="79:32" pos:end="79:46"><name pos:start="79:32" pos:end="79:38">is_ener</name><index pos:start="79:39" pos:end="79:46">[<expr pos:start="79:40" pos:end="79:45"><name pos:start="79:40" pos:end="79:40">w</name><operator pos:start="79:41" pos:end="79:41">*</operator><literal type="number" pos:start="79:42" pos:end="79:44">16</literal><operator pos:start="79:44" pos:end="79:44">+</operator><name pos:start="79:45" pos:end="79:45">g</name></expr>]</index></name> <operator pos:start="79:48" pos:end="79:48">=</operator> <call pos:start="79:50" pos:end="79:67"><name pos:start="79:50" pos:end="79:53">sqrt</name><argument_list pos:start="79:54" pos:end="79:67">(<argument pos:start="79:55" pos:end="79:66"><expr pos:start="79:55" pos:end="79:66"><name pos:start="79:55" pos:end="79:59">ener0</name><operator pos:start="79:60" pos:end="79:60">/</operator><name pos:start="79:61" pos:end="79:66">ener01</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:61"><expr pos:start="81:21" pos:end="81:60"><name pos:start="81:21" pos:end="81:30"><name pos:start="81:21" pos:end="81:23">cpe</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:27">ch</name><index pos:start="81:28" pos:end="81:30">[<expr pos:start="81:29" pos:end="81:29"><literal type="number" pos:start="81:29" pos:end="81:29">1</literal></expr>]</index></name><operator pos:start="81:31" pos:end="81:31">.</operator><name pos:start="81:32" pos:end="81:46"><name pos:start="81:32" pos:end="81:38">is_ener</name><index pos:start="81:39" pos:end="81:46">[<expr pos:start="81:40" pos:end="81:45"><name pos:start="81:40" pos:end="81:40">w</name><operator pos:start="81:41" pos:end="81:41">*</operator><literal type="number" pos:start="81:42" pos:end="81:44">16</literal><operator pos:start="81:44" pos:end="81:44">+</operator><name pos:start="81:45" pos:end="81:45">g</name></expr>]</index></name> <operator pos:start="81:48" pos:end="81:48">=</operator> <name pos:start="81:50" pos:end="81:54">ener0</name><operator pos:start="81:55" pos:end="81:55">/</operator><name pos:start="81:56" pos:end="81:60">ener1</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:93"><expr pos:start="83:21" pos:end="83:92"><name pos:start="83:21" pos:end="83:30"><name pos:start="83:21" pos:end="83:23">cpe</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:27">ch</name><index pos:start="83:28" pos:end="83:30">[<expr pos:start="83:29" pos:end="83:29"><literal type="number" pos:start="83:29" pos:end="83:29">1</literal></expr>]</index></name><operator pos:start="83:31" pos:end="83:31">.</operator><name pos:start="83:32" pos:end="83:48"><name pos:start="83:32" pos:end="83:40">band_type</name><index pos:start="83:41" pos:end="83:48">[<expr pos:start="83:42" pos:end="83:47"><name pos:start="83:42" pos:end="83:42">w</name><operator pos:start="83:43" pos:end="83:43">*</operator><literal type="number" pos:start="83:44" pos:end="83:46">16</literal><operator pos:start="83:46" pos:end="83:46">+</operator><name pos:start="83:47" pos:end="83:47">g</name></expr>]</index></name> <operator pos:start="83:50" pos:end="83:50">=</operator> <ternary pos:start="83:52" pos:end="83:92"><condition pos:start="83:52" pos:end="83:63"><expr pos:start="83:52" pos:end="83:61"><name pos:start="83:52" pos:end="83:61"><name pos:start="83:52" pos:end="83:54">erf</name><operator pos:start="83:55" pos:end="83:56">-&gt;</operator><name pos:start="83:57" pos:end="83:61">phase</name></name></expr> ?</condition><then pos:start="83:65" pos:end="83:76"> <expr pos:start="83:65" pos:end="83:76"><name pos:start="83:65" pos:end="83:76">INTENSITY_BT</name></expr> </then><else pos:start="83:78" pos:end="83:92">: <expr pos:start="83:80" pos:end="83:92"><name pos:start="83:80" pos:end="83:92">INTENSITY_BT2</name></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:28"><expr pos:start="85:21" pos:end="85:27"><name pos:start="85:21" pos:end="85:25">count</name><operator pos:start="85:26" pos:end="85:27">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:44"><expr pos:start="91:13" pos:end="91:43"><name pos:start="91:13" pos:end="91:17">start</name> <operator pos:start="91:19" pos:end="91:20">+=</operator> <name pos:start="91:22" pos:end="91:43"><name pos:start="91:22" pos:end="91:25">sce0</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:30">ics</name><operator pos:start="91:31" pos:end="91:31">.</operator><name pos:start="91:32" pos:end="91:40">swb_sizes</name><index pos:start="91:41" pos:end="91:43">[<expr pos:start="91:42" pos:end="91:42"><name pos:start="91:42" pos:end="91:42">g</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="97:5" pos:end="97:27"><expr pos:start="97:5" pos:end="97:26"><name pos:start="97:5" pos:end="97:16"><name pos:start="97:5" pos:end="97:7">cpe</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:16">is_mode</name></name> <operator pos:start="97:18" pos:end="97:18">=</operator> <operator pos:start="97:20" pos:end="97:20">!</operator><operator pos:start="97:21" pos:end="97:21">!</operator><name pos:start="97:22" pos:end="97:26">count</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
