<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25133.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">mov_create_chapter_track</name><parameter_list pos:start="1:36" pos:end="1:69">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:51">AVFormatContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:68">tracknum</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MOVMuxContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">mov</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">MOVTrack</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:19">track</name> <init pos:start="7:21" pos:end="7:44">= <expr pos:start="7:23" pos:end="7:44"><operator pos:start="7:23" pos:end="7:23">&amp;</operator><name pos:start="7:24" pos:end="7:44"><name pos:start="7:24" pos:end="7:26">mov</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:34">tracks</name><index pos:start="7:35" pos:end="7:44">[<expr pos:start="7:36" pos:end="7:43"><name pos:start="7:36" pos:end="7:43">tracknum</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:74"><decl pos:start="9:5" pos:end="9:73"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">AVPacket</name></type> <name pos:start="9:14" pos:end="9:16">pkt</name> <init pos:start="9:18" pos:end="9:73">= <expr pos:start="9:20" pos:end="9:73"><block pos:start="9:20" pos:end="9:73">{ <expr pos:start="9:22" pos:end="9:45"><operator pos:start="9:22" pos:end="9:22">.</operator><name pos:start="9:23" pos:end="9:34">stream_index</name> <operator pos:start="9:36" pos:end="9:36">=</operator> <name pos:start="9:38" pos:end="9:45">tracknum</name></expr>, <expr pos:start="9:48" pos:end="9:71"><operator pos:start="9:48" pos:end="9:48">.</operator><name pos:start="9:49" pos:end="9:53">flags</name> <operator pos:start="9:55" pos:end="9:55">=</operator> <name pos:start="9:57" pos:end="9:71">AV_PKT_FLAG_KEY</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">len</name></decl>;</decl_stmt>

    <comment type="line" pos:start="13:5" pos:end="13:75">// These properties are required to make QT recognize the chapter track</comment>

    <decl_stmt pos:start="15:5" pos:end="15:65"><decl pos:start="15:5" pos:end="15:64"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:34"><name pos:start="15:13" pos:end="15:30">chapter_properties</name><index pos:start="15:31" pos:end="15:34">[<expr pos:start="15:32" pos:end="15:33"><literal type="number" pos:start="15:32" pos:end="15:33">43</literal></expr>]</index></name> <init pos:start="15:36" pos:end="15:64">= <expr pos:start="15:38" pos:end="15:64"><block pos:start="15:38" pos:end="15:64">{ <expr pos:start="15:40" pos:end="15:40"><literal type="number" pos:start="15:40" pos:end="15:40">0</literal></expr>, <expr pos:start="15:43" pos:end="15:43"><literal type="number" pos:start="15:43" pos:end="15:43">0</literal></expr>, <expr pos:start="15:46" pos:end="15:46"><literal type="number" pos:start="15:46" pos:end="15:46">0</literal></expr>, <expr pos:start="15:49" pos:end="15:49"><literal type="number" pos:start="15:49" pos:end="15:49">0</literal></expr>, <expr pos:start="15:52" pos:end="15:52"><literal type="number" pos:start="15:52" pos:end="15:52">0</literal></expr>, <expr pos:start="15:55" pos:end="15:55"><literal type="number" pos:start="15:55" pos:end="15:55">0</literal></expr>, <expr pos:start="15:58" pos:end="15:58"><literal type="number" pos:start="15:58" pos:end="15:58">0</literal></expr>, <expr pos:start="15:61" pos:end="15:61"><literal type="number" pos:start="15:61" pos:end="15:61">1</literal></expr>, }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:9">track</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:15">mode</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:27"><name pos:start="19:19" pos:end="19:21">mov</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:27">mode</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:9">track</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:14">tag</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:39"><name pos:start="21:18" pos:end="21:22">MKTAG</name><argument_list pos:start="21:23" pos:end="21:39">(<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><literal type="char" pos:start="21:24" pos:end="21:26">'t'</literal></expr></argument>,<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><literal type="char" pos:start="21:28" pos:end="21:30">'e'</literal></expr></argument>,<argument pos:start="21:32" pos:end="21:34"><expr pos:start="21:32" pos:end="21:34"><literal type="char" pos:start="21:32" pos:end="21:34">'x'</literal></expr></argument>,<argument pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><literal type="char" pos:start="21:36" pos:end="21:38">'t'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:9">track</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:20">timescale</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:36">MOV_TIMESCALE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:9">track</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:14">enc</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="25:45"><name pos:start="25:18" pos:end="25:39">avcodec_alloc_context3</name><argument_list pos:start="25:40" pos:end="25:45">(<argument pos:start="25:41" pos:end="25:44"><expr pos:start="25:41" pos:end="25:44"><name pos:start="25:41" pos:end="25:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="30:51"><if pos:start="27:5" pos:end="30:51">if <condition pos:start="27:8" pos:end="27:20">(<expr pos:start="27:9" pos:end="27:19"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:19"><name pos:start="27:10" pos:end="27:14">track</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:19">enc</name></name></expr>)</condition><block type="pseudo" pos:start="30:5" pos:end="30:51"><block_content pos:start="30:5" pos:end="30:51">


    <expr_stmt pos:start="30:5" pos:end="30:51"><expr pos:start="30:5" pos:end="30:50"><name pos:start="30:5" pos:end="30:26"><name pos:start="30:5" pos:end="30:9">track</name><operator pos:start="30:10" pos:end="30:11">-&gt;</operator><name pos:start="30:12" pos:end="30:14">enc</name><operator pos:start="30:15" pos:end="30:16">-&gt;</operator><name pos:start="30:17" pos:end="30:26">codec_type</name></name> <operator pos:start="30:28" pos:end="30:28">=</operator> <name pos:start="30:30" pos:end="30:50">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="32:5" pos:end="32:66"><expr pos:start="32:5" pos:end="32:65"><name pos:start="32:5" pos:end="32:25"><name pos:start="32:5" pos:end="32:9">track</name><operator pos:start="32:10" pos:end="32:11">-&gt;</operator><name pos:start="32:12" pos:end="32:14">enc</name><operator pos:start="32:15" pos:end="32:16">-&gt;</operator><name pos:start="32:17" pos:end="32:25">extradata</name></name> <operator pos:start="32:27" pos:end="32:27">=</operator> <call pos:start="32:29" pos:end="32:65"><name pos:start="32:29" pos:end="32:37">av_malloc</name><argument_list pos:start="32:38" pos:end="32:65">(<argument pos:start="32:39" pos:end="32:64"><expr pos:start="32:39" pos:end="32:64"><sizeof pos:start="32:39" pos:end="32:64">sizeof<argument_list pos:start="32:45" pos:end="32:64">(<argument pos:start="32:46" pos:end="32:63"><expr pos:start="32:46" pos:end="32:63"><name pos:start="32:46" pos:end="32:63">chapter_properties</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="34:5" pos:end="37:60"><if pos:start="34:5" pos:end="37:60">if <condition pos:start="34:8" pos:end="34:38">(<expr pos:start="34:9" pos:end="34:37"><name pos:start="34:9" pos:end="34:29"><name pos:start="34:9" pos:end="34:13">track</name><operator pos:start="34:14" pos:end="34:15">-&gt;</operator><name pos:start="34:16" pos:end="34:18">enc</name><operator pos:start="34:19" pos:end="34:20">-&gt;</operator><name pos:start="34:21" pos:end="34:29">extradata</name></name> <operator pos:start="34:31" pos:end="34:32">==</operator> <name pos:start="34:34" pos:end="34:37">NULL</name></expr>)</condition><block type="pseudo" pos:start="37:5" pos:end="37:60"><block_content pos:start="37:5" pos:end="37:60">


    <expr_stmt pos:start="37:5" pos:end="37:60"><expr pos:start="37:5" pos:end="37:59"><name pos:start="37:5" pos:end="37:30"><name pos:start="37:5" pos:end="37:9">track</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:14">enc</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:30">extradata_size</name></name> <operator pos:start="37:32" pos:end="37:32">=</operator> <sizeof pos:start="37:34" pos:end="37:59">sizeof<argument_list pos:start="37:40" pos:end="37:59">(<argument pos:start="37:41" pos:end="37:58"><expr pos:start="37:41" pos:end="37:58"><name pos:start="37:41" pos:end="37:58">chapter_properties</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:82"><expr pos:start="39:5" pos:end="39:81"><call pos:start="39:5" pos:end="39:81"><name pos:start="39:5" pos:end="39:10">memcpy</name><argument_list pos:start="39:11" pos:end="39:81">(<argument pos:start="39:12" pos:end="39:32"><expr pos:start="39:12" pos:end="39:32"><name pos:start="39:12" pos:end="39:32"><name pos:start="39:12" pos:end="39:16">track</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:21">enc</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:32">extradata</name></name></expr></argument>, <argument pos:start="39:35" pos:end="39:52"><expr pos:start="39:35" pos:end="39:52"><name pos:start="39:35" pos:end="39:52">chapter_properties</name></expr></argument>, <argument pos:start="39:55" pos:end="39:80"><expr pos:start="39:55" pos:end="39:80"><sizeof pos:start="39:55" pos:end="39:80">sizeof<argument_list pos:start="39:61" pos:end="39:80">(<argument pos:start="39:62" pos:end="39:79"><expr pos:start="39:62" pos:end="39:79"><name pos:start="39:62" pos:end="39:79">chapter_properties</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="43:5" pos:end="79:5">for <control pos:start="43:9" pos:end="43:40">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:35"><expr pos:start="43:17" pos:end="43:34"><name pos:start="43:17" pos:end="43:17">i</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:34"><name pos:start="43:21" pos:end="43:21">s</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:34">nb_chapters</name></name></expr>;</condition> <incr pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:37">i</name><operator pos:start="43:38" pos:end="43:39">++</operator></expr></incr>)</control> <block pos:start="43:42" pos:end="79:5">{<block_content pos:start="45:9" pos:end="77:9">

        <decl_stmt pos:start="45:9" pos:end="45:38"><decl pos:start="45:9" pos:end="45:37"><type pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:17">AVChapter</name> <modifier pos:start="45:19" pos:end="45:19">*</modifier></type><name pos:start="45:20" pos:end="45:20">c</name> <init pos:start="45:22" pos:end="45:37">= <expr pos:start="45:24" pos:end="45:37"><name pos:start="45:24" pos:end="45:37"><name pos:start="45:24" pos:end="45:24">s</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:34">chapters</name><index pos:start="45:35" pos:end="45:37">[<expr pos:start="45:36" pos:end="45:36"><name pos:start="45:36" pos:end="45:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:29"><decl pos:start="47:9" pos:end="47:28"><type pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:25">AVDictionaryEntry</name> <modifier pos:start="47:27" pos:end="47:27">*</modifier></type><name pos:start="47:28" pos:end="47:28">t</name></decl>;</decl_stmt>



        <decl_stmt pos:start="51:9" pos:end="51:88"><decl pos:start="51:9" pos:end="51:87"><type pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:15">int64_t</name></type> <name pos:start="51:17" pos:end="51:19">end</name> <init pos:start="51:21" pos:end="51:87">= <macro pos:start="51:23" pos:end="51:87"><name pos:start="51:23" pos:end="51:34">av_rescale_q</name><argument_list pos:start="51:35" pos:end="51:87">(<argument pos:start="51:36" pos:end="51:41">c-&gt;end</argument>, <argument pos:start="51:44" pos:end="51:55">c-&gt;time_base</argument>, <argument pos:start="51:58" pos:end="51:71">(AVRational){<literal type="number" pos:start="51:71" pos:end="51:71">1</literal></argument>,<argument pos:start="51:73" pos:end="51:86">MOV_TIMESCALE}</argument>)</argument_list></macro></init></decl>;</decl_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:96"><expr pos:start="53:9" pos:end="53:95"><name pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:11">pkt</name><operator pos:start="53:12" pos:end="53:12">.</operator><name pos:start="53:13" pos:end="53:15">pts</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:25"><name pos:start="53:19" pos:end="53:21">pkt</name><operator pos:start="53:22" pos:end="53:22">.</operator><name pos:start="53:23" pos:end="53:25">dts</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <macro pos:start="53:29" pos:end="53:95"><name pos:start="53:29" pos:end="53:40">av_rescale_q</name><argument_list pos:start="53:41" pos:end="53:95">(<argument pos:start="53:42" pos:end="53:49">c-&gt;start</argument>, <argument pos:start="53:52" pos:end="53:63">c-&gt;time_base</argument>, <argument pos:start="53:66" pos:end="53:79">(AVRational){<literal type="number" pos:start="53:79" pos:end="53:79">1</literal></argument>,<argument pos:start="53:81" pos:end="53:94">MOV_TIMESCALE}</argument>)</argument_list></macro></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:37"><expr pos:start="55:9" pos:end="55:36"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:11">pkt</name><operator pos:start="55:12" pos:end="55:12">.</operator><name pos:start="55:13" pos:end="55:20">duration</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:26">end</name> <operator pos:start="55:28" pos:end="55:28">-</operator> <name pos:start="55:30" pos:end="55:36"><name pos:start="55:30" pos:end="55:32">pkt</name><operator pos:start="55:33" pos:end="55:33">.</operator><name pos:start="55:34" pos:end="55:36">dts</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="77:9"><if pos:start="59:9" pos:end="77:9">if <condition pos:start="59:12" pos:end="59:61">(<expr pos:start="59:13" pos:end="59:60"><operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:14">t</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <call pos:start="59:18" pos:end="59:59"><name pos:start="59:18" pos:end="59:28">av_dict_get</name><argument_list pos:start="59:29" pos:end="59:59">(<argument pos:start="59:30" pos:end="59:40"><expr pos:start="59:30" pos:end="59:40"><name pos:start="59:30" pos:end="59:40"><name pos:start="59:30" pos:end="59:30">c</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:40">metadata</name></name></expr></argument>, <argument pos:start="59:43" pos:end="59:49"><expr pos:start="59:43" pos:end="59:49"><literal type="string" pos:start="59:43" pos:end="59:49">"title"</literal></expr></argument>, <argument pos:start="59:52" pos:end="59:55"><expr pos:start="59:52" pos:end="59:55"><name pos:start="59:52" pos:end="59:55">NULL</name></expr></argument>, <argument pos:start="59:58" pos:end="59:58"><expr pos:start="59:58" pos:end="59:58"><literal type="number" pos:start="59:58" pos:end="59:58">0</literal></expr></argument>)</argument_list></call><operator pos:start="59:60" pos:end="59:60">)</operator></expr>)</condition> <block pos:start="59:63" pos:end="77:9">{<block_content pos:start="61:13" pos:end="75:32">

            <expr_stmt pos:start="61:13" pos:end="61:40"><expr pos:start="61:13" pos:end="61:39"><name pos:start="61:13" pos:end="61:15">len</name>      <operator pos:start="61:22" pos:end="61:22">=</operator> <call pos:start="61:24" pos:end="61:39"><name pos:start="61:24" pos:end="61:29">strlen</name><argument_list pos:start="61:30" pos:end="61:39">(<argument pos:start="61:31" pos:end="61:38"><expr pos:start="61:31" pos:end="61:38"><name pos:start="61:31" pos:end="61:38"><name pos:start="61:31" pos:end="61:31">t</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:38">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:31"><expr pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:15">pkt</name><operator pos:start="63:16" pos:end="63:16">.</operator><name pos:start="63:17" pos:end="63:20">size</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:26">len</name> <operator pos:start="63:28" pos:end="63:28">+</operator> <literal type="number" pos:start="63:30" pos:end="63:30">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:43"><expr pos:start="65:13" pos:end="65:42"><name pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:15">pkt</name><operator pos:start="65:16" pos:end="65:16">.</operator><name pos:start="65:17" pos:end="65:20">data</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <call pos:start="65:24" pos:end="65:42"><name pos:start="65:24" pos:end="65:32">av_malloc</name><argument_list pos:start="65:33" pos:end="65:42">(<argument pos:start="65:34" pos:end="65:41"><expr pos:start="65:34" pos:end="65:41"><name pos:start="65:34" pos:end="65:41"><name pos:start="65:34" pos:end="65:36">pkt</name><operator pos:start="65:37" pos:end="65:37">.</operator><name pos:start="65:38" pos:end="65:41">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="69:13" pos:end="69:35"><expr pos:start="69:13" pos:end="69:34"><call pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:19">AV_WB16</name><argument_list pos:start="69:20" pos:end="69:34">(<argument pos:start="69:21" pos:end="69:28"><expr pos:start="69:21" pos:end="69:28"><name pos:start="69:21" pos:end="69:28"><name pos:start="69:21" pos:end="69:23">pkt</name><operator pos:start="69:24" pos:end="69:24">.</operator><name pos:start="69:25" pos:end="69:28">data</name></name></expr></argument>, <argument pos:start="69:31" pos:end="69:33"><expr pos:start="69:31" pos:end="69:33"><name pos:start="69:31" pos:end="69:33">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:48"><expr pos:start="71:13" pos:end="71:47"><call pos:start="71:13" pos:end="71:47"><name pos:start="71:13" pos:end="71:18">memcpy</name><argument_list pos:start="71:19" pos:end="71:47">(<argument pos:start="71:20" pos:end="71:31"><expr pos:start="71:20" pos:end="71:31"><name pos:start="71:20" pos:end="71:27"><name pos:start="71:20" pos:end="71:22">pkt</name><operator pos:start="71:23" pos:end="71:23">.</operator><name pos:start="71:24" pos:end="71:27">data</name></name> <operator pos:start="71:29" pos:end="71:29">+</operator> <literal type="number" pos:start="71:31" pos:end="71:31">2</literal></expr></argument>, <argument pos:start="71:34" pos:end="71:41"><expr pos:start="71:34" pos:end="71:41"><name pos:start="71:34" pos:end="71:41"><name pos:start="71:34" pos:end="71:34">t</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:41">value</name></name></expr></argument>, <argument pos:start="71:44" pos:end="71:46"><expr pos:start="71:44" pos:end="71:46"><name pos:start="71:44" pos:end="71:46">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:41"><expr pos:start="73:13" pos:end="73:40"><call pos:start="73:13" pos:end="73:40"><name pos:start="73:13" pos:end="73:31">ff_mov_write_packet</name><argument_list pos:start="73:32" pos:end="73:40">(<argument pos:start="73:33" pos:end="73:33"><expr pos:start="73:33" pos:end="73:33"><name pos:start="73:33" pos:end="73:33">s</name></expr></argument>, <argument pos:start="73:36" pos:end="73:39"><expr pos:start="73:36" pos:end="73:39"><operator pos:start="73:36" pos:end="73:36">&amp;</operator><name pos:start="73:37" pos:end="73:39">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:32"><expr pos:start="75:13" pos:end="75:31"><call pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:20">av_freep</name><argument_list pos:start="75:21" pos:end="75:31">(<argument pos:start="75:22" pos:end="75:30"><expr pos:start="75:22" pos:end="75:30"><operator pos:start="75:22" pos:end="75:22">&amp;</operator><name pos:start="75:23" pos:end="75:30"><name pos:start="75:23" pos:end="75:25">pkt</name><operator pos:start="75:26" pos:end="75:26">.</operator><name pos:start="75:27" pos:end="75:30">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
