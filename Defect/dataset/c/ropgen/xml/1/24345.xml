<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24345.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">ccw_dstream_init</name><parameter_list pos:start="1:22" pos:end="1:74">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:35">CcwDataStream</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">cds</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:46">CCW1</name> <specifier pos:start="1:48" pos:end="1:52">const</specifier> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">ccw</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:73"><decl pos:start="1:60" pos:end="1:73"><type pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:62">ORB</name> <specifier pos:start="1:64" pos:end="1:68">const</specifier> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">orb</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="19:1">{<block_content pos:start="7:5" pos:end="18:5">
    <comment type="block" pos:start="3:5" pos:end="6:7">/*
     * We don't support MIDA (an optional facility) yet and we
     * catch this earlier. Just for expressing the precondition.
     */</comment>
    <expr_stmt pos:start="7:5" pos:end="7:51"><expr pos:start="7:5" pos:end="7:50"><call pos:start="7:5" pos:end="7:50"><name pos:start="7:5" pos:end="7:12">g_assert</name><argument_list pos:start="7:13" pos:end="7:50">(<argument pos:start="7:14" pos:end="7:49"><expr pos:start="7:14" pos:end="7:49"><operator pos:start="7:14" pos:end="7:14">!</operator><operator pos:start="7:15" pos:end="7:15">(</operator><name pos:start="7:16" pos:end="7:25"><name pos:start="7:16" pos:end="7:18">orb</name><operator pos:start="7:19" pos:end="7:20">-&gt;</operator><name pos:start="7:21" pos:end="7:25">ctrl1</name></name> <operator pos:start="7:27" pos:end="7:27">&amp;</operator> <name pos:start="7:29" pos:end="7:48">ORB_CTRL1_MASK_MIDAW</name><operator pos:start="7:49" pos:end="7:49">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="10:61"><expr pos:start="8:5" pos:end="10:60"><name pos:start="8:5" pos:end="8:14"><name pos:start="8:5" pos:end="8:7">cds</name><operator pos:start="8:8" pos:end="8:9">-&gt;</operator><name pos:start="8:10" pos:end="8:14">flags</name></name> <operator pos:start="8:16" pos:end="8:16">=</operator> <operator pos:start="8:18" pos:end="8:18">(</operator><ternary pos:start="8:19" pos:end="8:65"><condition pos:start="8:19" pos:end="8:51"><expr pos:start="8:19" pos:end="8:49"><name pos:start="8:19" pos:end="8:28"><name pos:start="8:19" pos:end="8:21">orb</name><operator pos:start="8:22" pos:end="8:23">-&gt;</operator><name pos:start="8:24" pos:end="8:28">ctrl0</name></name> <operator pos:start="8:30" pos:end="8:30">&amp;</operator> <name pos:start="8:32" pos:end="8:49">ORB_CTRL0_MASK_I2K</name></expr> ?</condition><then pos:start="8:53" pos:end="8:61"> <expr pos:start="8:53" pos:end="8:61"><name pos:start="8:53" pos:end="8:61">CDS_F_I2K</name></expr> </then><else pos:start="8:63" pos:end="8:65">: <expr pos:start="8:65" pos:end="8:65"><literal type="number" pos:start="8:65" pos:end="8:65">0</literal></expr></else></ternary><operator pos:start="8:66" pos:end="8:66">)</operator> <operator pos:start="8:68" pos:end="8:68">|</operator>
                 <operator pos:start="9:18" pos:end="9:18">(</operator><ternary pos:start="9:19" pos:end="9:65"><condition pos:start="9:19" pos:end="9:51"><expr pos:start="9:19" pos:end="9:49"><name pos:start="9:19" pos:end="9:28"><name pos:start="9:19" pos:end="9:21">orb</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:28">ctrl0</name></name> <operator pos:start="9:30" pos:end="9:30">&amp;</operator> <name pos:start="9:32" pos:end="9:49">ORB_CTRL0_MASK_C64</name></expr> ?</condition><then pos:start="9:53" pos:end="9:61"> <expr pos:start="9:53" pos:end="9:61"><name pos:start="9:53" pos:end="9:61">CDS_F_C64</name></expr> </then><else pos:start="9:63" pos:end="9:65">: <expr pos:start="9:65" pos:end="9:65"><literal type="number" pos:start="9:65" pos:end="9:65">0</literal></expr></else></ternary><operator pos:start="9:66" pos:end="9:66">)</operator> <operator pos:start="9:68" pos:end="9:68">|</operator>
                 <operator pos:start="10:18" pos:end="10:18">(</operator><ternary pos:start="10:19" pos:end="10:59"><condition pos:start="10:19" pos:end="10:45"><expr pos:start="10:19" pos:end="10:43"><name pos:start="10:19" pos:end="10:28"><name pos:start="10:19" pos:end="10:21">ccw</name><operator pos:start="10:22" pos:end="10:23">-&gt;</operator><name pos:start="10:24" pos:end="10:28">flags</name></name> <operator pos:start="10:30" pos:end="10:30">&amp;</operator> <name pos:start="10:32" pos:end="10:43">CCW_FLAG_IDA</name></expr> ?</condition><then pos:start="10:47" pos:end="10:55"> <expr pos:start="10:47" pos:end="10:55"><name pos:start="10:47" pos:end="10:55">CDS_F_IDA</name></expr> </then><else pos:start="10:57" pos:end="10:59">: <expr pos:start="10:59" pos:end="10:59"><literal type="number" pos:start="10:59" pos:end="10:59">0</literal></expr></else></ternary><operator pos:start="10:60" pos:end="10:60">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:28"><expr pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:7">cds</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:14">count</name></name> <operator pos:start="11:16" pos:end="11:16">=</operator> <name pos:start="11:18" pos:end="11:27"><name pos:start="11:18" pos:end="11:20">ccw</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:27">count</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:29"><expr pos:start="12:5" pos:end="12:28"><name pos:start="12:5" pos:end="12:17"><name pos:start="12:5" pos:end="12:7">cds</name><operator pos:start="12:8" pos:end="12:9">-&gt;</operator><name pos:start="12:10" pos:end="12:17">cda_orig</name></name> <operator pos:start="12:19" pos:end="12:19">=</operator> <name pos:start="12:21" pos:end="12:28"><name pos:start="12:21" pos:end="12:23">ccw</name><operator pos:start="12:24" pos:end="12:25">-&gt;</operator><name pos:start="12:26" pos:end="12:28">cda</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:28"><expr pos:start="13:5" pos:end="13:27"><call pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:22">ccw_dstream_rewind</name><argument_list pos:start="13:23" pos:end="13:27">(<argument pos:start="13:24" pos:end="13:26"><expr pos:start="13:24" pos:end="13:26"><name pos:start="13:24" pos:end="13:26">cds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="14:5" pos:end="18:5"><if pos:start="14:5" pos:end="16:5">if <condition pos:start="14:8" pos:end="14:34">(<expr pos:start="14:9" pos:end="14:33"><operator pos:start="14:9" pos:end="14:9">!</operator><operator pos:start="14:10" pos:end="14:10">(</operator><name pos:start="14:11" pos:end="14:20"><name pos:start="14:11" pos:end="14:13">cds</name><operator pos:start="14:14" pos:end="14:15">-&gt;</operator><name pos:start="14:16" pos:end="14:20">flags</name></name> <operator pos:start="14:22" pos:end="14:22">&amp;</operator> <name pos:start="14:24" pos:end="14:32">CDS_F_IDA</name><operator pos:start="14:33" pos:end="14:33">)</operator></expr>)</condition> <block pos:start="14:36" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:49">
        <expr_stmt pos:start="15:9" pos:end="15:49"><expr pos:start="15:9" pos:end="15:48"><name pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:11">cds</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:23">op_handler</name></name> <operator pos:start="15:25" pos:end="15:25">=</operator> <name pos:start="15:27" pos:end="15:48">ccw_dstream_rw_noflags</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="16:7" pos:end="18:5">else <block pos:start="16:12" pos:end="18:5">{<block_content pos:start="17:9" pos:end="17:22">
        <expr_stmt pos:start="17:9" pos:end="17:22"><expr pos:start="17:9" pos:end="17:21"><call pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:14">assert</name><argument_list pos:start="17:15" pos:end="17:21">(<argument pos:start="17:16" pos:end="17:20"><expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:20">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function></unit>
