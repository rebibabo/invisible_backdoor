<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3089.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">uhci_queue_fill</name><parameter_list pos:start="1:28" pos:end="1:54">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:37">UHCIQueue</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">q</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:49">UHCI_TD</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">td</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:49">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:21">int_mask</name> <init pos:start="5:23" pos:end="5:25">= <expr pos:start="5:25" pos:end="5:25"><literal type="number" pos:start="5:25" pos:end="5:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:18">plink</name> <init pos:start="7:20" pos:end="7:29">= <expr pos:start="7:22" pos:end="7:29"><name pos:start="7:22" pos:end="7:29"><name pos:start="7:22" pos:end="7:23">td</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:29">link</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">UHCI_TD</name></type> <name pos:start="9:13" pos:end="9:15">ptd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <while pos:start="15:5" pos:end="47:5">while <condition pos:start="15:11" pos:end="15:27">(<expr pos:start="15:12" pos:end="15:26"><call pos:start="15:12" pos:end="15:26"><name pos:start="15:12" pos:end="15:19">is_valid</name><argument_list pos:start="15:20" pos:end="15:26">(<argument pos:start="15:21" pos:end="15:25"><expr pos:start="15:21" pos:end="15:25"><name pos:start="15:21" pos:end="15:25">plink</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:29" pos:end="47:5">{<block_content pos:start="17:9" pos:end="45:25">

        <expr_stmt pos:start="17:9" pos:end="17:43"><expr pos:start="17:9" pos:end="17:42"><call pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:20">uhci_read_td</name><argument_list pos:start="17:21" pos:end="17:42">(<argument pos:start="17:22" pos:end="17:28"><expr pos:start="17:22" pos:end="17:28"><name pos:start="17:22" pos:end="17:28"><name pos:start="17:22" pos:end="17:22">q</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:28">uhci</name></name></expr></argument>, <argument pos:start="17:31" pos:end="17:34"><expr pos:start="17:31" pos:end="17:34"><operator pos:start="17:31" pos:end="17:31">&amp;</operator><name pos:start="17:32" pos:end="17:34">ptd</name></expr></argument>, <argument pos:start="17:37" pos:end="17:41"><expr pos:start="17:37" pos:end="17:41"><name pos:start="17:37" pos:end="17:41">plink</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:41">(<expr pos:start="19:13" pos:end="19:40"><operator pos:start="19:13" pos:end="19:13">!</operator><operator pos:start="19:14" pos:end="19:14">(</operator><name pos:start="19:15" pos:end="19:22"><name pos:start="19:15" pos:end="19:17">ptd</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:22">ctrl</name></name> <operator pos:start="19:24" pos:end="19:24">&amp;</operator> <name pos:start="19:26" pos:end="19:39">TD_CTRL_ACTIVE</name><operator pos:start="19:40" pos:end="19:40">)</operator></expr>)</condition> <block pos:start="19:43" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:18">

            <break pos:start="21:13" pos:end="21:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:47">(<expr pos:start="25:13" pos:end="25:46"><call pos:start="25:13" pos:end="25:34"><name pos:start="25:13" pos:end="25:28">uhci_queue_token</name><argument_list pos:start="25:29" pos:end="25:34">(<argument pos:start="25:30" pos:end="25:33"><expr pos:start="25:30" pos:end="25:33"><operator pos:start="25:30" pos:end="25:30">&amp;</operator><name pos:start="25:31" pos:end="25:33">ptd</name></expr></argument>)</argument_list></call> <operator pos:start="25:36" pos:end="25:37">!=</operator> <name pos:start="25:39" pos:end="25:46"><name pos:start="25:39" pos:end="25:39">q</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:46">token</name></name></expr>)</condition> <block pos:start="25:49" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:67"><expr pos:start="31:9" pos:end="31:66"><call pos:start="31:9" pos:end="31:66"><name pos:start="31:9" pos:end="31:31">trace_usb_uhci_td_queue</name><argument_list pos:start="31:32" pos:end="31:66">(<argument pos:start="31:33" pos:end="31:44"><expr pos:start="31:33" pos:end="31:44"><name pos:start="31:33" pos:end="31:37">plink</name> <operator pos:start="31:39" pos:end="31:39">&amp;</operator> <operator pos:start="31:41" pos:end="31:41">~</operator><literal type="number" pos:start="31:42" pos:end="31:44">0xf</literal></expr></argument>, <argument pos:start="31:47" pos:end="31:54"><expr pos:start="31:47" pos:end="31:54"><name pos:start="31:47" pos:end="31:54"><name pos:start="31:47" pos:end="31:49">ptd</name><operator pos:start="31:50" pos:end="31:50">.</operator><name pos:start="31:51" pos:end="31:54">ctrl</name></name></expr></argument>, <argument pos:start="31:57" pos:end="31:65"><expr pos:start="31:57" pos:end="31:65"><name pos:start="31:57" pos:end="31:65"><name pos:start="31:57" pos:end="31:59">ptd</name><operator pos:start="31:60" pos:end="31:60">.</operator><name pos:start="31:61" pos:end="31:65">token</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:65"><expr pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:64"><name pos:start="33:15" pos:end="33:28">uhci_handle_td</name><argument_list pos:start="33:29" pos:end="33:64">(<argument pos:start="33:30" pos:end="33:36"><expr pos:start="33:30" pos:end="33:36"><name pos:start="33:30" pos:end="33:36"><name pos:start="33:30" pos:end="33:30">q</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:36">uhci</name></name></expr></argument>, <argument pos:start="33:39" pos:end="33:39"><expr pos:start="33:39" pos:end="33:39"><name pos:start="33:39" pos:end="33:39">q</name></expr></argument>, <argument pos:start="33:42" pos:end="33:45"><expr pos:start="33:42" pos:end="33:45"><operator pos:start="33:42" pos:end="33:42">&amp;</operator><name pos:start="33:43" pos:end="33:45">ptd</name></expr></argument>, <argument pos:start="33:48" pos:end="33:52"><expr pos:start="33:48" pos:end="33:52"><name pos:start="33:48" pos:end="33:52">plink</name></expr></argument>, <argument pos:start="33:55" pos:end="33:63"><expr pos:start="33:55" pos:end="33:63"><operator pos:start="33:55" pos:end="33:55">&amp;</operator><name pos:start="33:56" pos:end="33:63">int_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:40">(<expr pos:start="35:13" pos:end="35:39"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:18">==</operator> <name pos:start="35:20" pos:end="35:39">TD_RESULT_ASYNC_CONT</name></expr>)</condition> <block pos:start="35:42" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:18">

            <break pos:start="37:13" pos:end="37:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:45"><expr pos:start="41:9" pos:end="41:44"><call pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:14">assert</name><argument_list pos:start="41:15" pos:end="41:44">(<argument pos:start="41:16" pos:end="41:43"><expr pos:start="41:16" pos:end="41:43"><name pos:start="41:16" pos:end="41:18">ret</name> <operator pos:start="41:20" pos:end="41:21">==</operator> <name pos:start="41:23" pos:end="41:43">TD_RESULT_ASYNC_START</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><call pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:14">assert</name><argument_list pos:start="43:15" pos:end="43:29">(<argument pos:start="43:16" pos:end="43:28"><expr pos:start="43:16" pos:end="43:28"><name pos:start="43:16" pos:end="43:23">int_mask</name> <operator pos:start="43:25" pos:end="43:26">==</operator> <literal type="number" pos:start="43:28" pos:end="43:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:13">plink</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:19">ptd</name><operator pos:start="45:20" pos:end="45:20">.</operator><name pos:start="45:21" pos:end="45:24">link</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="49:5" pos:end="49:49"><expr pos:start="49:5" pos:end="49:48"><call pos:start="49:5" pos:end="49:48"><name pos:start="49:5" pos:end="49:29">usb_device_flush_ep_queue</name><argument_list pos:start="49:30" pos:end="49:48">(<argument pos:start="49:31" pos:end="49:40"><expr pos:start="49:31" pos:end="49:40"><name pos:start="49:31" pos:end="49:40"><name pos:start="49:31" pos:end="49:31">q</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:35">ep</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:40">dev</name></name></expr></argument>, <argument pos:start="49:43" pos:end="49:47"><expr pos:start="49:43" pos:end="49:47"><name pos:start="49:43" pos:end="49:47"><name pos:start="49:43" pos:end="49:43">q</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:47">ep</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
