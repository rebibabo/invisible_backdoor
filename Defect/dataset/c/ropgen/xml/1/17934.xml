<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17934.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:34">aac_encode_init</name><parameter_list pos:start="1:35" pos:end="1:57">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">AACEncContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:39">= <expr pos:start="5:24" pos:end="5:39"><name pos:start="5:24" pos:end="5:39"><name pos:start="5:24" pos:end="5:28">avctx</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:27"><name pos:start="9:20" pos:end="9:24">sizes</name><index pos:start="9:25" pos:end="9:27">[<expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:38"><name pos:start="11:13" pos:end="11:20">grouping</name><index pos:start="11:21" pos:end="11:38">[<expr pos:start="11:22" pos:end="11:37"><name pos:start="11:22" pos:end="11:37">AAC_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:15">lengths</name><index pos:start="13:16" pos:end="13:18">[<expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">2</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:9">avctx</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:21">frame_size</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <literal type="number" pos:start="17:25" pos:end="17:28">1024</literal></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="25:18">for <control pos:start="21:9" pos:end="21:28">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:23"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <literal type="number" pos:start="21:21" pos:end="21:22">16</literal></expr>;</condition> <incr pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:25">i</name><operator pos:start="21:26" pos:end="21:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:9" pos:end="25:18"><block_content pos:start="23:9" pos:end="25:18">

        <if_stmt pos:start="23:9" pos:end="25:18"><if pos:start="23:9" pos:end="25:18">if <condition pos:start="23:12" pos:end="23:68">(<expr pos:start="23:13" pos:end="23:67"><name pos:start="23:13" pos:end="23:30"><name pos:start="23:13" pos:end="23:17">avctx</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:30">sample_rate</name></name> <operator pos:start="23:32" pos:end="23:33">==</operator> <name pos:start="23:35" pos:end="23:67"><name pos:start="23:35" pos:end="23:64">avpriv_mpeg4audio_sample_rates</name><index pos:start="23:65" pos:end="23:67">[<expr pos:start="23:66" pos:end="23:66"><name pos:start="23:66" pos:end="23:66">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:18"><block_content pos:start="25:13" pos:end="25:18">

            <break pos:start="25:13" pos:end="25:18">break;</break></block_content></block></if></if_stmt></block_content></block></for>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:9">i</name> <operator pos:start="27:11" pos:end="27:12">==</operator> <literal type="number" pos:start="27:14" pos:end="27:15">16</literal></expr>)</condition> <block pos:start="27:18" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <expr_stmt pos:start="29:9" pos:end="29:88"><expr pos:start="29:9" pos:end="29:87"><call pos:start="29:9" pos:end="29:87"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:87">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:66"><expr pos:start="29:37" pos:end="29:66"><literal type="string" pos:start="29:37" pos:end="29:66">"Unsupported sample rate %d\n"</literal></expr></argument>, <argument pos:start="29:69" pos:end="29:86"><expr pos:start="29:69" pos:end="29:86"><name pos:start="29:69" pos:end="29:86"><name pos:start="29:69" pos:end="29:73">avctx</name><operator pos:start="29:74" pos:end="29:75">-&gt;</operator><name pos:start="29:76" pos:end="29:86">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:43">(<expr pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:13">avctx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:23">channels</name></name> <operator pos:start="35:25" pos:end="35:25">&gt;</operator> <name pos:start="35:27" pos:end="35:42">AAC_MAX_CHANNELS</name></expr>)</condition> <block pos:start="35:45" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <expr_stmt pos:start="37:9" pos:end="37:93"><expr pos:start="37:9" pos:end="37:92"><call pos:start="37:9" pos:end="37:92"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:92">(<argument pos:start="37:16" pos:end="37:20"><expr pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:20">avctx</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:37" pos:end="37:74"><expr pos:start="37:37" pos:end="37:74"><literal type="string" pos:start="37:37" pos:end="37:74">"Unsupported number of channels: %d\n"</literal></expr></argument>, <argument pos:start="37:77" pos:end="37:91"><expr pos:start="37:77" pos:end="37:91"><name pos:start="37:77" pos:end="37:91"><name pos:start="37:77" pos:end="37:81">avctx</name><operator pos:start="37:82" pos:end="37:83">-&gt;</operator><name pos:start="37:84" pos:end="37:91">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:85">(<expr pos:start="43:9" pos:end="43:84"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:13">avctx</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">profile</name></name> <operator pos:start="43:24" pos:end="43:25">!=</operator> <name pos:start="43:27" pos:end="43:44">FF_PROFILE_UNKNOWN</name> <operator pos:start="43:46" pos:end="43:47">&amp;&amp;</operator> <name pos:start="43:49" pos:end="43:62"><name pos:start="43:49" pos:end="43:53">avctx</name><operator pos:start="43:54" pos:end="43:55">-&gt;</operator><name pos:start="43:56" pos:end="43:62">profile</name></name> <operator pos:start="43:64" pos:end="43:65">!=</operator> <name pos:start="43:67" pos:end="43:84">FF_PROFILE_AAC_LOW</name></expr>)</condition> <block pos:start="43:87" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:18">

        <expr_stmt pos:start="45:9" pos:end="45:80"><expr pos:start="45:9" pos:end="45:79"><call pos:start="45:9" pos:end="45:79"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:79">(<argument pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:20">avctx</name></expr></argument>, <argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:37" pos:end="45:62"><expr pos:start="45:37" pos:end="45:62"><literal type="string" pos:start="45:37" pos:end="45:62">"Unsupported profile %d\n"</literal></expr></argument>, <argument pos:start="45:65" pos:end="45:78"><expr pos:start="45:65" pos:end="45:78"><name pos:start="45:65" pos:end="45:78"><name pos:start="45:65" pos:end="45:69">avctx</name><operator pos:start="45:70" pos:end="45:71">-&gt;</operator><name pos:start="45:72" pos:end="45:78">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:79">(<expr pos:start="51:9" pos:end="51:78"><literal type="number" pos:start="51:9" pos:end="51:14">1024.0</literal> <operator pos:start="51:16" pos:end="51:16">*</operator> <name pos:start="51:18" pos:end="51:32"><name pos:start="51:18" pos:end="51:22">avctx</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:32">bit_rate</name></name> <operator pos:start="51:34" pos:end="51:34">/</operator> <name pos:start="51:36" pos:end="51:53"><name pos:start="51:36" pos:end="51:40">avctx</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:53">sample_rate</name></name> <operator pos:start="51:55" pos:end="51:55">&gt;</operator> <literal type="number" pos:start="51:57" pos:end="51:60">6144</literal> <operator pos:start="51:62" pos:end="51:62">*</operator> <name pos:start="51:64" pos:end="51:78"><name pos:start="51:64" pos:end="51:68">avctx</name><operator pos:start="51:69" pos:end="51:70">-&gt;</operator><name pos:start="51:71" pos:end="51:78">channels</name></name></expr>)</condition> <block pos:start="51:81" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:18">

        <expr_stmt pos:start="53:9" pos:end="53:75"><expr pos:start="53:9" pos:end="53:74"><call pos:start="53:9" pos:end="53:74"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:74">(<argument pos:start="53:16" pos:end="53:20"><expr pos:start="53:16" pos:end="53:20"><name pos:start="53:16" pos:end="53:20">avctx</name></expr></argument>, <argument pos:start="53:23" pos:end="53:34"><expr pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:37" pos:end="53:73"><expr pos:start="53:37" pos:end="53:73"><literal type="string" pos:start="53:37" pos:end="53:73">"Too many bits per frame requested\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:18">return <expr pos:start="55:16" pos:end="55:17"><operator pos:start="55:16" pos:end="55:16">-</operator><literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:28"><expr pos:start="59:5" pos:end="59:27"><name pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:23">samplerate_index</name></name> <operator pos:start="59:25" pos:end="59:25">=</operator> <name pos:start="59:27" pos:end="59:27">i</name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:33"><expr pos:start="63:5" pos:end="63:32"><call pos:start="63:5" pos:end="63:32"><name pos:start="63:5" pos:end="63:16">dsputil_init</name><argument_list pos:start="63:17" pos:end="63:32">(<argument pos:start="63:18" pos:end="63:24"><expr pos:start="63:18" pos:end="63:24"><operator pos:start="63:18" pos:end="63:18">&amp;</operator><name pos:start="63:19" pos:end="63:24"><name pos:start="63:19" pos:end="63:19">s</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:24">dsp</name></name></expr></argument>, <argument pos:start="63:27" pos:end="63:31"><expr pos:start="63:27" pos:end="63:31"><name pos:start="63:27" pos:end="63:31">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:43"><expr pos:start="65:5" pos:end="65:42"><call pos:start="65:5" pos:end="65:42"><name pos:start="65:5" pos:end="65:16">ff_mdct_init</name><argument_list pos:start="65:17" pos:end="65:42">(<argument pos:start="65:18" pos:end="65:29"><expr pos:start="65:18" pos:end="65:29"><operator pos:start="65:18" pos:end="65:18">&amp;</operator><name pos:start="65:19" pos:end="65:29"><name pos:start="65:19" pos:end="65:19">s</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:29">mdct1024</name></name></expr></argument>, <argument pos:start="65:32" pos:end="65:33"><expr pos:start="65:32" pos:end="65:33"><literal type="number" pos:start="65:32" pos:end="65:33">11</literal></expr></argument>, <argument pos:start="65:36" pos:end="65:36"><expr pos:start="65:36" pos:end="65:36"><literal type="number" pos:start="65:36" pos:end="65:36">0</literal></expr></argument>, <argument pos:start="65:39" pos:end="65:41"><expr pos:start="65:39" pos:end="65:41"><literal type="number" pos:start="65:39" pos:end="65:41">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:43"><expr pos:start="67:5" pos:end="67:42"><call pos:start="67:5" pos:end="67:42"><name pos:start="67:5" pos:end="67:16">ff_mdct_init</name><argument_list pos:start="67:17" pos:end="67:42">(<argument pos:start="67:18" pos:end="67:28"><expr pos:start="67:18" pos:end="67:28"><operator pos:start="67:18" pos:end="67:18">&amp;</operator><name pos:start="67:19" pos:end="67:28"><name pos:start="67:19" pos:end="67:19">s</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:28">mdct128</name></name></expr></argument>,   <argument pos:start="67:33" pos:end="67:33"><expr pos:start="67:33" pos:end="67:33"><literal type="number" pos:start="67:33" pos:end="67:33">8</literal></expr></argument>, <argument pos:start="67:36" pos:end="67:36"><expr pos:start="67:36" pos:end="67:36"><literal type="number" pos:start="67:36" pos:end="67:36">0</literal></expr></argument>, <argument pos:start="67:39" pos:end="67:41"><expr pos:start="67:39" pos:end="67:41"><literal type="number" pos:start="67:39" pos:end="67:41">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="69:5" pos:end="69:18">// window init</comment>

    <expr_stmt pos:start="71:5" pos:end="71:56"><expr pos:start="71:5" pos:end="71:55"><call pos:start="71:5" pos:end="71:55"><name pos:start="71:5" pos:end="71:22">ff_kbd_window_init</name><argument_list pos:start="71:23" pos:end="71:55">(<argument pos:start="71:24" pos:end="71:43"><expr pos:start="71:24" pos:end="71:43"><name pos:start="71:24" pos:end="71:43">ff_aac_kbd_long_1024</name></expr></argument>, <argument pos:start="71:46" pos:end="71:48"><expr pos:start="71:46" pos:end="71:48"><literal type="number" pos:start="71:46" pos:end="71:48">4.0</literal></expr></argument>, <argument pos:start="71:51" pos:end="71:54"><expr pos:start="71:51" pos:end="71:54"><literal type="number" pos:start="71:51" pos:end="71:54">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:55"><expr pos:start="73:5" pos:end="73:54"><call pos:start="73:5" pos:end="73:54"><name pos:start="73:5" pos:end="73:22">ff_kbd_window_init</name><argument_list pos:start="73:23" pos:end="73:54">(<argument pos:start="73:24" pos:end="73:43"><expr pos:start="73:24" pos:end="73:43"><name pos:start="73:24" pos:end="73:43">ff_aac_kbd_short_128</name></expr></argument>, <argument pos:start="73:46" pos:end="73:48"><expr pos:start="73:46" pos:end="73:48"><literal type="number" pos:start="73:46" pos:end="73:48">6.0</literal></expr></argument>, <argument pos:start="73:51" pos:end="73:53"><expr pos:start="73:51" pos:end="73:53"><literal type="number" pos:start="73:51" pos:end="73:53">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:32"><expr pos:start="75:5" pos:end="75:31"><call pos:start="75:5" pos:end="75:31"><name pos:start="75:5" pos:end="75:27">ff_init_ff_sine_windows</name><argument_list pos:start="75:28" pos:end="75:31">(<argument pos:start="75:29" pos:end="75:30"><expr pos:start="75:29" pos:end="75:30"><literal type="number" pos:start="75:29" pos:end="75:30">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:31"><expr pos:start="77:5" pos:end="77:30"><call pos:start="77:5" pos:end="77:30"><name pos:start="77:5" pos:end="77:27">ff_init_ff_sine_windows</name><argument_list pos:start="77:28" pos:end="77:30">(<argument pos:start="77:29" pos:end="77:29"><expr pos:start="77:29" pos:end="77:29"><literal type="number" pos:start="77:29" pos:end="77:29">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:64"><expr pos:start="81:5" pos:end="81:63"><name pos:start="81:5" pos:end="81:15"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:15">chan_map</name></name>           <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:63"><name pos:start="81:29" pos:end="81:44">aac_chan_configs</name><index pos:start="81:45" pos:end="81:63">[<expr pos:start="81:46" pos:end="81:62"><name pos:start="81:46" pos:end="81:60"><name pos:start="81:46" pos:end="81:50">avctx</name><operator pos:start="81:51" pos:end="81:52">-&gt;</operator><name pos:start="81:53" pos:end="81:60">channels</name></name><operator pos:start="81:61" pos:end="81:61">-</operator><literal type="number" pos:start="81:62" pos:end="81:62">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:90"><expr pos:start="83:5" pos:end="83:89"><name pos:start="83:5" pos:end="83:14"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:14">samples</name></name>            <operator pos:start="83:27" pos:end="83:27">=</operator> <call pos:start="83:29" pos:end="83:89"><name pos:start="83:29" pos:end="83:37">av_malloc</name><argument_list pos:start="83:38" pos:end="83:89">(<argument pos:start="83:39" pos:end="83:88"><expr pos:start="83:39" pos:end="83:88"><literal type="number" pos:start="83:39" pos:end="83:39">2</literal> <operator pos:start="83:41" pos:end="83:41">*</operator> <literal type="number" pos:start="83:43" pos:end="83:46">1024</literal> <operator pos:start="83:48" pos:end="83:48">*</operator> <name pos:start="83:50" pos:end="83:64"><name pos:start="83:50" pos:end="83:54">avctx</name><operator pos:start="83:55" pos:end="83:56">-&gt;</operator><name pos:start="83:57" pos:end="83:64">channels</name></name> <operator pos:start="83:66" pos:end="83:66">*</operator> <sizeof pos:start="83:68" pos:end="83:88">sizeof<argument_list pos:start="83:74" pos:end="83:88">(<argument pos:start="83:75" pos:end="83:87"><expr pos:start="83:75" pos:end="83:87"><name pos:start="83:75" pos:end="83:87"><name pos:start="83:75" pos:end="83:75">s</name><operator pos:start="83:76" pos:end="83:77">-&gt;</operator><name pos:start="83:78" pos:end="83:84">samples</name><index pos:start="83:85" pos:end="83:87">[<expr pos:start="83:86" pos:end="83:86"><literal type="number" pos:start="83:86" pos:end="83:86">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:80"><expr pos:start="85:5" pos:end="85:79"><name pos:start="85:5" pos:end="85:10"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:10">cpe</name></name>                <operator pos:start="85:27" pos:end="85:27">=</operator> <call pos:start="85:29" pos:end="85:79"><name pos:start="85:29" pos:end="85:38">av_mallocz</name><argument_list pos:start="85:39" pos:end="85:79">(<argument pos:start="85:40" pos:end="85:78"><expr pos:start="85:40" pos:end="85:78"><sizeof pos:start="85:40" pos:end="85:61">sizeof<argument_list pos:start="85:46" pos:end="85:61">(<argument pos:start="85:47" pos:end="85:60"><expr pos:start="85:47" pos:end="85:60"><name pos:start="85:47" pos:end="85:60">ChannelElement</name></expr></argument>)</argument_list></sizeof> <operator pos:start="85:63" pos:end="85:63">*</operator> <name pos:start="85:65" pos:end="85:78"><name pos:start="85:65" pos:end="85:65">s</name><operator pos:start="85:66" pos:end="85:67">-&gt;</operator><name pos:start="85:68" pos:end="85:75">chan_map</name><index pos:start="85:76" pos:end="85:78">[<expr pos:start="85:77" pos:end="85:77"><literal type="number" pos:start="85:77" pos:end="85:77">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:73"><expr pos:start="87:5" pos:end="87:72"><name pos:start="87:5" pos:end="87:20"><name pos:start="87:5" pos:end="87:9">avctx</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:20">extradata</name></name>      <operator pos:start="87:27" pos:end="87:27">=</operator> <call pos:start="87:29" pos:end="87:72"><name pos:start="87:29" pos:end="87:38">av_mallocz</name><argument_list pos:start="87:39" pos:end="87:72">(<argument pos:start="87:40" pos:end="87:71"><expr pos:start="87:40" pos:end="87:71"><literal type="number" pos:start="87:40" pos:end="87:42">5</literal> <operator pos:start="87:42" pos:end="87:42">+</operator> <name pos:start="87:44" pos:end="87:71">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:30"><expr pos:start="89:5" pos:end="89:29"><name pos:start="89:5" pos:end="89:25"><name pos:start="89:5" pos:end="89:9">avctx</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:25">extradata_size</name></name> <operator pos:start="89:27" pos:end="89:27">=</operator> <literal type="number" pos:start="89:29" pos:end="89:29">5</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:37"><expr pos:start="91:5" pos:end="91:36"><call pos:start="91:5" pos:end="91:36"><name pos:start="91:5" pos:end="91:29">put_audio_specific_config</name><argument_list pos:start="91:30" pos:end="91:36">(<argument pos:start="91:31" pos:end="91:35"><expr pos:start="91:31" pos:end="91:35"><name pos:start="91:31" pos:end="91:35">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:34"><expr pos:start="95:5" pos:end="95:33"><name pos:start="95:5" pos:end="95:12"><name pos:start="95:5" pos:end="95:9">sizes</name><index pos:start="95:10" pos:end="95:12">[<expr pos:start="95:11" pos:end="95:11"><literal type="number" pos:start="95:11" pos:end="95:11">0</literal></expr>]</index></name>   <operator pos:start="95:16" pos:end="95:16">=</operator> <name pos:start="95:18" pos:end="95:33"><name pos:start="95:18" pos:end="95:30">swb_size_1024</name><index pos:start="95:31" pos:end="95:33">[<expr pos:start="95:32" pos:end="95:32"><name pos:start="95:32" pos:end="95:32">i</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:33"><expr pos:start="97:5" pos:end="97:32"><name pos:start="97:5" pos:end="97:12"><name pos:start="97:5" pos:end="97:9">sizes</name><index pos:start="97:10" pos:end="97:12">[<expr pos:start="97:11" pos:end="97:11"><literal type="number" pos:start="97:11" pos:end="97:11">1</literal></expr>]</index></name>   <operator pos:start="97:16" pos:end="97:16">=</operator> <name pos:start="97:18" pos:end="97:32"><name pos:start="97:18" pos:end="97:29">swb_size_128</name><index pos:start="97:30" pos:end="97:32">[<expr pos:start="97:31" pos:end="97:31"><name pos:start="97:31" pos:end="97:31">i</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:40"><expr pos:start="99:5" pos:end="99:39"><name pos:start="99:5" pos:end="99:14"><name pos:start="99:5" pos:end="99:11">lengths</name><index pos:start="99:12" pos:end="99:14">[<expr pos:start="99:13" pos:end="99:13"><literal type="number" pos:start="99:13" pos:end="99:13">0</literal></expr>]</index></name> <operator pos:start="99:16" pos:end="99:16">=</operator> <name pos:start="99:18" pos:end="99:39"><name pos:start="99:18" pos:end="99:36">ff_aac_num_swb_1024</name><index pos:start="99:37" pos:end="99:39">[<expr pos:start="99:38" pos:end="99:38"><name pos:start="99:38" pos:end="99:38">i</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:39"><expr pos:start="101:5" pos:end="101:38"><name pos:start="101:5" pos:end="101:14"><name pos:start="101:5" pos:end="101:11">lengths</name><index pos:start="101:12" pos:end="101:14">[<expr pos:start="101:13" pos:end="101:13"><literal type="number" pos:start="101:13" pos:end="101:13">1</literal></expr>]</index></name> <operator pos:start="101:16" pos:end="101:16">=</operator> <name pos:start="101:18" pos:end="101:38"><name pos:start="101:18" pos:end="101:35">ff_aac_num_swb_128</name><index pos:start="101:36" pos:end="101:38">[<expr pos:start="101:37" pos:end="101:37"><name pos:start="101:37" pos:end="101:37">i</name></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="103:5" pos:end="105:53">for <control pos:start="103:9" pos:end="103:40">(<init pos:start="103:10" pos:end="103:15"><expr pos:start="103:10" pos:end="103:14"><name pos:start="103:10" pos:end="103:10">i</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <literal type="number" pos:start="103:14" pos:end="103:14">0</literal></expr>;</init> <condition pos:start="103:17" pos:end="103:35"><expr pos:start="103:17" pos:end="103:34"><name pos:start="103:17" pos:end="103:17">i</name> <operator pos:start="103:19" pos:end="103:19">&lt;</operator> <name pos:start="103:21" pos:end="103:34"><name pos:start="103:21" pos:end="103:21">s</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:31">chan_map</name><index pos:start="103:32" pos:end="103:34">[<expr pos:start="103:33" pos:end="103:33"><literal type="number" pos:start="103:33" pos:end="103:33">0</literal></expr>]</index></name></expr>;</condition> <incr pos:start="103:37" pos:end="103:39"><expr pos:start="103:37" pos:end="103:39"><name pos:start="103:37" pos:end="103:37">i</name><operator pos:start="103:38" pos:end="103:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="105:9" pos:end="105:53"><block_content pos:start="105:9" pos:end="105:53">

        <expr_stmt pos:start="105:9" pos:end="105:53"><expr pos:start="105:9" pos:end="105:52"><name pos:start="105:9" pos:end="105:19"><name pos:start="105:9" pos:end="105:16">grouping</name><index pos:start="105:17" pos:end="105:19">[<expr pos:start="105:18" pos:end="105:18"><name pos:start="105:18" pos:end="105:18">i</name></expr>]</index></name> <operator pos:start="105:21" pos:end="105:21">=</operator> <name pos:start="105:23" pos:end="105:40"><name pos:start="105:23" pos:end="105:23">s</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:33">chan_map</name><index pos:start="105:34" pos:end="105:40">[<expr pos:start="105:35" pos:end="105:39"><name pos:start="105:35" pos:end="105:35">i</name> <operator pos:start="105:37" pos:end="105:37">+</operator> <literal type="number" pos:start="105:39" pos:end="105:39">1</literal></expr>]</index></name> <operator pos:start="105:42" pos:end="105:43">==</operator> <name pos:start="105:45" pos:end="105:52">TYPE_CPE</name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="107:5" pos:end="107:77"><expr pos:start="107:5" pos:end="107:76"><call pos:start="107:5" pos:end="107:76"><name pos:start="107:5" pos:end="107:15">ff_psy_init</name><argument_list pos:start="107:16" pos:end="107:76">(<argument pos:start="107:17" pos:end="107:23"><expr pos:start="107:17" pos:end="107:23"><operator pos:start="107:17" pos:end="107:17">&amp;</operator><name pos:start="107:18" pos:end="107:23"><name pos:start="107:18" pos:end="107:18">s</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:23">psy</name></name></expr></argument>, <argument pos:start="107:26" pos:end="107:30"><expr pos:start="107:26" pos:end="107:30"><name pos:start="107:26" pos:end="107:30">avctx</name></expr></argument>, <argument pos:start="107:33" pos:end="107:33"><expr pos:start="107:33" pos:end="107:33"><literal type="number" pos:start="107:33" pos:end="107:33">2</literal></expr></argument>, <argument pos:start="107:36" pos:end="107:40"><expr pos:start="107:36" pos:end="107:40"><name pos:start="107:36" pos:end="107:40">sizes</name></expr></argument>, <argument pos:start="107:43" pos:end="107:49"><expr pos:start="107:43" pos:end="107:49"><name pos:start="107:43" pos:end="107:49">lengths</name></expr></argument>, <argument pos:start="107:52" pos:end="107:65"><expr pos:start="107:52" pos:end="107:65"><name pos:start="107:52" pos:end="107:65"><name pos:start="107:52" pos:end="107:52">s</name><operator pos:start="107:53" pos:end="107:54">-&gt;</operator><name pos:start="107:55" pos:end="107:62">chan_map</name><index pos:start="107:63" pos:end="107:65">[<expr pos:start="107:64" pos:end="107:64"><literal type="number" pos:start="107:64" pos:end="107:64">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="107:68" pos:end="107:75"><expr pos:start="107:68" pos:end="107:75"><name pos:start="107:68" pos:end="107:75">grouping</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:45"><expr pos:start="109:5" pos:end="109:44"><name pos:start="109:5" pos:end="109:12"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:12">psypp</name></name> <operator pos:start="109:14" pos:end="109:14">=</operator> <call pos:start="109:16" pos:end="109:44"><name pos:start="109:16" pos:end="109:37">ff_psy_preprocess_init</name><argument_list pos:start="109:38" pos:end="109:44">(<argument pos:start="109:39" pos:end="109:43"><expr pos:start="109:39" pos:end="109:43"><name pos:start="109:39" pos:end="109:43">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:33"><expr pos:start="111:5" pos:end="111:32"><name pos:start="111:5" pos:end="111:12"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:12">coder</name></name> <operator pos:start="111:14" pos:end="111:14">=</operator> <operator pos:start="111:16" pos:end="111:16">&amp;</operator><name pos:start="111:17" pos:end="111:32"><name pos:start="111:17" pos:end="111:29">ff_aac_coders</name><index pos:start="111:30" pos:end="111:32">[<expr pos:start="111:31" pos:end="111:31"><literal type="number" pos:start="111:31" pos:end="111:31">2</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:68"><expr pos:start="115:5" pos:end="115:67"><name pos:start="115:5" pos:end="115:13"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:13">lambda</name></name> <operator pos:start="115:15" pos:end="115:15">=</operator> <ternary pos:start="115:17" pos:end="115:67"><condition pos:start="115:17" pos:end="115:39"><expr pos:start="115:17" pos:end="115:37"><name pos:start="115:17" pos:end="115:37"><name pos:start="115:17" pos:end="115:21">avctx</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:37">global_quality</name></name></expr> ?</condition><then pos:start="115:41" pos:end="115:61"> <expr pos:start="115:41" pos:end="115:61"><name pos:start="115:41" pos:end="115:61"><name pos:start="115:41" pos:end="115:45">avctx</name><operator pos:start="115:46" pos:end="115:47">-&gt;</operator><name pos:start="115:48" pos:end="115:61">global_quality</name></name></expr> </then><else pos:start="115:63" pos:end="115:67">: <expr pos:start="115:65" pos:end="115:67"><literal type="number" pos:start="115:65" pos:end="115:67">120</literal></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:23"><expr pos:start="119:5" pos:end="119:22"><call pos:start="119:5" pos:end="119:22"><name pos:start="119:5" pos:end="119:20">ff_aac_tableinit</name><argument_list pos:start="119:21" pos:end="119:22">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
