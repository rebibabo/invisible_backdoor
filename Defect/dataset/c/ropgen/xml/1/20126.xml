<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20126.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">encode_subband_c0run</name><parameter_list pos:start="1:33" pos:end="1:120">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:44">SnowContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:59"><decl pos:start="1:50" pos:end="1:59"><type pos:start="1:50" pos:end="1:59"><name pos:start="1:50" pos:end="1:56">SubBand</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">b</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:73"><decl pos:start="1:62" pos:end="1:73"><type pos:start="1:62" pos:end="1:73"><name pos:start="1:62" pos:end="1:68">DWTELEM</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">src</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:90"><decl pos:start="1:76" pos:end="1:90"><type pos:start="1:76" pos:end="1:90"><name pos:start="1:76" pos:end="1:82">DWTELEM</name> <modifier pos:start="1:84" pos:end="1:84">*</modifier></type><name pos:start="1:85" pos:end="1:90">parent</name></decl></parameter>, <parameter pos:start="1:93" pos:end="1:102"><decl pos:start="1:93" pos:end="1:102"><type pos:start="1:93" pos:end="1:102"><name pos:start="1:93" pos:end="1:95">int</name></type> <name pos:start="1:97" pos:end="1:102">stride</name></decl></parameter>, <parameter pos:start="1:105" pos:end="1:119"><decl pos:start="1:105" pos:end="1:119"><type pos:start="1:105" pos:end="1:119"><name pos:start="1:105" pos:end="1:107">int</name></type> <name pos:start="1:109" pos:end="1:119">orientation</name></decl></parameter>)</parameter_list><block pos:start="1:121" pos:end="213:1">{<block_content pos:start="3:5" pos:end="211:5">

    <decl_stmt pos:start="3:5" pos:end="3:26"><decl pos:start="3:5" pos:end="3:25"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:15">w</name><init pos:start="3:16" pos:end="3:25">= <expr pos:start="3:18" pos:end="3:25"><name pos:start="3:18" pos:end="3:25"><name pos:start="3:18" pos:end="3:18">b</name><operator pos:start="3:19" pos:end="3:20">-&gt;</operator><name pos:start="3:21" pos:end="3:25">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:15">h</name><init pos:start="5:16" pos:end="5:26">= <expr pos:start="5:18" pos:end="5:26"><name pos:start="5:18" pos:end="5:26"><name pos:start="5:18" pos:end="5:18">b</name><operator pos:start="5:19" pos:end="5:20">-&gt;</operator><name pos:start="5:21" pos:end="5:26">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">y</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="211:5"><if pos:start="11:5" pos:end="211:5">if<condition pos:start="11:7" pos:end="11:9">(<expr pos:start="11:8" pos:end="11:8"><literal type="number" pos:start="11:8" pos:end="11:8">1</literal></expr>)</condition><block pos:start="11:10" pos:end="211:5">{<block_content pos:start="13:9" pos:end="209:9">

        <decl_stmt pos:start="13:9" pos:end="13:18"><decl pos:start="13:9" pos:end="13:17"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:15">run</name><init pos:start="13:16" pos:end="13:17">=<expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:22"><decl pos:start="15:9" pos:end="15:21"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:16">runs</name><index pos:start="15:17" pos:end="15:21">[<expr pos:start="15:18" pos:end="15:20"><name pos:start="15:18" pos:end="15:18">w</name><operator pos:start="15:19" pos:end="15:19">*</operator><name pos:start="15:20" pos:end="15:20">h</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:24"><decl pos:start="17:9" pos:end="17:23"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:21">run_index</name><init pos:start="17:22" pos:end="17:23">=<expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></init></decl>;</decl_stmt>

                

        <for pos:start="21:9" pos:end="95:9">for<control pos:start="21:12" pos:end="21:26">(<init pos:start="21:13" pos:end="21:16"><expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:13">y</name><operator pos:start="21:14" pos:end="21:14">=</operator><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>;</init> <condition pos:start="21:18" pos:end="21:21"><expr pos:start="21:18" pos:end="21:20"><name pos:start="21:18" pos:end="21:18">y</name><operator pos:start="21:19" pos:end="21:19">&lt;</operator><name pos:start="21:20" pos:end="21:20">h</name></expr>;</condition> <incr pos:start="21:23" pos:end="21:25"><expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:23">y</name><operator pos:start="21:24" pos:end="21:25">++</operator></expr></incr>)</control><block pos:start="21:27" pos:end="95:9">{<block_content pos:start="23:13" pos:end="93:13">

            <for pos:start="23:13" pos:end="93:13">for<control pos:start="23:16" pos:end="23:30">(<init pos:start="23:17" pos:end="23:20"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:17">x</name><operator pos:start="23:18" pos:end="23:18">=</operator><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>;</init> <condition pos:start="23:22" pos:end="23:25"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:22">x</name><operator pos:start="23:23" pos:end="23:23">&lt;</operator><name pos:start="23:24" pos:end="23:24">w</name></expr>;</condition> <incr pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><name pos:start="23:27" pos:end="23:27">x</name><operator pos:start="23:28" pos:end="23:29">++</operator></expr></incr>)</control><block pos:start="23:31" pos:end="93:13">{<block_content pos:start="25:17" pos:end="91:17">

                <decl_stmt pos:start="25:17" pos:end="25:27"><decl pos:start="25:17" pos:end="25:21"><type pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">int</name></type> <name pos:start="25:21" pos:end="25:21">v</name></decl>, <decl pos:start="25:24" pos:end="25:26"><type ref="prev" pos:start="25:17" pos:end="25:19"/><name pos:start="25:24" pos:end="25:24">p</name><init pos:start="25:25" pos:end="25:26">=<expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="27:17" pos:end="27:51"><decl pos:start="27:17" pos:end="27:33"><type pos:start="27:17" pos:end="27:19"><name pos:start="27:17" pos:end="27:19">int</name></type> <comment type="block" pos:start="27:21" pos:end="27:30">/*ll=0, */</comment><name pos:start="27:31" pos:end="27:31">l</name><init pos:start="27:32" pos:end="27:33">=<expr pos:start="27:33" pos:end="27:33"><literal type="number" pos:start="27:33" pos:end="27:33">0</literal></expr></init></decl>, <decl pos:start="27:36" pos:end="27:39"><type ref="prev" pos:start="27:17" pos:end="27:19"/><name pos:start="27:36" pos:end="27:37">lt</name><init pos:start="27:38" pos:end="27:39">=<expr pos:start="27:39" pos:end="27:39"><literal type="number" pos:start="27:39" pos:end="27:39">0</literal></expr></init></decl>, <decl pos:start="27:42" pos:end="27:44"><type ref="prev" pos:start="27:17" pos:end="27:19"/><name pos:start="27:42" pos:end="27:42">t</name><init pos:start="27:43" pos:end="27:44">=<expr pos:start="27:44" pos:end="27:44"><literal type="number" pos:start="27:44" pos:end="27:44">0</literal></expr></init></decl>, <decl pos:start="27:47" pos:end="27:50"><type ref="prev" pos:start="27:17" pos:end="27:19"/><name pos:start="27:47" pos:end="27:48">rt</name><init pos:start="27:49" pos:end="27:50">=<expr pos:start="27:50" pos:end="27:50"><literal type="number" pos:start="27:50" pos:end="27:50">0</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:37"><expr pos:start="29:17" pos:end="29:36"><name pos:start="29:17" pos:end="29:17">v</name><operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:36"><name pos:start="29:20" pos:end="29:22">src</name><index pos:start="29:23" pos:end="29:36">[<expr pos:start="29:24" pos:end="29:35"><name pos:start="29:24" pos:end="29:24">x</name> <operator pos:start="29:26" pos:end="29:26">+</operator> <name pos:start="29:28" pos:end="29:28">y</name><operator pos:start="29:29" pos:end="29:29">*</operator><name pos:start="29:30" pos:end="29:35">stride</name></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="33:17" pos:end="49:17"><if pos:start="33:17" pos:end="49:17">if<condition pos:start="33:19" pos:end="33:21">(<expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">y</name></expr>)</condition><block pos:start="33:22" pos:end="49:17">{<block_content pos:start="35:21" pos:end="47:21">

                    <expr_stmt pos:start="35:21" pos:end="35:45"><expr pos:start="35:21" pos:end="35:44"><name pos:start="35:21" pos:end="35:21">t</name><operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:44"><name pos:start="35:24" pos:end="35:26">src</name><index pos:start="35:27" pos:end="35:44">[<expr pos:start="35:28" pos:end="35:43"><name pos:start="35:28" pos:end="35:28">x</name> <operator pos:start="35:30" pos:end="35:30">+</operator> <operator pos:start="35:32" pos:end="35:32">(</operator><name pos:start="35:33" pos:end="35:33">y</name><operator pos:start="35:34" pos:end="35:34">-</operator><literal type="number" pos:start="35:35" pos:end="35:35">1</literal><operator pos:start="35:36" pos:end="35:36">)</operator><operator pos:start="35:37" pos:end="35:37">*</operator><name pos:start="35:38" pos:end="35:43">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="37:21" pos:end="41:21"><if pos:start="37:21" pos:end="41:21">if<condition pos:start="37:23" pos:end="37:25">(<expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">x</name></expr>)</condition><block pos:start="37:26" pos:end="41:21">{<block_content pos:start="39:25" pos:end="39:54">

                        <expr_stmt pos:start="39:25" pos:end="39:54"><expr pos:start="39:25" pos:end="39:53"><name pos:start="39:25" pos:end="39:26">lt</name><operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:53"><name pos:start="39:29" pos:end="39:31">src</name><index pos:start="39:32" pos:end="39:53">[<expr pos:start="39:33" pos:end="39:52"><name pos:start="39:33" pos:end="39:33">x</name> <operator pos:start="39:35" pos:end="39:35">-</operator> <literal type="number" pos:start="39:37" pos:end="39:39">1</literal> <operator pos:start="39:39" pos:end="39:39">+</operator> <operator pos:start="39:41" pos:end="39:41">(</operator><name pos:start="39:42" pos:end="39:42">y</name><operator pos:start="39:43" pos:end="39:43">-</operator><literal type="number" pos:start="39:44" pos:end="39:44">1</literal><operator pos:start="39:45" pos:end="39:45">)</operator><operator pos:start="39:46" pos:end="39:46">*</operator><name pos:start="39:47" pos:end="39:52">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="43:21" pos:end="47:21"><if pos:start="43:21" pos:end="47:21">if<condition pos:start="43:23" pos:end="43:33">(<expr pos:start="43:24" pos:end="43:32"><name pos:start="43:24" pos:end="43:24">x</name> <operator pos:start="43:26" pos:end="43:26">+</operator> <literal type="number" pos:start="43:28" pos:end="43:28">1</literal> <operator pos:start="43:30" pos:end="43:30">&lt;</operator> <name pos:start="43:32" pos:end="43:32">w</name></expr>)</condition><block pos:start="43:34" pos:end="47:21">{<block_content pos:start="45:25" pos:end="45:54">

                        <expr_stmt pos:start="45:25" pos:end="45:54"><expr pos:start="45:25" pos:end="45:53"><name pos:start="45:25" pos:end="45:26">rt</name><operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:53"><name pos:start="45:29" pos:end="45:31">src</name><index pos:start="45:32" pos:end="45:53">[<expr pos:start="45:33" pos:end="45:52"><name pos:start="45:33" pos:end="45:33">x</name> <operator pos:start="45:35" pos:end="45:35">+</operator> <literal type="number" pos:start="45:37" pos:end="45:39">1</literal> <operator pos:start="45:39" pos:end="45:39">+</operator> <operator pos:start="45:41" pos:end="45:41">(</operator><name pos:start="45:42" pos:end="45:42">y</name><operator pos:start="45:43" pos:end="45:43">-</operator><literal type="number" pos:start="45:44" pos:end="45:44">1</literal><operator pos:start="45:45" pos:end="45:45">)</operator><operator pos:start="45:46" pos:end="45:46">*</operator><name pos:start="45:47" pos:end="45:52">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="51:17" pos:end="63:17"><if pos:start="51:17" pos:end="63:17">if<condition pos:start="51:19" pos:end="51:21">(<expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">x</name></expr>)</condition><block pos:start="51:22" pos:end="63:17">{<block_content pos:start="53:21" pos:end="53:45">

                    <expr_stmt pos:start="53:21" pos:end="53:45"><expr pos:start="53:21" pos:end="53:44"><name pos:start="53:21" pos:end="53:21">l</name><operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:44"><name pos:start="53:24" pos:end="53:26">src</name><index pos:start="53:27" pos:end="53:44">[<expr pos:start="53:28" pos:end="53:43"><name pos:start="53:28" pos:end="53:28">x</name> <operator pos:start="53:30" pos:end="53:30">-</operator> <literal type="number" pos:start="53:32" pos:end="53:34">1</literal> <operator pos:start="53:34" pos:end="53:34">+</operator> <name pos:start="53:36" pos:end="53:36">y</name><operator pos:start="53:37" pos:end="53:37">*</operator><name pos:start="53:38" pos:end="53:43">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    <comment type="block" pos:start="55:21" pos:end="61:23">/*if(x &gt; 1){

                        if(orientation==1) ll= src[y + (x-2)*stride];

                        else               ll= src[x - 2 + y*stride];

                    }*/</comment>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="65:17" pos:end="75:17"><if pos:start="65:17" pos:end="75:17">if<condition pos:start="65:19" pos:end="65:26">(<expr pos:start="65:20" pos:end="65:25"><name pos:start="65:20" pos:end="65:25">parent</name></expr>)</condition><block pos:start="65:27" pos:end="75:17">{<block_content pos:start="67:21" pos:end="73:52">

                    <decl_stmt pos:start="67:21" pos:end="67:33"><decl pos:start="67:21" pos:end="67:32"><type pos:start="67:21" pos:end="67:23"><name pos:start="67:21" pos:end="67:23">int</name></type> <name pos:start="67:25" pos:end="67:26">px</name><init pos:start="67:27" pos:end="67:32">= <expr pos:start="67:29" pos:end="67:32"><name pos:start="67:29" pos:end="67:29">x</name><operator pos:start="67:30" pos:end="67:31">&gt;&gt;</operator><literal type="number" pos:start="67:32" pos:end="67:32">1</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="69:21" pos:end="69:33"><decl pos:start="69:21" pos:end="69:32"><type pos:start="69:21" pos:end="69:23"><name pos:start="69:21" pos:end="69:23">int</name></type> <name pos:start="69:25" pos:end="69:26">py</name><init pos:start="69:27" pos:end="69:32">= <expr pos:start="69:29" pos:end="69:32"><name pos:start="69:29" pos:end="69:29">y</name><operator pos:start="69:30" pos:end="69:31">&gt;&gt;</operator><literal type="number" pos:start="69:32" pos:end="69:32">1</literal></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="71:21" pos:end="73:52"><if pos:start="71:21" pos:end="73:52">if<condition pos:start="71:23" pos:end="71:67">(<expr pos:start="71:24" pos:end="71:66"><name pos:start="71:24" pos:end="71:25">px</name><operator pos:start="71:26" pos:end="71:26">&lt;</operator><name pos:start="71:27" pos:end="71:42"><name pos:start="71:27" pos:end="71:27">b</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:35">parent</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:42">width</name></name> <operator pos:start="71:44" pos:end="71:45">&amp;&amp;</operator> <name pos:start="71:47" pos:end="71:48">py</name><operator pos:start="71:49" pos:end="71:49">&lt;</operator><name pos:start="71:50" pos:end="71:66"><name pos:start="71:50" pos:end="71:50">b</name><operator pos:start="71:51" pos:end="71:52">-&gt;</operator><name pos:start="71:53" pos:end="71:58">parent</name><operator pos:start="71:59" pos:end="71:60">-&gt;</operator><name pos:start="71:61" pos:end="71:66">height</name></name></expr>)</condition><block type="pseudo" pos:start="73:25" pos:end="73:52"><block_content pos:start="73:25" pos:end="73:52"> 

                        <expr_stmt pos:start="73:25" pos:end="73:52"><expr pos:start="73:25" pos:end="73:51"><name pos:start="73:25" pos:end="73:25">p</name><operator pos:start="73:26" pos:end="73:26">=</operator> <name pos:start="73:28" pos:end="73:51"><name pos:start="73:28" pos:end="73:33">parent</name><index pos:start="73:34" pos:end="73:51">[<expr pos:start="73:35" pos:end="73:50"><name pos:start="73:35" pos:end="73:36">px</name> <operator pos:start="73:38" pos:end="73:38">+</operator> <name pos:start="73:40" pos:end="73:41">py</name><operator pos:start="73:42" pos:end="73:42">*</operator><literal type="number" pos:start="73:43" pos:end="73:43">2</literal><operator pos:start="73:44" pos:end="73:44">*</operator><name pos:start="73:45" pos:end="73:50">stride</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="77:17" pos:end="91:17"><if pos:start="77:17" pos:end="91:17">if<condition pos:start="77:19" pos:end="77:41">(<expr pos:start="77:20" pos:end="77:40"><operator pos:start="77:20" pos:end="77:20">!</operator><operator pos:start="77:21" pos:end="77:21">(</operator><comment type="block" pos:start="77:22" pos:end="77:28">/*ll|*/</comment><name pos:start="77:29" pos:end="77:29">l</name><operator pos:start="77:30" pos:end="77:30">|</operator><name pos:start="77:31" pos:end="77:32">lt</name><operator pos:start="77:33" pos:end="77:33">|</operator><name pos:start="77:34" pos:end="77:34">t</name><operator pos:start="77:35" pos:end="77:35">|</operator><name pos:start="77:36" pos:end="77:37">rt</name><operator pos:start="77:38" pos:end="77:38">|</operator><name pos:start="77:39" pos:end="77:39">p</name><operator pos:start="77:40" pos:end="77:40">)</operator></expr>)</condition><block pos:start="77:42" pos:end="91:17">{<block_content pos:start="79:21" pos:end="89:21">

                    <if_stmt pos:start="79:21" pos:end="89:21"><if pos:start="79:21" pos:end="85:21">if<condition pos:start="79:23" pos:end="79:25">(<expr pos:start="79:24" pos:end="79:24"><name pos:start="79:24" pos:end="79:24">v</name></expr>)</condition><block pos:start="79:26" pos:end="85:21">{<block_content pos:start="81:25" pos:end="83:30">

                        <expr_stmt pos:start="81:25" pos:end="81:47"><expr pos:start="81:25" pos:end="81:46"><name pos:start="81:25" pos:end="81:41"><name pos:start="81:25" pos:end="81:28">runs</name><index pos:start="81:29" pos:end="81:41">[<expr pos:start="81:30" pos:end="81:40"><name pos:start="81:30" pos:end="81:38">run_index</name><operator pos:start="81:39" pos:end="81:40">++</operator></expr>]</index></name><operator pos:start="81:42" pos:end="81:42">=</operator> <name pos:start="81:44" pos:end="81:46">run</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="83:25" pos:end="83:30"><expr pos:start="83:25" pos:end="83:29"><name pos:start="83:25" pos:end="83:27">run</name><operator pos:start="83:28" pos:end="83:28">=</operator><literal type="number" pos:start="83:29" pos:end="83:29">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="85:22" pos:end="89:21">else<block pos:start="85:26" pos:end="89:21">{<block_content pos:start="87:25" pos:end="87:30">

                        <expr_stmt pos:start="87:25" pos:end="87:30"><expr pos:start="87:25" pos:end="87:29"><name pos:start="87:25" pos:end="87:27">run</name><operator pos:start="87:28" pos:end="87:29">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="97:9" pos:end="97:31"><expr pos:start="97:9" pos:end="97:30"><name pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:12">runs</name><index pos:start="97:13" pos:end="97:25">[<expr pos:start="97:14" pos:end="97:24"><name pos:start="97:14" pos:end="97:22">run_index</name><operator pos:start="97:23" pos:end="97:24">++</operator></expr>]</index></name><operator pos:start="97:26" pos:end="97:26">=</operator> <name pos:start="97:28" pos:end="97:30">run</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:20"><expr pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:17">run_index</name><operator pos:start="99:18" pos:end="99:18">=</operator><literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:31"><expr pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:11">run</name><operator pos:start="101:12" pos:end="101:12">=</operator> <name pos:start="101:14" pos:end="101:30"><name pos:start="101:14" pos:end="101:17">runs</name><index pos:start="101:18" pos:end="101:30">[<expr pos:start="101:19" pos:end="101:29"><name pos:start="101:19" pos:end="101:27">run_index</name><operator pos:start="101:28" pos:end="101:29">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:48"><expr pos:start="105:9" pos:end="105:47"><call pos:start="105:9" pos:end="105:47"><name pos:start="105:9" pos:end="105:19">put_symbol2</name><argument_list pos:start="105:20" pos:end="105:47">(<argument pos:start="105:21" pos:end="105:25"><expr pos:start="105:21" pos:end="105:25"><operator pos:start="105:21" pos:end="105:21">&amp;</operator><name pos:start="105:22" pos:end="105:25"><name pos:start="105:22" pos:end="105:22">s</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:25">c</name></name></expr></argument>, <argument pos:start="105:28" pos:end="105:38"><expr pos:start="105:28" pos:end="105:38"><name pos:start="105:28" pos:end="105:38"><name pos:start="105:28" pos:end="105:28">b</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:35">state</name><index pos:start="105:36" pos:end="105:38">[<expr pos:start="105:37" pos:end="105:37"><literal type="number" pos:start="105:37" pos:end="105:37">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="105:41" pos:end="105:43"><expr pos:start="105:41" pos:end="105:43"><name pos:start="105:41" pos:end="105:43">run</name></expr></argument>, <argument pos:start="105:46" pos:end="105:46"><expr pos:start="105:46" pos:end="105:46"><literal type="number" pos:start="105:46" pos:end="105:46">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <for pos:start="109:9" pos:end="209:9">for<control pos:start="109:12" pos:end="109:26">(<init pos:start="109:13" pos:end="109:16"><expr pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:13">y</name><operator pos:start="109:14" pos:end="109:14">=</operator><literal type="number" pos:start="109:15" pos:end="109:15">0</literal></expr>;</init> <condition pos:start="109:18" pos:end="109:21"><expr pos:start="109:18" pos:end="109:20"><name pos:start="109:18" pos:end="109:18">y</name><operator pos:start="109:19" pos:end="109:19">&lt;</operator><name pos:start="109:20" pos:end="109:20">h</name></expr>;</condition> <incr pos:start="109:23" pos:end="109:25"><expr pos:start="109:23" pos:end="109:25"><name pos:start="109:23" pos:end="109:23">y</name><operator pos:start="109:24" pos:end="109:25">++</operator></expr></incr>)</control><block pos:start="109:27" pos:end="209:9">{<block_content pos:start="111:13" pos:end="207:13">

            <for pos:start="111:13" pos:end="207:13">for<control pos:start="111:16" pos:end="111:30">(<init pos:start="111:17" pos:end="111:20"><expr pos:start="111:17" pos:end="111:19"><name pos:start="111:17" pos:end="111:17">x</name><operator pos:start="111:18" pos:end="111:18">=</operator><literal type="number" pos:start="111:19" pos:end="111:19">0</literal></expr>;</init> <condition pos:start="111:22" pos:end="111:25"><expr pos:start="111:22" pos:end="111:24"><name pos:start="111:22" pos:end="111:22">x</name><operator pos:start="111:23" pos:end="111:23">&lt;</operator><name pos:start="111:24" pos:end="111:24">w</name></expr>;</condition> <incr pos:start="111:27" pos:end="111:29"><expr pos:start="111:27" pos:end="111:29"><name pos:start="111:27" pos:end="111:27">x</name><operator pos:start="111:28" pos:end="111:29">++</operator></expr></incr>)</control><block pos:start="111:31" pos:end="207:13">{<block_content pos:start="113:17" pos:end="205:17">

                <decl_stmt pos:start="113:17" pos:end="113:27"><decl pos:start="113:17" pos:end="113:21"><type pos:start="113:17" pos:end="113:19"><name pos:start="113:17" pos:end="113:19">int</name></type> <name pos:start="113:21" pos:end="113:21">v</name></decl>, <decl pos:start="113:24" pos:end="113:26"><type ref="prev" pos:start="113:17" pos:end="113:19"/><name pos:start="113:24" pos:end="113:24">p</name><init pos:start="113:25" pos:end="113:26">=<expr pos:start="113:26" pos:end="113:26"><literal type="number" pos:start="113:26" pos:end="113:26">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="115:17" pos:end="115:51"><decl pos:start="115:17" pos:end="115:33"><type pos:start="115:17" pos:end="115:19"><name pos:start="115:17" pos:end="115:19">int</name></type> <comment type="block" pos:start="115:21" pos:end="115:30">/*ll=0, */</comment><name pos:start="115:31" pos:end="115:31">l</name><init pos:start="115:32" pos:end="115:33">=<expr pos:start="115:33" pos:end="115:33"><literal type="number" pos:start="115:33" pos:end="115:33">0</literal></expr></init></decl>, <decl pos:start="115:36" pos:end="115:39"><type ref="prev" pos:start="115:17" pos:end="115:19"/><name pos:start="115:36" pos:end="115:37">lt</name><init pos:start="115:38" pos:end="115:39">=<expr pos:start="115:39" pos:end="115:39"><literal type="number" pos:start="115:39" pos:end="115:39">0</literal></expr></init></decl>, <decl pos:start="115:42" pos:end="115:44"><type ref="prev" pos:start="115:17" pos:end="115:19"/><name pos:start="115:42" pos:end="115:42">t</name><init pos:start="115:43" pos:end="115:44">=<expr pos:start="115:44" pos:end="115:44"><literal type="number" pos:start="115:44" pos:end="115:44">0</literal></expr></init></decl>, <decl pos:start="115:47" pos:end="115:50"><type ref="prev" pos:start="115:17" pos:end="115:19"/><name pos:start="115:47" pos:end="115:48">rt</name><init pos:start="115:49" pos:end="115:50">=<expr pos:start="115:50" pos:end="115:50"><literal type="number" pos:start="115:50" pos:end="115:50">0</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:37"><expr pos:start="117:17" pos:end="117:36"><name pos:start="117:17" pos:end="117:17">v</name><operator pos:start="117:18" pos:end="117:18">=</operator> <name pos:start="117:20" pos:end="117:36"><name pos:start="117:20" pos:end="117:22">src</name><index pos:start="117:23" pos:end="117:36">[<expr pos:start="117:24" pos:end="117:35"><name pos:start="117:24" pos:end="117:24">x</name> <operator pos:start="117:26" pos:end="117:26">+</operator> <name pos:start="117:28" pos:end="117:28">y</name><operator pos:start="117:29" pos:end="117:29">*</operator><name pos:start="117:30" pos:end="117:35">stride</name></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="121:17" pos:end="137:17"><if pos:start="121:17" pos:end="137:17">if<condition pos:start="121:19" pos:end="121:21">(<expr pos:start="121:20" pos:end="121:20"><name pos:start="121:20" pos:end="121:20">y</name></expr>)</condition><block pos:start="121:22" pos:end="137:17">{<block_content pos:start="123:21" pos:end="135:21">

                    <expr_stmt pos:start="123:21" pos:end="123:45"><expr pos:start="123:21" pos:end="123:44"><name pos:start="123:21" pos:end="123:21">t</name><operator pos:start="123:22" pos:end="123:22">=</operator> <name pos:start="123:24" pos:end="123:44"><name pos:start="123:24" pos:end="123:26">src</name><index pos:start="123:27" pos:end="123:44">[<expr pos:start="123:28" pos:end="123:43"><name pos:start="123:28" pos:end="123:28">x</name> <operator pos:start="123:30" pos:end="123:30">+</operator> <operator pos:start="123:32" pos:end="123:32">(</operator><name pos:start="123:33" pos:end="123:33">y</name><operator pos:start="123:34" pos:end="123:34">-</operator><literal type="number" pos:start="123:35" pos:end="123:35">1</literal><operator pos:start="123:36" pos:end="123:36">)</operator><operator pos:start="123:37" pos:end="123:37">*</operator><name pos:start="123:38" pos:end="123:43">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="125:21" pos:end="129:21"><if pos:start="125:21" pos:end="129:21">if<condition pos:start="125:23" pos:end="125:25">(<expr pos:start="125:24" pos:end="125:24"><name pos:start="125:24" pos:end="125:24">x</name></expr>)</condition><block pos:start="125:26" pos:end="129:21">{<block_content pos:start="127:25" pos:end="127:54">

                        <expr_stmt pos:start="127:25" pos:end="127:54"><expr pos:start="127:25" pos:end="127:53"><name pos:start="127:25" pos:end="127:26">lt</name><operator pos:start="127:27" pos:end="127:27">=</operator> <name pos:start="127:29" pos:end="127:53"><name pos:start="127:29" pos:end="127:31">src</name><index pos:start="127:32" pos:end="127:53">[<expr pos:start="127:33" pos:end="127:52"><name pos:start="127:33" pos:end="127:33">x</name> <operator pos:start="127:35" pos:end="127:35">-</operator> <literal type="number" pos:start="127:37" pos:end="127:39">1</literal> <operator pos:start="127:39" pos:end="127:39">+</operator> <operator pos:start="127:41" pos:end="127:41">(</operator><name pos:start="127:42" pos:end="127:42">y</name><operator pos:start="127:43" pos:end="127:43">-</operator><literal type="number" pos:start="127:44" pos:end="127:44">1</literal><operator pos:start="127:45" pos:end="127:45">)</operator><operator pos:start="127:46" pos:end="127:46">*</operator><name pos:start="127:47" pos:end="127:52">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="131:21" pos:end="135:21"><if pos:start="131:21" pos:end="135:21">if<condition pos:start="131:23" pos:end="131:33">(<expr pos:start="131:24" pos:end="131:32"><name pos:start="131:24" pos:end="131:24">x</name> <operator pos:start="131:26" pos:end="131:26">+</operator> <literal type="number" pos:start="131:28" pos:end="131:28">1</literal> <operator pos:start="131:30" pos:end="131:30">&lt;</operator> <name pos:start="131:32" pos:end="131:32">w</name></expr>)</condition><block pos:start="131:34" pos:end="135:21">{<block_content pos:start="133:25" pos:end="133:54">

                        <expr_stmt pos:start="133:25" pos:end="133:54"><expr pos:start="133:25" pos:end="133:53"><name pos:start="133:25" pos:end="133:26">rt</name><operator pos:start="133:27" pos:end="133:27">=</operator> <name pos:start="133:29" pos:end="133:53"><name pos:start="133:29" pos:end="133:31">src</name><index pos:start="133:32" pos:end="133:53">[<expr pos:start="133:33" pos:end="133:52"><name pos:start="133:33" pos:end="133:33">x</name> <operator pos:start="133:35" pos:end="133:35">+</operator> <literal type="number" pos:start="133:37" pos:end="133:39">1</literal> <operator pos:start="133:39" pos:end="133:39">+</operator> <operator pos:start="133:41" pos:end="133:41">(</operator><name pos:start="133:42" pos:end="133:42">y</name><operator pos:start="133:43" pos:end="133:43">-</operator><literal type="number" pos:start="133:44" pos:end="133:44">1</literal><operator pos:start="133:45" pos:end="133:45">)</operator><operator pos:start="133:46" pos:end="133:46">*</operator><name pos:start="133:47" pos:end="133:52">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="139:17" pos:end="151:17"><if pos:start="139:17" pos:end="151:17">if<condition pos:start="139:19" pos:end="139:21">(<expr pos:start="139:20" pos:end="139:20"><name pos:start="139:20" pos:end="139:20">x</name></expr>)</condition><block pos:start="139:22" pos:end="151:17">{<block_content pos:start="141:21" pos:end="141:45">

                    <expr_stmt pos:start="141:21" pos:end="141:45"><expr pos:start="141:21" pos:end="141:44"><name pos:start="141:21" pos:end="141:21">l</name><operator pos:start="141:22" pos:end="141:22">=</operator> <name pos:start="141:24" pos:end="141:44"><name pos:start="141:24" pos:end="141:26">src</name><index pos:start="141:27" pos:end="141:44">[<expr pos:start="141:28" pos:end="141:43"><name pos:start="141:28" pos:end="141:28">x</name> <operator pos:start="141:30" pos:end="141:30">-</operator> <literal type="number" pos:start="141:32" pos:end="141:34">1</literal> <operator pos:start="141:34" pos:end="141:34">+</operator> <name pos:start="141:36" pos:end="141:36">y</name><operator pos:start="141:37" pos:end="141:37">*</operator><name pos:start="141:38" pos:end="141:43">stride</name></expr>]</index></name></expr>;</expr_stmt>

                    <comment type="block" pos:start="143:21" pos:end="149:23">/*if(x &gt; 1){

                        if(orientation==1) ll= src[y + (x-2)*stride];

                        else               ll= src[x - 2 + y*stride];

                    }*/</comment>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="153:17" pos:end="163:17"><if pos:start="153:17" pos:end="163:17">if<condition pos:start="153:19" pos:end="153:26">(<expr pos:start="153:20" pos:end="153:25"><name pos:start="153:20" pos:end="153:25">parent</name></expr>)</condition><block pos:start="153:27" pos:end="163:17">{<block_content pos:start="155:21" pos:end="161:52">

                    <decl_stmt pos:start="155:21" pos:end="155:33"><decl pos:start="155:21" pos:end="155:32"><type pos:start="155:21" pos:end="155:23"><name pos:start="155:21" pos:end="155:23">int</name></type> <name pos:start="155:25" pos:end="155:26">px</name><init pos:start="155:27" pos:end="155:32">= <expr pos:start="155:29" pos:end="155:32"><name pos:start="155:29" pos:end="155:29">x</name><operator pos:start="155:30" pos:end="155:31">&gt;&gt;</operator><literal type="number" pos:start="155:32" pos:end="155:32">1</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="157:21" pos:end="157:33"><decl pos:start="157:21" pos:end="157:32"><type pos:start="157:21" pos:end="157:23"><name pos:start="157:21" pos:end="157:23">int</name></type> <name pos:start="157:25" pos:end="157:26">py</name><init pos:start="157:27" pos:end="157:32">= <expr pos:start="157:29" pos:end="157:32"><name pos:start="157:29" pos:end="157:29">y</name><operator pos:start="157:30" pos:end="157:31">&gt;&gt;</operator><literal type="number" pos:start="157:32" pos:end="157:32">1</literal></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="159:21" pos:end="161:52"><if pos:start="159:21" pos:end="161:52">if<condition pos:start="159:23" pos:end="159:67">(<expr pos:start="159:24" pos:end="159:66"><name pos:start="159:24" pos:end="159:25">px</name><operator pos:start="159:26" pos:end="159:26">&lt;</operator><name pos:start="159:27" pos:end="159:42"><name pos:start="159:27" pos:end="159:27">b</name><operator pos:start="159:28" pos:end="159:29">-&gt;</operator><name pos:start="159:30" pos:end="159:35">parent</name><operator pos:start="159:36" pos:end="159:37">-&gt;</operator><name pos:start="159:38" pos:end="159:42">width</name></name> <operator pos:start="159:44" pos:end="159:45">&amp;&amp;</operator> <name pos:start="159:47" pos:end="159:48">py</name><operator pos:start="159:49" pos:end="159:49">&lt;</operator><name pos:start="159:50" pos:end="159:66"><name pos:start="159:50" pos:end="159:50">b</name><operator pos:start="159:51" pos:end="159:52">-&gt;</operator><name pos:start="159:53" pos:end="159:58">parent</name><operator pos:start="159:59" pos:end="159:60">-&gt;</operator><name pos:start="159:61" pos:end="159:66">height</name></name></expr>)</condition><block type="pseudo" pos:start="161:25" pos:end="161:52"><block_content pos:start="161:25" pos:end="161:52"> 

                        <expr_stmt pos:start="161:25" pos:end="161:52"><expr pos:start="161:25" pos:end="161:51"><name pos:start="161:25" pos:end="161:25">p</name><operator pos:start="161:26" pos:end="161:26">=</operator> <name pos:start="161:28" pos:end="161:51"><name pos:start="161:28" pos:end="161:33">parent</name><index pos:start="161:34" pos:end="161:51">[<expr pos:start="161:35" pos:end="161:50"><name pos:start="161:35" pos:end="161:36">px</name> <operator pos:start="161:38" pos:end="161:38">+</operator> <name pos:start="161:40" pos:end="161:41">py</name><operator pos:start="161:42" pos:end="161:42">*</operator><literal type="number" pos:start="161:43" pos:end="161:43">2</literal><operator pos:start="161:44" pos:end="161:44">*</operator><name pos:start="161:45" pos:end="161:50">stride</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="165:17" pos:end="193:17"><if pos:start="165:17" pos:end="173:17">if<condition pos:start="165:19" pos:end="165:38">(<comment type="block" pos:start="165:20" pos:end="165:26">/*ll|*/</comment><expr pos:start="165:27" pos:end="165:37"><name pos:start="165:27" pos:end="165:27">l</name><operator pos:start="165:28" pos:end="165:28">|</operator><name pos:start="165:29" pos:end="165:30">lt</name><operator pos:start="165:31" pos:end="165:31">|</operator><name pos:start="165:32" pos:end="165:32">t</name><operator pos:start="165:33" pos:end="165:33">|</operator><name pos:start="165:34" pos:end="165:35">rt</name><operator pos:start="165:36" pos:end="165:36">|</operator><name pos:start="165:37" pos:end="165:37">p</name></expr>)</condition><block pos:start="165:39" pos:end="173:17">{<block_content pos:start="167:21" pos:end="171:63">

                    <decl_stmt pos:start="167:21" pos:end="167:105"><decl pos:start="167:21" pos:end="167:104"><type pos:start="167:21" pos:end="167:23"><name pos:start="167:21" pos:end="167:23">int</name></type> <name pos:start="167:25" pos:end="167:31">context</name><init pos:start="167:32" pos:end="167:104">= <expr pos:start="167:34" pos:end="167:104"><call pos:start="167:34" pos:end="167:104"><name pos:start="167:34" pos:end="167:40">av_log2</name><argument_list pos:start="167:41" pos:end="167:104">(<comment type="block" pos:start="167:42" pos:end="167:55">/*ABS(ll) + */</comment><argument pos:start="167:56" pos:end="167:103"><expr pos:start="167:56" pos:end="167:103"><literal type="number" pos:start="167:56" pos:end="167:56">3</literal><operator pos:start="167:57" pos:end="167:57">*</operator><call pos:start="167:58" pos:end="167:63"><name pos:start="167:58" pos:end="167:60">ABS</name><argument_list pos:start="167:61" pos:end="167:63">(<argument pos:start="167:62" pos:end="167:62"><expr pos:start="167:62" pos:end="167:62"><name pos:start="167:62" pos:end="167:62">l</name></expr></argument>)</argument_list></call> <operator pos:start="167:65" pos:end="167:65">+</operator> <call pos:start="167:67" pos:end="167:73"><name pos:start="167:67" pos:end="167:69">ABS</name><argument_list pos:start="167:70" pos:end="167:73">(<argument pos:start="167:71" pos:end="167:72"><expr pos:start="167:71" pos:end="167:72"><name pos:start="167:71" pos:end="167:72">lt</name></expr></argument>)</argument_list></call> <operator pos:start="167:75" pos:end="167:75">+</operator> <literal type="number" pos:start="167:77" pos:end="167:77">2</literal><operator pos:start="167:78" pos:end="167:78">*</operator><call pos:start="167:79" pos:end="167:84"><name pos:start="167:79" pos:end="167:81">ABS</name><argument_list pos:start="167:82" pos:end="167:84">(<argument pos:start="167:83" pos:end="167:83"><expr pos:start="167:83" pos:end="167:83"><name pos:start="167:83" pos:end="167:83">t</name></expr></argument>)</argument_list></call> <operator pos:start="167:86" pos:end="167:86">+</operator> <call pos:start="167:88" pos:end="167:94"><name pos:start="167:88" pos:end="167:90">ABS</name><argument_list pos:start="167:91" pos:end="167:94">(<argument pos:start="167:92" pos:end="167:93"><expr pos:start="167:92" pos:end="167:93"><name pos:start="167:92" pos:end="167:93">rt</name></expr></argument>)</argument_list></call> <operator pos:start="167:96" pos:end="167:96">+</operator> <call pos:start="167:98" pos:end="167:103"><name pos:start="167:98" pos:end="167:100">ABS</name><argument_list pos:start="167:101" pos:end="167:103">(<argument pos:start="167:102" pos:end="167:102"><expr pos:start="167:102" pos:end="167:102"><name pos:start="167:102" pos:end="167:102">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="171:21" pos:end="171:63"><expr pos:start="171:21" pos:end="171:62"><call pos:start="171:21" pos:end="171:62"><name pos:start="171:21" pos:end="171:27">put_rac</name><argument_list pos:start="171:28" pos:end="171:62">(<argument pos:start="171:29" pos:end="171:33"><expr pos:start="171:29" pos:end="171:33"><operator pos:start="171:29" pos:end="171:29">&amp;</operator><name pos:start="171:30" pos:end="171:33"><name pos:start="171:30" pos:end="171:30">s</name><operator pos:start="171:31" pos:end="171:32">-&gt;</operator><name pos:start="171:33" pos:end="171:33">c</name></name></expr></argument>, <argument pos:start="171:36" pos:end="171:56"><expr pos:start="171:36" pos:end="171:56"><operator pos:start="171:36" pos:end="171:36">&amp;</operator><name pos:start="171:37" pos:end="171:56"><name pos:start="171:37" pos:end="171:37">b</name><operator pos:start="171:38" pos:end="171:39">-&gt;</operator><name pos:start="171:40" pos:end="171:44">state</name><index pos:start="171:45" pos:end="171:47">[<expr pos:start="171:46" pos:end="171:46"><literal type="number" pos:start="171:46" pos:end="171:46">0</literal></expr>]</index><index pos:start="171:48" pos:end="171:56">[<expr pos:start="171:49" pos:end="171:55"><name pos:start="171:49" pos:end="171:55">context</name></expr>]</index></name></expr></argument>, <argument pos:start="171:59" pos:end="171:61"><expr pos:start="171:59" pos:end="171:61"><operator pos:start="171:59" pos:end="171:59">!</operator><operator pos:start="171:60" pos:end="171:60">!</operator><name pos:start="171:61" pos:end="171:61">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="173:18" pos:end="193:17">else<block pos:start="173:22" pos:end="193:17">{<block_content pos:start="175:21" pos:end="191:21">

                    <if_stmt pos:start="175:21" pos:end="191:21"><if pos:start="175:21" pos:end="185:21">if<condition pos:start="175:23" pos:end="175:28">(<expr pos:start="175:24" pos:end="175:27"><operator pos:start="175:24" pos:end="175:24">!</operator><name pos:start="175:25" pos:end="175:27">run</name></expr>)</condition><block pos:start="175:29" pos:end="185:21">{<block_content pos:start="177:25" pos:end="183:34">

                        <expr_stmt pos:start="177:25" pos:end="177:47"><expr pos:start="177:25" pos:end="177:46"><name pos:start="177:25" pos:end="177:27">run</name><operator pos:start="177:28" pos:end="177:28">=</operator> <name pos:start="177:30" pos:end="177:46"><name pos:start="177:30" pos:end="177:33">runs</name><index pos:start="177:34" pos:end="177:46">[<expr pos:start="177:35" pos:end="177:45"><name pos:start="177:35" pos:end="177:43">run_index</name><operator pos:start="177:44" pos:end="177:45">++</operator></expr>]</index></name></expr>;</expr_stmt>



                        <expr_stmt pos:start="181:25" pos:end="181:64"><expr pos:start="181:25" pos:end="181:63"><call pos:start="181:25" pos:end="181:63"><name pos:start="181:25" pos:end="181:35">put_symbol2</name><argument_list pos:start="181:36" pos:end="181:63">(<argument pos:start="181:37" pos:end="181:41"><expr pos:start="181:37" pos:end="181:41"><operator pos:start="181:37" pos:end="181:37">&amp;</operator><name pos:start="181:38" pos:end="181:41"><name pos:start="181:38" pos:end="181:38">s</name><operator pos:start="181:39" pos:end="181:40">-&gt;</operator><name pos:start="181:41" pos:end="181:41">c</name></name></expr></argument>, <argument pos:start="181:44" pos:end="181:54"><expr pos:start="181:44" pos:end="181:54"><name pos:start="181:44" pos:end="181:54"><name pos:start="181:44" pos:end="181:44">b</name><operator pos:start="181:45" pos:end="181:46">-&gt;</operator><name pos:start="181:47" pos:end="181:51">state</name><index pos:start="181:52" pos:end="181:54">[<expr pos:start="181:53" pos:end="181:53"><literal type="number" pos:start="181:53" pos:end="181:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="181:57" pos:end="181:59"><expr pos:start="181:57" pos:end="181:59"><name pos:start="181:57" pos:end="181:59">run</name></expr></argument>, <argument pos:start="181:62" pos:end="181:62"><expr pos:start="181:62" pos:end="181:62"><literal type="number" pos:start="181:62" pos:end="181:62">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="183:25" pos:end="183:34"><expr pos:start="183:25" pos:end="183:33"><call pos:start="183:25" pos:end="183:33"><name pos:start="183:25" pos:end="183:30">assert</name><argument_list pos:start="183:31" pos:end="183:33">(<argument pos:start="183:32" pos:end="183:32"><expr pos:start="183:32" pos:end="183:32"><name pos:start="183:32" pos:end="183:32">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="185:22" pos:end="191:21">else<block pos:start="185:26" pos:end="191:21">{<block_content pos:start="187:25" pos:end="189:35">

                        <expr_stmt pos:start="187:25" pos:end="187:30"><expr pos:start="187:25" pos:end="187:29"><name pos:start="187:25" pos:end="187:27">run</name><operator pos:start="187:28" pos:end="187:29">--</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="189:25" pos:end="189:35"><expr pos:start="189:25" pos:end="189:34"><call pos:start="189:25" pos:end="189:34"><name pos:start="189:25" pos:end="189:30">assert</name><argument_list pos:start="189:31" pos:end="189:34">(<argument pos:start="189:32" pos:end="189:33"><expr pos:start="189:32" pos:end="189:33"><operator pos:start="189:32" pos:end="189:32">!</operator><name pos:start="189:33" pos:end="189:33">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="195:17" pos:end="205:17"><if pos:start="195:17" pos:end="205:17">if<condition pos:start="195:19" pos:end="195:21">(<expr pos:start="195:20" pos:end="195:20"><name pos:start="195:20" pos:end="195:20">v</name></expr>)</condition><block pos:start="195:22" pos:end="205:17">{<block_content pos:start="197:21" pos:end="203:104">

                    <decl_stmt pos:start="197:21" pos:end="197:105"><decl pos:start="197:21" pos:end="197:104"><type pos:start="197:21" pos:end="197:23"><name pos:start="197:21" pos:end="197:23">int</name></type> <name pos:start="197:25" pos:end="197:31">context</name><init pos:start="197:32" pos:end="197:104">= <expr pos:start="197:34" pos:end="197:104"><call pos:start="197:34" pos:end="197:104"><name pos:start="197:34" pos:end="197:40">av_log2</name><argument_list pos:start="197:41" pos:end="197:104">(<comment type="block" pos:start="197:42" pos:end="197:55">/*ABS(ll) + */</comment><argument pos:start="197:56" pos:end="197:103"><expr pos:start="197:56" pos:end="197:103"><literal type="number" pos:start="197:56" pos:end="197:56">3</literal><operator pos:start="197:57" pos:end="197:57">*</operator><call pos:start="197:58" pos:end="197:63"><name pos:start="197:58" pos:end="197:60">ABS</name><argument_list pos:start="197:61" pos:end="197:63">(<argument pos:start="197:62" pos:end="197:62"><expr pos:start="197:62" pos:end="197:62"><name pos:start="197:62" pos:end="197:62">l</name></expr></argument>)</argument_list></call> <operator pos:start="197:65" pos:end="197:65">+</operator> <call pos:start="197:67" pos:end="197:73"><name pos:start="197:67" pos:end="197:69">ABS</name><argument_list pos:start="197:70" pos:end="197:73">(<argument pos:start="197:71" pos:end="197:72"><expr pos:start="197:71" pos:end="197:72"><name pos:start="197:71" pos:end="197:72">lt</name></expr></argument>)</argument_list></call> <operator pos:start="197:75" pos:end="197:75">+</operator> <literal type="number" pos:start="197:77" pos:end="197:77">2</literal><operator pos:start="197:78" pos:end="197:78">*</operator><call pos:start="197:79" pos:end="197:84"><name pos:start="197:79" pos:end="197:81">ABS</name><argument_list pos:start="197:82" pos:end="197:84">(<argument pos:start="197:83" pos:end="197:83"><expr pos:start="197:83" pos:end="197:83"><name pos:start="197:83" pos:end="197:83">t</name></expr></argument>)</argument_list></call> <operator pos:start="197:86" pos:end="197:86">+</operator> <call pos:start="197:88" pos:end="197:94"><name pos:start="197:88" pos:end="197:90">ABS</name><argument_list pos:start="197:91" pos:end="197:94">(<argument pos:start="197:92" pos:end="197:93"><expr pos:start="197:92" pos:end="197:93"><name pos:start="197:92" pos:end="197:93">rt</name></expr></argument>)</argument_list></call> <operator pos:start="197:96" pos:end="197:96">+</operator> <call pos:start="197:98" pos:end="197:103"><name pos:start="197:98" pos:end="197:100">ABS</name><argument_list pos:start="197:101" pos:end="197:103">(<argument pos:start="197:102" pos:end="197:102"><expr pos:start="197:102" pos:end="197:102"><name pos:start="197:102" pos:end="197:102">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="201:21" pos:end="201:83"><expr pos:start="201:21" pos:end="201:82"><call pos:start="201:21" pos:end="201:82"><name pos:start="201:21" pos:end="201:31">put_symbol2</name><argument_list pos:start="201:32" pos:end="201:82">(<argument pos:start="201:33" pos:end="201:37"><expr pos:start="201:33" pos:end="201:37"><operator pos:start="201:33" pos:end="201:33">&amp;</operator><name pos:start="201:34" pos:end="201:37"><name pos:start="201:34" pos:end="201:34">s</name><operator pos:start="201:35" pos:end="201:36">-&gt;</operator><name pos:start="201:37" pos:end="201:37">c</name></name></expr></argument>, <argument pos:start="201:40" pos:end="201:60"><expr pos:start="201:40" pos:end="201:60"><name pos:start="201:40" pos:end="201:60"><name pos:start="201:40" pos:end="201:40">b</name><operator pos:start="201:41" pos:end="201:42">-&gt;</operator><name pos:start="201:43" pos:end="201:47">state</name><index pos:start="201:48" pos:end="201:60">[<expr pos:start="201:49" pos:end="201:59"><name pos:start="201:49" pos:end="201:55">context</name> <operator pos:start="201:57" pos:end="201:57">+</operator> <literal type="number" pos:start="201:59" pos:end="201:59">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="201:63" pos:end="201:70"><expr pos:start="201:63" pos:end="201:70"><call pos:start="201:63" pos:end="201:68"><name pos:start="201:63" pos:end="201:65">ABS</name><argument_list pos:start="201:66" pos:end="201:68">(<argument pos:start="201:67" pos:end="201:67"><expr pos:start="201:67" pos:end="201:67"><name pos:start="201:67" pos:end="201:67">v</name></expr></argument>)</argument_list></call><operator pos:start="201:69" pos:end="201:69">-</operator><literal type="number" pos:start="201:70" pos:end="201:70">1</literal></expr></argument>, <argument pos:start="201:73" pos:end="201:81"><expr pos:start="201:73" pos:end="201:81"><name pos:start="201:73" pos:end="201:79">context</name><operator pos:start="201:80" pos:end="201:80">-</operator><literal type="number" pos:start="201:81" pos:end="201:81">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="203:21" pos:end="203:104"><expr pos:start="203:21" pos:end="203:103"><call pos:start="203:21" pos:end="203:103"><name pos:start="203:21" pos:end="203:27">put_rac</name><argument_list pos:start="203:28" pos:end="203:103">(<argument pos:start="203:29" pos:end="203:33"><expr pos:start="203:29" pos:end="203:33"><operator pos:start="203:29" pos:end="203:29">&amp;</operator><name pos:start="203:30" pos:end="203:33"><name pos:start="203:30" pos:end="203:30">s</name><operator pos:start="203:31" pos:end="203:32">-&gt;</operator><name pos:start="203:33" pos:end="203:33">c</name></name></expr></argument>, <argument pos:start="203:36" pos:end="203:97"><expr pos:start="203:36" pos:end="203:97"><operator pos:start="203:36" pos:end="203:36">&amp;</operator><name pos:start="203:37" pos:end="203:97"><name pos:start="203:37" pos:end="203:37">b</name><operator pos:start="203:38" pos:end="203:39">-&gt;</operator><name pos:start="203:40" pos:end="203:44">state</name><index pos:start="203:45" pos:end="203:47">[<expr pos:start="203:46" pos:end="203:46"><literal type="number" pos:start="203:46" pos:end="203:46">0</literal></expr>]</index><index pos:start="203:48" pos:end="203:97">[<expr pos:start="203:49" pos:end="203:96"><literal type="number" pos:start="203:49" pos:end="203:52">16</literal> <operator pos:start="203:52" pos:end="203:52">+</operator> <literal type="number" pos:start="203:54" pos:end="203:56">1</literal> <operator pos:start="203:56" pos:end="203:56">+</operator> <literal type="number" pos:start="203:58" pos:end="203:60">3</literal> <operator pos:start="203:60" pos:end="203:60">+</operator> <name pos:start="203:62" pos:end="203:76"><name pos:start="203:62" pos:end="203:68">quant3b</name><index pos:start="203:69" pos:end="203:76">[<expr pos:start="203:70" pos:end="203:75"><name pos:start="203:70" pos:end="203:70">l</name><operator pos:start="203:71" pos:end="203:71">&amp;</operator><literal type="number" pos:start="203:72" pos:end="203:75">0xFF</literal></expr>]</index></name> <operator pos:start="203:78" pos:end="203:78">+</operator> <literal type="number" pos:start="203:80" pos:end="203:80">3</literal><operator pos:start="203:81" pos:end="203:81">*</operator><name pos:start="203:82" pos:end="203:96"><name pos:start="203:82" pos:end="203:88">quant3b</name><index pos:start="203:89" pos:end="203:96">[<expr pos:start="203:90" pos:end="203:95"><name pos:start="203:90" pos:end="203:90">t</name><operator pos:start="203:91" pos:end="203:91">&amp;</operator><literal type="number" pos:start="203:92" pos:end="203:95">0xFF</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="203:100" pos:end="203:102"><expr pos:start="203:100" pos:end="203:102"><name pos:start="203:100" pos:end="203:100">v</name><operator pos:start="203:101" pos:end="203:101">&lt;</operator><literal type="number" pos:start="203:102" pos:end="203:102">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
