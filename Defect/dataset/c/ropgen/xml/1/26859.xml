<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26859.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:45"><name pos:start="1:1" pos:end="1:14">vpc_co_pwritev</name><argument_list pos:start="1:15" pos:end="3:45">(<argument pos:start="1:16" pos:end="1:35">BlockDriverState *bs</argument>, <argument pos:start="1:38" pos:end="1:52">uint64_t offset</argument>, <argument pos:start="1:55" pos:end="1:68">uint64_t bytes</argument>,

               <argument pos:start="3:16" pos:end="3:33">QEMUIOVector *qiov</argument>, <argument pos:start="3:36" pos:end="3:44">int flags</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BDRVVPCState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:32">= <expr pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:24">bs</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:24">image_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:19">n_bytes</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:22">bytes_done</name> <init pos:start="13:24" pos:end="13:26">= <expr pos:start="13:26" pos:end="13:26"><literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:53"><decl pos:start="17:5" pos:end="17:52"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">VHDFooter</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:21">footer</name> <init pos:start="17:23" pos:end="17:52">=  <expr pos:start="17:26" pos:end="17:52"><operator pos:start="17:26" pos:end="17:26">(</operator><name pos:start="17:27" pos:end="17:35">VHDFooter</name> <operator pos:start="17:37" pos:end="17:37">*</operator><operator pos:start="17:38" pos:end="17:38">)</operator> <name pos:start="17:40" pos:end="17:52"><name pos:start="17:40" pos:end="17:40">s</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:52">footer_buf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:16">QEMUIOVector</name></type> <name pos:start="19:18" pos:end="19:27">local_qiov</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:47">(<expr pos:start="23:9" pos:end="23:46"><call pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:19">be32_to_cpu</name><argument_list pos:start="23:20" pos:end="23:33">(<argument pos:start="23:21" pos:end="23:32"><expr pos:start="23:21" pos:end="23:32"><name pos:start="23:21" pos:end="23:32"><name pos:start="23:21" pos:end="23:26">footer</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:32">type</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:35" pos:end="23:36">==</operator> <name pos:start="23:38" pos:end="23:46">VHD_FIXED</name></expr>)</condition> <block pos:start="23:49" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:65">

        <return pos:start="25:9" pos:end="25:65">return <expr pos:start="25:16" pos:end="25:64"><call pos:start="25:16" pos:end="25:64"><name pos:start="25:16" pos:end="25:30">bdrv_co_pwritev</name><argument_list pos:start="25:31" pos:end="25:64">(<argument pos:start="25:32" pos:end="25:39"><expr pos:start="25:32" pos:end="25:39"><name pos:start="25:32" pos:end="25:39"><name pos:start="25:32" pos:end="25:33">bs</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:39">file</name></name></expr></argument>, <argument pos:start="25:42" pos:end="25:47"><expr pos:start="25:42" pos:end="25:47"><name pos:start="25:42" pos:end="25:47">offset</name></expr></argument>, <argument pos:start="25:50" pos:end="25:54"><expr pos:start="25:50" pos:end="25:54"><name pos:start="25:50" pos:end="25:54">bytes</name></expr></argument>, <argument pos:start="25:57" pos:end="25:60"><expr pos:start="25:57" pos:end="25:60"><name pos:start="25:57" pos:end="25:60">qiov</name></expr></argument>, <argument pos:start="25:63" pos:end="25:63"><expr pos:start="25:63" pos:end="25:63"><literal type="number" pos:start="25:63" pos:end="25:63">0</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><call pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:22">qemu_co_mutex_lock</name><argument_list pos:start="31:23" pos:end="31:32">(<argument pos:start="31:24" pos:end="31:31"><expr pos:start="31:24" pos:end="31:31"><operator pos:start="31:24" pos:end="31:24">&amp;</operator><name pos:start="31:25" pos:end="31:31"><name pos:start="31:25" pos:end="31:25">s</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:45"><expr pos:start="33:5" pos:end="33:44"><call pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:19">qemu_iovec_init</name><argument_list pos:start="33:20" pos:end="33:44">(<argument pos:start="33:21" pos:end="33:31"><expr pos:start="33:21" pos:end="33:31"><operator pos:start="33:21" pos:end="33:21">&amp;</operator><name pos:start="33:22" pos:end="33:31">local_qiov</name></expr></argument>, <argument pos:start="33:34" pos:end="33:43"><expr pos:start="33:34" pos:end="33:43"><name pos:start="33:34" pos:end="33:43"><name pos:start="33:34" pos:end="33:37">qiov</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:43">niov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="37:5" pos:end="85:5">while <condition pos:start="37:11" pos:end="37:21">(<expr pos:start="37:12" pos:end="37:20"><name pos:start="37:12" pos:end="37:16">bytes</name> <operator pos:start="37:18" pos:end="37:18">&gt;</operator> <literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>)</condition> <block pos:start="37:23" pos:end="85:5">{<block_content pos:start="39:9" pos:end="83:30">

        <expr_stmt pos:start="39:9" pos:end="39:58"><expr pos:start="39:9" pos:end="39:57"><name pos:start="39:9" pos:end="39:20">image_offset</name> <operator pos:start="39:22" pos:end="39:22">=</operator> <call pos:start="39:24" pos:end="39:57"><name pos:start="39:24" pos:end="39:39">get_image_offset</name><argument_list pos:start="39:40" pos:end="39:57">(<argument pos:start="39:41" pos:end="39:42"><expr pos:start="39:41" pos:end="39:42"><name pos:start="39:41" pos:end="39:42">bs</name></expr></argument>, <argument pos:start="39:45" pos:end="39:50"><expr pos:start="39:45" pos:end="39:50"><name pos:start="39:45" pos:end="39:50">offset</name></expr></argument>, <argument pos:start="39:53" pos:end="39:56"><expr pos:start="39:53" pos:end="39:56"><name pos:start="39:53" pos:end="39:56">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:71"><expr pos:start="41:9" pos:end="41:70"><name pos:start="41:9" pos:end="41:15">n_bytes</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:70"><name pos:start="41:19" pos:end="41:21">MIN</name><argument_list pos:start="41:22" pos:end="41:70">(<argument pos:start="41:23" pos:end="41:27"><expr pos:start="41:23" pos:end="41:27"><name pos:start="41:23" pos:end="41:27">bytes</name></expr></argument>, <argument pos:start="41:30" pos:end="41:69"><expr pos:start="41:30" pos:end="41:69"><name pos:start="41:30" pos:end="41:42"><name pos:start="41:30" pos:end="41:30">s</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:42">block_size</name></name> <operator pos:start="41:44" pos:end="41:44">-</operator> <operator pos:start="41:46" pos:end="41:46">(</operator><name pos:start="41:47" pos:end="41:52">offset</name> <operator pos:start="41:54" pos:end="41:54">%</operator> <name pos:start="41:56" pos:end="41:68"><name pos:start="41:56" pos:end="41:56">s</name><operator pos:start="41:57" pos:end="41:58">-&gt;</operator><name pos:start="41:59" pos:end="41:68">block_size</name></name><operator pos:start="41:69" pos:end="41:69">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="57:9"><if pos:start="45:9" pos:end="57:9">if <condition pos:start="45:12" pos:end="45:31">(<expr pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:24">image_offset</name> <operator pos:start="45:26" pos:end="45:27">==</operator> <operator pos:start="45:29" pos:end="45:29">-</operator><literal type="number" pos:start="45:30" pos:end="45:30">1</literal></expr>)</condition> <block pos:start="45:33" pos:end="57:9">{<block_content pos:start="47:13" pos:end="55:13">

            <expr_stmt pos:start="47:13" pos:end="47:51"><expr pos:start="47:13" pos:end="47:50"><name pos:start="47:13" pos:end="47:24">image_offset</name> <operator pos:start="47:26" pos:end="47:26">=</operator> <call pos:start="47:28" pos:end="47:50"><name pos:start="47:28" pos:end="47:38">alloc_block</name><argument_list pos:start="47:39" pos:end="47:50">(<argument pos:start="47:40" pos:end="47:41"><expr pos:start="47:40" pos:end="47:41"><name pos:start="47:40" pos:end="47:41">bs</name></expr></argument>, <argument pos:start="47:44" pos:end="47:49"><expr pos:start="47:44" pos:end="47:49"><name pos:start="47:44" pos:end="47:49">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="49:13" pos:end="55:13"><if pos:start="49:13" pos:end="55:13">if <condition pos:start="49:16" pos:end="49:33">(<expr pos:start="49:17" pos:end="49:32"><name pos:start="49:17" pos:end="49:28">image_offset</name> <operator pos:start="49:30" pos:end="49:30">&lt;</operator> <literal type="number" pos:start="49:32" pos:end="49:32">0</literal></expr>)</condition> <block pos:start="49:35" pos:end="55:13">{<block_content pos:start="51:17" pos:end="53:26">

                <expr_stmt pos:start="51:17" pos:end="51:35"><expr pos:start="51:17" pos:end="51:34"><name pos:start="51:17" pos:end="51:19">ret</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:34">image_offset</name></expr>;</expr_stmt>

                <goto pos:start="53:17" pos:end="53:26">goto <name pos:start="53:22" pos:end="53:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:38"><expr pos:start="61:9" pos:end="61:37"><call pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:24">qemu_iovec_reset</name><argument_list pos:start="61:25" pos:end="61:37">(<argument pos:start="61:26" pos:end="61:36"><expr pos:start="61:26" pos:end="61:36"><operator pos:start="61:26" pos:end="61:26">&amp;</operator><name pos:start="61:27" pos:end="61:36">local_qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:66"><expr pos:start="63:9" pos:end="63:65"><call pos:start="63:9" pos:end="63:65"><name pos:start="63:9" pos:end="63:25">qemu_iovec_concat</name><argument_list pos:start="63:26" pos:end="63:65">(<argument pos:start="63:27" pos:end="63:37"><expr pos:start="63:27" pos:end="63:37"><operator pos:start="63:27" pos:end="63:27">&amp;</operator><name pos:start="63:28" pos:end="63:37">local_qiov</name></expr></argument>, <argument pos:start="63:40" pos:end="63:43"><expr pos:start="63:40" pos:end="63:43"><name pos:start="63:40" pos:end="63:43">qiov</name></expr></argument>, <argument pos:start="63:46" pos:end="63:55"><expr pos:start="63:46" pos:end="63:55"><name pos:start="63:46" pos:end="63:55">bytes_done</name></expr></argument>, <argument pos:start="63:58" pos:end="63:64"><expr pos:start="63:58" pos:end="63:64"><name pos:start="63:58" pos:end="63:64">n_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="69:46"><expr pos:start="67:9" pos:end="69:45"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="69:45"><name pos:start="67:15" pos:end="67:29">bdrv_co_pwritev</name><argument_list pos:start="67:30" pos:end="69:45">(<argument pos:start="67:31" pos:end="67:38"><expr pos:start="67:31" pos:end="67:38"><name pos:start="67:31" pos:end="67:38"><name pos:start="67:31" pos:end="67:32">bs</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:38">file</name></name></expr></argument>, <argument pos:start="67:41" pos:end="67:52"><expr pos:start="67:41" pos:end="67:52"><name pos:start="67:41" pos:end="67:52">image_offset</name></expr></argument>, <argument pos:start="67:55" pos:end="67:61"><expr pos:start="67:55" pos:end="67:61"><name pos:start="67:55" pos:end="67:61">n_bytes</name></expr></argument>,

                              <argument pos:start="69:31" pos:end="69:41"><expr pos:start="69:31" pos:end="69:41"><operator pos:start="69:31" pos:end="69:31">&amp;</operator><name pos:start="69:32" pos:end="69:41">local_qiov</name></expr></argument>, <argument pos:start="69:44" pos:end="69:44"><expr pos:start="69:44" pos:end="69:44"><literal type="number" pos:start="69:44" pos:end="69:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="75:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:20">(<expr pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:15">ret</name> <operator pos:start="71:17" pos:end="71:17">&lt;</operator> <literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr>)</condition> <block pos:start="71:22" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:22">

            <goto pos:start="73:13" pos:end="73:22">goto <name pos:start="73:18" pos:end="73:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:25"><expr pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:13">bytes</name> <operator pos:start="79:15" pos:end="79:16">-=</operator> <name pos:start="79:18" pos:end="79:24">n_bytes</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:26"><expr pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:14">offset</name> <operator pos:start="81:16" pos:end="81:17">+=</operator> <name pos:start="81:19" pos:end="81:25">n_bytes</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:30"><expr pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:18">bytes_done</name> <operator pos:start="83:20" pos:end="83:21">+=</operator> <name pos:start="83:23" pos:end="83:29">n_bytes</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="89:5" pos:end="89:12"><expr pos:start="89:5" pos:end="89:11"><name pos:start="89:5" pos:end="89:7">ret</name> <operator pos:start="89:9" pos:end="89:9">=</operator> <literal type="number" pos:start="89:11" pos:end="89:11">0</literal></expr>;</expr_stmt>

<label pos:start="91:1" pos:end="91:5"><name pos:start="91:1" pos:end="91:4">fail</name>:</label>

    <expr_stmt pos:start="93:5" pos:end="93:36"><expr pos:start="93:5" pos:end="93:35"><call pos:start="93:5" pos:end="93:35"><name pos:start="93:5" pos:end="93:22">qemu_iovec_destroy</name><argument_list pos:start="93:23" pos:end="93:35">(<argument pos:start="93:24" pos:end="93:34"><expr pos:start="93:24" pos:end="93:34"><operator pos:start="93:24" pos:end="93:24">&amp;</operator><name pos:start="93:25" pos:end="93:34">local_qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:35"><expr pos:start="95:5" pos:end="95:34"><call pos:start="95:5" pos:end="95:34"><name pos:start="95:5" pos:end="95:24">qemu_co_mutex_unlock</name><argument_list pos:start="95:25" pos:end="95:34">(<argument pos:start="95:26" pos:end="95:33"><expr pos:start="95:26" pos:end="95:33"><operator pos:start="95:26" pos:end="95:26">&amp;</operator><name pos:start="95:27" pos:end="95:33"><name pos:start="95:27" pos:end="95:27">s</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:33">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="99:5" pos:end="99:15">return <expr pos:start="99:12" pos:end="99:14"><name pos:start="99:12" pos:end="99:14">ret</name></expr>;</return>

</block_content>}</block>
</unit>
