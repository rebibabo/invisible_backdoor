<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12906.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">spapr_pci_pre_save</name><parameter_list pos:start="1:31" pos:end="1:44">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:37"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:5">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">sPAPRPHBState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:23">sphb</name> <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18">GHashTableIter</name></type> <name pos:start="7:20" pos:end="7:23">iter</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">gpointer</name></type> <name pos:start="9:14" pos:end="9:16">key</name></decl>, <decl pos:start="9:19" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:19" pos:end="9:23">value</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><call pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:10">g_free</name><argument_list pos:start="15:11" pos:end="15:26">(<argument pos:start="15:12" pos:end="15:25"><expr pos:start="15:12" pos:end="15:25"><name pos:start="15:12" pos:end="15:25"><name pos:start="15:12" pos:end="15:15">sphb</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:25">msi_devs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:8">sphb</name><operator pos:start="17:9" pos:end="17:10">-&gt;</operator><name pos:start="17:11" pos:end="17:18">msi_devs</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:54"><expr pos:start="19:5" pos:end="19:53"><name pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:8">sphb</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:22">msi_devs_num</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <call pos:start="19:26" pos:end="19:53"><name pos:start="19:26" pos:end="19:42">g_hash_table_size</name><argument_list pos:start="19:43" pos:end="19:53">(<argument pos:start="19:44" pos:end="19:52"><expr pos:start="19:44" pos:end="19:52"><name pos:start="19:44" pos:end="19:52"><name pos:start="19:44" pos:end="19:47">sphb</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:52">msi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:28">(<expr pos:start="21:9" pos:end="21:27"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:27"><name pos:start="21:10" pos:end="21:13">sphb</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:27">msi_devs_num</name></name></expr>)</condition> <block pos:start="21:30" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:15">

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:78"><expr pos:start="27:5" pos:end="27:77"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:8">sphb</name><operator pos:start="27:9" pos:end="27:10">-&gt;</operator><name pos:start="27:11" pos:end="27:18">msi_devs</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <call pos:start="27:22" pos:end="27:77"><name pos:start="27:22" pos:end="27:29">g_malloc</name><argument_list pos:start="27:30" pos:end="27:77">(<argument pos:start="27:31" pos:end="27:76"><expr pos:start="27:31" pos:end="27:76"><name pos:start="27:31" pos:end="27:48"><name pos:start="27:31" pos:end="27:34">sphb</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:48">msi_devs_num</name></name> <operator pos:start="27:50" pos:end="27:50">*</operator> <sizeof pos:start="27:52" pos:end="27:76">sizeof<argument_list pos:start="27:58" pos:end="27:76">(<argument pos:start="27:59" pos:end="27:75"><expr pos:start="27:59" pos:end="27:75"><name pos:start="27:59" pos:end="27:75">spapr_pci_msi_mig</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:45"><expr pos:start="31:5" pos:end="31:44"><call pos:start="31:5" pos:end="31:44"><name pos:start="31:5" pos:end="31:26">g_hash_table_iter_init</name><argument_list pos:start="31:27" pos:end="31:44">(<argument pos:start="31:28" pos:end="31:32"><expr pos:start="31:28" pos:end="31:32"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:32">iter</name></expr></argument>, <argument pos:start="31:35" pos:end="31:43"><expr pos:start="31:35" pos:end="31:43"><name pos:start="31:35" pos:end="31:43"><name pos:start="31:35" pos:end="31:38">sphb</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:43">msi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="33:5" pos:end="39:5">for <control pos:start="33:9" pos:end="33:65">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:60"><expr pos:start="33:17" pos:end="33:59"><call pos:start="33:17" pos:end="33:59"><name pos:start="33:17" pos:end="33:38">g_hash_table_iter_next</name><argument_list pos:start="33:39" pos:end="33:59">(<argument pos:start="33:40" pos:end="33:44"><expr pos:start="33:40" pos:end="33:44"><operator pos:start="33:40" pos:end="33:40">&amp;</operator><name pos:start="33:41" pos:end="33:44">iter</name></expr></argument>, <argument pos:start="33:47" pos:end="33:50"><expr pos:start="33:47" pos:end="33:50"><operator pos:start="33:47" pos:end="33:47">&amp;</operator><name pos:start="33:48" pos:end="33:50">key</name></expr></argument>, <argument pos:start="33:53" pos:end="33:58"><expr pos:start="33:53" pos:end="33:58"><operator pos:start="33:53" pos:end="33:53">&amp;</operator><name pos:start="33:54" pos:end="33:58">value</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="33:62" pos:end="33:64"><expr pos:start="33:62" pos:end="33:64"><operator pos:start="33:62" pos:end="33:63">++</operator><name pos:start="33:64" pos:end="33:64">i</name></expr></incr>)</control> <block pos:start="33:67" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:59">

        <expr_stmt pos:start="35:9" pos:end="35:50"><expr pos:start="35:9" pos:end="35:49"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:12">sphb</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:22">msi_devs</name><index pos:start="35:23" pos:end="35:25">[<expr pos:start="35:24" pos:end="35:24"><name pos:start="35:24" pos:end="35:24">i</name></expr>]</index></name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:29">key</name> <operator pos:start="35:31" pos:end="35:31">=</operator> <operator pos:start="35:33" pos:end="35:33">*</operator><operator pos:start="35:34" pos:end="35:34">(</operator><name pos:start="35:35" pos:end="35:42">uint32_t</name> <operator pos:start="35:44" pos:end="35:44">*</operator><operator pos:start="35:45" pos:end="35:45">)</operator> <name pos:start="35:47" pos:end="35:49">key</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:12">sphb</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:22">msi_devs</name><index pos:start="37:23" pos:end="37:25">[<expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">i</name></expr>]</index></name><operator pos:start="37:26" pos:end="37:26">.</operator><name pos:start="37:27" pos:end="37:31">value</name> <operator pos:start="37:33" pos:end="37:33">=</operator> <operator pos:start="37:35" pos:end="37:35">*</operator><operator pos:start="37:36" pos:end="37:36">(</operator><name pos:start="37:37" pos:end="37:49">spapr_pci_msi</name> <operator pos:start="37:51" pos:end="37:51">*</operator><operator pos:start="37:52" pos:end="37:52">)</operator> <name pos:start="37:54" pos:end="37:58">value</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="43:5" pos:end="67:5"><if pos:start="43:5" pos:end="67:5">if <condition pos:start="43:8" pos:end="43:32">(<expr pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:12">sphb</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:31">pre_2_8_migration</name></name></expr>)</condition> <block pos:start="43:34" pos:end="67:5">{<block_content pos:start="45:9" pos:end="65:9">

        <expr_stmt pos:start="45:9" pos:end="45:45"><expr pos:start="45:9" pos:end="45:44"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:12">sphb</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:23">mig_liobn</name></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:44"><name pos:start="45:27" pos:end="45:30">sphb</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:41">dma_liobn</name><index pos:start="45:42" pos:end="45:44">[<expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:52"><expr pos:start="47:9" pos:end="47:51"><name pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:12">sphb</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:30">mig_mem_win_addr</name></name> <operator pos:start="47:32" pos:end="47:32">=</operator> <name pos:start="47:34" pos:end="47:51"><name pos:start="47:34" pos:end="47:37">sphb</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:51">mem_win_addr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:52"><expr pos:start="49:9" pos:end="49:51"><name pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:12">sphb</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:30">mig_mem_win_size</name></name> <operator pos:start="49:32" pos:end="49:32">=</operator> <name pos:start="49:34" pos:end="49:51"><name pos:start="49:34" pos:end="49:37">sphb</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:51">mem_win_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:50"><expr pos:start="51:9" pos:end="51:49"><name pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:12">sphb</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:29">mig_io_win_addr</name></name> <operator pos:start="51:31" pos:end="51:31">=</operator> <name pos:start="51:33" pos:end="51:49"><name pos:start="51:33" pos:end="51:36">sphb</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:49">io_win_addr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:50"><expr pos:start="53:9" pos:end="53:49"><name pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:12">sphb</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:29">mig_io_win_size</name></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <name pos:start="53:33" pos:end="53:49"><name pos:start="53:33" pos:end="53:36">sphb</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:49">io_win_size</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="57:9" pos:end="65:9"><if pos:start="57:9" pos:end="65:9">if <condition pos:start="57:12" pos:end="61:62">(<expr pos:start="57:13" pos:end="61:61"><operator pos:start="57:13" pos:end="57:13">(</operator><name pos:start="57:14" pos:end="57:33"><name pos:start="57:14" pos:end="57:17">sphb</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:33">mem64_win_size</name></name> <operator pos:start="57:35" pos:end="57:36">!=</operator> <literal type="number" pos:start="57:38" pos:end="57:38">0</literal><operator pos:start="57:39" pos:end="57:39">)</operator>

            <operator pos:start="59:13" pos:end="59:14">&amp;&amp;</operator> <operator pos:start="59:16" pos:end="59:16">(</operator><name pos:start="59:17" pos:end="59:36"><name pos:start="59:17" pos:end="59:20">sphb</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:36">mem64_win_addr</name></name>

                <operator pos:start="61:17" pos:end="61:18">==</operator> <operator pos:start="61:20" pos:end="61:20">(</operator><name pos:start="61:21" pos:end="61:38"><name pos:start="61:21" pos:end="61:24">sphb</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:38">mem_win_addr</name></name> <operator pos:start="61:40" pos:end="61:40">+</operator> <name pos:start="61:42" pos:end="61:59"><name pos:start="61:42" pos:end="61:45">sphb</name><operator pos:start="61:46" pos:end="61:47">-&gt;</operator><name pos:start="61:48" pos:end="61:59">mem_win_size</name></name><operator pos:start="61:60" pos:end="61:60">)</operator><operator pos:start="61:61" pos:end="61:61">)</operator></expr>)</condition> <block pos:start="61:64" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:59">

            <expr_stmt pos:start="63:13" pos:end="63:59"><expr pos:start="63:13" pos:end="63:58"><name pos:start="63:13" pos:end="63:34"><name pos:start="63:13" pos:end="63:16">sphb</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:34">mig_mem_win_size</name></name> <operator pos:start="63:36" pos:end="63:37">+=</operator> <name pos:start="63:39" pos:end="63:58"><name pos:start="63:39" pos:end="63:42">sphb</name><operator pos:start="63:43" pos:end="63:44">-&gt;</operator><name pos:start="63:45" pos:end="63:58">mem64_win_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
