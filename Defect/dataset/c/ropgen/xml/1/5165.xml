<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5165.c" pos:tabs="8"><function pos:start="1:1" pos:end="44:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">x86_cpu_apic_create</name><parameter_list pos:start="1:32" pos:end="1:58">(<parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:38">X86CPU</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">cpu</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:50">Error</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier><modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="44:1">{<block_content pos:start="5:5" pos:end="42:69">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">APICCommonState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:25">apic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:25">apic_type</name> <init pos:start="7:27" pos:end="7:34">= <expr pos:start="7:29" pos:end="7:34"><literal type="string" pos:start="7:29" pos:end="7:34">"apic"</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:29">(<expr pos:start="11:9" pos:end="11:28"><call pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:26">kvm_apic_in_kernel</name><argument_list pos:start="11:27" pos:end="11:28">()</argument_list></call></expr>)</condition> <block pos:start="11:31" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:31">

        <expr_stmt pos:start="13:9" pos:end="13:31"><expr pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:17">apic_type</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <literal type="string" pos:start="13:21" pos:end="13:30">"kvm-apic"</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="19:5">else if <condition pos:start="15:15" pos:end="15:29">(<expr pos:start="15:16" pos:end="15:28"><call pos:start="15:16" pos:end="15:28"><name pos:start="15:16" pos:end="15:26">xen_enabled</name><argument_list pos:start="15:27" pos:end="15:28">()</argument_list></call></expr>)</condition> <block pos:start="15:31" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:31">

        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:17">apic_type</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <literal type="string" pos:start="17:21" pos:end="17:30">"xen-apic"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:52"><expr pos:start="23:5" pos:end="23:51"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:7">cpu</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:19">apic_state</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="23:51"><name pos:start="23:23" pos:end="23:28">DEVICE</name><argument_list pos:start="23:29" pos:end="23:51">(<argument pos:start="23:30" pos:end="23:50"><expr pos:start="23:30" pos:end="23:50"><call pos:start="23:30" pos:end="23:50"><name pos:start="23:30" pos:end="23:39">object_new</name><argument_list pos:start="23:40" pos:end="23:50">(<argument pos:start="23:41" pos:end="23:49"><expr pos:start="23:41" pos:end="23:49"><name pos:start="23:41" pos:end="23:49">apic_type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:69"><expr pos:start="27:5" pos:end="29:68"><call pos:start="27:5" pos:end="29:68"><name pos:start="27:5" pos:end="27:29">object_property_add_child</name><argument_list pos:start="27:30" pos:end="29:68">(<argument pos:start="27:31" pos:end="27:41"><expr pos:start="27:31" pos:end="27:41"><call pos:start="27:31" pos:end="27:41"><name pos:start="27:31" pos:end="27:36">OBJECT</name><argument_list pos:start="27:37" pos:end="27:41">(<argument pos:start="27:38" pos:end="27:40"><expr pos:start="27:38" pos:end="27:40"><name pos:start="27:38" pos:end="27:40">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:44" pos:end="27:50"><expr pos:start="27:44" pos:end="27:50"><literal type="string" pos:start="27:44" pos:end="27:50">"lapic"</literal></expr></argument>,

                              <argument pos:start="29:31" pos:end="29:53"><expr pos:start="29:31" pos:end="29:53"><call pos:start="29:31" pos:end="29:53"><name pos:start="29:31" pos:end="29:36">OBJECT</name><argument_list pos:start="29:37" pos:end="29:53">(<argument pos:start="29:38" pos:end="29:52"><expr pos:start="29:38" pos:end="29:52"><name pos:start="29:38" pos:end="29:52"><name pos:start="29:38" pos:end="29:40">cpu</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:52">apic_state</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:56" pos:end="29:67"><expr pos:start="29:56" pos:end="29:67"><operator pos:start="29:56" pos:end="29:56">&amp;</operator><name pos:start="29:57" pos:end="29:67">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="34:5" pos:end="34:61"><expr pos:start="34:5" pos:end="34:60"><call pos:start="34:5" pos:end="34:60"><name pos:start="34:5" pos:end="34:23">qdev_prop_set_uint8</name><argument_list pos:start="34:24" pos:end="34:60">(<argument pos:start="34:25" pos:end="34:39"><expr pos:start="34:25" pos:end="34:39"><name pos:start="34:25" pos:end="34:39"><name pos:start="34:25" pos:end="34:27">cpu</name><operator pos:start="34:28" pos:end="34:29">-&gt;</operator><name pos:start="34:30" pos:end="34:39">apic_state</name></name></expr></argument>, <argument pos:start="34:42" pos:end="34:45"><expr pos:start="34:42" pos:end="34:45"><literal type="string" pos:start="34:42" pos:end="34:45">"id"</literal></expr></argument>, <argument pos:start="34:48" pos:end="34:59"><expr pos:start="34:48" pos:end="34:59"><name pos:start="34:48" pos:end="34:59"><name pos:start="34:48" pos:end="34:50">cpu</name><operator pos:start="34:51" pos:end="34:52">-&gt;</operator><name pos:start="34:53" pos:end="34:59">apic_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="36:5" pos:end="36:33">/* TODO: convert to link&lt;&gt; */</comment>

    <expr_stmt pos:start="38:5" pos:end="38:40"><expr pos:start="38:5" pos:end="38:39"><name pos:start="38:5" pos:end="38:8">apic</name> <operator pos:start="38:10" pos:end="38:10">=</operator> <call pos:start="38:12" pos:end="38:39"><name pos:start="38:12" pos:end="38:22">APIC_COMMON</name><argument_list pos:start="38:23" pos:end="38:39">(<argument pos:start="38:24" pos:end="38:38"><expr pos:start="38:24" pos:end="38:38"><name pos:start="38:24" pos:end="38:38"><name pos:start="38:24" pos:end="38:26">cpu</name><operator pos:start="38:27" pos:end="38:28">-&gt;</operator><name pos:start="38:29" pos:end="38:38">apic_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="40:5" pos:end="40:20"><expr pos:start="40:5" pos:end="40:19"><name pos:start="40:5" pos:end="40:13"><name pos:start="40:5" pos:end="40:8">apic</name><operator pos:start="40:9" pos:end="40:10">-&gt;</operator><name pos:start="40:11" pos:end="40:13">cpu</name></name> <operator pos:start="40:15" pos:end="40:15">=</operator> <name pos:start="40:17" pos:end="40:19">cpu</name></expr>;</expr_stmt>

    <expr_stmt pos:start="42:5" pos:end="42:69"><expr pos:start="42:5" pos:end="42:68"><name pos:start="42:5" pos:end="42:18"><name pos:start="42:5" pos:end="42:8">apic</name><operator pos:start="42:9" pos:end="42:10">-&gt;</operator><name pos:start="42:11" pos:end="42:18">apicbase</name></name> <operator pos:start="42:20" pos:end="42:20">=</operator> <name pos:start="42:22" pos:end="42:41">APIC_DEFAULT_ADDRESS</name> <operator pos:start="42:43" pos:end="42:43">|</operator> <name pos:start="42:45" pos:end="42:68">MSR_IA32_APICBASE_ENABLE</name></expr>;</expr_stmt>

</block_content>}</block></function></unit>
