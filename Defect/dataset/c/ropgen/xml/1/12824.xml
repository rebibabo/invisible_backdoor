<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12824.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">pci_add_capability</name><parameter_list pos:start="1:23" pos:end="3:52">(<parameter pos:start="1:24" pos:end="1:38"><decl pos:start="1:24" pos:end="1:38"><type pos:start="1:24" pos:end="1:38"><name pos:start="1:24" pos:end="1:32">PCIDevice</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:38">pdev</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:47">uint8_t</name></type> <name pos:start="1:49" pos:end="1:54">cap_id</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:37"><decl pos:start="3:24" pos:end="3:37"><type pos:start="3:24" pos:end="3:37"><name pos:start="3:24" pos:end="3:30">uint8_t</name></type> <name pos:start="3:32" pos:end="3:37">offset</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:51"><decl pos:start="3:40" pos:end="3:51"><type pos:start="3:40" pos:end="3:51"><name pos:start="3:40" pos:end="3:46">uint8_t</name></type> <name pos:start="3:48" pos:end="3:51">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="31:1">{<block_content pos:start="7:5" pos:end="29:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:70"><expr pos:start="13:5" pos:end="13:69"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:69"><name pos:start="13:11" pos:end="13:29">pci_add_capability2</name><argument_list pos:start="13:30" pos:end="13:69">(<argument pos:start="13:31" pos:end="13:34"><expr pos:start="13:31" pos:end="13:34"><name pos:start="13:31" pos:end="13:34">pdev</name></expr></argument>, <argument pos:start="13:37" pos:end="13:42"><expr pos:start="13:37" pos:end="13:42"><name pos:start="13:37" pos:end="13:42">cap_id</name></expr></argument>, <argument pos:start="13:45" pos:end="13:50"><expr pos:start="13:45" pos:end="13:50"><name pos:start="13:45" pos:end="13:50">offset</name></expr></argument>, <argument pos:start="13:53" pos:end="13:56"><expr pos:start="13:53" pos:end="13:56"><name pos:start="13:53" pos:end="13:56">size</name></expr></argument>, <argument pos:start="13:59" pos:end="13:68"><expr pos:start="13:59" pos:end="13:68"><operator pos:start="13:59" pos:end="13:59">&amp;</operator><name pos:start="13:60" pos:end="13:68">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="27:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:17">local_err</name></expr>)</condition> <block pos:start="15:20" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:36">

        <expr_stmt pos:start="17:9" pos:end="17:24"><expr pos:start="17:9" pos:end="17:23"><call pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:14">assert</name><argument_list pos:start="17:15" pos:end="17:23">(<argument pos:start="17:16" pos:end="17:22"><expr pos:start="17:16" pos:end="17:22"><name pos:start="17:16" pos:end="17:18">ret</name> <operator pos:start="17:20" pos:end="17:20">&lt;</operator> <literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><call pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:24">error_report_err</name><argument_list pos:start="19:25" pos:end="19:35">(<argument pos:start="19:26" pos:end="19:34"><expr pos:start="19:26" pos:end="19:34"><name pos:start="19:26" pos:end="19:34">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="27:5">else <block pos:start="21:12" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:24">

        <comment type="block" pos:start="23:9" pos:end="23:63">/* success implies a positive offset in config space */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><call pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:14">assert</name><argument_list pos:start="25:15" pos:end="25:23">(<argument pos:start="25:16" pos:end="25:22"><expr pos:start="25:16" pos:end="25:22"><name pos:start="25:16" pos:end="25:18">ret</name> <operator pos:start="25:20" pos:end="25:20">&gt;</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="29:5" pos:end="29:15">return <expr pos:start="29:12" pos:end="29:14"><name pos:start="29:12" pos:end="29:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
