<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15155.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">render_line</name><parameter_list pos:start="1:24" pos:end="1:67">(<parameter pos:start="1:25" pos:end="1:30"><decl pos:start="1:25" pos:end="1:30"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:30">x0</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:38"><decl pos:start="1:33" pos:end="1:38"><type pos:start="1:33" pos:end="1:38"><name pos:start="1:33" pos:end="1:35">int</name></type> <name pos:start="1:37" pos:end="1:38">y0</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:46"><decl pos:start="1:41" pos:end="1:46"><type pos:start="1:41" pos:end="1:46"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:46">x1</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:54"><decl pos:start="1:49" pos:end="1:54"><type pos:start="1:49" pos:end="1:54"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:54">y1</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:66"><decl pos:start="1:57" pos:end="1:66"><type pos:start="1:57" pos:end="1:66"><name pos:start="1:57" pos:end="1:61">float</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">dy</name>  <init pos:start="5:13" pos:end="5:21">= <expr pos:start="5:15" pos:end="5:21"><name pos:start="5:15" pos:end="5:16">y1</name> <operator pos:start="5:18" pos:end="5:18">-</operator> <name pos:start="5:20" pos:end="5:21">y0</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">adx</name> <init pos:start="7:13" pos:end="7:21">= <expr pos:start="7:15" pos:end="7:21"><name pos:start="7:15" pos:end="7:16">x1</name> <operator pos:start="7:18" pos:end="7:18">-</operator> <name pos:start="7:20" pos:end="7:21">x0</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ady</name> <init pos:start="9:13" pos:end="9:23">= <expr pos:start="9:15" pos:end="9:23"><call pos:start="9:15" pos:end="9:23"><name pos:start="9:15" pos:end="9:19">FFABS</name><argument_list pos:start="9:20" pos:end="9:23">(<argument pos:start="9:21" pos:end="9:22"><expr pos:start="9:21" pos:end="9:22"><name pos:start="9:21" pos:end="9:22">dy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">sy</name>  <init pos:start="11:13" pos:end="11:29">= <expr pos:start="11:15" pos:end="11:29"><ternary pos:start="11:15" pos:end="11:29"><condition pos:start="11:15" pos:end="11:22"><expr pos:start="11:15" pos:end="11:20"><name pos:start="11:15" pos:end="11:16">dy</name> <operator pos:start="11:18" pos:end="11:18">&lt;</operator> <literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr> ?</condition><then pos:start="11:24" pos:end="11:25"> <expr pos:start="11:24" pos:end="11:25"><operator pos:start="11:24" pos:end="11:24">-</operator><literal type="number" pos:start="11:25" pos:end="11:25">1</literal></expr> </then><else pos:start="11:27" pos:end="11:29">: <expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:7">buf</name><index pos:start="13:8" pos:end="13:11">[<expr pos:start="13:9" pos:end="13:10"><name pos:start="13:9" pos:end="13:10">x0</name></expr>]</index></name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:51"><name pos:start="13:15" pos:end="13:47">ff_vorbis_floor1_inverse_db_table</name><index pos:start="13:48" pos:end="13:51">[<expr pos:start="13:49" pos:end="13:50"><name pos:start="13:49" pos:end="13:50">y0</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="49:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:21">(<expr pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:11">ady</name><operator pos:start="15:12" pos:end="15:12">*</operator><literal type="number" pos:start="15:13" pos:end="15:13">2</literal> <operator pos:start="15:15" pos:end="15:16">&lt;=</operator> <name pos:start="15:18" pos:end="15:20">adx</name></expr>)</condition> <block pos:start="15:23" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:60"> <comment type="line" pos:start="15:25" pos:end="15:48">// optimized common case</comment>

        <expr_stmt pos:start="17:9" pos:end="17:60"><expr pos:start="17:9" pos:end="17:59"><call pos:start="17:9" pos:end="17:59"><name pos:start="17:9" pos:end="17:28">render_line_unrolled</name><argument_list pos:start="17:29" pos:end="17:59">(<argument pos:start="17:30" pos:end="17:31"><expr pos:start="17:30" pos:end="17:31"><name pos:start="17:30" pos:end="17:31">x0</name></expr></argument>, <argument pos:start="17:34" pos:end="17:35"><expr pos:start="17:34" pos:end="17:35"><name pos:start="17:34" pos:end="17:35">y0</name></expr></argument>, <argument pos:start="17:38" pos:end="17:39"><expr pos:start="17:38" pos:end="17:39"><name pos:start="17:38" pos:end="17:39">x1</name></expr></argument>, <argument pos:start="17:42" pos:end="17:43"><expr pos:start="17:42" pos:end="17:43"><name pos:start="17:42" pos:end="17:43">sy</name></expr></argument>, <argument pos:start="17:46" pos:end="17:48"><expr pos:start="17:46" pos:end="17:48"><name pos:start="17:46" pos:end="17:48">ady</name></expr></argument>, <argument pos:start="17:51" pos:end="17:53"><expr pos:start="17:51" pos:end="17:53"><name pos:start="17:51" pos:end="17:53">adx</name></expr></argument>, <argument pos:start="17:56" pos:end="17:58"><expr pos:start="17:56" pos:end="17:58"><name pos:start="17:56" pos:end="17:58">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="49:5">else <block pos:start="19:12" pos:end="49:5">{<block_content pos:start="21:9" pos:end="47:9">

        <decl_stmt pos:start="21:9" pos:end="21:28"><decl pos:start="21:9" pos:end="21:27"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:16">base</name> <init pos:start="21:18" pos:end="21:27">= <expr pos:start="21:20" pos:end="21:27"><name pos:start="21:20" pos:end="21:21">dy</name> <operator pos:start="21:23" pos:end="21:23">/</operator> <name pos:start="21:25" pos:end="21:27">adx</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:22"><decl pos:start="23:9" pos:end="23:21"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">x</name>    <init pos:start="23:18" pos:end="23:21">= <expr pos:start="23:20" pos:end="23:21"><name pos:start="23:20" pos:end="23:21">x0</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:22"><decl pos:start="25:9" pos:end="25:21"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">y</name>    <init pos:start="25:18" pos:end="25:21">= <expr pos:start="25:20" pos:end="25:21"><name pos:start="25:20" pos:end="25:21">y0</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:24"><decl pos:start="27:9" pos:end="27:23"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:15">err</name>  <init pos:start="27:18" pos:end="27:23">= <expr pos:start="27:20" pos:end="27:23"><operator pos:start="27:20" pos:end="27:20">-</operator><name pos:start="27:21" pos:end="27:23">adx</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:33"><expr pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:11">ady</name> <operator pos:start="29:13" pos:end="29:14">-=</operator> <call pos:start="29:16" pos:end="29:26"><name pos:start="29:16" pos:end="29:20">FFABS</name><argument_list pos:start="29:21" pos:end="29:26">(<argument pos:start="29:22" pos:end="29:25"><expr pos:start="29:22" pos:end="29:25"><name pos:start="29:22" pos:end="29:25">base</name></expr></argument>)</argument_list></call> <operator pos:start="29:28" pos:end="29:28">*</operator> <name pos:start="29:30" pos:end="29:32">adx</name></expr>;</expr_stmt>

        <while pos:start="31:9" pos:end="47:9">while <condition pos:start="31:15" pos:end="31:24">(<expr pos:start="31:16" pos:end="31:23"><operator pos:start="31:16" pos:end="31:17">++</operator><name pos:start="31:18" pos:end="31:18">x</name> <operator pos:start="31:20" pos:end="31:20">&lt;</operator> <name pos:start="31:22" pos:end="31:23">x1</name></expr>)</condition> <block pos:start="31:26" pos:end="47:9">{<block_content pos:start="33:13" pos:end="45:58">

            <expr_stmt pos:start="33:13" pos:end="33:22"><expr pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:13">y</name> <operator pos:start="33:15" pos:end="33:16">+=</operator> <name pos:start="33:18" pos:end="33:21">base</name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:23"><expr pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:15">err</name> <operator pos:start="35:17" pos:end="35:18">+=</operator> <name pos:start="35:20" pos:end="35:22">ady</name></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="43:13"><if pos:start="37:13" pos:end="43:13">if <condition pos:start="37:16" pos:end="37:25">(<expr pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:19">err</name> <operator pos:start="37:21" pos:end="37:22">&gt;=</operator> <literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr>)</condition> <block pos:start="37:27" pos:end="43:13">{<block_content pos:start="39:17" pos:end="41:26">

                <expr_stmt pos:start="39:17" pos:end="39:27"><expr pos:start="39:17" pos:end="39:26"><name pos:start="39:17" pos:end="39:19">err</name> <operator pos:start="39:21" pos:end="39:22">-=</operator> <name pos:start="39:24" pos:end="39:26">adx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:26"><expr pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:17">y</name>   <operator pos:start="41:21" pos:end="41:22">+=</operator> <name pos:start="41:24" pos:end="41:25">sy</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:58"><expr pos:start="45:13" pos:end="45:57"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:15">buf</name><index pos:start="45:16" pos:end="45:18">[<expr pos:start="45:17" pos:end="45:17"><name pos:start="45:17" pos:end="45:17">x</name></expr>]</index></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:57"><name pos:start="45:22" pos:end="45:54">ff_vorbis_floor1_inverse_db_table</name><index pos:start="45:55" pos:end="45:57">[<expr pos:start="45:56" pos:end="45:56"><name pos:start="45:56" pos:end="45:56">y</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
