<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22917.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">recode_subtitle</name><parameter_list pos:start="1:27" pos:end="3:67">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:48"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">avctx</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:43"><decl pos:start="3:28" pos:end="3:43"><type pos:start="3:28" pos:end="3:43"><name pos:start="3:28" pos:end="3:35">AVPacket</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:43">outpkt</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:66"><decl pos:start="3:46" pos:end="3:66"><type pos:start="3:46" pos:end="3:66"><specifier pos:start="3:46" pos:end="3:50">const</specifier> <name pos:start="3:52" pos:end="3:59">AVPacket</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:66">inpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="111:1">{<block_content pos:start="9:5" pos:end="110:0">

<cpp:if pos:start="7:1" pos:end="7:16">#<cpp:directive pos:start="7:2" pos:end="7:3">if</cpp:directive> <expr pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">CONFIG_ICONV</name></expr></cpp:if>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">iconv_t</name></type> <name pos:start="9:13" pos:end="9:14">cd</name> <init pos:start="9:16" pos:end="9:28">= <expr pos:start="9:18" pos:end="9:28"><operator pos:start="9:18" pos:end="9:18">(</operator><name pos:start="9:19" pos:end="9:25">iconv_t</name><operator pos:start="9:26" pos:end="9:26">)</operator><operator pos:start="9:27" pos:end="9:27">-</operator><literal type="number" pos:start="9:28" pos:end="9:28">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:13">inb</name></decl>, <decl pos:start="13:16" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:10"><modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:20">outb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">size_t</name></type> <name pos:start="15:12" pos:end="15:14">inl</name></decl>, <decl pos:start="15:17" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:10"/><name pos:start="15:17" pos:end="15:20">outl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="20:0"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">AVPacket</name></type> <name pos:start="17:14" pos:end="17:16">tmp</name></decl>;</decl_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="23:5" pos:end="30:0"><if pos:start="23:5" pos:end="30:0">if <condition pos:start="23:8" pos:end="23:67">(<expr pos:start="23:9" pos:end="23:66"><name pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:13">avctx</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:31">sub_charenc_mode</name></name> <operator pos:start="23:33" pos:end="23:34">!=</operator> <name pos:start="23:36" pos:end="23:66">FF_SUB_CHARENC_MODE_PRE_DECODER</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="30:0"><block_content pos:start="25:9" pos:end="30:0">

        <return pos:start="25:9" pos:end="30:0">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="29:1" pos:end="29:16">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:16">CONFIG_ICONV</name></expr></cpp:if>

    <expr_stmt pos:start="31:5" pos:end="31:49"><expr pos:start="31:5" pos:end="31:48"><name pos:start="31:5" pos:end="31:6">cd</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:48"><name pos:start="31:10" pos:end="31:19">iconv_open</name><argument_list pos:start="31:20" pos:end="31:48">(<argument pos:start="31:21" pos:end="31:27"><expr pos:start="31:21" pos:end="31:27"><literal type="string" pos:start="31:21" pos:end="31:27">"UTF-8"</literal></expr></argument>, <argument pos:start="31:30" pos:end="31:47"><expr pos:start="31:30" pos:end="31:47"><name pos:start="31:30" pos:end="31:47"><name pos:start="31:30" pos:end="31:34">avctx</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:47">sub_charenc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:34"><expr pos:start="33:5" pos:end="33:33"><call pos:start="33:5" pos:end="33:33"><name pos:start="33:5" pos:end="33:14">av_assert0</name><argument_list pos:start="33:15" pos:end="33:33">(<argument pos:start="33:16" pos:end="33:32"><expr pos:start="33:16" pos:end="33:32"><name pos:start="33:16" pos:end="33:17">cd</name> <operator pos:start="33:19" pos:end="33:20">!=</operator> <operator pos:start="33:22" pos:end="33:22">(</operator><name pos:start="33:23" pos:end="33:29">iconv_t</name><operator pos:start="33:30" pos:end="33:30">)</operator><operator pos:start="33:31" pos:end="33:31">-</operator><literal type="number" pos:start="33:32" pos:end="33:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:22"><expr pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:7">inb</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <name pos:start="37:11" pos:end="37:21"><name pos:start="37:11" pos:end="37:15">inpkt</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:21">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:22"><expr pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:7">inl</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <name pos:start="39:11" pos:end="39:21"><name pos:start="39:11" pos:end="39:15">inpkt</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:21">size</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:71">(<expr pos:start="43:9" pos:end="43:70"><name pos:start="43:9" pos:end="43:11">inl</name> <operator pos:start="43:13" pos:end="43:14">&gt;=</operator> <name pos:start="43:16" pos:end="43:22">INT_MAX</name> <operator pos:start="43:24" pos:end="43:24">/</operator> <name pos:start="43:26" pos:end="43:39">UTF8_MAX_BYTES</name> <operator pos:start="43:41" pos:end="43:41">-</operator> <name pos:start="43:43" pos:end="43:70">FF_INPUT_BUFFER_PADDING_SIZE</name></expr>)</condition> <block pos:start="43:73" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:17">

        <expr_stmt pos:start="45:9" pos:end="45:82"><expr pos:start="45:9" pos:end="45:81"><call pos:start="45:9" pos:end="45:81"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:81">(<argument pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:20">avctx</name></expr></argument>, <argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:37" pos:end="45:80"><expr pos:start="45:37" pos:end="45:80"><literal type="string" pos:start="45:37" pos:end="45:80">"Subtitles packet is too big for recoding\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:30"><expr pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:29"><name pos:start="47:15" pos:end="47:21">AVERROR</name><argument_list pos:start="47:22" pos:end="47:29">(<argument pos:start="47:23" pos:end="47:28"><expr pos:start="47:23" pos:end="47:28"><name pos:start="47:23" pos:end="47:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:17">goto <name pos:start="49:14" pos:end="49:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:52"><expr pos:start="55:5" pos:end="55:51"><name pos:start="55:5" pos:end="55:7">ret</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="55:51"><name pos:start="55:11" pos:end="55:23">av_new_packet</name><argument_list pos:start="55:24" pos:end="55:51">(<argument pos:start="55:25" pos:end="55:28"><expr pos:start="55:25" pos:end="55:28"><operator pos:start="55:25" pos:end="55:25">&amp;</operator><name pos:start="55:26" pos:end="55:28">tmp</name></expr></argument>, <argument pos:start="55:31" pos:end="55:50"><expr pos:start="55:31" pos:end="55:50"><name pos:start="55:31" pos:end="55:33">inl</name> <operator pos:start="55:35" pos:end="55:35">*</operator> <name pos:start="55:37" pos:end="55:50">UTF8_MAX_BYTES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="59:17"><if pos:start="57:5" pos:end="59:17">if <condition pos:start="57:8" pos:end="57:16">(<expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">&lt;</operator> <literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:17"><block_content pos:start="59:9" pos:end="59:17">

        <goto pos:start="59:9" pos:end="59:17">goto <name pos:start="59:14" pos:end="59:16">end</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:27"><expr pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:10">outpkt</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:15">buf</name></name>  <operator pos:start="61:18" pos:end="61:18">=</operator> <name pos:start="61:20" pos:end="61:26"><name pos:start="61:20" pos:end="61:22">tmp</name><operator pos:start="61:23" pos:end="61:23">.</operator><name pos:start="61:24" pos:end="61:26">buf</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:28"><expr pos:start="63:5" pos:end="63:27"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:10">outpkt</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:16">data</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <name pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:22">tmp</name><operator pos:start="63:23" pos:end="63:23">.</operator><name pos:start="63:24" pos:end="63:27">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:28"><expr pos:start="65:5" pos:end="65:27"><name pos:start="65:5" pos:end="65:16"><name pos:start="65:5" pos:end="65:10">outpkt</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:16">size</name></name> <operator pos:start="65:18" pos:end="65:18">=</operator> <name pos:start="65:20" pos:end="65:27"><name pos:start="65:20" pos:end="65:22">tmp</name><operator pos:start="65:23" pos:end="65:23">.</operator><name pos:start="65:24" pos:end="65:27">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:24"><expr pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:8">outb</name> <operator pos:start="67:10" pos:end="67:10">=</operator> <name pos:start="67:12" pos:end="67:23"><name pos:start="67:12" pos:end="67:17">outpkt</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:23">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:24"><expr pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:8">outl</name> <operator pos:start="69:10" pos:end="69:10">=</operator> <name pos:start="69:12" pos:end="69:23"><name pos:start="69:12" pos:end="69:17">outpkt</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:23">size</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="89:5"><if pos:start="73:5" pos:end="89:5">if <condition pos:start="73:8" pos:end="77:41">(<expr pos:start="73:9" pos:end="77:40"><call pos:start="73:9" pos:end="73:43"><name pos:start="73:9" pos:end="73:13">iconv</name><argument_list pos:start="73:14" pos:end="73:43">(<argument pos:start="73:15" pos:end="73:16"><expr pos:start="73:15" pos:end="73:16"><name pos:start="73:15" pos:end="73:16">cd</name></expr></argument>, <argument pos:start="73:19" pos:end="73:22"><expr pos:start="73:19" pos:end="73:22"><operator pos:start="73:19" pos:end="73:19">&amp;</operator><name pos:start="73:20" pos:end="73:22">inb</name></expr></argument>, <argument pos:start="73:25" pos:end="73:28"><expr pos:start="73:25" pos:end="73:28"><operator pos:start="73:25" pos:end="73:25">&amp;</operator><name pos:start="73:26" pos:end="73:28">inl</name></expr></argument>, <argument pos:start="73:31" pos:end="73:35"><expr pos:start="73:31" pos:end="73:35"><operator pos:start="73:31" pos:end="73:31">&amp;</operator><name pos:start="73:32" pos:end="73:35">outb</name></expr></argument>, <argument pos:start="73:38" pos:end="73:42"><expr pos:start="73:38" pos:end="73:42"><operator pos:start="73:38" pos:end="73:38">&amp;</operator><name pos:start="73:39" pos:end="73:42">outl</name></expr></argument>)</argument_list></call> <operator pos:start="73:45" pos:end="73:46">==</operator> <operator pos:start="73:48" pos:end="73:48">(</operator><name pos:start="73:49" pos:end="73:54">size_t</name><operator pos:start="73:55" pos:end="73:55">)</operator><operator pos:start="73:56" pos:end="73:56">-</operator><literal type="number" pos:start="73:57" pos:end="73:57">1</literal> <operator pos:start="73:59" pos:end="73:60">||</operator>

        <call pos:start="75:9" pos:end="75:43"><name pos:start="75:9" pos:end="75:13">iconv</name><argument_list pos:start="75:14" pos:end="75:43">(<argument pos:start="75:15" pos:end="75:16"><expr pos:start="75:15" pos:end="75:16"><name pos:start="75:15" pos:end="75:16">cd</name></expr></argument>, <argument pos:start="75:19" pos:end="75:22"><expr pos:start="75:19" pos:end="75:22"><name pos:start="75:19" pos:end="75:22">NULL</name></expr></argument>, <argument pos:start="75:25" pos:end="75:28"><expr pos:start="75:25" pos:end="75:28"><name pos:start="75:25" pos:end="75:28">NULL</name></expr></argument>, <argument pos:start="75:31" pos:end="75:35"><expr pos:start="75:31" pos:end="75:35"><operator pos:start="75:31" pos:end="75:31">&amp;</operator><name pos:start="75:32" pos:end="75:35">outb</name></expr></argument>, <argument pos:start="75:38" pos:end="75:42"><expr pos:start="75:38" pos:end="75:42"><operator pos:start="75:38" pos:end="75:38">&amp;</operator><name pos:start="75:39" pos:end="75:42">outl</name></expr></argument>)</argument_list></call> <operator pos:start="75:45" pos:end="75:46">==</operator> <operator pos:start="75:48" pos:end="75:48">(</operator><name pos:start="75:49" pos:end="75:54">size_t</name><operator pos:start="75:55" pos:end="75:55">)</operator><operator pos:start="75:56" pos:end="75:56">-</operator><literal type="number" pos:start="75:57" pos:end="75:57">1</literal> <operator pos:start="75:59" pos:end="75:60">||</operator>

        <name pos:start="77:9" pos:end="77:12">outl</name> <operator pos:start="77:14" pos:end="77:15">&gt;=</operator> <name pos:start="77:17" pos:end="77:28"><name pos:start="77:17" pos:end="77:22">outpkt</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:28">size</name></name> <operator pos:start="77:30" pos:end="77:31">||</operator> <name pos:start="77:33" pos:end="77:35">inl</name> <operator pos:start="77:37" pos:end="77:38">!=</operator> <literal type="number" pos:start="77:40" pos:end="77:40">0</literal></expr>)</condition> <block pos:start="77:43" pos:end="89:5">{<block_content pos:start="79:9" pos:end="87:17">

        <expr_stmt pos:start="79:9" pos:end="81:70"><expr pos:start="79:9" pos:end="81:69"><call pos:start="79:9" pos:end="81:69"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="81:69">(<argument pos:start="79:16" pos:end="79:20"><expr pos:start="79:16" pos:end="79:20"><name pos:start="79:16" pos:end="79:20">avctx</name></expr></argument>, <argument pos:start="79:23" pos:end="79:34"><expr pos:start="79:23" pos:end="79:34"><name pos:start="79:23" pos:end="79:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:37" pos:end="81:35"><expr pos:start="79:37" pos:end="81:35"><literal type="string" pos:start="79:37" pos:end="79:77">"Unable to recode subtitle event \"%s\" "</literal>

               <literal type="string" pos:start="81:16" pos:end="81:35">"from %s to UTF-8\n"</literal></expr></argument>, <argument pos:start="81:38" pos:end="81:48"><expr pos:start="81:38" pos:end="81:48"><name pos:start="81:38" pos:end="81:48"><name pos:start="81:38" pos:end="81:42">inpkt</name><operator pos:start="81:43" pos:end="81:44">-&gt;</operator><name pos:start="81:45" pos:end="81:48">data</name></name></expr></argument>, <argument pos:start="81:51" pos:end="81:68"><expr pos:start="81:51" pos:end="81:68"><name pos:start="81:51" pos:end="81:68"><name pos:start="81:51" pos:end="81:55">avctx</name><operator pos:start="81:56" pos:end="81:57">-&gt;</operator><name pos:start="81:58" pos:end="81:68">sub_charenc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:29"><expr pos:start="83:9" pos:end="83:28"><call pos:start="83:9" pos:end="83:28"><name pos:start="83:9" pos:end="83:22">av_free_packet</name><argument_list pos:start="83:23" pos:end="83:28">(<argument pos:start="83:24" pos:end="83:27"><expr pos:start="83:24" pos:end="83:27"><operator pos:start="83:24" pos:end="83:24">&amp;</operator><name pos:start="83:25" pos:end="83:27">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:29"><expr pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="85:28"><name pos:start="85:15" pos:end="85:21">AVERROR</name><argument_list pos:start="85:22" pos:end="85:28">(<argument pos:start="85:23" pos:end="85:27"><expr pos:start="85:23" pos:end="85:27"><name pos:start="85:23" pos:end="85:27">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="87:9" pos:end="87:17">goto <name pos:start="87:14" pos:end="87:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:25"><expr pos:start="91:5" pos:end="91:24"><name pos:start="91:5" pos:end="91:16"><name pos:start="91:5" pos:end="91:10">outpkt</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:16">size</name></name> <operator pos:start="91:18" pos:end="91:19">-=</operator> <name pos:start="91:21" pos:end="91:24">outl</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:42"><expr pos:start="93:5" pos:end="93:41"><name pos:start="93:5" pos:end="93:34"><name pos:start="93:5" pos:end="93:10">outpkt</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:16">data</name><index pos:start="93:17" pos:end="93:34">[<expr pos:start="93:18" pos:end="93:33"><name pos:start="93:18" pos:end="93:29"><name pos:start="93:18" pos:end="93:23">outpkt</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:29">size</name></name> <operator pos:start="93:31" pos:end="93:31">-</operator> <literal type="number" pos:start="93:33" pos:end="93:33">1</literal></expr>]</index></name> <operator pos:start="93:36" pos:end="93:36">=</operator> <literal type="char" pos:start="93:38" pos:end="93:41">'\0'</literal></expr>;</expr_stmt>



<label pos:start="97:1" pos:end="97:4"><name pos:start="97:1" pos:end="97:3">end</name>:</label>

    <if_stmt pos:start="99:5" pos:end="101:24"><if pos:start="99:5" pos:end="101:24">if <condition pos:start="99:8" pos:end="99:26">(<expr pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:10">cd</name> <operator pos:start="99:12" pos:end="99:13">!=</operator> <operator pos:start="99:15" pos:end="99:15">(</operator><name pos:start="99:16" pos:end="99:22">iconv_t</name><operator pos:start="99:23" pos:end="99:23">)</operator><operator pos:start="99:24" pos:end="99:24">-</operator><literal type="number" pos:start="99:25" pos:end="99:25">1</literal></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:24"><block_content pos:start="101:9" pos:end="101:24">

        <expr_stmt pos:start="101:9" pos:end="101:24"><expr pos:start="101:9" pos:end="101:23"><call pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:19">iconv_close</name><argument_list pos:start="101:20" pos:end="101:23">(<argument pos:start="101:21" pos:end="101:22"><expr pos:start="101:21" pos:end="101:22"><name pos:start="101:21" pos:end="101:22">cd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="103:5" pos:end="106:0">return <expr pos:start="103:12" pos:end="103:14"><name pos:start="103:12" pos:end="103:14">ret</name></expr>;</return>

<cpp:else pos:start="105:1" pos:end="105:5">#<cpp:directive pos:start="105:2" pos:end="105:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="107:5" pos:end="110:0"><expr pos:start="107:5" pos:end="107:62"><call pos:start="107:5" pos:end="107:62"><name pos:start="107:5" pos:end="107:14">av_assert0</name><argument_list pos:start="107:15" pos:end="107:62">(<argument pos:start="107:16" pos:end="107:61"><expr pos:start="107:16" pos:end="107:61"><operator pos:start="107:16" pos:end="107:16">!</operator><literal type="string" pos:start="107:17" pos:end="107:61">"requesting subtitles recoding without iconv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="109:1" pos:end="109:6">#<cpp:directive pos:start="109:2" pos:end="109:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
