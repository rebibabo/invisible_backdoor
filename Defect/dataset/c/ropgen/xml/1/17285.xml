<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17285.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">set_options</name><parameter_list pos:start="1:24" pos:end="1:55">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:34">URLContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">h</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">uri</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="78:0">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">TLSContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">c</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">h</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:18"><name pos:start="7:10" pos:end="7:12">buf</name><index pos:start="7:13" pos:end="7:18">[<expr pos:start="7:14" pos:end="7:17"><literal type="number" pos:start="7:14" pos:end="7:17">1024</literal></expr>]</index></name></decl>, <decl pos:start="7:21" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:21" pos:end="7:29"><name pos:start="7:21" pos:end="7:23">key</name><index pos:start="7:24" pos:end="7:29">[<expr pos:start="7:25" pos:end="7:28"><literal type="number" pos:start="7:25" pos:end="7:28">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="12:0"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">has_cert</name></decl>, <decl pos:start="9:19" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:25">has_key</name></decl>;</decl_stmt>

<cpp:if pos:start="11:1" pos:end="11:17">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">CONFIG_GNUTLS</name></expr></cpp:if>

    <decl_stmt pos:start="13:5" pos:end="16:0"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:36"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:17">p</name> <init pos:start="17:19" pos:end="17:36">= <expr pos:start="17:21" pos:end="17:36"><call pos:start="17:21" pos:end="17:36"><name pos:start="17:21" pos:end="17:26">strchr</name><argument_list pos:start="17:27" pos:end="17:36">(<argument pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><name pos:start="17:28" pos:end="17:30">uri</name></expr></argument>, <argument pos:start="17:33" pos:end="17:35"><expr pos:start="17:33" pos:end="17:35"><literal type="char" pos:start="17:33" pos:end="17:35">'?'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="19:5" pos:end="21:15"><if pos:start="19:5" pos:end="21:15">if <condition pos:start="19:8" pos:end="19:11">(<expr pos:start="19:9" pos:end="19:10"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:10">p</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:15"><block_content pos:start="21:9" pos:end="21:15">

        <return pos:start="21:9" pos:end="21:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="43:5"><if pos:start="25:5" pos:end="43:5">if <condition pos:start="25:8" pos:end="25:56">(<expr pos:start="25:9" pos:end="25:55"><call pos:start="25:9" pos:end="25:55"><name pos:start="25:9" pos:end="25:24">av_find_info_tag</name><argument_list pos:start="25:25" pos:end="25:55">(<argument pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:28">buf</name></expr></argument>, <argument pos:start="25:31" pos:end="25:41"><expr pos:start="25:31" pos:end="25:41"><sizeof pos:start="25:31" pos:end="25:41">sizeof<argument_list pos:start="25:37" pos:end="25:41">(<argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:40">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:44" pos:end="25:51"><expr pos:start="25:44" pos:end="25:51"><literal type="string" pos:start="25:44" pos:end="25:51">"cafile"</literal></expr></argument>, <argument pos:start="25:54" pos:end="25:54"><expr pos:start="25:54" pos:end="25:54"><name pos:start="25:54" pos:end="25:54">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:58" pos:end="43:5">{<block_content pos:start="29:9" pos:end="42:0">

<cpp:if pos:start="27:1" pos:end="27:17">#<cpp:directive pos:start="27:2" pos:end="27:3">if</cpp:directive> <expr pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:17">CONFIG_GNUTLS</name></expr></cpp:if>

        <expr_stmt pos:start="29:9" pos:end="29:88"><expr pos:start="29:9" pos:end="29:87"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:87"><name pos:start="29:15" pos:end="29:52">gnutls_certificate_set_x509_trust_file</name><argument_list pos:start="29:53" pos:end="29:87">(<argument pos:start="29:54" pos:end="29:60"><expr pos:start="29:54" pos:end="29:60"><name pos:start="29:54" pos:end="29:60"><name pos:start="29:54" pos:end="29:54">c</name><operator pos:start="29:55" pos:end="29:56">-&gt;</operator><name pos:start="29:57" pos:end="29:60">cred</name></name></expr></argument>, <argument pos:start="29:63" pos:end="29:65"><expr pos:start="29:63" pos:end="29:65"><name pos:start="29:63" pos:end="29:65">buf</name></expr></argument>, <argument pos:start="29:68" pos:end="29:86"><expr pos:start="29:68" pos:end="29:86"><name pos:start="29:68" pos:end="29:86">GNUTLS_X509_FMT_PEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="36:0"><if pos:start="31:9" pos:end="36:0">if <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="36:0"><block_content pos:start="33:13" pos:end="36:0">

            <expr_stmt pos:start="33:13" pos:end="36:0"><expr pos:start="33:13" pos:end="33:65"><call pos:start="33:13" pos:end="33:65"><name pos:start="33:13" pos:end="33:18">av_log</name><argument_list pos:start="33:19" pos:end="33:65">(<argument pos:start="33:20" pos:end="33:20"><expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">h</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:42"><expr pos:start="33:37" pos:end="33:42"><literal type="string" pos:start="33:37" pos:end="33:42">"%s\n"</literal></expr></argument>, <argument pos:start="33:45" pos:end="33:64"><expr pos:start="33:45" pos:end="33:64"><call pos:start="33:45" pos:end="33:64"><name pos:start="33:45" pos:end="33:59">gnutls_strerror</name><argument_list pos:start="33:60" pos:end="33:64">(<argument pos:start="33:61" pos:end="33:63"><expr pos:start="33:61" pos:end="33:63"><name pos:start="33:61" pos:end="33:63">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:elif pos:start="35:1" pos:end="35:20">#<cpp:directive pos:start="35:2" pos:end="35:5">elif</cpp:directive> <expr pos:start="35:7" pos:end="35:20"><name pos:start="35:7" pos:end="35:20">CONFIG_OPENSSL</name></expr></cpp:elif>

        <if_stmt pos:start="37:9" pos:end="42:0"><if pos:start="37:9" pos:end="42:0">if <condition pos:start="37:12" pos:end="37:62">(<expr pos:start="37:13" pos:end="37:61"><operator pos:start="37:13" pos:end="37:13">!</operator><call pos:start="37:14" pos:end="37:61"><name pos:start="37:14" pos:end="37:42">SSL_CTX_load_verify_locations</name><argument_list pos:start="37:43" pos:end="37:61">(<argument pos:start="37:44" pos:end="37:49"><expr pos:start="37:44" pos:end="37:49"><name pos:start="37:44" pos:end="37:49"><name pos:start="37:44" pos:end="37:44">c</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:49">ctx</name></name></expr></argument>, <argument pos:start="37:52" pos:end="37:54"><expr pos:start="37:52" pos:end="37:54"><name pos:start="37:52" pos:end="37:54">buf</name></expr></argument>, <argument pos:start="37:57" pos:end="37:60"><expr pos:start="37:57" pos:end="37:60"><name pos:start="37:57" pos:end="37:60">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="42:0"><block_content pos:start="39:13" pos:end="42:0">

            <expr_stmt pos:start="39:13" pos:end="42:0"><expr pos:start="39:13" pos:end="39:114"><call pos:start="39:13" pos:end="39:114"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="39:114">(<argument pos:start="39:20" pos:end="39:20"><expr pos:start="39:20" pos:end="39:20"><name pos:start="39:20" pos:end="39:20">h</name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:37" pos:end="39:72"><expr pos:start="39:37" pos:end="39:72"><literal type="string" pos:start="39:37" pos:end="39:72">"SSL_CTX_load_verify_locations %s\n"</literal></expr></argument>, <argument pos:start="39:75" pos:end="39:113"><expr pos:start="39:75" pos:end="39:113"><call pos:start="39:75" pos:end="39:113"><name pos:start="39:75" pos:end="39:90">ERR_error_string</name><argument_list pos:start="39:91" pos:end="39:113">(<argument pos:start="39:92" pos:end="39:106"><expr pos:start="39:92" pos:end="39:106"><call pos:start="39:92" pos:end="39:106"><name pos:start="39:92" pos:end="39:104">ERR_get_error</name><argument_list pos:start="39:105" pos:end="39:106">()</argument_list></call></expr></argument>, <argument pos:start="39:109" pos:end="39:112"><expr pos:start="39:109" pos:end="39:112"><name pos:start="39:109" pos:end="39:112">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:61"><expr pos:start="47:5" pos:end="47:60"><name pos:start="47:5" pos:end="47:12">has_cert</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:60"><name pos:start="47:16" pos:end="47:31">av_find_info_tag</name><argument_list pos:start="47:32" pos:end="47:60">(<argument pos:start="47:33" pos:end="47:35"><expr pos:start="47:33" pos:end="47:35"><name pos:start="47:33" pos:end="47:35">buf</name></expr></argument>, <argument pos:start="47:38" pos:end="47:48"><expr pos:start="47:38" pos:end="47:48"><sizeof pos:start="47:38" pos:end="47:48">sizeof<argument_list pos:start="47:44" pos:end="47:48">(<argument pos:start="47:45" pos:end="47:47"><expr pos:start="47:45" pos:end="47:47"><name pos:start="47:45" pos:end="47:47">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="47:51" pos:end="47:56"><expr pos:start="47:51" pos:end="47:56"><literal type="string" pos:start="47:51" pos:end="47:56">"cert"</literal></expr></argument>, <argument pos:start="47:59" pos:end="47:59"><expr pos:start="47:59" pos:end="47:59"><name pos:start="47:59" pos:end="47:59">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="52:0"><expr pos:start="49:5" pos:end="49:59"><name pos:start="49:5" pos:end="49:11">has_key</name>  <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:59"><name pos:start="49:16" pos:end="49:31">av_find_info_tag</name><argument_list pos:start="49:32" pos:end="49:59">(<argument pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><name pos:start="49:33" pos:end="49:35">key</name></expr></argument>, <argument pos:start="49:38" pos:end="49:48"><expr pos:start="49:38" pos:end="49:48"><sizeof pos:start="49:38" pos:end="49:48">sizeof<argument_list pos:start="49:44" pos:end="49:48">(<argument pos:start="49:45" pos:end="49:47"><expr pos:start="49:45" pos:end="49:47"><name pos:start="49:45" pos:end="49:47">key</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="49:51" pos:end="49:55"><expr pos:start="49:51" pos:end="49:55"><literal type="string" pos:start="49:51" pos:end="49:55">"key"</literal></expr></argument>, <argument pos:start="49:58" pos:end="49:58"><expr pos:start="49:58" pos:end="49:58"><name pos:start="49:58" pos:end="49:58">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="51:1" pos:end="51:17">#<cpp:directive pos:start="51:2" pos:end="51:3">if</cpp:directive> <expr pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:17">CONFIG_GNUTLS</name></expr></cpp:if>

    <if_stmt pos:start="53:5" pos:end="68:0"><if pos:start="53:5" pos:end="61:5">if <condition pos:start="53:8" pos:end="53:28">(<expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:16">has_cert</name> <operator pos:start="53:18" pos:end="53:19">&amp;&amp;</operator> <name pos:start="53:21" pos:end="53:27">has_key</name></expr>)</condition> <block pos:start="53:30" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:66">

        <expr_stmt pos:start="55:9" pos:end="55:91"><expr pos:start="55:9" pos:end="55:90"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:90"><name pos:start="55:15" pos:end="55:50">gnutls_certificate_set_x509_key_file</name><argument_list pos:start="55:51" pos:end="55:90">(<argument pos:start="55:52" pos:end="55:58"><expr pos:start="55:52" pos:end="55:58"><name pos:start="55:52" pos:end="55:58"><name pos:start="55:52" pos:end="55:52">c</name><operator pos:start="55:53" pos:end="55:54">-&gt;</operator><name pos:start="55:55" pos:end="55:58">cred</name></name></expr></argument>, <argument pos:start="55:61" pos:end="55:63"><expr pos:start="55:61" pos:end="55:63"><name pos:start="55:61" pos:end="55:63">buf</name></expr></argument>, <argument pos:start="55:66" pos:end="55:68"><expr pos:start="55:66" pos:end="55:68"><name pos:start="55:66" pos:end="55:68">key</name></expr></argument>, <argument pos:start="55:71" pos:end="55:89"><expr pos:start="55:71" pos:end="55:89"><name pos:start="55:71" pos:end="55:89">GNUTLS_X509_FMT_PEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="59:66"><if pos:start="57:9" pos:end="59:66">if <condition pos:start="57:12" pos:end="57:20">(<expr pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">&lt;</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:66"><block_content pos:start="59:13" pos:end="59:66">

            <expr_stmt pos:start="59:13" pos:end="59:66"><expr pos:start="59:13" pos:end="59:65"><call pos:start="59:13" pos:end="59:65"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="59:65">(<argument pos:start="59:20" pos:end="59:20"><expr pos:start="59:20" pos:end="59:20"><name pos:start="59:20" pos:end="59:20">h</name></expr></argument>, <argument pos:start="59:23" pos:end="59:34"><expr pos:start="59:23" pos:end="59:34"><name pos:start="59:23" pos:end="59:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:37" pos:end="59:42"><expr pos:start="59:37" pos:end="59:42"><literal type="string" pos:start="59:37" pos:end="59:42">"%s\n"</literal></expr></argument>, <argument pos:start="59:45" pos:end="59:64"><expr pos:start="59:45" pos:end="59:64"><call pos:start="59:45" pos:end="59:64"><name pos:start="59:45" pos:end="59:59">gnutls_strerror</name><argument_list pos:start="59:60" pos:end="59:64">(<argument pos:start="59:61" pos:end="59:63"><expr pos:start="59:61" pos:end="59:63"><name pos:start="59:61" pos:end="59:63">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="61:7" pos:end="68:0">else if <condition pos:start="61:15" pos:end="61:34">(<expr pos:start="61:16" pos:end="61:33"><name pos:start="61:16" pos:end="61:23">has_cert</name> <operator pos:start="61:25" pos:end="61:25">^</operator> <name pos:start="61:27" pos:end="61:33">has_key</name></expr>)</condition> <block pos:start="61:36" pos:end="68:0">{<block_content pos:start="63:9" pos:end="63:59">

        <expr_stmt pos:start="63:9" pos:end="63:59"><expr pos:start="63:9" pos:end="63:58"><call pos:start="63:9" pos:end="63:58"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:58">(<argument pos:start="63:16" pos:end="63:16"><expr pos:start="63:16" pos:end="63:16"><name pos:start="63:16" pos:end="63:16">h</name></expr></argument>, <argument pos:start="63:19" pos:end="63:30"><expr pos:start="63:19" pos:end="63:30"><name pos:start="63:19" pos:end="63:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:33" pos:end="63:57"><expr pos:start="63:33" pos:end="63:57"><literal type="string" pos:start="63:33" pos:end="63:57">"cert and key required\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:elif pos:start="67:1" pos:end="67:20">#<cpp:directive pos:start="67:2" pos:end="67:5">elif</cpp:directive> <expr pos:start="67:7" pos:end="67:20"><name pos:start="67:7" pos:end="67:20">CONFIG_OPENSSL</name></expr></cpp:elif>

    <if_stmt pos:start="69:5" pos:end="71:116"><if pos:start="69:5" pos:end="71:116">if <condition pos:start="69:8" pos:end="69:69">(<expr pos:start="69:9" pos:end="69:68"><name pos:start="69:9" pos:end="69:16">has_cert</name> <operator pos:start="69:18" pos:end="69:19">&amp;&amp;</operator> <operator pos:start="69:21" pos:end="69:21">!</operator><call pos:start="69:22" pos:end="69:68"><name pos:start="69:22" pos:end="69:55">SSL_CTX_use_certificate_chain_file</name><argument_list pos:start="69:56" pos:end="69:68">(<argument pos:start="69:57" pos:end="69:62"><expr pos:start="69:57" pos:end="69:62"><name pos:start="69:57" pos:end="69:62"><name pos:start="69:57" pos:end="69:57">c</name><operator pos:start="69:58" pos:end="69:59">-&gt;</operator><name pos:start="69:60" pos:end="69:62">ctx</name></name></expr></argument>, <argument pos:start="69:65" pos:end="69:67"><expr pos:start="69:65" pos:end="69:67"><name pos:start="69:65" pos:end="69:67">buf</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:116"><block_content pos:start="71:9" pos:end="71:116">

        <expr_stmt pos:start="71:9" pos:end="71:116"><expr pos:start="71:9" pos:end="71:115"><call pos:start="71:9" pos:end="71:115"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:115">(<argument pos:start="71:16" pos:end="71:16"><expr pos:start="71:16" pos:end="71:16"><name pos:start="71:16" pos:end="71:16">h</name></expr></argument>, <argument pos:start="71:19" pos:end="71:30"><expr pos:start="71:19" pos:end="71:30"><name pos:start="71:19" pos:end="71:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:33" pos:end="71:73"><expr pos:start="71:33" pos:end="71:73"><literal type="string" pos:start="71:33" pos:end="71:73">"SSL_CTX_use_certificate_chain_file %s\n"</literal></expr></argument>, <argument pos:start="71:76" pos:end="71:114"><expr pos:start="71:76" pos:end="71:114"><call pos:start="71:76" pos:end="71:114"><name pos:start="71:76" pos:end="71:91">ERR_error_string</name><argument_list pos:start="71:92" pos:end="71:114">(<argument pos:start="71:93" pos:end="71:107"><expr pos:start="71:93" pos:end="71:107"><call pos:start="71:93" pos:end="71:107"><name pos:start="71:93" pos:end="71:105">ERR_get_error</name><argument_list pos:start="71:106" pos:end="71:107">()</argument_list></call></expr></argument>, <argument pos:start="71:110" pos:end="71:113"><expr pos:start="71:110" pos:end="71:113"><name pos:start="71:110" pos:end="71:113">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="78:0"><if pos:start="73:5" pos:end="78:0">if <condition pos:start="73:8" pos:end="73:79">(<expr pos:start="73:9" pos:end="73:78"><name pos:start="73:9" pos:end="73:15">has_key</name> <operator pos:start="73:17" pos:end="73:18">&amp;&amp;</operator> <operator pos:start="73:20" pos:end="73:20">!</operator><call pos:start="73:21" pos:end="73:78"><name pos:start="73:21" pos:end="73:47">SSL_CTX_use_PrivateKey_file</name><argument_list pos:start="73:48" pos:end="73:78">(<argument pos:start="73:49" pos:end="73:54"><expr pos:start="73:49" pos:end="73:54"><name pos:start="73:49" pos:end="73:54"><name pos:start="73:49" pos:end="73:49">c</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:54">ctx</name></name></expr></argument>, <argument pos:start="73:57" pos:end="73:59"><expr pos:start="73:57" pos:end="73:59"><name pos:start="73:57" pos:end="73:59">key</name></expr></argument>, <argument pos:start="73:62" pos:end="73:77"><expr pos:start="73:62" pos:end="73:77"><name pos:start="73:62" pos:end="73:77">SSL_FILETYPE_PEM</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="78:0"><block_content pos:start="75:9" pos:end="78:0">

        <expr_stmt pos:start="75:9" pos:end="78:0"><expr pos:start="75:9" pos:end="75:108"><call pos:start="75:9" pos:end="75:108"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="75:108">(<argument pos:start="75:16" pos:end="75:16"><expr pos:start="75:16" pos:end="75:16"><name pos:start="75:16" pos:end="75:16">h</name></expr></argument>, <argument pos:start="75:19" pos:end="75:30"><expr pos:start="75:19" pos:end="75:30"><name pos:start="75:19" pos:end="75:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:33" pos:end="75:66"><expr pos:start="75:33" pos:end="75:66"><literal type="string" pos:start="75:33" pos:end="75:66">"SSL_CTX_use_PrivateKey_file %s\n"</literal></expr></argument>, <argument pos:start="75:69" pos:end="75:107"><expr pos:start="75:69" pos:end="75:107"><call pos:start="75:69" pos:end="75:107"><name pos:start="75:69" pos:end="75:84">ERR_error_string</name><argument_list pos:start="75:85" pos:end="75:107">(<argument pos:start="75:86" pos:end="75:100"><expr pos:start="75:86" pos:end="75:100"><call pos:start="75:86" pos:end="75:100"><name pos:start="75:86" pos:end="75:98">ERR_get_error</name><argument_list pos:start="75:99" pos:end="75:100">()</argument_list></call></expr></argument>, <argument pos:start="75:103" pos:end="75:106"><expr pos:start="75:103" pos:end="75:106"><name pos:start="75:103" pos:end="75:106">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="77:1" pos:end="77:6">#<cpp:directive pos:start="77:2" pos:end="77:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
