<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2945.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">qdev_prop_check_globals</name><parameter_list pos:start="1:28" pos:end="1:33">(<parameter pos:start="1:29" pos:end="1:32"><decl pos:start="1:29" pos:end="1:32"><type pos:start="1:29" pos:end="1:32"><name pos:start="1:29" pos:end="1:32">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:15">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">GlobalProperty</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">prop</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>



    <macro pos:start="11:5" pos:end="11:45"><name pos:start="11:5" pos:end="11:18">QTAILQ_FOREACH</name><argument_list pos:start="11:19" pos:end="11:45">(<argument pos:start="11:20" pos:end="11:23">prop</argument>, <argument pos:start="11:26" pos:end="11:38">&amp;global_props</argument>, <argument pos:start="11:41" pos:end="11:44">next</argument>)</argument_list></macro> <block pos:start="11:47" pos:end="59:5">{<block_content pos:start="13:9" pos:end="57:9">

        <decl_stmt pos:start="13:9" pos:end="13:24"><decl pos:start="13:9" pos:end="13:23"><type pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:19">ObjectClass</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:23">oc</name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:24"><decl pos:start="15:9" pos:end="15:23"><type pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:19">DeviceClass</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:23">dc</name></decl>;</decl_stmt>

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:23">(<expr pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:16">prop</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:22">used</name></name></expr>)</condition> <block pos:start="17:25" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:21">

            <continue pos:start="19:13" pos:end="19:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:33">(<expr pos:start="23:13" pos:end="23:32"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:32"><name pos:start="23:14" pos:end="23:17">prop</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:32">user_provided</name></name></expr>)</condition> <block pos:start="23:35" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:21">

            <continue pos:start="25:13" pos:end="25:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:48"><expr pos:start="29:9" pos:end="29:47"><name pos:start="29:9" pos:end="29:10">oc</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:47"><name pos:start="29:14" pos:end="29:33">object_class_by_name</name><argument_list pos:start="29:34" pos:end="29:47">(<argument pos:start="29:35" pos:end="29:46"><expr pos:start="29:35" pos:end="29:46"><name pos:start="29:35" pos:end="29:46"><name pos:start="29:35" pos:end="29:38">prop</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:46">driver</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:56"><expr pos:start="31:9" pos:end="31:55"><name pos:start="31:9" pos:end="31:10">oc</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:55"><name pos:start="31:14" pos:end="31:38">object_class_dynamic_cast</name><argument_list pos:start="31:39" pos:end="31:55">(<argument pos:start="31:40" pos:end="31:41"><expr pos:start="31:40" pos:end="31:41"><name pos:start="31:40" pos:end="31:41">oc</name></expr></argument>, <argument pos:start="31:44" pos:end="31:54"><expr pos:start="31:44" pos:end="31:54"><name pos:start="31:44" pos:end="31:54">TYPE_DEVICE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="43:9"><if pos:start="33:9" pos:end="43:9">if <condition pos:start="33:12" pos:end="33:16">(<expr pos:start="33:13" pos:end="33:15"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:15">oc</name></expr>)</condition> <block pos:start="33:18" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:21">

            <expr_stmt pos:start="35:13" pos:end="37:53"><expr pos:start="35:13" pos:end="37:52"><call pos:start="35:13" pos:end="37:52"><name pos:start="35:13" pos:end="35:24">error_report</name><argument_list pos:start="35:25" pos:end="37:52">(<argument pos:start="35:26" pos:end="35:71"><expr pos:start="35:26" pos:end="35:71"><literal type="string" pos:start="35:26" pos:end="35:71">"Warning: global %s.%s has invalid class name"</literal></expr></argument>,

                       <argument pos:start="37:24" pos:end="37:35"><expr pos:start="37:24" pos:end="37:35"><name pos:start="37:24" pos:end="37:35"><name pos:start="37:24" pos:end="37:27">prop</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:35">driver</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:51"><expr pos:start="37:38" pos:end="37:51"><name pos:start="37:38" pos:end="37:51"><name pos:start="37:38" pos:end="37:41">prop</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:51">property</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:20"><expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <literal type="number" pos:start="39:19" pos:end="39:19">1</literal></expr>;</expr_stmt>

            <continue pos:start="41:13" pos:end="41:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:10">dc</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="45:29"><name pos:start="45:14" pos:end="45:25">DEVICE_CLASS</name><argument_list pos:start="45:26" pos:end="45:29">(<argument pos:start="45:27" pos:end="45:28"><expr pos:start="45:27" pos:end="45:28"><name pos:start="45:27" pos:end="45:28">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="57:9"><if pos:start="47:9" pos:end="57:9">if <condition pos:start="47:12" pos:end="47:45">(<expr pos:start="47:13" pos:end="47:44"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:29"><name pos:start="47:14" pos:end="47:15">dc</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:29">hotpluggable</name></name> <operator pos:start="47:31" pos:end="47:32">&amp;&amp;</operator> <operator pos:start="47:34" pos:end="47:34">!</operator><name pos:start="47:35" pos:end="47:44"><name pos:start="47:35" pos:end="47:38">prop</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:44">used</name></name></expr>)</condition> <block pos:start="47:47" pos:end="57:9">{<block_content pos:start="49:13" pos:end="55:21">

            <expr_stmt pos:start="49:13" pos:end="51:66"><expr pos:start="49:13" pos:end="51:65"><call pos:start="49:13" pos:end="51:65"><name pos:start="49:13" pos:end="49:24">error_report</name><argument_list pos:start="49:25" pos:end="51:65">(<argument pos:start="49:26" pos:end="49:60"><expr pos:start="49:26" pos:end="49:60"><literal type="string" pos:start="49:26" pos:end="49:60">"Warning: global %s.%s=%s not used"</literal></expr></argument>,

                       <argument pos:start="51:24" pos:end="51:35"><expr pos:start="51:24" pos:end="51:35"><name pos:start="51:24" pos:end="51:35"><name pos:start="51:24" pos:end="51:27">prop</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:35">driver</name></name></expr></argument>, <argument pos:start="51:38" pos:end="51:51"><expr pos:start="51:38" pos:end="51:51"><name pos:start="51:38" pos:end="51:51"><name pos:start="51:38" pos:end="51:41">prop</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:51">property</name></name></expr></argument>, <argument pos:start="51:54" pos:end="51:64"><expr pos:start="51:54" pos:end="51:64"><name pos:start="51:54" pos:end="51:64"><name pos:start="51:54" pos:end="51:57">prop</name><operator pos:start="51:58" pos:end="51:59">-&gt;</operator><name pos:start="51:60" pos:end="51:64">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:20"><expr pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <literal type="number" pos:start="53:19" pos:end="53:19">1</literal></expr>;</expr_stmt>

            <continue pos:start="55:13" pos:end="55:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <return pos:start="61:5" pos:end="61:15">return <expr pos:start="61:12" pos:end="61:14"><name pos:start="61:12" pos:end="61:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
