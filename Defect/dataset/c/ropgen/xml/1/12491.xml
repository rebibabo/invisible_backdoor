<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12491.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">vtd_handle_gcmd_qie</name><parameter_list pos:start="1:32" pos:end="1:60">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:47">IntelIOMMUState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:59"><decl pos:start="1:53" pos:end="1:59"><type pos:start="1:53" pos:end="1:59"><name pos:start="1:53" pos:end="1:56">bool</name></type> <name pos:start="1:58" pos:end="1:59">en</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:5">

    <decl_stmt pos:start="5:5" pos:end="5:57"><decl pos:start="5:5" pos:end="5:56"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:20">iqa_val</name> <init pos:start="5:22" pos:end="5:56">= <expr pos:start="5:24" pos:end="5:56"><call pos:start="5:24" pos:end="5:56"><name pos:start="5:24" pos:end="5:39">vtd_get_quad_raw</name><argument_list pos:start="5:40" pos:end="5:56">(<argument pos:start="5:41" pos:end="5:41"><expr pos:start="5:41" pos:end="5:41"><name pos:start="5:41" pos:end="5:41">s</name></expr></argument>, <argument pos:start="5:44" pos:end="5:55"><expr pos:start="5:44" pos:end="5:55"><name pos:start="5:44" pos:end="5:55">DMAR_IQA_REG</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:32"><expr pos:start="9:5" pos:end="9:31"><call pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:27">trace_vtd_inv_qi_enable</name><argument_list pos:start="9:28" pos:end="9:31">(<argument pos:start="9:29" pos:end="9:30"><expr pos:start="9:29" pos:end="9:30"><name pos:start="9:29" pos:end="9:30">en</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="59:5"><if pos:start="13:5" pos:end="37:5">if <condition pos:start="13:8" pos:end="13:11">(<expr pos:start="13:9" pos:end="13:10"><name pos:start="13:9" pos:end="13:10">en</name></expr>)</condition> <block pos:start="13:13" pos:end="37:5">{<block_content pos:start="15:9" pos:end="35:9">

        <if_stmt pos:start="15:9" pos:end="35:9"><if pos:start="15:9" pos:end="31:9">if <condition pos:start="15:12" pos:end="15:43">(<expr pos:start="15:13" pos:end="15:42"><call pos:start="15:13" pos:end="15:42"><name pos:start="15:13" pos:end="15:39">vtd_queued_inv_enable_check</name><argument_list pos:start="15:40" pos:end="15:42">(<argument pos:start="15:41" pos:end="15:41"><expr pos:start="15:41" pos:end="15:41"><name pos:start="15:41" pos:end="15:41">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:45" pos:end="31:9">{<block_content pos:start="17:13" pos:end="29:72">

            <expr_stmt pos:start="17:13" pos:end="17:47"><expr pos:start="17:13" pos:end="17:46"><name pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:17">iq</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:27">iqa_val</name> <operator pos:start="17:29" pos:end="17:29">&amp;</operator> <name pos:start="17:31" pos:end="17:46">VTD_IQA_IQA_MASK</name></expr>;</expr_stmt>

            <comment type="block" pos:start="19:13" pos:end="19:33">/* 2^(x+8) entries */</comment>

            <expr_stmt pos:start="21:13" pos:end="21:61"><expr pos:start="21:13" pos:end="21:60"><name pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:22">iq_size</name></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <literal type="number" pos:start="21:26" pos:end="21:28">1UL</literal> <operator pos:start="21:30" pos:end="21:31">&lt;&lt;</operator> <operator pos:start="21:33" pos:end="21:33">(</operator><operator pos:start="21:34" pos:end="21:34">(</operator><name pos:start="21:35" pos:end="21:41">iqa_val</name> <operator pos:start="21:43" pos:end="21:43">&amp;</operator> <name pos:start="21:45" pos:end="21:54">VTD_IQA_QS</name><operator pos:start="21:55" pos:end="21:55">)</operator> <operator pos:start="21:57" pos:end="21:57">+</operator> <literal type="number" pos:start="21:59" pos:end="21:59">8</literal><operator pos:start="21:60" pos:end="21:60">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:33"><expr pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:25">qi_enabled</name></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <name pos:start="23:29" pos:end="23:32">true</name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:54"><expr pos:start="25:13" pos:end="25:53"><call pos:start="25:13" pos:end="25:53"><name pos:start="25:13" pos:end="25:34">trace_vtd_inv_qi_setup</name><argument_list pos:start="25:35" pos:end="25:53">(<argument pos:start="25:36" pos:end="25:40"><expr pos:start="25:36" pos:end="25:40"><name pos:start="25:36" pos:end="25:40"><name pos:start="25:36" pos:end="25:36">s</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:40">iq</name></name></expr></argument>, <argument pos:start="25:43" pos:end="25:52"><expr pos:start="25:43" pos:end="25:52"><name pos:start="25:43" pos:end="25:52"><name pos:start="25:43" pos:end="25:43">s</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:52">iq_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="27:13" pos:end="27:44">/* Ok - report back to driver */</comment>

            <expr_stmt pos:start="29:13" pos:end="29:72"><expr pos:start="29:13" pos:end="29:71"><call pos:start="29:13" pos:end="29:71"><name pos:start="29:13" pos:end="29:35">vtd_set_clear_mask_long</name><argument_list pos:start="29:36" pos:end="29:71">(<argument pos:start="29:37" pos:end="29:37"><expr pos:start="29:37" pos:end="29:37"><name pos:start="29:37" pos:end="29:37">s</name></expr></argument>, <argument pos:start="29:40" pos:end="29:52"><expr pos:start="29:40" pos:end="29:52"><name pos:start="29:40" pos:end="29:52">DMAR_GSTS_REG</name></expr></argument>, <argument pos:start="29:55" pos:end="29:55"><expr pos:start="29:55" pos:end="29:55"><literal type="number" pos:start="29:55" pos:end="29:55">0</literal></expr></argument>, <argument pos:start="29:58" pos:end="29:70"><expr pos:start="29:58" pos:end="29:70"><name pos:start="29:58" pos:end="29:70">VTD_GSTS_QIES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="35:9">else <block pos:start="31:16" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:48">

            <expr_stmt pos:start="33:13" pos:end="33:48"><expr pos:start="33:13" pos:end="33:47"><call pos:start="33:13" pos:end="33:47"><name pos:start="33:13" pos:end="33:35">trace_vtd_err_qi_enable</name><argument_list pos:start="33:36" pos:end="33:47">(<argument pos:start="33:37" pos:end="33:46"><expr pos:start="33:37" pos:end="33:46"><name pos:start="33:37" pos:end="33:46"><name pos:start="33:37" pos:end="33:37">s</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:46">iq_tail</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="59:5">else <block pos:start="37:12" pos:end="59:5">{<block_content pos:start="39:9" pos:end="57:9">

        <if_stmt pos:start="39:9" pos:end="57:9"><if pos:start="39:9" pos:end="53:9">if <condition pos:start="39:12" pos:end="39:44">(<expr pos:start="39:13" pos:end="39:43"><call pos:start="39:13" pos:end="39:43"><name pos:start="39:13" pos:end="39:40">vtd_queued_inv_disable_check</name><argument_list pos:start="39:41" pos:end="39:43">(<argument pos:start="39:42" pos:end="39:42"><expr pos:start="39:42" pos:end="39:42"><name pos:start="39:42" pos:end="39:42">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:46" pos:end="53:9">{<block_content pos:start="43:13" pos:end="51:72">

            <comment type="block" pos:start="41:13" pos:end="41:45">/* disable Queued Invalidation */</comment>

            <expr_stmt pos:start="43:13" pos:end="43:49"><expr pos:start="43:13" pos:end="43:48"><call pos:start="43:13" pos:end="43:48"><name pos:start="43:13" pos:end="43:28">vtd_set_quad_raw</name><argument_list pos:start="43:29" pos:end="43:48">(<argument pos:start="43:30" pos:end="43:30"><expr pos:start="43:30" pos:end="43:30"><name pos:start="43:30" pos:end="43:30">s</name></expr></argument>, <argument pos:start="43:33" pos:end="43:44"><expr pos:start="43:33" pos:end="43:44"><name pos:start="43:33" pos:end="43:44">DMAR_IQH_REG</name></expr></argument>, <argument pos:start="43:47" pos:end="43:47"><expr pos:start="43:47" pos:end="43:47"><literal type="number" pos:start="43:47" pos:end="43:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:27"><expr pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:22">iq_head</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:34"><expr pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:25">qi_enabled</name></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:33">false</name></expr>;</expr_stmt>

            <comment type="block" pos:start="49:13" pos:end="49:44">/* Ok - report back to driver */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:72"><expr pos:start="51:13" pos:end="51:71"><call pos:start="51:13" pos:end="51:71"><name pos:start="51:13" pos:end="51:35">vtd_set_clear_mask_long</name><argument_list pos:start="51:36" pos:end="51:71">(<argument pos:start="51:37" pos:end="51:37"><expr pos:start="51:37" pos:end="51:37"><name pos:start="51:37" pos:end="51:37">s</name></expr></argument>, <argument pos:start="51:40" pos:end="51:52"><expr pos:start="51:40" pos:end="51:52"><name pos:start="51:40" pos:end="51:52">DMAR_GSTS_REG</name></expr></argument>, <argument pos:start="51:55" pos:end="51:67"><expr pos:start="51:55" pos:end="51:67"><name pos:start="51:55" pos:end="51:67">VTD_GSTS_QIES</name></expr></argument>, <argument pos:start="51:70" pos:end="51:70"><expr pos:start="51:70" pos:end="51:70"><literal type="number" pos:start="51:70" pos:end="51:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="57:9">else <block pos:start="53:16" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:83">

            <expr_stmt pos:start="55:13" pos:end="55:83"><expr pos:start="55:13" pos:end="55:82"><call pos:start="55:13" pos:end="55:82"><name pos:start="55:13" pos:end="55:36">trace_vtd_err_qi_disable</name><argument_list pos:start="55:37" pos:end="55:82">(<argument pos:start="55:38" pos:end="55:47"><expr pos:start="55:38" pos:end="55:47"><name pos:start="55:38" pos:end="55:47"><name pos:start="55:38" pos:end="55:38">s</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:47">iq_head</name></name></expr></argument>, <argument pos:start="55:50" pos:end="55:59"><expr pos:start="55:50" pos:end="55:59"><name pos:start="55:50" pos:end="55:59"><name pos:start="55:50" pos:end="55:50">s</name><operator pos:start="55:51" pos:end="55:52">-&gt;</operator><name pos:start="55:53" pos:end="55:59">iq_tail</name></name></expr></argument>, <argument pos:start="55:62" pos:end="55:81"><expr pos:start="55:62" pos:end="55:81"><name pos:start="55:62" pos:end="55:81"><name pos:start="55:62" pos:end="55:62">s</name><operator pos:start="55:63" pos:end="55:64">-&gt;</operator><name pos:start="55:65" pos:end="55:81">iq_last_desc_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
