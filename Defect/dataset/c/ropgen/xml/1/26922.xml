<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26922.c" pos:tabs="8"><function pos:start="1:1" pos:end="126:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">decode_ref_pic_marking</name><parameter_list pos:start="1:34" pos:end="1:68">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:45">H264Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">h</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:67"><decl pos:start="1:51" pos:end="1:67"><type pos:start="1:51" pos:end="1:67"><name pos:start="1:51" pos:end="1:63">GetBitContext</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:67">gb</name></decl></parameter>)</parameter_list><block pos:start="1:69" pos:end="126:1">{<block_content pos:start="3:5" pos:end="124:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>




    <if_stmt pos:start="10:5" pos:end="120:5"><if pos:start="10:5" pos:end="27:5">if<condition pos:start="10:7" pos:end="10:41">(<expr pos:start="10:8" pos:end="10:40"><name pos:start="10:8" pos:end="10:23"><name pos:start="10:8" pos:end="10:8">h</name><operator pos:start="10:9" pos:end="10:10">-&gt;</operator><name pos:start="10:11" pos:end="10:23">nal_unit_type</name></name> <operator pos:start="10:25" pos:end="10:26">==</operator> <name pos:start="10:28" pos:end="10:40">NAL_IDR_SLICE</name></expr>)</condition><block pos:start="10:42" pos:end="27:5">{<block_content pos:start="12:9" pos:end="25:9"> <comment type="line" pos:start="10:44" pos:end="10:57">//FIXME fields</comment>

        <expr_stmt pos:start="12:9" pos:end="12:41"><expr pos:start="12:9" pos:end="12:40"><name pos:start="12:9" pos:end="12:22"><name pos:start="12:9" pos:end="12:9">s</name><operator pos:start="12:10" pos:end="12:11">-&gt;</operator><name pos:start="12:12" pos:end="12:22">broken_link</name></name><operator pos:start="12:23" pos:end="12:23">=</operator> <call pos:start="12:25" pos:end="12:37"><name pos:start="12:25" pos:end="12:33">get_bits1</name><argument_list pos:start="12:34" pos:end="12:37">(<argument pos:start="12:35" pos:end="12:36"><expr pos:start="12:35" pos:end="12:36"><name pos:start="12:35" pos:end="12:36">gb</name></expr></argument>)</argument_list></call> <operator pos:start="12:39" pos:end="12:39">-</operator><literal type="number" pos:start="12:40" pos:end="12:40">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="14:9" pos:end="14:47"><expr pos:start="14:9" pos:end="14:46"><name pos:start="14:9" pos:end="14:18"><name pos:start="14:9" pos:end="14:9">h</name><operator pos:start="14:10" pos:end="14:11">-&gt;</operator><name pos:start="14:12" pos:end="14:15">mmco</name><index pos:start="14:16" pos:end="14:18">[<expr pos:start="14:17" pos:end="14:17"><literal type="number" pos:start="14:17" pos:end="14:17">0</literal></expr>]</index></name><operator pos:start="14:19" pos:end="14:19">.</operator><name pos:start="14:20" pos:end="14:27">long_arg</name><operator pos:start="14:28" pos:end="14:28">=</operator> <call pos:start="14:30" pos:end="14:42"><name pos:start="14:30" pos:end="14:38">get_bits1</name><argument_list pos:start="14:39" pos:end="14:42">(<argument pos:start="14:40" pos:end="14:41"><expr pos:start="14:40" pos:end="14:41"><name pos:start="14:40" pos:end="14:41">gb</name></expr></argument>)</argument_list></call> <operator pos:start="14:44" pos:end="14:44">-</operator> <literal type="number" pos:start="14:46" pos:end="14:46">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="14:49" pos:end="14:72">// current_long_term_idx</comment>

        <if_stmt pos:start="16:9" pos:end="25:9"><if pos:start="16:9" pos:end="25:9">if<condition pos:start="16:11" pos:end="16:37">(<expr pos:start="16:12" pos:end="16:36"><name pos:start="16:12" pos:end="16:21"><name pos:start="16:12" pos:end="16:12">h</name><operator pos:start="16:13" pos:end="16:14">-&gt;</operator><name pos:start="16:15" pos:end="16:18">mmco</name><index pos:start="16:19" pos:end="16:21">[<expr pos:start="16:20" pos:end="16:20"><literal type="number" pos:start="16:20" pos:end="16:20">0</literal></expr>]</index></name><operator pos:start="16:22" pos:end="16:22">.</operator><name pos:start="16:23" pos:end="16:30">long_arg</name> <operator pos:start="16:32" pos:end="16:33">==</operator> <operator pos:start="16:35" pos:end="16:35">-</operator><literal type="number" pos:start="16:36" pos:end="16:36">1</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="25:9"><block_content pos:start="19:9" pos:end="25:9">


        <if_stmt pos:start="19:9" pos:end="25:9"><else pos:start="19:9" pos:end="25:9">else<block pos:start="19:13" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:29">

            <expr_stmt pos:start="21:13" pos:end="21:41"><expr pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:13">h</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:19">mmco</name><index pos:start="21:20" pos:end="21:22">[<expr pos:start="21:21" pos:end="21:21"><literal type="number" pos:start="21:21" pos:end="21:21">0</literal></expr>]</index></name><operator pos:start="21:23" pos:end="21:23">.</operator><name pos:start="21:24" pos:end="21:29">opcode</name><operator pos:start="21:30" pos:end="21:30">=</operator> <name pos:start="21:32" pos:end="21:40">MMCO_LONG</name></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:29"><expr pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:13">h</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:25">mmco_index</name></name><operator pos:start="23:26" pos:end="23:26">=</operator> <literal type="number" pos:start="23:28" pos:end="23:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if><else pos:start="27:6" pos:end="120:5">else<block pos:start="27:10" pos:end="120:5">{<block_content pos:start="29:9" pos:end="118:9">

        <if_stmt pos:start="29:9" pos:end="118:9"><if pos:start="29:9" pos:end="87:9">if<condition pos:start="29:11" pos:end="29:25">(<expr pos:start="29:12" pos:end="29:24"><call pos:start="29:12" pos:end="29:24"><name pos:start="29:12" pos:end="29:20">get_bits1</name><argument_list pos:start="29:21" pos:end="29:24">(<argument pos:start="29:22" pos:end="29:23"><expr pos:start="29:22" pos:end="29:23"><name pos:start="29:22" pos:end="29:23">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="29:26" pos:end="87:9">{<block_content pos:start="31:13" pos:end="85:29"> <comment type="line" pos:start="29:28" pos:end="29:64">// adaptive_ref_pic_marking_mode_flag</comment>

            <for pos:start="31:13" pos:end="83:13">for<control pos:start="31:16" pos:end="31:44">(<init pos:start="31:17" pos:end="31:21"><expr pos:start="31:17" pos:end="31:20"><name pos:start="31:17" pos:end="31:17">i</name><operator pos:start="31:18" pos:end="31:18">=</operator> <literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>;</init> <condition pos:start="31:23" pos:end="31:39"><expr pos:start="31:23" pos:end="31:38"><name pos:start="31:23" pos:end="31:23">i</name><operator pos:start="31:24" pos:end="31:24">&lt;</operator><name pos:start="31:25" pos:end="31:38">MAX_MMCO_COUNT</name></expr>;</condition> <incr pos:start="31:41" pos:end="31:43"><expr pos:start="31:41" pos:end="31:43"><name pos:start="31:41" pos:end="31:41">i</name><operator pos:start="31:42" pos:end="31:43">++</operator></expr></incr>)</control> <block pos:start="31:46" pos:end="83:13">{<block_content pos:start="33:17" pos:end="81:26">

                <decl_stmt pos:start="33:17" pos:end="33:53"><decl pos:start="33:17" pos:end="33:52"><type pos:start="33:17" pos:end="33:26"><name pos:start="33:17" pos:end="33:26">MMCOOpcode</name></type> <name pos:start="33:28" pos:end="33:33">opcode</name><init pos:start="33:34" pos:end="33:52">= <expr pos:start="33:36" pos:end="33:52"><call pos:start="33:36" pos:end="33:52"><name pos:start="33:36" pos:end="33:48">get_ue_golomb</name><argument_list pos:start="33:49" pos:end="33:52">(<argument pos:start="33:50" pos:end="33:51"><expr pos:start="33:50" pos:end="33:51"><name pos:start="33:50" pos:end="33:51">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="37:17" pos:end="37:42"><expr pos:start="37:17" pos:end="37:41"><name pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:17">h</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:23">mmco</name><index pos:start="37:24" pos:end="37:26">[<expr pos:start="37:25" pos:end="37:25"><name pos:start="37:25" pos:end="37:25">i</name></expr>]</index></name><operator pos:start="37:27" pos:end="37:27">.</operator><name pos:start="37:28" pos:end="37:33">opcode</name><operator pos:start="37:34" pos:end="37:34">=</operator> <name pos:start="37:36" pos:end="37:41">opcode</name></expr>;</expr_stmt>

                <if_stmt pos:start="39:17" pos:end="51:17"><if pos:start="39:17" pos:end="51:17">if<condition pos:start="39:19" pos:end="39:72">(<expr pos:start="39:20" pos:end="39:71"><name pos:start="39:20" pos:end="39:25">opcode</name><operator pos:start="39:26" pos:end="39:27">==</operator><name pos:start="39:28" pos:end="39:44">MMCO_SHORT2UNUSED</name> <operator pos:start="39:46" pos:end="39:47">||</operator> <name pos:start="39:49" pos:end="39:54">opcode</name><operator pos:start="39:55" pos:end="39:56">==</operator><name pos:start="39:57" pos:end="39:71">MMCO_SHORT2LONG</name></expr>)</condition><block pos:start="39:73" pos:end="51:17">{<block_content pos:start="41:21" pos:end="41:111">

                    <expr_stmt pos:start="41:21" pos:end="41:111"><expr pos:start="41:21" pos:end="41:110"><name pos:start="41:21" pos:end="41:30"><name pos:start="41:21" pos:end="41:21">h</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:27">mmco</name><index pos:start="41:28" pos:end="41:30">[<expr pos:start="41:29" pos:end="41:29"><name pos:start="41:29" pos:end="41:29">i</name></expr>]</index></name><operator pos:start="41:31" pos:end="41:31">.</operator><name pos:start="41:32" pos:end="41:44">short_pic_num</name><operator pos:start="41:45" pos:end="41:45">=</operator> <operator pos:start="41:47" pos:end="41:47">(</operator><name pos:start="41:48" pos:end="41:62"><name pos:start="41:48" pos:end="41:48">h</name><operator pos:start="41:49" pos:end="41:50">-&gt;</operator><name pos:start="41:51" pos:end="41:62">curr_pic_num</name></name> <operator pos:start="41:64" pos:end="41:64">-</operator> <call pos:start="41:66" pos:end="41:82"><name pos:start="41:66" pos:end="41:78">get_ue_golomb</name><argument_list pos:start="41:79" pos:end="41:82">(<argument pos:start="41:80" pos:end="41:81"><expr pos:start="41:80" pos:end="41:81"><name pos:start="41:80" pos:end="41:81">gb</name></expr></argument>)</argument_list></call> <operator pos:start="41:84" pos:end="41:84">-</operator> <literal type="number" pos:start="41:86" pos:end="41:86">1</literal><operator pos:start="41:87" pos:end="41:87">)</operator> <operator pos:start="41:89" pos:end="41:89">&amp;</operator> <operator pos:start="41:91" pos:end="41:91">(</operator><name pos:start="41:92" pos:end="41:105"><name pos:start="41:92" pos:end="41:92">h</name><operator pos:start="41:93" pos:end="41:94">-&gt;</operator><name pos:start="41:95" pos:end="41:105">max_pic_num</name></name> <operator pos:start="41:107" pos:end="41:107">-</operator> <literal type="number" pos:start="41:109" pos:end="41:109">1</literal><operator pos:start="41:110" pos:end="41:110">)</operator></expr>;</expr_stmt>

<comment type="block" pos:start="43:1" pos:end="49:23">/*                    if(h-&gt;mmco[i].short_pic_num &gt;= h-&gt;short_ref_count || h-&gt;short_ref[ h-&gt;mmco[i].short_pic_num ] == NULL){

                        av_log(s-&gt;avctx, AV_LOG_ERROR, "illegal short ref in memory management control operation %d\n", mmco);

                        return -1;

                    }*/</comment>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="53:17" pos:end="67:17"><if pos:start="53:17" pos:end="67:17">if<condition pos:start="53:19" pos:end="53:121">(<expr pos:start="53:20" pos:end="53:120"><name pos:start="53:20" pos:end="53:25">opcode</name><operator pos:start="53:26" pos:end="53:27">==</operator><name pos:start="53:28" pos:end="53:42">MMCO_SHORT2LONG</name> <operator pos:start="53:44" pos:end="53:45">||</operator> <name pos:start="53:47" pos:end="53:52">opcode</name><operator pos:start="53:53" pos:end="53:54">==</operator><name pos:start="53:55" pos:end="53:70">MMCO_LONG2UNUSED</name> <operator pos:start="53:72" pos:end="53:73">||</operator> <name pos:start="53:75" pos:end="53:80">opcode</name><operator pos:start="53:81" pos:end="53:82">==</operator><name pos:start="53:83" pos:end="53:91">MMCO_LONG</name> <operator pos:start="53:93" pos:end="53:94">||</operator> <name pos:start="53:96" pos:end="53:101">opcode</name><operator pos:start="53:102" pos:end="53:103">==</operator><name pos:start="53:104" pos:end="53:120">MMCO_SET_MAX_LONG</name></expr>)</condition><block pos:start="53:122" pos:end="67:17">{<block_content pos:start="55:21" pos:end="65:50">

                    <decl_stmt pos:start="55:21" pos:end="55:61"><decl pos:start="55:21" pos:end="55:60"><type pos:start="55:21" pos:end="55:32"><name pos:start="55:21" pos:end="55:28">unsigned</name> <name pos:start="55:30" pos:end="55:32">int</name></type> <name pos:start="55:34" pos:end="55:41">long_arg</name><init pos:start="55:42" pos:end="55:60">= <expr pos:start="55:44" pos:end="55:60"><call pos:start="55:44" pos:end="55:60"><name pos:start="55:44" pos:end="55:56">get_ue_golomb</name><argument_list pos:start="55:57" pos:end="55:60">(<argument pos:start="55:58" pos:end="55:59"><expr pos:start="55:58" pos:end="55:59"><name pos:start="55:58" pos:end="55:59">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="57:21" pos:end="63:21"><if pos:start="57:21" pos:end="63:21">if<condition pos:start="57:23" pos:end="57:108">(<expr pos:start="57:24" pos:end="57:107"><name pos:start="57:24" pos:end="57:31">long_arg</name> <operator pos:start="57:33" pos:end="57:34">&gt;=</operator> <literal type="number" pos:start="57:36" pos:end="57:37">32</literal> <operator pos:start="57:39" pos:end="57:40">||</operator> <operator pos:start="57:42" pos:end="57:42">(</operator><name pos:start="57:43" pos:end="57:50">long_arg</name> <operator pos:start="57:52" pos:end="57:53">&gt;=</operator> <literal type="number" pos:start="57:55" pos:end="57:56">16</literal> <operator pos:start="57:58" pos:end="57:59">&amp;&amp;</operator> <operator pos:start="57:61" pos:end="57:61">!</operator><operator pos:start="57:62" pos:end="57:62">(</operator><name pos:start="57:63" pos:end="57:68">opcode</name> <operator pos:start="57:70" pos:end="57:71">==</operator> <name pos:start="57:73" pos:end="57:88">MMCO_LONG2UNUSED</name> <operator pos:start="57:90" pos:end="57:91">&amp;&amp;</operator> <name pos:start="57:93" pos:end="57:105">FIELD_PICTURE</name><operator pos:start="57:106" pos:end="57:106">)</operator><operator pos:start="57:107" pos:end="57:107">)</operator></expr>)</condition><block pos:start="57:109" pos:end="63:21">{<block_content pos:start="59:25" pos:end="61:34">

                        <expr_stmt pos:start="59:25" pos:end="59:129"><expr pos:start="59:25" pos:end="59:128"><call pos:start="59:25" pos:end="59:128"><name pos:start="59:25" pos:end="59:30">av_log</name><argument_list pos:start="59:31" pos:end="59:128">(<argument pos:start="59:32" pos:end="59:41"><expr pos:start="59:32" pos:end="59:41"><name pos:start="59:32" pos:end="59:41"><name pos:start="59:32" pos:end="59:32">h</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:35">s</name><operator pos:start="59:36" pos:end="59:36">.</operator><name pos:start="59:37" pos:end="59:41">avctx</name></name></expr></argument>, <argument pos:start="59:44" pos:end="59:55"><expr pos:start="59:44" pos:end="59:55"><name pos:start="59:44" pos:end="59:55">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:58" pos:end="59:119"><expr pos:start="59:58" pos:end="59:119"><literal type="string" pos:start="59:58" pos:end="59:119">"illegal long ref in memory management control operation %d\n"</literal></expr></argument>, <argument pos:start="59:122" pos:end="59:127"><expr pos:start="59:122" pos:end="59:127"><name pos:start="59:122" pos:end="59:127">opcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="61:25" pos:end="61:34">return <expr pos:start="61:32" pos:end="61:33"><operator pos:start="61:32" pos:end="61:32">-</operator><literal type="number" pos:start="61:33" pos:end="61:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:50"><expr pos:start="65:21" pos:end="65:49"><name pos:start="65:21" pos:end="65:30"><name pos:start="65:21" pos:end="65:21">h</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:27">mmco</name><index pos:start="65:28" pos:end="65:30">[<expr pos:start="65:29" pos:end="65:29"><name pos:start="65:29" pos:end="65:29">i</name></expr>]</index></name><operator pos:start="65:31" pos:end="65:31">.</operator><name pos:start="65:32" pos:end="65:39">long_arg</name><operator pos:start="65:40" pos:end="65:40">=</operator> <name pos:start="65:42" pos:end="65:49">long_arg</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="71:17" pos:end="77:17"><if pos:start="71:17" pos:end="77:17">if<condition pos:start="71:19" pos:end="71:48">(<expr pos:start="71:20" pos:end="71:47"><name pos:start="71:20" pos:end="71:25">opcode</name> <operator pos:start="71:27" pos:end="71:27">&gt;</operator> <operator pos:start="71:29" pos:end="71:29">(</operator><name pos:start="71:30" pos:end="71:37">unsigned</name><operator pos:start="71:38" pos:end="71:38">)</operator><name pos:start="71:39" pos:end="71:47">MMCO_LONG</name></expr>)</condition><block pos:start="71:49" pos:end="77:17">{<block_content pos:start="73:21" pos:end="75:30">

                    <expr_stmt pos:start="73:21" pos:end="73:113"><expr pos:start="73:21" pos:end="73:112"><call pos:start="73:21" pos:end="73:112"><name pos:start="73:21" pos:end="73:26">av_log</name><argument_list pos:start="73:27" pos:end="73:112">(<argument pos:start="73:28" pos:end="73:37"><expr pos:start="73:28" pos:end="73:37"><name pos:start="73:28" pos:end="73:37"><name pos:start="73:28" pos:end="73:28">h</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:31">s</name><operator pos:start="73:32" pos:end="73:32">.</operator><name pos:start="73:33" pos:end="73:37">avctx</name></name></expr></argument>, <argument pos:start="73:40" pos:end="73:51"><expr pos:start="73:40" pos:end="73:51"><name pos:start="73:40" pos:end="73:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:54" pos:end="73:103"><expr pos:start="73:54" pos:end="73:103"><literal type="string" pos:start="73:54" pos:end="73:103">"illegal memory management control operation %d\n"</literal></expr></argument>, <argument pos:start="73:106" pos:end="73:111"><expr pos:start="73:106" pos:end="73:111"><name pos:start="73:106" pos:end="73:111">opcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="75:21" pos:end="75:30">return <expr pos:start="75:28" pos:end="75:29"><operator pos:start="75:28" pos:end="75:28">-</operator><literal type="number" pos:start="75:29" pos:end="75:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="79:17" pos:end="81:26"><if pos:start="79:17" pos:end="81:26">if<condition pos:start="79:19" pos:end="79:38">(<expr pos:start="79:20" pos:end="79:37"><name pos:start="79:20" pos:end="79:25">opcode</name> <operator pos:start="79:27" pos:end="79:28">==</operator> <name pos:start="79:30" pos:end="79:37">MMCO_END</name></expr>)</condition><block type="pseudo" pos:start="81:21" pos:end="81:26"><block_content pos:start="81:21" pos:end="81:26">

                    <break pos:start="81:21" pos:end="81:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="85:13" pos:end="85:29"><expr pos:start="85:13" pos:end="85:28"><name pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:13">h</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:25">mmco_index</name></name><operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:28">i</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="87:10" pos:end="118:9">else<block pos:start="87:14" pos:end="118:9">{<block_content pos:start="89:13" pos:end="115:17">

            <expr_stmt pos:start="89:13" pos:end="89:85"><expr pos:start="89:13" pos:end="89:84"><call pos:start="89:13" pos:end="89:84"><name pos:start="89:13" pos:end="89:18">assert</name><argument_list pos:start="89:19" pos:end="89:84">(<argument pos:start="89:20" pos:end="89:83"><expr pos:start="89:20" pos:end="89:83"><name pos:start="89:20" pos:end="89:36"><name pos:start="89:20" pos:end="89:20">h</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:36">long_ref_count</name></name> <operator pos:start="89:38" pos:end="89:38">+</operator> <name pos:start="89:40" pos:end="89:57"><name pos:start="89:40" pos:end="89:40">h</name><operator pos:start="89:41" pos:end="89:42">-&gt;</operator><name pos:start="89:43" pos:end="89:57">short_ref_count</name></name> <operator pos:start="89:59" pos:end="89:60">&lt;=</operator> <name pos:start="89:62" pos:end="89:83"><name pos:start="89:62" pos:end="89:62">h</name><operator pos:start="89:63" pos:end="89:64">-&gt;</operator><name pos:start="89:65" pos:end="89:67">sps</name><operator pos:start="89:68" pos:end="89:68">.</operator><name pos:start="89:69" pos:end="89:83">ref_frame_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="93:13" pos:end="115:17"><if pos:start="93:13" pos:end="115:13">if<condition pos:start="93:15" pos:end="95:93">(<expr pos:start="93:16" pos:end="95:92"><name pos:start="93:16" pos:end="93:33"><name pos:start="93:16" pos:end="93:16">h</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:33">short_ref_count</name></name> <operator pos:start="93:35" pos:end="93:36">&amp;&amp;</operator> <name pos:start="93:38" pos:end="93:54"><name pos:start="93:38" pos:end="93:38">h</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:54">long_ref_count</name></name> <operator pos:start="93:56" pos:end="93:56">+</operator> <name pos:start="93:58" pos:end="93:75"><name pos:start="93:58" pos:end="93:58">h</name><operator pos:start="93:59" pos:end="93:60">-&gt;</operator><name pos:start="93:61" pos:end="93:75">short_ref_count</name></name> <operator pos:start="93:77" pos:end="93:78">==</operator> <name pos:start="93:80" pos:end="93:101"><name pos:start="93:80" pos:end="93:80">h</name><operator pos:start="93:81" pos:end="93:82">-&gt;</operator><name pos:start="93:83" pos:end="93:85">sps</name><operator pos:start="93:86" pos:end="93:86">.</operator><name pos:start="93:87" pos:end="93:101">ref_frame_count</name></name> <operator pos:start="93:103" pos:end="93:104">&amp;&amp;</operator>

                    <operator pos:start="95:21" pos:end="95:21">!</operator><operator pos:start="95:22" pos:end="95:22">(</operator><name pos:start="95:23" pos:end="95:35">FIELD_PICTURE</name> <operator pos:start="95:37" pos:end="95:38">&amp;&amp;</operator> <operator pos:start="95:40" pos:end="95:40">!</operator><name pos:start="95:41" pos:end="95:54"><name pos:start="95:41" pos:end="95:41">s</name><operator pos:start="95:42" pos:end="95:43">-&gt;</operator><name pos:start="95:44" pos:end="95:54">first_field</name></name> <operator pos:start="95:56" pos:end="95:57">&amp;&amp;</operator> <name pos:start="95:59" pos:end="95:91"><name pos:start="95:59" pos:end="95:59">s</name><operator pos:start="95:60" pos:end="95:61">-&gt;</operator><name pos:start="95:62" pos:end="95:80">current_picture_ptr</name><operator pos:start="95:81" pos:end="95:82">-&gt;</operator><name pos:start="95:83" pos:end="95:91">reference</name></name><operator pos:start="95:92" pos:end="95:92">)</operator></expr>)</condition> <block pos:start="95:95" pos:end="115:13">{<block_content pos:start="97:17" pos:end="113:17">

                <expr_stmt pos:start="97:17" pos:end="97:53"><expr pos:start="97:17" pos:end="97:52"><name pos:start="97:17" pos:end="97:26"><name pos:start="97:17" pos:end="97:17">h</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:23">mmco</name><index pos:start="97:24" pos:end="97:26">[<expr pos:start="97:25" pos:end="97:25"><literal type="number" pos:start="97:25" pos:end="97:25">0</literal></expr>]</index></name><operator pos:start="97:27" pos:end="97:27">.</operator><name pos:start="97:28" pos:end="97:33">opcode</name><operator pos:start="97:34" pos:end="97:34">=</operator> <name pos:start="97:36" pos:end="97:52">MMCO_SHORT2UNUSED</name></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:92"><expr pos:start="99:17" pos:end="99:91"><name pos:start="99:17" pos:end="99:26"><name pos:start="99:17" pos:end="99:17">h</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:23">mmco</name><index pos:start="99:24" pos:end="99:26">[<expr pos:start="99:25" pos:end="99:25"><literal type="number" pos:start="99:25" pos:end="99:25">0</literal></expr>]</index></name><operator pos:start="99:27" pos:end="99:27">.</operator><name pos:start="99:28" pos:end="99:40">short_pic_num</name><operator pos:start="99:41" pos:end="99:41">=</operator> <name pos:start="99:43" pos:end="99:80"><name pos:start="99:43" pos:end="99:43">h</name><operator pos:start="99:44" pos:end="99:45">-&gt;</operator><name pos:start="99:46" pos:end="99:54">short_ref</name><index pos:start="99:55" pos:end="99:80">[ <expr pos:start="99:57" pos:end="99:78"><name pos:start="99:57" pos:end="99:74"><name pos:start="99:57" pos:end="99:57">h</name><operator pos:start="99:58" pos:end="99:59">-&gt;</operator><name pos:start="99:60" pos:end="99:74">short_ref_count</name></name> <operator pos:start="99:76" pos:end="99:76">-</operator> <literal type="number" pos:start="99:78" pos:end="99:78">1</literal></expr> ]</index></name><operator pos:start="99:81" pos:end="99:82">-&gt;</operator><name pos:start="99:83" pos:end="99:91">frame_num</name></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:33"><expr pos:start="101:17" pos:end="101:32"><name pos:start="101:17" pos:end="101:29"><name pos:start="101:17" pos:end="101:17">h</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:29">mmco_index</name></name><operator pos:start="101:30" pos:end="101:30">=</operator> <literal type="number" pos:start="101:32" pos:end="101:32">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="103:17" pos:end="113:17"><if pos:start="103:17" pos:end="113:17">if <condition pos:start="103:20" pos:end="103:34">(<expr pos:start="103:21" pos:end="103:33"><name pos:start="103:21" pos:end="103:33">FIELD_PICTURE</name></expr>)</condition> <block pos:start="103:36" pos:end="113:17">{<block_content pos:start="105:21" pos:end="111:37">

                    <expr_stmt pos:start="105:21" pos:end="105:50"><expr pos:start="105:21" pos:end="105:49"><name pos:start="105:21" pos:end="105:30"><name pos:start="105:21" pos:end="105:21">h</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:27">mmco</name><index pos:start="105:28" pos:end="105:30">[<expr pos:start="105:29" pos:end="105:29"><literal type="number" pos:start="105:29" pos:end="105:29">0</literal></expr>]</index></name><operator pos:start="105:31" pos:end="105:31">.</operator><name pos:start="105:32" pos:end="105:44">short_pic_num</name> <operator pos:start="105:46" pos:end="105:47">*=</operator> <literal type="number" pos:start="105:49" pos:end="105:49">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="107:21" pos:end="107:57"><expr pos:start="107:21" pos:end="107:56"><name pos:start="107:21" pos:end="107:30"><name pos:start="107:21" pos:end="107:21">h</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:27">mmco</name><index pos:start="107:28" pos:end="107:30">[<expr pos:start="107:29" pos:end="107:29"><literal type="number" pos:start="107:29" pos:end="107:29">1</literal></expr>]</index></name><operator pos:start="107:31" pos:end="107:31">.</operator><name pos:start="107:32" pos:end="107:37">opcode</name><operator pos:start="107:38" pos:end="107:38">=</operator> <name pos:start="107:40" pos:end="107:56">MMCO_SHORT2UNUSED</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:75"><expr pos:start="109:21" pos:end="109:74"><name pos:start="109:21" pos:end="109:30"><name pos:start="109:21" pos:end="109:21">h</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:27">mmco</name><index pos:start="109:28" pos:end="109:30">[<expr pos:start="109:29" pos:end="109:29"><literal type="number" pos:start="109:29" pos:end="109:29">1</literal></expr>]</index></name><operator pos:start="109:31" pos:end="109:31">.</operator><name pos:start="109:32" pos:end="109:44">short_pic_num</name><operator pos:start="109:45" pos:end="109:45">=</operator> <name pos:start="109:47" pos:end="109:56"><name pos:start="109:47" pos:end="109:47">h</name><operator pos:start="109:48" pos:end="109:49">-&gt;</operator><name pos:start="109:50" pos:end="109:53">mmco</name><index pos:start="109:54" pos:end="109:56">[<expr pos:start="109:55" pos:end="109:55"><literal type="number" pos:start="109:55" pos:end="109:55">0</literal></expr>]</index></name><operator pos:start="109:57" pos:end="109:57">.</operator><name pos:start="109:58" pos:end="109:70">short_pic_num</name> <operator pos:start="109:72" pos:end="109:72">+</operator> <literal type="number" pos:start="109:74" pos:end="109:74">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:37"><expr pos:start="111:21" pos:end="111:36"><name pos:start="111:21" pos:end="111:33"><name pos:start="111:21" pos:end="111:21">h</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:33">mmco_index</name></name><operator pos:start="111:34" pos:end="111:34">=</operator> <literal type="number" pos:start="111:36" pos:end="111:36">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if><else pos:start="115:14" pos:end="115:17">else<block type="pseudo"><block_content/></block></else></if_stmt>


        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="124:5" pos:end="124:13">return <expr pos:start="124:12" pos:end="124:12"><literal type="number" pos:start="124:12" pos:end="124:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
