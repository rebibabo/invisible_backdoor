<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4157.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">scsi_disk_emulate_mode_sense</name><parameter_list pos:start="1:40" pos:end="1:72">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:51">SCSIDiskReq</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">r</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:71"><decl pos:start="1:57" pos:end="1:71"><type pos:start="1:57" pos:end="1:71"><name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:71">outbuf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="181:1">{<block_content pos:start="5:5" pos:end="179:18">

    <decl_stmt pos:start="5:5" pos:end="5:66"><decl pos:start="5:5" pos:end="5:65"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">SCSIDiskState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:65">= <expr pos:start="5:24" pos:end="5:65"><call pos:start="5:24" pos:end="5:65"><name pos:start="5:24" pos:end="5:32">DO_UPCAST</name><argument_list pos:start="5:33" pos:end="5:65">(<argument pos:start="5:34" pos:end="5:46"><expr pos:start="5:34" pos:end="5:46"><name pos:start="5:34" pos:end="5:46">SCSIDiskState</name></expr></argument>, <argument pos:start="5:49" pos:end="5:52"><expr pos:start="5:49" pos:end="5:52"><name pos:start="5:49" pos:end="5:52">qdev</name></expr></argument>, <argument pos:start="5:55" pos:end="5:64"><expr pos:start="5:55" pos:end="5:64"><name pos:start="5:55" pos:end="5:64"><name pos:start="5:55" pos:end="5:55">r</name><operator pos:start="5:56" pos:end="5:57">-&gt;</operator><name pos:start="5:58" pos:end="5:60">req</name><operator pos:start="5:61" pos:end="5:61">.</operator><name pos:start="5:62" pos:end="5:64">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:23">nb_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">page</name></decl>, <decl pos:start="9:15" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:17">dbd</name></decl>, <decl pos:start="9:20" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:25">buflen</name></decl>, <decl pos:start="9:28" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:30">ret</name></decl>, <decl pos:start="9:33" pos:end="9:44"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:44">page_control</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:30">dev_specific_param</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:7">dbd</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:27"><name pos:start="17:11" pos:end="17:11">r</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:16">req</name><operator pos:start="17:17" pos:end="17:17">.</operator><name pos:start="17:18" pos:end="17:20">cmd</name><operator pos:start="17:21" pos:end="17:21">.</operator><name pos:start="17:22" pos:end="17:24">buf</name><index pos:start="17:25" pos:end="17:27">[<expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">1</literal></expr>]</index></name>  <operator pos:start="17:30" pos:end="17:30">&amp;</operator> <literal type="number" pos:start="17:32" pos:end="17:34">0x8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:8">page</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <name pos:start="19:12" pos:end="19:28"><name pos:start="19:12" pos:end="19:12">r</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:17">req</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:21">cmd</name><operator pos:start="19:22" pos:end="19:22">.</operator><name pos:start="19:23" pos:end="19:25">buf</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><literal type="number" pos:start="19:27" pos:end="19:27">2</literal></expr>]</index></name> <operator pos:start="19:30" pos:end="19:30">&amp;</operator> <literal type="number" pos:start="19:32" pos:end="19:35">0x3f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:51"><expr pos:start="21:5" pos:end="21:50"><name pos:start="21:5" pos:end="21:16">page_control</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <operator pos:start="21:20" pos:end="21:20">(</operator><name pos:start="21:21" pos:end="21:37"><name pos:start="21:21" pos:end="21:21">r</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:26">req</name><operator pos:start="21:27" pos:end="21:27">.</operator><name pos:start="21:28" pos:end="21:30">cmd</name><operator pos:start="21:31" pos:end="21:31">.</operator><name pos:start="21:32" pos:end="21:34">buf</name><index pos:start="21:35" pos:end="21:37">[<expr pos:start="21:36" pos:end="21:36"><literal type="number" pos:start="21:36" pos:end="21:36">2</literal></expr>]</index></name> <operator pos:start="21:39" pos:end="21:39">&amp;</operator> <literal type="number" pos:start="21:41" pos:end="21:44">0xc0</literal><operator pos:start="21:45" pos:end="21:45">)</operator> <operator pos:start="21:47" pos:end="21:48">&gt;&gt;</operator> <literal type="number" pos:start="21:50" pos:end="21:50">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:89"><expr pos:start="23:5" pos:end="25:88"><call pos:start="23:5" pos:end="25:88"><name pos:start="23:5" pos:end="23:11">DPRINTF</name><argument_list pos:start="23:12" pos:end="25:88">(<argument pos:start="23:13" pos:end="23:67"><expr pos:start="23:13" pos:end="23:67"><literal type="string" pos:start="23:13" pos:end="23:67">"Mode Sense(%d) (page %d, xfer %zd, page_control %d)\n"</literal></expr></argument>,

        <argument pos:start="25:9" pos:end="25:50"><expr pos:start="25:9" pos:end="25:50"><ternary pos:start="25:9" pos:end="25:50"><condition pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:41"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:26"><name pos:start="25:10" pos:end="25:10">r</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:15">req</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:19">cmd</name><operator pos:start="25:20" pos:end="25:20">.</operator><name pos:start="25:21" pos:end="25:23">buf</name><index pos:start="25:24" pos:end="25:26">[<expr pos:start="25:25" pos:end="25:25"><literal type="number" pos:start="25:25" pos:end="25:25">0</literal></expr>]</index></name> <operator pos:start="25:28" pos:end="25:29">==</operator> <name pos:start="25:31" pos:end="25:40">MODE_SENSE</name><operator pos:start="25:41" pos:end="25:41">)</operator></expr> ?</condition><then pos:start="25:45" pos:end="25:45"> <expr pos:start="25:45" pos:end="25:45"><literal type="number" pos:start="25:45" pos:end="25:45">6</literal></expr> </then><else pos:start="25:47" pos:end="25:50">: <expr pos:start="25:49" pos:end="25:50"><literal type="number" pos:start="25:49" pos:end="25:50">10</literal></expr></else></ternary></expr></argument>, <argument pos:start="25:53" pos:end="25:56"><expr pos:start="25:53" pos:end="25:56"><name pos:start="25:53" pos:end="25:56">page</name></expr></argument>, <argument pos:start="25:59" pos:end="25:73"><expr pos:start="25:59" pos:end="25:73"><name pos:start="25:59" pos:end="25:73"><name pos:start="25:59" pos:end="25:59">r</name><operator pos:start="25:60" pos:end="25:61">-&gt;</operator><name pos:start="25:62" pos:end="25:64">req</name><operator pos:start="25:65" pos:end="25:65">.</operator><name pos:start="25:66" pos:end="25:68">cmd</name><operator pos:start="25:69" pos:end="25:69">.</operator><name pos:start="25:70" pos:end="25:73">xfer</name></name></expr></argument>, <argument pos:start="25:76" pos:end="25:87"><expr pos:start="25:76" pos:end="25:87"><name pos:start="25:76" pos:end="25:87">page_control</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:39"><expr pos:start="27:5" pos:end="27:38"><call pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:10">memset</name><argument_list pos:start="27:11" pos:end="27:38">(<argument pos:start="27:12" pos:end="27:17"><expr pos:start="27:12" pos:end="27:17"><name pos:start="27:12" pos:end="27:17">outbuf</name></expr></argument>, <argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr></argument>, <argument pos:start="27:23" pos:end="27:37"><expr pos:start="27:23" pos:end="27:37"><name pos:start="27:23" pos:end="27:37"><name pos:start="27:23" pos:end="27:23">r</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:28">req</name><operator pos:start="27:29" pos:end="27:29">.</operator><name pos:start="27:30" pos:end="27:32">cmd</name><operator pos:start="27:33" pos:end="27:33">.</operator><name pos:start="27:34" pos:end="27:37">xfer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:15"><expr pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:5">p</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <name pos:start="29:9" pos:end="29:14">outbuf</name></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:43">(<expr pos:start="33:9" pos:end="33:42"><call pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:25">bdrv_is_read_only</name><argument_list pos:start="33:26" pos:end="33:42">(<argument pos:start="33:27" pos:end="33:41"><expr pos:start="33:27" pos:end="33:41"><name pos:start="33:27" pos:end="33:41"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:33">qdev</name><operator pos:start="33:34" pos:end="33:34">.</operator><name pos:start="33:35" pos:end="33:38">conf</name><operator pos:start="33:39" pos:end="33:39">.</operator><name pos:start="33:40" pos:end="33:41">bs</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:45" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:34">

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:26">dev_specific_param</name> <operator pos:start="35:28" pos:end="35:28">=</operator> <literal type="number" pos:start="35:30" pos:end="35:33">0x80</literal></expr>;</expr_stmt> <comment type="block" pos:start="35:36" pos:end="35:51">/* Readonly.  */</comment>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="41:5">else <block pos:start="37:12" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:34">

        <expr_stmt pos:start="39:9" pos:end="39:34"><expr pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:26">dev_specific_param</name> <operator pos:start="39:28" pos:end="39:28">=</operator> <literal type="number" pos:start="39:30" pos:end="39:33">0x00</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="45:5" pos:end="65:5"><if pos:start="45:5" pos:end="55:5">if <condition pos:start="45:8" pos:end="45:40">(<expr pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:9">r</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:14">req</name><operator pos:start="45:15" pos:end="45:15">.</operator><name pos:start="45:16" pos:end="45:18">cmd</name><operator pos:start="45:19" pos:end="45:19">.</operator><name pos:start="45:20" pos:end="45:22">buf</name><index pos:start="45:23" pos:end="45:25">[<expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr>]</index></name> <operator pos:start="45:27" pos:end="45:28">==</operator> <name pos:start="45:30" pos:end="45:39">MODE_SENSE</name></expr>)</condition> <block pos:start="45:42" pos:end="55:5">{<block_content pos:start="47:9" pos:end="53:15">

        <expr_stmt pos:start="47:9" pos:end="47:17"><expr pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:12"><name pos:start="47:9" pos:end="47:9">p</name><index pos:start="47:10" pos:end="47:12">[<expr pos:start="47:11" pos:end="47:11"><literal type="number" pos:start="47:11" pos:end="47:11">1</literal></expr>]</index></name> <operator pos:start="47:14" pos:end="47:14">=</operator> <literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="47:19" pos:end="47:44">/* Default media type.  */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:34"><expr pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:12"><name pos:start="49:9" pos:end="49:9">p</name><index pos:start="49:10" pos:end="49:12">[<expr pos:start="49:11" pos:end="49:11"><literal type="number" pos:start="49:11" pos:end="49:11">2</literal></expr>]</index></name> <operator pos:start="49:14" pos:end="49:14">=</operator> <name pos:start="49:16" pos:end="49:33">dev_specific_param</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:17"><expr pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:12"><name pos:start="51:9" pos:end="51:9">p</name><index pos:start="51:10" pos:end="51:12">[<expr pos:start="51:11" pos:end="51:11"><literal type="number" pos:start="51:11" pos:end="51:11">3</literal></expr>]</index></name> <operator pos:start="51:14" pos:end="51:14">=</operator> <literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="51:19" pos:end="51:49">/* Block descriptor length.  */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:15"><expr pos:start="53:9" pos:end="53:14"><name pos:start="53:9" pos:end="53:9">p</name> <operator pos:start="53:11" pos:end="53:12">+=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="65:5">else <block pos:start="55:12" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:15"> <comment type="block" pos:start="55:14" pos:end="55:32">/* MODE_SENSE_10 */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:17"><expr pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:12"><name pos:start="57:9" pos:end="57:9">p</name><index pos:start="57:10" pos:end="57:12">[<expr pos:start="57:11" pos:end="57:11"><literal type="number" pos:start="57:11" pos:end="57:11">2</literal></expr>]</index></name> <operator pos:start="57:14" pos:end="57:14">=</operator> <literal type="number" pos:start="57:16" pos:end="57:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="57:19" pos:end="57:44">/* Default media type.  */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:34"><expr pos:start="59:9" pos:end="59:33"><name pos:start="59:9" pos:end="59:12"><name pos:start="59:9" pos:end="59:9">p</name><index pos:start="59:10" pos:end="59:12">[<expr pos:start="59:11" pos:end="59:11"><literal type="number" pos:start="59:11" pos:end="59:11">3</literal></expr>]</index></name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:33">dev_specific_param</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:24"><expr pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:12"><name pos:start="61:9" pos:end="61:9">p</name><index pos:start="61:10" pos:end="61:12">[<expr pos:start="61:11" pos:end="61:11"><literal type="number" pos:start="61:11" pos:end="61:11">6</literal></expr>]</index></name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:19"><name pos:start="61:16" pos:end="61:16">p</name><index pos:start="61:17" pos:end="61:19">[<expr pos:start="61:18" pos:end="61:18"><literal type="number" pos:start="61:18" pos:end="61:18">7</literal></expr>]</index></name> <operator pos:start="61:21" pos:end="61:21">=</operator> <literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="61:26" pos:end="61:56">/* Block descriptor length.  */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:15"><expr pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:9">p</name> <operator pos:start="63:11" pos:end="63:12">+=</operator> <literal type="number" pos:start="63:14" pos:end="63:14">8</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:71">/* MMC prescribes that CD/DVD drives have no block descriptors.  */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:52"><expr pos:start="71:5" pos:end="71:51"><call pos:start="71:5" pos:end="71:51"><name pos:start="71:5" pos:end="71:21">bdrv_get_geometry</name><argument_list pos:start="71:22" pos:end="71:51">(<argument pos:start="71:23" pos:end="71:37"><expr pos:start="71:23" pos:end="71:37"><name pos:start="71:23" pos:end="71:37"><name pos:start="71:23" pos:end="71:23">s</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:29">qdev</name><operator pos:start="71:30" pos:end="71:30">.</operator><name pos:start="71:31" pos:end="71:34">conf</name><operator pos:start="71:35" pos:end="71:35">.</operator><name pos:start="71:36" pos:end="71:37">bs</name></name></expr></argument>, <argument pos:start="71:40" pos:end="71:50"><expr pos:start="71:40" pos:end="71:50"><operator pos:start="71:40" pos:end="71:40">&amp;</operator><name pos:start="71:41" pos:end="71:50">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="111:5"><if pos:start="73:5" pos:end="111:5">if <condition pos:start="73:8" pos:end="73:56">(<expr pos:start="73:9" pos:end="73:55"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:12">dbd</name> <operator pos:start="73:14" pos:end="73:15">&amp;&amp;</operator> <name pos:start="73:17" pos:end="73:28"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:23">qdev</name><operator pos:start="73:24" pos:end="73:24">.</operator><name pos:start="73:25" pos:end="73:28">type</name></name> <operator pos:start="73:30" pos:end="73:31">==</operator> <name pos:start="73:33" pos:end="73:41">TYPE_DISK</name> <operator pos:start="73:43" pos:end="73:44">&amp;&amp;</operator> <name pos:start="73:46" pos:end="73:55">nb_sectors</name></expr>)</condition> <block pos:start="73:58" pos:end="111:5">{<block_content pos:start="75:9" pos:end="109:15">

        <if_stmt pos:start="75:9" pos:end="83:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:44">(<expr pos:start="75:13" pos:end="75:43"><name pos:start="75:13" pos:end="75:29"><name pos:start="75:13" pos:end="75:13">r</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:18">req</name><operator pos:start="75:19" pos:end="75:19">.</operator><name pos:start="75:20" pos:end="75:22">cmd</name><operator pos:start="75:23" pos:end="75:23">.</operator><name pos:start="75:24" pos:end="75:26">buf</name><index pos:start="75:27" pos:end="75:29">[<expr pos:start="75:28" pos:end="75:28"><literal type="number" pos:start="75:28" pos:end="75:28">0</literal></expr>]</index></name> <operator pos:start="75:31" pos:end="75:32">==</operator> <name pos:start="75:34" pos:end="75:43">MODE_SENSE</name></expr>)</condition> <block pos:start="75:46" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:26">

            <expr_stmt pos:start="77:13" pos:end="77:26"><expr pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:21"><name pos:start="77:13" pos:end="77:18">outbuf</name><index pos:start="77:19" pos:end="77:21">[<expr pos:start="77:20" pos:end="77:20"><literal type="number" pos:start="77:20" pos:end="77:20">3</literal></expr>]</index></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <literal type="number" pos:start="77:25" pos:end="77:25">8</literal></expr>;</expr_stmt> <comment type="block" pos:start="77:28" pos:end="77:57">/* Block descriptor length  */</comment>

        </block_content>}</block></if> <else pos:start="79:11" pos:end="83:9">else <block pos:start="79:16" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:26"> <comment type="block" pos:start="79:18" pos:end="79:36">/* MODE_SENSE_10 */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:26"><expr pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:21"><name pos:start="81:13" pos:end="81:18">outbuf</name><index pos:start="81:19" pos:end="81:21">[<expr pos:start="81:20" pos:end="81:20"><literal type="number" pos:start="81:20" pos:end="81:20">7</literal></expr>]</index></name> <operator pos:start="81:23" pos:end="81:23">=</operator> <literal type="number" pos:start="81:25" pos:end="81:25">8</literal></expr>;</expr_stmt> <comment type="block" pos:start="81:28" pos:end="81:57">/* Block descriptor length  */</comment>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:48"><expr pos:start="85:9" pos:end="85:47"><name pos:start="85:9" pos:end="85:18">nb_sectors</name> <operator pos:start="85:20" pos:end="85:21">/=</operator> <operator pos:start="85:23" pos:end="85:23">(</operator><name pos:start="85:24" pos:end="85:40"><name pos:start="85:24" pos:end="85:24">s</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:30">qdev</name><operator pos:start="85:31" pos:end="85:31">.</operator><name pos:start="85:32" pos:end="85:40">blocksize</name></name> <operator pos:start="85:42" pos:end="85:42">/</operator> <literal type="number" pos:start="85:44" pos:end="85:46">512</literal><operator pos:start="85:47" pos:end="85:47">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="91:9"><if pos:start="87:9" pos:end="91:9">if <condition pos:start="87:12" pos:end="87:34">(<expr pos:start="87:13" pos:end="87:33"><name pos:start="87:13" pos:end="87:22">nb_sectors</name> <operator pos:start="87:24" pos:end="87:24">&gt;</operator> <literal type="number" pos:start="87:26" pos:end="87:33">0xffffff</literal></expr>)</condition> <block pos:start="87:36" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:27">

            <expr_stmt pos:start="89:13" pos:end="89:27"><expr pos:start="89:13" pos:end="89:26"><name pos:start="89:13" pos:end="89:22">nb_sectors</name> <operator pos:start="89:24" pos:end="89:24">=</operator> <literal type="number" pos:start="89:26" pos:end="89:26">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:17"><expr pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:12"><name pos:start="93:9" pos:end="93:9">p</name><index pos:start="93:10" pos:end="93:12">[<expr pos:start="93:11" pos:end="93:11"><literal type="number" pos:start="93:11" pos:end="93:11">0</literal></expr>]</index></name> <operator pos:start="93:14" pos:end="93:14">=</operator> <literal type="number" pos:start="93:16" pos:end="93:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="93:19" pos:end="93:42">/* media density code */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:41"><expr pos:start="95:9" pos:end="95:40"><name pos:start="95:9" pos:end="95:12"><name pos:start="95:9" pos:end="95:9">p</name><index pos:start="95:10" pos:end="95:12">[<expr pos:start="95:11" pos:end="95:11"><literal type="number" pos:start="95:11" pos:end="95:11">1</literal></expr>]</index></name> <operator pos:start="95:14" pos:end="95:14">=</operator> <operator pos:start="95:16" pos:end="95:16">(</operator><name pos:start="95:17" pos:end="95:26">nb_sectors</name> <operator pos:start="95:28" pos:end="95:29">&gt;&gt;</operator> <literal type="number" pos:start="95:31" pos:end="95:32">16</literal><operator pos:start="95:33" pos:end="95:33">)</operator> <operator pos:start="95:35" pos:end="95:35">&amp;</operator> <literal type="number" pos:start="95:37" pos:end="95:40">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:40"><expr pos:start="97:9" pos:end="97:39"><name pos:start="97:9" pos:end="97:12"><name pos:start="97:9" pos:end="97:9">p</name><index pos:start="97:10" pos:end="97:12">[<expr pos:start="97:11" pos:end="97:11"><literal type="number" pos:start="97:11" pos:end="97:11">2</literal></expr>]</index></name> <operator pos:start="97:14" pos:end="97:14">=</operator> <operator pos:start="97:16" pos:end="97:16">(</operator><name pos:start="97:17" pos:end="97:26">nb_sectors</name> <operator pos:start="97:28" pos:end="97:29">&gt;&gt;</operator> <literal type="number" pos:start="97:31" pos:end="97:31">8</literal><operator pos:start="97:32" pos:end="97:32">)</operator> <operator pos:start="97:34" pos:end="97:34">&amp;</operator> <literal type="number" pos:start="97:36" pos:end="97:39">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:33"><expr pos:start="99:9" pos:end="99:32"><name pos:start="99:9" pos:end="99:12"><name pos:start="99:9" pos:end="99:9">p</name><index pos:start="99:10" pos:end="99:12">[<expr pos:start="99:11" pos:end="99:11"><literal type="number" pos:start="99:11" pos:end="99:11">3</literal></expr>]</index></name> <operator pos:start="99:14" pos:end="99:14">=</operator> <name pos:start="99:16" pos:end="99:25">nb_sectors</name> <operator pos:start="99:27" pos:end="99:27">&amp;</operator> <literal type="number" pos:start="99:29" pos:end="99:32">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:17"><expr pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:12"><name pos:start="101:9" pos:end="101:9">p</name><index pos:start="101:10" pos:end="101:12">[<expr pos:start="101:11" pos:end="101:11"><literal type="number" pos:start="101:11" pos:end="101:11">4</literal></expr>]</index></name> <operator pos:start="101:14" pos:end="101:14">=</operator> <literal type="number" pos:start="101:16" pos:end="101:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="101:19" pos:end="101:32">/* reserved */</comment>

        <expr_stmt pos:start="103:9" pos:end="103:17"><expr pos:start="103:9" pos:end="103:16"><name pos:start="103:9" pos:end="103:12"><name pos:start="103:9" pos:end="103:9">p</name><index pos:start="103:10" pos:end="103:12">[<expr pos:start="103:11" pos:end="103:11"><literal type="number" pos:start="103:11" pos:end="103:11">5</literal></expr>]</index></name> <operator pos:start="103:14" pos:end="103:14">=</operator> <literal type="number" pos:start="103:16" pos:end="103:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="103:19" pos:end="103:62">/* bytes 5-7 are the sector size in bytes */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:38"><expr pos:start="105:9" pos:end="105:37"><name pos:start="105:9" pos:end="105:12"><name pos:start="105:9" pos:end="105:9">p</name><index pos:start="105:10" pos:end="105:12">[<expr pos:start="105:11" pos:end="105:11"><literal type="number" pos:start="105:11" pos:end="105:11">6</literal></expr>]</index></name> <operator pos:start="105:14" pos:end="105:14">=</operator> <name pos:start="105:16" pos:end="105:32"><name pos:start="105:16" pos:end="105:16">s</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:22">qdev</name><operator pos:start="105:23" pos:end="105:23">.</operator><name pos:start="105:24" pos:end="105:32">blocksize</name></name> <operator pos:start="105:34" pos:end="105:35">&gt;&gt;</operator> <literal type="number" pos:start="105:37" pos:end="105:37">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:17"><expr pos:start="107:9" pos:end="107:16"><name pos:start="107:9" pos:end="107:12"><name pos:start="107:9" pos:end="107:9">p</name><index pos:start="107:10" pos:end="107:12">[<expr pos:start="107:11" pos:end="107:11"><literal type="number" pos:start="107:11" pos:end="107:11">7</literal></expr>]</index></name> <operator pos:start="107:14" pos:end="107:14">=</operator> <literal type="number" pos:start="107:16" pos:end="107:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:15"><expr pos:start="109:9" pos:end="109:14"><name pos:start="109:9" pos:end="109:9">p</name> <operator pos:start="109:11" pos:end="109:12">+=</operator> <literal type="number" pos:start="109:14" pos:end="109:14">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="115:5" pos:end="123:5"><if pos:start="115:5" pos:end="123:5">if <condition pos:start="115:8" pos:end="115:26">(<expr pos:start="115:9" pos:end="115:25"><name pos:start="115:9" pos:end="115:20">page_control</name> <operator pos:start="115:22" pos:end="115:23">==</operator> <literal type="number" pos:start="115:25" pos:end="115:25">3</literal></expr>)</condition> <block pos:start="115:28" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:18">

        <comment type="block" pos:start="117:9" pos:end="117:26">/* Saved Values */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:73"><expr pos:start="119:9" pos:end="119:72"><call pos:start="119:9" pos:end="119:72"><name pos:start="119:9" pos:end="119:28">scsi_check_condition</name><argument_list pos:start="119:29" pos:end="119:72">(<argument pos:start="119:30" pos:end="119:30"><expr pos:start="119:30" pos:end="119:30"><name pos:start="119:30" pos:end="119:30">r</name></expr></argument>, <argument pos:start="119:33" pos:end="119:71"><expr pos:start="119:33" pos:end="119:71"><call pos:start="119:33" pos:end="119:71"><name pos:start="119:33" pos:end="119:42">SENSE_CODE</name><argument_list pos:start="119:43" pos:end="119:71">(<argument pos:start="119:44" pos:end="119:70"><expr pos:start="119:44" pos:end="119:70"><name pos:start="119:44" pos:end="119:70">SAVING_PARAMS_NOT_SUPPORTED</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="121:9" pos:end="121:18">return <expr pos:start="121:16" pos:end="121:17"><operator pos:start="121:16" pos:end="121:16">-</operator><literal type="number" pos:start="121:17" pos:end="121:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="127:5" pos:end="145:5"><if pos:start="127:5" pos:end="135:5">if <condition pos:start="127:8" pos:end="127:21">(<expr pos:start="127:9" pos:end="127:20"><name pos:start="127:9" pos:end="127:12">page</name> <operator pos:start="127:14" pos:end="127:15">==</operator> <literal type="number" pos:start="127:17" pos:end="127:20">0x3f</literal></expr>)</condition> <block pos:start="127:23" pos:end="135:5">{<block_content pos:start="129:9" pos:end="133:9">

        <for pos:start="129:9" pos:end="133:9">for <control pos:start="129:13" pos:end="129:44">(<init pos:start="129:14" pos:end="129:22"><expr pos:start="129:14" pos:end="129:21"><name pos:start="129:14" pos:end="129:17">page</name> <operator pos:start="129:19" pos:end="129:19">=</operator> <literal type="number" pos:start="129:21" pos:end="129:21">0</literal></expr>;</init> <condition pos:start="129:24" pos:end="129:36"><expr pos:start="129:24" pos:end="129:35"><name pos:start="129:24" pos:end="129:27">page</name> <operator pos:start="129:29" pos:end="129:30">&lt;=</operator> <literal type="number" pos:start="129:32" pos:end="129:35">0x3e</literal></expr>;</condition> <incr pos:start="129:38" pos:end="129:43"><expr pos:start="129:38" pos:end="129:43"><name pos:start="129:38" pos:end="129:41">page</name><operator pos:start="129:42" pos:end="129:43">++</operator></expr></incr>)</control> <block pos:start="129:46" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:55">

            <expr_stmt pos:start="131:13" pos:end="131:55"><expr pos:start="131:13" pos:end="131:54"><call pos:start="131:13" pos:end="131:54"><name pos:start="131:13" pos:end="131:27">mode_sense_page</name><argument_list pos:start="131:28" pos:end="131:54">(<argument pos:start="131:29" pos:end="131:29"><expr pos:start="131:29" pos:end="131:29"><name pos:start="131:29" pos:end="131:29">s</name></expr></argument>, <argument pos:start="131:32" pos:end="131:35"><expr pos:start="131:32" pos:end="131:35"><name pos:start="131:32" pos:end="131:35">page</name></expr></argument>, <argument pos:start="131:38" pos:end="131:39"><expr pos:start="131:38" pos:end="131:39"><operator pos:start="131:38" pos:end="131:38">&amp;</operator><name pos:start="131:39" pos:end="131:39">p</name></expr></argument>, <argument pos:start="131:42" pos:end="131:53"><expr pos:start="131:42" pos:end="131:53"><name pos:start="131:42" pos:end="131:53">page_control</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="135:7" pos:end="145:5">else <block pos:start="135:12" pos:end="145:5">{<block_content pos:start="137:9" pos:end="143:9">

        <expr_stmt pos:start="137:9" pos:end="137:57"><expr pos:start="137:9" pos:end="137:56"><name pos:start="137:9" pos:end="137:11">ret</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <call pos:start="137:15" pos:end="137:56"><name pos:start="137:15" pos:end="137:29">mode_sense_page</name><argument_list pos:start="137:30" pos:end="137:56">(<argument pos:start="137:31" pos:end="137:31"><expr pos:start="137:31" pos:end="137:31"><name pos:start="137:31" pos:end="137:31">s</name></expr></argument>, <argument pos:start="137:34" pos:end="137:37"><expr pos:start="137:34" pos:end="137:37"><name pos:start="137:34" pos:end="137:37">page</name></expr></argument>, <argument pos:start="137:40" pos:end="137:41"><expr pos:start="137:40" pos:end="137:41"><operator pos:start="137:40" pos:end="137:40">&amp;</operator><name pos:start="137:41" pos:end="137:41">p</name></expr></argument>, <argument pos:start="137:44" pos:end="137:55"><expr pos:start="137:44" pos:end="137:55"><name pos:start="137:44" pos:end="137:55">page_control</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="143:9"><if pos:start="139:9" pos:end="143:9">if <condition pos:start="139:12" pos:end="139:22">(<expr pos:start="139:13" pos:end="139:21"><name pos:start="139:13" pos:end="139:15">ret</name> <operator pos:start="139:17" pos:end="139:18">==</operator> <operator pos:start="139:20" pos:end="139:20">-</operator><literal type="number" pos:start="139:21" pos:end="139:21">1</literal></expr>)</condition> <block pos:start="139:24" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:22">

            <return pos:start="141:13" pos:end="141:22">return <expr pos:start="141:20" pos:end="141:21"><operator pos:start="141:20" pos:end="141:20">-</operator><literal type="number" pos:start="141:21" pos:end="141:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:24"><expr pos:start="149:5" pos:end="149:23"><name pos:start="149:5" pos:end="149:10">buflen</name> <operator pos:start="149:12" pos:end="149:12">=</operator> <name pos:start="149:14" pos:end="149:14">p</name> <operator pos:start="149:16" pos:end="149:16">-</operator> <name pos:start="149:18" pos:end="149:23">outbuf</name></expr>;</expr_stmt>

    <comment type="block" pos:start="151:5" pos:end="159:7">/*

     * The mode data length field specifies the length in bytes of the

     * following data that is available to be transferred. The mode data

     * length does not include itself.

     */</comment>

    <if_stmt pos:start="161:5" pos:end="171:5"><if pos:start="161:5" pos:end="165:5">if <condition pos:start="161:8" pos:end="161:40">(<expr pos:start="161:9" pos:end="161:39"><name pos:start="161:9" pos:end="161:25"><name pos:start="161:9" pos:end="161:9">r</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:14">req</name><operator pos:start="161:15" pos:end="161:15">.</operator><name pos:start="161:16" pos:end="161:18">cmd</name><operator pos:start="161:19" pos:end="161:19">.</operator><name pos:start="161:20" pos:end="161:22">buf</name><index pos:start="161:23" pos:end="161:25">[<expr pos:start="161:24" pos:end="161:24"><literal type="number" pos:start="161:24" pos:end="161:24">0</literal></expr>]</index></name> <operator pos:start="161:27" pos:end="161:28">==</operator> <name pos:start="161:30" pos:end="161:39">MODE_SENSE</name></expr>)</condition> <block pos:start="161:42" pos:end="165:5">{<block_content pos:start="163:9" pos:end="163:31">

        <expr_stmt pos:start="163:9" pos:end="163:31"><expr pos:start="163:9" pos:end="163:30"><name pos:start="163:9" pos:end="163:17"><name pos:start="163:9" pos:end="163:14">outbuf</name><index pos:start="163:15" pos:end="163:17">[<expr pos:start="163:16" pos:end="163:16"><literal type="number" pos:start="163:16" pos:end="163:16">0</literal></expr>]</index></name> <operator pos:start="163:19" pos:end="163:19">=</operator> <name pos:start="163:21" pos:end="163:26">buflen</name> <operator pos:start="163:28" pos:end="163:28">-</operator> <literal type="number" pos:start="163:30" pos:end="163:30">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="165:7" pos:end="171:5">else <block pos:start="165:12" pos:end="171:5">{<block_content pos:start="167:9" pos:end="169:40"> <comment type="block" pos:start="165:14" pos:end="165:32">/* MODE_SENSE_10 */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:47"><expr pos:start="167:9" pos:end="167:46"><name pos:start="167:9" pos:end="167:17"><name pos:start="167:9" pos:end="167:14">outbuf</name><index pos:start="167:15" pos:end="167:17">[<expr pos:start="167:16" pos:end="167:16"><literal type="number" pos:start="167:16" pos:end="167:16">0</literal></expr>]</index></name> <operator pos:start="167:19" pos:end="167:19">=</operator> <operator pos:start="167:21" pos:end="167:21">(</operator><operator pos:start="167:22" pos:end="167:22">(</operator><name pos:start="167:23" pos:end="167:28">buflen</name> <operator pos:start="167:30" pos:end="167:30">-</operator> <literal type="number" pos:start="167:32" pos:end="167:32">2</literal><operator pos:start="167:33" pos:end="167:33">)</operator> <operator pos:start="167:35" pos:end="167:36">&gt;&gt;</operator> <literal type="number" pos:start="167:38" pos:end="167:38">8</literal><operator pos:start="167:39" pos:end="167:39">)</operator> <operator pos:start="167:41" pos:end="167:41">&amp;</operator> <literal type="number" pos:start="167:43" pos:end="167:46">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:40"><expr pos:start="169:9" pos:end="169:39"><name pos:start="169:9" pos:end="169:17"><name pos:start="169:9" pos:end="169:14">outbuf</name><index pos:start="169:15" pos:end="169:17">[<expr pos:start="169:16" pos:end="169:16"><literal type="number" pos:start="169:16" pos:end="169:16">1</literal></expr>]</index></name> <operator pos:start="169:19" pos:end="169:19">=</operator> <operator pos:start="169:21" pos:end="169:21">(</operator><name pos:start="169:22" pos:end="169:27">buflen</name> <operator pos:start="169:29" pos:end="169:29">-</operator> <literal type="number" pos:start="169:31" pos:end="169:31">2</literal><operator pos:start="169:32" pos:end="169:32">)</operator> <operator pos:start="169:34" pos:end="169:34">&amp;</operator> <literal type="number" pos:start="169:36" pos:end="169:39">0xff</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="173:5" pos:end="177:5"><if pos:start="173:5" pos:end="177:5">if <condition pos:start="173:8" pos:end="173:33">(<expr pos:start="173:9" pos:end="173:32"><name pos:start="173:9" pos:end="173:14">buflen</name> <operator pos:start="173:16" pos:end="173:16">&gt;</operator> <name pos:start="173:18" pos:end="173:32"><name pos:start="173:18" pos:end="173:18">r</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:23">req</name><operator pos:start="173:24" pos:end="173:24">.</operator><name pos:start="173:25" pos:end="173:27">cmd</name><operator pos:start="173:28" pos:end="173:28">.</operator><name pos:start="173:29" pos:end="173:32">xfer</name></name></expr>)</condition> <block pos:start="173:35" pos:end="177:5">{<block_content pos:start="175:9" pos:end="175:33">

        <expr_stmt pos:start="175:9" pos:end="175:33"><expr pos:start="175:9" pos:end="175:32"><name pos:start="175:9" pos:end="175:14">buflen</name> <operator pos:start="175:16" pos:end="175:16">=</operator> <name pos:start="175:18" pos:end="175:32"><name pos:start="175:18" pos:end="175:18">r</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:23">req</name><operator pos:start="175:24" pos:end="175:24">.</operator><name pos:start="175:25" pos:end="175:27">cmd</name><operator pos:start="175:28" pos:end="175:28">.</operator><name pos:start="175:29" pos:end="175:32">xfer</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="179:5" pos:end="179:18">return <expr pos:start="179:12" pos:end="179:17"><name pos:start="179:12" pos:end="179:17">buflen</name></expr>;</return>

</block_content>}</block></function>
</unit>
