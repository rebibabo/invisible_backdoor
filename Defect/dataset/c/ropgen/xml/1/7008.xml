<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7008.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:26"><name pos:start="1:1" pos:end="1:10">START_TEST</name><argument_list pos:start="1:11" pos:end="1:26">(<argument pos:start="1:12" pos:end="1:25">escaped_string</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <struct pos:start="7:5" pos:end="33:6">struct <block pos:start="7:12" pos:end="15:5">{

        <decl_stmt pos:start="9:9" pos:end="9:28"><decl pos:start="9:9" pos:end="9:27"><type pos:start="9:9" pos:end="9:20"><specifier pos:start="9:9" pos:end="9:13">const</specifier> <name pos:start="9:15" pos:end="9:18">char</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">encoded</name></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:28"><decl pos:start="11:9" pos:end="11:27"><type pos:start="11:9" pos:end="11:20"><specifier pos:start="11:9" pos:end="11:13">const</specifier> <name pos:start="11:15" pos:end="11:18">char</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:27">decoded</name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:17"><decl pos:start="13:9" pos:end="13:16"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:16">skip</name></decl>;</decl_stmt>

    }</block> <decl pos:start="15:7" pos:end="33:5"><name pos:start="15:7" pos:end="15:18"><name pos:start="15:7" pos:end="15:16">test_cases</name><index pos:start="15:17" pos:end="15:18">[]</index></name> <init pos:start="15:20" pos:end="33:5">= <expr pos:start="15:22" pos:end="33:5"><block pos:start="15:22" pos:end="33:5">{

        <expr pos:start="17:9" pos:end="17:28"><block pos:start="17:9" pos:end="17:28">{ <expr pos:start="17:11" pos:end="17:20"><literal type="string" pos:start="17:11" pos:end="17:20">"\"\\\"\""</literal></expr>, <expr pos:start="17:23" pos:end="17:26"><literal type="string" pos:start="17:23" pos:end="17:26">"\""</literal></expr> }</block></expr>,

        <expr pos:start="19:9" pos:end="21:45"><block pos:start="19:9" pos:end="21:45">{ <expr pos:start="19:11" pos:end="19:51"><literal type="string" pos:start="19:11" pos:end="19:51">"\"hello world \\\"embedded string\\\"\""</literal></expr>,

          <expr pos:start="21:11" pos:end="21:43"><literal type="string" pos:start="21:11" pos:end="21:43">"hello world \"embedded string\""</literal></expr> }</block></expr>,

        <expr pos:start="23:9" pos:end="23:75"><block pos:start="23:9" pos:end="23:75">{ <expr pos:start="23:11" pos:end="23:43"><literal type="string" pos:start="23:11" pos:end="23:43">"\"hello world\\nwith new line\""</literal></expr>, <expr pos:start="23:46" pos:end="23:73"><literal type="string" pos:start="23:46" pos:end="23:73">"hello world\nwith new line"</literal></expr> }</block></expr>,

        <expr pos:start="25:9" pos:end="25:77"><block pos:start="25:9" pos:end="25:77">{ <expr pos:start="25:11" pos:end="25:41"><literal type="string" pos:start="25:11" pos:end="25:41">"\"single byte utf-8 \\u0020\""</literal></expr>, <expr pos:start="25:44" pos:end="25:64"><literal type="string" pos:start="25:44" pos:end="25:64">"single byte utf-8  "</literal></expr>, <expr pos:start="25:67" pos:end="25:75"><operator pos:start="25:67" pos:end="25:67">.</operator><name pos:start="25:68" pos:end="25:71">skip</name> <operator pos:start="25:73" pos:end="25:73">=</operator> <literal type="number" pos:start="25:75" pos:end="25:75">1</literal></expr> }</block></expr>,

        <expr pos:start="27:9" pos:end="27:73"><block pos:start="27:9" pos:end="27:73">{ <expr pos:start="27:11" pos:end="27:41"><literal type="string" pos:start="27:11" pos:end="27:41">"\"double byte utf-8 \\u00A2\""</literal></expr>, <expr pos:start="27:44" pos:end="27:71"><literal type="string" pos:start="27:44" pos:end="27:71">"double byte utf-8 \xc2\xa2"</literal></expr> }</block></expr>,

        <expr pos:start="29:9" pos:end="29:77"><block pos:start="29:9" pos:end="29:77">{ <expr pos:start="29:11" pos:end="29:41"><literal type="string" pos:start="29:11" pos:end="29:41">"\"triple byte utf-8 \\u20AC\""</literal></expr>, <expr pos:start="29:44" pos:end="29:75"><literal type="string" pos:start="29:44" pos:end="29:75">"triple byte utf-8 \xe2\x82\xac"</literal></expr> }</block></expr>,

        <expr pos:start="31:9" pos:end="31:10"><block pos:start="31:9" pos:end="31:10">{}</block></expr>

    }</block></expr></init></decl>;</struct>



    <for pos:start="37:5" pos:end="77:5">for <control pos:start="37:9" pos:end="37:43">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:38"><expr pos:start="37:17" pos:end="37:37"><name pos:start="37:17" pos:end="37:29"><name pos:start="37:17" pos:end="37:26">test_cases</name><index pos:start="37:27" pos:end="37:29">[<expr pos:start="37:28" pos:end="37:28"><name pos:start="37:28" pos:end="37:28">i</name></expr>]</index></name><operator pos:start="37:30" pos:end="37:30">.</operator><name pos:start="37:31" pos:end="37:37">encoded</name></expr>;</condition> <incr pos:start="37:40" pos:end="37:42"><expr pos:start="37:40" pos:end="37:42"><name pos:start="37:40" pos:end="37:40">i</name><operator pos:start="37:41" pos:end="37:42">++</operator></expr></incr>)</control> <block pos:start="37:45" pos:end="77:5">{<block_content pos:start="39:9" pos:end="75:21">

        <decl_stmt pos:start="39:9" pos:end="39:21"><decl pos:start="39:9" pos:end="39:20"><type pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:15">QObject</name> <modifier pos:start="39:17" pos:end="39:17">*</modifier></type><name pos:start="39:18" pos:end="39:20">obj</name></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:21"><decl pos:start="41:9" pos:end="41:20"><type pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:15">QString</name> <modifier pos:start="41:17" pos:end="41:17">*</modifier></type><name pos:start="41:18" pos:end="41:20">str</name></decl>;</decl_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:55"><expr pos:start="45:9" pos:end="45:54"><name pos:start="45:9" pos:end="45:11">obj</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:54"><name pos:start="45:15" pos:end="45:31">qobject_from_json</name><argument_list pos:start="45:32" pos:end="45:54">(<argument pos:start="45:33" pos:end="45:53"><expr pos:start="45:33" pos:end="45:53"><name pos:start="45:33" pos:end="45:45"><name pos:start="45:33" pos:end="45:42">test_cases</name><index pos:start="45:43" pos:end="45:45">[<expr pos:start="45:44" pos:end="45:44"><name pos:start="45:44" pos:end="45:44">i</name></expr>]</index></name><operator pos:start="45:46" pos:end="45:46">.</operator><name pos:start="45:47" pos:end="45:53">encoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><call pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:19">fail_unless</name><argument_list pos:start="49:20" pos:end="49:32">(<argument pos:start="49:21" pos:end="49:31"><expr pos:start="49:21" pos:end="49:31"><name pos:start="49:21" pos:end="49:23">obj</name> <operator pos:start="49:25" pos:end="49:26">!=</operator> <name pos:start="49:28" pos:end="49:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:56"><expr pos:start="51:9" pos:end="51:55"><call pos:start="51:9" pos:end="51:55"><name pos:start="51:9" pos:end="51:19">fail_unless</name><argument_list pos:start="51:20" pos:end="51:55">(<argument pos:start="51:21" pos:end="51:54"><expr pos:start="51:21" pos:end="51:54"><call pos:start="51:21" pos:end="51:37"><name pos:start="51:21" pos:end="51:32">qobject_type</name><argument_list pos:start="51:33" pos:end="51:37">(<argument pos:start="51:34" pos:end="51:36"><expr pos:start="51:34" pos:end="51:36"><name pos:start="51:34" pos:end="51:36">obj</name></expr></argument>)</argument_list></call> <operator pos:start="51:39" pos:end="51:40">==</operator> <name pos:start="51:42" pos:end="51:54">QTYPE_QSTRING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <expr_stmt pos:start="55:9" pos:end="55:38"><expr pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:11">str</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:37"><name pos:start="55:15" pos:end="55:32">qobject_to_qstring</name><argument_list pos:start="55:33" pos:end="55:37">(<argument pos:start="55:34" pos:end="55:36"><expr pos:start="55:34" pos:end="55:36"><name pos:start="55:34" pos:end="55:36">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:78"><expr pos:start="57:9" pos:end="57:77"><call pos:start="57:9" pos:end="57:77"><name pos:start="57:9" pos:end="57:19">fail_unless</name><argument_list pos:start="57:20" pos:end="57:77">(<argument pos:start="57:21" pos:end="57:76"><expr pos:start="57:21" pos:end="57:76"><call pos:start="57:21" pos:end="57:71"><name pos:start="57:21" pos:end="57:26">strcmp</name><argument_list pos:start="57:27" pos:end="57:71">(<argument pos:start="57:28" pos:end="57:47"><expr pos:start="57:28" pos:end="57:47"><call pos:start="57:28" pos:end="57:47"><name pos:start="57:28" pos:end="57:42">qstring_get_str</name><argument_list pos:start="57:43" pos:end="57:47">(<argument pos:start="57:44" pos:end="57:46"><expr pos:start="57:44" pos:end="57:46"><name pos:start="57:44" pos:end="57:46">str</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="57:50" pos:end="57:70"><expr pos:start="57:50" pos:end="57:70"><name pos:start="57:50" pos:end="57:62"><name pos:start="57:50" pos:end="57:59">test_cases</name><index pos:start="57:60" pos:end="57:62">[<expr pos:start="57:61" pos:end="57:61"><name pos:start="57:61" pos:end="57:61">i</name></expr>]</index></name><operator pos:start="57:63" pos:end="57:63">.</operator><name pos:start="57:64" pos:end="57:70">decoded</name></expr></argument>)</argument_list></call> <operator pos:start="57:73" pos:end="57:74">==</operator> <literal type="number" pos:start="57:76" pos:end="57:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="61:9" pos:end="71:9"><if pos:start="61:9" pos:end="71:9">if <condition pos:start="61:12" pos:end="61:36">(<expr pos:start="61:13" pos:end="61:35"><name pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:22">test_cases</name><index pos:start="61:23" pos:end="61:25">[<expr pos:start="61:24" pos:end="61:24"><name pos:start="61:24" pos:end="61:24">i</name></expr>]</index></name><operator pos:start="61:26" pos:end="61:26">.</operator><name pos:start="61:27" pos:end="61:30">skip</name> <operator pos:start="61:32" pos:end="61:33">==</operator> <literal type="number" pos:start="61:35" pos:end="61:35">0</literal></expr>)</condition> <block pos:start="61:38" pos:end="71:9">{<block_content pos:start="63:13" pos:end="69:32">

            <expr_stmt pos:start="63:13" pos:end="63:39"><expr pos:start="63:13" pos:end="63:38"><name pos:start="63:13" pos:end="63:15">str</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:38"><name pos:start="63:19" pos:end="63:33">qobject_to_json</name><argument_list pos:start="63:34" pos:end="63:38">(<argument pos:start="63:35" pos:end="63:37"><expr pos:start="63:35" pos:end="63:37"><name pos:start="63:35" pos:end="63:37">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:82"><expr pos:start="65:13" pos:end="65:81"><call pos:start="65:13" pos:end="65:81"><name pos:start="65:13" pos:end="65:23">fail_unless</name><argument_list pos:start="65:24" pos:end="65:81">(<argument pos:start="65:25" pos:end="65:80"><expr pos:start="65:25" pos:end="65:80"><call pos:start="65:25" pos:end="65:75"><name pos:start="65:25" pos:end="65:30">strcmp</name><argument_list pos:start="65:31" pos:end="65:75">(<argument pos:start="65:32" pos:end="65:51"><expr pos:start="65:32" pos:end="65:51"><call pos:start="65:32" pos:end="65:51"><name pos:start="65:32" pos:end="65:46">qstring_get_str</name><argument_list pos:start="65:47" pos:end="65:51">(<argument pos:start="65:48" pos:end="65:50"><expr pos:start="65:48" pos:end="65:50"><name pos:start="65:48" pos:end="65:50">str</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:54" pos:end="65:74"><expr pos:start="65:54" pos:end="65:74"><name pos:start="65:54" pos:end="65:66"><name pos:start="65:54" pos:end="65:63">test_cases</name><index pos:start="65:64" pos:end="65:66">[<expr pos:start="65:65" pos:end="65:65"><name pos:start="65:65" pos:end="65:65">i</name></expr>]</index></name><operator pos:start="65:67" pos:end="65:67">.</operator><name pos:start="65:68" pos:end="65:74">encoded</name></expr></argument>)</argument_list></call> <operator pos:start="65:77" pos:end="65:78">==</operator> <literal type="number" pos:start="65:80" pos:end="65:80">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="69:13" pos:end="69:32"><expr pos:start="69:13" pos:end="69:31"><call pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:26">qobject_decref</name><argument_list pos:start="69:27" pos:end="69:31">(<argument pos:start="69:28" pos:end="69:30"><expr pos:start="69:28" pos:end="69:30"><name pos:start="69:28" pos:end="69:30">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:21"><expr pos:start="75:9" pos:end="75:20"><call pos:start="75:9" pos:end="75:20"><name pos:start="75:9" pos:end="75:15">QDECREF</name><argument_list pos:start="75:16" pos:end="75:20">(<argument pos:start="75:17" pos:end="75:19"><expr pos:start="75:17" pos:end="75:19"><name pos:start="75:17" pos:end="75:19">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block>
</unit>
