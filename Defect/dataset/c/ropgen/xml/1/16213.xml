<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16213.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:39">gen_add_datah_offset</name><parameter_list pos:start="1:40" pos:end="3:60">(<parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:52">DisasContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:74"><decl pos:start="1:58" pos:end="1:74"><type pos:start="1:58" pos:end="1:74"><name pos:start="1:58" pos:end="1:65">unsigned</name> <name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:74">insn</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:49"><decl pos:start="3:41" pos:end="3:49"><type pos:start="3:41" pos:end="3:49"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:49">extra</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:59"><decl pos:start="3:52" pos:end="3:59"><type pos:start="3:52" pos:end="3:59"><name pos:start="3:52" pos:end="3:55">TCGv</name></type> <name pos:start="3:57" pos:end="3:59">var</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:5">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">val</name></decl>, <decl pos:start="7:14" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:15">rm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:15">offset</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="51:5"><if pos:start="13:5" pos:end="29:5">if <condition pos:start="13:8" pos:end="13:25">(<expr pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:12">insn</name> <operator pos:start="13:14" pos:end="13:14">&amp;</operator> <operator pos:start="13:16" pos:end="13:16">(</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal> <operator pos:start="13:19" pos:end="13:20">&lt;&lt;</operator> <literal type="number" pos:start="13:22" pos:end="13:23">22</literal><operator pos:start="13:24" pos:end="13:24">)</operator></expr>)</condition> <block pos:start="13:27" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:44">

        <comment type="block" pos:start="15:9" pos:end="15:23">/* immediate */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:50"><expr pos:start="17:9" pos:end="17:49"><name pos:start="17:9" pos:end="17:11">val</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <operator pos:start="17:15" pos:end="17:15">(</operator><name pos:start="17:16" pos:end="17:19">insn</name> <operator pos:start="17:21" pos:end="17:21">&amp;</operator> <literal type="number" pos:start="17:23" pos:end="17:25">0xf</literal><operator pos:start="17:26" pos:end="17:26">)</operator> <operator pos:start="17:28" pos:end="17:28">|</operator> <operator pos:start="17:30" pos:end="17:30">(</operator><operator pos:start="17:31" pos:end="17:31">(</operator><name pos:start="17:32" pos:end="17:35">insn</name> <operator pos:start="17:37" pos:end="17:38">&gt;&gt;</operator> <literal type="number" pos:start="17:40" pos:end="17:40">4</literal><operator pos:start="17:41" pos:end="17:41">)</operator> <operator pos:start="17:43" pos:end="17:43">&amp;</operator> <literal type="number" pos:start="17:45" pos:end="17:48">0xf0</literal><operator pos:start="17:49" pos:end="17:49">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="21:23"><if pos:start="19:9" pos:end="21:23">if <condition pos:start="19:12" pos:end="19:32">(<expr pos:start="19:13" pos:end="19:31"><operator pos:start="19:13" pos:end="19:13">!</operator><operator pos:start="19:14" pos:end="19:14">(</operator><name pos:start="19:15" pos:end="19:18">insn</name> <operator pos:start="19:20" pos:end="19:20">&amp;</operator> <operator pos:start="19:22" pos:end="19:22">(</operator><literal type="number" pos:start="19:23" pos:end="19:23">1</literal> <operator pos:start="19:25" pos:end="19:26">&lt;&lt;</operator> <literal type="number" pos:start="19:28" pos:end="19:29">23</literal><operator pos:start="19:30" pos:end="19:30">)</operator><operator pos:start="19:31" pos:end="19:31">)</operator></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:23"><block_content pos:start="21:13" pos:end="21:23">

            <expr_stmt pos:start="21:13" pos:end="21:23"><expr pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:15">val</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <operator pos:start="21:19" pos:end="21:19">-</operator><name pos:start="21:20" pos:end="21:22">val</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:21"><expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:11">val</name> <operator pos:start="23:13" pos:end="23:14">+=</operator> <name pos:start="23:16" pos:end="23:20">extra</name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:44"><if pos:start="25:9" pos:end="27:44">if <condition pos:start="25:12" pos:end="25:21">(<expr pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:15">val</name> <operator pos:start="25:17" pos:end="25:18">!=</operator> <literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:44"><block_content pos:start="27:13" pos:end="27:44">

            <expr_stmt pos:start="27:13" pos:end="27:44"><expr pos:start="27:13" pos:end="27:43"><call pos:start="27:13" pos:end="27:43"><name pos:start="27:13" pos:end="27:28">tcg_gen_addi_i32</name><argument_list pos:start="27:29" pos:end="27:43">(<argument pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:32">var</name></expr></argument>, <argument pos:start="27:35" pos:end="27:37"><expr pos:start="27:35" pos:end="27:37"><name pos:start="27:35" pos:end="27:37">var</name></expr></argument>, <argument pos:start="27:40" pos:end="27:42"><expr pos:start="27:40" pos:end="27:42"><name pos:start="27:40" pos:end="27:42">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="51:5">else <block pos:start="29:12" pos:end="51:5">{<block_content pos:start="33:9" pos:end="49:25">

        <comment type="block" pos:start="31:9" pos:end="31:22">/* register */</comment>

        <if_stmt pos:start="33:9" pos:end="35:46"><if pos:start="33:9" pos:end="35:46">if <condition pos:start="33:12" pos:end="33:18">(<expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:17">extra</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:46"><block_content pos:start="35:13" pos:end="35:46">

            <expr_stmt pos:start="35:13" pos:end="35:46"><expr pos:start="35:13" pos:end="35:45"><call pos:start="35:13" pos:end="35:45"><name pos:start="35:13" pos:end="35:28">tcg_gen_addi_i32</name><argument_list pos:start="35:29" pos:end="35:45">(<argument pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:32">var</name></expr></argument>, <argument pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><name pos:start="35:35" pos:end="35:37">var</name></expr></argument>, <argument pos:start="35:40" pos:end="35:44"><expr pos:start="35:40" pos:end="35:44"><name pos:start="35:40" pos:end="35:44">extra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:26"><expr pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:10">rm</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <operator pos:start="37:14" pos:end="37:14">(</operator><name pos:start="37:15" pos:end="37:18">insn</name><operator pos:start="37:19" pos:end="37:19">)</operator> <operator pos:start="37:21" pos:end="37:21">&amp;</operator> <literal type="number" pos:start="37:23" pos:end="37:25">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:33"><expr pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:14">offset</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <call pos:start="39:18" pos:end="39:32"><name pos:start="39:18" pos:end="39:25">load_reg</name><argument_list pos:start="39:26" pos:end="39:32">(<argument pos:start="39:27" pos:end="39:27"><expr pos:start="39:27" pos:end="39:27"><name pos:start="39:27" pos:end="39:27">s</name></expr></argument>, <argument pos:start="39:30" pos:end="39:31"><expr pos:start="39:30" pos:end="39:31"><name pos:start="39:30" pos:end="39:31">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="47:46"><if pos:start="41:9" pos:end="43:46">if <condition pos:start="41:12" pos:end="41:32">(<expr pos:start="41:13" pos:end="41:31"><operator pos:start="41:13" pos:end="41:13">!</operator><operator pos:start="41:14" pos:end="41:14">(</operator><name pos:start="41:15" pos:end="41:18">insn</name> <operator pos:start="41:20" pos:end="41:20">&amp;</operator> <operator pos:start="41:22" pos:end="41:22">(</operator><literal type="number" pos:start="41:23" pos:end="41:23">1</literal> <operator pos:start="41:25" pos:end="41:26">&lt;&lt;</operator> <literal type="number" pos:start="41:28" pos:end="41:29">23</literal><operator pos:start="41:30" pos:end="41:30">)</operator><operator pos:start="41:31" pos:end="41:31">)</operator></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:46"><block_content pos:start="43:13" pos:end="43:46">

            <expr_stmt pos:start="43:13" pos:end="43:46"><expr pos:start="43:13" pos:end="43:45"><call pos:start="43:13" pos:end="43:45"><name pos:start="43:13" pos:end="43:27">tcg_gen_sub_i32</name><argument_list pos:start="43:28" pos:end="43:45">(<argument pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:31">var</name></expr></argument>, <argument pos:start="43:34" pos:end="43:36"><expr pos:start="43:34" pos:end="43:36"><name pos:start="43:34" pos:end="43:36">var</name></expr></argument>, <argument pos:start="43:39" pos:end="43:44"><expr pos:start="43:39" pos:end="43:44"><name pos:start="43:39" pos:end="43:44">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="45:9" pos:end="47:46">else<block type="pseudo" pos:start="47:13" pos:end="47:46"><block_content pos:start="47:13" pos:end="47:46">

            <expr_stmt pos:start="47:13" pos:end="47:46"><expr pos:start="47:13" pos:end="47:45"><call pos:start="47:13" pos:end="47:45"><name pos:start="47:13" pos:end="47:27">tcg_gen_add_i32</name><argument_list pos:start="47:28" pos:end="47:45">(<argument pos:start="47:29" pos:end="47:31"><expr pos:start="47:29" pos:end="47:31"><name pos:start="47:29" pos:end="47:31">var</name></expr></argument>, <argument pos:start="47:34" pos:end="47:36"><expr pos:start="47:34" pos:end="47:36"><name pos:start="47:34" pos:end="47:36">var</name></expr></argument>, <argument pos:start="47:39" pos:end="47:44"><expr pos:start="47:39" pos:end="47:44"><name pos:start="47:39" pos:end="47:44">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:25"><expr pos:start="49:9" pos:end="49:24"><call pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:16">dead_tmp</name><argument_list pos:start="49:17" pos:end="49:24">(<argument pos:start="49:18" pos:end="49:23"><expr pos:start="49:18" pos:end="49:23"><name pos:start="49:18" pos:end="49:23">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
