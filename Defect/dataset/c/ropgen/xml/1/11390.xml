<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11390.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">colo_packet_compare_icmp</name><parameter_list pos:start="1:36" pos:end="1:63">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:42">Packet</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">spkt</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:56">Packet</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">ppkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:5">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:29">network_header_length</name> <init pos:start="5:31" pos:end="5:51">= <expr pos:start="5:33" pos:end="5:51"><name pos:start="5:33" pos:end="5:47"><name pos:start="5:33" pos:end="5:36">ppkt</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:40">ip</name><operator pos:start="5:41" pos:end="5:42">-&gt;</operator><name pos:start="5:43" pos:end="5:47">ip_hl</name></name> <operator pos:start="5:49" pos:end="5:49">*</operator> <literal type="number" pos:start="5:51" pos:end="5:51">4</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:44"><expr pos:start="9:5" pos:end="9:43"><call pos:start="9:5" pos:end="9:43"><name pos:start="9:5" pos:end="9:27">trace_colo_compare_main</name><argument_list pos:start="9:28" pos:end="9:43">(<argument pos:start="9:29" pos:end="9:42"><expr pos:start="9:29" pos:end="9:42"><literal type="string" pos:start="9:29" pos:end="9:42">"compare icmp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="13:5" pos:end="31:7">/*

     * Because of ppkt and spkt are both in the same connection,

     * The ppkt's src ip, dst ip, src port, dst port, ip_proto all are

     * same with spkt. In addition, IP header's Identification is a random

     * field, we can handle it in IP fragmentation function later.

     * COLO just concern the response net packet payload from primary guest

     * and secondary guest are same or not, So we ignored all IP header include

     * other field like TOS,TTL,IP Checksum. we only need to compare

     * the ip payload here.

     */</comment>

    <if_stmt pos:start="33:5" pos:end="63:5"><if pos:start="33:5" pos:end="59:5">if <condition pos:start="33:8" pos:end="35:69">(<expr pos:start="33:9" pos:end="35:68"><call pos:start="33:9" pos:end="35:68"><name pos:start="33:9" pos:end="33:34">colo_packet_compare_common</name><argument_list pos:start="33:35" pos:end="35:68">(<argument pos:start="33:36" pos:end="33:39"><expr pos:start="33:36" pos:end="33:39"><name pos:start="33:36" pos:end="33:39">ppkt</name></expr></argument>, <argument pos:start="33:42" pos:end="33:45"><expr pos:start="33:42" pos:end="33:45"><name pos:start="33:42" pos:end="33:45">spkt</name></expr></argument>,

                                   <argument pos:start="35:36" pos:end="35:67"><expr pos:start="35:36" pos:end="35:67"><name pos:start="35:36" pos:end="35:56">network_header_length</name> <operator pos:start="35:58" pos:end="35:58">+</operator> <name pos:start="35:60" pos:end="35:67">ETH_HLEN</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:71" pos:end="59:5">{<block_content pos:start="37:9" pos:end="57:18">

        <expr_stmt pos:start="37:9" pos:end="39:55"><expr pos:start="37:9" pos:end="39:54"><call pos:start="37:9" pos:end="39:54"><name pos:start="37:9" pos:end="37:42">trace_colo_compare_icmp_miscompare</name><argument_list pos:start="37:43" pos:end="39:54">(<argument pos:start="37:44" pos:end="37:61"><expr pos:start="37:44" pos:end="37:61"><literal type="string" pos:start="37:44" pos:end="37:61">"primary pkt size"</literal></expr></argument>,

                                           <argument pos:start="39:44" pos:end="39:53"><expr pos:start="39:44" pos:end="39:53"><name pos:start="39:44" pos:end="39:53"><name pos:start="39:44" pos:end="39:47">ppkt</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:53">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="43:55"><expr pos:start="41:9" pos:end="43:54"><call pos:start="41:9" pos:end="43:54"><name pos:start="41:9" pos:end="41:42">trace_colo_compare_icmp_miscompare</name><argument_list pos:start="41:43" pos:end="43:54">(<argument pos:start="41:44" pos:end="41:63"><expr pos:start="41:44" pos:end="41:63"><literal type="string" pos:start="41:44" pos:end="41:63">"Secondary pkt size"</literal></expr></argument>,

                                           <argument pos:start="43:44" pos:end="43:53"><expr pos:start="43:44" pos:end="43:53"><name pos:start="43:44" pos:end="43:53"><name pos:start="43:44" pos:end="43:47">spkt</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:53">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="55:9"><if pos:start="45:9" pos:end="55:9">if <condition pos:start="45:12" pos:end="45:65">(<expr pos:start="45:13" pos:end="45:64"><call pos:start="45:13" pos:end="45:64"><name pos:start="45:13" pos:end="45:33">trace_event_get_state</name><argument_list pos:start="45:34" pos:end="45:64">(<argument pos:start="45:35" pos:end="45:63"><expr pos:start="45:35" pos:end="45:63"><name pos:start="45:35" pos:end="45:63">TRACE_COLO_COMPARE_MISCOMPARE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:67" pos:end="55:9">{<block_content pos:start="47:13" pos:end="53:37">

            <expr_stmt pos:start="47:13" pos:end="49:37"><expr pos:start="47:13" pos:end="49:36"><call pos:start="47:13" pos:end="49:36"><name pos:start="47:13" pos:end="47:24">qemu_hexdump</name><argument_list pos:start="47:25" pos:end="49:36">(<argument pos:start="47:26" pos:end="47:43"><expr pos:start="47:26" pos:end="47:43"><operator pos:start="47:26" pos:end="47:26">(</operator><name pos:start="47:27" pos:end="47:30">char</name> <operator pos:start="47:32" pos:end="47:32">*</operator><operator pos:start="47:33" pos:end="47:33">)</operator><name pos:start="47:34" pos:end="47:43"><name pos:start="47:34" pos:end="47:37">ppkt</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:43">data</name></name></expr></argument>, <argument pos:start="47:46" pos:end="47:51"><expr pos:start="47:46" pos:end="47:51"><name pos:start="47:46" pos:end="47:51">stderr</name></expr></argument>, <argument pos:start="47:54" pos:end="47:75"><expr pos:start="47:54" pos:end="47:75"><literal type="string" pos:start="47:54" pos:end="47:75">"colo-compare pri pkt"</literal></expr></argument>,

                         <argument pos:start="49:26" pos:end="49:35"><expr pos:start="49:26" pos:end="49:35"><name pos:start="49:26" pos:end="49:35"><name pos:start="49:26" pos:end="49:29">ppkt</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:35">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="53:37"><expr pos:start="51:13" pos:end="53:36"><call pos:start="51:13" pos:end="53:36"><name pos:start="51:13" pos:end="51:24">qemu_hexdump</name><argument_list pos:start="51:25" pos:end="53:36">(<argument pos:start="51:26" pos:end="51:43"><expr pos:start="51:26" pos:end="51:43"><operator pos:start="51:26" pos:end="51:26">(</operator><name pos:start="51:27" pos:end="51:30">char</name> <operator pos:start="51:32" pos:end="51:32">*</operator><operator pos:start="51:33" pos:end="51:33">)</operator><name pos:start="51:34" pos:end="51:43"><name pos:start="51:34" pos:end="51:37">spkt</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:43">data</name></name></expr></argument>, <argument pos:start="51:46" pos:end="51:51"><expr pos:start="51:46" pos:end="51:51"><name pos:start="51:46" pos:end="51:51">stderr</name></expr></argument>, <argument pos:start="51:54" pos:end="51:75"><expr pos:start="51:54" pos:end="51:75"><literal type="string" pos:start="51:54" pos:end="51:75">"colo-compare sec pkt"</literal></expr></argument>,

                         <argument pos:start="53:26" pos:end="53:35"><expr pos:start="53:26" pos:end="53:35"><name pos:start="53:26" pos:end="53:35"><name pos:start="53:26" pos:end="53:29">spkt</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:35">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="63:5">else <block pos:start="59:12" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:17">

        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
