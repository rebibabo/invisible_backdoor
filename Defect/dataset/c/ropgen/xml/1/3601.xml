<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3601.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:57"><name pos:start="1:1" pos:end="1:23">vubr_set_mem_table_exec</name><argument_list pos:start="1:24" pos:end="1:57">(<argument pos:start="1:25" pos:end="1:36">VubrDev *dev</argument>, <argument pos:start="1:39" pos:end="1:56">VhostUserMsg *vmsg</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">VhostUserMemory</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:27">memory</name> <init pos:start="7:29" pos:end="7:51">= <expr pos:start="7:31" pos:end="7:51"><operator pos:start="7:31" pos:end="7:31">&amp;</operator><name pos:start="7:32" pos:end="7:51"><name pos:start="7:32" pos:end="7:35">vmsg</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:44">payload</name><operator pos:start="7:45" pos:end="7:45">.</operator><name pos:start="7:46" pos:end="7:51">memory</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:37"><expr pos:start="9:5" pos:end="9:36"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:7">dev</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:17">nregions</name></name> <operator pos:start="9:19" pos:end="9:19">=</operator> <name pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:26">memory</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:36">nregions</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:47"><expr pos:start="13:5" pos:end="13:46"><call pos:start="13:5" pos:end="13:46"><name pos:start="13:5" pos:end="13:10">DPRINT</name><argument_list pos:start="13:11" pos:end="13:46">(<argument pos:start="13:12" pos:end="13:27"><expr pos:start="13:12" pos:end="13:27"><literal type="string" pos:start="13:12" pos:end="13:27">"Nregions: %d\n"</literal></expr></argument>, <argument pos:start="13:30" pos:end="13:45"><expr pos:start="13:30" pos:end="13:45"><name pos:start="13:30" pos:end="13:45"><name pos:start="13:30" pos:end="13:35">memory</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:45">nregions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="15:5" pos:end="81:5">for <control pos:start="15:9" pos:end="15:39">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:34"><expr pos:start="15:17" pos:end="15:33"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:33"><name pos:start="15:21" pos:end="15:23">dev</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:33">nregions</name></name></expr>;</condition> <incr pos:start="15:36" pos:end="15:38"><expr pos:start="15:36" pos:end="15:38"><name pos:start="15:36" pos:end="15:36">i</name><operator pos:start="15:37" pos:end="15:38">++</operator></expr></incr>)</control> <block pos:start="15:41" pos:end="81:5">{<block_content pos:start="17:9" pos:end="79:79">

        <decl_stmt pos:start="17:9" pos:end="17:24"><decl pos:start="17:9" pos:end="17:23"><type pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:12">void</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:23">mmap_addr</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:64"><decl pos:start="19:9" pos:end="19:63"><type pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:29">VhostUserMemoryRegion</name> <modifier pos:start="19:31" pos:end="19:31">*</modifier></type><name pos:start="19:32" pos:end="19:41">msg_region</name> <init pos:start="19:43" pos:end="19:63">= <expr pos:start="19:45" pos:end="19:63"><operator pos:start="19:45" pos:end="19:45">&amp;</operator><name pos:start="19:46" pos:end="19:63"><name pos:start="19:46" pos:end="19:51">memory</name><operator pos:start="19:52" pos:end="19:53">-&gt;</operator><name pos:start="19:54" pos:end="19:60">regions</name><index pos:start="19:61" pos:end="19:63">[<expr pos:start="19:62" pos:end="19:62"><name pos:start="19:62" pos:end="19:62">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:53"><decl pos:start="21:9" pos:end="21:52"><type pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:21">VubrDevRegion</name> <modifier pos:start="21:23" pos:end="21:23">*</modifier></type><name pos:start="21:24" pos:end="21:33">dev_region</name> <init pos:start="21:35" pos:end="21:52">= <expr pos:start="21:37" pos:end="21:52"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:52"><name pos:start="21:38" pos:end="21:40">dev</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:49">regions</name><index pos:start="21:50" pos:end="21:52">[<expr pos:start="21:51" pos:end="21:51"><name pos:start="21:51" pos:end="21:51">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><call pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:14">DPRINT</name><argument_list pos:start="25:15" pos:end="25:32">(<argument pos:start="25:16" pos:end="25:28"><expr pos:start="25:16" pos:end="25:28"><literal type="string" pos:start="25:16" pos:end="25:28">"Region %d\n"</literal></expr></argument>, <argument pos:start="25:31" pos:end="25:31"><expr pos:start="25:31" pos:end="25:31"><name pos:start="25:31" pos:end="25:31">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="29:44"><expr pos:start="27:9" pos:end="29:43"><call pos:start="27:9" pos:end="29:43"><name pos:start="27:9" pos:end="27:14">DPRINT</name><argument_list pos:start="27:15" pos:end="29:43">(<argument pos:start="27:16" pos:end="27:54"><expr pos:start="27:16" pos:end="27:54"><literal type="string" pos:start="27:16" pos:end="27:44">"    guest_phys_addr: 0x%016"</literal><name pos:start="27:45" pos:end="27:50">PRIx64</name><literal type="string" pos:start="27:51" pos:end="27:54">"\n"</literal></expr></argument>,

               <argument pos:start="29:16" pos:end="29:42"><expr pos:start="29:16" pos:end="29:42"><name pos:start="29:16" pos:end="29:42"><name pos:start="29:16" pos:end="29:25">msg_region</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:42">guest_phys_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="33:40"><expr pos:start="31:9" pos:end="33:39"><call pos:start="31:9" pos:end="33:39"><name pos:start="31:9" pos:end="31:14">DPRINT</name><argument_list pos:start="31:15" pos:end="33:39">(<argument pos:start="31:16" pos:end="31:54"><expr pos:start="31:16" pos:end="31:54"><literal type="string" pos:start="31:16" pos:end="31:44">"    memory_size:     0x%016"</literal><name pos:start="31:45" pos:end="31:50">PRIx64</name><literal type="string" pos:start="31:51" pos:end="31:54">"\n"</literal></expr></argument>,

               <argument pos:start="33:16" pos:end="33:38"><expr pos:start="33:16" pos:end="33:38"><name pos:start="33:16" pos:end="33:38"><name pos:start="33:16" pos:end="33:25">msg_region</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:38">memory_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="37:43"><expr pos:start="35:9" pos:end="37:42"><call pos:start="35:9" pos:end="37:42"><name pos:start="35:9" pos:end="35:14">DPRINT</name><argument_list pos:start="35:15" pos:end="37:42">(<argument pos:start="35:16" pos:end="35:54"><expr pos:start="35:16" pos:end="35:54"><literal type="string" pos:start="35:16" pos:end="35:44">"    userspace_addr   0x%016"</literal><name pos:start="35:45" pos:end="35:50">PRIx64</name><literal type="string" pos:start="35:51" pos:end="35:54">"\n"</literal></expr></argument>,

               <argument pos:start="37:16" pos:end="37:41"><expr pos:start="37:16" pos:end="37:41"><name pos:start="37:16" pos:end="37:41"><name pos:start="37:16" pos:end="37:25">msg_region</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:41">userspace_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="41:40"><expr pos:start="39:9" pos:end="41:39"><call pos:start="39:9" pos:end="41:39"><name pos:start="39:9" pos:end="39:14">DPRINT</name><argument_list pos:start="39:15" pos:end="41:39">(<argument pos:start="39:16" pos:end="39:54"><expr pos:start="39:16" pos:end="39:54"><literal type="string" pos:start="39:16" pos:end="39:44">"    mmap_offset      0x%016"</literal><name pos:start="39:45" pos:end="39:50">PRIx64</name><literal type="string" pos:start="39:51" pos:end="39:54">"\n"</literal></expr></argument>,

               <argument pos:start="41:16" pos:end="41:38"><expr pos:start="41:16" pos:end="41:38"><name pos:start="41:16" pos:end="41:38"><name pos:start="41:16" pos:end="41:25">msg_region</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:38">mmap_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:54"><expr pos:start="45:9" pos:end="45:53"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:18">dev_region</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:23">gpa</name></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:53"><name pos:start="45:27" pos:end="45:36">msg_region</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:53">guest_phys_addr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:51"><expr pos:start="47:9" pos:end="47:50"><name pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:18">dev_region</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:24">size</name></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <name pos:start="47:28" pos:end="47:50"><name pos:start="47:28" pos:end="47:37">msg_region</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:50">memory_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:53"><expr pos:start="49:9" pos:end="49:52"><name pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:18">dev_region</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:23">qva</name></name> <operator pos:start="49:25" pos:end="49:25">=</operator> <name pos:start="49:27" pos:end="49:52"><name pos:start="49:27" pos:end="49:36">msg_region</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:52">userspace_addr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:58"><expr pos:start="51:9" pos:end="51:57"><name pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:18">dev_region</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:31">mmap_offset</name></name> <operator pos:start="51:33" pos:end="51:33">=</operator> <name pos:start="51:35" pos:end="51:57"><name pos:start="51:35" pos:end="51:44">msg_region</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:57">mmap_offset</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="55:9" pos:end="59:21">/* We don't use offset argument of mmap() since the

         * mapped address has to be page aligned, and we use huge

         * pages.  */</comment>

        <expr_stmt pos:start="61:9" pos:end="65:42"><expr pos:start="61:9" pos:end="65:41"><name pos:start="61:9" pos:end="61:17">mmap_addr</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="65:41"><name pos:start="61:21" pos:end="61:24">mmap</name><argument_list pos:start="61:25" pos:end="65:41">(<argument pos:start="61:26" pos:end="61:26"><expr pos:start="61:26" pos:end="61:26"><literal type="number" pos:start="61:26" pos:end="61:26">0</literal></expr></argument>, <argument pos:start="61:29" pos:end="61:70"><expr pos:start="61:29" pos:end="61:70"><name pos:start="61:29" pos:end="61:44"><name pos:start="61:29" pos:end="61:38">dev_region</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:44">size</name></name> <operator pos:start="61:46" pos:end="61:46">+</operator> <name pos:start="61:48" pos:end="61:70"><name pos:start="61:48" pos:end="61:57">dev_region</name><operator pos:start="61:58" pos:end="61:59">-&gt;</operator><name pos:start="61:60" pos:end="61:70">mmap_offset</name></name></expr></argument>,

                         <argument pos:start="63:26" pos:end="63:47"><expr pos:start="63:26" pos:end="63:47"><name pos:start="63:26" pos:end="63:34">PROT_READ</name> <operator pos:start="63:36" pos:end="63:36">|</operator> <name pos:start="63:38" pos:end="63:47">PROT_WRITE</name></expr></argument>, <argument pos:start="63:50" pos:end="63:59"><expr pos:start="63:50" pos:end="63:59"><name pos:start="63:50" pos:end="63:59">MAP_SHARED</name></expr></argument>,

                         <argument pos:start="65:26" pos:end="65:37"><expr pos:start="65:26" pos:end="65:37"><name pos:start="65:26" pos:end="65:37"><name pos:start="65:26" pos:end="65:29">vmsg</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:34">fds</name><index pos:start="65:35" pos:end="65:37">[<expr pos:start="65:36" pos:end="65:36"><name pos:start="65:36" pos:end="65:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="65:40" pos:end="65:40"><expr pos:start="65:40" pos:end="65:40"><literal type="number" pos:start="65:40" pos:end="65:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:36">(<expr pos:start="69:13" pos:end="69:35"><name pos:start="69:13" pos:end="69:21">mmap_addr</name> <operator pos:start="69:23" pos:end="69:24">==</operator> <name pos:start="69:26" pos:end="69:35">MAP_FAILED</name></expr>)</condition> <block pos:start="69:38" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:29">

            <expr_stmt pos:start="71:13" pos:end="71:29"><expr pos:start="71:13" pos:end="71:28"><call pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:20">vubr_die</name><argument_list pos:start="71:21" pos:end="71:28">(<argument pos:start="71:22" pos:end="71:27"><expr pos:start="71:22" pos:end="71:27"><literal type="string" pos:start="71:22" pos:end="71:27">"mmap"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:53"><expr pos:start="77:9" pos:end="77:52"><name pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:18">dev_region</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:29">mmap_addr</name></name> <operator pos:start="77:31" pos:end="77:31">=</operator> <operator pos:start="77:33" pos:end="77:33">(</operator><name pos:start="77:34" pos:end="77:41">uint64_t</name><operator pos:start="77:42" pos:end="77:42">)</operator> <name pos:start="77:44" pos:end="77:52">mmap_addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:79"><expr pos:start="79:9" pos:end="79:78"><call pos:start="79:9" pos:end="79:78"><name pos:start="79:9" pos:end="79:14">DPRINT</name><argument_list pos:start="79:15" pos:end="79:78">(<argument pos:start="79:16" pos:end="79:54"><expr pos:start="79:16" pos:end="79:54"><literal type="string" pos:start="79:16" pos:end="79:44">"    mmap_addr:       0x%016"</literal><name pos:start="79:45" pos:end="79:50">PRIx64</name><literal type="string" pos:start="79:51" pos:end="79:54">"\n"</literal></expr></argument>, <argument pos:start="79:57" pos:end="79:77"><expr pos:start="79:57" pos:end="79:77"><name pos:start="79:57" pos:end="79:77"><name pos:start="79:57" pos:end="79:66">dev_region</name><operator pos:start="79:67" pos:end="79:68">-&gt;</operator><name pos:start="79:69" pos:end="79:77">mmap_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>

</block_content>}</block>
</unit>
