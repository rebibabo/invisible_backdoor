<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7617.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">visit_start_alternate</name><parameter_list pos:start="1:27" pos:end="5:58">(<parameter pos:start="1:28" pos:end="1:37"><decl pos:start="1:28" pos:end="1:37"><type pos:start="1:28" pos:end="1:37"><name pos:start="1:28" pos:end="1:34">Visitor</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">v</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:55"><decl pos:start="1:40" pos:end="1:55"><type pos:start="1:40" pos:end="1:55"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">name</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><name pos:start="3:28" pos:end="3:43">GenericAlternate</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier><modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:49">obj</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:62"><decl pos:start="3:52" pos:end="3:62"><type pos:start="3:52" pos:end="3:62"><name pos:start="3:52" pos:end="3:57">size_t</name></type> <name pos:start="3:59" pos:end="3:62">size</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:43"><decl pos:start="5:28" pos:end="5:43"><type pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:31">bool</name></type> <name pos:start="5:33" pos:end="5:43">promote_int</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:57"><decl pos:start="5:46" pos:end="5:57"><type pos:start="5:46" pos:end="5:57"><name pos:start="5:46" pos:end="5:50">Error</name> <modifier pos:start="5:52" pos:end="5:52">*</modifier><modifier pos:start="5:53" pos:end="5:53">*</modifier></type><name pos:start="5:54" pos:end="5:57">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="31:1">{<block_content pos:start="9:5" pos:end="29:31">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><call pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:51">(<argument pos:start="13:12" pos:end="13:50"><expr pos:start="13:12" pos:end="13:50"><name pos:start="13:12" pos:end="13:14">obj</name> <operator pos:start="13:16" pos:end="13:17">&amp;&amp;</operator> <name pos:start="13:19" pos:end="13:22">size</name> <operator pos:start="13:24" pos:end="13:25">&gt;=</operator> <sizeof pos:start="13:27" pos:end="13:50">sizeof<argument_list pos:start="13:33" pos:end="13:50">(<argument pos:start="13:34" pos:end="13:49"><expr pos:start="13:34" pos:end="13:49"><name pos:start="13:34" pos:end="13:49">GenericAlternate</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><call pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:45">(<argument pos:start="15:12" pos:end="15:44"><expr pos:start="15:12" pos:end="15:44"><name pos:start="15:12" pos:end="15:18"><name pos:start="15:12" pos:end="15:12">v</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:18">type</name></name> <operator pos:start="15:20" pos:end="15:21">!=</operator> <name pos:start="15:23" pos:end="15:36">VISITOR_OUTPUT</name> <operator pos:start="15:38" pos:end="15:39">||</operator> <operator pos:start="15:41" pos:end="15:41">*</operator><name pos:start="15:42" pos:end="15:44">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:27">(<expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:9">v</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:26">start_alternate</name></name></expr>)</condition> <block pos:start="17:29" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:66">

        <expr_stmt pos:start="19:9" pos:end="19:66"><expr pos:start="19:9" pos:end="19:65"><call pos:start="19:9" pos:end="19:65"><name pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:9">v</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:26">start_alternate</name></name><argument_list pos:start="19:27" pos:end="19:65">(<argument pos:start="19:28" pos:end="19:28"><expr pos:start="19:28" pos:end="19:28"><name pos:start="19:28" pos:end="19:28">v</name></expr></argument>, <argument pos:start="19:31" pos:end="19:34"><expr pos:start="19:31" pos:end="19:34"><name pos:start="19:31" pos:end="19:34">name</name></expr></argument>, <argument pos:start="19:37" pos:end="19:39"><expr pos:start="19:37" pos:end="19:39"><name pos:start="19:37" pos:end="19:39">obj</name></expr></argument>, <argument pos:start="19:42" pos:end="19:45"><expr pos:start="19:42" pos:end="19:45"><name pos:start="19:42" pos:end="19:45">size</name></expr></argument>, <argument pos:start="19:48" pos:end="19:58"><expr pos:start="19:48" pos:end="19:58"><name pos:start="19:48" pos:end="19:58">promote_int</name></expr></argument>, <argument pos:start="19:61" pos:end="19:64"><expr pos:start="19:61" pos:end="19:64"><operator pos:start="19:61" pos:end="19:61">&amp;</operator><name pos:start="19:62" pos:end="19:64">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:33">(<expr pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:9">v</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">type</name></name> <operator pos:start="23:17" pos:end="23:18">==</operator> <name pos:start="23:20" pos:end="23:32">VISITOR_INPUT</name></expr>)</condition> <block pos:start="23:35" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:52">

        <expr_stmt pos:start="25:9" pos:end="25:52"><expr pos:start="25:9" pos:end="25:51"><call pos:start="25:9" pos:end="25:51"><name pos:start="25:9" pos:end="25:14">assert</name><argument_list pos:start="25:15" pos:end="25:51">(<argument pos:start="25:16" pos:end="25:50"><expr pos:start="25:16" pos:end="25:50"><name pos:start="25:16" pos:end="25:33"><name pos:start="25:16" pos:end="25:16">v</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:33">start_alternate</name></name> <operator pos:start="25:35" pos:end="25:36">&amp;&amp;</operator> <operator pos:start="25:38" pos:end="25:38">!</operator><name pos:start="25:39" pos:end="25:41">err</name> <operator pos:start="25:43" pos:end="25:44">!=</operator> <operator pos:start="25:46" pos:end="25:46">!</operator><operator pos:start="25:47" pos:end="25:47">*</operator><name pos:start="25:48" pos:end="25:50">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><call pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:19">error_propagate</name><argument_list pos:start="29:20" pos:end="29:30">(<argument pos:start="29:21" pos:end="29:24"><expr pos:start="29:21" pos:end="29:24"><name pos:start="29:21" pos:end="29:24">errp</name></expr></argument>, <argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
