<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24107.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">sb16_realizefn</name> <parameter_list pos:start="1:28" pos:end="1:59">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:39">DeviceState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">dev</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:51">Error</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier><modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:41">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">ISADevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:21">isadev</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><call pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:34">ISA_DEVICE</name> <argument_list pos:start="5:36" pos:end="5:40">(<argument pos:start="5:37" pos:end="5:39"><expr pos:start="5:37" pos:end="5:39"><name pos:start="5:37" pos:end="5:39">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">SB16State</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:29">= <expr pos:start="7:20" pos:end="7:29"><call pos:start="7:20" pos:end="7:29"><name pos:start="7:20" pos:end="7:23">SB16</name> <argument_list pos:start="7:25" pos:end="7:29">(<argument pos:start="7:26" pos:end="7:28"><expr pos:start="7:26" pos:end="7:28"><name pos:start="7:26" pos:end="7:28">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">IsaDmaClass</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:18">k</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><call pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:16">isa_init_irq</name> <argument_list pos:start="13:18" pos:end="13:42">(<argument pos:start="13:19" pos:end="13:24"><expr pos:start="13:19" pos:end="13:24"><name pos:start="13:19" pos:end="13:24">isadev</name></expr></argument>, <argument pos:start="13:27" pos:end="13:33"><expr pos:start="13:27" pos:end="13:33"><operator pos:start="13:27" pos:end="13:27">&amp;</operator><name pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:33">pic</name></name></expr></argument>, <argument pos:start="13:36" pos:end="13:41"><expr pos:start="13:36" pos:end="13:41"><name pos:start="13:36" pos:end="13:41"><name pos:start="13:36" pos:end="13:36">s</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:41">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:17">mixer_regs</name><index pos:start="17:18" pos:end="17:23">[<expr pos:start="17:19" pos:end="17:22"><literal type="number" pos:start="17:19" pos:end="17:22">0x80</literal></expr>]</index></name> <operator pos:start="17:25" pos:end="17:25">=</operator> <call pos:start="17:27" pos:end="17:47"><name pos:start="17:27" pos:end="17:38">magic_of_irq</name> <argument_list pos:start="17:40" pos:end="17:47">(<argument pos:start="17:41" pos:end="17:46"><expr pos:start="17:41" pos:end="17:46"><name pos:start="17:41" pos:end="17:46"><name pos:start="17:41" pos:end="17:41">s</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:46">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:57"><expr pos:start="19:5" pos:end="19:56"><name pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:17">mixer_regs</name><index pos:start="19:18" pos:end="19:23">[<expr pos:start="19:19" pos:end="19:22"><literal type="number" pos:start="19:19" pos:end="19:22">0x81</literal></expr>]</index></name> <operator pos:start="19:25" pos:end="19:25">=</operator> <operator pos:start="19:27" pos:end="19:27">(</operator><literal type="number" pos:start="19:28" pos:end="19:28">1</literal> <operator pos:start="19:30" pos:end="19:31">&lt;&lt;</operator> <name pos:start="19:33" pos:end="19:38"><name pos:start="19:33" pos:end="19:33">s</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:38">dma</name></name><operator pos:start="19:39" pos:end="19:39">)</operator> <operator pos:start="19:41" pos:end="19:41">|</operator> <operator pos:start="19:43" pos:end="19:43">(</operator><literal type="number" pos:start="19:44" pos:end="19:44">1</literal> <operator pos:start="19:46" pos:end="19:47">&lt;&lt;</operator> <name pos:start="19:49" pos:end="19:55"><name pos:start="19:49" pos:end="19:49">s</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:55">hdma</name></name><operator pos:start="19:56" pos:end="19:56">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:17">mixer_regs</name><index pos:start="21:18" pos:end="21:23">[<expr pos:start="21:19" pos:end="21:22"><literal type="number" pos:start="21:19" pos:end="21:22">0x82</literal></expr>]</index></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <literal type="number" pos:start="21:27" pos:end="21:27">2</literal> <operator pos:start="21:29" pos:end="21:30">&lt;&lt;</operator> <literal type="number" pos:start="21:32" pos:end="21:32">5</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:15">csp_regs</name><index pos:start="25:16" pos:end="25:18">[<expr pos:start="25:17" pos:end="25:17"><literal type="number" pos:start="25:17" pos:end="25:17">5</literal></expr>]</index></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:26"><expr pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:15">csp_regs</name><index pos:start="27:16" pos:end="27:18">[<expr pos:start="27:17" pos:end="27:17"><literal type="number" pos:start="27:17" pos:end="27:17">9</literal></expr>]</index></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:25">0xf8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:20"><expr pos:start="31:5" pos:end="31:19"><call pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:15">reset_mixer</name> <argument_list pos:start="31:17" pos:end="31:19">(<argument pos:start="31:18" pos:end="31:18"><expr pos:start="31:18" pos:end="31:18"><name pos:start="31:18" pos:end="31:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:63"><expr pos:start="33:5" pos:end="33:62"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:13">aux_ts</name></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <call pos:start="33:17" pos:end="33:62"><name pos:start="33:17" pos:end="33:28">timer_new_ns</name><argument_list pos:start="33:29" pos:end="33:62">(<argument pos:start="33:30" pos:end="33:47"><expr pos:start="33:30" pos:end="33:47"><name pos:start="33:30" pos:end="33:47">QEMU_CLOCK_VIRTUAL</name></expr></argument>, <argument pos:start="33:50" pos:end="33:58"><expr pos:start="33:50" pos:end="33:58"><name pos:start="33:50" pos:end="33:58">aux_timer</name></expr></argument>, <argument pos:start="33:61" pos:end="33:61"><expr pos:start="33:61" pos:end="33:61"><name pos:start="33:61" pos:end="33:61">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:19">(<expr pos:start="35:9" pos:end="35:18"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:18"><name pos:start="35:10" pos:end="35:10">s</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:18">aux_ts</name></name></expr>)</condition> <block pos:start="35:21" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:62">

        <expr_stmt pos:start="37:9" pos:end="37:62"><expr pos:start="37:9" pos:end="37:61"><call pos:start="37:9" pos:end="37:61"><name pos:start="37:9" pos:end="37:13">dolog</name> <argument_list pos:start="37:15" pos:end="37:61">(<argument pos:start="37:16" pos:end="37:60"><expr pos:start="37:16" pos:end="37:60"><literal type="string" pos:start="37:16" pos:end="37:60">"warning: Could not create auxiliary timer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:76"><expr pos:start="43:5" pos:end="43:75"><call pos:start="43:5" pos:end="43:75"><name pos:start="43:5" pos:end="43:28">isa_register_portio_list</name> <argument_list pos:start="43:30" pos:end="43:75">(<argument pos:start="43:31" pos:end="43:36"><expr pos:start="43:31" pos:end="43:36"><name pos:start="43:31" pos:end="43:36">isadev</name></expr></argument>, <argument pos:start="43:39" pos:end="43:45"><expr pos:start="43:39" pos:end="43:45"><name pos:start="43:39" pos:end="43:45"><name pos:start="43:39" pos:end="43:39">s</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:45">port</name></name></expr></argument>, <argument pos:start="43:48" pos:end="43:63"><expr pos:start="43:48" pos:end="43:63"><name pos:start="43:48" pos:end="43:63">sb16_ioport_list</name></expr></argument>, <argument pos:start="43:66" pos:end="43:66"><expr pos:start="43:66" pos:end="43:66"><name pos:start="43:66" pos:end="43:66">s</name></expr></argument>, <argument pos:start="43:69" pos:end="43:74"><expr pos:start="43:69" pos:end="43:74"><literal type="string" pos:start="43:69" pos:end="43:74">"sb16"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:68"><expr pos:start="47:5" pos:end="47:67"><name pos:start="47:5" pos:end="47:15"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:15">isa_hdma</name></name> <operator pos:start="47:17" pos:end="47:17">=</operator> <call pos:start="47:19" pos:end="47:67"><name pos:start="47:19" pos:end="47:29">isa_get_dma</name><argument_list pos:start="47:30" pos:end="47:67">(<argument pos:start="47:31" pos:end="47:57"><expr pos:start="47:31" pos:end="47:57"><call pos:start="47:31" pos:end="47:57"><name pos:start="47:31" pos:end="47:49">isa_bus_from_device</name><argument_list pos:start="47:50" pos:end="47:57">(<argument pos:start="47:51" pos:end="47:56"><expr pos:start="47:51" pos:end="47:56"><name pos:start="47:51" pos:end="47:56">isadev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:60" pos:end="47:66"><expr pos:start="47:60" pos:end="47:66"><name pos:start="47:60" pos:end="47:66"><name pos:start="47:60" pos:end="47:60">s</name><operator pos:start="47:61" pos:end="47:62">-&gt;</operator><name pos:start="47:63" pos:end="47:66">hdma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:5">k</name> <operator pos:start="49:7" pos:end="49:7">=</operator> <call pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:24">ISADMA_GET_CLASS</name><argument_list pos:start="49:25" pos:end="49:37">(<argument pos:start="49:26" pos:end="49:36"><expr pos:start="49:26" pos:end="49:36"><name pos:start="49:26" pos:end="49:36"><name pos:start="49:26" pos:end="49:26">s</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:36">isa_hdma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:62"><expr pos:start="51:5" pos:end="51:61"><call pos:start="51:5" pos:end="51:61"><name pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:5">k</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:23">register_channel</name></name><argument_list pos:start="51:24" pos:end="51:61">(<argument pos:start="51:25" pos:end="51:35"><expr pos:start="51:25" pos:end="51:35"><name pos:start="51:25" pos:end="51:35"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:35">isa_hdma</name></name></expr></argument>, <argument pos:start="51:38" pos:end="51:44"><expr pos:start="51:38" pos:end="51:44"><name pos:start="51:38" pos:end="51:44"><name pos:start="51:38" pos:end="51:38">s</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:44">hdma</name></name></expr></argument>, <argument pos:start="51:47" pos:end="51:57"><expr pos:start="51:47" pos:end="51:57"><name pos:start="51:47" pos:end="51:57">SB_read_DMA</name></expr></argument>, <argument pos:start="51:60" pos:end="51:60"><expr pos:start="51:60" pos:end="51:60"><name pos:start="51:60" pos:end="51:60">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:66"><expr pos:start="55:5" pos:end="55:65"><name pos:start="55:5" pos:end="55:14"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:14">isa_dma</name></name> <operator pos:start="55:16" pos:end="55:16">=</operator> <call pos:start="55:18" pos:end="55:65"><name pos:start="55:18" pos:end="55:28">isa_get_dma</name><argument_list pos:start="55:29" pos:end="55:65">(<argument pos:start="55:30" pos:end="55:56"><expr pos:start="55:30" pos:end="55:56"><call pos:start="55:30" pos:end="55:56"><name pos:start="55:30" pos:end="55:48">isa_bus_from_device</name><argument_list pos:start="55:49" pos:end="55:56">(<argument pos:start="55:50" pos:end="55:55"><expr pos:start="55:50" pos:end="55:55"><name pos:start="55:50" pos:end="55:55">isadev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:59" pos:end="55:64"><expr pos:start="55:59" pos:end="55:64"><name pos:start="55:59" pos:end="55:64"><name pos:start="55:59" pos:end="55:59">s</name><operator pos:start="55:60" pos:end="55:61">-&gt;</operator><name pos:start="55:62" pos:end="55:64">dma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:37"><expr pos:start="57:5" pos:end="57:36"><name pos:start="57:5" pos:end="57:5">k</name> <operator pos:start="57:7" pos:end="57:7">=</operator> <call pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:24">ISADMA_GET_CLASS</name><argument_list pos:start="57:25" pos:end="57:36">(<argument pos:start="57:26" pos:end="57:35"><expr pos:start="57:26" pos:end="57:35"><name pos:start="57:26" pos:end="57:35"><name pos:start="57:26" pos:end="57:26">s</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:35">isa_dma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:60"><expr pos:start="59:5" pos:end="59:59"><call pos:start="59:5" pos:end="59:59"><name pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:5">k</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:23">register_channel</name></name><argument_list pos:start="59:24" pos:end="59:59">(<argument pos:start="59:25" pos:end="59:34"><expr pos:start="59:25" pos:end="59:34"><name pos:start="59:25" pos:end="59:34"><name pos:start="59:25" pos:end="59:25">s</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:34">isa_dma</name></name></expr></argument>, <argument pos:start="59:37" pos:end="59:42"><expr pos:start="59:37" pos:end="59:42"><name pos:start="59:37" pos:end="59:42"><name pos:start="59:37" pos:end="59:37">s</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:42">dma</name></name></expr></argument>, <argument pos:start="59:45" pos:end="59:55"><expr pos:start="59:45" pos:end="59:55"><name pos:start="59:45" pos:end="59:55">SB_read_DMA</name></expr></argument>, <argument pos:start="59:58" pos:end="59:58"><expr pos:start="59:58" pos:end="59:58"><name pos:start="59:58" pos:end="59:58">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:16">can_write</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <literal type="number" pos:start="63:20" pos:end="63:20">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:41"><expr pos:start="67:5" pos:end="67:40"><call pos:start="67:5" pos:end="67:40"><name pos:start="67:5" pos:end="67:21">AUD_register_card</name> <argument_list pos:start="67:23" pos:end="67:40">(<argument pos:start="67:24" pos:end="67:29"><expr pos:start="67:24" pos:end="67:29"><literal type="string" pos:start="67:24" pos:end="67:29">"sb16"</literal></expr></argument>, <argument pos:start="67:32" pos:end="67:39"><expr pos:start="67:32" pos:end="67:39"><operator pos:start="67:32" pos:end="67:32">&amp;</operator><name pos:start="67:33" pos:end="67:39"><name pos:start="67:33" pos:end="67:33">s</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:39">card</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
