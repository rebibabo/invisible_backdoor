<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19702.c" pos:tabs="8"><function pos:start="1:1" pos:end="325:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:29">ff_dxva2_common_end_frame</name><parameter_list pos:start="1:30" pos:end="11:78">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:67"><decl pos:start="1:54" pos:end="1:67"><type pos:start="1:54" pos:end="1:67"><name pos:start="1:54" pos:end="1:60">AVFrame</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">frame</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:44"><decl pos:start="3:31" pos:end="3:44"><type pos:start="3:31" pos:end="3:44"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:40">void</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:44">pp</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:62"><decl pos:start="3:47" pos:end="3:62"><type pos:start="3:47" pos:end="3:62"><name pos:start="3:47" pos:end="3:54">unsigned</name></type> <name pos:start="3:56" pos:end="3:62">pp_size</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:44"><decl pos:start="5:31" pos:end="5:44"><type pos:start="5:31" pos:end="5:44"><specifier pos:start="5:31" pos:end="5:35">const</specifier> <name pos:start="5:37" pos:end="5:40">void</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier></type><name pos:start="5:43" pos:end="5:44">qm</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:62"><decl pos:start="5:47" pos:end="5:62"><type pos:start="5:47" pos:end="5:62"><name pos:start="5:47" pos:end="5:54">unsigned</name></type> <name pos:start="5:56" pos:end="5:62">qm_size</name></decl></parameter>,

                              <parameter pos:start="7:31" pos:end="11:77"><function_decl pos:start="7:31" pos:end="11:77"><type pos:start="7:31" pos:end="7:33"><name pos:start="7:31" pos:end="7:33">int</name></type> (<modifier pos:start="7:36" pos:end="7:36">*</modifier><name pos:start="7:37" pos:end="7:48">commit_bs_si</name>)<parameter_list pos:start="7:50" pos:end="11:77">(<parameter pos:start="7:51" pos:end="7:66"><decl pos:start="7:51" pos:end="7:66"><type pos:start="7:51" pos:end="7:66"><name pos:start="7:51" pos:end="7:64">AVCodecContext</name> <modifier pos:start="7:66" pos:end="7:66">*</modifier></type></decl></parameter>,

                                                  <parameter pos:start="9:51" pos:end="9:73"><decl pos:start="9:51" pos:end="9:73"><type pos:start="9:51" pos:end="9:73"><name pos:start="9:51" pos:end="9:69">DECODER_BUFFER_DESC</name> <modifier pos:start="9:71" pos:end="9:71">*</modifier></type><name pos:start="9:72" pos:end="9:73">bs</name></decl></parameter>,

                                                  <parameter pos:start="11:51" pos:end="11:76"><decl pos:start="11:51" pos:end="11:76"><type pos:start="11:51" pos:end="11:76"><name pos:start="11:51" pos:end="11:69">DECODER_BUFFER_DESC</name> <modifier pos:start="11:71" pos:end="11:71">*</modifier></type><name pos:start="11:72" pos:end="11:76">slice</name></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="325:1">{<block_content pos:start="15:5" pos:end="323:18">

    <decl_stmt pos:start="15:5" pos:end="15:48"><decl pos:start="15:5" pos:end="15:47"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">AVDXVAContext</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:22">ctx</name> <init pos:start="15:24" pos:end="15:47">= <expr pos:start="15:26" pos:end="15:47"><name pos:start="15:26" pos:end="15:47"><name pos:start="15:26" pos:end="15:30">avctx</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:47">hwaccel_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="20:0"><decl pos:start="17:5" pos:end="17:43"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">unsigned</name></type>               <name pos:start="17:28" pos:end="17:39">buffer_count</name> <init pos:start="17:41" pos:end="17:43">= <expr pos:start="17:43" pos:end="17:43"><literal type="number" pos:start="17:43" pos:end="17:43">0</literal></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="19:1" pos:end="19:18">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <decl_stmt pos:start="21:5" pos:end="26:0"><decl pos:start="21:5" pos:end="21:47"><type pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:35">D3D11_VIDEO_DECODER_BUFFER_DESC</name></type> <name pos:start="21:37" pos:end="21:47"><name pos:start="21:37" pos:end="21:44">buffer11</name><index pos:start="21:45" pos:end="21:47">[<expr pos:start="21:46" pos:end="21:46"><literal type="number" pos:start="21:46" pos:end="21:46">4</literal></expr>]</index></name></decl>;</decl_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="25:1" pos:end="25:16">#<cpp:directive pos:start="25:2" pos:end="25:3">if</cpp:directive> <expr pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:16">CONFIG_DXVA2</name></expr></cpp:if>

    <decl_stmt pos:start="27:5" pos:end="30:0"><decl pos:start="27:5" pos:end="27:46"><type pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:26">DXVA2_DecodeBufferDesc</name></type>          <name pos:start="27:37" pos:end="27:46"><name pos:start="27:37" pos:end="27:43">buffer2</name><index pos:start="27:44" pos:end="27:46">[<expr pos:start="27:45" pos:end="27:45"><literal type="number" pos:start="27:45" pos:end="27:45">4</literal></expr>]</index></name></decl>;</decl_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="31:5" pos:end="31:58"><decl pos:start="31:5" pos:end="31:43"><type pos:start="31:5" pos:end="31:37"><name pos:start="31:5" pos:end="31:23">DECODER_BUFFER_DESC</name>             <modifier pos:start="31:37" pos:end="31:37">*</modifier></type><name pos:start="31:38" pos:end="31:43">buffer</name></decl>,<decl pos:start="31:45" pos:end="31:57"><type ref="prev" pos:start="31:5" pos:end="31:37"><modifier pos:start="31:45" pos:end="31:45">*</modifier></type><name pos:start="31:46" pos:end="31:57">buffer_slice</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:25"><decl pos:start="33:5" pos:end="33:14"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:14">result</name></decl>, <decl pos:start="33:17" pos:end="33:24"><type ref="prev" pos:start="33:5" pos:end="33:7"/><name pos:start="33:17" pos:end="33:20">runs</name> <init pos:start="33:22" pos:end="33:24">= <expr pos:start="33:24" pos:end="33:24"><literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:15"><decl pos:start="35:5" pos:end="35:14"><type pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:11">HRESULT</name></type> <name pos:start="35:13" pos:end="35:14">hr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:18"><decl pos:start="37:5" pos:end="37:17"><type pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:12">unsigned</name></type> <name pos:start="37:14" pos:end="37:17">type</name></decl>;</decl_stmt>



    <do pos:start="41:5" pos:end="77:45">do <block pos:start="41:8" pos:end="77:5">{<block_content pos:start="45:9" pos:end="75:28">

<cpp:if pos:start="43:1" pos:end="43:18">#<cpp:directive pos:start="43:2" pos:end="43:3">if</cpp:directive> <expr pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:18">CONFIG_D3D11VA</name></expr></cpp:if>

        <if_stmt pos:start="45:9" pos:end="62:0"><if pos:start="45:9" pos:end="62:0">if <condition pos:start="45:12" pos:end="45:53">(<expr pos:start="45:13" pos:end="45:52"><name pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:17">avctx</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:26">pix_fmt</name></name> <operator pos:start="45:28" pos:end="45:29">==</operator> <name pos:start="45:31" pos:end="45:52">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition> <block pos:start="45:55" pos:end="62:0">{<block_content pos:start="47:13" pos:end="55:63">

            <if_stmt pos:start="47:13" pos:end="49:92"><if pos:start="47:13" pos:end="49:92">if <condition pos:start="47:16" pos:end="47:76">(<expr pos:start="47:17" pos:end="47:75"><call pos:start="47:17" pos:end="47:36"><name pos:start="47:17" pos:end="47:31">D3D11VA_CONTEXT</name><argument_list pos:start="47:32" pos:end="47:36">(<argument pos:start="47:33" pos:end="47:35"><expr pos:start="47:33" pos:end="47:35"><name pos:start="47:33" pos:end="47:35">ctx</name></expr></argument>)</argument_list></call><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:51">context_mutex</name> <operator pos:start="47:53" pos:end="47:54">!=</operator> <name pos:start="47:56" pos:end="47:75">INVALID_HANDLE_VALUE</name></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:92"><block_content pos:start="49:17" pos:end="49:92">

                <expr_stmt pos:start="49:17" pos:end="49:92"><expr pos:start="49:17" pos:end="49:91"><call pos:start="49:17" pos:end="49:91"><name pos:start="49:17" pos:end="49:37">WaitForSingleObjectEx</name><argument_list pos:start="49:38" pos:end="49:91">(<argument pos:start="49:39" pos:end="49:73"><expr pos:start="49:39" pos:end="49:73"><call pos:start="49:39" pos:end="49:58"><name pos:start="49:39" pos:end="49:53">D3D11VA_CONTEXT</name><argument_list pos:start="49:54" pos:end="49:58">(<argument pos:start="49:55" pos:end="49:57"><expr pos:start="49:55" pos:end="49:57"><name pos:start="49:55" pos:end="49:57">ctx</name></expr></argument>)</argument_list></call><operator pos:start="49:59" pos:end="49:60">-&gt;</operator><name pos:start="49:61" pos:end="49:73">context_mutex</name></expr></argument>, <argument pos:start="49:76" pos:end="49:83"><expr pos:start="49:76" pos:end="49:83"><name pos:start="49:76" pos:end="49:83">INFINITE</name></expr></argument>, <argument pos:start="49:86" pos:end="49:90"><expr pos:start="49:86" pos:end="49:90"><name pos:start="49:86" pos:end="49:90">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="55:63"><expr pos:start="51:13" pos:end="55:62"><name pos:start="51:13" pos:end="51:14">hr</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <call pos:start="51:18" pos:end="55:62"><name pos:start="51:18" pos:end="51:53">ID3D11VideoContext_DecoderBeginFrame</name><argument_list pos:start="51:54" pos:end="55:62">(<argument pos:start="51:55" pos:end="51:89"><expr pos:start="51:55" pos:end="51:89"><call pos:start="51:55" pos:end="51:74"><name pos:start="51:55" pos:end="51:69">D3D11VA_CONTEXT</name><argument_list pos:start="51:70" pos:end="51:74">(<argument pos:start="51:71" pos:end="51:73"><expr pos:start="51:71" pos:end="51:73"><name pos:start="51:71" pos:end="51:73">ctx</name></expr></argument>)</argument_list></call><operator pos:start="51:75" pos:end="51:76">-&gt;</operator><name pos:start="51:77" pos:end="51:89">video_context</name></expr></argument>, <argument pos:start="51:92" pos:end="51:120"><expr pos:start="51:92" pos:end="51:120"><call pos:start="51:92" pos:end="51:111"><name pos:start="51:92" pos:end="51:106">D3D11VA_CONTEXT</name><argument_list pos:start="51:107" pos:end="51:111">(<argument pos:start="51:108" pos:end="51:110"><expr pos:start="51:108" pos:end="51:110"><name pos:start="51:108" pos:end="51:110">ctx</name></expr></argument>)</argument_list></call><operator pos:start="51:112" pos:end="51:113">-&gt;</operator><name pos:start="51:114" pos:end="51:120">decoder</name></expr></argument>,

                                                      <argument pos:start="53:55" pos:end="53:81"><expr pos:start="53:55" pos:end="53:81"><call pos:start="53:55" pos:end="53:81"><name pos:start="53:55" pos:end="53:74">ff_dxva2_get_surface</name><argument_list pos:start="53:75" pos:end="53:81">(<argument pos:start="53:76" pos:end="53:80"><expr pos:start="53:76" pos:end="53:80"><name pos:start="53:76" pos:end="53:80">frame</name></expr></argument>)</argument_list></call></expr></argument>,

                                                      <argument pos:start="55:55" pos:end="55:55"><expr pos:start="55:55" pos:end="55:55"><literal type="number" pos:start="55:55" pos:end="55:55">0</literal></expr></argument>, <argument pos:start="55:58" pos:end="55:61"><expr pos:start="55:58" pos:end="55:61"><name pos:start="55:58" pos:end="55:61">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="59:1" pos:end="59:6">#<cpp:directive pos:start="59:2" pos:end="59:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="61:1" pos:end="61:16">#<cpp:directive pos:start="61:2" pos:end="61:3">if</cpp:directive> <expr pos:start="61:5" pos:end="61:16"><name pos:start="61:5" pos:end="61:16">CONFIG_DXVA2</name></expr></cpp:if>

        <if_stmt pos:start="63:9" pos:end="72:0"><if pos:start="63:9" pos:end="72:0">if <condition pos:start="63:12" pos:end="63:51">(<expr pos:start="63:13" pos:end="63:50"><name pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:17">avctx</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:26">pix_fmt</name></name> <operator pos:start="63:28" pos:end="63:29">==</operator> <name pos:start="63:31" pos:end="63:50">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="72:0"><block_content pos:start="65:13" pos:end="72:0">

            <expr_stmt pos:start="65:13" pos:end="72:0"><expr pos:start="65:13" pos:end="69:54"><name pos:start="65:13" pos:end="65:14">hr</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <call pos:start="65:18" pos:end="69:54"><name pos:start="65:18" pos:end="65:48">IDirectXVideoDecoder_BeginFrame</name><argument_list pos:start="65:49" pos:end="69:54">(<argument pos:start="65:50" pos:end="65:76"><expr pos:start="65:50" pos:end="65:76"><call pos:start="65:50" pos:end="65:67"><name pos:start="65:50" pos:end="65:62">DXVA2_CONTEXT</name><argument_list pos:start="65:63" pos:end="65:67">(<argument pos:start="65:64" pos:end="65:66"><expr pos:start="65:64" pos:end="65:66"><name pos:start="65:64" pos:end="65:66">ctx</name></expr></argument>)</argument_list></call><operator pos:start="65:68" pos:end="65:69">-&gt;</operator><name pos:start="65:70" pos:end="65:76">decoder</name></expr></argument>,

                                                 <argument pos:start="67:50" pos:end="67:76"><expr pos:start="67:50" pos:end="67:76"><call pos:start="67:50" pos:end="67:76"><name pos:start="67:50" pos:end="67:69">ff_dxva2_get_surface</name><argument_list pos:start="67:70" pos:end="67:76">(<argument pos:start="67:71" pos:end="67:75"><expr pos:start="67:71" pos:end="67:75"><name pos:start="67:71" pos:end="67:75">frame</name></expr></argument>)</argument_list></call></expr></argument>,

                                                 <argument pos:start="69:50" pos:end="69:53"><expr pos:start="69:50" pos:end="69:53"><name pos:start="69:50" pos:end="69:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="73:9" pos:end="75:28"><if pos:start="73:9" pos:end="75:28">if <condition pos:start="73:12" pos:end="73:28">(<expr pos:start="73:13" pos:end="73:27"><name pos:start="73:13" pos:end="73:14">hr</name> <operator pos:start="73:16" pos:end="73:17">==</operator> <name pos:start="73:19" pos:end="73:27">E_PENDING</name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:28"><block_content pos:start="75:13" pos:end="75:28">

            <expr_stmt pos:start="75:13" pos:end="75:28"><expr pos:start="75:13" pos:end="75:27"><call pos:start="75:13" pos:end="75:27"><name pos:start="75:13" pos:end="75:21">av_usleep</name><argument_list pos:start="75:22" pos:end="75:27">(<argument pos:start="75:23" pos:end="75:26"><expr pos:start="75:23" pos:end="75:26"><literal type="number" pos:start="75:23" pos:end="75:26">2000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="77:13" pos:end="77:44">(<expr pos:start="77:14" pos:end="77:43"><name pos:start="77:14" pos:end="77:15">hr</name> <operator pos:start="77:17" pos:end="77:18">==</operator> <name pos:start="77:20" pos:end="77:28">E_PENDING</name> <operator pos:start="77:30" pos:end="77:31">&amp;&amp;</operator> <operator pos:start="77:33" pos:end="77:34">++</operator><name pos:start="77:35" pos:end="77:38">runs</name> <operator pos:start="77:40" pos:end="77:40">&lt;</operator> <literal type="number" pos:start="77:42" pos:end="77:43">50</literal></expr>)</condition>;</do>



    <if_stmt pos:start="81:5" pos:end="102:0"><if pos:start="81:5" pos:end="102:0">if <condition pos:start="81:8" pos:end="81:19">(<expr pos:start="81:9" pos:end="81:18"><call pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:14">FAILED</name><argument_list pos:start="81:15" pos:end="81:18">(<argument pos:start="81:16" pos:end="81:17"><expr pos:start="81:16" pos:end="81:17"><name pos:start="81:16" pos:end="81:17">hr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:21" pos:end="102:0">{<block_content pos:start="83:9" pos:end="95:18">

        <expr_stmt pos:start="83:9" pos:end="86:0"><expr pos:start="83:9" pos:end="83:73"><call pos:start="83:9" pos:end="83:73"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="83:73">(<argument pos:start="83:16" pos:end="83:20"><expr pos:start="83:16" pos:end="83:20"><name pos:start="83:16" pos:end="83:20">avctx</name></expr></argument>, <argument pos:start="83:23" pos:end="83:34"><expr pos:start="83:23" pos:end="83:34"><name pos:start="83:23" pos:end="83:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:37" pos:end="83:68"><expr pos:start="83:37" pos:end="83:68"><literal type="string" pos:start="83:37" pos:end="83:68">"Failed to begin frame: 0x%lx\n"</literal></expr></argument>, <argument pos:start="83:71" pos:end="83:72"><expr pos:start="83:71" pos:end="83:72"><name pos:start="83:71" pos:end="83:72">hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="85:1" pos:end="85:18">#<cpp:directive pos:start="85:2" pos:end="85:3">if</cpp:directive> <expr pos:start="85:5" pos:end="85:18"><name pos:start="85:5" pos:end="85:18">CONFIG_D3D11VA</name></expr></cpp:if>

        <if_stmt pos:start="87:9" pos:end="94:0"><if pos:start="87:9" pos:end="94:0">if <condition pos:start="87:12" pos:end="87:53">(<expr pos:start="87:13" pos:end="87:52"><name pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:17">avctx</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:26">pix_fmt</name></name> <operator pos:start="87:28" pos:end="87:29">==</operator> <name pos:start="87:31" pos:end="87:52">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="94:0"><block_content pos:start="89:13" pos:end="94:0">

            <if_stmt pos:start="89:13" pos:end="94:0"><if pos:start="89:13" pos:end="94:0">if <condition pos:start="89:16" pos:end="89:76">(<expr pos:start="89:17" pos:end="89:75"><call pos:start="89:17" pos:end="89:36"><name pos:start="89:17" pos:end="89:31">D3D11VA_CONTEXT</name><argument_list pos:start="89:32" pos:end="89:36">(<argument pos:start="89:33" pos:end="89:35"><expr pos:start="89:33" pos:end="89:35"><name pos:start="89:33" pos:end="89:35">ctx</name></expr></argument>)</argument_list></call><operator pos:start="89:37" pos:end="89:38">-&gt;</operator><name pos:start="89:39" pos:end="89:51">context_mutex</name> <operator pos:start="89:53" pos:end="89:54">!=</operator> <name pos:start="89:56" pos:end="89:75">INVALID_HANDLE_VALUE</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="94:0"><block_content pos:start="91:17" pos:end="94:0">

                <expr_stmt pos:start="91:17" pos:end="94:0"><expr pos:start="91:17" pos:end="91:65"><call pos:start="91:17" pos:end="91:65"><name pos:start="91:17" pos:end="91:28">ReleaseMutex</name><argument_list pos:start="91:29" pos:end="91:65">(<argument pos:start="91:30" pos:end="91:64"><expr pos:start="91:30" pos:end="91:64"><call pos:start="91:30" pos:end="91:49"><name pos:start="91:30" pos:end="91:44">D3D11VA_CONTEXT</name><argument_list pos:start="91:45" pos:end="91:49">(<argument pos:start="91:46" pos:end="91:48"><expr pos:start="91:46" pos:end="91:48"><name pos:start="91:46" pos:end="91:48">ctx</name></expr></argument>)</argument_list></call><operator pos:start="91:50" pos:end="91:51">-&gt;</operator><name pos:start="91:52" pos:end="91:64">context_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="93:1" pos:end="93:6">#<cpp:directive pos:start="93:2" pos:end="93:6">endif</cpp:directive></cpp:endif>

        <return pos:start="95:9" pos:end="95:18">return <expr pos:start="95:16" pos:end="95:17"><operator pos:start="95:16" pos:end="95:16">-</operator><literal type="number" pos:start="95:17" pos:end="95:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="101:1" pos:end="101:18">#<cpp:directive pos:start="101:2" pos:end="101:3">if</cpp:directive> <expr pos:start="101:5" pos:end="101:18"><name pos:start="101:5" pos:end="101:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <if_stmt pos:start="103:5" pos:end="114:0"><if pos:start="103:5" pos:end="114:0">if <condition pos:start="103:8" pos:end="103:49">(<expr pos:start="103:9" pos:end="103:48"><name pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:13">avctx</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:22">pix_fmt</name></name> <operator pos:start="103:24" pos:end="103:25">==</operator> <name pos:start="103:27" pos:end="103:48">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition> <block pos:start="103:51" pos:end="114:0">{<block_content pos:start="105:9" pos:end="107:61">

        <expr_stmt pos:start="105:9" pos:end="105:41"><expr pos:start="105:9" pos:end="105:40"><name pos:start="105:9" pos:end="105:14">buffer</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <operator pos:start="105:18" pos:end="105:18">&amp;</operator><name pos:start="105:19" pos:end="105:40"><name pos:start="105:19" pos:end="105:26">buffer11</name><index pos:start="105:27" pos:end="105:40">[<expr pos:start="105:28" pos:end="105:39"><name pos:start="105:28" pos:end="105:39">buffer_count</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:61"><expr pos:start="107:9" pos:end="107:60"><name pos:start="107:9" pos:end="107:12">type</name> <operator pos:start="107:14" pos:end="107:14">=</operator> <name pos:start="107:16" pos:end="107:60">D3D11_VIDEO_DECODER_BUFFER_PICTURE_PARAMETERS</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="111:1" pos:end="111:6">#<cpp:directive pos:start="111:2" pos:end="111:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="113:1" pos:end="113:16">#<cpp:directive pos:start="113:2" pos:end="113:3">if</cpp:directive> <expr pos:start="113:5" pos:end="113:16"><name pos:start="113:5" pos:end="113:16">CONFIG_DXVA2</name></expr></cpp:if>

    <if_stmt pos:start="115:5" pos:end="124:0"><if pos:start="115:5" pos:end="124:0">if <condition pos:start="115:8" pos:end="115:47">(<expr pos:start="115:9" pos:end="115:46"><name pos:start="115:9" pos:end="115:22"><name pos:start="115:9" pos:end="115:13">avctx</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:22">pix_fmt</name></name> <operator pos:start="115:24" pos:end="115:25">==</operator> <name pos:start="115:27" pos:end="115:46">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition> <block pos:start="115:49" pos:end="124:0">{<block_content pos:start="117:9" pos:end="119:49">

        <expr_stmt pos:start="117:9" pos:end="117:40"><expr pos:start="117:9" pos:end="117:39"><name pos:start="117:9" pos:end="117:14">buffer</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <operator pos:start="117:18" pos:end="117:18">&amp;</operator><name pos:start="117:19" pos:end="117:39"><name pos:start="117:19" pos:end="117:25">buffer2</name><index pos:start="117:26" pos:end="117:39">[<expr pos:start="117:27" pos:end="117:38"><name pos:start="117:27" pos:end="117:38">buffer_count</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:49"><expr pos:start="119:9" pos:end="119:48"><name pos:start="119:9" pos:end="119:12">type</name> <operator pos:start="119:14" pos:end="119:14">=</operator> <name pos:start="119:16" pos:end="119:48">DXVA2_PictureParametersBufferType</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="123:1" pos:end="123:6">#<cpp:directive pos:start="123:2" pos:end="123:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="125:5" pos:end="129:52"><expr pos:start="125:5" pos:end="129:51"><name pos:start="125:5" pos:end="125:10">result</name> <operator pos:start="125:12" pos:end="125:12">=</operator> <call pos:start="125:14" pos:end="129:51"><name pos:start="125:14" pos:end="125:35">ff_dxva2_commit_buffer</name><argument_list pos:start="125:36" pos:end="129:51">(<argument pos:start="125:37" pos:end="125:41"><expr pos:start="125:37" pos:end="125:41"><name pos:start="125:37" pos:end="125:41">avctx</name></expr></argument>, <argument pos:start="125:44" pos:end="125:46"><expr pos:start="125:44" pos:end="125:46"><name pos:start="125:44" pos:end="125:46">ctx</name></expr></argument>, <argument pos:start="125:49" pos:end="125:54"><expr pos:start="125:49" pos:end="125:54"><name pos:start="125:49" pos:end="125:54">buffer</name></expr></argument>,

                                    <argument pos:start="127:37" pos:end="127:40"><expr pos:start="127:37" pos:end="127:40"><name pos:start="127:37" pos:end="127:40">type</name></expr></argument>,

                                    <argument pos:start="129:37" pos:end="129:38"><expr pos:start="129:37" pos:end="129:38"><name pos:start="129:37" pos:end="129:38">pp</name></expr></argument>, <argument pos:start="129:41" pos:end="129:47"><expr pos:start="129:41" pos:end="129:47"><name pos:start="129:41" pos:end="129:47">pp_size</name></expr></argument>, <argument pos:start="129:50" pos:end="129:50"><expr pos:start="129:50" pos:end="129:50"><literal type="number" pos:start="129:50" pos:end="129:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="131:5" pos:end="139:5"><if pos:start="131:5" pos:end="139:5">if <condition pos:start="131:8" pos:end="131:15">(<expr pos:start="131:9" pos:end="131:14"><name pos:start="131:9" pos:end="131:14">result</name></expr>)</condition> <block pos:start="131:17" pos:end="139:5">{<block_content pos:start="133:9" pos:end="137:17">

        <expr_stmt pos:start="133:9" pos:end="135:59"><expr pos:start="133:9" pos:end="135:58"><call pos:start="133:9" pos:end="135:58"><name pos:start="133:9" pos:end="133:14">av_log</name><argument_list pos:start="133:15" pos:end="135:58">(<argument pos:start="133:16" pos:end="133:20"><expr pos:start="133:16" pos:end="133:20"><name pos:start="133:16" pos:end="133:20">avctx</name></expr></argument>, <argument pos:start="133:23" pos:end="133:34"><expr pos:start="133:23" pos:end="133:34"><name pos:start="133:23" pos:end="133:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="135:16" pos:end="135:57"><expr pos:start="135:16" pos:end="135:57"><literal type="string" pos:start="135:16" pos:end="135:57">"Failed to add picture parameter buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="137:9" pos:end="137:17">goto <name pos:start="137:14" pos:end="137:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:19"><expr pos:start="141:5" pos:end="141:18"><name pos:start="141:5" pos:end="141:16">buffer_count</name><operator pos:start="141:17" pos:end="141:18">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="145:5" pos:end="194:0"><if pos:start="145:5" pos:end="194:0">if <condition pos:start="145:8" pos:end="145:20">(<expr pos:start="145:9" pos:end="145:19"><name pos:start="145:9" pos:end="145:15">qm_size</name> <operator pos:start="145:17" pos:end="145:17">&gt;</operator> <literal type="number" pos:start="145:19" pos:end="145:19">0</literal></expr>)</condition> <block pos:start="145:22" pos:end="194:0">{<block_content pos:start="149:9" pos:end="187:23">

<cpp:if pos:start="147:1" pos:end="147:18">#<cpp:directive pos:start="147:2" pos:end="147:3">if</cpp:directive> <expr pos:start="147:5" pos:end="147:18"><name pos:start="147:5" pos:end="147:18">CONFIG_D3D11VA</name></expr></cpp:if>

        <if_stmt pos:start="149:9" pos:end="160:0"><if pos:start="149:9" pos:end="160:0">if <condition pos:start="149:12" pos:end="149:53">(<expr pos:start="149:13" pos:end="149:52"><name pos:start="149:13" pos:end="149:26"><name pos:start="149:13" pos:end="149:17">avctx</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:26">pix_fmt</name></name> <operator pos:start="149:28" pos:end="149:29">==</operator> <name pos:start="149:31" pos:end="149:52">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition> <block pos:start="149:55" pos:end="160:0">{<block_content pos:start="151:13" pos:end="153:74">

            <expr_stmt pos:start="151:13" pos:end="151:45"><expr pos:start="151:13" pos:end="151:44"><name pos:start="151:13" pos:end="151:18">buffer</name> <operator pos:start="151:20" pos:end="151:20">=</operator> <operator pos:start="151:22" pos:end="151:22">&amp;</operator><name pos:start="151:23" pos:end="151:44"><name pos:start="151:23" pos:end="151:30">buffer11</name><index pos:start="151:31" pos:end="151:44">[<expr pos:start="151:32" pos:end="151:43"><name pos:start="151:32" pos:end="151:43">buffer_count</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:74"><expr pos:start="153:13" pos:end="153:73"><name pos:start="153:13" pos:end="153:16">type</name> <operator pos:start="153:18" pos:end="153:18">=</operator> <name pos:start="153:20" pos:end="153:73">D3D11_VIDEO_DECODER_BUFFER_INVERSE_QUANTIZATION_MATRIX</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="157:1" pos:end="157:6">#<cpp:directive pos:start="157:2" pos:end="157:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="159:1" pos:end="159:16">#<cpp:directive pos:start="159:2" pos:end="159:3">if</cpp:directive> <expr pos:start="159:5" pos:end="159:16"><name pos:start="159:5" pos:end="159:16">CONFIG_DXVA2</name></expr></cpp:if>

        <if_stmt pos:start="161:9" pos:end="170:0"><if pos:start="161:9" pos:end="170:0">if <condition pos:start="161:12" pos:end="161:51">(<expr pos:start="161:13" pos:end="161:50"><name pos:start="161:13" pos:end="161:26"><name pos:start="161:13" pos:end="161:17">avctx</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:26">pix_fmt</name></name> <operator pos:start="161:28" pos:end="161:29">==</operator> <name pos:start="161:31" pos:end="161:50">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition> <block pos:start="161:53" pos:end="170:0">{<block_content pos:start="163:13" pos:end="165:61">

            <expr_stmt pos:start="163:13" pos:end="163:44"><expr pos:start="163:13" pos:end="163:43"><name pos:start="163:13" pos:end="163:18">buffer</name> <operator pos:start="163:20" pos:end="163:20">=</operator> <operator pos:start="163:22" pos:end="163:22">&amp;</operator><name pos:start="163:23" pos:end="163:43"><name pos:start="163:23" pos:end="163:29">buffer2</name><index pos:start="163:30" pos:end="163:43">[<expr pos:start="163:31" pos:end="163:42"><name pos:start="163:31" pos:end="163:42">buffer_count</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:61"><expr pos:start="165:13" pos:end="165:60"><name pos:start="165:13" pos:end="165:16">type</name> <operator pos:start="165:18" pos:end="165:18">=</operator> <name pos:start="165:20" pos:end="165:60">DXVA2_InverseQuantizationMatrixBufferType</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="169:1" pos:end="169:6">#<cpp:directive pos:start="169:2" pos:end="169:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="171:9" pos:end="175:56"><expr pos:start="171:9" pos:end="175:55"><name pos:start="171:9" pos:end="171:14">result</name> <operator pos:start="171:16" pos:end="171:16">=</operator> <call pos:start="171:18" pos:end="175:55"><name pos:start="171:18" pos:end="171:39">ff_dxva2_commit_buffer</name><argument_list pos:start="171:40" pos:end="175:55">(<argument pos:start="171:41" pos:end="171:45"><expr pos:start="171:41" pos:end="171:45"><name pos:start="171:41" pos:end="171:45">avctx</name></expr></argument>, <argument pos:start="171:48" pos:end="171:50"><expr pos:start="171:48" pos:end="171:50"><name pos:start="171:48" pos:end="171:50">ctx</name></expr></argument>, <argument pos:start="171:53" pos:end="171:58"><expr pos:start="171:53" pos:end="171:58"><name pos:start="171:53" pos:end="171:58">buffer</name></expr></argument>,

                                        <argument pos:start="173:41" pos:end="173:44"><expr pos:start="173:41" pos:end="173:44"><name pos:start="173:41" pos:end="173:44">type</name></expr></argument>,

                                        <argument pos:start="175:41" pos:end="175:42"><expr pos:start="175:41" pos:end="175:42"><name pos:start="175:41" pos:end="175:42">qm</name></expr></argument>, <argument pos:start="175:45" pos:end="175:51"><expr pos:start="175:45" pos:end="175:51"><name pos:start="175:45" pos:end="175:51">qm_size</name></expr></argument>, <argument pos:start="175:54" pos:end="175:54"><expr pos:start="175:54" pos:end="175:54"><literal type="number" pos:start="175:54" pos:end="175:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="177:9" pos:end="185:9"><if pos:start="177:9" pos:end="185:9">if <condition pos:start="177:12" pos:end="177:19">(<expr pos:start="177:13" pos:end="177:18"><name pos:start="177:13" pos:end="177:18">result</name></expr>)</condition> <block pos:start="177:21" pos:end="185:9">{<block_content pos:start="179:13" pos:end="183:21">

            <expr_stmt pos:start="179:13" pos:end="181:73"><expr pos:start="179:13" pos:end="181:72"><call pos:start="179:13" pos:end="181:72"><name pos:start="179:13" pos:end="179:18">av_log</name><argument_list pos:start="179:19" pos:end="181:72">(<argument pos:start="179:20" pos:end="179:24"><expr pos:start="179:20" pos:end="179:24"><name pos:start="179:20" pos:end="179:24">avctx</name></expr></argument>, <argument pos:start="179:27" pos:end="179:38"><expr pos:start="179:27" pos:end="179:38"><name pos:start="179:27" pos:end="179:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="181:20" pos:end="181:71"><expr pos:start="181:20" pos:end="181:71"><literal type="string" pos:start="181:20" pos:end="181:71">"Failed to add inverse quantization matrix buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="183:13" pos:end="183:21">goto <name pos:start="183:18" pos:end="183:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:23"><expr pos:start="187:9" pos:end="187:22"><name pos:start="187:9" pos:end="187:20">buffer_count</name><operator pos:start="187:21" pos:end="187:22">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="193:1" pos:end="193:18">#<cpp:directive pos:start="193:2" pos:end="193:3">if</cpp:directive> <expr pos:start="193:5" pos:end="193:18"><name pos:start="193:5" pos:end="193:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <if_stmt pos:start="195:5" pos:end="206:0"><if pos:start="195:5" pos:end="206:0">if <condition pos:start="195:8" pos:end="195:49">(<expr pos:start="195:9" pos:end="195:48"><name pos:start="195:9" pos:end="195:22"><name pos:start="195:9" pos:end="195:13">avctx</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:22">pix_fmt</name></name> <operator pos:start="195:24" pos:end="195:25">==</operator> <name pos:start="195:27" pos:end="195:48">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition> <block pos:start="195:51" pos:end="206:0">{<block_content pos:start="197:9" pos:end="199:51">

        <expr_stmt pos:start="197:9" pos:end="197:51"><expr pos:start="197:9" pos:end="197:50"><name pos:start="197:9" pos:end="197:14">buffer</name>       <operator pos:start="197:22" pos:end="197:22">=</operator> <operator pos:start="197:24" pos:end="197:24">&amp;</operator><name pos:start="197:25" pos:end="197:50"><name pos:start="197:25" pos:end="197:32">buffer11</name><index pos:start="197:33" pos:end="197:50">[<expr pos:start="197:34" pos:end="197:49"><name pos:start="197:34" pos:end="197:45">buffer_count</name> <operator pos:start="197:47" pos:end="197:47">+</operator> <literal type="number" pos:start="197:49" pos:end="197:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:51"><expr pos:start="199:9" pos:end="199:50"><name pos:start="199:9" pos:end="199:20">buffer_slice</name> <operator pos:start="199:22" pos:end="199:22">=</operator> <operator pos:start="199:24" pos:end="199:24">&amp;</operator><name pos:start="199:25" pos:end="199:50"><name pos:start="199:25" pos:end="199:32">buffer11</name><index pos:start="199:33" pos:end="199:50">[<expr pos:start="199:34" pos:end="199:49"><name pos:start="199:34" pos:end="199:45">buffer_count</name> <operator pos:start="199:47" pos:end="199:47">+</operator> <literal type="number" pos:start="199:49" pos:end="199:49">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="203:1" pos:end="203:6">#<cpp:directive pos:start="203:2" pos:end="203:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="205:1" pos:end="205:16">#<cpp:directive pos:start="205:2" pos:end="205:3">if</cpp:directive> <expr pos:start="205:5" pos:end="205:16"><name pos:start="205:5" pos:end="205:16">CONFIG_DXVA2</name></expr></cpp:if>

    <if_stmt pos:start="207:5" pos:end="216:0"><if pos:start="207:5" pos:end="216:0">if <condition pos:start="207:8" pos:end="207:47">(<expr pos:start="207:9" pos:end="207:46"><name pos:start="207:9" pos:end="207:22"><name pos:start="207:9" pos:end="207:13">avctx</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:22">pix_fmt</name></name> <operator pos:start="207:24" pos:end="207:25">==</operator> <name pos:start="207:27" pos:end="207:46">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition> <block pos:start="207:49" pos:end="216:0">{<block_content pos:start="209:9" pos:end="211:50">

        <expr_stmt pos:start="209:9" pos:end="209:50"><expr pos:start="209:9" pos:end="209:49"><name pos:start="209:9" pos:end="209:14">buffer</name>       <operator pos:start="209:22" pos:end="209:22">=</operator> <operator pos:start="209:24" pos:end="209:24">&amp;</operator><name pos:start="209:25" pos:end="209:49"><name pos:start="209:25" pos:end="209:31">buffer2</name><index pos:start="209:32" pos:end="209:49">[<expr pos:start="209:33" pos:end="209:48"><name pos:start="209:33" pos:end="209:44">buffer_count</name> <operator pos:start="209:46" pos:end="209:46">+</operator> <literal type="number" pos:start="209:48" pos:end="209:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:50"><expr pos:start="211:9" pos:end="211:49"><name pos:start="211:9" pos:end="211:20">buffer_slice</name> <operator pos:start="211:22" pos:end="211:22">=</operator> <operator pos:start="211:24" pos:end="211:24">&amp;</operator><name pos:start="211:25" pos:end="211:49"><name pos:start="211:25" pos:end="211:31">buffer2</name><index pos:start="211:32" pos:end="211:49">[<expr pos:start="211:33" pos:end="211:48"><name pos:start="211:33" pos:end="211:44">buffer_count</name> <operator pos:start="211:46" pos:end="211:46">+</operator> <literal type="number" pos:start="211:48" pos:end="211:48">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="215:1" pos:end="215:6">#<cpp:directive pos:start="215:2" pos:end="215:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="219:5" pos:end="223:40"><expr pos:start="219:5" pos:end="223:39"><name pos:start="219:5" pos:end="219:10">result</name> <operator pos:start="219:12" pos:end="219:12">=</operator> <call pos:start="219:14" pos:end="223:39"><name pos:start="219:14" pos:end="219:25">commit_bs_si</name><argument_list pos:start="219:26" pos:end="223:39">(<argument pos:start="219:27" pos:end="219:31"><expr pos:start="219:27" pos:end="219:31"><name pos:start="219:27" pos:end="219:31">avctx</name></expr></argument>,

                          <argument pos:start="221:27" pos:end="221:32"><expr pos:start="221:27" pos:end="221:32"><name pos:start="221:27" pos:end="221:32">buffer</name></expr></argument>,

                          <argument pos:start="223:27" pos:end="223:38"><expr pos:start="223:27" pos:end="223:38"><name pos:start="223:27" pos:end="223:38">buffer_slice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="225:5" pos:end="233:5"><if pos:start="225:5" pos:end="233:5">if <condition pos:start="225:8" pos:end="225:15">(<expr pos:start="225:9" pos:end="225:14"><name pos:start="225:9" pos:end="225:14">result</name></expr>)</condition> <block pos:start="225:17" pos:end="233:5">{<block_content pos:start="227:9" pos:end="231:17">

        <expr_stmt pos:start="227:9" pos:end="229:68"><expr pos:start="227:9" pos:end="229:67"><call pos:start="227:9" pos:end="229:67"><name pos:start="227:9" pos:end="227:14">av_log</name><argument_list pos:start="227:15" pos:end="229:67">(<argument pos:start="227:16" pos:end="227:20"><expr pos:start="227:16" pos:end="227:20"><name pos:start="227:16" pos:end="227:20">avctx</name></expr></argument>, <argument pos:start="227:23" pos:end="227:34"><expr pos:start="227:23" pos:end="227:34"><name pos:start="227:23" pos:end="227:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="229:16" pos:end="229:66"><expr pos:start="229:16" pos:end="229:66"><literal type="string" pos:start="229:16" pos:end="229:66">"Failed to add bitstream or slice control buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="231:9" pos:end="231:17">goto <name pos:start="231:14" pos:end="231:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:22"><expr pos:start="235:5" pos:end="235:21"><name pos:start="235:5" pos:end="235:16">buffer_count</name> <operator pos:start="235:18" pos:end="235:19">+=</operator> <literal type="number" pos:start="235:21" pos:end="235:21">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="239:5" pos:end="239:39">/* TODO Film Grain when possible */</comment>



    <expr_stmt pos:start="243:5" pos:end="248:0"><expr pos:start="243:5" pos:end="243:49"><call pos:start="243:5" pos:end="243:49"><name pos:start="243:5" pos:end="243:10">assert</name><argument_list pos:start="243:11" pos:end="243:49">(<argument pos:start="243:12" pos:end="243:48"><expr pos:start="243:12" pos:end="243:48"><name pos:start="243:12" pos:end="243:23">buffer_count</name> <operator pos:start="243:25" pos:end="243:26">==</operator> <literal type="number" pos:start="243:28" pos:end="243:30">1</literal> <operator pos:start="243:30" pos:end="243:30">+</operator> <operator pos:start="243:32" pos:end="243:32">(</operator><name pos:start="243:33" pos:end="243:39">qm_size</name> <operator pos:start="243:41" pos:end="243:41">&gt;</operator> <literal type="number" pos:start="243:43" pos:end="243:43">0</literal><operator pos:start="243:44" pos:end="243:44">)</operator> <operator pos:start="243:46" pos:end="243:46">+</operator> <literal type="number" pos:start="243:48" pos:end="243:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="247:1" pos:end="247:18">#<cpp:directive pos:start="247:2" pos:end="247:3">if</cpp:directive> <expr pos:start="247:5" pos:end="247:18"><name pos:start="247:5" pos:end="247:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <if_stmt pos:start="249:5" pos:end="260:0"><if pos:start="249:5" pos:end="260:0">if <condition pos:start="249:8" pos:end="249:49">(<expr pos:start="249:9" pos:end="249:48"><name pos:start="249:9" pos:end="249:22"><name pos:start="249:9" pos:end="249:13">avctx</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:22">pix_fmt</name></name> <operator pos:start="249:24" pos:end="249:25">==</operator> <name pos:start="249:27" pos:end="249:48">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition><block type="pseudo" pos:start="251:9" pos:end="260:0"><block_content pos:start="251:9" pos:end="260:0">

        <expr_stmt pos:start="251:9" pos:end="260:0"><expr pos:start="251:9" pos:end="255:76"><name pos:start="251:9" pos:end="251:10">hr</name> <operator pos:start="251:12" pos:end="251:12">=</operator> <call pos:start="251:14" pos:end="255:76"><name pos:start="251:14" pos:end="251:52">ID3D11VideoContext_SubmitDecoderBuffers</name><argument_list pos:start="251:53" pos:end="255:76">(<argument pos:start="251:54" pos:end="251:88"><expr pos:start="251:54" pos:end="251:88"><call pos:start="251:54" pos:end="251:73"><name pos:start="251:54" pos:end="251:68">D3D11VA_CONTEXT</name><argument_list pos:start="251:69" pos:end="251:73">(<argument pos:start="251:70" pos:end="251:72"><expr pos:start="251:70" pos:end="251:72"><name pos:start="251:70" pos:end="251:72">ctx</name></expr></argument>)</argument_list></call><operator pos:start="251:74" pos:end="251:75">-&gt;</operator><name pos:start="251:76" pos:end="251:88">video_context</name></expr></argument>,

                                                     <argument pos:start="253:54" pos:end="253:82"><expr pos:start="253:54" pos:end="253:82"><call pos:start="253:54" pos:end="253:73"><name pos:start="253:54" pos:end="253:68">D3D11VA_CONTEXT</name><argument_list pos:start="253:69" pos:end="253:73">(<argument pos:start="253:70" pos:end="253:72"><expr pos:start="253:70" pos:end="253:72"><name pos:start="253:70" pos:end="253:72">ctx</name></expr></argument>)</argument_list></call><operator pos:start="253:74" pos:end="253:75">-&gt;</operator><name pos:start="253:76" pos:end="253:82">decoder</name></expr></argument>,

                                                     <argument pos:start="255:54" pos:end="255:65"><expr pos:start="255:54" pos:end="255:65"><name pos:start="255:54" pos:end="255:65">buffer_count</name></expr></argument>, <argument pos:start="255:68" pos:end="255:75"><expr pos:start="255:68" pos:end="255:75"><name pos:start="255:68" pos:end="255:75">buffer11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="257:1" pos:end="257:6">#<cpp:directive pos:start="257:2" pos:end="257:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="259:1" pos:end="259:16">#<cpp:directive pos:start="259:2" pos:end="259:3">if</cpp:directive> <expr pos:start="259:5" pos:end="259:16"><name pos:start="259:5" pos:end="259:16">CONFIG_DXVA2</name></expr></cpp:if>

    <if_stmt pos:start="261:5" pos:end="278:0"><if pos:start="261:5" pos:end="278:0">if <condition pos:start="261:8" pos:end="261:47">(<expr pos:start="261:9" pos:end="261:46"><name pos:start="261:9" pos:end="261:22"><name pos:start="261:9" pos:end="261:13">avctx</name><operator pos:start="261:14" pos:end="261:15">-&gt;</operator><name pos:start="261:16" pos:end="261:22">pix_fmt</name></name> <operator pos:start="261:24" pos:end="261:25">==</operator> <name pos:start="261:27" pos:end="261:46">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition> <block pos:start="261:49" pos:end="278:0">{<block_content pos:start="263:9" pos:end="273:78">

        <decl_stmt pos:start="263:9" pos:end="271:10"><decl pos:start="263:9" pos:end="271:9"><type pos:start="263:9" pos:end="263:33"><name pos:start="263:9" pos:end="263:33">DXVA2_DecodeExecuteParams</name></type> <name pos:start="263:35" pos:end="263:38">exec</name> <init pos:start="263:40" pos:end="271:9">= <expr pos:start="263:42" pos:end="271:9"><block pos:start="263:42" pos:end="271:9">{

            <expr pos:start="265:13" pos:end="265:46"><operator pos:start="265:13" pos:end="265:13">.</operator><name pos:start="265:14" pos:end="265:27">NumCompBuffers</name>     <operator pos:start="265:33" pos:end="265:33">=</operator> <name pos:start="265:35" pos:end="265:46">buffer_count</name></expr>,

            <expr pos:start="267:13" pos:end="267:41"><operator pos:start="267:13" pos:end="267:13">.</operator><name pos:start="267:14" pos:end="267:31">pCompressedBuffers</name> <operator pos:start="267:33" pos:end="267:33">=</operator> <name pos:start="267:35" pos:end="267:41">buffer2</name></expr>,

            <expr pos:start="269:13" pos:end="269:38"><operator pos:start="269:13" pos:end="269:13">.</operator><name pos:start="269:14" pos:end="269:27">pExtensionData</name>     <operator pos:start="269:33" pos:end="269:33">=</operator> <name pos:start="269:35" pos:end="269:38">NULL</name></expr>,

        }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:78"><expr pos:start="273:9" pos:end="273:77"><name pos:start="273:9" pos:end="273:10">hr</name> <operator pos:start="273:12" pos:end="273:12">=</operator> <call pos:start="273:14" pos:end="273:77"><name pos:start="273:14" pos:end="273:41">IDirectXVideoDecoder_Execute</name><argument_list pos:start="273:42" pos:end="273:77">(<argument pos:start="273:43" pos:end="273:69"><expr pos:start="273:43" pos:end="273:69"><call pos:start="273:43" pos:end="273:60"><name pos:start="273:43" pos:end="273:55">DXVA2_CONTEXT</name><argument_list pos:start="273:56" pos:end="273:60">(<argument pos:start="273:57" pos:end="273:59"><expr pos:start="273:57" pos:end="273:59"><name pos:start="273:57" pos:end="273:59">ctx</name></expr></argument>)</argument_list></call><operator pos:start="273:61" pos:end="273:62">-&gt;</operator><name pos:start="273:63" pos:end="273:69">decoder</name></expr></argument>, <argument pos:start="273:72" pos:end="273:76"><expr pos:start="273:72" pos:end="273:76"><operator pos:start="273:72" pos:end="273:72">&amp;</operator><name pos:start="273:73" pos:end="273:76">exec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="277:1" pos:end="277:6">#<cpp:directive pos:start="277:2" pos:end="277:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="279:5" pos:end="285:5"><if pos:start="279:5" pos:end="285:5">if <condition pos:start="279:8" pos:end="279:19">(<expr pos:start="279:9" pos:end="279:18"><call pos:start="279:9" pos:end="279:18"><name pos:start="279:9" pos:end="279:14">FAILED</name><argument_list pos:start="279:15" pos:end="279:18">(<argument pos:start="279:16" pos:end="279:17"><expr pos:start="279:16" pos:end="279:17"><name pos:start="279:16" pos:end="279:17">hr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="279:21" pos:end="285:5">{<block_content pos:start="281:9" pos:end="283:20">

        <expr_stmt pos:start="281:9" pos:end="281:70"><expr pos:start="281:9" pos:end="281:69"><call pos:start="281:9" pos:end="281:69"><name pos:start="281:9" pos:end="281:14">av_log</name><argument_list pos:start="281:15" pos:end="281:69">(<argument pos:start="281:16" pos:end="281:20"><expr pos:start="281:16" pos:end="281:20"><name pos:start="281:16" pos:end="281:20">avctx</name></expr></argument>, <argument pos:start="281:23" pos:end="281:34"><expr pos:start="281:23" pos:end="281:34"><name pos:start="281:23" pos:end="281:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="281:37" pos:end="281:64"><expr pos:start="281:37" pos:end="281:64"><literal type="string" pos:start="281:37" pos:end="281:64">"Failed to execute: 0x%lx\n"</literal></expr></argument>, <argument pos:start="281:67" pos:end="281:68"><expr pos:start="281:67" pos:end="281:68"><name pos:start="281:67" pos:end="281:68">hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:20"><expr pos:start="283:9" pos:end="283:19"><name pos:start="283:9" pos:end="283:14">result</name> <operator pos:start="283:16" pos:end="283:16">=</operator> <operator pos:start="283:18" pos:end="283:18">-</operator><literal type="number" pos:start="283:19" pos:end="283:19">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="289:1" pos:end="292:0"><name pos:start="289:1" pos:end="289:3">end</name>:</label>

<cpp:if pos:start="291:1" pos:end="291:18">#<cpp:directive pos:start="291:2" pos:end="291:3">if</cpp:directive> <expr pos:start="291:5" pos:end="291:18"><name pos:start="291:5" pos:end="291:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <if_stmt pos:start="293:5" pos:end="306:0"><if pos:start="293:5" pos:end="306:0">if <condition pos:start="293:8" pos:end="293:49">(<expr pos:start="293:9" pos:end="293:48"><name pos:start="293:9" pos:end="293:22"><name pos:start="293:9" pos:end="293:13">avctx</name><operator pos:start="293:14" pos:end="293:15">-&gt;</operator><name pos:start="293:16" pos:end="293:22">pix_fmt</name></name> <operator pos:start="293:24" pos:end="293:25">==</operator> <name pos:start="293:27" pos:end="293:48">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition> <block pos:start="293:51" pos:end="306:0">{<block_content pos:start="295:9" pos:end="299:62">

        <expr_stmt pos:start="295:9" pos:end="295:116"><expr pos:start="295:9" pos:end="295:115"><name pos:start="295:9" pos:end="295:10">hr</name> <operator pos:start="295:12" pos:end="295:12">=</operator> <call pos:start="295:14" pos:end="295:115"><name pos:start="295:14" pos:end="295:47">ID3D11VideoContext_DecoderEndFrame</name><argument_list pos:start="295:48" pos:end="295:115">(<argument pos:start="295:49" pos:end="295:83"><expr pos:start="295:49" pos:end="295:83"><call pos:start="295:49" pos:end="295:68"><name pos:start="295:49" pos:end="295:63">D3D11VA_CONTEXT</name><argument_list pos:start="295:64" pos:end="295:68">(<argument pos:start="295:65" pos:end="295:67"><expr pos:start="295:65" pos:end="295:67"><name pos:start="295:65" pos:end="295:67">ctx</name></expr></argument>)</argument_list></call><operator pos:start="295:69" pos:end="295:70">-&gt;</operator><name pos:start="295:71" pos:end="295:83">video_context</name></expr></argument>, <argument pos:start="295:86" pos:end="295:114"><expr pos:start="295:86" pos:end="295:114"><call pos:start="295:86" pos:end="295:105"><name pos:start="295:86" pos:end="295:100">D3D11VA_CONTEXT</name><argument_list pos:start="295:101" pos:end="295:105">(<argument pos:start="295:102" pos:end="295:104"><expr pos:start="295:102" pos:end="295:104"><name pos:start="295:102" pos:end="295:104">ctx</name></expr></argument>)</argument_list></call><operator pos:start="295:106" pos:end="295:107">-&gt;</operator><name pos:start="295:108" pos:end="295:114">decoder</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="297:9" pos:end="299:62"><if pos:start="297:9" pos:end="299:62">if <condition pos:start="297:12" pos:end="297:72">(<expr pos:start="297:13" pos:end="297:71"><call pos:start="297:13" pos:end="297:32"><name pos:start="297:13" pos:end="297:27">D3D11VA_CONTEXT</name><argument_list pos:start="297:28" pos:end="297:32">(<argument pos:start="297:29" pos:end="297:31"><expr pos:start="297:29" pos:end="297:31"><name pos:start="297:29" pos:end="297:31">ctx</name></expr></argument>)</argument_list></call><operator pos:start="297:33" pos:end="297:34">-&gt;</operator><name pos:start="297:35" pos:end="297:47">context_mutex</name> <operator pos:start="297:49" pos:end="297:50">!=</operator> <name pos:start="297:52" pos:end="297:71">INVALID_HANDLE_VALUE</name></expr>)</condition><block type="pseudo" pos:start="299:13" pos:end="299:62"><block_content pos:start="299:13" pos:end="299:62">

            <expr_stmt pos:start="299:13" pos:end="299:62"><expr pos:start="299:13" pos:end="299:61"><call pos:start="299:13" pos:end="299:61"><name pos:start="299:13" pos:end="299:24">ReleaseMutex</name><argument_list pos:start="299:25" pos:end="299:61">(<argument pos:start="299:26" pos:end="299:60"><expr pos:start="299:26" pos:end="299:60"><call pos:start="299:26" pos:end="299:45"><name pos:start="299:26" pos:end="299:40">D3D11VA_CONTEXT</name><argument_list pos:start="299:41" pos:end="299:45">(<argument pos:start="299:42" pos:end="299:44"><expr pos:start="299:42" pos:end="299:44"><name pos:start="299:42" pos:end="299:44">ctx</name></expr></argument>)</argument_list></call><operator pos:start="299:46" pos:end="299:47">-&gt;</operator><name pos:start="299:48" pos:end="299:60">context_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="303:1" pos:end="303:6">#<cpp:directive pos:start="303:2" pos:end="303:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="305:1" pos:end="305:16">#<cpp:directive pos:start="305:2" pos:end="305:3">if</cpp:directive> <expr pos:start="305:5" pos:end="305:16"><name pos:start="305:5" pos:end="305:16">CONFIG_DXVA2</name></expr></cpp:if>

    <if_stmt pos:start="307:5" pos:end="312:0"><if pos:start="307:5" pos:end="312:0">if <condition pos:start="307:8" pos:end="307:47">(<expr pos:start="307:9" pos:end="307:46"><name pos:start="307:9" pos:end="307:22"><name pos:start="307:9" pos:end="307:13">avctx</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:22">pix_fmt</name></name> <operator pos:start="307:24" pos:end="307:25">==</operator> <name pos:start="307:27" pos:end="307:46">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition><block type="pseudo" pos:start="309:9" pos:end="312:0"><block_content pos:start="309:9" pos:end="312:0">

        <expr_stmt pos:start="309:9" pos:end="312:0"><expr pos:start="309:9" pos:end="309:77"><name pos:start="309:9" pos:end="309:10">hr</name> <operator pos:start="309:12" pos:end="309:12">=</operator> <call pos:start="309:14" pos:end="309:77"><name pos:start="309:14" pos:end="309:42">IDirectXVideoDecoder_EndFrame</name><argument_list pos:start="309:43" pos:end="309:77">(<argument pos:start="309:44" pos:end="309:70"><expr pos:start="309:44" pos:end="309:70"><call pos:start="309:44" pos:end="309:61"><name pos:start="309:44" pos:end="309:56">DXVA2_CONTEXT</name><argument_list pos:start="309:57" pos:end="309:61">(<argument pos:start="309:58" pos:end="309:60"><expr pos:start="309:58" pos:end="309:60"><name pos:start="309:58" pos:end="309:60">ctx</name></expr></argument>)</argument_list></call><operator pos:start="309:62" pos:end="309:63">-&gt;</operator><name pos:start="309:64" pos:end="309:70">decoder</name></expr></argument>, <argument pos:start="309:73" pos:end="309:76"><expr pos:start="309:73" pos:end="309:76"><name pos:start="309:73" pos:end="309:76">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="311:1" pos:end="311:6">#<cpp:directive pos:start="311:2" pos:end="311:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="313:5" pos:end="319:5"><if pos:start="313:5" pos:end="319:5">if <condition pos:start="313:8" pos:end="313:19">(<expr pos:start="313:9" pos:end="313:18"><call pos:start="313:9" pos:end="313:18"><name pos:start="313:9" pos:end="313:14">FAILED</name><argument_list pos:start="313:15" pos:end="313:18">(<argument pos:start="313:16" pos:end="313:17"><expr pos:start="313:16" pos:end="313:17"><name pos:start="313:16" pos:end="313:17">hr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="313:21" pos:end="319:5">{<block_content pos:start="315:9" pos:end="317:20">

        <expr_stmt pos:start="315:9" pos:end="315:72"><expr pos:start="315:9" pos:end="315:71"><call pos:start="315:9" pos:end="315:71"><name pos:start="315:9" pos:end="315:14">av_log</name><argument_list pos:start="315:15" pos:end="315:71">(<argument pos:start="315:16" pos:end="315:20"><expr pos:start="315:16" pos:end="315:20"><name pos:start="315:16" pos:end="315:20">avctx</name></expr></argument>, <argument pos:start="315:23" pos:end="315:34"><expr pos:start="315:23" pos:end="315:34"><name pos:start="315:23" pos:end="315:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="315:37" pos:end="315:66"><expr pos:start="315:37" pos:end="315:66"><literal type="string" pos:start="315:37" pos:end="315:66">"Failed to end frame: 0x%lx\n"</literal></expr></argument>, <argument pos:start="315:69" pos:end="315:70"><expr pos:start="315:69" pos:end="315:70"><name pos:start="315:69" pos:end="315:70">hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:20"><expr pos:start="317:9" pos:end="317:19"><name pos:start="317:9" pos:end="317:14">result</name> <operator pos:start="317:16" pos:end="317:16">=</operator> <operator pos:start="317:18" pos:end="317:18">-</operator><literal type="number" pos:start="317:19" pos:end="317:19">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="323:5" pos:end="323:18">return <expr pos:start="323:12" pos:end="323:17"><name pos:start="323:12" pos:end="323:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
