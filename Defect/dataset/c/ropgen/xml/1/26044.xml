<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26044.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">bdrv_set_backing_hd</name><parameter_list pos:start="1:25" pos:end="1:76">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:41">BlockDriverState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">bs</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:75"><decl pos:start="1:48" pos:end="1:75"><type pos:start="1:48" pos:end="1:75"><name pos:start="1:48" pos:end="1:63">BlockDriverState</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:75">backing_hd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:34">



    <if_stmt pos:start="7:5" pos:end="21:5"><if pos:start="7:5" pos:end="13:5">if <condition pos:start="7:8" pos:end="7:23">(<expr pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:10">bs</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:22">backing_hd</name></name></expr>)</condition> <block pos:start="7:25" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:65">

        <expr_stmt pos:start="9:9" pos:end="9:36"><expr pos:start="9:9" pos:end="9:35"><call pos:start="9:9" pos:end="9:35"><name pos:start="9:9" pos:end="9:14">assert</name><argument_list pos:start="9:15" pos:end="9:35">(<argument pos:start="9:16" pos:end="9:34"><expr pos:start="9:16" pos:end="9:34"><name pos:start="9:16" pos:end="9:34"><name pos:start="9:16" pos:end="9:17">bs</name><operator pos:start="9:18" pos:end="9:19">-&gt;</operator><name pos:start="9:20" pos:end="9:34">backing_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:65"><expr pos:start="11:9" pos:end="11:64"><call pos:start="11:9" pos:end="11:64"><name pos:start="11:9" pos:end="11:27">bdrv_op_unblock_all</name><argument_list pos:start="11:28" pos:end="11:64">(<argument pos:start="11:29" pos:end="11:42"><expr pos:start="11:29" pos:end="11:42"><name pos:start="11:29" pos:end="11:42"><name pos:start="11:29" pos:end="11:30">bs</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:42">backing_hd</name></name></expr></argument>, <argument pos:start="11:45" pos:end="11:63"><expr pos:start="11:45" pos:end="11:63"><name pos:start="11:45" pos:end="11:63"><name pos:start="11:45" pos:end="11:46">bs</name><operator pos:start="11:47" pos:end="11:48">-&gt;</operator><name pos:start="11:49" pos:end="11:63">backing_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="13:7" pos:end="21:5">else if <condition pos:start="13:15" pos:end="13:26">(<expr pos:start="13:16" pos:end="13:25"><name pos:start="13:16" pos:end="13:25">backing_hd</name></expr>)</condition> <block pos:start="13:28" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:45">

        <expr_stmt pos:start="15:9" pos:end="19:45"><expr pos:start="15:9" pos:end="19:44"><call pos:start="15:9" pos:end="19:44"><name pos:start="15:9" pos:end="15:18">error_setg</name><argument_list pos:start="15:19" pos:end="19:44">(<argument pos:start="15:20" pos:end="15:39"><expr pos:start="15:20" pos:end="15:39"><operator pos:start="15:20" pos:end="15:20">&amp;</operator><name pos:start="15:21" pos:end="15:39"><name pos:start="15:21" pos:end="15:22">bs</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:39">backing_blocker</name></name></expr></argument>,

                   <argument pos:start="17:20" pos:end="17:57"><expr pos:start="17:20" pos:end="17:57"><literal type="string" pos:start="17:20" pos:end="17:57">"device is used as backing hd of '%s'"</literal></expr></argument>,

                   <argument pos:start="19:20" pos:end="19:43"><expr pos:start="19:20" pos:end="19:43"><call pos:start="19:20" pos:end="19:43"><name pos:start="19:20" pos:end="19:39">bdrv_get_device_name</name><argument_list pos:start="19:40" pos:end="19:43">(<argument pos:start="19:41" pos:end="19:42"><expr pos:start="19:41" pos:end="19:42"><name pos:start="19:41" pos:end="19:42">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:6">bs</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:18">backing_hd</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:31">backing_hd</name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:20">(<expr pos:start="27:9" pos:end="27:19"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:19">backing_hd</name></expr>)</condition> <block pos:start="27:22" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:17">

        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><call pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:18">error_free</name><argument_list pos:start="29:19" pos:end="29:39">(<argument pos:start="29:20" pos:end="29:38"><expr pos:start="29:20" pos:end="29:38"><name pos:start="29:20" pos:end="29:38"><name pos:start="29:20" pos:end="29:21">bs</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:38">backing_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:10">bs</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:27">backing_blocker</name></name> <operator pos:start="31:29" pos:end="31:29">=</operator> <name pos:start="31:31" pos:end="31:34">NULL</name></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:17">goto <name pos:start="33:14" pos:end="33:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:6">bs</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:18">open_flags</name></name> <operator pos:start="37:20" pos:end="37:21">&amp;=</operator> <operator pos:start="37:23" pos:end="37:23">~</operator><name pos:start="37:24" pos:end="37:40">BDRV_O_NO_BACKING</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:78"><expr pos:start="39:5" pos:end="39:77"><call pos:start="39:5" pos:end="39:77"><name pos:start="39:5" pos:end="39:11">pstrcpy</name><argument_list pos:start="39:12" pos:end="39:77">(<argument pos:start="39:13" pos:end="39:28"><expr pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:14">bs</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:28">backing_file</name></name></expr></argument>, <argument pos:start="39:31" pos:end="39:54"><expr pos:start="39:31" pos:end="39:54"><sizeof pos:start="39:31" pos:end="39:54">sizeof<argument_list pos:start="39:37" pos:end="39:54">(<argument pos:start="39:38" pos:end="39:53"><expr pos:start="39:38" pos:end="39:53"><name pos:start="39:38" pos:end="39:53"><name pos:start="39:38" pos:end="39:39">bs</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:53">backing_file</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:57" pos:end="39:76"><expr pos:start="39:57" pos:end="39:76"><name pos:start="39:57" pos:end="39:76"><name pos:start="39:57" pos:end="39:66">backing_hd</name><operator pos:start="39:67" pos:end="39:68">-&gt;</operator><name pos:start="39:69" pos:end="39:76">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:65"><expr pos:start="41:5" pos:end="43:64"><call pos:start="41:5" pos:end="43:64"><name pos:start="41:5" pos:end="41:11">pstrcpy</name><argument_list pos:start="41:12" pos:end="43:64">(<argument pos:start="41:13" pos:end="41:30"><expr pos:start="41:13" pos:end="41:30"><name pos:start="41:13" pos:end="41:30"><name pos:start="41:13" pos:end="41:14">bs</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:30">backing_format</name></name></expr></argument>, <argument pos:start="41:33" pos:end="41:58"><expr pos:start="41:33" pos:end="41:58"><sizeof pos:start="41:33" pos:end="41:58">sizeof<argument_list pos:start="41:39" pos:end="41:58">(<argument pos:start="41:40" pos:end="41:57"><expr pos:start="41:40" pos:end="41:57"><name pos:start="41:40" pos:end="41:57"><name pos:start="41:40" pos:end="41:41">bs</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:57">backing_format</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

            <argument pos:start="43:13" pos:end="43:63"><expr pos:start="43:13" pos:end="43:63"><ternary pos:start="43:13" pos:end="43:63"><condition pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:22">backing_hd</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:27">drv</name></name></expr> ?</condition><then pos:start="43:31" pos:end="43:58"> <expr pos:start="43:31" pos:end="43:58"><name pos:start="43:31" pos:end="43:58"><name pos:start="43:31" pos:end="43:40">backing_hd</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:45">drv</name><operator pos:start="43:46" pos:end="43:47">-&gt;</operator><name pos:start="43:48" pos:end="43:58">format_name</name></name></expr> </then><else pos:start="43:60" pos:end="43:63">: <expr pos:start="43:62" pos:end="43:63"><literal type="string" pos:start="43:62" pos:end="43:63">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:59"><expr pos:start="47:5" pos:end="47:58"><call pos:start="47:5" pos:end="47:58"><name pos:start="47:5" pos:end="47:21">bdrv_op_block_all</name><argument_list pos:start="47:22" pos:end="47:58">(<argument pos:start="47:23" pos:end="47:36"><expr pos:start="47:23" pos:end="47:36"><name pos:start="47:23" pos:end="47:36"><name pos:start="47:23" pos:end="47:24">bs</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:36">backing_hd</name></name></expr></argument>, <argument pos:start="47:39" pos:end="47:57"><expr pos:start="47:39" pos:end="47:57"><name pos:start="47:39" pos:end="47:57"><name pos:start="47:39" pos:end="47:40">bs</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:57">backing_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="49:5" pos:end="49:74">/* Otherwise we won't be able to commit due to check in bdrv_commit */</comment>

    <expr_stmt pos:start="51:5" pos:end="53:41"><expr pos:start="51:5" pos:end="53:40"><call pos:start="51:5" pos:end="53:40"><name pos:start="51:5" pos:end="51:19">bdrv_op_unblock</name><argument_list pos:start="51:20" pos:end="53:40">(<argument pos:start="51:21" pos:end="51:34"><expr pos:start="51:21" pos:end="51:34"><name pos:start="51:21" pos:end="51:34"><name pos:start="51:21" pos:end="51:22">bs</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:34">backing_hd</name></name></expr></argument>, <argument pos:start="51:37" pos:end="51:56"><expr pos:start="51:37" pos:end="51:56"><name pos:start="51:37" pos:end="51:56">BLOCK_OP_TYPE_COMMIT</name></expr></argument>,

                    <argument pos:start="53:21" pos:end="53:39"><expr pos:start="53:21" pos:end="53:39"><name pos:start="53:21" pos:end="53:39"><name pos:start="53:21" pos:end="53:22">bs</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:39">backing_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="55:1" pos:end="55:4"><name pos:start="55:1" pos:end="55:3">out</name>:</label>

    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><call pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:23">bdrv_refresh_limits</name><argument_list pos:start="57:24" pos:end="57:33">(<argument pos:start="57:25" pos:end="57:26"><expr pos:start="57:25" pos:end="57:26"><name pos:start="57:25" pos:end="57:26">bs</name></expr></argument>, <argument pos:start="57:29" pos:end="57:32"><expr pos:start="57:29" pos:end="57:32"><name pos:start="57:29" pos:end="57:32">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
