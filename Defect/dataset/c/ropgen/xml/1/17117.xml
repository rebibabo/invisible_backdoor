<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17117.c" pos:tabs="8"><function pos:start="1:1" pos:end="46:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">XICSState</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:34">xics_system_init</name><parameter_list pos:start="1:35" pos:end="3:63">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><name pos:start="1:36" pos:end="1:47">MachineState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:56">machine</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:49"><decl pos:start="3:36" pos:end="3:49"><type pos:start="3:36" pos:end="3:49"><name pos:start="3:36" pos:end="3:38">int</name></type> <name pos:start="3:40" pos:end="3:49">nr_servers</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:62"><decl pos:start="3:52" pos:end="3:62"><type pos:start="3:52" pos:end="3:62"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:62">nr_irqs</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="46:1">{<block_content pos:start="7:5" pos:end="44:15">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">XICSState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">icp</name> <init pos:start="7:20" pos:end="7:25">= <expr pos:start="7:22" pos:end="7:25"><name pos:start="7:22" pos:end="7:25">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="32:5"><if pos:start="11:5" pos:end="32:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><call pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:19">kvm_enabled</name><argument_list pos:start="11:20" pos:end="11:21">()</argument_list></call></expr>)</condition> <block pos:start="11:24" pos:end="32:5">{<block_content pos:start="13:9" pos:end="29:9">

        <decl_stmt pos:start="13:9" pos:end="13:26"><decl pos:start="13:9" pos:end="13:25"><type pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:13">Error</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:18">err</name> <init pos:start="13:20" pos:end="13:25">= <expr pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:25">NULL</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:52">(<expr pos:start="17:13" pos:end="17:51"><call pos:start="17:13" pos:end="17:51"><name pos:start="17:13" pos:end="17:42">machine_kernel_irqchip_allowed</name><argument_list pos:start="17:43" pos:end="17:51">(<argument pos:start="17:44" pos:end="17:50"><expr pos:start="17:44" pos:end="17:50"><name pos:start="17:44" pos:end="17:50">machine</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:54" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:76">

            <expr_stmt pos:start="19:13" pos:end="19:76"><expr pos:start="19:13" pos:end="19:75"><name pos:start="19:13" pos:end="19:15">icp</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <call pos:start="19:19" pos:end="19:75"><name pos:start="19:19" pos:end="19:33">try_create_xics</name><argument_list pos:start="19:34" pos:end="19:75">(<argument pos:start="19:35" pos:end="19:47"><expr pos:start="19:35" pos:end="19:47"><name pos:start="19:35" pos:end="19:47">TYPE_KVM_XICS</name></expr></argument>, <argument pos:start="19:50" pos:end="19:59"><expr pos:start="19:50" pos:end="19:59"><name pos:start="19:50" pos:end="19:59">nr_servers</name></expr></argument>, <argument pos:start="19:62" pos:end="19:68"><expr pos:start="19:62" pos:end="19:68"><name pos:start="19:62" pos:end="19:68">nr_irqs</name></expr></argument>, <argument pos:start="19:71" pos:end="19:74"><expr pos:start="19:71" pos:end="19:74"><operator pos:start="19:71" pos:end="19:71">&amp;</operator><name pos:start="19:72" pos:end="19:74">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:61">(<expr pos:start="23:13" pos:end="23:60"><call pos:start="23:13" pos:end="23:52"><name pos:start="23:13" pos:end="23:43">machine_kernel_irqchip_required</name><argument_list pos:start="23:44" pos:end="23:52">(<argument pos:start="23:45" pos:end="23:51"><expr pos:start="23:45" pos:end="23:51"><name pos:start="23:45" pos:end="23:51">machine</name></expr></argument>)</argument_list></call> <operator pos:start="23:54" pos:end="23:55">&amp;&amp;</operator> <operator pos:start="23:57" pos:end="23:57">!</operator><name pos:start="23:58" pos:end="23:60">icp</name></expr>)</condition> <block pos:start="23:63" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:48">

            <expr_stmt pos:start="25:13" pos:end="27:48"><expr pos:start="25:13" pos:end="27:47"><call pos:start="25:13" pos:end="27:47"><name pos:start="25:13" pos:end="25:24">error_report</name><argument_list pos:start="25:25" pos:end="27:47">(<argument pos:start="25:26" pos:end="25:71"><expr pos:start="25:26" pos:end="25:71"><literal type="string" pos:start="25:26" pos:end="25:71">"kernel_irqchip requested but unavailable: %s"</literal></expr></argument>,

                         <argument pos:start="27:26" pos:end="27:46"><expr pos:start="27:26" pos:end="27:46"><call pos:start="27:26" pos:end="27:46"><name pos:start="27:26" pos:end="27:41">error_get_pretty</name><argument_list pos:start="27:42" pos:end="27:46">(<argument pos:start="27:43" pos:end="27:45"><expr pos:start="27:43" pos:end="27:45"><name pos:start="27:43" pos:end="27:45">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>


    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="36:5" pos:end="40:5"><if pos:start="36:5" pos:end="40:5">if <condition pos:start="36:8" pos:end="36:13">(<expr pos:start="36:9" pos:end="36:12"><operator pos:start="36:9" pos:end="36:9">!</operator><name pos:start="36:10" pos:end="36:12">icp</name></expr>)</condition> <block pos:start="36:15" pos:end="40:5">{<block_content pos:start="38:9" pos:end="38:76">

        <expr_stmt pos:start="38:9" pos:end="38:76"><expr pos:start="38:9" pos:end="38:75"><name pos:start="38:9" pos:end="38:11">icp</name> <operator pos:start="38:13" pos:end="38:13">=</operator> <call pos:start="38:15" pos:end="38:75"><name pos:start="38:15" pos:end="38:29">try_create_xics</name><argument_list pos:start="38:30" pos:end="38:75">(<argument pos:start="38:31" pos:end="38:39"><expr pos:start="38:31" pos:end="38:39"><name pos:start="38:31" pos:end="38:39">TYPE_XICS</name></expr></argument>, <argument pos:start="38:42" pos:end="38:51"><expr pos:start="38:42" pos:end="38:51"><name pos:start="38:42" pos:end="38:51">nr_servers</name></expr></argument>, <argument pos:start="38:54" pos:end="38:60"><expr pos:start="38:54" pos:end="38:60"><name pos:start="38:54" pos:end="38:60">nr_irqs</name></expr></argument>, <argument pos:start="38:63" pos:end="38:74"><expr pos:start="38:63" pos:end="38:74"><operator pos:start="38:63" pos:end="38:63">&amp;</operator><name pos:start="38:64" pos:end="38:74">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="44:5" pos:end="44:15">return <expr pos:start="44:12" pos:end="44:14"><name pos:start="44:12" pos:end="44:14">icp</name></expr>;</return>

</block_content>}</block></function></unit>
