<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27291.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">test_properties</name><parameter_list pos:start="1:28" pos:end="1:45">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:40"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">path</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:20">child_path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">QDict</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:19">response</name></decl>, <decl pos:start="7:22" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:11"><modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:27">tuple</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">QList</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:15">list</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">QListEntry</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:21">entry</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:55"><expr pos:start="15:5" pos:end="15:54"><call pos:start="15:5" pos:end="15:54"><name pos:start="15:5" pos:end="15:18">g_test_message</name><argument_list pos:start="15:19" pos:end="15:54">(<argument pos:start="15:20" pos:end="15:47"><expr pos:start="15:20" pos:end="15:47"><literal type="string" pos:start="15:20" pos:end="15:47">"Obtaining properties of %s"</literal></expr></argument>, <argument pos:start="15:50" pos:end="15:53"><expr pos:start="15:50" pos:end="15:53"><name pos:start="15:50" pos:end="15:53">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="19:62"><expr pos:start="17:5" pos:end="19:61"><name pos:start="17:5" pos:end="17:12">response</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="19:61"><name pos:start="17:16" pos:end="17:18">qmp</name><argument_list pos:start="17:19" pos:end="19:61">(<argument pos:start="17:20" pos:end="19:54"><expr pos:start="17:20" pos:end="19:54"><literal type="string" pos:start="17:20" pos:end="17:45">"{ 'execute': 'qom-list',"</literal>

                   <literal type="string" pos:start="19:20" pos:end="19:54">"  'arguments': { 'path': '%s' } }"</literal></expr></argument>, <argument pos:start="19:57" pos:end="19:60"><expr pos:start="19:57" pos:end="19:60"><name pos:start="19:57" pos:end="19:60">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><call pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:12">g_assert</name><argument_list pos:start="21:13" pos:end="21:22">(<argument pos:start="21:14" pos:end="21:21"><expr pos:start="21:14" pos:end="21:21"><name pos:start="21:14" pos:end="21:21">response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><call pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:12">g_assert</name><argument_list pos:start="25:13" pos:end="25:46">(<argument pos:start="25:14" pos:end="25:45"><expr pos:start="25:14" pos:end="25:45"><call pos:start="25:14" pos:end="25:45"><name pos:start="25:14" pos:end="25:25">qdict_haskey</name><argument_list pos:start="25:26" pos:end="25:45">(<argument pos:start="25:27" pos:end="25:34"><expr pos:start="25:27" pos:end="25:34"><name pos:start="25:27" pos:end="25:34">response</name></expr></argument>, <argument pos:start="25:37" pos:end="25:44"><expr pos:start="25:37" pos:end="25:44"><literal type="string" pos:start="25:37" pos:end="25:44">"return"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:59"><expr pos:start="27:5" pos:end="27:58"><name pos:start="27:5" pos:end="27:8">list</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:58"><name pos:start="27:12" pos:end="27:27">qobject_to_qlist</name><argument_list pos:start="27:28" pos:end="27:58">(<argument pos:start="27:29" pos:end="27:57"><expr pos:start="27:29" pos:end="27:57"><call pos:start="27:29" pos:end="27:57"><name pos:start="27:29" pos:end="27:37">qdict_get</name><argument_list pos:start="27:38" pos:end="27:57">(<argument pos:start="27:39" pos:end="27:46"><expr pos:start="27:39" pos:end="27:46"><name pos:start="27:39" pos:end="27:46">response</name></expr></argument>, <argument pos:start="27:49" pos:end="27:56"><expr pos:start="27:49" pos:end="27:56"><literal type="string" pos:start="27:49" pos:end="27:56">"return"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="29:5" pos:end="29:36"><name pos:start="29:5" pos:end="29:23">QLIST_FOREACH_ENTRY</name><argument_list pos:start="29:24" pos:end="29:36">(<argument pos:start="29:25" pos:end="29:28">list</argument>, <argument pos:start="29:31" pos:end="29:35">entry</argument>)</argument_list></macro> <block pos:start="29:38" pos:end="63:5">{<block_content pos:start="31:9" pos:end="61:9">

        <expr_stmt pos:start="31:9" pos:end="31:57"><expr pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:13">tuple</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:56"><name pos:start="31:17" pos:end="31:32">qobject_to_qdict</name><argument_list pos:start="31:33" pos:end="31:56">(<argument pos:start="31:34" pos:end="31:55"><expr pos:start="31:34" pos:end="31:55"><call pos:start="31:34" pos:end="31:55"><name pos:start="31:34" pos:end="31:48">qlist_entry_obj</name><argument_list pos:start="31:49" pos:end="31:55">(<argument pos:start="31:50" pos:end="31:54"><expr pos:start="31:50" pos:end="31:54"><name pos:start="31:50" pos:end="31:54">entry</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="61:9"><if pos:start="33:9" pos:end="43:9">if <condition pos:start="33:12" pos:end="33:67">(<expr pos:start="33:13" pos:end="33:66"><call pos:start="33:13" pos:end="33:66"><name pos:start="33:13" pos:end="33:20">strstart</name><argument_list pos:start="33:21" pos:end="33:66">(<argument pos:start="33:22" pos:end="33:49"><expr pos:start="33:22" pos:end="33:49"><call pos:start="33:22" pos:end="33:49"><name pos:start="33:22" pos:end="33:34">qdict_get_str</name><argument_list pos:start="33:35" pos:end="33:49">(<argument pos:start="33:36" pos:end="33:40"><expr pos:start="33:36" pos:end="33:40"><name pos:start="33:36" pos:end="33:40">tuple</name></expr></argument>, <argument pos:start="33:43" pos:end="33:48"><expr pos:start="33:43" pos:end="33:48"><literal type="string" pos:start="33:43" pos:end="33:48">"type"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:52" pos:end="33:59"><expr pos:start="33:52" pos:end="33:59"><literal type="string" pos:start="33:52" pos:end="33:59">"child&lt;"</literal></expr></argument>, <argument pos:start="33:62" pos:end="33:65"><expr pos:start="33:62" pos:end="33:65"><name pos:start="33:62" pos:end="33:65">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:69" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:31">

            <expr_stmt pos:start="35:13" pos:end="37:77"><expr pos:start="35:13" pos:end="37:76"><name pos:start="35:13" pos:end="35:22">child_path</name> <operator pos:start="35:24" pos:end="35:24">=</operator> <call pos:start="35:26" pos:end="37:76"><name pos:start="35:26" pos:end="35:40">g_strdup_printf</name><argument_list pos:start="35:41" pos:end="37:76">(<argument pos:start="35:42" pos:end="35:48"><expr pos:start="35:42" pos:end="35:48"><literal type="string" pos:start="35:42" pos:end="35:48">"%s/%s"</literal></expr></argument>,

                                         <argument pos:start="37:42" pos:end="37:45"><expr pos:start="37:42" pos:end="37:45"><name pos:start="37:42" pos:end="37:45">path</name></expr></argument>, <argument pos:start="37:48" pos:end="37:75"><expr pos:start="37:48" pos:end="37:75"><call pos:start="37:48" pos:end="37:75"><name pos:start="37:48" pos:end="37:60">qdict_get_str</name><argument_list pos:start="37:61" pos:end="37:75">(<argument pos:start="37:62" pos:end="37:66"><expr pos:start="37:62" pos:end="37:66"><name pos:start="37:62" pos:end="37:66">tuple</name></expr></argument>, <argument pos:start="37:69" pos:end="37:74"><expr pos:start="37:69" pos:end="37:74"><literal type="string" pos:start="37:69" pos:end="37:74">"name"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:40"><expr pos:start="39:13" pos:end="39:39"><call pos:start="39:13" pos:end="39:39"><name pos:start="39:13" pos:end="39:27">test_properties</name><argument_list pos:start="39:28" pos:end="39:39">(<argument pos:start="39:29" pos:end="39:38"><expr pos:start="39:29" pos:end="39:38"><name pos:start="39:29" pos:end="39:38">child_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:31"><expr pos:start="41:13" pos:end="41:30"><call pos:start="41:13" pos:end="41:30"><name pos:start="41:13" pos:end="41:18">g_free</name><argument_list pos:start="41:19" pos:end="41:30">(<argument pos:start="41:20" pos:end="41:29"><expr pos:start="41:20" pos:end="41:29"><name pos:start="41:20" pos:end="41:29">child_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="61:9">else <block pos:start="43:16" pos:end="61:9">{<block_content pos:start="45:13" pos:end="59:31">

            <decl_stmt pos:start="45:13" pos:end="45:60"><decl pos:start="45:13" pos:end="45:59"><type pos:start="45:13" pos:end="45:24"><specifier pos:start="45:13" pos:end="45:17">const</specifier> <name pos:start="45:19" pos:end="45:22">char</name> <modifier pos:start="45:24" pos:end="45:24">*</modifier></type><name pos:start="45:25" pos:end="45:28">prop</name> <init pos:start="45:30" pos:end="45:59">= <expr pos:start="45:32" pos:end="45:59"><call pos:start="45:32" pos:end="45:59"><name pos:start="45:32" pos:end="45:44">qdict_get_str</name><argument_list pos:start="45:45" pos:end="45:59">(<argument pos:start="45:46" pos:end="45:50"><expr pos:start="45:46" pos:end="45:50"><name pos:start="45:46" pos:end="45:50">tuple</name></expr></argument>, <argument pos:start="45:53" pos:end="45:58"><expr pos:start="45:53" pos:end="45:58"><literal type="string" pos:start="45:53" pos:end="45:58">"name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:65"><expr pos:start="47:13" pos:end="47:64"><call pos:start="47:13" pos:end="47:64"><name pos:start="47:13" pos:end="47:26">g_test_message</name><argument_list pos:start="47:27" pos:end="47:64">(<argument pos:start="47:28" pos:end="47:51"><expr pos:start="47:28" pos:end="47:51"><literal type="string" pos:start="47:28" pos:end="47:51">"Testing property %s.%s"</literal></expr></argument>, <argument pos:start="47:54" pos:end="47:57"><expr pos:start="47:54" pos:end="47:57"><name pos:start="47:54" pos:end="47:57">path</name></expr></argument>, <argument pos:start="47:60" pos:end="47:63"><expr pos:start="47:60" pos:end="47:63"><name pos:start="47:60" pos:end="47:63">prop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="55:39"><expr pos:start="49:13" pos:end="55:38"><name pos:start="49:13" pos:end="49:20">response</name> <operator pos:start="49:22" pos:end="49:22">=</operator> <call pos:start="49:24" pos:end="55:38"><name pos:start="49:24" pos:end="49:26">qmp</name><argument_list pos:start="49:27" pos:end="55:38">(<argument pos:start="49:28" pos:end="53:66"><expr pos:start="49:28" pos:end="53:66"><literal type="string" pos:start="49:28" pos:end="49:52">"{ 'execute': 'qom-get',"</literal>

                           <literal type="string" pos:start="51:28" pos:end="51:59">"  'arguments': { 'path': '%s',"</literal>

                           <literal type="string" pos:start="53:28" pos:end="53:66">"                 'property': '%s' } }"</literal></expr></argument>,

                           <argument pos:start="55:28" pos:end="55:31"><expr pos:start="55:28" pos:end="55:31"><name pos:start="55:28" pos:end="55:31">path</name></expr></argument>, <argument pos:start="55:34" pos:end="55:37"><expr pos:start="55:34" pos:end="55:37"><name pos:start="55:34" pos:end="55:37">prop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="57:13" pos:end="57:66">/* qom-get may fail but should not, e.g., segfault. */</comment>

            <expr_stmt pos:start="59:13" pos:end="59:31"><expr pos:start="59:13" pos:end="59:30"><call pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:20">g_assert</name><argument_list pos:start="59:21" pos:end="59:30">(<argument pos:start="59:22" pos:end="59:29"><expr pos:start="59:22" pos:end="59:29"><name pos:start="59:22" pos:end="59:29">response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
