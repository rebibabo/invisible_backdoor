<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15761.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">vtd_dev_to_context_entry</name><parameter_list pos:start="1:36" pos:end="3:71">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:51">IntelIOMMUState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:71"><decl pos:start="1:57" pos:end="1:71"><type pos:start="1:57" pos:end="1:71"><name pos:start="1:57" pos:end="1:63">uint8_t</name></type> <name pos:start="1:65" pos:end="1:71">bus_num</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:49"><decl pos:start="3:37" pos:end="3:49"><type pos:start="3:37" pos:end="3:49"><name pos:start="3:37" pos:end="3:43">uint8_t</name></type> <name pos:start="3:45" pos:end="3:49">devfn</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:70"><decl pos:start="3:52" pos:end="3:70"><type pos:start="3:52" pos:end="3:70"><name pos:start="3:52" pos:end="3:66">VTDContextEntry</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier></type><name pos:start="3:69" pos:end="3:70">ce</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:13">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">VTDRootEntry</name></type> <name pos:start="7:18" pos:end="7:19">re</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">ret_fr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:49"><expr pos:start="13:5" pos:end="13:48"><name pos:start="13:5" pos:end="13:10">ret_fr</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:48"><name pos:start="13:14" pos:end="13:31">vtd_get_root_entry</name><argument_list pos:start="13:32" pos:end="13:48">(<argument pos:start="13:33" pos:end="13:33"><expr pos:start="13:33" pos:end="13:33"><name pos:start="13:33" pos:end="13:33">s</name></expr></argument>, <argument pos:start="13:36" pos:end="13:42"><expr pos:start="13:36" pos:end="13:42"><name pos:start="13:36" pos:end="13:42">bus_num</name></expr></argument>, <argument pos:start="13:45" pos:end="13:47"><expr pos:start="13:45" pos:end="13:47"><operator pos:start="13:45" pos:end="13:45">&amp;</operator><name pos:start="13:46" pos:end="13:47">re</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:15">(<expr pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:14">ret_fr</name></expr>)</condition> <block pos:start="15:17" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:22">

        <return pos:start="17:9" pos:end="17:22">return <expr pos:start="17:16" pos:end="17:21"><name pos:start="17:16" pos:end="17:21">ret_fr</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="37:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:37">(<expr pos:start="23:9" pos:end="23:36"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:36"><name pos:start="23:10" pos:end="23:31">vtd_root_entry_present</name><argument_list pos:start="23:32" pos:end="23:36">(<argument pos:start="23:33" pos:end="23:35"><expr pos:start="23:33" pos:end="23:35"><operator pos:start="23:33" pos:end="23:33">&amp;</operator><name pos:start="23:34" pos:end="23:35">re</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:39" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:36">

        <comment type="block" pos:start="25:9" pos:end="25:61">/* Not error - it's okay we don't have root entry. */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:42"><expr pos:start="27:9" pos:end="27:41"><call pos:start="27:9" pos:end="27:41"><name pos:start="27:9" pos:end="27:32">trace_vtd_re_not_present</name><argument_list pos:start="27:33" pos:end="27:41">(<argument pos:start="27:34" pos:end="27:40"><expr pos:start="27:34" pos:end="27:40"><name pos:start="27:34" pos:end="27:40">bus_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:36">return <expr pos:start="29:16" pos:end="29:35"><operator pos:start="29:16" pos:end="29:16">-</operator><name pos:start="29:17" pos:end="29:35">VTD_FR_ROOT_ENTRY_P</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="31:7" pos:end="37:5">else if <condition pos:start="31:15" pos:end="31:57">(<expr pos:start="31:16" pos:end="31:56"><name pos:start="31:16" pos:end="31:22"><name pos:start="31:16" pos:end="31:17">re</name><operator pos:start="31:18" pos:end="31:18">.</operator><name pos:start="31:19" pos:end="31:22">rsvd</name></name> <operator pos:start="31:24" pos:end="31:25">||</operator> <operator pos:start="31:27" pos:end="31:27">(</operator><name pos:start="31:28" pos:end="31:33"><name pos:start="31:28" pos:end="31:29">re</name><operator pos:start="31:30" pos:end="31:30">.</operator><name pos:start="31:31" pos:end="31:33">val</name></name> <operator pos:start="31:35" pos:end="31:35">&amp;</operator> <name pos:start="31:37" pos:end="31:55">VTD_ROOT_ENTRY_RSVD</name><operator pos:start="31:56" pos:end="31:56">)</operator></expr>)</condition> <block pos:start="31:59" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:39">

        <expr_stmt pos:start="33:9" pos:end="33:46"><expr pos:start="33:9" pos:end="33:45"><call pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:28">trace_vtd_re_invalid</name><argument_list pos:start="33:29" pos:end="33:45">(<argument pos:start="33:30" pos:end="33:36"><expr pos:start="33:30" pos:end="33:36"><name pos:start="33:30" pos:end="33:36"><name pos:start="33:30" pos:end="33:31">re</name><operator pos:start="33:32" pos:end="33:32">.</operator><name pos:start="33:33" pos:end="33:36">rsvd</name></name></expr></argument>, <argument pos:start="33:39" pos:end="33:44"><expr pos:start="33:39" pos:end="33:44"><name pos:start="33:39" pos:end="33:44"><name pos:start="33:39" pos:end="33:40">re</name><operator pos:start="33:41" pos:end="33:41">.</operator><name pos:start="33:42" pos:end="33:44">val</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:39">return <expr pos:start="35:16" pos:end="35:38"><operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:38">VTD_FR_ROOT_ENTRY_RSVD</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:61"><expr pos:start="41:5" pos:end="41:60"><name pos:start="41:5" pos:end="41:10">ret_fr</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:60"><name pos:start="41:14" pos:end="41:44">vtd_get_context_entry_from_root</name><argument_list pos:start="41:45" pos:end="41:60">(<argument pos:start="41:46" pos:end="41:48"><expr pos:start="41:46" pos:end="41:48"><operator pos:start="41:46" pos:end="41:46">&amp;</operator><name pos:start="41:47" pos:end="41:48">re</name></expr></argument>, <argument pos:start="41:51" pos:end="41:55"><expr pos:start="41:51" pos:end="41:55"><name pos:start="41:51" pos:end="41:55">devfn</name></expr></argument>, <argument pos:start="41:58" pos:end="41:59"><expr pos:start="41:58" pos:end="41:59"><name pos:start="41:58" pos:end="41:59">ce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:15">(<expr pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:14">ret_fr</name></expr>)</condition> <block pos:start="43:17" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:22">

        <return pos:start="45:9" pos:end="45:22">return <expr pos:start="45:16" pos:end="45:21"><name pos:start="45:16" pos:end="45:21">ret_fr</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="67:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:28">(<expr pos:start="51:9" pos:end="51:27"><operator pos:start="51:9" pos:end="51:9">!</operator><call pos:start="51:10" pos:end="51:27"><name pos:start="51:10" pos:end="51:23">vtd_ce_present</name><argument_list pos:start="51:24" pos:end="51:27">(<argument pos:start="51:25" pos:end="51:26"><expr pos:start="51:25" pos:end="51:26"><name pos:start="51:25" pos:end="51:26">ce</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:30" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:39">

        <comment type="block" pos:start="53:9" pos:end="53:64">/* Not error - it's okay we don't have context entry. */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:49"><expr pos:start="55:9" pos:end="55:48"><call pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:32">trace_vtd_ce_not_present</name><argument_list pos:start="55:33" pos:end="55:48">(<argument pos:start="55:34" pos:end="55:40"><expr pos:start="55:34" pos:end="55:40"><name pos:start="55:34" pos:end="55:40">bus_num</name></expr></argument>, <argument pos:start="55:43" pos:end="55:47"><expr pos:start="55:43" pos:end="55:47"><name pos:start="55:43" pos:end="55:47">devfn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:39">return <expr pos:start="57:16" pos:end="57:38"><operator pos:start="57:16" pos:end="57:16">-</operator><name pos:start="57:17" pos:end="57:38">VTD_FR_CONTEXT_ENTRY_P</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="67:5">else if <condition pos:start="59:15" pos:end="61:52">(<expr pos:start="59:16" pos:end="61:51"><operator pos:start="59:16" pos:end="59:16">(</operator><name pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:18">ce</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:22">hi</name></name> <operator pos:start="59:24" pos:end="59:24">&amp;</operator> <name pos:start="59:26" pos:end="59:50">VTD_CONTEXT_ENTRY_RSVD_HI</name><operator pos:start="59:51" pos:end="59:51">)</operator> <operator pos:start="59:53" pos:end="59:54">||</operator>

               <operator pos:start="61:16" pos:end="61:16">(</operator><name pos:start="61:17" pos:end="61:22"><name pos:start="61:17" pos:end="61:18">ce</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:22">lo</name></name> <operator pos:start="61:24" pos:end="61:24">&amp;</operator> <name pos:start="61:26" pos:end="61:50">VTD_CONTEXT_ENTRY_RSVD_LO</name><operator pos:start="61:51" pos:end="61:51">)</operator></expr>)</condition> <block pos:start="61:54" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:42">

        <expr_stmt pos:start="63:9" pos:end="63:45"><expr pos:start="63:9" pos:end="63:44"><call pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:28">trace_vtd_ce_invalid</name><argument_list pos:start="63:29" pos:end="63:44">(<argument pos:start="63:30" pos:end="63:35"><expr pos:start="63:30" pos:end="63:35"><name pos:start="63:30" pos:end="63:35"><name pos:start="63:30" pos:end="63:31">ce</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:35">hi</name></name></expr></argument>, <argument pos:start="63:38" pos:end="63:43"><expr pos:start="63:38" pos:end="63:43"><name pos:start="63:38" pos:end="63:43"><name pos:start="63:38" pos:end="63:39">ce</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:43">lo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:42">return <expr pos:start="65:16" pos:end="65:41"><operator pos:start="65:16" pos:end="65:16">-</operator><name pos:start="65:17" pos:end="65:41">VTD_FR_CONTEXT_ENTRY_RSVD</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="69:5" pos:end="69:60">/* Check if the programming of context-entry is valid */</comment>

    <if_stmt pos:start="71:5" pos:end="97:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:57">(<expr pos:start="71:9" pos:end="71:56"><operator pos:start="71:9" pos:end="71:9">!</operator><call pos:start="71:10" pos:end="71:56"><name pos:start="71:10" pos:end="71:31">vtd_is_level_supported</name><argument_list pos:start="71:32" pos:end="71:56">(<argument pos:start="71:33" pos:end="71:33"><expr pos:start="71:33" pos:end="71:33"><name pos:start="71:33" pos:end="71:33">s</name></expr></argument>, <argument pos:start="71:36" pos:end="71:55"><expr pos:start="71:36" pos:end="71:55"><call pos:start="71:36" pos:end="71:55"><name pos:start="71:36" pos:end="71:51">vtd_ce_get_level</name><argument_list pos:start="71:52" pos:end="71:55">(<argument pos:start="71:53" pos:end="71:54"><expr pos:start="71:53" pos:end="71:54"><name pos:start="71:53" pos:end="71:54">ce</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:59" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:41">

        <expr_stmt pos:start="73:9" pos:end="73:45"><expr pos:start="73:9" pos:end="73:44"><call pos:start="73:9" pos:end="73:44"><name pos:start="73:9" pos:end="73:28">trace_vtd_ce_invalid</name><argument_list pos:start="73:29" pos:end="73:44">(<argument pos:start="73:30" pos:end="73:35"><expr pos:start="73:30" pos:end="73:35"><name pos:start="73:30" pos:end="73:35"><name pos:start="73:30" pos:end="73:31">ce</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:35">hi</name></name></expr></argument>, <argument pos:start="73:38" pos:end="73:43"><expr pos:start="73:38" pos:end="73:43"><name pos:start="73:38" pos:end="73:43"><name pos:start="73:38" pos:end="73:39">ce</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:43">lo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:41">return <expr pos:start="75:16" pos:end="75:40"><operator pos:start="75:16" pos:end="75:16">-</operator><name pos:start="75:17" pos:end="75:40">VTD_FR_CONTEXT_ENTRY_INV</name></expr>;</return>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="97:5">else <block pos:start="77:12" pos:end="97:5">{<block_content pos:start="79:9" pos:end="95:9">

        <switch pos:start="79:9" pos:end="95:9">switch <condition pos:start="79:16" pos:end="79:36">(<expr pos:start="79:17" pos:end="79:35"><call pos:start="79:17" pos:end="79:35"><name pos:start="79:17" pos:end="79:31">vtd_ce_get_type</name><argument_list pos:start="79:32" pos:end="79:35">(<argument pos:start="79:33" pos:end="79:34"><expr pos:start="79:33" pos:end="79:34"><name pos:start="79:33" pos:end="79:34">ce</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:38" pos:end="95:9">{<block_content pos:start="81:9" pos:end="93:45">

        <case pos:start="81:9" pos:end="81:40">case <expr pos:start="81:14" pos:end="81:39"><name pos:start="81:14" pos:end="81:39">VTD_CONTEXT_TT_MULTI_LEVEL</name></expr>:</case>

            <comment type="block" pos:start="83:13" pos:end="83:30">/* fall through */</comment>

        <case pos:start="85:9" pos:end="85:38">case <expr pos:start="85:14" pos:end="85:37"><name pos:start="85:14" pos:end="85:37">VTD_CONTEXT_TT_DEV_IOTLB</name></expr>:</case>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        <default pos:start="89:9" pos:end="89:16">default:</default>

            <expr_stmt pos:start="91:13" pos:end="91:49"><expr pos:start="91:13" pos:end="91:48"><call pos:start="91:13" pos:end="91:48"><name pos:start="91:13" pos:end="91:32">trace_vtd_ce_invalid</name><argument_list pos:start="91:33" pos:end="91:48">(<argument pos:start="91:34" pos:end="91:39"><expr pos:start="91:34" pos:end="91:39"><name pos:start="91:34" pos:end="91:39"><name pos:start="91:34" pos:end="91:35">ce</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:39">hi</name></name></expr></argument>, <argument pos:start="91:42" pos:end="91:47"><expr pos:start="91:42" pos:end="91:47"><name pos:start="91:42" pos:end="91:47"><name pos:start="91:42" pos:end="91:43">ce</name><operator pos:start="91:44" pos:end="91:45">-&gt;</operator><name pos:start="91:46" pos:end="91:47">lo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="93:13" pos:end="93:45">return <expr pos:start="93:20" pos:end="93:44"><operator pos:start="93:20" pos:end="93:20">-</operator><name pos:start="93:21" pos:end="93:44">VTD_FR_CONTEXT_ENTRY_INV</name></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
