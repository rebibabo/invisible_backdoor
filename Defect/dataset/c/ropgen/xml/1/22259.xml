<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22259.c" pos:tabs="8"><function pos:start="1:1" pos:end="2775:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:17">ExitStatus</name></type> <name pos:start="1:19" pos:end="1:31">translate_one</name><parameter_list pos:start="1:32" pos:end="1:65">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:44">DisasContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">ctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:59">uint32_t</name></type> <name pos:start="1:61" pos:end="1:64">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="2775:1">{<block_content pos:start="5:5" pos:end="2773:15">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:18">disp21</name></decl>, <decl pos:start="5:21" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:21" pos:end="5:26">disp16</name></decl>, <decl pos:start="5:29" pos:end="5:58"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:29" pos:end="5:34">disp12</name> <name pos:start="5:36" pos:end="5:48">__attribute__</name><argument_list pos:start="5:49" pos:end="5:58">(<argument pos:start="5:50" pos:end="5:57"><expr pos:start="5:50" pos:end="5:57"><operator pos:start="5:50" pos:end="5:50">(</operator><name pos:start="5:51" pos:end="5:56">unused</name><operator pos:start="5:57" pos:end="5:57">)</operator></expr></argument>)</argument_list></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:17">fn11</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:15">opc</name></decl>, <decl pos:start="9:18" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:18" pos:end="9:19">ra</name></decl>, <decl pos:start="9:22" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:22" pos:end="9:23">rb</name></decl>, <decl pos:start="9:26" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:26" pos:end="9:27">rc</name></decl>, <decl pos:start="9:30" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:30" pos:end="9:33">fpfn</name></decl>, <decl pos:start="9:36" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:36" pos:end="9:38">fn7</name></decl>, <decl pos:start="9:41" pos:end="9:43"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:41" pos:end="9:43">lit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:14">islit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">TCGv</name></type> <name pos:start="13:10" pos:end="13:11">va</name></decl>, <decl pos:start="13:14" pos:end="13:15"><type ref="prev" pos:start="13:5" pos:end="13:8"/><name pos:start="13:14" pos:end="13:15">vb</name></decl>, <decl pos:start="13:18" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:8"/><name pos:start="13:18" pos:end="13:19">vc</name></decl>, <decl pos:start="13:22" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:8"/><name pos:start="13:22" pos:end="13:24">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">TCGv_i32</name></type> <name pos:start="15:14" pos:end="15:16">t32</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:14">ExitStatus</name></type> <name pos:start="17:16" pos:end="17:18">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:39">/* Decode all instruction fields */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:7">opc</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:32"><name pos:start="23:11" pos:end="23:19">extract32</name><argument_list pos:start="23:20" pos:end="23:32">(<argument pos:start="23:21" pos:end="23:24"><expr pos:start="23:21" pos:end="23:24"><name pos:start="23:21" pos:end="23:24">insn</name></expr></argument>, <argument pos:start="23:27" pos:end="23:28"><expr pos:start="23:27" pos:end="23:28"><literal type="number" pos:start="23:27" pos:end="23:28">26</literal></expr></argument>, <argument pos:start="23:31" pos:end="23:31"><expr pos:start="23:31" pos:end="23:31"><literal type="number" pos:start="23:31" pos:end="23:31">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:6">ra</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:31"><name pos:start="25:10" pos:end="25:18">extract32</name><argument_list pos:start="25:19" pos:end="25:31">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">insn</name></expr></argument>, <argument pos:start="25:26" pos:end="25:27"><expr pos:start="25:26" pos:end="25:27"><literal type="number" pos:start="25:26" pos:end="25:27">21</literal></expr></argument>, <argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><literal type="number" pos:start="25:30" pos:end="25:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:6">rb</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <call pos:start="27:10" pos:end="27:31"><name pos:start="27:10" pos:end="27:18">extract32</name><argument_list pos:start="27:19" pos:end="27:31">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">insn</name></expr></argument>, <argument pos:start="27:26" pos:end="27:27"><expr pos:start="27:26" pos:end="27:27"><literal type="number" pos:start="27:26" pos:end="27:27">16</literal></expr></argument>, <argument pos:start="27:30" pos:end="27:30"><expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:6">rc</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:30"><name pos:start="29:10" pos:end="29:18">extract32</name><argument_list pos:start="29:19" pos:end="29:30">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">insn</name></expr></argument>, <argument pos:start="29:26" pos:end="29:26"><expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">0</literal></expr></argument>, <argument pos:start="29:29" pos:end="29:29"><expr pos:start="29:29" pos:end="29:29"><literal type="number" pos:start="29:29" pos:end="29:29">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:9">islit</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <call pos:start="31:13" pos:end="31:34"><name pos:start="31:13" pos:end="31:21">extract32</name><argument_list pos:start="31:22" pos:end="31:34">(<argument pos:start="31:23" pos:end="31:26"><expr pos:start="31:23" pos:end="31:26"><name pos:start="31:23" pos:end="31:26">insn</name></expr></argument>, <argument pos:start="31:29" pos:end="31:30"><expr pos:start="31:29" pos:end="31:30"><literal type="number" pos:start="31:29" pos:end="31:30">12</literal></expr></argument>, <argument pos:start="31:33" pos:end="31:33"><expr pos:start="31:33" pos:end="31:33"><literal type="number" pos:start="31:33" pos:end="31:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:7">lit</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:32"><name pos:start="33:11" pos:end="33:19">extract32</name><argument_list pos:start="33:20" pos:end="33:32">(<argument pos:start="33:21" pos:end="33:24"><expr pos:start="33:21" pos:end="33:24"><name pos:start="33:21" pos:end="33:24">insn</name></expr></argument>, <argument pos:start="33:27" pos:end="33:28"><expr pos:start="33:27" pos:end="33:28"><literal type="number" pos:start="33:27" pos:end="33:28">13</literal></expr></argument>, <argument pos:start="33:31" pos:end="33:31"><expr pos:start="33:31" pos:end="33:31"><literal type="number" pos:start="33:31" pos:end="33:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:10">disp21</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="37:36"><name pos:start="37:14" pos:end="37:23">sextract32</name><argument_list pos:start="37:24" pos:end="37:36">(<argument pos:start="37:25" pos:end="37:28"><expr pos:start="37:25" pos:end="37:28"><name pos:start="37:25" pos:end="37:28">insn</name></expr></argument>, <argument pos:start="37:31" pos:end="37:31"><expr pos:start="37:31" pos:end="37:31"><literal type="number" pos:start="37:31" pos:end="37:31">0</literal></expr></argument>, <argument pos:start="37:34" pos:end="37:35"><expr pos:start="37:34" pos:end="37:35"><literal type="number" pos:start="37:34" pos:end="37:35">21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:10">disp16</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:36"><name pos:start="39:14" pos:end="39:23">sextract32</name><argument_list pos:start="39:24" pos:end="39:36">(<argument pos:start="39:25" pos:end="39:28"><expr pos:start="39:25" pos:end="39:28"><name pos:start="39:25" pos:end="39:28">insn</name></expr></argument>, <argument pos:start="39:31" pos:end="39:31"><expr pos:start="39:31" pos:end="39:31"><literal type="number" pos:start="39:31" pos:end="39:31">0</literal></expr></argument>, <argument pos:start="39:34" pos:end="39:35"><expr pos:start="39:34" pos:end="39:35"><literal type="number" pos:start="39:34" pos:end="39:35">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:37"><expr pos:start="41:5" pos:end="41:36"><name pos:start="41:5" pos:end="41:10">disp12</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:36"><name pos:start="41:14" pos:end="41:23">sextract32</name><argument_list pos:start="41:24" pos:end="41:36">(<argument pos:start="41:25" pos:end="41:28"><expr pos:start="41:25" pos:end="41:28"><name pos:start="41:25" pos:end="41:28">insn</name></expr></argument>, <argument pos:start="41:31" pos:end="41:31"><expr pos:start="41:31" pos:end="41:31"><literal type="number" pos:start="41:31" pos:end="41:31">0</literal></expr></argument>, <argument pos:start="41:34" pos:end="41:35"><expr pos:start="41:34" pos:end="41:35"><literal type="number" pos:start="41:34" pos:end="41:35">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:34"><expr pos:start="45:5" pos:end="45:33"><name pos:start="45:5" pos:end="45:8">fn11</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <call pos:start="45:12" pos:end="45:33"><name pos:start="45:12" pos:end="45:20">extract32</name><argument_list pos:start="45:21" pos:end="45:33">(<argument pos:start="45:22" pos:end="45:25"><expr pos:start="45:22" pos:end="45:25"><name pos:start="45:22" pos:end="45:25">insn</name></expr></argument>, <argument pos:start="45:28" pos:end="45:28"><expr pos:start="45:28" pos:end="45:28"><literal type="number" pos:start="45:28" pos:end="45:28">5</literal></expr></argument>, <argument pos:start="45:31" pos:end="45:32"><expr pos:start="45:31" pos:end="45:32"><literal type="number" pos:start="45:31" pos:end="45:32">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:33"><expr pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:8">fpfn</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <call pos:start="47:12" pos:end="47:32"><name pos:start="47:12" pos:end="47:20">extract32</name><argument_list pos:start="47:21" pos:end="47:32">(<argument pos:start="47:22" pos:end="47:25"><expr pos:start="47:22" pos:end="47:25"><name pos:start="47:22" pos:end="47:25">insn</name></expr></argument>, <argument pos:start="47:28" pos:end="47:28"><expr pos:start="47:28" pos:end="47:28"><literal type="number" pos:start="47:28" pos:end="47:28">5</literal></expr></argument>, <argument pos:start="47:31" pos:end="47:31"><expr pos:start="47:31" pos:end="47:31"><literal type="number" pos:start="47:31" pos:end="47:31">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:32"><expr pos:start="49:5" pos:end="49:31"><name pos:start="49:5" pos:end="49:7">fn7</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:31"><name pos:start="49:11" pos:end="49:19">extract32</name><argument_list pos:start="49:20" pos:end="49:31">(<argument pos:start="49:21" pos:end="49:24"><expr pos:start="49:21" pos:end="49:24"><name pos:start="49:21" pos:end="49:24">insn</name></expr></argument>, <argument pos:start="49:27" pos:end="49:27"><expr pos:start="49:27" pos:end="49:27"><literal type="number" pos:start="49:27" pos:end="49:27">5</literal></expr></argument>, <argument pos:start="49:30" pos:end="49:30"><expr pos:start="49:30" pos:end="49:30"><literal type="number" pos:start="49:30" pos:end="49:30">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:27">(<expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:10">rb</name> <operator pos:start="53:12" pos:end="53:13">==</operator> <literal type="number" pos:start="53:15" pos:end="53:16">31</literal> <operator pos:start="53:18" pos:end="53:19">&amp;&amp;</operator> <operator pos:start="53:21" pos:end="53:21">!</operator><name pos:start="53:22" pos:end="53:26">islit</name></expr>)</condition> <block pos:start="53:29" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:16">

        <expr_stmt pos:start="55:9" pos:end="55:21"><expr pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:13">islit</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:20">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:16"><expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:11">lit</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:18"><expr pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <name pos:start="63:11" pos:end="63:17">NO_EXIT</name></expr>;</expr_stmt>

    <switch pos:start="65:5" pos:end="2769:5">switch <condition pos:start="65:12" pos:end="65:16">(<expr pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:15">opc</name></expr>)</condition> <block pos:start="65:18" pos:end="2769:5">{<block_content pos:start="67:5" pos:end="2767:14">

    <case pos:start="67:5" pos:end="67:14">case <expr pos:start="67:10" pos:end="67:13"><literal type="number" pos:start="67:10" pos:end="67:13">0x00</literal></expr>:</case>

        <comment type="block" pos:start="69:9" pos:end="69:22">/* CALL_PAL */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:51"><expr pos:start="71:9" pos:end="71:50"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:50"><name pos:start="71:15" pos:end="71:26">gen_call_pal</name><argument_list pos:start="71:27" pos:end="71:50">(<argument pos:start="71:28" pos:end="71:30"><expr pos:start="71:28" pos:end="71:30"><name pos:start="71:28" pos:end="71:30">ctx</name></expr></argument>, <argument pos:start="71:33" pos:end="71:49"><expr pos:start="71:33" pos:end="71:49"><name pos:start="71:33" pos:end="71:36">insn</name> <operator pos:start="71:38" pos:end="71:38">&amp;</operator> <literal type="number" pos:start="71:40" pos:end="71:49">0x03ffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:14">case <expr pos:start="75:10" pos:end="75:13"><literal type="number" pos:start="75:10" pos:end="75:13">0x01</literal></expr>:</case>

        <comment type="block" pos:start="77:9" pos:end="77:19">/* OPC01 */</comment>

        <goto pos:start="79:9" pos:end="79:25">goto <name pos:start="79:14" pos:end="79:24">invalid_opc</name>;</goto>

    <case pos:start="81:5" pos:end="81:14">case <expr pos:start="81:10" pos:end="81:13"><literal type="number" pos:start="81:10" pos:end="81:13">0x02</literal></expr>:</case>

        <comment type="block" pos:start="83:9" pos:end="83:19">/* OPC02 */</comment>

        <goto pos:start="85:9" pos:end="85:25">goto <name pos:start="85:14" pos:end="85:24">invalid_opc</name>;</goto>

    <case pos:start="87:5" pos:end="87:14">case <expr pos:start="87:10" pos:end="87:13"><literal type="number" pos:start="87:10" pos:end="87:13">0x03</literal></expr>:</case>

        <comment type="block" pos:start="89:9" pos:end="89:19">/* OPC03 */</comment>

        <goto pos:start="91:9" pos:end="91:25">goto <name pos:start="91:14" pos:end="91:24">invalid_opc</name>;</goto>

    <case pos:start="93:5" pos:end="93:14">case <expr pos:start="93:10" pos:end="93:13"><literal type="number" pos:start="93:10" pos:end="93:13">0x04</literal></expr>:</case>

        <comment type="block" pos:start="95:9" pos:end="95:19">/* OPC04 */</comment>

        <goto pos:start="97:9" pos:end="97:25">goto <name pos:start="97:14" pos:end="97:24">invalid_opc</name>;</goto>

    <case pos:start="99:5" pos:end="99:14">case <expr pos:start="99:10" pos:end="99:13"><literal type="number" pos:start="99:10" pos:end="99:13">0x05</literal></expr>:</case>

        <comment type="block" pos:start="101:9" pos:end="101:19">/* OPC05 */</comment>

        <goto pos:start="103:9" pos:end="103:25">goto <name pos:start="103:14" pos:end="103:24">invalid_opc</name>;</goto>

    <case pos:start="105:5" pos:end="105:14">case <expr pos:start="105:10" pos:end="105:13"><literal type="number" pos:start="105:10" pos:end="105:13">0x06</literal></expr>:</case>

        <comment type="block" pos:start="107:9" pos:end="107:19">/* OPC06 */</comment>

        <goto pos:start="109:9" pos:end="109:25">goto <name pos:start="109:14" pos:end="109:24">invalid_opc</name>;</goto>

    <case pos:start="111:5" pos:end="111:14">case <expr pos:start="111:10" pos:end="111:13"><literal type="number" pos:start="111:10" pos:end="111:13">0x07</literal></expr>:</case>

        <comment type="block" pos:start="113:9" pos:end="113:19">/* OPC07 */</comment>

        <goto pos:start="115:9" pos:end="115:25">goto <name pos:start="115:14" pos:end="115:24">invalid_opc</name>;</goto>



    <case pos:start="119:5" pos:end="119:14">case <expr pos:start="119:10" pos:end="119:13"><literal type="number" pos:start="119:10" pos:end="119:13">0x09</literal></expr>:</case>

        <comment type="block" pos:start="121:9" pos:end="121:18">/* LDAH */</comment>

        <expr_stmt pos:start="123:9" pos:end="123:40"><expr pos:start="123:9" pos:end="123:39"><name pos:start="123:9" pos:end="123:14">disp16</name> <operator pos:start="123:16" pos:end="123:16">=</operator> <operator pos:start="123:18" pos:end="123:18">(</operator><name pos:start="123:19" pos:end="123:26">uint32_t</name><operator pos:start="123:27" pos:end="123:27">)</operator><name pos:start="123:28" pos:end="123:33">disp16</name> <operator pos:start="123:35" pos:end="123:36">&lt;&lt;</operator> <literal type="number" pos:start="123:38" pos:end="123:39">16</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="125:9" pos:end="125:26">/* fall through */</comment>

    <case pos:start="127:5" pos:end="127:14">case <expr pos:start="127:10" pos:end="127:13"><literal type="number" pos:start="127:10" pos:end="127:13">0x08</literal></expr>:</case>

        <comment type="block" pos:start="129:9" pos:end="129:17">/* LDA */</comment>

        <expr_stmt pos:start="131:9" pos:end="131:31"><expr pos:start="131:9" pos:end="131:30"><name pos:start="131:9" pos:end="131:10">va</name> <operator pos:start="131:12" pos:end="131:12">=</operator> <call pos:start="131:14" pos:end="131:30"><name pos:start="131:14" pos:end="131:21">dest_gpr</name><argument_list pos:start="131:22" pos:end="131:30">(<argument pos:start="131:23" pos:end="131:25"><expr pos:start="131:23" pos:end="131:25"><name pos:start="131:23" pos:end="131:25">ctx</name></expr></argument>, <argument pos:start="131:28" pos:end="131:29"><expr pos:start="131:28" pos:end="131:29"><name pos:start="131:28" pos:end="131:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="133:9" pos:end="133:57">/* It's worth special-casing immediate loads.  */</comment>

        <if_stmt pos:start="135:9" pos:end="143:9"><if pos:start="135:9" pos:end="139:9">if <condition pos:start="135:12" pos:end="135:21">(<expr pos:start="135:13" pos:end="135:20"><name pos:start="135:13" pos:end="135:14">rb</name> <operator pos:start="135:16" pos:end="135:17">==</operator> <literal type="number" pos:start="135:19" pos:end="135:20">31</literal></expr>)</condition> <block pos:start="135:23" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:41">

            <expr_stmt pos:start="137:13" pos:end="137:41"><expr pos:start="137:13" pos:end="137:40"><call pos:start="137:13" pos:end="137:40"><name pos:start="137:13" pos:end="137:28">tcg_gen_movi_i64</name><argument_list pos:start="137:29" pos:end="137:40">(<argument pos:start="137:30" pos:end="137:31"><expr pos:start="137:30" pos:end="137:31"><name pos:start="137:30" pos:end="137:31">va</name></expr></argument>, <argument pos:start="137:34" pos:end="137:39"><expr pos:start="137:34" pos:end="137:39"><name pos:start="137:34" pos:end="137:39">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="139:11" pos:end="143:9">else <block pos:start="139:16" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:60">

            <expr_stmt pos:start="141:13" pos:end="141:60"><expr pos:start="141:13" pos:end="141:59"><call pos:start="141:13" pos:end="141:59"><name pos:start="141:13" pos:end="141:28">tcg_gen_addi_i64</name><argument_list pos:start="141:29" pos:end="141:59">(<argument pos:start="141:30" pos:end="141:31"><expr pos:start="141:30" pos:end="141:31"><name pos:start="141:30" pos:end="141:31">va</name></expr></argument>, <argument pos:start="141:34" pos:end="141:50"><expr pos:start="141:34" pos:end="141:50"><call pos:start="141:34" pos:end="141:50"><name pos:start="141:34" pos:end="141:41">load_gpr</name><argument_list pos:start="141:42" pos:end="141:50">(<argument pos:start="141:43" pos:end="141:45"><expr pos:start="141:43" pos:end="141:45"><name pos:start="141:43" pos:end="141:45">ctx</name></expr></argument>, <argument pos:start="141:48" pos:end="141:49"><expr pos:start="141:48" pos:end="141:49"><name pos:start="141:48" pos:end="141:49">rb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="141:53" pos:end="141:58"><expr pos:start="141:53" pos:end="141:58"><name pos:start="141:53" pos:end="141:58">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="145:9" pos:end="145:14">break;</break>



    <case pos:start="149:5" pos:end="149:14">case <expr pos:start="149:10" pos:end="149:13"><literal type="number" pos:start="149:10" pos:end="149:13">0x0A</literal></expr>:</case>

        <comment type="block" pos:start="151:9" pos:end="151:18">/* LDBU */</comment>

        <expr_stmt pos:start="153:9" pos:end="153:44"><expr pos:start="153:9" pos:end="153:43"><call pos:start="153:9" pos:end="153:43"><name pos:start="153:9" pos:end="153:23">REQUIRE_TB_FLAG</name><argument_list pos:start="153:24" pos:end="153:43">(<argument pos:start="153:25" pos:end="153:42"><expr pos:start="153:25" pos:end="153:42"><name pos:start="153:25" pos:end="153:42">TB_FLAGS_AMASK_BWX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:68"><expr pos:start="155:9" pos:end="155:67"><call pos:start="155:9" pos:end="155:67"><name pos:start="155:9" pos:end="155:20">gen_load_mem</name><argument_list pos:start="155:21" pos:end="155:67">(<argument pos:start="155:22" pos:end="155:24"><expr pos:start="155:22" pos:end="155:24"><name pos:start="155:22" pos:end="155:24">ctx</name></expr></argument>, <argument pos:start="155:27" pos:end="155:44"><expr pos:start="155:27" pos:end="155:44"><operator pos:start="155:27" pos:end="155:27">&amp;</operator><name pos:start="155:28" pos:end="155:44">tcg_gen_qemu_ld8u</name></expr></argument>, <argument pos:start="155:47" pos:end="155:48"><expr pos:start="155:47" pos:end="155:48"><name pos:start="155:47" pos:end="155:48">ra</name></expr></argument>, <argument pos:start="155:51" pos:end="155:52"><expr pos:start="155:51" pos:end="155:52"><name pos:start="155:51" pos:end="155:52">rb</name></expr></argument>, <argument pos:start="155:55" pos:end="155:60"><expr pos:start="155:55" pos:end="155:60"><name pos:start="155:55" pos:end="155:60">disp16</name></expr></argument>, <argument pos:start="155:63" pos:end="155:63"><expr pos:start="155:63" pos:end="155:63"><literal type="number" pos:start="155:63" pos:end="155:63">0</literal></expr></argument>, <argument pos:start="155:66" pos:end="155:66"><expr pos:start="155:66" pos:end="155:66"><literal type="number" pos:start="155:66" pos:end="155:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="157:9" pos:end="157:14">break;</break>

    <case pos:start="159:5" pos:end="159:14">case <expr pos:start="159:10" pos:end="159:13"><literal type="number" pos:start="159:10" pos:end="159:13">0x0B</literal></expr>:</case>

        <comment type="block" pos:start="161:9" pos:end="161:19">/* LDQ_U */</comment>

        <expr_stmt pos:start="163:9" pos:end="163:68"><expr pos:start="163:9" pos:end="163:67"><call pos:start="163:9" pos:end="163:67"><name pos:start="163:9" pos:end="163:20">gen_load_mem</name><argument_list pos:start="163:21" pos:end="163:67">(<argument pos:start="163:22" pos:end="163:24"><expr pos:start="163:22" pos:end="163:24"><name pos:start="163:22" pos:end="163:24">ctx</name></expr></argument>, <argument pos:start="163:27" pos:end="163:44"><expr pos:start="163:27" pos:end="163:44"><operator pos:start="163:27" pos:end="163:27">&amp;</operator><name pos:start="163:28" pos:end="163:44">tcg_gen_qemu_ld64</name></expr></argument>, <argument pos:start="163:47" pos:end="163:48"><expr pos:start="163:47" pos:end="163:48"><name pos:start="163:47" pos:end="163:48">ra</name></expr></argument>, <argument pos:start="163:51" pos:end="163:52"><expr pos:start="163:51" pos:end="163:52"><name pos:start="163:51" pos:end="163:52">rb</name></expr></argument>, <argument pos:start="163:55" pos:end="163:60"><expr pos:start="163:55" pos:end="163:60"><name pos:start="163:55" pos:end="163:60">disp16</name></expr></argument>, <argument pos:start="163:63" pos:end="163:63"><expr pos:start="163:63" pos:end="163:63"><literal type="number" pos:start="163:63" pos:end="163:63">0</literal></expr></argument>, <argument pos:start="163:66" pos:end="163:66"><expr pos:start="163:66" pos:end="163:66"><literal type="number" pos:start="163:66" pos:end="163:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <case pos:start="167:5" pos:end="167:14">case <expr pos:start="167:10" pos:end="167:13"><literal type="number" pos:start="167:10" pos:end="167:13">0x0C</literal></expr>:</case>

        <comment type="block" pos:start="169:9" pos:end="169:18">/* LDWU */</comment>

        <expr_stmt pos:start="171:9" pos:end="171:44"><expr pos:start="171:9" pos:end="171:43"><call pos:start="171:9" pos:end="171:43"><name pos:start="171:9" pos:end="171:23">REQUIRE_TB_FLAG</name><argument_list pos:start="171:24" pos:end="171:43">(<argument pos:start="171:25" pos:end="171:42"><expr pos:start="171:25" pos:end="171:42"><name pos:start="171:25" pos:end="171:42">TB_FLAGS_AMASK_BWX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:69"><expr pos:start="173:9" pos:end="173:68"><call pos:start="173:9" pos:end="173:68"><name pos:start="173:9" pos:end="173:20">gen_load_mem</name><argument_list pos:start="173:21" pos:end="173:68">(<argument pos:start="173:22" pos:end="173:24"><expr pos:start="173:22" pos:end="173:24"><name pos:start="173:22" pos:end="173:24">ctx</name></expr></argument>, <argument pos:start="173:27" pos:end="173:45"><expr pos:start="173:27" pos:end="173:45"><operator pos:start="173:27" pos:end="173:27">&amp;</operator><name pos:start="173:28" pos:end="173:45">tcg_gen_qemu_ld16u</name></expr></argument>, <argument pos:start="173:48" pos:end="173:49"><expr pos:start="173:48" pos:end="173:49"><name pos:start="173:48" pos:end="173:49">ra</name></expr></argument>, <argument pos:start="173:52" pos:end="173:53"><expr pos:start="173:52" pos:end="173:53"><name pos:start="173:52" pos:end="173:53">rb</name></expr></argument>, <argument pos:start="173:56" pos:end="173:61"><expr pos:start="173:56" pos:end="173:61"><name pos:start="173:56" pos:end="173:61">disp16</name></expr></argument>, <argument pos:start="173:64" pos:end="173:64"><expr pos:start="173:64" pos:end="173:64"><literal type="number" pos:start="173:64" pos:end="173:64">0</literal></expr></argument>, <argument pos:start="173:67" pos:end="173:67"><expr pos:start="173:67" pos:end="173:67"><literal type="number" pos:start="173:67" pos:end="173:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="175:9" pos:end="175:14">break;</break>

    <case pos:start="177:5" pos:end="177:14">case <expr pos:start="177:10" pos:end="177:13"><literal type="number" pos:start="177:10" pos:end="177:13">0x0D</literal></expr>:</case>

        <comment type="block" pos:start="179:9" pos:end="179:17">/* STW */</comment>

        <expr_stmt pos:start="181:9" pos:end="181:44"><expr pos:start="181:9" pos:end="181:43"><call pos:start="181:9" pos:end="181:43"><name pos:start="181:9" pos:end="181:23">REQUIRE_TB_FLAG</name><argument_list pos:start="181:24" pos:end="181:43">(<argument pos:start="181:25" pos:end="181:42"><expr pos:start="181:25" pos:end="181:42"><name pos:start="181:25" pos:end="181:42">TB_FLAGS_AMASK_BWX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:69"><expr pos:start="183:9" pos:end="183:68"><call pos:start="183:9" pos:end="183:68"><name pos:start="183:9" pos:end="183:21">gen_store_mem</name><argument_list pos:start="183:22" pos:end="183:68">(<argument pos:start="183:23" pos:end="183:25"><expr pos:start="183:23" pos:end="183:25"><name pos:start="183:23" pos:end="183:25">ctx</name></expr></argument>, <argument pos:start="183:28" pos:end="183:45"><expr pos:start="183:28" pos:end="183:45"><operator pos:start="183:28" pos:end="183:28">&amp;</operator><name pos:start="183:29" pos:end="183:45">tcg_gen_qemu_st16</name></expr></argument>, <argument pos:start="183:48" pos:end="183:49"><expr pos:start="183:48" pos:end="183:49"><name pos:start="183:48" pos:end="183:49">ra</name></expr></argument>, <argument pos:start="183:52" pos:end="183:53"><expr pos:start="183:52" pos:end="183:53"><name pos:start="183:52" pos:end="183:53">rb</name></expr></argument>, <argument pos:start="183:56" pos:end="183:61"><expr pos:start="183:56" pos:end="183:61"><name pos:start="183:56" pos:end="183:61">disp16</name></expr></argument>, <argument pos:start="183:64" pos:end="183:64"><expr pos:start="183:64" pos:end="183:64"><literal type="number" pos:start="183:64" pos:end="183:64">0</literal></expr></argument>, <argument pos:start="183:67" pos:end="183:67"><expr pos:start="183:67" pos:end="183:67"><literal type="number" pos:start="183:67" pos:end="183:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="185:9" pos:end="185:14">break;</break>

    <case pos:start="187:5" pos:end="187:14">case <expr pos:start="187:10" pos:end="187:13"><literal type="number" pos:start="187:10" pos:end="187:13">0x0E</literal></expr>:</case>

        <comment type="block" pos:start="189:9" pos:end="189:17">/* STB */</comment>

        <expr_stmt pos:start="191:9" pos:end="191:44"><expr pos:start="191:9" pos:end="191:43"><call pos:start="191:9" pos:end="191:43"><name pos:start="191:9" pos:end="191:23">REQUIRE_TB_FLAG</name><argument_list pos:start="191:24" pos:end="191:43">(<argument pos:start="191:25" pos:end="191:42"><expr pos:start="191:25" pos:end="191:42"><name pos:start="191:25" pos:end="191:42">TB_FLAGS_AMASK_BWX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:68"><expr pos:start="193:9" pos:end="193:67"><call pos:start="193:9" pos:end="193:67"><name pos:start="193:9" pos:end="193:21">gen_store_mem</name><argument_list pos:start="193:22" pos:end="193:67">(<argument pos:start="193:23" pos:end="193:25"><expr pos:start="193:23" pos:end="193:25"><name pos:start="193:23" pos:end="193:25">ctx</name></expr></argument>, <argument pos:start="193:28" pos:end="193:44"><expr pos:start="193:28" pos:end="193:44"><operator pos:start="193:28" pos:end="193:28">&amp;</operator><name pos:start="193:29" pos:end="193:44">tcg_gen_qemu_st8</name></expr></argument>, <argument pos:start="193:47" pos:end="193:48"><expr pos:start="193:47" pos:end="193:48"><name pos:start="193:47" pos:end="193:48">ra</name></expr></argument>, <argument pos:start="193:51" pos:end="193:52"><expr pos:start="193:51" pos:end="193:52"><name pos:start="193:51" pos:end="193:52">rb</name></expr></argument>, <argument pos:start="193:55" pos:end="193:60"><expr pos:start="193:55" pos:end="193:60"><name pos:start="193:55" pos:end="193:60">disp16</name></expr></argument>, <argument pos:start="193:63" pos:end="193:63"><expr pos:start="193:63" pos:end="193:63"><literal type="number" pos:start="193:63" pos:end="193:63">0</literal></expr></argument>, <argument pos:start="193:66" pos:end="193:66"><expr pos:start="193:66" pos:end="193:66"><literal type="number" pos:start="193:66" pos:end="193:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="195:9" pos:end="195:14">break;</break>

    <case pos:start="197:5" pos:end="197:14">case <expr pos:start="197:10" pos:end="197:13"><literal type="number" pos:start="197:10" pos:end="197:13">0x0F</literal></expr>:</case>

        <comment type="block" pos:start="199:9" pos:end="199:19">/* STQ_U */</comment>

        <expr_stmt pos:start="201:9" pos:end="201:69"><expr pos:start="201:9" pos:end="201:68"><call pos:start="201:9" pos:end="201:68"><name pos:start="201:9" pos:end="201:21">gen_store_mem</name><argument_list pos:start="201:22" pos:end="201:68">(<argument pos:start="201:23" pos:end="201:25"><expr pos:start="201:23" pos:end="201:25"><name pos:start="201:23" pos:end="201:25">ctx</name></expr></argument>, <argument pos:start="201:28" pos:end="201:45"><expr pos:start="201:28" pos:end="201:45"><operator pos:start="201:28" pos:end="201:28">&amp;</operator><name pos:start="201:29" pos:end="201:45">tcg_gen_qemu_st64</name></expr></argument>, <argument pos:start="201:48" pos:end="201:49"><expr pos:start="201:48" pos:end="201:49"><name pos:start="201:48" pos:end="201:49">ra</name></expr></argument>, <argument pos:start="201:52" pos:end="201:53"><expr pos:start="201:52" pos:end="201:53"><name pos:start="201:52" pos:end="201:53">rb</name></expr></argument>, <argument pos:start="201:56" pos:end="201:61"><expr pos:start="201:56" pos:end="201:61"><name pos:start="201:56" pos:end="201:61">disp16</name></expr></argument>, <argument pos:start="201:64" pos:end="201:64"><expr pos:start="201:64" pos:end="201:64"><literal type="number" pos:start="201:64" pos:end="201:64">0</literal></expr></argument>, <argument pos:start="201:67" pos:end="201:67"><expr pos:start="201:67" pos:end="201:67"><literal type="number" pos:start="201:67" pos:end="201:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="203:9" pos:end="203:14">break;</break>



    <case pos:start="207:5" pos:end="207:14">case <expr pos:start="207:10" pos:end="207:13"><literal type="number" pos:start="207:10" pos:end="207:13">0x10</literal></expr>:</case>

        <expr_stmt pos:start="209:9" pos:end="209:31"><expr pos:start="209:9" pos:end="209:30"><name pos:start="209:9" pos:end="209:10">vc</name> <operator pos:start="209:12" pos:end="209:12">=</operator> <call pos:start="209:14" pos:end="209:30"><name pos:start="209:14" pos:end="209:21">dest_gpr</name><argument_list pos:start="209:22" pos:end="209:30">(<argument pos:start="209:23" pos:end="209:25"><expr pos:start="209:23" pos:end="209:25"><name pos:start="209:23" pos:end="209:25">ctx</name></expr></argument>, <argument pos:start="209:28" pos:end="209:29"><expr pos:start="209:28" pos:end="209:29"><name pos:start="209:28" pos:end="209:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:47"><expr pos:start="211:9" pos:end="211:46"><name pos:start="211:9" pos:end="211:10">vb</name> <operator pos:start="211:12" pos:end="211:12">=</operator> <call pos:start="211:14" pos:end="211:46"><name pos:start="211:14" pos:end="211:25">load_gpr_lit</name><argument_list pos:start="211:26" pos:end="211:46">(<argument pos:start="211:27" pos:end="211:29"><expr pos:start="211:27" pos:end="211:29"><name pos:start="211:27" pos:end="211:29">ctx</name></expr></argument>, <argument pos:start="211:32" pos:end="211:33"><expr pos:start="211:32" pos:end="211:33"><name pos:start="211:32" pos:end="211:33">rb</name></expr></argument>, <argument pos:start="211:36" pos:end="211:38"><expr pos:start="211:36" pos:end="211:38"><name pos:start="211:36" pos:end="211:38">lit</name></expr></argument>, <argument pos:start="211:41" pos:end="211:45"><expr pos:start="211:41" pos:end="211:45"><name pos:start="211:41" pos:end="211:45">islit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="215:9" pos:end="237:9"><if pos:start="215:9" pos:end="237:9">if <condition pos:start="215:12" pos:end="215:21">(<expr pos:start="215:13" pos:end="215:20"><name pos:start="215:13" pos:end="215:14">ra</name> <operator pos:start="215:16" pos:end="215:17">==</operator> <literal type="number" pos:start="215:19" pos:end="215:20">31</literal></expr>)</condition> <block pos:start="215:23" pos:end="237:9">{<block_content pos:start="217:13" pos:end="235:13">

            <if_stmt pos:start="217:13" pos:end="225:13"><if pos:start="217:13" pos:end="225:13">if <condition pos:start="217:16" pos:end="217:28">(<expr pos:start="217:17" pos:end="217:27"><name pos:start="217:17" pos:end="217:19">fn7</name> <operator pos:start="217:21" pos:end="217:22">==</operator> <literal type="number" pos:start="217:24" pos:end="217:27">0x00</literal></expr>)</condition> <block pos:start="217:30" pos:end="225:13">{<block_content pos:start="221:17" pos:end="223:22">

                <comment type="block" pos:start="219:17" pos:end="219:50">/* Special case ADDL as SEXTL.  */</comment>

                <expr_stmt pos:start="221:17" pos:end="221:43"><expr pos:start="221:17" pos:end="221:42"><call pos:start="221:17" pos:end="221:42"><name pos:start="221:17" pos:end="221:34">tcg_gen_ext32s_i64</name><argument_list pos:start="221:35" pos:end="221:42">(<argument pos:start="221:36" pos:end="221:37"><expr pos:start="221:36" pos:end="221:37"><name pos:start="221:36" pos:end="221:37">vc</name></expr></argument>, <argument pos:start="221:40" pos:end="221:41"><expr pos:start="221:40" pos:end="221:41"><name pos:start="221:40" pos:end="221:41">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="223:17" pos:end="223:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="227:13" pos:end="235:13"><if pos:start="227:13" pos:end="235:13">if <condition pos:start="227:16" pos:end="227:28">(<expr pos:start="227:17" pos:end="227:27"><name pos:start="227:17" pos:end="227:19">fn7</name> <operator pos:start="227:21" pos:end="227:22">==</operator> <literal type="number" pos:start="227:24" pos:end="227:27">0x29</literal></expr>)</condition> <block pos:start="227:30" pos:end="235:13">{<block_content pos:start="231:17" pos:end="233:22">

                <comment type="block" pos:start="229:17" pos:end="229:49">/* Special case SUBQ as NEGQ.  */</comment>

                <expr_stmt pos:start="231:17" pos:end="231:40"><expr pos:start="231:17" pos:end="231:39"><call pos:start="231:17" pos:end="231:39"><name pos:start="231:17" pos:end="231:31">tcg_gen_neg_i64</name><argument_list pos:start="231:32" pos:end="231:39">(<argument pos:start="231:33" pos:end="231:34"><expr pos:start="231:33" pos:end="231:34"><name pos:start="231:33" pos:end="231:34">vc</name></expr></argument>, <argument pos:start="231:37" pos:end="231:38"><expr pos:start="231:37" pos:end="231:38"><name pos:start="231:37" pos:end="231:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="233:17" pos:end="233:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="241:9" pos:end="241:31"><expr pos:start="241:9" pos:end="241:30"><name pos:start="241:9" pos:end="241:10">va</name> <operator pos:start="241:12" pos:end="241:12">=</operator> <call pos:start="241:14" pos:end="241:30"><name pos:start="241:14" pos:end="241:21">load_gpr</name><argument_list pos:start="241:22" pos:end="241:30">(<argument pos:start="241:23" pos:end="241:25"><expr pos:start="241:23" pos:end="241:25"><name pos:start="241:23" pos:end="241:25">ctx</name></expr></argument>, <argument pos:start="241:28" pos:end="241:29"><expr pos:start="241:28" pos:end="241:29"><name pos:start="241:28" pos:end="241:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="243:9" pos:end="485:9">switch <condition pos:start="243:16" pos:end="243:20">(<expr pos:start="243:17" pos:end="243:19"><name pos:start="243:17" pos:end="243:19">fn7</name></expr>)</condition> <block pos:start="243:22" pos:end="485:9">{<block_content pos:start="245:9" pos:end="483:29">

        <case pos:start="245:9" pos:end="245:18">case <expr pos:start="245:14" pos:end="245:17"><literal type="number" pos:start="245:14" pos:end="245:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="247:13" pos:end="247:22">/* ADDL */</comment>

            <expr_stmt pos:start="249:13" pos:end="249:40"><expr pos:start="249:13" pos:end="249:39"><call pos:start="249:13" pos:end="249:39"><name pos:start="249:13" pos:end="249:27">tcg_gen_add_i64</name><argument_list pos:start="249:28" pos:end="249:39">(<argument pos:start="249:29" pos:end="249:30"><expr pos:start="249:29" pos:end="249:30"><name pos:start="249:29" pos:end="249:30">vc</name></expr></argument>, <argument pos:start="249:33" pos:end="249:34"><expr pos:start="249:33" pos:end="249:34"><name pos:start="249:33" pos:end="249:34">va</name></expr></argument>, <argument pos:start="249:37" pos:end="249:38"><expr pos:start="249:37" pos:end="249:38"><name pos:start="249:37" pos:end="249:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:39"><expr pos:start="251:13" pos:end="251:38"><call pos:start="251:13" pos:end="251:38"><name pos:start="251:13" pos:end="251:30">tcg_gen_ext32s_i64</name><argument_list pos:start="251:31" pos:end="251:38">(<argument pos:start="251:32" pos:end="251:33"><expr pos:start="251:32" pos:end="251:33"><name pos:start="251:32" pos:end="251:33">vc</name></expr></argument>, <argument pos:start="251:36" pos:end="251:37"><expr pos:start="251:36" pos:end="251:37"><name pos:start="251:36" pos:end="251:37">vc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="253:13" pos:end="253:18">break;</break>

        <case pos:start="255:9" pos:end="255:18">case <expr pos:start="255:14" pos:end="255:17"><literal type="number" pos:start="255:14" pos:end="255:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="257:13" pos:end="257:24">/* S4ADDL */</comment>

            <expr_stmt pos:start="259:13" pos:end="259:33"><expr pos:start="259:13" pos:end="259:32"><name pos:start="259:13" pos:end="259:15">tmp</name> <operator pos:start="259:17" pos:end="259:17">=</operator> <call pos:start="259:19" pos:end="259:32"><name pos:start="259:19" pos:end="259:30">tcg_temp_new</name><argument_list pos:start="259:31" pos:end="259:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:41"><expr pos:start="261:13" pos:end="261:40"><call pos:start="261:13" pos:end="261:40"><name pos:start="261:13" pos:end="261:28">tcg_gen_shli_i64</name><argument_list pos:start="261:29" pos:end="261:40">(<argument pos:start="261:30" pos:end="261:32"><expr pos:start="261:30" pos:end="261:32"><name pos:start="261:30" pos:end="261:32">tmp</name></expr></argument>, <argument pos:start="261:35" pos:end="261:36"><expr pos:start="261:35" pos:end="261:36"><name pos:start="261:35" pos:end="261:36">va</name></expr></argument>, <argument pos:start="261:39" pos:end="261:39"><expr pos:start="261:39" pos:end="261:39"><literal type="number" pos:start="261:39" pos:end="261:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:42"><expr pos:start="263:13" pos:end="263:41"><call pos:start="263:13" pos:end="263:41"><name pos:start="263:13" pos:end="263:27">tcg_gen_add_i64</name><argument_list pos:start="263:28" pos:end="263:41">(<argument pos:start="263:29" pos:end="263:31"><expr pos:start="263:29" pos:end="263:31"><name pos:start="263:29" pos:end="263:31">tmp</name></expr></argument>, <argument pos:start="263:34" pos:end="263:36"><expr pos:start="263:34" pos:end="263:36"><name pos:start="263:34" pos:end="263:36">tmp</name></expr></argument>, <argument pos:start="263:39" pos:end="263:40"><expr pos:start="263:39" pos:end="263:40"><name pos:start="263:39" pos:end="263:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:40"><expr pos:start="265:13" pos:end="265:39"><call pos:start="265:13" pos:end="265:39"><name pos:start="265:13" pos:end="265:30">tcg_gen_ext32s_i64</name><argument_list pos:start="265:31" pos:end="265:39">(<argument pos:start="265:32" pos:end="265:33"><expr pos:start="265:32" pos:end="265:33"><name pos:start="265:32" pos:end="265:33">vc</name></expr></argument>, <argument pos:start="265:36" pos:end="265:38"><expr pos:start="265:36" pos:end="265:38"><name pos:start="265:36" pos:end="265:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:31"><expr pos:start="267:13" pos:end="267:30"><call pos:start="267:13" pos:end="267:30"><name pos:start="267:13" pos:end="267:25">tcg_temp_free</name><argument_list pos:start="267:26" pos:end="267:30">(<argument pos:start="267:27" pos:end="267:29"><expr pos:start="267:27" pos:end="267:29"><name pos:start="267:27" pos:end="267:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="269:13" pos:end="269:18">break;</break>

        <case pos:start="271:9" pos:end="271:18">case <expr pos:start="271:14" pos:end="271:17"><literal type="number" pos:start="271:14" pos:end="271:17">0x09</literal></expr>:</case>

            <comment type="block" pos:start="273:13" pos:end="273:22">/* SUBL */</comment>

            <expr_stmt pos:start="275:13" pos:end="275:40"><expr pos:start="275:13" pos:end="275:39"><call pos:start="275:13" pos:end="275:39"><name pos:start="275:13" pos:end="275:27">tcg_gen_sub_i64</name><argument_list pos:start="275:28" pos:end="275:39">(<argument pos:start="275:29" pos:end="275:30"><expr pos:start="275:29" pos:end="275:30"><name pos:start="275:29" pos:end="275:30">vc</name></expr></argument>, <argument pos:start="275:33" pos:end="275:34"><expr pos:start="275:33" pos:end="275:34"><name pos:start="275:33" pos:end="275:34">va</name></expr></argument>, <argument pos:start="275:37" pos:end="275:38"><expr pos:start="275:37" pos:end="275:38"><name pos:start="275:37" pos:end="275:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:39"><expr pos:start="277:13" pos:end="277:38"><call pos:start="277:13" pos:end="277:38"><name pos:start="277:13" pos:end="277:30">tcg_gen_ext32s_i64</name><argument_list pos:start="277:31" pos:end="277:38">(<argument pos:start="277:32" pos:end="277:33"><expr pos:start="277:32" pos:end="277:33"><name pos:start="277:32" pos:end="277:33">vc</name></expr></argument>, <argument pos:start="277:36" pos:end="277:37"><expr pos:start="277:36" pos:end="277:37"><name pos:start="277:36" pos:end="277:37">vc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="279:13" pos:end="279:18">break;</break>

        <case pos:start="281:9" pos:end="281:18">case <expr pos:start="281:14" pos:end="281:17"><literal type="number" pos:start="281:14" pos:end="281:17">0x0B</literal></expr>:</case>

            <comment type="block" pos:start="283:13" pos:end="283:24">/* S4SUBL */</comment>

            <expr_stmt pos:start="285:13" pos:end="285:33"><expr pos:start="285:13" pos:end="285:32"><name pos:start="285:13" pos:end="285:15">tmp</name> <operator pos:start="285:17" pos:end="285:17">=</operator> <call pos:start="285:19" pos:end="285:32"><name pos:start="285:19" pos:end="285:30">tcg_temp_new</name><argument_list pos:start="285:31" pos:end="285:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:41"><expr pos:start="287:13" pos:end="287:40"><call pos:start="287:13" pos:end="287:40"><name pos:start="287:13" pos:end="287:28">tcg_gen_shli_i64</name><argument_list pos:start="287:29" pos:end="287:40">(<argument pos:start="287:30" pos:end="287:32"><expr pos:start="287:30" pos:end="287:32"><name pos:start="287:30" pos:end="287:32">tmp</name></expr></argument>, <argument pos:start="287:35" pos:end="287:36"><expr pos:start="287:35" pos:end="287:36"><name pos:start="287:35" pos:end="287:36">va</name></expr></argument>, <argument pos:start="287:39" pos:end="287:39"><expr pos:start="287:39" pos:end="287:39"><literal type="number" pos:start="287:39" pos:end="287:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:42"><expr pos:start="289:13" pos:end="289:41"><call pos:start="289:13" pos:end="289:41"><name pos:start="289:13" pos:end="289:27">tcg_gen_sub_i64</name><argument_list pos:start="289:28" pos:end="289:41">(<argument pos:start="289:29" pos:end="289:31"><expr pos:start="289:29" pos:end="289:31"><name pos:start="289:29" pos:end="289:31">tmp</name></expr></argument>, <argument pos:start="289:34" pos:end="289:36"><expr pos:start="289:34" pos:end="289:36"><name pos:start="289:34" pos:end="289:36">tmp</name></expr></argument>, <argument pos:start="289:39" pos:end="289:40"><expr pos:start="289:39" pos:end="289:40"><name pos:start="289:39" pos:end="289:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:40"><expr pos:start="291:13" pos:end="291:39"><call pos:start="291:13" pos:end="291:39"><name pos:start="291:13" pos:end="291:30">tcg_gen_ext32s_i64</name><argument_list pos:start="291:31" pos:end="291:39">(<argument pos:start="291:32" pos:end="291:33"><expr pos:start="291:32" pos:end="291:33"><name pos:start="291:32" pos:end="291:33">vc</name></expr></argument>, <argument pos:start="291:36" pos:end="291:38"><expr pos:start="291:36" pos:end="291:38"><name pos:start="291:36" pos:end="291:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:31"><expr pos:start="293:13" pos:end="293:30"><call pos:start="293:13" pos:end="293:30"><name pos:start="293:13" pos:end="293:25">tcg_temp_free</name><argument_list pos:start="293:26" pos:end="293:30">(<argument pos:start="293:27" pos:end="293:29"><expr pos:start="293:27" pos:end="293:29"><name pos:start="293:27" pos:end="293:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="295:13" pos:end="295:18">break;</break>

        <case pos:start="297:9" pos:end="297:18">case <expr pos:start="297:14" pos:end="297:17"><literal type="number" pos:start="297:14" pos:end="297:17">0x0F</literal></expr>:</case>

            <comment type="block" pos:start="299:13" pos:end="299:24">/* CMPBGE */</comment>

            <expr_stmt pos:start="301:13" pos:end="301:42"><expr pos:start="301:13" pos:end="301:41"><call pos:start="301:13" pos:end="301:41"><name pos:start="301:13" pos:end="301:29">gen_helper_cmpbge</name><argument_list pos:start="301:30" pos:end="301:41">(<argument pos:start="301:31" pos:end="301:32"><expr pos:start="301:31" pos:end="301:32"><name pos:start="301:31" pos:end="301:32">vc</name></expr></argument>, <argument pos:start="301:35" pos:end="301:36"><expr pos:start="301:35" pos:end="301:36"><name pos:start="301:35" pos:end="301:36">va</name></expr></argument>, <argument pos:start="301:39" pos:end="301:40"><expr pos:start="301:39" pos:end="301:40"><name pos:start="301:39" pos:end="301:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="303:13" pos:end="303:18">break;</break>

        <case pos:start="305:9" pos:end="305:18">case <expr pos:start="305:14" pos:end="305:17"><literal type="number" pos:start="305:14" pos:end="305:17">0x12</literal></expr>:</case>

            <comment type="block" pos:start="307:13" pos:end="307:24">/* S8ADDL */</comment>

            <expr_stmt pos:start="309:13" pos:end="309:33"><expr pos:start="309:13" pos:end="309:32"><name pos:start="309:13" pos:end="309:15">tmp</name> <operator pos:start="309:17" pos:end="309:17">=</operator> <call pos:start="309:19" pos:end="309:32"><name pos:start="309:19" pos:end="309:30">tcg_temp_new</name><argument_list pos:start="309:31" pos:end="309:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="311:13" pos:end="311:41"><expr pos:start="311:13" pos:end="311:40"><call pos:start="311:13" pos:end="311:40"><name pos:start="311:13" pos:end="311:28">tcg_gen_shli_i64</name><argument_list pos:start="311:29" pos:end="311:40">(<argument pos:start="311:30" pos:end="311:32"><expr pos:start="311:30" pos:end="311:32"><name pos:start="311:30" pos:end="311:32">tmp</name></expr></argument>, <argument pos:start="311:35" pos:end="311:36"><expr pos:start="311:35" pos:end="311:36"><name pos:start="311:35" pos:end="311:36">va</name></expr></argument>, <argument pos:start="311:39" pos:end="311:39"><expr pos:start="311:39" pos:end="311:39"><literal type="number" pos:start="311:39" pos:end="311:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:42"><expr pos:start="313:13" pos:end="313:41"><call pos:start="313:13" pos:end="313:41"><name pos:start="313:13" pos:end="313:27">tcg_gen_add_i64</name><argument_list pos:start="313:28" pos:end="313:41">(<argument pos:start="313:29" pos:end="313:31"><expr pos:start="313:29" pos:end="313:31"><name pos:start="313:29" pos:end="313:31">tmp</name></expr></argument>, <argument pos:start="313:34" pos:end="313:36"><expr pos:start="313:34" pos:end="313:36"><name pos:start="313:34" pos:end="313:36">tmp</name></expr></argument>, <argument pos:start="313:39" pos:end="313:40"><expr pos:start="313:39" pos:end="313:40"><name pos:start="313:39" pos:end="313:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:40"><expr pos:start="315:13" pos:end="315:39"><call pos:start="315:13" pos:end="315:39"><name pos:start="315:13" pos:end="315:30">tcg_gen_ext32s_i64</name><argument_list pos:start="315:31" pos:end="315:39">(<argument pos:start="315:32" pos:end="315:33"><expr pos:start="315:32" pos:end="315:33"><name pos:start="315:32" pos:end="315:33">vc</name></expr></argument>, <argument pos:start="315:36" pos:end="315:38"><expr pos:start="315:36" pos:end="315:38"><name pos:start="315:36" pos:end="315:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="317:13" pos:end="317:31"><expr pos:start="317:13" pos:end="317:30"><call pos:start="317:13" pos:end="317:30"><name pos:start="317:13" pos:end="317:25">tcg_temp_free</name><argument_list pos:start="317:26" pos:end="317:30">(<argument pos:start="317:27" pos:end="317:29"><expr pos:start="317:27" pos:end="317:29"><name pos:start="317:27" pos:end="317:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="319:13" pos:end="319:18">break;</break>

        <case pos:start="321:9" pos:end="321:18">case <expr pos:start="321:14" pos:end="321:17"><literal type="number" pos:start="321:14" pos:end="321:17">0x1B</literal></expr>:</case>

            <comment type="block" pos:start="323:13" pos:end="323:24">/* S8SUBL */</comment>

            <expr_stmt pos:start="325:13" pos:end="325:33"><expr pos:start="325:13" pos:end="325:32"><name pos:start="325:13" pos:end="325:15">tmp</name> <operator pos:start="325:17" pos:end="325:17">=</operator> <call pos:start="325:19" pos:end="325:32"><name pos:start="325:19" pos:end="325:30">tcg_temp_new</name><argument_list pos:start="325:31" pos:end="325:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="327:13" pos:end="327:41"><expr pos:start="327:13" pos:end="327:40"><call pos:start="327:13" pos:end="327:40"><name pos:start="327:13" pos:end="327:28">tcg_gen_shli_i64</name><argument_list pos:start="327:29" pos:end="327:40">(<argument pos:start="327:30" pos:end="327:32"><expr pos:start="327:30" pos:end="327:32"><name pos:start="327:30" pos:end="327:32">tmp</name></expr></argument>, <argument pos:start="327:35" pos:end="327:36"><expr pos:start="327:35" pos:end="327:36"><name pos:start="327:35" pos:end="327:36">va</name></expr></argument>, <argument pos:start="327:39" pos:end="327:39"><expr pos:start="327:39" pos:end="327:39"><literal type="number" pos:start="327:39" pos:end="327:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:42"><expr pos:start="329:13" pos:end="329:41"><call pos:start="329:13" pos:end="329:41"><name pos:start="329:13" pos:end="329:27">tcg_gen_sub_i64</name><argument_list pos:start="329:28" pos:end="329:41">(<argument pos:start="329:29" pos:end="329:31"><expr pos:start="329:29" pos:end="329:31"><name pos:start="329:29" pos:end="329:31">tmp</name></expr></argument>, <argument pos:start="329:34" pos:end="329:36"><expr pos:start="329:34" pos:end="329:36"><name pos:start="329:34" pos:end="329:36">tmp</name></expr></argument>, <argument pos:start="329:39" pos:end="329:40"><expr pos:start="329:39" pos:end="329:40"><name pos:start="329:39" pos:end="329:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:40"><expr pos:start="331:13" pos:end="331:39"><call pos:start="331:13" pos:end="331:39"><name pos:start="331:13" pos:end="331:30">tcg_gen_ext32s_i64</name><argument_list pos:start="331:31" pos:end="331:39">(<argument pos:start="331:32" pos:end="331:33"><expr pos:start="331:32" pos:end="331:33"><name pos:start="331:32" pos:end="331:33">vc</name></expr></argument>, <argument pos:start="331:36" pos:end="331:38"><expr pos:start="331:36" pos:end="331:38"><name pos:start="331:36" pos:end="331:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:31"><expr pos:start="333:13" pos:end="333:30"><call pos:start="333:13" pos:end="333:30"><name pos:start="333:13" pos:end="333:25">tcg_temp_free</name><argument_list pos:start="333:26" pos:end="333:30">(<argument pos:start="333:27" pos:end="333:29"><expr pos:start="333:27" pos:end="333:29"><name pos:start="333:27" pos:end="333:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="335:13" pos:end="335:18">break;</break>

        <case pos:start="337:9" pos:end="337:18">case <expr pos:start="337:14" pos:end="337:17"><literal type="number" pos:start="337:14" pos:end="337:17">0x1D</literal></expr>:</case>

            <comment type="block" pos:start="339:13" pos:end="339:24">/* CMPULT */</comment>

            <expr_stmt pos:start="341:13" pos:end="341:58"><expr pos:start="341:13" pos:end="341:57"><call pos:start="341:13" pos:end="341:57"><name pos:start="341:13" pos:end="341:31">tcg_gen_setcond_i64</name><argument_list pos:start="341:32" pos:end="341:57">(<argument pos:start="341:33" pos:end="341:44"><expr pos:start="341:33" pos:end="341:44"><name pos:start="341:33" pos:end="341:44">TCG_COND_LTU</name></expr></argument>, <argument pos:start="341:47" pos:end="341:48"><expr pos:start="341:47" pos:end="341:48"><name pos:start="341:47" pos:end="341:48">vc</name></expr></argument>, <argument pos:start="341:51" pos:end="341:52"><expr pos:start="341:51" pos:end="341:52"><name pos:start="341:51" pos:end="341:52">va</name></expr></argument>, <argument pos:start="341:55" pos:end="341:56"><expr pos:start="341:55" pos:end="341:56"><name pos:start="341:55" pos:end="341:56">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="343:13" pos:end="343:18">break;</break>

        <case pos:start="345:9" pos:end="345:18">case <expr pos:start="345:14" pos:end="345:17"><literal type="number" pos:start="345:14" pos:end="345:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="347:13" pos:end="347:22">/* ADDQ */</comment>

            <expr_stmt pos:start="349:13" pos:end="349:40"><expr pos:start="349:13" pos:end="349:39"><call pos:start="349:13" pos:end="349:39"><name pos:start="349:13" pos:end="349:27">tcg_gen_add_i64</name><argument_list pos:start="349:28" pos:end="349:39">(<argument pos:start="349:29" pos:end="349:30"><expr pos:start="349:29" pos:end="349:30"><name pos:start="349:29" pos:end="349:30">vc</name></expr></argument>, <argument pos:start="349:33" pos:end="349:34"><expr pos:start="349:33" pos:end="349:34"><name pos:start="349:33" pos:end="349:34">va</name></expr></argument>, <argument pos:start="349:37" pos:end="349:38"><expr pos:start="349:37" pos:end="349:38"><name pos:start="349:37" pos:end="349:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="351:13" pos:end="351:18">break;</break>

        <case pos:start="353:9" pos:end="353:18">case <expr pos:start="353:14" pos:end="353:17"><literal type="number" pos:start="353:14" pos:end="353:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="355:13" pos:end="355:24">/* S4ADDQ */</comment>

            <expr_stmt pos:start="357:13" pos:end="357:33"><expr pos:start="357:13" pos:end="357:32"><name pos:start="357:13" pos:end="357:15">tmp</name> <operator pos:start="357:17" pos:end="357:17">=</operator> <call pos:start="357:19" pos:end="357:32"><name pos:start="357:19" pos:end="357:30">tcg_temp_new</name><argument_list pos:start="357:31" pos:end="357:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:41"><expr pos:start="359:13" pos:end="359:40"><call pos:start="359:13" pos:end="359:40"><name pos:start="359:13" pos:end="359:28">tcg_gen_shli_i64</name><argument_list pos:start="359:29" pos:end="359:40">(<argument pos:start="359:30" pos:end="359:32"><expr pos:start="359:30" pos:end="359:32"><name pos:start="359:30" pos:end="359:32">tmp</name></expr></argument>, <argument pos:start="359:35" pos:end="359:36"><expr pos:start="359:35" pos:end="359:36"><name pos:start="359:35" pos:end="359:36">va</name></expr></argument>, <argument pos:start="359:39" pos:end="359:39"><expr pos:start="359:39" pos:end="359:39"><literal type="number" pos:start="359:39" pos:end="359:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:41"><expr pos:start="361:13" pos:end="361:40"><call pos:start="361:13" pos:end="361:40"><name pos:start="361:13" pos:end="361:27">tcg_gen_add_i64</name><argument_list pos:start="361:28" pos:end="361:40">(<argument pos:start="361:29" pos:end="361:30"><expr pos:start="361:29" pos:end="361:30"><name pos:start="361:29" pos:end="361:30">vc</name></expr></argument>, <argument pos:start="361:33" pos:end="361:35"><expr pos:start="361:33" pos:end="361:35"><name pos:start="361:33" pos:end="361:35">tmp</name></expr></argument>, <argument pos:start="361:38" pos:end="361:39"><expr pos:start="361:38" pos:end="361:39"><name pos:start="361:38" pos:end="361:39">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:31"><expr pos:start="363:13" pos:end="363:30"><call pos:start="363:13" pos:end="363:30"><name pos:start="363:13" pos:end="363:25">tcg_temp_free</name><argument_list pos:start="363:26" pos:end="363:30">(<argument pos:start="363:27" pos:end="363:29"><expr pos:start="363:27" pos:end="363:29"><name pos:start="363:27" pos:end="363:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="365:13" pos:end="365:18">break;</break>

        <case pos:start="367:9" pos:end="367:18">case <expr pos:start="367:14" pos:end="367:17"><literal type="number" pos:start="367:14" pos:end="367:17">0x29</literal></expr>:</case>

            <comment type="block" pos:start="369:13" pos:end="369:22">/* SUBQ */</comment>

            <expr_stmt pos:start="371:13" pos:end="371:40"><expr pos:start="371:13" pos:end="371:39"><call pos:start="371:13" pos:end="371:39"><name pos:start="371:13" pos:end="371:27">tcg_gen_sub_i64</name><argument_list pos:start="371:28" pos:end="371:39">(<argument pos:start="371:29" pos:end="371:30"><expr pos:start="371:29" pos:end="371:30"><name pos:start="371:29" pos:end="371:30">vc</name></expr></argument>, <argument pos:start="371:33" pos:end="371:34"><expr pos:start="371:33" pos:end="371:34"><name pos:start="371:33" pos:end="371:34">va</name></expr></argument>, <argument pos:start="371:37" pos:end="371:38"><expr pos:start="371:37" pos:end="371:38"><name pos:start="371:37" pos:end="371:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="373:13" pos:end="373:18">break;</break>

        <case pos:start="375:9" pos:end="375:18">case <expr pos:start="375:14" pos:end="375:17"><literal type="number" pos:start="375:14" pos:end="375:17">0x2B</literal></expr>:</case>

            <comment type="block" pos:start="377:13" pos:end="377:24">/* S4SUBQ */</comment>

            <expr_stmt pos:start="379:13" pos:end="379:33"><expr pos:start="379:13" pos:end="379:32"><name pos:start="379:13" pos:end="379:15">tmp</name> <operator pos:start="379:17" pos:end="379:17">=</operator> <call pos:start="379:19" pos:end="379:32"><name pos:start="379:19" pos:end="379:30">tcg_temp_new</name><argument_list pos:start="379:31" pos:end="379:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="381:13" pos:end="381:41"><expr pos:start="381:13" pos:end="381:40"><call pos:start="381:13" pos:end="381:40"><name pos:start="381:13" pos:end="381:28">tcg_gen_shli_i64</name><argument_list pos:start="381:29" pos:end="381:40">(<argument pos:start="381:30" pos:end="381:32"><expr pos:start="381:30" pos:end="381:32"><name pos:start="381:30" pos:end="381:32">tmp</name></expr></argument>, <argument pos:start="381:35" pos:end="381:36"><expr pos:start="381:35" pos:end="381:36"><name pos:start="381:35" pos:end="381:36">va</name></expr></argument>, <argument pos:start="381:39" pos:end="381:39"><expr pos:start="381:39" pos:end="381:39"><literal type="number" pos:start="381:39" pos:end="381:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="383:13" pos:end="383:41"><expr pos:start="383:13" pos:end="383:40"><call pos:start="383:13" pos:end="383:40"><name pos:start="383:13" pos:end="383:27">tcg_gen_sub_i64</name><argument_list pos:start="383:28" pos:end="383:40">(<argument pos:start="383:29" pos:end="383:30"><expr pos:start="383:29" pos:end="383:30"><name pos:start="383:29" pos:end="383:30">vc</name></expr></argument>, <argument pos:start="383:33" pos:end="383:35"><expr pos:start="383:33" pos:end="383:35"><name pos:start="383:33" pos:end="383:35">tmp</name></expr></argument>, <argument pos:start="383:38" pos:end="383:39"><expr pos:start="383:38" pos:end="383:39"><name pos:start="383:38" pos:end="383:39">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="385:13" pos:end="385:31"><expr pos:start="385:13" pos:end="385:30"><call pos:start="385:13" pos:end="385:30"><name pos:start="385:13" pos:end="385:25">tcg_temp_free</name><argument_list pos:start="385:26" pos:end="385:30">(<argument pos:start="385:27" pos:end="385:29"><expr pos:start="385:27" pos:end="385:29"><name pos:start="385:27" pos:end="385:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="387:13" pos:end="387:18">break;</break>

        <case pos:start="389:9" pos:end="389:18">case <expr pos:start="389:14" pos:end="389:17"><literal type="number" pos:start="389:14" pos:end="389:17">0x2D</literal></expr>:</case>

            <comment type="block" pos:start="391:13" pos:end="391:23">/* CMPEQ */</comment>

            <expr_stmt pos:start="393:13" pos:end="393:57"><expr pos:start="393:13" pos:end="393:56"><call pos:start="393:13" pos:end="393:56"><name pos:start="393:13" pos:end="393:31">tcg_gen_setcond_i64</name><argument_list pos:start="393:32" pos:end="393:56">(<argument pos:start="393:33" pos:end="393:43"><expr pos:start="393:33" pos:end="393:43"><name pos:start="393:33" pos:end="393:43">TCG_COND_EQ</name></expr></argument>, <argument pos:start="393:46" pos:end="393:47"><expr pos:start="393:46" pos:end="393:47"><name pos:start="393:46" pos:end="393:47">vc</name></expr></argument>, <argument pos:start="393:50" pos:end="393:51"><expr pos:start="393:50" pos:end="393:51"><name pos:start="393:50" pos:end="393:51">va</name></expr></argument>, <argument pos:start="393:54" pos:end="393:55"><expr pos:start="393:54" pos:end="393:55"><name pos:start="393:54" pos:end="393:55">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="395:13" pos:end="395:18">break;</break>

        <case pos:start="397:9" pos:end="397:18">case <expr pos:start="397:14" pos:end="397:17"><literal type="number" pos:start="397:14" pos:end="397:17">0x32</literal></expr>:</case>

            <comment type="block" pos:start="399:13" pos:end="399:24">/* S8ADDQ */</comment>

            <expr_stmt pos:start="401:13" pos:end="401:33"><expr pos:start="401:13" pos:end="401:32"><name pos:start="401:13" pos:end="401:15">tmp</name> <operator pos:start="401:17" pos:end="401:17">=</operator> <call pos:start="401:19" pos:end="401:32"><name pos:start="401:19" pos:end="401:30">tcg_temp_new</name><argument_list pos:start="401:31" pos:end="401:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="403:13" pos:end="403:41"><expr pos:start="403:13" pos:end="403:40"><call pos:start="403:13" pos:end="403:40"><name pos:start="403:13" pos:end="403:28">tcg_gen_shli_i64</name><argument_list pos:start="403:29" pos:end="403:40">(<argument pos:start="403:30" pos:end="403:32"><expr pos:start="403:30" pos:end="403:32"><name pos:start="403:30" pos:end="403:32">tmp</name></expr></argument>, <argument pos:start="403:35" pos:end="403:36"><expr pos:start="403:35" pos:end="403:36"><name pos:start="403:35" pos:end="403:36">va</name></expr></argument>, <argument pos:start="403:39" pos:end="403:39"><expr pos:start="403:39" pos:end="403:39"><literal type="number" pos:start="403:39" pos:end="403:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="405:13" pos:end="405:41"><expr pos:start="405:13" pos:end="405:40"><call pos:start="405:13" pos:end="405:40"><name pos:start="405:13" pos:end="405:27">tcg_gen_add_i64</name><argument_list pos:start="405:28" pos:end="405:40">(<argument pos:start="405:29" pos:end="405:30"><expr pos:start="405:29" pos:end="405:30"><name pos:start="405:29" pos:end="405:30">vc</name></expr></argument>, <argument pos:start="405:33" pos:end="405:35"><expr pos:start="405:33" pos:end="405:35"><name pos:start="405:33" pos:end="405:35">tmp</name></expr></argument>, <argument pos:start="405:38" pos:end="405:39"><expr pos:start="405:38" pos:end="405:39"><name pos:start="405:38" pos:end="405:39">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="407:13" pos:end="407:31"><expr pos:start="407:13" pos:end="407:30"><call pos:start="407:13" pos:end="407:30"><name pos:start="407:13" pos:end="407:25">tcg_temp_free</name><argument_list pos:start="407:26" pos:end="407:30">(<argument pos:start="407:27" pos:end="407:29"><expr pos:start="407:27" pos:end="407:29"><name pos:start="407:27" pos:end="407:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="409:13" pos:end="409:18">break;</break>

        <case pos:start="411:9" pos:end="411:18">case <expr pos:start="411:14" pos:end="411:17"><literal type="number" pos:start="411:14" pos:end="411:17">0x3B</literal></expr>:</case>

            <comment type="block" pos:start="413:13" pos:end="413:24">/* S8SUBQ */</comment>

            <expr_stmt pos:start="415:13" pos:end="415:33"><expr pos:start="415:13" pos:end="415:32"><name pos:start="415:13" pos:end="415:15">tmp</name> <operator pos:start="415:17" pos:end="415:17">=</operator> <call pos:start="415:19" pos:end="415:32"><name pos:start="415:19" pos:end="415:30">tcg_temp_new</name><argument_list pos:start="415:31" pos:end="415:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="417:13" pos:end="417:41"><expr pos:start="417:13" pos:end="417:40"><call pos:start="417:13" pos:end="417:40"><name pos:start="417:13" pos:end="417:28">tcg_gen_shli_i64</name><argument_list pos:start="417:29" pos:end="417:40">(<argument pos:start="417:30" pos:end="417:32"><expr pos:start="417:30" pos:end="417:32"><name pos:start="417:30" pos:end="417:32">tmp</name></expr></argument>, <argument pos:start="417:35" pos:end="417:36"><expr pos:start="417:35" pos:end="417:36"><name pos:start="417:35" pos:end="417:36">va</name></expr></argument>, <argument pos:start="417:39" pos:end="417:39"><expr pos:start="417:39" pos:end="417:39"><literal type="number" pos:start="417:39" pos:end="417:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="419:13" pos:end="419:41"><expr pos:start="419:13" pos:end="419:40"><call pos:start="419:13" pos:end="419:40"><name pos:start="419:13" pos:end="419:27">tcg_gen_sub_i64</name><argument_list pos:start="419:28" pos:end="419:40">(<argument pos:start="419:29" pos:end="419:30"><expr pos:start="419:29" pos:end="419:30"><name pos:start="419:29" pos:end="419:30">vc</name></expr></argument>, <argument pos:start="419:33" pos:end="419:35"><expr pos:start="419:33" pos:end="419:35"><name pos:start="419:33" pos:end="419:35">tmp</name></expr></argument>, <argument pos:start="419:38" pos:end="419:39"><expr pos:start="419:38" pos:end="419:39"><name pos:start="419:38" pos:end="419:39">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:31"><expr pos:start="421:13" pos:end="421:30"><call pos:start="421:13" pos:end="421:30"><name pos:start="421:13" pos:end="421:25">tcg_temp_free</name><argument_list pos:start="421:26" pos:end="421:30">(<argument pos:start="421:27" pos:end="421:29"><expr pos:start="421:27" pos:end="421:29"><name pos:start="421:27" pos:end="421:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="423:13" pos:end="423:18">break;</break>

        <case pos:start="425:9" pos:end="425:18">case <expr pos:start="425:14" pos:end="425:17"><literal type="number" pos:start="425:14" pos:end="425:17">0x3D</literal></expr>:</case>

            <comment type="block" pos:start="427:13" pos:end="427:24">/* CMPULE */</comment>

            <expr_stmt pos:start="429:13" pos:end="429:58"><expr pos:start="429:13" pos:end="429:57"><call pos:start="429:13" pos:end="429:57"><name pos:start="429:13" pos:end="429:31">tcg_gen_setcond_i64</name><argument_list pos:start="429:32" pos:end="429:57">(<argument pos:start="429:33" pos:end="429:44"><expr pos:start="429:33" pos:end="429:44"><name pos:start="429:33" pos:end="429:44">TCG_COND_LEU</name></expr></argument>, <argument pos:start="429:47" pos:end="429:48"><expr pos:start="429:47" pos:end="429:48"><name pos:start="429:47" pos:end="429:48">vc</name></expr></argument>, <argument pos:start="429:51" pos:end="429:52"><expr pos:start="429:51" pos:end="429:52"><name pos:start="429:51" pos:end="429:52">va</name></expr></argument>, <argument pos:start="429:55" pos:end="429:56"><expr pos:start="429:55" pos:end="429:56"><name pos:start="429:55" pos:end="429:56">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="431:13" pos:end="431:18">break;</break>

        <case pos:start="433:9" pos:end="433:18">case <expr pos:start="433:14" pos:end="433:17"><literal type="number" pos:start="433:14" pos:end="433:17">0x40</literal></expr>:</case>

            <comment type="block" pos:start="435:13" pos:end="435:24">/* ADDL/V */</comment>

            <expr_stmt pos:start="437:13" pos:end="437:50"><expr pos:start="437:13" pos:end="437:49"><call pos:start="437:13" pos:end="437:49"><name pos:start="437:13" pos:end="437:28">gen_helper_addlv</name><argument_list pos:start="437:29" pos:end="437:49">(<argument pos:start="437:30" pos:end="437:31"><expr pos:start="437:30" pos:end="437:31"><name pos:start="437:30" pos:end="437:31">vc</name></expr></argument>, <argument pos:start="437:34" pos:end="437:40"><expr pos:start="437:34" pos:end="437:40"><name pos:start="437:34" pos:end="437:40">cpu_env</name></expr></argument>, <argument pos:start="437:43" pos:end="437:44"><expr pos:start="437:43" pos:end="437:44"><name pos:start="437:43" pos:end="437:44">va</name></expr></argument>, <argument pos:start="437:47" pos:end="437:48"><expr pos:start="437:47" pos:end="437:48"><name pos:start="437:47" pos:end="437:48">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="439:13" pos:end="439:18">break;</break>

        <case pos:start="441:9" pos:end="441:18">case <expr pos:start="441:14" pos:end="441:17"><literal type="number" pos:start="441:14" pos:end="441:17">0x49</literal></expr>:</case>

            <comment type="block" pos:start="443:13" pos:end="443:24">/* SUBL/V */</comment>

            <expr_stmt pos:start="445:13" pos:end="445:50"><expr pos:start="445:13" pos:end="445:49"><call pos:start="445:13" pos:end="445:49"><name pos:start="445:13" pos:end="445:28">gen_helper_sublv</name><argument_list pos:start="445:29" pos:end="445:49">(<argument pos:start="445:30" pos:end="445:31"><expr pos:start="445:30" pos:end="445:31"><name pos:start="445:30" pos:end="445:31">vc</name></expr></argument>, <argument pos:start="445:34" pos:end="445:40"><expr pos:start="445:34" pos:end="445:40"><name pos:start="445:34" pos:end="445:40">cpu_env</name></expr></argument>, <argument pos:start="445:43" pos:end="445:44"><expr pos:start="445:43" pos:end="445:44"><name pos:start="445:43" pos:end="445:44">va</name></expr></argument>, <argument pos:start="445:47" pos:end="445:48"><expr pos:start="445:47" pos:end="445:48"><name pos:start="445:47" pos:end="445:48">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="447:13" pos:end="447:18">break;</break>

        <case pos:start="449:9" pos:end="449:18">case <expr pos:start="449:14" pos:end="449:17"><literal type="number" pos:start="449:14" pos:end="449:17">0x4D</literal></expr>:</case>

            <comment type="block" pos:start="451:13" pos:end="451:23">/* CMPLT */</comment>

            <expr_stmt pos:start="453:13" pos:end="453:57"><expr pos:start="453:13" pos:end="453:56"><call pos:start="453:13" pos:end="453:56"><name pos:start="453:13" pos:end="453:31">tcg_gen_setcond_i64</name><argument_list pos:start="453:32" pos:end="453:56">(<argument pos:start="453:33" pos:end="453:43"><expr pos:start="453:33" pos:end="453:43"><name pos:start="453:33" pos:end="453:43">TCG_COND_LT</name></expr></argument>, <argument pos:start="453:46" pos:end="453:47"><expr pos:start="453:46" pos:end="453:47"><name pos:start="453:46" pos:end="453:47">vc</name></expr></argument>, <argument pos:start="453:50" pos:end="453:51"><expr pos:start="453:50" pos:end="453:51"><name pos:start="453:50" pos:end="453:51">va</name></expr></argument>, <argument pos:start="453:54" pos:end="453:55"><expr pos:start="453:54" pos:end="453:55"><name pos:start="453:54" pos:end="453:55">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="455:13" pos:end="455:18">break;</break>

        <case pos:start="457:9" pos:end="457:18">case <expr pos:start="457:14" pos:end="457:17"><literal type="number" pos:start="457:14" pos:end="457:17">0x60</literal></expr>:</case>

            <comment type="block" pos:start="459:13" pos:end="459:24">/* ADDQ/V */</comment>

            <expr_stmt pos:start="461:13" pos:end="461:50"><expr pos:start="461:13" pos:end="461:49"><call pos:start="461:13" pos:end="461:49"><name pos:start="461:13" pos:end="461:28">gen_helper_addqv</name><argument_list pos:start="461:29" pos:end="461:49">(<argument pos:start="461:30" pos:end="461:31"><expr pos:start="461:30" pos:end="461:31"><name pos:start="461:30" pos:end="461:31">vc</name></expr></argument>, <argument pos:start="461:34" pos:end="461:40"><expr pos:start="461:34" pos:end="461:40"><name pos:start="461:34" pos:end="461:40">cpu_env</name></expr></argument>, <argument pos:start="461:43" pos:end="461:44"><expr pos:start="461:43" pos:end="461:44"><name pos:start="461:43" pos:end="461:44">va</name></expr></argument>, <argument pos:start="461:47" pos:end="461:48"><expr pos:start="461:47" pos:end="461:48"><name pos:start="461:47" pos:end="461:48">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="463:13" pos:end="463:18">break;</break>

        <case pos:start="465:9" pos:end="465:18">case <expr pos:start="465:14" pos:end="465:17"><literal type="number" pos:start="465:14" pos:end="465:17">0x69</literal></expr>:</case>

            <comment type="block" pos:start="467:13" pos:end="467:24">/* SUBQ/V */</comment>

            <expr_stmt pos:start="469:13" pos:end="469:50"><expr pos:start="469:13" pos:end="469:49"><call pos:start="469:13" pos:end="469:49"><name pos:start="469:13" pos:end="469:28">gen_helper_subqv</name><argument_list pos:start="469:29" pos:end="469:49">(<argument pos:start="469:30" pos:end="469:31"><expr pos:start="469:30" pos:end="469:31"><name pos:start="469:30" pos:end="469:31">vc</name></expr></argument>, <argument pos:start="469:34" pos:end="469:40"><expr pos:start="469:34" pos:end="469:40"><name pos:start="469:34" pos:end="469:40">cpu_env</name></expr></argument>, <argument pos:start="469:43" pos:end="469:44"><expr pos:start="469:43" pos:end="469:44"><name pos:start="469:43" pos:end="469:44">va</name></expr></argument>, <argument pos:start="469:47" pos:end="469:48"><expr pos:start="469:47" pos:end="469:48"><name pos:start="469:47" pos:end="469:48">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="471:13" pos:end="471:18">break;</break>

        <case pos:start="473:9" pos:end="473:18">case <expr pos:start="473:14" pos:end="473:17"><literal type="number" pos:start="473:14" pos:end="473:17">0x6D</literal></expr>:</case>

            <comment type="block" pos:start="475:13" pos:end="475:23">/* CMPLE */</comment>

            <expr_stmt pos:start="477:13" pos:end="477:57"><expr pos:start="477:13" pos:end="477:56"><call pos:start="477:13" pos:end="477:56"><name pos:start="477:13" pos:end="477:31">tcg_gen_setcond_i64</name><argument_list pos:start="477:32" pos:end="477:56">(<argument pos:start="477:33" pos:end="477:43"><expr pos:start="477:33" pos:end="477:43"><name pos:start="477:33" pos:end="477:43">TCG_COND_LE</name></expr></argument>, <argument pos:start="477:46" pos:end="477:47"><expr pos:start="477:46" pos:end="477:47"><name pos:start="477:46" pos:end="477:47">vc</name></expr></argument>, <argument pos:start="477:50" pos:end="477:51"><expr pos:start="477:50" pos:end="477:51"><name pos:start="477:50" pos:end="477:51">va</name></expr></argument>, <argument pos:start="477:54" pos:end="477:55"><expr pos:start="477:54" pos:end="477:55"><name pos:start="477:54" pos:end="477:55">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="479:13" pos:end="479:18">break;</break>

        <default pos:start="481:9" pos:end="481:16">default:</default>

            <goto pos:start="483:13" pos:end="483:29">goto <name pos:start="483:18" pos:end="483:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="487:9" pos:end="487:14">break;</break>



    <case pos:start="491:5" pos:end="491:14">case <expr pos:start="491:10" pos:end="491:13"><literal type="number" pos:start="491:10" pos:end="491:13">0x11</literal></expr>:</case>

        <if_stmt pos:start="493:9" pos:end="523:9"><if pos:start="493:9" pos:end="523:9">if <condition pos:start="493:12" pos:end="493:24">(<expr pos:start="493:13" pos:end="493:23"><name pos:start="493:13" pos:end="493:15">fn7</name> <operator pos:start="493:17" pos:end="493:18">==</operator> <literal type="number" pos:start="493:20" pos:end="493:23">0x20</literal></expr>)</condition> <block pos:start="493:26" pos:end="523:9">{<block_content pos:start="495:13" pos:end="521:13">

            <if_stmt pos:start="495:13" pos:end="501:13"><if pos:start="495:13" pos:end="501:13">if <condition pos:start="495:16" pos:end="495:25">(<expr pos:start="495:17" pos:end="495:24"><name pos:start="495:17" pos:end="495:18">rc</name> <operator pos:start="495:20" pos:end="495:21">==</operator> <literal type="number" pos:start="495:23" pos:end="495:24">31</literal></expr>)</condition> <block pos:start="495:27" pos:end="501:13">{<block_content pos:start="499:17" pos:end="499:22">

                <comment type="block" pos:start="497:17" pos:end="497:47">/* Special case BIS as NOP.  */</comment>

                <break pos:start="499:17" pos:end="499:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="503:13" pos:end="521:13"><if pos:start="503:13" pos:end="521:13">if <condition pos:start="503:16" pos:end="503:25">(<expr pos:start="503:17" pos:end="503:24"><name pos:start="503:17" pos:end="503:18">ra</name> <operator pos:start="503:20" pos:end="503:21">==</operator> <literal type="number" pos:start="503:23" pos:end="503:24">31</literal></expr>)</condition> <block pos:start="503:27" pos:end="521:13">{<block_content pos:start="507:17" pos:end="519:22">

                <comment type="block" pos:start="505:17" pos:end="505:47">/* Special case BIS as MOV.  */</comment>

                <expr_stmt pos:start="507:17" pos:end="507:39"><expr pos:start="507:17" pos:end="507:38"><name pos:start="507:17" pos:end="507:18">vc</name> <operator pos:start="507:20" pos:end="507:20">=</operator> <call pos:start="507:22" pos:end="507:38"><name pos:start="507:22" pos:end="507:29">dest_gpr</name><argument_list pos:start="507:30" pos:end="507:38">(<argument pos:start="507:31" pos:end="507:33"><expr pos:start="507:31" pos:end="507:33"><name pos:start="507:31" pos:end="507:33">ctx</name></expr></argument>, <argument pos:start="507:36" pos:end="507:37"><expr pos:start="507:36" pos:end="507:37"><name pos:start="507:36" pos:end="507:37">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="509:17" pos:end="517:17"><if pos:start="509:17" pos:end="513:17">if <condition pos:start="509:20" pos:end="509:26">(<expr pos:start="509:21" pos:end="509:25"><name pos:start="509:21" pos:end="509:25">islit</name></expr>)</condition> <block pos:start="509:28" pos:end="513:17">{<block_content pos:start="511:21" pos:end="511:46">

                    <expr_stmt pos:start="511:21" pos:end="511:46"><expr pos:start="511:21" pos:end="511:45"><call pos:start="511:21" pos:end="511:45"><name pos:start="511:21" pos:end="511:36">tcg_gen_movi_i64</name><argument_list pos:start="511:37" pos:end="511:45">(<argument pos:start="511:38" pos:end="511:39"><expr pos:start="511:38" pos:end="511:39"><name pos:start="511:38" pos:end="511:39">vc</name></expr></argument>, <argument pos:start="511:42" pos:end="511:44"><expr pos:start="511:42" pos:end="511:44"><name pos:start="511:42" pos:end="511:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="513:19" pos:end="517:17">else <block pos:start="513:24" pos:end="517:17">{<block_content pos:start="515:21" pos:end="515:59">

                    <expr_stmt pos:start="515:21" pos:end="515:59"><expr pos:start="515:21" pos:end="515:58"><call pos:start="515:21" pos:end="515:58"><name pos:start="515:21" pos:end="515:35">tcg_gen_mov_i64</name><argument_list pos:start="515:36" pos:end="515:58">(<argument pos:start="515:37" pos:end="515:38"><expr pos:start="515:37" pos:end="515:38"><name pos:start="515:37" pos:end="515:38">vc</name></expr></argument>, <argument pos:start="515:41" pos:end="515:57"><expr pos:start="515:41" pos:end="515:57"><call pos:start="515:41" pos:end="515:57"><name pos:start="515:41" pos:end="515:48">load_gpr</name><argument_list pos:start="515:49" pos:end="515:57">(<argument pos:start="515:50" pos:end="515:52"><expr pos:start="515:50" pos:end="515:52"><name pos:start="515:50" pos:end="515:52">ctx</name></expr></argument>, <argument pos:start="515:55" pos:end="515:56"><expr pos:start="515:55" pos:end="515:56"><name pos:start="515:55" pos:end="515:56">rb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="519:17" pos:end="519:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="527:9" pos:end="527:31"><expr pos:start="527:9" pos:end="527:30"><name pos:start="527:9" pos:end="527:10">vc</name> <operator pos:start="527:12" pos:end="527:12">=</operator> <call pos:start="527:14" pos:end="527:30"><name pos:start="527:14" pos:end="527:21">dest_gpr</name><argument_list pos:start="527:22" pos:end="527:30">(<argument pos:start="527:23" pos:end="527:25"><expr pos:start="527:23" pos:end="527:25"><name pos:start="527:23" pos:end="527:25">ctx</name></expr></argument>, <argument pos:start="527:28" pos:end="527:29"><expr pos:start="527:28" pos:end="527:29"><name pos:start="527:28" pos:end="527:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="529:9" pos:end="529:47"><expr pos:start="529:9" pos:end="529:46"><name pos:start="529:9" pos:end="529:10">vb</name> <operator pos:start="529:12" pos:end="529:12">=</operator> <call pos:start="529:14" pos:end="529:46"><name pos:start="529:14" pos:end="529:25">load_gpr_lit</name><argument_list pos:start="529:26" pos:end="529:46">(<argument pos:start="529:27" pos:end="529:29"><expr pos:start="529:27" pos:end="529:29"><name pos:start="529:27" pos:end="529:29">ctx</name></expr></argument>, <argument pos:start="529:32" pos:end="529:33"><expr pos:start="529:32" pos:end="529:33"><name pos:start="529:32" pos:end="529:33">rb</name></expr></argument>, <argument pos:start="529:36" pos:end="529:38"><expr pos:start="529:36" pos:end="529:38"><name pos:start="529:36" pos:end="529:38">lit</name></expr></argument>, <argument pos:start="529:41" pos:end="529:45"><expr pos:start="529:41" pos:end="529:45"><name pos:start="529:41" pos:end="529:45">islit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="533:9" pos:end="541:9"><if pos:start="533:9" pos:end="541:9">if <condition pos:start="533:12" pos:end="533:36">(<expr pos:start="533:13" pos:end="533:35"><name pos:start="533:13" pos:end="533:15">fn7</name> <operator pos:start="533:17" pos:end="533:18">==</operator> <literal type="number" pos:start="533:20" pos:end="533:23">0x28</literal> <operator pos:start="533:25" pos:end="533:26">&amp;&amp;</operator> <name pos:start="533:28" pos:end="533:29">ra</name> <operator pos:start="533:31" pos:end="533:32">==</operator> <literal type="number" pos:start="533:34" pos:end="533:35">31</literal></expr>)</condition> <block pos:start="533:38" pos:end="541:9">{<block_content pos:start="537:13" pos:end="539:18">

            <comment type="block" pos:start="535:13" pos:end="535:45">/* Special case ORNOT as NOT.  */</comment>

            <expr_stmt pos:start="537:13" pos:end="537:36"><expr pos:start="537:13" pos:end="537:35"><call pos:start="537:13" pos:end="537:35"><name pos:start="537:13" pos:end="537:27">tcg_gen_not_i64</name><argument_list pos:start="537:28" pos:end="537:35">(<argument pos:start="537:29" pos:end="537:30"><expr pos:start="537:29" pos:end="537:30"><name pos:start="537:29" pos:end="537:30">vc</name></expr></argument>, <argument pos:start="537:33" pos:end="537:34"><expr pos:start="537:33" pos:end="537:34"><name pos:start="537:33" pos:end="537:34">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="539:13" pos:end="539:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="545:9" pos:end="545:31"><expr pos:start="545:9" pos:end="545:30"><name pos:start="545:9" pos:end="545:10">va</name> <operator pos:start="545:12" pos:end="545:12">=</operator> <call pos:start="545:14" pos:end="545:30"><name pos:start="545:14" pos:end="545:21">load_gpr</name><argument_list pos:start="545:22" pos:end="545:30">(<argument pos:start="545:23" pos:end="545:25"><expr pos:start="545:23" pos:end="545:25"><name pos:start="545:23" pos:end="545:25">ctx</name></expr></argument>, <argument pos:start="545:28" pos:end="545:29"><expr pos:start="545:28" pos:end="545:29"><name pos:start="545:28" pos:end="545:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="547:9" pos:end="719:9">switch <condition pos:start="547:16" pos:end="547:20">(<expr pos:start="547:17" pos:end="547:19"><name pos:start="547:17" pos:end="547:19">fn7</name></expr>)</condition> <block pos:start="547:22" pos:end="719:9">{<block_content pos:start="549:9" pos:end="717:29">

        <case pos:start="549:9" pos:end="549:18">case <expr pos:start="549:14" pos:end="549:17"><literal type="number" pos:start="549:14" pos:end="549:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="551:13" pos:end="551:21">/* AND */</comment>

            <expr_stmt pos:start="553:13" pos:end="553:40"><expr pos:start="553:13" pos:end="553:39"><call pos:start="553:13" pos:end="553:39"><name pos:start="553:13" pos:end="553:27">tcg_gen_and_i64</name><argument_list pos:start="553:28" pos:end="553:39">(<argument pos:start="553:29" pos:end="553:30"><expr pos:start="553:29" pos:end="553:30"><name pos:start="553:29" pos:end="553:30">vc</name></expr></argument>, <argument pos:start="553:33" pos:end="553:34"><expr pos:start="553:33" pos:end="553:34"><name pos:start="553:33" pos:end="553:34">va</name></expr></argument>, <argument pos:start="553:37" pos:end="553:38"><expr pos:start="553:37" pos:end="553:38"><name pos:start="553:37" pos:end="553:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="555:13" pos:end="555:18">break;</break>

        <case pos:start="557:9" pos:end="557:18">case <expr pos:start="557:14" pos:end="557:17"><literal type="number" pos:start="557:14" pos:end="557:17">0x08</literal></expr>:</case>

            <comment type="block" pos:start="559:13" pos:end="559:21">/* BIC */</comment>

            <expr_stmt pos:start="561:13" pos:end="561:41"><expr pos:start="561:13" pos:end="561:40"><call pos:start="561:13" pos:end="561:40"><name pos:start="561:13" pos:end="561:28">tcg_gen_andc_i64</name><argument_list pos:start="561:29" pos:end="561:40">(<argument pos:start="561:30" pos:end="561:31"><expr pos:start="561:30" pos:end="561:31"><name pos:start="561:30" pos:end="561:31">vc</name></expr></argument>, <argument pos:start="561:34" pos:end="561:35"><expr pos:start="561:34" pos:end="561:35"><name pos:start="561:34" pos:end="561:35">va</name></expr></argument>, <argument pos:start="561:38" pos:end="561:39"><expr pos:start="561:38" pos:end="561:39"><name pos:start="561:38" pos:end="561:39">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="563:13" pos:end="563:18">break;</break>

        <case pos:start="565:9" pos:end="565:18">case <expr pos:start="565:14" pos:end="565:17"><literal type="number" pos:start="565:14" pos:end="565:17">0x14</literal></expr>:</case>

            <comment type="block" pos:start="567:13" pos:end="567:25">/* CMOVLBS */</comment>

            <expr_stmt pos:start="569:13" pos:end="569:33"><expr pos:start="569:13" pos:end="569:32"><name pos:start="569:13" pos:end="569:15">tmp</name> <operator pos:start="569:17" pos:end="569:17">=</operator> <call pos:start="569:19" pos:end="569:32"><name pos:start="569:19" pos:end="569:30">tcg_temp_new</name><argument_list pos:start="569:31" pos:end="569:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="571:13" pos:end="571:41"><expr pos:start="571:13" pos:end="571:40"><call pos:start="571:13" pos:end="571:40"><name pos:start="571:13" pos:end="571:28">tcg_gen_andi_i64</name><argument_list pos:start="571:29" pos:end="571:40">(<argument pos:start="571:30" pos:end="571:32"><expr pos:start="571:30" pos:end="571:32"><name pos:start="571:30" pos:end="571:32">tmp</name></expr></argument>, <argument pos:start="571:35" pos:end="571:36"><expr pos:start="571:35" pos:end="571:36"><name pos:start="571:35" pos:end="571:36">va</name></expr></argument>, <argument pos:start="571:39" pos:end="571:39"><expr pos:start="571:39" pos:end="571:39"><literal type="number" pos:start="571:39" pos:end="571:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="573:13" pos:end="575:55"><expr pos:start="573:13" pos:end="575:54"><call pos:start="573:13" pos:end="575:54"><name pos:start="573:13" pos:end="573:31">tcg_gen_movcond_i64</name><argument_list pos:start="573:32" pos:end="575:54">(<argument pos:start="573:33" pos:end="573:43"><expr pos:start="573:33" pos:end="573:43"><name pos:start="573:33" pos:end="573:43">TCG_COND_NE</name></expr></argument>, <argument pos:start="573:46" pos:end="573:47"><expr pos:start="573:46" pos:end="573:47"><name pos:start="573:46" pos:end="573:47">vc</name></expr></argument>, <argument pos:start="573:50" pos:end="573:52"><expr pos:start="573:50" pos:end="573:52"><name pos:start="573:50" pos:end="573:52">tmp</name></expr></argument>, <argument pos:start="573:55" pos:end="573:68"><expr pos:start="573:55" pos:end="573:68"><call pos:start="573:55" pos:end="573:68"><name pos:start="573:55" pos:end="573:63">load_zero</name><argument_list pos:start="573:64" pos:end="573:68">(<argument pos:start="573:65" pos:end="573:67"><expr pos:start="573:65" pos:end="573:67"><name pos:start="573:65" pos:end="573:67">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="575:33" pos:end="575:34"><expr pos:start="575:33" pos:end="575:34"><name pos:start="575:33" pos:end="575:34">vb</name></expr></argument>, <argument pos:start="575:37" pos:end="575:53"><expr pos:start="575:37" pos:end="575:53"><call pos:start="575:37" pos:end="575:53"><name pos:start="575:37" pos:end="575:44">load_gpr</name><argument_list pos:start="575:45" pos:end="575:53">(<argument pos:start="575:46" pos:end="575:48"><expr pos:start="575:46" pos:end="575:48"><name pos:start="575:46" pos:end="575:48">ctx</name></expr></argument>, <argument pos:start="575:51" pos:end="575:52"><expr pos:start="575:51" pos:end="575:52"><name pos:start="575:51" pos:end="575:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="577:13" pos:end="577:31"><expr pos:start="577:13" pos:end="577:30"><call pos:start="577:13" pos:end="577:30"><name pos:start="577:13" pos:end="577:25">tcg_temp_free</name><argument_list pos:start="577:26" pos:end="577:30">(<argument pos:start="577:27" pos:end="577:29"><expr pos:start="577:27" pos:end="577:29"><name pos:start="577:27" pos:end="577:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="579:13" pos:end="579:18">break;</break>

        <case pos:start="581:9" pos:end="581:18">case <expr pos:start="581:14" pos:end="581:17"><literal type="number" pos:start="581:14" pos:end="581:17">0x16</literal></expr>:</case>

            <comment type="block" pos:start="583:13" pos:end="583:25">/* CMOVLBC */</comment>

            <expr_stmt pos:start="585:13" pos:end="585:33"><expr pos:start="585:13" pos:end="585:32"><name pos:start="585:13" pos:end="585:15">tmp</name> <operator pos:start="585:17" pos:end="585:17">=</operator> <call pos:start="585:19" pos:end="585:32"><name pos:start="585:19" pos:end="585:30">tcg_temp_new</name><argument_list pos:start="585:31" pos:end="585:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="587:13" pos:end="587:41"><expr pos:start="587:13" pos:end="587:40"><call pos:start="587:13" pos:end="587:40"><name pos:start="587:13" pos:end="587:28">tcg_gen_andi_i64</name><argument_list pos:start="587:29" pos:end="587:40">(<argument pos:start="587:30" pos:end="587:32"><expr pos:start="587:30" pos:end="587:32"><name pos:start="587:30" pos:end="587:32">tmp</name></expr></argument>, <argument pos:start="587:35" pos:end="587:36"><expr pos:start="587:35" pos:end="587:36"><name pos:start="587:35" pos:end="587:36">va</name></expr></argument>, <argument pos:start="587:39" pos:end="587:39"><expr pos:start="587:39" pos:end="587:39"><literal type="number" pos:start="587:39" pos:end="587:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="589:13" pos:end="591:55"><expr pos:start="589:13" pos:end="591:54"><call pos:start="589:13" pos:end="591:54"><name pos:start="589:13" pos:end="589:31">tcg_gen_movcond_i64</name><argument_list pos:start="589:32" pos:end="591:54">(<argument pos:start="589:33" pos:end="589:43"><expr pos:start="589:33" pos:end="589:43"><name pos:start="589:33" pos:end="589:43">TCG_COND_EQ</name></expr></argument>, <argument pos:start="589:46" pos:end="589:47"><expr pos:start="589:46" pos:end="589:47"><name pos:start="589:46" pos:end="589:47">vc</name></expr></argument>, <argument pos:start="589:50" pos:end="589:52"><expr pos:start="589:50" pos:end="589:52"><name pos:start="589:50" pos:end="589:52">tmp</name></expr></argument>, <argument pos:start="589:55" pos:end="589:68"><expr pos:start="589:55" pos:end="589:68"><call pos:start="589:55" pos:end="589:68"><name pos:start="589:55" pos:end="589:63">load_zero</name><argument_list pos:start="589:64" pos:end="589:68">(<argument pos:start="589:65" pos:end="589:67"><expr pos:start="589:65" pos:end="589:67"><name pos:start="589:65" pos:end="589:67">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="591:33" pos:end="591:34"><expr pos:start="591:33" pos:end="591:34"><name pos:start="591:33" pos:end="591:34">vb</name></expr></argument>, <argument pos:start="591:37" pos:end="591:53"><expr pos:start="591:37" pos:end="591:53"><call pos:start="591:37" pos:end="591:53"><name pos:start="591:37" pos:end="591:44">load_gpr</name><argument_list pos:start="591:45" pos:end="591:53">(<argument pos:start="591:46" pos:end="591:48"><expr pos:start="591:46" pos:end="591:48"><name pos:start="591:46" pos:end="591:48">ctx</name></expr></argument>, <argument pos:start="591:51" pos:end="591:52"><expr pos:start="591:51" pos:end="591:52"><name pos:start="591:51" pos:end="591:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="593:13" pos:end="593:31"><expr pos:start="593:13" pos:end="593:30"><call pos:start="593:13" pos:end="593:30"><name pos:start="593:13" pos:end="593:25">tcg_temp_free</name><argument_list pos:start="593:26" pos:end="593:30">(<argument pos:start="593:27" pos:end="593:29"><expr pos:start="593:27" pos:end="593:29"><name pos:start="593:27" pos:end="593:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="595:13" pos:end="595:18">break;</break>

        <case pos:start="597:9" pos:end="597:18">case <expr pos:start="597:14" pos:end="597:17"><literal type="number" pos:start="597:14" pos:end="597:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="599:13" pos:end="599:21">/* BIS */</comment>

            <expr_stmt pos:start="601:13" pos:end="601:39"><expr pos:start="601:13" pos:end="601:38"><call pos:start="601:13" pos:end="601:38"><name pos:start="601:13" pos:end="601:26">tcg_gen_or_i64</name><argument_list pos:start="601:27" pos:end="601:38">(<argument pos:start="601:28" pos:end="601:29"><expr pos:start="601:28" pos:end="601:29"><name pos:start="601:28" pos:end="601:29">vc</name></expr></argument>, <argument pos:start="601:32" pos:end="601:33"><expr pos:start="601:32" pos:end="601:33"><name pos:start="601:32" pos:end="601:33">va</name></expr></argument>, <argument pos:start="601:36" pos:end="601:37"><expr pos:start="601:36" pos:end="601:37"><name pos:start="601:36" pos:end="601:37">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="603:13" pos:end="603:18">break;</break>

        <case pos:start="605:9" pos:end="605:18">case <expr pos:start="605:14" pos:end="605:17"><literal type="number" pos:start="605:14" pos:end="605:17">0x24</literal></expr>:</case>

            <comment type="block" pos:start="607:13" pos:end="607:24">/* CMOVEQ */</comment>

            <expr_stmt pos:start="609:13" pos:end="611:55"><expr pos:start="609:13" pos:end="611:54"><call pos:start="609:13" pos:end="611:54"><name pos:start="609:13" pos:end="609:31">tcg_gen_movcond_i64</name><argument_list pos:start="609:32" pos:end="611:54">(<argument pos:start="609:33" pos:end="609:43"><expr pos:start="609:33" pos:end="609:43"><name pos:start="609:33" pos:end="609:43">TCG_COND_EQ</name></expr></argument>, <argument pos:start="609:46" pos:end="609:47"><expr pos:start="609:46" pos:end="609:47"><name pos:start="609:46" pos:end="609:47">vc</name></expr></argument>, <argument pos:start="609:50" pos:end="609:51"><expr pos:start="609:50" pos:end="609:51"><name pos:start="609:50" pos:end="609:51">va</name></expr></argument>, <argument pos:start="609:54" pos:end="609:67"><expr pos:start="609:54" pos:end="609:67"><call pos:start="609:54" pos:end="609:67"><name pos:start="609:54" pos:end="609:62">load_zero</name><argument_list pos:start="609:63" pos:end="609:67">(<argument pos:start="609:64" pos:end="609:66"><expr pos:start="609:64" pos:end="609:66"><name pos:start="609:64" pos:end="609:66">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="611:33" pos:end="611:34"><expr pos:start="611:33" pos:end="611:34"><name pos:start="611:33" pos:end="611:34">vb</name></expr></argument>, <argument pos:start="611:37" pos:end="611:53"><expr pos:start="611:37" pos:end="611:53"><call pos:start="611:37" pos:end="611:53"><name pos:start="611:37" pos:end="611:44">load_gpr</name><argument_list pos:start="611:45" pos:end="611:53">(<argument pos:start="611:46" pos:end="611:48"><expr pos:start="611:46" pos:end="611:48"><name pos:start="611:46" pos:end="611:48">ctx</name></expr></argument>, <argument pos:start="611:51" pos:end="611:52"><expr pos:start="611:51" pos:end="611:52"><name pos:start="611:51" pos:end="611:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="613:13" pos:end="613:18">break;</break>

        <case pos:start="615:9" pos:end="615:18">case <expr pos:start="615:14" pos:end="615:17"><literal type="number" pos:start="615:14" pos:end="615:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="617:13" pos:end="617:24">/* CMOVNE */</comment>

            <expr_stmt pos:start="619:13" pos:end="621:55"><expr pos:start="619:13" pos:end="621:54"><call pos:start="619:13" pos:end="621:54"><name pos:start="619:13" pos:end="619:31">tcg_gen_movcond_i64</name><argument_list pos:start="619:32" pos:end="621:54">(<argument pos:start="619:33" pos:end="619:43"><expr pos:start="619:33" pos:end="619:43"><name pos:start="619:33" pos:end="619:43">TCG_COND_NE</name></expr></argument>, <argument pos:start="619:46" pos:end="619:47"><expr pos:start="619:46" pos:end="619:47"><name pos:start="619:46" pos:end="619:47">vc</name></expr></argument>, <argument pos:start="619:50" pos:end="619:51"><expr pos:start="619:50" pos:end="619:51"><name pos:start="619:50" pos:end="619:51">va</name></expr></argument>, <argument pos:start="619:54" pos:end="619:67"><expr pos:start="619:54" pos:end="619:67"><call pos:start="619:54" pos:end="619:67"><name pos:start="619:54" pos:end="619:62">load_zero</name><argument_list pos:start="619:63" pos:end="619:67">(<argument pos:start="619:64" pos:end="619:66"><expr pos:start="619:64" pos:end="619:66"><name pos:start="619:64" pos:end="619:66">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="621:33" pos:end="621:34"><expr pos:start="621:33" pos:end="621:34"><name pos:start="621:33" pos:end="621:34">vb</name></expr></argument>, <argument pos:start="621:37" pos:end="621:53"><expr pos:start="621:37" pos:end="621:53"><call pos:start="621:37" pos:end="621:53"><name pos:start="621:37" pos:end="621:44">load_gpr</name><argument_list pos:start="621:45" pos:end="621:53">(<argument pos:start="621:46" pos:end="621:48"><expr pos:start="621:46" pos:end="621:48"><name pos:start="621:46" pos:end="621:48">ctx</name></expr></argument>, <argument pos:start="621:51" pos:end="621:52"><expr pos:start="621:51" pos:end="621:52"><name pos:start="621:51" pos:end="621:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="623:13" pos:end="623:18">break;</break>

        <case pos:start="625:9" pos:end="625:18">case <expr pos:start="625:14" pos:end="625:17"><literal type="number" pos:start="625:14" pos:end="625:17">0x28</literal></expr>:</case>

            <comment type="block" pos:start="627:13" pos:end="627:23">/* ORNOT */</comment>

            <expr_stmt pos:start="629:13" pos:end="629:40"><expr pos:start="629:13" pos:end="629:39"><call pos:start="629:13" pos:end="629:39"><name pos:start="629:13" pos:end="629:27">tcg_gen_orc_i64</name><argument_list pos:start="629:28" pos:end="629:39">(<argument pos:start="629:29" pos:end="629:30"><expr pos:start="629:29" pos:end="629:30"><name pos:start="629:29" pos:end="629:30">vc</name></expr></argument>, <argument pos:start="629:33" pos:end="629:34"><expr pos:start="629:33" pos:end="629:34"><name pos:start="629:33" pos:end="629:34">va</name></expr></argument>, <argument pos:start="629:37" pos:end="629:38"><expr pos:start="629:37" pos:end="629:38"><name pos:start="629:37" pos:end="629:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="631:13" pos:end="631:18">break;</break>

        <case pos:start="633:9" pos:end="633:18">case <expr pos:start="633:14" pos:end="633:17"><literal type="number" pos:start="633:14" pos:end="633:17">0x40</literal></expr>:</case>

            <comment type="block" pos:start="635:13" pos:end="635:21">/* XOR */</comment>

            <expr_stmt pos:start="637:13" pos:end="637:40"><expr pos:start="637:13" pos:end="637:39"><call pos:start="637:13" pos:end="637:39"><name pos:start="637:13" pos:end="637:27">tcg_gen_xor_i64</name><argument_list pos:start="637:28" pos:end="637:39">(<argument pos:start="637:29" pos:end="637:30"><expr pos:start="637:29" pos:end="637:30"><name pos:start="637:29" pos:end="637:30">vc</name></expr></argument>, <argument pos:start="637:33" pos:end="637:34"><expr pos:start="637:33" pos:end="637:34"><name pos:start="637:33" pos:end="637:34">va</name></expr></argument>, <argument pos:start="637:37" pos:end="637:38"><expr pos:start="637:37" pos:end="637:38"><name pos:start="637:37" pos:end="637:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="639:13" pos:end="639:18">break;</break>

        <case pos:start="641:9" pos:end="641:18">case <expr pos:start="641:14" pos:end="641:17"><literal type="number" pos:start="641:14" pos:end="641:17">0x44</literal></expr>:</case>

            <comment type="block" pos:start="643:13" pos:end="643:24">/* CMOVLT */</comment>

            <expr_stmt pos:start="645:13" pos:end="647:55"><expr pos:start="645:13" pos:end="647:54"><call pos:start="645:13" pos:end="647:54"><name pos:start="645:13" pos:end="645:31">tcg_gen_movcond_i64</name><argument_list pos:start="645:32" pos:end="647:54">(<argument pos:start="645:33" pos:end="645:43"><expr pos:start="645:33" pos:end="645:43"><name pos:start="645:33" pos:end="645:43">TCG_COND_LT</name></expr></argument>, <argument pos:start="645:46" pos:end="645:47"><expr pos:start="645:46" pos:end="645:47"><name pos:start="645:46" pos:end="645:47">vc</name></expr></argument>, <argument pos:start="645:50" pos:end="645:51"><expr pos:start="645:50" pos:end="645:51"><name pos:start="645:50" pos:end="645:51">va</name></expr></argument>, <argument pos:start="645:54" pos:end="645:67"><expr pos:start="645:54" pos:end="645:67"><call pos:start="645:54" pos:end="645:67"><name pos:start="645:54" pos:end="645:62">load_zero</name><argument_list pos:start="645:63" pos:end="645:67">(<argument pos:start="645:64" pos:end="645:66"><expr pos:start="645:64" pos:end="645:66"><name pos:start="645:64" pos:end="645:66">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="647:33" pos:end="647:34"><expr pos:start="647:33" pos:end="647:34"><name pos:start="647:33" pos:end="647:34">vb</name></expr></argument>, <argument pos:start="647:37" pos:end="647:53"><expr pos:start="647:37" pos:end="647:53"><call pos:start="647:37" pos:end="647:53"><name pos:start="647:37" pos:end="647:44">load_gpr</name><argument_list pos:start="647:45" pos:end="647:53">(<argument pos:start="647:46" pos:end="647:48"><expr pos:start="647:46" pos:end="647:48"><name pos:start="647:46" pos:end="647:48">ctx</name></expr></argument>, <argument pos:start="647:51" pos:end="647:52"><expr pos:start="647:51" pos:end="647:52"><name pos:start="647:51" pos:end="647:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="649:13" pos:end="649:18">break;</break>

        <case pos:start="651:9" pos:end="651:18">case <expr pos:start="651:14" pos:end="651:17"><literal type="number" pos:start="651:14" pos:end="651:17">0x46</literal></expr>:</case>

            <comment type="block" pos:start="653:13" pos:end="653:24">/* CMOVGE */</comment>

            <expr_stmt pos:start="655:13" pos:end="657:55"><expr pos:start="655:13" pos:end="657:54"><call pos:start="655:13" pos:end="657:54"><name pos:start="655:13" pos:end="655:31">tcg_gen_movcond_i64</name><argument_list pos:start="655:32" pos:end="657:54">(<argument pos:start="655:33" pos:end="655:43"><expr pos:start="655:33" pos:end="655:43"><name pos:start="655:33" pos:end="655:43">TCG_COND_GE</name></expr></argument>, <argument pos:start="655:46" pos:end="655:47"><expr pos:start="655:46" pos:end="655:47"><name pos:start="655:46" pos:end="655:47">vc</name></expr></argument>, <argument pos:start="655:50" pos:end="655:51"><expr pos:start="655:50" pos:end="655:51"><name pos:start="655:50" pos:end="655:51">va</name></expr></argument>, <argument pos:start="655:54" pos:end="655:67"><expr pos:start="655:54" pos:end="655:67"><call pos:start="655:54" pos:end="655:67"><name pos:start="655:54" pos:end="655:62">load_zero</name><argument_list pos:start="655:63" pos:end="655:67">(<argument pos:start="655:64" pos:end="655:66"><expr pos:start="655:64" pos:end="655:66"><name pos:start="655:64" pos:end="655:66">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="657:33" pos:end="657:34"><expr pos:start="657:33" pos:end="657:34"><name pos:start="657:33" pos:end="657:34">vb</name></expr></argument>, <argument pos:start="657:37" pos:end="657:53"><expr pos:start="657:37" pos:end="657:53"><call pos:start="657:37" pos:end="657:53"><name pos:start="657:37" pos:end="657:44">load_gpr</name><argument_list pos:start="657:45" pos:end="657:53">(<argument pos:start="657:46" pos:end="657:48"><expr pos:start="657:46" pos:end="657:48"><name pos:start="657:46" pos:end="657:48">ctx</name></expr></argument>, <argument pos:start="657:51" pos:end="657:52"><expr pos:start="657:51" pos:end="657:52"><name pos:start="657:51" pos:end="657:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="659:13" pos:end="659:18">break;</break>

        <case pos:start="661:9" pos:end="661:18">case <expr pos:start="661:14" pos:end="661:17"><literal type="number" pos:start="661:14" pos:end="661:17">0x48</literal></expr>:</case>

            <comment type="block" pos:start="663:13" pos:end="663:21">/* EQV */</comment>

            <expr_stmt pos:start="665:13" pos:end="665:40"><expr pos:start="665:13" pos:end="665:39"><call pos:start="665:13" pos:end="665:39"><name pos:start="665:13" pos:end="665:27">tcg_gen_eqv_i64</name><argument_list pos:start="665:28" pos:end="665:39">(<argument pos:start="665:29" pos:end="665:30"><expr pos:start="665:29" pos:end="665:30"><name pos:start="665:29" pos:end="665:30">vc</name></expr></argument>, <argument pos:start="665:33" pos:end="665:34"><expr pos:start="665:33" pos:end="665:34"><name pos:start="665:33" pos:end="665:34">va</name></expr></argument>, <argument pos:start="665:37" pos:end="665:38"><expr pos:start="665:37" pos:end="665:38"><name pos:start="665:37" pos:end="665:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="667:13" pos:end="667:18">break;</break>

        <case pos:start="669:9" pos:end="669:18">case <expr pos:start="669:14" pos:end="669:17"><literal type="number" pos:start="669:14" pos:end="669:17">0x61</literal></expr>:</case>

            <comment type="block" pos:start="671:13" pos:end="671:23">/* AMASK */</comment>

            <expr_stmt pos:start="673:13" pos:end="673:31"><expr pos:start="673:13" pos:end="673:30"><call pos:start="673:13" pos:end="673:30"><name pos:start="673:13" pos:end="673:26">REQUIRE_REG_31</name><argument_list pos:start="673:27" pos:end="673:30">(<argument pos:start="673:28" pos:end="673:29"><expr pos:start="673:28" pos:end="673:29"><name pos:start="673:28" pos:end="673:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="675:13" pos:end="681:13">{<block_content pos:start="677:17" pos:end="679:49">

                <decl_stmt pos:start="677:17" pos:end="677:72"><decl pos:start="677:17" pos:end="677:71"><type pos:start="677:17" pos:end="677:24"><name pos:start="677:17" pos:end="677:24">uint64_t</name></type> <name pos:start="677:26" pos:end="677:30">amask</name> <init pos:start="677:32" pos:end="677:71">= <expr pos:start="677:34" pos:end="677:71"><name pos:start="677:34" pos:end="677:47"><name pos:start="677:34" pos:end="677:36">ctx</name><operator pos:start="677:37" pos:end="677:38">-&gt;</operator><name pos:start="677:39" pos:end="677:40">tb</name><operator pos:start="677:41" pos:end="677:42">-&gt;</operator><name pos:start="677:43" pos:end="677:47">flags</name></name> <operator pos:start="677:49" pos:end="677:50">&gt;&gt;</operator> <name pos:start="677:52" pos:end="677:71">TB_FLAGS_AMASK_SHIFT</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="679:17" pos:end="679:49"><expr pos:start="679:17" pos:end="679:48"><call pos:start="679:17" pos:end="679:48"><name pos:start="679:17" pos:end="679:32">tcg_gen_andi_i64</name><argument_list pos:start="679:33" pos:end="679:48">(<argument pos:start="679:34" pos:end="679:35"><expr pos:start="679:34" pos:end="679:35"><name pos:start="679:34" pos:end="679:35">vc</name></expr></argument>, <argument pos:start="679:38" pos:end="679:39"><expr pos:start="679:38" pos:end="679:39"><name pos:start="679:38" pos:end="679:39">vb</name></expr></argument>, <argument pos:start="679:42" pos:end="679:47"><expr pos:start="679:42" pos:end="679:47"><operator pos:start="679:42" pos:end="679:42">~</operator><name pos:start="679:43" pos:end="679:47">amask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="683:13" pos:end="683:18">break;</break>

        <case pos:start="685:9" pos:end="685:18">case <expr pos:start="685:14" pos:end="685:17"><literal type="number" pos:start="685:14" pos:end="685:17">0x64</literal></expr>:</case>

            <comment type="block" pos:start="687:13" pos:end="687:24">/* CMOVLE */</comment>

            <expr_stmt pos:start="689:13" pos:end="691:55"><expr pos:start="689:13" pos:end="691:54"><call pos:start="689:13" pos:end="691:54"><name pos:start="689:13" pos:end="689:31">tcg_gen_movcond_i64</name><argument_list pos:start="689:32" pos:end="691:54">(<argument pos:start="689:33" pos:end="689:43"><expr pos:start="689:33" pos:end="689:43"><name pos:start="689:33" pos:end="689:43">TCG_COND_LE</name></expr></argument>, <argument pos:start="689:46" pos:end="689:47"><expr pos:start="689:46" pos:end="689:47"><name pos:start="689:46" pos:end="689:47">vc</name></expr></argument>, <argument pos:start="689:50" pos:end="689:51"><expr pos:start="689:50" pos:end="689:51"><name pos:start="689:50" pos:end="689:51">va</name></expr></argument>, <argument pos:start="689:54" pos:end="689:67"><expr pos:start="689:54" pos:end="689:67"><call pos:start="689:54" pos:end="689:67"><name pos:start="689:54" pos:end="689:62">load_zero</name><argument_list pos:start="689:63" pos:end="689:67">(<argument pos:start="689:64" pos:end="689:66"><expr pos:start="689:64" pos:end="689:66"><name pos:start="689:64" pos:end="689:66">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="691:33" pos:end="691:34"><expr pos:start="691:33" pos:end="691:34"><name pos:start="691:33" pos:end="691:34">vb</name></expr></argument>, <argument pos:start="691:37" pos:end="691:53"><expr pos:start="691:37" pos:end="691:53"><call pos:start="691:37" pos:end="691:53"><name pos:start="691:37" pos:end="691:44">load_gpr</name><argument_list pos:start="691:45" pos:end="691:53">(<argument pos:start="691:46" pos:end="691:48"><expr pos:start="691:46" pos:end="691:48"><name pos:start="691:46" pos:end="691:48">ctx</name></expr></argument>, <argument pos:start="691:51" pos:end="691:52"><expr pos:start="691:51" pos:end="691:52"><name pos:start="691:51" pos:end="691:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="693:13" pos:end="693:18">break;</break>

        <case pos:start="695:9" pos:end="695:18">case <expr pos:start="695:14" pos:end="695:17"><literal type="number" pos:start="695:14" pos:end="695:17">0x66</literal></expr>:</case>

            <comment type="block" pos:start="697:13" pos:end="697:24">/* CMOVGT */</comment>

            <expr_stmt pos:start="699:13" pos:end="701:55"><expr pos:start="699:13" pos:end="701:54"><call pos:start="699:13" pos:end="701:54"><name pos:start="699:13" pos:end="699:31">tcg_gen_movcond_i64</name><argument_list pos:start="699:32" pos:end="701:54">(<argument pos:start="699:33" pos:end="699:43"><expr pos:start="699:33" pos:end="699:43"><name pos:start="699:33" pos:end="699:43">TCG_COND_GT</name></expr></argument>, <argument pos:start="699:46" pos:end="699:47"><expr pos:start="699:46" pos:end="699:47"><name pos:start="699:46" pos:end="699:47">vc</name></expr></argument>, <argument pos:start="699:50" pos:end="699:51"><expr pos:start="699:50" pos:end="699:51"><name pos:start="699:50" pos:end="699:51">va</name></expr></argument>, <argument pos:start="699:54" pos:end="699:67"><expr pos:start="699:54" pos:end="699:67"><call pos:start="699:54" pos:end="699:67"><name pos:start="699:54" pos:end="699:62">load_zero</name><argument_list pos:start="699:63" pos:end="699:67">(<argument pos:start="699:64" pos:end="699:66"><expr pos:start="699:64" pos:end="699:66"><name pos:start="699:64" pos:end="699:66">ctx</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="701:33" pos:end="701:34"><expr pos:start="701:33" pos:end="701:34"><name pos:start="701:33" pos:end="701:34">vb</name></expr></argument>, <argument pos:start="701:37" pos:end="701:53"><expr pos:start="701:37" pos:end="701:53"><call pos:start="701:37" pos:end="701:53"><name pos:start="701:37" pos:end="701:44">load_gpr</name><argument_list pos:start="701:45" pos:end="701:53">(<argument pos:start="701:46" pos:end="701:48"><expr pos:start="701:46" pos:end="701:48"><name pos:start="701:46" pos:end="701:48">ctx</name></expr></argument>, <argument pos:start="701:51" pos:end="701:52"><expr pos:start="701:51" pos:end="701:52"><name pos:start="701:51" pos:end="701:52">rc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="703:13" pos:end="703:18">break;</break>

        <case pos:start="705:9" pos:end="705:18">case <expr pos:start="705:14" pos:end="705:17"><literal type="number" pos:start="705:14" pos:end="705:17">0x6C</literal></expr>:</case>

            <comment type="block" pos:start="707:13" pos:end="707:25">/* IMPLVER */</comment>

            <expr_stmt pos:start="709:13" pos:end="709:31"><expr pos:start="709:13" pos:end="709:30"><call pos:start="709:13" pos:end="709:30"><name pos:start="709:13" pos:end="709:26">REQUIRE_REG_31</name><argument_list pos:start="709:27" pos:end="709:30">(<argument pos:start="709:28" pos:end="709:29"><expr pos:start="709:28" pos:end="709:29"><name pos:start="709:28" pos:end="709:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="711:13" pos:end="711:47"><expr pos:start="711:13" pos:end="711:46"><call pos:start="711:13" pos:end="711:46"><name pos:start="711:13" pos:end="711:28">tcg_gen_movi_i64</name><argument_list pos:start="711:29" pos:end="711:46">(<argument pos:start="711:30" pos:end="711:31"><expr pos:start="711:30" pos:end="711:31"><name pos:start="711:30" pos:end="711:31">vc</name></expr></argument>, <argument pos:start="711:34" pos:end="711:45"><expr pos:start="711:34" pos:end="711:45"><name pos:start="711:34" pos:end="711:45"><name pos:start="711:34" pos:end="711:36">ctx</name><operator pos:start="711:37" pos:end="711:38">-&gt;</operator><name pos:start="711:39" pos:end="711:45">implver</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="713:13" pos:end="713:18">break;</break>

        <default pos:start="715:9" pos:end="715:16">default:</default>

            <goto pos:start="717:13" pos:end="717:29">goto <name pos:start="717:18" pos:end="717:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="721:9" pos:end="721:14">break;</break>



    <case pos:start="725:5" pos:end="725:14">case <expr pos:start="725:10" pos:end="725:13"><literal type="number" pos:start="725:10" pos:end="725:13">0x12</literal></expr>:</case>

        <expr_stmt pos:start="727:9" pos:end="727:31"><expr pos:start="727:9" pos:end="727:30"><name pos:start="727:9" pos:end="727:10">vc</name> <operator pos:start="727:12" pos:end="727:12">=</operator> <call pos:start="727:14" pos:end="727:30"><name pos:start="727:14" pos:end="727:21">dest_gpr</name><argument_list pos:start="727:22" pos:end="727:30">(<argument pos:start="727:23" pos:end="727:25"><expr pos:start="727:23" pos:end="727:25"><name pos:start="727:23" pos:end="727:25">ctx</name></expr></argument>, <argument pos:start="727:28" pos:end="727:29"><expr pos:start="727:28" pos:end="727:29"><name pos:start="727:28" pos:end="727:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="729:9" pos:end="729:31"><expr pos:start="729:9" pos:end="729:30"><name pos:start="729:9" pos:end="729:10">va</name> <operator pos:start="729:12" pos:end="729:12">=</operator> <call pos:start="729:14" pos:end="729:30"><name pos:start="729:14" pos:end="729:21">load_gpr</name><argument_list pos:start="729:22" pos:end="729:30">(<argument pos:start="729:23" pos:end="729:25"><expr pos:start="729:23" pos:end="729:25"><name pos:start="729:23" pos:end="729:25">ctx</name></expr></argument>, <argument pos:start="729:28" pos:end="729:29"><expr pos:start="729:28" pos:end="729:29"><name pos:start="729:28" pos:end="729:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="731:9" pos:end="1009:9">switch <condition pos:start="731:16" pos:end="731:20">(<expr pos:start="731:17" pos:end="731:19"><name pos:start="731:17" pos:end="731:19">fn7</name></expr>)</condition> <block pos:start="731:22" pos:end="1009:9">{<block_content pos:start="733:9" pos:end="1007:29">

        <case pos:start="733:9" pos:end="733:18">case <expr pos:start="733:14" pos:end="733:17"><literal type="number" pos:start="733:14" pos:end="733:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="735:13" pos:end="735:23">/* MSKBL */</comment>

            <expr_stmt pos:start="737:13" pos:end="737:57"><expr pos:start="737:13" pos:end="737:56"><call pos:start="737:13" pos:end="737:56"><name pos:start="737:13" pos:end="737:21">gen_msk_l</name><argument_list pos:start="737:22" pos:end="737:56">(<argument pos:start="737:23" pos:end="737:25"><expr pos:start="737:23" pos:end="737:25"><name pos:start="737:23" pos:end="737:25">ctx</name></expr></argument>, <argument pos:start="737:28" pos:end="737:29"><expr pos:start="737:28" pos:end="737:29"><name pos:start="737:28" pos:end="737:29">vc</name></expr></argument>, <argument pos:start="737:32" pos:end="737:33"><expr pos:start="737:32" pos:end="737:33"><name pos:start="737:32" pos:end="737:33">va</name></expr></argument>, <argument pos:start="737:36" pos:end="737:37"><expr pos:start="737:36" pos:end="737:37"><name pos:start="737:36" pos:end="737:37">rb</name></expr></argument>, <argument pos:start="737:40" pos:end="737:44"><expr pos:start="737:40" pos:end="737:44"><name pos:start="737:40" pos:end="737:44">islit</name></expr></argument>, <argument pos:start="737:47" pos:end="737:49"><expr pos:start="737:47" pos:end="737:49"><name pos:start="737:47" pos:end="737:49">lit</name></expr></argument>, <argument pos:start="737:52" pos:end="737:55"><expr pos:start="737:52" pos:end="737:55"><literal type="number" pos:start="737:52" pos:end="737:55">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="739:13" pos:end="739:18">break;</break>

        <case pos:start="741:9" pos:end="741:18">case <expr pos:start="741:14" pos:end="741:17"><literal type="number" pos:start="741:14" pos:end="741:17">0x06</literal></expr>:</case>

            <comment type="block" pos:start="743:13" pos:end="743:23">/* EXTBL */</comment>

            <expr_stmt pos:start="745:13" pos:end="745:57"><expr pos:start="745:13" pos:end="745:56"><call pos:start="745:13" pos:end="745:56"><name pos:start="745:13" pos:end="745:21">gen_ext_l</name><argument_list pos:start="745:22" pos:end="745:56">(<argument pos:start="745:23" pos:end="745:25"><expr pos:start="745:23" pos:end="745:25"><name pos:start="745:23" pos:end="745:25">ctx</name></expr></argument>, <argument pos:start="745:28" pos:end="745:29"><expr pos:start="745:28" pos:end="745:29"><name pos:start="745:28" pos:end="745:29">vc</name></expr></argument>, <argument pos:start="745:32" pos:end="745:33"><expr pos:start="745:32" pos:end="745:33"><name pos:start="745:32" pos:end="745:33">va</name></expr></argument>, <argument pos:start="745:36" pos:end="745:37"><expr pos:start="745:36" pos:end="745:37"><name pos:start="745:36" pos:end="745:37">rb</name></expr></argument>, <argument pos:start="745:40" pos:end="745:44"><expr pos:start="745:40" pos:end="745:44"><name pos:start="745:40" pos:end="745:44">islit</name></expr></argument>, <argument pos:start="745:47" pos:end="745:49"><expr pos:start="745:47" pos:end="745:49"><name pos:start="745:47" pos:end="745:49">lit</name></expr></argument>, <argument pos:start="745:52" pos:end="745:55"><expr pos:start="745:52" pos:end="745:55"><literal type="number" pos:start="745:52" pos:end="745:55">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="747:13" pos:end="747:18">break;</break>

        <case pos:start="749:9" pos:end="749:18">case <expr pos:start="749:14" pos:end="749:17"><literal type="number" pos:start="749:14" pos:end="749:17">0x0B</literal></expr>:</case>

            <comment type="block" pos:start="751:13" pos:end="751:23">/* INSBL */</comment>

            <expr_stmt pos:start="753:13" pos:end="753:57"><expr pos:start="753:13" pos:end="753:56"><call pos:start="753:13" pos:end="753:56"><name pos:start="753:13" pos:end="753:21">gen_ins_l</name><argument_list pos:start="753:22" pos:end="753:56">(<argument pos:start="753:23" pos:end="753:25"><expr pos:start="753:23" pos:end="753:25"><name pos:start="753:23" pos:end="753:25">ctx</name></expr></argument>, <argument pos:start="753:28" pos:end="753:29"><expr pos:start="753:28" pos:end="753:29"><name pos:start="753:28" pos:end="753:29">vc</name></expr></argument>, <argument pos:start="753:32" pos:end="753:33"><expr pos:start="753:32" pos:end="753:33"><name pos:start="753:32" pos:end="753:33">va</name></expr></argument>, <argument pos:start="753:36" pos:end="753:37"><expr pos:start="753:36" pos:end="753:37"><name pos:start="753:36" pos:end="753:37">rb</name></expr></argument>, <argument pos:start="753:40" pos:end="753:44"><expr pos:start="753:40" pos:end="753:44"><name pos:start="753:40" pos:end="753:44">islit</name></expr></argument>, <argument pos:start="753:47" pos:end="753:49"><expr pos:start="753:47" pos:end="753:49"><name pos:start="753:47" pos:end="753:49">lit</name></expr></argument>, <argument pos:start="753:52" pos:end="753:55"><expr pos:start="753:52" pos:end="753:55"><literal type="number" pos:start="753:52" pos:end="753:55">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="755:13" pos:end="755:18">break;</break>

        <case pos:start="757:9" pos:end="757:18">case <expr pos:start="757:14" pos:end="757:17"><literal type="number" pos:start="757:14" pos:end="757:17">0x12</literal></expr>:</case>

            <comment type="block" pos:start="759:13" pos:end="759:23">/* MSKWL */</comment>

            <expr_stmt pos:start="761:13" pos:end="761:57"><expr pos:start="761:13" pos:end="761:56"><call pos:start="761:13" pos:end="761:56"><name pos:start="761:13" pos:end="761:21">gen_msk_l</name><argument_list pos:start="761:22" pos:end="761:56">(<argument pos:start="761:23" pos:end="761:25"><expr pos:start="761:23" pos:end="761:25"><name pos:start="761:23" pos:end="761:25">ctx</name></expr></argument>, <argument pos:start="761:28" pos:end="761:29"><expr pos:start="761:28" pos:end="761:29"><name pos:start="761:28" pos:end="761:29">vc</name></expr></argument>, <argument pos:start="761:32" pos:end="761:33"><expr pos:start="761:32" pos:end="761:33"><name pos:start="761:32" pos:end="761:33">va</name></expr></argument>, <argument pos:start="761:36" pos:end="761:37"><expr pos:start="761:36" pos:end="761:37"><name pos:start="761:36" pos:end="761:37">rb</name></expr></argument>, <argument pos:start="761:40" pos:end="761:44"><expr pos:start="761:40" pos:end="761:44"><name pos:start="761:40" pos:end="761:44">islit</name></expr></argument>, <argument pos:start="761:47" pos:end="761:49"><expr pos:start="761:47" pos:end="761:49"><name pos:start="761:47" pos:end="761:49">lit</name></expr></argument>, <argument pos:start="761:52" pos:end="761:55"><expr pos:start="761:52" pos:end="761:55"><literal type="number" pos:start="761:52" pos:end="761:55">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="763:13" pos:end="763:18">break;</break>

        <case pos:start="765:9" pos:end="765:18">case <expr pos:start="765:14" pos:end="765:17"><literal type="number" pos:start="765:14" pos:end="765:17">0x16</literal></expr>:</case>

            <comment type="block" pos:start="767:13" pos:end="767:23">/* EXTWL */</comment>

            <expr_stmt pos:start="769:13" pos:end="769:57"><expr pos:start="769:13" pos:end="769:56"><call pos:start="769:13" pos:end="769:56"><name pos:start="769:13" pos:end="769:21">gen_ext_l</name><argument_list pos:start="769:22" pos:end="769:56">(<argument pos:start="769:23" pos:end="769:25"><expr pos:start="769:23" pos:end="769:25"><name pos:start="769:23" pos:end="769:25">ctx</name></expr></argument>, <argument pos:start="769:28" pos:end="769:29"><expr pos:start="769:28" pos:end="769:29"><name pos:start="769:28" pos:end="769:29">vc</name></expr></argument>, <argument pos:start="769:32" pos:end="769:33"><expr pos:start="769:32" pos:end="769:33"><name pos:start="769:32" pos:end="769:33">va</name></expr></argument>, <argument pos:start="769:36" pos:end="769:37"><expr pos:start="769:36" pos:end="769:37"><name pos:start="769:36" pos:end="769:37">rb</name></expr></argument>, <argument pos:start="769:40" pos:end="769:44"><expr pos:start="769:40" pos:end="769:44"><name pos:start="769:40" pos:end="769:44">islit</name></expr></argument>, <argument pos:start="769:47" pos:end="769:49"><expr pos:start="769:47" pos:end="769:49"><name pos:start="769:47" pos:end="769:49">lit</name></expr></argument>, <argument pos:start="769:52" pos:end="769:55"><expr pos:start="769:52" pos:end="769:55"><literal type="number" pos:start="769:52" pos:end="769:55">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="771:13" pos:end="771:18">break;</break>

        <case pos:start="773:9" pos:end="773:18">case <expr pos:start="773:14" pos:end="773:17"><literal type="number" pos:start="773:14" pos:end="773:17">0x1B</literal></expr>:</case>

            <comment type="block" pos:start="775:13" pos:end="775:23">/* INSWL */</comment>

            <expr_stmt pos:start="777:13" pos:end="777:57"><expr pos:start="777:13" pos:end="777:56"><call pos:start="777:13" pos:end="777:56"><name pos:start="777:13" pos:end="777:21">gen_ins_l</name><argument_list pos:start="777:22" pos:end="777:56">(<argument pos:start="777:23" pos:end="777:25"><expr pos:start="777:23" pos:end="777:25"><name pos:start="777:23" pos:end="777:25">ctx</name></expr></argument>, <argument pos:start="777:28" pos:end="777:29"><expr pos:start="777:28" pos:end="777:29"><name pos:start="777:28" pos:end="777:29">vc</name></expr></argument>, <argument pos:start="777:32" pos:end="777:33"><expr pos:start="777:32" pos:end="777:33"><name pos:start="777:32" pos:end="777:33">va</name></expr></argument>, <argument pos:start="777:36" pos:end="777:37"><expr pos:start="777:36" pos:end="777:37"><name pos:start="777:36" pos:end="777:37">rb</name></expr></argument>, <argument pos:start="777:40" pos:end="777:44"><expr pos:start="777:40" pos:end="777:44"><name pos:start="777:40" pos:end="777:44">islit</name></expr></argument>, <argument pos:start="777:47" pos:end="777:49"><expr pos:start="777:47" pos:end="777:49"><name pos:start="777:47" pos:end="777:49">lit</name></expr></argument>, <argument pos:start="777:52" pos:end="777:55"><expr pos:start="777:52" pos:end="777:55"><literal type="number" pos:start="777:52" pos:end="777:55">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="779:13" pos:end="779:18">break;</break>

        <case pos:start="781:9" pos:end="781:18">case <expr pos:start="781:14" pos:end="781:17"><literal type="number" pos:start="781:14" pos:end="781:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="783:13" pos:end="783:23">/* MSKLL */</comment>

            <expr_stmt pos:start="785:13" pos:end="785:57"><expr pos:start="785:13" pos:end="785:56"><call pos:start="785:13" pos:end="785:56"><name pos:start="785:13" pos:end="785:21">gen_msk_l</name><argument_list pos:start="785:22" pos:end="785:56">(<argument pos:start="785:23" pos:end="785:25"><expr pos:start="785:23" pos:end="785:25"><name pos:start="785:23" pos:end="785:25">ctx</name></expr></argument>, <argument pos:start="785:28" pos:end="785:29"><expr pos:start="785:28" pos:end="785:29"><name pos:start="785:28" pos:end="785:29">vc</name></expr></argument>, <argument pos:start="785:32" pos:end="785:33"><expr pos:start="785:32" pos:end="785:33"><name pos:start="785:32" pos:end="785:33">va</name></expr></argument>, <argument pos:start="785:36" pos:end="785:37"><expr pos:start="785:36" pos:end="785:37"><name pos:start="785:36" pos:end="785:37">rb</name></expr></argument>, <argument pos:start="785:40" pos:end="785:44"><expr pos:start="785:40" pos:end="785:44"><name pos:start="785:40" pos:end="785:44">islit</name></expr></argument>, <argument pos:start="785:47" pos:end="785:49"><expr pos:start="785:47" pos:end="785:49"><name pos:start="785:47" pos:end="785:49">lit</name></expr></argument>, <argument pos:start="785:52" pos:end="785:55"><expr pos:start="785:52" pos:end="785:55"><literal type="number" pos:start="785:52" pos:end="785:55">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="787:13" pos:end="787:18">break;</break>

        <case pos:start="789:9" pos:end="789:18">case <expr pos:start="789:14" pos:end="789:17"><literal type="number" pos:start="789:14" pos:end="789:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="791:13" pos:end="791:23">/* EXTLL */</comment>

            <expr_stmt pos:start="793:13" pos:end="793:57"><expr pos:start="793:13" pos:end="793:56"><call pos:start="793:13" pos:end="793:56"><name pos:start="793:13" pos:end="793:21">gen_ext_l</name><argument_list pos:start="793:22" pos:end="793:56">(<argument pos:start="793:23" pos:end="793:25"><expr pos:start="793:23" pos:end="793:25"><name pos:start="793:23" pos:end="793:25">ctx</name></expr></argument>, <argument pos:start="793:28" pos:end="793:29"><expr pos:start="793:28" pos:end="793:29"><name pos:start="793:28" pos:end="793:29">vc</name></expr></argument>, <argument pos:start="793:32" pos:end="793:33"><expr pos:start="793:32" pos:end="793:33"><name pos:start="793:32" pos:end="793:33">va</name></expr></argument>, <argument pos:start="793:36" pos:end="793:37"><expr pos:start="793:36" pos:end="793:37"><name pos:start="793:36" pos:end="793:37">rb</name></expr></argument>, <argument pos:start="793:40" pos:end="793:44"><expr pos:start="793:40" pos:end="793:44"><name pos:start="793:40" pos:end="793:44">islit</name></expr></argument>, <argument pos:start="793:47" pos:end="793:49"><expr pos:start="793:47" pos:end="793:49"><name pos:start="793:47" pos:end="793:49">lit</name></expr></argument>, <argument pos:start="793:52" pos:end="793:55"><expr pos:start="793:52" pos:end="793:55"><literal type="number" pos:start="793:52" pos:end="793:55">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="795:13" pos:end="795:18">break;</break>

        <case pos:start="797:9" pos:end="797:18">case <expr pos:start="797:14" pos:end="797:17"><literal type="number" pos:start="797:14" pos:end="797:17">0x2B</literal></expr>:</case>

            <comment type="block" pos:start="799:13" pos:end="799:23">/* INSLL */</comment>

            <expr_stmt pos:start="801:13" pos:end="801:57"><expr pos:start="801:13" pos:end="801:56"><call pos:start="801:13" pos:end="801:56"><name pos:start="801:13" pos:end="801:21">gen_ins_l</name><argument_list pos:start="801:22" pos:end="801:56">(<argument pos:start="801:23" pos:end="801:25"><expr pos:start="801:23" pos:end="801:25"><name pos:start="801:23" pos:end="801:25">ctx</name></expr></argument>, <argument pos:start="801:28" pos:end="801:29"><expr pos:start="801:28" pos:end="801:29"><name pos:start="801:28" pos:end="801:29">vc</name></expr></argument>, <argument pos:start="801:32" pos:end="801:33"><expr pos:start="801:32" pos:end="801:33"><name pos:start="801:32" pos:end="801:33">va</name></expr></argument>, <argument pos:start="801:36" pos:end="801:37"><expr pos:start="801:36" pos:end="801:37"><name pos:start="801:36" pos:end="801:37">rb</name></expr></argument>, <argument pos:start="801:40" pos:end="801:44"><expr pos:start="801:40" pos:end="801:44"><name pos:start="801:40" pos:end="801:44">islit</name></expr></argument>, <argument pos:start="801:47" pos:end="801:49"><expr pos:start="801:47" pos:end="801:49"><name pos:start="801:47" pos:end="801:49">lit</name></expr></argument>, <argument pos:start="801:52" pos:end="801:55"><expr pos:start="801:52" pos:end="801:55"><literal type="number" pos:start="801:52" pos:end="801:55">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="803:13" pos:end="803:18">break;</break>

        <case pos:start="805:9" pos:end="805:18">case <expr pos:start="805:14" pos:end="805:17"><literal type="number" pos:start="805:14" pos:end="805:17">0x30</literal></expr>:</case>

            <comment type="block" pos:start="807:13" pos:end="807:21">/* ZAP */</comment>

            <if_stmt pos:start="809:13" pos:end="817:13"><if pos:start="809:13" pos:end="813:13">if <condition pos:start="809:16" pos:end="809:22">(<expr pos:start="809:17" pos:end="809:21"><name pos:start="809:17" pos:end="809:21">islit</name></expr>)</condition> <block pos:start="809:24" pos:end="813:13">{<block_content pos:start="811:17" pos:end="811:42">

                <expr_stmt pos:start="811:17" pos:end="811:42"><expr pos:start="811:17" pos:end="811:41"><call pos:start="811:17" pos:end="811:41"><name pos:start="811:17" pos:end="811:27">gen_zapnoti</name><argument_list pos:start="811:28" pos:end="811:41">(<argument pos:start="811:29" pos:end="811:30"><expr pos:start="811:29" pos:end="811:30"><name pos:start="811:29" pos:end="811:30">vc</name></expr></argument>, <argument pos:start="811:33" pos:end="811:34"><expr pos:start="811:33" pos:end="811:34"><name pos:start="811:33" pos:end="811:34">va</name></expr></argument>, <argument pos:start="811:37" pos:end="811:40"><expr pos:start="811:37" pos:end="811:40"><operator pos:start="811:37" pos:end="811:37">~</operator><name pos:start="811:38" pos:end="811:40">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="813:15" pos:end="817:13">else <block pos:start="813:20" pos:end="817:13">{<block_content pos:start="815:17" pos:end="815:58">

                <expr_stmt pos:start="815:17" pos:end="815:58"><expr pos:start="815:17" pos:end="815:57"><call pos:start="815:17" pos:end="815:57"><name pos:start="815:17" pos:end="815:30">gen_helper_zap</name><argument_list pos:start="815:31" pos:end="815:57">(<argument pos:start="815:32" pos:end="815:33"><expr pos:start="815:32" pos:end="815:33"><name pos:start="815:32" pos:end="815:33">vc</name></expr></argument>, <argument pos:start="815:36" pos:end="815:37"><expr pos:start="815:36" pos:end="815:37"><name pos:start="815:36" pos:end="815:37">va</name></expr></argument>, <argument pos:start="815:40" pos:end="815:56"><expr pos:start="815:40" pos:end="815:56"><call pos:start="815:40" pos:end="815:56"><name pos:start="815:40" pos:end="815:47">load_gpr</name><argument_list pos:start="815:48" pos:end="815:56">(<argument pos:start="815:49" pos:end="815:51"><expr pos:start="815:49" pos:end="815:51"><name pos:start="815:49" pos:end="815:51">ctx</name></expr></argument>, <argument pos:start="815:54" pos:end="815:55"><expr pos:start="815:54" pos:end="815:55"><name pos:start="815:54" pos:end="815:55">rb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="819:13" pos:end="819:18">break;</break>

        <case pos:start="821:9" pos:end="821:18">case <expr pos:start="821:14" pos:end="821:17"><literal type="number" pos:start="821:14" pos:end="821:17">0x31</literal></expr>:</case>

            <comment type="block" pos:start="823:13" pos:end="823:24">/* ZAPNOT */</comment>

            <if_stmt pos:start="825:13" pos:end="833:13"><if pos:start="825:13" pos:end="829:13">if <condition pos:start="825:16" pos:end="825:22">(<expr pos:start="825:17" pos:end="825:21"><name pos:start="825:17" pos:end="825:21">islit</name></expr>)</condition> <block pos:start="825:24" pos:end="829:13">{<block_content pos:start="827:17" pos:end="827:41">

                <expr_stmt pos:start="827:17" pos:end="827:41"><expr pos:start="827:17" pos:end="827:40"><call pos:start="827:17" pos:end="827:40"><name pos:start="827:17" pos:end="827:27">gen_zapnoti</name><argument_list pos:start="827:28" pos:end="827:40">(<argument pos:start="827:29" pos:end="827:30"><expr pos:start="827:29" pos:end="827:30"><name pos:start="827:29" pos:end="827:30">vc</name></expr></argument>, <argument pos:start="827:33" pos:end="827:34"><expr pos:start="827:33" pos:end="827:34"><name pos:start="827:33" pos:end="827:34">va</name></expr></argument>, <argument pos:start="827:37" pos:end="827:39"><expr pos:start="827:37" pos:end="827:39"><name pos:start="827:37" pos:end="827:39">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="829:15" pos:end="833:13">else <block pos:start="829:20" pos:end="833:13">{<block_content pos:start="831:17" pos:end="831:61">

                <expr_stmt pos:start="831:17" pos:end="831:61"><expr pos:start="831:17" pos:end="831:60"><call pos:start="831:17" pos:end="831:60"><name pos:start="831:17" pos:end="831:33">gen_helper_zapnot</name><argument_list pos:start="831:34" pos:end="831:60">(<argument pos:start="831:35" pos:end="831:36"><expr pos:start="831:35" pos:end="831:36"><name pos:start="831:35" pos:end="831:36">vc</name></expr></argument>, <argument pos:start="831:39" pos:end="831:40"><expr pos:start="831:39" pos:end="831:40"><name pos:start="831:39" pos:end="831:40">va</name></expr></argument>, <argument pos:start="831:43" pos:end="831:59"><expr pos:start="831:43" pos:end="831:59"><call pos:start="831:43" pos:end="831:59"><name pos:start="831:43" pos:end="831:50">load_gpr</name><argument_list pos:start="831:51" pos:end="831:59">(<argument pos:start="831:52" pos:end="831:54"><expr pos:start="831:52" pos:end="831:54"><name pos:start="831:52" pos:end="831:54">ctx</name></expr></argument>, <argument pos:start="831:57" pos:end="831:58"><expr pos:start="831:57" pos:end="831:58"><name pos:start="831:57" pos:end="831:58">rb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="835:13" pos:end="835:18">break;</break>

        <case pos:start="837:9" pos:end="837:18">case <expr pos:start="837:14" pos:end="837:17"><literal type="number" pos:start="837:14" pos:end="837:17">0x32</literal></expr>:</case>

            <comment type="block" pos:start="839:13" pos:end="839:23">/* MSKQL */</comment>

            <expr_stmt pos:start="841:13" pos:end="841:57"><expr pos:start="841:13" pos:end="841:56"><call pos:start="841:13" pos:end="841:56"><name pos:start="841:13" pos:end="841:21">gen_msk_l</name><argument_list pos:start="841:22" pos:end="841:56">(<argument pos:start="841:23" pos:end="841:25"><expr pos:start="841:23" pos:end="841:25"><name pos:start="841:23" pos:end="841:25">ctx</name></expr></argument>, <argument pos:start="841:28" pos:end="841:29"><expr pos:start="841:28" pos:end="841:29"><name pos:start="841:28" pos:end="841:29">vc</name></expr></argument>, <argument pos:start="841:32" pos:end="841:33"><expr pos:start="841:32" pos:end="841:33"><name pos:start="841:32" pos:end="841:33">va</name></expr></argument>, <argument pos:start="841:36" pos:end="841:37"><expr pos:start="841:36" pos:end="841:37"><name pos:start="841:36" pos:end="841:37">rb</name></expr></argument>, <argument pos:start="841:40" pos:end="841:44"><expr pos:start="841:40" pos:end="841:44"><name pos:start="841:40" pos:end="841:44">islit</name></expr></argument>, <argument pos:start="841:47" pos:end="841:49"><expr pos:start="841:47" pos:end="841:49"><name pos:start="841:47" pos:end="841:49">lit</name></expr></argument>, <argument pos:start="841:52" pos:end="841:55"><expr pos:start="841:52" pos:end="841:55"><literal type="number" pos:start="841:52" pos:end="841:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="843:13" pos:end="843:18">break;</break>

        <case pos:start="845:9" pos:end="845:18">case <expr pos:start="845:14" pos:end="845:17"><literal type="number" pos:start="845:14" pos:end="845:17">0x34</literal></expr>:</case>

            <comment type="block" pos:start="847:13" pos:end="847:21">/* SRL */</comment>

            <if_stmt pos:start="849:13" pos:end="865:13"><if pos:start="849:13" pos:end="853:13">if <condition pos:start="849:16" pos:end="849:22">(<expr pos:start="849:17" pos:end="849:21"><name pos:start="849:17" pos:end="849:21">islit</name></expr>)</condition> <block pos:start="849:24" pos:end="853:13">{<block_content pos:start="851:17" pos:end="851:53">

                <expr_stmt pos:start="851:17" pos:end="851:53"><expr pos:start="851:17" pos:end="851:52"><call pos:start="851:17" pos:end="851:52"><name pos:start="851:17" pos:end="851:32">tcg_gen_shri_i64</name><argument_list pos:start="851:33" pos:end="851:52">(<argument pos:start="851:34" pos:end="851:35"><expr pos:start="851:34" pos:end="851:35"><name pos:start="851:34" pos:end="851:35">vc</name></expr></argument>, <argument pos:start="851:38" pos:end="851:39"><expr pos:start="851:38" pos:end="851:39"><name pos:start="851:38" pos:end="851:39">va</name></expr></argument>, <argument pos:start="851:42" pos:end="851:51"><expr pos:start="851:42" pos:end="851:51"><name pos:start="851:42" pos:end="851:44">lit</name> <operator pos:start="851:46" pos:end="851:46">&amp;</operator> <literal type="number" pos:start="851:48" pos:end="851:51">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="853:15" pos:end="865:13">else <block pos:start="853:20" pos:end="865:13">{<block_content pos:start="855:17" pos:end="863:35">

                <expr_stmt pos:start="855:17" pos:end="855:37"><expr pos:start="855:17" pos:end="855:36"><name pos:start="855:17" pos:end="855:19">tmp</name> <operator pos:start="855:21" pos:end="855:21">=</operator> <call pos:start="855:23" pos:end="855:36"><name pos:start="855:23" pos:end="855:34">tcg_temp_new</name><argument_list pos:start="855:35" pos:end="855:36">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="857:17" pos:end="857:39"><expr pos:start="857:17" pos:end="857:38"><name pos:start="857:17" pos:end="857:18">vb</name> <operator pos:start="857:20" pos:end="857:20">=</operator> <call pos:start="857:22" pos:end="857:38"><name pos:start="857:22" pos:end="857:29">load_gpr</name><argument_list pos:start="857:30" pos:end="857:38">(<argument pos:start="857:31" pos:end="857:33"><expr pos:start="857:31" pos:end="857:33"><name pos:start="857:31" pos:end="857:33">ctx</name></expr></argument>, <argument pos:start="857:36" pos:end="857:37"><expr pos:start="857:36" pos:end="857:37"><name pos:start="857:36" pos:end="857:37">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="859:17" pos:end="859:48"><expr pos:start="859:17" pos:end="859:47"><call pos:start="859:17" pos:end="859:47"><name pos:start="859:17" pos:end="859:32">tcg_gen_andi_i64</name><argument_list pos:start="859:33" pos:end="859:47">(<argument pos:start="859:34" pos:end="859:36"><expr pos:start="859:34" pos:end="859:36"><name pos:start="859:34" pos:end="859:36">tmp</name></expr></argument>, <argument pos:start="859:39" pos:end="859:40"><expr pos:start="859:39" pos:end="859:40"><name pos:start="859:39" pos:end="859:40">vb</name></expr></argument>, <argument pos:start="859:43" pos:end="859:46"><expr pos:start="859:43" pos:end="859:46"><literal type="number" pos:start="859:43" pos:end="859:46">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="861:17" pos:end="861:45"><expr pos:start="861:17" pos:end="861:44"><call pos:start="861:17" pos:end="861:44"><name pos:start="861:17" pos:end="861:31">tcg_gen_shr_i64</name><argument_list pos:start="861:32" pos:end="861:44">(<argument pos:start="861:33" pos:end="861:34"><expr pos:start="861:33" pos:end="861:34"><name pos:start="861:33" pos:end="861:34">vc</name></expr></argument>, <argument pos:start="861:37" pos:end="861:38"><expr pos:start="861:37" pos:end="861:38"><name pos:start="861:37" pos:end="861:38">va</name></expr></argument>, <argument pos:start="861:41" pos:end="861:43"><expr pos:start="861:41" pos:end="861:43"><name pos:start="861:41" pos:end="861:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="863:17" pos:end="863:35"><expr pos:start="863:17" pos:end="863:34"><call pos:start="863:17" pos:end="863:34"><name pos:start="863:17" pos:end="863:29">tcg_temp_free</name><argument_list pos:start="863:30" pos:end="863:34">(<argument pos:start="863:31" pos:end="863:33"><expr pos:start="863:31" pos:end="863:33"><name pos:start="863:31" pos:end="863:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="867:13" pos:end="867:18">break;</break>

        <case pos:start="869:9" pos:end="869:18">case <expr pos:start="869:14" pos:end="869:17"><literal type="number" pos:start="869:14" pos:end="869:17">0x36</literal></expr>:</case>

            <comment type="block" pos:start="871:13" pos:end="871:23">/* EXTQL */</comment>

            <expr_stmt pos:start="873:13" pos:end="873:57"><expr pos:start="873:13" pos:end="873:56"><call pos:start="873:13" pos:end="873:56"><name pos:start="873:13" pos:end="873:21">gen_ext_l</name><argument_list pos:start="873:22" pos:end="873:56">(<argument pos:start="873:23" pos:end="873:25"><expr pos:start="873:23" pos:end="873:25"><name pos:start="873:23" pos:end="873:25">ctx</name></expr></argument>, <argument pos:start="873:28" pos:end="873:29"><expr pos:start="873:28" pos:end="873:29"><name pos:start="873:28" pos:end="873:29">vc</name></expr></argument>, <argument pos:start="873:32" pos:end="873:33"><expr pos:start="873:32" pos:end="873:33"><name pos:start="873:32" pos:end="873:33">va</name></expr></argument>, <argument pos:start="873:36" pos:end="873:37"><expr pos:start="873:36" pos:end="873:37"><name pos:start="873:36" pos:end="873:37">rb</name></expr></argument>, <argument pos:start="873:40" pos:end="873:44"><expr pos:start="873:40" pos:end="873:44"><name pos:start="873:40" pos:end="873:44">islit</name></expr></argument>, <argument pos:start="873:47" pos:end="873:49"><expr pos:start="873:47" pos:end="873:49"><name pos:start="873:47" pos:end="873:49">lit</name></expr></argument>, <argument pos:start="873:52" pos:end="873:55"><expr pos:start="873:52" pos:end="873:55"><literal type="number" pos:start="873:52" pos:end="873:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="875:13" pos:end="875:18">break;</break>

        <case pos:start="877:9" pos:end="877:18">case <expr pos:start="877:14" pos:end="877:17"><literal type="number" pos:start="877:14" pos:end="877:17">0x39</literal></expr>:</case>

            <comment type="block" pos:start="879:13" pos:end="879:21">/* SLL */</comment>

            <if_stmt pos:start="881:13" pos:end="897:13"><if pos:start="881:13" pos:end="885:13">if <condition pos:start="881:16" pos:end="881:22">(<expr pos:start="881:17" pos:end="881:21"><name pos:start="881:17" pos:end="881:21">islit</name></expr>)</condition> <block pos:start="881:24" pos:end="885:13">{<block_content pos:start="883:17" pos:end="883:53">

                <expr_stmt pos:start="883:17" pos:end="883:53"><expr pos:start="883:17" pos:end="883:52"><call pos:start="883:17" pos:end="883:52"><name pos:start="883:17" pos:end="883:32">tcg_gen_shli_i64</name><argument_list pos:start="883:33" pos:end="883:52">(<argument pos:start="883:34" pos:end="883:35"><expr pos:start="883:34" pos:end="883:35"><name pos:start="883:34" pos:end="883:35">vc</name></expr></argument>, <argument pos:start="883:38" pos:end="883:39"><expr pos:start="883:38" pos:end="883:39"><name pos:start="883:38" pos:end="883:39">va</name></expr></argument>, <argument pos:start="883:42" pos:end="883:51"><expr pos:start="883:42" pos:end="883:51"><name pos:start="883:42" pos:end="883:44">lit</name> <operator pos:start="883:46" pos:end="883:46">&amp;</operator> <literal type="number" pos:start="883:48" pos:end="883:51">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="885:15" pos:end="897:13">else <block pos:start="885:20" pos:end="897:13">{<block_content pos:start="887:17" pos:end="895:35">

                <expr_stmt pos:start="887:17" pos:end="887:37"><expr pos:start="887:17" pos:end="887:36"><name pos:start="887:17" pos:end="887:19">tmp</name> <operator pos:start="887:21" pos:end="887:21">=</operator> <call pos:start="887:23" pos:end="887:36"><name pos:start="887:23" pos:end="887:34">tcg_temp_new</name><argument_list pos:start="887:35" pos:end="887:36">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="889:17" pos:end="889:39"><expr pos:start="889:17" pos:end="889:38"><name pos:start="889:17" pos:end="889:18">vb</name> <operator pos:start="889:20" pos:end="889:20">=</operator> <call pos:start="889:22" pos:end="889:38"><name pos:start="889:22" pos:end="889:29">load_gpr</name><argument_list pos:start="889:30" pos:end="889:38">(<argument pos:start="889:31" pos:end="889:33"><expr pos:start="889:31" pos:end="889:33"><name pos:start="889:31" pos:end="889:33">ctx</name></expr></argument>, <argument pos:start="889:36" pos:end="889:37"><expr pos:start="889:36" pos:end="889:37"><name pos:start="889:36" pos:end="889:37">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="891:17" pos:end="891:48"><expr pos:start="891:17" pos:end="891:47"><call pos:start="891:17" pos:end="891:47"><name pos:start="891:17" pos:end="891:32">tcg_gen_andi_i64</name><argument_list pos:start="891:33" pos:end="891:47">(<argument pos:start="891:34" pos:end="891:36"><expr pos:start="891:34" pos:end="891:36"><name pos:start="891:34" pos:end="891:36">tmp</name></expr></argument>, <argument pos:start="891:39" pos:end="891:40"><expr pos:start="891:39" pos:end="891:40"><name pos:start="891:39" pos:end="891:40">vb</name></expr></argument>, <argument pos:start="891:43" pos:end="891:46"><expr pos:start="891:43" pos:end="891:46"><literal type="number" pos:start="891:43" pos:end="891:46">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="893:17" pos:end="893:45"><expr pos:start="893:17" pos:end="893:44"><call pos:start="893:17" pos:end="893:44"><name pos:start="893:17" pos:end="893:31">tcg_gen_shl_i64</name><argument_list pos:start="893:32" pos:end="893:44">(<argument pos:start="893:33" pos:end="893:34"><expr pos:start="893:33" pos:end="893:34"><name pos:start="893:33" pos:end="893:34">vc</name></expr></argument>, <argument pos:start="893:37" pos:end="893:38"><expr pos:start="893:37" pos:end="893:38"><name pos:start="893:37" pos:end="893:38">va</name></expr></argument>, <argument pos:start="893:41" pos:end="893:43"><expr pos:start="893:41" pos:end="893:43"><name pos:start="893:41" pos:end="893:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="895:17" pos:end="895:35"><expr pos:start="895:17" pos:end="895:34"><call pos:start="895:17" pos:end="895:34"><name pos:start="895:17" pos:end="895:29">tcg_temp_free</name><argument_list pos:start="895:30" pos:end="895:34">(<argument pos:start="895:31" pos:end="895:33"><expr pos:start="895:31" pos:end="895:33"><name pos:start="895:31" pos:end="895:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="899:13" pos:end="899:18">break;</break>

        <case pos:start="901:9" pos:end="901:18">case <expr pos:start="901:14" pos:end="901:17"><literal type="number" pos:start="901:14" pos:end="901:17">0x3B</literal></expr>:</case>

            <comment type="block" pos:start="903:13" pos:end="903:23">/* INSQL */</comment>

            <expr_stmt pos:start="905:13" pos:end="905:57"><expr pos:start="905:13" pos:end="905:56"><call pos:start="905:13" pos:end="905:56"><name pos:start="905:13" pos:end="905:21">gen_ins_l</name><argument_list pos:start="905:22" pos:end="905:56">(<argument pos:start="905:23" pos:end="905:25"><expr pos:start="905:23" pos:end="905:25"><name pos:start="905:23" pos:end="905:25">ctx</name></expr></argument>, <argument pos:start="905:28" pos:end="905:29"><expr pos:start="905:28" pos:end="905:29"><name pos:start="905:28" pos:end="905:29">vc</name></expr></argument>, <argument pos:start="905:32" pos:end="905:33"><expr pos:start="905:32" pos:end="905:33"><name pos:start="905:32" pos:end="905:33">va</name></expr></argument>, <argument pos:start="905:36" pos:end="905:37"><expr pos:start="905:36" pos:end="905:37"><name pos:start="905:36" pos:end="905:37">rb</name></expr></argument>, <argument pos:start="905:40" pos:end="905:44"><expr pos:start="905:40" pos:end="905:44"><name pos:start="905:40" pos:end="905:44">islit</name></expr></argument>, <argument pos:start="905:47" pos:end="905:49"><expr pos:start="905:47" pos:end="905:49"><name pos:start="905:47" pos:end="905:49">lit</name></expr></argument>, <argument pos:start="905:52" pos:end="905:55"><expr pos:start="905:52" pos:end="905:55"><literal type="number" pos:start="905:52" pos:end="905:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="907:13" pos:end="907:18">break;</break>

        <case pos:start="909:9" pos:end="909:18">case <expr pos:start="909:14" pos:end="909:17"><literal type="number" pos:start="909:14" pos:end="909:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="911:13" pos:end="911:21">/* SRA */</comment>

            <if_stmt pos:start="913:13" pos:end="929:13"><if pos:start="913:13" pos:end="917:13">if <condition pos:start="913:16" pos:end="913:22">(<expr pos:start="913:17" pos:end="913:21"><name pos:start="913:17" pos:end="913:21">islit</name></expr>)</condition> <block pos:start="913:24" pos:end="917:13">{<block_content pos:start="915:17" pos:end="915:53">

                <expr_stmt pos:start="915:17" pos:end="915:53"><expr pos:start="915:17" pos:end="915:52"><call pos:start="915:17" pos:end="915:52"><name pos:start="915:17" pos:end="915:32">tcg_gen_sari_i64</name><argument_list pos:start="915:33" pos:end="915:52">(<argument pos:start="915:34" pos:end="915:35"><expr pos:start="915:34" pos:end="915:35"><name pos:start="915:34" pos:end="915:35">vc</name></expr></argument>, <argument pos:start="915:38" pos:end="915:39"><expr pos:start="915:38" pos:end="915:39"><name pos:start="915:38" pos:end="915:39">va</name></expr></argument>, <argument pos:start="915:42" pos:end="915:51"><expr pos:start="915:42" pos:end="915:51"><name pos:start="915:42" pos:end="915:44">lit</name> <operator pos:start="915:46" pos:end="915:46">&amp;</operator> <literal type="number" pos:start="915:48" pos:end="915:51">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="917:15" pos:end="929:13">else <block pos:start="917:20" pos:end="929:13">{<block_content pos:start="919:17" pos:end="927:35">

                <expr_stmt pos:start="919:17" pos:end="919:37"><expr pos:start="919:17" pos:end="919:36"><name pos:start="919:17" pos:end="919:19">tmp</name> <operator pos:start="919:21" pos:end="919:21">=</operator> <call pos:start="919:23" pos:end="919:36"><name pos:start="919:23" pos:end="919:34">tcg_temp_new</name><argument_list pos:start="919:35" pos:end="919:36">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="921:17" pos:end="921:39"><expr pos:start="921:17" pos:end="921:38"><name pos:start="921:17" pos:end="921:18">vb</name> <operator pos:start="921:20" pos:end="921:20">=</operator> <call pos:start="921:22" pos:end="921:38"><name pos:start="921:22" pos:end="921:29">load_gpr</name><argument_list pos:start="921:30" pos:end="921:38">(<argument pos:start="921:31" pos:end="921:33"><expr pos:start="921:31" pos:end="921:33"><name pos:start="921:31" pos:end="921:33">ctx</name></expr></argument>, <argument pos:start="921:36" pos:end="921:37"><expr pos:start="921:36" pos:end="921:37"><name pos:start="921:36" pos:end="921:37">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="923:17" pos:end="923:48"><expr pos:start="923:17" pos:end="923:47"><call pos:start="923:17" pos:end="923:47"><name pos:start="923:17" pos:end="923:32">tcg_gen_andi_i64</name><argument_list pos:start="923:33" pos:end="923:47">(<argument pos:start="923:34" pos:end="923:36"><expr pos:start="923:34" pos:end="923:36"><name pos:start="923:34" pos:end="923:36">tmp</name></expr></argument>, <argument pos:start="923:39" pos:end="923:40"><expr pos:start="923:39" pos:end="923:40"><name pos:start="923:39" pos:end="923:40">vb</name></expr></argument>, <argument pos:start="923:43" pos:end="923:46"><expr pos:start="923:43" pos:end="923:46"><literal type="number" pos:start="923:43" pos:end="923:46">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="925:17" pos:end="925:45"><expr pos:start="925:17" pos:end="925:44"><call pos:start="925:17" pos:end="925:44"><name pos:start="925:17" pos:end="925:31">tcg_gen_sar_i64</name><argument_list pos:start="925:32" pos:end="925:44">(<argument pos:start="925:33" pos:end="925:34"><expr pos:start="925:33" pos:end="925:34"><name pos:start="925:33" pos:end="925:34">vc</name></expr></argument>, <argument pos:start="925:37" pos:end="925:38"><expr pos:start="925:37" pos:end="925:38"><name pos:start="925:37" pos:end="925:38">va</name></expr></argument>, <argument pos:start="925:41" pos:end="925:43"><expr pos:start="925:41" pos:end="925:43"><name pos:start="925:41" pos:end="925:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="927:17" pos:end="927:35"><expr pos:start="927:17" pos:end="927:34"><call pos:start="927:17" pos:end="927:34"><name pos:start="927:17" pos:end="927:29">tcg_temp_free</name><argument_list pos:start="927:30" pos:end="927:34">(<argument pos:start="927:31" pos:end="927:33"><expr pos:start="927:31" pos:end="927:33"><name pos:start="927:31" pos:end="927:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="931:13" pos:end="931:18">break;</break>

        <case pos:start="933:9" pos:end="933:18">case <expr pos:start="933:14" pos:end="933:17"><literal type="number" pos:start="933:14" pos:end="933:17">0x52</literal></expr>:</case>

            <comment type="block" pos:start="935:13" pos:end="935:23">/* MSKWH */</comment>

            <expr_stmt pos:start="937:13" pos:end="937:57"><expr pos:start="937:13" pos:end="937:56"><call pos:start="937:13" pos:end="937:56"><name pos:start="937:13" pos:end="937:21">gen_msk_h</name><argument_list pos:start="937:22" pos:end="937:56">(<argument pos:start="937:23" pos:end="937:25"><expr pos:start="937:23" pos:end="937:25"><name pos:start="937:23" pos:end="937:25">ctx</name></expr></argument>, <argument pos:start="937:28" pos:end="937:29"><expr pos:start="937:28" pos:end="937:29"><name pos:start="937:28" pos:end="937:29">vc</name></expr></argument>, <argument pos:start="937:32" pos:end="937:33"><expr pos:start="937:32" pos:end="937:33"><name pos:start="937:32" pos:end="937:33">va</name></expr></argument>, <argument pos:start="937:36" pos:end="937:37"><expr pos:start="937:36" pos:end="937:37"><name pos:start="937:36" pos:end="937:37">rb</name></expr></argument>, <argument pos:start="937:40" pos:end="937:44"><expr pos:start="937:40" pos:end="937:44"><name pos:start="937:40" pos:end="937:44">islit</name></expr></argument>, <argument pos:start="937:47" pos:end="937:49"><expr pos:start="937:47" pos:end="937:49"><name pos:start="937:47" pos:end="937:49">lit</name></expr></argument>, <argument pos:start="937:52" pos:end="937:55"><expr pos:start="937:52" pos:end="937:55"><literal type="number" pos:start="937:52" pos:end="937:55">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="939:13" pos:end="939:18">break;</break>

        <case pos:start="941:9" pos:end="941:18">case <expr pos:start="941:14" pos:end="941:17"><literal type="number" pos:start="941:14" pos:end="941:17">0x57</literal></expr>:</case>

            <comment type="block" pos:start="943:13" pos:end="943:23">/* INSWH */</comment>

            <expr_stmt pos:start="945:13" pos:end="945:57"><expr pos:start="945:13" pos:end="945:56"><call pos:start="945:13" pos:end="945:56"><name pos:start="945:13" pos:end="945:21">gen_ins_h</name><argument_list pos:start="945:22" pos:end="945:56">(<argument pos:start="945:23" pos:end="945:25"><expr pos:start="945:23" pos:end="945:25"><name pos:start="945:23" pos:end="945:25">ctx</name></expr></argument>, <argument pos:start="945:28" pos:end="945:29"><expr pos:start="945:28" pos:end="945:29"><name pos:start="945:28" pos:end="945:29">vc</name></expr></argument>, <argument pos:start="945:32" pos:end="945:33"><expr pos:start="945:32" pos:end="945:33"><name pos:start="945:32" pos:end="945:33">va</name></expr></argument>, <argument pos:start="945:36" pos:end="945:37"><expr pos:start="945:36" pos:end="945:37"><name pos:start="945:36" pos:end="945:37">rb</name></expr></argument>, <argument pos:start="945:40" pos:end="945:44"><expr pos:start="945:40" pos:end="945:44"><name pos:start="945:40" pos:end="945:44">islit</name></expr></argument>, <argument pos:start="945:47" pos:end="945:49"><expr pos:start="945:47" pos:end="945:49"><name pos:start="945:47" pos:end="945:49">lit</name></expr></argument>, <argument pos:start="945:52" pos:end="945:55"><expr pos:start="945:52" pos:end="945:55"><literal type="number" pos:start="945:52" pos:end="945:55">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="947:13" pos:end="947:18">break;</break>

        <case pos:start="949:9" pos:end="949:18">case <expr pos:start="949:14" pos:end="949:17"><literal type="number" pos:start="949:14" pos:end="949:17">0x5A</literal></expr>:</case>

            <comment type="block" pos:start="951:13" pos:end="951:23">/* EXTWH */</comment>

            <expr_stmt pos:start="953:13" pos:end="953:57"><expr pos:start="953:13" pos:end="953:56"><call pos:start="953:13" pos:end="953:56"><name pos:start="953:13" pos:end="953:21">gen_ext_h</name><argument_list pos:start="953:22" pos:end="953:56">(<argument pos:start="953:23" pos:end="953:25"><expr pos:start="953:23" pos:end="953:25"><name pos:start="953:23" pos:end="953:25">ctx</name></expr></argument>, <argument pos:start="953:28" pos:end="953:29"><expr pos:start="953:28" pos:end="953:29"><name pos:start="953:28" pos:end="953:29">vc</name></expr></argument>, <argument pos:start="953:32" pos:end="953:33"><expr pos:start="953:32" pos:end="953:33"><name pos:start="953:32" pos:end="953:33">va</name></expr></argument>, <argument pos:start="953:36" pos:end="953:37"><expr pos:start="953:36" pos:end="953:37"><name pos:start="953:36" pos:end="953:37">rb</name></expr></argument>, <argument pos:start="953:40" pos:end="953:44"><expr pos:start="953:40" pos:end="953:44"><name pos:start="953:40" pos:end="953:44">islit</name></expr></argument>, <argument pos:start="953:47" pos:end="953:49"><expr pos:start="953:47" pos:end="953:49"><name pos:start="953:47" pos:end="953:49">lit</name></expr></argument>, <argument pos:start="953:52" pos:end="953:55"><expr pos:start="953:52" pos:end="953:55"><literal type="number" pos:start="953:52" pos:end="953:55">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="955:13" pos:end="955:18">break;</break>

        <case pos:start="957:9" pos:end="957:18">case <expr pos:start="957:14" pos:end="957:17"><literal type="number" pos:start="957:14" pos:end="957:17">0x62</literal></expr>:</case>

            <comment type="block" pos:start="959:13" pos:end="959:23">/* MSKLH */</comment>

            <expr_stmt pos:start="961:13" pos:end="961:57"><expr pos:start="961:13" pos:end="961:56"><call pos:start="961:13" pos:end="961:56"><name pos:start="961:13" pos:end="961:21">gen_msk_h</name><argument_list pos:start="961:22" pos:end="961:56">(<argument pos:start="961:23" pos:end="961:25"><expr pos:start="961:23" pos:end="961:25"><name pos:start="961:23" pos:end="961:25">ctx</name></expr></argument>, <argument pos:start="961:28" pos:end="961:29"><expr pos:start="961:28" pos:end="961:29"><name pos:start="961:28" pos:end="961:29">vc</name></expr></argument>, <argument pos:start="961:32" pos:end="961:33"><expr pos:start="961:32" pos:end="961:33"><name pos:start="961:32" pos:end="961:33">va</name></expr></argument>, <argument pos:start="961:36" pos:end="961:37"><expr pos:start="961:36" pos:end="961:37"><name pos:start="961:36" pos:end="961:37">rb</name></expr></argument>, <argument pos:start="961:40" pos:end="961:44"><expr pos:start="961:40" pos:end="961:44"><name pos:start="961:40" pos:end="961:44">islit</name></expr></argument>, <argument pos:start="961:47" pos:end="961:49"><expr pos:start="961:47" pos:end="961:49"><name pos:start="961:47" pos:end="961:49">lit</name></expr></argument>, <argument pos:start="961:52" pos:end="961:55"><expr pos:start="961:52" pos:end="961:55"><literal type="number" pos:start="961:52" pos:end="961:55">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="963:13" pos:end="963:18">break;</break>

        <case pos:start="965:9" pos:end="965:18">case <expr pos:start="965:14" pos:end="965:17"><literal type="number" pos:start="965:14" pos:end="965:17">0x67</literal></expr>:</case>

            <comment type="block" pos:start="967:13" pos:end="967:23">/* INSLH */</comment>

            <expr_stmt pos:start="969:13" pos:end="969:57"><expr pos:start="969:13" pos:end="969:56"><call pos:start="969:13" pos:end="969:56"><name pos:start="969:13" pos:end="969:21">gen_ins_h</name><argument_list pos:start="969:22" pos:end="969:56">(<argument pos:start="969:23" pos:end="969:25"><expr pos:start="969:23" pos:end="969:25"><name pos:start="969:23" pos:end="969:25">ctx</name></expr></argument>, <argument pos:start="969:28" pos:end="969:29"><expr pos:start="969:28" pos:end="969:29"><name pos:start="969:28" pos:end="969:29">vc</name></expr></argument>, <argument pos:start="969:32" pos:end="969:33"><expr pos:start="969:32" pos:end="969:33"><name pos:start="969:32" pos:end="969:33">va</name></expr></argument>, <argument pos:start="969:36" pos:end="969:37"><expr pos:start="969:36" pos:end="969:37"><name pos:start="969:36" pos:end="969:37">rb</name></expr></argument>, <argument pos:start="969:40" pos:end="969:44"><expr pos:start="969:40" pos:end="969:44"><name pos:start="969:40" pos:end="969:44">islit</name></expr></argument>, <argument pos:start="969:47" pos:end="969:49"><expr pos:start="969:47" pos:end="969:49"><name pos:start="969:47" pos:end="969:49">lit</name></expr></argument>, <argument pos:start="969:52" pos:end="969:55"><expr pos:start="969:52" pos:end="969:55"><literal type="number" pos:start="969:52" pos:end="969:55">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="971:13" pos:end="971:18">break;</break>

        <case pos:start="973:9" pos:end="973:18">case <expr pos:start="973:14" pos:end="973:17"><literal type="number" pos:start="973:14" pos:end="973:17">0x6A</literal></expr>:</case>

            <comment type="block" pos:start="975:13" pos:end="975:23">/* EXTLH */</comment>

            <expr_stmt pos:start="977:13" pos:end="977:57"><expr pos:start="977:13" pos:end="977:56"><call pos:start="977:13" pos:end="977:56"><name pos:start="977:13" pos:end="977:21">gen_ext_h</name><argument_list pos:start="977:22" pos:end="977:56">(<argument pos:start="977:23" pos:end="977:25"><expr pos:start="977:23" pos:end="977:25"><name pos:start="977:23" pos:end="977:25">ctx</name></expr></argument>, <argument pos:start="977:28" pos:end="977:29"><expr pos:start="977:28" pos:end="977:29"><name pos:start="977:28" pos:end="977:29">vc</name></expr></argument>, <argument pos:start="977:32" pos:end="977:33"><expr pos:start="977:32" pos:end="977:33"><name pos:start="977:32" pos:end="977:33">va</name></expr></argument>, <argument pos:start="977:36" pos:end="977:37"><expr pos:start="977:36" pos:end="977:37"><name pos:start="977:36" pos:end="977:37">rb</name></expr></argument>, <argument pos:start="977:40" pos:end="977:44"><expr pos:start="977:40" pos:end="977:44"><name pos:start="977:40" pos:end="977:44">islit</name></expr></argument>, <argument pos:start="977:47" pos:end="977:49"><expr pos:start="977:47" pos:end="977:49"><name pos:start="977:47" pos:end="977:49">lit</name></expr></argument>, <argument pos:start="977:52" pos:end="977:55"><expr pos:start="977:52" pos:end="977:55"><literal type="number" pos:start="977:52" pos:end="977:55">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="979:13" pos:end="979:18">break;</break>

        <case pos:start="981:9" pos:end="981:18">case <expr pos:start="981:14" pos:end="981:17"><literal type="number" pos:start="981:14" pos:end="981:17">0x72</literal></expr>:</case>

            <comment type="block" pos:start="983:13" pos:end="983:23">/* MSKQH */</comment>

            <expr_stmt pos:start="985:13" pos:end="985:57"><expr pos:start="985:13" pos:end="985:56"><call pos:start="985:13" pos:end="985:56"><name pos:start="985:13" pos:end="985:21">gen_msk_h</name><argument_list pos:start="985:22" pos:end="985:56">(<argument pos:start="985:23" pos:end="985:25"><expr pos:start="985:23" pos:end="985:25"><name pos:start="985:23" pos:end="985:25">ctx</name></expr></argument>, <argument pos:start="985:28" pos:end="985:29"><expr pos:start="985:28" pos:end="985:29"><name pos:start="985:28" pos:end="985:29">vc</name></expr></argument>, <argument pos:start="985:32" pos:end="985:33"><expr pos:start="985:32" pos:end="985:33"><name pos:start="985:32" pos:end="985:33">va</name></expr></argument>, <argument pos:start="985:36" pos:end="985:37"><expr pos:start="985:36" pos:end="985:37"><name pos:start="985:36" pos:end="985:37">rb</name></expr></argument>, <argument pos:start="985:40" pos:end="985:44"><expr pos:start="985:40" pos:end="985:44"><name pos:start="985:40" pos:end="985:44">islit</name></expr></argument>, <argument pos:start="985:47" pos:end="985:49"><expr pos:start="985:47" pos:end="985:49"><name pos:start="985:47" pos:end="985:49">lit</name></expr></argument>, <argument pos:start="985:52" pos:end="985:55"><expr pos:start="985:52" pos:end="985:55"><literal type="number" pos:start="985:52" pos:end="985:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="987:13" pos:end="987:18">break;</break>

        <case pos:start="989:9" pos:end="989:18">case <expr pos:start="989:14" pos:end="989:17"><literal type="number" pos:start="989:14" pos:end="989:17">0x77</literal></expr>:</case>

            <comment type="block" pos:start="991:13" pos:end="991:23">/* INSQH */</comment>

            <expr_stmt pos:start="993:13" pos:end="993:57"><expr pos:start="993:13" pos:end="993:56"><call pos:start="993:13" pos:end="993:56"><name pos:start="993:13" pos:end="993:21">gen_ins_h</name><argument_list pos:start="993:22" pos:end="993:56">(<argument pos:start="993:23" pos:end="993:25"><expr pos:start="993:23" pos:end="993:25"><name pos:start="993:23" pos:end="993:25">ctx</name></expr></argument>, <argument pos:start="993:28" pos:end="993:29"><expr pos:start="993:28" pos:end="993:29"><name pos:start="993:28" pos:end="993:29">vc</name></expr></argument>, <argument pos:start="993:32" pos:end="993:33"><expr pos:start="993:32" pos:end="993:33"><name pos:start="993:32" pos:end="993:33">va</name></expr></argument>, <argument pos:start="993:36" pos:end="993:37"><expr pos:start="993:36" pos:end="993:37"><name pos:start="993:36" pos:end="993:37">rb</name></expr></argument>, <argument pos:start="993:40" pos:end="993:44"><expr pos:start="993:40" pos:end="993:44"><name pos:start="993:40" pos:end="993:44">islit</name></expr></argument>, <argument pos:start="993:47" pos:end="993:49"><expr pos:start="993:47" pos:end="993:49"><name pos:start="993:47" pos:end="993:49">lit</name></expr></argument>, <argument pos:start="993:52" pos:end="993:55"><expr pos:start="993:52" pos:end="993:55"><literal type="number" pos:start="993:52" pos:end="993:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="995:13" pos:end="995:18">break;</break>

        <case pos:start="997:9" pos:end="997:18">case <expr pos:start="997:14" pos:end="997:17"><literal type="number" pos:start="997:14" pos:end="997:17">0x7A</literal></expr>:</case>

            <comment type="block" pos:start="999:13" pos:end="999:23">/* EXTQH */</comment>

            <expr_stmt pos:start="1001:13" pos:end="1001:57"><expr pos:start="1001:13" pos:end="1001:56"><call pos:start="1001:13" pos:end="1001:56"><name pos:start="1001:13" pos:end="1001:21">gen_ext_h</name><argument_list pos:start="1001:22" pos:end="1001:56">(<argument pos:start="1001:23" pos:end="1001:25"><expr pos:start="1001:23" pos:end="1001:25"><name pos:start="1001:23" pos:end="1001:25">ctx</name></expr></argument>, <argument pos:start="1001:28" pos:end="1001:29"><expr pos:start="1001:28" pos:end="1001:29"><name pos:start="1001:28" pos:end="1001:29">vc</name></expr></argument>, <argument pos:start="1001:32" pos:end="1001:33"><expr pos:start="1001:32" pos:end="1001:33"><name pos:start="1001:32" pos:end="1001:33">va</name></expr></argument>, <argument pos:start="1001:36" pos:end="1001:37"><expr pos:start="1001:36" pos:end="1001:37"><name pos:start="1001:36" pos:end="1001:37">rb</name></expr></argument>, <argument pos:start="1001:40" pos:end="1001:44"><expr pos:start="1001:40" pos:end="1001:44"><name pos:start="1001:40" pos:end="1001:44">islit</name></expr></argument>, <argument pos:start="1001:47" pos:end="1001:49"><expr pos:start="1001:47" pos:end="1001:49"><name pos:start="1001:47" pos:end="1001:49">lit</name></expr></argument>, <argument pos:start="1001:52" pos:end="1001:55"><expr pos:start="1001:52" pos:end="1001:55"><literal type="number" pos:start="1001:52" pos:end="1001:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1003:13" pos:end="1003:18">break;</break>

        <default pos:start="1005:9" pos:end="1005:16">default:</default>

            <goto pos:start="1007:13" pos:end="1007:29">goto <name pos:start="1007:18" pos:end="1007:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1011:9" pos:end="1011:14">break;</break>



    <case pos:start="1015:5" pos:end="1015:14">case <expr pos:start="1015:10" pos:end="1015:13"><literal type="number" pos:start="1015:10" pos:end="1015:13">0x13</literal></expr>:</case>

        <expr_stmt pos:start="1017:9" pos:end="1017:31"><expr pos:start="1017:9" pos:end="1017:30"><name pos:start="1017:9" pos:end="1017:10">vc</name> <operator pos:start="1017:12" pos:end="1017:12">=</operator> <call pos:start="1017:14" pos:end="1017:30"><name pos:start="1017:14" pos:end="1017:21">dest_gpr</name><argument_list pos:start="1017:22" pos:end="1017:30">(<argument pos:start="1017:23" pos:end="1017:25"><expr pos:start="1017:23" pos:end="1017:25"><name pos:start="1017:23" pos:end="1017:25">ctx</name></expr></argument>, <argument pos:start="1017:28" pos:end="1017:29"><expr pos:start="1017:28" pos:end="1017:29"><name pos:start="1017:28" pos:end="1017:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1019:9" pos:end="1019:47"><expr pos:start="1019:9" pos:end="1019:46"><name pos:start="1019:9" pos:end="1019:10">vb</name> <operator pos:start="1019:12" pos:end="1019:12">=</operator> <call pos:start="1019:14" pos:end="1019:46"><name pos:start="1019:14" pos:end="1019:25">load_gpr_lit</name><argument_list pos:start="1019:26" pos:end="1019:46">(<argument pos:start="1019:27" pos:end="1019:29"><expr pos:start="1019:27" pos:end="1019:29"><name pos:start="1019:27" pos:end="1019:29">ctx</name></expr></argument>, <argument pos:start="1019:32" pos:end="1019:33"><expr pos:start="1019:32" pos:end="1019:33"><name pos:start="1019:32" pos:end="1019:33">rb</name></expr></argument>, <argument pos:start="1019:36" pos:end="1019:38"><expr pos:start="1019:36" pos:end="1019:38"><name pos:start="1019:36" pos:end="1019:38">lit</name></expr></argument>, <argument pos:start="1019:41" pos:end="1019:45"><expr pos:start="1019:41" pos:end="1019:45"><name pos:start="1019:41" pos:end="1019:45">islit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1021:9" pos:end="1021:31"><expr pos:start="1021:9" pos:end="1021:30"><name pos:start="1021:9" pos:end="1021:10">va</name> <operator pos:start="1021:12" pos:end="1021:12">=</operator> <call pos:start="1021:14" pos:end="1021:30"><name pos:start="1021:14" pos:end="1021:21">load_gpr</name><argument_list pos:start="1021:22" pos:end="1021:30">(<argument pos:start="1021:23" pos:end="1021:25"><expr pos:start="1021:23" pos:end="1021:25"><name pos:start="1021:23" pos:end="1021:25">ctx</name></expr></argument>, <argument pos:start="1021:28" pos:end="1021:29"><expr pos:start="1021:28" pos:end="1021:29"><name pos:start="1021:28" pos:end="1021:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1023:9" pos:end="1075:9">switch <condition pos:start="1023:16" pos:end="1023:20">(<expr pos:start="1023:17" pos:end="1023:19"><name pos:start="1023:17" pos:end="1023:19">fn7</name></expr>)</condition> <block pos:start="1023:22" pos:end="1075:9">{<block_content pos:start="1025:9" pos:end="1073:29">

        <case pos:start="1025:9" pos:end="1025:18">case <expr pos:start="1025:14" pos:end="1025:17"><literal type="number" pos:start="1025:14" pos:end="1025:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="1027:13" pos:end="1027:22">/* MULL */</comment>

            <expr_stmt pos:start="1029:13" pos:end="1029:40"><expr pos:start="1029:13" pos:end="1029:39"><call pos:start="1029:13" pos:end="1029:39"><name pos:start="1029:13" pos:end="1029:27">tcg_gen_mul_i64</name><argument_list pos:start="1029:28" pos:end="1029:39">(<argument pos:start="1029:29" pos:end="1029:30"><expr pos:start="1029:29" pos:end="1029:30"><name pos:start="1029:29" pos:end="1029:30">vc</name></expr></argument>, <argument pos:start="1029:33" pos:end="1029:34"><expr pos:start="1029:33" pos:end="1029:34"><name pos:start="1029:33" pos:end="1029:34">va</name></expr></argument>, <argument pos:start="1029:37" pos:end="1029:38"><expr pos:start="1029:37" pos:end="1029:38"><name pos:start="1029:37" pos:end="1029:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1031:13" pos:end="1031:39"><expr pos:start="1031:13" pos:end="1031:38"><call pos:start="1031:13" pos:end="1031:38"><name pos:start="1031:13" pos:end="1031:30">tcg_gen_ext32s_i64</name><argument_list pos:start="1031:31" pos:end="1031:38">(<argument pos:start="1031:32" pos:end="1031:33"><expr pos:start="1031:32" pos:end="1031:33"><name pos:start="1031:32" pos:end="1031:33">vc</name></expr></argument>, <argument pos:start="1031:36" pos:end="1031:37"><expr pos:start="1031:36" pos:end="1031:37"><name pos:start="1031:36" pos:end="1031:37">vc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1033:13" pos:end="1033:18">break;</break>

        <case pos:start="1035:9" pos:end="1035:18">case <expr pos:start="1035:14" pos:end="1035:17"><literal type="number" pos:start="1035:14" pos:end="1035:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="1037:13" pos:end="1037:22">/* MULQ */</comment>

            <expr_stmt pos:start="1039:13" pos:end="1039:40"><expr pos:start="1039:13" pos:end="1039:39"><call pos:start="1039:13" pos:end="1039:39"><name pos:start="1039:13" pos:end="1039:27">tcg_gen_mul_i64</name><argument_list pos:start="1039:28" pos:end="1039:39">(<argument pos:start="1039:29" pos:end="1039:30"><expr pos:start="1039:29" pos:end="1039:30"><name pos:start="1039:29" pos:end="1039:30">vc</name></expr></argument>, <argument pos:start="1039:33" pos:end="1039:34"><expr pos:start="1039:33" pos:end="1039:34"><name pos:start="1039:33" pos:end="1039:34">va</name></expr></argument>, <argument pos:start="1039:37" pos:end="1039:38"><expr pos:start="1039:37" pos:end="1039:38"><name pos:start="1039:37" pos:end="1039:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1041:13" pos:end="1041:18">break;</break>

        <case pos:start="1043:9" pos:end="1043:18">case <expr pos:start="1043:14" pos:end="1043:17"><literal type="number" pos:start="1043:14" pos:end="1043:17">0x30</literal></expr>:</case>

            <comment type="block" pos:start="1045:13" pos:end="1045:23">/* UMULH */</comment>

            <expr_stmt pos:start="1047:13" pos:end="1047:33"><expr pos:start="1047:13" pos:end="1047:32"><name pos:start="1047:13" pos:end="1047:15">tmp</name> <operator pos:start="1047:17" pos:end="1047:17">=</operator> <call pos:start="1047:19" pos:end="1047:32"><name pos:start="1047:19" pos:end="1047:30">tcg_temp_new</name><argument_list pos:start="1047:31" pos:end="1047:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1049:13" pos:end="1049:47"><expr pos:start="1049:13" pos:end="1049:46"><call pos:start="1049:13" pos:end="1049:46"><name pos:start="1049:13" pos:end="1049:29">tcg_gen_mulu2_i64</name><argument_list pos:start="1049:30" pos:end="1049:46">(<argument pos:start="1049:31" pos:end="1049:33"><expr pos:start="1049:31" pos:end="1049:33"><name pos:start="1049:31" pos:end="1049:33">tmp</name></expr></argument>, <argument pos:start="1049:36" pos:end="1049:37"><expr pos:start="1049:36" pos:end="1049:37"><name pos:start="1049:36" pos:end="1049:37">vc</name></expr></argument>, <argument pos:start="1049:40" pos:end="1049:41"><expr pos:start="1049:40" pos:end="1049:41"><name pos:start="1049:40" pos:end="1049:41">va</name></expr></argument>, <argument pos:start="1049:44" pos:end="1049:45"><expr pos:start="1049:44" pos:end="1049:45"><name pos:start="1049:44" pos:end="1049:45">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1051:13" pos:end="1051:31"><expr pos:start="1051:13" pos:end="1051:30"><call pos:start="1051:13" pos:end="1051:30"><name pos:start="1051:13" pos:end="1051:25">tcg_temp_free</name><argument_list pos:start="1051:26" pos:end="1051:30">(<argument pos:start="1051:27" pos:end="1051:29"><expr pos:start="1051:27" pos:end="1051:29"><name pos:start="1051:27" pos:end="1051:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1053:13" pos:end="1053:18">break;</break>

        <case pos:start="1055:9" pos:end="1055:18">case <expr pos:start="1055:14" pos:end="1055:17"><literal type="number" pos:start="1055:14" pos:end="1055:17">0x40</literal></expr>:</case>

            <comment type="block" pos:start="1057:13" pos:end="1057:24">/* MULL/V */</comment>

            <expr_stmt pos:start="1059:13" pos:end="1059:50"><expr pos:start="1059:13" pos:end="1059:49"><call pos:start="1059:13" pos:end="1059:49"><name pos:start="1059:13" pos:end="1059:28">gen_helper_mullv</name><argument_list pos:start="1059:29" pos:end="1059:49">(<argument pos:start="1059:30" pos:end="1059:31"><expr pos:start="1059:30" pos:end="1059:31"><name pos:start="1059:30" pos:end="1059:31">vc</name></expr></argument>, <argument pos:start="1059:34" pos:end="1059:40"><expr pos:start="1059:34" pos:end="1059:40"><name pos:start="1059:34" pos:end="1059:40">cpu_env</name></expr></argument>, <argument pos:start="1059:43" pos:end="1059:44"><expr pos:start="1059:43" pos:end="1059:44"><name pos:start="1059:43" pos:end="1059:44">va</name></expr></argument>, <argument pos:start="1059:47" pos:end="1059:48"><expr pos:start="1059:47" pos:end="1059:48"><name pos:start="1059:47" pos:end="1059:48">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1061:13" pos:end="1061:18">break;</break>

        <case pos:start="1063:9" pos:end="1063:18">case <expr pos:start="1063:14" pos:end="1063:17"><literal type="number" pos:start="1063:14" pos:end="1063:17">0x60</literal></expr>:</case>

            <comment type="block" pos:start="1065:13" pos:end="1065:24">/* MULQ/V */</comment>

            <expr_stmt pos:start="1067:13" pos:end="1067:50"><expr pos:start="1067:13" pos:end="1067:49"><call pos:start="1067:13" pos:end="1067:49"><name pos:start="1067:13" pos:end="1067:28">gen_helper_mulqv</name><argument_list pos:start="1067:29" pos:end="1067:49">(<argument pos:start="1067:30" pos:end="1067:31"><expr pos:start="1067:30" pos:end="1067:31"><name pos:start="1067:30" pos:end="1067:31">vc</name></expr></argument>, <argument pos:start="1067:34" pos:end="1067:40"><expr pos:start="1067:34" pos:end="1067:40"><name pos:start="1067:34" pos:end="1067:40">cpu_env</name></expr></argument>, <argument pos:start="1067:43" pos:end="1067:44"><expr pos:start="1067:43" pos:end="1067:44"><name pos:start="1067:43" pos:end="1067:44">va</name></expr></argument>, <argument pos:start="1067:47" pos:end="1067:48"><expr pos:start="1067:47" pos:end="1067:48"><name pos:start="1067:47" pos:end="1067:48">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1069:13" pos:end="1069:18">break;</break>

        <default pos:start="1071:9" pos:end="1071:16">default:</default>

            <goto pos:start="1073:13" pos:end="1073:29">goto <name pos:start="1073:18" pos:end="1073:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1077:9" pos:end="1077:14">break;</break>



    <case pos:start="1081:5" pos:end="1081:14">case <expr pos:start="1081:10" pos:end="1081:13"><literal type="number" pos:start="1081:10" pos:end="1081:13">0x14</literal></expr>:</case>

        <expr_stmt pos:start="1083:9" pos:end="1083:44"><expr pos:start="1083:9" pos:end="1083:43"><call pos:start="1083:9" pos:end="1083:43"><name pos:start="1083:9" pos:end="1083:23">REQUIRE_TB_FLAG</name><argument_list pos:start="1083:24" pos:end="1083:43">(<argument pos:start="1083:25" pos:end="1083:42"><expr pos:start="1083:25" pos:end="1083:42"><name pos:start="1083:25" pos:end="1083:42">TB_FLAGS_AMASK_FIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1085:9" pos:end="1085:31"><expr pos:start="1085:9" pos:end="1085:30"><name pos:start="1085:9" pos:end="1085:10">vc</name> <operator pos:start="1085:12" pos:end="1085:12">=</operator> <call pos:start="1085:14" pos:end="1085:30"><name pos:start="1085:14" pos:end="1085:21">dest_fpr</name><argument_list pos:start="1085:22" pos:end="1085:30">(<argument pos:start="1085:23" pos:end="1085:25"><expr pos:start="1085:23" pos:end="1085:25"><name pos:start="1085:23" pos:end="1085:25">ctx</name></expr></argument>, <argument pos:start="1085:28" pos:end="1085:29"><expr pos:start="1085:28" pos:end="1085:29"><name pos:start="1085:28" pos:end="1085:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1087:9" pos:end="1185:9">switch <condition pos:start="1087:16" pos:end="1087:21">(<expr pos:start="1087:17" pos:end="1087:20"><name pos:start="1087:17" pos:end="1087:20">fpfn</name></expr>)</condition> <block pos:start="1087:23" pos:end="1185:9">{<block_content pos:start="1089:9" pos:end="1183:29"> <comment type="block" pos:start="1087:25" pos:end="1087:41">/* fn11 &amp; 0x3F */</comment>

        <case pos:start="1089:9" pos:end="1089:18">case <expr pos:start="1089:14" pos:end="1089:17"><literal type="number" pos:start="1089:14" pos:end="1089:17">0x04</literal></expr>:</case>

            <comment type="block" pos:start="1091:13" pos:end="1091:23">/* ITOFS */</comment>

            <expr_stmt pos:start="1093:13" pos:end="1093:31"><expr pos:start="1093:13" pos:end="1093:30"><call pos:start="1093:13" pos:end="1093:30"><name pos:start="1093:13" pos:end="1093:26">REQUIRE_REG_31</name><argument_list pos:start="1093:27" pos:end="1093:30">(<argument pos:start="1093:28" pos:end="1093:29"><expr pos:start="1093:28" pos:end="1093:29"><name pos:start="1093:28" pos:end="1093:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1095:13" pos:end="1095:37"><expr pos:start="1095:13" pos:end="1095:36"><name pos:start="1095:13" pos:end="1095:15">t32</name> <operator pos:start="1095:17" pos:end="1095:17">=</operator> <call pos:start="1095:19" pos:end="1095:36"><name pos:start="1095:19" pos:end="1095:34">tcg_temp_new_i32</name><argument_list pos:start="1095:35" pos:end="1095:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1097:13" pos:end="1097:35"><expr pos:start="1097:13" pos:end="1097:34"><name pos:start="1097:13" pos:end="1097:14">va</name> <operator pos:start="1097:16" pos:end="1097:16">=</operator> <call pos:start="1097:18" pos:end="1097:34"><name pos:start="1097:18" pos:end="1097:25">load_gpr</name><argument_list pos:start="1097:26" pos:end="1097:34">(<argument pos:start="1097:27" pos:end="1097:29"><expr pos:start="1097:27" pos:end="1097:29"><name pos:start="1097:27" pos:end="1097:29">ctx</name></expr></argument>, <argument pos:start="1097:32" pos:end="1097:33"><expr pos:start="1097:32" pos:end="1097:33"><name pos:start="1097:32" pos:end="1097:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1099:13" pos:end="1099:43"><expr pos:start="1099:13" pos:end="1099:42"><call pos:start="1099:13" pos:end="1099:42"><name pos:start="1099:13" pos:end="1099:33">tcg_gen_trunc_i64_i32</name><argument_list pos:start="1099:34" pos:end="1099:42">(<argument pos:start="1099:35" pos:end="1099:37"><expr pos:start="1099:35" pos:end="1099:37"><name pos:start="1099:35" pos:end="1099:37">t32</name></expr></argument>, <argument pos:start="1099:40" pos:end="1099:41"><expr pos:start="1099:40" pos:end="1099:41"><name pos:start="1099:40" pos:end="1099:41">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1101:13" pos:end="1101:44"><expr pos:start="1101:13" pos:end="1101:43"><call pos:start="1101:13" pos:end="1101:43"><name pos:start="1101:13" pos:end="1101:34">gen_helper_memory_to_s</name><argument_list pos:start="1101:35" pos:end="1101:43">(<argument pos:start="1101:36" pos:end="1101:37"><expr pos:start="1101:36" pos:end="1101:37"><name pos:start="1101:36" pos:end="1101:37">vc</name></expr></argument>, <argument pos:start="1101:40" pos:end="1101:42"><expr pos:start="1101:40" pos:end="1101:42"><name pos:start="1101:40" pos:end="1101:42">t32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1103:13" pos:end="1103:35"><expr pos:start="1103:13" pos:end="1103:34"><call pos:start="1103:13" pos:end="1103:34"><name pos:start="1103:13" pos:end="1103:29">tcg_temp_free_i32</name><argument_list pos:start="1103:30" pos:end="1103:34">(<argument pos:start="1103:31" pos:end="1103:33"><expr pos:start="1103:31" pos:end="1103:33"><name pos:start="1103:31" pos:end="1103:33">t32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1105:13" pos:end="1105:18">break;</break>

        <case pos:start="1107:9" pos:end="1107:18">case <expr pos:start="1107:14" pos:end="1107:17"><literal type="number" pos:start="1107:14" pos:end="1107:17">0x0A</literal></expr>:</case>

            <comment type="block" pos:start="1109:13" pos:end="1109:23">/* SQRTF */</comment>

            <expr_stmt pos:start="1111:13" pos:end="1111:31"><expr pos:start="1111:13" pos:end="1111:30"><call pos:start="1111:13" pos:end="1111:30"><name pos:start="1111:13" pos:end="1111:26">REQUIRE_REG_31</name><argument_list pos:start="1111:27" pos:end="1111:30">(<argument pos:start="1111:28" pos:end="1111:29"><expr pos:start="1111:28" pos:end="1111:29"><name pos:start="1111:28" pos:end="1111:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1113:13" pos:end="1113:35"><expr pos:start="1113:13" pos:end="1113:34"><name pos:start="1113:13" pos:end="1113:14">vb</name> <operator pos:start="1113:16" pos:end="1113:16">=</operator> <call pos:start="1113:18" pos:end="1113:34"><name pos:start="1113:18" pos:end="1113:25">load_fpr</name><argument_list pos:start="1113:26" pos:end="1113:34">(<argument pos:start="1113:27" pos:end="1113:29"><expr pos:start="1113:27" pos:end="1113:29"><name pos:start="1113:27" pos:end="1113:29">ctx</name></expr></argument>, <argument pos:start="1113:32" pos:end="1113:33"><expr pos:start="1113:32" pos:end="1113:33"><name pos:start="1113:32" pos:end="1113:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1115:13" pos:end="1115:46"><expr pos:start="1115:13" pos:end="1115:45"><call pos:start="1115:13" pos:end="1115:45"><name pos:start="1115:13" pos:end="1115:28">gen_helper_sqrtf</name><argument_list pos:start="1115:29" pos:end="1115:45">(<argument pos:start="1115:30" pos:end="1115:31"><expr pos:start="1115:30" pos:end="1115:31"><name pos:start="1115:30" pos:end="1115:31">vc</name></expr></argument>, <argument pos:start="1115:34" pos:end="1115:40"><expr pos:start="1115:34" pos:end="1115:40"><name pos:start="1115:34" pos:end="1115:40">cpu_env</name></expr></argument>, <argument pos:start="1115:43" pos:end="1115:44"><expr pos:start="1115:43" pos:end="1115:44"><name pos:start="1115:43" pos:end="1115:44">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1117:13" pos:end="1117:18">break;</break>

        <case pos:start="1119:9" pos:end="1119:18">case <expr pos:start="1119:14" pos:end="1119:17"><literal type="number" pos:start="1119:14" pos:end="1119:17">0x0B</literal></expr>:</case>

            <comment type="block" pos:start="1121:13" pos:end="1121:23">/* SQRTS */</comment>

            <expr_stmt pos:start="1123:13" pos:end="1123:31"><expr pos:start="1123:13" pos:end="1123:30"><call pos:start="1123:13" pos:end="1123:30"><name pos:start="1123:13" pos:end="1123:26">REQUIRE_REG_31</name><argument_list pos:start="1123:27" pos:end="1123:30">(<argument pos:start="1123:28" pos:end="1123:29"><expr pos:start="1123:28" pos:end="1123:29"><name pos:start="1123:28" pos:end="1123:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1125:13" pos:end="1125:41"><expr pos:start="1125:13" pos:end="1125:40"><call pos:start="1125:13" pos:end="1125:40"><name pos:start="1125:13" pos:end="1125:21">gen_sqrts</name><argument_list pos:start="1125:22" pos:end="1125:40">(<argument pos:start="1125:23" pos:end="1125:25"><expr pos:start="1125:23" pos:end="1125:25"><name pos:start="1125:23" pos:end="1125:25">ctx</name></expr></argument>, <argument pos:start="1125:28" pos:end="1125:29"><expr pos:start="1125:28" pos:end="1125:29"><name pos:start="1125:28" pos:end="1125:29">rb</name></expr></argument>, <argument pos:start="1125:32" pos:end="1125:33"><expr pos:start="1125:32" pos:end="1125:33"><name pos:start="1125:32" pos:end="1125:33">rc</name></expr></argument>, <argument pos:start="1125:36" pos:end="1125:39"><expr pos:start="1125:36" pos:end="1125:39"><name pos:start="1125:36" pos:end="1125:39">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1127:13" pos:end="1127:18">break;</break>

        <case pos:start="1129:9" pos:end="1129:18">case <expr pos:start="1129:14" pos:end="1129:17"><literal type="number" pos:start="1129:14" pos:end="1129:17">0x14</literal></expr>:</case>

            <comment type="block" pos:start="1131:13" pos:end="1131:23">/* ITOFF */</comment>

            <expr_stmt pos:start="1133:13" pos:end="1133:31"><expr pos:start="1133:13" pos:end="1133:30"><call pos:start="1133:13" pos:end="1133:30"><name pos:start="1133:13" pos:end="1133:26">REQUIRE_REG_31</name><argument_list pos:start="1133:27" pos:end="1133:30">(<argument pos:start="1133:28" pos:end="1133:29"><expr pos:start="1133:28" pos:end="1133:29"><name pos:start="1133:28" pos:end="1133:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1135:13" pos:end="1135:37"><expr pos:start="1135:13" pos:end="1135:36"><name pos:start="1135:13" pos:end="1135:15">t32</name> <operator pos:start="1135:17" pos:end="1135:17">=</operator> <call pos:start="1135:19" pos:end="1135:36"><name pos:start="1135:19" pos:end="1135:34">tcg_temp_new_i32</name><argument_list pos:start="1135:35" pos:end="1135:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1137:13" pos:end="1137:35"><expr pos:start="1137:13" pos:end="1137:34"><name pos:start="1137:13" pos:end="1137:14">va</name> <operator pos:start="1137:16" pos:end="1137:16">=</operator> <call pos:start="1137:18" pos:end="1137:34"><name pos:start="1137:18" pos:end="1137:25">load_gpr</name><argument_list pos:start="1137:26" pos:end="1137:34">(<argument pos:start="1137:27" pos:end="1137:29"><expr pos:start="1137:27" pos:end="1137:29"><name pos:start="1137:27" pos:end="1137:29">ctx</name></expr></argument>, <argument pos:start="1137:32" pos:end="1137:33"><expr pos:start="1137:32" pos:end="1137:33"><name pos:start="1137:32" pos:end="1137:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1139:13" pos:end="1139:43"><expr pos:start="1139:13" pos:end="1139:42"><call pos:start="1139:13" pos:end="1139:42"><name pos:start="1139:13" pos:end="1139:33">tcg_gen_trunc_i64_i32</name><argument_list pos:start="1139:34" pos:end="1139:42">(<argument pos:start="1139:35" pos:end="1139:37"><expr pos:start="1139:35" pos:end="1139:37"><name pos:start="1139:35" pos:end="1139:37">t32</name></expr></argument>, <argument pos:start="1139:40" pos:end="1139:41"><expr pos:start="1139:40" pos:end="1139:41"><name pos:start="1139:40" pos:end="1139:41">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1141:13" pos:end="1141:44"><expr pos:start="1141:13" pos:end="1141:43"><call pos:start="1141:13" pos:end="1141:43"><name pos:start="1141:13" pos:end="1141:34">gen_helper_memory_to_f</name><argument_list pos:start="1141:35" pos:end="1141:43">(<argument pos:start="1141:36" pos:end="1141:37"><expr pos:start="1141:36" pos:end="1141:37"><name pos:start="1141:36" pos:end="1141:37">vc</name></expr></argument>, <argument pos:start="1141:40" pos:end="1141:42"><expr pos:start="1141:40" pos:end="1141:42"><name pos:start="1141:40" pos:end="1141:42">t32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1143:13" pos:end="1143:35"><expr pos:start="1143:13" pos:end="1143:34"><call pos:start="1143:13" pos:end="1143:34"><name pos:start="1143:13" pos:end="1143:29">tcg_temp_free_i32</name><argument_list pos:start="1143:30" pos:end="1143:34">(<argument pos:start="1143:31" pos:end="1143:33"><expr pos:start="1143:31" pos:end="1143:33"><name pos:start="1143:31" pos:end="1143:33">t32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1145:13" pos:end="1145:18">break;</break>

        <case pos:start="1147:9" pos:end="1147:18">case <expr pos:start="1147:14" pos:end="1147:17"><literal type="number" pos:start="1147:14" pos:end="1147:17">0x24</literal></expr>:</case>

            <comment type="block" pos:start="1149:13" pos:end="1149:23">/* ITOFT */</comment>

            <expr_stmt pos:start="1151:13" pos:end="1151:31"><expr pos:start="1151:13" pos:end="1151:30"><call pos:start="1151:13" pos:end="1151:30"><name pos:start="1151:13" pos:end="1151:26">REQUIRE_REG_31</name><argument_list pos:start="1151:27" pos:end="1151:30">(<argument pos:start="1151:28" pos:end="1151:29"><expr pos:start="1151:28" pos:end="1151:29"><name pos:start="1151:28" pos:end="1151:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1153:13" pos:end="1153:35"><expr pos:start="1153:13" pos:end="1153:34"><name pos:start="1153:13" pos:end="1153:14">va</name> <operator pos:start="1153:16" pos:end="1153:16">=</operator> <call pos:start="1153:18" pos:end="1153:34"><name pos:start="1153:18" pos:end="1153:25">load_gpr</name><argument_list pos:start="1153:26" pos:end="1153:34">(<argument pos:start="1153:27" pos:end="1153:29"><expr pos:start="1153:27" pos:end="1153:29"><name pos:start="1153:27" pos:end="1153:29">ctx</name></expr></argument>, <argument pos:start="1153:32" pos:end="1153:33"><expr pos:start="1153:32" pos:end="1153:33"><name pos:start="1153:32" pos:end="1153:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1155:13" pos:end="1155:36"><expr pos:start="1155:13" pos:end="1155:35"><call pos:start="1155:13" pos:end="1155:35"><name pos:start="1155:13" pos:end="1155:27">tcg_gen_mov_i64</name><argument_list pos:start="1155:28" pos:end="1155:35">(<argument pos:start="1155:29" pos:end="1155:30"><expr pos:start="1155:29" pos:end="1155:30"><name pos:start="1155:29" pos:end="1155:30">vc</name></expr></argument>, <argument pos:start="1155:33" pos:end="1155:34"><expr pos:start="1155:33" pos:end="1155:34"><name pos:start="1155:33" pos:end="1155:34">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1157:13" pos:end="1157:18">break;</break>

        <case pos:start="1159:9" pos:end="1159:18">case <expr pos:start="1159:14" pos:end="1159:17"><literal type="number" pos:start="1159:14" pos:end="1159:17">0x2A</literal></expr>:</case>

            <comment type="block" pos:start="1161:13" pos:end="1161:23">/* SQRTG */</comment>

            <expr_stmt pos:start="1163:13" pos:end="1163:31"><expr pos:start="1163:13" pos:end="1163:30"><call pos:start="1163:13" pos:end="1163:30"><name pos:start="1163:13" pos:end="1163:26">REQUIRE_REG_31</name><argument_list pos:start="1163:27" pos:end="1163:30">(<argument pos:start="1163:28" pos:end="1163:29"><expr pos:start="1163:28" pos:end="1163:29"><name pos:start="1163:28" pos:end="1163:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1165:13" pos:end="1165:35"><expr pos:start="1165:13" pos:end="1165:34"><name pos:start="1165:13" pos:end="1165:14">vb</name> <operator pos:start="1165:16" pos:end="1165:16">=</operator> <call pos:start="1165:18" pos:end="1165:34"><name pos:start="1165:18" pos:end="1165:25">load_fpr</name><argument_list pos:start="1165:26" pos:end="1165:34">(<argument pos:start="1165:27" pos:end="1165:29"><expr pos:start="1165:27" pos:end="1165:29"><name pos:start="1165:27" pos:end="1165:29">ctx</name></expr></argument>, <argument pos:start="1165:32" pos:end="1165:33"><expr pos:start="1165:32" pos:end="1165:33"><name pos:start="1165:32" pos:end="1165:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1167:13" pos:end="1167:46"><expr pos:start="1167:13" pos:end="1167:45"><call pos:start="1167:13" pos:end="1167:45"><name pos:start="1167:13" pos:end="1167:28">gen_helper_sqrtg</name><argument_list pos:start="1167:29" pos:end="1167:45">(<argument pos:start="1167:30" pos:end="1167:31"><expr pos:start="1167:30" pos:end="1167:31"><name pos:start="1167:30" pos:end="1167:31">vc</name></expr></argument>, <argument pos:start="1167:34" pos:end="1167:40"><expr pos:start="1167:34" pos:end="1167:40"><name pos:start="1167:34" pos:end="1167:40">cpu_env</name></expr></argument>, <argument pos:start="1167:43" pos:end="1167:44"><expr pos:start="1167:43" pos:end="1167:44"><name pos:start="1167:43" pos:end="1167:44">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1169:13" pos:end="1169:18">break;</break>

        <case pos:start="1171:9" pos:end="1171:19">case <expr pos:start="1171:14" pos:end="1171:18"><literal type="number" pos:start="1171:14" pos:end="1171:18">0x02B</literal></expr>:</case>

            <comment type="block" pos:start="1173:13" pos:end="1173:23">/* SQRTT */</comment>

            <expr_stmt pos:start="1175:13" pos:end="1175:31"><expr pos:start="1175:13" pos:end="1175:30"><call pos:start="1175:13" pos:end="1175:30"><name pos:start="1175:13" pos:end="1175:26">REQUIRE_REG_31</name><argument_list pos:start="1175:27" pos:end="1175:30">(<argument pos:start="1175:28" pos:end="1175:29"><expr pos:start="1175:28" pos:end="1175:29"><name pos:start="1175:28" pos:end="1175:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1177:13" pos:end="1177:41"><expr pos:start="1177:13" pos:end="1177:40"><call pos:start="1177:13" pos:end="1177:40"><name pos:start="1177:13" pos:end="1177:21">gen_sqrtt</name><argument_list pos:start="1177:22" pos:end="1177:40">(<argument pos:start="1177:23" pos:end="1177:25"><expr pos:start="1177:23" pos:end="1177:25"><name pos:start="1177:23" pos:end="1177:25">ctx</name></expr></argument>, <argument pos:start="1177:28" pos:end="1177:29"><expr pos:start="1177:28" pos:end="1177:29"><name pos:start="1177:28" pos:end="1177:29">rb</name></expr></argument>, <argument pos:start="1177:32" pos:end="1177:33"><expr pos:start="1177:32" pos:end="1177:33"><name pos:start="1177:32" pos:end="1177:33">rc</name></expr></argument>, <argument pos:start="1177:36" pos:end="1177:39"><expr pos:start="1177:36" pos:end="1177:39"><name pos:start="1177:36" pos:end="1177:39">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1179:13" pos:end="1179:18">break;</break>

        <default pos:start="1181:9" pos:end="1181:16">default:</default>

            <goto pos:start="1183:13" pos:end="1183:29">goto <name pos:start="1183:18" pos:end="1183:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1187:9" pos:end="1187:14">break;</break>



    <case pos:start="1191:5" pos:end="1191:14">case <expr pos:start="1191:10" pos:end="1191:13"><literal type="number" pos:start="1191:10" pos:end="1191:13">0x15</literal></expr>:</case>

        <comment type="block" pos:start="1193:9" pos:end="1193:32">/* VAX floating point */</comment>

        <comment type="block" pos:start="1195:9" pos:end="1195:57">/* XXX: rounding mode and trap are ignored (!) */</comment>

        <expr_stmt pos:start="1197:9" pos:end="1197:31"><expr pos:start="1197:9" pos:end="1197:30"><name pos:start="1197:9" pos:end="1197:10">vc</name> <operator pos:start="1197:12" pos:end="1197:12">=</operator> <call pos:start="1197:14" pos:end="1197:30"><name pos:start="1197:14" pos:end="1197:21">dest_fpr</name><argument_list pos:start="1197:22" pos:end="1197:30">(<argument pos:start="1197:23" pos:end="1197:25"><expr pos:start="1197:23" pos:end="1197:25"><name pos:start="1197:23" pos:end="1197:25">ctx</name></expr></argument>, <argument pos:start="1197:28" pos:end="1197:29"><expr pos:start="1197:28" pos:end="1197:29"><name pos:start="1197:28" pos:end="1197:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1199:9" pos:end="1199:31"><expr pos:start="1199:9" pos:end="1199:30"><name pos:start="1199:9" pos:end="1199:10">vb</name> <operator pos:start="1199:12" pos:end="1199:12">=</operator> <call pos:start="1199:14" pos:end="1199:30"><name pos:start="1199:14" pos:end="1199:21">load_fpr</name><argument_list pos:start="1199:22" pos:end="1199:30">(<argument pos:start="1199:23" pos:end="1199:25"><expr pos:start="1199:23" pos:end="1199:25"><name pos:start="1199:23" pos:end="1199:25">ctx</name></expr></argument>, <argument pos:start="1199:28" pos:end="1199:29"><expr pos:start="1199:28" pos:end="1199:29"><name pos:start="1199:28" pos:end="1199:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1201:9" pos:end="1201:31"><expr pos:start="1201:9" pos:end="1201:30"><name pos:start="1201:9" pos:end="1201:10">va</name> <operator pos:start="1201:12" pos:end="1201:12">=</operator> <call pos:start="1201:14" pos:end="1201:30"><name pos:start="1201:14" pos:end="1201:21">load_fpr</name><argument_list pos:start="1201:22" pos:end="1201:30">(<argument pos:start="1201:23" pos:end="1201:25"><expr pos:start="1201:23" pos:end="1201:25"><name pos:start="1201:23" pos:end="1201:25">ctx</name></expr></argument>, <argument pos:start="1201:28" pos:end="1201:29"><expr pos:start="1201:28" pos:end="1201:29"><name pos:start="1201:28" pos:end="1201:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1203:9" pos:end="1353:9">switch <condition pos:start="1203:16" pos:end="1203:21">(<expr pos:start="1203:17" pos:end="1203:20"><name pos:start="1203:17" pos:end="1203:20">fpfn</name></expr>)</condition> <block pos:start="1203:23" pos:end="1353:9">{<block_content pos:start="1205:9" pos:end="1351:29"> <comment type="block" pos:start="1203:25" pos:end="1203:41">/* fn11 &amp; 0x3F */</comment>

        <case pos:start="1205:9" pos:end="1205:18">case <expr pos:start="1205:14" pos:end="1205:17"><literal type="number" pos:start="1205:14" pos:end="1205:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="1207:13" pos:end="1207:22">/* ADDF */</comment>

            <expr_stmt pos:start="1209:13" pos:end="1209:49"><expr pos:start="1209:13" pos:end="1209:48"><call pos:start="1209:13" pos:end="1209:48"><name pos:start="1209:13" pos:end="1209:27">gen_helper_addf</name><argument_list pos:start="1209:28" pos:end="1209:48">(<argument pos:start="1209:29" pos:end="1209:30"><expr pos:start="1209:29" pos:end="1209:30"><name pos:start="1209:29" pos:end="1209:30">vc</name></expr></argument>, <argument pos:start="1209:33" pos:end="1209:39"><expr pos:start="1209:33" pos:end="1209:39"><name pos:start="1209:33" pos:end="1209:39">cpu_env</name></expr></argument>, <argument pos:start="1209:42" pos:end="1209:43"><expr pos:start="1209:42" pos:end="1209:43"><name pos:start="1209:42" pos:end="1209:43">va</name></expr></argument>, <argument pos:start="1209:46" pos:end="1209:47"><expr pos:start="1209:46" pos:end="1209:47"><name pos:start="1209:46" pos:end="1209:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1211:13" pos:end="1211:18">break;</break>

        <case pos:start="1213:9" pos:end="1213:18">case <expr pos:start="1213:14" pos:end="1213:17"><literal type="number" pos:start="1213:14" pos:end="1213:17">0x01</literal></expr>:</case>

            <comment type="block" pos:start="1215:13" pos:end="1215:22">/* SUBF */</comment>

            <expr_stmt pos:start="1217:13" pos:end="1217:49"><expr pos:start="1217:13" pos:end="1217:48"><call pos:start="1217:13" pos:end="1217:48"><name pos:start="1217:13" pos:end="1217:27">gen_helper_subf</name><argument_list pos:start="1217:28" pos:end="1217:48">(<argument pos:start="1217:29" pos:end="1217:30"><expr pos:start="1217:29" pos:end="1217:30"><name pos:start="1217:29" pos:end="1217:30">vc</name></expr></argument>, <argument pos:start="1217:33" pos:end="1217:39"><expr pos:start="1217:33" pos:end="1217:39"><name pos:start="1217:33" pos:end="1217:39">cpu_env</name></expr></argument>, <argument pos:start="1217:42" pos:end="1217:43"><expr pos:start="1217:42" pos:end="1217:43"><name pos:start="1217:42" pos:end="1217:43">va</name></expr></argument>, <argument pos:start="1217:46" pos:end="1217:47"><expr pos:start="1217:46" pos:end="1217:47"><name pos:start="1217:46" pos:end="1217:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1219:13" pos:end="1219:18">break;</break>

        <case pos:start="1221:9" pos:end="1221:18">case <expr pos:start="1221:14" pos:end="1221:17"><literal type="number" pos:start="1221:14" pos:end="1221:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="1223:13" pos:end="1223:22">/* MULF */</comment>

            <expr_stmt pos:start="1225:13" pos:end="1225:49"><expr pos:start="1225:13" pos:end="1225:48"><call pos:start="1225:13" pos:end="1225:48"><name pos:start="1225:13" pos:end="1225:27">gen_helper_mulf</name><argument_list pos:start="1225:28" pos:end="1225:48">(<argument pos:start="1225:29" pos:end="1225:30"><expr pos:start="1225:29" pos:end="1225:30"><name pos:start="1225:29" pos:end="1225:30">vc</name></expr></argument>, <argument pos:start="1225:33" pos:end="1225:39"><expr pos:start="1225:33" pos:end="1225:39"><name pos:start="1225:33" pos:end="1225:39">cpu_env</name></expr></argument>, <argument pos:start="1225:42" pos:end="1225:43"><expr pos:start="1225:42" pos:end="1225:43"><name pos:start="1225:42" pos:end="1225:43">va</name></expr></argument>, <argument pos:start="1225:46" pos:end="1225:47"><expr pos:start="1225:46" pos:end="1225:47"><name pos:start="1225:46" pos:end="1225:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1227:13" pos:end="1227:18">break;</break>

        <case pos:start="1229:9" pos:end="1229:18">case <expr pos:start="1229:14" pos:end="1229:17"><literal type="number" pos:start="1229:14" pos:end="1229:17">0x03</literal></expr>:</case>

            <comment type="block" pos:start="1231:13" pos:end="1231:22">/* DIVF */</comment>

            <expr_stmt pos:start="1233:13" pos:end="1233:49"><expr pos:start="1233:13" pos:end="1233:48"><call pos:start="1233:13" pos:end="1233:48"><name pos:start="1233:13" pos:end="1233:27">gen_helper_divf</name><argument_list pos:start="1233:28" pos:end="1233:48">(<argument pos:start="1233:29" pos:end="1233:30"><expr pos:start="1233:29" pos:end="1233:30"><name pos:start="1233:29" pos:end="1233:30">vc</name></expr></argument>, <argument pos:start="1233:33" pos:end="1233:39"><expr pos:start="1233:33" pos:end="1233:39"><name pos:start="1233:33" pos:end="1233:39">cpu_env</name></expr></argument>, <argument pos:start="1233:42" pos:end="1233:43"><expr pos:start="1233:42" pos:end="1233:43"><name pos:start="1233:42" pos:end="1233:43">va</name></expr></argument>, <argument pos:start="1233:46" pos:end="1233:47"><expr pos:start="1233:46" pos:end="1233:47"><name pos:start="1233:46" pos:end="1233:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1235:13" pos:end="1235:18">break;</break>

        <case pos:start="1237:9" pos:end="1237:18">case <expr pos:start="1237:14" pos:end="1237:17"><literal type="number" pos:start="1237:14" pos:end="1237:17">0x1E</literal></expr>:</case>

            <comment type="block" pos:start="1239:13" pos:end="1239:31">/* CVTDG -- TODO */</comment>

            <expr_stmt pos:start="1241:13" pos:end="1241:31"><expr pos:start="1241:13" pos:end="1241:30"><call pos:start="1241:13" pos:end="1241:30"><name pos:start="1241:13" pos:end="1241:26">REQUIRE_REG_31</name><argument_list pos:start="1241:27" pos:end="1241:30">(<argument pos:start="1241:28" pos:end="1241:29"><expr pos:start="1241:28" pos:end="1241:29"><name pos:start="1241:28" pos:end="1241:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1243:13" pos:end="1243:29">goto <name pos:start="1243:18" pos:end="1243:28">invalid_opc</name>;</goto>

        <case pos:start="1245:9" pos:end="1245:18">case <expr pos:start="1245:14" pos:end="1245:17"><literal type="number" pos:start="1245:14" pos:end="1245:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="1247:13" pos:end="1247:22">/* ADDG */</comment>

            <expr_stmt pos:start="1249:13" pos:end="1249:49"><expr pos:start="1249:13" pos:end="1249:48"><call pos:start="1249:13" pos:end="1249:48"><name pos:start="1249:13" pos:end="1249:27">gen_helper_addg</name><argument_list pos:start="1249:28" pos:end="1249:48">(<argument pos:start="1249:29" pos:end="1249:30"><expr pos:start="1249:29" pos:end="1249:30"><name pos:start="1249:29" pos:end="1249:30">vc</name></expr></argument>, <argument pos:start="1249:33" pos:end="1249:39"><expr pos:start="1249:33" pos:end="1249:39"><name pos:start="1249:33" pos:end="1249:39">cpu_env</name></expr></argument>, <argument pos:start="1249:42" pos:end="1249:43"><expr pos:start="1249:42" pos:end="1249:43"><name pos:start="1249:42" pos:end="1249:43">va</name></expr></argument>, <argument pos:start="1249:46" pos:end="1249:47"><expr pos:start="1249:46" pos:end="1249:47"><name pos:start="1249:46" pos:end="1249:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1251:13" pos:end="1251:18">break;</break>

        <case pos:start="1253:9" pos:end="1253:18">case <expr pos:start="1253:14" pos:end="1253:17"><literal type="number" pos:start="1253:14" pos:end="1253:17">0x21</literal></expr>:</case>

            <comment type="block" pos:start="1255:13" pos:end="1255:22">/* SUBG */</comment>

            <expr_stmt pos:start="1257:13" pos:end="1257:49"><expr pos:start="1257:13" pos:end="1257:48"><call pos:start="1257:13" pos:end="1257:48"><name pos:start="1257:13" pos:end="1257:27">gen_helper_subg</name><argument_list pos:start="1257:28" pos:end="1257:48">(<argument pos:start="1257:29" pos:end="1257:30"><expr pos:start="1257:29" pos:end="1257:30"><name pos:start="1257:29" pos:end="1257:30">vc</name></expr></argument>, <argument pos:start="1257:33" pos:end="1257:39"><expr pos:start="1257:33" pos:end="1257:39"><name pos:start="1257:33" pos:end="1257:39">cpu_env</name></expr></argument>, <argument pos:start="1257:42" pos:end="1257:43"><expr pos:start="1257:42" pos:end="1257:43"><name pos:start="1257:42" pos:end="1257:43">va</name></expr></argument>, <argument pos:start="1257:46" pos:end="1257:47"><expr pos:start="1257:46" pos:end="1257:47"><name pos:start="1257:46" pos:end="1257:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1259:13" pos:end="1259:18">break;</break>

        <case pos:start="1261:9" pos:end="1261:18">case <expr pos:start="1261:14" pos:end="1261:17"><literal type="number" pos:start="1261:14" pos:end="1261:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="1263:13" pos:end="1263:22">/* MULG */</comment>

            <expr_stmt pos:start="1265:13" pos:end="1265:49"><expr pos:start="1265:13" pos:end="1265:48"><call pos:start="1265:13" pos:end="1265:48"><name pos:start="1265:13" pos:end="1265:27">gen_helper_mulg</name><argument_list pos:start="1265:28" pos:end="1265:48">(<argument pos:start="1265:29" pos:end="1265:30"><expr pos:start="1265:29" pos:end="1265:30"><name pos:start="1265:29" pos:end="1265:30">vc</name></expr></argument>, <argument pos:start="1265:33" pos:end="1265:39"><expr pos:start="1265:33" pos:end="1265:39"><name pos:start="1265:33" pos:end="1265:39">cpu_env</name></expr></argument>, <argument pos:start="1265:42" pos:end="1265:43"><expr pos:start="1265:42" pos:end="1265:43"><name pos:start="1265:42" pos:end="1265:43">va</name></expr></argument>, <argument pos:start="1265:46" pos:end="1265:47"><expr pos:start="1265:46" pos:end="1265:47"><name pos:start="1265:46" pos:end="1265:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1267:13" pos:end="1267:18">break;</break>

        <case pos:start="1269:9" pos:end="1269:18">case <expr pos:start="1269:14" pos:end="1269:17"><literal type="number" pos:start="1269:14" pos:end="1269:17">0x23</literal></expr>:</case>

            <comment type="block" pos:start="1271:13" pos:end="1271:22">/* DIVG */</comment>

            <expr_stmt pos:start="1273:13" pos:end="1273:49"><expr pos:start="1273:13" pos:end="1273:48"><call pos:start="1273:13" pos:end="1273:48"><name pos:start="1273:13" pos:end="1273:27">gen_helper_divg</name><argument_list pos:start="1273:28" pos:end="1273:48">(<argument pos:start="1273:29" pos:end="1273:30"><expr pos:start="1273:29" pos:end="1273:30"><name pos:start="1273:29" pos:end="1273:30">vc</name></expr></argument>, <argument pos:start="1273:33" pos:end="1273:39"><expr pos:start="1273:33" pos:end="1273:39"><name pos:start="1273:33" pos:end="1273:39">cpu_env</name></expr></argument>, <argument pos:start="1273:42" pos:end="1273:43"><expr pos:start="1273:42" pos:end="1273:43"><name pos:start="1273:42" pos:end="1273:43">va</name></expr></argument>, <argument pos:start="1273:46" pos:end="1273:47"><expr pos:start="1273:46" pos:end="1273:47"><name pos:start="1273:46" pos:end="1273:47">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1275:13" pos:end="1275:18">break;</break>

        <case pos:start="1277:9" pos:end="1277:18">case <expr pos:start="1277:14" pos:end="1277:17"><literal type="number" pos:start="1277:14" pos:end="1277:17">0x25</literal></expr>:</case>

            <comment type="block" pos:start="1279:13" pos:end="1279:24">/* CMPGEQ */</comment>

            <expr_stmt pos:start="1281:13" pos:end="1281:51"><expr pos:start="1281:13" pos:end="1281:50"><call pos:start="1281:13" pos:end="1281:50"><name pos:start="1281:13" pos:end="1281:29">gen_helper_cmpgeq</name><argument_list pos:start="1281:30" pos:end="1281:50">(<argument pos:start="1281:31" pos:end="1281:32"><expr pos:start="1281:31" pos:end="1281:32"><name pos:start="1281:31" pos:end="1281:32">vc</name></expr></argument>, <argument pos:start="1281:35" pos:end="1281:41"><expr pos:start="1281:35" pos:end="1281:41"><name pos:start="1281:35" pos:end="1281:41">cpu_env</name></expr></argument>, <argument pos:start="1281:44" pos:end="1281:45"><expr pos:start="1281:44" pos:end="1281:45"><name pos:start="1281:44" pos:end="1281:45">va</name></expr></argument>, <argument pos:start="1281:48" pos:end="1281:49"><expr pos:start="1281:48" pos:end="1281:49"><name pos:start="1281:48" pos:end="1281:49">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1283:13" pos:end="1283:18">break;</break>

        <case pos:start="1285:9" pos:end="1285:18">case <expr pos:start="1285:14" pos:end="1285:17"><literal type="number" pos:start="1285:14" pos:end="1285:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="1287:13" pos:end="1287:24">/* CMPGLT */</comment>

            <expr_stmt pos:start="1289:13" pos:end="1289:51"><expr pos:start="1289:13" pos:end="1289:50"><call pos:start="1289:13" pos:end="1289:50"><name pos:start="1289:13" pos:end="1289:29">gen_helper_cmpglt</name><argument_list pos:start="1289:30" pos:end="1289:50">(<argument pos:start="1289:31" pos:end="1289:32"><expr pos:start="1289:31" pos:end="1289:32"><name pos:start="1289:31" pos:end="1289:32">vc</name></expr></argument>, <argument pos:start="1289:35" pos:end="1289:41"><expr pos:start="1289:35" pos:end="1289:41"><name pos:start="1289:35" pos:end="1289:41">cpu_env</name></expr></argument>, <argument pos:start="1289:44" pos:end="1289:45"><expr pos:start="1289:44" pos:end="1289:45"><name pos:start="1289:44" pos:end="1289:45">va</name></expr></argument>, <argument pos:start="1289:48" pos:end="1289:49"><expr pos:start="1289:48" pos:end="1289:49"><name pos:start="1289:48" pos:end="1289:49">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1291:13" pos:end="1291:18">break;</break>

        <case pos:start="1293:9" pos:end="1293:18">case <expr pos:start="1293:14" pos:end="1293:17"><literal type="number" pos:start="1293:14" pos:end="1293:17">0x27</literal></expr>:</case>

            <comment type="block" pos:start="1295:13" pos:end="1295:24">/* CMPGLE */</comment>

            <expr_stmt pos:start="1297:13" pos:end="1297:51"><expr pos:start="1297:13" pos:end="1297:50"><call pos:start="1297:13" pos:end="1297:50"><name pos:start="1297:13" pos:end="1297:29">gen_helper_cmpgle</name><argument_list pos:start="1297:30" pos:end="1297:50">(<argument pos:start="1297:31" pos:end="1297:32"><expr pos:start="1297:31" pos:end="1297:32"><name pos:start="1297:31" pos:end="1297:32">vc</name></expr></argument>, <argument pos:start="1297:35" pos:end="1297:41"><expr pos:start="1297:35" pos:end="1297:41"><name pos:start="1297:35" pos:end="1297:41">cpu_env</name></expr></argument>, <argument pos:start="1297:44" pos:end="1297:45"><expr pos:start="1297:44" pos:end="1297:45"><name pos:start="1297:44" pos:end="1297:45">va</name></expr></argument>, <argument pos:start="1297:48" pos:end="1297:49"><expr pos:start="1297:48" pos:end="1297:49"><name pos:start="1297:48" pos:end="1297:49">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1299:13" pos:end="1299:18">break;</break>

        <case pos:start="1301:9" pos:end="1301:18">case <expr pos:start="1301:14" pos:end="1301:17"><literal type="number" pos:start="1301:14" pos:end="1301:17">0x2C</literal></expr>:</case>

            <comment type="block" pos:start="1303:13" pos:end="1303:23">/* CVTGF */</comment>

            <expr_stmt pos:start="1305:13" pos:end="1305:31"><expr pos:start="1305:13" pos:end="1305:30"><call pos:start="1305:13" pos:end="1305:30"><name pos:start="1305:13" pos:end="1305:26">REQUIRE_REG_31</name><argument_list pos:start="1305:27" pos:end="1305:30">(<argument pos:start="1305:28" pos:end="1305:29"><expr pos:start="1305:28" pos:end="1305:29"><name pos:start="1305:28" pos:end="1305:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1307:13" pos:end="1307:46"><expr pos:start="1307:13" pos:end="1307:45"><call pos:start="1307:13" pos:end="1307:45"><name pos:start="1307:13" pos:end="1307:28">gen_helper_cvtgf</name><argument_list pos:start="1307:29" pos:end="1307:45">(<argument pos:start="1307:30" pos:end="1307:31"><expr pos:start="1307:30" pos:end="1307:31"><name pos:start="1307:30" pos:end="1307:31">vc</name></expr></argument>, <argument pos:start="1307:34" pos:end="1307:40"><expr pos:start="1307:34" pos:end="1307:40"><name pos:start="1307:34" pos:end="1307:40">cpu_env</name></expr></argument>, <argument pos:start="1307:43" pos:end="1307:44"><expr pos:start="1307:43" pos:end="1307:44"><name pos:start="1307:43" pos:end="1307:44">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1309:13" pos:end="1309:18">break;</break>

        <case pos:start="1311:9" pos:end="1311:18">case <expr pos:start="1311:14" pos:end="1311:17"><literal type="number" pos:start="1311:14" pos:end="1311:17">0x2D</literal></expr>:</case>

            <comment type="block" pos:start="1313:13" pos:end="1313:31">/* CVTGD -- TODO */</comment>

            <expr_stmt pos:start="1315:13" pos:end="1315:31"><expr pos:start="1315:13" pos:end="1315:30"><call pos:start="1315:13" pos:end="1315:30"><name pos:start="1315:13" pos:end="1315:26">REQUIRE_REG_31</name><argument_list pos:start="1315:27" pos:end="1315:30">(<argument pos:start="1315:28" pos:end="1315:29"><expr pos:start="1315:28" pos:end="1315:29"><name pos:start="1315:28" pos:end="1315:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1317:13" pos:end="1317:29">goto <name pos:start="1317:18" pos:end="1317:28">invalid_opc</name>;</goto>

        <case pos:start="1319:9" pos:end="1319:18">case <expr pos:start="1319:14" pos:end="1319:17"><literal type="number" pos:start="1319:14" pos:end="1319:17">0x2F</literal></expr>:</case>

            <comment type="block" pos:start="1321:13" pos:end="1321:23">/* CVTGQ */</comment>

            <expr_stmt pos:start="1323:13" pos:end="1323:31"><expr pos:start="1323:13" pos:end="1323:30"><call pos:start="1323:13" pos:end="1323:30"><name pos:start="1323:13" pos:end="1323:26">REQUIRE_REG_31</name><argument_list pos:start="1323:27" pos:end="1323:30">(<argument pos:start="1323:28" pos:end="1323:29"><expr pos:start="1323:28" pos:end="1323:29"><name pos:start="1323:28" pos:end="1323:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1325:13" pos:end="1325:46"><expr pos:start="1325:13" pos:end="1325:45"><call pos:start="1325:13" pos:end="1325:45"><name pos:start="1325:13" pos:end="1325:28">gen_helper_cvtgq</name><argument_list pos:start="1325:29" pos:end="1325:45">(<argument pos:start="1325:30" pos:end="1325:31"><expr pos:start="1325:30" pos:end="1325:31"><name pos:start="1325:30" pos:end="1325:31">vc</name></expr></argument>, <argument pos:start="1325:34" pos:end="1325:40"><expr pos:start="1325:34" pos:end="1325:40"><name pos:start="1325:34" pos:end="1325:40">cpu_env</name></expr></argument>, <argument pos:start="1325:43" pos:end="1325:44"><expr pos:start="1325:43" pos:end="1325:44"><name pos:start="1325:43" pos:end="1325:44">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1327:13" pos:end="1327:18">break;</break>

        <case pos:start="1329:9" pos:end="1329:18">case <expr pos:start="1329:14" pos:end="1329:17"><literal type="number" pos:start="1329:14" pos:end="1329:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="1331:13" pos:end="1331:23">/* CVTQF */</comment>

            <expr_stmt pos:start="1333:13" pos:end="1333:31"><expr pos:start="1333:13" pos:end="1333:30"><call pos:start="1333:13" pos:end="1333:30"><name pos:start="1333:13" pos:end="1333:26">REQUIRE_REG_31</name><argument_list pos:start="1333:27" pos:end="1333:30">(<argument pos:start="1333:28" pos:end="1333:29"><expr pos:start="1333:28" pos:end="1333:29"><name pos:start="1333:28" pos:end="1333:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1335:13" pos:end="1335:46"><expr pos:start="1335:13" pos:end="1335:45"><call pos:start="1335:13" pos:end="1335:45"><name pos:start="1335:13" pos:end="1335:28">gen_helper_cvtqf</name><argument_list pos:start="1335:29" pos:end="1335:45">(<argument pos:start="1335:30" pos:end="1335:31"><expr pos:start="1335:30" pos:end="1335:31"><name pos:start="1335:30" pos:end="1335:31">vc</name></expr></argument>, <argument pos:start="1335:34" pos:end="1335:40"><expr pos:start="1335:34" pos:end="1335:40"><name pos:start="1335:34" pos:end="1335:40">cpu_env</name></expr></argument>, <argument pos:start="1335:43" pos:end="1335:44"><expr pos:start="1335:43" pos:end="1335:44"><name pos:start="1335:43" pos:end="1335:44">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1337:13" pos:end="1337:18">break;</break>

        <case pos:start="1339:9" pos:end="1339:18">case <expr pos:start="1339:14" pos:end="1339:17"><literal type="number" pos:start="1339:14" pos:end="1339:17">0x3E</literal></expr>:</case>

            <comment type="block" pos:start="1341:13" pos:end="1341:23">/* CVTQG */</comment>

            <expr_stmt pos:start="1343:13" pos:end="1343:31"><expr pos:start="1343:13" pos:end="1343:30"><call pos:start="1343:13" pos:end="1343:30"><name pos:start="1343:13" pos:end="1343:26">REQUIRE_REG_31</name><argument_list pos:start="1343:27" pos:end="1343:30">(<argument pos:start="1343:28" pos:end="1343:29"><expr pos:start="1343:28" pos:end="1343:29"><name pos:start="1343:28" pos:end="1343:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1345:13" pos:end="1345:46"><expr pos:start="1345:13" pos:end="1345:45"><call pos:start="1345:13" pos:end="1345:45"><name pos:start="1345:13" pos:end="1345:28">gen_helper_cvtqg</name><argument_list pos:start="1345:29" pos:end="1345:45">(<argument pos:start="1345:30" pos:end="1345:31"><expr pos:start="1345:30" pos:end="1345:31"><name pos:start="1345:30" pos:end="1345:31">vc</name></expr></argument>, <argument pos:start="1345:34" pos:end="1345:40"><expr pos:start="1345:34" pos:end="1345:40"><name pos:start="1345:34" pos:end="1345:40">cpu_env</name></expr></argument>, <argument pos:start="1345:43" pos:end="1345:44"><expr pos:start="1345:43" pos:end="1345:44"><name pos:start="1345:43" pos:end="1345:44">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1347:13" pos:end="1347:18">break;</break>

        <default pos:start="1349:9" pos:end="1349:16">default:</default>

            <goto pos:start="1351:13" pos:end="1351:29">goto <name pos:start="1351:18" pos:end="1351:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1355:9" pos:end="1355:14">break;</break>



    <case pos:start="1359:5" pos:end="1359:14">case <expr pos:start="1359:10" pos:end="1359:13"><literal type="number" pos:start="1359:10" pos:end="1359:13">0x16</literal></expr>:</case>

        <comment type="block" pos:start="1361:9" pos:end="1361:33">/* IEEE floating-point */</comment>

        <switch pos:start="1363:9" pos:end="1515:9">switch <condition pos:start="1363:16" pos:end="1363:21">(<expr pos:start="1363:17" pos:end="1363:20"><name pos:start="1363:17" pos:end="1363:20">fpfn</name></expr>)</condition> <block pos:start="1363:23" pos:end="1515:9">{<block_content pos:start="1365:9" pos:end="1513:29"> <comment type="block" pos:start="1363:25" pos:end="1363:41">/* fn11 &amp; 0x3F */</comment>

        <case pos:start="1365:9" pos:end="1365:18">case <expr pos:start="1365:14" pos:end="1365:17"><literal type="number" pos:start="1365:14" pos:end="1365:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="1367:13" pos:end="1367:22">/* ADDS */</comment>

            <expr_stmt pos:start="1369:13" pos:end="1369:44"><expr pos:start="1369:13" pos:end="1369:43"><call pos:start="1369:13" pos:end="1369:43"><name pos:start="1369:13" pos:end="1369:20">gen_adds</name><argument_list pos:start="1369:21" pos:end="1369:43">(<argument pos:start="1369:22" pos:end="1369:24"><expr pos:start="1369:22" pos:end="1369:24"><name pos:start="1369:22" pos:end="1369:24">ctx</name></expr></argument>, <argument pos:start="1369:27" pos:end="1369:28"><expr pos:start="1369:27" pos:end="1369:28"><name pos:start="1369:27" pos:end="1369:28">ra</name></expr></argument>, <argument pos:start="1369:31" pos:end="1369:32"><expr pos:start="1369:31" pos:end="1369:32"><name pos:start="1369:31" pos:end="1369:32">rb</name></expr></argument>, <argument pos:start="1369:35" pos:end="1369:36"><expr pos:start="1369:35" pos:end="1369:36"><name pos:start="1369:35" pos:end="1369:36">rc</name></expr></argument>, <argument pos:start="1369:39" pos:end="1369:42"><expr pos:start="1369:39" pos:end="1369:42"><name pos:start="1369:39" pos:end="1369:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1371:13" pos:end="1371:18">break;</break>

        <case pos:start="1373:9" pos:end="1373:18">case <expr pos:start="1373:14" pos:end="1373:17"><literal type="number" pos:start="1373:14" pos:end="1373:17">0x01</literal></expr>:</case>

            <comment type="block" pos:start="1375:13" pos:end="1375:22">/* SUBS */</comment>

            <expr_stmt pos:start="1377:13" pos:end="1377:44"><expr pos:start="1377:13" pos:end="1377:43"><call pos:start="1377:13" pos:end="1377:43"><name pos:start="1377:13" pos:end="1377:20">gen_subs</name><argument_list pos:start="1377:21" pos:end="1377:43">(<argument pos:start="1377:22" pos:end="1377:24"><expr pos:start="1377:22" pos:end="1377:24"><name pos:start="1377:22" pos:end="1377:24">ctx</name></expr></argument>, <argument pos:start="1377:27" pos:end="1377:28"><expr pos:start="1377:27" pos:end="1377:28"><name pos:start="1377:27" pos:end="1377:28">ra</name></expr></argument>, <argument pos:start="1377:31" pos:end="1377:32"><expr pos:start="1377:31" pos:end="1377:32"><name pos:start="1377:31" pos:end="1377:32">rb</name></expr></argument>, <argument pos:start="1377:35" pos:end="1377:36"><expr pos:start="1377:35" pos:end="1377:36"><name pos:start="1377:35" pos:end="1377:36">rc</name></expr></argument>, <argument pos:start="1377:39" pos:end="1377:42"><expr pos:start="1377:39" pos:end="1377:42"><name pos:start="1377:39" pos:end="1377:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1379:13" pos:end="1379:18">break;</break>

        <case pos:start="1381:9" pos:end="1381:18">case <expr pos:start="1381:14" pos:end="1381:17"><literal type="number" pos:start="1381:14" pos:end="1381:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="1383:13" pos:end="1383:22">/* MULS */</comment>

            <expr_stmt pos:start="1385:13" pos:end="1385:44"><expr pos:start="1385:13" pos:end="1385:43"><call pos:start="1385:13" pos:end="1385:43"><name pos:start="1385:13" pos:end="1385:20">gen_muls</name><argument_list pos:start="1385:21" pos:end="1385:43">(<argument pos:start="1385:22" pos:end="1385:24"><expr pos:start="1385:22" pos:end="1385:24"><name pos:start="1385:22" pos:end="1385:24">ctx</name></expr></argument>, <argument pos:start="1385:27" pos:end="1385:28"><expr pos:start="1385:27" pos:end="1385:28"><name pos:start="1385:27" pos:end="1385:28">ra</name></expr></argument>, <argument pos:start="1385:31" pos:end="1385:32"><expr pos:start="1385:31" pos:end="1385:32"><name pos:start="1385:31" pos:end="1385:32">rb</name></expr></argument>, <argument pos:start="1385:35" pos:end="1385:36"><expr pos:start="1385:35" pos:end="1385:36"><name pos:start="1385:35" pos:end="1385:36">rc</name></expr></argument>, <argument pos:start="1385:39" pos:end="1385:42"><expr pos:start="1385:39" pos:end="1385:42"><name pos:start="1385:39" pos:end="1385:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1387:13" pos:end="1387:18">break;</break>

        <case pos:start="1389:9" pos:end="1389:18">case <expr pos:start="1389:14" pos:end="1389:17"><literal type="number" pos:start="1389:14" pos:end="1389:17">0x03</literal></expr>:</case>

            <comment type="block" pos:start="1391:13" pos:end="1391:22">/* DIVS */</comment>

            <expr_stmt pos:start="1393:13" pos:end="1393:44"><expr pos:start="1393:13" pos:end="1393:43"><call pos:start="1393:13" pos:end="1393:43"><name pos:start="1393:13" pos:end="1393:20">gen_divs</name><argument_list pos:start="1393:21" pos:end="1393:43">(<argument pos:start="1393:22" pos:end="1393:24"><expr pos:start="1393:22" pos:end="1393:24"><name pos:start="1393:22" pos:end="1393:24">ctx</name></expr></argument>, <argument pos:start="1393:27" pos:end="1393:28"><expr pos:start="1393:27" pos:end="1393:28"><name pos:start="1393:27" pos:end="1393:28">ra</name></expr></argument>, <argument pos:start="1393:31" pos:end="1393:32"><expr pos:start="1393:31" pos:end="1393:32"><name pos:start="1393:31" pos:end="1393:32">rb</name></expr></argument>, <argument pos:start="1393:35" pos:end="1393:36"><expr pos:start="1393:35" pos:end="1393:36"><name pos:start="1393:35" pos:end="1393:36">rc</name></expr></argument>, <argument pos:start="1393:39" pos:end="1393:42"><expr pos:start="1393:39" pos:end="1393:42"><name pos:start="1393:39" pos:end="1393:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1395:13" pos:end="1395:18">break;</break>

        <case pos:start="1397:9" pos:end="1397:18">case <expr pos:start="1397:14" pos:end="1397:17"><literal type="number" pos:start="1397:14" pos:end="1397:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="1399:13" pos:end="1399:22">/* ADDT */</comment>

            <expr_stmt pos:start="1401:13" pos:end="1401:44"><expr pos:start="1401:13" pos:end="1401:43"><call pos:start="1401:13" pos:end="1401:43"><name pos:start="1401:13" pos:end="1401:20">gen_addt</name><argument_list pos:start="1401:21" pos:end="1401:43">(<argument pos:start="1401:22" pos:end="1401:24"><expr pos:start="1401:22" pos:end="1401:24"><name pos:start="1401:22" pos:end="1401:24">ctx</name></expr></argument>, <argument pos:start="1401:27" pos:end="1401:28"><expr pos:start="1401:27" pos:end="1401:28"><name pos:start="1401:27" pos:end="1401:28">ra</name></expr></argument>, <argument pos:start="1401:31" pos:end="1401:32"><expr pos:start="1401:31" pos:end="1401:32"><name pos:start="1401:31" pos:end="1401:32">rb</name></expr></argument>, <argument pos:start="1401:35" pos:end="1401:36"><expr pos:start="1401:35" pos:end="1401:36"><name pos:start="1401:35" pos:end="1401:36">rc</name></expr></argument>, <argument pos:start="1401:39" pos:end="1401:42"><expr pos:start="1401:39" pos:end="1401:42"><name pos:start="1401:39" pos:end="1401:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1403:13" pos:end="1403:18">break;</break>

        <case pos:start="1405:9" pos:end="1405:18">case <expr pos:start="1405:14" pos:end="1405:17"><literal type="number" pos:start="1405:14" pos:end="1405:17">0x21</literal></expr>:</case>

            <comment type="block" pos:start="1407:13" pos:end="1407:22">/* SUBT */</comment>

            <expr_stmt pos:start="1409:13" pos:end="1409:44"><expr pos:start="1409:13" pos:end="1409:43"><call pos:start="1409:13" pos:end="1409:43"><name pos:start="1409:13" pos:end="1409:20">gen_subt</name><argument_list pos:start="1409:21" pos:end="1409:43">(<argument pos:start="1409:22" pos:end="1409:24"><expr pos:start="1409:22" pos:end="1409:24"><name pos:start="1409:22" pos:end="1409:24">ctx</name></expr></argument>, <argument pos:start="1409:27" pos:end="1409:28"><expr pos:start="1409:27" pos:end="1409:28"><name pos:start="1409:27" pos:end="1409:28">ra</name></expr></argument>, <argument pos:start="1409:31" pos:end="1409:32"><expr pos:start="1409:31" pos:end="1409:32"><name pos:start="1409:31" pos:end="1409:32">rb</name></expr></argument>, <argument pos:start="1409:35" pos:end="1409:36"><expr pos:start="1409:35" pos:end="1409:36"><name pos:start="1409:35" pos:end="1409:36">rc</name></expr></argument>, <argument pos:start="1409:39" pos:end="1409:42"><expr pos:start="1409:39" pos:end="1409:42"><name pos:start="1409:39" pos:end="1409:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1411:13" pos:end="1411:18">break;</break>

        <case pos:start="1413:9" pos:end="1413:18">case <expr pos:start="1413:14" pos:end="1413:17"><literal type="number" pos:start="1413:14" pos:end="1413:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="1415:13" pos:end="1415:22">/* MULT */</comment>

            <expr_stmt pos:start="1417:13" pos:end="1417:44"><expr pos:start="1417:13" pos:end="1417:43"><call pos:start="1417:13" pos:end="1417:43"><name pos:start="1417:13" pos:end="1417:20">gen_mult</name><argument_list pos:start="1417:21" pos:end="1417:43">(<argument pos:start="1417:22" pos:end="1417:24"><expr pos:start="1417:22" pos:end="1417:24"><name pos:start="1417:22" pos:end="1417:24">ctx</name></expr></argument>, <argument pos:start="1417:27" pos:end="1417:28"><expr pos:start="1417:27" pos:end="1417:28"><name pos:start="1417:27" pos:end="1417:28">ra</name></expr></argument>, <argument pos:start="1417:31" pos:end="1417:32"><expr pos:start="1417:31" pos:end="1417:32"><name pos:start="1417:31" pos:end="1417:32">rb</name></expr></argument>, <argument pos:start="1417:35" pos:end="1417:36"><expr pos:start="1417:35" pos:end="1417:36"><name pos:start="1417:35" pos:end="1417:36">rc</name></expr></argument>, <argument pos:start="1417:39" pos:end="1417:42"><expr pos:start="1417:39" pos:end="1417:42"><name pos:start="1417:39" pos:end="1417:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1419:13" pos:end="1419:18">break;</break>

        <case pos:start="1421:9" pos:end="1421:18">case <expr pos:start="1421:14" pos:end="1421:17"><literal type="number" pos:start="1421:14" pos:end="1421:17">0x23</literal></expr>:</case>

            <comment type="block" pos:start="1423:13" pos:end="1423:22">/* DIVT */</comment>

            <expr_stmt pos:start="1425:13" pos:end="1425:44"><expr pos:start="1425:13" pos:end="1425:43"><call pos:start="1425:13" pos:end="1425:43"><name pos:start="1425:13" pos:end="1425:20">gen_divt</name><argument_list pos:start="1425:21" pos:end="1425:43">(<argument pos:start="1425:22" pos:end="1425:24"><expr pos:start="1425:22" pos:end="1425:24"><name pos:start="1425:22" pos:end="1425:24">ctx</name></expr></argument>, <argument pos:start="1425:27" pos:end="1425:28"><expr pos:start="1425:27" pos:end="1425:28"><name pos:start="1425:27" pos:end="1425:28">ra</name></expr></argument>, <argument pos:start="1425:31" pos:end="1425:32"><expr pos:start="1425:31" pos:end="1425:32"><name pos:start="1425:31" pos:end="1425:32">rb</name></expr></argument>, <argument pos:start="1425:35" pos:end="1425:36"><expr pos:start="1425:35" pos:end="1425:36"><name pos:start="1425:35" pos:end="1425:36">rc</name></expr></argument>, <argument pos:start="1425:39" pos:end="1425:42"><expr pos:start="1425:39" pos:end="1425:42"><name pos:start="1425:39" pos:end="1425:42">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1427:13" pos:end="1427:18">break;</break>

        <case pos:start="1429:9" pos:end="1429:18">case <expr pos:start="1429:14" pos:end="1429:17"><literal type="number" pos:start="1429:14" pos:end="1429:17">0x24</literal></expr>:</case>

            <comment type="block" pos:start="1431:13" pos:end="1431:24">/* CMPTUN */</comment>

            <expr_stmt pos:start="1433:13" pos:end="1433:46"><expr pos:start="1433:13" pos:end="1433:45"><call pos:start="1433:13" pos:end="1433:45"><name pos:start="1433:13" pos:end="1433:22">gen_cmptun</name><argument_list pos:start="1433:23" pos:end="1433:45">(<argument pos:start="1433:24" pos:end="1433:26"><expr pos:start="1433:24" pos:end="1433:26"><name pos:start="1433:24" pos:end="1433:26">ctx</name></expr></argument>, <argument pos:start="1433:29" pos:end="1433:30"><expr pos:start="1433:29" pos:end="1433:30"><name pos:start="1433:29" pos:end="1433:30">ra</name></expr></argument>, <argument pos:start="1433:33" pos:end="1433:34"><expr pos:start="1433:33" pos:end="1433:34"><name pos:start="1433:33" pos:end="1433:34">rb</name></expr></argument>, <argument pos:start="1433:37" pos:end="1433:38"><expr pos:start="1433:37" pos:end="1433:38"><name pos:start="1433:37" pos:end="1433:38">rc</name></expr></argument>, <argument pos:start="1433:41" pos:end="1433:44"><expr pos:start="1433:41" pos:end="1433:44"><name pos:start="1433:41" pos:end="1433:44">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1435:13" pos:end="1435:18">break;</break>

        <case pos:start="1437:9" pos:end="1437:18">case <expr pos:start="1437:14" pos:end="1437:17"><literal type="number" pos:start="1437:14" pos:end="1437:17">0x25</literal></expr>:</case>

            <comment type="block" pos:start="1439:13" pos:end="1439:24">/* CMPTEQ */</comment>

            <expr_stmt pos:start="1441:13" pos:end="1441:46"><expr pos:start="1441:13" pos:end="1441:45"><call pos:start="1441:13" pos:end="1441:45"><name pos:start="1441:13" pos:end="1441:22">gen_cmpteq</name><argument_list pos:start="1441:23" pos:end="1441:45">(<argument pos:start="1441:24" pos:end="1441:26"><expr pos:start="1441:24" pos:end="1441:26"><name pos:start="1441:24" pos:end="1441:26">ctx</name></expr></argument>, <argument pos:start="1441:29" pos:end="1441:30"><expr pos:start="1441:29" pos:end="1441:30"><name pos:start="1441:29" pos:end="1441:30">ra</name></expr></argument>, <argument pos:start="1441:33" pos:end="1441:34"><expr pos:start="1441:33" pos:end="1441:34"><name pos:start="1441:33" pos:end="1441:34">rb</name></expr></argument>, <argument pos:start="1441:37" pos:end="1441:38"><expr pos:start="1441:37" pos:end="1441:38"><name pos:start="1441:37" pos:end="1441:38">rc</name></expr></argument>, <argument pos:start="1441:41" pos:end="1441:44"><expr pos:start="1441:41" pos:end="1441:44"><name pos:start="1441:41" pos:end="1441:44">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1443:13" pos:end="1443:18">break;</break>

        <case pos:start="1445:9" pos:end="1445:18">case <expr pos:start="1445:14" pos:end="1445:17"><literal type="number" pos:start="1445:14" pos:end="1445:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="1447:13" pos:end="1447:24">/* CMPTLT */</comment>

            <expr_stmt pos:start="1449:13" pos:end="1449:46"><expr pos:start="1449:13" pos:end="1449:45"><call pos:start="1449:13" pos:end="1449:45"><name pos:start="1449:13" pos:end="1449:22">gen_cmptlt</name><argument_list pos:start="1449:23" pos:end="1449:45">(<argument pos:start="1449:24" pos:end="1449:26"><expr pos:start="1449:24" pos:end="1449:26"><name pos:start="1449:24" pos:end="1449:26">ctx</name></expr></argument>, <argument pos:start="1449:29" pos:end="1449:30"><expr pos:start="1449:29" pos:end="1449:30"><name pos:start="1449:29" pos:end="1449:30">ra</name></expr></argument>, <argument pos:start="1449:33" pos:end="1449:34"><expr pos:start="1449:33" pos:end="1449:34"><name pos:start="1449:33" pos:end="1449:34">rb</name></expr></argument>, <argument pos:start="1449:37" pos:end="1449:38"><expr pos:start="1449:37" pos:end="1449:38"><name pos:start="1449:37" pos:end="1449:38">rc</name></expr></argument>, <argument pos:start="1449:41" pos:end="1449:44"><expr pos:start="1449:41" pos:end="1449:44"><name pos:start="1449:41" pos:end="1449:44">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1451:13" pos:end="1451:18">break;</break>

        <case pos:start="1453:9" pos:end="1453:18">case <expr pos:start="1453:14" pos:end="1453:17"><literal type="number" pos:start="1453:14" pos:end="1453:17">0x27</literal></expr>:</case>

            <comment type="block" pos:start="1455:13" pos:end="1455:24">/* CMPTLE */</comment>

            <expr_stmt pos:start="1457:13" pos:end="1457:46"><expr pos:start="1457:13" pos:end="1457:45"><call pos:start="1457:13" pos:end="1457:45"><name pos:start="1457:13" pos:end="1457:22">gen_cmptle</name><argument_list pos:start="1457:23" pos:end="1457:45">(<argument pos:start="1457:24" pos:end="1457:26"><expr pos:start="1457:24" pos:end="1457:26"><name pos:start="1457:24" pos:end="1457:26">ctx</name></expr></argument>, <argument pos:start="1457:29" pos:end="1457:30"><expr pos:start="1457:29" pos:end="1457:30"><name pos:start="1457:29" pos:end="1457:30">ra</name></expr></argument>, <argument pos:start="1457:33" pos:end="1457:34"><expr pos:start="1457:33" pos:end="1457:34"><name pos:start="1457:33" pos:end="1457:34">rb</name></expr></argument>, <argument pos:start="1457:37" pos:end="1457:38"><expr pos:start="1457:37" pos:end="1457:38"><name pos:start="1457:37" pos:end="1457:38">rc</name></expr></argument>, <argument pos:start="1457:41" pos:end="1457:44"><expr pos:start="1457:41" pos:end="1457:44"><name pos:start="1457:41" pos:end="1457:44">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1459:13" pos:end="1459:18">break;</break>

        <case pos:start="1461:9" pos:end="1461:18">case <expr pos:start="1461:14" pos:end="1461:17"><literal type="number" pos:start="1461:14" pos:end="1461:17">0x2C</literal></expr>:</case>

            <expr_stmt pos:start="1463:13" pos:end="1463:31"><expr pos:start="1463:13" pos:end="1463:30"><call pos:start="1463:13" pos:end="1463:30"><name pos:start="1463:13" pos:end="1463:26">REQUIRE_REG_31</name><argument_list pos:start="1463:27" pos:end="1463:30">(<argument pos:start="1463:28" pos:end="1463:29"><expr pos:start="1463:28" pos:end="1463:29"><name pos:start="1463:28" pos:end="1463:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1465:13" pos:end="1477:13"><if pos:start="1465:13" pos:end="1471:13">if <condition pos:start="1465:16" pos:end="1465:47">(<expr pos:start="1465:17" pos:end="1465:46"><name pos:start="1465:17" pos:end="1465:20">fn11</name> <operator pos:start="1465:22" pos:end="1465:23">==</operator> <literal type="number" pos:start="1465:25" pos:end="1465:29">0x2AC</literal> <operator pos:start="1465:31" pos:end="1465:32">||</operator> <name pos:start="1465:34" pos:end="1465:37">fn11</name> <operator pos:start="1465:39" pos:end="1465:40">==</operator> <literal type="number" pos:start="1465:42" pos:end="1465:46">0x6AC</literal></expr>)</condition> <block pos:start="1465:49" pos:end="1471:13">{<block_content pos:start="1469:17" pos:end="1469:45">

                <comment type="block" pos:start="1467:17" pos:end="1467:27">/* CVTST */</comment>

                <expr_stmt pos:start="1469:17" pos:end="1469:45"><expr pos:start="1469:17" pos:end="1469:44"><call pos:start="1469:17" pos:end="1469:44"><name pos:start="1469:17" pos:end="1469:25">gen_cvtst</name><argument_list pos:start="1469:26" pos:end="1469:44">(<argument pos:start="1469:27" pos:end="1469:29"><expr pos:start="1469:27" pos:end="1469:29"><name pos:start="1469:27" pos:end="1469:29">ctx</name></expr></argument>, <argument pos:start="1469:32" pos:end="1469:33"><expr pos:start="1469:32" pos:end="1469:33"><name pos:start="1469:32" pos:end="1469:33">rb</name></expr></argument>, <argument pos:start="1469:36" pos:end="1469:37"><expr pos:start="1469:36" pos:end="1469:37"><name pos:start="1469:36" pos:end="1469:37">rc</name></expr></argument>, <argument pos:start="1469:40" pos:end="1469:43"><expr pos:start="1469:40" pos:end="1469:43"><name pos:start="1469:40" pos:end="1469:43">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1471:15" pos:end="1477:13">else <block pos:start="1471:20" pos:end="1477:13">{<block_content pos:start="1475:17" pos:end="1475:45">

                <comment type="block" pos:start="1473:17" pos:end="1473:27">/* CVTTS */</comment>

                <expr_stmt pos:start="1475:17" pos:end="1475:45"><expr pos:start="1475:17" pos:end="1475:44"><call pos:start="1475:17" pos:end="1475:44"><name pos:start="1475:17" pos:end="1475:25">gen_cvtts</name><argument_list pos:start="1475:26" pos:end="1475:44">(<argument pos:start="1475:27" pos:end="1475:29"><expr pos:start="1475:27" pos:end="1475:29"><name pos:start="1475:27" pos:end="1475:29">ctx</name></expr></argument>, <argument pos:start="1475:32" pos:end="1475:33"><expr pos:start="1475:32" pos:end="1475:33"><name pos:start="1475:32" pos:end="1475:33">rb</name></expr></argument>, <argument pos:start="1475:36" pos:end="1475:37"><expr pos:start="1475:36" pos:end="1475:37"><name pos:start="1475:36" pos:end="1475:37">rc</name></expr></argument>, <argument pos:start="1475:40" pos:end="1475:43"><expr pos:start="1475:40" pos:end="1475:43"><name pos:start="1475:40" pos:end="1475:43">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1479:13" pos:end="1479:18">break;</break>

        <case pos:start="1481:9" pos:end="1481:18">case <expr pos:start="1481:14" pos:end="1481:17"><literal type="number" pos:start="1481:14" pos:end="1481:17">0x2F</literal></expr>:</case>

            <comment type="block" pos:start="1483:13" pos:end="1483:23">/* CVTTQ */</comment>

            <expr_stmt pos:start="1485:13" pos:end="1485:31"><expr pos:start="1485:13" pos:end="1485:30"><call pos:start="1485:13" pos:end="1485:30"><name pos:start="1485:13" pos:end="1485:26">REQUIRE_REG_31</name><argument_list pos:start="1485:27" pos:end="1485:30">(<argument pos:start="1485:28" pos:end="1485:29"><expr pos:start="1485:28" pos:end="1485:29"><name pos:start="1485:28" pos:end="1485:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1487:13" pos:end="1487:41"><expr pos:start="1487:13" pos:end="1487:40"><call pos:start="1487:13" pos:end="1487:40"><name pos:start="1487:13" pos:end="1487:21">gen_cvttq</name><argument_list pos:start="1487:22" pos:end="1487:40">(<argument pos:start="1487:23" pos:end="1487:25"><expr pos:start="1487:23" pos:end="1487:25"><name pos:start="1487:23" pos:end="1487:25">ctx</name></expr></argument>, <argument pos:start="1487:28" pos:end="1487:29"><expr pos:start="1487:28" pos:end="1487:29"><name pos:start="1487:28" pos:end="1487:29">rb</name></expr></argument>, <argument pos:start="1487:32" pos:end="1487:33"><expr pos:start="1487:32" pos:end="1487:33"><name pos:start="1487:32" pos:end="1487:33">rc</name></expr></argument>, <argument pos:start="1487:36" pos:end="1487:39"><expr pos:start="1487:36" pos:end="1487:39"><name pos:start="1487:36" pos:end="1487:39">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1489:13" pos:end="1489:18">break;</break>

        <case pos:start="1491:9" pos:end="1491:18">case <expr pos:start="1491:14" pos:end="1491:17"><literal type="number" pos:start="1491:14" pos:end="1491:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="1493:13" pos:end="1493:23">/* CVTQS */</comment>

            <expr_stmt pos:start="1495:13" pos:end="1495:31"><expr pos:start="1495:13" pos:end="1495:30"><call pos:start="1495:13" pos:end="1495:30"><name pos:start="1495:13" pos:end="1495:26">REQUIRE_REG_31</name><argument_list pos:start="1495:27" pos:end="1495:30">(<argument pos:start="1495:28" pos:end="1495:29"><expr pos:start="1495:28" pos:end="1495:29"><name pos:start="1495:28" pos:end="1495:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1497:13" pos:end="1497:41"><expr pos:start="1497:13" pos:end="1497:40"><call pos:start="1497:13" pos:end="1497:40"><name pos:start="1497:13" pos:end="1497:21">gen_cvtqs</name><argument_list pos:start="1497:22" pos:end="1497:40">(<argument pos:start="1497:23" pos:end="1497:25"><expr pos:start="1497:23" pos:end="1497:25"><name pos:start="1497:23" pos:end="1497:25">ctx</name></expr></argument>, <argument pos:start="1497:28" pos:end="1497:29"><expr pos:start="1497:28" pos:end="1497:29"><name pos:start="1497:28" pos:end="1497:29">rb</name></expr></argument>, <argument pos:start="1497:32" pos:end="1497:33"><expr pos:start="1497:32" pos:end="1497:33"><name pos:start="1497:32" pos:end="1497:33">rc</name></expr></argument>, <argument pos:start="1497:36" pos:end="1497:39"><expr pos:start="1497:36" pos:end="1497:39"><name pos:start="1497:36" pos:end="1497:39">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1499:13" pos:end="1499:18">break;</break>

        <case pos:start="1501:9" pos:end="1501:18">case <expr pos:start="1501:14" pos:end="1501:17"><literal type="number" pos:start="1501:14" pos:end="1501:17">0x3E</literal></expr>:</case>

            <comment type="block" pos:start="1503:13" pos:end="1503:23">/* CVTQT */</comment>

            <expr_stmt pos:start="1505:13" pos:end="1505:31"><expr pos:start="1505:13" pos:end="1505:30"><call pos:start="1505:13" pos:end="1505:30"><name pos:start="1505:13" pos:end="1505:26">REQUIRE_REG_31</name><argument_list pos:start="1505:27" pos:end="1505:30">(<argument pos:start="1505:28" pos:end="1505:29"><expr pos:start="1505:28" pos:end="1505:29"><name pos:start="1505:28" pos:end="1505:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1507:13" pos:end="1507:41"><expr pos:start="1507:13" pos:end="1507:40"><call pos:start="1507:13" pos:end="1507:40"><name pos:start="1507:13" pos:end="1507:21">gen_cvtqt</name><argument_list pos:start="1507:22" pos:end="1507:40">(<argument pos:start="1507:23" pos:end="1507:25"><expr pos:start="1507:23" pos:end="1507:25"><name pos:start="1507:23" pos:end="1507:25">ctx</name></expr></argument>, <argument pos:start="1507:28" pos:end="1507:29"><expr pos:start="1507:28" pos:end="1507:29"><name pos:start="1507:28" pos:end="1507:29">rb</name></expr></argument>, <argument pos:start="1507:32" pos:end="1507:33"><expr pos:start="1507:32" pos:end="1507:33"><name pos:start="1507:32" pos:end="1507:33">rc</name></expr></argument>, <argument pos:start="1507:36" pos:end="1507:39"><expr pos:start="1507:36" pos:end="1507:39"><name pos:start="1507:36" pos:end="1507:39">fn11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1509:13" pos:end="1509:18">break;</break>

        <default pos:start="1511:9" pos:end="1511:16">default:</default>

            <goto pos:start="1513:13" pos:end="1513:29">goto <name pos:start="1513:18" pos:end="1513:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1517:9" pos:end="1517:14">break;</break>



    <case pos:start="1521:5" pos:end="1521:14">case <expr pos:start="1521:10" pos:end="1521:13"><literal type="number" pos:start="1521:10" pos:end="1521:13">0x17</literal></expr>:</case>

        <switch pos:start="1523:9" pos:end="1721:9">switch <condition pos:start="1523:16" pos:end="1523:21">(<expr pos:start="1523:17" pos:end="1523:20"><name pos:start="1523:17" pos:end="1523:20">fn11</name></expr>)</condition> <block pos:start="1523:23" pos:end="1721:9">{<block_content pos:start="1525:9" pos:end="1719:29">

        <case pos:start="1525:9" pos:end="1525:19">case <expr pos:start="1525:14" pos:end="1525:18"><literal type="number" pos:start="1525:14" pos:end="1525:18">0x010</literal></expr>:</case>

            <comment type="block" pos:start="1527:13" pos:end="1527:23">/* CVTLQ */</comment>

            <expr_stmt pos:start="1529:13" pos:end="1529:31"><expr pos:start="1529:13" pos:end="1529:30"><call pos:start="1529:13" pos:end="1529:30"><name pos:start="1529:13" pos:end="1529:26">REQUIRE_REG_31</name><argument_list pos:start="1529:27" pos:end="1529:30">(<argument pos:start="1529:28" pos:end="1529:29"><expr pos:start="1529:28" pos:end="1529:29"><name pos:start="1529:28" pos:end="1529:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1531:13" pos:end="1531:35"><expr pos:start="1531:13" pos:end="1531:34"><name pos:start="1531:13" pos:end="1531:14">vc</name> <operator pos:start="1531:16" pos:end="1531:16">=</operator> <call pos:start="1531:18" pos:end="1531:34"><name pos:start="1531:18" pos:end="1531:25">dest_fpr</name><argument_list pos:start="1531:26" pos:end="1531:34">(<argument pos:start="1531:27" pos:end="1531:29"><expr pos:start="1531:27" pos:end="1531:29"><name pos:start="1531:27" pos:end="1531:29">ctx</name></expr></argument>, <argument pos:start="1531:32" pos:end="1531:33"><expr pos:start="1531:32" pos:end="1531:33"><name pos:start="1531:32" pos:end="1531:33">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1533:13" pos:end="1533:35"><expr pos:start="1533:13" pos:end="1533:34"><name pos:start="1533:13" pos:end="1533:14">vb</name> <operator pos:start="1533:16" pos:end="1533:16">=</operator> <call pos:start="1533:18" pos:end="1533:34"><name pos:start="1533:18" pos:end="1533:25">load_fpr</name><argument_list pos:start="1533:26" pos:end="1533:34">(<argument pos:start="1533:27" pos:end="1533:29"><expr pos:start="1533:27" pos:end="1533:29"><name pos:start="1533:27" pos:end="1533:29">ctx</name></expr></argument>, <argument pos:start="1533:32" pos:end="1533:33"><expr pos:start="1533:32" pos:end="1533:33"><name pos:start="1533:32" pos:end="1533:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1535:13" pos:end="1535:30"><expr pos:start="1535:13" pos:end="1535:29"><call pos:start="1535:13" pos:end="1535:29"><name pos:start="1535:13" pos:end="1535:21">gen_cvtlq</name><argument_list pos:start="1535:22" pos:end="1535:29">(<argument pos:start="1535:23" pos:end="1535:24"><expr pos:start="1535:23" pos:end="1535:24"><name pos:start="1535:23" pos:end="1535:24">vc</name></expr></argument>, <argument pos:start="1535:27" pos:end="1535:28"><expr pos:start="1535:27" pos:end="1535:28"><name pos:start="1535:27" pos:end="1535:28">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1537:13" pos:end="1537:18">break;</break>

        <case pos:start="1539:9" pos:end="1539:19">case <expr pos:start="1539:14" pos:end="1539:18"><literal type="number" pos:start="1539:14" pos:end="1539:18">0x020</literal></expr>:</case>

            <comment type="block" pos:start="1541:13" pos:end="1541:22">/* CPYS */</comment>

            <if_stmt pos:start="1543:13" pos:end="1567:13"><if pos:start="1543:13" pos:end="1547:13">if <condition pos:start="1543:16" pos:end="1543:25">(<expr pos:start="1543:17" pos:end="1543:24"><name pos:start="1543:17" pos:end="1543:18">rc</name> <operator pos:start="1543:20" pos:end="1543:21">==</operator> <literal type="number" pos:start="1543:23" pos:end="1543:24">31</literal></expr>)</condition> <block pos:start="1543:27" pos:end="1547:13">{<block_content>

                <comment type="block" pos:start="1545:17" pos:end="1545:49">/* Special case CPYS as FNOP.  */</comment>

            </block_content>}</block></if> <else pos:start="1547:15" pos:end="1567:13">else <block pos:start="1547:20" pos:end="1567:13">{<block_content pos:start="1549:17" pos:end="1565:17">

                <expr_stmt pos:start="1549:17" pos:end="1549:39"><expr pos:start="1549:17" pos:end="1549:38"><name pos:start="1549:17" pos:end="1549:18">vc</name> <operator pos:start="1549:20" pos:end="1549:20">=</operator> <call pos:start="1549:22" pos:end="1549:38"><name pos:start="1549:22" pos:end="1549:29">dest_fpr</name><argument_list pos:start="1549:30" pos:end="1549:38">(<argument pos:start="1549:31" pos:end="1549:33"><expr pos:start="1549:31" pos:end="1549:33"><name pos:start="1549:31" pos:end="1549:33">ctx</name></expr></argument>, <argument pos:start="1549:36" pos:end="1549:37"><expr pos:start="1549:36" pos:end="1549:37"><name pos:start="1549:36" pos:end="1549:37">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1551:17" pos:end="1551:39"><expr pos:start="1551:17" pos:end="1551:38"><name pos:start="1551:17" pos:end="1551:18">va</name> <operator pos:start="1551:20" pos:end="1551:20">=</operator> <call pos:start="1551:22" pos:end="1551:38"><name pos:start="1551:22" pos:end="1551:29">load_fpr</name><argument_list pos:start="1551:30" pos:end="1551:38">(<argument pos:start="1551:31" pos:end="1551:33"><expr pos:start="1551:31" pos:end="1551:33"><name pos:start="1551:31" pos:end="1551:33">ctx</name></expr></argument>, <argument pos:start="1551:36" pos:end="1551:37"><expr pos:start="1551:36" pos:end="1551:37"><name pos:start="1551:36" pos:end="1551:37">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1553:17" pos:end="1565:17"><if pos:start="1553:17" pos:end="1559:17">if <condition pos:start="1553:20" pos:end="1553:29">(<expr pos:start="1553:21" pos:end="1553:28"><name pos:start="1553:21" pos:end="1553:22">ra</name> <operator pos:start="1553:24" pos:end="1553:25">==</operator> <name pos:start="1553:27" pos:end="1553:28">rb</name></expr>)</condition> <block pos:start="1553:31" pos:end="1559:17">{<block_content pos:start="1557:21" pos:end="1557:44">

                    <comment type="block" pos:start="1555:21" pos:end="1555:53">/* Special case CPYS as FMOV.  */</comment>

                    <expr_stmt pos:start="1557:21" pos:end="1557:44"><expr pos:start="1557:21" pos:end="1557:43"><call pos:start="1557:21" pos:end="1557:43"><name pos:start="1557:21" pos:end="1557:35">tcg_gen_mov_i64</name><argument_list pos:start="1557:36" pos:end="1557:43">(<argument pos:start="1557:37" pos:end="1557:38"><expr pos:start="1557:37" pos:end="1557:38"><name pos:start="1557:37" pos:end="1557:38">vc</name></expr></argument>, <argument pos:start="1557:41" pos:end="1557:42"><expr pos:start="1557:41" pos:end="1557:42"><name pos:start="1557:41" pos:end="1557:42">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1559:19" pos:end="1565:17">else <block pos:start="1559:24" pos:end="1565:17">{<block_content pos:start="1561:21" pos:end="1563:71">

                    <expr_stmt pos:start="1561:21" pos:end="1561:43"><expr pos:start="1561:21" pos:end="1561:42"><name pos:start="1561:21" pos:end="1561:22">vb</name> <operator pos:start="1561:24" pos:end="1561:24">=</operator> <call pos:start="1561:26" pos:end="1561:42"><name pos:start="1561:26" pos:end="1561:33">load_fpr</name><argument_list pos:start="1561:34" pos:end="1561:42">(<argument pos:start="1561:35" pos:end="1561:37"><expr pos:start="1561:35" pos:end="1561:37"><name pos:start="1561:35" pos:end="1561:37">ctx</name></expr></argument>, <argument pos:start="1561:40" pos:end="1561:41"><expr pos:start="1561:40" pos:end="1561:41"><name pos:start="1561:40" pos:end="1561:41">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1563:21" pos:end="1563:71"><expr pos:start="1563:21" pos:end="1563:70"><call pos:start="1563:21" pos:end="1563:70"><name pos:start="1563:21" pos:end="1563:32">gen_cpy_mask</name><argument_list pos:start="1563:33" pos:end="1563:70">(<argument pos:start="1563:34" pos:end="1563:35"><expr pos:start="1563:34" pos:end="1563:35"><name pos:start="1563:34" pos:end="1563:35">vc</name></expr></argument>, <argument pos:start="1563:38" pos:end="1563:39"><expr pos:start="1563:38" pos:end="1563:39"><name pos:start="1563:38" pos:end="1563:39">va</name></expr></argument>, <argument pos:start="1563:42" pos:end="1563:43"><expr pos:start="1563:42" pos:end="1563:43"><name pos:start="1563:42" pos:end="1563:43">vb</name></expr></argument>, <argument pos:start="1563:46" pos:end="1563:46"><expr pos:start="1563:46" pos:end="1563:46"><literal type="number" pos:start="1563:46" pos:end="1563:46">0</literal></expr></argument>, <argument pos:start="1563:49" pos:end="1563:69"><expr pos:start="1563:49" pos:end="1563:69"><literal type="number" pos:start="1563:49" pos:end="1563:69">0x8000000000000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1569:13" pos:end="1569:18">break;</break>

        <case pos:start="1571:9" pos:end="1571:19">case <expr pos:start="1571:14" pos:end="1571:18"><literal type="number" pos:start="1571:14" pos:end="1571:18">0x021</literal></expr>:</case>

            <comment type="block" pos:start="1573:13" pos:end="1573:23">/* CPYSN */</comment>

            <expr_stmt pos:start="1575:13" pos:end="1575:35"><expr pos:start="1575:13" pos:end="1575:34"><name pos:start="1575:13" pos:end="1575:14">vc</name> <operator pos:start="1575:16" pos:end="1575:16">=</operator> <call pos:start="1575:18" pos:end="1575:34"><name pos:start="1575:18" pos:end="1575:25">dest_fpr</name><argument_list pos:start="1575:26" pos:end="1575:34">(<argument pos:start="1575:27" pos:end="1575:29"><expr pos:start="1575:27" pos:end="1575:29"><name pos:start="1575:27" pos:end="1575:29">ctx</name></expr></argument>, <argument pos:start="1575:32" pos:end="1575:33"><expr pos:start="1575:32" pos:end="1575:33"><name pos:start="1575:32" pos:end="1575:33">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1577:13" pos:end="1577:35"><expr pos:start="1577:13" pos:end="1577:34"><name pos:start="1577:13" pos:end="1577:14">vb</name> <operator pos:start="1577:16" pos:end="1577:16">=</operator> <call pos:start="1577:18" pos:end="1577:34"><name pos:start="1577:18" pos:end="1577:25">load_fpr</name><argument_list pos:start="1577:26" pos:end="1577:34">(<argument pos:start="1577:27" pos:end="1577:29"><expr pos:start="1577:27" pos:end="1577:29"><name pos:start="1577:27" pos:end="1577:29">ctx</name></expr></argument>, <argument pos:start="1577:32" pos:end="1577:33"><expr pos:start="1577:32" pos:end="1577:33"><name pos:start="1577:32" pos:end="1577:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1579:13" pos:end="1579:35"><expr pos:start="1579:13" pos:end="1579:34"><name pos:start="1579:13" pos:end="1579:14">va</name> <operator pos:start="1579:16" pos:end="1579:16">=</operator> <call pos:start="1579:18" pos:end="1579:34"><name pos:start="1579:18" pos:end="1579:25">load_fpr</name><argument_list pos:start="1579:26" pos:end="1579:34">(<argument pos:start="1579:27" pos:end="1579:29"><expr pos:start="1579:27" pos:end="1579:29"><name pos:start="1579:27" pos:end="1579:29">ctx</name></expr></argument>, <argument pos:start="1579:32" pos:end="1579:33"><expr pos:start="1579:32" pos:end="1579:33"><name pos:start="1579:32" pos:end="1579:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1581:13" pos:end="1581:63"><expr pos:start="1581:13" pos:end="1581:62"><call pos:start="1581:13" pos:end="1581:62"><name pos:start="1581:13" pos:end="1581:24">gen_cpy_mask</name><argument_list pos:start="1581:25" pos:end="1581:62">(<argument pos:start="1581:26" pos:end="1581:27"><expr pos:start="1581:26" pos:end="1581:27"><name pos:start="1581:26" pos:end="1581:27">vc</name></expr></argument>, <argument pos:start="1581:30" pos:end="1581:31"><expr pos:start="1581:30" pos:end="1581:31"><name pos:start="1581:30" pos:end="1581:31">va</name></expr></argument>, <argument pos:start="1581:34" pos:end="1581:35"><expr pos:start="1581:34" pos:end="1581:35"><name pos:start="1581:34" pos:end="1581:35">vb</name></expr></argument>, <argument pos:start="1581:38" pos:end="1581:38"><expr pos:start="1581:38" pos:end="1581:38"><literal type="number" pos:start="1581:38" pos:end="1581:38">1</literal></expr></argument>, <argument pos:start="1581:41" pos:end="1581:61"><expr pos:start="1581:41" pos:end="1581:61"><literal type="number" pos:start="1581:41" pos:end="1581:61">0x8000000000000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1583:13" pos:end="1583:18">break;</break>

        <case pos:start="1585:9" pos:end="1585:19">case <expr pos:start="1585:14" pos:end="1585:18"><literal type="number" pos:start="1585:14" pos:end="1585:18">0x022</literal></expr>:</case>

            <comment type="block" pos:start="1587:13" pos:end="1587:23">/* CPYSE */</comment>

            <expr_stmt pos:start="1589:13" pos:end="1589:35"><expr pos:start="1589:13" pos:end="1589:34"><name pos:start="1589:13" pos:end="1589:14">vc</name> <operator pos:start="1589:16" pos:end="1589:16">=</operator> <call pos:start="1589:18" pos:end="1589:34"><name pos:start="1589:18" pos:end="1589:25">dest_fpr</name><argument_list pos:start="1589:26" pos:end="1589:34">(<argument pos:start="1589:27" pos:end="1589:29"><expr pos:start="1589:27" pos:end="1589:29"><name pos:start="1589:27" pos:end="1589:29">ctx</name></expr></argument>, <argument pos:start="1589:32" pos:end="1589:33"><expr pos:start="1589:32" pos:end="1589:33"><name pos:start="1589:32" pos:end="1589:33">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1591:13" pos:end="1591:35"><expr pos:start="1591:13" pos:end="1591:34"><name pos:start="1591:13" pos:end="1591:14">vb</name> <operator pos:start="1591:16" pos:end="1591:16">=</operator> <call pos:start="1591:18" pos:end="1591:34"><name pos:start="1591:18" pos:end="1591:25">load_fpr</name><argument_list pos:start="1591:26" pos:end="1591:34">(<argument pos:start="1591:27" pos:end="1591:29"><expr pos:start="1591:27" pos:end="1591:29"><name pos:start="1591:27" pos:end="1591:29">ctx</name></expr></argument>, <argument pos:start="1591:32" pos:end="1591:33"><expr pos:start="1591:32" pos:end="1591:33"><name pos:start="1591:32" pos:end="1591:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1593:13" pos:end="1593:35"><expr pos:start="1593:13" pos:end="1593:34"><name pos:start="1593:13" pos:end="1593:14">va</name> <operator pos:start="1593:16" pos:end="1593:16">=</operator> <call pos:start="1593:18" pos:end="1593:34"><name pos:start="1593:18" pos:end="1593:25">load_fpr</name><argument_list pos:start="1593:26" pos:end="1593:34">(<argument pos:start="1593:27" pos:end="1593:29"><expr pos:start="1593:27" pos:end="1593:29"><name pos:start="1593:27" pos:end="1593:29">ctx</name></expr></argument>, <argument pos:start="1593:32" pos:end="1593:33"><expr pos:start="1593:32" pos:end="1593:33"><name pos:start="1593:32" pos:end="1593:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1595:13" pos:end="1595:63"><expr pos:start="1595:13" pos:end="1595:62"><call pos:start="1595:13" pos:end="1595:62"><name pos:start="1595:13" pos:end="1595:24">gen_cpy_mask</name><argument_list pos:start="1595:25" pos:end="1595:62">(<argument pos:start="1595:26" pos:end="1595:27"><expr pos:start="1595:26" pos:end="1595:27"><name pos:start="1595:26" pos:end="1595:27">vc</name></expr></argument>, <argument pos:start="1595:30" pos:end="1595:31"><expr pos:start="1595:30" pos:end="1595:31"><name pos:start="1595:30" pos:end="1595:31">va</name></expr></argument>, <argument pos:start="1595:34" pos:end="1595:35"><expr pos:start="1595:34" pos:end="1595:35"><name pos:start="1595:34" pos:end="1595:35">vb</name></expr></argument>, <argument pos:start="1595:38" pos:end="1595:38"><expr pos:start="1595:38" pos:end="1595:38"><literal type="number" pos:start="1595:38" pos:end="1595:38">0</literal></expr></argument>, <argument pos:start="1595:41" pos:end="1595:61"><expr pos:start="1595:41" pos:end="1595:61"><literal type="number" pos:start="1595:41" pos:end="1595:61">0xFFF0000000000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1597:13" pos:end="1597:18">break;</break>

        <case pos:start="1599:9" pos:end="1599:19">case <expr pos:start="1599:14" pos:end="1599:18"><literal type="number" pos:start="1599:14" pos:end="1599:18">0x024</literal></expr>:</case>

            <comment type="block" pos:start="1601:13" pos:end="1601:25">/* MT_FPCR */</comment>

            <expr_stmt pos:start="1603:13" pos:end="1603:35"><expr pos:start="1603:13" pos:end="1603:34"><name pos:start="1603:13" pos:end="1603:14">va</name> <operator pos:start="1603:16" pos:end="1603:16">=</operator> <call pos:start="1603:18" pos:end="1603:34"><name pos:start="1603:18" pos:end="1603:25">load_fpr</name><argument_list pos:start="1603:26" pos:end="1603:34">(<argument pos:start="1603:27" pos:end="1603:29"><expr pos:start="1603:27" pos:end="1603:29"><name pos:start="1603:27" pos:end="1603:29">ctx</name></expr></argument>, <argument pos:start="1603:32" pos:end="1603:33"><expr pos:start="1603:32" pos:end="1603:33"><name pos:start="1603:32" pos:end="1603:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1605:13" pos:end="1605:47"><expr pos:start="1605:13" pos:end="1605:46"><call pos:start="1605:13" pos:end="1605:46"><name pos:start="1605:13" pos:end="1605:33">gen_helper_store_fpcr</name><argument_list pos:start="1605:34" pos:end="1605:46">(<argument pos:start="1605:35" pos:end="1605:41"><expr pos:start="1605:35" pos:end="1605:41"><name pos:start="1605:35" pos:end="1605:41">cpu_env</name></expr></argument>, <argument pos:start="1605:44" pos:end="1605:45"><expr pos:start="1605:44" pos:end="1605:45"><name pos:start="1605:44" pos:end="1605:45">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1607:13" pos:end="1615:13"><if pos:start="1607:13" pos:end="1615:13">if <condition pos:start="1607:16" pos:end="1607:40">(<expr pos:start="1607:17" pos:end="1607:39"><name pos:start="1607:17" pos:end="1607:26"><name pos:start="1607:17" pos:end="1607:19">ctx</name><operator pos:start="1607:20" pos:end="1607:21">-&gt;</operator><name pos:start="1607:22" pos:end="1607:26">tb_rm</name></name> <operator pos:start="1607:28" pos:end="1607:29">==</operator> <name pos:start="1607:31" pos:end="1607:39">QUAL_RM_D</name></expr>)</condition> <block pos:start="1607:42" pos:end="1615:13">{<block_content pos:start="1613:17" pos:end="1613:32">

                <comment type="block" pos:start="1609:17" pos:end="1611:61">/* Re-do the copy of the rounding mode to fp_status

                   the next time we use dynamic rounding.  */</comment>

                <expr_stmt pos:start="1613:17" pos:end="1613:32"><expr pos:start="1613:17" pos:end="1613:31"><name pos:start="1613:17" pos:end="1613:26"><name pos:start="1613:17" pos:end="1613:19">ctx</name><operator pos:start="1613:20" pos:end="1613:21">-&gt;</operator><name pos:start="1613:22" pos:end="1613:26">tb_rm</name></name> <operator pos:start="1613:28" pos:end="1613:28">=</operator> <operator pos:start="1613:30" pos:end="1613:30">-</operator><literal type="number" pos:start="1613:31" pos:end="1613:31">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1617:13" pos:end="1617:18">break;</break>

        <case pos:start="1619:9" pos:end="1619:19">case <expr pos:start="1619:14" pos:end="1619:18"><literal type="number" pos:start="1619:14" pos:end="1619:18">0x025</literal></expr>:</case>

            <comment type="block" pos:start="1621:13" pos:end="1621:25">/* MF_FPCR */</comment>

            <expr_stmt pos:start="1623:13" pos:end="1623:35"><expr pos:start="1623:13" pos:end="1623:34"><name pos:start="1623:13" pos:end="1623:14">va</name> <operator pos:start="1623:16" pos:end="1623:16">=</operator> <call pos:start="1623:18" pos:end="1623:34"><name pos:start="1623:18" pos:end="1623:25">dest_fpr</name><argument_list pos:start="1623:26" pos:end="1623:34">(<argument pos:start="1623:27" pos:end="1623:29"><expr pos:start="1623:27" pos:end="1623:29"><name pos:start="1623:27" pos:end="1623:29">ctx</name></expr></argument>, <argument pos:start="1623:32" pos:end="1623:33"><expr pos:start="1623:32" pos:end="1623:33"><name pos:start="1623:32" pos:end="1623:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1625:13" pos:end="1625:46"><expr pos:start="1625:13" pos:end="1625:45"><call pos:start="1625:13" pos:end="1625:45"><name pos:start="1625:13" pos:end="1625:32">gen_helper_load_fpcr</name><argument_list pos:start="1625:33" pos:end="1625:45">(<argument pos:start="1625:34" pos:end="1625:35"><expr pos:start="1625:34" pos:end="1625:35"><name pos:start="1625:34" pos:end="1625:35">va</name></expr></argument>, <argument pos:start="1625:38" pos:end="1625:44"><expr pos:start="1625:38" pos:end="1625:44"><name pos:start="1625:38" pos:end="1625:44">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1627:13" pos:end="1627:18">break;</break>

        <case pos:start="1629:9" pos:end="1629:19">case <expr pos:start="1629:14" pos:end="1629:18"><literal type="number" pos:start="1629:14" pos:end="1629:18">0x02A</literal></expr>:</case>

            <comment type="block" pos:start="1631:13" pos:end="1631:25">/* FCMOVEQ */</comment>

            <expr_stmt pos:start="1633:13" pos:end="1633:52"><expr pos:start="1633:13" pos:end="1633:51"><call pos:start="1633:13" pos:end="1633:51"><name pos:start="1633:13" pos:end="1633:21">gen_fcmov</name><argument_list pos:start="1633:22" pos:end="1633:51">(<argument pos:start="1633:23" pos:end="1633:25"><expr pos:start="1633:23" pos:end="1633:25"><name pos:start="1633:23" pos:end="1633:25">ctx</name></expr></argument>, <argument pos:start="1633:28" pos:end="1633:38"><expr pos:start="1633:28" pos:end="1633:38"><name pos:start="1633:28" pos:end="1633:38">TCG_COND_EQ</name></expr></argument>, <argument pos:start="1633:41" pos:end="1633:42"><expr pos:start="1633:41" pos:end="1633:42"><name pos:start="1633:41" pos:end="1633:42">ra</name></expr></argument>, <argument pos:start="1633:45" pos:end="1633:46"><expr pos:start="1633:45" pos:end="1633:46"><name pos:start="1633:45" pos:end="1633:46">rb</name></expr></argument>, <argument pos:start="1633:49" pos:end="1633:50"><expr pos:start="1633:49" pos:end="1633:50"><name pos:start="1633:49" pos:end="1633:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1635:13" pos:end="1635:18">break;</break>

        <case pos:start="1637:9" pos:end="1637:19">case <expr pos:start="1637:14" pos:end="1637:18"><literal type="number" pos:start="1637:14" pos:end="1637:18">0x02B</literal></expr>:</case>

            <comment type="block" pos:start="1639:13" pos:end="1639:25">/* FCMOVNE */</comment>

            <expr_stmt pos:start="1641:13" pos:end="1641:52"><expr pos:start="1641:13" pos:end="1641:51"><call pos:start="1641:13" pos:end="1641:51"><name pos:start="1641:13" pos:end="1641:21">gen_fcmov</name><argument_list pos:start="1641:22" pos:end="1641:51">(<argument pos:start="1641:23" pos:end="1641:25"><expr pos:start="1641:23" pos:end="1641:25"><name pos:start="1641:23" pos:end="1641:25">ctx</name></expr></argument>, <argument pos:start="1641:28" pos:end="1641:38"><expr pos:start="1641:28" pos:end="1641:38"><name pos:start="1641:28" pos:end="1641:38">TCG_COND_NE</name></expr></argument>, <argument pos:start="1641:41" pos:end="1641:42"><expr pos:start="1641:41" pos:end="1641:42"><name pos:start="1641:41" pos:end="1641:42">ra</name></expr></argument>, <argument pos:start="1641:45" pos:end="1641:46"><expr pos:start="1641:45" pos:end="1641:46"><name pos:start="1641:45" pos:end="1641:46">rb</name></expr></argument>, <argument pos:start="1641:49" pos:end="1641:50"><expr pos:start="1641:49" pos:end="1641:50"><name pos:start="1641:49" pos:end="1641:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1643:13" pos:end="1643:18">break;</break>

        <case pos:start="1645:9" pos:end="1645:19">case <expr pos:start="1645:14" pos:end="1645:18"><literal type="number" pos:start="1645:14" pos:end="1645:18">0x02C</literal></expr>:</case>

            <comment type="block" pos:start="1647:13" pos:end="1647:25">/* FCMOVLT */</comment>

            <expr_stmt pos:start="1649:13" pos:end="1649:52"><expr pos:start="1649:13" pos:end="1649:51"><call pos:start="1649:13" pos:end="1649:51"><name pos:start="1649:13" pos:end="1649:21">gen_fcmov</name><argument_list pos:start="1649:22" pos:end="1649:51">(<argument pos:start="1649:23" pos:end="1649:25"><expr pos:start="1649:23" pos:end="1649:25"><name pos:start="1649:23" pos:end="1649:25">ctx</name></expr></argument>, <argument pos:start="1649:28" pos:end="1649:38"><expr pos:start="1649:28" pos:end="1649:38"><name pos:start="1649:28" pos:end="1649:38">TCG_COND_LT</name></expr></argument>, <argument pos:start="1649:41" pos:end="1649:42"><expr pos:start="1649:41" pos:end="1649:42"><name pos:start="1649:41" pos:end="1649:42">ra</name></expr></argument>, <argument pos:start="1649:45" pos:end="1649:46"><expr pos:start="1649:45" pos:end="1649:46"><name pos:start="1649:45" pos:end="1649:46">rb</name></expr></argument>, <argument pos:start="1649:49" pos:end="1649:50"><expr pos:start="1649:49" pos:end="1649:50"><name pos:start="1649:49" pos:end="1649:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1651:13" pos:end="1651:18">break;</break>

        <case pos:start="1653:9" pos:end="1653:19">case <expr pos:start="1653:14" pos:end="1653:18"><literal type="number" pos:start="1653:14" pos:end="1653:18">0x02D</literal></expr>:</case>

            <comment type="block" pos:start="1655:13" pos:end="1655:25">/* FCMOVGE */</comment>

            <expr_stmt pos:start="1657:13" pos:end="1657:52"><expr pos:start="1657:13" pos:end="1657:51"><call pos:start="1657:13" pos:end="1657:51"><name pos:start="1657:13" pos:end="1657:21">gen_fcmov</name><argument_list pos:start="1657:22" pos:end="1657:51">(<argument pos:start="1657:23" pos:end="1657:25"><expr pos:start="1657:23" pos:end="1657:25"><name pos:start="1657:23" pos:end="1657:25">ctx</name></expr></argument>, <argument pos:start="1657:28" pos:end="1657:38"><expr pos:start="1657:28" pos:end="1657:38"><name pos:start="1657:28" pos:end="1657:38">TCG_COND_GE</name></expr></argument>, <argument pos:start="1657:41" pos:end="1657:42"><expr pos:start="1657:41" pos:end="1657:42"><name pos:start="1657:41" pos:end="1657:42">ra</name></expr></argument>, <argument pos:start="1657:45" pos:end="1657:46"><expr pos:start="1657:45" pos:end="1657:46"><name pos:start="1657:45" pos:end="1657:46">rb</name></expr></argument>, <argument pos:start="1657:49" pos:end="1657:50"><expr pos:start="1657:49" pos:end="1657:50"><name pos:start="1657:49" pos:end="1657:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1659:13" pos:end="1659:18">break;</break>

        <case pos:start="1661:9" pos:end="1661:19">case <expr pos:start="1661:14" pos:end="1661:18"><literal type="number" pos:start="1661:14" pos:end="1661:18">0x02E</literal></expr>:</case>

            <comment type="block" pos:start="1663:13" pos:end="1663:25">/* FCMOVLE */</comment>

            <expr_stmt pos:start="1665:13" pos:end="1665:52"><expr pos:start="1665:13" pos:end="1665:51"><call pos:start="1665:13" pos:end="1665:51"><name pos:start="1665:13" pos:end="1665:21">gen_fcmov</name><argument_list pos:start="1665:22" pos:end="1665:51">(<argument pos:start="1665:23" pos:end="1665:25"><expr pos:start="1665:23" pos:end="1665:25"><name pos:start="1665:23" pos:end="1665:25">ctx</name></expr></argument>, <argument pos:start="1665:28" pos:end="1665:38"><expr pos:start="1665:28" pos:end="1665:38"><name pos:start="1665:28" pos:end="1665:38">TCG_COND_LE</name></expr></argument>, <argument pos:start="1665:41" pos:end="1665:42"><expr pos:start="1665:41" pos:end="1665:42"><name pos:start="1665:41" pos:end="1665:42">ra</name></expr></argument>, <argument pos:start="1665:45" pos:end="1665:46"><expr pos:start="1665:45" pos:end="1665:46"><name pos:start="1665:45" pos:end="1665:46">rb</name></expr></argument>, <argument pos:start="1665:49" pos:end="1665:50"><expr pos:start="1665:49" pos:end="1665:50"><name pos:start="1665:49" pos:end="1665:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1667:13" pos:end="1667:18">break;</break>

        <case pos:start="1669:9" pos:end="1669:19">case <expr pos:start="1669:14" pos:end="1669:18"><literal type="number" pos:start="1669:14" pos:end="1669:18">0x02F</literal></expr>:</case>

            <comment type="block" pos:start="1671:13" pos:end="1671:25">/* FCMOVGT */</comment>

            <expr_stmt pos:start="1673:13" pos:end="1673:52"><expr pos:start="1673:13" pos:end="1673:51"><call pos:start="1673:13" pos:end="1673:51"><name pos:start="1673:13" pos:end="1673:21">gen_fcmov</name><argument_list pos:start="1673:22" pos:end="1673:51">(<argument pos:start="1673:23" pos:end="1673:25"><expr pos:start="1673:23" pos:end="1673:25"><name pos:start="1673:23" pos:end="1673:25">ctx</name></expr></argument>, <argument pos:start="1673:28" pos:end="1673:38"><expr pos:start="1673:28" pos:end="1673:38"><name pos:start="1673:28" pos:end="1673:38">TCG_COND_GT</name></expr></argument>, <argument pos:start="1673:41" pos:end="1673:42"><expr pos:start="1673:41" pos:end="1673:42"><name pos:start="1673:41" pos:end="1673:42">ra</name></expr></argument>, <argument pos:start="1673:45" pos:end="1673:46"><expr pos:start="1673:45" pos:end="1673:46"><name pos:start="1673:45" pos:end="1673:46">rb</name></expr></argument>, <argument pos:start="1673:49" pos:end="1673:50"><expr pos:start="1673:49" pos:end="1673:50"><name pos:start="1673:49" pos:end="1673:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1675:13" pos:end="1675:18">break;</break>

        <case pos:start="1677:9" pos:end="1677:19">case <expr pos:start="1677:14" pos:end="1677:18"><literal type="number" pos:start="1677:14" pos:end="1677:18">0x030</literal></expr>:</case>

            <comment type="block" pos:start="1679:13" pos:end="1679:23">/* CVTQL */</comment>

            <expr_stmt pos:start="1681:13" pos:end="1681:31"><expr pos:start="1681:13" pos:end="1681:30"><call pos:start="1681:13" pos:end="1681:30"><name pos:start="1681:13" pos:end="1681:26">REQUIRE_REG_31</name><argument_list pos:start="1681:27" pos:end="1681:30">(<argument pos:start="1681:28" pos:end="1681:29"><expr pos:start="1681:28" pos:end="1681:29"><name pos:start="1681:28" pos:end="1681:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1683:13" pos:end="1683:35"><expr pos:start="1683:13" pos:end="1683:34"><name pos:start="1683:13" pos:end="1683:14">vc</name> <operator pos:start="1683:16" pos:end="1683:16">=</operator> <call pos:start="1683:18" pos:end="1683:34"><name pos:start="1683:18" pos:end="1683:25">dest_fpr</name><argument_list pos:start="1683:26" pos:end="1683:34">(<argument pos:start="1683:27" pos:end="1683:29"><expr pos:start="1683:27" pos:end="1683:29"><name pos:start="1683:27" pos:end="1683:29">ctx</name></expr></argument>, <argument pos:start="1683:32" pos:end="1683:33"><expr pos:start="1683:32" pos:end="1683:33"><name pos:start="1683:32" pos:end="1683:33">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1685:13" pos:end="1685:35"><expr pos:start="1685:13" pos:end="1685:34"><name pos:start="1685:13" pos:end="1685:14">vb</name> <operator pos:start="1685:16" pos:end="1685:16">=</operator> <call pos:start="1685:18" pos:end="1685:34"><name pos:start="1685:18" pos:end="1685:25">load_fpr</name><argument_list pos:start="1685:26" pos:end="1685:34">(<argument pos:start="1685:27" pos:end="1685:29"><expr pos:start="1685:27" pos:end="1685:29"><name pos:start="1685:27" pos:end="1685:29">ctx</name></expr></argument>, <argument pos:start="1685:32" pos:end="1685:33"><expr pos:start="1685:32" pos:end="1685:33"><name pos:start="1685:32" pos:end="1685:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1687:13" pos:end="1687:30"><expr pos:start="1687:13" pos:end="1687:29"><call pos:start="1687:13" pos:end="1687:29"><name pos:start="1687:13" pos:end="1687:21">gen_cvtql</name><argument_list pos:start="1687:22" pos:end="1687:29">(<argument pos:start="1687:23" pos:end="1687:24"><expr pos:start="1687:23" pos:end="1687:24"><name pos:start="1687:23" pos:end="1687:24">vc</name></expr></argument>, <argument pos:start="1687:27" pos:end="1687:28"><expr pos:start="1687:27" pos:end="1687:28"><name pos:start="1687:27" pos:end="1687:28">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1689:13" pos:end="1689:18">break;</break>

        <case pos:start="1691:9" pos:end="1691:19">case <expr pos:start="1691:14" pos:end="1691:18"><literal type="number" pos:start="1691:14" pos:end="1691:18">0x130</literal></expr>:</case>

            <comment type="block" pos:start="1693:13" pos:end="1693:25">/* CVTQL/V */</comment>

        <case pos:start="1695:9" pos:end="1695:19">case <expr pos:start="1695:14" pos:end="1695:18"><literal type="number" pos:start="1695:14" pos:end="1695:18">0x530</literal></expr>:</case>

            <comment type="block" pos:start="1697:13" pos:end="1697:26">/* CVTQL/SV */</comment>

            <expr_stmt pos:start="1699:13" pos:end="1699:31"><expr pos:start="1699:13" pos:end="1699:30"><call pos:start="1699:13" pos:end="1699:30"><name pos:start="1699:13" pos:end="1699:26">REQUIRE_REG_31</name><argument_list pos:start="1699:27" pos:end="1699:30">(<argument pos:start="1699:28" pos:end="1699:29"><expr pos:start="1699:28" pos:end="1699:29"><name pos:start="1699:28" pos:end="1699:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="1701:13" pos:end="1705:72">/* ??? I'm pretty sure there's nothing that /sv needs to do that

               /v doesn't do.  The only thing I can think is that /sv is a

               valid instruction merely for completeness in the ISA.  */</comment>

            <expr_stmt pos:start="1707:13" pos:end="1707:35"><expr pos:start="1707:13" pos:end="1707:34"><name pos:start="1707:13" pos:end="1707:14">vc</name> <operator pos:start="1707:16" pos:end="1707:16">=</operator> <call pos:start="1707:18" pos:end="1707:34"><name pos:start="1707:18" pos:end="1707:25">dest_fpr</name><argument_list pos:start="1707:26" pos:end="1707:34">(<argument pos:start="1707:27" pos:end="1707:29"><expr pos:start="1707:27" pos:end="1707:29"><name pos:start="1707:27" pos:end="1707:29">ctx</name></expr></argument>, <argument pos:start="1707:32" pos:end="1707:33"><expr pos:start="1707:32" pos:end="1707:33"><name pos:start="1707:32" pos:end="1707:33">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1709:13" pos:end="1709:35"><expr pos:start="1709:13" pos:end="1709:34"><name pos:start="1709:13" pos:end="1709:14">vb</name> <operator pos:start="1709:16" pos:end="1709:16">=</operator> <call pos:start="1709:18" pos:end="1709:34"><name pos:start="1709:18" pos:end="1709:25">load_fpr</name><argument_list pos:start="1709:26" pos:end="1709:34">(<argument pos:start="1709:27" pos:end="1709:29"><expr pos:start="1709:27" pos:end="1709:29"><name pos:start="1709:27" pos:end="1709:29">ctx</name></expr></argument>, <argument pos:start="1709:32" pos:end="1709:33"><expr pos:start="1709:32" pos:end="1709:33"><name pos:start="1709:32" pos:end="1709:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1711:13" pos:end="1711:50"><expr pos:start="1711:13" pos:end="1711:49"><call pos:start="1711:13" pos:end="1711:49"><name pos:start="1711:13" pos:end="1711:36">gen_helper_cvtql_v_input</name><argument_list pos:start="1711:37" pos:end="1711:49">(<argument pos:start="1711:38" pos:end="1711:44"><expr pos:start="1711:38" pos:end="1711:44"><name pos:start="1711:38" pos:end="1711:44">cpu_env</name></expr></argument>, <argument pos:start="1711:47" pos:end="1711:48"><expr pos:start="1711:47" pos:end="1711:48"><name pos:start="1711:47" pos:end="1711:48">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1713:13" pos:end="1713:30"><expr pos:start="1713:13" pos:end="1713:29"><call pos:start="1713:13" pos:end="1713:29"><name pos:start="1713:13" pos:end="1713:21">gen_cvtql</name><argument_list pos:start="1713:22" pos:end="1713:29">(<argument pos:start="1713:23" pos:end="1713:24"><expr pos:start="1713:23" pos:end="1713:24"><name pos:start="1713:23" pos:end="1713:24">vc</name></expr></argument>, <argument pos:start="1713:27" pos:end="1713:28"><expr pos:start="1713:27" pos:end="1713:28"><name pos:start="1713:27" pos:end="1713:28">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1715:13" pos:end="1715:18">break;</break>

        <default pos:start="1717:9" pos:end="1717:16">default:</default>

            <goto pos:start="1719:13" pos:end="1719:29">goto <name pos:start="1719:18" pos:end="1719:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1723:9" pos:end="1723:14">break;</break>



    <case pos:start="1727:5" pos:end="1727:14">case <expr pos:start="1727:10" pos:end="1727:13"><literal type="number" pos:start="1727:10" pos:end="1727:13">0x18</literal></expr>:</case>

        <switch pos:start="1729:9" pos:end="1837:9">switch <condition pos:start="1729:16" pos:end="1729:33">(<expr pos:start="1729:17" pos:end="1729:32"><operator pos:start="1729:17" pos:end="1729:17">(</operator><name pos:start="1729:18" pos:end="1729:25">uint16_t</name><operator pos:start="1729:26" pos:end="1729:26">)</operator><name pos:start="1729:27" pos:end="1729:32">disp16</name></expr>)</condition> <block pos:start="1729:35" pos:end="1837:9">{<block_content pos:start="1731:9" pos:end="1835:29">

        <case pos:start="1731:9" pos:end="1731:20">case <expr pos:start="1731:14" pos:end="1731:19"><literal type="number" pos:start="1731:14" pos:end="1731:19">0x0000</literal></expr>:</case>

            <comment type="block" pos:start="1733:13" pos:end="1733:23">/* TRAPB */</comment>

            <comment type="block" pos:start="1735:13" pos:end="1735:25">/* No-op.  */</comment>

            <break pos:start="1737:13" pos:end="1737:18">break;</break>

        <case pos:start="1739:9" pos:end="1739:20">case <expr pos:start="1739:14" pos:end="1739:19"><literal type="number" pos:start="1739:14" pos:end="1739:19">0x0400</literal></expr>:</case>

            <comment type="block" pos:start="1741:13" pos:end="1741:22">/* EXCB */</comment>

            <comment type="block" pos:start="1743:13" pos:end="1743:25">/* No-op.  */</comment>

            <break pos:start="1745:13" pos:end="1745:18">break;</break>

        <case pos:start="1747:9" pos:end="1747:20">case <expr pos:start="1747:14" pos:end="1747:19"><literal type="number" pos:start="1747:14" pos:end="1747:19">0x4000</literal></expr>:</case>

            <comment type="block" pos:start="1749:13" pos:end="1749:20">/* MB */</comment>

            <comment type="block" pos:start="1751:13" pos:end="1751:23">/* No-op */</comment>

            <break pos:start="1753:13" pos:end="1753:18">break;</break>

        <case pos:start="1755:9" pos:end="1755:20">case <expr pos:start="1755:14" pos:end="1755:19"><literal type="number" pos:start="1755:14" pos:end="1755:19">0x4400</literal></expr>:</case>

            <comment type="block" pos:start="1757:13" pos:end="1757:21">/* WMB */</comment>

            <comment type="block" pos:start="1759:13" pos:end="1759:23">/* No-op */</comment>

            <break pos:start="1761:13" pos:end="1761:18">break;</break>

        <case pos:start="1763:9" pos:end="1763:20">case <expr pos:start="1763:14" pos:end="1763:19"><literal type="number" pos:start="1763:14" pos:end="1763:19">0x8000</literal></expr>:</case>

            <comment type="block" pos:start="1765:13" pos:end="1765:23">/* FETCH */</comment>

            <comment type="block" pos:start="1767:13" pos:end="1767:23">/* No-op */</comment>

            <break pos:start="1769:13" pos:end="1769:18">break;</break>

        <case pos:start="1771:9" pos:end="1771:20">case <expr pos:start="1771:14" pos:end="1771:19"><literal type="number" pos:start="1771:14" pos:end="1771:19">0xA000</literal></expr>:</case>

            <comment type="block" pos:start="1773:13" pos:end="1773:25">/* FETCH_M */</comment>

            <comment type="block" pos:start="1775:13" pos:end="1775:23">/* No-op */</comment>

            <break pos:start="1777:13" pos:end="1777:18">break;</break>

        <case pos:start="1779:9" pos:end="1779:20">case <expr pos:start="1779:14" pos:end="1779:19"><literal type="number" pos:start="1779:14" pos:end="1779:19">0xC000</literal></expr>:</case>

            <comment type="block" pos:start="1781:13" pos:end="1781:22">/* RPCC */</comment>

            <expr_stmt pos:start="1783:13" pos:end="1783:35"><expr pos:start="1783:13" pos:end="1783:34"><name pos:start="1783:13" pos:end="1783:14">va</name> <operator pos:start="1783:16" pos:end="1783:16">=</operator> <call pos:start="1783:18" pos:end="1783:34"><name pos:start="1783:18" pos:end="1783:25">dest_gpr</name><argument_list pos:start="1783:26" pos:end="1783:34">(<argument pos:start="1783:27" pos:end="1783:29"><expr pos:start="1783:27" pos:end="1783:29"><name pos:start="1783:27" pos:end="1783:29">ctx</name></expr></argument>, <argument pos:start="1783:32" pos:end="1783:33"><expr pos:start="1783:32" pos:end="1783:33"><name pos:start="1783:32" pos:end="1783:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1785:13" pos:end="1799:13"><if pos:start="1785:13" pos:end="1795:13">if <condition pos:start="1785:16" pos:end="1785:48">(<expr pos:start="1785:17" pos:end="1785:47"><name pos:start="1785:17" pos:end="1785:31"><name pos:start="1785:17" pos:end="1785:19">ctx</name><operator pos:start="1785:20" pos:end="1785:21">-&gt;</operator><name pos:start="1785:22" pos:end="1785:23">tb</name><operator pos:start="1785:24" pos:end="1785:25">-&gt;</operator><name pos:start="1785:26" pos:end="1785:31">cflags</name></name> <operator pos:start="1785:33" pos:end="1785:33">&amp;</operator> <name pos:start="1785:35" pos:end="1785:47">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="1785:50" pos:end="1795:13">{<block_content pos:start="1787:17" pos:end="1793:36">

                <expr_stmt pos:start="1787:17" pos:end="1787:31"><expr pos:start="1787:17" pos:end="1787:30"><call pos:start="1787:17" pos:end="1787:30"><name pos:start="1787:17" pos:end="1787:28">gen_io_start</name><argument_list pos:start="1787:29" pos:end="1787:30">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1789:17" pos:end="1789:49"><expr pos:start="1789:17" pos:end="1789:48"><call pos:start="1789:17" pos:end="1789:48"><name pos:start="1789:17" pos:end="1789:35">gen_helper_load_pcc</name><argument_list pos:start="1789:36" pos:end="1789:48">(<argument pos:start="1789:37" pos:end="1789:38"><expr pos:start="1789:37" pos:end="1789:38"><name pos:start="1789:37" pos:end="1789:38">va</name></expr></argument>, <argument pos:start="1789:41" pos:end="1789:47"><expr pos:start="1789:41" pos:end="1789:47"><name pos:start="1789:41" pos:end="1789:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1791:17" pos:end="1791:29"><expr pos:start="1791:17" pos:end="1791:28"><call pos:start="1791:17" pos:end="1791:28"><name pos:start="1791:17" pos:end="1791:26">gen_io_end</name><argument_list pos:start="1791:27" pos:end="1791:28">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1793:17" pos:end="1793:36"><expr pos:start="1793:17" pos:end="1793:35"><name pos:start="1793:17" pos:end="1793:19">ret</name> <operator pos:start="1793:21" pos:end="1793:21">=</operator> <name pos:start="1793:23" pos:end="1793:35">EXIT_PC_STALE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1795:15" pos:end="1799:13">else <block pos:start="1795:20" pos:end="1799:13">{<block_content pos:start="1797:17" pos:end="1797:49">

                <expr_stmt pos:start="1797:17" pos:end="1797:49"><expr pos:start="1797:17" pos:end="1797:48"><call pos:start="1797:17" pos:end="1797:48"><name pos:start="1797:17" pos:end="1797:35">gen_helper_load_pcc</name><argument_list pos:start="1797:36" pos:end="1797:48">(<argument pos:start="1797:37" pos:end="1797:38"><expr pos:start="1797:37" pos:end="1797:38"><name pos:start="1797:37" pos:end="1797:38">va</name></expr></argument>, <argument pos:start="1797:41" pos:end="1797:47"><expr pos:start="1797:41" pos:end="1797:47"><name pos:start="1797:41" pos:end="1797:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1801:13" pos:end="1801:18">break;</break>

        <case pos:start="1803:9" pos:end="1803:20">case <expr pos:start="1803:14" pos:end="1803:19"><literal type="number" pos:start="1803:14" pos:end="1803:19">0xE000</literal></expr>:</case>

            <comment type="block" pos:start="1805:13" pos:end="1805:20">/* RC */</comment>

            <expr_stmt pos:start="1807:13" pos:end="1807:26"><expr pos:start="1807:13" pos:end="1807:25"><call pos:start="1807:13" pos:end="1807:25"><name pos:start="1807:13" pos:end="1807:18">gen_rx</name><argument_list pos:start="1807:19" pos:end="1807:25">(<argument pos:start="1807:20" pos:end="1807:21"><expr pos:start="1807:20" pos:end="1807:21"><name pos:start="1807:20" pos:end="1807:21">ra</name></expr></argument>, <argument pos:start="1807:24" pos:end="1807:24"><expr pos:start="1807:24" pos:end="1807:24"><literal type="number" pos:start="1807:24" pos:end="1807:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1809:13" pos:end="1809:18">break;</break>

        <case pos:start="1811:9" pos:end="1811:20">case <expr pos:start="1811:14" pos:end="1811:19"><literal type="number" pos:start="1811:14" pos:end="1811:19">0xE800</literal></expr>:</case>

            <comment type="block" pos:start="1813:13" pos:end="1813:21">/* ECB */</comment>

            <break pos:start="1815:13" pos:end="1815:18">break;</break>

        <case pos:start="1817:9" pos:end="1817:20">case <expr pos:start="1817:14" pos:end="1817:19"><literal type="number" pos:start="1817:14" pos:end="1817:19">0xF000</literal></expr>:</case>

            <comment type="block" pos:start="1819:13" pos:end="1819:20">/* RS */</comment>

            <expr_stmt pos:start="1821:13" pos:end="1821:26"><expr pos:start="1821:13" pos:end="1821:25"><call pos:start="1821:13" pos:end="1821:25"><name pos:start="1821:13" pos:end="1821:18">gen_rx</name><argument_list pos:start="1821:19" pos:end="1821:25">(<argument pos:start="1821:20" pos:end="1821:21"><expr pos:start="1821:20" pos:end="1821:21"><name pos:start="1821:20" pos:end="1821:21">ra</name></expr></argument>, <argument pos:start="1821:24" pos:end="1821:24"><expr pos:start="1821:24" pos:end="1821:24"><literal type="number" pos:start="1821:24" pos:end="1821:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1823:13" pos:end="1823:18">break;</break>

        <case pos:start="1825:9" pos:end="1825:20">case <expr pos:start="1825:14" pos:end="1825:19"><literal type="number" pos:start="1825:14" pos:end="1825:19">0xF800</literal></expr>:</case>

            <comment type="block" pos:start="1827:13" pos:end="1827:22">/* WH64 */</comment>

            <comment type="block" pos:start="1829:13" pos:end="1829:23">/* No-op */</comment>

            <break pos:start="1831:13" pos:end="1831:18">break;</break>

        <default pos:start="1833:9" pos:end="1833:16">default:</default>

            <goto pos:start="1835:13" pos:end="1835:29">goto <name pos:start="1835:18" pos:end="1835:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1839:9" pos:end="1839:14">break;</break>



    <case pos:start="1843:5" pos:end="1848:0">case <expr pos:start="1843:10" pos:end="1843:13"><literal type="number" pos:start="1843:10" pos:end="1843:13">0x19</literal></expr>:</case>

        <comment type="block" pos:start="1845:9" pos:end="1845:31">/* HW_MFPR (PALcode) */</comment>

<cpp:ifndef pos:start="1847:1" pos:end="1847:24">#<cpp:directive pos:start="1847:2" pos:end="1847:7">ifndef</cpp:directive> <name pos:start="1847:9" pos:end="1847:24">CONFIG_USER_ONLY</name></cpp:ifndef>

        <expr_stmt pos:start="1849:9" pos:end="1849:43"><expr pos:start="1849:9" pos:end="1849:42"><call pos:start="1849:9" pos:end="1849:42"><name pos:start="1849:9" pos:end="1849:23">REQUIRE_TB_FLAG</name><argument_list pos:start="1849:24" pos:end="1849:42">(<argument pos:start="1849:25" pos:end="1849:41"><expr pos:start="1849:25" pos:end="1849:41"><name pos:start="1849:25" pos:end="1849:41">TB_FLAGS_PAL_MODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1851:9" pos:end="1851:31"><expr pos:start="1851:9" pos:end="1851:30"><name pos:start="1851:9" pos:end="1851:10">va</name> <operator pos:start="1851:12" pos:end="1851:12">=</operator> <call pos:start="1851:14" pos:end="1851:30"><name pos:start="1851:14" pos:end="1851:21">dest_gpr</name><argument_list pos:start="1851:22" pos:end="1851:30">(<argument pos:start="1851:23" pos:end="1851:25"><expr pos:start="1851:23" pos:end="1851:25"><name pos:start="1851:23" pos:end="1851:25">ctx</name></expr></argument>, <argument pos:start="1851:28" pos:end="1851:29"><expr pos:start="1851:28" pos:end="1851:29"><name pos:start="1851:28" pos:end="1851:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1853:9" pos:end="1853:47"><expr pos:start="1853:9" pos:end="1853:46"><name pos:start="1853:9" pos:end="1853:11">ret</name> <operator pos:start="1853:13" pos:end="1853:13">=</operator> <call pos:start="1853:15" pos:end="1853:46"><name pos:start="1853:15" pos:end="1853:22">gen_mfpr</name><argument_list pos:start="1853:23" pos:end="1853:46">(<argument pos:start="1853:24" pos:end="1853:26"><expr pos:start="1853:24" pos:end="1853:26"><name pos:start="1853:24" pos:end="1853:26">ctx</name></expr></argument>, <argument pos:start="1853:29" pos:end="1853:30"><expr pos:start="1853:29" pos:end="1853:30"><name pos:start="1853:29" pos:end="1853:30">va</name></expr></argument>, <argument pos:start="1853:33" pos:end="1853:45"><expr pos:start="1853:33" pos:end="1853:45"><name pos:start="1853:33" pos:end="1853:36">insn</name> <operator pos:start="1853:38" pos:end="1853:38">&amp;</operator> <literal type="number" pos:start="1853:40" pos:end="1853:45">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1855:9" pos:end="1858:0">break;</break>

<cpp:else pos:start="1857:1" pos:end="1857:5">#<cpp:directive pos:start="1857:2" pos:end="1857:5">else</cpp:directive></cpp:else>

        <goto pos:start="1859:9" pos:end="1862:0">goto <name pos:start="1859:14" pos:end="1859:24">invalid_opc</name>;</goto>

<cpp:endif pos:start="1861:1" pos:end="1861:6">#<cpp:directive pos:start="1861:2" pos:end="1861:6">endif</cpp:directive></cpp:endif>



    <case pos:start="1865:5" pos:end="1865:14">case <expr pos:start="1865:10" pos:end="1865:13"><literal type="number" pos:start="1865:10" pos:end="1865:13">0x1A</literal></expr>:</case>

        <comment type="block" pos:start="1867:9" pos:end="1869:75">/* JMP, JSR, RET, JSR_COROUTINE.  These only differ by the branch

           prediction stack action, which of course we don't implement.  */</comment>

        <expr_stmt pos:start="1871:9" pos:end="1871:31"><expr pos:start="1871:9" pos:end="1871:30"><name pos:start="1871:9" pos:end="1871:10">vb</name> <operator pos:start="1871:12" pos:end="1871:12">=</operator> <call pos:start="1871:14" pos:end="1871:30"><name pos:start="1871:14" pos:end="1871:21">load_gpr</name><argument_list pos:start="1871:22" pos:end="1871:30">(<argument pos:start="1871:23" pos:end="1871:25"><expr pos:start="1871:23" pos:end="1871:25"><name pos:start="1871:23" pos:end="1871:25">ctx</name></expr></argument>, <argument pos:start="1871:28" pos:end="1871:29"><expr pos:start="1871:28" pos:end="1871:29"><name pos:start="1871:28" pos:end="1871:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1873:9" pos:end="1873:41"><expr pos:start="1873:9" pos:end="1873:40"><call pos:start="1873:9" pos:end="1873:40"><name pos:start="1873:9" pos:end="1873:24">tcg_gen_andi_i64</name><argument_list pos:start="1873:25" pos:end="1873:40">(<argument pos:start="1873:26" pos:end="1873:31"><expr pos:start="1873:26" pos:end="1873:31"><name pos:start="1873:26" pos:end="1873:31">cpu_pc</name></expr></argument>, <argument pos:start="1873:34" pos:end="1873:35"><expr pos:start="1873:34" pos:end="1873:35"><name pos:start="1873:34" pos:end="1873:35">vb</name></expr></argument>, <argument pos:start="1873:38" pos:end="1873:39"><expr pos:start="1873:38" pos:end="1873:39"><operator pos:start="1873:38" pos:end="1873:38">~</operator><literal type="number" pos:start="1873:39" pos:end="1873:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1875:9" pos:end="1879:9"><if pos:start="1875:9" pos:end="1879:9">if <condition pos:start="1875:12" pos:end="1875:21">(<expr pos:start="1875:13" pos:end="1875:20"><name pos:start="1875:13" pos:end="1875:14">ra</name> <operator pos:start="1875:16" pos:end="1875:17">!=</operator> <literal type="number" pos:start="1875:19" pos:end="1875:20">31</literal></expr>)</condition> <block pos:start="1875:23" pos:end="1879:9">{<block_content pos:start="1877:13" pos:end="1877:50">

            <expr_stmt pos:start="1877:13" pos:end="1877:50"><expr pos:start="1877:13" pos:end="1877:49"><call pos:start="1877:13" pos:end="1877:49"><name pos:start="1877:13" pos:end="1877:28">tcg_gen_movi_i64</name><argument_list pos:start="1877:29" pos:end="1877:49">(<argument pos:start="1877:30" pos:end="1877:39"><expr pos:start="1877:30" pos:end="1877:39"><name pos:start="1877:30" pos:end="1877:39"><name pos:start="1877:30" pos:end="1877:35">cpu_ir</name><index pos:start="1877:36" pos:end="1877:39">[<expr pos:start="1877:37" pos:end="1877:38"><name pos:start="1877:37" pos:end="1877:38">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1877:42" pos:end="1877:48"><expr pos:start="1877:42" pos:end="1877:48"><name pos:start="1877:42" pos:end="1877:48"><name pos:start="1877:42" pos:end="1877:44">ctx</name><operator pos:start="1877:45" pos:end="1877:46">-&gt;</operator><name pos:start="1877:47" pos:end="1877:48">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1881:9" pos:end="1881:30"><expr pos:start="1881:9" pos:end="1881:29"><name pos:start="1881:9" pos:end="1881:11">ret</name> <operator pos:start="1881:13" pos:end="1881:13">=</operator> <name pos:start="1881:15" pos:end="1881:29">EXIT_PC_UPDATED</name></expr>;</expr_stmt>

        <break pos:start="1883:9" pos:end="1883:14">break;</break>



    <case pos:start="1887:5" pos:end="1892:0">case <expr pos:start="1887:10" pos:end="1887:13"><literal type="number" pos:start="1887:10" pos:end="1887:13">0x1B</literal></expr>:</case>

        <comment type="block" pos:start="1889:9" pos:end="1889:29">/* HW_LD (PALcode) */</comment>

<cpp:ifndef pos:start="1891:1" pos:end="1891:24">#<cpp:directive pos:start="1891:2" pos:end="1891:7">ifndef</cpp:directive> <name pos:start="1891:9" pos:end="1891:24">CONFIG_USER_ONLY</name></cpp:ifndef>

        <expr_stmt pos:start="1893:9" pos:end="1893:43"><expr pos:start="1893:9" pos:end="1893:42"><call pos:start="1893:9" pos:end="1893:42"><name pos:start="1893:9" pos:end="1893:23">REQUIRE_TB_FLAG</name><argument_list pos:start="1893:24" pos:end="1893:42">(<argument pos:start="1893:25" pos:end="1893:41"><expr pos:start="1893:25" pos:end="1893:41"><name pos:start="1893:25" pos:end="1893:41">TB_FLAGS_PAL_MODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="1895:9" pos:end="2036:0">{<block_content pos:start="1897:13" pos:end="2031:18">

            <decl_stmt pos:start="1897:13" pos:end="1897:39"><decl pos:start="1897:13" pos:end="1897:38"><type pos:start="1897:13" pos:end="1897:16"><name pos:start="1897:13" pos:end="1897:16">TCGv</name></type> <name pos:start="1897:18" pos:end="1897:21">addr</name> <init pos:start="1897:23" pos:end="1897:38">= <expr pos:start="1897:25" pos:end="1897:38"><call pos:start="1897:25" pos:end="1897:38"><name pos:start="1897:25" pos:end="1897:36">tcg_temp_new</name><argument_list pos:start="1897:37" pos:end="1897:38">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="1899:13" pos:end="1899:35"><expr pos:start="1899:13" pos:end="1899:34"><name pos:start="1899:13" pos:end="1899:14">vb</name> <operator pos:start="1899:16" pos:end="1899:16">=</operator> <call pos:start="1899:18" pos:end="1899:34"><name pos:start="1899:18" pos:end="1899:25">load_gpr</name><argument_list pos:start="1899:26" pos:end="1899:34">(<argument pos:start="1899:27" pos:end="1899:29"><expr pos:start="1899:27" pos:end="1899:29"><name pos:start="1899:27" pos:end="1899:29">ctx</name></expr></argument>, <argument pos:start="1899:32" pos:end="1899:33"><expr pos:start="1899:32" pos:end="1899:33"><name pos:start="1899:32" pos:end="1899:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1901:13" pos:end="1901:35"><expr pos:start="1901:13" pos:end="1901:34"><name pos:start="1901:13" pos:end="1901:14">va</name> <operator pos:start="1901:16" pos:end="1901:16">=</operator> <call pos:start="1901:18" pos:end="1901:34"><name pos:start="1901:18" pos:end="1901:25">dest_gpr</name><argument_list pos:start="1901:26" pos:end="1901:34">(<argument pos:start="1901:27" pos:end="1901:29"><expr pos:start="1901:27" pos:end="1901:29"><name pos:start="1901:27" pos:end="1901:29">ctx</name></expr></argument>, <argument pos:start="1901:32" pos:end="1901:33"><expr pos:start="1901:32" pos:end="1901:33"><name pos:start="1901:32" pos:end="1901:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="1905:13" pos:end="1905:47"><expr pos:start="1905:13" pos:end="1905:46"><call pos:start="1905:13" pos:end="1905:46"><name pos:start="1905:13" pos:end="1905:28">tcg_gen_addi_i64</name><argument_list pos:start="1905:29" pos:end="1905:46">(<argument pos:start="1905:30" pos:end="1905:33"><expr pos:start="1905:30" pos:end="1905:33"><name pos:start="1905:30" pos:end="1905:33">addr</name></expr></argument>, <argument pos:start="1905:36" pos:end="1905:37"><expr pos:start="1905:36" pos:end="1905:37"><name pos:start="1905:36" pos:end="1905:37">vb</name></expr></argument>, <argument pos:start="1905:40" pos:end="1905:45"><expr pos:start="1905:40" pos:end="1905:45"><name pos:start="1905:40" pos:end="1905:45">disp12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1907:13" pos:end="2027:13">switch <condition pos:start="1907:20" pos:end="1907:39">(<expr pos:start="1907:21" pos:end="1907:38"><operator pos:start="1907:21" pos:end="1907:21">(</operator><name pos:start="1907:22" pos:end="1907:25">insn</name> <operator pos:start="1907:27" pos:end="1907:28">&gt;&gt;</operator> <literal type="number" pos:start="1907:30" pos:end="1907:31">12</literal><operator pos:start="1907:32" pos:end="1907:32">)</operator> <operator pos:start="1907:34" pos:end="1907:34">&amp;</operator> <literal type="number" pos:start="1907:36" pos:end="1907:38">0xF</literal></expr>)</condition> <block pos:start="1907:41" pos:end="2027:13">{<block_content pos:start="1909:13" pos:end="2025:22">

            <case pos:start="1909:13" pos:end="1909:21">case <expr pos:start="1909:18" pos:end="1909:20"><literal type="number" pos:start="1909:18" pos:end="1909:20">0x0</literal></expr>:</case>

                <comment type="block" pos:start="1911:17" pos:end="1911:57">/* Longword physical access (hw_ldl/p) */</comment>

                <expr_stmt pos:start="1913:17" pos:end="1913:55"><expr pos:start="1913:17" pos:end="1913:54"><call pos:start="1913:17" pos:end="1913:54"><name pos:start="1913:17" pos:end="1913:35">gen_helper_ldl_phys</name><argument_list pos:start="1913:36" pos:end="1913:54">(<argument pos:start="1913:37" pos:end="1913:38"><expr pos:start="1913:37" pos:end="1913:38"><name pos:start="1913:37" pos:end="1913:38">va</name></expr></argument>, <argument pos:start="1913:41" pos:end="1913:47"><expr pos:start="1913:41" pos:end="1913:47"><name pos:start="1913:41" pos:end="1913:47">cpu_env</name></expr></argument>, <argument pos:start="1913:50" pos:end="1913:53"><expr pos:start="1913:50" pos:end="1913:53"><name pos:start="1913:50" pos:end="1913:53">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1915:17" pos:end="1915:22">break;</break>

            <case pos:start="1917:13" pos:end="1917:21">case <expr pos:start="1917:18" pos:end="1917:20"><literal type="number" pos:start="1917:18" pos:end="1917:20">0x1</literal></expr>:</case>

                <comment type="block" pos:start="1919:17" pos:end="1919:57">/* Quadword physical access (hw_ldq/p) */</comment>

                <expr_stmt pos:start="1921:17" pos:end="1921:55"><expr pos:start="1921:17" pos:end="1921:54"><call pos:start="1921:17" pos:end="1921:54"><name pos:start="1921:17" pos:end="1921:35">gen_helper_ldq_phys</name><argument_list pos:start="1921:36" pos:end="1921:54">(<argument pos:start="1921:37" pos:end="1921:38"><expr pos:start="1921:37" pos:end="1921:38"><name pos:start="1921:37" pos:end="1921:38">va</name></expr></argument>, <argument pos:start="1921:41" pos:end="1921:47"><expr pos:start="1921:41" pos:end="1921:47"><name pos:start="1921:41" pos:end="1921:47">cpu_env</name></expr></argument>, <argument pos:start="1921:50" pos:end="1921:53"><expr pos:start="1921:50" pos:end="1921:53"><name pos:start="1921:50" pos:end="1921:53">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1923:17" pos:end="1923:22">break;</break>

            <case pos:start="1925:13" pos:end="1925:21">case <expr pos:start="1925:18" pos:end="1925:20"><literal type="number" pos:start="1925:18" pos:end="1925:20">0x2</literal></expr>:</case>

                <comment type="block" pos:start="1927:17" pos:end="1927:69">/* Longword physical access with lock (hw_ldl_l/p) */</comment>

                <expr_stmt pos:start="1929:17" pos:end="1929:57"><expr pos:start="1929:17" pos:end="1929:56"><call pos:start="1929:17" pos:end="1929:56"><name pos:start="1929:17" pos:end="1929:37">gen_helper_ldl_l_phys</name><argument_list pos:start="1929:38" pos:end="1929:56">(<argument pos:start="1929:39" pos:end="1929:40"><expr pos:start="1929:39" pos:end="1929:40"><name pos:start="1929:39" pos:end="1929:40">va</name></expr></argument>, <argument pos:start="1929:43" pos:end="1929:49"><expr pos:start="1929:43" pos:end="1929:49"><name pos:start="1929:43" pos:end="1929:49">cpu_env</name></expr></argument>, <argument pos:start="1929:52" pos:end="1929:55"><expr pos:start="1929:52" pos:end="1929:55"><name pos:start="1929:52" pos:end="1929:55">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1931:17" pos:end="1931:22">break;</break>

            <case pos:start="1933:13" pos:end="1933:21">case <expr pos:start="1933:18" pos:end="1933:20"><literal type="number" pos:start="1933:18" pos:end="1933:20">0x3</literal></expr>:</case>

                <comment type="block" pos:start="1935:17" pos:end="1935:69">/* Quadword physical access with lock (hw_ldq_l/p) */</comment>

                <expr_stmt pos:start="1937:17" pos:end="1937:57"><expr pos:start="1937:17" pos:end="1937:56"><call pos:start="1937:17" pos:end="1937:56"><name pos:start="1937:17" pos:end="1937:37">gen_helper_ldq_l_phys</name><argument_list pos:start="1937:38" pos:end="1937:56">(<argument pos:start="1937:39" pos:end="1937:40"><expr pos:start="1937:39" pos:end="1937:40"><name pos:start="1937:39" pos:end="1937:40">va</name></expr></argument>, <argument pos:start="1937:43" pos:end="1937:49"><expr pos:start="1937:43" pos:end="1937:49"><name pos:start="1937:43" pos:end="1937:49">cpu_env</name></expr></argument>, <argument pos:start="1937:52" pos:end="1937:55"><expr pos:start="1937:52" pos:end="1937:55"><name pos:start="1937:52" pos:end="1937:55">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1939:17" pos:end="1939:22">break;</break>

            <case pos:start="1941:13" pos:end="1941:21">case <expr pos:start="1941:18" pos:end="1941:20"><literal type="number" pos:start="1941:18" pos:end="1941:20">0x4</literal></expr>:</case>

                <comment type="block" pos:start="1943:17" pos:end="1943:59">/* Longword virtual PTE fetch (hw_ldl/v) */</comment>

                <goto pos:start="1945:17" pos:end="1945:33">goto <name pos:start="1945:22" pos:end="1945:32">invalid_opc</name>;</goto>

            <case pos:start="1947:13" pos:end="1947:21">case <expr pos:start="1947:18" pos:end="1947:20"><literal type="number" pos:start="1947:18" pos:end="1947:20">0x5</literal></expr>:</case>

                <comment type="block" pos:start="1949:17" pos:end="1949:59">/* Quadword virtual PTE fetch (hw_ldq/v) */</comment>

                <goto pos:start="1951:17" pos:end="1951:33">goto <name pos:start="1951:22" pos:end="1951:32">invalid_opc</name>;</goto>

                <break pos:start="1953:17" pos:end="1953:22">break;</break>

            <case pos:start="1955:13" pos:end="1955:21">case <expr pos:start="1955:18" pos:end="1955:20"><literal type="number" pos:start="1955:18" pos:end="1955:20">0x6</literal></expr>:</case>

                <comment type="block" pos:start="1957:17" pos:end="1957:36">/* Incpu_ir[ra]id */</comment>

                <goto pos:start="1959:17" pos:end="1959:33">goto <name pos:start="1959:22" pos:end="1959:32">invalid_opc</name>;</goto>

            <case pos:start="1961:13" pos:end="1961:21">case <expr pos:start="1961:18" pos:end="1961:20"><literal type="number" pos:start="1961:18" pos:end="1961:20">0x7</literal></expr>:</case>

                <comment type="block" pos:start="1963:17" pos:end="1963:36">/* Incpu_ir[ra]id */</comment>

                <goto pos:start="1965:17" pos:end="1965:33">goto <name pos:start="1965:22" pos:end="1965:32">invalid_opc</name>;</goto>

            <case pos:start="1967:13" pos:end="1967:21">case <expr pos:start="1967:18" pos:end="1967:20"><literal type="number" pos:start="1967:18" pos:end="1967:20">0x8</literal></expr>:</case>

                <comment type="block" pos:start="1969:17" pos:end="1969:54">/* Longword virtual access (hw_ldl) */</comment>

                <goto pos:start="1971:17" pos:end="1971:33">goto <name pos:start="1971:22" pos:end="1971:32">invalid_opc</name>;</goto>

            <case pos:start="1973:13" pos:end="1973:21">case <expr pos:start="1973:18" pos:end="1973:20"><literal type="number" pos:start="1973:18" pos:end="1973:20">0x9</literal></expr>:</case>

                <comment type="block" pos:start="1975:17" pos:end="1975:54">/* Quadword virtual access (hw_ldq) */</comment>

                <goto pos:start="1977:17" pos:end="1977:33">goto <name pos:start="1977:22" pos:end="1977:32">invalid_opc</name>;</goto>

            <case pos:start="1979:13" pos:end="1979:21">case <expr pos:start="1979:18" pos:end="1979:20"><literal type="number" pos:start="1979:18" pos:end="1979:20">0xA</literal></expr>:</case>

                <comment type="block" pos:start="1981:17" pos:end="1981:78">/* Longword virtual access with protection check (hw_ldl/w) */</comment>

                <expr_stmt pos:start="1983:17" pos:end="1983:71"><expr pos:start="1983:17" pos:end="1983:70"><call pos:start="1983:17" pos:end="1983:70"><name pos:start="1983:17" pos:end="1983:35">tcg_gen_qemu_ld_i64</name><argument_list pos:start="1983:36" pos:end="1983:70">(<argument pos:start="1983:37" pos:end="1983:38"><expr pos:start="1983:37" pos:end="1983:38"><name pos:start="1983:37" pos:end="1983:38">va</name></expr></argument>, <argument pos:start="1983:41" pos:end="1983:44"><expr pos:start="1983:41" pos:end="1983:44"><name pos:start="1983:41" pos:end="1983:44">addr</name></expr></argument>, <argument pos:start="1983:47" pos:end="1983:60"><expr pos:start="1983:47" pos:end="1983:60"><name pos:start="1983:47" pos:end="1983:60">MMU_KERNEL_IDX</name></expr></argument>, <argument pos:start="1983:63" pos:end="1983:69"><expr pos:start="1983:63" pos:end="1983:69"><name pos:start="1983:63" pos:end="1983:69">MO_LESL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1985:17" pos:end="1985:22">break;</break>

            <case pos:start="1987:13" pos:end="1987:21">case <expr pos:start="1987:18" pos:end="1987:20"><literal type="number" pos:start="1987:18" pos:end="1987:20">0xB</literal></expr>:</case>

                <comment type="block" pos:start="1989:17" pos:end="1989:78">/* Quadword virtual access with protection check (hw_ldq/w) */</comment>

                <expr_stmt pos:start="1991:17" pos:end="1991:70"><expr pos:start="1991:17" pos:end="1991:69"><call pos:start="1991:17" pos:end="1991:69"><name pos:start="1991:17" pos:end="1991:35">tcg_gen_qemu_ld_i64</name><argument_list pos:start="1991:36" pos:end="1991:69">(<argument pos:start="1991:37" pos:end="1991:38"><expr pos:start="1991:37" pos:end="1991:38"><name pos:start="1991:37" pos:end="1991:38">va</name></expr></argument>, <argument pos:start="1991:41" pos:end="1991:44"><expr pos:start="1991:41" pos:end="1991:44"><name pos:start="1991:41" pos:end="1991:44">addr</name></expr></argument>, <argument pos:start="1991:47" pos:end="1991:60"><expr pos:start="1991:47" pos:end="1991:60"><name pos:start="1991:47" pos:end="1991:60">MMU_KERNEL_IDX</name></expr></argument>, <argument pos:start="1991:63" pos:end="1991:68"><expr pos:start="1991:63" pos:end="1991:68"><name pos:start="1991:63" pos:end="1991:68">MO_LEQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1993:17" pos:end="1993:22">break;</break>

            <case pos:start="1995:13" pos:end="1995:21">case <expr pos:start="1995:18" pos:end="1995:20"><literal type="number" pos:start="1995:18" pos:end="1995:20">0xC</literal></expr>:</case>

                <comment type="block" pos:start="1997:17" pos:end="1997:76">/* Longword virtual access with alt access mode (hw_ldl/a)*/</comment>

                <goto pos:start="1999:17" pos:end="1999:33">goto <name pos:start="1999:22" pos:end="1999:32">invalid_opc</name>;</goto>

            <case pos:start="2001:13" pos:end="2001:21">case <expr pos:start="2001:18" pos:end="2001:20"><literal type="number" pos:start="2001:18" pos:end="2001:20">0xD</literal></expr>:</case>

                <comment type="block" pos:start="2003:17" pos:end="2003:77">/* Quadword virtual access with alt access mode (hw_ldq/a) */</comment>

                <goto pos:start="2005:17" pos:end="2005:33">goto <name pos:start="2005:22" pos:end="2005:32">invalid_opc</name>;</goto>

            <case pos:start="2007:13" pos:end="2007:21">case <expr pos:start="2007:18" pos:end="2007:20"><literal type="number" pos:start="2007:18" pos:end="2007:20">0xE</literal></expr>:</case>

                <comment type="block" pos:start="2009:17" pos:end="2011:51">/* Longword virtual access with alternate access mode and

                   protection checks (hw_ldl/wa) */</comment>

                <expr_stmt pos:start="2013:17" pos:end="2013:69"><expr pos:start="2013:17" pos:end="2013:68"><call pos:start="2013:17" pos:end="2013:68"><name pos:start="2013:17" pos:end="2013:35">tcg_gen_qemu_ld_i64</name><argument_list pos:start="2013:36" pos:end="2013:68">(<argument pos:start="2013:37" pos:end="2013:38"><expr pos:start="2013:37" pos:end="2013:38"><name pos:start="2013:37" pos:end="2013:38">va</name></expr></argument>, <argument pos:start="2013:41" pos:end="2013:44"><expr pos:start="2013:41" pos:end="2013:44"><name pos:start="2013:41" pos:end="2013:44">addr</name></expr></argument>, <argument pos:start="2013:47" pos:end="2013:58"><expr pos:start="2013:47" pos:end="2013:58"><name pos:start="2013:47" pos:end="2013:58">MMU_USER_IDX</name></expr></argument>, <argument pos:start="2013:61" pos:end="2013:67"><expr pos:start="2013:61" pos:end="2013:67"><name pos:start="2013:61" pos:end="2013:67">MO_LESL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2015:17" pos:end="2015:22">break;</break>

            <case pos:start="2017:13" pos:end="2017:21">case <expr pos:start="2017:18" pos:end="2017:20"><literal type="number" pos:start="2017:18" pos:end="2017:20">0xF</literal></expr>:</case>

                <comment type="block" pos:start="2019:17" pos:end="2021:51">/* Quadword virtual access with alternate access mode and

                   protection checks (hw_ldq/wa) */</comment>

                <expr_stmt pos:start="2023:17" pos:end="2023:68"><expr pos:start="2023:17" pos:end="2023:67"><call pos:start="2023:17" pos:end="2023:67"><name pos:start="2023:17" pos:end="2023:35">tcg_gen_qemu_ld_i64</name><argument_list pos:start="2023:36" pos:end="2023:67">(<argument pos:start="2023:37" pos:end="2023:38"><expr pos:start="2023:37" pos:end="2023:38"><name pos:start="2023:37" pos:end="2023:38">va</name></expr></argument>, <argument pos:start="2023:41" pos:end="2023:44"><expr pos:start="2023:41" pos:end="2023:44"><name pos:start="2023:41" pos:end="2023:44">addr</name></expr></argument>, <argument pos:start="2023:47" pos:end="2023:58"><expr pos:start="2023:47" pos:end="2023:58"><name pos:start="2023:47" pos:end="2023:58">MMU_USER_IDX</name></expr></argument>, <argument pos:start="2023:61" pos:end="2023:66"><expr pos:start="2023:61" pos:end="2023:66"><name pos:start="2023:61" pos:end="2023:66">MO_LEQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2025:17" pos:end="2025:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="2029:13" pos:end="2029:32"><expr pos:start="2029:13" pos:end="2029:31"><call pos:start="2029:13" pos:end="2029:31"><name pos:start="2029:13" pos:end="2029:25">tcg_temp_free</name><argument_list pos:start="2029:26" pos:end="2029:31">(<argument pos:start="2029:27" pos:end="2029:30"><expr pos:start="2029:27" pos:end="2029:30"><name pos:start="2029:27" pos:end="2029:30">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2031:13" pos:end="2031:18">break;</break>

        </block_content>}</block>

<cpp:else pos:start="2035:1" pos:end="2035:5">#<cpp:directive pos:start="2035:2" pos:end="2035:5">else</cpp:directive></cpp:else>

        <goto pos:start="2037:9" pos:end="2040:0">goto <name pos:start="2037:14" pos:end="2037:24">invalid_opc</name>;</goto>

<cpp:endif pos:start="2039:1" pos:end="2039:6">#<cpp:directive pos:start="2039:2" pos:end="2039:6">endif</cpp:directive></cpp:endif>



    <case pos:start="2043:5" pos:end="2043:14">case <expr pos:start="2043:10" pos:end="2043:13"><literal type="number" pos:start="2043:10" pos:end="2043:13">0x1C</literal></expr>:</case>

        <expr_stmt pos:start="2045:9" pos:end="2045:31"><expr pos:start="2045:9" pos:end="2045:30"><name pos:start="2045:9" pos:end="2045:10">vc</name> <operator pos:start="2045:12" pos:end="2045:12">=</operator> <call pos:start="2045:14" pos:end="2045:30"><name pos:start="2045:14" pos:end="2045:21">dest_gpr</name><argument_list pos:start="2045:22" pos:end="2045:30">(<argument pos:start="2045:23" pos:end="2045:25"><expr pos:start="2045:23" pos:end="2045:25"><name pos:start="2045:23" pos:end="2045:25">ctx</name></expr></argument>, <argument pos:start="2045:28" pos:end="2045:29"><expr pos:start="2045:28" pos:end="2045:29"><name pos:start="2045:28" pos:end="2045:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="2047:9" pos:end="2081:9"><if pos:start="2047:9" pos:end="2061:9">if <condition pos:start="2047:12" pos:end="2047:24">(<expr pos:start="2047:13" pos:end="2047:23"><name pos:start="2047:13" pos:end="2047:15">fn7</name> <operator pos:start="2047:17" pos:end="2047:18">==</operator> <literal type="number" pos:start="2047:20" pos:end="2047:23">0x70</literal></expr>)</condition> <block pos:start="2047:26" pos:end="2061:9">{<block_content pos:start="2051:13" pos:end="2059:18">

            <comment type="block" pos:start="2049:13" pos:end="2049:23">/* FTOIT */</comment>

            <expr_stmt pos:start="2051:13" pos:end="2051:48"><expr pos:start="2051:13" pos:end="2051:47"><call pos:start="2051:13" pos:end="2051:47"><name pos:start="2051:13" pos:end="2051:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2051:28" pos:end="2051:47">(<argument pos:start="2051:29" pos:end="2051:46"><expr pos:start="2051:29" pos:end="2051:46"><name pos:start="2051:29" pos:end="2051:46">TB_FLAGS_AMASK_FIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2053:13" pos:end="2053:31"><expr pos:start="2053:13" pos:end="2053:30"><call pos:start="2053:13" pos:end="2053:30"><name pos:start="2053:13" pos:end="2053:26">REQUIRE_REG_31</name><argument_list pos:start="2053:27" pos:end="2053:30">(<argument pos:start="2053:28" pos:end="2053:29"><expr pos:start="2053:28" pos:end="2053:29"><name pos:start="2053:28" pos:end="2053:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2055:13" pos:end="2055:35"><expr pos:start="2055:13" pos:end="2055:34"><name pos:start="2055:13" pos:end="2055:14">va</name> <operator pos:start="2055:16" pos:end="2055:16">=</operator> <call pos:start="2055:18" pos:end="2055:34"><name pos:start="2055:18" pos:end="2055:25">load_fpr</name><argument_list pos:start="2055:26" pos:end="2055:34">(<argument pos:start="2055:27" pos:end="2055:29"><expr pos:start="2055:27" pos:end="2055:29"><name pos:start="2055:27" pos:end="2055:29">ctx</name></expr></argument>, <argument pos:start="2055:32" pos:end="2055:33"><expr pos:start="2055:32" pos:end="2055:33"><name pos:start="2055:32" pos:end="2055:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2057:13" pos:end="2057:36"><expr pos:start="2057:13" pos:end="2057:35"><call pos:start="2057:13" pos:end="2057:35"><name pos:start="2057:13" pos:end="2057:27">tcg_gen_mov_i64</name><argument_list pos:start="2057:28" pos:end="2057:35">(<argument pos:start="2057:29" pos:end="2057:30"><expr pos:start="2057:29" pos:end="2057:30"><name pos:start="2057:29" pos:end="2057:30">vc</name></expr></argument>, <argument pos:start="2057:33" pos:end="2057:34"><expr pos:start="2057:33" pos:end="2057:34"><name pos:start="2057:33" pos:end="2057:34">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2059:13" pos:end="2059:18">break;</break>

        </block_content>}</block></if> <if type="elseif" pos:start="2061:11" pos:end="2081:9">else if <condition pos:start="2061:19" pos:end="2061:31">(<expr pos:start="2061:20" pos:end="2061:30"><name pos:start="2061:20" pos:end="2061:22">fn7</name> <operator pos:start="2061:24" pos:end="2061:25">==</operator> <literal type="number" pos:start="2061:27" pos:end="2061:30">0x78</literal></expr>)</condition> <block pos:start="2061:33" pos:end="2081:9">{<block_content pos:start="2065:13" pos:end="2079:18">

            <comment type="block" pos:start="2063:13" pos:end="2063:23">/* FTOIS */</comment>

            <expr_stmt pos:start="2065:13" pos:end="2065:48"><expr pos:start="2065:13" pos:end="2065:47"><call pos:start="2065:13" pos:end="2065:47"><name pos:start="2065:13" pos:end="2065:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2065:28" pos:end="2065:47">(<argument pos:start="2065:29" pos:end="2065:46"><expr pos:start="2065:29" pos:end="2065:46"><name pos:start="2065:29" pos:end="2065:46">TB_FLAGS_AMASK_FIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2067:13" pos:end="2067:31"><expr pos:start="2067:13" pos:end="2067:30"><call pos:start="2067:13" pos:end="2067:30"><name pos:start="2067:13" pos:end="2067:26">REQUIRE_REG_31</name><argument_list pos:start="2067:27" pos:end="2067:30">(<argument pos:start="2067:28" pos:end="2067:29"><expr pos:start="2067:28" pos:end="2067:29"><name pos:start="2067:28" pos:end="2067:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2069:13" pos:end="2069:37"><expr pos:start="2069:13" pos:end="2069:36"><name pos:start="2069:13" pos:end="2069:15">t32</name> <operator pos:start="2069:17" pos:end="2069:17">=</operator> <call pos:start="2069:19" pos:end="2069:36"><name pos:start="2069:19" pos:end="2069:34">tcg_temp_new_i32</name><argument_list pos:start="2069:35" pos:end="2069:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2071:13" pos:end="2071:35"><expr pos:start="2071:13" pos:end="2071:34"><name pos:start="2071:13" pos:end="2071:14">va</name> <operator pos:start="2071:16" pos:end="2071:16">=</operator> <call pos:start="2071:18" pos:end="2071:34"><name pos:start="2071:18" pos:end="2071:25">load_fpr</name><argument_list pos:start="2071:26" pos:end="2071:34">(<argument pos:start="2071:27" pos:end="2071:29"><expr pos:start="2071:27" pos:end="2071:29"><name pos:start="2071:27" pos:end="2071:29">ctx</name></expr></argument>, <argument pos:start="2071:32" pos:end="2071:33"><expr pos:start="2071:32" pos:end="2071:33"><name pos:start="2071:32" pos:end="2071:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2073:13" pos:end="2073:44"><expr pos:start="2073:13" pos:end="2073:43"><call pos:start="2073:13" pos:end="2073:43"><name pos:start="2073:13" pos:end="2073:34">gen_helper_s_to_memory</name><argument_list pos:start="2073:35" pos:end="2073:43">(<argument pos:start="2073:36" pos:end="2073:38"><expr pos:start="2073:36" pos:end="2073:38"><name pos:start="2073:36" pos:end="2073:38">t32</name></expr></argument>, <argument pos:start="2073:41" pos:end="2073:42"><expr pos:start="2073:41" pos:end="2073:42"><name pos:start="2073:41" pos:end="2073:42">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2075:13" pos:end="2075:41"><expr pos:start="2075:13" pos:end="2075:40"><call pos:start="2075:13" pos:end="2075:40"><name pos:start="2075:13" pos:end="2075:31">tcg_gen_ext_i32_i64</name><argument_list pos:start="2075:32" pos:end="2075:40">(<argument pos:start="2075:33" pos:end="2075:34"><expr pos:start="2075:33" pos:end="2075:34"><name pos:start="2075:33" pos:end="2075:34">vc</name></expr></argument>, <argument pos:start="2075:37" pos:end="2075:39"><expr pos:start="2075:37" pos:end="2075:39"><name pos:start="2075:37" pos:end="2075:39">t32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2077:13" pos:end="2077:35"><expr pos:start="2077:13" pos:end="2077:34"><call pos:start="2077:13" pos:end="2077:34"><name pos:start="2077:13" pos:end="2077:29">tcg_temp_free_i32</name><argument_list pos:start="2077:30" pos:end="2077:34">(<argument pos:start="2077:31" pos:end="2077:33"><expr pos:start="2077:31" pos:end="2077:33"><name pos:start="2077:31" pos:end="2077:33">t32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2079:13" pos:end="2079:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="2085:9" pos:end="2085:47"><expr pos:start="2085:9" pos:end="2085:46"><name pos:start="2085:9" pos:end="2085:10">vb</name> <operator pos:start="2085:12" pos:end="2085:12">=</operator> <call pos:start="2085:14" pos:end="2085:46"><name pos:start="2085:14" pos:end="2085:25">load_gpr_lit</name><argument_list pos:start="2085:26" pos:end="2085:46">(<argument pos:start="2085:27" pos:end="2085:29"><expr pos:start="2085:27" pos:end="2085:29"><name pos:start="2085:27" pos:end="2085:29">ctx</name></expr></argument>, <argument pos:start="2085:32" pos:end="2085:33"><expr pos:start="2085:32" pos:end="2085:33"><name pos:start="2085:32" pos:end="2085:33">rb</name></expr></argument>, <argument pos:start="2085:36" pos:end="2085:38"><expr pos:start="2085:36" pos:end="2085:38"><name pos:start="2085:36" pos:end="2085:38">lit</name></expr></argument>, <argument pos:start="2085:41" pos:end="2085:45"><expr pos:start="2085:41" pos:end="2085:45"><name pos:start="2085:41" pos:end="2085:45">islit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="2087:9" pos:end="2309:9">switch <condition pos:start="2087:16" pos:end="2087:20">(<expr pos:start="2087:17" pos:end="2087:19"><name pos:start="2087:17" pos:end="2087:19">fn7</name></expr>)</condition> <block pos:start="2087:22" pos:end="2309:9">{<block_content pos:start="2089:9" pos:end="2307:29">

        <case pos:start="2089:9" pos:end="2089:18">case <expr pos:start="2089:14" pos:end="2089:17"><literal type="number" pos:start="2089:14" pos:end="2089:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="2091:13" pos:end="2091:23">/* SEXTB */</comment>

            <expr_stmt pos:start="2093:13" pos:end="2093:48"><expr pos:start="2093:13" pos:end="2093:47"><call pos:start="2093:13" pos:end="2093:47"><name pos:start="2093:13" pos:end="2093:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2093:28" pos:end="2093:47">(<argument pos:start="2093:29" pos:end="2093:46"><expr pos:start="2093:29" pos:end="2093:46"><name pos:start="2093:29" pos:end="2093:46">TB_FLAGS_AMASK_BWX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2095:13" pos:end="2095:31"><expr pos:start="2095:13" pos:end="2095:30"><call pos:start="2095:13" pos:end="2095:30"><name pos:start="2095:13" pos:end="2095:26">REQUIRE_REG_31</name><argument_list pos:start="2095:27" pos:end="2095:30">(<argument pos:start="2095:28" pos:end="2095:29"><expr pos:start="2095:28" pos:end="2095:29"><name pos:start="2095:28" pos:end="2095:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2097:13" pos:end="2097:38"><expr pos:start="2097:13" pos:end="2097:37"><call pos:start="2097:13" pos:end="2097:37"><name pos:start="2097:13" pos:end="2097:29">tcg_gen_ext8s_i64</name><argument_list pos:start="2097:30" pos:end="2097:37">(<argument pos:start="2097:31" pos:end="2097:32"><expr pos:start="2097:31" pos:end="2097:32"><name pos:start="2097:31" pos:end="2097:32">vc</name></expr></argument>, <argument pos:start="2097:35" pos:end="2097:36"><expr pos:start="2097:35" pos:end="2097:36"><name pos:start="2097:35" pos:end="2097:36">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2099:13" pos:end="2099:18">break;</break>

        <case pos:start="2101:9" pos:end="2101:18">case <expr pos:start="2101:14" pos:end="2101:17"><literal type="number" pos:start="2101:14" pos:end="2101:17">0x01</literal></expr>:</case>

            <comment type="block" pos:start="2103:13" pos:end="2103:23">/* SEXTW */</comment>

            <expr_stmt pos:start="2105:13" pos:end="2105:48"><expr pos:start="2105:13" pos:end="2105:47"><call pos:start="2105:13" pos:end="2105:47"><name pos:start="2105:13" pos:end="2105:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2105:28" pos:end="2105:47">(<argument pos:start="2105:29" pos:end="2105:46"><expr pos:start="2105:29" pos:end="2105:46"><name pos:start="2105:29" pos:end="2105:46">TB_FLAGS_AMASK_BWX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2107:13" pos:end="2107:31"><expr pos:start="2107:13" pos:end="2107:30"><call pos:start="2107:13" pos:end="2107:30"><name pos:start="2107:13" pos:end="2107:26">REQUIRE_REG_31</name><argument_list pos:start="2107:27" pos:end="2107:30">(<argument pos:start="2107:28" pos:end="2107:29"><expr pos:start="2107:28" pos:end="2107:29"><name pos:start="2107:28" pos:end="2107:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2109:13" pos:end="2109:39"><expr pos:start="2109:13" pos:end="2109:38"><call pos:start="2109:13" pos:end="2109:38"><name pos:start="2109:13" pos:end="2109:30">tcg_gen_ext16s_i64</name><argument_list pos:start="2109:31" pos:end="2109:38">(<argument pos:start="2109:32" pos:end="2109:33"><expr pos:start="2109:32" pos:end="2109:33"><name pos:start="2109:32" pos:end="2109:33">vc</name></expr></argument>, <argument pos:start="2109:36" pos:end="2109:37"><expr pos:start="2109:36" pos:end="2109:37"><name pos:start="2109:36" pos:end="2109:37">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2111:13" pos:end="2111:18">break;</break>

        <case pos:start="2113:9" pos:end="2113:18">case <expr pos:start="2113:14" pos:end="2113:17"><literal type="number" pos:start="2113:14" pos:end="2113:17">0x30</literal></expr>:</case>

            <comment type="block" pos:start="2115:13" pos:end="2115:23">/* CTPOP */</comment>

            <expr_stmt pos:start="2117:13" pos:end="2117:48"><expr pos:start="2117:13" pos:end="2117:47"><call pos:start="2117:13" pos:end="2117:47"><name pos:start="2117:13" pos:end="2117:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2117:28" pos:end="2117:47">(<argument pos:start="2117:29" pos:end="2117:46"><expr pos:start="2117:29" pos:end="2117:46"><name pos:start="2117:29" pos:end="2117:46">TB_FLAGS_AMASK_CIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2119:13" pos:end="2119:31"><expr pos:start="2119:13" pos:end="2119:30"><call pos:start="2119:13" pos:end="2119:30"><name pos:start="2119:13" pos:end="2119:26">REQUIRE_REG_31</name><argument_list pos:start="2119:27" pos:end="2119:30">(<argument pos:start="2119:28" pos:end="2119:29"><expr pos:start="2119:28" pos:end="2119:29"><name pos:start="2119:28" pos:end="2119:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2121:13" pos:end="2121:37"><expr pos:start="2121:13" pos:end="2121:36"><call pos:start="2121:13" pos:end="2121:36"><name pos:start="2121:13" pos:end="2121:28">gen_helper_ctpop</name><argument_list pos:start="2121:29" pos:end="2121:36">(<argument pos:start="2121:30" pos:end="2121:31"><expr pos:start="2121:30" pos:end="2121:31"><name pos:start="2121:30" pos:end="2121:31">vc</name></expr></argument>, <argument pos:start="2121:34" pos:end="2121:35"><expr pos:start="2121:34" pos:end="2121:35"><name pos:start="2121:34" pos:end="2121:35">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2123:13" pos:end="2123:18">break;</break>

        <case pos:start="2125:9" pos:end="2125:18">case <expr pos:start="2125:14" pos:end="2125:17"><literal type="number" pos:start="2125:14" pos:end="2125:17">0x31</literal></expr>:</case>

            <comment type="block" pos:start="2127:13" pos:end="2127:22">/* PERR */</comment>

            <expr_stmt pos:start="2129:13" pos:end="2129:48"><expr pos:start="2129:13" pos:end="2129:47"><call pos:start="2129:13" pos:end="2129:47"><name pos:start="2129:13" pos:end="2129:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2129:28" pos:end="2129:47">(<argument pos:start="2129:29" pos:end="2129:46"><expr pos:start="2129:29" pos:end="2129:46"><name pos:start="2129:29" pos:end="2129:46">TB_FLAGS_AMASK_MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2131:13" pos:end="2131:35"><expr pos:start="2131:13" pos:end="2131:34"><name pos:start="2131:13" pos:end="2131:14">va</name> <operator pos:start="2131:16" pos:end="2131:16">=</operator> <call pos:start="2131:18" pos:end="2131:34"><name pos:start="2131:18" pos:end="2131:25">load_gpr</name><argument_list pos:start="2131:26" pos:end="2131:34">(<argument pos:start="2131:27" pos:end="2131:29"><expr pos:start="2131:27" pos:end="2131:29"><name pos:start="2131:27" pos:end="2131:29">ctx</name></expr></argument>, <argument pos:start="2131:32" pos:end="2131:33"><expr pos:start="2131:32" pos:end="2131:33"><name pos:start="2131:32" pos:end="2131:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2133:13" pos:end="2133:40"><expr pos:start="2133:13" pos:end="2133:39"><call pos:start="2133:13" pos:end="2133:39"><name pos:start="2133:13" pos:end="2133:27">gen_helper_perr</name><argument_list pos:start="2133:28" pos:end="2133:39">(<argument pos:start="2133:29" pos:end="2133:30"><expr pos:start="2133:29" pos:end="2133:30"><name pos:start="2133:29" pos:end="2133:30">vc</name></expr></argument>, <argument pos:start="2133:33" pos:end="2133:34"><expr pos:start="2133:33" pos:end="2133:34"><name pos:start="2133:33" pos:end="2133:34">va</name></expr></argument>, <argument pos:start="2133:37" pos:end="2133:38"><expr pos:start="2133:37" pos:end="2133:38"><name pos:start="2133:37" pos:end="2133:38">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2135:13" pos:end="2135:18">break;</break>

        <case pos:start="2137:9" pos:end="2137:18">case <expr pos:start="2137:14" pos:end="2137:17"><literal type="number" pos:start="2137:14" pos:end="2137:17">0x32</literal></expr>:</case>

            <comment type="block" pos:start="2139:13" pos:end="2139:22">/* CTLZ */</comment>

            <expr_stmt pos:start="2141:13" pos:end="2141:48"><expr pos:start="2141:13" pos:end="2141:47"><call pos:start="2141:13" pos:end="2141:47"><name pos:start="2141:13" pos:end="2141:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2141:28" pos:end="2141:47">(<argument pos:start="2141:29" pos:end="2141:46"><expr pos:start="2141:29" pos:end="2141:46"><name pos:start="2141:29" pos:end="2141:46">TB_FLAGS_AMASK_CIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2143:13" pos:end="2143:31"><expr pos:start="2143:13" pos:end="2143:30"><call pos:start="2143:13" pos:end="2143:30"><name pos:start="2143:13" pos:end="2143:26">REQUIRE_REG_31</name><argument_list pos:start="2143:27" pos:end="2143:30">(<argument pos:start="2143:28" pos:end="2143:29"><expr pos:start="2143:28" pos:end="2143:29"><name pos:start="2143:28" pos:end="2143:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2145:13" pos:end="2145:36"><expr pos:start="2145:13" pos:end="2145:35"><call pos:start="2145:13" pos:end="2145:35"><name pos:start="2145:13" pos:end="2145:27">gen_helper_ctlz</name><argument_list pos:start="2145:28" pos:end="2145:35">(<argument pos:start="2145:29" pos:end="2145:30"><expr pos:start="2145:29" pos:end="2145:30"><name pos:start="2145:29" pos:end="2145:30">vc</name></expr></argument>, <argument pos:start="2145:33" pos:end="2145:34"><expr pos:start="2145:33" pos:end="2145:34"><name pos:start="2145:33" pos:end="2145:34">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2147:13" pos:end="2147:18">break;</break>

        <case pos:start="2149:9" pos:end="2149:18">case <expr pos:start="2149:14" pos:end="2149:17"><literal type="number" pos:start="2149:14" pos:end="2149:17">0x33</literal></expr>:</case>

            <comment type="block" pos:start="2151:13" pos:end="2151:22">/* CTTZ */</comment>

            <expr_stmt pos:start="2153:13" pos:end="2153:48"><expr pos:start="2153:13" pos:end="2153:47"><call pos:start="2153:13" pos:end="2153:47"><name pos:start="2153:13" pos:end="2153:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2153:28" pos:end="2153:47">(<argument pos:start="2153:29" pos:end="2153:46"><expr pos:start="2153:29" pos:end="2153:46"><name pos:start="2153:29" pos:end="2153:46">TB_FLAGS_AMASK_CIX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2155:13" pos:end="2155:31"><expr pos:start="2155:13" pos:end="2155:30"><call pos:start="2155:13" pos:end="2155:30"><name pos:start="2155:13" pos:end="2155:26">REQUIRE_REG_31</name><argument_list pos:start="2155:27" pos:end="2155:30">(<argument pos:start="2155:28" pos:end="2155:29"><expr pos:start="2155:28" pos:end="2155:29"><name pos:start="2155:28" pos:end="2155:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2157:13" pos:end="2157:36"><expr pos:start="2157:13" pos:end="2157:35"><call pos:start="2157:13" pos:end="2157:35"><name pos:start="2157:13" pos:end="2157:27">gen_helper_cttz</name><argument_list pos:start="2157:28" pos:end="2157:35">(<argument pos:start="2157:29" pos:end="2157:30"><expr pos:start="2157:29" pos:end="2157:30"><name pos:start="2157:29" pos:end="2157:30">vc</name></expr></argument>, <argument pos:start="2157:33" pos:end="2157:34"><expr pos:start="2157:33" pos:end="2157:34"><name pos:start="2157:33" pos:end="2157:34">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2159:13" pos:end="2159:18">break;</break>

        <case pos:start="2161:9" pos:end="2161:18">case <expr pos:start="2161:14" pos:end="2161:17"><literal type="number" pos:start="2161:14" pos:end="2161:17">0x34</literal></expr>:</case>

            <comment type="block" pos:start="2163:13" pos:end="2163:24">/* UNPKBW */</comment>

            <expr_stmt pos:start="2165:13" pos:end="2165:48"><expr pos:start="2165:13" pos:end="2165:47"><call pos:start="2165:13" pos:end="2165:47"><name pos:start="2165:13" pos:end="2165:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2165:28" pos:end="2165:47">(<argument pos:start="2165:29" pos:end="2165:46"><expr pos:start="2165:29" pos:end="2165:46"><name pos:start="2165:29" pos:end="2165:46">TB_FLAGS_AMASK_MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2167:13" pos:end="2167:31"><expr pos:start="2167:13" pos:end="2167:30"><call pos:start="2167:13" pos:end="2167:30"><name pos:start="2167:13" pos:end="2167:26">REQUIRE_REG_31</name><argument_list pos:start="2167:27" pos:end="2167:30">(<argument pos:start="2167:28" pos:end="2167:29"><expr pos:start="2167:28" pos:end="2167:29"><name pos:start="2167:28" pos:end="2167:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2169:13" pos:end="2169:38"><expr pos:start="2169:13" pos:end="2169:37"><call pos:start="2169:13" pos:end="2169:37"><name pos:start="2169:13" pos:end="2169:29">gen_helper_unpkbw</name><argument_list pos:start="2169:30" pos:end="2169:37">(<argument pos:start="2169:31" pos:end="2169:32"><expr pos:start="2169:31" pos:end="2169:32"><name pos:start="2169:31" pos:end="2169:32">vc</name></expr></argument>, <argument pos:start="2169:35" pos:end="2169:36"><expr pos:start="2169:35" pos:end="2169:36"><name pos:start="2169:35" pos:end="2169:36">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2171:13" pos:end="2171:18">break;</break>

        <case pos:start="2173:9" pos:end="2173:18">case <expr pos:start="2173:14" pos:end="2173:17"><literal type="number" pos:start="2173:14" pos:end="2173:17">0x35</literal></expr>:</case>

            <comment type="block" pos:start="2175:13" pos:end="2175:24">/* UNPKBL */</comment>

            <expr_stmt pos:start="2177:13" pos:end="2177:48"><expr pos:start="2177:13" pos:end="2177:47"><call pos:start="2177:13" pos:end="2177:47"><name pos:start="2177:13" pos:end="2177:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2177:28" pos:end="2177:47">(<argument pos:start="2177:29" pos:end="2177:46"><expr pos:start="2177:29" pos:end="2177:46"><name pos:start="2177:29" pos:end="2177:46">TB_FLAGS_AMASK_MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2179:13" pos:end="2179:31"><expr pos:start="2179:13" pos:end="2179:30"><call pos:start="2179:13" pos:end="2179:30"><name pos:start="2179:13" pos:end="2179:26">REQUIRE_REG_31</name><argument_list pos:start="2179:27" pos:end="2179:30">(<argument pos:start="2179:28" pos:end="2179:29"><expr pos:start="2179:28" pos:end="2179:29"><name pos:start="2179:28" pos:end="2179:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2181:13" pos:end="2181:38"><expr pos:start="2181:13" pos:end="2181:37"><call pos:start="2181:13" pos:end="2181:37"><name pos:start="2181:13" pos:end="2181:29">gen_helper_unpkbl</name><argument_list pos:start="2181:30" pos:end="2181:37">(<argument pos:start="2181:31" pos:end="2181:32"><expr pos:start="2181:31" pos:end="2181:32"><name pos:start="2181:31" pos:end="2181:32">vc</name></expr></argument>, <argument pos:start="2181:35" pos:end="2181:36"><expr pos:start="2181:35" pos:end="2181:36"><name pos:start="2181:35" pos:end="2181:36">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2183:13" pos:end="2183:18">break;</break>

        <case pos:start="2185:9" pos:end="2185:18">case <expr pos:start="2185:14" pos:end="2185:17"><literal type="number" pos:start="2185:14" pos:end="2185:17">0x36</literal></expr>:</case>

            <comment type="block" pos:start="2187:13" pos:end="2187:22">/* PKWB */</comment>

            <expr_stmt pos:start="2189:13" pos:end="2189:48"><expr pos:start="2189:13" pos:end="2189:47"><call pos:start="2189:13" pos:end="2189:47"><name pos:start="2189:13" pos:end="2189:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2189:28" pos:end="2189:47">(<argument pos:start="2189:29" pos:end="2189:46"><expr pos:start="2189:29" pos:end="2189:46"><name pos:start="2189:29" pos:end="2189:46">TB_FLAGS_AMASK_MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2191:13" pos:end="2191:31"><expr pos:start="2191:13" pos:end="2191:30"><call pos:start="2191:13" pos:end="2191:30"><name pos:start="2191:13" pos:end="2191:26">REQUIRE_REG_31</name><argument_list pos:start="2191:27" pos:end="2191:30">(<argument pos:start="2191:28" pos:end="2191:29"><expr pos:start="2191:28" pos:end="2191:29"><name pos:start="2191:28" pos:end="2191:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2193:13" pos:end="2193:36"><expr pos:start="2193:13" pos:end="2193:35"><call pos:start="2193:13" pos:end="2193:35"><name pos:start="2193:13" pos:end="2193:27">gen_helper_pkwb</name><argument_list pos:start="2193:28" pos:end="2193:35">(<argument pos:start="2193:29" pos:end="2193:30"><expr pos:start="2193:29" pos:end="2193:30"><name pos:start="2193:29" pos:end="2193:30">vc</name></expr></argument>, <argument pos:start="2193:33" pos:end="2193:34"><expr pos:start="2193:33" pos:end="2193:34"><name pos:start="2193:33" pos:end="2193:34">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2195:13" pos:end="2195:18">break;</break>

        <case pos:start="2197:9" pos:end="2197:18">case <expr pos:start="2197:14" pos:end="2197:17"><literal type="number" pos:start="2197:14" pos:end="2197:17">0x37</literal></expr>:</case>

            <comment type="block" pos:start="2199:13" pos:end="2199:22">/* PKLB */</comment>

            <expr_stmt pos:start="2201:13" pos:end="2201:48"><expr pos:start="2201:13" pos:end="2201:47"><call pos:start="2201:13" pos:end="2201:47"><name pos:start="2201:13" pos:end="2201:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2201:28" pos:end="2201:47">(<argument pos:start="2201:29" pos:end="2201:46"><expr pos:start="2201:29" pos:end="2201:46"><name pos:start="2201:29" pos:end="2201:46">TB_FLAGS_AMASK_MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2203:13" pos:end="2203:31"><expr pos:start="2203:13" pos:end="2203:30"><call pos:start="2203:13" pos:end="2203:30"><name pos:start="2203:13" pos:end="2203:26">REQUIRE_REG_31</name><argument_list pos:start="2203:27" pos:end="2203:30">(<argument pos:start="2203:28" pos:end="2203:29"><expr pos:start="2203:28" pos:end="2203:29"><name pos:start="2203:28" pos:end="2203:29">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2205:13" pos:end="2205:36"><expr pos:start="2205:13" pos:end="2205:35"><call pos:start="2205:13" pos:end="2205:35"><name pos:start="2205:13" pos:end="2205:27">gen_helper_pklb</name><argument_list pos:start="2205:28" pos:end="2205:35">(<argument pos:start="2205:29" pos:end="2205:30"><expr pos:start="2205:29" pos:end="2205:30"><name pos:start="2205:29" pos:end="2205:30">vc</name></expr></argument>, <argument pos:start="2205:33" pos:end="2205:34"><expr pos:start="2205:33" pos:end="2205:34"><name pos:start="2205:33" pos:end="2205:34">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2207:13" pos:end="2207:18">break;</break>

        <case pos:start="2209:9" pos:end="2209:18">case <expr pos:start="2209:14" pos:end="2209:17"><literal type="number" pos:start="2209:14" pos:end="2209:17">0x38</literal></expr>:</case>

            <comment type="block" pos:start="2211:13" pos:end="2211:24">/* MINSB8 */</comment>

            <expr_stmt pos:start="2213:13" pos:end="2213:48"><expr pos:start="2213:13" pos:end="2213:47"><call pos:start="2213:13" pos:end="2213:47"><name pos:start="2213:13" pos:end="2213:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2213:28" pos:end="2213:47">(<argument pos:start="2213:29" pos:end="2213:46"><expr pos:start="2213:29" pos:end="2213:46"><name pos:start="2213:29" pos:end="2213:46">TB_FLAGS_AMASK_MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2215:13" pos:end="2215:35"><expr pos:start="2215:13" pos:end="2215:34"><name pos:start="2215:13" pos:end="2215:14">va</name> <operator pos:start="2215:16" pos:end="2215:16">=</operator> <call pos:start="2215:18" pos:end="2215:34"><name pos:start="2215:18" pos:end="2215:25">load_gpr</name><argument_list pos:start="2215:26" pos:end="2215:34">(<argument pos:start="2215:27" pos:end="2215:29"><expr pos:start="2215:27" pos:end="2215:29"><name pos:start="2215:27" pos:end="2215:29">ctx</name></expr></argument>, <argument pos:start="2215:32" pos:end="2215:33"><expr pos:start="2215:32" pos:end="2215:33"><name pos:start="2215:32" pos:end="2215:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2217:13" pos:end="2217:42"><expr pos:start="2217:13" pos:end="2217:41"><call pos:start="2217:13" pos:end="2217:41"><name pos:start="2217:13" pos:end="2217:29">gen_helper_minsb8</name><argument_list pos:start="2217:30" pos:end="2217:41">(<argument pos:start="2217:31" pos:end="2217:32"><expr pos:start="2217:31" pos:end="2217:32"><name pos:start="2217:31" pos:end="2217:32">vc</name></expr></argument>, <argument pos:start="2217:35" pos:end="2217:36"><expr pos:start="2217:35" pos:end="2217:36"><name pos:start="2217:35" pos:end="2217:36">va</name></expr></argument>, <argument pos:start="2217:39" pos:end="2217:40"><expr pos:start="2217:39" pos:end="2217:40"><name pos:start="2217:39" pos:end="2217:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2219:13" pos:end="2219:18">break;</break>

        <case pos:start="2221:9" pos:end="2221:18">case <expr pos:start="2221:14" pos:end="2221:17"><literal type="number" pos:start="2221:14" pos:end="2221:17">0x39</literal></expr>:</case>

            <comment type="block" pos:start="2223:13" pos:end="2223:24">/* MINSW4 */</comment>

            <expr_stmt pos:start="2225:13" pos:end="2225:48"><expr pos:start="2225:13" pos:end="2225:47"><call pos:start="2225:13" pos:end="2225:47"><name pos:start="2225:13" pos:end="2225:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2225:28" pos:end="2225:47">(<argument pos:start="2225:29" pos:end="2225:46"><expr pos:start="2225:29" pos:end="2225:46"><name pos:start="2225:29" pos:end="2225:46">TB_FLAGS_AMASK_MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2227:13" pos:end="2227:35"><expr pos:start="2227:13" pos:end="2227:34"><name pos:start="2227:13" pos:end="2227:14">va</name> <operator pos:start="2227:16" pos:end="2227:16">=</operator> <call pos:start="2227:18" pos:end="2227:34"><name pos:start="2227:18" pos:end="2227:25">load_gpr</name><argument_list pos:start="2227:26" pos:end="2227:34">(<argument pos:start="2227:27" pos:end="2227:29"><expr pos:start="2227:27" pos:end="2227:29"><name pos:start="2227:27" pos:end="2227:29">ctx</name></expr></argument>, <argument pos:start="2227:32" pos:end="2227:33"><expr pos:start="2227:32" pos:end="2227:33"><name pos:start="2227:32" pos:end="2227:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2229:13" pos:end="2229:42"><expr pos:start="2229:13" pos:end="2229:41"><call pos:start="2229:13" pos:end="2229:41"><name pos:start="2229:13" pos:end="2229:29">gen_helper_minsw4</name><argument_list pos:start="2229:30" pos:end="2229:41">(<argument pos:start="2229:31" pos:end="2229:32"><expr pos:start="2229:31" pos:end="2229:32"><name pos:start="2229:31" pos:end="2229:32">vc</name></expr></argument>, <argument pos:start="2229:35" pos:end="2229:36"><expr pos:start="2229:35" pos:end="2229:36"><name pos:start="2229:35" pos:end="2229:36">va</name></expr></argument>, <argument pos:start="2229:39" pos:end="2229:40"><expr pos:start="2229:39" pos:end="2229:40"><name pos:start="2229:39" pos:end="2229:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2231:13" pos:end="2231:18">break;</break>

        <case pos:start="2233:9" pos:end="2233:18">case <expr pos:start="2233:14" pos:end="2233:17"><literal type="number" pos:start="2233:14" pos:end="2233:17">0x3A</literal></expr>:</case>

            <comment type="block" pos:start="2235:13" pos:end="2235:24">/* MINUB8 */</comment>

            <expr_stmt pos:start="2237:13" pos:end="2237:48"><expr pos:start="2237:13" pos:end="2237:47"><call pos:start="2237:13" pos:end="2237:47"><name pos:start="2237:13" pos:end="2237:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2237:28" pos:end="2237:47">(<argument pos:start="2237:29" pos:end="2237:46"><expr pos:start="2237:29" pos:end="2237:46"><name pos:start="2237:29" pos:end="2237:46">TB_FLAGS_AMASK_MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2239:13" pos:end="2239:35"><expr pos:start="2239:13" pos:end="2239:34"><name pos:start="2239:13" pos:end="2239:14">va</name> <operator pos:start="2239:16" pos:end="2239:16">=</operator> <call pos:start="2239:18" pos:end="2239:34"><name pos:start="2239:18" pos:end="2239:25">load_gpr</name><argument_list pos:start="2239:26" pos:end="2239:34">(<argument pos:start="2239:27" pos:end="2239:29"><expr pos:start="2239:27" pos:end="2239:29"><name pos:start="2239:27" pos:end="2239:29">ctx</name></expr></argument>, <argument pos:start="2239:32" pos:end="2239:33"><expr pos:start="2239:32" pos:end="2239:33"><name pos:start="2239:32" pos:end="2239:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2241:13" pos:end="2241:42"><expr pos:start="2241:13" pos:end="2241:41"><call pos:start="2241:13" pos:end="2241:41"><name pos:start="2241:13" pos:end="2241:29">gen_helper_minub8</name><argument_list pos:start="2241:30" pos:end="2241:41">(<argument pos:start="2241:31" pos:end="2241:32"><expr pos:start="2241:31" pos:end="2241:32"><name pos:start="2241:31" pos:end="2241:32">vc</name></expr></argument>, <argument pos:start="2241:35" pos:end="2241:36"><expr pos:start="2241:35" pos:end="2241:36"><name pos:start="2241:35" pos:end="2241:36">va</name></expr></argument>, <argument pos:start="2241:39" pos:end="2241:40"><expr pos:start="2241:39" pos:end="2241:40"><name pos:start="2241:39" pos:end="2241:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2243:13" pos:end="2243:18">break;</break>

        <case pos:start="2245:9" pos:end="2245:18">case <expr pos:start="2245:14" pos:end="2245:17"><literal type="number" pos:start="2245:14" pos:end="2245:17">0x3B</literal></expr>:</case>

            <comment type="block" pos:start="2247:13" pos:end="2247:24">/* MINUW4 */</comment>

            <expr_stmt pos:start="2249:13" pos:end="2249:48"><expr pos:start="2249:13" pos:end="2249:47"><call pos:start="2249:13" pos:end="2249:47"><name pos:start="2249:13" pos:end="2249:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2249:28" pos:end="2249:47">(<argument pos:start="2249:29" pos:end="2249:46"><expr pos:start="2249:29" pos:end="2249:46"><name pos:start="2249:29" pos:end="2249:46">TB_FLAGS_AMASK_MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2251:13" pos:end="2251:35"><expr pos:start="2251:13" pos:end="2251:34"><name pos:start="2251:13" pos:end="2251:14">va</name> <operator pos:start="2251:16" pos:end="2251:16">=</operator> <call pos:start="2251:18" pos:end="2251:34"><name pos:start="2251:18" pos:end="2251:25">load_gpr</name><argument_list pos:start="2251:26" pos:end="2251:34">(<argument pos:start="2251:27" pos:end="2251:29"><expr pos:start="2251:27" pos:end="2251:29"><name pos:start="2251:27" pos:end="2251:29">ctx</name></expr></argument>, <argument pos:start="2251:32" pos:end="2251:33"><expr pos:start="2251:32" pos:end="2251:33"><name pos:start="2251:32" pos:end="2251:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2253:13" pos:end="2253:42"><expr pos:start="2253:13" pos:end="2253:41"><call pos:start="2253:13" pos:end="2253:41"><name pos:start="2253:13" pos:end="2253:29">gen_helper_minuw4</name><argument_list pos:start="2253:30" pos:end="2253:41">(<argument pos:start="2253:31" pos:end="2253:32"><expr pos:start="2253:31" pos:end="2253:32"><name pos:start="2253:31" pos:end="2253:32">vc</name></expr></argument>, <argument pos:start="2253:35" pos:end="2253:36"><expr pos:start="2253:35" pos:end="2253:36"><name pos:start="2253:35" pos:end="2253:36">va</name></expr></argument>, <argument pos:start="2253:39" pos:end="2253:40"><expr pos:start="2253:39" pos:end="2253:40"><name pos:start="2253:39" pos:end="2253:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2255:13" pos:end="2255:18">break;</break>

        <case pos:start="2257:9" pos:end="2257:18">case <expr pos:start="2257:14" pos:end="2257:17"><literal type="number" pos:start="2257:14" pos:end="2257:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="2259:13" pos:end="2259:24">/* MAXUB8 */</comment>

            <expr_stmt pos:start="2261:13" pos:end="2261:48"><expr pos:start="2261:13" pos:end="2261:47"><call pos:start="2261:13" pos:end="2261:47"><name pos:start="2261:13" pos:end="2261:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2261:28" pos:end="2261:47">(<argument pos:start="2261:29" pos:end="2261:46"><expr pos:start="2261:29" pos:end="2261:46"><name pos:start="2261:29" pos:end="2261:46">TB_FLAGS_AMASK_MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2263:13" pos:end="2263:35"><expr pos:start="2263:13" pos:end="2263:34"><name pos:start="2263:13" pos:end="2263:14">va</name> <operator pos:start="2263:16" pos:end="2263:16">=</operator> <call pos:start="2263:18" pos:end="2263:34"><name pos:start="2263:18" pos:end="2263:25">load_gpr</name><argument_list pos:start="2263:26" pos:end="2263:34">(<argument pos:start="2263:27" pos:end="2263:29"><expr pos:start="2263:27" pos:end="2263:29"><name pos:start="2263:27" pos:end="2263:29">ctx</name></expr></argument>, <argument pos:start="2263:32" pos:end="2263:33"><expr pos:start="2263:32" pos:end="2263:33"><name pos:start="2263:32" pos:end="2263:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2265:13" pos:end="2265:42"><expr pos:start="2265:13" pos:end="2265:41"><call pos:start="2265:13" pos:end="2265:41"><name pos:start="2265:13" pos:end="2265:29">gen_helper_maxub8</name><argument_list pos:start="2265:30" pos:end="2265:41">(<argument pos:start="2265:31" pos:end="2265:32"><expr pos:start="2265:31" pos:end="2265:32"><name pos:start="2265:31" pos:end="2265:32">vc</name></expr></argument>, <argument pos:start="2265:35" pos:end="2265:36"><expr pos:start="2265:35" pos:end="2265:36"><name pos:start="2265:35" pos:end="2265:36">va</name></expr></argument>, <argument pos:start="2265:39" pos:end="2265:40"><expr pos:start="2265:39" pos:end="2265:40"><name pos:start="2265:39" pos:end="2265:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2267:13" pos:end="2267:18">break;</break>

        <case pos:start="2269:9" pos:end="2269:18">case <expr pos:start="2269:14" pos:end="2269:17"><literal type="number" pos:start="2269:14" pos:end="2269:17">0x3D</literal></expr>:</case>

            <comment type="block" pos:start="2271:13" pos:end="2271:24">/* MAXUW4 */</comment>

            <expr_stmt pos:start="2273:13" pos:end="2273:48"><expr pos:start="2273:13" pos:end="2273:47"><call pos:start="2273:13" pos:end="2273:47"><name pos:start="2273:13" pos:end="2273:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2273:28" pos:end="2273:47">(<argument pos:start="2273:29" pos:end="2273:46"><expr pos:start="2273:29" pos:end="2273:46"><name pos:start="2273:29" pos:end="2273:46">TB_FLAGS_AMASK_MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2275:13" pos:end="2275:35"><expr pos:start="2275:13" pos:end="2275:34"><name pos:start="2275:13" pos:end="2275:14">va</name> <operator pos:start="2275:16" pos:end="2275:16">=</operator> <call pos:start="2275:18" pos:end="2275:34"><name pos:start="2275:18" pos:end="2275:25">load_gpr</name><argument_list pos:start="2275:26" pos:end="2275:34">(<argument pos:start="2275:27" pos:end="2275:29"><expr pos:start="2275:27" pos:end="2275:29"><name pos:start="2275:27" pos:end="2275:29">ctx</name></expr></argument>, <argument pos:start="2275:32" pos:end="2275:33"><expr pos:start="2275:32" pos:end="2275:33"><name pos:start="2275:32" pos:end="2275:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2277:13" pos:end="2277:42"><expr pos:start="2277:13" pos:end="2277:41"><call pos:start="2277:13" pos:end="2277:41"><name pos:start="2277:13" pos:end="2277:29">gen_helper_maxuw4</name><argument_list pos:start="2277:30" pos:end="2277:41">(<argument pos:start="2277:31" pos:end="2277:32"><expr pos:start="2277:31" pos:end="2277:32"><name pos:start="2277:31" pos:end="2277:32">vc</name></expr></argument>, <argument pos:start="2277:35" pos:end="2277:36"><expr pos:start="2277:35" pos:end="2277:36"><name pos:start="2277:35" pos:end="2277:36">va</name></expr></argument>, <argument pos:start="2277:39" pos:end="2277:40"><expr pos:start="2277:39" pos:end="2277:40"><name pos:start="2277:39" pos:end="2277:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2279:13" pos:end="2279:18">break;</break>

        <case pos:start="2281:9" pos:end="2281:18">case <expr pos:start="2281:14" pos:end="2281:17"><literal type="number" pos:start="2281:14" pos:end="2281:17">0x3E</literal></expr>:</case>

            <comment type="block" pos:start="2283:13" pos:end="2283:24">/* MAXSB8 */</comment>

            <expr_stmt pos:start="2285:13" pos:end="2285:48"><expr pos:start="2285:13" pos:end="2285:47"><call pos:start="2285:13" pos:end="2285:47"><name pos:start="2285:13" pos:end="2285:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2285:28" pos:end="2285:47">(<argument pos:start="2285:29" pos:end="2285:46"><expr pos:start="2285:29" pos:end="2285:46"><name pos:start="2285:29" pos:end="2285:46">TB_FLAGS_AMASK_MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2287:13" pos:end="2287:35"><expr pos:start="2287:13" pos:end="2287:34"><name pos:start="2287:13" pos:end="2287:14">va</name> <operator pos:start="2287:16" pos:end="2287:16">=</operator> <call pos:start="2287:18" pos:end="2287:34"><name pos:start="2287:18" pos:end="2287:25">load_gpr</name><argument_list pos:start="2287:26" pos:end="2287:34">(<argument pos:start="2287:27" pos:end="2287:29"><expr pos:start="2287:27" pos:end="2287:29"><name pos:start="2287:27" pos:end="2287:29">ctx</name></expr></argument>, <argument pos:start="2287:32" pos:end="2287:33"><expr pos:start="2287:32" pos:end="2287:33"><name pos:start="2287:32" pos:end="2287:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2289:13" pos:end="2289:42"><expr pos:start="2289:13" pos:end="2289:41"><call pos:start="2289:13" pos:end="2289:41"><name pos:start="2289:13" pos:end="2289:29">gen_helper_maxsb8</name><argument_list pos:start="2289:30" pos:end="2289:41">(<argument pos:start="2289:31" pos:end="2289:32"><expr pos:start="2289:31" pos:end="2289:32"><name pos:start="2289:31" pos:end="2289:32">vc</name></expr></argument>, <argument pos:start="2289:35" pos:end="2289:36"><expr pos:start="2289:35" pos:end="2289:36"><name pos:start="2289:35" pos:end="2289:36">va</name></expr></argument>, <argument pos:start="2289:39" pos:end="2289:40"><expr pos:start="2289:39" pos:end="2289:40"><name pos:start="2289:39" pos:end="2289:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2291:13" pos:end="2291:18">break;</break>

        <case pos:start="2293:9" pos:end="2293:18">case <expr pos:start="2293:14" pos:end="2293:17"><literal type="number" pos:start="2293:14" pos:end="2293:17">0x3F</literal></expr>:</case>

            <comment type="block" pos:start="2295:13" pos:end="2295:24">/* MAXSW4 */</comment>

            <expr_stmt pos:start="2297:13" pos:end="2297:48"><expr pos:start="2297:13" pos:end="2297:47"><call pos:start="2297:13" pos:end="2297:47"><name pos:start="2297:13" pos:end="2297:27">REQUIRE_TB_FLAG</name><argument_list pos:start="2297:28" pos:end="2297:47">(<argument pos:start="2297:29" pos:end="2297:46"><expr pos:start="2297:29" pos:end="2297:46"><name pos:start="2297:29" pos:end="2297:46">TB_FLAGS_AMASK_MVI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2299:13" pos:end="2299:35"><expr pos:start="2299:13" pos:end="2299:34"><name pos:start="2299:13" pos:end="2299:14">va</name> <operator pos:start="2299:16" pos:end="2299:16">=</operator> <call pos:start="2299:18" pos:end="2299:34"><name pos:start="2299:18" pos:end="2299:25">load_gpr</name><argument_list pos:start="2299:26" pos:end="2299:34">(<argument pos:start="2299:27" pos:end="2299:29"><expr pos:start="2299:27" pos:end="2299:29"><name pos:start="2299:27" pos:end="2299:29">ctx</name></expr></argument>, <argument pos:start="2299:32" pos:end="2299:33"><expr pos:start="2299:32" pos:end="2299:33"><name pos:start="2299:32" pos:end="2299:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2301:13" pos:end="2301:42"><expr pos:start="2301:13" pos:end="2301:41"><call pos:start="2301:13" pos:end="2301:41"><name pos:start="2301:13" pos:end="2301:29">gen_helper_maxsw4</name><argument_list pos:start="2301:30" pos:end="2301:41">(<argument pos:start="2301:31" pos:end="2301:32"><expr pos:start="2301:31" pos:end="2301:32"><name pos:start="2301:31" pos:end="2301:32">vc</name></expr></argument>, <argument pos:start="2301:35" pos:end="2301:36"><expr pos:start="2301:35" pos:end="2301:36"><name pos:start="2301:35" pos:end="2301:36">va</name></expr></argument>, <argument pos:start="2301:39" pos:end="2301:40"><expr pos:start="2301:39" pos:end="2301:40"><name pos:start="2301:39" pos:end="2301:40">vb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2303:13" pos:end="2303:18">break;</break>

        <default pos:start="2305:9" pos:end="2305:16">default:</default>

            <goto pos:start="2307:13" pos:end="2307:29">goto <name pos:start="2307:18" pos:end="2307:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="2311:9" pos:end="2311:14">break;</break>



    <case pos:start="2315:5" pos:end="2320:0">case <expr pos:start="2315:10" pos:end="2315:13"><literal type="number" pos:start="2315:10" pos:end="2315:13">0x1D</literal></expr>:</case>

        <comment type="block" pos:start="2317:9" pos:end="2317:31">/* HW_MTPR (PALcode) */</comment>

<cpp:ifndef pos:start="2319:1" pos:end="2319:24">#<cpp:directive pos:start="2319:2" pos:end="2319:7">ifndef</cpp:directive> <name pos:start="2319:9" pos:end="2319:24">CONFIG_USER_ONLY</name></cpp:ifndef>

        <expr_stmt pos:start="2321:9" pos:end="2321:43"><expr pos:start="2321:9" pos:end="2321:42"><call pos:start="2321:9" pos:end="2321:42"><name pos:start="2321:9" pos:end="2321:23">REQUIRE_TB_FLAG</name><argument_list pos:start="2321:24" pos:end="2321:42">(<argument pos:start="2321:25" pos:end="2321:41"><expr pos:start="2321:25" pos:end="2321:41"><name pos:start="2321:25" pos:end="2321:41">TB_FLAGS_PAL_MODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2323:9" pos:end="2323:31"><expr pos:start="2323:9" pos:end="2323:30"><name pos:start="2323:9" pos:end="2323:10">vb</name> <operator pos:start="2323:12" pos:end="2323:12">=</operator> <call pos:start="2323:14" pos:end="2323:30"><name pos:start="2323:14" pos:end="2323:21">load_gpr</name><argument_list pos:start="2323:22" pos:end="2323:30">(<argument pos:start="2323:23" pos:end="2323:25"><expr pos:start="2323:23" pos:end="2323:25"><name pos:start="2323:23" pos:end="2323:25">ctx</name></expr></argument>, <argument pos:start="2323:28" pos:end="2323:29"><expr pos:start="2323:28" pos:end="2323:29"><name pos:start="2323:28" pos:end="2323:29">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2325:9" pos:end="2325:47"><expr pos:start="2325:9" pos:end="2325:46"><name pos:start="2325:9" pos:end="2325:11">ret</name> <operator pos:start="2325:13" pos:end="2325:13">=</operator> <call pos:start="2325:15" pos:end="2325:46"><name pos:start="2325:15" pos:end="2325:22">gen_mtpr</name><argument_list pos:start="2325:23" pos:end="2325:46">(<argument pos:start="2325:24" pos:end="2325:26"><expr pos:start="2325:24" pos:end="2325:26"><name pos:start="2325:24" pos:end="2325:26">ctx</name></expr></argument>, <argument pos:start="2325:29" pos:end="2325:30"><expr pos:start="2325:29" pos:end="2325:30"><name pos:start="2325:29" pos:end="2325:30">vb</name></expr></argument>, <argument pos:start="2325:33" pos:end="2325:45"><expr pos:start="2325:33" pos:end="2325:45"><name pos:start="2325:33" pos:end="2325:36">insn</name> <operator pos:start="2325:38" pos:end="2325:38">&amp;</operator> <literal type="number" pos:start="2325:40" pos:end="2325:45">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2327:9" pos:end="2330:0">break;</break>

<cpp:else pos:start="2329:1" pos:end="2329:5">#<cpp:directive pos:start="2329:2" pos:end="2329:5">else</cpp:directive></cpp:else>

        <goto pos:start="2331:9" pos:end="2334:0">goto <name pos:start="2331:14" pos:end="2331:24">invalid_opc</name>;</goto>

<cpp:endif pos:start="2333:1" pos:end="2333:6">#<cpp:directive pos:start="2333:2" pos:end="2333:6">endif</cpp:directive></cpp:endif>



    <case pos:start="2337:5" pos:end="2342:0">case <expr pos:start="2337:10" pos:end="2337:13"><literal type="number" pos:start="2337:10" pos:end="2337:13">0x1E</literal></expr>:</case>

        <comment type="block" pos:start="2339:9" pos:end="2339:30">/* HW_RET (PALcode) */</comment>

<cpp:ifndef pos:start="2341:1" pos:end="2341:24">#<cpp:directive pos:start="2341:2" pos:end="2341:7">ifndef</cpp:directive> <name pos:start="2341:9" pos:end="2341:24">CONFIG_USER_ONLY</name></cpp:ifndef>

        <expr_stmt pos:start="2343:9" pos:end="2343:43"><expr pos:start="2343:9" pos:end="2343:42"><call pos:start="2343:9" pos:end="2343:42"><name pos:start="2343:9" pos:end="2343:23">REQUIRE_TB_FLAG</name><argument_list pos:start="2343:24" pos:end="2343:42">(<argument pos:start="2343:25" pos:end="2343:41"><expr pos:start="2343:25" pos:end="2343:41"><name pos:start="2343:25" pos:end="2343:41">TB_FLAGS_PAL_MODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="2345:9" pos:end="2365:9"><if pos:start="2345:9" pos:end="2361:9">if <condition pos:start="2345:12" pos:end="2345:21">(<expr pos:start="2345:13" pos:end="2345:20"><name pos:start="2345:13" pos:end="2345:14">rb</name> <operator pos:start="2345:16" pos:end="2345:17">==</operator> <literal type="number" pos:start="2345:19" pos:end="2345:20">31</literal></expr>)</condition> <block pos:start="2345:23" pos:end="2361:9">{<block_content pos:start="2353:13" pos:end="2359:31">

            <comment type="block" pos:start="2347:13" pos:end="2351:63">/* Pre-EV6 CPUs interpreted this as HW_REI, loading the return

               address from EXC_ADDR.  This turns out to be useful for our

               emulation PALcode, so continue to accept it.  */</comment>

            <expr_stmt pos:start="2353:13" pos:end="2353:33"><expr pos:start="2353:13" pos:end="2353:32"><name pos:start="2353:13" pos:end="2353:15">tmp</name> <operator pos:start="2353:17" pos:end="2353:17">=</operator> <call pos:start="2353:19" pos:end="2353:32"><name pos:start="2353:19" pos:end="2353:30">tcg_temp_new</name><argument_list pos:start="2353:31" pos:end="2353:32">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2355:13" pos:end="2355:76"><expr pos:start="2355:13" pos:end="2355:75"><call pos:start="2355:13" pos:end="2355:75"><name pos:start="2355:13" pos:end="2355:26">tcg_gen_ld_i64</name><argument_list pos:start="2355:27" pos:end="2355:75">(<argument pos:start="2355:28" pos:end="2355:30"><expr pos:start="2355:28" pos:end="2355:30"><name pos:start="2355:28" pos:end="2355:30">tmp</name></expr></argument>, <argument pos:start="2355:33" pos:end="2355:39"><expr pos:start="2355:33" pos:end="2355:39"><name pos:start="2355:33" pos:end="2355:39">cpu_env</name></expr></argument>, <argument pos:start="2355:42" pos:end="2355:74"><expr pos:start="2355:42" pos:end="2355:74"><call pos:start="2355:42" pos:end="2355:74"><name pos:start="2355:42" pos:end="2355:49">offsetof</name><argument_list pos:start="2355:50" pos:end="2355:74">(<argument pos:start="2355:51" pos:end="2355:63"><expr pos:start="2355:51" pos:end="2355:63"><name pos:start="2355:51" pos:end="2355:63">CPUAlphaState</name></expr></argument>, <argument pos:start="2355:66" pos:end="2355:73"><expr pos:start="2355:66" pos:end="2355:73"><name pos:start="2355:66" pos:end="2355:73">exc_addr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2357:13" pos:end="2357:44"><expr pos:start="2357:13" pos:end="2357:43"><call pos:start="2357:13" pos:end="2357:43"><name pos:start="2357:13" pos:end="2357:29">gen_helper_hw_ret</name><argument_list pos:start="2357:30" pos:end="2357:43">(<argument pos:start="2357:31" pos:end="2357:37"><expr pos:start="2357:31" pos:end="2357:37"><name pos:start="2357:31" pos:end="2357:37">cpu_env</name></expr></argument>, <argument pos:start="2357:40" pos:end="2357:42"><expr pos:start="2357:40" pos:end="2357:42"><name pos:start="2357:40" pos:end="2357:42">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2359:13" pos:end="2359:31"><expr pos:start="2359:13" pos:end="2359:30"><call pos:start="2359:13" pos:end="2359:30"><name pos:start="2359:13" pos:end="2359:25">tcg_temp_free</name><argument_list pos:start="2359:26" pos:end="2359:30">(<argument pos:start="2359:27" pos:end="2359:29"><expr pos:start="2359:27" pos:end="2359:29"><name pos:start="2359:27" pos:end="2359:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="2361:11" pos:end="2365:9">else <block pos:start="2361:16" pos:end="2365:9">{<block_content pos:start="2363:13" pos:end="2363:58">

            <expr_stmt pos:start="2363:13" pos:end="2363:58"><expr pos:start="2363:13" pos:end="2363:57"><call pos:start="2363:13" pos:end="2363:57"><name pos:start="2363:13" pos:end="2363:29">gen_helper_hw_ret</name><argument_list pos:start="2363:30" pos:end="2363:57">(<argument pos:start="2363:31" pos:end="2363:37"><expr pos:start="2363:31" pos:end="2363:37"><name pos:start="2363:31" pos:end="2363:37">cpu_env</name></expr></argument>, <argument pos:start="2363:40" pos:end="2363:56"><expr pos:start="2363:40" pos:end="2363:56"><call pos:start="2363:40" pos:end="2363:56"><name pos:start="2363:40" pos:end="2363:47">load_gpr</name><argument_list pos:start="2363:48" pos:end="2363:56">(<argument pos:start="2363:49" pos:end="2363:51"><expr pos:start="2363:49" pos:end="2363:51"><name pos:start="2363:49" pos:end="2363:51">ctx</name></expr></argument>, <argument pos:start="2363:54" pos:end="2363:55"><expr pos:start="2363:54" pos:end="2363:55"><name pos:start="2363:54" pos:end="2363:55">rb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="2367:9" pos:end="2367:30"><expr pos:start="2367:9" pos:end="2367:29"><name pos:start="2367:9" pos:end="2367:11">ret</name> <operator pos:start="2367:13" pos:end="2367:13">=</operator> <name pos:start="2367:15" pos:end="2367:29">EXIT_PC_UPDATED</name></expr>;</expr_stmt>

        <break pos:start="2369:9" pos:end="2372:0">break;</break>

<cpp:else pos:start="2371:1" pos:end="2371:5">#<cpp:directive pos:start="2371:2" pos:end="2371:5">else</cpp:directive></cpp:else>

        <goto pos:start="2373:9" pos:end="2376:0">goto <name pos:start="2373:14" pos:end="2373:24">invalid_opc</name>;</goto>

<cpp:endif pos:start="2375:1" pos:end="2375:6">#<cpp:directive pos:start="2375:2" pos:end="2375:6">endif</cpp:directive></cpp:endif>



    <case pos:start="2379:5" pos:end="2384:0">case <expr pos:start="2379:10" pos:end="2379:13"><literal type="number" pos:start="2379:10" pos:end="2379:13">0x1F</literal></expr>:</case>

        <comment type="block" pos:start="2381:9" pos:end="2381:29">/* HW_ST (PALcode) */</comment>

<cpp:ifndef pos:start="2383:1" pos:end="2383:24">#<cpp:directive pos:start="2383:2" pos:end="2383:7">ifndef</cpp:directive> <name pos:start="2383:9" pos:end="2383:24">CONFIG_USER_ONLY</name></cpp:ifndef>

        <expr_stmt pos:start="2385:9" pos:end="2385:43"><expr pos:start="2385:9" pos:end="2385:42"><call pos:start="2385:9" pos:end="2385:42"><name pos:start="2385:9" pos:end="2385:23">REQUIRE_TB_FLAG</name><argument_list pos:start="2385:24" pos:end="2385:42">(<argument pos:start="2385:25" pos:end="2385:41"><expr pos:start="2385:25" pos:end="2385:41"><name pos:start="2385:25" pos:end="2385:41">TB_FLAGS_PAL_MODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="2387:9" pos:end="2514:0">{<block_content pos:start="2389:13" pos:end="2509:18">

            <decl_stmt pos:start="2389:13" pos:end="2389:39"><decl pos:start="2389:13" pos:end="2389:38"><type pos:start="2389:13" pos:end="2389:16"><name pos:start="2389:13" pos:end="2389:16">TCGv</name></type> <name pos:start="2389:18" pos:end="2389:21">addr</name> <init pos:start="2389:23" pos:end="2389:38">= <expr pos:start="2389:25" pos:end="2389:38"><call pos:start="2389:25" pos:end="2389:38"><name pos:start="2389:25" pos:end="2389:36">tcg_temp_new</name><argument_list pos:start="2389:37" pos:end="2389:38">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="2391:13" pos:end="2391:35"><expr pos:start="2391:13" pos:end="2391:34"><name pos:start="2391:13" pos:end="2391:14">va</name> <operator pos:start="2391:16" pos:end="2391:16">=</operator> <call pos:start="2391:18" pos:end="2391:34"><name pos:start="2391:18" pos:end="2391:25">load_gpr</name><argument_list pos:start="2391:26" pos:end="2391:34">(<argument pos:start="2391:27" pos:end="2391:29"><expr pos:start="2391:27" pos:end="2391:29"><name pos:start="2391:27" pos:end="2391:29">ctx</name></expr></argument>, <argument pos:start="2391:32" pos:end="2391:33"><expr pos:start="2391:32" pos:end="2391:33"><name pos:start="2391:32" pos:end="2391:33">ra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2393:13" pos:end="2393:35"><expr pos:start="2393:13" pos:end="2393:34"><name pos:start="2393:13" pos:end="2393:14">vb</name> <operator pos:start="2393:16" pos:end="2393:16">=</operator> <call pos:start="2393:18" pos:end="2393:34"><name pos:start="2393:18" pos:end="2393:25">load_gpr</name><argument_list pos:start="2393:26" pos:end="2393:34">(<argument pos:start="2393:27" pos:end="2393:29"><expr pos:start="2393:27" pos:end="2393:29"><name pos:start="2393:27" pos:end="2393:29">ctx</name></expr></argument>, <argument pos:start="2393:32" pos:end="2393:33"><expr pos:start="2393:32" pos:end="2393:33"><name pos:start="2393:32" pos:end="2393:33">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="2397:13" pos:end="2397:47"><expr pos:start="2397:13" pos:end="2397:46"><call pos:start="2397:13" pos:end="2397:46"><name pos:start="2397:13" pos:end="2397:28">tcg_gen_addi_i64</name><argument_list pos:start="2397:29" pos:end="2397:46">(<argument pos:start="2397:30" pos:end="2397:33"><expr pos:start="2397:30" pos:end="2397:33"><name pos:start="2397:30" pos:end="2397:33">addr</name></expr></argument>, <argument pos:start="2397:36" pos:end="2397:37"><expr pos:start="2397:36" pos:end="2397:37"><name pos:start="2397:36" pos:end="2397:37">vb</name></expr></argument>, <argument pos:start="2397:40" pos:end="2397:45"><expr pos:start="2397:40" pos:end="2397:45"><name pos:start="2397:40" pos:end="2397:45">disp12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="2399:13" pos:end="2505:13">switch <condition pos:start="2399:20" pos:end="2399:39">(<expr pos:start="2399:21" pos:end="2399:38"><operator pos:start="2399:21" pos:end="2399:21">(</operator><name pos:start="2399:22" pos:end="2399:25">insn</name> <operator pos:start="2399:27" pos:end="2399:28">&gt;&gt;</operator> <literal type="number" pos:start="2399:30" pos:end="2399:31">12</literal><operator pos:start="2399:32" pos:end="2399:32">)</operator> <operator pos:start="2399:34" pos:end="2399:34">&amp;</operator> <literal type="number" pos:start="2399:36" pos:end="2399:38">0xF</literal></expr>)</condition> <block pos:start="2399:41" pos:end="2505:13">{<block_content pos:start="2401:13" pos:end="2503:33">

            <case pos:start="2401:13" pos:end="2401:21">case <expr pos:start="2401:18" pos:end="2401:20"><literal type="number" pos:start="2401:18" pos:end="2401:20">0x0</literal></expr>:</case>

                <comment type="block" pos:start="2403:17" pos:end="2403:46">/* Longword physical access */</comment>

                <expr_stmt pos:start="2405:17" pos:end="2405:55"><expr pos:start="2405:17" pos:end="2405:54"><call pos:start="2405:17" pos:end="2405:54"><name pos:start="2405:17" pos:end="2405:35">gen_helper_stl_phys</name><argument_list pos:start="2405:36" pos:end="2405:54">(<argument pos:start="2405:37" pos:end="2405:43"><expr pos:start="2405:37" pos:end="2405:43"><name pos:start="2405:37" pos:end="2405:43">cpu_env</name></expr></argument>, <argument pos:start="2405:46" pos:end="2405:49"><expr pos:start="2405:46" pos:end="2405:49"><name pos:start="2405:46" pos:end="2405:49">addr</name></expr></argument>, <argument pos:start="2405:52" pos:end="2405:53"><expr pos:start="2405:52" pos:end="2405:53"><name pos:start="2405:52" pos:end="2405:53">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2407:17" pos:end="2407:22">break;</break>

            <case pos:start="2409:13" pos:end="2409:21">case <expr pos:start="2409:18" pos:end="2409:20"><literal type="number" pos:start="2409:18" pos:end="2409:20">0x1</literal></expr>:</case>

                <comment type="block" pos:start="2411:17" pos:end="2411:46">/* Quadword physical access */</comment>

                <expr_stmt pos:start="2413:17" pos:end="2413:55"><expr pos:start="2413:17" pos:end="2413:54"><call pos:start="2413:17" pos:end="2413:54"><name pos:start="2413:17" pos:end="2413:35">gen_helper_stq_phys</name><argument_list pos:start="2413:36" pos:end="2413:54">(<argument pos:start="2413:37" pos:end="2413:43"><expr pos:start="2413:37" pos:end="2413:43"><name pos:start="2413:37" pos:end="2413:43">cpu_env</name></expr></argument>, <argument pos:start="2413:46" pos:end="2413:49"><expr pos:start="2413:46" pos:end="2413:49"><name pos:start="2413:46" pos:end="2413:49">addr</name></expr></argument>, <argument pos:start="2413:52" pos:end="2413:53"><expr pos:start="2413:52" pos:end="2413:53"><name pos:start="2413:52" pos:end="2413:53">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2415:17" pos:end="2415:22">break;</break>

            <case pos:start="2417:13" pos:end="2417:21">case <expr pos:start="2417:18" pos:end="2417:20"><literal type="number" pos:start="2417:18" pos:end="2417:20">0x2</literal></expr>:</case>

                <comment type="block" pos:start="2419:17" pos:end="2419:56">/* Longword physical access with lock */</comment>

                <expr_stmt pos:start="2421:17" pos:end="2421:76"><expr pos:start="2421:17" pos:end="2421:75"><call pos:start="2421:17" pos:end="2421:75"><name pos:start="2421:17" pos:end="2421:37">gen_helper_stl_c_phys</name><argument_list pos:start="2421:38" pos:end="2421:75">(<argument pos:start="2421:39" pos:end="2421:55"><expr pos:start="2421:39" pos:end="2421:55"><call pos:start="2421:39" pos:end="2421:55"><name pos:start="2421:39" pos:end="2421:46">dest_gpr</name><argument_list pos:start="2421:47" pos:end="2421:55">(<argument pos:start="2421:48" pos:end="2421:50"><expr pos:start="2421:48" pos:end="2421:50"><name pos:start="2421:48" pos:end="2421:50">ctx</name></expr></argument>, <argument pos:start="2421:53" pos:end="2421:54"><expr pos:start="2421:53" pos:end="2421:54"><name pos:start="2421:53" pos:end="2421:54">ra</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2421:58" pos:end="2421:64"><expr pos:start="2421:58" pos:end="2421:64"><name pos:start="2421:58" pos:end="2421:64">cpu_env</name></expr></argument>, <argument pos:start="2421:67" pos:end="2421:70"><expr pos:start="2421:67" pos:end="2421:70"><name pos:start="2421:67" pos:end="2421:70">addr</name></expr></argument>, <argument pos:start="2421:73" pos:end="2421:74"><expr pos:start="2421:73" pos:end="2421:74"><name pos:start="2421:73" pos:end="2421:74">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2423:17" pos:end="2423:22">break;</break>

            <case pos:start="2425:13" pos:end="2425:21">case <expr pos:start="2425:18" pos:end="2425:20"><literal type="number" pos:start="2425:18" pos:end="2425:20">0x3</literal></expr>:</case>

                <comment type="block" pos:start="2427:17" pos:end="2427:56">/* Quadword physical access with lock */</comment>

                <expr_stmt pos:start="2429:17" pos:end="2429:76"><expr pos:start="2429:17" pos:end="2429:75"><call pos:start="2429:17" pos:end="2429:75"><name pos:start="2429:17" pos:end="2429:37">gen_helper_stq_c_phys</name><argument_list pos:start="2429:38" pos:end="2429:75">(<argument pos:start="2429:39" pos:end="2429:55"><expr pos:start="2429:39" pos:end="2429:55"><call pos:start="2429:39" pos:end="2429:55"><name pos:start="2429:39" pos:end="2429:46">dest_gpr</name><argument_list pos:start="2429:47" pos:end="2429:55">(<argument pos:start="2429:48" pos:end="2429:50"><expr pos:start="2429:48" pos:end="2429:50"><name pos:start="2429:48" pos:end="2429:50">ctx</name></expr></argument>, <argument pos:start="2429:53" pos:end="2429:54"><expr pos:start="2429:53" pos:end="2429:54"><name pos:start="2429:53" pos:end="2429:54">ra</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2429:58" pos:end="2429:64"><expr pos:start="2429:58" pos:end="2429:64"><name pos:start="2429:58" pos:end="2429:64">cpu_env</name></expr></argument>, <argument pos:start="2429:67" pos:end="2429:70"><expr pos:start="2429:67" pos:end="2429:70"><name pos:start="2429:67" pos:end="2429:70">addr</name></expr></argument>, <argument pos:start="2429:73" pos:end="2429:74"><expr pos:start="2429:73" pos:end="2429:74"><name pos:start="2429:73" pos:end="2429:74">va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2431:17" pos:end="2431:22">break;</break>

            <case pos:start="2433:13" pos:end="2433:21">case <expr pos:start="2433:18" pos:end="2433:20"><literal type="number" pos:start="2433:18" pos:end="2433:20">0x4</literal></expr>:</case>

                <comment type="block" pos:start="2435:17" pos:end="2435:45">/* Longword virtual access */</comment>

                <goto pos:start="2437:17" pos:end="2437:33">goto <name pos:start="2437:22" pos:end="2437:32">invalid_opc</name>;</goto>

            <case pos:start="2439:13" pos:end="2439:21">case <expr pos:start="2439:18" pos:end="2439:20"><literal type="number" pos:start="2439:18" pos:end="2439:20">0x5</literal></expr>:</case>

                <comment type="block" pos:start="2441:17" pos:end="2441:45">/* Quadword virtual access */</comment>

                <goto pos:start="2443:17" pos:end="2443:33">goto <name pos:start="2443:22" pos:end="2443:32">invalid_opc</name>;</goto>

            <case pos:start="2445:13" pos:end="2445:21">case <expr pos:start="2445:18" pos:end="2445:20"><literal type="number" pos:start="2445:18" pos:end="2445:20">0x6</literal></expr>:</case>

                <comment type="block" pos:start="2447:17" pos:end="2447:29">/* Invalid */</comment>

                <goto pos:start="2449:17" pos:end="2449:33">goto <name pos:start="2449:22" pos:end="2449:32">invalid_opc</name>;</goto>

            <case pos:start="2451:13" pos:end="2451:21">case <expr pos:start="2451:18" pos:end="2451:20"><literal type="number" pos:start="2451:18" pos:end="2451:20">0x7</literal></expr>:</case>

                <comment type="block" pos:start="2453:17" pos:end="2453:29">/* Invalid */</comment>

                <goto pos:start="2455:17" pos:end="2455:33">goto <name pos:start="2455:22" pos:end="2455:32">invalid_opc</name>;</goto>

            <case pos:start="2457:13" pos:end="2457:21">case <expr pos:start="2457:18" pos:end="2457:20"><literal type="number" pos:start="2457:18" pos:end="2457:20">0x8</literal></expr>:</case>

                <comment type="block" pos:start="2459:17" pos:end="2459:29">/* Invalid */</comment>

                <goto pos:start="2461:17" pos:end="2461:33">goto <name pos:start="2461:22" pos:end="2461:32">invalid_opc</name>;</goto>

            <case pos:start="2463:13" pos:end="2463:21">case <expr pos:start="2463:18" pos:end="2463:20"><literal type="number" pos:start="2463:18" pos:end="2463:20">0x9</literal></expr>:</case>

                <comment type="block" pos:start="2465:17" pos:end="2465:29">/* Invalid */</comment>

                <goto pos:start="2467:17" pos:end="2467:33">goto <name pos:start="2467:22" pos:end="2467:32">invalid_opc</name>;</goto>

            <case pos:start="2469:13" pos:end="2469:21">case <expr pos:start="2469:18" pos:end="2469:20"><literal type="number" pos:start="2469:18" pos:end="2469:20">0xA</literal></expr>:</case>

                <comment type="block" pos:start="2471:17" pos:end="2471:29">/* Invalid */</comment>

                <goto pos:start="2473:17" pos:end="2473:33">goto <name pos:start="2473:22" pos:end="2473:32">invalid_opc</name>;</goto>

            <case pos:start="2475:13" pos:end="2475:21">case <expr pos:start="2475:18" pos:end="2475:20"><literal type="number" pos:start="2475:18" pos:end="2475:20">0xB</literal></expr>:</case>

                <comment type="block" pos:start="2477:17" pos:end="2477:29">/* Invalid */</comment>

                <goto pos:start="2479:17" pos:end="2479:33">goto <name pos:start="2479:22" pos:end="2479:32">invalid_opc</name>;</goto>

            <case pos:start="2481:13" pos:end="2481:21">case <expr pos:start="2481:18" pos:end="2481:20"><literal type="number" pos:start="2481:18" pos:end="2481:20">0xC</literal></expr>:</case>

                <comment type="block" pos:start="2483:17" pos:end="2483:72">/* Longword virtual access with alternate access mode */</comment>

                <goto pos:start="2485:17" pos:end="2485:33">goto <name pos:start="2485:22" pos:end="2485:32">invalid_opc</name>;</goto>

            <case pos:start="2487:13" pos:end="2487:21">case <expr pos:start="2487:18" pos:end="2487:20"><literal type="number" pos:start="2487:18" pos:end="2487:20">0xD</literal></expr>:</case>

                <comment type="block" pos:start="2489:17" pos:end="2489:72">/* Quadword virtual access with alternate access mode */</comment>

                <goto pos:start="2491:17" pos:end="2491:33">goto <name pos:start="2491:22" pos:end="2491:32">invalid_opc</name>;</goto>

            <case pos:start="2493:13" pos:end="2493:21">case <expr pos:start="2493:18" pos:end="2493:20"><literal type="number" pos:start="2493:18" pos:end="2493:20">0xE</literal></expr>:</case>

                <comment type="block" pos:start="2495:17" pos:end="2495:29">/* Invalid */</comment>

                <goto pos:start="2497:17" pos:end="2497:33">goto <name pos:start="2497:22" pos:end="2497:32">invalid_opc</name>;</goto>

            <case pos:start="2499:13" pos:end="2499:21">case <expr pos:start="2499:18" pos:end="2499:20"><literal type="number" pos:start="2499:18" pos:end="2499:20">0xF</literal></expr>:</case>

                <comment type="block" pos:start="2501:17" pos:end="2501:29">/* Invalid */</comment>

                <goto pos:start="2503:17" pos:end="2503:33">goto <name pos:start="2503:22" pos:end="2503:32">invalid_opc</name>;</goto>

            </block_content>}</block></switch>

            <expr_stmt pos:start="2507:13" pos:end="2507:32"><expr pos:start="2507:13" pos:end="2507:31"><call pos:start="2507:13" pos:end="2507:31"><name pos:start="2507:13" pos:end="2507:25">tcg_temp_free</name><argument_list pos:start="2507:26" pos:end="2507:31">(<argument pos:start="2507:27" pos:end="2507:30"><expr pos:start="2507:27" pos:end="2507:30"><name pos:start="2507:27" pos:end="2507:30">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2509:13" pos:end="2509:18">break;</break>

        </block_content>}</block>

<cpp:else pos:start="2513:1" pos:end="2513:5">#<cpp:directive pos:start="2513:2" pos:end="2513:5">else</cpp:directive></cpp:else>

        <goto pos:start="2515:9" pos:end="2518:0">goto <name pos:start="2515:14" pos:end="2515:24">invalid_opc</name>;</goto>

<cpp:endif pos:start="2517:1" pos:end="2517:6">#<cpp:directive pos:start="2517:2" pos:end="2517:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2519:5" pos:end="2519:14">case <expr pos:start="2519:10" pos:end="2519:13"><literal type="number" pos:start="2519:10" pos:end="2519:13">0x20</literal></expr>:</case>

        <comment type="block" pos:start="2521:9" pos:end="2521:17">/* LDF */</comment>

        <expr_stmt pos:start="2523:9" pos:end="2523:63"><expr pos:start="2523:9" pos:end="2523:62"><call pos:start="2523:9" pos:end="2523:62"><name pos:start="2523:9" pos:end="2523:20">gen_load_mem</name><argument_list pos:start="2523:21" pos:end="2523:62">(<argument pos:start="2523:22" pos:end="2523:24"><expr pos:start="2523:22" pos:end="2523:24"><name pos:start="2523:22" pos:end="2523:24">ctx</name></expr></argument>, <argument pos:start="2523:27" pos:end="2523:39"><expr pos:start="2523:27" pos:end="2523:39"><operator pos:start="2523:27" pos:end="2523:27">&amp;</operator><name pos:start="2523:28" pos:end="2523:39">gen_qemu_ldf</name></expr></argument>, <argument pos:start="2523:42" pos:end="2523:43"><expr pos:start="2523:42" pos:end="2523:43"><name pos:start="2523:42" pos:end="2523:43">ra</name></expr></argument>, <argument pos:start="2523:46" pos:end="2523:47"><expr pos:start="2523:46" pos:end="2523:47"><name pos:start="2523:46" pos:end="2523:47">rb</name></expr></argument>, <argument pos:start="2523:50" pos:end="2523:55"><expr pos:start="2523:50" pos:end="2523:55"><name pos:start="2523:50" pos:end="2523:55">disp16</name></expr></argument>, <argument pos:start="2523:58" pos:end="2523:58"><expr pos:start="2523:58" pos:end="2523:58"><literal type="number" pos:start="2523:58" pos:end="2523:58">1</literal></expr></argument>, <argument pos:start="2523:61" pos:end="2523:61"><expr pos:start="2523:61" pos:end="2523:61"><literal type="number" pos:start="2523:61" pos:end="2523:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2525:9" pos:end="2525:14">break;</break>

    <case pos:start="2527:5" pos:end="2527:14">case <expr pos:start="2527:10" pos:end="2527:13"><literal type="number" pos:start="2527:10" pos:end="2527:13">0x21</literal></expr>:</case>

        <comment type="block" pos:start="2529:9" pos:end="2529:17">/* LDG */</comment>

        <expr_stmt pos:start="2531:9" pos:end="2531:63"><expr pos:start="2531:9" pos:end="2531:62"><call pos:start="2531:9" pos:end="2531:62"><name pos:start="2531:9" pos:end="2531:20">gen_load_mem</name><argument_list pos:start="2531:21" pos:end="2531:62">(<argument pos:start="2531:22" pos:end="2531:24"><expr pos:start="2531:22" pos:end="2531:24"><name pos:start="2531:22" pos:end="2531:24">ctx</name></expr></argument>, <argument pos:start="2531:27" pos:end="2531:39"><expr pos:start="2531:27" pos:end="2531:39"><operator pos:start="2531:27" pos:end="2531:27">&amp;</operator><name pos:start="2531:28" pos:end="2531:39">gen_qemu_ldg</name></expr></argument>, <argument pos:start="2531:42" pos:end="2531:43"><expr pos:start="2531:42" pos:end="2531:43"><name pos:start="2531:42" pos:end="2531:43">ra</name></expr></argument>, <argument pos:start="2531:46" pos:end="2531:47"><expr pos:start="2531:46" pos:end="2531:47"><name pos:start="2531:46" pos:end="2531:47">rb</name></expr></argument>, <argument pos:start="2531:50" pos:end="2531:55"><expr pos:start="2531:50" pos:end="2531:55"><name pos:start="2531:50" pos:end="2531:55">disp16</name></expr></argument>, <argument pos:start="2531:58" pos:end="2531:58"><expr pos:start="2531:58" pos:end="2531:58"><literal type="number" pos:start="2531:58" pos:end="2531:58">1</literal></expr></argument>, <argument pos:start="2531:61" pos:end="2531:61"><expr pos:start="2531:61" pos:end="2531:61"><literal type="number" pos:start="2531:61" pos:end="2531:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2533:9" pos:end="2533:14">break;</break>

    <case pos:start="2535:5" pos:end="2535:14">case <expr pos:start="2535:10" pos:end="2535:13"><literal type="number" pos:start="2535:10" pos:end="2535:13">0x22</literal></expr>:</case>

        <comment type="block" pos:start="2537:9" pos:end="2537:17">/* LDS */</comment>

        <expr_stmt pos:start="2539:9" pos:end="2539:63"><expr pos:start="2539:9" pos:end="2539:62"><call pos:start="2539:9" pos:end="2539:62"><name pos:start="2539:9" pos:end="2539:20">gen_load_mem</name><argument_list pos:start="2539:21" pos:end="2539:62">(<argument pos:start="2539:22" pos:end="2539:24"><expr pos:start="2539:22" pos:end="2539:24"><name pos:start="2539:22" pos:end="2539:24">ctx</name></expr></argument>, <argument pos:start="2539:27" pos:end="2539:39"><expr pos:start="2539:27" pos:end="2539:39"><operator pos:start="2539:27" pos:end="2539:27">&amp;</operator><name pos:start="2539:28" pos:end="2539:39">gen_qemu_lds</name></expr></argument>, <argument pos:start="2539:42" pos:end="2539:43"><expr pos:start="2539:42" pos:end="2539:43"><name pos:start="2539:42" pos:end="2539:43">ra</name></expr></argument>, <argument pos:start="2539:46" pos:end="2539:47"><expr pos:start="2539:46" pos:end="2539:47"><name pos:start="2539:46" pos:end="2539:47">rb</name></expr></argument>, <argument pos:start="2539:50" pos:end="2539:55"><expr pos:start="2539:50" pos:end="2539:55"><name pos:start="2539:50" pos:end="2539:55">disp16</name></expr></argument>, <argument pos:start="2539:58" pos:end="2539:58"><expr pos:start="2539:58" pos:end="2539:58"><literal type="number" pos:start="2539:58" pos:end="2539:58">1</literal></expr></argument>, <argument pos:start="2539:61" pos:end="2539:61"><expr pos:start="2539:61" pos:end="2539:61"><literal type="number" pos:start="2539:61" pos:end="2539:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2541:9" pos:end="2541:14">break;</break>

    <case pos:start="2543:5" pos:end="2543:14">case <expr pos:start="2543:10" pos:end="2543:13"><literal type="number" pos:start="2543:10" pos:end="2543:13">0x23</literal></expr>:</case>

        <comment type="block" pos:start="2545:9" pos:end="2545:17">/* LDT */</comment>

        <expr_stmt pos:start="2547:9" pos:end="2547:68"><expr pos:start="2547:9" pos:end="2547:67"><call pos:start="2547:9" pos:end="2547:67"><name pos:start="2547:9" pos:end="2547:20">gen_load_mem</name><argument_list pos:start="2547:21" pos:end="2547:67">(<argument pos:start="2547:22" pos:end="2547:24"><expr pos:start="2547:22" pos:end="2547:24"><name pos:start="2547:22" pos:end="2547:24">ctx</name></expr></argument>, <argument pos:start="2547:27" pos:end="2547:44"><expr pos:start="2547:27" pos:end="2547:44"><operator pos:start="2547:27" pos:end="2547:27">&amp;</operator><name pos:start="2547:28" pos:end="2547:44">tcg_gen_qemu_ld64</name></expr></argument>, <argument pos:start="2547:47" pos:end="2547:48"><expr pos:start="2547:47" pos:end="2547:48"><name pos:start="2547:47" pos:end="2547:48">ra</name></expr></argument>, <argument pos:start="2547:51" pos:end="2547:52"><expr pos:start="2547:51" pos:end="2547:52"><name pos:start="2547:51" pos:end="2547:52">rb</name></expr></argument>, <argument pos:start="2547:55" pos:end="2547:60"><expr pos:start="2547:55" pos:end="2547:60"><name pos:start="2547:55" pos:end="2547:60">disp16</name></expr></argument>, <argument pos:start="2547:63" pos:end="2547:63"><expr pos:start="2547:63" pos:end="2547:63"><literal type="number" pos:start="2547:63" pos:end="2547:63">1</literal></expr></argument>, <argument pos:start="2547:66" pos:end="2547:66"><expr pos:start="2547:66" pos:end="2547:66"><literal type="number" pos:start="2547:66" pos:end="2547:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2549:9" pos:end="2549:14">break;</break>

    <case pos:start="2551:5" pos:end="2551:14">case <expr pos:start="2551:10" pos:end="2551:13"><literal type="number" pos:start="2551:10" pos:end="2551:13">0x24</literal></expr>:</case>

        <comment type="block" pos:start="2553:9" pos:end="2553:17">/* STF */</comment>

        <expr_stmt pos:start="2555:9" pos:end="2555:64"><expr pos:start="2555:9" pos:end="2555:63"><call pos:start="2555:9" pos:end="2555:63"><name pos:start="2555:9" pos:end="2555:21">gen_store_mem</name><argument_list pos:start="2555:22" pos:end="2555:63">(<argument pos:start="2555:23" pos:end="2555:25"><expr pos:start="2555:23" pos:end="2555:25"><name pos:start="2555:23" pos:end="2555:25">ctx</name></expr></argument>, <argument pos:start="2555:28" pos:end="2555:40"><expr pos:start="2555:28" pos:end="2555:40"><operator pos:start="2555:28" pos:end="2555:28">&amp;</operator><name pos:start="2555:29" pos:end="2555:40">gen_qemu_stf</name></expr></argument>, <argument pos:start="2555:43" pos:end="2555:44"><expr pos:start="2555:43" pos:end="2555:44"><name pos:start="2555:43" pos:end="2555:44">ra</name></expr></argument>, <argument pos:start="2555:47" pos:end="2555:48"><expr pos:start="2555:47" pos:end="2555:48"><name pos:start="2555:47" pos:end="2555:48">rb</name></expr></argument>, <argument pos:start="2555:51" pos:end="2555:56"><expr pos:start="2555:51" pos:end="2555:56"><name pos:start="2555:51" pos:end="2555:56">disp16</name></expr></argument>, <argument pos:start="2555:59" pos:end="2555:59"><expr pos:start="2555:59" pos:end="2555:59"><literal type="number" pos:start="2555:59" pos:end="2555:59">1</literal></expr></argument>, <argument pos:start="2555:62" pos:end="2555:62"><expr pos:start="2555:62" pos:end="2555:62"><literal type="number" pos:start="2555:62" pos:end="2555:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2557:9" pos:end="2557:14">break;</break>

    <case pos:start="2559:5" pos:end="2559:14">case <expr pos:start="2559:10" pos:end="2559:13"><literal type="number" pos:start="2559:10" pos:end="2559:13">0x25</literal></expr>:</case>

        <comment type="block" pos:start="2561:9" pos:end="2561:17">/* STG */</comment>

        <expr_stmt pos:start="2563:9" pos:end="2563:64"><expr pos:start="2563:9" pos:end="2563:63"><call pos:start="2563:9" pos:end="2563:63"><name pos:start="2563:9" pos:end="2563:21">gen_store_mem</name><argument_list pos:start="2563:22" pos:end="2563:63">(<argument pos:start="2563:23" pos:end="2563:25"><expr pos:start="2563:23" pos:end="2563:25"><name pos:start="2563:23" pos:end="2563:25">ctx</name></expr></argument>, <argument pos:start="2563:28" pos:end="2563:40"><expr pos:start="2563:28" pos:end="2563:40"><operator pos:start="2563:28" pos:end="2563:28">&amp;</operator><name pos:start="2563:29" pos:end="2563:40">gen_qemu_stg</name></expr></argument>, <argument pos:start="2563:43" pos:end="2563:44"><expr pos:start="2563:43" pos:end="2563:44"><name pos:start="2563:43" pos:end="2563:44">ra</name></expr></argument>, <argument pos:start="2563:47" pos:end="2563:48"><expr pos:start="2563:47" pos:end="2563:48"><name pos:start="2563:47" pos:end="2563:48">rb</name></expr></argument>, <argument pos:start="2563:51" pos:end="2563:56"><expr pos:start="2563:51" pos:end="2563:56"><name pos:start="2563:51" pos:end="2563:56">disp16</name></expr></argument>, <argument pos:start="2563:59" pos:end="2563:59"><expr pos:start="2563:59" pos:end="2563:59"><literal type="number" pos:start="2563:59" pos:end="2563:59">1</literal></expr></argument>, <argument pos:start="2563:62" pos:end="2563:62"><expr pos:start="2563:62" pos:end="2563:62"><literal type="number" pos:start="2563:62" pos:end="2563:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2565:9" pos:end="2565:14">break;</break>

    <case pos:start="2567:5" pos:end="2567:14">case <expr pos:start="2567:10" pos:end="2567:13"><literal type="number" pos:start="2567:10" pos:end="2567:13">0x26</literal></expr>:</case>

        <comment type="block" pos:start="2569:9" pos:end="2569:17">/* STS */</comment>

        <expr_stmt pos:start="2571:9" pos:end="2571:64"><expr pos:start="2571:9" pos:end="2571:63"><call pos:start="2571:9" pos:end="2571:63"><name pos:start="2571:9" pos:end="2571:21">gen_store_mem</name><argument_list pos:start="2571:22" pos:end="2571:63">(<argument pos:start="2571:23" pos:end="2571:25"><expr pos:start="2571:23" pos:end="2571:25"><name pos:start="2571:23" pos:end="2571:25">ctx</name></expr></argument>, <argument pos:start="2571:28" pos:end="2571:40"><expr pos:start="2571:28" pos:end="2571:40"><operator pos:start="2571:28" pos:end="2571:28">&amp;</operator><name pos:start="2571:29" pos:end="2571:40">gen_qemu_sts</name></expr></argument>, <argument pos:start="2571:43" pos:end="2571:44"><expr pos:start="2571:43" pos:end="2571:44"><name pos:start="2571:43" pos:end="2571:44">ra</name></expr></argument>, <argument pos:start="2571:47" pos:end="2571:48"><expr pos:start="2571:47" pos:end="2571:48"><name pos:start="2571:47" pos:end="2571:48">rb</name></expr></argument>, <argument pos:start="2571:51" pos:end="2571:56"><expr pos:start="2571:51" pos:end="2571:56"><name pos:start="2571:51" pos:end="2571:56">disp16</name></expr></argument>, <argument pos:start="2571:59" pos:end="2571:59"><expr pos:start="2571:59" pos:end="2571:59"><literal type="number" pos:start="2571:59" pos:end="2571:59">1</literal></expr></argument>, <argument pos:start="2571:62" pos:end="2571:62"><expr pos:start="2571:62" pos:end="2571:62"><literal type="number" pos:start="2571:62" pos:end="2571:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2573:9" pos:end="2573:14">break;</break>

    <case pos:start="2575:5" pos:end="2575:14">case <expr pos:start="2575:10" pos:end="2575:13"><literal type="number" pos:start="2575:10" pos:end="2575:13">0x27</literal></expr>:</case>

        <comment type="block" pos:start="2577:9" pos:end="2577:17">/* STT */</comment>

        <expr_stmt pos:start="2579:9" pos:end="2579:69"><expr pos:start="2579:9" pos:end="2579:68"><call pos:start="2579:9" pos:end="2579:68"><name pos:start="2579:9" pos:end="2579:21">gen_store_mem</name><argument_list pos:start="2579:22" pos:end="2579:68">(<argument pos:start="2579:23" pos:end="2579:25"><expr pos:start="2579:23" pos:end="2579:25"><name pos:start="2579:23" pos:end="2579:25">ctx</name></expr></argument>, <argument pos:start="2579:28" pos:end="2579:45"><expr pos:start="2579:28" pos:end="2579:45"><operator pos:start="2579:28" pos:end="2579:28">&amp;</operator><name pos:start="2579:29" pos:end="2579:45">tcg_gen_qemu_st64</name></expr></argument>, <argument pos:start="2579:48" pos:end="2579:49"><expr pos:start="2579:48" pos:end="2579:49"><name pos:start="2579:48" pos:end="2579:49">ra</name></expr></argument>, <argument pos:start="2579:52" pos:end="2579:53"><expr pos:start="2579:52" pos:end="2579:53"><name pos:start="2579:52" pos:end="2579:53">rb</name></expr></argument>, <argument pos:start="2579:56" pos:end="2579:61"><expr pos:start="2579:56" pos:end="2579:61"><name pos:start="2579:56" pos:end="2579:61">disp16</name></expr></argument>, <argument pos:start="2579:64" pos:end="2579:64"><expr pos:start="2579:64" pos:end="2579:64"><literal type="number" pos:start="2579:64" pos:end="2579:64">1</literal></expr></argument>, <argument pos:start="2579:67" pos:end="2579:67"><expr pos:start="2579:67" pos:end="2579:67"><literal type="number" pos:start="2579:67" pos:end="2579:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2581:9" pos:end="2581:14">break;</break>

    <case pos:start="2583:5" pos:end="2583:14">case <expr pos:start="2583:10" pos:end="2583:13"><literal type="number" pos:start="2583:10" pos:end="2583:13">0x28</literal></expr>:</case>

        <comment type="block" pos:start="2585:9" pos:end="2585:17">/* LDL */</comment>

        <expr_stmt pos:start="2587:9" pos:end="2587:69"><expr pos:start="2587:9" pos:end="2587:68"><call pos:start="2587:9" pos:end="2587:68"><name pos:start="2587:9" pos:end="2587:20">gen_load_mem</name><argument_list pos:start="2587:21" pos:end="2587:68">(<argument pos:start="2587:22" pos:end="2587:24"><expr pos:start="2587:22" pos:end="2587:24"><name pos:start="2587:22" pos:end="2587:24">ctx</name></expr></argument>, <argument pos:start="2587:27" pos:end="2587:45"><expr pos:start="2587:27" pos:end="2587:45"><operator pos:start="2587:27" pos:end="2587:27">&amp;</operator><name pos:start="2587:28" pos:end="2587:45">tcg_gen_qemu_ld32s</name></expr></argument>, <argument pos:start="2587:48" pos:end="2587:49"><expr pos:start="2587:48" pos:end="2587:49"><name pos:start="2587:48" pos:end="2587:49">ra</name></expr></argument>, <argument pos:start="2587:52" pos:end="2587:53"><expr pos:start="2587:52" pos:end="2587:53"><name pos:start="2587:52" pos:end="2587:53">rb</name></expr></argument>, <argument pos:start="2587:56" pos:end="2587:61"><expr pos:start="2587:56" pos:end="2587:61"><name pos:start="2587:56" pos:end="2587:61">disp16</name></expr></argument>, <argument pos:start="2587:64" pos:end="2587:64"><expr pos:start="2587:64" pos:end="2587:64"><literal type="number" pos:start="2587:64" pos:end="2587:64">0</literal></expr></argument>, <argument pos:start="2587:67" pos:end="2587:67"><expr pos:start="2587:67" pos:end="2587:67"><literal type="number" pos:start="2587:67" pos:end="2587:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2589:9" pos:end="2589:14">break;</break>

    <case pos:start="2591:5" pos:end="2591:14">case <expr pos:start="2591:10" pos:end="2591:13"><literal type="number" pos:start="2591:10" pos:end="2591:13">0x29</literal></expr>:</case>

        <comment type="block" pos:start="2593:9" pos:end="2593:17">/* LDQ */</comment>

        <expr_stmt pos:start="2595:9" pos:end="2595:68"><expr pos:start="2595:9" pos:end="2595:67"><call pos:start="2595:9" pos:end="2595:67"><name pos:start="2595:9" pos:end="2595:20">gen_load_mem</name><argument_list pos:start="2595:21" pos:end="2595:67">(<argument pos:start="2595:22" pos:end="2595:24"><expr pos:start="2595:22" pos:end="2595:24"><name pos:start="2595:22" pos:end="2595:24">ctx</name></expr></argument>, <argument pos:start="2595:27" pos:end="2595:44"><expr pos:start="2595:27" pos:end="2595:44"><operator pos:start="2595:27" pos:end="2595:27">&amp;</operator><name pos:start="2595:28" pos:end="2595:44">tcg_gen_qemu_ld64</name></expr></argument>, <argument pos:start="2595:47" pos:end="2595:48"><expr pos:start="2595:47" pos:end="2595:48"><name pos:start="2595:47" pos:end="2595:48">ra</name></expr></argument>, <argument pos:start="2595:51" pos:end="2595:52"><expr pos:start="2595:51" pos:end="2595:52"><name pos:start="2595:51" pos:end="2595:52">rb</name></expr></argument>, <argument pos:start="2595:55" pos:end="2595:60"><expr pos:start="2595:55" pos:end="2595:60"><name pos:start="2595:55" pos:end="2595:60">disp16</name></expr></argument>, <argument pos:start="2595:63" pos:end="2595:63"><expr pos:start="2595:63" pos:end="2595:63"><literal type="number" pos:start="2595:63" pos:end="2595:63">0</literal></expr></argument>, <argument pos:start="2595:66" pos:end="2595:66"><expr pos:start="2595:66" pos:end="2595:66"><literal type="number" pos:start="2595:66" pos:end="2595:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2597:9" pos:end="2597:14">break;</break>

    <case pos:start="2599:5" pos:end="2599:14">case <expr pos:start="2599:10" pos:end="2599:13"><literal type="number" pos:start="2599:10" pos:end="2599:13">0x2A</literal></expr>:</case>

        <comment type="block" pos:start="2601:9" pos:end="2601:19">/* LDL_L */</comment>

        <expr_stmt pos:start="2603:9" pos:end="2603:65"><expr pos:start="2603:9" pos:end="2603:64"><call pos:start="2603:9" pos:end="2603:64"><name pos:start="2603:9" pos:end="2603:20">gen_load_mem</name><argument_list pos:start="2603:21" pos:end="2603:64">(<argument pos:start="2603:22" pos:end="2603:24"><expr pos:start="2603:22" pos:end="2603:24"><name pos:start="2603:22" pos:end="2603:24">ctx</name></expr></argument>, <argument pos:start="2603:27" pos:end="2603:41"><expr pos:start="2603:27" pos:end="2603:41"><operator pos:start="2603:27" pos:end="2603:27">&amp;</operator><name pos:start="2603:28" pos:end="2603:41">gen_qemu_ldl_l</name></expr></argument>, <argument pos:start="2603:44" pos:end="2603:45"><expr pos:start="2603:44" pos:end="2603:45"><name pos:start="2603:44" pos:end="2603:45">ra</name></expr></argument>, <argument pos:start="2603:48" pos:end="2603:49"><expr pos:start="2603:48" pos:end="2603:49"><name pos:start="2603:48" pos:end="2603:49">rb</name></expr></argument>, <argument pos:start="2603:52" pos:end="2603:57"><expr pos:start="2603:52" pos:end="2603:57"><name pos:start="2603:52" pos:end="2603:57">disp16</name></expr></argument>, <argument pos:start="2603:60" pos:end="2603:60"><expr pos:start="2603:60" pos:end="2603:60"><literal type="number" pos:start="2603:60" pos:end="2603:60">0</literal></expr></argument>, <argument pos:start="2603:63" pos:end="2603:63"><expr pos:start="2603:63" pos:end="2603:63"><literal type="number" pos:start="2603:63" pos:end="2603:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2605:9" pos:end="2605:14">break;</break>

    <case pos:start="2607:5" pos:end="2607:14">case <expr pos:start="2607:10" pos:end="2607:13"><literal type="number" pos:start="2607:10" pos:end="2607:13">0x2B</literal></expr>:</case>

        <comment type="block" pos:start="2609:9" pos:end="2609:19">/* LDQ_L */</comment>

        <expr_stmt pos:start="2611:9" pos:end="2611:65"><expr pos:start="2611:9" pos:end="2611:64"><call pos:start="2611:9" pos:end="2611:64"><name pos:start="2611:9" pos:end="2611:20">gen_load_mem</name><argument_list pos:start="2611:21" pos:end="2611:64">(<argument pos:start="2611:22" pos:end="2611:24"><expr pos:start="2611:22" pos:end="2611:24"><name pos:start="2611:22" pos:end="2611:24">ctx</name></expr></argument>, <argument pos:start="2611:27" pos:end="2611:41"><expr pos:start="2611:27" pos:end="2611:41"><operator pos:start="2611:27" pos:end="2611:27">&amp;</operator><name pos:start="2611:28" pos:end="2611:41">gen_qemu_ldq_l</name></expr></argument>, <argument pos:start="2611:44" pos:end="2611:45"><expr pos:start="2611:44" pos:end="2611:45"><name pos:start="2611:44" pos:end="2611:45">ra</name></expr></argument>, <argument pos:start="2611:48" pos:end="2611:49"><expr pos:start="2611:48" pos:end="2611:49"><name pos:start="2611:48" pos:end="2611:49">rb</name></expr></argument>, <argument pos:start="2611:52" pos:end="2611:57"><expr pos:start="2611:52" pos:end="2611:57"><name pos:start="2611:52" pos:end="2611:57">disp16</name></expr></argument>, <argument pos:start="2611:60" pos:end="2611:60"><expr pos:start="2611:60" pos:end="2611:60"><literal type="number" pos:start="2611:60" pos:end="2611:60">0</literal></expr></argument>, <argument pos:start="2611:63" pos:end="2611:63"><expr pos:start="2611:63" pos:end="2611:63"><literal type="number" pos:start="2611:63" pos:end="2611:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2613:9" pos:end="2613:14">break;</break>

    <case pos:start="2615:5" pos:end="2615:14">case <expr pos:start="2615:10" pos:end="2615:13"><literal type="number" pos:start="2615:10" pos:end="2615:13">0x2C</literal></expr>:</case>

        <comment type="block" pos:start="2617:9" pos:end="2617:17">/* STL */</comment>

        <expr_stmt pos:start="2619:9" pos:end="2619:69"><expr pos:start="2619:9" pos:end="2619:68"><call pos:start="2619:9" pos:end="2619:68"><name pos:start="2619:9" pos:end="2619:21">gen_store_mem</name><argument_list pos:start="2619:22" pos:end="2619:68">(<argument pos:start="2619:23" pos:end="2619:25"><expr pos:start="2619:23" pos:end="2619:25"><name pos:start="2619:23" pos:end="2619:25">ctx</name></expr></argument>, <argument pos:start="2619:28" pos:end="2619:45"><expr pos:start="2619:28" pos:end="2619:45"><operator pos:start="2619:28" pos:end="2619:28">&amp;</operator><name pos:start="2619:29" pos:end="2619:45">tcg_gen_qemu_st32</name></expr></argument>, <argument pos:start="2619:48" pos:end="2619:49"><expr pos:start="2619:48" pos:end="2619:49"><name pos:start="2619:48" pos:end="2619:49">ra</name></expr></argument>, <argument pos:start="2619:52" pos:end="2619:53"><expr pos:start="2619:52" pos:end="2619:53"><name pos:start="2619:52" pos:end="2619:53">rb</name></expr></argument>, <argument pos:start="2619:56" pos:end="2619:61"><expr pos:start="2619:56" pos:end="2619:61"><name pos:start="2619:56" pos:end="2619:61">disp16</name></expr></argument>, <argument pos:start="2619:64" pos:end="2619:64"><expr pos:start="2619:64" pos:end="2619:64"><literal type="number" pos:start="2619:64" pos:end="2619:64">0</literal></expr></argument>, <argument pos:start="2619:67" pos:end="2619:67"><expr pos:start="2619:67" pos:end="2619:67"><literal type="number" pos:start="2619:67" pos:end="2619:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2621:9" pos:end="2621:14">break;</break>

    <case pos:start="2623:5" pos:end="2623:14">case <expr pos:start="2623:10" pos:end="2623:13"><literal type="number" pos:start="2623:10" pos:end="2623:13">0x2D</literal></expr>:</case>

        <comment type="block" pos:start="2625:9" pos:end="2625:17">/* STQ */</comment>

        <expr_stmt pos:start="2627:9" pos:end="2627:69"><expr pos:start="2627:9" pos:end="2627:68"><call pos:start="2627:9" pos:end="2627:68"><name pos:start="2627:9" pos:end="2627:21">gen_store_mem</name><argument_list pos:start="2627:22" pos:end="2627:68">(<argument pos:start="2627:23" pos:end="2627:25"><expr pos:start="2627:23" pos:end="2627:25"><name pos:start="2627:23" pos:end="2627:25">ctx</name></expr></argument>, <argument pos:start="2627:28" pos:end="2627:45"><expr pos:start="2627:28" pos:end="2627:45"><operator pos:start="2627:28" pos:end="2627:28">&amp;</operator><name pos:start="2627:29" pos:end="2627:45">tcg_gen_qemu_st64</name></expr></argument>, <argument pos:start="2627:48" pos:end="2627:49"><expr pos:start="2627:48" pos:end="2627:49"><name pos:start="2627:48" pos:end="2627:49">ra</name></expr></argument>, <argument pos:start="2627:52" pos:end="2627:53"><expr pos:start="2627:52" pos:end="2627:53"><name pos:start="2627:52" pos:end="2627:53">rb</name></expr></argument>, <argument pos:start="2627:56" pos:end="2627:61"><expr pos:start="2627:56" pos:end="2627:61"><name pos:start="2627:56" pos:end="2627:61">disp16</name></expr></argument>, <argument pos:start="2627:64" pos:end="2627:64"><expr pos:start="2627:64" pos:end="2627:64"><literal type="number" pos:start="2627:64" pos:end="2627:64">0</literal></expr></argument>, <argument pos:start="2627:67" pos:end="2627:67"><expr pos:start="2627:67" pos:end="2627:67"><literal type="number" pos:start="2627:67" pos:end="2627:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2629:9" pos:end="2629:14">break;</break>

    <case pos:start="2631:5" pos:end="2631:14">case <expr pos:start="2631:10" pos:end="2631:13"><literal type="number" pos:start="2631:10" pos:end="2631:13">0x2E</literal></expr>:</case>

        <comment type="block" pos:start="2633:9" pos:end="2633:19">/* STL_C */</comment>

        <expr_stmt pos:start="2635:9" pos:end="2635:60"><expr pos:start="2635:9" pos:end="2635:59"><name pos:start="2635:9" pos:end="2635:11">ret</name> <operator pos:start="2635:13" pos:end="2635:13">=</operator> <call pos:start="2635:15" pos:end="2635:59"><name pos:start="2635:15" pos:end="2635:35">gen_store_conditional</name><argument_list pos:start="2635:36" pos:end="2635:59">(<argument pos:start="2635:37" pos:end="2635:39"><expr pos:start="2635:37" pos:end="2635:39"><name pos:start="2635:37" pos:end="2635:39">ctx</name></expr></argument>, <argument pos:start="2635:42" pos:end="2635:43"><expr pos:start="2635:42" pos:end="2635:43"><name pos:start="2635:42" pos:end="2635:43">ra</name></expr></argument>, <argument pos:start="2635:46" pos:end="2635:47"><expr pos:start="2635:46" pos:end="2635:47"><name pos:start="2635:46" pos:end="2635:47">rb</name></expr></argument>, <argument pos:start="2635:50" pos:end="2635:55"><expr pos:start="2635:50" pos:end="2635:55"><name pos:start="2635:50" pos:end="2635:55">disp16</name></expr></argument>, <argument pos:start="2635:58" pos:end="2635:58"><expr pos:start="2635:58" pos:end="2635:58"><literal type="number" pos:start="2635:58" pos:end="2635:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2637:9" pos:end="2637:14">break;</break>

    <case pos:start="2639:5" pos:end="2639:14">case <expr pos:start="2639:10" pos:end="2639:13"><literal type="number" pos:start="2639:10" pos:end="2639:13">0x2F</literal></expr>:</case>

        <comment type="block" pos:start="2641:9" pos:end="2641:19">/* STQ_C */</comment>

        <expr_stmt pos:start="2643:9" pos:end="2643:60"><expr pos:start="2643:9" pos:end="2643:59"><name pos:start="2643:9" pos:end="2643:11">ret</name> <operator pos:start="2643:13" pos:end="2643:13">=</operator> <call pos:start="2643:15" pos:end="2643:59"><name pos:start="2643:15" pos:end="2643:35">gen_store_conditional</name><argument_list pos:start="2643:36" pos:end="2643:59">(<argument pos:start="2643:37" pos:end="2643:39"><expr pos:start="2643:37" pos:end="2643:39"><name pos:start="2643:37" pos:end="2643:39">ctx</name></expr></argument>, <argument pos:start="2643:42" pos:end="2643:43"><expr pos:start="2643:42" pos:end="2643:43"><name pos:start="2643:42" pos:end="2643:43">ra</name></expr></argument>, <argument pos:start="2643:46" pos:end="2643:47"><expr pos:start="2643:46" pos:end="2643:47"><name pos:start="2643:46" pos:end="2643:47">rb</name></expr></argument>, <argument pos:start="2643:50" pos:end="2643:55"><expr pos:start="2643:50" pos:end="2643:55"><name pos:start="2643:50" pos:end="2643:55">disp16</name></expr></argument>, <argument pos:start="2643:58" pos:end="2643:58"><expr pos:start="2643:58" pos:end="2643:58"><literal type="number" pos:start="2643:58" pos:end="2643:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2645:9" pos:end="2645:14">break;</break>

    <case pos:start="2647:5" pos:end="2647:14">case <expr pos:start="2647:10" pos:end="2647:13"><literal type="number" pos:start="2647:10" pos:end="2647:13">0x30</literal></expr>:</case>

        <comment type="block" pos:start="2649:9" pos:end="2649:16">/* BR */</comment>

        <expr_stmt pos:start="2651:9" pos:end="2651:43"><expr pos:start="2651:9" pos:end="2651:42"><name pos:start="2651:9" pos:end="2651:11">ret</name> <operator pos:start="2651:13" pos:end="2651:13">=</operator> <call pos:start="2651:15" pos:end="2651:42"><name pos:start="2651:15" pos:end="2651:25">gen_bdirect</name><argument_list pos:start="2651:26" pos:end="2651:42">(<argument pos:start="2651:27" pos:end="2651:29"><expr pos:start="2651:27" pos:end="2651:29"><name pos:start="2651:27" pos:end="2651:29">ctx</name></expr></argument>, <argument pos:start="2651:32" pos:end="2651:33"><expr pos:start="2651:32" pos:end="2651:33"><name pos:start="2651:32" pos:end="2651:33">ra</name></expr></argument>, <argument pos:start="2651:36" pos:end="2651:41"><expr pos:start="2651:36" pos:end="2651:41"><name pos:start="2651:36" pos:end="2651:41">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2653:9" pos:end="2653:14">break;</break>

    <case pos:start="2655:5" pos:end="2655:14">case <expr pos:start="2655:10" pos:end="2655:13"><literal type="number" pos:start="2655:10" pos:end="2655:13">0x31</literal></expr>:</case> <comment type="block" pos:start="2655:16" pos:end="2655:25">/* FBEQ */</comment>

        <expr_stmt pos:start="2657:9" pos:end="2657:55"><expr pos:start="2657:9" pos:end="2657:54"><name pos:start="2657:9" pos:end="2657:11">ret</name> <operator pos:start="2657:13" pos:end="2657:13">=</operator> <call pos:start="2657:15" pos:end="2657:54"><name pos:start="2657:15" pos:end="2657:24">gen_fbcond</name><argument_list pos:start="2657:25" pos:end="2657:54">(<argument pos:start="2657:26" pos:end="2657:28"><expr pos:start="2657:26" pos:end="2657:28"><name pos:start="2657:26" pos:end="2657:28">ctx</name></expr></argument>, <argument pos:start="2657:31" pos:end="2657:41"><expr pos:start="2657:31" pos:end="2657:41"><name pos:start="2657:31" pos:end="2657:41">TCG_COND_EQ</name></expr></argument>, <argument pos:start="2657:44" pos:end="2657:45"><expr pos:start="2657:44" pos:end="2657:45"><name pos:start="2657:44" pos:end="2657:45">ra</name></expr></argument>, <argument pos:start="2657:48" pos:end="2657:53"><expr pos:start="2657:48" pos:end="2657:53"><name pos:start="2657:48" pos:end="2657:53">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2659:9" pos:end="2659:14">break;</break>

    <case pos:start="2661:5" pos:end="2661:14">case <expr pos:start="2661:10" pos:end="2661:13"><literal type="number" pos:start="2661:10" pos:end="2661:13">0x32</literal></expr>:</case> <comment type="block" pos:start="2661:16" pos:end="2661:25">/* FBLT */</comment>

        <expr_stmt pos:start="2663:9" pos:end="2663:55"><expr pos:start="2663:9" pos:end="2663:54"><name pos:start="2663:9" pos:end="2663:11">ret</name> <operator pos:start="2663:13" pos:end="2663:13">=</operator> <call pos:start="2663:15" pos:end="2663:54"><name pos:start="2663:15" pos:end="2663:24">gen_fbcond</name><argument_list pos:start="2663:25" pos:end="2663:54">(<argument pos:start="2663:26" pos:end="2663:28"><expr pos:start="2663:26" pos:end="2663:28"><name pos:start="2663:26" pos:end="2663:28">ctx</name></expr></argument>, <argument pos:start="2663:31" pos:end="2663:41"><expr pos:start="2663:31" pos:end="2663:41"><name pos:start="2663:31" pos:end="2663:41">TCG_COND_LT</name></expr></argument>, <argument pos:start="2663:44" pos:end="2663:45"><expr pos:start="2663:44" pos:end="2663:45"><name pos:start="2663:44" pos:end="2663:45">ra</name></expr></argument>, <argument pos:start="2663:48" pos:end="2663:53"><expr pos:start="2663:48" pos:end="2663:53"><name pos:start="2663:48" pos:end="2663:53">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2665:9" pos:end="2665:14">break;</break>

    <case pos:start="2667:5" pos:end="2667:14">case <expr pos:start="2667:10" pos:end="2667:13"><literal type="number" pos:start="2667:10" pos:end="2667:13">0x33</literal></expr>:</case> <comment type="block" pos:start="2667:16" pos:end="2667:25">/* FBLE */</comment>

        <expr_stmt pos:start="2669:9" pos:end="2669:55"><expr pos:start="2669:9" pos:end="2669:54"><name pos:start="2669:9" pos:end="2669:11">ret</name> <operator pos:start="2669:13" pos:end="2669:13">=</operator> <call pos:start="2669:15" pos:end="2669:54"><name pos:start="2669:15" pos:end="2669:24">gen_fbcond</name><argument_list pos:start="2669:25" pos:end="2669:54">(<argument pos:start="2669:26" pos:end="2669:28"><expr pos:start="2669:26" pos:end="2669:28"><name pos:start="2669:26" pos:end="2669:28">ctx</name></expr></argument>, <argument pos:start="2669:31" pos:end="2669:41"><expr pos:start="2669:31" pos:end="2669:41"><name pos:start="2669:31" pos:end="2669:41">TCG_COND_LE</name></expr></argument>, <argument pos:start="2669:44" pos:end="2669:45"><expr pos:start="2669:44" pos:end="2669:45"><name pos:start="2669:44" pos:end="2669:45">ra</name></expr></argument>, <argument pos:start="2669:48" pos:end="2669:53"><expr pos:start="2669:48" pos:end="2669:53"><name pos:start="2669:48" pos:end="2669:53">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2671:9" pos:end="2671:14">break;</break>

    <case pos:start="2673:5" pos:end="2673:14">case <expr pos:start="2673:10" pos:end="2673:13"><literal type="number" pos:start="2673:10" pos:end="2673:13">0x34</literal></expr>:</case>

        <comment type="block" pos:start="2675:9" pos:end="2675:17">/* BSR */</comment>

        <expr_stmt pos:start="2677:9" pos:end="2677:43"><expr pos:start="2677:9" pos:end="2677:42"><name pos:start="2677:9" pos:end="2677:11">ret</name> <operator pos:start="2677:13" pos:end="2677:13">=</operator> <call pos:start="2677:15" pos:end="2677:42"><name pos:start="2677:15" pos:end="2677:25">gen_bdirect</name><argument_list pos:start="2677:26" pos:end="2677:42">(<argument pos:start="2677:27" pos:end="2677:29"><expr pos:start="2677:27" pos:end="2677:29"><name pos:start="2677:27" pos:end="2677:29">ctx</name></expr></argument>, <argument pos:start="2677:32" pos:end="2677:33"><expr pos:start="2677:32" pos:end="2677:33"><name pos:start="2677:32" pos:end="2677:33">ra</name></expr></argument>, <argument pos:start="2677:36" pos:end="2677:41"><expr pos:start="2677:36" pos:end="2677:41"><name pos:start="2677:36" pos:end="2677:41">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2679:9" pos:end="2679:14">break;</break>

    <case pos:start="2681:5" pos:end="2681:14">case <expr pos:start="2681:10" pos:end="2681:13"><literal type="number" pos:start="2681:10" pos:end="2681:13">0x35</literal></expr>:</case> <comment type="block" pos:start="2681:16" pos:end="2681:25">/* FBNE */</comment>

        <expr_stmt pos:start="2683:9" pos:end="2683:55"><expr pos:start="2683:9" pos:end="2683:54"><name pos:start="2683:9" pos:end="2683:11">ret</name> <operator pos:start="2683:13" pos:end="2683:13">=</operator> <call pos:start="2683:15" pos:end="2683:54"><name pos:start="2683:15" pos:end="2683:24">gen_fbcond</name><argument_list pos:start="2683:25" pos:end="2683:54">(<argument pos:start="2683:26" pos:end="2683:28"><expr pos:start="2683:26" pos:end="2683:28"><name pos:start="2683:26" pos:end="2683:28">ctx</name></expr></argument>, <argument pos:start="2683:31" pos:end="2683:41"><expr pos:start="2683:31" pos:end="2683:41"><name pos:start="2683:31" pos:end="2683:41">TCG_COND_NE</name></expr></argument>, <argument pos:start="2683:44" pos:end="2683:45"><expr pos:start="2683:44" pos:end="2683:45"><name pos:start="2683:44" pos:end="2683:45">ra</name></expr></argument>, <argument pos:start="2683:48" pos:end="2683:53"><expr pos:start="2683:48" pos:end="2683:53"><name pos:start="2683:48" pos:end="2683:53">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2685:9" pos:end="2685:14">break;</break>

    <case pos:start="2687:5" pos:end="2687:14">case <expr pos:start="2687:10" pos:end="2687:13"><literal type="number" pos:start="2687:10" pos:end="2687:13">0x36</literal></expr>:</case> <comment type="block" pos:start="2687:16" pos:end="2687:25">/* FBGE */</comment>

        <expr_stmt pos:start="2689:9" pos:end="2689:55"><expr pos:start="2689:9" pos:end="2689:54"><name pos:start="2689:9" pos:end="2689:11">ret</name> <operator pos:start="2689:13" pos:end="2689:13">=</operator> <call pos:start="2689:15" pos:end="2689:54"><name pos:start="2689:15" pos:end="2689:24">gen_fbcond</name><argument_list pos:start="2689:25" pos:end="2689:54">(<argument pos:start="2689:26" pos:end="2689:28"><expr pos:start="2689:26" pos:end="2689:28"><name pos:start="2689:26" pos:end="2689:28">ctx</name></expr></argument>, <argument pos:start="2689:31" pos:end="2689:41"><expr pos:start="2689:31" pos:end="2689:41"><name pos:start="2689:31" pos:end="2689:41">TCG_COND_GE</name></expr></argument>, <argument pos:start="2689:44" pos:end="2689:45"><expr pos:start="2689:44" pos:end="2689:45"><name pos:start="2689:44" pos:end="2689:45">ra</name></expr></argument>, <argument pos:start="2689:48" pos:end="2689:53"><expr pos:start="2689:48" pos:end="2689:53"><name pos:start="2689:48" pos:end="2689:53">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2691:9" pos:end="2691:14">break;</break>

    <case pos:start="2693:5" pos:end="2693:14">case <expr pos:start="2693:10" pos:end="2693:13"><literal type="number" pos:start="2693:10" pos:end="2693:13">0x37</literal></expr>:</case> <comment type="block" pos:start="2693:16" pos:end="2693:25">/* FBGT */</comment>

        <expr_stmt pos:start="2695:9" pos:end="2695:55"><expr pos:start="2695:9" pos:end="2695:54"><name pos:start="2695:9" pos:end="2695:11">ret</name> <operator pos:start="2695:13" pos:end="2695:13">=</operator> <call pos:start="2695:15" pos:end="2695:54"><name pos:start="2695:15" pos:end="2695:24">gen_fbcond</name><argument_list pos:start="2695:25" pos:end="2695:54">(<argument pos:start="2695:26" pos:end="2695:28"><expr pos:start="2695:26" pos:end="2695:28"><name pos:start="2695:26" pos:end="2695:28">ctx</name></expr></argument>, <argument pos:start="2695:31" pos:end="2695:41"><expr pos:start="2695:31" pos:end="2695:41"><name pos:start="2695:31" pos:end="2695:41">TCG_COND_GT</name></expr></argument>, <argument pos:start="2695:44" pos:end="2695:45"><expr pos:start="2695:44" pos:end="2695:45"><name pos:start="2695:44" pos:end="2695:45">ra</name></expr></argument>, <argument pos:start="2695:48" pos:end="2695:53"><expr pos:start="2695:48" pos:end="2695:53"><name pos:start="2695:48" pos:end="2695:53">disp21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2697:9" pos:end="2697:14">break;</break>

    <case pos:start="2699:5" pos:end="2699:14">case <expr pos:start="2699:10" pos:end="2699:13"><literal type="number" pos:start="2699:10" pos:end="2699:13">0x38</literal></expr>:</case>

        <comment type="block" pos:start="2701:9" pos:end="2701:18">/* BLBC */</comment>

        <expr_stmt pos:start="2703:9" pos:end="2703:57"><expr pos:start="2703:9" pos:end="2703:56"><name pos:start="2703:9" pos:end="2703:11">ret</name> <operator pos:start="2703:13" pos:end="2703:13">=</operator> <call pos:start="2703:15" pos:end="2703:56"><name pos:start="2703:15" pos:end="2703:23">gen_bcond</name><argument_list pos:start="2703:24" pos:end="2703:56">(<argument pos:start="2703:25" pos:end="2703:27"><expr pos:start="2703:25" pos:end="2703:27"><name pos:start="2703:25" pos:end="2703:27">ctx</name></expr></argument>, <argument pos:start="2703:30" pos:end="2703:40"><expr pos:start="2703:30" pos:end="2703:40"><name pos:start="2703:30" pos:end="2703:40">TCG_COND_EQ</name></expr></argument>, <argument pos:start="2703:43" pos:end="2703:44"><expr pos:start="2703:43" pos:end="2703:44"><name pos:start="2703:43" pos:end="2703:44">ra</name></expr></argument>, <argument pos:start="2703:47" pos:end="2703:52"><expr pos:start="2703:47" pos:end="2703:52"><name pos:start="2703:47" pos:end="2703:52">disp21</name></expr></argument>, <argument pos:start="2703:55" pos:end="2703:55"><expr pos:start="2703:55" pos:end="2703:55"><literal type="number" pos:start="2703:55" pos:end="2703:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2705:9" pos:end="2705:14">break;</break>

    <case pos:start="2707:5" pos:end="2707:14">case <expr pos:start="2707:10" pos:end="2707:13"><literal type="number" pos:start="2707:10" pos:end="2707:13">0x39</literal></expr>:</case>

        <comment type="block" pos:start="2709:9" pos:end="2709:17">/* BEQ */</comment>

        <expr_stmt pos:start="2711:9" pos:end="2711:57"><expr pos:start="2711:9" pos:end="2711:56"><name pos:start="2711:9" pos:end="2711:11">ret</name> <operator pos:start="2711:13" pos:end="2711:13">=</operator> <call pos:start="2711:15" pos:end="2711:56"><name pos:start="2711:15" pos:end="2711:23">gen_bcond</name><argument_list pos:start="2711:24" pos:end="2711:56">(<argument pos:start="2711:25" pos:end="2711:27"><expr pos:start="2711:25" pos:end="2711:27"><name pos:start="2711:25" pos:end="2711:27">ctx</name></expr></argument>, <argument pos:start="2711:30" pos:end="2711:40"><expr pos:start="2711:30" pos:end="2711:40"><name pos:start="2711:30" pos:end="2711:40">TCG_COND_EQ</name></expr></argument>, <argument pos:start="2711:43" pos:end="2711:44"><expr pos:start="2711:43" pos:end="2711:44"><name pos:start="2711:43" pos:end="2711:44">ra</name></expr></argument>, <argument pos:start="2711:47" pos:end="2711:52"><expr pos:start="2711:47" pos:end="2711:52"><name pos:start="2711:47" pos:end="2711:52">disp21</name></expr></argument>, <argument pos:start="2711:55" pos:end="2711:55"><expr pos:start="2711:55" pos:end="2711:55"><literal type="number" pos:start="2711:55" pos:end="2711:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2713:9" pos:end="2713:14">break;</break>

    <case pos:start="2715:5" pos:end="2715:14">case <expr pos:start="2715:10" pos:end="2715:13"><literal type="number" pos:start="2715:10" pos:end="2715:13">0x3A</literal></expr>:</case>

        <comment type="block" pos:start="2717:9" pos:end="2717:17">/* BLT */</comment>

        <expr_stmt pos:start="2719:9" pos:end="2719:57"><expr pos:start="2719:9" pos:end="2719:56"><name pos:start="2719:9" pos:end="2719:11">ret</name> <operator pos:start="2719:13" pos:end="2719:13">=</operator> <call pos:start="2719:15" pos:end="2719:56"><name pos:start="2719:15" pos:end="2719:23">gen_bcond</name><argument_list pos:start="2719:24" pos:end="2719:56">(<argument pos:start="2719:25" pos:end="2719:27"><expr pos:start="2719:25" pos:end="2719:27"><name pos:start="2719:25" pos:end="2719:27">ctx</name></expr></argument>, <argument pos:start="2719:30" pos:end="2719:40"><expr pos:start="2719:30" pos:end="2719:40"><name pos:start="2719:30" pos:end="2719:40">TCG_COND_LT</name></expr></argument>, <argument pos:start="2719:43" pos:end="2719:44"><expr pos:start="2719:43" pos:end="2719:44"><name pos:start="2719:43" pos:end="2719:44">ra</name></expr></argument>, <argument pos:start="2719:47" pos:end="2719:52"><expr pos:start="2719:47" pos:end="2719:52"><name pos:start="2719:47" pos:end="2719:52">disp21</name></expr></argument>, <argument pos:start="2719:55" pos:end="2719:55"><expr pos:start="2719:55" pos:end="2719:55"><literal type="number" pos:start="2719:55" pos:end="2719:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2721:9" pos:end="2721:14">break;</break>

    <case pos:start="2723:5" pos:end="2723:14">case <expr pos:start="2723:10" pos:end="2723:13"><literal type="number" pos:start="2723:10" pos:end="2723:13">0x3B</literal></expr>:</case>

        <comment type="block" pos:start="2725:9" pos:end="2725:17">/* BLE */</comment>

        <expr_stmt pos:start="2727:9" pos:end="2727:57"><expr pos:start="2727:9" pos:end="2727:56"><name pos:start="2727:9" pos:end="2727:11">ret</name> <operator pos:start="2727:13" pos:end="2727:13">=</operator> <call pos:start="2727:15" pos:end="2727:56"><name pos:start="2727:15" pos:end="2727:23">gen_bcond</name><argument_list pos:start="2727:24" pos:end="2727:56">(<argument pos:start="2727:25" pos:end="2727:27"><expr pos:start="2727:25" pos:end="2727:27"><name pos:start="2727:25" pos:end="2727:27">ctx</name></expr></argument>, <argument pos:start="2727:30" pos:end="2727:40"><expr pos:start="2727:30" pos:end="2727:40"><name pos:start="2727:30" pos:end="2727:40">TCG_COND_LE</name></expr></argument>, <argument pos:start="2727:43" pos:end="2727:44"><expr pos:start="2727:43" pos:end="2727:44"><name pos:start="2727:43" pos:end="2727:44">ra</name></expr></argument>, <argument pos:start="2727:47" pos:end="2727:52"><expr pos:start="2727:47" pos:end="2727:52"><name pos:start="2727:47" pos:end="2727:52">disp21</name></expr></argument>, <argument pos:start="2727:55" pos:end="2727:55"><expr pos:start="2727:55" pos:end="2727:55"><literal type="number" pos:start="2727:55" pos:end="2727:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2729:9" pos:end="2729:14">break;</break>

    <case pos:start="2731:5" pos:end="2731:14">case <expr pos:start="2731:10" pos:end="2731:13"><literal type="number" pos:start="2731:10" pos:end="2731:13">0x3C</literal></expr>:</case>

        <comment type="block" pos:start="2733:9" pos:end="2733:18">/* BLBS */</comment>

        <expr_stmt pos:start="2735:9" pos:end="2735:57"><expr pos:start="2735:9" pos:end="2735:56"><name pos:start="2735:9" pos:end="2735:11">ret</name> <operator pos:start="2735:13" pos:end="2735:13">=</operator> <call pos:start="2735:15" pos:end="2735:56"><name pos:start="2735:15" pos:end="2735:23">gen_bcond</name><argument_list pos:start="2735:24" pos:end="2735:56">(<argument pos:start="2735:25" pos:end="2735:27"><expr pos:start="2735:25" pos:end="2735:27"><name pos:start="2735:25" pos:end="2735:27">ctx</name></expr></argument>, <argument pos:start="2735:30" pos:end="2735:40"><expr pos:start="2735:30" pos:end="2735:40"><name pos:start="2735:30" pos:end="2735:40">TCG_COND_NE</name></expr></argument>, <argument pos:start="2735:43" pos:end="2735:44"><expr pos:start="2735:43" pos:end="2735:44"><name pos:start="2735:43" pos:end="2735:44">ra</name></expr></argument>, <argument pos:start="2735:47" pos:end="2735:52"><expr pos:start="2735:47" pos:end="2735:52"><name pos:start="2735:47" pos:end="2735:52">disp21</name></expr></argument>, <argument pos:start="2735:55" pos:end="2735:55"><expr pos:start="2735:55" pos:end="2735:55"><literal type="number" pos:start="2735:55" pos:end="2735:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2737:9" pos:end="2737:14">break;</break>

    <case pos:start="2739:5" pos:end="2739:14">case <expr pos:start="2739:10" pos:end="2739:13"><literal type="number" pos:start="2739:10" pos:end="2739:13">0x3D</literal></expr>:</case>

        <comment type="block" pos:start="2741:9" pos:end="2741:17">/* BNE */</comment>

        <expr_stmt pos:start="2743:9" pos:end="2743:57"><expr pos:start="2743:9" pos:end="2743:56"><name pos:start="2743:9" pos:end="2743:11">ret</name> <operator pos:start="2743:13" pos:end="2743:13">=</operator> <call pos:start="2743:15" pos:end="2743:56"><name pos:start="2743:15" pos:end="2743:23">gen_bcond</name><argument_list pos:start="2743:24" pos:end="2743:56">(<argument pos:start="2743:25" pos:end="2743:27"><expr pos:start="2743:25" pos:end="2743:27"><name pos:start="2743:25" pos:end="2743:27">ctx</name></expr></argument>, <argument pos:start="2743:30" pos:end="2743:40"><expr pos:start="2743:30" pos:end="2743:40"><name pos:start="2743:30" pos:end="2743:40">TCG_COND_NE</name></expr></argument>, <argument pos:start="2743:43" pos:end="2743:44"><expr pos:start="2743:43" pos:end="2743:44"><name pos:start="2743:43" pos:end="2743:44">ra</name></expr></argument>, <argument pos:start="2743:47" pos:end="2743:52"><expr pos:start="2743:47" pos:end="2743:52"><name pos:start="2743:47" pos:end="2743:52">disp21</name></expr></argument>, <argument pos:start="2743:55" pos:end="2743:55"><expr pos:start="2743:55" pos:end="2743:55"><literal type="number" pos:start="2743:55" pos:end="2743:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2745:9" pos:end="2745:14">break;</break>

    <case pos:start="2747:5" pos:end="2747:14">case <expr pos:start="2747:10" pos:end="2747:13"><literal type="number" pos:start="2747:10" pos:end="2747:13">0x3E</literal></expr>:</case>

        <comment type="block" pos:start="2749:9" pos:end="2749:17">/* BGE */</comment>

        <expr_stmt pos:start="2751:9" pos:end="2751:57"><expr pos:start="2751:9" pos:end="2751:56"><name pos:start="2751:9" pos:end="2751:11">ret</name> <operator pos:start="2751:13" pos:end="2751:13">=</operator> <call pos:start="2751:15" pos:end="2751:56"><name pos:start="2751:15" pos:end="2751:23">gen_bcond</name><argument_list pos:start="2751:24" pos:end="2751:56">(<argument pos:start="2751:25" pos:end="2751:27"><expr pos:start="2751:25" pos:end="2751:27"><name pos:start="2751:25" pos:end="2751:27">ctx</name></expr></argument>, <argument pos:start="2751:30" pos:end="2751:40"><expr pos:start="2751:30" pos:end="2751:40"><name pos:start="2751:30" pos:end="2751:40">TCG_COND_GE</name></expr></argument>, <argument pos:start="2751:43" pos:end="2751:44"><expr pos:start="2751:43" pos:end="2751:44"><name pos:start="2751:43" pos:end="2751:44">ra</name></expr></argument>, <argument pos:start="2751:47" pos:end="2751:52"><expr pos:start="2751:47" pos:end="2751:52"><name pos:start="2751:47" pos:end="2751:52">disp21</name></expr></argument>, <argument pos:start="2751:55" pos:end="2751:55"><expr pos:start="2751:55" pos:end="2751:55"><literal type="number" pos:start="2751:55" pos:end="2751:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2753:9" pos:end="2753:14">break;</break>

    <case pos:start="2755:5" pos:end="2755:14">case <expr pos:start="2755:10" pos:end="2755:13"><literal type="number" pos:start="2755:10" pos:end="2755:13">0x3F</literal></expr>:</case>

        <comment type="block" pos:start="2757:9" pos:end="2757:17">/* BGT */</comment>

        <expr_stmt pos:start="2759:9" pos:end="2759:57"><expr pos:start="2759:9" pos:end="2759:56"><name pos:start="2759:9" pos:end="2759:11">ret</name> <operator pos:start="2759:13" pos:end="2759:13">=</operator> <call pos:start="2759:15" pos:end="2759:56"><name pos:start="2759:15" pos:end="2759:23">gen_bcond</name><argument_list pos:start="2759:24" pos:end="2759:56">(<argument pos:start="2759:25" pos:end="2759:27"><expr pos:start="2759:25" pos:end="2759:27"><name pos:start="2759:25" pos:end="2759:27">ctx</name></expr></argument>, <argument pos:start="2759:30" pos:end="2759:40"><expr pos:start="2759:30" pos:end="2759:40"><name pos:start="2759:30" pos:end="2759:40">TCG_COND_GT</name></expr></argument>, <argument pos:start="2759:43" pos:end="2759:44"><expr pos:start="2759:43" pos:end="2759:44"><name pos:start="2759:43" pos:end="2759:44">ra</name></expr></argument>, <argument pos:start="2759:47" pos:end="2759:52"><expr pos:start="2759:47" pos:end="2759:52"><name pos:start="2759:47" pos:end="2759:52">disp21</name></expr></argument>, <argument pos:start="2759:55" pos:end="2759:55"><expr pos:start="2759:55" pos:end="2759:55"><literal type="number" pos:start="2759:55" pos:end="2759:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2761:9" pos:end="2761:14">break;</break>

    <label pos:start="2763:5" pos:end="2763:16"><name pos:start="2763:5" pos:end="2763:15">invalid_opc</name>:</label>

        <expr_stmt pos:start="2765:9" pos:end="2765:31"><expr pos:start="2765:9" pos:end="2765:30"><name pos:start="2765:9" pos:end="2765:11">ret</name> <operator pos:start="2765:13" pos:end="2765:13">=</operator> <call pos:start="2765:15" pos:end="2765:30"><name pos:start="2765:15" pos:end="2765:25">gen_invalid</name><argument_list pos:start="2765:26" pos:end="2765:30">(<argument pos:start="2765:27" pos:end="2765:29"><expr pos:start="2765:27" pos:end="2765:29"><name pos:start="2765:27" pos:end="2765:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2767:9" pos:end="2767:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="2773:5" pos:end="2773:15">return <expr pos:start="2773:12" pos:end="2773:14"><name pos:start="2773:12" pos:end="2773:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
