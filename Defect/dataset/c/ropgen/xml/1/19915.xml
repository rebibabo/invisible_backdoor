<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19915.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">put_line</name><parameter_list pos:start="1:21" pos:end="1:72">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:33"><name pos:start="1:22" pos:end="1:28">uint8_t</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">dst</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:43"><decl pos:start="1:36" pos:end="1:43"><type pos:start="1:36" pos:end="1:43"><name pos:start="1:36" pos:end="1:38">int</name></type> <name pos:start="1:40" pos:end="1:43">size</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:54"><decl pos:start="1:46" pos:end="1:54"><type pos:start="1:46" pos:end="1:54"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:54">width</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:71"><decl pos:start="1:57" pos:end="1:71"><type pos:start="1:57" pos:end="1:71"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:65">int</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">runs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:24">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:17">PutBitContext</name></type> <name pos:start="5:19" pos:end="5:20">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">run</name></decl>, <decl pos:start="7:14" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:17">mode</name> <init pos:start="7:19" pos:end="7:22">= <expr pos:start="7:21" pos:end="7:22"><operator pos:start="7:21" pos:end="7:21">~</operator><literal type="number" pos:start="7:22" pos:end="7:22">0</literal></expr></init></decl>, <decl pos:start="7:25" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:32">pix_left</name> <init pos:start="7:34" pos:end="7:40">= <expr pos:start="7:36" pos:end="7:40"><name pos:start="7:36" pos:end="7:40">width</name></expr></init></decl>, <decl pos:start="7:43" pos:end="7:53"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:43" pos:end="7:49">run_idx</name> <init pos:start="7:51" pos:end="7:53">= <expr pos:start="7:53" pos:end="7:53"><literal type="number" pos:start="7:53" pos:end="7:53">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><call pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:17">init_put_bits</name><argument_list pos:start="11:18" pos:end="11:37">(<argument pos:start="11:19" pos:end="11:21"><expr pos:start="11:19" pos:end="11:21"><operator pos:start="11:19" pos:end="11:19">&amp;</operator><name pos:start="11:20" pos:end="11:21">pb</name></expr></argument>, <argument pos:start="11:24" pos:end="11:26"><expr pos:start="11:24" pos:end="11:26"><name pos:start="11:24" pos:end="11:26">dst</name></expr></argument>, <argument pos:start="11:29" pos:end="11:36"><expr pos:start="11:29" pos:end="11:36"><name pos:start="11:29" pos:end="11:32">size</name> <operator pos:start="11:34" pos:end="11:34">*</operator> <literal type="number" pos:start="11:36" pos:end="11:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="13:5" pos:end="29:5">while <condition pos:start="13:11" pos:end="13:24">(<expr pos:start="13:12" pos:end="13:23"><name pos:start="13:12" pos:end="13:19">pix_left</name> <operator pos:start="13:21" pos:end="13:21">&gt;</operator> <literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr>)</condition> <block pos:start="13:26" pos:end="29:5">{<block_content pos:start="15:9" pos:end="27:38">

        <expr_stmt pos:start="15:9" pos:end="15:36"><expr pos:start="15:9" pos:end="15:35"><name pos:start="15:9" pos:end="15:11">run</name>       <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:35"><name pos:start="15:21" pos:end="15:24">runs</name><index pos:start="15:25" pos:end="15:35">[<expr pos:start="15:26" pos:end="15:34"><name pos:start="15:26" pos:end="15:32">run_idx</name><operator pos:start="15:33" pos:end="15:34">++</operator></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:12">mode</name>      <operator pos:start="17:19" pos:end="17:19">=</operator> <operator pos:start="17:21" pos:end="17:21">~</operator><name pos:start="17:22" pos:end="17:25">mode</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:16">pix_left</name> <operator pos:start="19:18" pos:end="19:19">-=</operator> <name pos:start="19:21" pos:end="19:23">run</name></expr>;</expr_stmt>

        <for pos:start="21:9" pos:end="23:37">for <control pos:start="21:13" pos:end="21:35">(<init pos:start="21:14" pos:end="21:14">;</init> <condition pos:start="21:16" pos:end="21:24"><expr pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:18">run</name> <operator pos:start="21:20" pos:end="21:20">&gt;</operator> <literal type="number" pos:start="21:22" pos:end="21:23">16</literal></expr>;</condition> <incr pos:start="21:26" pos:end="21:34"><expr pos:start="21:26" pos:end="21:34"><name pos:start="21:26" pos:end="21:28">run</name> <operator pos:start="21:30" pos:end="21:31">-=</operator> <literal type="number" pos:start="21:33" pos:end="21:34">16</literal></expr></incr>)</control><block type="pseudo" pos:start="23:13" pos:end="23:37"><block_content pos:start="23:13" pos:end="23:37">

            <expr_stmt pos:start="23:13" pos:end="23:37"><expr pos:start="23:13" pos:end="23:36"><call pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:21">put_sbits</name><argument_list pos:start="23:22" pos:end="23:36">(<argument pos:start="23:23" pos:end="23:25"><expr pos:start="23:23" pos:end="23:25"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:25">pb</name></expr></argument>, <argument pos:start="23:28" pos:end="23:29"><expr pos:start="23:28" pos:end="23:29"><literal type="number" pos:start="23:28" pos:end="23:29">16</literal></expr></argument>, <argument pos:start="23:32" pos:end="23:35"><expr pos:start="23:32" pos:end="23:35"><name pos:start="23:32" pos:end="23:35">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="25:9" pos:end="27:38"><if pos:start="25:9" pos:end="27:38">if <condition pos:start="25:12" pos:end="25:16">(<expr pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">run</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:38"><block_content pos:start="27:13" pos:end="27:38">

            <expr_stmt pos:start="27:13" pos:end="27:38"><expr pos:start="27:13" pos:end="27:37"><call pos:start="27:13" pos:end="27:37"><name pos:start="27:13" pos:end="27:21">put_sbits</name><argument_list pos:start="27:22" pos:end="27:37">(<argument pos:start="27:23" pos:end="27:25"><expr pos:start="27:23" pos:end="27:25"><operator pos:start="27:23" pos:end="27:23">&amp;</operator><name pos:start="27:24" pos:end="27:25">pb</name></expr></argument>, <argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">run</name></expr></argument>, <argument pos:start="27:33" pos:end="27:36"><expr pos:start="27:33" pos:end="27:36"><name pos:start="27:33" pos:end="27:36">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><call pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:18">flush_put_bits</name><argument_list pos:start="31:19" pos:end="31:23">(<argument pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><operator pos:start="31:20" pos:end="31:20">&amp;</operator><name pos:start="31:21" pos:end="31:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
