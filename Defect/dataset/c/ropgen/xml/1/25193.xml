<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25193.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">qemu_rdma_put_buffer</name><parameter_list pos:start="1:32" pos:end="3:54">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:59">uint8_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">buf</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:43"><decl pos:start="3:33" pos:end="3:43"><type pos:start="3:33" pos:end="3:43"><name pos:start="3:33" pos:end="3:39">int64_t</name></type> <name pos:start="3:41" pos:end="3:43">pos</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:53"><decl pos:start="3:46" pos:end="3:53"><type pos:start="3:46" pos:end="3:53"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:53">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:16">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">QEMUFileRDMA</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">r</name> <init pos:start="7:21" pos:end="7:28">= <expr pos:start="7:23" pos:end="7:28"><name pos:start="7:23" pos:end="7:28">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">QEMUFile</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:15">f</name> <init pos:start="9:17" pos:end="9:25">= <expr pos:start="9:19" pos:end="9:25"><name pos:start="9:19" pos:end="9:25"><name pos:start="9:19" pos:end="9:19">r</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:25">file</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">RDMAContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:21">rdma</name> <init pos:start="11:23" pos:end="11:31">= <expr pos:start="11:25" pos:end="11:31"><name pos:start="11:25" pos:end="11:31"><name pos:start="11:25" pos:end="11:25">r</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:31">rdma</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">size_t</name></type> <name pos:start="13:12" pos:end="13:20">remaining</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type> <name pos:start="15:15" pos:end="15:18">data</name> <init pos:start="15:20" pos:end="15:33">= <expr pos:start="15:22" pos:end="15:33"><operator pos:start="15:22" pos:end="15:22">(</operator><name pos:start="15:23" pos:end="15:26">void</name> <operator pos:start="15:28" pos:end="15:28">*</operator><operator pos:start="15:29" pos:end="15:29">)</operator> <name pos:start="15:31" pos:end="15:33">buf</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><call pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:21">CHECK_ERROR_STATE</name><argument_list pos:start="21:22" pos:end="21:23">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="31:7">/*

     * Push out any writes that

     * we're queued up for VM's ram.

     */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:7">ret</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:40"><name pos:start="33:11" pos:end="33:31">qemu_rdma_write_flush</name><argument_list pos:start="33:32" pos:end="33:40">(<argument pos:start="33:33" pos:end="33:33"><expr pos:start="33:33" pos:end="33:33"><name pos:start="33:33" pos:end="33:33">f</name></expr></argument>, <argument pos:start="33:36" pos:end="33:39"><expr pos:start="33:36" pos:end="33:39"><name pos:start="33:36" pos:end="33:39">rdma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:16">(<expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">&lt;</operator> <literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>)</condition> <block pos:start="35:18" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:19">

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:12">rdma</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:25">error_state</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <name pos:start="37:29" pos:end="37:31">ret</name></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:19">return <expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="45:5" pos:end="79:5">while <condition pos:start="45:11" pos:end="45:21">(<expr pos:start="45:12" pos:end="45:20"><name pos:start="45:12" pos:end="45:20">remaining</name></expr>)</condition> <block pos:start="45:23" pos:end="79:5">{<block_content pos:start="47:9" pos:end="77:23">

        <decl_stmt pos:start="47:9" pos:end="47:31"><decl pos:start="47:9" pos:end="47:30"><type pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:25">RDMAControlHeader</name></type> <name pos:start="47:27" pos:end="47:30">head</name></decl>;</decl_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:53"><expr pos:start="51:9" pos:end="51:52"><name pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:9">r</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:14">len</name></name> <operator pos:start="51:16" pos:end="51:16">=</operator> <call pos:start="51:18" pos:end="51:52"><name pos:start="51:18" pos:end="51:20">MIN</name><argument_list pos:start="51:21" pos:end="51:52">(<argument pos:start="51:22" pos:end="51:30"><expr pos:start="51:22" pos:end="51:30"><name pos:start="51:22" pos:end="51:30">remaining</name></expr></argument>, <argument pos:start="51:33" pos:end="51:51"><expr pos:start="51:33" pos:end="51:51"><name pos:start="51:33" pos:end="51:51">RDMA_SEND_INCREMENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:17">remaining</name> <operator pos:start="53:19" pos:end="53:20">-=</operator> <name pos:start="53:22" pos:end="53:27"><name pos:start="53:22" pos:end="53:22">r</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:27">len</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:26"><expr pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:12">head</name><operator pos:start="57:13" pos:end="57:13">.</operator><name pos:start="57:14" pos:end="57:16">len</name></name> <operator pos:start="57:18" pos:end="57:18">=</operator> <name pos:start="57:20" pos:end="57:25"><name pos:start="57:20" pos:end="57:20">r</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:25">len</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:43"><expr pos:start="59:9" pos:end="59:42"><name pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:12">head</name><operator pos:start="59:13" pos:end="59:13">.</operator><name pos:start="59:14" pos:end="59:17">type</name></name> <operator pos:start="59:19" pos:end="59:19">=</operator> <name pos:start="59:21" pos:end="59:42">RDMA_CONTROL_QEMU_FILE</name></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:75"><expr pos:start="63:9" pos:end="63:74"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="63:74"><name pos:start="63:15" pos:end="63:37">qemu_rdma_exchange_send</name><argument_list pos:start="63:38" pos:end="63:74">(<argument pos:start="63:39" pos:end="63:42"><expr pos:start="63:39" pos:end="63:42"><name pos:start="63:39" pos:end="63:42">rdma</name></expr></argument>, <argument pos:start="63:45" pos:end="63:49"><expr pos:start="63:45" pos:end="63:49"><operator pos:start="63:45" pos:end="63:45">&amp;</operator><name pos:start="63:46" pos:end="63:49">head</name></expr></argument>, <argument pos:start="63:52" pos:end="63:55"><expr pos:start="63:52" pos:end="63:55"><name pos:start="63:52" pos:end="63:55">data</name></expr></argument>, <argument pos:start="63:58" pos:end="63:61"><expr pos:start="63:58" pos:end="63:61"><name pos:start="63:58" pos:end="63:61">NULL</name></expr></argument>, <argument pos:start="63:64" pos:end="63:67"><expr pos:start="63:64" pos:end="63:67"><name pos:start="63:64" pos:end="63:67">NULL</name></expr></argument>, <argument pos:start="63:70" pos:end="63:73"><expr pos:start="63:70" pos:end="63:73"><name pos:start="63:70" pos:end="63:73">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="67:9" pos:end="73:9"><if pos:start="67:9" pos:end="73:9">if <condition pos:start="67:12" pos:end="67:20">(<expr pos:start="67:13" pos:end="67:19"><name pos:start="67:13" pos:end="67:15">ret</name> <operator pos:start="67:17" pos:end="67:17">&lt;</operator> <literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr>)</condition> <block pos:start="67:22" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:23">

            <expr_stmt pos:start="69:13" pos:end="69:36"><expr pos:start="69:13" pos:end="69:35"><name pos:start="69:13" pos:end="69:29"><name pos:start="69:13" pos:end="69:16">rdma</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:29">error_state</name></name> <operator pos:start="69:31" pos:end="69:31">=</operator> <name pos:start="69:33" pos:end="69:35">ret</name></expr>;</expr_stmt>

            <return pos:start="71:13" pos:end="71:23">return <expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:23"><expr pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:12">data</name> <operator pos:start="77:14" pos:end="77:15">+=</operator> <name pos:start="77:17" pos:end="77:22"><name pos:start="77:17" pos:end="77:17">r</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:22">len</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="83:5" pos:end="83:16">return <expr pos:start="83:12" pos:end="83:15"><name pos:start="83:12" pos:end="83:15">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
