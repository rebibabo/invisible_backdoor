<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26107.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:20">do_rt_sigreturn</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:32">CPUSH4State</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:38">regs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:29">target_rt_sigframe</name></name> <modifier pos:start="5:31" pos:end="5:31">*</modifier></type><name pos:start="5:32" pos:end="5:36">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">abi_ulong</name></type> <name pos:start="7:15" pos:end="7:24">frame_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">sigset_t</name></type> <name pos:start="9:14" pos:end="9:20">blocked</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="16:0"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:19">r0</name></decl>;</decl_stmt>



<cpp:if pos:start="15:1" pos:end="15:25">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:25"><call pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:11">defined</name><argument_list pos:start="15:12" pos:end="15:25">(<argument pos:start="15:13" pos:end="15:24"><expr pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:24">DEBUG_SIGNAL</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="17:5" pos:end="20:0"><expr pos:start="17:5" pos:end="17:40"><call pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:11">fprintf</name><argument_list pos:start="17:12" pos:end="17:40">(<argument pos:start="17:13" pos:end="17:18"><expr pos:start="17:13" pos:end="17:18"><name pos:start="17:13" pos:end="17:18">stderr</name></expr></argument>, <argument pos:start="17:21" pos:end="17:39"><expr pos:start="17:21" pos:end="17:39"><literal type="string" pos:start="17:21" pos:end="17:39">"do_rt_sigreturn\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:14">frame_addr</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:32"><name pos:start="21:18" pos:end="21:21">regs</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:28">gregs</name><index pos:start="21:29" pos:end="21:32">[<expr pos:start="21:30" pos:end="21:31"><literal type="number" pos:start="21:30" pos:end="21:31">15</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:22"><if pos:start="23:5" pos:end="25:22">if <condition pos:start="23:8" pos:end="23:61">(<expr pos:start="23:9" pos:end="23:60"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:60"><name pos:start="23:10" pos:end="23:25">lock_user_struct</name><argument_list pos:start="23:26" pos:end="23:60">(<argument pos:start="23:27" pos:end="23:37"><expr pos:start="23:27" pos:end="23:37"><name pos:start="23:27" pos:end="23:37">VERIFY_READ</name></expr></argument>, <argument pos:start="23:40" pos:end="23:44"><expr pos:start="23:40" pos:end="23:44"><name pos:start="23:40" pos:end="23:44">frame</name></expr></argument>, <argument pos:start="23:47" pos:end="23:56"><expr pos:start="23:47" pos:end="23:56"><name pos:start="23:47" pos:end="23:56">frame_addr</name></expr></argument>, <argument pos:start="23:59" pos:end="23:59"><expr pos:start="23:59" pos:end="23:59"><literal type="number" pos:start="23:59" pos:end="23:59">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:22"><block_content pos:start="25:9" pos:end="25:22">

   	<goto pos:start="25:9" pos:end="25:22">goto <name pos:start="25:14" pos:end="25:21">badframe</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:60"><expr pos:start="29:5" pos:end="29:59"><call pos:start="29:5" pos:end="29:59"><name pos:start="29:5" pos:end="29:25">target_to_host_sigset</name><argument_list pos:start="29:26" pos:end="29:59">(<argument pos:start="29:27" pos:end="29:34"><expr pos:start="29:27" pos:end="29:34"><operator pos:start="29:27" pos:end="29:27">&amp;</operator><name pos:start="29:28" pos:end="29:34">blocked</name></expr></argument>, <argument pos:start="29:37" pos:end="29:58"><expr pos:start="29:37" pos:end="29:58"><operator pos:start="29:37" pos:end="29:37">&amp;</operator><name pos:start="29:38" pos:end="29:58"><name pos:start="29:38" pos:end="29:42">frame</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:46">uc</name><operator pos:start="29:47" pos:end="29:47">.</operator><name pos:start="29:48" pos:end="29:58">tuc_sigmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:48"><expr pos:start="31:5" pos:end="31:47"><call pos:start="31:5" pos:end="31:47"><name pos:start="31:5" pos:end="31:18">do_sigprocmask</name><argument_list pos:start="31:19" pos:end="31:47">(<argument pos:start="31:20" pos:end="31:30"><expr pos:start="31:20" pos:end="31:30"><name pos:start="31:20" pos:end="31:30">SIG_SETMASK</name></expr></argument>, <argument pos:start="31:33" pos:end="31:40"><expr pos:start="31:33" pos:end="31:40"><operator pos:start="31:33" pos:end="31:33">&amp;</operator><name pos:start="31:34" pos:end="31:40">blocked</name></expr></argument>, <argument pos:start="31:43" pos:end="31:46"><expr pos:start="31:43" pos:end="31:46"><name pos:start="31:43" pos:end="31:46">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="37:22"><if pos:start="35:5" pos:end="37:22">if <condition pos:start="35:8" pos:end="35:63">(<expr pos:start="35:9" pos:end="35:62"><call pos:start="35:9" pos:end="35:62"><name pos:start="35:9" pos:end="35:26">restore_sigcontext</name><argument_list pos:start="35:27" pos:end="35:62">(<argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><name pos:start="35:28" pos:end="35:31">regs</name></expr></argument>, <argument pos:start="35:34" pos:end="35:56"><expr pos:start="35:34" pos:end="35:56"><operator pos:start="35:34" pos:end="35:34">&amp;</operator><name pos:start="35:35" pos:end="35:56"><name pos:start="35:35" pos:end="35:39">frame</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:43">uc</name><operator pos:start="35:44" pos:end="35:44">.</operator><name pos:start="35:45" pos:end="35:56">tuc_mcontext</name></name></expr></argument>, <argument pos:start="35:59" pos:end="35:61"><expr pos:start="35:59" pos:end="35:61"><operator pos:start="35:59" pos:end="35:59">&amp;</operator><name pos:start="35:60" pos:end="35:61">r0</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:22"><block_content pos:start="37:9" pos:end="37:22">

        <goto pos:start="37:9" pos:end="37:22">goto <name pos:start="37:14" pos:end="37:21">badframe</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="47:22"><if pos:start="41:5" pos:end="47:22">if <condition pos:start="41:8" pos:end="45:65">(<expr pos:start="41:9" pos:end="45:64"><call pos:start="41:9" pos:end="45:53"><name pos:start="41:9" pos:end="41:22">do_sigaltstack</name><argument_list pos:start="41:23" pos:end="45:53">(<argument pos:start="41:24" pos:end="43:72"><expr pos:start="41:24" pos:end="43:72"><name pos:start="41:24" pos:end="41:33">frame_addr</name> <operator pos:start="41:35" pos:end="41:35">+</operator>

		       <call pos:start="43:24" pos:end="43:72"><name pos:start="43:24" pos:end="43:31">offsetof</name><argument_list pos:start="43:32" pos:end="43:72">(<argument pos:start="43:33" pos:end="43:57"><expr pos:start="43:33" pos:end="43:57">struct <name pos:start="43:40" pos:end="43:57">target_rt_sigframe</name></expr></argument>, <argument pos:start="43:60" pos:end="43:71"><expr pos:start="43:60" pos:end="43:71"><name pos:start="43:60" pos:end="43:71"><name pos:start="43:60" pos:end="43:61">uc</name><operator pos:start="43:62" pos:end="43:62">.</operator><name pos:start="43:63" pos:end="43:71">tuc_stack</name></name></expr></argument>)</argument_list></call></expr></argument>,

		       <argument pos:start="45:24" pos:end="45:24"><expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr></argument>, <argument pos:start="45:27" pos:end="45:52"><expr pos:start="45:27" pos:end="45:52"><call pos:start="45:27" pos:end="45:52"><name pos:start="45:27" pos:end="45:46">get_sp_from_cpustate</name><argument_list pos:start="45:47" pos:end="45:52">(<argument pos:start="45:48" pos:end="45:51"><expr pos:start="45:48" pos:end="45:51"><name pos:start="45:48" pos:end="45:51">regs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="45:55" pos:end="45:56">==</operator> <operator pos:start="45:58" pos:end="45:58">-</operator><name pos:start="45:59" pos:end="45:64">EFAULT</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:22"><block_content pos:start="47:9" pos:end="47:22">

        <goto pos:start="47:9" pos:end="47:22">goto <name pos:start="47:14" pos:end="47:21">badframe</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:45"><expr pos:start="51:5" pos:end="51:44"><call pos:start="51:5" pos:end="51:44"><name pos:start="51:5" pos:end="51:22">unlock_user_struct</name><argument_list pos:start="51:23" pos:end="51:44">(<argument pos:start="51:24" pos:end="51:28"><expr pos:start="51:24" pos:end="51:28"><name pos:start="51:24" pos:end="51:28">frame</name></expr></argument>, <argument pos:start="51:31" pos:end="51:40"><expr pos:start="51:31" pos:end="51:40"><name pos:start="51:31" pos:end="51:40">frame_addr</name></expr></argument>, <argument pos:start="51:43" pos:end="51:43"><expr pos:start="51:43" pos:end="51:43"><literal type="number" pos:start="51:43" pos:end="51:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:14">return <expr pos:start="53:12" pos:end="53:13"><name pos:start="53:12" pos:end="53:13">r0</name></expr>;</return>



<label pos:start="57:1" pos:end="57:9"><name pos:start="57:1" pos:end="57:8">badframe</name>:</label>

    <expr_stmt pos:start="59:5" pos:end="59:45"><expr pos:start="59:5" pos:end="59:44"><call pos:start="59:5" pos:end="59:44"><name pos:start="59:5" pos:end="59:22">unlock_user_struct</name><argument_list pos:start="59:23" pos:end="59:44">(<argument pos:start="59:24" pos:end="59:28"><expr pos:start="59:24" pos:end="59:28"><name pos:start="59:24" pos:end="59:28">frame</name></expr></argument>, <argument pos:start="59:31" pos:end="59:40"><expr pos:start="59:31" pos:end="59:40"><name pos:start="59:31" pos:end="59:40">frame_addr</name></expr></argument>, <argument pos:start="59:43" pos:end="59:43"><expr pos:start="59:43" pos:end="59:43"><literal type="number" pos:start="59:43" pos:end="59:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:30"><expr pos:start="61:5" pos:end="61:29"><call pos:start="61:5" pos:end="61:29"><name pos:start="61:5" pos:end="61:13">force_sig</name><argument_list pos:start="61:14" pos:end="61:29">(<argument pos:start="61:15" pos:end="61:28"><expr pos:start="61:15" pos:end="61:28"><name pos:start="61:15" pos:end="61:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
