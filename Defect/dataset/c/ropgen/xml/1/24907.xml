<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24907.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">close_peer_eventfds</name><parameter_list pos:start="1:32" pos:end="1:58">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:44">IVShmemState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:57"><decl pos:start="1:50" pos:end="1:57"><type pos:start="1:50" pos:end="1:57"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:57">posn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:35">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">n</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:51">(<expr pos:start="9:9" pos:end="9:50"><operator pos:start="9:9" pos:end="9:9">!</operator><call pos:start="9:10" pos:end="9:50"><name pos:start="9:10" pos:end="9:28">ivshmem_has_feature</name><argument_list pos:start="9:29" pos:end="9:50">(<argument pos:start="9:30" pos:end="9:30"><expr pos:start="9:30" pos:end="9:30"><name pos:start="9:30" pos:end="9:30">s</name></expr></argument>, <argument pos:start="9:33" pos:end="9:49"><expr pos:start="9:33" pos:end="9:49"><name pos:start="9:33" pos:end="9:49">IVSHMEM_IOEVENTFD</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:53" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:40">(<expr pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:12">posn</name> <operator pos:start="15:14" pos:end="15:14">&lt;</operator> <literal type="number" pos:start="15:16" pos:end="15:16">0</literal> <operator pos:start="15:18" pos:end="15:19">||</operator> <name pos:start="15:21" pos:end="15:24">posn</name> <operator pos:start="15:26" pos:end="15:27">&gt;=</operator> <name pos:start="15:29" pos:end="15:39"><name pos:start="15:29" pos:end="15:29">s</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:39">nb_peers</name></name></expr>)</condition> <block pos:start="15:42" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:46"><expr pos:start="17:9" pos:end="17:45"><call pos:start="17:9" pos:end="17:45"><name pos:start="17:9" pos:end="17:20">error_report</name><argument_list pos:start="17:21" pos:end="17:45">(<argument pos:start="17:22" pos:end="17:38"><expr pos:start="17:22" pos:end="17:38"><literal type="string" pos:start="17:22" pos:end="17:38">"invalid peer %d"</literal></expr></argument>, <argument pos:start="17:41" pos:end="17:44"><expr pos:start="17:41" pos:end="17:44"><name pos:start="17:41" pos:end="17:44">posn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:5">n</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">peers</name><index pos:start="25:17" pos:end="25:22">[<expr pos:start="25:18" pos:end="25:21"><name pos:start="25:18" pos:end="25:21">posn</name></expr>]</index></name><operator pos:start="25:23" pos:end="25:23">.</operator><name pos:start="25:24" pos:end="25:34">nb_eventfds</name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><call pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:35">memory_region_transaction_begin</name><argument_list pos:start="29:36" pos:end="29:37">()</argument_list></call></expr>;</expr_stmt>

    <for pos:start="31:5" pos:end="35:5">for <control pos:start="31:9" pos:end="31:27">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:22"><expr pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:21">n</name></expr>;</condition> <incr pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:24">i</name><operator pos:start="31:25" pos:end="31:26">++</operator></expr></incr>)</control> <block pos:start="31:29" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:40">

        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><call pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:27">ivshmem_del_eventfd</name><argument_list pos:start="33:28" pos:end="33:39">(<argument pos:start="33:29" pos:end="33:29"><expr pos:start="33:29" pos:end="33:29"><name pos:start="33:29" pos:end="33:29">s</name></expr></argument>, <argument pos:start="33:32" pos:end="33:35"><expr pos:start="33:32" pos:end="33:35"><name pos:start="33:32" pos:end="33:35">posn</name></expr></argument>, <argument pos:start="33:38" pos:end="33:38"><expr pos:start="33:38" pos:end="33:38"><name pos:start="33:38" pos:end="33:38">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="37:5" pos:end="37:39"><expr pos:start="37:5" pos:end="37:38"><call pos:start="37:5" pos:end="37:38"><name pos:start="37:5" pos:end="37:36">memory_region_transaction_commit</name><argument_list pos:start="37:37" pos:end="37:38">()</argument_list></call></expr>;</expr_stmt>

    <for pos:start="39:5" pos:end="43:5">for <control pos:start="39:9" pos:end="39:27">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:22"><expr pos:start="39:17" pos:end="39:21"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:21">n</name></expr>;</condition> <incr pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:24">i</name><operator pos:start="39:25" pos:end="39:26">++</operator></expr></incr>)</control> <block pos:start="39:29" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:60">

        <expr_stmt pos:start="41:9" pos:end="41:60"><expr pos:start="41:9" pos:end="41:59"><call pos:start="41:9" pos:end="41:59"><name pos:start="41:9" pos:end="41:30">event_notifier_cleanup</name><argument_list pos:start="41:31" pos:end="41:59">(<argument pos:start="41:32" pos:end="41:58"><expr pos:start="41:32" pos:end="41:58"><operator pos:start="41:32" pos:end="41:32">&amp;</operator><name pos:start="41:33" pos:end="41:46"><name pos:start="41:33" pos:end="41:33">s</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:40">peers</name><index pos:start="41:41" pos:end="41:46">[<expr pos:start="41:42" pos:end="41:45"><name pos:start="41:42" pos:end="41:45">posn</name></expr>]</index></name><operator pos:start="41:47" pos:end="41:47">.</operator><name pos:start="41:48" pos:end="41:58"><name pos:start="41:48" pos:end="41:55">eventfds</name><index pos:start="41:56" pos:end="41:58">[<expr pos:start="41:57" pos:end="41:57"><name pos:start="41:57" pos:end="41:57">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="47:5" pos:end="47:36"><expr pos:start="47:5" pos:end="47:35"><call pos:start="47:5" pos:end="47:35"><name pos:start="47:5" pos:end="47:10">g_free</name><argument_list pos:start="47:11" pos:end="47:35">(<argument pos:start="47:12" pos:end="47:34"><expr pos:start="47:12" pos:end="47:34"><name pos:start="47:12" pos:end="47:25"><name pos:start="47:12" pos:end="47:12">s</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:19">peers</name><index pos:start="47:20" pos:end="47:25">[<expr pos:start="47:21" pos:end="47:24"><name pos:start="47:21" pos:end="47:24">posn</name></expr>]</index></name><operator pos:start="47:26" pos:end="47:26">.</operator><name pos:start="47:27" pos:end="47:34">eventfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:35"><expr pos:start="49:5" pos:end="49:34"><name pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:12">peers</name><index pos:start="49:13" pos:end="49:18">[<expr pos:start="49:14" pos:end="49:17"><name pos:start="49:14" pos:end="49:17">posn</name></expr>]</index></name><operator pos:start="49:19" pos:end="49:19">.</operator><name pos:start="49:20" pos:end="49:30">nb_eventfds</name> <operator pos:start="49:32" pos:end="49:32">=</operator> <literal type="number" pos:start="49:34" pos:end="49:34">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
