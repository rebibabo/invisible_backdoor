<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12170.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">con_init</name><parameter_list pos:start="1:20" pos:end="1:45">(<parameter pos:start="1:21" pos:end="1:44"><decl pos:start="1:21" pos:end="1:44"><type pos:start="1:21" pos:end="1:44"><name pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:26">struct</name> <name pos:start="1:28" pos:end="1:36">XenDevice</name></name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">xendev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:13">

    <decl_stmt pos:start="5:5" pos:end="5:77"><decl pos:start="5:5" pos:end="5:76"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:21">XenConsole</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">con</name> <init pos:start="5:28" pos:end="5:76">= <expr pos:start="5:30" pos:end="5:76"><call pos:start="5:30" pos:end="5:76"><name pos:start="5:30" pos:end="5:41">container_of</name><argument_list pos:start="5:42" pos:end="5:76">(<argument pos:start="5:43" pos:end="5:48"><expr pos:start="5:43" pos:end="5:48"><name pos:start="5:43" pos:end="5:48">xendev</name></expr></argument>, <argument pos:start="5:51" pos:end="5:67"><expr pos:start="5:51" pos:end="5:67">struct <name pos:start="5:58" pos:end="5:67">XenConsole</name></expr></argument>, <argument pos:start="5:70" pos:end="5:75"><expr pos:start="5:70" pos:end="5:75"><name pos:start="5:70" pos:end="5:75">xendev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">type</name></decl>, <decl pos:start="7:17" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">dom</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:15">/* setup */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:56"><expr pos:start="13:5" pos:end="13:55"><name pos:start="13:5" pos:end="13:7">dom</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:55"><name pos:start="13:11" pos:end="13:28">xs_get_domain_path</name><argument_list pos:start="13:29" pos:end="13:55">(<argument pos:start="13:30" pos:end="13:37"><expr pos:start="13:30" pos:end="13:37"><name pos:start="13:30" pos:end="13:37">xenstore</name></expr></argument>, <argument pos:start="13:40" pos:end="13:54"><expr pos:start="13:40" pos:end="13:54"><name pos:start="13:40" pos:end="13:54"><name pos:start="13:40" pos:end="13:42">con</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:50">xendev</name><operator pos:start="13:51" pos:end="13:51">.</operator><name pos:start="13:52" pos:end="13:54">dom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:68"><expr pos:start="15:5" pos:end="15:67"><call pos:start="15:5" pos:end="15:67"><name pos:start="15:5" pos:end="15:12">snprintf</name><argument_list pos:start="15:13" pos:end="15:67">(<argument pos:start="15:14" pos:end="15:25"><expr pos:start="15:14" pos:end="15:25"><name pos:start="15:14" pos:end="15:25"><name pos:start="15:14" pos:end="15:16">con</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:25">console</name></name></expr></argument>, <argument pos:start="15:28" pos:end="15:47"><expr pos:start="15:28" pos:end="15:47"><sizeof pos:start="15:28" pos:end="15:47">sizeof<argument_list pos:start="15:34" pos:end="15:47">(<argument pos:start="15:35" pos:end="15:46"><expr pos:start="15:35" pos:end="15:46"><name pos:start="15:35" pos:end="15:46"><name pos:start="15:35" pos:end="15:37">con</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:46">console</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="15:50" pos:end="15:61"><expr pos:start="15:50" pos:end="15:61"><literal type="string" pos:start="15:50" pos:end="15:61">"%s/console"</literal></expr></argument>, <argument pos:start="15:64" pos:end="15:66"><expr pos:start="15:64" pos:end="15:66"><name pos:start="15:64" pos:end="15:66">dom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:14"><expr pos:start="17:5" pos:end="17:13"><call pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:8">free</name><argument_list pos:start="17:9" pos:end="17:13">(<argument pos:start="17:10" pos:end="17:12"><expr pos:start="17:10" pos:end="17:12"><name pos:start="17:10" pos:end="17:12">dom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:51"><expr pos:start="21:5" pos:end="21:50"><name pos:start="21:5" pos:end="21:8">type</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:50"><name pos:start="21:12" pos:end="21:28">xenstore_read_str</name><argument_list pos:start="21:29" pos:end="21:50">(<argument pos:start="21:30" pos:end="21:41"><expr pos:start="21:30" pos:end="21:41"><name pos:start="21:30" pos:end="21:41"><name pos:start="21:30" pos:end="21:32">con</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:41">console</name></name></expr></argument>, <argument pos:start="21:44" pos:end="21:49"><expr pos:start="21:44" pos:end="21:49"><literal type="string" pos:start="21:44" pos:end="21:49">"type"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:44">(<expr pos:start="23:9" pos:end="23:43"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:13">type</name> <operator pos:start="23:15" pos:end="23:16">||</operator> <call pos:start="23:18" pos:end="23:38"><name pos:start="23:18" pos:end="23:23">strcmp</name><argument_list pos:start="23:24" pos:end="23:38">(<argument pos:start="23:25" pos:end="23:28"><expr pos:start="23:25" pos:end="23:28"><name pos:start="23:25" pos:end="23:28">type</name></expr></argument>, <argument pos:start="23:31" pos:end="23:37"><expr pos:start="23:31" pos:end="23:37"><literal type="string" pos:start="23:31" pos:end="23:37">"ioemu"</literal></expr></argument>)</argument_list></call> <operator pos:start="23:40" pos:end="23:41">!=</operator> <literal type="number" pos:start="23:43" pos:end="23:43">0</literal></expr>)</condition> <block pos:start="23:46" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

	<expr_stmt pos:start="25:9" pos:end="25:65"><expr pos:start="25:9" pos:end="25:64"><call pos:start="25:9" pos:end="25:64"><name pos:start="25:9" pos:end="25:21">xen_be_printf</name><argument_list pos:start="25:22" pos:end="25:64">(<argument pos:start="25:23" pos:end="25:28"><expr pos:start="25:23" pos:end="25:28"><name pos:start="25:23" pos:end="25:28">xendev</name></expr></argument>, <argument pos:start="25:31" pos:end="25:31"><expr pos:start="25:31" pos:end="25:31"><literal type="number" pos:start="25:31" pos:end="25:31">1</literal></expr></argument>, <argument pos:start="25:34" pos:end="25:57"><expr pos:start="25:34" pos:end="25:57"><literal type="string" pos:start="25:34" pos:end="25:57">"not for me (type=%s)\n"</literal></expr></argument>, <argument pos:start="25:60" pos:end="25:63"><expr pos:start="25:60" pos:end="25:63"><name pos:start="25:60" pos:end="25:63">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="41:47"><if pos:start="33:5" pos:end="37:39">if <condition pos:start="33:8" pos:end="33:37">(<expr pos:start="33:9" pos:end="33:36"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:36"><name pos:start="33:10" pos:end="33:19">serial_hds</name><index pos:start="33:20" pos:end="33:36">[<expr pos:start="33:21" pos:end="33:35"><name pos:start="33:21" pos:end="33:35"><name pos:start="33:21" pos:end="33:23">con</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:31">xendev</name><operator pos:start="33:32" pos:end="33:32">.</operator><name pos:start="33:33" pos:end="33:35">dev</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="37:39"><block_content pos:start="35:9" pos:end="37:39">

	<expr_stmt pos:start="35:9" pos:end="37:39"><expr pos:start="35:9" pos:end="37:38"><call pos:start="35:9" pos:end="37:38"><name pos:start="35:9" pos:end="35:21">xen_be_printf</name><argument_list pos:start="35:22" pos:end="37:38">(<argument pos:start="35:23" pos:end="35:28"><expr pos:start="35:23" pos:end="35:28"><name pos:start="35:23" pos:end="35:28">xendev</name></expr></argument>, <argument pos:start="35:31" pos:end="35:31"><expr pos:start="35:31" pos:end="35:31"><literal type="number" pos:start="35:31" pos:end="35:31">1</literal></expr></argument>, <argument pos:start="35:34" pos:end="35:75"><expr pos:start="35:34" pos:end="35:75"><literal type="string" pos:start="35:34" pos:end="35:75">"WARNING: serial line %d not configured\n"</literal></expr></argument>,

                      <argument pos:start="37:23" pos:end="37:37"><expr pos:start="37:23" pos:end="37:37"><name pos:start="37:23" pos:end="37:37"><name pos:start="37:23" pos:end="37:25">con</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:33">xendev</name><operator pos:start="37:34" pos:end="37:34">.</operator><name pos:start="37:35" pos:end="37:37">dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="39:5" pos:end="41:47">else<block type="pseudo" pos:start="41:9" pos:end="41:47"><block_content pos:start="41:9" pos:end="41:47">

        <expr_stmt pos:start="41:9" pos:end="41:47"><expr pos:start="41:9" pos:end="41:46"><name pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:11">con</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:16">chr</name></name> <operator pos:start="41:18" pos:end="41:18">=</operator> <name pos:start="41:20" pos:end="41:46"><name pos:start="41:20" pos:end="41:29">serial_hds</name><index pos:start="41:30" pos:end="41:46">[<expr pos:start="41:31" pos:end="41:45"><name pos:start="41:31" pos:end="41:45"><name pos:start="41:31" pos:end="41:33">con</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:41">xendev</name><operator pos:start="41:42" pos:end="41:42">.</operator><name pos:start="41:43" pos:end="41:45">dev</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
