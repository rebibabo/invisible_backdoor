<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8342.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">hls_coding_quadtree</name><parameter_list pos:start="1:31" pos:end="3:62">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:42">HEVCContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:53"><decl pos:start="1:48" pos:end="1:53"><type pos:start="1:48" pos:end="1:53"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:53">x0</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:61"><decl pos:start="1:56" pos:end="1:61"><type pos:start="1:56" pos:end="1:61"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:61">y0</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:47"><decl pos:start="3:32" pos:end="3:47"><type pos:start="3:32" pos:end="3:47"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:47">log2_cb_size</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:61"><decl pos:start="3:50" pos:end="3:61"><type pos:start="3:50" pos:end="3:61"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:61">cb_depth</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="131:1">{<block_content pos:start="7:5" pos:end="129:13">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">HEVCLocalContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">lc</name> <init pos:start="7:26" pos:end="7:36">= <expr pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:36">HEVClc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:21">cb_size</name>    <init pos:start="9:26" pos:end="9:44">= <expr pos:start="9:28" pos:end="9:44"><literal type="number" pos:start="9:28" pos:end="9:28">1</literal> <operator pos:start="9:30" pos:end="9:31">&lt;&lt;</operator> <name pos:start="9:33" pos:end="9:44">log2_cb_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:6">lc</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:10">ct</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:16">depth</name></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <name pos:start="15:20" pos:end="15:27">cb_depth</name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="33:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="21:48">(<expr pos:start="17:9" pos:end="21:47"><name pos:start="17:9" pos:end="17:10">x0</name> <operator pos:start="17:12" pos:end="17:12">+</operator> <name pos:start="17:14" pos:end="17:20">cb_size</name> <operator pos:start="17:22" pos:end="17:23">&lt;=</operator> <name pos:start="17:25" pos:end="17:37"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:30">sps</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:37">width</name></name>  <operator pos:start="17:40" pos:end="17:41">&amp;&amp;</operator>

        <name pos:start="19:9" pos:end="19:10">y0</name> <operator pos:start="19:12" pos:end="19:12">+</operator> <name pos:start="19:14" pos:end="19:20">cb_size</name> <operator pos:start="19:22" pos:end="19:23">&lt;=</operator> <name pos:start="19:25" pos:end="19:38"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:30">sps</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:38">height</name></name> <operator pos:start="19:40" pos:end="19:41">&amp;&amp;</operator>

        <name pos:start="21:9" pos:end="21:20">log2_cb_size</name> <operator pos:start="21:22" pos:end="21:22">&gt;</operator> <name pos:start="21:24" pos:end="21:47"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:29">sps</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:47">log2_min_cb_size</name></name></expr>)</condition> <block pos:start="21:50" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:71">

        <expr_stmt pos:start="23:9" pos:end="25:71"><expr pos:start="23:9" pos:end="25:70"><call pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:14">SAMPLE</name><argument_list pos:start="23:15" pos:end="23:40">(<argument pos:start="23:16" pos:end="23:31"><expr pos:start="23:16" pos:end="23:31"><name pos:start="23:16" pos:end="23:31"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:31">split_cu_flag</name></name></expr></argument>, <argument pos:start="23:34" pos:end="23:35"><expr pos:start="23:34" pos:end="23:35"><name pos:start="23:34" pos:end="23:35">x0</name></expr></argument>, <argument pos:start="23:38" pos:end="23:39"><expr pos:start="23:38" pos:end="23:39"><name pos:start="23:38" pos:end="23:39">y0</name></expr></argument>)</argument_list></call> <operator pos:start="23:42" pos:end="23:42">=</operator>

            <call pos:start="25:13" pos:end="25:70"><name pos:start="25:13" pos:end="25:49">ff_hevc_split_coding_unit_flag_decode</name><argument_list pos:start="25:50" pos:end="25:70">(<argument pos:start="25:51" pos:end="25:51"><expr pos:start="25:51" pos:end="25:51"><name pos:start="25:51" pos:end="25:51">s</name></expr></argument>, <argument pos:start="25:54" pos:end="25:61"><expr pos:start="25:54" pos:end="25:61"><name pos:start="25:54" pos:end="25:61">cb_depth</name></expr></argument>, <argument pos:start="25:64" pos:end="25:65"><expr pos:start="25:64" pos:end="25:65"><name pos:start="25:64" pos:end="25:65">x0</name></expr></argument>, <argument pos:start="25:68" pos:end="25:69"><expr pos:start="25:68" pos:end="25:69"><name pos:start="25:68" pos:end="25:69">y0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="33:5">else <block pos:start="27:12" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:54">

        <expr_stmt pos:start="29:9" pos:end="31:54"><expr pos:start="29:9" pos:end="31:53"><call pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:14">SAMPLE</name><argument_list pos:start="29:15" pos:end="29:40">(<argument pos:start="29:16" pos:end="29:31"><expr pos:start="29:16" pos:end="29:31"><name pos:start="29:16" pos:end="29:31"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:31">split_cu_flag</name></name></expr></argument>, <argument pos:start="29:34" pos:end="29:35"><expr pos:start="29:34" pos:end="29:35"><name pos:start="29:34" pos:end="29:35">x0</name></expr></argument>, <argument pos:start="29:38" pos:end="29:39"><expr pos:start="29:38" pos:end="29:39"><name pos:start="29:38" pos:end="29:39">y0</name></expr></argument>)</argument_list></call> <operator pos:start="29:42" pos:end="29:42">=</operator>

            <operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:25">log2_cb_size</name> <operator pos:start="31:27" pos:end="31:27">&gt;</operator> <name pos:start="31:29" pos:end="31:52"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:34">sps</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:52">log2_min_cb_size</name></name><operator pos:start="31:53" pos:end="31:53">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="37:79">(<expr pos:start="35:9" pos:end="37:78"><name pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:14">pps</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:40">cu_qp_delta_enabled_flag</name></name> <operator pos:start="35:42" pos:end="35:43">&amp;&amp;</operator>

        <name pos:start="37:9" pos:end="37:20">log2_cb_size</name> <operator pos:start="37:22" pos:end="37:23">&gt;=</operator> <name pos:start="37:25" pos:end="37:45"><name pos:start="37:25" pos:end="37:25">s</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:30">sps</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:45">log2_ctb_size</name></name> <operator pos:start="37:47" pos:end="37:47">-</operator> <name pos:start="37:49" pos:end="37:78"><name pos:start="37:49" pos:end="37:49">s</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:54">pps</name><operator pos:start="37:55" pos:end="37:56">-&gt;</operator><name pos:start="37:57" pos:end="37:78">diff_cu_qp_delta_depth</name></name></expr>)</condition> <block pos:start="37:81" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:40">

        <expr_stmt pos:start="39:9" pos:end="39:40"><expr pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:10">lc</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:14">tu</name><operator pos:start="39:15" pos:end="39:15">.</operator><name pos:start="39:16" pos:end="39:35">is_cu_qp_delta_coded</name></name> <operator pos:start="39:37" pos:end="39:37">=</operator> <literal type="number" pos:start="39:39" pos:end="39:39">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:40"><expr pos:start="41:9" pos:end="41:39"><name pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:10">lc</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:14">tu</name><operator pos:start="41:15" pos:end="41:15">.</operator><name pos:start="41:16" pos:end="41:26">cu_qp_delta</name></name>          <operator pos:start="41:37" pos:end="41:37">=</operator> <literal type="number" pos:start="41:39" pos:end="41:39">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="125:5"><if pos:start="47:5" pos:end="95:5">if <condition pos:start="47:8" pos:end="47:41">(<expr pos:start="47:9" pos:end="47:40"><call pos:start="47:9" pos:end="47:40"><name pos:start="47:9" pos:end="47:14">SAMPLE</name><argument_list pos:start="47:15" pos:end="47:40">(<argument pos:start="47:16" pos:end="47:31"><expr pos:start="47:16" pos:end="47:31"><name pos:start="47:16" pos:end="47:31"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:31">split_cu_flag</name></name></expr></argument>, <argument pos:start="47:34" pos:end="47:35"><expr pos:start="47:34" pos:end="47:35"><name pos:start="47:34" pos:end="47:35">x0</name></expr></argument>, <argument pos:start="47:38" pos:end="47:39"><expr pos:start="47:38" pos:end="47:39"><name pos:start="47:38" pos:end="47:39">y0</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:43" pos:end="95:5">{<block_content pos:start="49:9" pos:end="93:21">

        <decl_stmt pos:start="49:9" pos:end="49:47"><decl pos:start="49:9" pos:end="49:46"><type pos:start="49:9" pos:end="49:17"><specifier pos:start="49:9" pos:end="49:13">const</specifier> <name pos:start="49:15" pos:end="49:17">int</name></type> <name pos:start="49:19" pos:end="49:31">cb_size_split</name> <init pos:start="49:33" pos:end="49:46">= <expr pos:start="49:35" pos:end="49:46"><name pos:start="49:35" pos:end="49:41">cb_size</name> <operator pos:start="49:43" pos:end="49:44">&gt;&gt;</operator> <literal type="number" pos:start="49:46" pos:end="49:46">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:42"><decl pos:start="51:9" pos:end="51:41"><type pos:start="51:9" pos:end="51:17"><specifier pos:start="51:9" pos:end="51:13">const</specifier> <name pos:start="51:15" pos:end="51:17">int</name></type> <name pos:start="51:19" pos:end="51:20">x1</name> <init pos:start="51:22" pos:end="51:41">= <expr pos:start="51:24" pos:end="51:41"><name pos:start="51:24" pos:end="51:25">x0</name> <operator pos:start="51:27" pos:end="51:27">+</operator> <name pos:start="51:29" pos:end="51:41">cb_size_split</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:42"><decl pos:start="53:9" pos:end="53:41"><type pos:start="53:9" pos:end="53:17"><specifier pos:start="53:9" pos:end="53:13">const</specifier> <name pos:start="53:15" pos:end="53:17">int</name></type> <name pos:start="53:19" pos:end="53:20">y1</name> <init pos:start="53:22" pos:end="53:41">= <expr pos:start="53:24" pos:end="53:41"><name pos:start="53:24" pos:end="53:25">y0</name> <operator pos:start="53:27" pos:end="53:27">+</operator> <name pos:start="53:29" pos:end="53:41">cb_size_split</name></expr></init></decl>;</decl_stmt>



        <decl_stmt pos:start="57:9" pos:end="57:26"><decl pos:start="57:9" pos:end="57:25"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:21">more_data</name> <init pos:start="57:23" pos:end="57:25">= <expr pos:start="57:25" pos:end="57:25"><literal type="number" pos:start="57:25" pos:end="57:25">0</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:83"><expr pos:start="61:9" pos:end="61:82"><name pos:start="61:9" pos:end="61:17">more_data</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="61:82"><name pos:start="61:21" pos:end="61:39">hls_coding_quadtree</name><argument_list pos:start="61:40" pos:end="61:82">(<argument pos:start="61:41" pos:end="61:41"><expr pos:start="61:41" pos:end="61:41"><name pos:start="61:41" pos:end="61:41">s</name></expr></argument>, <argument pos:start="61:44" pos:end="61:45"><expr pos:start="61:44" pos:end="61:45"><name pos:start="61:44" pos:end="61:45">x0</name></expr></argument>, <argument pos:start="61:48" pos:end="61:49"><expr pos:start="61:48" pos:end="61:49"><name pos:start="61:48" pos:end="61:49">y0</name></expr></argument>, <argument pos:start="61:52" pos:end="61:67"><expr pos:start="61:52" pos:end="61:67"><name pos:start="61:52" pos:end="61:63">log2_cb_size</name> <operator pos:start="61:65" pos:end="61:65">-</operator> <literal type="number" pos:start="61:67" pos:end="61:67">1</literal></expr></argument>, <argument pos:start="61:70" pos:end="61:81"><expr pos:start="61:70" pos:end="61:81"><name pos:start="61:70" pos:end="61:77">cb_depth</name> <operator pos:start="61:79" pos:end="61:79">+</operator> <literal type="number" pos:start="61:81" pos:end="61:81">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:29"><if pos:start="63:9" pos:end="65:29">if <condition pos:start="63:12" pos:end="63:26">(<expr pos:start="63:13" pos:end="63:25"><name pos:start="63:13" pos:end="63:21">more_data</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <literal type="number" pos:start="63:25" pos:end="63:25">0</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:29"><block_content pos:start="65:13" pos:end="65:29">

            <return pos:start="65:13" pos:end="65:29">return <expr pos:start="65:20" pos:end="65:28"><name pos:start="65:20" pos:end="65:28">more_data</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="69:9" pos:end="71:87"><if pos:start="69:9" pos:end="71:87">if <condition pos:start="69:12" pos:end="69:44">(<expr pos:start="69:13" pos:end="69:43"><name pos:start="69:13" pos:end="69:21">more_data</name> <operator pos:start="69:23" pos:end="69:24">&amp;&amp;</operator> <name pos:start="69:26" pos:end="69:27">x1</name> <operator pos:start="69:29" pos:end="69:29">&lt;</operator> <name pos:start="69:31" pos:end="69:43"><name pos:start="69:31" pos:end="69:31">s</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:36">sps</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:43">width</name></name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:87"><block_content pos:start="71:13" pos:end="71:87">

            <expr_stmt pos:start="71:13" pos:end="71:87"><expr pos:start="71:13" pos:end="71:86"><name pos:start="71:13" pos:end="71:21">more_data</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <call pos:start="71:25" pos:end="71:86"><name pos:start="71:25" pos:end="71:43">hls_coding_quadtree</name><argument_list pos:start="71:44" pos:end="71:86">(<argument pos:start="71:45" pos:end="71:45"><expr pos:start="71:45" pos:end="71:45"><name pos:start="71:45" pos:end="71:45">s</name></expr></argument>, <argument pos:start="71:48" pos:end="71:49"><expr pos:start="71:48" pos:end="71:49"><name pos:start="71:48" pos:end="71:49">x1</name></expr></argument>, <argument pos:start="71:52" pos:end="71:53"><expr pos:start="71:52" pos:end="71:53"><name pos:start="71:52" pos:end="71:53">y0</name></expr></argument>, <argument pos:start="71:56" pos:end="71:71"><expr pos:start="71:56" pos:end="71:71"><name pos:start="71:56" pos:end="71:67">log2_cb_size</name> <operator pos:start="71:69" pos:end="71:69">-</operator> <literal type="number" pos:start="71:71" pos:end="71:71">1</literal></expr></argument>, <argument pos:start="71:74" pos:end="71:85"><expr pos:start="71:74" pos:end="71:85"><name pos:start="71:74" pos:end="71:81">cb_depth</name> <operator pos:start="71:83" pos:end="71:83">+</operator> <literal type="number" pos:start="71:85" pos:end="71:85">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="73:9" pos:end="75:87"><if pos:start="73:9" pos:end="75:87">if <condition pos:start="73:12" pos:end="73:45">(<expr pos:start="73:13" pos:end="73:44"><name pos:start="73:13" pos:end="73:21">more_data</name> <operator pos:start="73:23" pos:end="73:24">&amp;&amp;</operator> <name pos:start="73:26" pos:end="73:27">y1</name> <operator pos:start="73:29" pos:end="73:29">&lt;</operator> <name pos:start="73:31" pos:end="73:44"><name pos:start="73:31" pos:end="73:31">s</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:36">sps</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:44">height</name></name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:87"><block_content pos:start="75:13" pos:end="75:87">

            <expr_stmt pos:start="75:13" pos:end="75:87"><expr pos:start="75:13" pos:end="75:86"><name pos:start="75:13" pos:end="75:21">more_data</name> <operator pos:start="75:23" pos:end="75:23">=</operator> <call pos:start="75:25" pos:end="75:86"><name pos:start="75:25" pos:end="75:43">hls_coding_quadtree</name><argument_list pos:start="75:44" pos:end="75:86">(<argument pos:start="75:45" pos:end="75:45"><expr pos:start="75:45" pos:end="75:45"><name pos:start="75:45" pos:end="75:45">s</name></expr></argument>, <argument pos:start="75:48" pos:end="75:49"><expr pos:start="75:48" pos:end="75:49"><name pos:start="75:48" pos:end="75:49">x0</name></expr></argument>, <argument pos:start="75:52" pos:end="75:53"><expr pos:start="75:52" pos:end="75:53"><name pos:start="75:52" pos:end="75:53">y1</name></expr></argument>, <argument pos:start="75:56" pos:end="75:71"><expr pos:start="75:56" pos:end="75:71"><name pos:start="75:56" pos:end="75:67">log2_cb_size</name> <operator pos:start="75:69" pos:end="75:69">-</operator> <literal type="number" pos:start="75:71" pos:end="75:71">1</literal></expr></argument>, <argument pos:start="75:74" pos:end="75:85"><expr pos:start="75:74" pos:end="75:85"><name pos:start="75:74" pos:end="75:81">cb_depth</name> <operator pos:start="75:83" pos:end="75:83">+</operator> <literal type="number" pos:start="75:85" pos:end="75:85">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="79:32">(<expr pos:start="77:13" pos:end="79:31"><name pos:start="77:13" pos:end="77:21">more_data</name> <operator pos:start="77:23" pos:end="77:24">&amp;&amp;</operator> <name pos:start="77:26" pos:end="77:27">x1</name> <operator pos:start="77:29" pos:end="77:29">&lt;</operator> <name pos:start="77:31" pos:end="77:43"><name pos:start="77:31" pos:end="77:31">s</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:36">sps</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:43">width</name></name> <operator pos:start="77:45" pos:end="77:46">&amp;&amp;</operator>

            <name pos:start="79:13" pos:end="79:14">y1</name> <operator pos:start="79:16" pos:end="79:16">&lt;</operator> <name pos:start="79:18" pos:end="79:31"><name pos:start="79:18" pos:end="79:18">s</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:23">sps</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:31">height</name></name></expr>)</condition> <block pos:start="79:34" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:82">

            <return pos:start="81:13" pos:end="81:82">return <expr pos:start="81:20" pos:end="81:81"><call pos:start="81:20" pos:end="81:81"><name pos:start="81:20" pos:end="81:38">hls_coding_quadtree</name><argument_list pos:start="81:39" pos:end="81:81">(<argument pos:start="81:40" pos:end="81:40"><expr pos:start="81:40" pos:end="81:40"><name pos:start="81:40" pos:end="81:40">s</name></expr></argument>, <argument pos:start="81:43" pos:end="81:44"><expr pos:start="81:43" pos:end="81:44"><name pos:start="81:43" pos:end="81:44">x1</name></expr></argument>, <argument pos:start="81:47" pos:end="81:48"><expr pos:start="81:47" pos:end="81:48"><name pos:start="81:47" pos:end="81:48">y1</name></expr></argument>, <argument pos:start="81:51" pos:end="81:66"><expr pos:start="81:51" pos:end="81:66"><name pos:start="81:51" pos:end="81:62">log2_cb_size</name> <operator pos:start="81:64" pos:end="81:64">-</operator> <literal type="number" pos:start="81:66" pos:end="81:66">1</literal></expr></argument>, <argument pos:start="81:69" pos:end="81:80"><expr pos:start="81:69" pos:end="81:80"><name pos:start="81:69" pos:end="81:76">cb_depth</name> <operator pos:start="81:78" pos:end="81:78">+</operator> <literal type="number" pos:start="81:80" pos:end="81:80">1</literal></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="85:9" pos:end="93:21"><if pos:start="85:9" pos:end="89:59">if <condition pos:start="85:12" pos:end="85:22">(<expr pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:21">more_data</name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="89:59"><block_content pos:start="87:13" pos:end="89:59">

            <return pos:start="87:13" pos:end="89:59">return <expr pos:start="87:20" pos:end="89:58"><operator pos:start="87:20" pos:end="87:20">(</operator><operator pos:start="87:21" pos:end="87:21">(</operator><name pos:start="87:22" pos:end="87:23">x1</name> <operator pos:start="87:25" pos:end="87:25">+</operator> <name pos:start="87:27" pos:end="87:39">cb_size_split</name><operator pos:start="87:40" pos:end="87:40">)</operator> <operator pos:start="87:42" pos:end="87:42">&lt;</operator> <name pos:start="87:44" pos:end="87:56"><name pos:start="87:44" pos:end="87:44">s</name><operator pos:start="87:45" pos:end="87:46">-&gt;</operator><name pos:start="87:47" pos:end="87:49">sps</name><operator pos:start="87:50" pos:end="87:51">-&gt;</operator><name pos:start="87:52" pos:end="87:56">width</name></name> <operator pos:start="87:58" pos:end="87:59">||</operator>

                    <operator pos:start="89:21" pos:end="89:21">(</operator><name pos:start="89:22" pos:end="89:23">y1</name> <operator pos:start="89:25" pos:end="89:25">+</operator> <name pos:start="89:27" pos:end="89:39">cb_size_split</name><operator pos:start="89:40" pos:end="89:40">)</operator> <operator pos:start="89:42" pos:end="89:42">&lt;</operator> <name pos:start="89:44" pos:end="89:57"><name pos:start="89:44" pos:end="89:44">s</name><operator pos:start="89:45" pos:end="89:46">-&gt;</operator><name pos:start="89:47" pos:end="89:49">sps</name><operator pos:start="89:50" pos:end="89:51">-&gt;</operator><name pos:start="89:52" pos:end="89:57">height</name></name><operator pos:start="89:58" pos:end="89:58">)</operator></expr>;</return></block_content></block></if>

        <else pos:start="91:9" pos:end="93:21">else<block type="pseudo" pos:start="93:13" pos:end="93:21"><block_content pos:start="93:13" pos:end="93:21">

            <return pos:start="93:13" pos:end="93:21">return <expr pos:start="93:20" pos:end="93:20"><literal type="number" pos:start="93:20" pos:end="93:20">0</literal></expr>;</return></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="125:5">else <block pos:start="95:12" pos:end="125:5">{<block_content pos:start="97:9" pos:end="123:9">

        <expr_stmt pos:start="97:9" pos:end="97:55"><expr pos:start="97:9" pos:end="97:54"><name pos:start="97:9" pos:end="97:11">ret</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <call pos:start="97:15" pos:end="97:54"><name pos:start="97:15" pos:end="97:29">hls_coding_unit</name><argument_list pos:start="97:30" pos:end="97:54">(<argument pos:start="97:31" pos:end="97:31"><expr pos:start="97:31" pos:end="97:31"><name pos:start="97:31" pos:end="97:31">s</name></expr></argument>, <argument pos:start="97:34" pos:end="97:35"><expr pos:start="97:34" pos:end="97:35"><name pos:start="97:34" pos:end="97:35">x0</name></expr></argument>, <argument pos:start="97:38" pos:end="97:39"><expr pos:start="97:38" pos:end="97:39"><name pos:start="97:38" pos:end="97:39">y0</name></expr></argument>, <argument pos:start="97:42" pos:end="97:53"><expr pos:start="97:42" pos:end="97:53"><name pos:start="97:42" pos:end="97:53">log2_cb_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="101:23"><if pos:start="99:9" pos:end="101:23">if <condition pos:start="99:12" pos:end="99:20">(<expr pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:15">ret</name> <operator pos:start="99:17" pos:end="99:17">&lt;</operator> <literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:23"><block_content pos:start="101:13" pos:end="101:23">

            <return pos:start="101:13" pos:end="101:23">return <expr pos:start="101:20" pos:end="101:22"><name pos:start="101:20" pos:end="101:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="103:9" pos:end="123:9"><if pos:start="103:9" pos:end="119:9">if <condition pos:start="103:12" pos:end="113:47">(<expr pos:start="103:13" pos:end="113:46"><operator pos:start="103:13" pos:end="103:13">(</operator><operator pos:start="103:14" pos:end="103:14">!</operator><operator pos:start="103:15" pos:end="103:15">(</operator><operator pos:start="103:16" pos:end="103:16">(</operator><name pos:start="103:17" pos:end="103:18">x0</name> <operator pos:start="103:20" pos:end="103:20">+</operator> <name pos:start="103:22" pos:end="103:28">cb_size</name><operator pos:start="103:29" pos:end="103:29">)</operator> <operator pos:start="103:31" pos:end="103:31">%</operator>

               <operator pos:start="105:16" pos:end="105:16">(</operator><literal type="number" pos:start="105:17" pos:end="105:17">1</literal> <operator pos:start="105:19" pos:end="105:20">&lt;&lt;</operator> <operator pos:start="105:22" pos:end="105:22">(</operator><name pos:start="105:23" pos:end="105:43"><name pos:start="105:23" pos:end="105:23">s</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:28">sps</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:43">log2_ctb_size</name></name><operator pos:start="105:44" pos:end="105:44">)</operator><operator pos:start="105:45" pos:end="105:45">)</operator><operator pos:start="105:46" pos:end="105:46">)</operator> <operator pos:start="105:48" pos:end="105:49">||</operator>

             <operator pos:start="107:14" pos:end="107:14">(</operator><name pos:start="107:15" pos:end="107:16">x0</name> <operator pos:start="107:18" pos:end="107:18">+</operator> <name pos:start="107:20" pos:end="107:26">cb_size</name> <operator pos:start="107:28" pos:end="107:29">&gt;=</operator> <name pos:start="107:31" pos:end="107:43"><name pos:start="107:31" pos:end="107:31">s</name><operator pos:start="107:32" pos:end="107:33">-&gt;</operator><name pos:start="107:34" pos:end="107:36">sps</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:43">width</name></name><operator pos:start="107:44" pos:end="107:44">)</operator><operator pos:start="107:45" pos:end="107:45">)</operator> <operator pos:start="107:47" pos:end="107:48">&amp;&amp;</operator>

            <operator pos:start="109:13" pos:end="109:13">(</operator><operator pos:start="109:14" pos:end="109:14">!</operator><operator pos:start="109:15" pos:end="109:15">(</operator><operator pos:start="109:16" pos:end="109:16">(</operator><name pos:start="109:17" pos:end="109:18">y0</name> <operator pos:start="109:20" pos:end="109:20">+</operator> <name pos:start="109:22" pos:end="109:28">cb_size</name><operator pos:start="109:29" pos:end="109:29">)</operator> <operator pos:start="109:31" pos:end="109:31">%</operator>

               <operator pos:start="111:16" pos:end="111:16">(</operator><literal type="number" pos:start="111:17" pos:end="111:17">1</literal> <operator pos:start="111:19" pos:end="111:20">&lt;&lt;</operator> <operator pos:start="111:22" pos:end="111:22">(</operator><name pos:start="111:23" pos:end="111:43"><name pos:start="111:23" pos:end="111:23">s</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:28">sps</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:43">log2_ctb_size</name></name><operator pos:start="111:44" pos:end="111:44">)</operator><operator pos:start="111:45" pos:end="111:45">)</operator><operator pos:start="111:46" pos:end="111:46">)</operator> <operator pos:start="111:48" pos:end="111:49">||</operator>

             <operator pos:start="113:14" pos:end="113:14">(</operator><name pos:start="113:15" pos:end="113:16">y0</name> <operator pos:start="113:18" pos:end="113:18">+</operator> <name pos:start="113:20" pos:end="113:26">cb_size</name> <operator pos:start="113:28" pos:end="113:29">&gt;=</operator> <name pos:start="113:31" pos:end="113:44"><name pos:start="113:31" pos:end="113:31">s</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:36">sps</name><operator pos:start="113:37" pos:end="113:38">-&gt;</operator><name pos:start="113:39" pos:end="113:44">height</name></name><operator pos:start="113:45" pos:end="113:45">)</operator><operator pos:start="113:46" pos:end="113:46">)</operator></expr>)</condition> <block pos:start="113:49" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:38">

            <decl_stmt pos:start="115:13" pos:end="115:72"><decl pos:start="115:13" pos:end="115:71"><type pos:start="115:13" pos:end="115:15"><name pos:start="115:13" pos:end="115:15">int</name></type> <name pos:start="115:17" pos:end="115:33">end_of_slice_flag</name> <init pos:start="115:35" pos:end="115:71">= <expr pos:start="115:37" pos:end="115:71"><call pos:start="115:37" pos:end="115:71"><name pos:start="115:37" pos:end="115:68">ff_hevc_end_of_slice_flag_decode</name><argument_list pos:start="115:69" pos:end="115:71">(<argument pos:start="115:70" pos:end="115:70"><expr pos:start="115:70" pos:end="115:70"><name pos:start="115:70" pos:end="115:70">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <return pos:start="117:13" pos:end="117:38">return <expr pos:start="117:20" pos:end="117:37"><operator pos:start="117:20" pos:end="117:20">!</operator><name pos:start="117:21" pos:end="117:37">end_of_slice_flag</name></expr>;</return>

        </block_content>}</block></if> <else pos:start="119:11" pos:end="123:9">else <block pos:start="119:16" pos:end="123:9">{<block_content pos:start="121:13" pos:end="121:21">

            <return pos:start="121:13" pos:end="121:21">return <expr pos:start="121:20" pos:end="121:20"><literal type="number" pos:start="121:20" pos:end="121:20">1</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="129:5" pos:end="129:13">return <expr pos:start="129:12" pos:end="129:12"><literal type="number" pos:start="129:12" pos:end="129:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
