<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13745.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:42">vmxnet3_get_command_status</name><parameter_list pos:start="1:43" pos:end="1:59">(<parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:55">VMXNET3State</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:15">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:16">ret</name></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="83:5">switch <condition pos:start="9:12" pos:end="9:28">(<expr pos:start="9:13" pos:end="9:27"><name pos:start="9:13" pos:end="9:27"><name pos:start="9:13" pos:end="9:13">s</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:27">last_command</name></name></expr>)</condition> <block pos:start="9:30" pos:end="83:5">{<block_content pos:start="11:5" pos:end="81:14">

    <case pos:start="11:5" pos:end="11:34">case <expr pos:start="11:10" pos:end="11:33"><name pos:start="11:10" pos:end="11:33">VMXNET3_CMD_ACTIVATE_DEV</name></expr>:</case>

        <expr_stmt pos:start="13:9" pos:end="13:42"><expr pos:start="13:9" pos:end="13:41"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <ternary pos:start="13:15" pos:end="13:41"><condition pos:start="13:15" pos:end="13:34"><expr pos:start="13:15" pos:end="13:32"><operator pos:start="13:15" pos:end="13:15">(</operator><name pos:start="13:16" pos:end="13:31"><name pos:start="13:16" pos:end="13:16">s</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:31">device_active</name></name><operator pos:start="13:32" pos:end="13:32">)</operator></expr> ?</condition><then pos:start="13:36" pos:end="13:36"> <expr pos:start="13:36" pos:end="13:36"><literal type="number" pos:start="13:36" pos:end="13:36">0</literal></expr> </then><else pos:start="13:38" pos:end="13:41">: <expr pos:start="13:40" pos:end="13:41"><operator pos:start="13:40" pos:end="13:40">-</operator><literal type="number" pos:start="13:41" pos:end="13:41">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:50"><expr pos:start="15:9" pos:end="15:49"><call pos:start="15:9" pos:end="15:49"><name pos:start="15:9" pos:end="15:17">VMW_CFPRN</name><argument_list pos:start="15:18" pos:end="15:49">(<argument pos:start="15:19" pos:end="15:43"><expr pos:start="15:19" pos:end="15:43"><literal type="string" pos:start="15:19" pos:end="15:36">"Device active: %"</literal> <name pos:start="15:38" pos:end="15:43">PRIx64</name></expr></argument>, <argument pos:start="15:46" pos:end="15:48"><expr pos:start="15:46" pos:end="15:48"><name pos:start="15:46" pos:end="15:48">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="17:9" pos:end="17:14">break;</break>



    <case pos:start="21:5" pos:end="21:31">case <expr pos:start="21:10" pos:end="21:30"><name pos:start="21:10" pos:end="21:30">VMXNET3_CMD_RESET_DEV</name></expr>:</case>

    <case pos:start="23:5" pos:end="23:33">case <expr pos:start="23:10" pos:end="23:32"><name pos:start="23:10" pos:end="23:32">VMXNET3_CMD_QUIESCE_DEV</name></expr>:</case>

    <case pos:start="25:5" pos:end="25:38">case <expr pos:start="25:10" pos:end="25:37"><name pos:start="25:10" pos:end="25:37">VMXNET3_CMD_GET_QUEUE_STATUS</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:16"><expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>



    <case pos:start="33:5" pos:end="33:30">case <expr pos:start="33:10" pos:end="33:29"><name pos:start="33:10" pos:end="33:29">VMXNET3_CMD_GET_LINK</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:39"><expr pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:38"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:38">link_status_and_speed</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:51"><expr pos:start="37:9" pos:end="37:50"><call pos:start="37:9" pos:end="37:50"><name pos:start="37:9" pos:end="37:17">VMW_CFPRN</name><argument_list pos:start="37:18" pos:end="37:50">(<argument pos:start="37:19" pos:end="37:44"><expr pos:start="37:19" pos:end="37:44"><literal type="string" pos:start="37:19" pos:end="37:37">"Link and speed: %"</literal> <name pos:start="37:39" pos:end="37:44">PRIx64</name></expr></argument>, <argument pos:start="37:47" pos:end="37:49"><expr pos:start="37:47" pos:end="37:49"><name pos:start="37:47" pos:end="37:49">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>



    <case pos:start="43:5" pos:end="43:37">case <expr pos:start="43:10" pos:end="43:36"><name pos:start="43:10" pos:end="43:36">VMXNET3_CMD_GET_PERM_MAC_LO</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:48"><expr pos:start="45:9" pos:end="45:47"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:47"><name pos:start="45:15" pos:end="45:33">vmxnet3_get_mac_low</name><argument_list pos:start="45:34" pos:end="45:47">(<argument pos:start="45:35" pos:end="45:46"><expr pos:start="45:35" pos:end="45:46"><operator pos:start="45:35" pos:end="45:35">&amp;</operator><name pos:start="45:36" pos:end="45:46"><name pos:start="45:36" pos:end="45:36">s</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:46">perm_mac</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>



    <case pos:start="51:5" pos:end="51:37">case <expr pos:start="51:10" pos:end="51:36"><name pos:start="51:10" pos:end="51:36">VMXNET3_CMD_GET_PERM_MAC_HI</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:49"><expr pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:48"><name pos:start="53:15" pos:end="53:34">vmxnet3_get_mac_high</name><argument_list pos:start="53:35" pos:end="53:48">(<argument pos:start="53:36" pos:end="53:47"><expr pos:start="53:36" pos:end="53:47"><operator pos:start="53:36" pos:end="53:36">&amp;</operator><name pos:start="53:37" pos:end="53:47"><name pos:start="53:37" pos:end="53:37">s</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:47">perm_mac</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>



    <case pos:start="59:5" pos:end="59:35">case <expr pos:start="59:10" pos:end="59:34"><name pos:start="59:10" pos:end="59:34">VMXNET3_CMD_GET_CONF_INTR</name></expr>:</case>

        <expr_stmt pos:start="61:9" pos:end="61:46"><expr pos:start="61:9" pos:end="61:45"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="61:45"><name pos:start="61:15" pos:end="61:42">vmxnet3_get_interrupt_config</name><argument_list pos:start="61:43" pos:end="61:45">(<argument pos:start="61:44" pos:end="61:44"><expr pos:start="61:44" pos:end="61:44"><name pos:start="61:44" pos:end="61:44">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>



    <case pos:start="67:5" pos:end="67:44">case <expr pos:start="67:10" pos:end="67:43"><name pos:start="67:10" pos:end="67:43">VMXNET3_CMD_GET_ADAPTIVE_RING_INFO</name></expr>:</case>

        <expr_stmt pos:start="69:9" pos:end="69:44"><expr pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <name pos:start="69:15" pos:end="69:43">VMXNET3_DISABLE_ADAPTIVE_RING</name></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>



    <default pos:start="75:5" pos:end="75:12">default:</default>

        <expr_stmt pos:start="77:9" pos:end="77:79"><expr pos:start="77:9" pos:end="77:78"><call pos:start="77:9" pos:end="77:78"><name pos:start="77:9" pos:end="77:17">VMW_WRPRN</name><argument_list pos:start="77:18" pos:end="77:78">(<argument pos:start="77:19" pos:end="77:60"><expr pos:start="77:19" pos:end="77:60"><literal type="string" pos:start="77:19" pos:end="77:60">"Received request for unknown command: %x"</literal></expr></argument>, <argument pos:start="77:63" pos:end="77:77"><expr pos:start="77:63" pos:end="77:77"><name pos:start="77:63" pos:end="77:77"><name pos:start="77:63" pos:end="77:63">s</name><operator pos:start="77:64" pos:end="77:65">-&gt;</operator><name pos:start="77:66" pos:end="77:77">last_command</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:17"><expr pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <operator pos:start="79:15" pos:end="79:15">-</operator><literal type="number" pos:start="79:16" pos:end="79:16">1</literal></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="87:5" pos:end="87:15">return <expr pos:start="87:12" pos:end="87:14"><name pos:start="87:12" pos:end="87:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
