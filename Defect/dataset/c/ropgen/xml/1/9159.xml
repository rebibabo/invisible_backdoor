<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9159.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:31">monitor_read_bdrv_key_start</name><parameter_list pos:start="1:32" pos:end="5:45">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:39">Monitor</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">mon</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:66"><decl pos:start="1:47" pos:end="1:66"><type pos:start="1:47" pos:end="1:66"><name pos:start="1:47" pos:end="1:62">BlockDriverState</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:66">bs</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:66"><decl pos:start="3:33" pos:end="3:66"><type pos:start="3:33" pos:end="3:66"><name pos:start="3:33" pos:end="3:51">BlockCompletionFunc</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:66">completion_cb</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:44"><decl pos:start="5:33" pos:end="5:44"><type pos:start="5:33" pos:end="5:44"><name pos:start="5:33" pos:end="5:36">void</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:44">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="69:1">{<block_content pos:start="9:5" pos:end="67:15">

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">err</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><call pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:16">bdrv_add_key</name><argument_list pos:start="15:17" pos:end="15:38">(<argument pos:start="15:18" pos:end="15:19"><expr pos:start="15:18" pos:end="15:19"><name pos:start="15:18" pos:end="15:19">bs</name></expr></argument>, <argument pos:start="15:22" pos:end="15:25"><expr pos:start="15:22" pos:end="15:25"><name pos:start="15:22" pos:end="15:25">NULL</name></expr></argument>, <argument pos:start="15:28" pos:end="15:37"><expr pos:start="15:28" pos:end="15:37"><operator pos:start="15:28" pos:end="15:28">&amp;</operator><name pos:start="15:29" pos:end="15:37">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:19">(<expr pos:start="17:9" pos:end="17:18"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:18">local_err</name></expr>)</condition> <block pos:start="17:21" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:17">

        <if_stmt pos:start="19:9" pos:end="21:37"><if pos:start="19:9" pos:end="21:37">if <condition pos:start="19:12" pos:end="19:26">(<expr pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:25">completion_cb</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:37"><block_content pos:start="21:13" pos:end="21:37">

            <expr_stmt pos:start="21:13" pos:end="21:37"><expr pos:start="21:13" pos:end="21:36"><call pos:start="21:13" pos:end="21:36"><name pos:start="21:13" pos:end="21:25">completion_cb</name><argument_list pos:start="21:26" pos:end="21:36">(<argument pos:start="21:27" pos:end="21:32"><expr pos:start="21:27" pos:end="21:32"><name pos:start="21:27" pos:end="21:32">opaque</name></expr></argument>, <argument pos:start="21:35" pos:end="21:35"><expr pos:start="21:35" pos:end="21:35"><literal type="number" pos:start="21:35" pos:end="21:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:28">/* Need a key for @bs */</comment>



    <if_stmt pos:start="33:5" pos:end="40:5"><if pos:start="33:5" pos:end="40:5">if <condition pos:start="33:8" pos:end="33:31">(<expr pos:start="33:9" pos:end="33:30"><call pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:25">monitor_ctrl_mode</name><argument_list pos:start="33:26" pos:end="33:30">(<argument pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:29">mon</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:33" pos:end="40:5">{<block_content pos:start="35:9" pos:end="38:18">

        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><call pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:25">qerror_report_err</name><argument_list pos:start="35:26" pos:end="35:36">(<argument pos:start="35:27" pos:end="35:35"><expr pos:start="35:27" pos:end="35:35"><name pos:start="35:27" pos:end="35:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <return pos:start="38:9" pos:end="38:18">return <expr pos:start="38:16" pos:end="38:17"><operator pos:start="38:16" pos:end="38:16">-</operator><literal type="number" pos:start="38:17" pos:end="38:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>




    <expr_stmt pos:start="45:5" pos:end="47:52"><expr pos:start="45:5" pos:end="47:51"><call pos:start="45:5" pos:end="47:51"><name pos:start="45:5" pos:end="45:18">monitor_printf</name><argument_list pos:start="45:19" pos:end="47:51">(<argument pos:start="45:20" pos:end="45:22"><expr pos:start="45:20" pos:end="45:22"><name pos:start="45:20" pos:end="45:22">mon</name></expr></argument>, <argument pos:start="45:25" pos:end="45:49"><expr pos:start="45:25" pos:end="45:49"><literal type="string" pos:start="45:25" pos:end="45:49">"%s (%s) is encrypted.\n"</literal></expr></argument>, <argument pos:start="45:52" pos:end="45:75"><expr pos:start="45:52" pos:end="45:75"><call pos:start="45:52" pos:end="45:75"><name pos:start="45:52" pos:end="45:71">bdrv_get_device_name</name><argument_list pos:start="45:72" pos:end="45:75">(<argument pos:start="45:73" pos:end="45:74"><expr pos:start="45:73" pos:end="45:74"><name pos:start="45:73" pos:end="45:74">bs</name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="47:20" pos:end="47:50"><expr pos:start="47:20" pos:end="47:50"><call pos:start="47:20" pos:end="47:50"><name pos:start="47:20" pos:end="47:46">bdrv_get_encrypted_filename</name><argument_list pos:start="47:47" pos:end="47:50">(<argument pos:start="47:48" pos:end="47:49"><expr pos:start="47:48" pos:end="47:49"><name pos:start="47:48" pos:end="47:49">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:48"><expr pos:start="51:5" pos:end="51:47"><name pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:7">mon</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:31">password_completion_cb</name></name> <operator pos:start="51:33" pos:end="51:33">=</operator> <name pos:start="51:35" pos:end="51:47">completion_cb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:34"><expr pos:start="53:5" pos:end="53:33"><name pos:start="53:5" pos:end="53:24"><name pos:start="53:5" pos:end="53:7">mon</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:24">password_opaque</name></name> <operator pos:start="53:26" pos:end="53:26">=</operator> <name pos:start="53:28" pos:end="53:33">opaque</name></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:59"><expr pos:start="57:5" pos:end="57:58"><name pos:start="57:5" pos:end="57:7">err</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="57:58"><name pos:start="57:11" pos:end="57:31">monitor_read_password</name><argument_list pos:start="57:32" pos:end="57:58">(<argument pos:start="57:33" pos:end="57:35"><expr pos:start="57:33" pos:end="57:35"><name pos:start="57:33" pos:end="57:35">mon</name></expr></argument>, <argument pos:start="57:38" pos:end="57:53"><expr pos:start="57:38" pos:end="57:53"><name pos:start="57:38" pos:end="57:53">bdrv_password_cb</name></expr></argument>, <argument pos:start="57:56" pos:end="57:57"><expr pos:start="57:56" pos:end="57:57"><name pos:start="57:56" pos:end="57:57">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="63:35"><if pos:start="61:5" pos:end="63:35">if <condition pos:start="61:8" pos:end="61:29">(<expr pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:11">err</name> <operator pos:start="61:13" pos:end="61:14">&amp;&amp;</operator> <name pos:start="61:16" pos:end="61:28">completion_cb</name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:35"><block_content pos:start="63:9" pos:end="63:35">

        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><call pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:21">completion_cb</name><argument_list pos:start="63:22" pos:end="63:34">(<argument pos:start="63:23" pos:end="63:28"><expr pos:start="63:23" pos:end="63:28"><name pos:start="63:23" pos:end="63:28">opaque</name></expr></argument>, <argument pos:start="63:31" pos:end="63:33"><expr pos:start="63:31" pos:end="63:33"><name pos:start="63:31" pos:end="63:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="67:5" pos:end="67:15">return <expr pos:start="67:12" pos:end="67:14"><name pos:start="67:12" pos:end="67:14">err</name></expr>;</return>

</block_content>}</block></function></unit>
