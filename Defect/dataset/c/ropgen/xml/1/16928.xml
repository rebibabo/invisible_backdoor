<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16928.c" pos:tabs="8"><function pos:start="1:1" pos:end="335:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:36">ff_h264_decode_seq_parameter_set</name><parameter_list pos:start="1:37" pos:end="1:52">(<parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:48">H264Context</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">h</name></decl></parameter>)</parameter_list><block pos:start="1:53" pos:end="335:1">{<block_content pos:start="3:5" pos:end="333:14">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:57"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:19">profile_idc</name></decl>, <decl pos:start="5:22" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:30">level_idc</name></decl>, <decl pos:start="5:33" pos:end="5:56"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:33" pos:end="5:52">constraint_set_flags</name> <init pos:start="5:54" pos:end="5:56">= <expr pos:start="5:56" pos:end="5:56"><literal type="number" pos:start="5:56" pos:end="5:56">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:23">sps_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:36">log2_max_frame_num_minus4</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:7">SPS</name> <modifier pos:start="11:9" pos:end="11:9">*</modifier></type><name pos:start="11:10" pos:end="11:12">sps</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:15">profile_idc</name><operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:36"><name pos:start="15:18" pos:end="15:25">get_bits</name><argument_list pos:start="15:26" pos:end="15:36">(<argument pos:start="15:27" pos:end="15:32"><expr pos:start="15:27" pos:end="15:32"><operator pos:start="15:27" pos:end="15:27">&amp;</operator><name pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:32">gb</name></name></expr></argument>, <argument pos:start="15:35" pos:end="15:35"><expr pos:start="15:35" pos:end="15:35"><literal type="number" pos:start="15:35" pos:end="15:35">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:51"><expr pos:start="17:5" pos:end="17:50"><name pos:start="17:5" pos:end="17:24">constraint_set_flags</name> <operator pos:start="17:26" pos:end="17:27">|=</operator> <call pos:start="17:29" pos:end="17:45"><name pos:start="17:29" pos:end="17:37">get_bits1</name><argument_list pos:start="17:38" pos:end="17:45">(<argument pos:start="17:39" pos:end="17:44"><expr pos:start="17:39" pos:end="17:44"><operator pos:start="17:39" pos:end="17:39">&amp;</operator><name pos:start="17:40" pos:end="17:44"><name pos:start="17:40" pos:end="17:40">s</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:44">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:47" pos:end="17:48">&lt;&lt;</operator> <literal type="number" pos:start="17:50" pos:end="17:50">0</literal></expr>;</expr_stmt>   <comment type="line" pos:start="17:55" pos:end="17:76">//constraint_set0_flag</comment>

    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:24">constraint_set_flags</name> <operator pos:start="19:26" pos:end="19:27">|=</operator> <call pos:start="19:29" pos:end="19:45"><name pos:start="19:29" pos:end="19:37">get_bits1</name><argument_list pos:start="19:38" pos:end="19:45">(<argument pos:start="19:39" pos:end="19:44"><expr pos:start="19:39" pos:end="19:44"><operator pos:start="19:39" pos:end="19:39">&amp;</operator><name pos:start="19:40" pos:end="19:44"><name pos:start="19:40" pos:end="19:40">s</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:44">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:47" pos:end="19:48">&lt;&lt;</operator> <literal type="number" pos:start="19:50" pos:end="19:50">1</literal></expr>;</expr_stmt>   <comment type="line" pos:start="19:55" pos:end="19:76">//constraint_set1_flag</comment>

    <expr_stmt pos:start="21:5" pos:end="21:51"><expr pos:start="21:5" pos:end="21:50"><name pos:start="21:5" pos:end="21:24">constraint_set_flags</name> <operator pos:start="21:26" pos:end="21:27">|=</operator> <call pos:start="21:29" pos:end="21:45"><name pos:start="21:29" pos:end="21:37">get_bits1</name><argument_list pos:start="21:38" pos:end="21:45">(<argument pos:start="21:39" pos:end="21:44"><expr pos:start="21:39" pos:end="21:44"><operator pos:start="21:39" pos:end="21:39">&amp;</operator><name pos:start="21:40" pos:end="21:44"><name pos:start="21:40" pos:end="21:40">s</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:44">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:47" pos:end="21:48">&lt;&lt;</operator> <literal type="number" pos:start="21:50" pos:end="21:50">2</literal></expr>;</expr_stmt>   <comment type="line" pos:start="21:55" pos:end="21:76">//constraint_set2_flag</comment>

    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:24">constraint_set_flags</name> <operator pos:start="23:26" pos:end="23:27">|=</operator> <call pos:start="23:29" pos:end="23:45"><name pos:start="23:29" pos:end="23:37">get_bits1</name><argument_list pos:start="23:38" pos:end="23:45">(<argument pos:start="23:39" pos:end="23:44"><expr pos:start="23:39" pos:end="23:44"><operator pos:start="23:39" pos:end="23:39">&amp;</operator><name pos:start="23:40" pos:end="23:44"><name pos:start="23:40" pos:end="23:40">s</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:44">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:47" pos:end="23:48">&lt;&lt;</operator> <literal type="number" pos:start="23:50" pos:end="23:50">3</literal></expr>;</expr_stmt>   <comment type="line" pos:start="23:55" pos:end="23:76">//constraint_set3_flag</comment>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><call pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:12">get_bits</name><argument_list pos:start="25:13" pos:end="25:23">(<argument pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:19"><operator pos:start="25:14" pos:end="25:14">&amp;</operator><name pos:start="25:15" pos:end="25:19"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:19">gb</name></name></expr></argument>, <argument pos:start="25:22" pos:end="25:22"><expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="25:26" pos:end="25:36">// reserved</comment>

    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:13">level_idc</name><operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:23">get_bits</name><argument_list pos:start="27:24" pos:end="27:34">(<argument pos:start="27:25" pos:end="27:30"><expr pos:start="27:25" pos:end="27:30"><operator pos:start="27:25" pos:end="27:25">&amp;</operator><name pos:start="27:26" pos:end="27:30"><name pos:start="27:26" pos:end="27:26">s</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:30">gb</name></name></expr></argument>, <argument pos:start="27:33" pos:end="27:33"><expr pos:start="27:33" pos:end="27:33"><literal type="number" pos:start="27:33" pos:end="27:33">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:37"><expr pos:start="29:5" pos:end="29:36"><name pos:start="29:5" pos:end="29:10">sps_id</name><operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:36"><name pos:start="29:13" pos:end="29:28">get_ue_golomb_31</name><argument_list pos:start="29:29" pos:end="29:36">(<argument pos:start="29:30" pos:end="29:35"><expr pos:start="29:30" pos:end="29:35"><operator pos:start="29:30" pos:end="29:30">&amp;</operator><name pos:start="29:31" pos:end="29:35"><name pos:start="29:31" pos:end="29:31">s</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if<condition pos:start="33:7" pos:end="33:31">(<expr pos:start="33:8" pos:end="33:30"><name pos:start="33:8" pos:end="33:13">sps_id</name> <operator pos:start="33:15" pos:end="33:16">&gt;=</operator> <name pos:start="33:18" pos:end="33:30">MAX_SPS_COUNT</name></expr>)</condition> <block pos:start="33:33" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:79"><expr pos:start="35:9" pos:end="35:78"><call pos:start="35:9" pos:end="35:78"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:78">(<argument pos:start="35:16" pos:end="35:25"><expr pos:start="35:16" pos:end="35:25"><name pos:start="35:16" pos:end="35:25"><name pos:start="35:16" pos:end="35:16">h</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:19">s</name><operator pos:start="35:20" pos:end="35:20">.</operator><name pos:start="35:21" pos:end="35:25">avctx</name></name></expr></argument>, <argument pos:start="35:28" pos:end="35:39"><expr pos:start="35:28" pos:end="35:39"><name pos:start="35:28" pos:end="35:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:42" pos:end="35:69"><expr pos:start="35:42" pos:end="35:69"><literal type="string" pos:start="35:42" pos:end="35:69">"sps_id (%d) out of range\n"</literal></expr></argument>, <argument pos:start="35:72" pos:end="35:77"><expr pos:start="35:72" pos:end="35:77"><name pos:start="35:72" pos:end="35:77">sps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:7">sps</name><operator pos:start="41:8" pos:end="41:8">=</operator> <call pos:start="41:10" pos:end="41:32"><name pos:start="41:10" pos:end="41:19">av_mallocz</name><argument_list pos:start="41:20" pos:end="41:32">(<argument pos:start="41:21" pos:end="41:31"><expr pos:start="41:21" pos:end="41:31"><sizeof pos:start="41:21" pos:end="41:31">sizeof<argument_list pos:start="41:27" pos:end="41:31">(<argument pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:30">SPS</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:18"><if pos:start="43:5" pos:end="45:18">if<condition pos:start="43:7" pos:end="43:19">(<expr pos:start="43:8" pos:end="43:18"><name pos:start="43:8" pos:end="43:10">sps</name> <operator pos:start="43:12" pos:end="43:13">==</operator> <name pos:start="43:15" pos:end="43:18">NULL</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:18"><block_content pos:start="45:9" pos:end="45:18">

        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><operator pos:start="45:16" pos:end="45:16">-</operator><literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:27"><name pos:start="49:5" pos:end="49:7">sps</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:27">time_offset_length</name></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <literal type="number" pos:start="49:31" pos:end="49:32">24</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:34"><expr pos:start="51:5" pos:end="51:33"><name pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:7">sps</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:20">profile_idc</name></name><operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:33">profile_idc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:53"><expr pos:start="53:5" pos:end="53:52"><name pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:7">sps</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:29">constraint_set_flags</name></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <name pos:start="53:33" pos:end="53:52">constraint_set_flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:30"><expr pos:start="55:5" pos:end="55:29"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:7">sps</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:18">level_idc</name></name><operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:29">level_idc</name></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:67"><expr pos:start="59:5" pos:end="59:66"><call pos:start="59:5" pos:end="59:66"><name pos:start="59:5" pos:end="59:10">memset</name><argument_list pos:start="59:11" pos:end="59:66">(<argument pos:start="59:12" pos:end="59:31"><expr pos:start="59:12" pos:end="59:31"><name pos:start="59:12" pos:end="59:31"><name pos:start="59:12" pos:end="59:14">sps</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:31">scaling_matrix4</name></name></expr></argument>, <argument pos:start="59:34" pos:end="59:35"><expr pos:start="59:34" pos:end="59:35"><literal type="number" pos:start="59:34" pos:end="59:35">16</literal></expr></argument>, <argument pos:start="59:38" pos:end="59:65"><expr pos:start="59:38" pos:end="59:65"><sizeof pos:start="59:38" pos:end="59:65">sizeof<argument_list pos:start="59:44" pos:end="59:65">(<argument pos:start="59:45" pos:end="59:64"><expr pos:start="59:45" pos:end="59:64"><name pos:start="59:45" pos:end="59:64"><name pos:start="59:45" pos:end="59:47">sps</name><operator pos:start="59:48" pos:end="59:49">-&gt;</operator><name pos:start="59:50" pos:end="59:64">scaling_matrix4</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:67"><expr pos:start="61:5" pos:end="61:66"><call pos:start="61:5" pos:end="61:66"><name pos:start="61:5" pos:end="61:10">memset</name><argument_list pos:start="61:11" pos:end="61:66">(<argument pos:start="61:12" pos:end="61:31"><expr pos:start="61:12" pos:end="61:31"><name pos:start="61:12" pos:end="61:31"><name pos:start="61:12" pos:end="61:14">sps</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:31">scaling_matrix8</name></name></expr></argument>, <argument pos:start="61:34" pos:end="61:35"><expr pos:start="61:34" pos:end="61:35"><literal type="number" pos:start="61:34" pos:end="61:35">16</literal></expr></argument>, <argument pos:start="61:38" pos:end="61:65"><expr pos:start="61:38" pos:end="61:65"><sizeof pos:start="61:38" pos:end="61:65">sizeof<argument_list pos:start="61:44" pos:end="61:65">(<argument pos:start="61:45" pos:end="61:64"><expr pos:start="61:45" pos:end="61:64"><name pos:start="61:45" pos:end="61:64"><name pos:start="61:45" pos:end="61:47">sps</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:64">scaling_matrix8</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:36"><expr pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:7">sps</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:31">scaling_matrix_present</name></name> <operator pos:start="63:33" pos:end="63:33">=</operator> <literal type="number" pos:start="63:35" pos:end="63:35">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="99:5"><if pos:start="67:5" pos:end="91:5">if<condition pos:start="67:7" pos:end="67:31">(<expr pos:start="67:8" pos:end="67:30"><name pos:start="67:8" pos:end="67:23"><name pos:start="67:8" pos:end="67:10">sps</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:23">profile_idc</name></name> <operator pos:start="67:25" pos:end="67:26">&gt;=</operator> <literal type="number" pos:start="67:28" pos:end="67:30">100</literal></expr>)</condition><block pos:start="67:32" pos:end="91:5">{<block_content pos:start="69:9" pos:end="89:93"> <comment type="line" pos:start="67:34" pos:end="67:47">//high profile</comment>

        <expr_stmt pos:start="69:9" pos:end="69:57"><expr pos:start="69:9" pos:end="69:56"><name pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:11">sps</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:30">chroma_format_idc</name></name><operator pos:start="69:31" pos:end="69:31">=</operator> <call pos:start="69:33" pos:end="69:56"><name pos:start="69:33" pos:end="69:48">get_ue_golomb_31</name><argument_list pos:start="69:49" pos:end="69:56">(<argument pos:start="69:50" pos:end="69:55"><expr pos:start="69:50" pos:end="69:55"><operator pos:start="69:50" pos:end="69:50">&amp;</operator><name pos:start="69:51" pos:end="69:55"><name pos:start="69:51" pos:end="69:51">s</name><operator pos:start="69:52" pos:end="69:53">-&gt;</operator><name pos:start="69:54" pos:end="69:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="81:9"><if pos:start="71:9" pos:end="77:9">if<condition pos:start="71:11" pos:end="71:38">(<expr pos:start="71:12" pos:end="71:37"><name pos:start="71:12" pos:end="71:33"><name pos:start="71:12" pos:end="71:14">sps</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:33">chroma_format_idc</name></name> <operator pos:start="71:35" pos:end="71:35">&gt;</operator> <literal type="number" pos:start="71:37" pos:end="71:37">3</literal></expr>)</condition> <block pos:start="71:40" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:22">

            <expr_stmt pos:start="73:13" pos:end="73:110"><expr pos:start="73:13" pos:end="73:109"><call pos:start="73:13" pos:end="73:109"><name pos:start="73:13" pos:end="73:18">av_log</name><argument_list pos:start="73:19" pos:end="73:109">(<argument pos:start="73:20" pos:end="73:29"><expr pos:start="73:20" pos:end="73:29"><name pos:start="73:20" pos:end="73:29"><name pos:start="73:20" pos:end="73:20">h</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:23">s</name><operator pos:start="73:24" pos:end="73:24">.</operator><name pos:start="73:25" pos:end="73:29">avctx</name></name></expr></argument>, <argument pos:start="73:32" pos:end="73:43"><expr pos:start="73:32" pos:end="73:43"><name pos:start="73:32" pos:end="73:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:46" pos:end="73:84"><expr pos:start="73:46" pos:end="73:84"><literal type="string" pos:start="73:46" pos:end="73:84">"chroma_format_idc (%u) out of range\n"</literal></expr></argument>, <argument pos:start="73:87" pos:end="73:108"><expr pos:start="73:87" pos:end="73:108"><name pos:start="73:87" pos:end="73:108"><name pos:start="73:87" pos:end="73:89">sps</name><operator pos:start="73:90" pos:end="73:91">-&gt;</operator><name pos:start="73:92" pos:end="73:108">chroma_format_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="75:13" pos:end="75:22">goto <name pos:start="75:18" pos:end="75:21">fail</name>;</goto>

        </block_content>}</block></if> <if type="elseif" pos:start="77:11" pos:end="81:9">else if<condition pos:start="77:18" pos:end="77:46">(<expr pos:start="77:19" pos:end="77:45"><name pos:start="77:19" pos:end="77:40"><name pos:start="77:19" pos:end="77:21">sps</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:40">chroma_format_idc</name></name> <operator pos:start="77:42" pos:end="77:43">==</operator> <literal type="number" pos:start="77:45" pos:end="77:45">3</literal></expr>)</condition> <block pos:start="77:48" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:67">

            <expr_stmt pos:start="79:13" pos:end="79:67"><expr pos:start="79:13" pos:end="79:66"><name pos:start="79:13" pos:end="79:46"><name pos:start="79:13" pos:end="79:15">sps</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:46">residual_color_transform_flag</name></name> <operator pos:start="79:48" pos:end="79:48">=</operator> <call pos:start="79:50" pos:end="79:66"><name pos:start="79:50" pos:end="79:58">get_bits1</name><argument_list pos:start="79:59" pos:end="79:66">(<argument pos:start="79:60" pos:end="79:65"><expr pos:start="79:60" pos:end="79:65"><operator pos:start="79:60" pos:end="79:60">&amp;</operator><name pos:start="79:61" pos:end="79:65"><name pos:start="79:61" pos:end="79:61">s</name><operator pos:start="79:62" pos:end="79:63">-&gt;</operator><name pos:start="79:64" pos:end="79:65">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:58"><expr pos:start="83:9" pos:end="83:57"><name pos:start="83:9" pos:end="83:27"><name pos:start="83:9" pos:end="83:11">sps</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:27">bit_depth_luma</name></name>   <operator pos:start="83:31" pos:end="83:31">=</operator> <call pos:start="83:33" pos:end="83:53"><name pos:start="83:33" pos:end="83:45">get_ue_golomb</name><argument_list pos:start="83:46" pos:end="83:53">(<argument pos:start="83:47" pos:end="83:52"><expr pos:start="83:47" pos:end="83:52"><operator pos:start="83:47" pos:end="83:47">&amp;</operator><name pos:start="83:48" pos:end="83:52"><name pos:start="83:48" pos:end="83:48">s</name><operator pos:start="83:49" pos:end="83:50">-&gt;</operator><name pos:start="83:51" pos:end="83:52">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="83:55" pos:end="83:55">+</operator> <literal type="number" pos:start="83:57" pos:end="83:57">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:58"><expr pos:start="85:9" pos:end="85:57"><name pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:11">sps</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:29">bit_depth_chroma</name></name> <operator pos:start="85:31" pos:end="85:31">=</operator> <call pos:start="85:33" pos:end="85:53"><name pos:start="85:33" pos:end="85:45">get_ue_golomb</name><argument_list pos:start="85:46" pos:end="85:53">(<argument pos:start="85:47" pos:end="85:52"><expr pos:start="85:47" pos:end="85:52"><operator pos:start="85:47" pos:end="85:47">&amp;</operator><name pos:start="85:48" pos:end="85:52"><name pos:start="85:48" pos:end="85:48">s</name><operator pos:start="85:49" pos:end="85:50">-&gt;</operator><name pos:start="85:51" pos:end="85:52">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="85:55" pos:end="85:55">+</operator> <literal type="number" pos:start="85:57" pos:end="85:57">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:50"><expr pos:start="87:9" pos:end="87:49"><name pos:start="87:9" pos:end="87:29"><name pos:start="87:9" pos:end="87:11">sps</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:29">transform_bypass</name></name> <operator pos:start="87:31" pos:end="87:31">=</operator> <call pos:start="87:33" pos:end="87:49"><name pos:start="87:33" pos:end="87:41">get_bits1</name><argument_list pos:start="87:42" pos:end="87:49">(<argument pos:start="87:43" pos:end="87:48"><expr pos:start="87:43" pos:end="87:48"><operator pos:start="87:43" pos:end="87:43">&amp;</operator><name pos:start="87:44" pos:end="87:48"><name pos:start="87:44" pos:end="87:44">s</name><operator pos:start="87:45" pos:end="87:46">-&gt;</operator><name pos:start="87:47" pos:end="87:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:93"><expr pos:start="89:9" pos:end="89:92"><call pos:start="89:9" pos:end="89:92"><name pos:start="89:9" pos:end="89:31">decode_scaling_matrices</name><argument_list pos:start="89:32" pos:end="89:92">(<argument pos:start="89:33" pos:end="89:33"><expr pos:start="89:33" pos:end="89:33"><name pos:start="89:33" pos:end="89:33">h</name></expr></argument>, <argument pos:start="89:36" pos:end="89:38"><expr pos:start="89:36" pos:end="89:38"><name pos:start="89:36" pos:end="89:38">sps</name></expr></argument>, <argument pos:start="89:41" pos:end="89:44"><expr pos:start="89:41" pos:end="89:44"><name pos:start="89:41" pos:end="89:44">NULL</name></expr></argument>, <argument pos:start="89:47" pos:end="89:47"><expr pos:start="89:47" pos:end="89:47"><literal type="number" pos:start="89:47" pos:end="89:47">1</literal></expr></argument>, <argument pos:start="89:50" pos:end="89:69"><expr pos:start="89:50" pos:end="89:69"><name pos:start="89:50" pos:end="89:69"><name pos:start="89:50" pos:end="89:52">sps</name><operator pos:start="89:53" pos:end="89:54">-&gt;</operator><name pos:start="89:55" pos:end="89:69">scaling_matrix4</name></name></expr></argument>, <argument pos:start="89:72" pos:end="89:91"><expr pos:start="89:72" pos:end="89:91"><name pos:start="89:72" pos:end="89:91"><name pos:start="89:72" pos:end="89:74">sps</name><operator pos:start="89:75" pos:end="89:76">-&gt;</operator><name pos:start="89:77" pos:end="89:91">scaling_matrix8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="91:6" pos:end="99:5">else<block pos:start="91:10" pos:end="99:5">{<block_content pos:start="93:9" pos:end="97:34">

        <expr_stmt pos:start="93:9" pos:end="93:34"><expr pos:start="93:9" pos:end="93:33"><name pos:start="93:9" pos:end="93:30"><name pos:start="93:9" pos:end="93:11">sps</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:30">chroma_format_idc</name></name><operator pos:start="93:31" pos:end="93:31">=</operator> <literal type="number" pos:start="93:33" pos:end="93:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:34"><expr pos:start="95:9" pos:end="95:33"><name pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:11">sps</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:27">bit_depth_luma</name></name>   <operator pos:start="95:31" pos:end="95:31">=</operator> <literal type="number" pos:start="95:33" pos:end="95:33">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:34"><expr pos:start="97:9" pos:end="97:33"><name pos:start="97:9" pos:end="97:29"><name pos:start="97:9" pos:end="97:11">sps</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:29">bit_depth_chroma</name></name> <operator pos:start="97:31" pos:end="97:31">=</operator> <literal type="number" pos:start="97:33" pos:end="97:33">8</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:54"><expr pos:start="103:5" pos:end="103:53"><name pos:start="103:5" pos:end="103:29">log2_max_frame_num_minus4</name> <operator pos:start="103:31" pos:end="103:31">=</operator> <call pos:start="103:33" pos:end="103:53"><name pos:start="103:33" pos:end="103:45">get_ue_golomb</name><argument_list pos:start="103:46" pos:end="103:53">(<argument pos:start="103:47" pos:end="103:52"><expr pos:start="103:47" pos:end="103:52"><operator pos:start="103:47" pos:end="103:47">&amp;</operator><name pos:start="103:48" pos:end="103:52"><name pos:start="103:48" pos:end="103:48">s</name><operator pos:start="103:49" pos:end="103:50">-&gt;</operator><name pos:start="103:51" pos:end="103:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="117:5"><if pos:start="105:5" pos:end="117:5">if <condition pos:start="105:8" pos:end="107:63">(<expr pos:start="105:9" pos:end="107:62"><name pos:start="105:9" pos:end="107:35"><name pos:start="105:9" pos:end="105:33">log2_max_frame_num_minus4</name> <argument_list type="generic" pos:start="105:35" pos:end="107:35">&lt; <argument pos:start="105:37" pos:end="107:33"><expr pos:start="105:37" pos:end="107:33"><name pos:start="105:37" pos:end="105:58">MIN_LOG2_MAX_FRAME_NUM</name> <operator pos:start="105:60" pos:end="105:60">-</operator> <literal type="number" pos:start="105:62" pos:end="105:62">4</literal> <operator pos:start="105:64" pos:end="105:65">||</operator>

        <name pos:start="107:9" pos:end="107:33">log2_max_frame_num_minus4</name></expr></argument> &gt;</argument_list></name> <name pos:start="107:37" pos:end="107:58">MAX_LOG2_MAX_FRAME_NUM</name> <operator pos:start="107:60" pos:end="107:60">-</operator> <literal type="number" pos:start="107:62" pos:end="107:62">4</literal></expr>)</condition> <block pos:start="107:65" pos:end="117:5">{<block_content pos:start="109:9" pos:end="115:35">

        <expr_stmt pos:start="109:9" pos:end="113:42"><expr pos:start="109:9" pos:end="113:41"><call pos:start="109:9" pos:end="113:41"><name pos:start="109:9" pos:end="109:14">av_log</name><argument_list pos:start="109:15" pos:end="113:41">(<argument pos:start="109:16" pos:end="109:25"><expr pos:start="109:16" pos:end="109:25"><name pos:start="109:16" pos:end="109:25"><name pos:start="109:16" pos:end="109:16">h</name><operator pos:start="109:17" pos:end="109:18">-&gt;</operator><name pos:start="109:19" pos:end="109:19">s</name><operator pos:start="109:20" pos:end="109:20">.</operator><name pos:start="109:21" pos:end="109:25">avctx</name></name></expr></argument>, <argument pos:start="109:28" pos:end="109:39"><expr pos:start="109:28" pos:end="109:39"><name pos:start="109:28" pos:end="109:39">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="111:16" pos:end="111:68"><expr pos:start="111:16" pos:end="111:68"><literal type="string" pos:start="111:16" pos:end="111:68">"log2_max_frame_num_minus4 out of range (0-12): %d\n"</literal></expr></argument>,

               <argument pos:start="113:16" pos:end="113:40"><expr pos:start="113:16" pos:end="113:40"><name pos:start="113:16" pos:end="113:40">log2_max_frame_num_minus4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="115:9" pos:end="115:35">return <expr pos:start="115:16" pos:end="115:34"><name pos:start="115:16" pos:end="115:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:60"><expr pos:start="119:5" pos:end="119:59"><name pos:start="119:5" pos:end="119:27"><name pos:start="119:5" pos:end="119:7">sps</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:27">log2_max_frame_num</name></name> <operator pos:start="119:29" pos:end="119:29">=</operator> <name pos:start="119:31" pos:end="119:55">log2_max_frame_num_minus4</name> <operator pos:start="119:57" pos:end="119:57">+</operator> <literal type="number" pos:start="119:59" pos:end="119:59">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:44"><expr pos:start="123:5" pos:end="123:43"><name pos:start="123:5" pos:end="123:17"><name pos:start="123:5" pos:end="123:7">sps</name><operator pos:start="123:8" pos:end="123:9">-&gt;</operator><name pos:start="123:10" pos:end="123:17">poc_type</name></name><operator pos:start="123:18" pos:end="123:18">=</operator> <call pos:start="123:20" pos:end="123:43"><name pos:start="123:20" pos:end="123:35">get_ue_golomb_31</name><argument_list pos:start="123:36" pos:end="123:43">(<argument pos:start="123:37" pos:end="123:42"><expr pos:start="123:37" pos:end="123:42"><operator pos:start="123:37" pos:end="123:37">&amp;</operator><name pos:start="123:38" pos:end="123:42"><name pos:start="123:38" pos:end="123:38">s</name><operator pos:start="123:39" pos:end="123:40">-&gt;</operator><name pos:start="123:41" pos:end="123:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="163:5"><if pos:start="127:5" pos:end="131:5">if<condition pos:start="127:7" pos:end="127:26">(<expr pos:start="127:8" pos:end="127:25"><name pos:start="127:8" pos:end="127:20"><name pos:start="127:8" pos:end="127:10">sps</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:20">poc_type</name></name> <operator pos:start="127:22" pos:end="127:23">==</operator> <literal type="number" pos:start="127:25" pos:end="127:25">0</literal></expr>)</condition><block pos:start="127:27" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:57"> <comment type="line" pos:start="127:29" pos:end="127:43">//FIXME #define</comment>

        <expr_stmt pos:start="129:9" pos:end="129:57"><expr pos:start="129:9" pos:end="129:56"><name pos:start="129:9" pos:end="129:29"><name pos:start="129:9" pos:end="129:11">sps</name><operator pos:start="129:12" pos:end="129:13">-&gt;</operator><name pos:start="129:14" pos:end="129:29">log2_max_poc_lsb</name></name><operator pos:start="129:30" pos:end="129:30">=</operator> <call pos:start="129:32" pos:end="129:52"><name pos:start="129:32" pos:end="129:44">get_ue_golomb</name><argument_list pos:start="129:45" pos:end="129:52">(<argument pos:start="129:46" pos:end="129:51"><expr pos:start="129:46" pos:end="129:51"><operator pos:start="129:46" pos:end="129:46">&amp;</operator><name pos:start="129:47" pos:end="129:51"><name pos:start="129:47" pos:end="129:47">s</name><operator pos:start="129:48" pos:end="129:49">-&gt;</operator><name pos:start="129:50" pos:end="129:51">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="129:54" pos:end="129:54">+</operator> <literal type="number" pos:start="129:56" pos:end="129:56">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="131:7" pos:end="157:5">else if<condition pos:start="131:14" pos:end="131:33">(<expr pos:start="131:15" pos:end="131:32"><name pos:start="131:15" pos:end="131:27"><name pos:start="131:15" pos:end="131:17">sps</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:27">poc_type</name></name> <operator pos:start="131:29" pos:end="131:30">==</operator> <literal type="number" pos:start="131:32" pos:end="131:32">1</literal></expr>)</condition><block pos:start="131:34" pos:end="157:5">{<block_content pos:start="133:9" pos:end="155:64"><comment type="line" pos:start="131:35" pos:end="131:49">//FIXME #define</comment>

        <expr_stmt pos:start="133:9" pos:end="133:65"><expr pos:start="133:9" pos:end="133:64"><name pos:start="133:9" pos:end="133:45"><name pos:start="133:9" pos:end="133:11">sps</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:45">delta_pic_order_always_zero_flag</name></name><operator pos:start="133:46" pos:end="133:46">=</operator> <call pos:start="133:48" pos:end="133:64"><name pos:start="133:48" pos:end="133:56">get_bits1</name><argument_list pos:start="133:57" pos:end="133:64">(<argument pos:start="133:58" pos:end="133:63"><expr pos:start="133:58" pos:end="133:63"><operator pos:start="133:58" pos:end="133:58">&amp;</operator><name pos:start="133:59" pos:end="133:63"><name pos:start="133:59" pos:end="133:59">s</name><operator pos:start="133:60" pos:end="133:61">-&gt;</operator><name pos:start="133:62" pos:end="133:63">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:59"><expr pos:start="135:9" pos:end="135:58"><name pos:start="135:9" pos:end="135:35"><name pos:start="135:9" pos:end="135:11">sps</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:35">offset_for_non_ref_pic</name></name><operator pos:start="135:36" pos:end="135:36">=</operator> <call pos:start="135:38" pos:end="135:58"><name pos:start="135:38" pos:end="135:50">get_se_golomb</name><argument_list pos:start="135:51" pos:end="135:58">(<argument pos:start="135:52" pos:end="135:57"><expr pos:start="135:52" pos:end="135:57"><operator pos:start="135:52" pos:end="135:52">&amp;</operator><name pos:start="135:53" pos:end="135:57"><name pos:start="135:53" pos:end="135:53">s</name><operator pos:start="135:54" pos:end="135:55">-&gt;</operator><name pos:start="135:56" pos:end="135:57">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:67"><expr pos:start="137:9" pos:end="137:66"><name pos:start="137:9" pos:end="137:43"><name pos:start="137:9" pos:end="137:11">sps</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:43">offset_for_top_to_bottom_field</name></name><operator pos:start="137:44" pos:end="137:44">=</operator> <call pos:start="137:46" pos:end="137:66"><name pos:start="137:46" pos:end="137:58">get_se_golomb</name><argument_list pos:start="137:59" pos:end="137:66">(<argument pos:start="137:60" pos:end="137:65"><expr pos:start="137:60" pos:end="137:65"><operator pos:start="137:60" pos:end="137:60">&amp;</operator><name pos:start="137:61" pos:end="137:65"><name pos:start="137:61" pos:end="137:61">s</name><operator pos:start="137:62" pos:end="137:63">-&gt;</operator><name pos:start="137:64" pos:end="137:65">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:69"><expr pos:start="139:9" pos:end="139:68"><name pos:start="139:9" pos:end="139:29"><name pos:start="139:9" pos:end="139:11">sps</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:29">poc_cycle_length</name></name>                <operator pos:start="139:46" pos:end="139:46">=</operator> <call pos:start="139:48" pos:end="139:68"><name pos:start="139:48" pos:end="139:60">get_ue_golomb</name><argument_list pos:start="139:61" pos:end="139:68">(<argument pos:start="139:62" pos:end="139:67"><expr pos:start="139:62" pos:end="139:67"><operator pos:start="139:62" pos:end="139:62">&amp;</operator><name pos:start="139:63" pos:end="139:67"><name pos:start="139:63" pos:end="139:63">s</name><operator pos:start="139:64" pos:end="139:65">-&gt;</operator><name pos:start="139:66" pos:end="139:67">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="143:9" pos:end="149:9"><if pos:start="143:9" pos:end="149:9">if<condition pos:start="143:11" pos:end="143:88">(<expr pos:start="143:12" pos:end="143:87"><operator pos:start="143:12" pos:end="143:12">(</operator><name pos:start="143:13" pos:end="143:20">unsigned</name><operator pos:start="143:21" pos:end="143:21">)</operator><name pos:start="143:22" pos:end="143:42"><name pos:start="143:22" pos:end="143:24">sps</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:42">poc_cycle_length</name></name> <operator pos:start="143:44" pos:end="143:45">&gt;=</operator> <call pos:start="143:47" pos:end="143:87"><name pos:start="143:47" pos:end="143:60">FF_ARRAY_ELEMS</name><argument_list pos:start="143:61" pos:end="143:87">(<argument pos:start="143:62" pos:end="143:86"><expr pos:start="143:62" pos:end="143:86"><name pos:start="143:62" pos:end="143:86"><name pos:start="143:62" pos:end="143:64">sps</name><operator pos:start="143:65" pos:end="143:66">-&gt;</operator><name pos:start="143:67" pos:end="143:86">offset_for_ref_frame</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="143:89" pos:end="149:9">{<block_content pos:start="145:13" pos:end="147:22">

            <expr_stmt pos:start="145:13" pos:end="145:102"><expr pos:start="145:13" pos:end="145:101"><call pos:start="145:13" pos:end="145:101"><name pos:start="145:13" pos:end="145:18">av_log</name><argument_list pos:start="145:19" pos:end="145:101">(<argument pos:start="145:20" pos:end="145:29"><expr pos:start="145:20" pos:end="145:29"><name pos:start="145:20" pos:end="145:29"><name pos:start="145:20" pos:end="145:20">h</name><operator pos:start="145:21" pos:end="145:22">-&gt;</operator><name pos:start="145:23" pos:end="145:23">s</name><operator pos:start="145:24" pos:end="145:24">.</operator><name pos:start="145:25" pos:end="145:29">avctx</name></name></expr></argument>, <argument pos:start="145:32" pos:end="145:43"><expr pos:start="145:32" pos:end="145:43"><name pos:start="145:32" pos:end="145:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="145:46" pos:end="145:77"><expr pos:start="145:46" pos:end="145:77"><literal type="string" pos:start="145:46" pos:end="145:77">"poc_cycle_length overflow %u\n"</literal></expr></argument>, <argument pos:start="145:80" pos:end="145:100"><expr pos:start="145:80" pos:end="145:100"><name pos:start="145:80" pos:end="145:100"><name pos:start="145:80" pos:end="145:82">sps</name><operator pos:start="145:83" pos:end="145:84">-&gt;</operator><name pos:start="145:85" pos:end="145:100">poc_cycle_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="147:13" pos:end="147:22">goto <name pos:start="147:18" pos:end="147:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <for pos:start="153:9" pos:end="155:64">for<control pos:start="153:12" pos:end="153:46">(<init pos:start="153:13" pos:end="153:16"><expr pos:start="153:13" pos:end="153:15"><name pos:start="153:13" pos:end="153:13">i</name><operator pos:start="153:14" pos:end="153:14">=</operator><literal type="number" pos:start="153:15" pos:end="153:15">0</literal></expr>;</init> <condition pos:start="153:18" pos:end="153:41"><expr pos:start="153:18" pos:end="153:40"><name pos:start="153:18" pos:end="153:18">i</name><operator pos:start="153:19" pos:end="153:19">&lt;</operator><name pos:start="153:20" pos:end="153:40"><name pos:start="153:20" pos:end="153:22">sps</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:40">poc_cycle_length</name></name></expr>;</condition> <incr pos:start="153:43" pos:end="153:45"><expr pos:start="153:43" pos:end="153:45"><name pos:start="153:43" pos:end="153:43">i</name><operator pos:start="153:44" pos:end="153:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="155:13" pos:end="155:64"><block_content pos:start="155:13" pos:end="155:64">

            <expr_stmt pos:start="155:13" pos:end="155:64"><expr pos:start="155:13" pos:end="155:63"><name pos:start="155:13" pos:end="155:40"><name pos:start="155:13" pos:end="155:15">sps</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:37">offset_for_ref_frame</name><index pos:start="155:38" pos:end="155:40">[<expr pos:start="155:39" pos:end="155:39"><name pos:start="155:39" pos:end="155:39">i</name></expr>]</index></name><operator pos:start="155:41" pos:end="155:41">=</operator> <call pos:start="155:43" pos:end="155:63"><name pos:start="155:43" pos:end="155:55">get_se_golomb</name><argument_list pos:start="155:56" pos:end="155:63">(<argument pos:start="155:57" pos:end="155:62"><expr pos:start="155:57" pos:end="155:62"><operator pos:start="155:57" pos:end="155:57">&amp;</operator><name pos:start="155:58" pos:end="155:62"><name pos:start="155:58" pos:end="155:58">s</name><operator pos:start="155:59" pos:end="155:60">-&gt;</operator><name pos:start="155:61" pos:end="155:62">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if><if type="elseif" pos:start="157:6" pos:end="163:5">else if<condition pos:start="157:13" pos:end="157:32">(<expr pos:start="157:14" pos:end="157:31"><name pos:start="157:14" pos:end="157:26"><name pos:start="157:14" pos:end="157:16">sps</name><operator pos:start="157:17" pos:end="157:18">-&gt;</operator><name pos:start="157:19" pos:end="157:26">poc_type</name></name> <operator pos:start="157:28" pos:end="157:29">!=</operator> <literal type="number" pos:start="157:31" pos:end="157:31">2</literal></expr>)</condition><block pos:start="157:33" pos:end="163:5">{<block_content pos:start="159:9" pos:end="161:18">

        <expr_stmt pos:start="159:9" pos:end="159:81"><expr pos:start="159:9" pos:end="159:80"><call pos:start="159:9" pos:end="159:80"><name pos:start="159:9" pos:end="159:14">av_log</name><argument_list pos:start="159:15" pos:end="159:80">(<argument pos:start="159:16" pos:end="159:25"><expr pos:start="159:16" pos:end="159:25"><name pos:start="159:16" pos:end="159:25"><name pos:start="159:16" pos:end="159:16">h</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:19">s</name><operator pos:start="159:20" pos:end="159:20">.</operator><name pos:start="159:21" pos:end="159:25">avctx</name></name></expr></argument>, <argument pos:start="159:28" pos:end="159:39"><expr pos:start="159:28" pos:end="159:39"><name pos:start="159:28" pos:end="159:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="159:42" pos:end="159:64"><expr pos:start="159:42" pos:end="159:64"><literal type="string" pos:start="159:42" pos:end="159:64">"illegal POC type %d\n"</literal></expr></argument>, <argument pos:start="159:67" pos:end="159:79"><expr pos:start="159:67" pos:end="159:79"><name pos:start="159:67" pos:end="159:79"><name pos:start="159:67" pos:end="159:69">sps</name><operator pos:start="159:70" pos:end="159:71">-&gt;</operator><name pos:start="159:72" pos:end="159:79">poc_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="161:9" pos:end="161:18">goto <name pos:start="161:14" pos:end="161:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:51"><expr pos:start="167:5" pos:end="167:50"><name pos:start="167:5" pos:end="167:24"><name pos:start="167:5" pos:end="167:7">sps</name><operator pos:start="167:8" pos:end="167:9">-&gt;</operator><name pos:start="167:10" pos:end="167:24">ref_frame_count</name></name><operator pos:start="167:25" pos:end="167:25">=</operator> <call pos:start="167:27" pos:end="167:50"><name pos:start="167:27" pos:end="167:42">get_ue_golomb_31</name><argument_list pos:start="167:43" pos:end="167:50">(<argument pos:start="167:44" pos:end="167:49"><expr pos:start="167:44" pos:end="167:49"><operator pos:start="167:44" pos:end="167:44">&amp;</operator><name pos:start="167:45" pos:end="167:49"><name pos:start="167:45" pos:end="167:45">s</name><operator pos:start="167:46" pos:end="167:47">-&gt;</operator><name pos:start="167:48" pos:end="167:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="169:5" pos:end="175:5"><if pos:start="169:5" pos:end="175:5">if<condition pos:start="169:7" pos:end="169:81">(<expr pos:start="169:8" pos:end="169:80"><name pos:start="169:8" pos:end="169:27"><name pos:start="169:8" pos:end="169:10">sps</name><operator pos:start="169:11" pos:end="169:12">-&gt;</operator><name pos:start="169:13" pos:end="169:27">ref_frame_count</name></name> <operator pos:start="169:29" pos:end="169:29">&gt;</operator> <name pos:start="169:31" pos:end="169:47">MAX_PICTURE_COUNT</name><operator pos:start="169:48" pos:end="169:48">-</operator><literal type="number" pos:start="169:49" pos:end="169:49">2</literal> <operator pos:start="169:51" pos:end="169:52">||</operator> <name pos:start="169:54" pos:end="169:73"><name pos:start="169:54" pos:end="169:56">sps</name><operator pos:start="169:57" pos:end="169:58">-&gt;</operator><name pos:start="169:59" pos:end="169:73">ref_frame_count</name></name> <operator pos:start="169:75" pos:end="169:76">&gt;=</operator> <literal type="number" pos:start="169:78" pos:end="169:80">32U</literal></expr>)</condition><block pos:start="169:82" pos:end="175:5">{<block_content pos:start="171:9" pos:end="173:18">

        <expr_stmt pos:start="171:9" pos:end="171:72"><expr pos:start="171:9" pos:end="171:71"><call pos:start="171:9" pos:end="171:71"><name pos:start="171:9" pos:end="171:14">av_log</name><argument_list pos:start="171:15" pos:end="171:71">(<argument pos:start="171:16" pos:end="171:25"><expr pos:start="171:16" pos:end="171:25"><name pos:start="171:16" pos:end="171:25"><name pos:start="171:16" pos:end="171:16">h</name><operator pos:start="171:17" pos:end="171:18">-&gt;</operator><name pos:start="171:19" pos:end="171:19">s</name><operator pos:start="171:20" pos:end="171:20">.</operator><name pos:start="171:21" pos:end="171:25">avctx</name></name></expr></argument>, <argument pos:start="171:28" pos:end="171:39"><expr pos:start="171:28" pos:end="171:39"><name pos:start="171:28" pos:end="171:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="171:42" pos:end="171:70"><expr pos:start="171:42" pos:end="171:70"><literal type="string" pos:start="171:42" pos:end="171:70">"too many reference frames\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="173:9" pos:end="173:18">goto <name pos:start="173:14" pos:end="173:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:59"><expr pos:start="177:5" pos:end="177:58"><name pos:start="177:5" pos:end="177:39"><name pos:start="177:5" pos:end="177:7">sps</name><operator pos:start="177:8" pos:end="177:9">-&gt;</operator><name pos:start="177:10" pos:end="177:39">gaps_in_frame_num_allowed_flag</name></name><operator pos:start="177:40" pos:end="177:40">=</operator> <call pos:start="177:42" pos:end="177:58"><name pos:start="177:42" pos:end="177:50">get_bits1</name><argument_list pos:start="177:51" pos:end="177:58">(<argument pos:start="177:52" pos:end="177:57"><expr pos:start="177:52" pos:end="177:57"><operator pos:start="177:52" pos:end="177:52">&amp;</operator><name pos:start="177:53" pos:end="177:57"><name pos:start="177:53" pos:end="177:53">s</name><operator pos:start="177:54" pos:end="177:55">-&gt;</operator><name pos:start="177:56" pos:end="177:57">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:46"><expr pos:start="179:5" pos:end="179:45"><name pos:start="179:5" pos:end="179:17"><name pos:start="179:5" pos:end="179:7">sps</name><operator pos:start="179:8" pos:end="179:9">-&gt;</operator><name pos:start="179:10" pos:end="179:17">mb_width</name></name> <operator pos:start="179:19" pos:end="179:19">=</operator> <call pos:start="179:21" pos:end="179:41"><name pos:start="179:21" pos:end="179:33">get_ue_golomb</name><argument_list pos:start="179:34" pos:end="179:41">(<argument pos:start="179:35" pos:end="179:40"><expr pos:start="179:35" pos:end="179:40"><operator pos:start="179:35" pos:end="179:35">&amp;</operator><name pos:start="179:36" pos:end="179:40"><name pos:start="179:36" pos:end="179:36">s</name><operator pos:start="179:37" pos:end="179:38">-&gt;</operator><name pos:start="179:39" pos:end="179:40">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="179:43" pos:end="179:43">+</operator> <literal type="number" pos:start="179:45" pos:end="179:45">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:46"><expr pos:start="181:5" pos:end="181:45"><name pos:start="181:5" pos:end="181:18"><name pos:start="181:5" pos:end="181:7">sps</name><operator pos:start="181:8" pos:end="181:9">-&gt;</operator><name pos:start="181:10" pos:end="181:18">mb_height</name></name><operator pos:start="181:19" pos:end="181:19">=</operator> <call pos:start="181:21" pos:end="181:41"><name pos:start="181:21" pos:end="181:33">get_ue_golomb</name><argument_list pos:start="181:34" pos:end="181:41">(<argument pos:start="181:35" pos:end="181:40"><expr pos:start="181:35" pos:end="181:40"><operator pos:start="181:35" pos:end="181:35">&amp;</operator><name pos:start="181:36" pos:end="181:40"><name pos:start="181:36" pos:end="181:36">s</name><operator pos:start="181:37" pos:end="181:38">-&gt;</operator><name pos:start="181:39" pos:end="181:40">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="181:43" pos:end="181:43">+</operator> <literal type="number" pos:start="181:45" pos:end="181:45">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="183:5" pos:end="191:5"><if pos:start="183:5" pos:end="191:5">if<condition pos:start="183:7" pos:end="185:79">(<expr pos:start="183:8" pos:end="185:78"><operator pos:start="183:8" pos:end="183:8">(</operator><name pos:start="183:9" pos:end="183:16">unsigned</name><operator pos:start="183:17" pos:end="183:17">)</operator><name pos:start="183:18" pos:end="183:30"><name pos:start="183:18" pos:end="183:20">sps</name><operator pos:start="183:21" pos:end="183:22">-&gt;</operator><name pos:start="183:23" pos:end="183:30">mb_width</name></name> <operator pos:start="183:32" pos:end="183:33">&gt;=</operator> <name pos:start="183:35" pos:end="183:41">INT_MAX</name><operator pos:start="183:42" pos:end="183:42">/</operator><literal type="number" pos:start="183:43" pos:end="183:44">16</literal> <operator pos:start="183:46" pos:end="183:47">||</operator> <operator pos:start="183:49" pos:end="183:49">(</operator><name pos:start="183:50" pos:end="183:57">unsigned</name><operator pos:start="183:58" pos:end="183:58">)</operator><name pos:start="183:59" pos:end="183:72"><name pos:start="183:59" pos:end="183:61">sps</name><operator pos:start="183:62" pos:end="183:63">-&gt;</operator><name pos:start="183:64" pos:end="183:72">mb_height</name></name> <operator pos:start="183:74" pos:end="183:75">&gt;=</operator> <name pos:start="183:77" pos:end="183:83">INT_MAX</name><operator pos:start="183:84" pos:end="183:84">/</operator><literal type="number" pos:start="183:85" pos:end="183:86">16</literal> <operator pos:start="183:88" pos:end="183:89">||</operator>

       <call pos:start="185:8" pos:end="185:78"><name pos:start="185:8" pos:end="185:26">av_image_check_size</name><argument_list pos:start="185:27" pos:end="185:78">(<argument pos:start="185:28" pos:end="185:43"><expr pos:start="185:28" pos:end="185:43"><literal type="number" pos:start="185:28" pos:end="185:29">16</literal><operator pos:start="185:30" pos:end="185:30">*</operator><name pos:start="185:31" pos:end="185:43"><name pos:start="185:31" pos:end="185:33">sps</name><operator pos:start="185:34" pos:end="185:35">-&gt;</operator><name pos:start="185:36" pos:end="185:43">mb_width</name></name></expr></argument>, <argument pos:start="185:46" pos:end="185:62"><expr pos:start="185:46" pos:end="185:62"><literal type="number" pos:start="185:46" pos:end="185:47">16</literal><operator pos:start="185:48" pos:end="185:48">*</operator><name pos:start="185:49" pos:end="185:62"><name pos:start="185:49" pos:end="185:51">sps</name><operator pos:start="185:52" pos:end="185:53">-&gt;</operator><name pos:start="185:54" pos:end="185:62">mb_height</name></name></expr></argument>, <argument pos:start="185:65" pos:end="185:65"><expr pos:start="185:65" pos:end="185:65"><literal type="number" pos:start="185:65" pos:end="185:65">0</literal></expr></argument>, <argument pos:start="185:68" pos:end="185:77"><expr pos:start="185:68" pos:end="185:77"><name pos:start="185:68" pos:end="185:77"><name pos:start="185:68" pos:end="185:68">h</name><operator pos:start="185:69" pos:end="185:70">-&gt;</operator><name pos:start="185:71" pos:end="185:71">s</name><operator pos:start="185:72" pos:end="185:72">.</operator><name pos:start="185:73" pos:end="185:77">avctx</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="185:80" pos:end="191:5">{<block_content pos:start="187:9" pos:end="189:18">

        <expr_stmt pos:start="187:9" pos:end="187:71"><expr pos:start="187:9" pos:end="187:70"><call pos:start="187:9" pos:end="187:70"><name pos:start="187:9" pos:end="187:14">av_log</name><argument_list pos:start="187:15" pos:end="187:70">(<argument pos:start="187:16" pos:end="187:25"><expr pos:start="187:16" pos:end="187:25"><name pos:start="187:16" pos:end="187:25"><name pos:start="187:16" pos:end="187:16">h</name><operator pos:start="187:17" pos:end="187:18">-&gt;</operator><name pos:start="187:19" pos:end="187:19">s</name><operator pos:start="187:20" pos:end="187:20">.</operator><name pos:start="187:21" pos:end="187:25">avctx</name></name></expr></argument>, <argument pos:start="187:28" pos:end="187:39"><expr pos:start="187:28" pos:end="187:39"><name pos:start="187:28" pos:end="187:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="187:42" pos:end="187:69"><expr pos:start="187:42" pos:end="187:69"><literal type="string" pos:start="187:42" pos:end="187:69">"mb_width/height overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="189:9" pos:end="189:18">goto <name pos:start="189:14" pos:end="189:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:48"><expr pos:start="195:5" pos:end="195:47"><name pos:start="195:5" pos:end="195:28"><name pos:start="195:5" pos:end="195:7">sps</name><operator pos:start="195:8" pos:end="195:9">-&gt;</operator><name pos:start="195:10" pos:end="195:28">frame_mbs_only_flag</name></name><operator pos:start="195:29" pos:end="195:29">=</operator> <call pos:start="195:31" pos:end="195:47"><name pos:start="195:31" pos:end="195:39">get_bits1</name><argument_list pos:start="195:40" pos:end="195:47">(<argument pos:start="195:41" pos:end="195:46"><expr pos:start="195:41" pos:end="195:46"><operator pos:start="195:41" pos:end="195:41">&amp;</operator><name pos:start="195:42" pos:end="195:46"><name pos:start="195:42" pos:end="195:42">s</name><operator pos:start="195:43" pos:end="195:44">-&gt;</operator><name pos:start="195:45" pos:end="195:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="197:5" pos:end="203:23"><if pos:start="197:5" pos:end="199:39">if<condition pos:start="197:7" pos:end="197:33">(<expr pos:start="197:8" pos:end="197:32"><operator pos:start="197:8" pos:end="197:8">!</operator><name pos:start="197:9" pos:end="197:32"><name pos:start="197:9" pos:end="197:11">sps</name><operator pos:start="197:12" pos:end="197:13">-&gt;</operator><name pos:start="197:14" pos:end="197:32">frame_mbs_only_flag</name></name></expr>)</condition><block type="pseudo" pos:start="199:9" pos:end="199:39"><block_content pos:start="199:9" pos:end="199:39">

        <expr_stmt pos:start="199:9" pos:end="199:39"><expr pos:start="199:9" pos:end="199:38"><name pos:start="199:9" pos:end="199:19"><name pos:start="199:9" pos:end="199:11">sps</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:19">mb_aff</name></name><operator pos:start="199:20" pos:end="199:20">=</operator> <call pos:start="199:22" pos:end="199:38"><name pos:start="199:22" pos:end="199:30">get_bits1</name><argument_list pos:start="199:31" pos:end="199:38">(<argument pos:start="199:32" pos:end="199:37"><expr pos:start="199:32" pos:end="199:37"><operator pos:start="199:32" pos:end="199:32">&amp;</operator><name pos:start="199:33" pos:end="199:37"><name pos:start="199:33" pos:end="199:33">s</name><operator pos:start="199:34" pos:end="199:35">-&gt;</operator><name pos:start="199:36" pos:end="199:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="201:5" pos:end="203:23">else<block type="pseudo" pos:start="203:9" pos:end="203:23"><block_content pos:start="203:9" pos:end="203:23">

        <expr_stmt pos:start="203:9" pos:end="203:23"><expr pos:start="203:9" pos:end="203:22"><name pos:start="203:9" pos:end="203:19"><name pos:start="203:9" pos:end="203:11">sps</name><operator pos:start="203:12" pos:end="203:13">-&gt;</operator><name pos:start="203:14" pos:end="203:19">mb_aff</name></name><operator pos:start="203:20" pos:end="203:20">=</operator> <literal type="number" pos:start="203:22" pos:end="203:22">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="207:5" pos:end="207:54"><expr pos:start="207:5" pos:end="207:53"><name pos:start="207:5" pos:end="207:34"><name pos:start="207:5" pos:end="207:7">sps</name><operator pos:start="207:8" pos:end="207:9">-&gt;</operator><name pos:start="207:10" pos:end="207:34">direct_8x8_inference_flag</name></name><operator pos:start="207:35" pos:end="207:35">=</operator> <call pos:start="207:37" pos:end="207:53"><name pos:start="207:37" pos:end="207:45">get_bits1</name><argument_list pos:start="207:46" pos:end="207:53">(<argument pos:start="207:47" pos:end="207:52"><expr pos:start="207:47" pos:end="207:52"><operator pos:start="207:47" pos:end="207:47">&amp;</operator><name pos:start="207:48" pos:end="207:52"><name pos:start="207:48" pos:end="207:48">s</name><operator pos:start="207:49" pos:end="207:50">-&gt;</operator><name pos:start="207:51" pos:end="207:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="209:5" pos:end="220:0"><if pos:start="209:5" pos:end="220:0">if<condition pos:start="209:7" pos:end="209:68">(<expr pos:start="209:8" pos:end="209:67"><operator pos:start="209:8" pos:end="209:8">!</operator><name pos:start="209:9" pos:end="209:32"><name pos:start="209:9" pos:end="209:11">sps</name><operator pos:start="209:12" pos:end="209:13">-&gt;</operator><name pos:start="209:14" pos:end="209:32">frame_mbs_only_flag</name></name> <operator pos:start="209:34" pos:end="209:35">&amp;&amp;</operator> <operator pos:start="209:37" pos:end="209:37">!</operator><name pos:start="209:38" pos:end="209:67"><name pos:start="209:38" pos:end="209:40">sps</name><operator pos:start="209:41" pos:end="209:42">-&gt;</operator><name pos:start="209:43" pos:end="209:67">direct_8x8_inference_flag</name></name></expr>)</condition><block pos:start="209:69" pos:end="220:0">{<block_content pos:start="211:9" pos:end="213:18">

        <expr_stmt pos:start="211:9" pos:end="211:115"><expr pos:start="211:9" pos:end="211:114"><call pos:start="211:9" pos:end="211:114"><name pos:start="211:9" pos:end="211:14">av_log</name><argument_list pos:start="211:15" pos:end="211:114">(<argument pos:start="211:16" pos:end="211:25"><expr pos:start="211:16" pos:end="211:25"><name pos:start="211:16" pos:end="211:25"><name pos:start="211:16" pos:end="211:16">h</name><operator pos:start="211:17" pos:end="211:18">-&gt;</operator><name pos:start="211:19" pos:end="211:19">s</name><operator pos:start="211:20" pos:end="211:20">.</operator><name pos:start="211:21" pos:end="211:25">avctx</name></name></expr></argument>, <argument pos:start="211:28" pos:end="211:39"><expr pos:start="211:28" pos:end="211:39"><name pos:start="211:28" pos:end="211:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="211:42" pos:end="211:113"><expr pos:start="211:42" pos:end="211:113"><literal type="string" pos:start="211:42" pos:end="211:113">"This stream was generated by a broken encoder, invalid 8x8 inference\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="213:9" pos:end="213:18">goto <name pos:start="213:14" pos:end="213:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:ifndef pos:start="219:1" pos:end="219:23">#<cpp:directive pos:start="219:2" pos:end="219:7">ifndef</cpp:directive> <name pos:start="219:9" pos:end="219:23">ALLOW_INTERLACE</name></cpp:ifndef>

    <if_stmt pos:start="221:5" pos:end="226:0"><if pos:start="221:5" pos:end="226:0">if<condition pos:start="221:7" pos:end="221:19">(<expr pos:start="221:8" pos:end="221:18"><name pos:start="221:8" pos:end="221:18"><name pos:start="221:8" pos:end="221:10">sps</name><operator pos:start="221:11" pos:end="221:12">-&gt;</operator><name pos:start="221:13" pos:end="221:18">mb_aff</name></name></expr>)</condition><block type="pseudo" pos:start="223:9" pos:end="226:0"><block_content pos:start="223:9" pos:end="226:0">

        <expr_stmt pos:start="223:9" pos:end="226:0"><expr pos:start="223:9" pos:end="223:100"><call pos:start="223:9" pos:end="223:100"><name pos:start="223:9" pos:end="223:14">av_log</name><argument_list pos:start="223:15" pos:end="223:100">(<argument pos:start="223:16" pos:end="223:25"><expr pos:start="223:16" pos:end="223:25"><name pos:start="223:16" pos:end="223:25"><name pos:start="223:16" pos:end="223:16">h</name><operator pos:start="223:17" pos:end="223:18">-&gt;</operator><name pos:start="223:19" pos:end="223:19">s</name><operator pos:start="223:20" pos:end="223:20">.</operator><name pos:start="223:21" pos:end="223:25">avctx</name></name></expr></argument>, <argument pos:start="223:28" pos:end="223:39"><expr pos:start="223:28" pos:end="223:39"><name pos:start="223:28" pos:end="223:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="223:42" pos:end="223:99"><expr pos:start="223:42" pos:end="223:99"><literal type="string" pos:start="223:42" pos:end="223:99">"MBAFF support not included; enable it at compile-time.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="225:1" pos:end="225:6">#<cpp:directive pos:start="225:2" pos:end="225:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="227:5" pos:end="227:33"><expr pos:start="227:5" pos:end="227:32"><name pos:start="227:5" pos:end="227:13"><name pos:start="227:5" pos:end="227:7">sps</name><operator pos:start="227:8" pos:end="227:9">-&gt;</operator><name pos:start="227:10" pos:end="227:13">crop</name></name><operator pos:start="227:14" pos:end="227:14">=</operator> <call pos:start="227:16" pos:end="227:32"><name pos:start="227:16" pos:end="227:24">get_bits1</name><argument_list pos:start="227:25" pos:end="227:32">(<argument pos:start="227:26" pos:end="227:31"><expr pos:start="227:26" pos:end="227:31"><operator pos:start="227:26" pos:end="227:26">&amp;</operator><name pos:start="227:27" pos:end="227:31"><name pos:start="227:27" pos:end="227:27">s</name><operator pos:start="227:28" pos:end="227:29">-&gt;</operator><name pos:start="227:30" pos:end="227:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="229:5" pos:end="265:5"><if pos:start="229:5" pos:end="255:5">if<condition pos:start="229:7" pos:end="229:17">(<expr pos:start="229:8" pos:end="229:16"><name pos:start="229:8" pos:end="229:16"><name pos:start="229:8" pos:end="229:10">sps</name><operator pos:start="229:11" pos:end="229:12">-&gt;</operator><name pos:start="229:13" pos:end="229:16">crop</name></name></expr>)</condition><block pos:start="229:18" pos:end="255:5">{<block_content pos:start="231:9" pos:end="253:9">

        <decl_stmt pos:start="231:9" pos:end="231:73"><decl pos:start="231:9" pos:end="231:72"><type pos:start="231:9" pos:end="231:11"><name pos:start="231:9" pos:end="231:11">int</name></type> <name pos:start="231:13" pos:end="231:31">crop_vertical_limit</name>   <init pos:start="231:35" pos:end="231:72">= <expr pos:start="231:37" pos:end="231:72"><ternary pos:start="231:37" pos:end="231:72"><condition pos:start="231:37" pos:end="231:65"><expr pos:start="231:37" pos:end="231:63"><name pos:start="231:37" pos:end="231:58"><name pos:start="231:37" pos:end="231:39">sps</name><operator pos:start="231:40" pos:end="231:41">-&gt;</operator><name pos:start="231:42" pos:end="231:58">chroma_format_idc</name></name>  <operator pos:start="231:61" pos:end="231:61">&amp;</operator> <literal type="number" pos:start="231:63" pos:end="231:63">2</literal></expr> ?</condition><then pos:start="231:67" pos:end="231:68"> <expr pos:start="231:67" pos:end="231:68"><literal type="number" pos:start="231:67" pos:end="231:68">16</literal></expr> </then><else pos:start="231:70" pos:end="231:72">: <expr pos:start="231:72" pos:end="231:72"><literal type="number" pos:start="231:72" pos:end="231:72">8</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="233:9" pos:end="233:73"><decl pos:start="233:9" pos:end="233:72"><type pos:start="233:9" pos:end="233:11"><name pos:start="233:9" pos:end="233:11">int</name></type> <name pos:start="233:13" pos:end="233:33">crop_horizontal_limit</name> <init pos:start="233:35" pos:end="233:72">= <expr pos:start="233:37" pos:end="233:72"><ternary pos:start="233:37" pos:end="233:72"><condition pos:start="233:37" pos:end="233:65"><expr pos:start="233:37" pos:end="233:63"><name pos:start="233:37" pos:end="233:58"><name pos:start="233:37" pos:end="233:39">sps</name><operator pos:start="233:40" pos:end="233:41">-&gt;</operator><name pos:start="233:42" pos:end="233:58">chroma_format_idc</name></name> <operator pos:start="233:60" pos:end="233:61">==</operator> <literal type="number" pos:start="233:63" pos:end="233:63">3</literal></expr> ?</condition><then pos:start="233:67" pos:end="233:68"> <expr pos:start="233:67" pos:end="233:68"><literal type="number" pos:start="233:67" pos:end="233:68">16</literal></expr> </then><else pos:start="233:70" pos:end="233:72">: <expr pos:start="233:72" pos:end="233:72"><literal type="number" pos:start="233:72" pos:end="233:72">8</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:48"><expr pos:start="235:9" pos:end="235:47"><name pos:start="235:9" pos:end="235:22"><name pos:start="235:9" pos:end="235:11">sps</name><operator pos:start="235:12" pos:end="235:13">-&gt;</operator><name pos:start="235:14" pos:end="235:22">crop_left</name></name>  <operator pos:start="235:25" pos:end="235:25">=</operator> <call pos:start="235:27" pos:end="235:47"><name pos:start="235:27" pos:end="235:39">get_ue_golomb</name><argument_list pos:start="235:40" pos:end="235:47">(<argument pos:start="235:41" pos:end="235:46"><expr pos:start="235:41" pos:end="235:46"><operator pos:start="235:41" pos:end="235:41">&amp;</operator><name pos:start="235:42" pos:end="235:46"><name pos:start="235:42" pos:end="235:42">s</name><operator pos:start="235:43" pos:end="235:44">-&gt;</operator><name pos:start="235:45" pos:end="235:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:48"><expr pos:start="237:9" pos:end="237:47"><name pos:start="237:9" pos:end="237:23"><name pos:start="237:9" pos:end="237:11">sps</name><operator pos:start="237:12" pos:end="237:13">-&gt;</operator><name pos:start="237:14" pos:end="237:23">crop_right</name></name> <operator pos:start="237:25" pos:end="237:25">=</operator> <call pos:start="237:27" pos:end="237:47"><name pos:start="237:27" pos:end="237:39">get_ue_golomb</name><argument_list pos:start="237:40" pos:end="237:47">(<argument pos:start="237:41" pos:end="237:46"><expr pos:start="237:41" pos:end="237:46"><operator pos:start="237:41" pos:end="237:41">&amp;</operator><name pos:start="237:42" pos:end="237:46"><name pos:start="237:42" pos:end="237:42">s</name><operator pos:start="237:43" pos:end="237:44">-&gt;</operator><name pos:start="237:45" pos:end="237:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:48"><expr pos:start="239:9" pos:end="239:47"><name pos:start="239:9" pos:end="239:21"><name pos:start="239:9" pos:end="239:11">sps</name><operator pos:start="239:12" pos:end="239:13">-&gt;</operator><name pos:start="239:14" pos:end="239:21">crop_top</name></name>   <operator pos:start="239:25" pos:end="239:25">=</operator> <call pos:start="239:27" pos:end="239:47"><name pos:start="239:27" pos:end="239:39">get_ue_golomb</name><argument_list pos:start="239:40" pos:end="239:47">(<argument pos:start="239:41" pos:end="239:46"><expr pos:start="239:41" pos:end="239:46"><operator pos:start="239:41" pos:end="239:41">&amp;</operator><name pos:start="239:42" pos:end="239:46"><name pos:start="239:42" pos:end="239:42">s</name><operator pos:start="239:43" pos:end="239:44">-&gt;</operator><name pos:start="239:45" pos:end="239:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:48"><expr pos:start="241:9" pos:end="241:47"><name pos:start="241:9" pos:end="241:24"><name pos:start="241:9" pos:end="241:11">sps</name><operator pos:start="241:12" pos:end="241:13">-&gt;</operator><name pos:start="241:14" pos:end="241:24">crop_bottom</name></name><operator pos:start="241:25" pos:end="241:25">=</operator> <call pos:start="241:27" pos:end="241:47"><name pos:start="241:27" pos:end="241:39">get_ue_golomb</name><argument_list pos:start="241:40" pos:end="241:47">(<argument pos:start="241:41" pos:end="241:46"><expr pos:start="241:41" pos:end="241:46"><operator pos:start="241:41" pos:end="241:41">&amp;</operator><name pos:start="241:42" pos:end="241:46"><name pos:start="241:42" pos:end="241:42">s</name><operator pos:start="241:43" pos:end="241:44">-&gt;</operator><name pos:start="241:45" pos:end="241:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="243:9" pos:end="247:9"><if pos:start="243:9" pos:end="247:9">if<condition pos:start="243:11" pos:end="243:43">(<expr pos:start="243:12" pos:end="243:42"><name pos:start="243:12" pos:end="243:25"><name pos:start="243:12" pos:end="243:14">sps</name><operator pos:start="243:15" pos:end="243:16">-&gt;</operator><name pos:start="243:17" pos:end="243:25">crop_left</name></name> <operator pos:start="243:27" pos:end="243:28">||</operator> <name pos:start="243:30" pos:end="243:42"><name pos:start="243:30" pos:end="243:32">sps</name><operator pos:start="243:33" pos:end="243:34">-&gt;</operator><name pos:start="243:35" pos:end="243:42">crop_top</name></name></expr>)</condition><block pos:start="243:44" pos:end="247:9">{<block_content pos:start="245:13" pos:end="245:127">

            <expr_stmt pos:start="245:13" pos:end="245:127"><expr pos:start="245:13" pos:end="245:126"><call pos:start="245:13" pos:end="245:126"><name pos:start="245:13" pos:end="245:18">av_log</name><argument_list pos:start="245:19" pos:end="245:126">(<argument pos:start="245:20" pos:end="245:29"><expr pos:start="245:20" pos:end="245:29"><name pos:start="245:20" pos:end="245:29"><name pos:start="245:20" pos:end="245:20">h</name><operator pos:start="245:21" pos:end="245:22">-&gt;</operator><name pos:start="245:23" pos:end="245:23">s</name><operator pos:start="245:24" pos:end="245:24">.</operator><name pos:start="245:25" pos:end="245:29">avctx</name></name></expr></argument>, <argument pos:start="245:32" pos:end="245:43"><expr pos:start="245:32" pos:end="245:43"><name pos:start="245:32" pos:end="245:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="245:46" pos:end="245:125"><expr pos:start="245:46" pos:end="245:125"><literal type="string" pos:start="245:46" pos:end="245:125">"insane cropping not completely supported, this could look slightly wrong ...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="249:9" pos:end="253:9"><if pos:start="249:9" pos:end="253:9">if<condition pos:start="249:11" pos:end="249:95">(<expr pos:start="249:12" pos:end="249:94"><name pos:start="249:12" pos:end="249:26"><name pos:start="249:12" pos:end="249:14">sps</name><operator pos:start="249:15" pos:end="249:16">-&gt;</operator><name pos:start="249:17" pos:end="249:26">crop_right</name></name> <operator pos:start="249:28" pos:end="249:29">&gt;=</operator> <name pos:start="249:31" pos:end="249:51">crop_horizontal_limit</name> <operator pos:start="249:53" pos:end="249:54">||</operator> <name pos:start="249:56" pos:end="249:71"><name pos:start="249:56" pos:end="249:58">sps</name><operator pos:start="249:59" pos:end="249:60">-&gt;</operator><name pos:start="249:61" pos:end="249:71">crop_bottom</name></name> <operator pos:start="249:73" pos:end="249:74">&gt;=</operator> <name pos:start="249:76" pos:end="249:94">crop_vertical_limit</name></expr>)</condition><block pos:start="249:96" pos:end="253:9">{<block_content pos:start="251:13" pos:end="251:119">

            <expr_stmt pos:start="251:13" pos:end="251:119"><expr pos:start="251:13" pos:end="251:118"><call pos:start="251:13" pos:end="251:118"><name pos:start="251:13" pos:end="251:18">av_log</name><argument_list pos:start="251:19" pos:end="251:118">(<argument pos:start="251:20" pos:end="251:29"><expr pos:start="251:20" pos:end="251:29"><name pos:start="251:20" pos:end="251:29"><name pos:start="251:20" pos:end="251:20">h</name><operator pos:start="251:21" pos:end="251:22">-&gt;</operator><name pos:start="251:23" pos:end="251:23">s</name><operator pos:start="251:24" pos:end="251:24">.</operator><name pos:start="251:25" pos:end="251:29">avctx</name></name></expr></argument>, <argument pos:start="251:32" pos:end="251:43"><expr pos:start="251:32" pos:end="251:43"><name pos:start="251:32" pos:end="251:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="251:46" pos:end="251:117"><expr pos:start="251:46" pos:end="251:117"><literal type="string" pos:start="251:46" pos:end="251:117">"brainfart cropping not supported, this could look slightly wrong ...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="255:6" pos:end="265:5">else<block pos:start="255:10" pos:end="265:5">{<block_content pos:start="257:9" pos:end="263:28">

        <expr_stmt pos:start="257:9" pos:end="263:28"><expr pos:start="257:9" pos:end="263:27"><name pos:start="257:9" pos:end="257:22"><name pos:start="257:9" pos:end="257:11">sps</name><operator pos:start="257:12" pos:end="257:13">-&gt;</operator><name pos:start="257:14" pos:end="257:22">crop_left</name></name>  <operator pos:start="257:25" pos:end="257:25">=</operator>

        <name pos:start="259:9" pos:end="259:23"><name pos:start="259:9" pos:end="259:11">sps</name><operator pos:start="259:12" pos:end="259:13">-&gt;</operator><name pos:start="259:14" pos:end="259:23">crop_right</name></name> <operator pos:start="259:25" pos:end="259:25">=</operator>

        <name pos:start="261:9" pos:end="261:21"><name pos:start="261:9" pos:end="261:11">sps</name><operator pos:start="261:12" pos:end="261:13">-&gt;</operator><name pos:start="261:14" pos:end="261:21">crop_top</name></name>   <operator pos:start="261:25" pos:end="261:25">=</operator>

        <name pos:start="263:9" pos:end="263:24"><name pos:start="263:9" pos:end="263:11">sps</name><operator pos:start="263:12" pos:end="263:13">-&gt;</operator><name pos:start="263:14" pos:end="263:24">crop_bottom</name></name><operator pos:start="263:25" pos:end="263:25">=</operator> <literal type="number" pos:start="263:27" pos:end="263:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="269:5" pos:end="269:56"><expr pos:start="269:5" pos:end="269:55"><name pos:start="269:5" pos:end="269:36"><name pos:start="269:5" pos:end="269:7">sps</name><operator pos:start="269:8" pos:end="269:9">-&gt;</operator><name pos:start="269:10" pos:end="269:36">vui_parameters_present_flag</name></name><operator pos:start="269:37" pos:end="269:37">=</operator> <call pos:start="269:39" pos:end="269:55"><name pos:start="269:39" pos:end="269:47">get_bits1</name><argument_list pos:start="269:48" pos:end="269:55">(<argument pos:start="269:49" pos:end="269:54"><expr pos:start="269:49" pos:end="269:54"><operator pos:start="269:49" pos:end="269:49">&amp;</operator><name pos:start="269:50" pos:end="269:54"><name pos:start="269:50" pos:end="269:50">s</name><operator pos:start="269:51" pos:end="269:52">-&gt;</operator><name pos:start="269:53" pos:end="269:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="271:5" pos:end="275:22"><if pos:start="271:5" pos:end="275:22">if<condition pos:start="271:7" pos:end="271:42">( <expr pos:start="271:9" pos:end="271:40"><name pos:start="271:9" pos:end="271:40"><name pos:start="271:9" pos:end="271:11">sps</name><operator pos:start="271:12" pos:end="271:13">-&gt;</operator><name pos:start="271:14" pos:end="271:40">vui_parameters_present_flag</name></name></expr> )</condition><block type="pseudo" pos:start="273:9" pos:end="275:22"><block_content pos:start="273:9" pos:end="275:22">

        <if_stmt pos:start="273:9" pos:end="275:22"><if pos:start="273:9" pos:end="275:22">if <condition pos:start="273:12" pos:end="273:46">(<expr pos:start="273:13" pos:end="273:45"><call pos:start="273:13" pos:end="273:41"><name pos:start="273:13" pos:end="273:33">decode_vui_parameters</name><argument_list pos:start="273:34" pos:end="273:41">(<argument pos:start="273:35" pos:end="273:35"><expr pos:start="273:35" pos:end="273:35"><name pos:start="273:35" pos:end="273:35">h</name></expr></argument>, <argument pos:start="273:38" pos:end="273:40"><expr pos:start="273:38" pos:end="273:40"><name pos:start="273:38" pos:end="273:40">sps</name></expr></argument>)</argument_list></call> <operator pos:start="273:43" pos:end="273:43">&lt;</operator> <literal type="number" pos:start="273:45" pos:end="273:45">0</literal></expr>)</condition><block type="pseudo" pos:start="275:13" pos:end="275:22"><block_content pos:start="275:13" pos:end="275:22">

            <goto pos:start="275:13" pos:end="275:22">goto <name pos:start="275:18" pos:end="275:21">fail</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="279:5" pos:end="281:24"><if pos:start="279:5" pos:end="281:24">if<condition pos:start="279:7" pos:end="279:21">(<expr pos:start="279:8" pos:end="279:20"><operator pos:start="279:8" pos:end="279:8">!</operator><name pos:start="279:9" pos:end="279:20"><name pos:start="279:9" pos:end="279:11">sps</name><operator pos:start="279:12" pos:end="279:13">-&gt;</operator><name pos:start="279:14" pos:end="279:16">sar</name><operator pos:start="279:17" pos:end="279:17">.</operator><name pos:start="279:18" pos:end="279:20">den</name></name></expr>)</condition><block type="pseudo" pos:start="281:9" pos:end="281:24"><block_content pos:start="281:9" pos:end="281:24">

        <expr_stmt pos:start="281:9" pos:end="281:24"><expr pos:start="281:9" pos:end="281:23"><name pos:start="281:9" pos:end="281:20"><name pos:start="281:9" pos:end="281:11">sps</name><operator pos:start="281:12" pos:end="281:13">-&gt;</operator><name pos:start="281:14" pos:end="281:16">sar</name><operator pos:start="281:17" pos:end="281:17">.</operator><name pos:start="281:18" pos:end="281:20">den</name></name><operator pos:start="281:21" pos:end="281:21">=</operator> <literal type="number" pos:start="281:23" pos:end="281:23">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="285:5" pos:end="317:5"><if pos:start="285:5" pos:end="317:5">if<condition pos:start="285:7" pos:end="285:42">(<expr pos:start="285:8" pos:end="285:41"><name pos:start="285:8" pos:end="285:22"><name pos:start="285:8" pos:end="285:8">s</name><operator pos:start="285:9" pos:end="285:10">-&gt;</operator><name pos:start="285:11" pos:end="285:15">avctx</name><operator pos:start="285:16" pos:end="285:17">-&gt;</operator><name pos:start="285:18" pos:end="285:22">debug</name></name><operator pos:start="285:23" pos:end="285:23">&amp;</operator><name pos:start="285:24" pos:end="285:41">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="285:43" pos:end="317:5">{<block_content pos:start="287:9" pos:end="315:17">

        <decl_stmt pos:start="287:9" pos:end="287:70"><decl pos:start="287:9" pos:end="287:69"><type pos:start="287:9" pos:end="287:25"><specifier pos:start="287:9" pos:end="287:14">static</specifier> <specifier pos:start="287:16" pos:end="287:20">const</specifier> <name pos:start="287:22" pos:end="287:25">char</name></type> <name pos:start="287:27" pos:end="287:35"><name pos:start="287:27" pos:end="287:29">csp</name><index pos:start="287:30" pos:end="287:32">[<expr pos:start="287:31" pos:end="287:31"><literal type="number" pos:start="287:31" pos:end="287:31">4</literal></expr>]</index><index pos:start="287:33" pos:end="287:35">[<expr pos:start="287:34" pos:end="287:34"><literal type="number" pos:start="287:34" pos:end="287:34">5</literal></expr>]</index></name> <init pos:start="287:37" pos:end="287:69">= <expr pos:start="287:39" pos:end="287:69"><block pos:start="287:39" pos:end="287:69">{ <expr pos:start="287:41" pos:end="287:46"><literal type="string" pos:start="287:41" pos:end="287:46">"Gray"</literal></expr>, <expr pos:start="287:49" pos:end="287:53"><literal type="string" pos:start="287:49" pos:end="287:53">"420"</literal></expr>, <expr pos:start="287:56" pos:end="287:60"><literal type="string" pos:start="287:56" pos:end="287:60">"422"</literal></expr>, <expr pos:start="287:63" pos:end="287:67"><literal type="string" pos:start="287:63" pos:end="287:67">"444"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="289:9" pos:end="315:17"><expr pos:start="289:9" pos:end="315:16"><call pos:start="289:9" pos:end="315:16"><name pos:start="289:9" pos:end="289:14">av_log</name><argument_list pos:start="289:15" pos:end="315:16">(<argument pos:start="289:16" pos:end="289:25"><expr pos:start="289:16" pos:end="289:25"><name pos:start="289:16" pos:end="289:25"><name pos:start="289:16" pos:end="289:16">h</name><operator pos:start="289:17" pos:end="289:18">-&gt;</operator><name pos:start="289:19" pos:end="289:19">s</name><operator pos:start="289:20" pos:end="289:20">.</operator><name pos:start="289:21" pos:end="289:25">avctx</name></name></expr></argument>, <argument pos:start="289:28" pos:end="289:39"><expr pos:start="289:28" pos:end="289:39"><name pos:start="289:28" pos:end="289:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="289:42" pos:end="289:120"><expr pos:start="289:42" pos:end="289:120"><literal type="string" pos:start="289:42" pos:end="289:120">"sps:%u profile:%d/%d poc:%d ref:%d %dx%d %s %s crop:%d/%d/%d/%d %s %s %d/%d\n"</literal></expr></argument>,

               <argument pos:start="291:16" pos:end="291:21"><expr pos:start="291:16" pos:end="291:21"><name pos:start="291:16" pos:end="291:21">sps_id</name></expr></argument>, <argument pos:start="291:24" pos:end="291:39"><expr pos:start="291:24" pos:end="291:39"><name pos:start="291:24" pos:end="291:39"><name pos:start="291:24" pos:end="291:26">sps</name><operator pos:start="291:27" pos:end="291:28">-&gt;</operator><name pos:start="291:29" pos:end="291:39">profile_idc</name></name></expr></argument>, <argument pos:start="291:42" pos:end="291:55"><expr pos:start="291:42" pos:end="291:55"><name pos:start="291:42" pos:end="291:55"><name pos:start="291:42" pos:end="291:44">sps</name><operator pos:start="291:45" pos:end="291:46">-&gt;</operator><name pos:start="291:47" pos:end="291:55">level_idc</name></name></expr></argument>,

               <argument pos:start="293:16" pos:end="293:28"><expr pos:start="293:16" pos:end="293:28"><name pos:start="293:16" pos:end="293:28"><name pos:start="293:16" pos:end="293:18">sps</name><operator pos:start="293:19" pos:end="293:20">-&gt;</operator><name pos:start="293:21" pos:end="293:28">poc_type</name></name></expr></argument>,

               <argument pos:start="295:16" pos:end="295:35"><expr pos:start="295:16" pos:end="295:35"><name pos:start="295:16" pos:end="295:35"><name pos:start="295:16" pos:end="295:18">sps</name><operator pos:start="295:19" pos:end="295:20">-&gt;</operator><name pos:start="295:21" pos:end="295:35">ref_frame_count</name></name></expr></argument>,

               <argument pos:start="297:16" pos:end="297:28"><expr pos:start="297:16" pos:end="297:28"><name pos:start="297:16" pos:end="297:28"><name pos:start="297:16" pos:end="297:18">sps</name><operator pos:start="297:19" pos:end="297:20">-&gt;</operator><name pos:start="297:21" pos:end="297:28">mb_width</name></name></expr></argument>, <argument pos:start="297:31" pos:end="297:44"><expr pos:start="297:31" pos:end="297:44"><name pos:start="297:31" pos:end="297:44"><name pos:start="297:31" pos:end="297:33">sps</name><operator pos:start="297:34" pos:end="297:35">-&gt;</operator><name pos:start="297:36" pos:end="297:44">mb_height</name></name></expr></argument>,

               <argument pos:start="299:16" pos:end="299:86"><expr pos:start="299:16" pos:end="299:86"><ternary pos:start="299:16" pos:end="299:86"><condition pos:start="299:16" pos:end="299:41"><expr pos:start="299:16" pos:end="299:39"><name pos:start="299:16" pos:end="299:39"><name pos:start="299:16" pos:end="299:18">sps</name><operator pos:start="299:19" pos:end="299:20">-&gt;</operator><name pos:start="299:21" pos:end="299:39">frame_mbs_only_flag</name></name></expr> ?</condition><then pos:start="299:43" pos:end="299:47"> <expr pos:start="299:43" pos:end="299:47"><literal type="string" pos:start="299:43" pos:end="299:47">"FRM"</literal></expr> </then><else pos:start="299:49" pos:end="299:86">: <expr pos:start="299:51" pos:end="299:86"><operator pos:start="299:51" pos:end="299:51">(</operator><ternary pos:start="299:52" pos:end="299:85"><condition pos:start="299:52" pos:end="299:64"><expr pos:start="299:52" pos:end="299:62"><name pos:start="299:52" pos:end="299:62"><name pos:start="299:52" pos:end="299:54">sps</name><operator pos:start="299:55" pos:end="299:56">-&gt;</operator><name pos:start="299:57" pos:end="299:62">mb_aff</name></name></expr> ?</condition><then pos:start="299:66" pos:end="299:73"> <expr pos:start="299:66" pos:end="299:73"><literal type="string" pos:start="299:66" pos:end="299:73">"MB-AFF"</literal></expr> </then><else pos:start="299:75" pos:end="299:85">: <expr pos:start="299:77" pos:end="299:85"><literal type="string" pos:start="299:77" pos:end="299:85">"PIC-AFF"</literal></expr></else></ternary><operator pos:start="299:86" pos:end="299:86">)</operator></expr></else></ternary></expr></argument>,

               <argument pos:start="301:16" pos:end="301:58"><expr pos:start="301:16" pos:end="301:58"><ternary pos:start="301:16" pos:end="301:58"><condition pos:start="301:16" pos:end="301:47"><expr pos:start="301:16" pos:end="301:45"><name pos:start="301:16" pos:end="301:45"><name pos:start="301:16" pos:end="301:18">sps</name><operator pos:start="301:19" pos:end="301:20">-&gt;</operator><name pos:start="301:21" pos:end="301:45">direct_8x8_inference_flag</name></name></expr> ?</condition><then pos:start="301:49" pos:end="301:53"> <expr pos:start="301:49" pos:end="301:53"><literal type="string" pos:start="301:49" pos:end="301:53">"8B8"</literal></expr> </then><else pos:start="301:55" pos:end="301:58">: <expr pos:start="301:57" pos:end="301:58"><literal type="string" pos:start="301:57" pos:end="301:58">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="303:16" pos:end="303:29"><expr pos:start="303:16" pos:end="303:29"><name pos:start="303:16" pos:end="303:29"><name pos:start="303:16" pos:end="303:18">sps</name><operator pos:start="303:19" pos:end="303:20">-&gt;</operator><name pos:start="303:21" pos:end="303:29">crop_left</name></name></expr></argument>, <argument pos:start="303:32" pos:end="303:46"><expr pos:start="303:32" pos:end="303:46"><name pos:start="303:32" pos:end="303:46"><name pos:start="303:32" pos:end="303:34">sps</name><operator pos:start="303:35" pos:end="303:36">-&gt;</operator><name pos:start="303:37" pos:end="303:46">crop_right</name></name></expr></argument>,

               <argument pos:start="305:16" pos:end="305:28"><expr pos:start="305:16" pos:end="305:28"><name pos:start="305:16" pos:end="305:28"><name pos:start="305:16" pos:end="305:18">sps</name><operator pos:start="305:19" pos:end="305:20">-&gt;</operator><name pos:start="305:21" pos:end="305:28">crop_top</name></name></expr></argument>, <argument pos:start="305:31" pos:end="305:46"><expr pos:start="305:31" pos:end="305:46"><name pos:start="305:31" pos:end="305:46"><name pos:start="305:31" pos:end="305:33">sps</name><operator pos:start="305:34" pos:end="305:35">-&gt;</operator><name pos:start="305:36" pos:end="305:46">crop_bottom</name></name></expr></argument>,

               <argument pos:start="307:16" pos:end="307:60"><expr pos:start="307:16" pos:end="307:60"><ternary pos:start="307:16" pos:end="307:60"><condition pos:start="307:16" pos:end="307:49"><expr pos:start="307:16" pos:end="307:47"><name pos:start="307:16" pos:end="307:47"><name pos:start="307:16" pos:end="307:18">sps</name><operator pos:start="307:19" pos:end="307:20">-&gt;</operator><name pos:start="307:21" pos:end="307:47">vui_parameters_present_flag</name></name></expr> ?</condition><then pos:start="307:51" pos:end="307:55"> <expr pos:start="307:51" pos:end="307:55"><literal type="string" pos:start="307:51" pos:end="307:55">"VUI"</literal></expr> </then><else pos:start="307:57" pos:end="307:60">: <expr pos:start="307:59" pos:end="307:60"><literal type="string" pos:start="307:59" pos:end="307:60">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="309:16" pos:end="309:42"><expr pos:start="309:16" pos:end="309:42"><name pos:start="309:16" pos:end="309:42"><name pos:start="309:16" pos:end="309:18">csp</name><index pos:start="309:19" pos:end="309:42">[<expr pos:start="309:20" pos:end="309:41"><name pos:start="309:20" pos:end="309:41"><name pos:start="309:20" pos:end="309:22">sps</name><operator pos:start="309:23" pos:end="309:24">-&gt;</operator><name pos:start="309:25" pos:end="309:41">chroma_format_idc</name></name></expr>]</index></name></expr></argument>,

               <argument pos:start="311:16" pos:end="311:73"><expr pos:start="311:16" pos:end="311:73"><ternary pos:start="311:16" pos:end="311:73"><condition pos:start="311:16" pos:end="311:46"><expr pos:start="311:16" pos:end="311:44"><name pos:start="311:16" pos:end="311:44"><name pos:start="311:16" pos:end="311:18">sps</name><operator pos:start="311:19" pos:end="311:20">-&gt;</operator><name pos:start="311:21" pos:end="311:44">timing_info_present_flag</name></name></expr> ?</condition><then pos:start="311:48" pos:end="311:69"> <expr pos:start="311:48" pos:end="311:69"><name pos:start="311:48" pos:end="311:69"><name pos:start="311:48" pos:end="311:50">sps</name><operator pos:start="311:51" pos:end="311:52">-&gt;</operator><name pos:start="311:53" pos:end="311:69">num_units_in_tick</name></name></expr> </then><else pos:start="311:71" pos:end="311:73">: <expr pos:start="311:73" pos:end="311:73"><literal type="number" pos:start="311:73" pos:end="311:73">0</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="313:16" pos:end="313:66"><expr pos:start="313:16" pos:end="313:66"><ternary pos:start="313:16" pos:end="313:66"><condition pos:start="313:16" pos:end="313:46"><expr pos:start="313:16" pos:end="313:44"><name pos:start="313:16" pos:end="313:44"><name pos:start="313:16" pos:end="313:18">sps</name><operator pos:start="313:19" pos:end="313:20">-&gt;</operator><name pos:start="313:21" pos:end="313:44">timing_info_present_flag</name></name></expr> ?</condition><then pos:start="313:48" pos:end="313:62"> <expr pos:start="313:48" pos:end="313:62"><name pos:start="313:48" pos:end="313:62"><name pos:start="313:48" pos:end="313:50">sps</name><operator pos:start="313:51" pos:end="313:52">-&gt;</operator><name pos:start="313:53" pos:end="313:62">time_scale</name></name></expr> </then><else pos:start="313:64" pos:end="313:66">: <expr pos:start="313:66" pos:end="313:66"><literal type="number" pos:start="313:66" pos:end="313:66">0</literal></expr></else></ternary></expr></argument>

               )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="321:5" pos:end="321:36"><expr pos:start="321:5" pos:end="321:35"><call pos:start="321:5" pos:end="321:35"><name pos:start="321:5" pos:end="321:11">av_free</name><argument_list pos:start="321:12" pos:end="321:35">(<argument pos:start="321:13" pos:end="321:34"><expr pos:start="321:13" pos:end="321:34"><name pos:start="321:13" pos:end="321:34"><name pos:start="321:13" pos:end="321:13">h</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:26">sps_buffers</name><index pos:start="321:27" pos:end="321:34">[<expr pos:start="321:28" pos:end="321:33"><name pos:start="321:28" pos:end="321:33">sps_id</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="323:5" pos:end="323:32"><expr pos:start="323:5" pos:end="323:31"><name pos:start="323:5" pos:end="323:26"><name pos:start="323:5" pos:end="323:5">h</name><operator pos:start="323:6" pos:end="323:7">-&gt;</operator><name pos:start="323:8" pos:end="323:18">sps_buffers</name><index pos:start="323:19" pos:end="323:26">[<expr pos:start="323:20" pos:end="323:25"><name pos:start="323:20" pos:end="323:25">sps_id</name></expr>]</index></name><operator pos:start="323:27" pos:end="323:27">=</operator> <name pos:start="323:29" pos:end="323:31">sps</name></expr>;</expr_stmt>

    <expr_stmt pos:start="325:5" pos:end="325:18"><expr pos:start="325:5" pos:end="325:17"><name pos:start="325:5" pos:end="325:10"><name pos:start="325:5" pos:end="325:5">h</name><operator pos:start="325:6" pos:end="325:7">-&gt;</operator><name pos:start="325:8" pos:end="325:10">sps</name></name> <operator pos:start="325:12" pos:end="325:12">=</operator> <operator pos:start="325:14" pos:end="325:14">*</operator><name pos:start="325:15" pos:end="325:17">sps</name></expr>;</expr_stmt>

    <return pos:start="327:5" pos:end="327:13">return <expr pos:start="327:12" pos:end="327:12"><literal type="number" pos:start="327:12" pos:end="327:12">0</literal></expr>;</return>

<label pos:start="329:1" pos:end="329:5"><name pos:start="329:1" pos:end="329:4">fail</name>:</label>

    <expr_stmt pos:start="331:5" pos:end="331:17"><expr pos:start="331:5" pos:end="331:16"><call pos:start="331:5" pos:end="331:16"><name pos:start="331:5" pos:end="331:11">av_free</name><argument_list pos:start="331:12" pos:end="331:16">(<argument pos:start="331:13" pos:end="331:15"><expr pos:start="331:13" pos:end="331:15"><name pos:start="331:13" pos:end="331:15">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="333:5" pos:end="333:14">return <expr pos:start="333:12" pos:end="333:13"><operator pos:start="333:12" pos:end="333:12">-</operator><literal type="number" pos:start="333:13" pos:end="333:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
