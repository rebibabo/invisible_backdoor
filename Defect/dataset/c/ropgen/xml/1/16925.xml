<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16925.c" pos:tabs="8"><function pos:start="1:1" pos:end="180:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">av_buffersrc_buffer</name><parameter_list pos:start="1:24" pos:end="1:69">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:39">AVFilterContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">ctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:68"><decl pos:start="1:47" pos:end="1:68"><type pos:start="1:47" pos:end="1:68"><name pos:start="1:47" pos:end="1:63">AVFilterBufferRef</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="180:1">{<block_content pos:start="5:5" pos:end="178:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">BufferSourceContext</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:26">s</name> <init pos:start="5:28" pos:end="5:38">= <expr pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:32">ctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:38">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">frame</name> <init pos:start="7:20" pos:end="7:25">= <expr pos:start="7:22" pos:end="7:25"><name pos:start="7:22" pos:end="7:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVBufferRef</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:26">dummy_buf</name> <init pos:start="9:28" pos:end="9:33">= <expr pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>, <decl pos:start="11:18" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:23">planes</name></decl>, <decl pos:start="11:26" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:26" pos:end="11:26">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="23:31"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:12">buf</name></expr>)</condition> <block pos:start="15:15" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:17">

        <expr_stmt pos:start="17:9" pos:end="17:19"><expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:14">eof</name></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">1</literal></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="21:7" pos:end="23:31">else if <condition pos:start="21:15" pos:end="21:22">(<expr pos:start="21:16" pos:end="21:21"><name pos:start="21:16" pos:end="21:21"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:21">eof</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:9">frame</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:28"><name pos:start="27:13" pos:end="27:26">av_frame_alloc</name><argument_list pos:start="27:27" pos:end="27:28">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:31"><if pos:start="29:5" pos:end="31:31">if <condition pos:start="29:8" pos:end="29:15">(<expr pos:start="29:9" pos:end="29:14"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:14">frame</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:31"><block_content pos:start="31:9" pos:end="31:31">

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:70"><expr pos:start="35:5" pos:end="35:69"><name pos:start="35:5" pos:end="35:13">dummy_buf</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:69"><name pos:start="35:17" pos:end="35:32">av_buffer_create</name><argument_list pos:start="35:33" pos:end="35:69">(<argument pos:start="35:34" pos:end="35:37"><expr pos:start="35:34" pos:end="35:37"><name pos:start="35:34" pos:end="35:37">NULL</name></expr></argument>, <argument pos:start="35:40" pos:end="35:40"><expr pos:start="35:40" pos:end="35:40"><literal type="number" pos:start="35:40" pos:end="35:40">0</literal></expr></argument>, <argument pos:start="35:43" pos:end="35:60"><expr pos:start="35:43" pos:end="35:60"><name pos:start="35:43" pos:end="35:60">compat_free_buffer</name></expr></argument>, <argument pos:start="35:63" pos:end="35:65"><expr pos:start="35:63" pos:end="35:65"><name pos:start="35:63" pos:end="35:65">buf</name></expr></argument>, <argument pos:start="35:68" pos:end="35:68"><expr pos:start="35:68" pos:end="35:68"><literal type="number" pos:start="35:68" pos:end="35:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:19">(<expr pos:start="37:9" pos:end="37:18"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:18">dummy_buf</name></expr>)</condition> <block pos:start="37:21" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:18">

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:29"><name pos:start="39:15" pos:end="39:21">AVERROR</name><argument_list pos:start="39:22" pos:end="39:29">(<argument pos:start="39:23" pos:end="39:28"><expr pos:start="39:23" pos:end="39:28"><name pos:start="39:23" pos:end="39:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:18">goto <name pos:start="41:14" pos:end="41:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="83:0"><if pos:start="47:5" pos:end="83:0">if <condition pos:start="47:8" pos:end="47:56">(<expr pos:start="47:9" pos:end="47:55"><operator pos:start="47:9" pos:end="47:9">(</operator><name pos:start="47:10" pos:end="47:12">ret</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:50"><name pos:start="47:16" pos:end="47:38">avfilter_copy_buf_props</name><argument_list pos:start="47:39" pos:end="47:50">(<argument pos:start="47:40" pos:end="47:44"><expr pos:start="47:40" pos:end="47:44"><name pos:start="47:40" pos:end="47:44">frame</name></expr></argument>, <argument pos:start="47:47" pos:end="47:49"><expr pos:start="47:47" pos:end="47:49"><name pos:start="47:47" pos:end="47:49">buf</name></expr></argument>)</argument_list></call><operator pos:start="47:51" pos:end="47:51">)</operator> <operator pos:start="47:53" pos:end="47:53">&lt;</operator> <literal type="number" pos:start="47:55" pos:end="47:55">0</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="83:0"><block_content pos:start="49:9" pos:end="83:0">

        <goto pos:start="49:9" pos:end="83:0">goto <name pos:start="49:14" pos:end="49:17">fail</name>;</goto></block_content></block></if></if_stmt>



<cpp:define pos:start="53:1" pos:end="82:11">#<cpp:directive pos:start="53:2" pos:end="53:7">define</cpp:directive> <cpp:macro pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:18">WRAP_PLANE</name><parameter_list pos:start="53:19" pos:end="53:44">(<parameter pos:start="53:20" pos:end="53:26"><type pos:start="53:20" pos:end="53:26"><name pos:start="53:20" pos:end="53:26">ref_out</name></type></parameter>, <parameter pos:start="53:29" pos:end="53:32"><type pos:start="53:29" pos:end="53:32"><name pos:start="53:29" pos:end="53:32">data</name></type></parameter>, <parameter pos:start="53:35" pos:end="53:43"><type pos:start="53:35" pos:end="53:43"><name pos:start="53:35" pos:end="53:43">data_size</name></type></parameter>)</parameter_list></cpp:macro>                            \

<cpp:value pos:start="55:1" pos:end="82:11">do {                                                                    \

    AVBufferRef *dummy_ref = av_buffer_ref(dummy_buf);                  \

    if (!dummy_ref) {                                                   \

        ret = AVERROR(ENOMEM);                                          \

        goto fail;                                                      \

    }                                                                   \

    ref_out = av_buffer_create(data, data_size, compat_unref_buffer,    \

                               dummy_ref, 0);                           \

    if (!ref_out) {                                                     \


        av_frame_unref(frame);                                          \

        ret = AVERROR(ENOMEM);                                          \

        goto fail;                                                      \

    }                                                                   \

} while (0)</cpp:value></cpp:define>



    <if_stmt pos:start="86:5" pos:end="162:5"><if pos:start="86:5" pos:end="116:5">if <condition pos:start="86:8" pos:end="86:53">(<expr pos:start="86:9" pos:end="86:52"><name pos:start="86:9" pos:end="86:23"><name pos:start="86:9" pos:end="86:11">ctx</name><operator pos:start="86:12" pos:end="86:13">-&gt;</operator><name pos:start="86:14" pos:end="86:20">outputs</name><index pos:start="86:21" pos:end="86:23">[<expr pos:start="86:22" pos:end="86:22"><literal type="number" pos:start="86:22" pos:end="86:22">0</literal></expr>]</index></name><operator pos:start="86:24" pos:end="86:25">-&gt;</operator><name pos:start="86:26" pos:end="86:29">type</name>  <operator pos:start="86:32" pos:end="86:33">==</operator> <name pos:start="86:35" pos:end="86:52">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="86:55" pos:end="116:5">{<block_content pos:start="88:9" pos:end="114:9">

        <decl_stmt pos:start="88:9" pos:end="88:76"><decl pos:start="88:9" pos:end="88:75"><type pos:start="88:9" pos:end="88:34"><specifier pos:start="88:9" pos:end="88:13">const</specifier> <name pos:start="88:15" pos:end="88:32">AVPixFmtDescriptor</name> <modifier pos:start="88:34" pos:end="88:34">*</modifier></type><name pos:start="88:35" pos:end="88:38">desc</name> <init pos:start="88:40" pos:end="88:75">= <expr pos:start="88:42" pos:end="88:75"><call pos:start="88:42" pos:end="88:75"><name pos:start="88:42" pos:end="88:60">av_pix_fmt_desc_get</name><argument_list pos:start="88:61" pos:end="88:75">(<argument pos:start="88:62" pos:end="88:74"><expr pos:start="88:62" pos:end="88:74"><name pos:start="88:62" pos:end="88:74"><name pos:start="88:62" pos:end="88:66">frame</name><operator pos:start="88:67" pos:end="88:68">-&gt;</operator><name pos:start="88:69" pos:end="88:74">format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="92:9" pos:end="92:56"><expr pos:start="92:9" pos:end="92:55"><name pos:start="92:9" pos:end="92:14">planes</name> <operator pos:start="92:16" pos:end="92:16">=</operator> <call pos:start="92:18" pos:end="92:55"><name pos:start="92:18" pos:end="92:40">av_pix_fmt_count_planes</name><argument_list pos:start="92:41" pos:end="92:55">(<argument pos:start="92:42" pos:end="92:54"><expr pos:start="92:42" pos:end="92:54"><name pos:start="92:42" pos:end="92:54"><name pos:start="92:42" pos:end="92:46">frame</name><operator pos:start="92:47" pos:end="92:48">-&gt;</operator><name pos:start="92:49" pos:end="92:54">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="94:9" pos:end="100:9"><if pos:start="94:9" pos:end="100:9">if <condition pos:start="94:12" pos:end="94:33">(<expr pos:start="94:13" pos:end="94:32"><operator pos:start="94:13" pos:end="94:13">!</operator><name pos:start="94:14" pos:end="94:17">desc</name> <operator pos:start="94:19" pos:end="94:20">||</operator> <name pos:start="94:22" pos:end="94:27">planes</name> <operator pos:start="94:29" pos:end="94:30">&lt;=</operator> <literal type="number" pos:start="94:32" pos:end="94:32">0</literal></expr>)</condition> <block pos:start="94:35" pos:end="100:9">{<block_content pos:start="96:13" pos:end="98:22">

            <expr_stmt pos:start="96:13" pos:end="96:34"><expr pos:start="96:13" pos:end="96:33"><name pos:start="96:13" pos:end="96:15">ret</name> <operator pos:start="96:17" pos:end="96:17">=</operator> <call pos:start="96:19" pos:end="96:33"><name pos:start="96:19" pos:end="96:25">AVERROR</name><argument_list pos:start="96:26" pos:end="96:33">(<argument pos:start="96:27" pos:end="96:32"><expr pos:start="96:27" pos:end="96:32"><name pos:start="96:27" pos:end="96:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="98:13" pos:end="98:22">goto <name pos:start="98:18" pos:end="98:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <for pos:start="104:9" pos:end="114:9">for <control pos:start="104:13" pos:end="104:36">(<init pos:start="104:14" pos:end="104:19"><expr pos:start="104:14" pos:end="104:18"><name pos:start="104:14" pos:end="104:14">i</name> <operator pos:start="104:16" pos:end="104:16">=</operator> <literal type="number" pos:start="104:18" pos:end="104:18">0</literal></expr>;</init> <condition pos:start="104:21" pos:end="104:31"><expr pos:start="104:21" pos:end="104:30"><name pos:start="104:21" pos:end="104:21">i</name> <operator pos:start="104:23" pos:end="104:23">&lt;</operator> <name pos:start="104:25" pos:end="104:30">planes</name></expr>;</condition> <incr pos:start="104:33" pos:end="104:35"><expr pos:start="104:33" pos:end="104:35"><name pos:start="104:33" pos:end="104:33">i</name><operator pos:start="104:34" pos:end="104:35">++</operator></expr></incr>)</control> <block pos:start="104:38" pos:end="114:9">{<block_content pos:start="106:13" pos:end="112:66">

            <decl_stmt pos:start="106:13" pos:end="106:74"><decl pos:start="106:13" pos:end="106:73"><type pos:start="106:13" pos:end="106:15"><name pos:start="106:13" pos:end="106:15">int</name></type> <name pos:start="106:17" pos:end="106:23">v_shift</name>    <init pos:start="106:28" pos:end="106:73">= <expr pos:start="106:30" pos:end="106:73"><ternary pos:start="106:30" pos:end="106:73"><condition pos:start="106:30" pos:end="106:49"><expr pos:start="106:30" pos:end="106:47"><operator pos:start="106:30" pos:end="106:30">(</operator><name pos:start="106:31" pos:end="106:31">i</name> <operator pos:start="106:33" pos:end="106:34">==</operator> <literal type="number" pos:start="106:36" pos:end="106:36">1</literal> <operator pos:start="106:38" pos:end="106:39">||</operator> <name pos:start="106:41" pos:end="106:41">i</name> <operator pos:start="106:43" pos:end="106:44">==</operator> <literal type="number" pos:start="106:46" pos:end="106:46">2</literal><operator pos:start="106:47" pos:end="106:47">)</operator></expr> ?</condition><then pos:start="106:51" pos:end="106:69"> <expr pos:start="106:51" pos:end="106:69"><name pos:start="106:51" pos:end="106:69"><name pos:start="106:51" pos:end="106:54">desc</name><operator pos:start="106:55" pos:end="106:56">-&gt;</operator><name pos:start="106:57" pos:end="106:69">log2_chroma_h</name></name></expr> </then><else pos:start="106:71" pos:end="106:73">: <expr pos:start="106:73" pos:end="106:73"><literal type="number" pos:start="106:73" pos:end="106:73">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="108:13" pos:end="108:77"><decl pos:start="108:13" pos:end="108:76"><type pos:start="108:13" pos:end="108:15"><name pos:start="108:13" pos:end="108:15">int</name></type> <name pos:start="108:17" pos:end="108:26">plane_size</name> <init pos:start="108:28" pos:end="108:76">= <expr pos:start="108:30" pos:end="108:76"><operator pos:start="108:30" pos:end="108:30">(</operator><name pos:start="108:31" pos:end="108:43"><name pos:start="108:31" pos:end="108:35">frame</name><operator pos:start="108:36" pos:end="108:37">-&gt;</operator><name pos:start="108:38" pos:end="108:43">height</name></name> <operator pos:start="108:45" pos:end="108:46">&gt;&gt;</operator> <name pos:start="108:48" pos:end="108:54">v_shift</name><operator pos:start="108:55" pos:end="108:55">)</operator> <operator pos:start="108:57" pos:end="108:57">*</operator> <name pos:start="108:59" pos:end="108:76"><name pos:start="108:59" pos:end="108:63">frame</name><operator pos:start="108:64" pos:end="108:65">-&gt;</operator><name pos:start="108:66" pos:end="108:73">linesize</name><index pos:start="108:74" pos:end="108:76">[<expr pos:start="108:75" pos:end="108:75"><name pos:start="108:75" pos:end="108:75">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="112:13" pos:end="112:66"><expr pos:start="112:13" pos:end="112:65"><call pos:start="112:13" pos:end="112:65"><name pos:start="112:13" pos:end="112:22">WRAP_PLANE</name><argument_list pos:start="112:23" pos:end="112:65">(<argument pos:start="112:24" pos:end="112:36"><expr pos:start="112:24" pos:end="112:36"><name pos:start="112:24" pos:end="112:36"><name pos:start="112:24" pos:end="112:28">frame</name><operator pos:start="112:29" pos:end="112:30">-&gt;</operator><name pos:start="112:31" pos:end="112:33">buf</name><index pos:start="112:34" pos:end="112:36">[<expr pos:start="112:35" pos:end="112:35"><name pos:start="112:35" pos:end="112:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="112:39" pos:end="112:52"><expr pos:start="112:39" pos:end="112:52"><name pos:start="112:39" pos:end="112:52"><name pos:start="112:39" pos:end="112:43">frame</name><operator pos:start="112:44" pos:end="112:45">-&gt;</operator><name pos:start="112:46" pos:end="112:49">data</name><index pos:start="112:50" pos:end="112:52">[<expr pos:start="112:51" pos:end="112:51"><name pos:start="112:51" pos:end="112:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="112:55" pos:end="112:64"><expr pos:start="112:55" pos:end="112:64"><name pos:start="112:55" pos:end="112:64">plane_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="116:7" pos:end="162:5">else <block pos:start="116:12" pos:end="162:5">{<block_content pos:start="118:9" pos:end="160:43">

        <decl_stmt pos:start="118:9" pos:end="118:60"><decl pos:start="118:9" pos:end="118:59"><type pos:start="118:9" pos:end="118:11"><name pos:start="118:9" pos:end="118:11">int</name></type> <name pos:start="118:13" pos:end="118:18">planar</name> <init pos:start="118:20" pos:end="118:59">= <expr pos:start="118:22" pos:end="118:59"><call pos:start="118:22" pos:end="118:59"><name pos:start="118:22" pos:end="118:44">av_sample_fmt_is_planar</name><argument_list pos:start="118:45" pos:end="118:59">(<argument pos:start="118:46" pos:end="118:58"><expr pos:start="118:46" pos:end="118:58"><name pos:start="118:46" pos:end="118:58"><name pos:start="118:46" pos:end="118:50">frame</name><operator pos:start="118:51" pos:end="118:52">-&gt;</operator><name pos:start="118:53" pos:end="118:58">format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="120:9" pos:end="120:80"><decl pos:start="120:9" pos:end="120:79"><type pos:start="120:9" pos:end="120:11"><name pos:start="120:9" pos:end="120:11">int</name></type> <name pos:start="120:13" pos:end="120:20">channels</name> <init pos:start="120:22" pos:end="120:79">= <expr pos:start="120:24" pos:end="120:79"><call pos:start="120:24" pos:end="120:79"><name pos:start="120:24" pos:end="120:56">av_get_channel_layout_nb_channels</name><argument_list pos:start="120:57" pos:end="120:79">(<argument pos:start="120:58" pos:end="120:78"><expr pos:start="120:58" pos:end="120:78"><name pos:start="120:58" pos:end="120:78"><name pos:start="120:58" pos:end="120:62">frame</name><operator pos:start="120:63" pos:end="120:64">-&gt;</operator><name pos:start="120:65" pos:end="120:78">channel_layout</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="124:9" pos:end="124:39"><expr pos:start="124:9" pos:end="124:38"><name pos:start="124:9" pos:end="124:14">planes</name> <operator pos:start="124:16" pos:end="124:16">=</operator> <ternary pos:start="124:18" pos:end="124:38"><condition pos:start="124:18" pos:end="124:25"><expr pos:start="124:18" pos:end="124:23"><name pos:start="124:18" pos:end="124:23">planar</name></expr> ?</condition><then pos:start="124:27" pos:end="124:34"> <expr pos:start="124:27" pos:end="124:34"><name pos:start="124:27" pos:end="124:34">channels</name></expr> </then><else pos:start="124:36" pos:end="124:38">: <expr pos:start="124:38" pos:end="124:38"><literal type="number" pos:start="124:38" pos:end="124:38">1</literal></expr></else></ternary></expr>;</expr_stmt>



        <if_stmt pos:start="128:9" pos:end="144:9"><if pos:start="128:9" pos:end="144:9">if <condition pos:start="128:12" pos:end="128:48">(<expr pos:start="128:13" pos:end="128:47"><name pos:start="128:13" pos:end="128:18">planes</name> <operator pos:start="128:20" pos:end="128:20">&gt;</operator> <call pos:start="128:22" pos:end="128:47"><name pos:start="128:22" pos:end="128:35">FF_ARRAY_ELEMS</name><argument_list pos:start="128:36" pos:end="128:47">(<argument pos:start="128:37" pos:end="128:46"><expr pos:start="128:37" pos:end="128:46"><name pos:start="128:37" pos:end="128:46"><name pos:start="128:37" pos:end="128:41">frame</name><operator pos:start="128:42" pos:end="128:43">-&gt;</operator><name pos:start="128:44" pos:end="128:46">buf</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="128:50" pos:end="144:9">{<block_content pos:start="130:13" pos:end="142:13">

            <expr_stmt pos:start="130:13" pos:end="130:73"><expr pos:start="130:13" pos:end="130:72"><name pos:start="130:13" pos:end="130:34"><name pos:start="130:13" pos:end="130:17">frame</name><operator pos:start="130:18" pos:end="130:19">-&gt;</operator><name pos:start="130:20" pos:end="130:34">nb_extended_buf</name></name> <operator pos:start="130:36" pos:end="130:36">=</operator> <name pos:start="130:38" pos:end="130:43">planes</name> <operator pos:start="130:45" pos:end="130:45">-</operator> <call pos:start="130:47" pos:end="130:72"><name pos:start="130:47" pos:end="130:60">FF_ARRAY_ELEMS</name><argument_list pos:start="130:61" pos:end="130:72">(<argument pos:start="130:62" pos:end="130:71"><expr pos:start="130:62" pos:end="130:71"><name pos:start="130:62" pos:end="130:71"><name pos:start="130:62" pos:end="130:66">frame</name><operator pos:start="130:67" pos:end="130:68">-&gt;</operator><name pos:start="130:69" pos:end="130:71">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="132:13" pos:end="134:69"><expr pos:start="132:13" pos:end="134:68"><name pos:start="132:13" pos:end="132:31"><name pos:start="132:13" pos:end="132:17">frame</name><operator pos:start="132:18" pos:end="132:19">-&gt;</operator><name pos:start="132:20" pos:end="132:31">extended_buf</name></name> <operator pos:start="132:33" pos:end="132:33">=</operator> <call pos:start="132:35" pos:end="134:68"><name pos:start="132:35" pos:end="132:44">av_mallocz</name><argument_list pos:start="132:45" pos:end="134:68">(<argument pos:start="132:46" pos:end="134:67"><expr pos:start="132:46" pos:end="134:67"><sizeof pos:start="132:46" pos:end="132:73">sizeof<argument_list pos:start="132:52" pos:end="132:73">(<argument pos:start="132:53" pos:end="132:72"><expr pos:start="132:53" pos:end="132:72"><operator pos:start="132:53" pos:end="132:53">*</operator><name pos:start="132:54" pos:end="132:72"><name pos:start="132:54" pos:end="132:58">frame</name><operator pos:start="132:59" pos:end="132:60">-&gt;</operator><name pos:start="132:61" pos:end="132:72">extended_buf</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="132:75" pos:end="132:75">*</operator>

                                             <name pos:start="134:46" pos:end="134:67"><name pos:start="134:46" pos:end="134:50">frame</name><operator pos:start="134:51" pos:end="134:52">-&gt;</operator><name pos:start="134:53" pos:end="134:67">nb_extended_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="136:13" pos:end="142:13"><if pos:start="136:13" pos:end="142:13">if <condition pos:start="136:16" pos:end="136:37">(<expr pos:start="136:17" pos:end="136:36"><operator pos:start="136:17" pos:end="136:17">!</operator><name pos:start="136:18" pos:end="136:36"><name pos:start="136:18" pos:end="136:22">frame</name><operator pos:start="136:23" pos:end="136:24">-&gt;</operator><name pos:start="136:25" pos:end="136:36">extended_buf</name></name></expr>)</condition> <block pos:start="136:39" pos:end="142:13">{<block_content pos:start="138:17" pos:end="140:26">

                <expr_stmt pos:start="138:17" pos:end="138:38"><expr pos:start="138:17" pos:end="138:37"><name pos:start="138:17" pos:end="138:19">ret</name> <operator pos:start="138:21" pos:end="138:21">=</operator> <call pos:start="138:23" pos:end="138:37"><name pos:start="138:23" pos:end="138:29">AVERROR</name><argument_list pos:start="138:30" pos:end="138:37">(<argument pos:start="138:31" pos:end="138:36"><expr pos:start="138:31" pos:end="138:36"><name pos:start="138:31" pos:end="138:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="140:17" pos:end="140:26">goto <name pos:start="140:22" pos:end="140:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="148:9" pos:end="150:83">for <control pos:start="148:13" pos:end="148:71">(<init pos:start="148:14" pos:end="148:19"><expr pos:start="148:14" pos:end="148:18"><name pos:start="148:14" pos:end="148:14">i</name> <operator pos:start="148:16" pos:end="148:16">=</operator> <literal type="number" pos:start="148:18" pos:end="148:18">0</literal></expr>;</init> <condition pos:start="148:21" pos:end="148:66"><expr pos:start="148:21" pos:end="148:65"><name pos:start="148:21" pos:end="148:21">i</name> <operator pos:start="148:23" pos:end="148:23">&lt;</operator> <call pos:start="148:25" pos:end="148:65"><name pos:start="148:25" pos:end="148:29">FFMIN</name><argument_list pos:start="148:30" pos:end="148:65">(<argument pos:start="148:31" pos:end="148:36"><expr pos:start="148:31" pos:end="148:36"><name pos:start="148:31" pos:end="148:36">planes</name></expr></argument>, <argument pos:start="148:39" pos:end="148:64"><expr pos:start="148:39" pos:end="148:64"><call pos:start="148:39" pos:end="148:64"><name pos:start="148:39" pos:end="148:52">FF_ARRAY_ELEMS</name><argument_list pos:start="148:53" pos:end="148:64">(<argument pos:start="148:54" pos:end="148:63"><expr pos:start="148:54" pos:end="148:63"><name pos:start="148:54" pos:end="148:63"><name pos:start="148:54" pos:end="148:58">frame</name><operator pos:start="148:59" pos:end="148:60">-&gt;</operator><name pos:start="148:61" pos:end="148:63">buf</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="148:68" pos:end="148:70"><expr pos:start="148:68" pos:end="148:70"><name pos:start="148:68" pos:end="148:68">i</name><operator pos:start="148:69" pos:end="148:70">++</operator></expr></incr>)</control><block type="pseudo" pos:start="150:13" pos:end="150:83"><block_content pos:start="150:13" pos:end="150:83">

            <expr_stmt pos:start="150:13" pos:end="150:83"><expr pos:start="150:13" pos:end="150:82"><call pos:start="150:13" pos:end="150:82"><name pos:start="150:13" pos:end="150:22">WRAP_PLANE</name><argument_list pos:start="150:23" pos:end="150:82">(<argument pos:start="150:24" pos:end="150:36"><expr pos:start="150:24" pos:end="150:36"><name pos:start="150:24" pos:end="150:36"><name pos:start="150:24" pos:end="150:28">frame</name><operator pos:start="150:29" pos:end="150:30">-&gt;</operator><name pos:start="150:31" pos:end="150:33">buf</name><index pos:start="150:34" pos:end="150:36">[<expr pos:start="150:35" pos:end="150:35"><name pos:start="150:35" pos:end="150:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="150:39" pos:end="150:61"><expr pos:start="150:39" pos:end="150:61"><name pos:start="150:39" pos:end="150:61"><name pos:start="150:39" pos:end="150:43">frame</name><operator pos:start="150:44" pos:end="150:45">-&gt;</operator><name pos:start="150:46" pos:end="150:58">extended_data</name><index pos:start="150:59" pos:end="150:61">[<expr pos:start="150:60" pos:end="150:60"><name pos:start="150:60" pos:end="150:60">i</name></expr>]</index></name></expr></argument>, <argument pos:start="150:64" pos:end="150:81"><expr pos:start="150:64" pos:end="150:81"><name pos:start="150:64" pos:end="150:81"><name pos:start="150:64" pos:end="150:68">frame</name><operator pos:start="150:69" pos:end="150:70">-&gt;</operator><name pos:start="150:71" pos:end="150:78">linesize</name><index pos:start="150:79" pos:end="150:81">[<expr pos:start="150:80" pos:end="150:80"><literal type="number" pos:start="150:80" pos:end="150:80">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="154:9" pos:end="160:43">for <control pos:start="154:13" pos:end="154:65">(<init pos:start="154:14" pos:end="154:19"><expr pos:start="154:14" pos:end="154:18"><name pos:start="154:14" pos:end="154:14">i</name> <operator pos:start="154:16" pos:end="154:16">=</operator> <literal type="number" pos:start="154:18" pos:end="154:18">0</literal></expr>;</init> <condition pos:start="154:21" pos:end="154:60"><expr pos:start="154:21" pos:end="154:59"><name pos:start="154:21" pos:end="154:21">i</name> <operator pos:start="154:23" pos:end="154:23">&lt;</operator> <name pos:start="154:25" pos:end="154:30">planes</name> <operator pos:start="154:32" pos:end="154:32">-</operator> <call pos:start="154:34" pos:end="154:59"><name pos:start="154:34" pos:end="154:47">FF_ARRAY_ELEMS</name><argument_list pos:start="154:48" pos:end="154:59">(<argument pos:start="154:49" pos:end="154:58"><expr pos:start="154:49" pos:end="154:58"><name pos:start="154:49" pos:end="154:58"><name pos:start="154:49" pos:end="154:53">frame</name><operator pos:start="154:54" pos:end="154:55">-&gt;</operator><name pos:start="154:56" pos:end="154:58">buf</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="154:62" pos:end="154:64"><expr pos:start="154:62" pos:end="154:64"><name pos:start="154:62" pos:end="154:62">i</name><operator pos:start="154:63" pos:end="154:64">++</operator></expr></incr>)</control><block type="pseudo" pos:start="156:13" pos:end="160:43"><block_content pos:start="156:13" pos:end="160:43">

            <expr_stmt pos:start="156:13" pos:end="160:43"><expr pos:start="156:13" pos:end="160:42"><call pos:start="156:13" pos:end="160:42"><name pos:start="156:13" pos:end="156:22">WRAP_PLANE</name><argument_list pos:start="156:23" pos:end="160:42">(<argument pos:start="156:24" pos:end="156:45"><expr pos:start="156:24" pos:end="156:45"><name pos:start="156:24" pos:end="156:45"><name pos:start="156:24" pos:end="156:28">frame</name><operator pos:start="156:29" pos:end="156:30">-&gt;</operator><name pos:start="156:31" pos:end="156:42">extended_buf</name><index pos:start="156:43" pos:end="156:45">[<expr pos:start="156:44" pos:end="156:44"><name pos:start="156:44" pos:end="156:44">i</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="158:24" pos:end="158:75"><expr pos:start="158:24" pos:end="158:75"><name pos:start="158:24" pos:end="158:75"><name pos:start="158:24" pos:end="158:28">frame</name><operator pos:start="158:29" pos:end="158:30">-&gt;</operator><name pos:start="158:31" pos:end="158:43">extended_data</name><index pos:start="158:44" pos:end="158:75">[<expr pos:start="158:45" pos:end="158:74"><name pos:start="158:45" pos:end="158:45">i</name> <operator pos:start="158:47" pos:end="158:47">+</operator> <call pos:start="158:49" pos:end="158:74"><name pos:start="158:49" pos:end="158:62">FF_ARRAY_ELEMS</name><argument_list pos:start="158:63" pos:end="158:74">(<argument pos:start="158:64" pos:end="158:73"><expr pos:start="158:64" pos:end="158:73"><name pos:start="158:64" pos:end="158:73"><name pos:start="158:64" pos:end="158:68">frame</name><operator pos:start="158:69" pos:end="158:70">-&gt;</operator><name pos:start="158:71" pos:end="158:73">buf</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>,

                       <argument pos:start="160:24" pos:end="160:41"><expr pos:start="160:24" pos:end="160:41"><name pos:start="160:24" pos:end="160:41"><name pos:start="160:24" pos:end="160:28">frame</name><operator pos:start="160:29" pos:end="160:30">-&gt;</operator><name pos:start="160:31" pos:end="160:38">linesize</name><index pos:start="160:39" pos:end="160:41">[<expr pos:start="160:40" pos:end="160:40"><literal type="number" pos:start="160:40" pos:end="160:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="166:5" pos:end="166:45"><expr pos:start="166:5" pos:end="166:44"><name pos:start="166:5" pos:end="166:7">ret</name> <operator pos:start="166:9" pos:end="166:9">=</operator> <call pos:start="166:11" pos:end="166:44"><name pos:start="166:11" pos:end="166:32">av_buffersrc_add_frame</name><argument_list pos:start="166:33" pos:end="166:44">(<argument pos:start="166:34" pos:end="166:36"><expr pos:start="166:34" pos:end="166:36"><name pos:start="166:34" pos:end="166:36">ctx</name></expr></argument>, <argument pos:start="166:39" pos:end="166:43"><expr pos:start="166:39" pos:end="166:43"><name pos:start="166:39" pos:end="166:43">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="170:1" pos:end="170:5"><name pos:start="170:1" pos:end="170:4">fail</name>:</label>

    <expr_stmt pos:start="172:5" pos:end="172:32"><expr pos:start="172:5" pos:end="172:31"><call pos:start="172:5" pos:end="172:31"><name pos:start="172:5" pos:end="172:19">av_buffer_unref</name><argument_list pos:start="172:20" pos:end="172:31">(<argument pos:start="172:21" pos:end="172:30"><expr pos:start="172:21" pos:end="172:30"><operator pos:start="172:21" pos:end="172:21">&amp;</operator><name pos:start="172:22" pos:end="172:30">dummy_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="174:5" pos:end="174:26"><expr pos:start="174:5" pos:end="174:25"><call pos:start="174:5" pos:end="174:25"><name pos:start="174:5" pos:end="174:17">av_frame_free</name><argument_list pos:start="174:18" pos:end="174:25">(<argument pos:start="174:19" pos:end="174:24"><expr pos:start="174:19" pos:end="174:24"><operator pos:start="174:19" pos:end="174:19">&amp;</operator><name pos:start="174:20" pos:end="174:24">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="178:5" pos:end="178:15">return <expr pos:start="178:12" pos:end="178:14"><name pos:start="178:12" pos:end="178:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
