<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19909.c" pos:tabs="8"><function pos:start="1:1" pos:end="280:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">parse_pixel_format</name><parameter_list pos:start="1:30" pos:end="1:52">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:46"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="280:13">{<block_content pos:start="3:5" pos:end="280:13">
    <decl_stmt pos:start="3:5" pos:end="3:39"><decl pos:start="3:5" pos:end="3:38"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">DDSContext</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:19">ctx</name> <init pos:start="3:21" pos:end="3:38">= <expr pos:start="3:23" pos:end="3:38"><name pos:start="3:23" pos:end="3:38"><name pos:start="3:23" pos:end="3:27">avctx</name><operator pos:start="3:28" pos:end="3:29">-&gt;</operator><name pos:start="3:30" pos:end="3:38">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:36"><decl pos:start="4:5" pos:end="4:35"><type pos:start="4:5" pos:end="4:20"><name pos:start="4:5" pos:end="4:18">GetByteContext</name> <modifier pos:start="4:20" pos:end="4:20">*</modifier></type><name pos:start="4:21" pos:end="4:23">gbc</name> <init pos:start="4:25" pos:end="4:35">= <expr pos:start="4:27" pos:end="4:35"><operator pos:start="4:27" pos:end="4:27">&amp;</operator><name pos:start="4:28" pos:end="4:35"><name pos:start="4:28" pos:end="4:30">ctx</name><operator pos:start="4:31" pos:end="4:32">-&gt;</operator><name pos:start="4:33" pos:end="4:35">gbc</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:16"><name pos:start="5:10" pos:end="5:12">buf</name><index pos:start="5:13" pos:end="5:16">[<expr pos:start="5:14" pos:end="5:15"><literal type="number" pos:start="5:14" pos:end="5:15">32</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:37"><decl pos:start="6:5" pos:end="6:18"><type pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:12">uint32_t</name></type> <name pos:start="6:14" pos:end="6:18">flags</name></decl>, <decl pos:start="6:21" pos:end="6:26"><type ref="prev" pos:start="6:5" pos:end="6:12"/><name pos:start="6:21" pos:end="6:26">fourcc</name></decl>, <decl pos:start="6:29" pos:end="6:36"><type ref="prev" pos:start="6:5" pos:end="6:12"/><name pos:start="6:29" pos:end="6:36">gimp_tag</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:8">enum</name> <name pos:start="7:10" pos:end="7:22">DDSDXGIFormat</name></name></type> <name pos:start="7:24" pos:end="7:27">dxgi</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:30"><decl pos:start="8:5" pos:end="8:12"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:12">size</name></decl>, <decl pos:start="8:15" pos:end="8:17"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:15" pos:end="8:17">bpp</name></decl>, <decl pos:start="8:20" pos:end="8:20"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:20" pos:end="8:20">r</name></decl>, <decl pos:start="8:23" pos:end="8:23"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:23" pos:end="8:23">g</name></decl>, <decl pos:start="8:26" pos:end="8:26"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:26" pos:end="8:26">b</name></decl>, <decl pos:start="8:29" pos:end="8:29"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:29" pos:end="8:29">a</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:71"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">alpha_exponent</name></decl>, <decl pos:start="9:25" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:37">ycocg_classic</name></decl>, <decl pos:start="9:40" pos:end="9:51"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:40" pos:end="9:51">ycocg_scaled</name></decl>, <decl pos:start="9:54" pos:end="9:63"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:54" pos:end="9:63">normal_map</name></decl>, <decl pos:start="9:66" pos:end="9:70"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:66" pos:end="9:70">array</name></decl>;</decl_stmt>
    <comment type="block" pos:start="10:5" pos:end="10:73">/* Alternative DDS implementations use reserved1 as custom header. */</comment>
    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><call pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:20">bytestream2_skip</name><argument_list pos:start="11:21" pos:end="11:32">(<argument pos:start="11:22" pos:end="11:24"><expr pos:start="11:22" pos:end="11:24"><name pos:start="11:22" pos:end="11:24">gbc</name></expr></argument>, <argument pos:start="11:27" pos:end="11:31"><expr pos:start="11:27" pos:end="11:31"><literal type="number" pos:start="11:27" pos:end="11:27">4</literal> <operator pos:start="11:29" pos:end="11:29">*</operator> <literal type="number" pos:start="11:31" pos:end="11:31">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:41"><expr pos:start="12:5" pos:end="12:40"><name pos:start="12:5" pos:end="12:12">gimp_tag</name> <operator pos:start="12:14" pos:end="12:14">=</operator> <call pos:start="12:16" pos:end="12:40"><name pos:start="12:16" pos:end="12:35">bytestream2_get_le32</name><argument_list pos:start="12:36" pos:end="12:40">(<argument pos:start="12:37" pos:end="12:39"><expr pos:start="12:37" pos:end="12:39"><name pos:start="12:37" pos:end="12:39">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:59"><expr pos:start="13:5" pos:end="13:58"><name pos:start="13:5" pos:end="13:18">alpha_exponent</name> <operator pos:start="13:20" pos:end="13:20">=</operator> <name pos:start="13:22" pos:end="13:29">gimp_tag</name> <operator pos:start="13:31" pos:end="13:32">==</operator> <call pos:start="13:34" pos:end="13:58"><name pos:start="13:34" pos:end="13:38">MKTAG</name><argument_list pos:start="13:39" pos:end="13:58">(<argument pos:start="13:40" pos:end="13:42"><expr pos:start="13:40" pos:end="13:42"><literal type="char" pos:start="13:40" pos:end="13:42">'A'</literal></expr></argument>, <argument pos:start="13:45" pos:end="13:47"><expr pos:start="13:45" pos:end="13:47"><literal type="char" pos:start="13:45" pos:end="13:47">'E'</literal></expr></argument>, <argument pos:start="13:50" pos:end="13:52"><expr pos:start="13:50" pos:end="13:52"><literal type="char" pos:start="13:50" pos:end="13:52">'X'</literal></expr></argument>, <argument pos:start="13:55" pos:end="13:57"><expr pos:start="13:55" pos:end="13:57"><literal type="char" pos:start="13:55" pos:end="13:57">'P'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:59"><expr pos:start="14:5" pos:end="14:58"><name pos:start="14:5" pos:end="14:17">ycocg_classic</name>  <operator pos:start="14:20" pos:end="14:20">=</operator> <name pos:start="14:22" pos:end="14:29">gimp_tag</name> <operator pos:start="14:31" pos:end="14:32">==</operator> <call pos:start="14:34" pos:end="14:58"><name pos:start="14:34" pos:end="14:38">MKTAG</name><argument_list pos:start="14:39" pos:end="14:58">(<argument pos:start="14:40" pos:end="14:42"><expr pos:start="14:40" pos:end="14:42"><literal type="char" pos:start="14:40" pos:end="14:42">'Y'</literal></expr></argument>, <argument pos:start="14:45" pos:end="14:47"><expr pos:start="14:45" pos:end="14:47"><literal type="char" pos:start="14:45" pos:end="14:47">'C'</literal></expr></argument>, <argument pos:start="14:50" pos:end="14:52"><expr pos:start="14:50" pos:end="14:52"><literal type="char" pos:start="14:50" pos:end="14:52">'G'</literal></expr></argument>, <argument pos:start="14:55" pos:end="14:57"><expr pos:start="14:55" pos:end="14:57"><literal type="char" pos:start="14:55" pos:end="14:57">'1'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:59"><expr pos:start="15:5" pos:end="15:58"><name pos:start="15:5" pos:end="15:16">ycocg_scaled</name>   <operator pos:start="15:20" pos:end="15:20">=</operator> <name pos:start="15:22" pos:end="15:29">gimp_tag</name> <operator pos:start="15:31" pos:end="15:32">==</operator> <call pos:start="15:34" pos:end="15:58"><name pos:start="15:34" pos:end="15:38">MKTAG</name><argument_list pos:start="15:39" pos:end="15:58">(<argument pos:start="15:40" pos:end="15:42"><expr pos:start="15:40" pos:end="15:42"><literal type="char" pos:start="15:40" pos:end="15:42">'Y'</literal></expr></argument>, <argument pos:start="15:45" pos:end="15:47"><expr pos:start="15:45" pos:end="15:47"><literal type="char" pos:start="15:45" pos:end="15:47">'C'</literal></expr></argument>, <argument pos:start="15:50" pos:end="15:52"><expr pos:start="15:50" pos:end="15:52"><literal type="char" pos:start="15:50" pos:end="15:52">'G'</literal></expr></argument>, <argument pos:start="15:55" pos:end="15:57"><expr pos:start="15:55" pos:end="15:57"><literal type="char" pos:start="15:55" pos:end="15:57">'2'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:33"><expr pos:start="16:5" pos:end="16:32"><call pos:start="16:5" pos:end="16:32"><name pos:start="16:5" pos:end="16:20">bytestream2_skip</name><argument_list pos:start="16:21" pos:end="16:32">(<argument pos:start="16:22" pos:end="16:24"><expr pos:start="16:22" pos:end="16:24"><name pos:start="16:22" pos:end="16:24">gbc</name></expr></argument>, <argument pos:start="16:27" pos:end="16:31"><expr pos:start="16:27" pos:end="16:31"><literal type="number" pos:start="16:27" pos:end="16:27">4</literal> <operator pos:start="16:29" pos:end="16:29">*</operator> <literal type="number" pos:start="16:31" pos:end="16:31">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="17:5" pos:end="17:35">/* Now the real DDPF starts. */</comment>
    <expr_stmt pos:start="18:5" pos:end="18:37"><expr pos:start="18:5" pos:end="18:36"><name pos:start="18:5" pos:end="18:8">size</name> <operator pos:start="18:10" pos:end="18:10">=</operator> <call pos:start="18:12" pos:end="18:36"><name pos:start="18:12" pos:end="18:31">bytestream2_get_le32</name><argument_list pos:start="18:32" pos:end="18:36">(<argument pos:start="18:33" pos:end="18:35"><expr pos:start="18:33" pos:end="18:35"><name pos:start="18:33" pos:end="18:35">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="19:5" pos:end="280:13"><if pos:start="19:5" pos:end="280:13">if <condition pos:start="19:8" pos:end="19:19">(<expr pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:12">size</name> <operator pos:start="19:14" pos:end="19:15">!=</operator> <literal type="number" pos:start="19:17" pos:end="19:18">32</literal></expr>)</condition> <block pos:start="19:21" pos:end="280:13">{<block_content pos:start="20:9" pos:end="280:13">
        <expr_stmt pos:start="20:9" pos:end="20:79"><expr pos:start="20:9" pos:end="20:78"><call pos:start="20:9" pos:end="20:78"><name pos:start="20:9" pos:end="20:14">av_log</name><argument_list pos:start="20:15" pos:end="20:78">(<argument pos:start="20:16" pos:end="20:20"><expr pos:start="20:16" pos:end="20:20"><name pos:start="20:16" pos:end="20:20">avctx</name></expr></argument>, <argument pos:start="20:23" pos:end="20:34"><expr pos:start="20:23" pos:end="20:34"><name pos:start="20:23" pos:end="20:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="20:37" pos:end="20:71"><expr pos:start="20:37" pos:end="20:71"><literal type="string" pos:start="20:37" pos:end="20:71">"Invalid pixel format header %d.\n"</literal></expr></argument>, <argument pos:start="20:74" pos:end="20:77"><expr pos:start="20:74" pos:end="20:77"><name pos:start="20:74" pos:end="20:77">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="21:9" pos:end="21:35">return <expr pos:start="21:16" pos:end="21:34"><name pos:start="21:16" pos:end="21:34">AVERROR_INVALIDDATA</name></expr>;</return>
    <expr_stmt pos:start="22:5" pos:end="22:38"><expr pos:start="22:5" pos:end="22:37"><name pos:start="22:5" pos:end="22:9">flags</name> <operator pos:start="22:11" pos:end="22:11">=</operator> <call pos:start="22:13" pos:end="22:37"><name pos:start="22:13" pos:end="22:32">bytestream2_get_le32</name><argument_list pos:start="22:33" pos:end="22:37">(<argument pos:start="22:34" pos:end="22:36"><expr pos:start="22:34" pos:end="22:36"><name pos:start="22:34" pos:end="22:36">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:7">ctx</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:19">compressed</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:27">flags</name> <operator pos:start="23:29" pos:end="23:29">&amp;</operator> <name pos:start="23:31" pos:end="23:41">DDPF_FOURCC</name></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:43"><expr pos:start="24:5" pos:end="24:42"><name pos:start="24:5" pos:end="24:17"><name pos:start="24:5" pos:end="24:7">ctx</name><operator pos:start="24:8" pos:end="24:9">-&gt;</operator><name pos:start="24:10" pos:end="24:17">paletted</name></name>   <operator pos:start="24:21" pos:end="24:21">=</operator> <name pos:start="24:23" pos:end="24:27">flags</name> <operator pos:start="24:29" pos:end="24:29">&amp;</operator> <name pos:start="24:31" pos:end="24:42">DDPF_PALETTE</name></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:14">normal_map</name>      <operator pos:start="25:21" pos:end="25:21">=</operator> <name pos:start="25:23" pos:end="25:27">flags</name> <operator pos:start="25:29" pos:end="25:29">&amp;</operator> <name pos:start="25:31" pos:end="25:44">DDPF_NORMALMAP</name></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:39"><expr pos:start="26:5" pos:end="26:38"><name pos:start="26:5" pos:end="26:10">fourcc</name> <operator pos:start="26:12" pos:end="26:12">=</operator> <call pos:start="26:14" pos:end="26:38"><name pos:start="26:14" pos:end="26:33">bytestream2_get_le32</name><argument_list pos:start="26:34" pos:end="26:38">(<argument pos:start="26:35" pos:end="26:37"><expr pos:start="26:35" pos:end="26:37"><name pos:start="26:35" pos:end="26:37">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:7">bpp</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:35"><name pos:start="27:11" pos:end="27:30">bytestream2_get_le32</name><argument_list pos:start="27:31" pos:end="27:35">(<argument pos:start="27:32" pos:end="27:34"><expr pos:start="27:32" pos:end="27:34"><name pos:start="27:32" pos:end="27:34">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="27:38" pos:end="27:51">// rgbbitcount</comment>
    <expr_stmt pos:start="28:5" pos:end="28:36"><expr pos:start="28:5" pos:end="28:35"><name pos:start="28:5" pos:end="28:5">r</name>   <operator pos:start="28:9" pos:end="28:9">=</operator> <call pos:start="28:11" pos:end="28:35"><name pos:start="28:11" pos:end="28:30">bytestream2_get_le32</name><argument_list pos:start="28:31" pos:end="28:35">(<argument pos:start="28:32" pos:end="28:34"><expr pos:start="28:32" pos:end="28:34"><name pos:start="28:32" pos:end="28:34">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="28:38" pos:end="28:48">// rbitmask</comment>
    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:5">g</name>   <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:35"><name pos:start="29:11" pos:end="29:30">bytestream2_get_le32</name><argument_list pos:start="29:31" pos:end="29:35">(<argument pos:start="29:32" pos:end="29:34"><expr pos:start="29:32" pos:end="29:34"><name pos:start="29:32" pos:end="29:34">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="29:38" pos:end="29:48">// gbitmask</comment>
    <expr_stmt pos:start="30:5" pos:end="30:36"><expr pos:start="30:5" pos:end="30:35"><name pos:start="30:5" pos:end="30:5">b</name>   <operator pos:start="30:9" pos:end="30:9">=</operator> <call pos:start="30:11" pos:end="30:35"><name pos:start="30:11" pos:end="30:30">bytestream2_get_le32</name><argument_list pos:start="30:31" pos:end="30:35">(<argument pos:start="30:32" pos:end="30:34"><expr pos:start="30:32" pos:end="30:34"><name pos:start="30:32" pos:end="30:34">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="30:38" pos:end="30:48">// bbitmask</comment>
    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:5">a</name>   <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:35"><name pos:start="31:11" pos:end="31:30">bytestream2_get_le32</name><argument_list pos:start="31:31" pos:end="31:35">(<argument pos:start="31:32" pos:end="31:34"><expr pos:start="31:32" pos:end="31:34"><name pos:start="31:32" pos:end="31:34">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="31:38" pos:end="31:48">// abitmask</comment>
    <expr_stmt pos:start="32:5" pos:end="32:29"><expr pos:start="32:5" pos:end="32:28"><call pos:start="32:5" pos:end="32:28"><name pos:start="32:5" pos:end="32:20">bytestream2_skip</name><argument_list pos:start="32:21" pos:end="32:28">(<argument pos:start="32:22" pos:end="32:24"><expr pos:start="32:22" pos:end="32:24"><name pos:start="32:22" pos:end="32:24">gbc</name></expr></argument>, <argument pos:start="32:27" pos:end="32:27"><expr pos:start="32:27" pos:end="32:27"><literal type="number" pos:start="32:27" pos:end="32:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="32:31" pos:end="32:37">// caps</comment>
    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><call pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:20">bytestream2_skip</name><argument_list pos:start="33:21" pos:end="33:28">(<argument pos:start="33:22" pos:end="33:24"><expr pos:start="33:22" pos:end="33:24"><name pos:start="33:22" pos:end="33:24">gbc</name></expr></argument>, <argument pos:start="33:27" pos:end="33:27"><expr pos:start="33:27" pos:end="33:27"><literal type="number" pos:start="33:27" pos:end="33:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="33:31" pos:end="33:38">// caps2</comment>
    <expr_stmt pos:start="34:5" pos:end="34:29"><expr pos:start="34:5" pos:end="34:28"><call pos:start="34:5" pos:end="34:28"><name pos:start="34:5" pos:end="34:20">bytestream2_skip</name><argument_list pos:start="34:21" pos:end="34:28">(<argument pos:start="34:22" pos:end="34:24"><expr pos:start="34:22" pos:end="34:24"><name pos:start="34:22" pos:end="34:24">gbc</name></expr></argument>, <argument pos:start="34:27" pos:end="34:27"><expr pos:start="34:27" pos:end="34:27"><literal type="number" pos:start="34:27" pos:end="34:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="34:31" pos:end="34:38">// caps3</comment>
    <expr_stmt pos:start="35:5" pos:end="35:29"><expr pos:start="35:5" pos:end="35:28"><call pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:20">bytestream2_skip</name><argument_list pos:start="35:21" pos:end="35:28">(<argument pos:start="35:22" pos:end="35:24"><expr pos:start="35:22" pos:end="35:24"><name pos:start="35:22" pos:end="35:24">gbc</name></expr></argument>, <argument pos:start="35:27" pos:end="35:27"><expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="35:31" pos:end="35:38">// caps4</comment>
    <expr_stmt pos:start="36:5" pos:end="36:29"><expr pos:start="36:5" pos:end="36:28"><call pos:start="36:5" pos:end="36:28"><name pos:start="36:5" pos:end="36:20">bytestream2_skip</name><argument_list pos:start="36:21" pos:end="36:28">(<argument pos:start="36:22" pos:end="36:24"><expr pos:start="36:22" pos:end="36:24"><name pos:start="36:22" pos:end="36:24">gbc</name></expr></argument>, <argument pos:start="36:27" pos:end="36:27"><expr pos:start="36:27" pos:end="36:27"><literal type="number" pos:start="36:27" pos:end="36:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="36:31" pos:end="36:42">// reserved2</comment>
    <expr_stmt pos:start="37:5" pos:end="37:54"><expr pos:start="37:5" pos:end="37:53"><call pos:start="37:5" pos:end="37:53"><name pos:start="37:5" pos:end="37:27">av_get_codec_tag_string</name><argument_list pos:start="37:28" pos:end="37:53">(<argument pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:31">buf</name></expr></argument>, <argument pos:start="37:34" pos:end="37:44"><expr pos:start="37:34" pos:end="37:44"><sizeof pos:start="37:34" pos:end="37:44">sizeof<argument_list pos:start="37:40" pos:end="37:44">(<argument pos:start="37:41" pos:end="37:43"><expr pos:start="37:41" pos:end="37:43"><name pos:start="37:41" pos:end="37:43">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="37:47" pos:end="37:52"><expr pos:start="37:47" pos:end="37:52"><name pos:start="37:47" pos:end="37:52">fourcc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="39:66"><expr pos:start="38:5" pos:end="39:65"><call pos:start="38:5" pos:end="39:65"><name pos:start="38:5" pos:end="38:10">av_log</name><argument_list pos:start="38:11" pos:end="39:65">(<argument pos:start="38:12" pos:end="38:16"><expr pos:start="38:12" pos:end="38:16"><name pos:start="38:12" pos:end="38:16">avctx</name></expr></argument>, <argument pos:start="38:19" pos:end="38:32"><expr pos:start="38:19" pos:end="38:32"><name pos:start="38:19" pos:end="38:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="38:35" pos:end="39:42"><expr pos:start="38:35" pos:end="39:42"><literal type="string" pos:start="38:35" pos:end="38:53">"fourcc %s bpp %d "</literal>
           <literal type="string" pos:start="39:12" pos:end="39:42">"r 0x%x g 0x%x b 0x%x a 0x%x\n"</literal></expr></argument>, <argument pos:start="39:45" pos:end="39:47"><expr pos:start="39:45" pos:end="39:47"><name pos:start="39:45" pos:end="39:47">buf</name></expr></argument>, <argument pos:start="39:50" pos:end="39:52"><expr pos:start="39:50" pos:end="39:52"><name pos:start="39:50" pos:end="39:52">bpp</name></expr></argument>, <argument pos:start="39:55" pos:end="39:55"><expr pos:start="39:55" pos:end="39:55"><name pos:start="39:55" pos:end="39:55">r</name></expr></argument>, <argument pos:start="39:58" pos:end="39:58"><expr pos:start="39:58" pos:end="39:58"><name pos:start="39:58" pos:end="39:58">g</name></expr></argument>, <argument pos:start="39:61" pos:end="39:61"><expr pos:start="39:61" pos:end="39:61"><name pos:start="39:61" pos:end="39:61">b</name></expr></argument>, <argument pos:start="39:64" pos:end="39:64"><expr pos:start="39:64" pos:end="39:64"><name pos:start="39:64" pos:end="39:64">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="40:5" pos:end="280:13"><if pos:start="40:5" pos:end="280:13">if <condition pos:start="40:8" pos:end="40:17">(<expr pos:start="40:9" pos:end="40:16"><name pos:start="40:9" pos:end="40:16">gimp_tag</name></expr>)</condition> <block pos:start="40:19" pos:end="280:13">{<block_content pos:start="41:9" pos:end="280:13">
        <expr_stmt pos:start="41:9" pos:end="41:60"><expr pos:start="41:9" pos:end="41:59"><call pos:start="41:9" pos:end="41:59"><name pos:start="41:9" pos:end="41:31">av_get_codec_tag_string</name><argument_list pos:start="41:32" pos:end="41:59">(<argument pos:start="41:33" pos:end="41:35"><expr pos:start="41:33" pos:end="41:35"><name pos:start="41:33" pos:end="41:35">buf</name></expr></argument>, <argument pos:start="41:38" pos:end="41:48"><expr pos:start="41:38" pos:end="41:48"><sizeof pos:start="41:38" pos:end="41:48">sizeof<argument_list pos:start="41:44" pos:end="41:48">(<argument pos:start="41:45" pos:end="41:47"><expr pos:start="41:45" pos:end="41:47"><name pos:start="41:45" pos:end="41:47">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="41:51" pos:end="41:58"><expr pos:start="41:51" pos:end="41:58"><name pos:start="41:51" pos:end="41:58">gimp_tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="42:9" pos:end="42:68"><expr pos:start="42:9" pos:end="42:67"><call pos:start="42:9" pos:end="42:67"><name pos:start="42:9" pos:end="42:14">av_log</name><argument_list pos:start="42:15" pos:end="42:67">(<argument pos:start="42:16" pos:end="42:20"><expr pos:start="42:16" pos:end="42:20"><name pos:start="42:16" pos:end="42:20">avctx</name></expr></argument>, <argument pos:start="42:23" pos:end="42:36"><expr pos:start="42:23" pos:end="42:36"><name pos:start="42:23" pos:end="42:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="42:39" pos:end="42:61"><expr pos:start="42:39" pos:end="42:61"><literal type="string" pos:start="42:39" pos:end="42:61">"and GIMP-DDS tag %s\n"</literal></expr></argument>, <argument pos:start="42:64" pos:end="42:66"><expr pos:start="42:64" pos:end="42:66"><name pos:start="42:64" pos:end="42:66">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="43:5" pos:end="44:41"><if pos:start="43:5" pos:end="44:41">if <condition pos:start="43:8" pos:end="43:24">(<expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:11">ctx</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:23">compressed</name></name></expr>)</condition><block type="pseudo" pos:start="44:9" pos:end="44:41"><block_content pos:start="44:9" pos:end="44:41">
        <expr_stmt pos:start="44:9" pos:end="44:41"><expr pos:start="44:9" pos:end="44:40"><name pos:start="44:9" pos:end="44:22"><name pos:start="44:9" pos:end="44:13">avctx</name><operator pos:start="44:14" pos:end="44:15">-&gt;</operator><name pos:start="44:16" pos:end="44:22">pix_fmt</name></name> <operator pos:start="44:24" pos:end="44:24">=</operator> <name pos:start="44:26" pos:end="44:40">AV_PIX_FMT_RGBA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="45:5" pos:end="280:13"><if pos:start="45:5" pos:end="280:13">if <condition pos:start="45:8" pos:end="45:24">(<expr pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:11">ctx</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:23">compressed</name></name></expr>)</condition> <block pos:start="45:26" pos:end="280:13">{<block_content pos:start="46:9" pos:end="280:13">
        <switch pos:start="46:9" pos:end="280:13">switch <condition pos:start="46:16" pos:end="46:23">(<expr pos:start="46:17" pos:end="46:22"><name pos:start="46:17" pos:end="46:22">fourcc</name></expr>)</condition> <block pos:start="46:25" pos:end="280:13">{<block_content pos:start="47:9" pos:end="280:13">
        <case pos:start="47:9" pos:end="47:39">case <expr pos:start="47:14" pos:end="47:38"><call pos:start="47:14" pos:end="47:38"><name pos:start="47:14" pos:end="47:18">MKTAG</name><argument_list pos:start="47:19" pos:end="47:38">(<argument pos:start="47:20" pos:end="47:22"><expr pos:start="47:20" pos:end="47:22"><literal type="char" pos:start="47:20" pos:end="47:22">'D'</literal></expr></argument>, <argument pos:start="47:25" pos:end="47:27"><expr pos:start="47:25" pos:end="47:27"><literal type="char" pos:start="47:25" pos:end="47:27">'X'</literal></expr></argument>, <argument pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><literal type="char" pos:start="47:30" pos:end="47:32">'T'</literal></expr></argument>, <argument pos:start="47:35" pos:end="47:37"><expr pos:start="47:35" pos:end="47:37"><literal type="char" pos:start="47:35" pos:end="47:37">'1'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <expr_stmt pos:start="48:13" pos:end="48:31"><expr pos:start="48:13" pos:end="48:30"><name pos:start="48:13" pos:end="48:26"><name pos:start="48:13" pos:end="48:15">ctx</name><operator pos:start="48:16" pos:end="48:17">-&gt;</operator><name pos:start="48:18" pos:end="48:26">tex_ratio</name></name> <operator pos:start="48:28" pos:end="48:28">=</operator> <literal type="number" pos:start="48:30" pos:end="48:30">8</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="49:13" pos:end="49:53"><expr pos:start="49:13" pos:end="49:52"><name pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:15">ctx</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:26">tex_funct</name></name> <operator pos:start="49:28" pos:end="49:28">=</operator> <name pos:start="49:30" pos:end="49:52"><name pos:start="49:30" pos:end="49:32">ctx</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:40">texdsp</name><operator pos:start="49:41" pos:end="49:41">.</operator><name pos:start="49:42" pos:end="49:52">dxt1a_block</name></name></expr>;</expr_stmt>
            <break pos:start="50:13" pos:end="50:18">break;</break>
        <case pos:start="51:9" pos:end="51:39">case <expr pos:start="51:14" pos:end="51:38"><call pos:start="51:14" pos:end="51:38"><name pos:start="51:14" pos:end="51:18">MKTAG</name><argument_list pos:start="51:19" pos:end="51:38">(<argument pos:start="51:20" pos:end="51:22"><expr pos:start="51:20" pos:end="51:22"><literal type="char" pos:start="51:20" pos:end="51:22">'D'</literal></expr></argument>, <argument pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><literal type="char" pos:start="51:25" pos:end="51:27">'X'</literal></expr></argument>, <argument pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><literal type="char" pos:start="51:30" pos:end="51:32">'T'</literal></expr></argument>, <argument pos:start="51:35" pos:end="51:37"><expr pos:start="51:35" pos:end="51:37"><literal type="char" pos:start="51:35" pos:end="51:37">'2'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <expr_stmt pos:start="52:13" pos:end="52:32"><expr pos:start="52:13" pos:end="52:31"><name pos:start="52:13" pos:end="52:26"><name pos:start="52:13" pos:end="52:15">ctx</name><operator pos:start="52:16" pos:end="52:17">-&gt;</operator><name pos:start="52:18" pos:end="52:26">tex_ratio</name></name> <operator pos:start="52:28" pos:end="52:28">=</operator> <literal type="number" pos:start="52:30" pos:end="52:31">16</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="53:13" pos:end="53:52"><expr pos:start="53:13" pos:end="53:51"><name pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:15">ctx</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:26">tex_funct</name></name> <operator pos:start="53:28" pos:end="53:28">=</operator> <name pos:start="53:30" pos:end="53:51"><name pos:start="53:30" pos:end="53:32">ctx</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:40">texdsp</name><operator pos:start="53:41" pos:end="53:41">.</operator><name pos:start="53:42" pos:end="53:51">dxt2_block</name></name></expr>;</expr_stmt>
            <break pos:start="54:13" pos:end="54:18">break;</break>
        <case pos:start="55:9" pos:end="55:39">case <expr pos:start="55:14" pos:end="55:38"><call pos:start="55:14" pos:end="55:38"><name pos:start="55:14" pos:end="55:18">MKTAG</name><argument_list pos:start="55:19" pos:end="55:38">(<argument pos:start="55:20" pos:end="55:22"><expr pos:start="55:20" pos:end="55:22"><literal type="char" pos:start="55:20" pos:end="55:22">'D'</literal></expr></argument>, <argument pos:start="55:25" pos:end="55:27"><expr pos:start="55:25" pos:end="55:27"><literal type="char" pos:start="55:25" pos:end="55:27">'X'</literal></expr></argument>, <argument pos:start="55:30" pos:end="55:32"><expr pos:start="55:30" pos:end="55:32"><literal type="char" pos:start="55:30" pos:end="55:32">'T'</literal></expr></argument>, <argument pos:start="55:35" pos:end="55:37"><expr pos:start="55:35" pos:end="55:37"><literal type="char" pos:start="55:35" pos:end="55:37">'3'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <expr_stmt pos:start="56:13" pos:end="56:32"><expr pos:start="56:13" pos:end="56:31"><name pos:start="56:13" pos:end="56:26"><name pos:start="56:13" pos:end="56:15">ctx</name><operator pos:start="56:16" pos:end="56:17">-&gt;</operator><name pos:start="56:18" pos:end="56:26">tex_ratio</name></name> <operator pos:start="56:28" pos:end="56:28">=</operator> <literal type="number" pos:start="56:30" pos:end="56:31">16</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="57:13" pos:end="57:52"><expr pos:start="57:13" pos:end="57:51"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:15">ctx</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:26">tex_funct</name></name> <operator pos:start="57:28" pos:end="57:28">=</operator> <name pos:start="57:30" pos:end="57:51"><name pos:start="57:30" pos:end="57:32">ctx</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:40">texdsp</name><operator pos:start="57:41" pos:end="57:41">.</operator><name pos:start="57:42" pos:end="57:51">dxt3_block</name></name></expr>;</expr_stmt>
            <break pos:start="58:13" pos:end="58:18">break;</break>
        <case pos:start="59:9" pos:end="59:39">case <expr pos:start="59:14" pos:end="59:38"><call pos:start="59:14" pos:end="59:38"><name pos:start="59:14" pos:end="59:18">MKTAG</name><argument_list pos:start="59:19" pos:end="59:38">(<argument pos:start="59:20" pos:end="59:22"><expr pos:start="59:20" pos:end="59:22"><literal type="char" pos:start="59:20" pos:end="59:22">'D'</literal></expr></argument>, <argument pos:start="59:25" pos:end="59:27"><expr pos:start="59:25" pos:end="59:27"><literal type="char" pos:start="59:25" pos:end="59:27">'X'</literal></expr></argument>, <argument pos:start="59:30" pos:end="59:32"><expr pos:start="59:30" pos:end="59:32"><literal type="char" pos:start="59:30" pos:end="59:32">'T'</literal></expr></argument>, <argument pos:start="59:35" pos:end="59:37"><expr pos:start="59:35" pos:end="59:37"><literal type="char" pos:start="59:35" pos:end="59:37">'4'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <expr_stmt pos:start="60:13" pos:end="60:32"><expr pos:start="60:13" pos:end="60:31"><name pos:start="60:13" pos:end="60:26"><name pos:start="60:13" pos:end="60:15">ctx</name><operator pos:start="60:16" pos:end="60:17">-&gt;</operator><name pos:start="60:18" pos:end="60:26">tex_ratio</name></name> <operator pos:start="60:28" pos:end="60:28">=</operator> <literal type="number" pos:start="60:30" pos:end="60:31">16</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="61:13" pos:end="61:52"><expr pos:start="61:13" pos:end="61:51"><name pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:15">ctx</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:26">tex_funct</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:51"><name pos:start="61:30" pos:end="61:32">ctx</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:40">texdsp</name><operator pos:start="61:41" pos:end="61:41">.</operator><name pos:start="61:42" pos:end="61:51">dxt4_block</name></name></expr>;</expr_stmt>
            <break pos:start="62:13" pos:end="62:18">break;</break>
        <case pos:start="63:9" pos:end="63:39">case <expr pos:start="63:14" pos:end="63:38"><call pos:start="63:14" pos:end="63:38"><name pos:start="63:14" pos:end="63:18">MKTAG</name><argument_list pos:start="63:19" pos:end="63:38">(<argument pos:start="63:20" pos:end="63:22"><expr pos:start="63:20" pos:end="63:22"><literal type="char" pos:start="63:20" pos:end="63:22">'D'</literal></expr></argument>, <argument pos:start="63:25" pos:end="63:27"><expr pos:start="63:25" pos:end="63:27"><literal type="char" pos:start="63:25" pos:end="63:27">'X'</literal></expr></argument>, <argument pos:start="63:30" pos:end="63:32"><expr pos:start="63:30" pos:end="63:32"><literal type="char" pos:start="63:30" pos:end="63:32">'T'</literal></expr></argument>, <argument pos:start="63:35" pos:end="63:37"><expr pos:start="63:35" pos:end="63:37"><literal type="char" pos:start="63:35" pos:end="63:37">'5'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <expr_stmt pos:start="64:13" pos:end="64:32"><expr pos:start="64:13" pos:end="64:31"><name pos:start="64:13" pos:end="64:26"><name pos:start="64:13" pos:end="64:15">ctx</name><operator pos:start="64:16" pos:end="64:17">-&gt;</operator><name pos:start="64:18" pos:end="64:26">tex_ratio</name></name> <operator pos:start="64:28" pos:end="64:28">=</operator> <literal type="number" pos:start="64:30" pos:end="64:31">16</literal></expr>;</expr_stmt>
            <if_stmt pos:start="65:13" pos:end="70:56"><if pos:start="65:13" pos:end="66:58">if <condition pos:start="65:16" pos:end="65:29">(<expr pos:start="65:17" pos:end="65:28"><name pos:start="65:17" pos:end="65:28">ycocg_scaled</name></expr>)</condition><block type="pseudo" pos:start="66:17" pos:end="66:58"><block_content pos:start="66:17" pos:end="66:58">
                <expr_stmt pos:start="66:17" pos:end="66:58"><expr pos:start="66:17" pos:end="66:57"><name pos:start="66:17" pos:end="66:30"><name pos:start="66:17" pos:end="66:19">ctx</name><operator pos:start="66:20" pos:end="66:21">-&gt;</operator><name pos:start="66:22" pos:end="66:30">tex_funct</name></name> <operator pos:start="66:32" pos:end="66:32">=</operator> <name pos:start="66:34" pos:end="66:57"><name pos:start="66:34" pos:end="66:36">ctx</name><operator pos:start="66:37" pos:end="66:38">-&gt;</operator><name pos:start="66:39" pos:end="66:44">texdsp</name><operator pos:start="66:45" pos:end="66:45">.</operator><name pos:start="66:46" pos:end="66:57">dxt5ys_block</name></name></expr>;</expr_stmt></block_content></block></if>
            <if type="elseif" pos:start="67:13" pos:end="68:57">else if <condition pos:start="67:21" pos:end="67:35">(<expr pos:start="67:22" pos:end="67:34"><name pos:start="67:22" pos:end="67:34">ycocg_classic</name></expr>)</condition><block type="pseudo" pos:start="68:17" pos:end="68:57"><block_content pos:start="68:17" pos:end="68:57">
                <expr_stmt pos:start="68:17" pos:end="68:57"><expr pos:start="68:17" pos:end="68:56"><name pos:start="68:17" pos:end="68:30"><name pos:start="68:17" pos:end="68:19">ctx</name><operator pos:start="68:20" pos:end="68:21">-&gt;</operator><name pos:start="68:22" pos:end="68:30">tex_funct</name></name> <operator pos:start="68:32" pos:end="68:32">=</operator> <name pos:start="68:34" pos:end="68:56"><name pos:start="68:34" pos:end="68:36">ctx</name><operator pos:start="68:37" pos:end="68:38">-&gt;</operator><name pos:start="68:39" pos:end="68:44">texdsp</name><operator pos:start="68:45" pos:end="68:45">.</operator><name pos:start="68:46" pos:end="68:56">dxt5y_block</name></name></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="69:13" pos:end="70:56">else<block type="pseudo" pos:start="70:17" pos:end="70:56"><block_content pos:start="70:17" pos:end="70:56">
                <expr_stmt pos:start="70:17" pos:end="70:56"><expr pos:start="70:17" pos:end="70:55"><name pos:start="70:17" pos:end="70:30"><name pos:start="70:17" pos:end="70:19">ctx</name><operator pos:start="70:20" pos:end="70:21">-&gt;</operator><name pos:start="70:22" pos:end="70:30">tex_funct</name></name> <operator pos:start="70:32" pos:end="70:32">=</operator> <name pos:start="70:34" pos:end="70:55"><name pos:start="70:34" pos:end="70:36">ctx</name><operator pos:start="70:37" pos:end="70:38">-&gt;</operator><name pos:start="70:39" pos:end="70:44">texdsp</name><operator pos:start="70:45" pos:end="70:45">.</operator><name pos:start="70:46" pos:end="70:55">dxt5_block</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
            <break pos:start="71:13" pos:end="71:18">break;</break>
        <case pos:start="72:9" pos:end="72:39">case <expr pos:start="72:14" pos:end="72:38"><call pos:start="72:14" pos:end="72:38"><name pos:start="72:14" pos:end="72:18">MKTAG</name><argument_list pos:start="72:19" pos:end="72:38">(<argument pos:start="72:20" pos:end="72:22"><expr pos:start="72:20" pos:end="72:22"><literal type="char" pos:start="72:20" pos:end="72:22">'R'</literal></expr></argument>, <argument pos:start="72:25" pos:end="72:27"><expr pos:start="72:25" pos:end="72:27"><literal type="char" pos:start="72:25" pos:end="72:27">'X'</literal></expr></argument>, <argument pos:start="72:30" pos:end="72:32"><expr pos:start="72:30" pos:end="72:32"><literal type="char" pos:start="72:30" pos:end="72:32">'G'</literal></expr></argument>, <argument pos:start="72:35" pos:end="72:37"><expr pos:start="72:35" pos:end="72:37"><literal type="char" pos:start="72:35" pos:end="72:37">'B'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <expr_stmt pos:start="73:13" pos:end="73:32"><expr pos:start="73:13" pos:end="73:31"><name pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:15">ctx</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:26">tex_ratio</name></name> <operator pos:start="73:28" pos:end="73:28">=</operator> <literal type="number" pos:start="73:30" pos:end="73:31">16</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="74:13" pos:end="74:52"><expr pos:start="74:13" pos:end="74:51"><name pos:start="74:13" pos:end="74:26"><name pos:start="74:13" pos:end="74:15">ctx</name><operator pos:start="74:16" pos:end="74:17">-&gt;</operator><name pos:start="74:18" pos:end="74:26">tex_funct</name></name> <operator pos:start="74:28" pos:end="74:28">=</operator> <name pos:start="74:30" pos:end="74:51"><name pos:start="74:30" pos:end="74:32">ctx</name><operator pos:start="74:33" pos:end="74:34">-&gt;</operator><name pos:start="74:35" pos:end="74:40">texdsp</name><operator pos:start="74:41" pos:end="74:41">.</operator><name pos:start="74:42" pos:end="74:51">dxt5_block</name></name></expr>;</expr_stmt>
            <comment type="block" pos:start="75:13" pos:end="76:71">/* This format may be considered as a normal map,
             * but it is handled differently in a separate postproc. */</comment>
            <expr_stmt pos:start="77:13" pos:end="77:45"><expr pos:start="77:13" pos:end="77:44"><name pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:15">ctx</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:25">postproc</name></name> <operator pos:start="77:27" pos:end="77:27">=</operator> <name pos:start="77:29" pos:end="77:44">DDS_SWIZZLE_RXGB</name></expr>;</expr_stmt>
            <expr_stmt pos:start="78:13" pos:end="78:27"><expr pos:start="78:13" pos:end="78:26"><name pos:start="78:13" pos:end="78:22">normal_map</name> <operator pos:start="78:24" pos:end="78:24">=</operator> <literal type="number" pos:start="78:26" pos:end="78:26">0</literal></expr>;</expr_stmt>
            <break pos:start="79:13" pos:end="79:18">break;</break>
        <case pos:start="80:9" pos:end="80:39">case <expr pos:start="80:14" pos:end="80:38"><call pos:start="80:14" pos:end="80:38"><name pos:start="80:14" pos:end="80:18">MKTAG</name><argument_list pos:start="80:19" pos:end="80:38">(<argument pos:start="80:20" pos:end="80:22"><expr pos:start="80:20" pos:end="80:22"><literal type="char" pos:start="80:20" pos:end="80:22">'A'</literal></expr></argument>, <argument pos:start="80:25" pos:end="80:27"><expr pos:start="80:25" pos:end="80:27"><literal type="char" pos:start="80:25" pos:end="80:27">'T'</literal></expr></argument>, <argument pos:start="80:30" pos:end="80:32"><expr pos:start="80:30" pos:end="80:32"><literal type="char" pos:start="80:30" pos:end="80:32">'I'</literal></expr></argument>, <argument pos:start="80:35" pos:end="80:37"><expr pos:start="80:35" pos:end="80:37"><literal type="char" pos:start="80:35" pos:end="80:37">'1'</literal></expr></argument>)</argument_list></call></expr>:</case>
        <case pos:start="81:9" pos:end="81:39">case <expr pos:start="81:14" pos:end="81:38"><call pos:start="81:14" pos:end="81:38"><name pos:start="81:14" pos:end="81:18">MKTAG</name><argument_list pos:start="81:19" pos:end="81:38">(<argument pos:start="81:20" pos:end="81:22"><expr pos:start="81:20" pos:end="81:22"><literal type="char" pos:start="81:20" pos:end="81:22">'B'</literal></expr></argument>, <argument pos:start="81:25" pos:end="81:27"><expr pos:start="81:25" pos:end="81:27"><literal type="char" pos:start="81:25" pos:end="81:27">'C'</literal></expr></argument>, <argument pos:start="81:30" pos:end="81:32"><expr pos:start="81:30" pos:end="81:32"><literal type="char" pos:start="81:30" pos:end="81:32">'4'</literal></expr></argument>, <argument pos:start="81:35" pos:end="81:37"><expr pos:start="81:35" pos:end="81:37"><literal type="char" pos:start="81:35" pos:end="81:37">'U'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <expr_stmt pos:start="82:13" pos:end="82:31"><expr pos:start="82:13" pos:end="82:30"><name pos:start="82:13" pos:end="82:26"><name pos:start="82:13" pos:end="82:15">ctx</name><operator pos:start="82:16" pos:end="82:17">-&gt;</operator><name pos:start="82:18" pos:end="82:26">tex_ratio</name></name> <operator pos:start="82:28" pos:end="82:28">=</operator> <literal type="number" pos:start="82:30" pos:end="82:30">8</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="83:13" pos:end="83:54"><expr pos:start="83:13" pos:end="83:53"><name pos:start="83:13" pos:end="83:26"><name pos:start="83:13" pos:end="83:15">ctx</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:26">tex_funct</name></name> <operator pos:start="83:28" pos:end="83:28">=</operator> <name pos:start="83:30" pos:end="83:53"><name pos:start="83:30" pos:end="83:32">ctx</name><operator pos:start="83:33" pos:end="83:34">-&gt;</operator><name pos:start="83:35" pos:end="83:40">texdsp</name><operator pos:start="83:41" pos:end="83:41">.</operator><name pos:start="83:42" pos:end="83:53">rgtc1u_block</name></name></expr>;</expr_stmt>
            <break pos:start="84:13" pos:end="84:18">break;</break>
        <case pos:start="85:9" pos:end="85:39">case <expr pos:start="85:14" pos:end="85:38"><call pos:start="85:14" pos:end="85:38"><name pos:start="85:14" pos:end="85:18">MKTAG</name><argument_list pos:start="85:19" pos:end="85:38">(<argument pos:start="85:20" pos:end="85:22"><expr pos:start="85:20" pos:end="85:22"><literal type="char" pos:start="85:20" pos:end="85:22">'B'</literal></expr></argument>, <argument pos:start="85:25" pos:end="85:27"><expr pos:start="85:25" pos:end="85:27"><literal type="char" pos:start="85:25" pos:end="85:27">'C'</literal></expr></argument>, <argument pos:start="85:30" pos:end="85:32"><expr pos:start="85:30" pos:end="85:32"><literal type="char" pos:start="85:30" pos:end="85:32">'4'</literal></expr></argument>, <argument pos:start="85:35" pos:end="85:37"><expr pos:start="85:35" pos:end="85:37"><literal type="char" pos:start="85:35" pos:end="85:37">'S'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <expr_stmt pos:start="86:13" pos:end="86:31"><expr pos:start="86:13" pos:end="86:30"><name pos:start="86:13" pos:end="86:26"><name pos:start="86:13" pos:end="86:15">ctx</name><operator pos:start="86:16" pos:end="86:17">-&gt;</operator><name pos:start="86:18" pos:end="86:26">tex_ratio</name></name> <operator pos:start="86:28" pos:end="86:28">=</operator> <literal type="number" pos:start="86:30" pos:end="86:30">8</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="87:13" pos:end="87:54"><expr pos:start="87:13" pos:end="87:53"><name pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:15">ctx</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:26">tex_funct</name></name> <operator pos:start="87:28" pos:end="87:28">=</operator> <name pos:start="87:30" pos:end="87:53"><name pos:start="87:30" pos:end="87:32">ctx</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:40">texdsp</name><operator pos:start="87:41" pos:end="87:41">.</operator><name pos:start="87:42" pos:end="87:53">rgtc1s_block</name></name></expr>;</expr_stmt>
            <break pos:start="88:13" pos:end="88:18">break;</break>
        <case pos:start="89:9" pos:end="89:39">case <expr pos:start="89:14" pos:end="89:38"><call pos:start="89:14" pos:end="89:38"><name pos:start="89:14" pos:end="89:18">MKTAG</name><argument_list pos:start="89:19" pos:end="89:38">(<argument pos:start="89:20" pos:end="89:22"><expr pos:start="89:20" pos:end="89:22"><literal type="char" pos:start="89:20" pos:end="89:22">'A'</literal></expr></argument>, <argument pos:start="89:25" pos:end="89:27"><expr pos:start="89:25" pos:end="89:27"><literal type="char" pos:start="89:25" pos:end="89:27">'T'</literal></expr></argument>, <argument pos:start="89:30" pos:end="89:32"><expr pos:start="89:30" pos:end="89:32"><literal type="char" pos:start="89:30" pos:end="89:32">'I'</literal></expr></argument>, <argument pos:start="89:35" pos:end="89:37"><expr pos:start="89:35" pos:end="89:37"><literal type="char" pos:start="89:35" pos:end="89:37">'2'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <comment type="block" pos:start="90:13" pos:end="90:56">/* RGT2 variant with swapped R and G (3Dc)*/</comment>
            <expr_stmt pos:start="91:13" pos:end="91:32"><expr pos:start="91:13" pos:end="91:31"><name pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:15">ctx</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:26">tex_ratio</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <literal type="number" pos:start="91:30" pos:end="91:31">16</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="92:13" pos:end="92:54"><expr pos:start="92:13" pos:end="92:53"><name pos:start="92:13" pos:end="92:26"><name pos:start="92:13" pos:end="92:15">ctx</name><operator pos:start="92:16" pos:end="92:17">-&gt;</operator><name pos:start="92:18" pos:end="92:26">tex_funct</name></name> <operator pos:start="92:28" pos:end="92:28">=</operator> <name pos:start="92:30" pos:end="92:53"><name pos:start="92:30" pos:end="92:32">ctx</name><operator pos:start="92:33" pos:end="92:34">-&gt;</operator><name pos:start="92:35" pos:end="92:40">texdsp</name><operator pos:start="92:41" pos:end="92:41">.</operator><name pos:start="92:42" pos:end="92:53">dxn3dc_block</name></name></expr>;</expr_stmt>
            <break pos:start="93:13" pos:end="93:18">break;</break>
        <case pos:start="94:9" pos:end="94:39">case <expr pos:start="94:14" pos:end="94:38"><call pos:start="94:14" pos:end="94:38"><name pos:start="94:14" pos:end="94:18">MKTAG</name><argument_list pos:start="94:19" pos:end="94:38">(<argument pos:start="94:20" pos:end="94:22"><expr pos:start="94:20" pos:end="94:22"><literal type="char" pos:start="94:20" pos:end="94:22">'B'</literal></expr></argument>, <argument pos:start="94:25" pos:end="94:27"><expr pos:start="94:25" pos:end="94:27"><literal type="char" pos:start="94:25" pos:end="94:27">'C'</literal></expr></argument>, <argument pos:start="94:30" pos:end="94:32"><expr pos:start="94:30" pos:end="94:32"><literal type="char" pos:start="94:30" pos:end="94:32">'5'</literal></expr></argument>, <argument pos:start="94:35" pos:end="94:37"><expr pos:start="94:35" pos:end="94:37"><literal type="char" pos:start="94:35" pos:end="94:37">'U'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <expr_stmt pos:start="95:13" pos:end="95:32"><expr pos:start="95:13" pos:end="95:31"><name pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:15">ctx</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:26">tex_ratio</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <literal type="number" pos:start="95:30" pos:end="95:31">16</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="96:13" pos:end="96:54"><expr pos:start="96:13" pos:end="96:53"><name pos:start="96:13" pos:end="96:26"><name pos:start="96:13" pos:end="96:15">ctx</name><operator pos:start="96:16" pos:end="96:17">-&gt;</operator><name pos:start="96:18" pos:end="96:26">tex_funct</name></name> <operator pos:start="96:28" pos:end="96:28">=</operator> <name pos:start="96:30" pos:end="96:53"><name pos:start="96:30" pos:end="96:32">ctx</name><operator pos:start="96:33" pos:end="96:34">-&gt;</operator><name pos:start="96:35" pos:end="96:40">texdsp</name><operator pos:start="96:41" pos:end="96:41">.</operator><name pos:start="96:42" pos:end="96:53">rgtc2u_block</name></name></expr>;</expr_stmt>
            <break pos:start="97:13" pos:end="97:18">break;</break>
        <case pos:start="98:9" pos:end="98:39">case <expr pos:start="98:14" pos:end="98:38"><call pos:start="98:14" pos:end="98:38"><name pos:start="98:14" pos:end="98:18">MKTAG</name><argument_list pos:start="98:19" pos:end="98:38">(<argument pos:start="98:20" pos:end="98:22"><expr pos:start="98:20" pos:end="98:22"><literal type="char" pos:start="98:20" pos:end="98:22">'B'</literal></expr></argument>, <argument pos:start="98:25" pos:end="98:27"><expr pos:start="98:25" pos:end="98:27"><literal type="char" pos:start="98:25" pos:end="98:27">'C'</literal></expr></argument>, <argument pos:start="98:30" pos:end="98:32"><expr pos:start="98:30" pos:end="98:32"><literal type="char" pos:start="98:30" pos:end="98:32">'5'</literal></expr></argument>, <argument pos:start="98:35" pos:end="98:37"><expr pos:start="98:35" pos:end="98:37"><literal type="char" pos:start="98:35" pos:end="98:37">'S'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <expr_stmt pos:start="99:13" pos:end="99:32"><expr pos:start="99:13" pos:end="99:31"><name pos:start="99:13" pos:end="99:26"><name pos:start="99:13" pos:end="99:15">ctx</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:26">tex_ratio</name></name> <operator pos:start="99:28" pos:end="99:28">=</operator> <literal type="number" pos:start="99:30" pos:end="99:31">16</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="100:13" pos:end="100:54"><expr pos:start="100:13" pos:end="100:53"><name pos:start="100:13" pos:end="100:26"><name pos:start="100:13" pos:end="100:15">ctx</name><operator pos:start="100:16" pos:end="100:17">-&gt;</operator><name pos:start="100:18" pos:end="100:26">tex_funct</name></name> <operator pos:start="100:28" pos:end="100:28">=</operator> <name pos:start="100:30" pos:end="100:53"><name pos:start="100:30" pos:end="100:32">ctx</name><operator pos:start="100:33" pos:end="100:34">-&gt;</operator><name pos:start="100:35" pos:end="100:40">texdsp</name><operator pos:start="100:41" pos:end="100:41">.</operator><name pos:start="100:42" pos:end="100:53">rgtc2s_block</name></name></expr>;</expr_stmt>
            <break pos:start="101:13" pos:end="101:18">break;</break>
        <case pos:start="102:9" pos:end="102:39">case <expr pos:start="102:14" pos:end="102:38"><call pos:start="102:14" pos:end="102:38"><name pos:start="102:14" pos:end="102:18">MKTAG</name><argument_list pos:start="102:19" pos:end="102:38">(<argument pos:start="102:20" pos:end="102:22"><expr pos:start="102:20" pos:end="102:22"><literal type="char" pos:start="102:20" pos:end="102:22">'U'</literal></expr></argument>, <argument pos:start="102:25" pos:end="102:27"><expr pos:start="102:25" pos:end="102:27"><literal type="char" pos:start="102:25" pos:end="102:27">'Y'</literal></expr></argument>, <argument pos:start="102:30" pos:end="102:32"><expr pos:start="102:30" pos:end="102:32"><literal type="char" pos:start="102:30" pos:end="102:32">'V'</literal></expr></argument>, <argument pos:start="102:35" pos:end="102:37"><expr pos:start="102:35" pos:end="102:37"><literal type="char" pos:start="102:35" pos:end="102:37">'Y'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <expr_stmt pos:start="103:13" pos:end="103:32"><expr pos:start="103:13" pos:end="103:31"><name pos:start="103:13" pos:end="103:27"><name pos:start="103:13" pos:end="103:15">ctx</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:27">compressed</name></name> <operator pos:start="103:29" pos:end="103:29">=</operator> <literal type="number" pos:start="103:31" pos:end="103:31">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="104:13" pos:end="104:48"><expr pos:start="104:13" pos:end="104:47"><name pos:start="104:13" pos:end="104:26"><name pos:start="104:13" pos:end="104:17">avctx</name><operator pos:start="104:18" pos:end="104:19">-&gt;</operator><name pos:start="104:20" pos:end="104:26">pix_fmt</name></name> <operator pos:start="104:28" pos:end="104:28">=</operator> <name pos:start="104:30" pos:end="104:47">AV_PIX_FMT_UYVY422</name></expr>;</expr_stmt>
            <break pos:start="105:13" pos:end="105:18">break;</break>
        <case pos:start="106:9" pos:end="106:39">case <expr pos:start="106:14" pos:end="106:38"><call pos:start="106:14" pos:end="106:38"><name pos:start="106:14" pos:end="106:18">MKTAG</name><argument_list pos:start="106:19" pos:end="106:38">(<argument pos:start="106:20" pos:end="106:22"><expr pos:start="106:20" pos:end="106:22"><literal type="char" pos:start="106:20" pos:end="106:22">'Y'</literal></expr></argument>, <argument pos:start="106:25" pos:end="106:27"><expr pos:start="106:25" pos:end="106:27"><literal type="char" pos:start="106:25" pos:end="106:27">'U'</literal></expr></argument>, <argument pos:start="106:30" pos:end="106:32"><expr pos:start="106:30" pos:end="106:32"><literal type="char" pos:start="106:30" pos:end="106:32">'Y'</literal></expr></argument>, <argument pos:start="106:35" pos:end="106:37"><expr pos:start="106:35" pos:end="106:37"><literal type="char" pos:start="106:35" pos:end="106:37">'2'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <expr_stmt pos:start="107:13" pos:end="107:32"><expr pos:start="107:13" pos:end="107:31"><name pos:start="107:13" pos:end="107:27"><name pos:start="107:13" pos:end="107:15">ctx</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:27">compressed</name></name> <operator pos:start="107:29" pos:end="107:29">=</operator> <literal type="number" pos:start="107:31" pos:end="107:31">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="108:13" pos:end="108:48"><expr pos:start="108:13" pos:end="108:47"><name pos:start="108:13" pos:end="108:26"><name pos:start="108:13" pos:end="108:17">avctx</name><operator pos:start="108:18" pos:end="108:19">-&gt;</operator><name pos:start="108:20" pos:end="108:26">pix_fmt</name></name> <operator pos:start="108:28" pos:end="108:28">=</operator> <name pos:start="108:30" pos:end="108:47">AV_PIX_FMT_YUYV422</name></expr>;</expr_stmt>
            <break pos:start="109:13" pos:end="109:18">break;</break>
        <case pos:start="110:9" pos:end="110:39">case <expr pos:start="110:14" pos:end="110:38"><call pos:start="110:14" pos:end="110:38"><name pos:start="110:14" pos:end="110:18">MKTAG</name><argument_list pos:start="110:19" pos:end="110:38">(<argument pos:start="110:20" pos:end="110:22"><expr pos:start="110:20" pos:end="110:22"><literal type="char" pos:start="110:20" pos:end="110:22">'P'</literal></expr></argument>, <argument pos:start="110:25" pos:end="110:27"><expr pos:start="110:25" pos:end="110:27"><literal type="char" pos:start="110:25" pos:end="110:27">'8'</literal></expr></argument>, <argument pos:start="110:30" pos:end="110:32"><expr pos:start="110:30" pos:end="110:32"><literal type="char" pos:start="110:30" pos:end="110:32">' '</literal></expr></argument>, <argument pos:start="110:35" pos:end="110:37"><expr pos:start="110:35" pos:end="110:37"><literal type="char" pos:start="110:35" pos:end="110:37">' '</literal></expr></argument>)</argument_list></call></expr>:</case>
            <comment type="block" pos:start="111:13" pos:end="111:54">/* ATI Palette8, same as normal palette */</comment>
            <expr_stmt pos:start="112:13" pos:end="112:32"><expr pos:start="112:13" pos:end="112:31"><name pos:start="112:13" pos:end="112:27"><name pos:start="112:13" pos:end="112:15">ctx</name><operator pos:start="112:16" pos:end="112:17">-&gt;</operator><name pos:start="112:18" pos:end="112:27">compressed</name></name> <operator pos:start="112:29" pos:end="112:29">=</operator> <literal type="number" pos:start="112:31" pos:end="112:31">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="113:13" pos:end="113:32"><expr pos:start="113:13" pos:end="113:31"><name pos:start="113:13" pos:end="113:25"><name pos:start="113:13" pos:end="113:15">ctx</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:25">paletted</name></name>   <operator pos:start="113:29" pos:end="113:29">=</operator> <literal type="number" pos:start="113:31" pos:end="113:31">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="114:13" pos:end="114:46"><expr pos:start="114:13" pos:end="114:45"><name pos:start="114:13" pos:end="114:26"><name pos:start="114:13" pos:end="114:17">avctx</name><operator pos:start="114:18" pos:end="114:19">-&gt;</operator><name pos:start="114:20" pos:end="114:26">pix_fmt</name></name>  <operator pos:start="114:29" pos:end="114:29">=</operator> <name pos:start="114:31" pos:end="114:45">AV_PIX_FMT_PAL8</name></expr>;</expr_stmt>
            <break pos:start="115:13" pos:end="115:18">break;</break>
        <case pos:start="116:9" pos:end="116:39">case <expr pos:start="116:14" pos:end="116:38"><call pos:start="116:14" pos:end="116:38"><name pos:start="116:14" pos:end="116:18">MKTAG</name><argument_list pos:start="116:19" pos:end="116:38">(<argument pos:start="116:20" pos:end="116:22"><expr pos:start="116:20" pos:end="116:22"><literal type="char" pos:start="116:20" pos:end="116:22">'D'</literal></expr></argument>, <argument pos:start="116:25" pos:end="116:27"><expr pos:start="116:25" pos:end="116:27"><literal type="char" pos:start="116:25" pos:end="116:27">'X'</literal></expr></argument>, <argument pos:start="116:30" pos:end="116:32"><expr pos:start="116:30" pos:end="116:32"><literal type="char" pos:start="116:30" pos:end="116:32">'1'</literal></expr></argument>, <argument pos:start="116:35" pos:end="116:37"><expr pos:start="116:35" pos:end="116:37"><literal type="char" pos:start="116:35" pos:end="116:37">'0'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <comment type="block" pos:start="117:13" pos:end="117:41">/* DirectX 10 extra header */</comment>
            <expr_stmt pos:start="118:13" pos:end="118:45"><expr pos:start="118:13" pos:end="118:44"><name pos:start="118:13" pos:end="118:16">dxgi</name> <operator pos:start="118:18" pos:end="118:18">=</operator> <call pos:start="118:20" pos:end="118:44"><name pos:start="118:20" pos:end="118:39">bytestream2_get_le32</name><argument_list pos:start="118:40" pos:end="118:44">(<argument pos:start="118:41" pos:end="118:43"><expr pos:start="118:41" pos:end="118:43"><name pos:start="118:41" pos:end="118:43">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="119:13" pos:end="119:37"><expr pos:start="119:13" pos:end="119:36"><call pos:start="119:13" pos:end="119:36"><name pos:start="119:13" pos:end="119:28">bytestream2_skip</name><argument_list pos:start="119:29" pos:end="119:36">(<argument pos:start="119:30" pos:end="119:32"><expr pos:start="119:30" pos:end="119:32"><name pos:start="119:30" pos:end="119:32">gbc</name></expr></argument>, <argument pos:start="119:35" pos:end="119:35"><expr pos:start="119:35" pos:end="119:35"><literal type="number" pos:start="119:35" pos:end="119:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="119:39" pos:end="119:58">// resourceDimension</comment>
            <expr_stmt pos:start="120:13" pos:end="120:37"><expr pos:start="120:13" pos:end="120:36"><call pos:start="120:13" pos:end="120:36"><name pos:start="120:13" pos:end="120:28">bytestream2_skip</name><argument_list pos:start="120:29" pos:end="120:36">(<argument pos:start="120:30" pos:end="120:32"><expr pos:start="120:30" pos:end="120:32"><name pos:start="120:30" pos:end="120:32">gbc</name></expr></argument>, <argument pos:start="120:35" pos:end="120:35"><expr pos:start="120:35" pos:end="120:35"><literal type="number" pos:start="120:35" pos:end="120:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="120:39" pos:end="120:49">// miscFlag</comment>
            <expr_stmt pos:start="121:13" pos:end="121:46"><expr pos:start="121:13" pos:end="121:45"><name pos:start="121:13" pos:end="121:17">array</name> <operator pos:start="121:19" pos:end="121:19">=</operator> <call pos:start="121:21" pos:end="121:45"><name pos:start="121:21" pos:end="121:40">bytestream2_get_le32</name><argument_list pos:start="121:41" pos:end="121:45">(<argument pos:start="121:42" pos:end="121:44"><expr pos:start="121:42" pos:end="121:44"><name pos:start="121:42" pos:end="121:44">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="122:13" pos:end="122:37"><expr pos:start="122:13" pos:end="122:36"><call pos:start="122:13" pos:end="122:36"><name pos:start="122:13" pos:end="122:28">bytestream2_skip</name><argument_list pos:start="122:29" pos:end="122:36">(<argument pos:start="122:30" pos:end="122:32"><expr pos:start="122:30" pos:end="122:32"><name pos:start="122:30" pos:end="122:32">gbc</name></expr></argument>, <argument pos:start="122:35" pos:end="122:35"><expr pos:start="122:35" pos:end="122:35"><literal type="number" pos:start="122:35" pos:end="122:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="122:39" pos:end="122:50">// miscFlag2</comment>
            <if_stmt pos:start="123:13" pos:end="125:69"><if pos:start="123:13" pos:end="125:69">if <condition pos:start="123:16" pos:end="123:27">(<expr pos:start="123:17" pos:end="123:26"><name pos:start="123:17" pos:end="123:21">array</name> <operator pos:start="123:23" pos:end="123:24">!=</operator> <literal type="number" pos:start="123:26" pos:end="123:26">0</literal></expr>)</condition><block type="pseudo" pos:start="124:17" pos:end="125:69"><block_content pos:start="124:17" pos:end="125:69">
                <expr_stmt pos:start="124:17" pos:end="125:69"><expr pos:start="124:17" pos:end="125:68"><call pos:start="124:17" pos:end="125:68"><name pos:start="124:17" pos:end="124:22">av_log</name><argument_list pos:start="124:23" pos:end="125:68">(<argument pos:start="124:24" pos:end="124:28"><expr pos:start="124:24" pos:end="124:28"><name pos:start="124:24" pos:end="124:28">avctx</name></expr></argument>, <argument pos:start="124:31" pos:end="124:44"><expr pos:start="124:31" pos:end="124:44"><name pos:start="124:31" pos:end="124:44">AV_LOG_VERBOSE</name></expr></argument>,
                       <argument pos:start="125:24" pos:end="125:60"><expr pos:start="125:24" pos:end="125:60"><literal type="string" pos:start="125:24" pos:end="125:60">"Found array of size %d (ignored).\n"</literal></expr></argument>, <argument pos:start="125:63" pos:end="125:67"><expr pos:start="125:63" pos:end="125:67"><name pos:start="125:63" pos:end="125:67">array</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <comment type="block" pos:start="126:13" pos:end="126:55">/* Only BC[1-5] are actually compressed. */</comment>
            <expr_stmt pos:start="127:13" pos:end="127:59"><expr pos:start="127:13" pos:end="127:58"><name pos:start="127:13" pos:end="127:27"><name pos:start="127:13" pos:end="127:15">ctx</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:27">compressed</name></name> <operator pos:start="127:29" pos:end="127:29">=</operator> <operator pos:start="127:31" pos:end="127:31">(</operator><name pos:start="127:32" pos:end="127:35">dxgi</name> <operator pos:start="127:37" pos:end="127:38">&gt;=</operator> <literal type="number" pos:start="127:40" pos:end="127:41">70</literal><operator pos:start="127:42" pos:end="127:42">)</operator> <operator pos:start="127:44" pos:end="127:45">&amp;&amp;</operator> <operator pos:start="127:47" pos:end="127:47">(</operator><name pos:start="127:48" pos:end="127:51">dxgi</name> <operator pos:start="127:53" pos:end="127:54">&lt;=</operator> <literal type="number" pos:start="127:56" pos:end="127:57">84</literal><operator pos:start="127:58" pos:end="127:58">)</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="128:13" pos:end="128:69"><expr pos:start="128:13" pos:end="128:68"><call pos:start="128:13" pos:end="128:68"><name pos:start="128:13" pos:end="128:18">av_log</name><argument_list pos:start="128:19" pos:end="128:68">(<argument pos:start="128:20" pos:end="128:24"><expr pos:start="128:20" pos:end="128:24"><name pos:start="128:20" pos:end="128:24">avctx</name></expr></argument>, <argument pos:start="128:27" pos:end="128:40"><expr pos:start="128:27" pos:end="128:40"><name pos:start="128:27" pos:end="128:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="128:43" pos:end="128:61"><expr pos:start="128:43" pos:end="128:61"><literal type="string" pos:start="128:43" pos:end="128:61">"DXGI format %d.\n"</literal></expr></argument>, <argument pos:start="128:64" pos:end="128:67"><expr pos:start="128:64" pos:end="128:67"><name pos:start="128:64" pos:end="128:67">dxgi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <switch pos:start="129:13" pos:end="211:5">switch <condition pos:start="129:20" pos:end="129:25">(<expr pos:start="129:21" pos:end="129:24"><name pos:start="129:21" pos:end="129:24">dxgi</name></expr>)</condition> <block pos:start="129:27" pos:end="211:5">{<block_content pos:start="131:13" pos:end="210:39">
            <comment type="block" pos:start="130:13" pos:end="130:28">/* RGB types. */</comment>
            <case pos:start="131:13" pos:end="131:51">case <expr pos:start="131:18" pos:end="131:50"><name pos:start="131:18" pos:end="131:50">DXGI_FORMAT_R16G16B16A16_TYPELESS</name></expr>:</case>
            <case pos:start="132:13" pos:end="132:48">case <expr pos:start="132:18" pos:end="132:47"><name pos:start="132:18" pos:end="132:47">DXGI_FORMAT_R16G16B16A16_FLOAT</name></expr>:</case>
            <case pos:start="133:13" pos:end="133:48">case <expr pos:start="133:18" pos:end="133:47"><name pos:start="133:18" pos:end="133:47">DXGI_FORMAT_R16G16B16A16_UNORM</name></expr>:</case>
            <case pos:start="134:13" pos:end="134:47">case <expr pos:start="134:18" pos:end="134:46"><name pos:start="134:18" pos:end="134:46">DXGI_FORMAT_R16G16B16A16_UINT</name></expr>:</case>
            <case pos:start="135:13" pos:end="135:48">case <expr pos:start="135:18" pos:end="135:47"><name pos:start="135:18" pos:end="135:47">DXGI_FORMAT_R16G16B16A16_SNORM</name></expr>:</case>
            <case pos:start="136:13" pos:end="136:47">case <expr pos:start="136:18" pos:end="136:46"><name pos:start="136:18" pos:end="136:46">DXGI_FORMAT_R16G16B16A16_SINT</name></expr>:</case>
                <expr_stmt pos:start="137:17" pos:end="137:51"><expr pos:start="137:17" pos:end="137:50"><name pos:start="137:17" pos:end="137:30"><name pos:start="137:17" pos:end="137:21">avctx</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:30">pix_fmt</name></name> <operator pos:start="137:32" pos:end="137:32">=</operator> <name pos:start="137:34" pos:end="137:50">AV_PIX_FMT_BGRA64</name></expr>;</expr_stmt>
                <break pos:start="138:17" pos:end="138:22">break;</break>
            <case pos:start="139:13" pos:end="139:49">case <expr pos:start="139:18" pos:end="139:48"><name pos:start="139:18" pos:end="139:48">DXGI_FORMAT_R8G8B8A8_UNORM_SRGB</name></expr>:</case>
                <expr_stmt pos:start="140:17" pos:end="140:50"><expr pos:start="140:17" pos:end="140:49"><name pos:start="140:17" pos:end="140:33"><name pos:start="140:17" pos:end="140:21">avctx</name><operator pos:start="140:22" pos:end="140:23">-&gt;</operator><name pos:start="140:24" pos:end="140:33">colorspace</name></name> <operator pos:start="140:35" pos:end="140:35">=</operator> <name pos:start="140:37" pos:end="140:49">AVCOL_SPC_RGB</name></expr>;</expr_stmt>
            <case pos:start="141:13" pos:end="141:47">case <expr pos:start="141:18" pos:end="141:46"><name pos:start="141:18" pos:end="141:46">DXGI_FORMAT_R8G8B8A8_TYPELESS</name></expr>:</case>
            <case pos:start="142:13" pos:end="142:44">case <expr pos:start="142:18" pos:end="142:43"><name pos:start="142:18" pos:end="142:43">DXGI_FORMAT_R8G8B8A8_UNORM</name></expr>:</case>
            <case pos:start="143:13" pos:end="143:43">case <expr pos:start="143:18" pos:end="143:42"><name pos:start="143:18" pos:end="143:42">DXGI_FORMAT_R8G8B8A8_UINT</name></expr>:</case>
            <case pos:start="144:13" pos:end="144:44">case <expr pos:start="144:18" pos:end="144:43"><name pos:start="144:18" pos:end="144:43">DXGI_FORMAT_R8G8B8A8_SNORM</name></expr>:</case>
            <case pos:start="145:13" pos:end="145:43">case <expr pos:start="145:18" pos:end="145:42"><name pos:start="145:18" pos:end="145:42">DXGI_FORMAT_R8G8B8A8_SINT</name></expr>:</case>
                <expr_stmt pos:start="146:17" pos:end="146:49"><expr pos:start="146:17" pos:end="146:48"><name pos:start="146:17" pos:end="146:30"><name pos:start="146:17" pos:end="146:21">avctx</name><operator pos:start="146:22" pos:end="146:23">-&gt;</operator><name pos:start="146:24" pos:end="146:30">pix_fmt</name></name> <operator pos:start="146:32" pos:end="146:32">=</operator> <name pos:start="146:34" pos:end="146:48">AV_PIX_FMT_BGRA</name></expr>;</expr_stmt>
                <break pos:start="147:17" pos:end="147:22">break;</break>
            <case pos:start="148:13" pos:end="148:49">case <expr pos:start="148:18" pos:end="148:48"><name pos:start="148:18" pos:end="148:48">DXGI_FORMAT_B8G8R8A8_UNORM_SRGB</name></expr>:</case>
                <expr_stmt pos:start="149:17" pos:end="149:50"><expr pos:start="149:17" pos:end="149:49"><name pos:start="149:17" pos:end="149:33"><name pos:start="149:17" pos:end="149:21">avctx</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:33">colorspace</name></name> <operator pos:start="149:35" pos:end="149:35">=</operator> <name pos:start="149:37" pos:end="149:49">AVCOL_SPC_RGB</name></expr>;</expr_stmt>
            <case pos:start="150:13" pos:end="150:47">case <expr pos:start="150:18" pos:end="150:46"><name pos:start="150:18" pos:end="150:46">DXGI_FORMAT_B8G8R8A8_TYPELESS</name></expr>:</case>
            <case pos:start="151:13" pos:end="151:44">case <expr pos:start="151:18" pos:end="151:43"><name pos:start="151:18" pos:end="151:43">DXGI_FORMAT_B8G8R8A8_UNORM</name></expr>:</case>
                <expr_stmt pos:start="152:17" pos:end="152:49"><expr pos:start="152:17" pos:end="152:48"><name pos:start="152:17" pos:end="152:30"><name pos:start="152:17" pos:end="152:21">avctx</name><operator pos:start="152:22" pos:end="152:23">-&gt;</operator><name pos:start="152:24" pos:end="152:30">pix_fmt</name></name> <operator pos:start="152:32" pos:end="152:32">=</operator> <name pos:start="152:34" pos:end="152:48">AV_PIX_FMT_RGBA</name></expr>;</expr_stmt>
                <break pos:start="153:17" pos:end="153:22">break;</break>
            <case pos:start="154:13" pos:end="154:49">case <expr pos:start="154:18" pos:end="154:48"><name pos:start="154:18" pos:end="154:48">DXGI_FORMAT_B8G8R8X8_UNORM_SRGB</name></expr>:</case>
                <expr_stmt pos:start="155:17" pos:end="155:50"><expr pos:start="155:17" pos:end="155:49"><name pos:start="155:17" pos:end="155:33"><name pos:start="155:17" pos:end="155:21">avctx</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:33">colorspace</name></name> <operator pos:start="155:35" pos:end="155:35">=</operator> <name pos:start="155:37" pos:end="155:49">AVCOL_SPC_RGB</name></expr>;</expr_stmt>
            <case pos:start="156:13" pos:end="156:47">case <expr pos:start="156:18" pos:end="156:46"><name pos:start="156:18" pos:end="156:46">DXGI_FORMAT_B8G8R8X8_TYPELESS</name></expr>:</case>
            <case pos:start="157:13" pos:end="157:44">case <expr pos:start="157:18" pos:end="157:43"><name pos:start="157:18" pos:end="157:43">DXGI_FORMAT_B8G8R8X8_UNORM</name></expr>:</case>
                <expr_stmt pos:start="158:17" pos:end="158:49"><expr pos:start="158:17" pos:end="158:48"><name pos:start="158:17" pos:end="158:30"><name pos:start="158:17" pos:end="158:21">avctx</name><operator pos:start="158:22" pos:end="158:23">-&gt;</operator><name pos:start="158:24" pos:end="158:30">pix_fmt</name></name> <operator pos:start="158:32" pos:end="158:32">=</operator> <name pos:start="158:34" pos:end="158:48">AV_PIX_FMT_RGBA</name></expr>;</expr_stmt> <comment type="line" pos:start="158:51" pos:end="158:59">// opaque</comment>
                <break pos:start="159:17" pos:end="159:22">break;</break>
            <case pos:start="160:13" pos:end="160:42">case <expr pos:start="160:18" pos:end="160:41"><name pos:start="160:18" pos:end="160:41">DXGI_FORMAT_B5G6R5_UNORM</name></expr>:</case>
                <expr_stmt pos:start="161:17" pos:end="161:53"><expr pos:start="161:17" pos:end="161:52"><name pos:start="161:17" pos:end="161:30"><name pos:start="161:17" pos:end="161:21">avctx</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:30">pix_fmt</name></name> <operator pos:start="161:32" pos:end="161:32">=</operator> <name pos:start="161:34" pos:end="161:52">AV_PIX_FMT_RGB565LE</name></expr>;</expr_stmt>
                <break pos:start="162:17" pos:end="162:22">break;</break>
            <comment type="block" pos:start="163:13" pos:end="163:32">/* Texture types. */</comment>
            <case pos:start="164:13" pos:end="164:44">case <expr pos:start="164:18" pos:end="164:43"><name pos:start="164:18" pos:end="164:43">DXGI_FORMAT_BC1_UNORM_SRGB</name></expr>:</case>
                <expr_stmt pos:start="165:17" pos:end="165:50"><expr pos:start="165:17" pos:end="165:49"><name pos:start="165:17" pos:end="165:33"><name pos:start="165:17" pos:end="165:21">avctx</name><operator pos:start="165:22" pos:end="165:23">-&gt;</operator><name pos:start="165:24" pos:end="165:33">colorspace</name></name> <operator pos:start="165:35" pos:end="165:35">=</operator> <name pos:start="165:37" pos:end="165:49">AVCOL_SPC_RGB</name></expr>;</expr_stmt>
            <case pos:start="166:13" pos:end="166:42">case <expr pos:start="166:18" pos:end="166:41"><name pos:start="166:18" pos:end="166:41">DXGI_FORMAT_BC1_TYPELESS</name></expr>:</case>
            <case pos:start="167:13" pos:end="167:39">case <expr pos:start="167:18" pos:end="167:38"><name pos:start="167:18" pos:end="167:38">DXGI_FORMAT_BC1_UNORM</name></expr>:</case>
                <expr_stmt pos:start="168:17" pos:end="168:35"><expr pos:start="168:17" pos:end="168:34"><name pos:start="168:17" pos:end="168:30"><name pos:start="168:17" pos:end="168:19">ctx</name><operator pos:start="168:20" pos:end="168:21">-&gt;</operator><name pos:start="168:22" pos:end="168:30">tex_ratio</name></name> <operator pos:start="168:32" pos:end="168:32">=</operator> <literal type="number" pos:start="168:34" pos:end="168:34">8</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="169:17" pos:end="169:57"><expr pos:start="169:17" pos:end="169:56"><name pos:start="169:17" pos:end="169:30"><name pos:start="169:17" pos:end="169:19">ctx</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:30">tex_funct</name></name> <operator pos:start="169:32" pos:end="169:32">=</operator> <name pos:start="169:34" pos:end="169:56"><name pos:start="169:34" pos:end="169:36">ctx</name><operator pos:start="169:37" pos:end="169:38">-&gt;</operator><name pos:start="169:39" pos:end="169:44">texdsp</name><operator pos:start="169:45" pos:end="169:45">.</operator><name pos:start="169:46" pos:end="169:56">dxt1a_block</name></name></expr>;</expr_stmt>
                <break pos:start="170:17" pos:end="170:22">break;</break>
            <case pos:start="171:13" pos:end="171:44">case <expr pos:start="171:18" pos:end="171:43"><name pos:start="171:18" pos:end="171:43">DXGI_FORMAT_BC2_UNORM_SRGB</name></expr>:</case>
                <expr_stmt pos:start="172:17" pos:end="172:50"><expr pos:start="172:17" pos:end="172:49"><name pos:start="172:17" pos:end="172:33"><name pos:start="172:17" pos:end="172:21">avctx</name><operator pos:start="172:22" pos:end="172:23">-&gt;</operator><name pos:start="172:24" pos:end="172:33">colorspace</name></name> <operator pos:start="172:35" pos:end="172:35">=</operator> <name pos:start="172:37" pos:end="172:49">AVCOL_SPC_RGB</name></expr>;</expr_stmt>
            <case pos:start="173:13" pos:end="173:42">case <expr pos:start="173:18" pos:end="173:41"><name pos:start="173:18" pos:end="173:41">DXGI_FORMAT_BC2_TYPELESS</name></expr>:</case>
            <case pos:start="174:13" pos:end="174:39">case <expr pos:start="174:18" pos:end="174:38"><name pos:start="174:18" pos:end="174:38">DXGI_FORMAT_BC2_UNORM</name></expr>:</case>
                <expr_stmt pos:start="175:17" pos:end="175:36"><expr pos:start="175:17" pos:end="175:35"><name pos:start="175:17" pos:end="175:30"><name pos:start="175:17" pos:end="175:19">ctx</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:30">tex_ratio</name></name> <operator pos:start="175:32" pos:end="175:32">=</operator> <literal type="number" pos:start="175:34" pos:end="175:35">16</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="176:17" pos:end="176:56"><expr pos:start="176:17" pos:end="176:55"><name pos:start="176:17" pos:end="176:30"><name pos:start="176:17" pos:end="176:19">ctx</name><operator pos:start="176:20" pos:end="176:21">-&gt;</operator><name pos:start="176:22" pos:end="176:30">tex_funct</name></name> <operator pos:start="176:32" pos:end="176:32">=</operator> <name pos:start="176:34" pos:end="176:55"><name pos:start="176:34" pos:end="176:36">ctx</name><operator pos:start="176:37" pos:end="176:38">-&gt;</operator><name pos:start="176:39" pos:end="176:44">texdsp</name><operator pos:start="176:45" pos:end="176:45">.</operator><name pos:start="176:46" pos:end="176:55">dxt3_block</name></name></expr>;</expr_stmt>
                <break pos:start="177:17" pos:end="177:22">break;</break>
            <case pos:start="178:13" pos:end="178:44">case <expr pos:start="178:18" pos:end="178:43"><name pos:start="178:18" pos:end="178:43">DXGI_FORMAT_BC3_UNORM_SRGB</name></expr>:</case>
                <expr_stmt pos:start="179:17" pos:end="179:50"><expr pos:start="179:17" pos:end="179:49"><name pos:start="179:17" pos:end="179:33"><name pos:start="179:17" pos:end="179:21">avctx</name><operator pos:start="179:22" pos:end="179:23">-&gt;</operator><name pos:start="179:24" pos:end="179:33">colorspace</name></name> <operator pos:start="179:35" pos:end="179:35">=</operator> <name pos:start="179:37" pos:end="179:49">AVCOL_SPC_RGB</name></expr>;</expr_stmt>
            <case pos:start="180:13" pos:end="180:42">case <expr pos:start="180:18" pos:end="180:41"><name pos:start="180:18" pos:end="180:41">DXGI_FORMAT_BC3_TYPELESS</name></expr>:</case>
            <case pos:start="181:13" pos:end="181:39">case <expr pos:start="181:18" pos:end="181:38"><name pos:start="181:18" pos:end="181:38">DXGI_FORMAT_BC3_UNORM</name></expr>:</case>
                <expr_stmt pos:start="182:17" pos:end="182:36"><expr pos:start="182:17" pos:end="182:35"><name pos:start="182:17" pos:end="182:30"><name pos:start="182:17" pos:end="182:19">ctx</name><operator pos:start="182:20" pos:end="182:21">-&gt;</operator><name pos:start="182:22" pos:end="182:30">tex_ratio</name></name> <operator pos:start="182:32" pos:end="182:32">=</operator> <literal type="number" pos:start="182:34" pos:end="182:35">16</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="183:17" pos:end="183:56"><expr pos:start="183:17" pos:end="183:55"><name pos:start="183:17" pos:end="183:30"><name pos:start="183:17" pos:end="183:19">ctx</name><operator pos:start="183:20" pos:end="183:21">-&gt;</operator><name pos:start="183:22" pos:end="183:30">tex_funct</name></name> <operator pos:start="183:32" pos:end="183:32">=</operator> <name pos:start="183:34" pos:end="183:55"><name pos:start="183:34" pos:end="183:36">ctx</name><operator pos:start="183:37" pos:end="183:38">-&gt;</operator><name pos:start="183:39" pos:end="183:44">texdsp</name><operator pos:start="183:45" pos:end="183:45">.</operator><name pos:start="183:46" pos:end="183:55">dxt5_block</name></name></expr>;</expr_stmt>
                <break pos:start="184:17" pos:end="184:22">break;</break>
            <case pos:start="185:13" pos:end="185:42">case <expr pos:start="185:18" pos:end="185:41"><name pos:start="185:18" pos:end="185:41">DXGI_FORMAT_BC4_TYPELESS</name></expr>:</case>
            <case pos:start="186:13" pos:end="186:39">case <expr pos:start="186:18" pos:end="186:38"><name pos:start="186:18" pos:end="186:38">DXGI_FORMAT_BC4_UNORM</name></expr>:</case>
                <expr_stmt pos:start="187:17" pos:end="187:35"><expr pos:start="187:17" pos:end="187:34"><name pos:start="187:17" pos:end="187:30"><name pos:start="187:17" pos:end="187:19">ctx</name><operator pos:start="187:20" pos:end="187:21">-&gt;</operator><name pos:start="187:22" pos:end="187:30">tex_ratio</name></name> <operator pos:start="187:32" pos:end="187:32">=</operator> <literal type="number" pos:start="187:34" pos:end="187:34">8</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="188:17" pos:end="188:58"><expr pos:start="188:17" pos:end="188:57"><name pos:start="188:17" pos:end="188:30"><name pos:start="188:17" pos:end="188:19">ctx</name><operator pos:start="188:20" pos:end="188:21">-&gt;</operator><name pos:start="188:22" pos:end="188:30">tex_funct</name></name> <operator pos:start="188:32" pos:end="188:32">=</operator> <name pos:start="188:34" pos:end="188:57"><name pos:start="188:34" pos:end="188:36">ctx</name><operator pos:start="188:37" pos:end="188:38">-&gt;</operator><name pos:start="188:39" pos:end="188:44">texdsp</name><operator pos:start="188:45" pos:end="188:45">.</operator><name pos:start="188:46" pos:end="188:57">rgtc1u_block</name></name></expr>;</expr_stmt>
                <break pos:start="189:17" pos:end="189:22">break;</break>
            <case pos:start="190:13" pos:end="190:39">case <expr pos:start="190:18" pos:end="190:38"><name pos:start="190:18" pos:end="190:38">DXGI_FORMAT_BC4_SNORM</name></expr>:</case>
                <expr_stmt pos:start="191:17" pos:end="191:35"><expr pos:start="191:17" pos:end="191:34"><name pos:start="191:17" pos:end="191:30"><name pos:start="191:17" pos:end="191:19">ctx</name><operator pos:start="191:20" pos:end="191:21">-&gt;</operator><name pos:start="191:22" pos:end="191:30">tex_ratio</name></name> <operator pos:start="191:32" pos:end="191:32">=</operator> <literal type="number" pos:start="191:34" pos:end="191:34">8</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="192:17" pos:end="192:58"><expr pos:start="192:17" pos:end="192:57"><name pos:start="192:17" pos:end="192:30"><name pos:start="192:17" pos:end="192:19">ctx</name><operator pos:start="192:20" pos:end="192:21">-&gt;</operator><name pos:start="192:22" pos:end="192:30">tex_funct</name></name> <operator pos:start="192:32" pos:end="192:32">=</operator> <name pos:start="192:34" pos:end="192:57"><name pos:start="192:34" pos:end="192:36">ctx</name><operator pos:start="192:37" pos:end="192:38">-&gt;</operator><name pos:start="192:39" pos:end="192:44">texdsp</name><operator pos:start="192:45" pos:end="192:45">.</operator><name pos:start="192:46" pos:end="192:57">rgtc1s_block</name></name></expr>;</expr_stmt>
                <break pos:start="193:17" pos:end="193:22">break;</break>
            <case pos:start="194:13" pos:end="194:42">case <expr pos:start="194:18" pos:end="194:41"><name pos:start="194:18" pos:end="194:41">DXGI_FORMAT_BC5_TYPELESS</name></expr>:</case>
            <case pos:start="195:13" pos:end="195:39">case <expr pos:start="195:18" pos:end="195:38"><name pos:start="195:18" pos:end="195:38">DXGI_FORMAT_BC5_UNORM</name></expr>:</case>
                <expr_stmt pos:start="196:17" pos:end="196:36"><expr pos:start="196:17" pos:end="196:35"><name pos:start="196:17" pos:end="196:30"><name pos:start="196:17" pos:end="196:19">ctx</name><operator pos:start="196:20" pos:end="196:21">-&gt;</operator><name pos:start="196:22" pos:end="196:30">tex_ratio</name></name> <operator pos:start="196:32" pos:end="196:32">=</operator> <literal type="number" pos:start="196:34" pos:end="196:35">16</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="197:17" pos:end="197:58"><expr pos:start="197:17" pos:end="197:57"><name pos:start="197:17" pos:end="197:30"><name pos:start="197:17" pos:end="197:19">ctx</name><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:30">tex_funct</name></name> <operator pos:start="197:32" pos:end="197:32">=</operator> <name pos:start="197:34" pos:end="197:57"><name pos:start="197:34" pos:end="197:36">ctx</name><operator pos:start="197:37" pos:end="197:38">-&gt;</operator><name pos:start="197:39" pos:end="197:44">texdsp</name><operator pos:start="197:45" pos:end="197:45">.</operator><name pos:start="197:46" pos:end="197:57">rgtc2u_block</name></name></expr>;</expr_stmt>
                <break pos:start="198:17" pos:end="198:22">break;</break>
            <case pos:start="199:13" pos:end="199:39">case <expr pos:start="199:18" pos:end="199:38"><name pos:start="199:18" pos:end="199:38">DXGI_FORMAT_BC5_SNORM</name></expr>:</case>
                <expr_stmt pos:start="200:17" pos:end="200:36"><expr pos:start="200:17" pos:end="200:35"><name pos:start="200:17" pos:end="200:30"><name pos:start="200:17" pos:end="200:19">ctx</name><operator pos:start="200:20" pos:end="200:21">-&gt;</operator><name pos:start="200:22" pos:end="200:30">tex_ratio</name></name> <operator pos:start="200:32" pos:end="200:32">=</operator> <literal type="number" pos:start="200:34" pos:end="200:35">16</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="201:17" pos:end="201:58"><expr pos:start="201:17" pos:end="201:57"><name pos:start="201:17" pos:end="201:30"><name pos:start="201:17" pos:end="201:19">ctx</name><operator pos:start="201:20" pos:end="201:21">-&gt;</operator><name pos:start="201:22" pos:end="201:30">tex_funct</name></name> <operator pos:start="201:32" pos:end="201:32">=</operator> <name pos:start="201:34" pos:end="201:57"><name pos:start="201:34" pos:end="201:36">ctx</name><operator pos:start="201:37" pos:end="201:38">-&gt;</operator><name pos:start="201:39" pos:end="201:44">texdsp</name><operator pos:start="201:45" pos:end="201:45">.</operator><name pos:start="201:46" pos:end="201:57">rgtc2s_block</name></name></expr>;</expr_stmt>
                <break pos:start="202:17" pos:end="202:22">break;</break>
            <default pos:start="203:13" pos:end="203:20">default:</default>
                <expr_stmt pos:start="204:17" pos:end="205:62"><expr pos:start="204:17" pos:end="205:61"><call pos:start="204:17" pos:end="205:61"><name pos:start="204:17" pos:end="204:22">av_log</name><argument_list pos:start="204:23" pos:end="205:61">(<argument pos:start="204:24" pos:end="204:28"><expr pos:start="204:24" pos:end="204:28"><name pos:start="204:24" pos:end="204:28">avctx</name></expr></argument>, <argument pos:start="204:31" pos:end="204:42"><expr pos:start="204:31" pos:end="204:42"><name pos:start="204:31" pos:end="204:42">AV_LOG_ERROR</name></expr></argument>,
                       <argument pos:start="205:24" pos:end="205:54"><expr pos:start="205:24" pos:end="205:54"><literal type="string" pos:start="205:24" pos:end="205:54">"Unsupported DXGI format %d.\n"</literal></expr></argument>, <argument pos:start="205:57" pos:end="205:60"><expr pos:start="205:57" pos:end="205:60"><name pos:start="205:57" pos:end="205:60">dxgi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:start="206:17" pos:end="206:43">return <expr pos:start="206:24" pos:end="206:42"><name pos:start="206:24" pos:end="206:42">AVERROR_INVALIDDATA</name></expr>;</return>
            <break pos:start="207:13" pos:end="207:18">break;</break>
        <default pos:start="208:9" pos:end="208:16">default:</default>
            <expr_stmt pos:start="209:13" pos:end="209:73"><expr pos:start="209:13" pos:end="209:72"><call pos:start="209:13" pos:end="209:72"><name pos:start="209:13" pos:end="209:18">av_log</name><argument_list pos:start="209:19" pos:end="209:72">(<argument pos:start="209:20" pos:end="209:24"><expr pos:start="209:20" pos:end="209:24"><name pos:start="209:20" pos:end="209:24">avctx</name></expr></argument>, <argument pos:start="209:27" pos:end="209:38"><expr pos:start="209:27" pos:end="209:38"><name pos:start="209:27" pos:end="209:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="209:41" pos:end="209:66"><expr pos:start="209:41" pos:end="209:66"><literal type="string" pos:start="209:41" pos:end="209:66">"Unsupported %s fourcc.\n"</literal></expr></argument>, <argument pos:start="209:69" pos:end="209:71"><expr pos:start="209:69" pos:end="209:71"><name pos:start="209:69" pos:end="209:71">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="210:13" pos:end="210:39">return <expr pos:start="210:20" pos:end="210:38"><name pos:start="210:20" pos:end="210:38">AVERROR_INVALIDDATA</name></expr>;</return>
    </block_content>}</block></switch> <if_stmt pos:start="211:7" pos:end="280:13"><if type="elseif" pos:start="211:7" pos:end="280:13">else if <condition pos:start="211:15" pos:end="211:29">(<expr pos:start="211:16" pos:end="211:28"><name pos:start="211:16" pos:end="211:28"><name pos:start="211:16" pos:end="211:18">ctx</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:28">paletted</name></name></expr>)</condition> <block pos:start="211:31" pos:end="280:13">{<block_content pos:start="212:9" pos:end="280:13">
        <if_stmt pos:start="212:9" pos:end="217:5"><if pos:start="212:9" pos:end="214:9">if <condition pos:start="212:12" pos:end="212:21">(<expr pos:start="212:13" pos:end="212:20"><name pos:start="212:13" pos:end="212:15">bpp</name> <operator pos:start="212:17" pos:end="212:18">==</operator> <literal type="number" pos:start="212:20" pos:end="212:20">8</literal></expr>)</condition> <block pos:start="212:23" pos:end="214:9">{<block_content pos:start="213:13" pos:end="213:45">
            <expr_stmt pos:start="213:13" pos:end="213:45"><expr pos:start="213:13" pos:end="213:44"><name pos:start="213:13" pos:end="213:26"><name pos:start="213:13" pos:end="213:17">avctx</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:26">pix_fmt</name></name> <operator pos:start="213:28" pos:end="213:28">=</operator> <name pos:start="213:30" pos:end="213:44">AV_PIX_FMT_PAL8</name></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="214:11" pos:end="217:5">else <block pos:start="214:16" pos:end="217:5">{<block_content pos:start="215:13" pos:end="216:39">
            <expr_stmt pos:start="215:13" pos:end="215:78"><expr pos:start="215:13" pos:end="215:77"><call pos:start="215:13" pos:end="215:77"><name pos:start="215:13" pos:end="215:18">av_log</name><argument_list pos:start="215:19" pos:end="215:77">(<argument pos:start="215:20" pos:end="215:24"><expr pos:start="215:20" pos:end="215:24"><name pos:start="215:20" pos:end="215:24">avctx</name></expr></argument>, <argument pos:start="215:27" pos:end="215:38"><expr pos:start="215:27" pos:end="215:38"><name pos:start="215:27" pos:end="215:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="215:41" pos:end="215:71"><expr pos:start="215:41" pos:end="215:71"><literal type="string" pos:start="215:41" pos:end="215:71">"Unsupported palette bpp %d.\n"</literal></expr></argument>, <argument pos:start="215:74" pos:end="215:76"><expr pos:start="215:74" pos:end="215:76"><name pos:start="215:74" pos:end="215:76">bpp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="216:13" pos:end="216:39">return <expr pos:start="216:20" pos:end="216:38"><name pos:start="216:20" pos:end="216:38">AVERROR_INVALIDDATA</name></expr>;</return>
    </block_content>}</block></else></if_stmt> <if_stmt pos:start="217:7" pos:end="280:13"><else pos:start="217:7" pos:end="280:13">else <block pos:start="217:12" pos:end="280:13">{<block_content pos:start="219:9" pos:end="280:13">
        <comment type="block" pos:start="218:9" pos:end="218:20">/*  8 bpp */</comment>
        <if_stmt pos:start="219:9" pos:end="280:13"><if pos:start="219:9" pos:end="220:46">if <condition pos:start="219:12" pos:end="219:64">(<expr pos:start="219:13" pos:end="219:63"><name pos:start="219:13" pos:end="219:15">bpp</name> <operator pos:start="219:17" pos:end="219:18">==</operator> <literal type="number" pos:start="219:20" pos:end="219:20">8</literal> <operator pos:start="219:22" pos:end="219:23">&amp;&amp;</operator> <name pos:start="219:25" pos:end="219:25">r</name> <operator pos:start="219:27" pos:end="219:28">==</operator> <literal type="number" pos:start="219:30" pos:end="219:33">0xff</literal> <operator pos:start="219:35" pos:end="219:36">&amp;&amp;</operator> <name pos:start="219:38" pos:end="219:38">g</name> <operator pos:start="219:40" pos:end="219:41">==</operator> <literal type="number" pos:start="219:43" pos:end="219:43">0</literal> <operator pos:start="219:45" pos:end="219:46">&amp;&amp;</operator> <name pos:start="219:48" pos:end="219:48">b</name> <operator pos:start="219:50" pos:end="219:51">==</operator> <literal type="number" pos:start="219:53" pos:end="219:53">0</literal> <operator pos:start="219:55" pos:end="219:56">&amp;&amp;</operator> <name pos:start="219:58" pos:end="219:58">a</name> <operator pos:start="219:60" pos:end="219:61">==</operator> <literal type="number" pos:start="219:63" pos:end="219:63">0</literal></expr>)</condition><block type="pseudo" pos:start="220:13" pos:end="220:46"><block_content pos:start="220:13" pos:end="220:46">
            <expr_stmt pos:start="220:13" pos:end="220:46"><expr pos:start="220:13" pos:end="220:45"><name pos:start="220:13" pos:end="220:26"><name pos:start="220:13" pos:end="220:17">avctx</name><operator pos:start="220:18" pos:end="220:19">-&gt;</operator><name pos:start="220:20" pos:end="220:26">pix_fmt</name></name> <operator pos:start="220:28" pos:end="220:28">=</operator> <name pos:start="220:30" pos:end="220:45">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt></block_content></block></if>
        <comment type="block" pos:start="221:9" pos:end="221:20">/* 16 bpp */</comment>
        <if type="elseif" pos:start="222:9" pos:end="223:44">else if <condition pos:start="222:17" pos:end="222:75">(<expr pos:start="222:18" pos:end="222:74"><name pos:start="222:18" pos:end="222:20">bpp</name> <operator pos:start="222:22" pos:end="222:23">==</operator> <literal type="number" pos:start="222:25" pos:end="222:26">16</literal> <operator pos:start="222:28" pos:end="222:29">&amp;&amp;</operator> <name pos:start="222:31" pos:end="222:31">r</name> <operator pos:start="222:33" pos:end="222:34">==</operator> <literal type="number" pos:start="222:36" pos:end="222:39">0xff</literal> <operator pos:start="222:41" pos:end="222:42">&amp;&amp;</operator> <name pos:start="222:44" pos:end="222:44">g</name> <operator pos:start="222:46" pos:end="222:47">==</operator> <literal type="number" pos:start="222:49" pos:end="222:49">0</literal> <operator pos:start="222:51" pos:end="222:52">&amp;&amp;</operator> <name pos:start="222:54" pos:end="222:54">b</name> <operator pos:start="222:56" pos:end="222:57">==</operator> <literal type="number" pos:start="222:59" pos:end="222:59">0</literal> <operator pos:start="222:61" pos:end="222:62">&amp;&amp;</operator> <name pos:start="222:64" pos:end="222:64">a</name> <operator pos:start="222:66" pos:end="222:67">==</operator> <literal type="number" pos:start="222:69" pos:end="222:74">0xff00</literal></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="223:44"><block_content pos:start="223:13" pos:end="223:44">
            <expr_stmt pos:start="223:13" pos:end="223:44"><expr pos:start="223:13" pos:end="223:43"><name pos:start="223:13" pos:end="223:26"><name pos:start="223:13" pos:end="223:17">avctx</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:26">pix_fmt</name></name> <operator pos:start="223:28" pos:end="223:28">=</operator> <name pos:start="223:30" pos:end="223:43">AV_PIX_FMT_YA8</name></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="224:9" pos:end="225:49">else if <condition pos:start="224:17" pos:end="224:72">(<expr pos:start="224:18" pos:end="224:71"><name pos:start="224:18" pos:end="224:20">bpp</name> <operator pos:start="224:22" pos:end="224:23">==</operator> <literal type="number" pos:start="224:25" pos:end="224:26">16</literal> <operator pos:start="224:28" pos:end="224:29">&amp;&amp;</operator> <name pos:start="224:31" pos:end="224:31">r</name> <operator pos:start="224:33" pos:end="224:34">==</operator> <literal type="number" pos:start="224:36" pos:end="224:41">0xffff</literal> <operator pos:start="224:43" pos:end="224:44">&amp;&amp;</operator> <name pos:start="224:46" pos:end="224:46">g</name> <operator pos:start="224:48" pos:end="224:49">==</operator> <literal type="number" pos:start="224:51" pos:end="224:51">0</literal> <operator pos:start="224:53" pos:end="224:54">&amp;&amp;</operator> <name pos:start="224:56" pos:end="224:56">b</name> <operator pos:start="224:58" pos:end="224:59">==</operator> <literal type="number" pos:start="224:61" pos:end="224:61">0</literal> <operator pos:start="224:63" pos:end="224:64">&amp;&amp;</operator> <name pos:start="224:66" pos:end="224:66">a</name> <operator pos:start="224:68" pos:end="224:69">==</operator> <literal type="number" pos:start="224:71" pos:end="224:71">0</literal></expr>)</condition><block type="pseudo" pos:start="225:13" pos:end="225:49"><block_content pos:start="225:13" pos:end="225:49">
            <expr_stmt pos:start="225:13" pos:end="225:49"><expr pos:start="225:13" pos:end="225:48"><name pos:start="225:13" pos:end="225:26"><name pos:start="225:13" pos:end="225:17">avctx</name><operator pos:start="225:18" pos:end="225:19">-&gt;</operator><name pos:start="225:20" pos:end="225:26">pix_fmt</name></name> <operator pos:start="225:28" pos:end="225:28">=</operator> <name pos:start="225:30" pos:end="225:48">AV_PIX_FMT_GRAY16LE</name></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="226:9" pos:end="227:49">else if <condition pos:start="226:17" pos:end="226:79">(<expr pos:start="226:18" pos:end="226:78"><name pos:start="226:18" pos:end="226:20">bpp</name> <operator pos:start="226:22" pos:end="226:23">==</operator> <literal type="number" pos:start="226:25" pos:end="226:26">16</literal> <operator pos:start="226:28" pos:end="226:29">&amp;&amp;</operator> <name pos:start="226:31" pos:end="226:31">r</name> <operator pos:start="226:33" pos:end="226:34">==</operator> <literal type="number" pos:start="226:36" pos:end="226:41">0xf800</literal> <operator pos:start="226:43" pos:end="226:44">&amp;&amp;</operator> <name pos:start="226:46" pos:end="226:46">g</name> <operator pos:start="226:48" pos:end="226:49">==</operator> <literal type="number" pos:start="226:51" pos:end="226:55">0x7e0</literal> <operator pos:start="226:57" pos:end="226:58">&amp;&amp;</operator> <name pos:start="226:60" pos:end="226:60">b</name> <operator pos:start="226:62" pos:end="226:63">==</operator> <literal type="number" pos:start="226:65" pos:end="226:68">0x1f</literal> <operator pos:start="226:70" pos:end="226:71">&amp;&amp;</operator> <name pos:start="226:73" pos:end="226:73">a</name> <operator pos:start="226:75" pos:end="226:76">==</operator> <literal type="number" pos:start="226:78" pos:end="226:78">0</literal></expr>)</condition><block type="pseudo" pos:start="227:13" pos:end="227:49"><block_content pos:start="227:13" pos:end="227:49">
            <expr_stmt pos:start="227:13" pos:end="227:49"><expr pos:start="227:13" pos:end="227:48"><name pos:start="227:13" pos:end="227:26"><name pos:start="227:13" pos:end="227:17">avctx</name><operator pos:start="227:18" pos:end="227:19">-&gt;</operator><name pos:start="227:20" pos:end="227:26">pix_fmt</name></name> <operator pos:start="227:28" pos:end="227:28">=</operator> <name pos:start="227:30" pos:end="227:48">AV_PIX_FMT_RGB565LE</name></expr>;</expr_stmt></block_content></block></if>
        <comment type="block" pos:start="228:9" pos:end="228:20">/* 24 bpp */</comment>
        <if type="elseif" pos:start="229:9" pos:end="230:46">else if <condition pos:start="229:17" pos:end="229:82">(<expr pos:start="229:18" pos:end="229:81"><name pos:start="229:18" pos:end="229:20">bpp</name> <operator pos:start="229:22" pos:end="229:23">==</operator> <literal type="number" pos:start="229:25" pos:end="229:26">24</literal> <operator pos:start="229:28" pos:end="229:29">&amp;&amp;</operator> <name pos:start="229:31" pos:end="229:31">r</name> <operator pos:start="229:33" pos:end="229:34">==</operator> <literal type="number" pos:start="229:36" pos:end="229:43">0xff0000</literal> <operator pos:start="229:45" pos:end="229:46">&amp;&amp;</operator> <name pos:start="229:48" pos:end="229:48">g</name> <operator pos:start="229:50" pos:end="229:51">==</operator> <literal type="number" pos:start="229:53" pos:end="229:58">0xff00</literal> <operator pos:start="229:60" pos:end="229:61">&amp;&amp;</operator> <name pos:start="229:63" pos:end="229:63">b</name> <operator pos:start="229:65" pos:end="229:66">==</operator> <literal type="number" pos:start="229:68" pos:end="229:71">0xff</literal> <operator pos:start="229:73" pos:end="229:74">&amp;&amp;</operator> <name pos:start="229:76" pos:end="229:76">a</name> <operator pos:start="229:78" pos:end="229:79">==</operator> <literal type="number" pos:start="229:81" pos:end="229:81">0</literal></expr>)</condition><block type="pseudo" pos:start="230:13" pos:end="230:46"><block_content pos:start="230:13" pos:end="230:46">
            <expr_stmt pos:start="230:13" pos:end="230:46"><expr pos:start="230:13" pos:end="230:45"><name pos:start="230:13" pos:end="230:26"><name pos:start="230:13" pos:end="230:17">avctx</name><operator pos:start="230:18" pos:end="230:19">-&gt;</operator><name pos:start="230:20" pos:end="230:26">pix_fmt</name></name> <operator pos:start="230:28" pos:end="230:28">=</operator> <name pos:start="230:30" pos:end="230:45">AV_PIX_FMT_BGR24</name></expr>;</expr_stmt></block_content></block></if>
        <comment type="block" pos:start="231:9" pos:end="231:20">/* 32 bpp */</comment>
        <if type="elseif" pos:start="232:9" pos:end="233:45">else if <condition pos:start="232:17" pos:end="232:82">(<expr pos:start="232:18" pos:end="232:81"><name pos:start="232:18" pos:end="232:20">bpp</name> <operator pos:start="232:22" pos:end="232:23">==</operator> <literal type="number" pos:start="232:25" pos:end="232:26">32</literal> <operator pos:start="232:28" pos:end="232:29">&amp;&amp;</operator> <name pos:start="232:31" pos:end="232:31">r</name> <operator pos:start="232:33" pos:end="232:34">==</operator> <literal type="number" pos:start="232:36" pos:end="232:43">0xff0000</literal> <operator pos:start="232:45" pos:end="232:46">&amp;&amp;</operator> <name pos:start="232:48" pos:end="232:48">g</name> <operator pos:start="232:50" pos:end="232:51">==</operator> <literal type="number" pos:start="232:53" pos:end="232:58">0xff00</literal> <operator pos:start="232:60" pos:end="232:61">&amp;&amp;</operator> <name pos:start="232:63" pos:end="232:63">b</name> <operator pos:start="232:65" pos:end="232:66">==</operator> <literal type="number" pos:start="232:68" pos:end="232:71">0xff</literal> <operator pos:start="232:73" pos:end="232:74">&amp;&amp;</operator> <name pos:start="232:76" pos:end="232:76">a</name> <operator pos:start="232:78" pos:end="232:79">==</operator> <literal type="number" pos:start="232:81" pos:end="232:81">0</literal></expr>)</condition><block type="pseudo" pos:start="233:13" pos:end="233:45"><block_content pos:start="233:13" pos:end="233:45">
            <expr_stmt pos:start="233:13" pos:end="233:45"><expr pos:start="233:13" pos:end="233:44"><name pos:start="233:13" pos:end="233:26"><name pos:start="233:13" pos:end="233:17">avctx</name><operator pos:start="233:18" pos:end="233:19">-&gt;</operator><name pos:start="233:20" pos:end="233:26">pix_fmt</name></name> <operator pos:start="233:28" pos:end="233:28">=</operator> <name pos:start="233:30" pos:end="233:44">AV_PIX_FMT_BGRA</name></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="233:47" pos:end="233:55">// opaque</comment>
        <if type="elseif" pos:start="234:9" pos:end="235:45">else if <condition pos:start="234:17" pos:end="234:82">(<expr pos:start="234:18" pos:end="234:81"><name pos:start="234:18" pos:end="234:20">bpp</name> <operator pos:start="234:22" pos:end="234:23">==</operator> <literal type="number" pos:start="234:25" pos:end="234:26">32</literal> <operator pos:start="234:28" pos:end="234:29">&amp;&amp;</operator> <name pos:start="234:31" pos:end="234:31">r</name> <operator pos:start="234:33" pos:end="234:34">==</operator> <literal type="number" pos:start="234:36" pos:end="234:39">0xff</literal> <operator pos:start="234:41" pos:end="234:42">&amp;&amp;</operator> <name pos:start="234:44" pos:end="234:44">g</name> <operator pos:start="234:46" pos:end="234:47">==</operator> <literal type="number" pos:start="234:49" pos:end="234:54">0xff00</literal> <operator pos:start="234:56" pos:end="234:57">&amp;&amp;</operator> <name pos:start="234:59" pos:end="234:59">b</name> <operator pos:start="234:61" pos:end="234:62">==</operator> <literal type="number" pos:start="234:64" pos:end="234:71">0xff0000</literal> <operator pos:start="234:73" pos:end="234:74">&amp;&amp;</operator> <name pos:start="234:76" pos:end="234:76">a</name> <operator pos:start="234:78" pos:end="234:79">==</operator> <literal type="number" pos:start="234:81" pos:end="234:81">0</literal></expr>)</condition><block type="pseudo" pos:start="235:13" pos:end="235:45"><block_content pos:start="235:13" pos:end="235:45">
            <expr_stmt pos:start="235:13" pos:end="235:45"><expr pos:start="235:13" pos:end="235:44"><name pos:start="235:13" pos:end="235:26"><name pos:start="235:13" pos:end="235:17">avctx</name><operator pos:start="235:18" pos:end="235:19">-&gt;</operator><name pos:start="235:20" pos:end="235:26">pix_fmt</name></name> <operator pos:start="235:28" pos:end="235:28">=</operator> <name pos:start="235:30" pos:end="235:44">AV_PIX_FMT_RGBA</name></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="235:47" pos:end="235:55">// opaque</comment>
        <if type="elseif" pos:start="236:9" pos:end="237:45">else if <condition pos:start="236:17" pos:end="236:91">(<expr pos:start="236:18" pos:end="236:90"><name pos:start="236:18" pos:end="236:20">bpp</name> <operator pos:start="236:22" pos:end="236:23">==</operator> <literal type="number" pos:start="236:25" pos:end="236:26">32</literal> <operator pos:start="236:28" pos:end="236:29">&amp;&amp;</operator> <name pos:start="236:31" pos:end="236:31">r</name> <operator pos:start="236:33" pos:end="236:34">==</operator> <literal type="number" pos:start="236:36" pos:end="236:43">0xff0000</literal> <operator pos:start="236:45" pos:end="236:46">&amp;&amp;</operator> <name pos:start="236:48" pos:end="236:48">g</name> <operator pos:start="236:50" pos:end="236:51">==</operator> <literal type="number" pos:start="236:53" pos:end="236:58">0xff00</literal> <operator pos:start="236:60" pos:end="236:61">&amp;&amp;</operator> <name pos:start="236:63" pos:end="236:63">b</name> <operator pos:start="236:65" pos:end="236:66">==</operator> <literal type="number" pos:start="236:68" pos:end="236:71">0xff</literal> <operator pos:start="236:73" pos:end="236:74">&amp;&amp;</operator> <name pos:start="236:76" pos:end="236:76">a</name> <operator pos:start="236:78" pos:end="236:79">==</operator> <literal type="number" pos:start="236:81" pos:end="236:90">0xff000000</literal></expr>)</condition><block type="pseudo" pos:start="237:13" pos:end="237:45"><block_content pos:start="237:13" pos:end="237:45">
            <expr_stmt pos:start="237:13" pos:end="237:45"><expr pos:start="237:13" pos:end="237:44"><name pos:start="237:13" pos:end="237:26"><name pos:start="237:13" pos:end="237:17">avctx</name><operator pos:start="237:18" pos:end="237:19">-&gt;</operator><name pos:start="237:20" pos:end="237:26">pix_fmt</name></name> <operator pos:start="237:28" pos:end="237:28">=</operator> <name pos:start="237:30" pos:end="237:44">AV_PIX_FMT_BGRA</name></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="238:9" pos:end="239:45">else if <condition pos:start="238:17" pos:end="238:91">(<expr pos:start="238:18" pos:end="238:90"><name pos:start="238:18" pos:end="238:20">bpp</name> <operator pos:start="238:22" pos:end="238:23">==</operator> <literal type="number" pos:start="238:25" pos:end="238:26">32</literal> <operator pos:start="238:28" pos:end="238:29">&amp;&amp;</operator> <name pos:start="238:31" pos:end="238:31">r</name> <operator pos:start="238:33" pos:end="238:34">==</operator> <literal type="number" pos:start="238:36" pos:end="238:39">0xff</literal> <operator pos:start="238:41" pos:end="238:42">&amp;&amp;</operator> <name pos:start="238:44" pos:end="238:44">g</name> <operator pos:start="238:46" pos:end="238:47">==</operator> <literal type="number" pos:start="238:49" pos:end="238:54">0xff00</literal> <operator pos:start="238:56" pos:end="238:57">&amp;&amp;</operator> <name pos:start="238:59" pos:end="238:59">b</name> <operator pos:start="238:61" pos:end="238:62">==</operator> <literal type="number" pos:start="238:64" pos:end="238:71">0xff0000</literal> <operator pos:start="238:73" pos:end="238:74">&amp;&amp;</operator> <name pos:start="238:76" pos:end="238:76">a</name> <operator pos:start="238:78" pos:end="238:79">==</operator> <literal type="number" pos:start="238:81" pos:end="238:90">0xff000000</literal></expr>)</condition><block type="pseudo" pos:start="239:13" pos:end="239:45"><block_content pos:start="239:13" pos:end="239:45">
            <expr_stmt pos:start="239:13" pos:end="239:45"><expr pos:start="239:13" pos:end="239:44"><name pos:start="239:13" pos:end="239:26"><name pos:start="239:13" pos:end="239:17">avctx</name><operator pos:start="239:18" pos:end="239:19">-&gt;</operator><name pos:start="239:20" pos:end="239:26">pix_fmt</name></name> <operator pos:start="239:28" pos:end="239:28">=</operator> <name pos:start="239:30" pos:end="239:44">AV_PIX_FMT_RGBA</name></expr>;</expr_stmt></block_content></block></if>
        <comment type="block" pos:start="240:9" pos:end="240:21">/* give up */</comment>
        <else pos:start="241:9" pos:end="280:13">else <block pos:start="241:14" pos:end="280:13">{<block_content pos:start="242:13" pos:end="280:13">
            <expr_stmt pos:start="242:13" pos:end="243:79"><expr pos:start="242:13" pos:end="243:78"><call pos:start="242:13" pos:end="243:78"><name pos:start="242:13" pos:end="242:18">av_log</name><argument_list pos:start="242:19" pos:end="243:78">(<argument pos:start="242:20" pos:end="242:24"><expr pos:start="242:20" pos:end="242:24"><name pos:start="242:20" pos:end="242:24">avctx</name></expr></argument>, <argument pos:start="242:27" pos:end="242:38"><expr pos:start="242:27" pos:end="242:38"><name pos:start="242:27" pos:end="242:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="242:41" pos:end="243:60"><expr pos:start="242:41" pos:end="243:60"><literal type="string" pos:start="242:41" pos:end="242:63">"Unknown pixel format "</literal>
                   <literal type="string" pos:start="243:20" pos:end="243:60">"[bpp %d r 0x%x g 0x%x b 0x%x a 0x%x].\n"</literal></expr></argument>, <argument pos:start="243:63" pos:end="243:65"><expr pos:start="243:63" pos:end="243:65"><name pos:start="243:63" pos:end="243:65">bpp</name></expr></argument>, <argument pos:start="243:68" pos:end="243:68"><expr pos:start="243:68" pos:end="243:68"><name pos:start="243:68" pos:end="243:68">r</name></expr></argument>, <argument pos:start="243:71" pos:end="243:71"><expr pos:start="243:71" pos:end="243:71"><name pos:start="243:71" pos:end="243:71">g</name></expr></argument>, <argument pos:start="243:74" pos:end="243:74"><expr pos:start="243:74" pos:end="243:74"><name pos:start="243:74" pos:end="243:74">b</name></expr></argument>, <argument pos:start="243:77" pos:end="243:77"><expr pos:start="243:77" pos:end="243:77"><name pos:start="243:77" pos:end="243:77">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="244:13" pos:end="244:39">return <expr pos:start="244:20" pos:end="244:38"><name pos:start="244:20" pos:end="244:38">AVERROR_INVALIDDATA</name></expr>;</return>
    <comment type="block" pos:start="245:5" pos:end="245:79">/* Set any remaining post-proc that should happen before frame is ready. */</comment>
    <if_stmt pos:start="246:5" pos:end="253:39"><if pos:start="246:5" pos:end="247:38">if <condition pos:start="246:8" pos:end="246:23">(<expr pos:start="246:9" pos:end="246:22"><name pos:start="246:9" pos:end="246:22">alpha_exponent</name></expr>)</condition><block type="pseudo" pos:start="247:9" pos:end="247:38"><block_content pos:start="247:9" pos:end="247:38">
        <expr_stmt pos:start="247:9" pos:end="247:38"><expr pos:start="247:9" pos:end="247:37"><name pos:start="247:9" pos:end="247:21"><name pos:start="247:9" pos:end="247:11">ctx</name><operator pos:start="247:12" pos:end="247:13">-&gt;</operator><name pos:start="247:14" pos:end="247:21">postproc</name></name> <operator pos:start="247:23" pos:end="247:23">=</operator> <name pos:start="247:25" pos:end="247:37">DDS_ALPHA_EXP</name></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="248:5" pos:end="249:39">else if <condition pos:start="248:13" pos:end="248:24">(<expr pos:start="248:14" pos:end="248:23"><name pos:start="248:14" pos:end="248:23">normal_map</name></expr>)</condition><block type="pseudo" pos:start="249:9" pos:end="249:39"><block_content pos:start="249:9" pos:end="249:39">
        <expr_stmt pos:start="249:9" pos:end="249:39"><expr pos:start="249:9" pos:end="249:38"><name pos:start="249:9" pos:end="249:21"><name pos:start="249:9" pos:end="249:11">ctx</name><operator pos:start="249:12" pos:end="249:13">-&gt;</operator><name pos:start="249:14" pos:end="249:21">postproc</name></name> <operator pos:start="249:23" pos:end="249:23">=</operator> <name pos:start="249:25" pos:end="249:38">DDS_NORMAL_MAP</name></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="250:5" pos:end="251:38">else if <condition pos:start="250:13" pos:end="250:47">(<expr pos:start="250:14" pos:end="250:46"><name pos:start="250:14" pos:end="250:26">ycocg_classic</name> <operator pos:start="250:28" pos:end="250:29">&amp;&amp;</operator> <operator pos:start="250:31" pos:end="250:31">!</operator><name pos:start="250:32" pos:end="250:46"><name pos:start="250:32" pos:end="250:34">ctx</name><operator pos:start="250:35" pos:end="250:36">-&gt;</operator><name pos:start="250:37" pos:end="250:46">compressed</name></name></expr>)</condition><block type="pseudo" pos:start="251:9" pos:end="251:38"><block_content pos:start="251:9" pos:end="251:38">
        <expr_stmt pos:start="251:9" pos:end="251:38"><expr pos:start="251:9" pos:end="251:37"><name pos:start="251:9" pos:end="251:21"><name pos:start="251:9" pos:end="251:11">ctx</name><operator pos:start="251:12" pos:end="251:13">-&gt;</operator><name pos:start="251:14" pos:end="251:21">postproc</name></name> <operator pos:start="251:23" pos:end="251:23">=</operator> <name pos:start="251:25" pos:end="251:37">DDS_RAW_YCOCG</name></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="252:5" pos:end="253:39">else if <condition pos:start="252:13" pos:end="252:46">(<expr pos:start="252:14" pos:end="252:45"><name pos:start="252:14" pos:end="252:27"><name pos:start="252:14" pos:end="252:18">avctx</name><operator pos:start="252:19" pos:end="252:20">-&gt;</operator><name pos:start="252:21" pos:end="252:27">pix_fmt</name></name> <operator pos:start="252:29" pos:end="252:30">==</operator> <name pos:start="252:32" pos:end="252:45">AV_PIX_FMT_YA8</name></expr>)</condition><block type="pseudo" pos:start="253:9" pos:end="253:39"><block_content pos:start="253:9" pos:end="253:39">
        <expr_stmt pos:start="253:9" pos:end="253:39"><expr pos:start="253:9" pos:end="253:38"><name pos:start="253:9" pos:end="253:21"><name pos:start="253:9" pos:end="253:11">ctx</name><operator pos:start="253:12" pos:end="253:13">-&gt;</operator><name pos:start="253:14" pos:end="253:21">postproc</name></name> <operator pos:start="253:23" pos:end="253:23">=</operator> <name pos:start="253:25" pos:end="253:38">DDS_SWAP_ALPHA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <comment type="block" pos:start="254:5" pos:end="254:61">/* ATI/NVidia variants sometimes add swizzling in bpp. */</comment>
    <switch pos:start="255:5" pos:end="280:13">switch <condition pos:start="255:12" pos:end="255:16">(<expr pos:start="255:13" pos:end="255:15"><name pos:start="255:13" pos:end="255:15">bpp</name></expr>)</condition> <block pos:start="255:18" pos:end="280:13">{<block_content pos:start="256:5" pos:end="280:13">
    <case pos:start="256:5" pos:end="256:35">case <expr pos:start="256:10" pos:end="256:34"><call pos:start="256:10" pos:end="256:34"><name pos:start="256:10" pos:end="256:14">MKTAG</name><argument_list pos:start="256:15" pos:end="256:34">(<argument pos:start="256:16" pos:end="256:18"><expr pos:start="256:16" pos:end="256:18"><literal type="char" pos:start="256:16" pos:end="256:18">'A'</literal></expr></argument>, <argument pos:start="256:21" pos:end="256:23"><expr pos:start="256:21" pos:end="256:23"><literal type="char" pos:start="256:21" pos:end="256:23">'2'</literal></expr></argument>, <argument pos:start="256:26" pos:end="256:28"><expr pos:start="256:26" pos:end="256:28"><literal type="char" pos:start="256:26" pos:end="256:28">'X'</literal></expr></argument>, <argument pos:start="256:31" pos:end="256:33"><expr pos:start="256:31" pos:end="256:33"><literal type="char" pos:start="256:31" pos:end="256:33">'Y'</literal></expr></argument>)</argument_list></call></expr>:</case>
        <expr_stmt pos:start="257:9" pos:end="257:41"><expr pos:start="257:9" pos:end="257:40"><name pos:start="257:9" pos:end="257:21"><name pos:start="257:9" pos:end="257:11">ctx</name><operator pos:start="257:12" pos:end="257:13">-&gt;</operator><name pos:start="257:14" pos:end="257:21">postproc</name></name> <operator pos:start="257:23" pos:end="257:23">=</operator> <name pos:start="257:25" pos:end="257:40">DDS_SWIZZLE_A2XY</name></expr>;</expr_stmt>
        <break pos:start="258:9" pos:end="258:14">break;</break>
    <case pos:start="259:5" pos:end="259:35">case <expr pos:start="259:10" pos:end="259:34"><call pos:start="259:10" pos:end="259:34"><name pos:start="259:10" pos:end="259:14">MKTAG</name><argument_list pos:start="259:15" pos:end="259:34">(<argument pos:start="259:16" pos:end="259:18"><expr pos:start="259:16" pos:end="259:18"><literal type="char" pos:start="259:16" pos:end="259:18">'x'</literal></expr></argument>, <argument pos:start="259:21" pos:end="259:23"><expr pos:start="259:21" pos:end="259:23"><literal type="char" pos:start="259:21" pos:end="259:23">'G'</literal></expr></argument>, <argument pos:start="259:26" pos:end="259:28"><expr pos:start="259:26" pos:end="259:28"><literal type="char" pos:start="259:26" pos:end="259:28">'B'</literal></expr></argument>, <argument pos:start="259:31" pos:end="259:33"><expr pos:start="259:31" pos:end="259:33"><literal type="char" pos:start="259:31" pos:end="259:33">'R'</literal></expr></argument>)</argument_list></call></expr>:</case>
        <expr_stmt pos:start="260:9" pos:end="260:41"><expr pos:start="260:9" pos:end="260:40"><name pos:start="260:9" pos:end="260:21"><name pos:start="260:9" pos:end="260:11">ctx</name><operator pos:start="260:12" pos:end="260:13">-&gt;</operator><name pos:start="260:14" pos:end="260:21">postproc</name></name> <operator pos:start="260:23" pos:end="260:23">=</operator> <name pos:start="260:25" pos:end="260:40">DDS_SWIZZLE_XGBR</name></expr>;</expr_stmt>
        <break pos:start="261:9" pos:end="261:14">break;</break>
    <case pos:start="262:5" pos:end="262:35">case <expr pos:start="262:10" pos:end="262:34"><call pos:start="262:10" pos:end="262:34"><name pos:start="262:10" pos:end="262:14">MKTAG</name><argument_list pos:start="262:15" pos:end="262:34">(<argument pos:start="262:16" pos:end="262:18"><expr pos:start="262:16" pos:end="262:18"><literal type="char" pos:start="262:16" pos:end="262:18">'x'</literal></expr></argument>, <argument pos:start="262:21" pos:end="262:23"><expr pos:start="262:21" pos:end="262:23"><literal type="char" pos:start="262:21" pos:end="262:23">'R'</literal></expr></argument>, <argument pos:start="262:26" pos:end="262:28"><expr pos:start="262:26" pos:end="262:28"><literal type="char" pos:start="262:26" pos:end="262:28">'B'</literal></expr></argument>, <argument pos:start="262:31" pos:end="262:33"><expr pos:start="262:31" pos:end="262:33"><literal type="char" pos:start="262:31" pos:end="262:33">'G'</literal></expr></argument>)</argument_list></call></expr>:</case>
        <expr_stmt pos:start="263:9" pos:end="263:41"><expr pos:start="263:9" pos:end="263:40"><name pos:start="263:9" pos:end="263:21"><name pos:start="263:9" pos:end="263:11">ctx</name><operator pos:start="263:12" pos:end="263:13">-&gt;</operator><name pos:start="263:14" pos:end="263:21">postproc</name></name> <operator pos:start="263:23" pos:end="263:23">=</operator> <name pos:start="263:25" pos:end="263:40">DDS_SWIZZLE_XRBG</name></expr>;</expr_stmt>
        <break pos:start="264:9" pos:end="264:14">break;</break>
    <case pos:start="265:5" pos:end="265:35">case <expr pos:start="265:10" pos:end="265:34"><call pos:start="265:10" pos:end="265:34"><name pos:start="265:10" pos:end="265:14">MKTAG</name><argument_list pos:start="265:15" pos:end="265:34">(<argument pos:start="265:16" pos:end="265:18"><expr pos:start="265:16" pos:end="265:18"><literal type="char" pos:start="265:16" pos:end="265:18">'R'</literal></expr></argument>, <argument pos:start="265:21" pos:end="265:23"><expr pos:start="265:21" pos:end="265:23"><literal type="char" pos:start="265:21" pos:end="265:23">'B'</literal></expr></argument>, <argument pos:start="265:26" pos:end="265:28"><expr pos:start="265:26" pos:end="265:28"><literal type="char" pos:start="265:26" pos:end="265:28">'x'</literal></expr></argument>, <argument pos:start="265:31" pos:end="265:33"><expr pos:start="265:31" pos:end="265:33"><literal type="char" pos:start="265:31" pos:end="265:33">'G'</literal></expr></argument>)</argument_list></call></expr>:</case>
        <expr_stmt pos:start="266:9" pos:end="266:41"><expr pos:start="266:9" pos:end="266:40"><name pos:start="266:9" pos:end="266:21"><name pos:start="266:9" pos:end="266:11">ctx</name><operator pos:start="266:12" pos:end="266:13">-&gt;</operator><name pos:start="266:14" pos:end="266:21">postproc</name></name> <operator pos:start="266:23" pos:end="266:23">=</operator> <name pos:start="266:25" pos:end="266:40">DDS_SWIZZLE_RBXG</name></expr>;</expr_stmt>
        <break pos:start="267:9" pos:end="267:14">break;</break>
    <case pos:start="268:5" pos:end="268:35">case <expr pos:start="268:10" pos:end="268:34"><call pos:start="268:10" pos:end="268:34"><name pos:start="268:10" pos:end="268:14">MKTAG</name><argument_list pos:start="268:15" pos:end="268:34">(<argument pos:start="268:16" pos:end="268:18"><expr pos:start="268:16" pos:end="268:18"><literal type="char" pos:start="268:16" pos:end="268:18">'R'</literal></expr></argument>, <argument pos:start="268:21" pos:end="268:23"><expr pos:start="268:21" pos:end="268:23"><literal type="char" pos:start="268:21" pos:end="268:23">'G'</literal></expr></argument>, <argument pos:start="268:26" pos:end="268:28"><expr pos:start="268:26" pos:end="268:28"><literal type="char" pos:start="268:26" pos:end="268:28">'x'</literal></expr></argument>, <argument pos:start="268:31" pos:end="268:33"><expr pos:start="268:31" pos:end="268:33"><literal type="char" pos:start="268:31" pos:end="268:33">'B'</literal></expr></argument>)</argument_list></call></expr>:</case>
        <expr_stmt pos:start="269:9" pos:end="269:41"><expr pos:start="269:9" pos:end="269:40"><name pos:start="269:9" pos:end="269:21"><name pos:start="269:9" pos:end="269:11">ctx</name><operator pos:start="269:12" pos:end="269:13">-&gt;</operator><name pos:start="269:14" pos:end="269:21">postproc</name></name> <operator pos:start="269:23" pos:end="269:23">=</operator> <name pos:start="269:25" pos:end="269:40">DDS_SWIZZLE_RGXB</name></expr>;</expr_stmt>
        <break pos:start="270:9" pos:end="270:14">break;</break>
    <case pos:start="271:5" pos:end="271:35">case <expr pos:start="271:10" pos:end="271:34"><call pos:start="271:10" pos:end="271:34"><name pos:start="271:10" pos:end="271:14">MKTAG</name><argument_list pos:start="271:15" pos:end="271:34">(<argument pos:start="271:16" pos:end="271:18"><expr pos:start="271:16" pos:end="271:18"><literal type="char" pos:start="271:16" pos:end="271:18">'R'</literal></expr></argument>, <argument pos:start="271:21" pos:end="271:23"><expr pos:start="271:21" pos:end="271:23"><literal type="char" pos:start="271:21" pos:end="271:23">'x'</literal></expr></argument>, <argument pos:start="271:26" pos:end="271:28"><expr pos:start="271:26" pos:end="271:28"><literal type="char" pos:start="271:26" pos:end="271:28">'B'</literal></expr></argument>, <argument pos:start="271:31" pos:end="271:33"><expr pos:start="271:31" pos:end="271:33"><literal type="char" pos:start="271:31" pos:end="271:33">'G'</literal></expr></argument>)</argument_list></call></expr>:</case>
        <expr_stmt pos:start="272:9" pos:end="272:41"><expr pos:start="272:9" pos:end="272:40"><name pos:start="272:9" pos:end="272:21"><name pos:start="272:9" pos:end="272:11">ctx</name><operator pos:start="272:12" pos:end="272:13">-&gt;</operator><name pos:start="272:14" pos:end="272:21">postproc</name></name> <operator pos:start="272:23" pos:end="272:23">=</operator> <name pos:start="272:25" pos:end="272:40">DDS_SWIZZLE_RXBG</name></expr>;</expr_stmt>
        <break pos:start="273:9" pos:end="273:14">break;</break>
    <case pos:start="274:5" pos:end="274:35">case <expr pos:start="274:10" pos:end="274:34"><call pos:start="274:10" pos:end="274:34"><name pos:start="274:10" pos:end="274:14">MKTAG</name><argument_list pos:start="274:15" pos:end="274:34">(<argument pos:start="274:16" pos:end="274:18"><expr pos:start="274:16" pos:end="274:18"><literal type="char" pos:start="274:16" pos:end="274:18">'x'</literal></expr></argument>, <argument pos:start="274:21" pos:end="274:23"><expr pos:start="274:21" pos:end="274:23"><literal type="char" pos:start="274:21" pos:end="274:23">'G'</literal></expr></argument>, <argument pos:start="274:26" pos:end="274:28"><expr pos:start="274:26" pos:end="274:28"><literal type="char" pos:start="274:26" pos:end="274:28">'x'</literal></expr></argument>, <argument pos:start="274:31" pos:end="274:33"><expr pos:start="274:31" pos:end="274:33"><literal type="char" pos:start="274:31" pos:end="274:33">'R'</literal></expr></argument>)</argument_list></call></expr>:</case>
        <expr_stmt pos:start="275:9" pos:end="275:41"><expr pos:start="275:9" pos:end="275:40"><name pos:start="275:9" pos:end="275:21"><name pos:start="275:9" pos:end="275:11">ctx</name><operator pos:start="275:12" pos:end="275:13">-&gt;</operator><name pos:start="275:14" pos:end="275:21">postproc</name></name> <operator pos:start="275:23" pos:end="275:23">=</operator> <name pos:start="275:25" pos:end="275:40">DDS_SWIZZLE_XGXR</name></expr>;</expr_stmt>
        <break pos:start="276:9" pos:end="276:14">break;</break>
    <case pos:start="277:5" pos:end="277:35">case <expr pos:start="277:10" pos:end="277:34"><call pos:start="277:10" pos:end="277:34"><name pos:start="277:10" pos:end="277:14">MKTAG</name><argument_list pos:start="277:15" pos:end="277:34">(<argument pos:start="277:16" pos:end="277:18"><expr pos:start="277:16" pos:end="277:18"><literal type="char" pos:start="277:16" pos:end="277:18">'A'</literal></expr></argument>, <argument pos:start="277:21" pos:end="277:23"><expr pos:start="277:21" pos:end="277:23"><literal type="char" pos:start="277:21" pos:end="277:23">'2'</literal></expr></argument>, <argument pos:start="277:26" pos:end="277:28"><expr pos:start="277:26" pos:end="277:28"><literal type="char" pos:start="277:26" pos:end="277:28">'D'</literal></expr></argument>, <argument pos:start="277:31" pos:end="277:33"><expr pos:start="277:31" pos:end="277:33"><literal type="char" pos:start="277:31" pos:end="277:33">'5'</literal></expr></argument>)</argument_list></call></expr>:</case>
        <expr_stmt pos:start="278:9" pos:end="278:39"><expr pos:start="278:9" pos:end="278:38"><name pos:start="278:9" pos:end="278:21"><name pos:start="278:9" pos:end="278:11">ctx</name><operator pos:start="278:12" pos:end="278:13">-&gt;</operator><name pos:start="278:14" pos:end="278:21">postproc</name></name> <operator pos:start="278:23" pos:end="278:23">=</operator> <name pos:start="278:25" pos:end="278:38">DDS_NORMAL_MAP</name></expr>;</expr_stmt>
        <break pos:start="279:9" pos:end="279:14">break;</break>
    <return pos:start="280:5" pos:end="280:13">return <expr pos:start="280:12" pos:end="280:12"><literal type="number" pos:start="280:12" pos:end="280:12">0</literal></expr>;</return></block_content></block></switch></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
