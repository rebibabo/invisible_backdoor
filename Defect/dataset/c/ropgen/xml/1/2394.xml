<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2394.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">virtio_pci_config_write</name><parameter_list pos:start="1:36" pos:end="3:64">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:61"><decl pos:start="1:51" pos:end="1:61"><type pos:start="1:51" pos:end="1:61"><name pos:start="1:51" pos:end="1:56">hwaddr</name></type> <name pos:start="1:58" pos:end="1:61">addr</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:48"><decl pos:start="3:37" pos:end="3:48"><type pos:start="3:37" pos:end="3:48"><name pos:start="3:37" pos:end="3:44">uint64_t</name></type> <name pos:start="3:46" pos:end="3:48">val</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:63"><decl pos:start="3:51" pos:end="3:63"><type pos:start="3:51" pos:end="3:63"><name pos:start="3:51" pos:end="3:58">unsigned</name></type> <name pos:start="3:60" pos:end="3:63">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:5">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtIOPCIProxy</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">proxy</name> <init pos:start="7:27" pos:end="7:34">= <expr pos:start="7:29" pos:end="7:34"><name pos:start="7:29" pos:end="7:34">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:56"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:19">config</name> <init pos:start="9:21" pos:end="9:56">= <expr pos:start="9:23" pos:end="9:56"><call pos:start="9:23" pos:end="9:56"><name pos:start="9:23" pos:end="9:39">VIRTIO_PCI_CONFIG</name><argument_list pos:start="9:40" pos:end="9:56">(<argument pos:start="9:41" pos:end="9:55"><expr pos:start="9:41" pos:end="9:55"><operator pos:start="9:41" pos:end="9:41">&amp;</operator><name pos:start="9:42" pos:end="9:55"><name pos:start="9:42" pos:end="9:46">proxy</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:55">pci_dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:60"><decl pos:start="11:5" pos:end="11:59"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">VirtIODevice</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:22">vdev</name> <init pos:start="11:24" pos:end="11:59">= <expr pos:start="11:26" pos:end="11:59"><call pos:start="11:26" pos:end="11:59"><name pos:start="11:26" pos:end="11:46">virtio_bus_get_device</name><argument_list pos:start="11:47" pos:end="11:59">(<argument pos:start="11:48" pos:end="11:58"><expr pos:start="11:48" pos:end="11:58"><operator pos:start="11:48" pos:end="11:48">&amp;</operator><name pos:start="11:49" pos:end="11:58"><name pos:start="11:49" pos:end="11:53">proxy</name><operator pos:start="11:54" pos:end="11:55">-&gt;</operator><name pos:start="11:56" pos:end="11:58">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:22">(<expr pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:12">addr</name> <operator pos:start="13:14" pos:end="13:14">&lt;</operator> <name pos:start="13:16" pos:end="13:21">config</name></expr>)</condition> <block pos:start="13:24" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:46"><expr pos:start="15:9" pos:end="15:45"><call pos:start="15:9" pos:end="15:45"><name pos:start="15:9" pos:end="15:27">virtio_ioport_write</name><argument_list pos:start="15:28" pos:end="15:45">(<argument pos:start="15:29" pos:end="15:33"><expr pos:start="15:29" pos:end="15:33"><name pos:start="15:29" pos:end="15:33">proxy</name></expr></argument>, <argument pos:start="15:36" pos:end="15:39"><expr pos:start="15:36" pos:end="15:39"><name pos:start="15:36" pos:end="15:39">addr</name></expr></argument>, <argument pos:start="15:42" pos:end="15:44"><expr pos:start="15:42" pos:end="15:44"><name pos:start="15:42" pos:end="15:44">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:8">addr</name> <operator pos:start="21:10" pos:end="21:11">-=</operator> <name pos:start="21:13" pos:end="21:18">config</name></expr>;</expr_stmt>

    <comment type="block" pos:start="23:5" pos:end="29:7">/*

     * Virtio-PCI is odd. Ioports are LE but config space is target native

     * endian.

     */</comment>

    <switch pos:start="31:5" pos:end="63:5">switch <condition pos:start="31:12" pos:end="31:17">(<expr pos:start="31:13" pos:end="31:16"><name pos:start="31:13" pos:end="31:16">size</name></expr>)</condition> <block pos:start="31:19" pos:end="63:5">{<block_content pos:start="33:5" pos:end="61:14">

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">1</literal></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:46"><expr pos:start="35:9" pos:end="35:45"><call pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:28">virtio_config_writeb</name><argument_list pos:start="35:29" pos:end="35:45">(<argument pos:start="35:30" pos:end="35:33"><expr pos:start="35:30" pos:end="35:33"><name pos:start="35:30" pos:end="35:33">vdev</name></expr></argument>, <argument pos:start="35:36" pos:end="35:39"><expr pos:start="35:36" pos:end="35:39"><name pos:start="35:36" pos:end="35:39">addr</name></expr></argument>, <argument pos:start="35:42" pos:end="35:44"><expr pos:start="35:42" pos:end="35:44"><name pos:start="35:42" pos:end="35:44">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">2</literal></expr>:</case>

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:35">(<expr pos:start="41:13" pos:end="41:34"><call pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:32">virtio_is_big_endian</name><argument_list pos:start="41:33" pos:end="41:34">()</argument_list></call></expr>)</condition> <block pos:start="41:37" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:31">

            <expr_stmt pos:start="43:13" pos:end="43:31"><expr pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:15">val</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:30"><name pos:start="43:19" pos:end="43:25">bswap16</name><argument_list pos:start="43:26" pos:end="43:30">(<argument pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><name pos:start="43:27" pos:end="43:29">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:46"><expr pos:start="47:9" pos:end="47:45"><call pos:start="47:9" pos:end="47:45"><name pos:start="47:9" pos:end="47:28">virtio_config_writew</name><argument_list pos:start="47:29" pos:end="47:45">(<argument pos:start="47:30" pos:end="47:33"><expr pos:start="47:30" pos:end="47:33"><name pos:start="47:30" pos:end="47:33">vdev</name></expr></argument>, <argument pos:start="47:36" pos:end="47:39"><expr pos:start="47:36" pos:end="47:39"><name pos:start="47:36" pos:end="47:39">addr</name></expr></argument>, <argument pos:start="47:42" pos:end="47:44"><expr pos:start="47:42" pos:end="47:44"><name pos:start="47:42" pos:end="47:44">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:11">case <expr pos:start="51:10" pos:end="51:10"><literal type="number" pos:start="51:10" pos:end="51:10">4</literal></expr>:</case>

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:35">(<expr pos:start="53:13" pos:end="53:34"><call pos:start="53:13" pos:end="53:34"><name pos:start="53:13" pos:end="53:32">virtio_is_big_endian</name><argument_list pos:start="53:33" pos:end="53:34">()</argument_list></call></expr>)</condition> <block pos:start="53:37" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:31">

            <expr_stmt pos:start="55:13" pos:end="55:31"><expr pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:15">val</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:30"><name pos:start="55:19" pos:end="55:25">bswap32</name><argument_list pos:start="55:26" pos:end="55:30">(<argument pos:start="55:27" pos:end="55:29"><expr pos:start="55:27" pos:end="55:29"><name pos:start="55:27" pos:end="55:29">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:46"><expr pos:start="59:9" pos:end="59:45"><call pos:start="59:9" pos:end="59:45"><name pos:start="59:9" pos:end="59:28">virtio_config_writel</name><argument_list pos:start="59:29" pos:end="59:45">(<argument pos:start="59:30" pos:end="59:33"><expr pos:start="59:30" pos:end="59:33"><name pos:start="59:30" pos:end="59:33">vdev</name></expr></argument>, <argument pos:start="59:36" pos:end="59:39"><expr pos:start="59:36" pos:end="59:39"><name pos:start="59:36" pos:end="59:39">addr</name></expr></argument>, <argument pos:start="59:42" pos:end="59:44"><expr pos:start="59:42" pos:end="59:44"><name pos:start="59:42" pos:end="59:44">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
