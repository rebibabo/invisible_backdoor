<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16657.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">rtsp_parse_request</name><parameter_list pos:start="1:30" pos:end="1:45">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:41">HTTPContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="177:1">{<block_content pos:start="5:5" pos:end="175:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">p</name></decl>, <decl pos:start="5:20" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">p1</name></decl>, <decl pos:start="5:25" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:27">p2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:16"><name pos:start="7:10" pos:end="7:12">cmd</name><index pos:start="7:13" pos:end="7:16">[<expr pos:start="7:14" pos:end="7:15"><literal type="number" pos:start="7:14" pos:end="7:15">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:18"><name pos:start="9:10" pos:end="9:12">url</name><index pos:start="9:13" pos:end="9:18">[<expr pos:start="9:14" pos:end="9:17"><literal type="number" pos:start="9:14" pos:end="9:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:21"><name pos:start="11:10" pos:end="11:17">protocol</name><index pos:start="11:18" pos:end="11:21">[<expr pos:start="11:19" pos:end="11:20"><literal type="number" pos:start="11:19" pos:end="11:20">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:19"><name pos:start="13:10" pos:end="13:13">line</name><index pos:start="13:14" pos:end="13:19">[<expr pos:start="13:15" pos:end="13:18"><literal type="number" pos:start="13:15" pos:end="13:18">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:50"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:21">RTSPMessageHeader</name></type> <name pos:start="17:23" pos:end="17:29">header1</name></decl>, <decl pos:start="17:32" pos:end="17:49"><type ref="prev" pos:start="17:5" pos:end="17:21"><modifier pos:start="17:32" pos:end="17:32">*</modifier></type><name pos:start="17:33" pos:end="17:38">header</name> <init pos:start="17:40" pos:end="17:49">= <expr pos:start="17:42" pos:end="17:49"><operator pos:start="17:42" pos:end="17:42">&amp;</operator><name pos:start="17:43" pos:end="17:49">header1</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:5">c</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:17">buffer_ptr</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>]</index></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <literal type="char" pos:start="21:24" pos:end="21:27">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:5">p</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:17">buffer</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><call pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:12">get_word</name><argument_list pos:start="27:13" pos:end="27:34">(<argument pos:start="27:14" pos:end="27:16"><expr pos:start="27:14" pos:end="27:16"><name pos:start="27:14" pos:end="27:16">cmd</name></expr></argument>, <argument pos:start="27:19" pos:end="27:29"><expr pos:start="27:19" pos:end="27:29"><sizeof pos:start="27:19" pos:end="27:29">sizeof<argument_list pos:start="27:25" pos:end="27:29">(<argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:32" pos:end="27:33"><expr pos:start="27:32" pos:end="27:33"><operator pos:start="27:32" pos:end="27:32">&amp;</operator><name pos:start="27:33" pos:end="27:33">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><call pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:12">get_word</name><argument_list pos:start="29:13" pos:end="29:34">(<argument pos:start="29:14" pos:end="29:16"><expr pos:start="29:14" pos:end="29:16"><name pos:start="29:14" pos:end="29:16">url</name></expr></argument>, <argument pos:start="29:19" pos:end="29:29"><expr pos:start="29:19" pos:end="29:29"><sizeof pos:start="29:19" pos:end="29:29">sizeof<argument_list pos:start="29:25" pos:end="29:29">(<argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:28">url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:32" pos:end="29:33"><expr pos:start="29:32" pos:end="29:33"><operator pos:start="29:32" pos:end="29:32">&amp;</operator><name pos:start="29:33" pos:end="29:33">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:45"><expr pos:start="31:5" pos:end="31:44"><call pos:start="31:5" pos:end="31:44"><name pos:start="31:5" pos:end="31:12">get_word</name><argument_list pos:start="31:13" pos:end="31:44">(<argument pos:start="31:14" pos:end="31:21"><expr pos:start="31:14" pos:end="31:21"><name pos:start="31:14" pos:end="31:21">protocol</name></expr></argument>, <argument pos:start="31:24" pos:end="31:39"><expr pos:start="31:24" pos:end="31:39"><sizeof pos:start="31:24" pos:end="31:39">sizeof<argument_list pos:start="31:30" pos:end="31:39">(<argument pos:start="31:31" pos:end="31:38"><expr pos:start="31:31" pos:end="31:38"><name pos:start="31:31" pos:end="31:38">protocol</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:42" pos:end="31:43"><expr pos:start="31:42" pos:end="31:43"><operator pos:start="31:42" pos:end="31:42">&amp;</operator><name pos:start="31:43" pos:end="31:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:50"><expr pos:start="35:5" pos:end="35:49"><call pos:start="35:5" pos:end="35:49"><name pos:start="35:5" pos:end="35:14">av_strlcpy</name><argument_list pos:start="35:15" pos:end="35:49">(<argument pos:start="35:16" pos:end="35:24"><expr pos:start="35:16" pos:end="35:24"><name pos:start="35:16" pos:end="35:24"><name pos:start="35:16" pos:end="35:16">c</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:24">method</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:29">cmd</name></expr></argument>, <argument pos:start="35:32" pos:end="35:48"><expr pos:start="35:32" pos:end="35:48"><sizeof pos:start="35:32" pos:end="35:48">sizeof<argument_list pos:start="35:38" pos:end="35:48">(<argument pos:start="35:39" pos:end="35:47"><expr pos:start="35:39" pos:end="35:47"><name pos:start="35:39" pos:end="35:47"><name pos:start="35:39" pos:end="35:39">c</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:47">method</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:44"><expr pos:start="37:5" pos:end="37:43"><call pos:start="37:5" pos:end="37:43"><name pos:start="37:5" pos:end="37:14">av_strlcpy</name><argument_list pos:start="37:15" pos:end="37:43">(<argument pos:start="37:16" pos:end="37:21"><expr pos:start="37:16" pos:end="37:21"><name pos:start="37:16" pos:end="37:21"><name pos:start="37:16" pos:end="37:16">c</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:21">url</name></name></expr></argument>, <argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">url</name></expr></argument>, <argument pos:start="37:29" pos:end="37:42"><expr pos:start="37:29" pos:end="37:42"><sizeof pos:start="37:29" pos:end="37:42">sizeof<argument_list pos:start="37:35" pos:end="37:42">(<argument pos:start="37:36" pos:end="37:41"><expr pos:start="37:36" pos:end="37:41"><name pos:start="37:36" pos:end="37:41"><name pos:start="37:36" pos:end="37:36">c</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:41">url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:59"><expr pos:start="39:5" pos:end="39:58"><call pos:start="39:5" pos:end="39:58"><name pos:start="39:5" pos:end="39:14">av_strlcpy</name><argument_list pos:start="39:15" pos:end="39:58">(<argument pos:start="39:16" pos:end="39:26"><expr pos:start="39:16" pos:end="39:26"><name pos:start="39:16" pos:end="39:26"><name pos:start="39:16" pos:end="39:16">c</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:26">protocol</name></name></expr></argument>, <argument pos:start="39:29" pos:end="39:36"><expr pos:start="39:29" pos:end="39:36"><name pos:start="39:29" pos:end="39:36">protocol</name></expr></argument>, <argument pos:start="39:39" pos:end="39:57"><expr pos:start="39:39" pos:end="39:57"><sizeof pos:start="39:39" pos:end="39:57">sizeof<argument_list pos:start="39:45" pos:end="39:57">(<argument pos:start="39:46" pos:end="39:56"><expr pos:start="39:46" pos:end="39:56"><name pos:start="39:46" pos:end="39:56"><name pos:start="39:46" pos:end="39:46">c</name><operator pos:start="39:47" pos:end="39:48">-&gt;</operator><name pos:start="39:49" pos:end="39:56">protocol</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:37">(<expr pos:start="43:9" pos:end="43:36"><call pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:24">url_open_dyn_buf</name><argument_list pos:start="43:25" pos:end="43:32">(<argument pos:start="43:26" pos:end="43:31"><expr pos:start="43:26" pos:end="43:31"><operator pos:start="43:26" pos:end="43:26">&amp;</operator><name pos:start="43:27" pos:end="43:31"><name pos:start="43:27" pos:end="43:27">c</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:31">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="43:34" pos:end="43:34">&lt;</operator> <literal type="number" pos:start="43:36" pos:end="43:36">0</literal></expr>)</condition> <block pos:start="43:39" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:18">

        <comment type="block" pos:start="45:9" pos:end="45:33">/* XXX: cannot do more */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:21"><expr pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:13"><name pos:start="47:9" pos:end="47:9">c</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:13">pb</name></name> <operator pos:start="47:15" pos:end="47:15">=</operator> <name pos:start="47:17" pos:end="47:20">NULL</name></expr>;</expr_stmt> <comment type="block" pos:start="47:23" pos:end="47:34">/* safety */</comment>

        <return pos:start="49:9" pos:end="49:18">return <expr pos:start="49:16" pos:end="49:17"><operator pos:start="49:16" pos:end="49:16">-</operator><literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:28">/* check version name */</comment>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:42">(<expr pos:start="57:9" pos:end="57:41"><call pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:14">strcmp</name><argument_list pos:start="57:15" pos:end="57:36">(<argument pos:start="57:16" pos:end="57:23"><expr pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:23">protocol</name></expr></argument>, <argument pos:start="57:26" pos:end="57:35"><expr pos:start="57:26" pos:end="57:35"><literal type="string" pos:start="57:26" pos:end="57:35">"RTSP/1.0"</literal></expr></argument>)</argument_list></call> <operator pos:start="57:38" pos:end="57:39">!=</operator> <literal type="number" pos:start="57:41" pos:end="57:41">0</literal></expr>)</condition> <block pos:start="57:44" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:21">

        <expr_stmt pos:start="59:9" pos:end="59:49"><expr pos:start="59:9" pos:end="59:48"><call pos:start="59:9" pos:end="59:48"><name pos:start="59:9" pos:end="59:24">rtsp_reply_error</name><argument_list pos:start="59:25" pos:end="59:48">(<argument pos:start="59:26" pos:end="59:26"><expr pos:start="59:26" pos:end="59:26"><name pos:start="59:26" pos:end="59:26">c</name></expr></argument>, <argument pos:start="59:29" pos:end="59:47"><expr pos:start="59:29" pos:end="59:47"><name pos:start="59:29" pos:end="59:47">RTSP_STATUS_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:21">goto <name pos:start="61:14" pos:end="61:20">the_end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:32">/* parse each header line */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:39"><expr pos:start="69:5" pos:end="69:38"><call pos:start="69:5" pos:end="69:38"><name pos:start="69:5" pos:end="69:10">memset</name><argument_list pos:start="69:11" pos:end="69:38">(<argument pos:start="69:12" pos:end="69:17"><expr pos:start="69:12" pos:end="69:17"><name pos:start="69:12" pos:end="69:17">header</name></expr></argument>, <argument pos:start="69:20" pos:end="69:20"><expr pos:start="69:20" pos:end="69:20"><literal type="number" pos:start="69:20" pos:end="69:20">0</literal></expr></argument>, <argument pos:start="69:23" pos:end="69:37"><expr pos:start="69:23" pos:end="69:37"><sizeof pos:start="69:23" pos:end="69:37">sizeof<argument_list pos:start="69:29" pos:end="69:37">(<argument pos:start="69:30" pos:end="69:36"><expr pos:start="69:30" pos:end="69:36"><operator pos:start="69:30" pos:end="69:30">*</operator><name pos:start="69:31" pos:end="69:36">header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="71:5" pos:end="71:27">/* skip to next line */</comment>

    <while pos:start="73:5" pos:end="75:12">while <condition pos:start="73:11" pos:end="73:36">(<expr pos:start="73:12" pos:end="73:35"><operator pos:start="73:12" pos:end="73:12">*</operator><name pos:start="73:13" pos:end="73:13">p</name> <operator pos:start="73:15" pos:end="73:16">!=</operator> <literal type="char" pos:start="73:18" pos:end="73:21">'\n'</literal> <operator pos:start="73:23" pos:end="73:24">&amp;&amp;</operator> <operator pos:start="73:26" pos:end="73:26">*</operator><name pos:start="73:27" pos:end="73:27">p</name> <operator pos:start="73:29" pos:end="73:30">!=</operator> <literal type="char" pos:start="73:32" pos:end="73:35">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:12"><block_content pos:start="75:9" pos:end="75:12">

        <expr_stmt pos:start="75:9" pos:end="75:12"><expr pos:start="75:9" pos:end="75:11"><name pos:start="75:9" pos:end="75:9">p</name><operator pos:start="75:10" pos:end="75:11">++</operator></expr>;</expr_stmt></block_content></block></while>

    <if_stmt pos:start="77:5" pos:end="79:12"><if pos:start="77:5" pos:end="79:12">if <condition pos:start="77:8" pos:end="77:19">(<expr pos:start="77:9" pos:end="77:18"><operator pos:start="77:9" pos:end="77:9">*</operator><name pos:start="77:10" pos:end="77:10">p</name> <operator pos:start="77:12" pos:end="77:13">==</operator> <literal type="char" pos:start="77:15" pos:end="77:18">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:12"><block_content pos:start="79:9" pos:end="79:12">

        <expr_stmt pos:start="79:9" pos:end="79:12"><expr pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:9">p</name><operator pos:start="79:10" pos:end="79:11">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <while pos:start="81:5" pos:end="115:5">while <condition pos:start="81:11" pos:end="81:22">(<expr pos:start="81:12" pos:end="81:21"><operator pos:start="81:12" pos:end="81:12">*</operator><name pos:start="81:13" pos:end="81:13">p</name> <operator pos:start="81:15" pos:end="81:16">!=</operator> <literal type="char" pos:start="81:18" pos:end="81:21">'\0'</literal></expr>)</condition> <block pos:start="81:24" pos:end="115:5">{<block_content pos:start="83:9" pos:end="113:19">

        <expr_stmt pos:start="83:9" pos:end="83:29"><expr pos:start="83:9" pos:end="83:28"><name pos:start="83:9" pos:end="83:10">p1</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="83:28"><name pos:start="83:14" pos:end="83:19">strchr</name><argument_list pos:start="83:20" pos:end="83:28">(<argument pos:start="83:21" pos:end="83:21"><expr pos:start="83:21" pos:end="83:21"><name pos:start="83:21" pos:end="83:21">p</name></expr></argument>, <argument pos:start="83:24" pos:end="83:27"><expr pos:start="83:24" pos:end="83:27"><literal type="char" pos:start="83:24" pos:end="83:27">'\n'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="87:18"><if pos:start="85:9" pos:end="87:18">if <condition pos:start="85:12" pos:end="85:16">(<expr pos:start="85:13" pos:end="85:15"><operator pos:start="85:13" pos:end="85:13">!</operator><name pos:start="85:14" pos:end="85:15">p1</name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:18"><block_content pos:start="87:13" pos:end="87:18">

            <break pos:start="87:13" pos:end="87:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:16"><expr pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:10">p2</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <name pos:start="89:14" pos:end="89:15">p1</name></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="93:17"><if pos:start="91:9" pos:end="93:17">if <condition pos:start="91:12" pos:end="91:37">(<expr pos:start="91:13" pos:end="91:36"><name pos:start="91:13" pos:end="91:14">p2</name> <operator pos:start="91:16" pos:end="91:16">&gt;</operator> <name pos:start="91:18" pos:end="91:18">p</name> <operator pos:start="91:20" pos:end="91:21">&amp;&amp;</operator> <name pos:start="91:23" pos:end="91:28"><name pos:start="91:23" pos:end="91:24">p2</name><index pos:start="91:25" pos:end="91:28">[<expr pos:start="91:26" pos:end="91:27"><operator pos:start="91:26" pos:end="91:26">-</operator><literal type="number" pos:start="91:27" pos:end="91:27">1</literal></expr>]</index></name> <operator pos:start="91:30" pos:end="91:31">==</operator> <literal type="char" pos:start="91:33" pos:end="91:36">'\r'</literal></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:17"><block_content pos:start="93:13" pos:end="93:17">

            <expr_stmt pos:start="93:13" pos:end="93:17"><expr pos:start="93:13" pos:end="93:16"><name pos:start="93:13" pos:end="93:14">p2</name><operator pos:start="93:15" pos:end="93:16">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <comment type="block" pos:start="95:9" pos:end="95:29">/* skip empty line */</comment>

        <if_stmt pos:start="97:9" pos:end="99:18"><if pos:start="97:9" pos:end="99:18">if <condition pos:start="97:12" pos:end="97:20">(<expr pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:14">p2</name> <operator pos:start="97:16" pos:end="97:17">==</operator> <name pos:start="97:19" pos:end="97:19">p</name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:18"><block_content pos:start="99:13" pos:end="99:18">

            <break pos:start="99:13" pos:end="99:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:21"><expr pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:11">len</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <name pos:start="101:15" pos:end="101:16">p2</name> <operator pos:start="101:18" pos:end="101:18">-</operator> <name pos:start="101:20" pos:end="101:20">p</name></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="105:35"><if pos:start="103:9" pos:end="105:35">if <condition pos:start="103:12" pos:end="103:35">(<expr pos:start="103:13" pos:end="103:34"><name pos:start="103:13" pos:end="103:15">len</name> <operator pos:start="103:17" pos:end="103:17">&gt;</operator> <sizeof pos:start="103:19" pos:end="103:30">sizeof<argument_list pos:start="103:25" pos:end="103:30">(<argument pos:start="103:26" pos:end="103:29"><expr pos:start="103:26" pos:end="103:29"><name pos:start="103:26" pos:end="103:29">line</name></expr></argument>)</argument_list></sizeof> <operator pos:start="103:32" pos:end="103:32">-</operator> <literal type="number" pos:start="103:34" pos:end="103:34">1</literal></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:35"><block_content pos:start="105:13" pos:end="105:35">

            <expr_stmt pos:start="105:13" pos:end="105:35"><expr pos:start="105:13" pos:end="105:34"><name pos:start="105:13" pos:end="105:15">len</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <sizeof pos:start="105:19" pos:end="105:30">sizeof<argument_list pos:start="105:25" pos:end="105:30">(<argument pos:start="105:26" pos:end="105:29"><expr pos:start="105:26" pos:end="105:29"><name pos:start="105:26" pos:end="105:29">line</name></expr></argument>)</argument_list></sizeof> <operator pos:start="105:32" pos:end="105:32">-</operator> <literal type="number" pos:start="105:34" pos:end="105:34">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:29"><expr pos:start="107:9" pos:end="107:28"><call pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:14">memcpy</name><argument_list pos:start="107:15" pos:end="107:28">(<argument pos:start="107:16" pos:end="107:19"><expr pos:start="107:16" pos:end="107:19"><name pos:start="107:16" pos:end="107:19">line</name></expr></argument>, <argument pos:start="107:22" pos:end="107:22"><expr pos:start="107:22" pos:end="107:22"><name pos:start="107:22" pos:end="107:22">p</name></expr></argument>, <argument pos:start="107:25" pos:end="107:27"><expr pos:start="107:25" pos:end="107:27"><name pos:start="107:25" pos:end="107:27">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:25"><expr pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:17"><name pos:start="109:9" pos:end="109:12">line</name><index pos:start="109:13" pos:end="109:17">[<expr pos:start="109:14" pos:end="109:16"><name pos:start="109:14" pos:end="109:16">len</name></expr>]</index></name> <operator pos:start="109:19" pos:end="109:19">=</operator> <literal type="char" pos:start="109:21" pos:end="109:24">'\0'</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:47"><expr pos:start="111:9" pos:end="111:46"><call pos:start="111:9" pos:end="111:46"><name pos:start="111:9" pos:end="111:26">ff_rtsp_parse_line</name><argument_list pos:start="111:27" pos:end="111:46">(<argument pos:start="111:28" pos:end="111:33"><expr pos:start="111:28" pos:end="111:33"><name pos:start="111:28" pos:end="111:33">header</name></expr></argument>, <argument pos:start="111:36" pos:end="111:39"><expr pos:start="111:36" pos:end="111:39"><name pos:start="111:36" pos:end="111:39">line</name></expr></argument>, <argument pos:start="111:42" pos:end="111:45"><expr pos:start="111:42" pos:end="111:45"><name pos:start="111:42" pos:end="111:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:19"><expr pos:start="113:9" pos:end="113:18"><name pos:start="113:9" pos:end="113:9">p</name> <operator pos:start="113:11" pos:end="113:11">=</operator> <name pos:start="113:13" pos:end="113:14">p1</name> <operator pos:start="113:16" pos:end="113:16">+</operator> <literal type="number" pos:start="113:18" pos:end="113:18">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="119:5" pos:end="119:32">/* handle sequence number */</comment>

    <expr_stmt pos:start="121:5" pos:end="121:25"><expr pos:start="121:5" pos:end="121:24"><name pos:start="121:5" pos:end="121:10"><name pos:start="121:5" pos:end="121:5">c</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:10">seq</name></name> <operator pos:start="121:12" pos:end="121:12">=</operator> <name pos:start="121:14" pos:end="121:24"><name pos:start="121:14" pos:end="121:19">header</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:24">seq</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="125:5" pos:end="151:48"><if pos:start="125:5" pos:end="127:34">if <condition pos:start="125:8" pos:end="125:33">(<expr pos:start="125:9" pos:end="125:32"><operator pos:start="125:9" pos:end="125:9">!</operator><call pos:start="125:10" pos:end="125:32"><name pos:start="125:10" pos:end="125:15">strcmp</name><argument_list pos:start="125:16" pos:end="125:32">(<argument pos:start="125:17" pos:end="125:19"><expr pos:start="125:17" pos:end="125:19"><name pos:start="125:17" pos:end="125:19">cmd</name></expr></argument>, <argument pos:start="125:22" pos:end="125:31"><expr pos:start="125:22" pos:end="125:31"><literal type="string" pos:start="125:22" pos:end="125:31">"DESCRIBE"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="127:9" pos:end="127:34"><block_content pos:start="127:9" pos:end="127:34">

        <expr_stmt pos:start="127:9" pos:end="127:34"><expr pos:start="127:9" pos:end="127:33"><call pos:start="127:9" pos:end="127:33"><name pos:start="127:9" pos:end="127:25">rtsp_cmd_describe</name><argument_list pos:start="127:26" pos:end="127:33">(<argument pos:start="127:27" pos:end="127:27"><expr pos:start="127:27" pos:end="127:27"><name pos:start="127:27" pos:end="127:27">c</name></expr></argument>, <argument pos:start="127:30" pos:end="127:32"><expr pos:start="127:30" pos:end="127:32"><name pos:start="127:30" pos:end="127:32">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="129:5" pos:end="131:33">else if <condition pos:start="129:13" pos:end="129:37">(<expr pos:start="129:14" pos:end="129:36"><operator pos:start="129:14" pos:end="129:14">!</operator><call pos:start="129:15" pos:end="129:36"><name pos:start="129:15" pos:end="129:20">strcmp</name><argument_list pos:start="129:21" pos:end="129:36">(<argument pos:start="129:22" pos:end="129:24"><expr pos:start="129:22" pos:end="129:24"><name pos:start="129:22" pos:end="129:24">cmd</name></expr></argument>, <argument pos:start="129:27" pos:end="129:35"><expr pos:start="129:27" pos:end="129:35"><literal type="string" pos:start="129:27" pos:end="129:35">"OPTIONS"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:33"><block_content pos:start="131:9" pos:end="131:33">

        <expr_stmt pos:start="131:9" pos:end="131:33"><expr pos:start="131:9" pos:end="131:32"><call pos:start="131:9" pos:end="131:32"><name pos:start="131:9" pos:end="131:24">rtsp_cmd_options</name><argument_list pos:start="131:25" pos:end="131:32">(<argument pos:start="131:26" pos:end="131:26"><expr pos:start="131:26" pos:end="131:26"><name pos:start="131:26" pos:end="131:26">c</name></expr></argument>, <argument pos:start="131:29" pos:end="131:31"><expr pos:start="131:29" pos:end="131:31"><name pos:start="131:29" pos:end="131:31">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="133:5" pos:end="135:39">else if <condition pos:start="133:13" pos:end="133:35">(<expr pos:start="133:14" pos:end="133:34"><operator pos:start="133:14" pos:end="133:14">!</operator><call pos:start="133:15" pos:end="133:34"><name pos:start="133:15" pos:end="133:20">strcmp</name><argument_list pos:start="133:21" pos:end="133:34">(<argument pos:start="133:22" pos:end="133:24"><expr pos:start="133:22" pos:end="133:24"><name pos:start="133:22" pos:end="133:24">cmd</name></expr></argument>, <argument pos:start="133:27" pos:end="133:33"><expr pos:start="133:27" pos:end="133:33"><literal type="string" pos:start="133:27" pos:end="133:33">"SETUP"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="135:39"><block_content pos:start="135:9" pos:end="135:39">

        <expr_stmt pos:start="135:9" pos:end="135:39"><expr pos:start="135:9" pos:end="135:38"><call pos:start="135:9" pos:end="135:38"><name pos:start="135:9" pos:end="135:22">rtsp_cmd_setup</name><argument_list pos:start="135:23" pos:end="135:38">(<argument pos:start="135:24" pos:end="135:24"><expr pos:start="135:24" pos:end="135:24"><name pos:start="135:24" pos:end="135:24">c</name></expr></argument>, <argument pos:start="135:27" pos:end="135:29"><expr pos:start="135:27" pos:end="135:29"><name pos:start="135:27" pos:end="135:29">url</name></expr></argument>, <argument pos:start="135:32" pos:end="135:37"><expr pos:start="135:32" pos:end="135:37"><name pos:start="135:32" pos:end="135:37">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="137:5" pos:end="139:38">else if <condition pos:start="137:13" pos:end="137:34">(<expr pos:start="137:14" pos:end="137:33"><operator pos:start="137:14" pos:end="137:14">!</operator><call pos:start="137:15" pos:end="137:33"><name pos:start="137:15" pos:end="137:20">strcmp</name><argument_list pos:start="137:21" pos:end="137:33">(<argument pos:start="137:22" pos:end="137:24"><expr pos:start="137:22" pos:end="137:24"><name pos:start="137:22" pos:end="137:24">cmd</name></expr></argument>, <argument pos:start="137:27" pos:end="137:32"><expr pos:start="137:27" pos:end="137:32"><literal type="string" pos:start="137:27" pos:end="137:32">"PLAY"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:38"><block_content pos:start="139:9" pos:end="139:38">

        <expr_stmt pos:start="139:9" pos:end="139:38"><expr pos:start="139:9" pos:end="139:37"><call pos:start="139:9" pos:end="139:37"><name pos:start="139:9" pos:end="139:21">rtsp_cmd_play</name><argument_list pos:start="139:22" pos:end="139:37">(<argument pos:start="139:23" pos:end="139:23"><expr pos:start="139:23" pos:end="139:23"><name pos:start="139:23" pos:end="139:23">c</name></expr></argument>, <argument pos:start="139:26" pos:end="139:28"><expr pos:start="139:26" pos:end="139:28"><name pos:start="139:26" pos:end="139:28">url</name></expr></argument>, <argument pos:start="139:31" pos:end="139:36"><expr pos:start="139:31" pos:end="139:36"><name pos:start="139:31" pos:end="139:36">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="141:5" pos:end="143:39">else if <condition pos:start="141:13" pos:end="141:35">(<expr pos:start="141:14" pos:end="141:34"><operator pos:start="141:14" pos:end="141:14">!</operator><call pos:start="141:15" pos:end="141:34"><name pos:start="141:15" pos:end="141:20">strcmp</name><argument_list pos:start="141:21" pos:end="141:34">(<argument pos:start="141:22" pos:end="141:24"><expr pos:start="141:22" pos:end="141:24"><name pos:start="141:22" pos:end="141:24">cmd</name></expr></argument>, <argument pos:start="141:27" pos:end="141:33"><expr pos:start="141:27" pos:end="141:33"><literal type="string" pos:start="141:27" pos:end="141:33">"PAUSE"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="143:39"><block_content pos:start="143:9" pos:end="143:39">

        <expr_stmt pos:start="143:9" pos:end="143:39"><expr pos:start="143:9" pos:end="143:38"><call pos:start="143:9" pos:end="143:38"><name pos:start="143:9" pos:end="143:22">rtsp_cmd_pause</name><argument_list pos:start="143:23" pos:end="143:38">(<argument pos:start="143:24" pos:end="143:24"><expr pos:start="143:24" pos:end="143:24"><name pos:start="143:24" pos:end="143:24">c</name></expr></argument>, <argument pos:start="143:27" pos:end="143:29"><expr pos:start="143:27" pos:end="143:29"><name pos:start="143:27" pos:end="143:29">url</name></expr></argument>, <argument pos:start="143:32" pos:end="143:37"><expr pos:start="143:32" pos:end="143:37"><name pos:start="143:32" pos:end="143:37">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="145:5" pos:end="147:42">else if <condition pos:start="145:13" pos:end="145:38">(<expr pos:start="145:14" pos:end="145:37"><operator pos:start="145:14" pos:end="145:14">!</operator><call pos:start="145:15" pos:end="145:37"><name pos:start="145:15" pos:end="145:20">strcmp</name><argument_list pos:start="145:21" pos:end="145:37">(<argument pos:start="145:22" pos:end="145:24"><expr pos:start="145:22" pos:end="145:24"><name pos:start="145:22" pos:end="145:24">cmd</name></expr></argument>, <argument pos:start="145:27" pos:end="145:36"><expr pos:start="145:27" pos:end="145:36"><literal type="string" pos:start="145:27" pos:end="145:36">"TEARDOWN"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:42"><block_content pos:start="147:9" pos:end="147:42">

        <expr_stmt pos:start="147:9" pos:end="147:42"><expr pos:start="147:9" pos:end="147:41"><call pos:start="147:9" pos:end="147:41"><name pos:start="147:9" pos:end="147:25">rtsp_cmd_teardown</name><argument_list pos:start="147:26" pos:end="147:41">(<argument pos:start="147:27" pos:end="147:27"><expr pos:start="147:27" pos:end="147:27"><name pos:start="147:27" pos:end="147:27">c</name></expr></argument>, <argument pos:start="147:30" pos:end="147:32"><expr pos:start="147:30" pos:end="147:32"><name pos:start="147:30" pos:end="147:32">url</name></expr></argument>, <argument pos:start="147:35" pos:end="147:40"><expr pos:start="147:35" pos:end="147:40"><name pos:start="147:35" pos:end="147:40">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="149:5" pos:end="151:48">else<block type="pseudo" pos:start="151:9" pos:end="151:48"><block_content pos:start="151:9" pos:end="151:48">

        <expr_stmt pos:start="151:9" pos:end="151:48"><expr pos:start="151:9" pos:end="151:47"><call pos:start="151:9" pos:end="151:47"><name pos:start="151:9" pos:end="151:24">rtsp_reply_error</name><argument_list pos:start="151:25" pos:end="151:47">(<argument pos:start="151:26" pos:end="151:26"><expr pos:start="151:26" pos:end="151:26"><name pos:start="151:26" pos:end="151:26">c</name></expr></argument>, <argument pos:start="151:29" pos:end="151:46"><expr pos:start="151:29" pos:end="151:46"><name pos:start="151:29" pos:end="151:46">RTSP_STATUS_METHOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



 <label pos:start="155:2" pos:end="155:9"><name pos:start="155:2" pos:end="155:8">the_end</name>:</label>

    <expr_stmt pos:start="157:5" pos:end="157:50"><expr pos:start="157:5" pos:end="157:49"><name pos:start="157:5" pos:end="157:7">len</name> <operator pos:start="157:9" pos:end="157:9">=</operator> <call pos:start="157:11" pos:end="157:49"><name pos:start="157:11" pos:end="157:27">url_close_dyn_buf</name><argument_list pos:start="157:28" pos:end="157:49">(<argument pos:start="157:29" pos:end="157:33"><expr pos:start="157:29" pos:end="157:33"><name pos:start="157:29" pos:end="157:33"><name pos:start="157:29" pos:end="157:29">c</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:33">pb</name></name></expr></argument>, <argument pos:start="157:36" pos:end="157:48"><expr pos:start="157:36" pos:end="157:48"><operator pos:start="157:36" pos:end="157:36">&amp;</operator><name pos:start="157:37" pos:end="157:48"><name pos:start="157:37" pos:end="157:37">c</name><operator pos:start="157:38" pos:end="157:39">-&gt;</operator><name pos:start="157:40" pos:end="157:48">pb_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:17"><expr pos:start="159:5" pos:end="159:16"><name pos:start="159:5" pos:end="159:9"><name pos:start="159:5" pos:end="159:5">c</name><operator pos:start="159:6" pos:end="159:7">-&gt;</operator><name pos:start="159:8" pos:end="159:9">pb</name></name> <operator pos:start="159:11" pos:end="159:11">=</operator> <name pos:start="159:13" pos:end="159:16">NULL</name></expr>;</expr_stmt> <comment type="block" pos:start="159:19" pos:end="159:30">/* safety */</comment>

    <if_stmt pos:start="161:5" pos:end="167:5"><if pos:start="161:5" pos:end="167:5">if <condition pos:start="161:8" pos:end="161:16">(<expr pos:start="161:9" pos:end="161:15"><name pos:start="161:9" pos:end="161:11">len</name> <operator pos:start="161:13" pos:end="161:13">&lt;</operator> <literal type="number" pos:start="161:15" pos:end="161:15">0</literal></expr>)</condition> <block pos:start="161:18" pos:end="167:5">{<block_content pos:start="165:9" pos:end="165:18">

        <comment type="block" pos:start="163:9" pos:end="163:33">/* XXX: cannot do more */</comment>

        <return pos:start="165:9" pos:end="165:18">return <expr pos:start="165:16" pos:end="165:17"><operator pos:start="165:16" pos:end="165:16">-</operator><literal type="number" pos:start="165:17" pos:end="165:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:33"><expr pos:start="169:5" pos:end="169:32"><name pos:start="169:5" pos:end="169:17"><name pos:start="169:5" pos:end="169:5">c</name><operator pos:start="169:6" pos:end="169:7">-&gt;</operator><name pos:start="169:8" pos:end="169:17">buffer_ptr</name></name> <operator pos:start="169:19" pos:end="169:19">=</operator> <name pos:start="169:21" pos:end="169:32"><name pos:start="169:21" pos:end="169:21">c</name><operator pos:start="169:22" pos:end="169:23">-&gt;</operator><name pos:start="169:24" pos:end="169:32">pb_buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:39"><expr pos:start="171:5" pos:end="171:38"><name pos:start="171:5" pos:end="171:17"><name pos:start="171:5" pos:end="171:5">c</name><operator pos:start="171:6" pos:end="171:7">-&gt;</operator><name pos:start="171:8" pos:end="171:17">buffer_end</name></name> <operator pos:start="171:19" pos:end="171:19">=</operator> <name pos:start="171:21" pos:end="171:32"><name pos:start="171:21" pos:end="171:21">c</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:32">pb_buffer</name></name> <operator pos:start="171:34" pos:end="171:34">+</operator> <name pos:start="171:36" pos:end="171:38">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:36"><expr pos:start="173:5" pos:end="173:35"><name pos:start="173:5" pos:end="173:12"><name pos:start="173:5" pos:end="173:5">c</name><operator pos:start="173:6" pos:end="173:7">-&gt;</operator><name pos:start="173:8" pos:end="173:12">state</name></name> <operator pos:start="173:14" pos:end="173:14">=</operator> <name pos:start="173:16" pos:end="173:35">RTSPSTATE_SEND_REPLY</name></expr>;</expr_stmt>

    <return pos:start="175:5" pos:end="175:13">return <expr pos:start="175:12" pos:end="175:12"><literal type="number" pos:start="175:12" pos:end="175:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
