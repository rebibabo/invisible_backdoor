<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11344.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">exit_program</name><parameter_list pos:start="1:25" pos:end="1:30">(<parameter pos:start="1:26" pos:end="1:29"><decl pos:start="1:26" pos:end="1:29"><type pos:start="1:26" pos:end="1:29"><name pos:start="1:26" pos:end="1:29">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="151:1">{<block_content pos:start="5:5" pos:end="149:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="37:5">for <control pos:start="9:9" pos:end="9:41">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:36"><expr pos:start="9:17" pos:end="9:35"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:35">nb_filtergraphs</name></expr>;</condition> <incr pos:start="9:38" pos:end="9:40"><expr pos:start="9:38" pos:end="9:40"><name pos:start="9:38" pos:end="9:38">i</name><operator pos:start="9:39" pos:end="9:40">++</operator></expr></incr>)</control> <block pos:start="9:43" pos:end="37:5">{<block_content pos:start="11:9" pos:end="35:35">

        <expr_stmt pos:start="11:9" pos:end="11:53"><expr pos:start="11:9" pos:end="11:52"><call pos:start="11:9" pos:end="11:52"><name pos:start="11:9" pos:end="11:27">avfilter_graph_free</name><argument_list pos:start="11:28" pos:end="11:52">(<argument pos:start="11:29" pos:end="11:51"><expr pos:start="11:29" pos:end="11:51"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:44"><name pos:start="11:30" pos:end="11:41">filtergraphs</name><index pos:start="11:42" pos:end="11:44">[<expr pos:start="11:43" pos:end="11:43"><name pos:start="11:43" pos:end="11:43">i</name></expr>]</index></name><operator pos:start="11:45" pos:end="11:46">-&gt;</operator><name pos:start="11:47" pos:end="11:51">graph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="13:9" pos:end="19:9">for <control pos:start="13:13" pos:end="13:56">(<init pos:start="13:14" pos:end="13:19"><expr pos:start="13:14" pos:end="13:18"><name pos:start="13:14" pos:end="13:14">j</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>;</init> <condition pos:start="13:21" pos:end="13:51"><expr pos:start="13:21" pos:end="13:50"><name pos:start="13:21" pos:end="13:21">j</name> <operator pos:start="13:23" pos:end="13:23">&lt;</operator> <name pos:start="13:25" pos:end="13:39"><name pos:start="13:25" pos:end="13:36">filtergraphs</name><index pos:start="13:37" pos:end="13:39">[<expr pos:start="13:38" pos:end="13:38"><name pos:start="13:38" pos:end="13:38">i</name></expr>]</index></name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:50">nb_inputs</name></expr>;</condition> <incr pos:start="13:53" pos:end="13:55"><expr pos:start="13:53" pos:end="13:55"><name pos:start="13:53" pos:end="13:53">j</name><operator pos:start="13:54" pos:end="13:55">++</operator></expr></incr>)</control> <block pos:start="13:58" pos:end="19:9">{<block_content pos:start="15:13" pos:end="17:50">

            <expr_stmt pos:start="15:13" pos:end="15:56"><expr pos:start="15:13" pos:end="15:55"><call pos:start="15:13" pos:end="15:55"><name pos:start="15:13" pos:end="15:20">av_freep</name><argument_list pos:start="15:21" pos:end="15:55">(<argument pos:start="15:22" pos:end="15:54"><expr pos:start="15:22" pos:end="15:54"><operator pos:start="15:22" pos:end="15:22">&amp;</operator><name pos:start="15:23" pos:end="15:37"><name pos:start="15:23" pos:end="15:34">filtergraphs</name><index pos:start="15:35" pos:end="15:37">[<expr pos:start="15:36" pos:end="15:36"><name pos:start="15:36" pos:end="15:36">i</name></expr>]</index></name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:48"><name pos:start="15:40" pos:end="15:45">inputs</name><index pos:start="15:46" pos:end="15:48">[<expr pos:start="15:47" pos:end="15:47"><name pos:start="15:47" pos:end="15:47">j</name></expr>]</index></name><operator pos:start="15:49" pos:end="15:50">-&gt;</operator><name pos:start="15:51" pos:end="15:54">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="17:13" pos:end="17:50"><expr pos:start="17:13" pos:end="17:49"><call pos:start="17:13" pos:end="17:49"><name pos:start="17:13" pos:end="17:20">av_freep</name><argument_list pos:start="17:21" pos:end="17:49">(<argument pos:start="17:22" pos:end="17:48"><expr pos:start="17:22" pos:end="17:48"><operator pos:start="17:22" pos:end="17:22">&amp;</operator><name pos:start="17:23" pos:end="17:37"><name pos:start="17:23" pos:end="17:34">filtergraphs</name><index pos:start="17:35" pos:end="17:37">[<expr pos:start="17:36" pos:end="17:36"><name pos:start="17:36" pos:end="17:36">i</name></expr>]</index></name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:48"><name pos:start="17:40" pos:end="17:45">inputs</name><index pos:start="17:46" pos:end="17:48">[<expr pos:start="17:47" pos:end="17:47"><name pos:start="17:47" pos:end="17:47">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="21:9" pos:end="21:43"><expr pos:start="21:9" pos:end="21:42"><call pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:16">av_freep</name><argument_list pos:start="21:17" pos:end="21:42">(<argument pos:start="21:18" pos:end="21:41"><expr pos:start="21:18" pos:end="21:41"><operator pos:start="21:18" pos:end="21:18">&amp;</operator><name pos:start="21:19" pos:end="21:33"><name pos:start="21:19" pos:end="21:30">filtergraphs</name><index pos:start="21:31" pos:end="21:33">[<expr pos:start="21:32" pos:end="21:32"><name pos:start="21:32" pos:end="21:32">i</name></expr>]</index></name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:41">inputs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="23:9" pos:end="29:9">for <control pos:start="23:13" pos:end="23:57">(<init pos:start="23:14" pos:end="23:19"><expr pos:start="23:14" pos:end="23:18"><name pos:start="23:14" pos:end="23:14">j</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>;</init> <condition pos:start="23:21" pos:end="23:52"><expr pos:start="23:21" pos:end="23:51"><name pos:start="23:21" pos:end="23:21">j</name> <operator pos:start="23:23" pos:end="23:23">&lt;</operator> <name pos:start="23:25" pos:end="23:39"><name pos:start="23:25" pos:end="23:36">filtergraphs</name><index pos:start="23:37" pos:end="23:39">[<expr pos:start="23:38" pos:end="23:38"><name pos:start="23:38" pos:end="23:38">i</name></expr>]</index></name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:51">nb_outputs</name></expr>;</condition> <incr pos:start="23:54" pos:end="23:56"><expr pos:start="23:54" pos:end="23:56"><name pos:start="23:54" pos:end="23:54">j</name><operator pos:start="23:55" pos:end="23:56">++</operator></expr></incr>)</control> <block pos:start="23:59" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:51">

            <expr_stmt pos:start="25:13" pos:end="25:57"><expr pos:start="25:13" pos:end="25:56"><call pos:start="25:13" pos:end="25:56"><name pos:start="25:13" pos:end="25:20">av_freep</name><argument_list pos:start="25:21" pos:end="25:56">(<argument pos:start="25:22" pos:end="25:55"><expr pos:start="25:22" pos:end="25:55"><operator pos:start="25:22" pos:end="25:22">&amp;</operator><name pos:start="25:23" pos:end="25:37"><name pos:start="25:23" pos:end="25:34">filtergraphs</name><index pos:start="25:35" pos:end="25:37">[<expr pos:start="25:36" pos:end="25:36"><name pos:start="25:36" pos:end="25:36">i</name></expr>]</index></name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:49"><name pos:start="25:40" pos:end="25:46">outputs</name><index pos:start="25:47" pos:end="25:49">[<expr pos:start="25:48" pos:end="25:48"><name pos:start="25:48" pos:end="25:48">j</name></expr>]</index></name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:55">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:51"><expr pos:start="27:13" pos:end="27:50"><call pos:start="27:13" pos:end="27:50"><name pos:start="27:13" pos:end="27:20">av_freep</name><argument_list pos:start="27:21" pos:end="27:50">(<argument pos:start="27:22" pos:end="27:49"><expr pos:start="27:22" pos:end="27:49"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:37"><name pos:start="27:23" pos:end="27:34">filtergraphs</name><index pos:start="27:35" pos:end="27:37">[<expr pos:start="27:36" pos:end="27:36"><name pos:start="27:36" pos:end="27:36">i</name></expr>]</index></name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:49"><name pos:start="27:40" pos:end="27:46">outputs</name><index pos:start="27:47" pos:end="27:49">[<expr pos:start="27:48" pos:end="27:48"><name pos:start="27:48" pos:end="27:48">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="31:9" pos:end="31:44"><expr pos:start="31:9" pos:end="31:43"><call pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:16">av_freep</name><argument_list pos:start="31:17" pos:end="31:43">(<argument pos:start="31:18" pos:end="31:42"><expr pos:start="31:18" pos:end="31:42"><operator pos:start="31:18" pos:end="31:18">&amp;</operator><name pos:start="31:19" pos:end="31:33"><name pos:start="31:19" pos:end="31:30">filtergraphs</name><index pos:start="31:31" pos:end="31:33">[<expr pos:start="31:32" pos:end="31:32"><name pos:start="31:32" pos:end="31:32">i</name></expr>]</index></name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:42">outputs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:47"><expr pos:start="33:9" pos:end="33:46"><call pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:16">av_freep</name><argument_list pos:start="33:17" pos:end="33:46">(<argument pos:start="33:18" pos:end="33:45"><expr pos:start="33:18" pos:end="33:45"><operator pos:start="33:18" pos:end="33:18">&amp;</operator><name pos:start="33:19" pos:end="33:33"><name pos:start="33:19" pos:end="33:30">filtergraphs</name><index pos:start="33:31" pos:end="33:33">[<expr pos:start="33:32" pos:end="33:32"><name pos:start="33:32" pos:end="33:32">i</name></expr>]</index></name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:45">graph_desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:35"><expr pos:start="35:9" pos:end="35:34"><call pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:16">av_freep</name><argument_list pos:start="35:17" pos:end="35:34">(<argument pos:start="35:18" pos:end="35:33"><expr pos:start="35:18" pos:end="35:33"><operator pos:start="35:18" pos:end="35:18">&amp;</operator><name pos:start="35:19" pos:end="35:33"><name pos:start="35:19" pos:end="35:30">filtergraphs</name><index pos:start="35:31" pos:end="35:33">[<expr pos:start="35:32" pos:end="35:32"><name pos:start="35:32" pos:end="35:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><call pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:12">av_freep</name><argument_list pos:start="39:13" pos:end="39:27">(<argument pos:start="39:14" pos:end="39:26"><expr pos:start="39:14" pos:end="39:26"><operator pos:start="39:14" pos:end="39:14">&amp;</operator><name pos:start="39:15" pos:end="39:26">filtergraphs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:21">/* close files */</comment>

    <for pos:start="45:5" pos:end="59:5">for <control pos:start="45:9" pos:end="45:41">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:36"><expr pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:35">nb_output_files</name></expr>;</condition> <incr pos:start="45:38" pos:end="45:40"><expr pos:start="45:38" pos:end="45:40"><name pos:start="45:38" pos:end="45:38">i</name><operator pos:start="45:39" pos:end="45:40">++</operator></expr></incr>)</control> <block pos:start="45:43" pos:end="59:5">{<block_content pos:start="47:9" pos:end="57:35">

        <decl_stmt pos:start="47:9" pos:end="47:50"><decl pos:start="47:9" pos:end="47:49"><type pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:23">AVFormatContext</name> <modifier pos:start="47:25" pos:end="47:25">*</modifier></type><name pos:start="47:26" pos:end="47:26">s</name> <init pos:start="47:28" pos:end="47:49">= <expr pos:start="47:30" pos:end="47:49"><name pos:start="47:30" pos:end="47:44"><name pos:start="47:30" pos:end="47:41">output_files</name><index pos:start="47:42" pos:end="47:44">[<expr pos:start="47:43" pos:end="47:43"><name pos:start="47:43" pos:end="47:43">i</name></expr>]</index></name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:49">ctx</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="49:9" pos:end="51:30"><if pos:start="49:9" pos:end="51:30">if <condition pos:start="49:12" pos:end="49:76">(<expr pos:start="49:13" pos:end="49:75"><name pos:start="49:13" pos:end="49:13">s</name> <operator pos:start="49:15" pos:end="49:16">&amp;&amp;</operator> <name pos:start="49:18" pos:end="49:27"><name pos:start="49:18" pos:end="49:18">s</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:27">oformat</name></name> <operator pos:start="49:29" pos:end="49:30">&amp;&amp;</operator> <operator pos:start="49:32" pos:end="49:32">!</operator><operator pos:start="49:33" pos:end="49:33">(</operator><name pos:start="49:34" pos:end="49:50"><name pos:start="49:34" pos:end="49:34">s</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:43">oformat</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:50">flags</name></name> <operator pos:start="49:52" pos:end="49:52">&amp;</operator> <name pos:start="49:54" pos:end="49:65">AVFMT_NOFILE</name><operator pos:start="49:66" pos:end="49:66">)</operator> <operator pos:start="49:68" pos:end="49:69">&amp;&amp;</operator> <name pos:start="49:71" pos:end="49:75"><name pos:start="49:71" pos:end="49:71">s</name><operator pos:start="49:72" pos:end="49:73">-&gt;</operator><name pos:start="49:74" pos:end="49:75">pb</name></name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:30"><block_content pos:start="51:13" pos:end="51:30">

            <expr_stmt pos:start="51:13" pos:end="51:30"><expr pos:start="51:13" pos:end="51:29"><call pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:22">avio_close</name><argument_list pos:start="51:23" pos:end="51:29">(<argument pos:start="51:24" pos:end="51:28"><expr pos:start="51:24" pos:end="51:28"><name pos:start="51:24" pos:end="51:28"><name pos:start="51:24" pos:end="51:24">s</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:28">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:33"><expr pos:start="53:9" pos:end="53:32"><call pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:29">avformat_free_context</name><argument_list pos:start="53:30" pos:end="53:32">(<argument pos:start="53:31" pos:end="53:31"><expr pos:start="53:31" pos:end="53:31"><name pos:start="53:31" pos:end="53:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:45"><expr pos:start="55:9" pos:end="55:44"><call pos:start="55:9" pos:end="55:44"><name pos:start="55:9" pos:end="55:20">av_dict_free</name><argument_list pos:start="55:21" pos:end="55:44">(<argument pos:start="55:22" pos:end="55:43"><expr pos:start="55:22" pos:end="55:43"><operator pos:start="55:22" pos:end="55:22">&amp;</operator><name pos:start="55:23" pos:end="55:37"><name pos:start="55:23" pos:end="55:34">output_files</name><index pos:start="55:35" pos:end="55:37">[<expr pos:start="55:36" pos:end="55:36"><name pos:start="55:36" pos:end="55:36">i</name></expr>]</index></name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:43">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:35"><expr pos:start="57:9" pos:end="57:34"><call pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:16">av_freep</name><argument_list pos:start="57:17" pos:end="57:34">(<argument pos:start="57:18" pos:end="57:33"><expr pos:start="57:18" pos:end="57:33"><operator pos:start="57:18" pos:end="57:18">&amp;</operator><name pos:start="57:19" pos:end="57:33"><name pos:start="57:19" pos:end="57:30">output_files</name><index pos:start="57:31" pos:end="57:33">[<expr pos:start="57:32" pos:end="57:32"><name pos:start="57:32" pos:end="57:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="61:5" pos:end="89:5">for <control pos:start="61:9" pos:end="61:43">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:38"><expr pos:start="61:17" pos:end="61:37"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <name pos:start="61:21" pos:end="61:37">nb_output_streams</name></expr>;</condition> <incr pos:start="61:40" pos:end="61:42"><expr pos:start="61:40" pos:end="61:42"><name pos:start="61:40" pos:end="61:40">i</name><operator pos:start="61:41" pos:end="61:42">++</operator></expr></incr>)</control> <block pos:start="61:45" pos:end="89:5">{<block_content pos:start="63:9" pos:end="87:37">

        <decl_stmt pos:start="63:9" pos:end="63:78"><decl pos:start="63:9" pos:end="63:77"><type pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:32">AVBitStreamFilterContext</name> <modifier pos:start="63:34" pos:end="63:34">*</modifier></type><name pos:start="63:35" pos:end="63:38">bsfc</name> <init pos:start="63:40" pos:end="63:77">= <expr pos:start="63:42" pos:end="63:77"><name pos:start="63:42" pos:end="63:58"><name pos:start="63:42" pos:end="63:55">output_streams</name><index pos:start="63:56" pos:end="63:58">[<expr pos:start="63:57" pos:end="63:57"><name pos:start="63:57" pos:end="63:57">i</name></expr>]</index></name><operator pos:start="63:59" pos:end="63:60">-&gt;</operator><name pos:start="63:61" pos:end="63:77">bitstream_filters</name></expr></init></decl>;</decl_stmt>

        <while pos:start="65:9" pos:end="73:9">while <condition pos:start="65:15" pos:end="65:20">(<expr pos:start="65:16" pos:end="65:19"><name pos:start="65:16" pos:end="65:19">bsfc</name></expr>)</condition> <block pos:start="65:22" pos:end="73:9">{<block_content pos:start="67:13" pos:end="71:24">

            <decl_stmt pos:start="67:13" pos:end="67:56"><decl pos:start="67:13" pos:end="67:55"><type pos:start="67:13" pos:end="67:38"><name pos:start="67:13" pos:end="67:36">AVBitStreamFilterContext</name> <modifier pos:start="67:38" pos:end="67:38">*</modifier></type><name pos:start="67:39" pos:end="67:42">next</name> <init pos:start="67:44" pos:end="67:55">= <expr pos:start="67:46" pos:end="67:55"><name pos:start="67:46" pos:end="67:55"><name pos:start="67:46" pos:end="67:49">bsfc</name><operator pos:start="67:50" pos:end="67:51">-&gt;</operator><name pos:start="67:52" pos:end="67:55">next</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:44"><expr pos:start="69:13" pos:end="69:43"><call pos:start="69:13" pos:end="69:43"><name pos:start="69:13" pos:end="69:37">av_bitstream_filter_close</name><argument_list pos:start="69:38" pos:end="69:43">(<argument pos:start="69:39" pos:end="69:42"><expr pos:start="69:39" pos:end="69:42"><name pos:start="69:39" pos:end="69:42">bsfc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:24"><expr pos:start="71:13" pos:end="71:23"><name pos:start="71:13" pos:end="71:16">bsfc</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:23">next</name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="75:9" pos:end="75:52"><expr pos:start="75:9" pos:end="75:51"><name pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:22">output_streams</name><index pos:start="75:23" pos:end="75:25">[<expr pos:start="75:24" pos:end="75:24"><name pos:start="75:24" pos:end="75:24">i</name></expr>]</index></name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:44">bitstream_filters</name> <operator pos:start="75:46" pos:end="75:46">=</operator> <name pos:start="75:48" pos:end="75:51">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:63"><expr pos:start="77:9" pos:end="77:62"><call pos:start="77:9" pos:end="77:62"><name pos:start="77:9" pos:end="77:26">avcodec_free_frame</name><argument_list pos:start="77:27" pos:end="77:62">(<argument pos:start="77:28" pos:end="77:61"><expr pos:start="77:28" pos:end="77:61"><operator pos:start="77:28" pos:end="77:28">&amp;</operator><name pos:start="77:29" pos:end="77:45"><name pos:start="77:29" pos:end="77:42">output_streams</name><index pos:start="77:43" pos:end="77:45">[<expr pos:start="77:44" pos:end="77:44"><name pos:start="77:44" pos:end="77:44">i</name></expr>]</index></name><operator pos:start="77:46" pos:end="77:47">-&gt;</operator><name pos:start="77:48" pos:end="77:61">filtered_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:55"><expr pos:start="81:9" pos:end="81:54"><call pos:start="81:9" pos:end="81:54"><name pos:start="81:9" pos:end="81:16">av_freep</name><argument_list pos:start="81:17" pos:end="81:54">(<argument pos:start="81:18" pos:end="81:53"><expr pos:start="81:18" pos:end="81:53"><operator pos:start="81:18" pos:end="81:18">&amp;</operator><name pos:start="81:19" pos:end="81:35"><name pos:start="81:19" pos:end="81:32">output_streams</name><index pos:start="81:33" pos:end="81:35">[<expr pos:start="81:34" pos:end="81:34"><name pos:start="81:34" pos:end="81:34">i</name></expr>]</index></name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:53">forced_keyframes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:47"><expr pos:start="83:9" pos:end="83:46"><call pos:start="83:9" pos:end="83:46"><name pos:start="83:9" pos:end="83:16">av_freep</name><argument_list pos:start="83:17" pos:end="83:46">(<argument pos:start="83:18" pos:end="83:45"><expr pos:start="83:18" pos:end="83:45"><operator pos:start="83:18" pos:end="83:18">&amp;</operator><name pos:start="83:19" pos:end="83:35"><name pos:start="83:19" pos:end="83:32">output_streams</name><index pos:start="83:33" pos:end="83:35">[<expr pos:start="83:34" pos:end="83:34"><name pos:start="83:34" pos:end="83:34">i</name></expr>]</index></name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:45">avfilter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:53"><expr pos:start="85:9" pos:end="85:52"><call pos:start="85:9" pos:end="85:52"><name pos:start="85:9" pos:end="85:16">av_freep</name><argument_list pos:start="85:17" pos:end="85:52">(<argument pos:start="85:18" pos:end="85:51"><expr pos:start="85:18" pos:end="85:51"><operator pos:start="85:18" pos:end="85:18">&amp;</operator><name pos:start="85:19" pos:end="85:35"><name pos:start="85:19" pos:end="85:32">output_streams</name><index pos:start="85:33" pos:end="85:35">[<expr pos:start="85:34" pos:end="85:34"><name pos:start="85:34" pos:end="85:34">i</name></expr>]</index></name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:51">logfile_prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:37"><expr pos:start="87:9" pos:end="87:36"><call pos:start="87:9" pos:end="87:36"><name pos:start="87:9" pos:end="87:16">av_freep</name><argument_list pos:start="87:17" pos:end="87:36">(<argument pos:start="87:18" pos:end="87:35"><expr pos:start="87:18" pos:end="87:35"><operator pos:start="87:18" pos:end="87:18">&amp;</operator><name pos:start="87:19" pos:end="87:35"><name pos:start="87:19" pos:end="87:32">output_streams</name><index pos:start="87:33" pos:end="87:35">[<expr pos:start="87:34" pos:end="87:34"><name pos:start="87:34" pos:end="87:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="91:5" pos:end="97:5">for <control pos:start="91:9" pos:end="91:40">(<init pos:start="91:10" pos:end="91:15"><expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>;</init> <condition pos:start="91:17" pos:end="91:35"><expr pos:start="91:17" pos:end="91:34"><name pos:start="91:17" pos:end="91:17">i</name> <operator pos:start="91:19" pos:end="91:19">&lt;</operator> <name pos:start="91:21" pos:end="91:34">nb_input_files</name></expr>;</condition> <incr pos:start="91:37" pos:end="91:39"><expr pos:start="91:37" pos:end="91:39"><name pos:start="91:37" pos:end="91:37">i</name><operator pos:start="91:38" pos:end="91:39">++</operator></expr></incr>)</control> <block pos:start="91:42" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:34">

        <expr_stmt pos:start="93:9" pos:end="93:51"><expr pos:start="93:9" pos:end="93:50"><call pos:start="93:9" pos:end="93:50"><name pos:start="93:9" pos:end="93:28">avformat_close_input</name><argument_list pos:start="93:29" pos:end="93:50">(<argument pos:start="93:30" pos:end="93:49"><expr pos:start="93:30" pos:end="93:49"><operator pos:start="93:30" pos:end="93:30">&amp;</operator><name pos:start="93:31" pos:end="93:44"><name pos:start="93:31" pos:end="93:41">input_files</name><index pos:start="93:42" pos:end="93:44">[<expr pos:start="93:43" pos:end="93:43"><name pos:start="93:43" pos:end="93:43">i</name></expr>]</index></name><operator pos:start="93:45" pos:end="93:46">-&gt;</operator><name pos:start="93:47" pos:end="93:49">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:34"><expr pos:start="95:9" pos:end="95:33"><call pos:start="95:9" pos:end="95:33"><name pos:start="95:9" pos:end="95:16">av_freep</name><argument_list pos:start="95:17" pos:end="95:33">(<argument pos:start="95:18" pos:end="95:32"><expr pos:start="95:18" pos:end="95:32"><operator pos:start="95:18" pos:end="95:18">&amp;</operator><name pos:start="95:19" pos:end="95:32"><name pos:start="95:19" pos:end="95:29">input_files</name><index pos:start="95:30" pos:end="95:32">[<expr pos:start="95:31" pos:end="95:31"><name pos:start="95:31" pos:end="95:31">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="99:5" pos:end="111:5">for <control pos:start="99:9" pos:end="99:42">(<init pos:start="99:10" pos:end="99:15"><expr pos:start="99:10" pos:end="99:14"><name pos:start="99:10" pos:end="99:10">i</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <literal type="number" pos:start="99:14" pos:end="99:14">0</literal></expr>;</init> <condition pos:start="99:17" pos:end="99:37"><expr pos:start="99:17" pos:end="99:36"><name pos:start="99:17" pos:end="99:17">i</name> <operator pos:start="99:19" pos:end="99:19">&lt;</operator> <name pos:start="99:21" pos:end="99:36">nb_input_streams</name></expr>;</condition> <incr pos:start="99:39" pos:end="99:41"><expr pos:start="99:39" pos:end="99:41"><name pos:start="99:39" pos:end="99:39">i</name><operator pos:start="99:40" pos:end="99:41">++</operator></expr></incr>)</control> <block pos:start="99:44" pos:end="111:5">{<block_content pos:start="101:9" pos:end="109:36">

        <expr_stmt pos:start="101:9" pos:end="101:56"><expr pos:start="101:9" pos:end="101:55"><call pos:start="101:9" pos:end="101:55"><name pos:start="101:9" pos:end="101:21">av_frame_free</name><argument_list pos:start="101:22" pos:end="101:55">(<argument pos:start="101:23" pos:end="101:54"><expr pos:start="101:23" pos:end="101:54"><operator pos:start="101:23" pos:end="101:23">&amp;</operator><name pos:start="101:24" pos:end="101:39"><name pos:start="101:24" pos:end="101:36">input_streams</name><index pos:start="101:37" pos:end="101:39">[<expr pos:start="101:38" pos:end="101:38"><name pos:start="101:38" pos:end="101:38">i</name></expr>]</index></name><operator pos:start="101:40" pos:end="101:41">-&gt;</operator><name pos:start="101:42" pos:end="101:54">decoded_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:55"><expr pos:start="103:9" pos:end="103:54"><call pos:start="103:9" pos:end="103:54"><name pos:start="103:9" pos:end="103:21">av_frame_free</name><argument_list pos:start="103:22" pos:end="103:54">(<argument pos:start="103:23" pos:end="103:53"><expr pos:start="103:23" pos:end="103:53"><operator pos:start="103:23" pos:end="103:23">&amp;</operator><name pos:start="103:24" pos:end="103:39"><name pos:start="103:24" pos:end="103:36">input_streams</name><index pos:start="103:37" pos:end="103:39">[<expr pos:start="103:38" pos:end="103:38"><name pos:start="103:38" pos:end="103:38">i</name></expr>]</index></name><operator pos:start="103:40" pos:end="103:41">-&gt;</operator><name pos:start="103:42" pos:end="103:53">filter_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:46"><expr pos:start="105:9" pos:end="105:45"><call pos:start="105:9" pos:end="105:45"><name pos:start="105:9" pos:end="105:20">av_dict_free</name><argument_list pos:start="105:21" pos:end="105:45">(<argument pos:start="105:22" pos:end="105:44"><expr pos:start="105:22" pos:end="105:44"><operator pos:start="105:22" pos:end="105:22">&amp;</operator><name pos:start="105:23" pos:end="105:38"><name pos:start="105:23" pos:end="105:35">input_streams</name><index pos:start="105:36" pos:end="105:38">[<expr pos:start="105:37" pos:end="105:37"><name pos:start="105:37" pos:end="105:37">i</name></expr>]</index></name><operator pos:start="105:39" pos:end="105:40">-&gt;</operator><name pos:start="105:41" pos:end="105:44">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:45"><expr pos:start="107:9" pos:end="107:44"><call pos:start="107:9" pos:end="107:44"><name pos:start="107:9" pos:end="107:16">av_freep</name><argument_list pos:start="107:17" pos:end="107:44">(<argument pos:start="107:18" pos:end="107:43"><expr pos:start="107:18" pos:end="107:43"><operator pos:start="107:18" pos:end="107:18">&amp;</operator><name pos:start="107:19" pos:end="107:34"><name pos:start="107:19" pos:end="107:31">input_streams</name><index pos:start="107:32" pos:end="107:34">[<expr pos:start="107:33" pos:end="107:33"><name pos:start="107:33" pos:end="107:33">i</name></expr>]</index></name><operator pos:start="107:35" pos:end="107:36">-&gt;</operator><name pos:start="107:37" pos:end="107:43">filters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:36"><expr pos:start="109:9" pos:end="109:35"><call pos:start="109:9" pos:end="109:35"><name pos:start="109:9" pos:end="109:16">av_freep</name><argument_list pos:start="109:17" pos:end="109:35">(<argument pos:start="109:18" pos:end="109:34"><expr pos:start="109:18" pos:end="109:34"><operator pos:start="109:18" pos:end="109:18">&amp;</operator><name pos:start="109:19" pos:end="109:34"><name pos:start="109:19" pos:end="109:31">input_streams</name><index pos:start="109:32" pos:end="109:34">[<expr pos:start="109:33" pos:end="109:33"><name pos:start="109:33" pos:end="109:33">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="115:5" pos:end="117:28"><if pos:start="115:5" pos:end="117:28">if <condition pos:start="115:8" pos:end="115:20">(<expr pos:start="115:9" pos:end="115:19"><name pos:start="115:9" pos:end="115:19">vstats_file</name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:28"><block_content pos:start="117:9" pos:end="117:28">

        <expr_stmt pos:start="117:9" pos:end="117:28"><expr pos:start="117:9" pos:end="117:27"><call pos:start="117:9" pos:end="117:27"><name pos:start="117:9" pos:end="117:14">fclose</name><argument_list pos:start="117:15" pos:end="117:27">(<argument pos:start="117:16" pos:end="117:26"><expr pos:start="117:16" pos:end="117:26"><name pos:start="117:16" pos:end="117:26">vstats_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:29"><expr pos:start="119:5" pos:end="119:28"><call pos:start="119:5" pos:end="119:28"><name pos:start="119:5" pos:end="119:11">av_free</name><argument_list pos:start="119:12" pos:end="119:28">(<argument pos:start="119:13" pos:end="119:27"><expr pos:start="119:13" pos:end="119:27"><name pos:start="119:13" pos:end="119:27">vstats_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:29"><expr pos:start="123:5" pos:end="123:28"><call pos:start="123:5" pos:end="123:28"><name pos:start="123:5" pos:end="123:12">av_freep</name><argument_list pos:start="123:13" pos:end="123:28">(<argument pos:start="123:14" pos:end="123:27"><expr pos:start="123:14" pos:end="123:27"><operator pos:start="123:14" pos:end="123:14">&amp;</operator><name pos:start="123:15" pos:end="123:27">input_streams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:27"><expr pos:start="125:5" pos:end="125:26"><call pos:start="125:5" pos:end="125:26"><name pos:start="125:5" pos:end="125:12">av_freep</name><argument_list pos:start="125:13" pos:end="125:26">(<argument pos:start="125:14" pos:end="125:25"><expr pos:start="125:14" pos:end="125:25"><operator pos:start="125:14" pos:end="125:14">&amp;</operator><name pos:start="125:15" pos:end="125:25">input_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:30"><expr pos:start="127:5" pos:end="127:29"><call pos:start="127:5" pos:end="127:29"><name pos:start="127:5" pos:end="127:12">av_freep</name><argument_list pos:start="127:13" pos:end="127:29">(<argument pos:start="127:14" pos:end="127:28"><expr pos:start="127:14" pos:end="127:28"><operator pos:start="127:14" pos:end="127:14">&amp;</operator><name pos:start="127:15" pos:end="127:28">output_streams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:28"><expr pos:start="129:5" pos:end="129:27"><call pos:start="129:5" pos:end="129:27"><name pos:start="129:5" pos:end="129:12">av_freep</name><argument_list pos:start="129:13" pos:end="129:27">(<argument pos:start="129:14" pos:end="129:26"><expr pos:start="129:14" pos:end="129:26"><operator pos:start="129:14" pos:end="129:14">&amp;</operator><name pos:start="129:15" pos:end="129:26">output_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:18"><expr pos:start="133:5" pos:end="133:17"><call pos:start="133:5" pos:end="133:17"><name pos:start="133:5" pos:end="133:15">uninit_opts</name><argument_list pos:start="133:16" pos:end="133:17">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:30"><expr pos:start="137:5" pos:end="137:29"><call pos:start="137:5" pos:end="137:29"><name pos:start="137:5" pos:end="137:27">avformat_network_deinit</name><argument_list pos:start="137:28" pos:end="137:29">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="141:5" pos:end="149:5"><if pos:start="141:5" pos:end="149:5">if <condition pos:start="141:8" pos:end="141:25">(<expr pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:24">received_sigterm</name></expr>)</condition> <block pos:start="141:27" pos:end="149:5">{<block_content pos:start="143:9" pos:end="147:19">

        <expr_stmt pos:start="143:9" pos:end="145:39"><expr pos:start="143:9" pos:end="145:38"><call pos:start="143:9" pos:end="145:38"><name pos:start="143:9" pos:end="143:14">av_log</name><argument_list pos:start="143:15" pos:end="145:38">(<argument pos:start="143:16" pos:end="143:19"><expr pos:start="143:16" pos:end="143:19"><name pos:start="143:16" pos:end="143:19">NULL</name></expr></argument>, <argument pos:start="143:22" pos:end="143:32"><expr pos:start="143:22" pos:end="143:32"><name pos:start="143:22" pos:end="143:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="143:35" pos:end="143:70"><expr pos:start="143:35" pos:end="143:70"><literal type="string" pos:start="143:35" pos:end="143:70">"Received signal %d: terminating.\n"</literal></expr></argument>,

               <argument pos:start="145:16" pos:end="145:37"><expr pos:start="145:16" pos:end="145:37"><operator pos:start="145:16" pos:end="145:16">(</operator><name pos:start="145:17" pos:end="145:19">int</name><operator pos:start="145:20" pos:end="145:20">)</operator> <name pos:start="145:22" pos:end="145:37">received_sigterm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:19"><expr pos:start="147:9" pos:end="147:18"><call pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:12">exit</name> <argument_list pos:start="147:14" pos:end="147:18">(<argument pos:start="147:15" pos:end="147:17"><expr pos:start="147:15" pos:end="147:17"><literal type="number" pos:start="147:15" pos:end="147:17">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
