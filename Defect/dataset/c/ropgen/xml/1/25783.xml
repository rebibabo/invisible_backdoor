<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25783.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">send_scsi_cdb_read10</name><parameter_list pos:start="1:33" pos:end="3:59">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:43">QPCIDevice</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">dev</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:54">void</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:64">ide_base</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:41">uint64_t</name></type> <name pos:start="3:43" pos:end="3:45">lba</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:58"><decl pos:start="3:48" pos:end="3:58"><type pos:start="3:48" pos:end="3:58"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:58">nblocks</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:5">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">Read10CDB</name></type> <name pos:start="7:15" pos:end="7:17">pkt</name> <init pos:start="7:19" pos:end="7:36">= <expr pos:start="7:21" pos:end="7:36"><block pos:start="7:21" pos:end="7:36">{ <expr pos:start="7:23" pos:end="7:34"><operator pos:start="7:23" pos:end="7:23">.</operator><name pos:start="7:24" pos:end="7:30">padding</name> <operator pos:start="7:32" pos:end="7:32">=</operator> <literal type="number" pos:start="7:34" pos:end="7:34">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:41"><expr pos:start="13:5" pos:end="13:40"><call pos:start="13:5" pos:end="13:40"><name pos:start="13:5" pos:end="13:19">g_assert_cmpint</name><argument_list pos:start="13:20" pos:end="13:40">(<argument pos:start="13:21" pos:end="13:23"><expr pos:start="13:21" pos:end="13:23"><name pos:start="13:21" pos:end="13:23">lba</name></expr></argument>, <argument pos:start="13:26" pos:end="13:27"><expr pos:start="13:26" pos:end="13:27"><operator pos:start="13:26" pos:end="13:27">&lt;=</operator></expr></argument>, <argument pos:start="13:30" pos:end="13:39"><expr pos:start="13:30" pos:end="13:39"><name pos:start="13:30" pos:end="13:39">UINT32_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><call pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:19">g_assert_cmpint</name><argument_list pos:start="15:20" pos:end="15:44">(<argument pos:start="15:21" pos:end="15:27"><expr pos:start="15:21" pos:end="15:27"><name pos:start="15:21" pos:end="15:27">nblocks</name></expr></argument>, <argument pos:start="15:30" pos:end="15:31"><expr pos:start="15:30" pos:end="15:31"><operator pos:start="15:30" pos:end="15:31">&lt;=</operator></expr></argument>, <argument pos:start="15:34" pos:end="15:43"><expr pos:start="15:34" pos:end="15:43"><name pos:start="15:34" pos:end="15:43">UINT16_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><call pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:19">g_assert_cmpint</name><argument_list pos:start="17:20" pos:end="17:35">(<argument pos:start="17:21" pos:end="17:27"><expr pos:start="17:21" pos:end="17:27"><name pos:start="17:21" pos:end="17:27">nblocks</name></expr></argument>, <argument pos:start="17:30" pos:end="17:31"><expr pos:start="17:30" pos:end="17:31"><operator pos:start="17:30" pos:end="17:31">&gt;=</operator></expr></argument>, <argument pos:start="17:34" pos:end="17:34"><expr pos:start="17:34" pos:end="17:34"><literal type="number" pos:start="17:34" pos:end="17:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:35">/* Construct SCSI CDB packet */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:7">pkt</name><operator pos:start="23:8" pos:end="23:8">.</operator><name pos:start="23:9" pos:end="23:14">opcode</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:21">0x28</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:7">pkt</name><operator pos:start="25:8" pos:end="25:8">.</operator><name pos:start="25:9" pos:end="25:11">lba</name></name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:30"><name pos:start="25:15" pos:end="25:25">cpu_to_be32</name><argument_list pos:start="25:26" pos:end="25:30">(<argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:29">lba</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:39"><expr pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:7">pkt</name><operator pos:start="27:8" pos:end="27:8">.</operator><name pos:start="27:9" pos:end="27:15">nblocks</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:38"><name pos:start="27:19" pos:end="27:29">cpu_to_be16</name><argument_list pos:start="27:30" pos:end="27:38">(<argument pos:start="27:31" pos:end="27:37"><expr pos:start="27:31" pos:end="27:37"><name pos:start="27:31" pos:end="27:37">nblocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:21">/* Send Packet */</comment>

    <for pos:start="33:5" pos:end="39:5">for <control pos:start="33:9" pos:end="33:45">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:40"><expr pos:start="33:17" pos:end="33:39"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <sizeof pos:start="33:21" pos:end="33:37">sizeof<argument_list pos:start="33:27" pos:end="33:37">(<argument pos:start="33:28" pos:end="33:36"><expr pos:start="33:28" pos:end="33:36"><name pos:start="33:28" pos:end="33:36">Read10CDB</name></expr></argument>)</argument_list></sizeof><operator pos:start="33:38" pos:end="33:38">/</operator><literal type="number" pos:start="33:39" pos:end="33:39">2</literal></expr>;</condition> <incr pos:start="33:42" pos:end="33:44"><expr pos:start="33:42" pos:end="33:44"><name pos:start="33:42" pos:end="33:42">i</name><operator pos:start="33:43" pos:end="33:44">++</operator></expr></incr>)</control> <block pos:start="33:47" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:59">

        <expr_stmt pos:start="35:9" pos:end="37:59"><expr pos:start="35:9" pos:end="37:58"><call pos:start="35:9" pos:end="37:58"><name pos:start="35:9" pos:end="35:22">qpci_io_writew</name><argument_list pos:start="35:23" pos:end="37:58">(<argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">dev</name></expr></argument>, <argument pos:start="35:29" pos:end="35:47"><expr pos:start="35:29" pos:end="35:47"><name pos:start="35:29" pos:end="35:36">ide_base</name> <operator pos:start="35:38" pos:end="35:38">+</operator> <name pos:start="35:40" pos:end="35:47">reg_data</name></expr></argument>,

                       <argument pos:start="37:24" pos:end="37:57"><expr pos:start="37:24" pos:end="37:57"><call pos:start="37:24" pos:end="37:57"><name pos:start="37:24" pos:end="37:34">le16_to_cpu</name><argument_list pos:start="37:35" pos:end="37:57">(<argument pos:start="37:36" pos:end="37:56"><expr pos:start="37:36" pos:end="37:56"><operator pos:start="37:36" pos:end="37:36">(</operator><operator pos:start="37:37" pos:end="37:37">(</operator><name pos:start="37:38" pos:end="37:45">uint16_t</name> <operator pos:start="37:47" pos:end="37:47">*</operator><operator pos:start="37:48" pos:end="37:48">)</operator><operator pos:start="37:49" pos:end="37:49">&amp;</operator><name pos:start="37:50" pos:end="37:52">pkt</name><operator pos:start="37:53" pos:end="37:53">)</operator><index pos:start="37:54" pos:end="37:56">[<expr pos:start="37:55" pos:end="37:55"><name pos:start="37:55" pos:end="37:55">i</name></expr>]</index></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
