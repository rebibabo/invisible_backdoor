<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13401.c" pos:tabs="8"><function pos:start="1:1" pos:end="227:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">hds_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="227:1">{<block_content pos:start="5:5" pos:end="225:15">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">HDSContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">c</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>, <decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVOutputFormat</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">oformat</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:29"><expr pos:start="13:5" pos:end="13:28"><call pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:9">mkdir</name><argument_list pos:start="13:10" pos:end="13:28">(<argument pos:start="13:11" pos:end="13:21"><expr pos:start="13:11" pos:end="13:21"><name pos:start="13:11" pos:end="13:21"><name pos:start="13:11" pos:end="13:11">s</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:21">filename</name></name></expr></argument>, <argument pos:start="13:24" pos:end="13:27"><expr pos:start="13:24" pos:end="13:27"><literal type="number" pos:start="13:24" pos:end="13:27">0777</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:49"><expr pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:11">oformat</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:48"><name pos:start="17:15" pos:end="17:29">av_guess_format</name><argument_list pos:start="17:30" pos:end="17:48">(<argument pos:start="17:31" pos:end="17:35"><expr pos:start="17:31" pos:end="17:35"><literal type="string" pos:start="17:31" pos:end="17:35">"flv"</literal></expr></argument>, <argument pos:start="17:38" pos:end="17:41"><expr pos:start="17:38" pos:end="17:41"><name pos:start="17:38" pos:end="17:41">NULL</name></expr></argument>, <argument pos:start="17:44" pos:end="17:47"><expr pos:start="17:44" pos:end="17:47"><name pos:start="17:44" pos:end="17:47">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:16">oformat</name></expr>)</condition> <block pos:start="19:19" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:38"><expr pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:37">AVERROR_MUXER_NOT_FOUND</name></expr>;</expr_stmt>

        <goto pos:start="23:9" pos:end="23:18">goto <name pos:start="23:14" pos:end="23:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:65"><expr pos:start="29:5" pos:end="29:64"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:5">c</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:14">streams</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:64"><name pos:start="29:18" pos:end="29:27">av_mallocz</name><argument_list pos:start="29:28" pos:end="29:64">(<argument pos:start="29:29" pos:end="29:63"><expr pos:start="29:29" pos:end="29:63"><sizeof pos:start="29:29" pos:end="29:47">sizeof<argument_list pos:start="29:35" pos:end="29:47">(<argument pos:start="29:36" pos:end="29:46"><expr pos:start="29:36" pos:end="29:46"><operator pos:start="29:36" pos:end="29:36">*</operator><name pos:start="29:37" pos:end="29:46"><name pos:start="29:37" pos:end="29:37">c</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:46">streams</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="29:49" pos:end="29:49">*</operator> <name pos:start="29:51" pos:end="29:63"><name pos:start="29:51" pos:end="29:51">s</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:63">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:20">(<expr pos:start="31:9" pos:end="31:19"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:19"><name pos:start="31:10" pos:end="31:10">c</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:19">streams</name></name></expr>)</condition> <block pos:start="31:22" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:29"><name pos:start="33:15" pos:end="33:21">AVERROR</name><argument_list pos:start="33:22" pos:end="33:29">(<argument pos:start="33:23" pos:end="33:28"><expr pos:start="33:23" pos:end="33:28"><name pos:start="33:23" pos:end="33:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="35:9" pos:end="35:18">goto <name pos:start="35:14" pos:end="35:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="41:5" pos:end="157:5">for <control pos:start="41:9" pos:end="41:39">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:34"><expr pos:start="41:17" pos:end="41:33"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:33"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:33">nb_streams</name></name></expr>;</condition> <incr pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><name pos:start="41:36" pos:end="41:36">i</name><operator pos:start="41:37" pos:end="41:38">++</operator></expr></incr>)</control> <block pos:start="41:41" pos:end="157:5">{<block_content pos:start="43:9" pos:end="155:69">

        <decl_stmt pos:start="43:9" pos:end="43:54"><decl pos:start="43:9" pos:end="43:53"><type pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:20">OutputStream</name> <modifier pos:start="43:22" pos:end="43:22">*</modifier></type><name pos:start="43:23" pos:end="43:24">os</name> <init pos:start="43:26" pos:end="43:53">= <expr pos:start="43:28" pos:end="43:53"><operator pos:start="43:28" pos:end="43:28">&amp;</operator><name pos:start="43:29" pos:end="43:53"><name pos:start="43:29" pos:end="43:29">c</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:38">streams</name><index pos:start="43:39" pos:end="43:53">[<expr pos:start="43:40" pos:end="43:52"><name pos:start="43:40" pos:end="43:52"><name pos:start="43:40" pos:end="43:40">c</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:52">nb_streams</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:29"><decl pos:start="45:9" pos:end="45:28"><type pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:23">AVFormatContext</name> <modifier pos:start="45:25" pos:end="45:25">*</modifier></type><name pos:start="45:26" pos:end="45:28">ctx</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:37"><decl pos:start="47:9" pos:end="47:36"><type pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:16">AVStream</name> <modifier pos:start="47:18" pos:end="47:18">*</modifier></type><name pos:start="47:19" pos:end="47:20">st</name> <init pos:start="47:22" pos:end="47:36">= <expr pos:start="47:24" pos:end="47:36"><name pos:start="47:24" pos:end="47:36"><name pos:start="47:24" pos:end="47:24">s</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:33">streams</name><index pos:start="47:34" pos:end="47:36">[<expr pos:start="47:35" pos:end="47:35"><name pos:start="47:35" pos:end="47:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="51:9" pos:end="59:9"><if pos:start="51:9" pos:end="59:9">if <condition pos:start="51:12" pos:end="51:33">(<expr pos:start="51:13" pos:end="51:32"><operator pos:start="51:13" pos:end="51:13">!</operator><name pos:start="51:14" pos:end="51:32"><name pos:start="51:14" pos:end="51:15">st</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:22">codec</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:32">bit_rate</name></name></expr>)</condition> <block pos:start="51:35" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:22">

            <expr_stmt pos:start="53:13" pos:end="53:74"><expr pos:start="53:13" pos:end="53:73"><call pos:start="53:13" pos:end="53:73"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="53:73">(<argument pos:start="53:20" pos:end="53:20"><expr pos:start="53:20" pos:end="53:20"><name pos:start="53:20" pos:end="53:20">s</name></expr></argument>, <argument pos:start="53:23" pos:end="53:34"><expr pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:37" pos:end="53:69"><expr pos:start="53:37" pos:end="53:69"><literal type="string" pos:start="53:37" pos:end="53:69">"No bit rate set for stream %d\n"</literal></expr></argument>, <argument pos:start="53:72" pos:end="53:72"><expr pos:start="53:72" pos:end="53:72"><name pos:start="53:72" pos:end="53:72">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:34"><expr pos:start="55:13" pos:end="55:33"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:33"><name pos:start="55:19" pos:end="55:25">AVERROR</name><argument_list pos:start="55:26" pos:end="55:33">(<argument pos:start="55:27" pos:end="55:32"><expr pos:start="55:27" pos:end="55:32"><name pos:start="55:27" pos:end="55:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="57:13" pos:end="57:22">goto <name pos:start="57:18" pos:end="57:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="93:9"><if pos:start="61:9" pos:end="73:9">if <condition pos:start="61:12" pos:end="61:56">(<expr pos:start="61:13" pos:end="61:55"><name pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:14">st</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:21">codec</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:33">codec_type</name></name> <operator pos:start="61:35" pos:end="61:36">==</operator> <name pos:start="61:38" pos:end="61:55">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="61:58" pos:end="73:9">{<block_content pos:start="63:13" pos:end="71:30">

            <if_stmt pos:start="63:13" pos:end="69:13"><if pos:start="63:13" pos:end="69:13">if <condition pos:start="63:16" pos:end="63:30">(<expr pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:18">os</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:29">has_video</name></name></expr>)</condition> <block pos:start="63:32" pos:end="69:13">{<block_content pos:start="65:17" pos:end="67:21">

                <expr_stmt pos:start="65:17" pos:end="65:32"><expr pos:start="65:17" pos:end="65:31"><name pos:start="65:17" pos:end="65:29"><name pos:start="65:17" pos:end="65:17">c</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:29">nb_streams</name></name><operator pos:start="65:30" pos:end="65:31">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:21"><expr pos:start="67:17" pos:end="67:20"><name pos:start="67:17" pos:end="67:18">os</name><operator pos:start="67:19" pos:end="67:20">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:30"><expr pos:start="71:13" pos:end="71:29"><name pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:14">os</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:25">has_video</name></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <literal type="number" pos:start="71:29" pos:end="71:29">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="73:11" pos:end="85:9">else if <condition pos:start="73:19" pos:end="73:63">(<expr pos:start="73:20" pos:end="73:62"><name pos:start="73:20" pos:end="73:40"><name pos:start="73:20" pos:end="73:21">st</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:28">codec</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:40">codec_type</name></name> <operator pos:start="73:42" pos:end="73:43">==</operator> <name pos:start="73:45" pos:end="73:62">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="73:65" pos:end="85:9">{<block_content pos:start="75:13" pos:end="83:30">

            <if_stmt pos:start="75:13" pos:end="81:13"><if pos:start="75:13" pos:end="81:13">if <condition pos:start="75:16" pos:end="75:30">(<expr pos:start="75:17" pos:end="75:29"><name pos:start="75:17" pos:end="75:29"><name pos:start="75:17" pos:end="75:18">os</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:29">has_audio</name></name></expr>)</condition> <block pos:start="75:32" pos:end="81:13">{<block_content pos:start="77:17" pos:end="79:21">

                <expr_stmt pos:start="77:17" pos:end="77:32"><expr pos:start="77:17" pos:end="77:31"><name pos:start="77:17" pos:end="77:29"><name pos:start="77:17" pos:end="77:17">c</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:29">nb_streams</name></name><operator pos:start="77:30" pos:end="77:31">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:21"><expr pos:start="79:17" pos:end="79:20"><name pos:start="79:17" pos:end="79:18">os</name><operator pos:start="79:19" pos:end="79:20">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:30"><expr pos:start="83:13" pos:end="83:29"><name pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:14">os</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:25">has_audio</name></name> <operator pos:start="83:27" pos:end="83:27">=</operator> <literal type="number" pos:start="83:29" pos:end="83:29">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="85:11" pos:end="93:9">else <block pos:start="85:16" pos:end="93:9">{<block_content pos:start="87:13" pos:end="91:22">

            <expr_stmt pos:start="87:13" pos:end="87:81"><expr pos:start="87:13" pos:end="87:80"><call pos:start="87:13" pos:end="87:80"><name pos:start="87:13" pos:end="87:18">av_log</name><argument_list pos:start="87:19" pos:end="87:80">(<argument pos:start="87:20" pos:end="87:20"><expr pos:start="87:20" pos:end="87:20"><name pos:start="87:20" pos:end="87:20">s</name></expr></argument>, <argument pos:start="87:23" pos:end="87:34"><expr pos:start="87:23" pos:end="87:34"><name pos:start="87:23" pos:end="87:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:37" pos:end="87:76"><expr pos:start="87:37" pos:end="87:76"><literal type="string" pos:start="87:37" pos:end="87:76">"Unsupported stream type in stream %d\n"</literal></expr></argument>, <argument pos:start="87:79" pos:end="87:79"><expr pos:start="87:79" pos:end="87:79"><name pos:start="87:79" pos:end="87:79">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:34"><expr pos:start="89:13" pos:end="89:33"><name pos:start="89:13" pos:end="89:15">ret</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <call pos:start="89:19" pos:end="89:33"><name pos:start="89:19" pos:end="89:25">AVERROR</name><argument_list pos:start="89:26" pos:end="89:33">(<argument pos:start="89:27" pos:end="89:32"><expr pos:start="89:27" pos:end="89:32"><name pos:start="89:27" pos:end="89:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="91:13" pos:end="91:22">goto <name pos:start="91:18" pos:end="91:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:54"><expr pos:start="95:9" pos:end="95:53"><name pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:10">os</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:19">bitrate</name></name> <operator pos:start="95:21" pos:end="95:22">+=</operator> <name pos:start="95:24" pos:end="95:36"><name pos:start="95:24" pos:end="95:24">s</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:33">streams</name><index pos:start="95:34" pos:end="95:36">[<expr pos:start="95:35" pos:end="95:35"><name pos:start="95:35" pos:end="95:35">i</name></expr>]</index></name><operator pos:start="95:37" pos:end="95:38">-&gt;</operator><name pos:start="95:39" pos:end="95:53"><name pos:start="95:39" pos:end="95:43">codec</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:53">bit_rate</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="99:9" pos:end="139:9"><if pos:start="99:9" pos:end="135:9">if <condition pos:start="99:12" pos:end="99:21">(<expr pos:start="99:13" pos:end="99:20"><operator pos:start="99:13" pos:end="99:13">!</operator><name pos:start="99:14" pos:end="99:20"><name pos:start="99:14" pos:end="99:15">os</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:20">ctx</name></name></expr>)</condition> <block pos:start="99:23" pos:end="135:9">{<block_content pos:start="101:13" pos:end="133:13">

            <expr_stmt pos:start="101:13" pos:end="101:33"><expr pos:start="101:13" pos:end="101:32"><name pos:start="101:13" pos:end="101:28"><name pos:start="101:13" pos:end="101:14">os</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:28">first_stream</name></name> <operator pos:start="101:30" pos:end="101:30">=</operator> <name pos:start="101:32" pos:end="101:32">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:43"><expr pos:start="103:13" pos:end="103:42"><name pos:start="103:13" pos:end="103:15">ctx</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:42"><name pos:start="103:19" pos:end="103:40">avformat_alloc_context</name><argument_list pos:start="103:41" pos:end="103:42">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="111:13"><if pos:start="105:13" pos:end="111:13">if <condition pos:start="105:16" pos:end="105:21">(<expr pos:start="105:17" pos:end="105:20"><operator pos:start="105:17" pos:end="105:17">!</operator><name pos:start="105:18" pos:end="105:20">ctx</name></expr>)</condition> <block pos:start="105:23" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:26">

                <expr_stmt pos:start="107:17" pos:end="107:38"><expr pos:start="107:17" pos:end="107:37"><name pos:start="107:17" pos:end="107:19">ret</name> <operator pos:start="107:21" pos:end="107:21">=</operator> <call pos:start="107:23" pos:end="107:37"><name pos:start="107:23" pos:end="107:29">AVERROR</name><argument_list pos:start="107:30" pos:end="107:37">(<argument pos:start="107:31" pos:end="107:36"><expr pos:start="107:31" pos:end="107:36"><name pos:start="107:31" pos:end="107:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="109:17" pos:end="109:26">goto <name pos:start="109:22" pos:end="109:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:26"><expr pos:start="113:13" pos:end="113:25"><name pos:start="113:13" pos:end="113:19"><name pos:start="113:13" pos:end="113:14">os</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:19">ctx</name></name> <operator pos:start="113:21" pos:end="113:21">=</operator> <name pos:start="113:23" pos:end="113:25">ctx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:35"><expr pos:start="115:13" pos:end="115:34"><name pos:start="115:13" pos:end="115:24"><name pos:start="115:13" pos:end="115:15">ctx</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:24">oformat</name></name> <operator pos:start="115:26" pos:end="115:26">=</operator> <name pos:start="115:28" pos:end="115:34">oformat</name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:60"><expr pos:start="117:13" pos:end="117:59"><name pos:start="117:13" pos:end="117:35"><name pos:start="117:13" pos:end="117:15">ctx</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:35">interrupt_callback</name></name> <operator pos:start="117:37" pos:end="117:37">=</operator> <name pos:start="117:39" pos:end="117:59"><name pos:start="117:39" pos:end="117:39">s</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:59">interrupt_callback</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="121:13" pos:end="125:64"><expr pos:start="121:13" pos:end="125:63"><name pos:start="121:13" pos:end="121:19"><name pos:start="121:13" pos:end="121:15">ctx</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:19">pb</name></name> <operator pos:start="121:21" pos:end="121:21">=</operator> <call pos:start="121:23" pos:end="125:63"><name pos:start="121:23" pos:end="121:40">avio_alloc_context</name><argument_list pos:start="121:41" pos:end="125:63">(<argument pos:start="121:42" pos:end="121:50"><expr pos:start="121:42" pos:end="121:50"><name pos:start="121:42" pos:end="121:50"><name pos:start="121:42" pos:end="121:43">os</name><operator pos:start="121:44" pos:end="121:45">-&gt;</operator><name pos:start="121:46" pos:end="121:50">iobuf</name></name></expr></argument>, <argument pos:start="121:53" pos:end="121:69"><expr pos:start="121:53" pos:end="121:69"><sizeof pos:start="121:53" pos:end="121:69">sizeof<argument_list pos:start="121:59" pos:end="121:69">(<argument pos:start="121:60" pos:end="121:68"><expr pos:start="121:60" pos:end="121:68"><name pos:start="121:60" pos:end="121:68"><name pos:start="121:60" pos:end="121:61">os</name><operator pos:start="121:62" pos:end="121:63">-&gt;</operator><name pos:start="121:64" pos:end="121:68">iobuf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                         <argument pos:start="123:42" pos:end="123:56"><expr pos:start="123:42" pos:end="123:56"><name pos:start="123:42" pos:end="123:56">AVIO_FLAG_WRITE</name></expr></argument>, <argument pos:start="123:59" pos:end="123:60"><expr pos:start="123:59" pos:end="123:60"><name pos:start="123:59" pos:end="123:60">os</name></expr></argument>,

                                         <argument pos:start="125:42" pos:end="125:45"><expr pos:start="125:42" pos:end="125:45"><name pos:start="125:42" pos:end="125:45">NULL</name></expr></argument>, <argument pos:start="125:48" pos:end="125:56"><expr pos:start="125:48" pos:end="125:56"><name pos:start="125:48" pos:end="125:56">hds_write</name></expr></argument>, <argument pos:start="125:59" pos:end="125:62"><expr pos:start="125:59" pos:end="125:62"><name pos:start="125:59" pos:end="125:62">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="133:13"><if pos:start="127:13" pos:end="133:13">if <condition pos:start="127:16" pos:end="127:25">(<expr pos:start="127:17" pos:end="127:24"><operator pos:start="127:17" pos:end="127:17">!</operator><name pos:start="127:18" pos:end="127:24"><name pos:start="127:18" pos:end="127:20">ctx</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:24">pb</name></name></expr>)</condition> <block pos:start="127:27" pos:end="133:13">{<block_content pos:start="129:17" pos:end="131:26">

                <expr_stmt pos:start="129:17" pos:end="129:38"><expr pos:start="129:17" pos:end="129:37"><name pos:start="129:17" pos:end="129:19">ret</name> <operator pos:start="129:21" pos:end="129:21">=</operator> <call pos:start="129:23" pos:end="129:37"><name pos:start="129:23" pos:end="129:29">AVERROR</name><argument_list pos:start="129:30" pos:end="129:37">(<argument pos:start="129:31" pos:end="129:36"><expr pos:start="129:31" pos:end="129:36"><name pos:start="129:31" pos:end="129:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="131:17" pos:end="131:26">goto <name pos:start="131:22" pos:end="131:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="135:11" pos:end="139:9">else <block pos:start="135:16" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:26">

            <expr_stmt pos:start="137:13" pos:end="137:26"><expr pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:15">ctx</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <name pos:start="137:19" pos:end="137:25"><name pos:start="137:19" pos:end="137:20">os</name><operator pos:start="137:21" pos:end="137:22">-&gt;</operator><name pos:start="137:23" pos:end="137:25">ctx</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:42"><expr pos:start="141:9" pos:end="141:41"><name pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:18">streams</name><index pos:start="141:19" pos:end="141:21">[<expr pos:start="141:20" pos:end="141:20"><name pos:start="141:20" pos:end="141:20">i</name></expr>]</index></name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:25">id</name> <operator pos:start="141:27" pos:end="141:27">=</operator> <name pos:start="141:29" pos:end="141:41"><name pos:start="141:29" pos:end="141:29">c</name><operator pos:start="141:30" pos:end="141:31">-&gt;</operator><name pos:start="141:32" pos:end="141:41">nb_streams</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="145:9" pos:end="151:9"><if pos:start="145:9" pos:end="151:9">if <condition pos:start="145:12" pos:end="145:51">(<expr pos:start="145:13" pos:end="145:50"><operator pos:start="145:13" pos:end="145:13">!</operator><operator pos:start="145:14" pos:end="145:14">(</operator><name pos:start="145:15" pos:end="145:16">st</name> <operator pos:start="145:18" pos:end="145:18">=</operator> <call pos:start="145:20" pos:end="145:49"><name pos:start="145:20" pos:end="145:38">avformat_new_stream</name><argument_list pos:start="145:39" pos:end="145:49">(<argument pos:start="145:40" pos:end="145:42"><expr pos:start="145:40" pos:end="145:42"><name pos:start="145:40" pos:end="145:42">ctx</name></expr></argument>, <argument pos:start="145:45" pos:end="145:48"><expr pos:start="145:45" pos:end="145:48"><name pos:start="145:45" pos:end="145:48">NULL</name></expr></argument>)</argument_list></call><operator pos:start="145:50" pos:end="145:50">)</operator></expr>)</condition> <block pos:start="145:53" pos:end="151:9">{<block_content pos:start="147:13" pos:end="149:22">

            <expr_stmt pos:start="147:13" pos:end="147:34"><expr pos:start="147:13" pos:end="147:33"><name pos:start="147:13" pos:end="147:15">ret</name> <operator pos:start="147:17" pos:end="147:17">=</operator> <call pos:start="147:19" pos:end="147:33"><name pos:start="147:19" pos:end="147:25">AVERROR</name><argument_list pos:start="147:26" pos:end="147:33">(<argument pos:start="147:27" pos:end="147:32"><expr pos:start="147:27" pos:end="147:32"><name pos:start="147:27" pos:end="147:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="149:13" pos:end="149:22">goto <name pos:start="149:18" pos:end="149:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:62"><expr pos:start="153:9" pos:end="153:61"><call pos:start="153:9" pos:end="153:61"><name pos:start="153:9" pos:end="153:28">avcodec_copy_context</name><argument_list pos:start="153:29" pos:end="153:61">(<argument pos:start="153:30" pos:end="153:38"><expr pos:start="153:30" pos:end="153:38"><name pos:start="153:30" pos:end="153:38"><name pos:start="153:30" pos:end="153:31">st</name><operator pos:start="153:32" pos:end="153:33">-&gt;</operator><name pos:start="153:34" pos:end="153:38">codec</name></name></expr></argument>, <argument pos:start="153:41" pos:end="153:60"><expr pos:start="153:41" pos:end="153:60"><name pos:start="153:41" pos:end="153:53"><name pos:start="153:41" pos:end="153:41">s</name><operator pos:start="153:42" pos:end="153:43">-&gt;</operator><name pos:start="153:44" pos:end="153:50">streams</name><index pos:start="153:51" pos:end="153:53">[<expr pos:start="153:52" pos:end="153:52"><name pos:start="153:52" pos:end="153:52">i</name></expr>]</index></name><operator pos:start="153:54" pos:end="153:55">-&gt;</operator><name pos:start="153:56" pos:end="153:60">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:69"><expr pos:start="155:9" pos:end="155:68"><name pos:start="155:9" pos:end="155:31"><name pos:start="155:9" pos:end="155:10">st</name><operator pos:start="155:11" pos:end="155:12">-&gt;</operator><name pos:start="155:13" pos:end="155:31">sample_aspect_ratio</name></name> <operator pos:start="155:33" pos:end="155:33">=</operator> <name pos:start="155:35" pos:end="155:47"><name pos:start="155:35" pos:end="155:35">s</name><operator pos:start="155:36" pos:end="155:37">-&gt;</operator><name pos:start="155:38" pos:end="155:44">streams</name><index pos:start="155:45" pos:end="155:47">[<expr pos:start="155:46" pos:end="155:46"><name pos:start="155:46" pos:end="155:46">i</name></expr>]</index></name><operator pos:start="155:48" pos:end="155:49">-&gt;</operator><name pos:start="155:50" pos:end="155:68">sample_aspect_ratio</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="159:5" pos:end="161:24"><if pos:start="159:5" pos:end="161:24">if <condition pos:start="159:8" pos:end="159:38">(<expr pos:start="159:9" pos:end="159:37"><name pos:start="159:9" pos:end="159:33"><name pos:start="159:9" pos:end="159:9">c</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:18">streams</name><index pos:start="159:19" pos:end="159:33">[<expr pos:start="159:20" pos:end="159:32"><name pos:start="159:20" pos:end="159:32"><name pos:start="159:20" pos:end="159:20">c</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:32">nb_streams</name></name></expr>]</index></name><operator pos:start="159:34" pos:end="159:34">.</operator><name pos:start="159:35" pos:end="159:37">ctx</name></expr>)</condition><block type="pseudo" pos:start="161:9" pos:end="161:24"><block_content pos:start="161:9" pos:end="161:24">

        <expr_stmt pos:start="161:9" pos:end="161:24"><expr pos:start="161:9" pos:end="161:23"><name pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:9">c</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:21">nb_streams</name></name><operator pos:start="161:22" pos:end="161:23">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="165:5" pos:end="213:5">for <control pos:start="165:9" pos:end="165:39">(<init pos:start="165:10" pos:end="165:15"><expr pos:start="165:10" pos:end="165:14"><name pos:start="165:10" pos:end="165:10">i</name> <operator pos:start="165:12" pos:end="165:12">=</operator> <literal type="number" pos:start="165:14" pos:end="165:14">0</literal></expr>;</init> <condition pos:start="165:17" pos:end="165:34"><expr pos:start="165:17" pos:end="165:33"><name pos:start="165:17" pos:end="165:17">i</name> <operator pos:start="165:19" pos:end="165:19">&lt;</operator> <name pos:start="165:21" pos:end="165:33"><name pos:start="165:21" pos:end="165:21">c</name><operator pos:start="165:22" pos:end="165:23">-&gt;</operator><name pos:start="165:24" pos:end="165:33">nb_streams</name></name></expr>;</condition> <incr pos:start="165:36" pos:end="165:38"><expr pos:start="165:36" pos:end="165:38"><name pos:start="165:36" pos:end="165:36">i</name><operator pos:start="165:37" pos:end="165:38">++</operator></expr></incr>)</control> <block pos:start="165:41" pos:end="213:5">{<block_content pos:start="167:9" pos:end="211:29">

        <decl_stmt pos:start="167:9" pos:end="167:42"><decl pos:start="167:9" pos:end="167:41"><type pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:20">OutputStream</name> <modifier pos:start="167:22" pos:end="167:22">*</modifier></type><name pos:start="167:23" pos:end="167:24">os</name> <init pos:start="167:26" pos:end="167:41">= <expr pos:start="167:28" pos:end="167:41"><operator pos:start="167:28" pos:end="167:28">&amp;</operator><name pos:start="167:29" pos:end="167:41"><name pos:start="167:29" pos:end="167:29">c</name><operator pos:start="167:30" pos:end="167:31">-&gt;</operator><name pos:start="167:32" pos:end="167:38">streams</name><index pos:start="167:39" pos:end="167:41">[<expr pos:start="167:40" pos:end="167:40"><name pos:start="167:40" pos:end="167:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="169:9" pos:end="169:14"><decl pos:start="169:9" pos:end="169:13"><type pos:start="169:9" pos:end="169:11"><name pos:start="169:9" pos:end="169:11">int</name></type> <name pos:start="169:13" pos:end="169:13">j</name></decl>;</decl_stmt>

        <if_stmt pos:start="171:9" pos:end="175:9"><if pos:start="171:9" pos:end="175:9">if <condition pos:start="171:12" pos:end="171:61">(<expr pos:start="171:13" pos:end="171:60"><operator pos:start="171:13" pos:end="171:13">(</operator><name pos:start="171:14" pos:end="171:16">ret</name> <operator pos:start="171:18" pos:end="171:18">=</operator> <call pos:start="171:20" pos:end="171:55"><name pos:start="171:20" pos:end="171:40">avformat_write_header</name><argument_list pos:start="171:41" pos:end="171:55">(<argument pos:start="171:42" pos:end="171:48"><expr pos:start="171:42" pos:end="171:48"><name pos:start="171:42" pos:end="171:48"><name pos:start="171:42" pos:end="171:43">os</name><operator pos:start="171:44" pos:end="171:45">-&gt;</operator><name pos:start="171:46" pos:end="171:48">ctx</name></name></expr></argument>, <argument pos:start="171:51" pos:end="171:54"><expr pos:start="171:51" pos:end="171:54"><name pos:start="171:51" pos:end="171:54">NULL</name></expr></argument>)</argument_list></call><operator pos:start="171:56" pos:end="171:56">)</operator> <operator pos:start="171:58" pos:end="171:58">&lt;</operator> <literal type="number" pos:start="171:60" pos:end="171:60">0</literal></expr>)</condition> <block pos:start="171:63" pos:end="175:9">{<block_content pos:start="173:14" pos:end="173:23">

             <goto pos:start="173:14" pos:end="173:23">goto <name pos:start="173:19" pos:end="173:22">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:27"><expr pos:start="177:9" pos:end="177:26"><name pos:start="177:9" pos:end="177:22"><name pos:start="177:9" pos:end="177:10">os</name><operator pos:start="177:11" pos:end="177:12">-&gt;</operator><name pos:start="177:13" pos:end="177:22">ctx_inited</name></name> <operator pos:start="177:24" pos:end="177:24">=</operator> <literal type="number" pos:start="177:26" pos:end="177:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:32"><expr pos:start="179:9" pos:end="179:31"><call pos:start="179:9" pos:end="179:31"><name pos:start="179:9" pos:end="179:18">avio_flush</name><argument_list pos:start="179:19" pos:end="179:31">(<argument pos:start="179:20" pos:end="179:30"><expr pos:start="179:20" pos:end="179:30"><name pos:start="179:20" pos:end="179:30"><name pos:start="179:20" pos:end="179:21">os</name><operator pos:start="179:22" pos:end="179:23">-&gt;</operator><name pos:start="179:24" pos:end="179:26">ctx</name><operator pos:start="179:27" pos:end="179:28">-&gt;</operator><name pos:start="179:29" pos:end="179:30">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="181:9" pos:end="183:89">for <control pos:start="181:13" pos:end="181:49">(<init pos:start="181:14" pos:end="181:19"><expr pos:start="181:14" pos:end="181:18"><name pos:start="181:14" pos:end="181:14">j</name> <operator pos:start="181:16" pos:end="181:16">=</operator> <literal type="number" pos:start="181:18" pos:end="181:18">0</literal></expr>;</init> <condition pos:start="181:21" pos:end="181:44"><expr pos:start="181:21" pos:end="181:43"><name pos:start="181:21" pos:end="181:21">j</name> <operator pos:start="181:23" pos:end="181:23">&lt;</operator> <name pos:start="181:25" pos:end="181:43"><name pos:start="181:25" pos:end="181:26">os</name><operator pos:start="181:27" pos:end="181:28">-&gt;</operator><name pos:start="181:29" pos:end="181:31">ctx</name><operator pos:start="181:32" pos:end="181:33">-&gt;</operator><name pos:start="181:34" pos:end="181:43">nb_streams</name></name></expr>;</condition> <incr pos:start="181:46" pos:end="181:48"><expr pos:start="181:46" pos:end="181:48"><name pos:start="181:46" pos:end="181:46">j</name><operator pos:start="181:47" pos:end="181:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="183:13" pos:end="183:89"><block_content pos:start="183:13" pos:end="183:89">

            <expr_stmt pos:start="183:13" pos:end="183:89"><expr pos:start="183:13" pos:end="183:88"><name pos:start="183:13" pos:end="183:44"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:22">streams</name><index pos:start="183:23" pos:end="183:44">[<expr pos:start="183:24" pos:end="183:43"><name pos:start="183:24" pos:end="183:39"><name pos:start="183:24" pos:end="183:25">os</name><operator pos:start="183:26" pos:end="183:27">-&gt;</operator><name pos:start="183:28" pos:end="183:39">first_stream</name></name> <operator pos:start="183:41" pos:end="183:41">+</operator> <name pos:start="183:43" pos:end="183:43">j</name></expr>]</index></name><operator pos:start="183:45" pos:end="183:46">-&gt;</operator><name pos:start="183:47" pos:end="183:55">time_base</name> <operator pos:start="183:57" pos:end="183:57">=</operator> <name pos:start="183:59" pos:end="183:77"><name pos:start="183:59" pos:end="183:60">os</name><operator pos:start="183:61" pos:end="183:62">-&gt;</operator><name pos:start="183:63" pos:end="183:65">ctx</name><operator pos:start="183:66" pos:end="183:67">-&gt;</operator><name pos:start="183:68" pos:end="183:74">streams</name><index pos:start="183:75" pos:end="183:77">[<expr pos:start="183:76" pos:end="183:76"><name pos:start="183:76" pos:end="183:76">j</name></expr>]</index></name><operator pos:start="183:78" pos:end="183:79">-&gt;</operator><name pos:start="183:80" pos:end="183:88">time_base</name></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="187:9" pos:end="189:53"><expr pos:start="187:9" pos:end="189:52"><call pos:start="187:9" pos:end="189:52"><name pos:start="187:9" pos:end="187:16">snprintf</name><argument_list pos:start="187:17" pos:end="189:52">(<argument pos:start="187:18" pos:end="187:34"><expr pos:start="187:18" pos:end="187:34"><name pos:start="187:18" pos:end="187:34"><name pos:start="187:18" pos:end="187:19">os</name><operator pos:start="187:20" pos:end="187:21">-&gt;</operator><name pos:start="187:22" pos:end="187:34">temp_filename</name></name></expr></argument>, <argument pos:start="187:37" pos:end="187:61"><expr pos:start="187:37" pos:end="187:61"><sizeof pos:start="187:37" pos:end="187:61">sizeof<argument_list pos:start="187:43" pos:end="187:61">(<argument pos:start="187:44" pos:end="187:60"><expr pos:start="187:44" pos:end="187:60"><name pos:start="187:44" pos:end="187:60"><name pos:start="187:44" pos:end="187:45">os</name><operator pos:start="187:46" pos:end="187:47">-&gt;</operator><name pos:start="187:48" pos:end="187:60">temp_filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                 <argument pos:start="189:18" pos:end="189:35"><expr pos:start="189:18" pos:end="189:35"><literal type="string" pos:start="189:18" pos:end="189:35">"%s/stream%d_temp"</literal></expr></argument>, <argument pos:start="189:38" pos:end="189:48"><expr pos:start="189:38" pos:end="189:48"><name pos:start="189:38" pos:end="189:48"><name pos:start="189:38" pos:end="189:38">s</name><operator pos:start="189:39" pos:end="189:40">-&gt;</operator><name pos:start="189:41" pos:end="189:48">filename</name></name></expr></argument>, <argument pos:start="189:51" pos:end="189:51"><expr pos:start="189:51" pos:end="189:51"><name pos:start="189:51" pos:end="189:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:34"><expr pos:start="191:9" pos:end="191:33"><name pos:start="191:9" pos:end="191:11">ret</name> <operator pos:start="191:13" pos:end="191:13">=</operator> <call pos:start="191:15" pos:end="191:33"><name pos:start="191:15" pos:end="191:23">init_file</name><argument_list pos:start="191:24" pos:end="191:33">(<argument pos:start="191:25" pos:end="191:25"><expr pos:start="191:25" pos:end="191:25"><name pos:start="191:25" pos:end="191:25">s</name></expr></argument>, <argument pos:start="191:28" pos:end="191:29"><expr pos:start="191:28" pos:end="191:29"><name pos:start="191:28" pos:end="191:29">os</name></expr></argument>, <argument pos:start="191:32" pos:end="191:32"><expr pos:start="191:32" pos:end="191:32"><literal type="number" pos:start="191:32" pos:end="191:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="193:9" pos:end="195:22"><if pos:start="193:9" pos:end="195:22">if <condition pos:start="193:12" pos:end="193:20">(<expr pos:start="193:13" pos:end="193:19"><name pos:start="193:13" pos:end="193:15">ret</name> <operator pos:start="193:17" pos:end="193:17">&lt;</operator> <literal type="number" pos:start="193:19" pos:end="193:19">0</literal></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:22"><block_content pos:start="195:13" pos:end="195:22">

            <goto pos:start="195:13" pos:end="195:22">goto <name pos:start="195:18" pos:end="195:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="199:9" pos:end="207:9"><if pos:start="199:9" pos:end="207:9">if <condition pos:start="199:12" pos:end="199:56">(<expr pos:start="199:13" pos:end="199:55"><operator pos:start="199:13" pos:end="199:13">!</operator><name pos:start="199:14" pos:end="199:26"><name pos:start="199:14" pos:end="199:15">os</name><operator pos:start="199:16" pos:end="199:17">-&gt;</operator><name pos:start="199:18" pos:end="199:26">has_video</name></name> <operator pos:start="199:28" pos:end="199:29">&amp;&amp;</operator> <name pos:start="199:31" pos:end="199:50"><name pos:start="199:31" pos:end="199:31">c</name><operator pos:start="199:32" pos:end="199:33">-&gt;</operator><name pos:start="199:34" pos:end="199:50">min_frag_duration</name></name> <operator pos:start="199:52" pos:end="199:53">&lt;=</operator> <literal type="number" pos:start="199:55" pos:end="199:55">0</literal></expr>)</condition> <block pos:start="199:58" pos:end="207:9">{<block_content pos:start="201:13" pos:end="205:34">

            <expr_stmt pos:start="201:13" pos:end="203:92"><expr pos:start="201:13" pos:end="203:91"><call pos:start="201:13" pos:end="203:91"><name pos:start="201:13" pos:end="201:18">av_log</name><argument_list pos:start="201:19" pos:end="203:91">(<argument pos:start="201:20" pos:end="201:20"><expr pos:start="201:20" pos:end="201:20"><name pos:start="201:20" pos:end="201:20">s</name></expr></argument>, <argument pos:start="201:23" pos:end="201:36"><expr pos:start="201:23" pos:end="201:36"><name pos:start="201:23" pos:end="201:36">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="203:20" pos:end="203:87"><expr pos:start="203:20" pos:end="203:87"><literal type="string" pos:start="203:20" pos:end="203:87">"No video stream in output stream %d and no min frag duration set\n"</literal></expr></argument>, <argument pos:start="203:90" pos:end="203:90"><expr pos:start="203:90" pos:end="203:90"><name pos:start="203:90" pos:end="203:90">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:34"><expr pos:start="205:13" pos:end="205:33"><name pos:start="205:13" pos:end="205:15">ret</name> <operator pos:start="205:17" pos:end="205:17">=</operator> <call pos:start="205:19" pos:end="205:33"><name pos:start="205:19" pos:end="205:25">AVERROR</name><argument_list pos:start="205:26" pos:end="205:33">(<argument pos:start="205:27" pos:end="205:32"><expr pos:start="205:27" pos:end="205:32"><name pos:start="205:27" pos:end="205:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:31"><expr pos:start="209:9" pos:end="209:30"><name pos:start="209:9" pos:end="209:26"><name pos:start="209:9" pos:end="209:10">os</name><operator pos:start="209:11" pos:end="209:12">-&gt;</operator><name pos:start="209:13" pos:end="209:26">fragment_index</name></name> <operator pos:start="209:28" pos:end="209:28">=</operator> <literal type="number" pos:start="209:30" pos:end="209:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:29"><expr pos:start="211:9" pos:end="211:28"><call pos:start="211:9" pos:end="211:28"><name pos:start="211:9" pos:end="211:18">write_abst</name><argument_list pos:start="211:19" pos:end="211:28">(<argument pos:start="211:20" pos:end="211:20"><expr pos:start="211:20" pos:end="211:20"><name pos:start="211:20" pos:end="211:20">s</name></expr></argument>, <argument pos:start="211:23" pos:end="211:24"><expr pos:start="211:23" pos:end="211:24"><name pos:start="211:23" pos:end="211:24">os</name></expr></argument>, <argument pos:start="211:27" pos:end="211:27"><expr pos:start="211:27" pos:end="211:27"><literal type="number" pos:start="211:27" pos:end="211:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="215:5" pos:end="215:31"><expr pos:start="215:5" pos:end="215:30"><name pos:start="215:5" pos:end="215:7">ret</name> <operator pos:start="215:9" pos:end="215:9">=</operator> <call pos:start="215:11" pos:end="215:30"><name pos:start="215:11" pos:end="215:24">write_manifest</name><argument_list pos:start="215:25" pos:end="215:30">(<argument pos:start="215:26" pos:end="215:26"><expr pos:start="215:26" pos:end="215:26"><name pos:start="215:26" pos:end="215:26">s</name></expr></argument>, <argument pos:start="215:29" pos:end="215:29"><expr pos:start="215:29" pos:end="215:29"><literal type="number" pos:start="215:29" pos:end="215:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="219:1" pos:end="219:5"><name pos:start="219:1" pos:end="219:4">fail</name>:</label>

    <if_stmt pos:start="221:5" pos:end="223:20"><if pos:start="221:5" pos:end="223:20">if <condition pos:start="221:8" pos:end="221:12">(<expr pos:start="221:9" pos:end="221:11"><name pos:start="221:9" pos:end="221:11">ret</name></expr>)</condition><block type="pseudo" pos:start="223:9" pos:end="223:20"><block_content pos:start="223:9" pos:end="223:20">

        <expr_stmt pos:start="223:9" pos:end="223:20"><expr pos:start="223:9" pos:end="223:19"><call pos:start="223:9" pos:end="223:19"><name pos:start="223:9" pos:end="223:16">hds_free</name><argument_list pos:start="223:17" pos:end="223:19">(<argument pos:start="223:18" pos:end="223:18"><expr pos:start="223:18" pos:end="223:18"><name pos:start="223:18" pos:end="223:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="225:5" pos:end="225:15">return <expr pos:start="225:12" pos:end="225:14"><name pos:start="225:12" pos:end="225:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
