<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9344.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">decode_subframe_fixed</name><parameter_list pos:start="1:33" pos:end="1:77">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:44">FLACContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:60"><decl pos:start="1:50" pos:end="1:60"><type pos:start="1:50" pos:end="1:60"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:60">channel</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:76"><decl pos:start="1:63" pos:end="1:76"><type pos:start="1:63" pos:end="1:76"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:76">pred_order</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:23">blocksize</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">blocksize</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">int32_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:20">decoded</name> <init pos:start="7:22" pos:end="7:42">= <expr pos:start="7:24" pos:end="7:42"><name pos:start="7:24" pos:end="7:42"><name pos:start="7:24" pos:end="7:24">s</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:33">decoded</name><index pos:start="7:34" pos:end="7:42">[<expr pos:start="7:35" pos:end="7:41"><name pos:start="7:35" pos:end="7:41">channel</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">a</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">b</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">c</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">d</name></decl>, <decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:21">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:25">/* warm up samples */</comment>

    <for pos:start="15:5" pos:end="19:5">for <control pos:start="15:9" pos:end="15:36">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:31"><expr pos:start="15:17" pos:end="15:30"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:30">pred_order</name></expr>;</condition> <incr pos:start="15:33" pos:end="15:35"><expr pos:start="15:33" pos:end="15:35"><name pos:start="15:33" pos:end="15:33">i</name><operator pos:start="15:34" pos:end="15:35">++</operator></expr></incr>)</control> <block pos:start="15:38" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:52">

        <expr_stmt pos:start="17:9" pos:end="17:52"><expr pos:start="17:9" pos:end="17:51"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:15">decoded</name><index pos:start="17:16" pos:end="17:18">[<expr pos:start="17:17" pos:end="17:17"><name pos:start="17:17" pos:end="17:17">i</name></expr>]</index></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <call pos:start="17:22" pos:end="17:51"><name pos:start="17:22" pos:end="17:30">get_sbits</name><argument_list pos:start="17:31" pos:end="17:51">(<argument pos:start="17:32" pos:end="17:37"><expr pos:start="17:32" pos:end="17:37"><operator pos:start="17:32" pos:end="17:32">&amp;</operator><name pos:start="17:33" pos:end="17:37"><name pos:start="17:33" pos:end="17:33">s</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:37">gb</name></name></expr></argument>, <argument pos:start="17:40" pos:end="17:50"><expr pos:start="17:40" pos:end="17:50"><name pos:start="17:40" pos:end="17:50"><name pos:start="17:40" pos:end="17:40">s</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:50">curr_bps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:53">(<expr pos:start="23:9" pos:end="23:52"><call pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:24">decode_residuals</name><argument_list pos:start="23:25" pos:end="23:48">(<argument pos:start="23:26" pos:end="23:26"><expr pos:start="23:26" pos:end="23:26"><name pos:start="23:26" pos:end="23:26">s</name></expr></argument>, <argument pos:start="23:29" pos:end="23:35"><expr pos:start="23:29" pos:end="23:35"><name pos:start="23:29" pos:end="23:35">channel</name></expr></argument>, <argument pos:start="23:38" pos:end="23:47"><expr pos:start="23:38" pos:end="23:47"><name pos:start="23:38" pos:end="23:47">pred_order</name></expr></argument>)</argument_list></call> <operator pos:start="23:50" pos:end="23:50">&lt;</operator> <literal type="number" pos:start="23:52" pos:end="23:52">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:34"><if pos:start="29:5" pos:end="31:34">if <condition pos:start="29:8" pos:end="29:23">(<expr pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:18">pred_order</name> <operator pos:start="29:20" pos:end="29:20">&gt;</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:34"><block_content pos:start="31:9" pos:end="31:34">

        <expr_stmt pos:start="31:9" pos:end="31:34"><expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:9">a</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <name pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:19">decoded</name><index pos:start="31:20" pos:end="31:33">[<expr pos:start="31:21" pos:end="31:32"><name pos:start="31:21" pos:end="31:30">pred_order</name><operator pos:start="31:31" pos:end="31:31">-</operator><literal type="number" pos:start="31:32" pos:end="31:32">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="35:38"><if pos:start="33:5" pos:end="35:38">if <condition pos:start="33:8" pos:end="33:23">(<expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:18">pred_order</name> <operator pos:start="33:20" pos:end="33:20">&gt;</operator> <literal type="number" pos:start="33:22" pos:end="33:22">1</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:38"><block_content pos:start="35:9" pos:end="35:38">

        <expr_stmt pos:start="35:9" pos:end="35:38"><expr pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:9">b</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <name pos:start="35:13" pos:end="35:13">a</name> <operator pos:start="35:15" pos:end="35:15">-</operator> <name pos:start="35:17" pos:end="35:37"><name pos:start="35:17" pos:end="35:23">decoded</name><index pos:start="35:24" pos:end="35:37">[<expr pos:start="35:25" pos:end="35:36"><name pos:start="35:25" pos:end="35:34">pred_order</name><operator pos:start="35:35" pos:end="35:35">-</operator><literal type="number" pos:start="35:36" pos:end="35:36">2</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="39:62"><if pos:start="37:5" pos:end="39:62">if <condition pos:start="37:8" pos:end="37:23">(<expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:18">pred_order</name> <operator pos:start="37:20" pos:end="37:20">&gt;</operator> <literal type="number" pos:start="37:22" pos:end="37:22">2</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:62"><block_content pos:start="39:9" pos:end="39:62">

        <expr_stmt pos:start="39:9" pos:end="39:62"><expr pos:start="39:9" pos:end="39:61"><name pos:start="39:9" pos:end="39:9">c</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <name pos:start="39:13" pos:end="39:13">b</name> <operator pos:start="39:15" pos:end="39:15">-</operator> <name pos:start="39:17" pos:end="39:37"><name pos:start="39:17" pos:end="39:23">decoded</name><index pos:start="39:24" pos:end="39:37">[<expr pos:start="39:25" pos:end="39:36"><name pos:start="39:25" pos:end="39:34">pred_order</name><operator pos:start="39:35" pos:end="39:35">-</operator><literal type="number" pos:start="39:36" pos:end="39:36">2</literal></expr>]</index></name> <operator pos:start="39:39" pos:end="39:39">+</operator> <name pos:start="39:41" pos:end="39:61"><name pos:start="39:41" pos:end="39:47">decoded</name><index pos:start="39:48" pos:end="39:61">[<expr pos:start="39:49" pos:end="39:60"><name pos:start="39:49" pos:end="39:58">pred_order</name><operator pos:start="39:59" pos:end="39:59">-</operator><literal type="number" pos:start="39:60" pos:end="39:60">3</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="43:88"><if pos:start="41:5" pos:end="43:88">if <condition pos:start="41:8" pos:end="41:23">(<expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:18">pred_order</name> <operator pos:start="41:20" pos:end="41:20">&gt;</operator> <literal type="number" pos:start="41:22" pos:end="41:22">3</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:88"><block_content pos:start="43:9" pos:end="43:88">

        <expr_stmt pos:start="43:9" pos:end="43:88"><expr pos:start="43:9" pos:end="43:87"><name pos:start="43:9" pos:end="43:9">d</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <name pos:start="43:13" pos:end="43:13">c</name> <operator pos:start="43:15" pos:end="43:15">-</operator> <name pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:23">decoded</name><index pos:start="43:24" pos:end="43:37">[<expr pos:start="43:25" pos:end="43:36"><name pos:start="43:25" pos:end="43:34">pred_order</name><operator pos:start="43:35" pos:end="43:35">-</operator><literal type="number" pos:start="43:36" pos:end="43:36">2</literal></expr>]</index></name> <operator pos:start="43:39" pos:end="43:39">+</operator> <literal type="number" pos:start="43:41" pos:end="43:41">2</literal><operator pos:start="43:42" pos:end="43:42">*</operator><name pos:start="43:43" pos:end="43:63"><name pos:start="43:43" pos:end="43:49">decoded</name><index pos:start="43:50" pos:end="43:63">[<expr pos:start="43:51" pos:end="43:62"><name pos:start="43:51" pos:end="43:60">pred_order</name><operator pos:start="43:61" pos:end="43:61">-</operator><literal type="number" pos:start="43:62" pos:end="43:62">3</literal></expr>]</index></name> <operator pos:start="43:65" pos:end="43:65">-</operator> <name pos:start="43:67" pos:end="43:87"><name pos:start="43:67" pos:end="43:73">decoded</name><index pos:start="43:74" pos:end="43:87">[<expr pos:start="43:75" pos:end="43:86"><name pos:start="43:75" pos:end="43:84">pred_order</name><operator pos:start="43:85" pos:end="43:85">-</operator><literal type="number" pos:start="43:86" pos:end="43:86">4</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="47:5" pos:end="91:5">switch <condition pos:start="47:12" pos:end="47:23">(<expr pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:22">pred_order</name></expr>)</condition> <block pos:start="47:25" pos:end="91:5">{<block_content pos:start="49:5" pos:end="89:18">

    <case pos:start="49:5" pos:end="49:11">case <expr pos:start="49:10" pos:end="49:10"><literal type="number" pos:start="49:10" pos:end="49:10">0</literal></expr>:</case>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">1</literal></expr>:</case>

        <for pos:start="55:9" pos:end="57:41">for <control pos:start="55:13" pos:end="55:48">(<init pos:start="55:14" pos:end="55:28"><expr pos:start="55:14" pos:end="55:27"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:27">pred_order</name></expr>;</init> <condition pos:start="55:30" pos:end="55:43"><expr pos:start="55:30" pos:end="55:42"><name pos:start="55:30" pos:end="55:30">i</name> <operator pos:start="55:32" pos:end="55:32">&lt;</operator> <name pos:start="55:34" pos:end="55:42">blocksize</name></expr>;</condition> <incr pos:start="55:45" pos:end="55:47"><expr pos:start="55:45" pos:end="55:47"><name pos:start="55:45" pos:end="55:45">i</name><operator pos:start="55:46" pos:end="55:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:13" pos:end="57:41"><block_content pos:start="57:13" pos:end="57:41">

            <expr_stmt pos:start="57:13" pos:end="57:41"><expr pos:start="57:13" pos:end="57:40"><name pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:19">decoded</name><index pos:start="57:20" pos:end="57:22">[<expr pos:start="57:21" pos:end="57:21"><name pos:start="57:21" pos:end="57:21">i</name></expr>]</index></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:26">a</name> <operator pos:start="57:28" pos:end="57:29">+=</operator> <name pos:start="57:31" pos:end="57:40"><name pos:start="57:31" pos:end="57:37">decoded</name><index pos:start="57:38" pos:end="57:40">[<expr pos:start="57:39" pos:end="57:39"><name pos:start="57:39" pos:end="57:39">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">2</literal></expr>:</case>

        <for pos:start="63:9" pos:end="65:46">for <control pos:start="63:13" pos:end="63:48">(<init pos:start="63:14" pos:end="63:28"><expr pos:start="63:14" pos:end="63:27"><name pos:start="63:14" pos:end="63:14">i</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:27">pred_order</name></expr>;</init> <condition pos:start="63:30" pos:end="63:43"><expr pos:start="63:30" pos:end="63:42"><name pos:start="63:30" pos:end="63:30">i</name> <operator pos:start="63:32" pos:end="63:32">&lt;</operator> <name pos:start="63:34" pos:end="63:42">blocksize</name></expr>;</condition> <incr pos:start="63:45" pos:end="63:47"><expr pos:start="63:45" pos:end="63:47"><name pos:start="63:45" pos:end="63:45">i</name><operator pos:start="63:46" pos:end="63:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="65:13" pos:end="65:46"><block_content pos:start="65:13" pos:end="65:46">

            <expr_stmt pos:start="65:13" pos:end="65:46"><expr pos:start="65:13" pos:end="65:45"><name pos:start="65:13" pos:end="65:22"><name pos:start="65:13" pos:end="65:19">decoded</name><index pos:start="65:20" pos:end="65:22">[<expr pos:start="65:21" pos:end="65:21"><name pos:start="65:21" pos:end="65:21">i</name></expr>]</index></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <name pos:start="65:26" pos:end="65:26">a</name> <operator pos:start="65:28" pos:end="65:29">+=</operator> <name pos:start="65:31" pos:end="65:31">b</name> <operator pos:start="65:33" pos:end="65:34">+=</operator> <name pos:start="65:36" pos:end="65:45"><name pos:start="65:36" pos:end="65:42">decoded</name><index pos:start="65:43" pos:end="65:45">[<expr pos:start="65:44" pos:end="65:44"><name pos:start="65:44" pos:end="65:44">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:11">case <expr pos:start="69:10" pos:end="69:10"><literal type="number" pos:start="69:10" pos:end="69:10">3</literal></expr>:</case>

        <for pos:start="71:9" pos:end="73:51">for <control pos:start="71:13" pos:end="71:48">(<init pos:start="71:14" pos:end="71:28"><expr pos:start="71:14" pos:end="71:27"><name pos:start="71:14" pos:end="71:14">i</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:27">pred_order</name></expr>;</init> <condition pos:start="71:30" pos:end="71:43"><expr pos:start="71:30" pos:end="71:42"><name pos:start="71:30" pos:end="71:30">i</name> <operator pos:start="71:32" pos:end="71:32">&lt;</operator> <name pos:start="71:34" pos:end="71:42">blocksize</name></expr>;</condition> <incr pos:start="71:45" pos:end="71:47"><expr pos:start="71:45" pos:end="71:47"><name pos:start="71:45" pos:end="71:45">i</name><operator pos:start="71:46" pos:end="71:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="73:13" pos:end="73:51"><block_content pos:start="73:13" pos:end="73:51">

            <expr_stmt pos:start="73:13" pos:end="73:51"><expr pos:start="73:13" pos:end="73:50"><name pos:start="73:13" pos:end="73:22"><name pos:start="73:13" pos:end="73:19">decoded</name><index pos:start="73:20" pos:end="73:22">[<expr pos:start="73:21" pos:end="73:21"><name pos:start="73:21" pos:end="73:21">i</name></expr>]</index></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:26">a</name> <operator pos:start="73:28" pos:end="73:29">+=</operator> <name pos:start="73:31" pos:end="73:31">b</name> <operator pos:start="73:33" pos:end="73:34">+=</operator> <name pos:start="73:36" pos:end="73:36">c</name> <operator pos:start="73:38" pos:end="73:39">+=</operator> <name pos:start="73:41" pos:end="73:50"><name pos:start="73:41" pos:end="73:47">decoded</name><index pos:start="73:48" pos:end="73:50">[<expr pos:start="73:49" pos:end="73:49"><name pos:start="73:49" pos:end="73:49">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:11">case <expr pos:start="77:10" pos:end="77:10"><literal type="number" pos:start="77:10" pos:end="77:10">4</literal></expr>:</case>

        <for pos:start="79:9" pos:end="81:56">for <control pos:start="79:13" pos:end="79:48">(<init pos:start="79:14" pos:end="79:28"><expr pos:start="79:14" pos:end="79:27"><name pos:start="79:14" pos:end="79:14">i</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <name pos:start="79:18" pos:end="79:27">pred_order</name></expr>;</init> <condition pos:start="79:30" pos:end="79:43"><expr pos:start="79:30" pos:end="79:42"><name pos:start="79:30" pos:end="79:30">i</name> <operator pos:start="79:32" pos:end="79:32">&lt;</operator> <name pos:start="79:34" pos:end="79:42">blocksize</name></expr>;</condition> <incr pos:start="79:45" pos:end="79:47"><expr pos:start="79:45" pos:end="79:47"><name pos:start="79:45" pos:end="79:45">i</name><operator pos:start="79:46" pos:end="79:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="81:13" pos:end="81:56"><block_content pos:start="81:13" pos:end="81:56">

            <expr_stmt pos:start="81:13" pos:end="81:56"><expr pos:start="81:13" pos:end="81:55"><name pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:19">decoded</name><index pos:start="81:20" pos:end="81:22">[<expr pos:start="81:21" pos:end="81:21"><name pos:start="81:21" pos:end="81:21">i</name></expr>]</index></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:26">a</name> <operator pos:start="81:28" pos:end="81:29">+=</operator> <name pos:start="81:31" pos:end="81:31">b</name> <operator pos:start="81:33" pos:end="81:34">+=</operator> <name pos:start="81:36" pos:end="81:36">c</name> <operator pos:start="81:38" pos:end="81:39">+=</operator> <name pos:start="81:41" pos:end="81:41">d</name> <operator pos:start="81:43" pos:end="81:44">+=</operator> <name pos:start="81:46" pos:end="81:55"><name pos:start="81:46" pos:end="81:52">decoded</name><index pos:start="81:53" pos:end="81:55">[<expr pos:start="81:54" pos:end="81:54"><name pos:start="81:54" pos:end="81:54">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <default pos:start="85:5" pos:end="85:12">default:</default>

        <expr_stmt pos:start="87:9" pos:end="87:78"><expr pos:start="87:9" pos:end="87:77"><call pos:start="87:9" pos:end="87:77"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="87:77">(<argument pos:start="87:16" pos:end="87:23"><expr pos:start="87:16" pos:end="87:23"><name pos:start="87:16" pos:end="87:23"><name pos:start="87:16" pos:end="87:16">s</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:23">avctx</name></name></expr></argument>, <argument pos:start="87:26" pos:end="87:37"><expr pos:start="87:26" pos:end="87:37"><name pos:start="87:26" pos:end="87:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:40" pos:end="87:64"><expr pos:start="87:40" pos:end="87:64"><literal type="string" pos:start="87:40" pos:end="87:64">"illegal pred order %d\n"</literal></expr></argument>, <argument pos:start="87:67" pos:end="87:76"><expr pos:start="87:67" pos:end="87:76"><name pos:start="87:67" pos:end="87:76">pred_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:18">return <expr pos:start="89:16" pos:end="89:17"><operator pos:start="89:16" pos:end="89:16">-</operator><literal type="number" pos:start="89:17" pos:end="89:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
