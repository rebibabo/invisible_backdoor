<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3156.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:27">asf_read_pts</name><parameter_list pos:start="1:28" pos:end="1:80">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:55">int64_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">ppos</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:79"><decl pos:start="1:64" pos:end="1:79"><type pos:start="1:64" pos:end="1:79"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:79">stream_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ASFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">asf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">AVPacket</name></type> <name pos:start="7:14" pos:end="7:17">pkt1</name></decl>, <decl pos:start="7:20" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:12"><modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">pkt</name> <init pos:start="7:25" pos:end="7:31">= <expr pos:start="7:27" pos:end="7:31"><operator pos:start="7:27" pos:end="7:27">&amp;</operator><name pos:start="7:28" pos:end="7:31">pkt1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:15">pos</name><init pos:start="9:16" pos:end="9:22">= <expr pos:start="9:18" pos:end="9:22"><operator pos:start="9:18" pos:end="9:18">*</operator><name pos:start="9:19" pos:end="9:22">ppos</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">pts</name></decl>;</decl_stmt>



    <comment type="line" pos:start="15:5" pos:end="15:42">// ensure we are on the packet boundry</comment>

    <expr_stmt pos:start="17:5" pos:end="17:40"><expr pos:start="17:5" pos:end="17:39"><call pos:start="17:5" pos:end="17:39"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:39">(<argument pos:start="17:12" pos:end="17:38"><expr pos:start="17:12" pos:end="17:38"><name pos:start="17:12" pos:end="17:14">pos</name> <operator pos:start="17:16" pos:end="17:16">%</operator> <name pos:start="17:18" pos:end="17:33"><name pos:start="17:18" pos:end="17:20">asf</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:33">packet_size</name></name> <operator pos:start="17:35" pos:end="17:36">==</operator> <literal type="number" pos:start="17:38" pos:end="17:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><call pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:13">url_fseek</name><argument_list pos:start="21:14" pos:end="21:53">(<argument pos:start="21:15" pos:end="21:20"><expr pos:start="21:15" pos:end="21:20"><operator pos:start="21:15" pos:end="21:15">&amp;</operator><name pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:20">pb</name></name></expr></argument>, <argument pos:start="21:23" pos:end="21:42"><expr pos:start="21:23" pos:end="21:42"><name pos:start="21:23" pos:end="21:25">pos</name> <operator pos:start="21:27" pos:end="21:27">+</operator> <name pos:start="21:29" pos:end="21:42"><name pos:start="21:29" pos:end="21:29">s</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:42">data_offset</name></name></expr></argument>, <argument pos:start="21:45" pos:end="21:52"><expr pos:start="21:45" pos:end="21:52"><name pos:start="21:45" pos:end="21:52">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <do pos:start="23:5" pos:end="39:46">do<block pos:start="23:7" pos:end="39:5">{<block_content pos:start="25:9" pos:end="37:28">

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:11">pos</name><operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:30"><name pos:start="25:14" pos:end="25:22">url_ftell</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:29"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:29">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:32" pos:end="25:32">-</operator> <name pos:start="25:34" pos:end="25:47"><name pos:start="25:34" pos:end="25:34">s</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:47">data_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><call pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:24">asf_reset_header</name><argument_list pos:start="27:25" pos:end="27:27">(<argument pos:start="27:26" pos:end="27:26"><expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:34"><if pos:start="29:9" pos:end="31:34">if <condition pos:start="29:12" pos:end="29:38">(<expr pos:start="29:13" pos:end="29:37"><call pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:25">av_read_frame</name><argument_list pos:start="29:26" pos:end="29:33">(<argument pos:start="29:27" pos:end="29:27"><expr pos:start="29:27" pos:end="29:27"><name pos:start="29:27" pos:end="29:27">s</name></expr></argument>, <argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="29:35" pos:end="29:35">&lt;</operator> <literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:34"><block_content pos:start="31:13" pos:end="31:34">

    	    <return pos:start="31:13" pos:end="31:34">return <expr pos:start="31:20" pos:end="31:33"><name pos:start="31:20" pos:end="31:33">AV_NOPTS_VALUE</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:22"><expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:11">pts</name><operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:21"><name pos:start="33:14" pos:end="33:16">pkt</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:21">pts</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:28"><expr pos:start="37:9" pos:end="37:27"><call pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:22">av_free_packet</name><argument_list pos:start="37:23" pos:end="37:27">(<argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>while<condition pos:start="39:11" pos:end="39:45">(<expr pos:start="39:12" pos:end="39:44"><name pos:start="39:12" pos:end="39:28"><name pos:start="39:12" pos:end="39:14">pkt</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:28">stream_index</name></name> <operator pos:start="39:30" pos:end="39:31">!=</operator> <name pos:start="39:33" pos:end="39:44">stream_index</name></expr>)</condition>;</do>

    

    <expr_stmt pos:start="43:5" pos:end="43:15"><expr pos:start="43:5" pos:end="43:14"><operator pos:start="43:5" pos:end="43:5">*</operator><name pos:start="43:6" pos:end="43:9">ppos</name><operator pos:start="43:10" pos:end="43:10">=</operator> <name pos:start="43:12" pos:end="43:14">pos</name></expr>;</expr_stmt>



    <return pos:start="47:5" pos:end="47:15">return <expr pos:start="47:12" pos:end="47:14"><name pos:start="47:12" pos:end="47:14">pts</name></expr>;</return>

</block_content>}</block></function>
</unit>
