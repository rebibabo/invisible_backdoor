<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22533.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:23">attribute_align_arg</name></type> <name pos:start="1:25" pos:end="1:45">avcodec_encode_video2</name><parameter_list pos:start="1:46" pos:end="7:66">(<parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avctx</name></decl></parameter>,

                                              <parameter pos:start="3:47" pos:end="3:61"><decl pos:start="3:47" pos:end="3:61"><type pos:start="3:47" pos:end="3:61"><name pos:start="3:47" pos:end="3:54">AVPacket</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:61">avpkt</name></decl></parameter>,

                                              <parameter pos:start="5:47" pos:end="5:66"><decl pos:start="5:47" pos:end="5:66"><type pos:start="5:47" pos:end="5:66"><specifier pos:start="5:47" pos:end="5:51">const</specifier> <name pos:start="5:53" pos:end="5:59">AVFrame</name> <modifier pos:start="5:61" pos:end="5:61">*</modifier></type><name pos:start="5:62" pos:end="5:66">frame</name></decl></parameter>,

                                              <parameter pos:start="7:47" pos:end="7:65"><decl pos:start="7:47" pos:end="7:65"><type pos:start="7:47" pos:end="7:65"><name pos:start="7:47" pos:end="7:49">int</name> <modifier pos:start="7:51" pos:end="7:51">*</modifier></type><name pos:start="7:52" pos:end="7:65">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="87:1">{<block_content pos:start="11:5" pos:end="85:15">

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">user_packet</name> <init pos:start="13:21" pos:end="13:35">= <expr pos:start="13:23" pos:end="13:35"><operator pos:start="13:23" pos:end="13:23">!</operator><operator pos:start="13:24" pos:end="13:24">!</operator><name pos:start="13:25" pos:end="13:35"><name pos:start="13:25" pos:end="13:29">avpkt</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:35">data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><operator pos:start="17:5" pos:end="17:5">*</operator><name pos:start="17:6" pos:end="17:19">got_packet_ptr</name> <operator pos:start="17:21" pos:end="17:21">=</operator> <literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:66">(<expr pos:start="21:9" pos:end="21:65"><operator pos:start="21:9" pos:end="21:9">!</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:36"><name pos:start="21:11" pos:end="21:15">avctx</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:22">codec</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:36">capabilities</name></name> <operator pos:start="21:38" pos:end="21:38">&amp;</operator> <name pos:start="21:40" pos:end="21:54">CODEC_CAP_DELAY</name><operator pos:start="21:55" pos:end="21:55">)</operator> <operator pos:start="21:57" pos:end="21:58">&amp;&amp;</operator> <operator pos:start="21:60" pos:end="21:60">!</operator><name pos:start="21:61" pos:end="21:65">frame</name></expr>)</condition> <block pos:start="21:68" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:17">

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><call pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:22">av_free_packet</name><argument_list pos:start="23:23" pos:end="23:29">(<argument pos:start="23:24" pos:end="23:28"><expr pos:start="23:24" pos:end="23:28"><name pos:start="23:24" pos:end="23:28">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:30"><expr pos:start="25:9" pos:end="25:29"><call pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:22">av_init_packet</name><argument_list pos:start="25:23" pos:end="25:29">(<argument pos:start="25:24" pos:end="25:28"><expr pos:start="25:24" pos:end="25:28"><name pos:start="25:24" pos:end="25:28">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:13">avpkt</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:19">size</name></name>     <operator pos:start="27:25" pos:end="27:25">=</operator> <literal type="number" pos:start="27:27" pos:end="27:27">0</literal></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="37:31"><if pos:start="35:5" pos:end="37:31">if <condition pos:start="35:8" pos:end="35:67">(<expr pos:start="35:9" pos:end="35:66"><call pos:start="35:9" pos:end="35:66"><name pos:start="35:9" pos:end="35:27">av_image_check_size</name><argument_list pos:start="35:28" pos:end="35:66">(<argument pos:start="35:29" pos:end="35:40"><expr pos:start="35:29" pos:end="35:40"><name pos:start="35:29" pos:end="35:40"><name pos:start="35:29" pos:end="35:33">avctx</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:40">width</name></name></expr></argument>, <argument pos:start="35:43" pos:end="35:55"><expr pos:start="35:43" pos:end="35:55"><name pos:start="35:43" pos:end="35:55"><name pos:start="35:43" pos:end="35:47">avctx</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:55">height</name></name></expr></argument>, <argument pos:start="35:58" pos:end="35:58"><expr pos:start="35:58" pos:end="35:58"><literal type="number" pos:start="35:58" pos:end="35:58">0</literal></expr></argument>, <argument pos:start="35:61" pos:end="35:65"><expr pos:start="35:61" pos:end="35:65"><name pos:start="35:61" pos:end="35:65">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:31"><block_content pos:start="37:9" pos:end="37:31">

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><call pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:14">av_assert0</name><argument_list pos:start="41:15" pos:end="41:37">(<argument pos:start="41:16" pos:end="41:36"><expr pos:start="41:16" pos:end="41:36"><name pos:start="41:16" pos:end="41:36"><name pos:start="41:16" pos:end="41:20">avctx</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:27">codec</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:36">encode2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:69"><expr pos:start="45:5" pos:end="45:68"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:68"><name pos:start="45:11" pos:end="45:31"><name pos:start="45:11" pos:end="45:15">avctx</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:22">codec</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:31">encode2</name></name><argument_list pos:start="45:32" pos:end="45:68">(<argument pos:start="45:33" pos:end="45:37"><expr pos:start="45:33" pos:end="45:37"><name pos:start="45:33" pos:end="45:37">avctx</name></expr></argument>, <argument pos:start="45:40" pos:end="45:44"><expr pos:start="45:40" pos:end="45:44"><name pos:start="45:40" pos:end="45:44">avpkt</name></expr></argument>, <argument pos:start="45:47" pos:end="45:51"><expr pos:start="45:47" pos:end="45:51"><name pos:start="45:47" pos:end="45:51">frame</name></expr></argument>, <argument pos:start="45:54" pos:end="45:67"><expr pos:start="45:54" pos:end="45:67"><name pos:start="45:54" pos:end="45:67">got_packet_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="73:5"><if pos:start="47:5" pos:end="73:5">if <condition pos:start="47:8" pos:end="47:13">(<expr pos:start="47:9" pos:end="47:12"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:12">ret</name></expr>)</condition> <block pos:start="47:15" pos:end="73:5">{<block_content pos:start="49:9" pos:end="71:30">

        <if_stmt pos:start="49:9" pos:end="55:49"><if pos:start="49:9" pos:end="51:28">if <condition pos:start="49:12" pos:end="49:29">(<expr pos:start="49:13" pos:end="49:28"><operator pos:start="49:13" pos:end="49:13">!</operator><operator pos:start="49:14" pos:end="49:14">*</operator><name pos:start="49:15" pos:end="49:28">got_packet_ptr</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:28"><block_content pos:start="51:13" pos:end="51:28">

            <expr_stmt pos:start="51:13" pos:end="51:28"><expr pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:17">avpkt</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:23">size</name></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <literal type="number" pos:start="51:27" pos:end="51:27">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="53:9" pos:end="55:49">else if <condition pos:start="53:17" pos:end="53:65">(<expr pos:start="53:18" pos:end="53:64"><operator pos:start="53:18" pos:end="53:18">!</operator><operator pos:start="53:19" pos:end="53:19">(</operator><name pos:start="53:20" pos:end="53:45"><name pos:start="53:20" pos:end="53:24">avctx</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:31">codec</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:45">capabilities</name></name> <operator pos:start="53:47" pos:end="53:47">&amp;</operator> <name pos:start="53:49" pos:end="53:63">CODEC_CAP_DELAY</name><operator pos:start="53:64" pos:end="53:64">)</operator></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:49"><block_content pos:start="55:13" pos:end="55:49">

            <expr_stmt pos:start="55:13" pos:end="55:49"><expr pos:start="55:13" pos:end="55:48"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:17">avpkt</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:22">pts</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:35"><name pos:start="55:26" pos:end="55:30">avpkt</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:35">dts</name></name> <operator pos:start="55:37" pos:end="55:37">=</operator> <name pos:start="55:39" pos:end="55:48"><name pos:start="55:39" pos:end="55:43">frame</name><operator pos:start="55:44" pos:end="55:45">-&gt;</operator><name pos:start="55:46" pos:end="55:48">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="67:9">if <condition pos:start="59:12" pos:end="59:40">(<expr pos:start="59:13" pos:end="59:39"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:24">user_packet</name> <operator pos:start="59:26" pos:end="59:27">&amp;&amp;</operator> <name pos:start="59:29" pos:end="59:39"><name pos:start="59:29" pos:end="59:33">avpkt</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:39">data</name></name></expr>)</condition> <block pos:start="59:42" pos:end="67:9">{<block_content pos:start="61:13" pos:end="65:39">

            <decl_stmt pos:start="61:13" pos:end="61:69"><decl pos:start="61:13" pos:end="61:68"><type pos:start="61:13" pos:end="61:21"><name pos:start="61:13" pos:end="61:19">uint8_t</name> <modifier pos:start="61:21" pos:end="61:21">*</modifier></type><name pos:start="61:22" pos:end="61:29">new_data</name> <init pos:start="61:31" pos:end="61:68">= <expr pos:start="61:33" pos:end="61:68"><call pos:start="61:33" pos:end="61:68"><name pos:start="61:33" pos:end="61:42">av_realloc</name><argument_list pos:start="61:43" pos:end="61:68">(<argument pos:start="61:44" pos:end="61:54"><expr pos:start="61:44" pos:end="61:54"><name pos:start="61:44" pos:end="61:54"><name pos:start="61:44" pos:end="61:48">avpkt</name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:54">data</name></name></expr></argument>, <argument pos:start="61:57" pos:end="61:67"><expr pos:start="61:57" pos:end="61:67"><name pos:start="61:57" pos:end="61:67"><name pos:start="61:57" pos:end="61:61">avpkt</name><operator pos:start="61:62" pos:end="61:63">-&gt;</operator><name pos:start="61:64" pos:end="61:67">size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="63:13" pos:end="65:39"><if pos:start="63:13" pos:end="65:39">if <condition pos:start="63:16" pos:end="63:25">(<expr pos:start="63:17" pos:end="63:24"><name pos:start="63:17" pos:end="63:24">new_data</name></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:39"><block_content pos:start="65:17" pos:end="65:39">

                <expr_stmt pos:start="65:17" pos:end="65:39"><expr pos:start="65:17" pos:end="65:38"><name pos:start="65:17" pos:end="65:27"><name pos:start="65:17" pos:end="65:21">avpkt</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:27">data</name></name> <operator pos:start="65:29" pos:end="65:29">=</operator> <name pos:start="65:31" pos:end="65:38">new_data</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:30"><expr pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:13">avctx</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:27">frame_number</name></name><operator pos:start="71:28" pos:end="71:29">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="79:30"><if pos:start="77:5" pos:end="79:30">if <condition pos:start="77:8" pos:end="77:36">(<expr pos:start="77:9" pos:end="77:35"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">&lt;</operator> <literal type="number" pos:start="77:15" pos:end="77:15">0</literal> <operator pos:start="77:17" pos:end="77:18">||</operator> <operator pos:start="77:20" pos:end="77:20">!</operator><operator pos:start="77:21" pos:end="77:21">*</operator><name pos:start="77:22" pos:end="77:35">got_packet_ptr</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:30"><block_content pos:start="79:9" pos:end="79:30">

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><call pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:22">av_free_packet</name><argument_list pos:start="79:23" pos:end="79:29">(<argument pos:start="79:24" pos:end="79:28"><expr pos:start="79:24" pos:end="79:28"><name pos:start="79:24" pos:end="79:28">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:13"><expr pos:start="83:5" pos:end="83:12"><call pos:start="83:5" pos:end="83:12"><name pos:start="83:5" pos:end="83:10">emms_c</name><argument_list pos:start="83:11" pos:end="83:12">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="85:5" pos:end="85:15">return <expr pos:start="85:12" pos:end="85:14"><name pos:start="85:12" pos:end="85:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
