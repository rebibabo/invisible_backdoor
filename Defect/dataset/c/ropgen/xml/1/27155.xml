<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27155.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:17">div64</name><parameter_list pos:start="1:18" pos:end="1:62">(<parameter pos:start="1:19" pos:end="1:32"><decl pos:start="1:19" pos:end="1:32"><type pos:start="1:19" pos:end="1:32"><name pos:start="1:19" pos:end="1:26">uint64_t</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:32">plow</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:49"><decl pos:start="1:35" pos:end="1:49"><type pos:start="1:35" pos:end="1:49"><name pos:start="1:35" pos:end="1:42">uint64_t</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">phigh</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:59">uint64_t</name></type> <name pos:start="1:61" pos:end="1:61">b</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:14">q</name></decl>, <decl pos:start="5:17" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:17" pos:end="5:17">r</name></decl>, <decl pos:start="5:20" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:20" pos:end="5:21">a1</name></decl>, <decl pos:start="5:24" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:24" pos:end="5:25">a0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:13">qb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:15"><expr pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:6">a0</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <operator pos:start="11:10" pos:end="11:10">*</operator><name pos:start="11:11" pos:end="11:14">plow</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:16"><expr pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:6">a1</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <operator pos:start="13:10" pos:end="13:10">*</operator><name pos:start="13:11" pos:end="13:15">phigh</name></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="61:5"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:10">a1</name> <operator pos:start="15:12" pos:end="15:13">==</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>)</condition> <block pos:start="15:18" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:19">

        <expr_stmt pos:start="17:9" pos:end="17:19"><expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:9">q</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <name pos:start="17:13" pos:end="17:14">a0</name> <operator pos:start="17:16" pos:end="17:16">/</operator> <name pos:start="17:18" pos:end="17:18">b</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:19"><expr pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:9">r</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <name pos:start="19:13" pos:end="19:14">a0</name> <operator pos:start="19:16" pos:end="19:16">%</operator> <name pos:start="19:18" pos:end="19:18">b</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:18"><expr pos:start="21:9" pos:end="21:17"><operator pos:start="21:9" pos:end="21:9">*</operator><name pos:start="21:10" pos:end="21:13">plow</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:17">q</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:19"><expr pos:start="23:9" pos:end="23:18"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:14">phigh</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:18">r</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="61:5">else <block pos:start="25:12" pos:end="61:5">{<block_content pos:start="29:9" pos:end="59:20">

        <comment type="block" pos:start="27:9" pos:end="27:41">/* XXX: use a better algorithm */</comment>

        <for pos:start="29:9" pos:end="50:0">for<control pos:start="29:12" pos:end="29:31">(<init pos:start="29:13" pos:end="29:18"><expr pos:start="29:13" pos:end="29:17"><name pos:start="29:13" pos:end="29:13">i</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>;</init> <condition pos:start="29:20" pos:end="29:26"><expr pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:20">i</name> <operator pos:start="29:22" pos:end="29:22">&lt;</operator> <literal type="number" pos:start="29:24" pos:end="29:25">64</literal></expr>;</condition> <incr pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:28">i</name><operator pos:start="29:29" pos:end="29:30">++</operator></expr></incr>)</control> <block pos:start="29:33" pos:end="50:0">{<block_content pos:start="31:13" pos:end="45:32">

            <expr_stmt pos:start="31:13" pos:end="31:40"><expr pos:start="31:13" pos:end="31:39"><name pos:start="31:13" pos:end="31:14">a1</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <operator pos:start="31:18" pos:end="31:18">(</operator><name pos:start="31:19" pos:end="31:20">a1</name> <operator pos:start="31:22" pos:end="31:23">&lt;&lt;</operator> <literal type="number" pos:start="31:25" pos:end="31:25">1</literal><operator pos:start="31:26" pos:end="31:26">)</operator> <operator pos:start="31:28" pos:end="31:28">|</operator> <operator pos:start="31:30" pos:end="31:30">(</operator><name pos:start="31:31" pos:end="31:32">a0</name> <operator pos:start="31:34" pos:end="31:35">&gt;&gt;</operator> <literal type="number" pos:start="31:37" pos:end="31:38">63</literal><operator pos:start="31:39" pos:end="31:39">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="43:13"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="33:24">(<expr pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:18">a1</name> <operator pos:start="33:20" pos:end="33:21">&gt;=</operator> <name pos:start="33:23" pos:end="33:23">b</name></expr>)</condition> <block pos:start="33:26" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:23">

                <expr_stmt pos:start="35:17" pos:end="35:24"><expr pos:start="35:17" pos:end="35:23"><name pos:start="35:17" pos:end="35:18">a1</name> <operator pos:start="35:20" pos:end="35:21">-=</operator> <name pos:start="35:23" pos:end="35:23">b</name></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:23"><expr pos:start="37:17" pos:end="37:22"><name pos:start="37:17" pos:end="37:18">qb</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="39:15" pos:end="43:13">else <block pos:start="39:20" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:23">

                <expr_stmt pos:start="41:17" pos:end="41:23"><expr pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:18">qb</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:32"><expr pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:14">a0</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <operator pos:start="45:18" pos:end="45:18">(</operator><name pos:start="45:19" pos:end="45:20">a0</name> <operator pos:start="45:22" pos:end="45:23">&lt;&lt;</operator> <literal type="number" pos:start="45:25" pos:end="45:25">1</literal><operator pos:start="45:26" pos:end="45:26">)</operator> <operator pos:start="45:28" pos:end="45:28">|</operator> <name pos:start="45:30" pos:end="45:31">qb</name></expr>;</expr_stmt>

        </block_content>}</block></for>

<cpp:if pos:start="49:1" pos:end="49:25">#<cpp:directive pos:start="49:2" pos:end="49:3">if</cpp:directive> <expr pos:start="49:5" pos:end="49:25"><call pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:11">defined</name><argument_list pos:start="49:12" pos:end="49:25">(<argument pos:start="49:13" pos:end="49:24"><expr pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:24">DEBUG_MULDIV</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="51:9" pos:end="56:0"><expr pos:start="51:9" pos:end="53:40"><call pos:start="51:9" pos:end="53:40"><name pos:start="51:9" pos:end="51:14">printf</name><argument_list pos:start="51:15" pos:end="53:40">(<argument pos:start="51:16" pos:end="51:77"><expr pos:start="51:16" pos:end="51:77"><literal type="string" pos:start="51:16" pos:end="51:77">"div: 0x%016llx%016llx / 0x%016llx: q=0x%016llx r=0x%016llx\n"</literal></expr></argument>,

               <argument pos:start="53:16" pos:end="53:21"><expr pos:start="53:16" pos:end="53:21"><operator pos:start="53:16" pos:end="53:16">*</operator><name pos:start="53:17" pos:end="53:21">phigh</name></expr></argument>, <argument pos:start="53:24" pos:end="53:28"><expr pos:start="53:24" pos:end="53:28"><operator pos:start="53:24" pos:end="53:24">*</operator><name pos:start="53:25" pos:end="53:28">plow</name></expr></argument>, <argument pos:start="53:31" pos:end="53:31"><expr pos:start="53:31" pos:end="53:31"><name pos:start="53:31" pos:end="53:31">b</name></expr></argument>, <argument pos:start="53:34" pos:end="53:35"><expr pos:start="53:34" pos:end="53:35"><name pos:start="53:34" pos:end="53:35">a0</name></expr></argument>, <argument pos:start="53:38" pos:end="53:39"><expr pos:start="53:38" pos:end="53:39"><name pos:start="53:38" pos:end="53:39">a1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="57:9" pos:end="57:19"><expr pos:start="57:9" pos:end="57:18"><operator pos:start="57:9" pos:end="57:9">*</operator><name pos:start="57:10" pos:end="57:13">plow</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:18">a0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:20"><expr pos:start="59:9" pos:end="59:19"><operator pos:start="59:9" pos:end="59:9">*</operator><name pos:start="59:10" pos:end="59:14">phigh</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:19">a1</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
