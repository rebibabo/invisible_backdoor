<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25487.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:24">coroutine_fn</name></type> <name pos:start="1:26" pos:end="1:38">sd_write_done</name><parameter_list pos:start="1:39" pos:end="1:58">(<parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:54"><name pos:start="1:40" pos:end="1:52">SheepdogAIOCB</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">acb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:25">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">BDRVSheepdogState</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:49">= <expr pos:start="5:28" pos:end="5:49"><name pos:start="5:28" pos:end="5:49"><name pos:start="5:28" pos:end="5:30">acb</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:38">common</name><operator pos:start="5:39" pos:end="5:39">.</operator><name pos:start="5:40" pos:end="5:41">bs</name><operator pos:start="5:42" pos:end="5:43">-&gt;</operator><name pos:start="5:44" pos:end="5:49">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:16">iovec</name></name></type> <name pos:start="7:18" pos:end="7:20">iov</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">AIOReq</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:19">aio_req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:19">offset</name></decl>, <decl pos:start="11:22" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:22" pos:end="11:29">data_len</name></decl>, <decl pos:start="11:32" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:32" pos:end="11:33">mn</name></decl>, <decl pos:start="11:36" pos:end="11:37"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:36" pos:end="11:37">mx</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:6">mn</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <name pos:start="15:10" pos:end="15:30"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:30">min_dirty_data_idx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:6">mx</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:30"><name pos:start="17:10" pos:end="17:10">s</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:30">max_dirty_data_idx</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="57:5"><if pos:start="19:5" pos:end="57:5">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:10">mn</name> <operator pos:start="19:12" pos:end="19:13">&lt;=</operator> <name pos:start="19:15" pos:end="19:16">mx</name></expr>)</condition> <block pos:start="19:19" pos:end="57:5">{<block_content pos:start="23:9" pos:end="55:15">

        <comment type="block" pos:start="21:9" pos:end="21:47">/* we need to update the vdi object. */</comment>

        <expr_stmt pos:start="23:9" pos:end="25:49"><expr pos:start="23:9" pos:end="25:48"><name pos:start="23:9" pos:end="23:14">offset</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <sizeof pos:start="23:18" pos:end="23:33">sizeof<argument_list pos:start="23:24" pos:end="23:33">(<argument pos:start="23:25" pos:end="23:32"><expr pos:start="23:25" pos:end="23:32"><name pos:start="23:25" pos:end="23:32"><name pos:start="23:25" pos:end="23:25">s</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:32">inode</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:35" pos:end="23:35">-</operator> <sizeof pos:start="23:37" pos:end="23:64">sizeof<argument_list pos:start="23:43" pos:end="23:64">(<argument pos:start="23:44" pos:end="23:63"><expr pos:start="23:44" pos:end="23:63"><name pos:start="23:44" pos:end="23:63"><name pos:start="23:44" pos:end="23:44">s</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:51">inode</name><operator pos:start="23:52" pos:end="23:52">.</operator><name pos:start="23:53" pos:end="23:63">data_vdi_id</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:66" pos:end="23:66">+</operator>

            <name pos:start="25:13" pos:end="25:14">mn</name> <operator pos:start="25:16" pos:end="25:16">*</operator> <sizeof pos:start="25:18" pos:end="25:48">sizeof<argument_list pos:start="25:24" pos:end="25:48">(<argument pos:start="25:25" pos:end="25:47"><expr pos:start="25:25" pos:end="25:47"><name pos:start="25:25" pos:end="25:47"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:32">inode</name><operator pos:start="25:33" pos:end="25:33">.</operator><name pos:start="25:34" pos:end="25:44">data_vdi_id</name><index pos:start="25:45" pos:end="25:47">[<expr pos:start="25:46" pos:end="25:46"><literal type="number" pos:start="25:46" pos:end="25:46">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:67"><expr pos:start="27:9" pos:end="27:66"><name pos:start="27:9" pos:end="27:16">data_len</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <operator pos:start="27:20" pos:end="27:20">(</operator><name pos:start="27:21" pos:end="27:22">mx</name> <operator pos:start="27:24" pos:end="27:24">-</operator> <name pos:start="27:26" pos:end="27:27">mn</name> <operator pos:start="27:29" pos:end="27:29">+</operator> <literal type="number" pos:start="27:31" pos:end="27:31">1</literal><operator pos:start="27:32" pos:end="27:32">)</operator> <operator pos:start="27:34" pos:end="27:34">*</operator> <sizeof pos:start="27:36" pos:end="27:66">sizeof<argument_list pos:start="27:42" pos:end="27:66">(<argument pos:start="27:43" pos:end="27:65"><expr pos:start="27:43" pos:end="27:65"><name pos:start="27:43" pos:end="27:65"><name pos:start="27:43" pos:end="27:43">s</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:50">inode</name><operator pos:start="27:51" pos:end="27:51">.</operator><name pos:start="27:52" pos:end="27:62">data_vdi_id</name><index pos:start="27:63" pos:end="27:65">[<expr pos:start="27:64" pos:end="27:64"><literal type="number" pos:start="27:64" pos:end="27:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:43"><expr pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:29">min_dirty_data_idx</name></name> <operator pos:start="31:31" pos:end="31:31">=</operator> <name pos:start="31:33" pos:end="31:42">UINT32_MAX</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:29">max_dirty_data_idx</name></name> <operator pos:start="33:31" pos:end="33:31">=</operator> <literal type="number" pos:start="33:33" pos:end="33:33">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:33"><expr pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:11">iov</name><operator pos:start="37:12" pos:end="37:12">.</operator><name pos:start="37:13" pos:end="37:20">iov_base</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <operator pos:start="37:24" pos:end="37:24">&amp;</operator><name pos:start="37:25" pos:end="37:32"><name pos:start="37:25" pos:end="37:25">s</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:32">inode</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:39"><expr pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:11">iov</name><operator pos:start="39:12" pos:end="39:12">.</operator><name pos:start="39:13" pos:end="39:19">iov_len</name></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <sizeof pos:start="39:23" pos:end="39:38">sizeof<argument_list pos:start="39:29" pos:end="39:38">(<argument pos:start="39:30" pos:end="39:37"><expr pos:start="39:30" pos:end="39:37"><name pos:start="39:30" pos:end="39:37"><name pos:start="39:30" pos:end="39:30">s</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:37">inode</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="43:64"><expr pos:start="41:9" pos:end="43:63"><name pos:start="41:9" pos:end="41:15">aio_req</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="43:63"><name pos:start="41:19" pos:end="41:31">alloc_aio_req</name><argument_list pos:start="41:32" pos:end="43:63">(<argument pos:start="41:33" pos:end="41:33"><expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">s</name></expr></argument>, <argument pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><name pos:start="41:36" pos:end="41:38">acb</name></expr></argument>, <argument pos:start="41:41" pos:end="41:71"><expr pos:start="41:41" pos:end="41:71"><call pos:start="41:41" pos:end="41:71"><name pos:start="41:41" pos:end="41:54">vid_to_vdi_oid</name><argument_list pos:start="41:55" pos:end="41:71">(<argument pos:start="41:56" pos:end="41:70"><expr pos:start="41:56" pos:end="41:70"><name pos:start="41:56" pos:end="41:70"><name pos:start="41:56" pos:end="41:56">s</name><operator pos:start="41:57" pos:end="41:58">-&gt;</operator><name pos:start="41:59" pos:end="41:63">inode</name><operator pos:start="41:64" pos:end="41:64">.</operator><name pos:start="41:65" pos:end="41:70">vdi_id</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="43:33" pos:end="43:40"><expr pos:start="43:33" pos:end="43:40"><name pos:start="43:33" pos:end="43:40">data_len</name></expr></argument>, <argument pos:start="43:43" pos:end="43:48"><expr pos:start="43:43" pos:end="43:48"><name pos:start="43:43" pos:end="43:48">offset</name></expr></argument>, <argument pos:start="43:51" pos:end="43:51"><expr pos:start="43:51" pos:end="43:51"><literal type="number" pos:start="43:51" pos:end="43:51">0</literal></expr></argument>, <argument pos:start="43:54" pos:end="43:54"><expr pos:start="43:54" pos:end="43:54"><literal type="number" pos:start="43:54" pos:end="43:54">0</literal></expr></argument>, <argument pos:start="43:57" pos:end="43:62"><expr pos:start="43:57" pos:end="43:62"><name pos:start="43:57" pos:end="43:62">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:72"><expr pos:start="45:9" pos:end="45:71"><call pos:start="45:9" pos:end="45:71"><name pos:start="45:9" pos:end="45:25">QLIST_INSERT_HEAD</name><argument_list pos:start="45:26" pos:end="45:71">(<argument pos:start="45:27" pos:end="45:47"><expr pos:start="45:27" pos:end="45:47"><operator pos:start="45:27" pos:end="45:27">&amp;</operator><name pos:start="45:28" pos:end="45:47"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:47">inflight_aio_head</name></name></expr></argument>, <argument pos:start="45:50" pos:end="45:56"><expr pos:start="45:50" pos:end="45:56"><name pos:start="45:50" pos:end="45:56">aio_req</name></expr></argument>, <argument pos:start="45:59" pos:end="45:70"><expr pos:start="45:59" pos:end="45:70"><name pos:start="45:59" pos:end="45:70">aio_siblings</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:71"><expr pos:start="47:9" pos:end="47:70"><call pos:start="47:9" pos:end="47:70"><name pos:start="47:9" pos:end="47:23">add_aio_request</name><argument_list pos:start="47:24" pos:end="47:70">(<argument pos:start="47:25" pos:end="47:25"><expr pos:start="47:25" pos:end="47:25"><name pos:start="47:25" pos:end="47:25">s</name></expr></argument>, <argument pos:start="47:28" pos:end="47:34"><expr pos:start="47:28" pos:end="47:34"><name pos:start="47:28" pos:end="47:34">aio_req</name></expr></argument>, <argument pos:start="47:37" pos:end="47:40"><expr pos:start="47:37" pos:end="47:40"><operator pos:start="47:37" pos:end="47:37">&amp;</operator><name pos:start="47:38" pos:end="47:40">iov</name></expr></argument>, <argument pos:start="47:43" pos:end="47:43"><expr pos:start="47:43" pos:end="47:43"><literal type="number" pos:start="47:43" pos:end="47:43">1</literal></expr></argument>, <argument pos:start="47:46" pos:end="47:50"><expr pos:start="47:46" pos:end="47:50"><name pos:start="47:46" pos:end="47:50">false</name></expr></argument>, <argument pos:start="47:53" pos:end="47:69"><expr pos:start="47:53" pos:end="47:69"><name pos:start="47:53" pos:end="47:69">AIOCB_WRITE_UDATA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:45"><expr pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:11">acb</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:26">aio_done_func</name></name> <operator pos:start="51:28" pos:end="51:28">=</operator> <name pos:start="51:30" pos:end="51:44">sd_finish_aiocb</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:44"><expr pos:start="53:9" pos:end="53:43"><name pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:11">acb</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:23">aiocb_type</name></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:43">AIOCB_WRITE_UDATA</name></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:25"><expr pos:start="61:5" pos:end="61:24"><call pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:19">sd_finish_aiocb</name><argument_list pos:start="61:20" pos:end="61:24">(<argument pos:start="61:21" pos:end="61:23"><expr pos:start="61:21" pos:end="61:23"><name pos:start="61:21" pos:end="61:23">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
