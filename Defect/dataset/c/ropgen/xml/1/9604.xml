<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9604.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">mpeg_mux_end</name><parameter_list pos:start="1:24" pos:end="1:45">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegMuxContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:38">= <expr pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:27">ctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">StreamInfo</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:22">stream</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:27">/* flush each packet */</comment>

    <for pos:start="15:5" pos:end="25:5">for<control pos:start="15:8" pos:end="15:34">(<init pos:start="15:9" pos:end="15:12"><expr pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:9">i</name><operator pos:start="15:10" pos:end="15:10">=</operator><literal type="number" pos:start="15:11" pos:end="15:11">0</literal></expr>;</init><condition pos:start="15:13" pos:end="15:30"><expr pos:start="15:13" pos:end="15:29"><name pos:start="15:13" pos:end="15:13">i</name><operator pos:start="15:14" pos:end="15:14">&lt;</operator><name pos:start="15:15" pos:end="15:29"><name pos:start="15:15" pos:end="15:17">ctx</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:29">nb_streams</name></name></expr>;</condition><incr pos:start="15:31" pos:end="15:33"><expr pos:start="15:31" pos:end="15:33"><name pos:start="15:31" pos:end="15:31">i</name><operator pos:start="15:32" pos:end="15:33">++</operator></expr></incr>)</control> <block pos:start="15:36" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:9">

        <expr_stmt pos:start="17:9" pos:end="17:44"><expr pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:14">stream</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:32"><name pos:start="17:18" pos:end="17:20">ctx</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:29">streams</name><index pos:start="17:30" pos:end="17:32">[<expr pos:start="17:31" pos:end="17:31"><name pos:start="17:31" pos:end="17:31">i</name></expr>]</index></name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:43">priv_data</name></expr>;</expr_stmt>

        <while pos:start="19:9" pos:end="23:9">while <condition pos:start="19:15" pos:end="19:38">(<expr pos:start="19:16" pos:end="19:37"><name pos:start="19:16" pos:end="19:33"><name pos:start="19:16" pos:end="19:21">stream</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:33">buffer_ptr</name></name> <operator pos:start="19:35" pos:end="19:35">&gt;</operator> <literal type="number" pos:start="19:37" pos:end="19:37">0</literal></expr>)</condition> <block pos:start="19:40" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:78">

            <expr_stmt pos:start="21:13" pos:end="21:78"><expr pos:start="21:13" pos:end="21:77"><call pos:start="21:13" pos:end="21:77"><name pos:start="21:13" pos:end="21:24">flush_packet</name><argument_list pos:start="21:25" pos:end="21:77">(<argument pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:28">ctx</name></expr></argument>, <argument pos:start="21:31" pos:end="21:31"><expr pos:start="21:31" pos:end="21:31"><name pos:start="21:31" pos:end="21:31">i</name></expr></argument>, <argument pos:start="21:34" pos:end="21:47"><expr pos:start="21:34" pos:end="21:47"><name pos:start="21:34" pos:end="21:47">AV_NOPTS_VALUE</name></expr></argument>, <argument pos:start="21:50" pos:end="21:63"><expr pos:start="21:50" pos:end="21:63"><name pos:start="21:50" pos:end="21:63">AV_NOPTS_VALUE</name></expr></argument>, <argument pos:start="21:66" pos:end="21:76"><expr pos:start="21:66" pos:end="21:76"><name pos:start="21:66" pos:end="21:76"><name pos:start="21:66" pos:end="21:66">s</name><operator pos:start="21:67" pos:end="21:68">-&gt;</operator><name pos:start="21:69" pos:end="21:76">last_scr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></for>



    <comment type="block" pos:start="29:5" pos:end="33:48">/* End header according to MPEG1 systems standard. We do not write

       it as it is usually not needed by decoders and because it

       complicates MPEG stream concatenation. */</comment>

    <comment type="line" pos:start="35:5" pos:end="35:45">//put_be32(&amp;ctx-&gt;pb, ISO_11172_END_CODE);</comment>

    <comment type="line" pos:start="37:5" pos:end="37:33">//put_flush_packet(&amp;ctx-&gt;pb);</comment>



    <for pos:start="41:5" pos:end="43:46">for<control pos:start="41:8" pos:end="41:34">(<init pos:start="41:9" pos:end="41:12"><expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:9">i</name><operator pos:start="41:10" pos:end="41:10">=</operator><literal type="number" pos:start="41:11" pos:end="41:11">0</literal></expr>;</init><condition pos:start="41:13" pos:end="41:30"><expr pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:13">i</name><operator pos:start="41:14" pos:end="41:14">&lt;</operator><name pos:start="41:15" pos:end="41:29"><name pos:start="41:15" pos:end="41:17">ctx</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:29">nb_streams</name></name></expr>;</condition><incr pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><name pos:start="41:31" pos:end="41:31">i</name><operator pos:start="41:32" pos:end="41:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="43:9" pos:end="43:46"><block_content pos:start="43:9" pos:end="43:46">

        <expr_stmt pos:start="43:9" pos:end="43:46"><expr pos:start="43:9" pos:end="43:45"><call pos:start="43:9" pos:end="43:45"><name pos:start="43:9" pos:end="43:16">av_freep</name><argument_list pos:start="43:17" pos:end="43:45">(<argument pos:start="43:18" pos:end="43:44"><expr pos:start="43:18" pos:end="43:44"><operator pos:start="43:18" pos:end="43:18">&amp;</operator><name pos:start="43:19" pos:end="43:33"><name pos:start="43:19" pos:end="43:21">ctx</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:30">streams</name><index pos:start="43:31" pos:end="43:33">[<expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">i</name></expr>]</index></name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:44">priv_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
