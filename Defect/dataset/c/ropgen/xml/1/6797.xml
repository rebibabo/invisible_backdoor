<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6797.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint32_t</name></type> <name pos:start="1:10" pos:end="1:19">nand_getio</name><parameter_list pos:start="1:20" pos:end="1:37">(<parameter pos:start="1:21" pos:end="1:36"><decl pos:start="1:21" pos:end="1:36"><type pos:start="1:21" pos:end="1:33"><name pos:start="1:21" pos:end="1:31">DeviceState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:14">x</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">NANDFlashState</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:46">= <expr pos:start="9:25" pos:end="9:46"><operator pos:start="9:25" pos:end="9:25">(</operator><name pos:start="9:26" pos:end="9:39">NANDFlashState</name> <operator pos:start="9:41" pos:end="9:41">*</operator><operator pos:start="9:42" pos:end="9:42">)</operator> <name pos:start="9:44" pos:end="9:46">dev</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:34">/* Allow sequential reading */</comment>

    <if_stmt pos:start="15:5" pos:end="33:5"><if pos:start="15:5" pos:end="33:5">if <condition pos:start="15:8" pos:end="15:46">(<expr pos:start="15:9" pos:end="15:45"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:17"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:17">iolen</name></name> <operator pos:start="15:19" pos:end="15:20">&amp;&amp;</operator> <name pos:start="15:22" pos:end="15:27"><name pos:start="15:22" pos:end="15:22">s</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:27">cmd</name></name> <operator pos:start="15:29" pos:end="15:30">==</operator> <name pos:start="15:32" pos:end="15:45">NAND_CMD_READ0</name></expr>)</condition> <block pos:start="15:48" pos:end="33:5">{<block_content pos:start="17:9" pos:end="31:75">

        <expr_stmt pos:start="17:9" pos:end="17:74"><expr pos:start="17:9" pos:end="17:73"><name pos:start="17:9" pos:end="17:14">offset</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <operator pos:start="17:18" pos:end="17:18">(</operator><name pos:start="17:19" pos:end="17:21">int</name><operator pos:start="17:22" pos:end="17:22">)</operator> <operator pos:start="17:24" pos:end="17:24">(</operator><name pos:start="17:25" pos:end="17:31"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:31">addr</name></name> <operator pos:start="17:33" pos:end="17:33">&amp;</operator> <operator pos:start="17:35" pos:end="17:35">(</operator><operator pos:start="17:36" pos:end="17:36">(</operator><literal type="number" pos:start="17:37" pos:end="17:37">1</literal> <operator pos:start="17:39" pos:end="17:40">&lt;&lt;</operator> <name pos:start="17:42" pos:end="17:54"><name pos:start="17:42" pos:end="17:42">s</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:54">addr_shift</name></name><operator pos:start="17:55" pos:end="17:55">)</operator> <operator pos:start="17:57" pos:end="17:57">-</operator> <literal type="number" pos:start="17:59" pos:end="17:59">1</literal><operator pos:start="17:60" pos:end="17:60">)</operator><operator pos:start="17:61" pos:end="17:61">)</operator> <operator pos:start="17:63" pos:end="17:63">+</operator> <name pos:start="17:65" pos:end="17:73"><name pos:start="17:65" pos:end="17:65">s</name><operator pos:start="17:66" pos:end="17:67">-&gt;</operator><name pos:start="17:68" pos:end="17:73">offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:22"><expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:17">offset</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><call pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:19">blk_load</name></name><argument_list pos:start="23:20" pos:end="23:39">(<argument pos:start="23:21" pos:end="23:21"><expr pos:start="23:21" pos:end="23:21"><name pos:start="23:21" pos:end="23:21">s</name></expr></argument>, <argument pos:start="23:24" pos:end="23:30"><expr pos:start="23:24" pos:end="23:30"><name pos:start="23:24" pos:end="23:30"><name pos:start="23:24" pos:end="23:24">s</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:30">addr</name></name></expr></argument>, <argument pos:start="23:33" pos:end="23:38"><expr pos:start="23:33" pos:end="23:38"><name pos:start="23:33" pos:end="23:38">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="31:75"><if pos:start="25:9" pos:end="27:53">if <condition pos:start="25:12" pos:end="25:19">(<expr pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:18">gnd</name></name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:53"><block_content pos:start="27:13" pos:end="27:53">

            <expr_stmt pos:start="27:13" pos:end="27:53"><expr pos:start="27:13" pos:end="27:52"><name pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:20">iolen</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <operator pos:start="27:24" pos:end="27:24">(</operator><literal type="number" pos:start="27:25" pos:end="27:25">1</literal> <operator pos:start="27:27" pos:end="27:28">&lt;&lt;</operator> <name pos:start="27:30" pos:end="27:42"><name pos:start="27:30" pos:end="27:30">s</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:42">page_shift</name></name><operator pos:start="27:43" pos:end="27:43">)</operator> <operator pos:start="27:45" pos:end="27:45">-</operator> <name pos:start="27:47" pos:end="27:52">offset</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="29:9" pos:end="31:75">else<block type="pseudo" pos:start="31:13" pos:end="31:75"><block_content pos:start="31:13" pos:end="31:75">

            <expr_stmt pos:start="31:13" pos:end="31:75"><expr pos:start="31:13" pos:end="31:74"><name pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:20">iolen</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <operator pos:start="31:24" pos:end="31:24">(</operator><literal type="number" pos:start="31:25" pos:end="31:25">1</literal> <operator pos:start="31:27" pos:end="31:28">&lt;&lt;</operator> <name pos:start="31:30" pos:end="31:42"><name pos:start="31:30" pos:end="31:30">s</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:42">page_shift</name></name><operator pos:start="31:43" pos:end="31:43">)</operator> <operator pos:start="31:45" pos:end="31:45">+</operator> <operator pos:start="31:47" pos:end="31:47">(</operator><literal type="number" pos:start="31:48" pos:end="31:48">1</literal> <operator pos:start="31:50" pos:end="31:51">&lt;&lt;</operator> <name pos:start="31:53" pos:end="31:64"><name pos:start="31:53" pos:end="31:53">s</name><operator pos:start="31:54" pos:end="31:55">-&gt;</operator><name pos:start="31:56" pos:end="31:64">oob_shift</name></name><operator pos:start="31:65" pos:end="31:65">)</operator> <operator pos:start="31:67" pos:end="31:67">-</operator> <name pos:start="31:69" pos:end="31:74">offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="39:17"><if pos:start="37:5" pos:end="39:17">if <condition pos:start="37:8" pos:end="37:31">(<expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:13">ce</name></name> <operator pos:start="37:15" pos:end="37:16">||</operator> <name pos:start="37:18" pos:end="37:25"><name pos:start="37:18" pos:end="37:18">s</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:25">iolen</name></name> <operator pos:start="37:27" pos:end="37:28">&lt;=</operator> <literal type="number" pos:start="37:30" pos:end="37:30">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:17"><block_content pos:start="39:9" pos:end="39:17">

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="43:5" pos:end="47:5">for <control pos:start="43:9" pos:end="43:41">(<init pos:start="43:10" pos:end="43:30"><expr pos:start="43:10" pos:end="43:29"><name pos:start="43:10" pos:end="43:15">offset</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:29"><name pos:start="43:19" pos:end="43:19">s</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:29">buswidth</name></name></expr>;</init> <condition pos:start="43:32" pos:end="43:40"><expr pos:start="43:32" pos:end="43:39"><name pos:start="43:32" pos:end="43:37">offset</name><operator pos:start="43:38" pos:end="43:39">--</operator></expr>;</condition><incr/>)</control> <block pos:start="43:43" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:48">

        <expr_stmt pos:start="45:9" pos:end="45:48"><expr pos:start="45:9" pos:end="45:47"><name pos:start="45:9" pos:end="45:9">x</name> <operator pos:start="45:11" pos:end="45:12">|=</operator> <name pos:start="45:14" pos:end="45:30"><name pos:start="45:14" pos:end="45:14">s</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:22">ioaddr</name><index pos:start="45:23" pos:end="45:30">[<expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">offset</name></expr>]</index></name> <operator pos:start="45:32" pos:end="45:33">&lt;&lt;</operator> <operator pos:start="45:35" pos:end="45:35">(</operator><name pos:start="45:36" pos:end="45:41">offset</name> <operator pos:start="45:43" pos:end="45:44">&lt;&lt;</operator> <literal type="number" pos:start="45:46" pos:end="45:46">3</literal><operator pos:start="45:47" pos:end="45:47">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="49:5" pos:end="53:7">/* after receiving READ STATUS command all subsequent reads will

     * return the status register value until another command is issued

     */</comment>

    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:38">(<expr pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:14"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:14">cmd</name></name> <operator pos:start="55:16" pos:end="55:17">!=</operator> <name pos:start="55:19" pos:end="55:37">NAND_CMD_READSTATUS</name></expr>)</condition> <block pos:start="55:40" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:33">

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:15">addr</name></name>   <operator pos:start="57:19" pos:end="57:20">+=</operator> <name pos:start="57:22" pos:end="57:32"><name pos:start="57:22" pos:end="57:22">s</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:32">buswidth</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:33"><expr pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:17">ioaddr</name></name> <operator pos:start="59:19" pos:end="59:20">+=</operator> <name pos:start="59:22" pos:end="59:32"><name pos:start="59:22" pos:end="59:22">s</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:32">buswidth</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:33"><expr pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:16">iolen</name></name>  <operator pos:start="61:19" pos:end="61:20">-=</operator> <name pos:start="61:22" pos:end="61:32"><name pos:start="61:22" pos:end="61:22">s</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:32">buswidth</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><name pos:start="65:12" pos:end="65:12">x</name></expr>;</return>

</block_content>}</block></function>
</unit>
