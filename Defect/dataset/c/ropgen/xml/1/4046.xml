<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4046.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">mv_read_header</name><parameter_list pos:start="1:26" pos:end="1:49">(<parameter pos:start="1:27" pos:end="1:48"><decl pos:start="1:27" pos:end="1:48"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="241:1">{<block_content pos:start="5:5" pos:end="239:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">MvContext</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">mv</name> <init pos:start="5:19" pos:end="5:36">= <expr pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:25">avctx</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:31">= <expr pos:start="7:23" pos:end="7:31"><name pos:start="7:23" pos:end="7:31"><name pos:start="7:23" pos:end="7:27">avctx</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:31">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">ast</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">NULL</name></expr></init></decl>, <decl pos:start="9:27" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:14"><modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:30">vst</name> <init pos:start="9:32" pos:end="9:37">= <expr pos:start="9:34" pos:end="9:37"><name pos:start="9:34" pos:end="9:37">NULL</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="9:40" pos:end="9:75">//initialization to suppress warning</comment>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">version</name></decl>, <decl pos:start="11:18" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:18">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><call pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:13">avio_skip</name><argument_list pos:start="15:14" pos:end="15:20">(<argument pos:start="15:15" pos:end="15:16"><expr pos:start="15:15" pos:end="15:16"><name pos:start="15:15" pos:end="15:16">pb</name></expr></argument>, <argument pos:start="15:19" pos:end="15:19"><expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:11">version</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:27"><name pos:start="19:15" pos:end="19:23">avio_rb16</name><argument_list pos:start="19:24" pos:end="19:27">(<argument pos:start="19:25" pos:end="19:26"><expr pos:start="19:25" pos:end="19:26"><name pos:start="19:25" pos:end="19:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="235:5"><if pos:start="21:5" pos:end="147:5">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:15">version</name> <operator pos:start="21:17" pos:end="21:18">==</operator> <literal type="number" pos:start="21:20" pos:end="21:20">2</literal></expr>)</condition> <block pos:start="21:23" pos:end="147:5">{<block_content pos:start="23:9" pos:end="145:9">

        <decl_stmt pos:start="23:9" pos:end="23:27"><decl pos:start="23:9" pos:end="23:26"><type pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16">uint64_t</name></type> <name pos:start="23:18" pos:end="23:26">timestamp</name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:14"><decl pos:start="25:9" pos:end="25:13"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">v</name></decl>;</decl_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:26"><expr pos:start="27:9" pos:end="27:25"><call pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:17">avio_skip</name><argument_list pos:start="27:18" pos:end="27:25">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">pb</name></expr></argument>, <argument pos:start="27:23" pos:end="27:24"><expr pos:start="27:23" pos:end="27:24"><literal type="number" pos:start="27:23" pos:end="27:24">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="31:9" pos:end="33:74">/* allocate audio track first to prevent unnecessary seeking

           (audio packet always precede video packet for a given frame) */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:47"><expr pos:start="35:9" pos:end="35:46"><name pos:start="35:9" pos:end="35:11">ast</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:46"><name pos:start="35:15" pos:end="35:33">avformat_new_stream</name><argument_list pos:start="35:34" pos:end="35:46">(<argument pos:start="35:35" pos:end="35:39"><expr pos:start="35:35" pos:end="35:39"><name pos:start="35:35" pos:end="35:39">avctx</name></expr></argument>, <argument pos:start="35:42" pos:end="35:45"><expr pos:start="35:42" pos:end="35:45"><name pos:start="35:42" pos:end="35:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="39:35"><if pos:start="37:9" pos:end="39:35">if <condition pos:start="37:12" pos:end="37:17">(<expr pos:start="37:13" pos:end="37:16"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:16">ast</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:35"><block_content pos:start="39:13" pos:end="39:35">

            <return pos:start="39:13" pos:end="39:35">return <expr pos:start="39:20" pos:end="39:34"><call pos:start="39:20" pos:end="39:34"><name pos:start="39:20" pos:end="39:26">AVERROR</name><argument_list pos:start="39:27" pos:end="39:34">(<argument pos:start="39:28" pos:end="39:33"><expr pos:start="39:28" pos:end="39:33"><name pos:start="39:28" pos:end="39:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:47"><expr pos:start="43:9" pos:end="43:46"><name pos:start="43:9" pos:end="43:11">vst</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:46"><name pos:start="43:15" pos:end="43:33">avformat_new_stream</name><argument_list pos:start="43:34" pos:end="43:46">(<argument pos:start="43:35" pos:end="43:39"><expr pos:start="43:35" pos:end="43:39"><name pos:start="43:35" pos:end="43:39">avctx</name></expr></argument>, <argument pos:start="43:42" pos:end="43:45"><expr pos:start="43:42" pos:end="43:45"><name pos:start="43:42" pos:end="43:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:35"><if pos:start="45:9" pos:end="47:35">if <condition pos:start="45:12" pos:end="45:17">(<expr pos:start="45:13" pos:end="45:16"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:16">vst</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:35"><block_content pos:start="47:13" pos:end="47:35">

            <return pos:start="47:13" pos:end="47:35">return <expr pos:start="47:20" pos:end="47:34"><call pos:start="47:20" pos:end="47:34"><name pos:start="47:20" pos:end="47:26">AVERROR</name><argument_list pos:start="47:27" pos:end="47:34">(<argument pos:start="47:28" pos:end="47:33"><expr pos:start="47:28" pos:end="47:33"><name pos:start="47:28" pos:end="47:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:52"><expr pos:start="49:9" pos:end="49:51"><name pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:11">vst</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:18">codec</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:30">codec_type</name></name> <operator pos:start="49:32" pos:end="49:32">=</operator> <name pos:start="49:34" pos:end="49:51">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:45"><expr pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:11">vst</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:22">time_base</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <operator pos:start="51:26" pos:end="51:26">(</operator><name pos:start="51:27" pos:end="51:36">AVRational</name><operator pos:start="51:37" pos:end="51:37">)</operator><block pos:start="51:38" pos:end="51:44">{<expr pos:start="51:39" pos:end="51:39"><literal type="number" pos:start="51:39" pos:end="51:39">1</literal></expr>, <expr pos:start="51:42" pos:end="51:43"><literal type="number" pos:start="51:42" pos:end="51:43">15</literal></expr>}</block></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:39"><expr pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:11">vst</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:22">nb_frames</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <call pos:start="53:26" pos:end="53:38"><name pos:start="53:26" pos:end="53:34">avio_rb32</name><argument_list pos:start="53:35" pos:end="53:38">(<argument pos:start="53:36" pos:end="53:37"><expr pos:start="53:36" pos:end="53:37"><name pos:start="53:36" pos:end="53:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:26"><expr pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:9">v</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <call pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:21">avio_rb32</name><argument_list pos:start="55:22" pos:end="55:25">(<argument pos:start="55:23" pos:end="55:24"><expr pos:start="55:23" pos:end="55:24"><name pos:start="55:23" pos:end="55:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="57:9" pos:end="79:9">switch <condition pos:start="57:16" pos:end="57:18">(<expr pos:start="57:17" pos:end="57:17"><name pos:start="57:17" pos:end="57:17">v</name></expr>)</condition> <block pos:start="57:20" pos:end="79:9">{<block_content pos:start="59:9" pos:end="77:18">

        <case pos:start="59:9" pos:end="59:15">case <expr pos:start="59:14" pos:end="59:14"><literal type="number" pos:start="59:14" pos:end="59:14">1</literal></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:52"><expr pos:start="61:13" pos:end="61:51"><name pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:15">vst</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:22">codec</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:32">codec_id</name></name> <operator pos:start="61:34" pos:end="61:34">=</operator> <name pos:start="61:36" pos:end="61:51">AV_CODEC_ID_MVC1</name></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:15">case <expr pos:start="65:14" pos:end="65:14"><literal type="number" pos:start="65:14" pos:end="65:14">2</literal></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="67:51"><expr pos:start="67:13" pos:end="67:50"><name pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:15">vst</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:22">codec</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:31">pix_fmt</name></name>  <operator pos:start="67:34" pos:end="67:34">=</operator> <name pos:start="67:36" pos:end="67:50">AV_PIX_FMT_ARGB</name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:56"><expr pos:start="69:13" pos:end="69:55"><name pos:start="69:13" pos:end="69:32"><name pos:start="69:13" pos:end="69:15">vst</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:22">codec</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:32">codec_id</name></name> <operator pos:start="69:34" pos:end="69:34">=</operator> <name pos:start="69:36" pos:end="69:55">AV_CODEC_ID_RAWVIDEO</name></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        <default pos:start="73:9" pos:end="73:16">default:</default>

            <expr_stmt pos:start="75:13" pos:end="75:78"><expr pos:start="75:13" pos:end="75:77"><call pos:start="75:13" pos:end="75:77"><name pos:start="75:13" pos:end="75:33">av_log_ask_for_sample</name><argument_list pos:start="75:34" pos:end="75:77">(<argument pos:start="75:35" pos:end="75:39"><expr pos:start="75:35" pos:end="75:39"><name pos:start="75:35" pos:end="75:39">avctx</name></expr></argument>, <argument pos:start="75:42" pos:end="75:73"><expr pos:start="75:42" pos:end="75:73"><literal type="string" pos:start="75:42" pos:end="75:73">"unknown video compression %i\n"</literal></expr></argument>, <argument pos:start="75:76" pos:end="75:76"><expr pos:start="75:76" pos:end="75:76"><name pos:start="75:76" pos:end="75:76">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="81:9" pos:end="81:34"><expr pos:start="81:9" pos:end="81:33"><name pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:11">vst</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:18">codec</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:29">codec_tag</name></name> <operator pos:start="81:31" pos:end="81:31">=</operator> <literal type="number" pos:start="81:33" pos:end="81:33">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:46"><expr pos:start="83:9" pos:end="83:45"><name pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:11">vst</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:18">codec</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:25">width</name></name>     <operator pos:start="83:31" pos:end="83:31">=</operator> <call pos:start="83:33" pos:end="83:45"><name pos:start="83:33" pos:end="83:41">avio_rb32</name><argument_list pos:start="83:42" pos:end="83:45">(<argument pos:start="83:43" pos:end="83:44"><expr pos:start="83:43" pos:end="83:44"><name pos:start="83:43" pos:end="83:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:46"><expr pos:start="85:9" pos:end="85:45"><name pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:11">vst</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:18">codec</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:26">height</name></name>    <operator pos:start="85:31" pos:end="85:31">=</operator> <call pos:start="85:33" pos:end="85:45"><name pos:start="85:33" pos:end="85:41">avio_rb32</name><argument_list pos:start="85:42" pos:end="85:45">(<argument pos:start="85:43" pos:end="85:44"><expr pos:start="85:43" pos:end="85:44"><name pos:start="85:43" pos:end="85:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:26"><expr pos:start="87:9" pos:end="87:25"><call pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:17">avio_skip</name><argument_list pos:start="87:18" pos:end="87:25">(<argument pos:start="87:19" pos:end="87:20"><expr pos:start="87:19" pos:end="87:20"><name pos:start="87:19" pos:end="87:20">pb</name></expr></argument>, <argument pos:start="87:23" pos:end="87:24"><expr pos:start="87:23" pos:end="87:24"><literal type="number" pos:start="87:23" pos:end="87:24">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:56"><expr pos:start="91:9" pos:end="91:55"><name pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:11">ast</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:18">codec</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:30">codec_type</name></name>     <operator pos:start="91:36" pos:end="91:36">=</operator> <name pos:start="91:38" pos:end="91:55">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:52"><expr pos:start="93:9" pos:end="93:51"><name pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:11">ast</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:22">nb_frames</name></name>             <operator pos:start="93:36" pos:end="93:36">=</operator> <name pos:start="93:38" pos:end="93:51"><name pos:start="93:38" pos:end="93:40">vst</name><operator pos:start="93:41" pos:end="93:42">-&gt;</operator><name pos:start="93:43" pos:end="93:51">nb_frames</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:51"><expr pos:start="95:9" pos:end="95:50"><name pos:start="95:9" pos:end="95:31"><name pos:start="95:9" pos:end="95:11">ast</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:18">codec</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:31">sample_rate</name></name>    <operator pos:start="95:36" pos:end="95:36">=</operator> <call pos:start="95:38" pos:end="95:50"><name pos:start="95:38" pos:end="95:46">avio_rb32</name><argument_list pos:start="95:47" pos:end="95:50">(<argument pos:start="95:48" pos:end="95:49"><expr pos:start="95:48" pos:end="95:49"><name pos:start="95:48" pos:end="95:49">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:65"><expr pos:start="97:9" pos:end="97:64"><call pos:start="97:9" pos:end="97:64"><name pos:start="97:9" pos:end="97:27">avpriv_set_pts_info</name><argument_list pos:start="97:28" pos:end="97:64">(<argument pos:start="97:29" pos:end="97:31"><expr pos:start="97:29" pos:end="97:31"><name pos:start="97:29" pos:end="97:31">ast</name></expr></argument>, <argument pos:start="97:34" pos:end="97:35"><expr pos:start="97:34" pos:end="97:35"><literal type="number" pos:start="97:34" pos:end="97:35">33</literal></expr></argument>, <argument pos:start="97:38" pos:end="97:38"><expr pos:start="97:38" pos:end="97:38"><literal type="number" pos:start="97:38" pos:end="97:38">1</literal></expr></argument>, <argument pos:start="97:41" pos:end="97:63"><expr pos:start="97:41" pos:end="97:63"><name pos:start="97:41" pos:end="97:63"><name pos:start="97:41" pos:end="97:43">ast</name><operator pos:start="97:44" pos:end="97:45">-&gt;</operator><name pos:start="97:46" pos:end="97:50">codec</name><operator pos:start="97:51" pos:end="97:52">-&gt;</operator><name pos:start="97:53" pos:end="97:63">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:51"><expr pos:start="99:9" pos:end="99:50"><name pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:11">ast</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:18">codec</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:28">channels</name></name>       <operator pos:start="99:36" pos:end="99:36">=</operator> <call pos:start="99:38" pos:end="99:50"><name pos:start="99:38" pos:end="99:46">avio_rb32</name><argument_list pos:start="99:47" pos:end="99:50">(<argument pos:start="99:48" pos:end="99:49"><expr pos:start="99:48" pos:end="99:49"><name pos:start="99:48" pos:end="99:49">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:107"><expr pos:start="101:9" pos:end="101:106"><name pos:start="101:9" pos:end="101:34"><name pos:start="101:9" pos:end="101:11">ast</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:18">codec</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:34">channel_layout</name></name> <operator pos:start="101:36" pos:end="101:36">=</operator> <ternary pos:start="101:38" pos:end="101:106"><condition pos:start="101:38" pos:end="101:66"><expr pos:start="101:38" pos:end="101:64"><operator pos:start="101:38" pos:end="101:38">(</operator><name pos:start="101:39" pos:end="101:58"><name pos:start="101:39" pos:end="101:41">ast</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:48">codec</name><operator pos:start="101:49" pos:end="101:50">-&gt;</operator><name pos:start="101:51" pos:end="101:58">channels</name></name> <operator pos:start="101:60" pos:end="101:61">==</operator> <literal type="number" pos:start="101:63" pos:end="101:63">1</literal><operator pos:start="101:64" pos:end="101:64">)</operator></expr> ?</condition><then pos:start="101:68" pos:end="101:84"> <expr pos:start="101:68" pos:end="101:84"><name pos:start="101:68" pos:end="101:84">AV_CH_LAYOUT_MONO</name></expr> </then><else pos:start="101:86" pos:end="101:106">: <expr pos:start="101:88" pos:end="101:106"><name pos:start="101:88" pos:end="101:106">AV_CH_LAYOUT_STEREO</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:26"><expr pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:9">v</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <call pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:21">avio_rb32</name><argument_list pos:start="103:22" pos:end="103:25">(<argument pos:start="103:23" pos:end="103:24"><expr pos:start="103:23" pos:end="103:24"><name pos:start="103:23" pos:end="103:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="113:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:37">(<expr pos:start="105:13" pos:end="105:36"><name pos:start="105:13" pos:end="105:13">v</name> <operator pos:start="105:15" pos:end="105:16">==</operator> <name pos:start="105:18" pos:end="105:36">AUDIO_FORMAT_SIGNED</name></expr>)</condition> <block pos:start="105:39" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:57">

            <expr_stmt pos:start="107:13" pos:end="107:57"><expr pos:start="107:13" pos:end="107:56"><name pos:start="107:13" pos:end="107:32"><name pos:start="107:13" pos:end="107:15">ast</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:22">codec</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:32">codec_id</name></name> <operator pos:start="107:34" pos:end="107:34">=</operator> <name pos:start="107:36" pos:end="107:56">AV_CODEC_ID_PCM_S16BE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="113:9">else <block pos:start="109:16" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:87">

            <expr_stmt pos:start="111:13" pos:end="111:87"><expr pos:start="111:13" pos:end="111:86"><call pos:start="111:13" pos:end="111:86"><name pos:start="111:13" pos:end="111:33">av_log_ask_for_sample</name><argument_list pos:start="111:34" pos:end="111:86">(<argument pos:start="111:35" pos:end="111:39"><expr pos:start="111:35" pos:end="111:39"><name pos:start="111:35" pos:end="111:39">avctx</name></expr></argument>, <argument pos:start="111:42" pos:end="111:82"><expr pos:start="111:42" pos:end="111:82"><literal type="string" pos:start="111:42" pos:end="111:82">"unknown audio compression (format %i)\n"</literal></expr></argument>, <argument pos:start="111:85" pos:end="111:85"><expr pos:start="111:85" pos:end="111:85"><name pos:start="111:85" pos:end="111:85">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:26"><expr pos:start="117:9" pos:end="117:25"><call pos:start="117:9" pos:end="117:25"><name pos:start="117:9" pos:end="117:17">avio_skip</name><argument_list pos:start="117:18" pos:end="117:25">(<argument pos:start="117:19" pos:end="117:20"><expr pos:start="117:19" pos:end="117:20"><name pos:start="117:19" pos:end="117:20">pb</name></expr></argument>, <argument pos:start="117:23" pos:end="117:24"><expr pos:start="117:23" pos:end="117:24"><literal type="number" pos:start="117:23" pos:end="117:24">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:48"><expr pos:start="119:9" pos:end="119:47"><call pos:start="119:9" pos:end="119:47"><name pos:start="119:9" pos:end="119:25">var_read_metadata</name><argument_list pos:start="119:26" pos:end="119:47">(<argument pos:start="119:27" pos:end="119:31"><expr pos:start="119:27" pos:end="119:31"><name pos:start="119:27" pos:end="119:31">avctx</name></expr></argument>, <argument pos:start="119:34" pos:end="119:40"><expr pos:start="119:34" pos:end="119:40"><literal type="string" pos:start="119:34" pos:end="119:40">"title"</literal></expr></argument>, <argument pos:start="119:43" pos:end="119:46"><expr pos:start="119:43" pos:end="119:46"><literal type="number" pos:start="119:43" pos:end="119:46">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:51"><expr pos:start="121:9" pos:end="121:50"><call pos:start="121:9" pos:end="121:50"><name pos:start="121:9" pos:end="121:25">var_read_metadata</name><argument_list pos:start="121:26" pos:end="121:50">(<argument pos:start="121:27" pos:end="121:31"><expr pos:start="121:27" pos:end="121:31"><name pos:start="121:27" pos:end="121:31">avctx</name></expr></argument>, <argument pos:start="121:34" pos:end="121:42"><expr pos:start="121:34" pos:end="121:42"><literal type="string" pos:start="121:34" pos:end="121:42">"comment"</literal></expr></argument>, <argument pos:start="121:45" pos:end="121:49"><expr pos:start="121:45" pos:end="121:49"><literal type="number" pos:start="121:45" pos:end="121:49">0x100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:28"><expr pos:start="123:9" pos:end="123:27"><call pos:start="123:9" pos:end="123:27"><name pos:start="123:9" pos:end="123:17">avio_skip</name><argument_list pos:start="123:18" pos:end="123:27">(<argument pos:start="123:19" pos:end="123:20"><expr pos:start="123:19" pos:end="123:20"><name pos:start="123:19" pos:end="123:20">pb</name></expr></argument>, <argument pos:start="123:23" pos:end="123:26"><expr pos:start="123:23" pos:end="123:26"><literal type="number" pos:start="123:23" pos:end="123:26">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:22"><expr pos:start="127:9" pos:end="127:21"><name pos:start="127:9" pos:end="127:17">timestamp</name> <operator pos:start="127:19" pos:end="127:19">=</operator> <literal type="number" pos:start="127:21" pos:end="127:21">0</literal></expr>;</expr_stmt>

        <for pos:start="129:9" pos:end="145:9">for <control pos:start="129:13" pos:end="129:44">(<init pos:start="129:14" pos:end="129:19"><expr pos:start="129:14" pos:end="129:18"><name pos:start="129:14" pos:end="129:14">i</name> <operator pos:start="129:16" pos:end="129:16">=</operator> <literal type="number" pos:start="129:18" pos:end="129:18">0</literal></expr>;</init> <condition pos:start="129:21" pos:end="129:39"><expr pos:start="129:21" pos:end="129:38"><name pos:start="129:21" pos:end="129:21">i</name> <operator pos:start="129:23" pos:end="129:23">&lt;</operator> <name pos:start="129:25" pos:end="129:38"><name pos:start="129:25" pos:end="129:27">vst</name><operator pos:start="129:28" pos:end="129:29">-&gt;</operator><name pos:start="129:30" pos:end="129:38">nb_frames</name></name></expr>;</condition> <incr pos:start="129:41" pos:end="129:43"><expr pos:start="129:41" pos:end="129:43"><name pos:start="129:41" pos:end="129:41">i</name><operator pos:start="129:42" pos:end="129:43">++</operator></expr></incr>)</control> <block pos:start="129:46" pos:end="145:9">{<block_content pos:start="131:13" pos:end="143:60">

            <decl_stmt pos:start="131:13" pos:end="131:43"><decl pos:start="131:13" pos:end="131:42"><type pos:start="131:13" pos:end="131:20"><name pos:start="131:13" pos:end="131:20">uint32_t</name></type> <name pos:start="131:22" pos:end="131:24">pos</name>   <init pos:start="131:28" pos:end="131:42">= <expr pos:start="131:30" pos:end="131:42"><call pos:start="131:30" pos:end="131:42"><name pos:start="131:30" pos:end="131:38">avio_rb32</name><argument_list pos:start="131:39" pos:end="131:42">(<argument pos:start="131:40" pos:end="131:41"><expr pos:start="131:40" pos:end="131:41"><name pos:start="131:40" pos:end="131:41">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="133:13" pos:end="133:43"><decl pos:start="133:13" pos:end="133:42"><type pos:start="133:13" pos:end="133:20"><name pos:start="133:13" pos:end="133:20">uint32_t</name></type> <name pos:start="133:22" pos:end="133:26">asize</name> <init pos:start="133:28" pos:end="133:42">= <expr pos:start="133:30" pos:end="133:42"><call pos:start="133:30" pos:end="133:42"><name pos:start="133:30" pos:end="133:38">avio_rb32</name><argument_list pos:start="133:39" pos:end="133:42">(<argument pos:start="133:40" pos:end="133:41"><expr pos:start="133:40" pos:end="133:41"><name pos:start="133:40" pos:end="133:41">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="135:13" pos:end="135:43"><decl pos:start="135:13" pos:end="135:42"><type pos:start="135:13" pos:end="135:20"><name pos:start="135:13" pos:end="135:20">uint32_t</name></type> <name pos:start="135:22" pos:end="135:26">vsize</name> <init pos:start="135:28" pos:end="135:42">= <expr pos:start="135:30" pos:end="135:42"><call pos:start="135:30" pos:end="135:42"><name pos:start="135:30" pos:end="135:38">avio_rb32</name><argument_list pos:start="135:39" pos:end="135:42">(<argument pos:start="135:40" pos:end="135:41"><expr pos:start="135:40" pos:end="135:41"><name pos:start="135:40" pos:end="135:41">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:29"><expr pos:start="137:13" pos:end="137:28"><call pos:start="137:13" pos:end="137:28"><name pos:start="137:13" pos:end="137:21">avio_skip</name><argument_list pos:start="137:22" pos:end="137:28">(<argument pos:start="137:23" pos:end="137:24"><expr pos:start="137:23" pos:end="137:24"><name pos:start="137:23" pos:end="137:24">pb</name></expr></argument>, <argument pos:start="137:27" pos:end="137:27"><expr pos:start="137:27" pos:end="137:27"><literal type="number" pos:start="137:27" pos:end="137:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:88"><expr pos:start="139:13" pos:end="139:87"><call pos:start="139:13" pos:end="139:87"><name pos:start="139:13" pos:end="139:30">av_add_index_entry</name><argument_list pos:start="139:31" pos:end="139:87">(<argument pos:start="139:32" pos:end="139:34"><expr pos:start="139:32" pos:end="139:34"><name pos:start="139:32" pos:end="139:34">ast</name></expr></argument>, <argument pos:start="139:37" pos:end="139:39"><expr pos:start="139:37" pos:end="139:39"><name pos:start="139:37" pos:end="139:39">pos</name></expr></argument>,         <argument pos:start="139:50" pos:end="139:58"><expr pos:start="139:50" pos:end="139:58"><name pos:start="139:50" pos:end="139:58">timestamp</name></expr></argument>, <argument pos:start="139:61" pos:end="139:65"><expr pos:start="139:61" pos:end="139:65"><name pos:start="139:61" pos:end="139:65">asize</name></expr></argument>, <argument pos:start="139:68" pos:end="139:68"><expr pos:start="139:68" pos:end="139:68"><literal type="number" pos:start="139:68" pos:end="139:68">0</literal></expr></argument>, <argument pos:start="139:71" pos:end="139:86"><expr pos:start="139:71" pos:end="139:86"><name pos:start="139:71" pos:end="139:86">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:88"><expr pos:start="141:13" pos:end="141:87"><call pos:start="141:13" pos:end="141:87"><name pos:start="141:13" pos:end="141:30">av_add_index_entry</name><argument_list pos:start="141:31" pos:end="141:87">(<argument pos:start="141:32" pos:end="141:34"><expr pos:start="141:32" pos:end="141:34"><name pos:start="141:32" pos:end="141:34">vst</name></expr></argument>, <argument pos:start="141:37" pos:end="141:47"><expr pos:start="141:37" pos:end="141:47"><name pos:start="141:37" pos:end="141:39">pos</name> <operator pos:start="141:41" pos:end="141:41">+</operator> <name pos:start="141:43" pos:end="141:47">asize</name></expr></argument>, <argument pos:start="141:50" pos:end="141:50"><expr pos:start="141:50" pos:end="141:50"><name pos:start="141:50" pos:end="141:50">i</name></expr></argument>,         <argument pos:start="141:61" pos:end="141:65"><expr pos:start="141:61" pos:end="141:65"><name pos:start="141:61" pos:end="141:65">vsize</name></expr></argument>, <argument pos:start="141:68" pos:end="141:68"><expr pos:start="141:68" pos:end="141:68"><literal type="number" pos:start="141:68" pos:end="141:68">0</literal></expr></argument>, <argument pos:start="141:71" pos:end="141:86"><expr pos:start="141:71" pos:end="141:86"><name pos:start="141:71" pos:end="141:86">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:60"><expr pos:start="143:13" pos:end="143:59"><name pos:start="143:13" pos:end="143:21">timestamp</name> <operator pos:start="143:23" pos:end="143:24">+=</operator> <name pos:start="143:26" pos:end="143:30">asize</name> <operator pos:start="143:32" pos:end="143:32">/</operator> <operator pos:start="143:34" pos:end="143:34">(</operator><name pos:start="143:35" pos:end="143:54"><name pos:start="143:35" pos:end="143:37">ast</name><operator pos:start="143:38" pos:end="143:39">-&gt;</operator><name pos:start="143:40" pos:end="143:44">codec</name><operator pos:start="143:45" pos:end="143:46">-&gt;</operator><name pos:start="143:47" pos:end="143:54">channels</name></name> <operator pos:start="143:56" pos:end="143:56">*</operator> <literal type="number" pos:start="143:58" pos:end="143:58">2</literal><operator pos:start="143:59" pos:end="143:59">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="147:7" pos:end="229:5">else if <condition pos:start="147:15" pos:end="147:46">(<expr pos:start="147:16" pos:end="147:45"><operator pos:start="147:16" pos:end="147:16">!</operator><name pos:start="147:17" pos:end="147:23">version</name> <operator pos:start="147:25" pos:end="147:26">&amp;&amp;</operator> <call pos:start="147:28" pos:end="147:40"><name pos:start="147:28" pos:end="147:36">avio_rb16</name><argument_list pos:start="147:37" pos:end="147:40">(<argument pos:start="147:38" pos:end="147:39"><expr pos:start="147:38" pos:end="147:39"><name pos:start="147:38" pos:end="147:39">pb</name></expr></argument>)</argument_list></call> <operator pos:start="147:42" pos:end="147:43">==</operator> <literal type="number" pos:start="147:45" pos:end="147:45">3</literal></expr>)</condition> <block pos:start="147:48" pos:end="229:5">{<block_content pos:start="149:9" pos:end="227:32">

        <expr_stmt pos:start="149:9" pos:end="149:25"><expr pos:start="149:9" pos:end="149:24"><call pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:17">avio_skip</name><argument_list pos:start="149:18" pos:end="149:24">(<argument pos:start="149:19" pos:end="149:20"><expr pos:start="149:19" pos:end="149:20"><name pos:start="149:19" pos:end="149:20">pb</name></expr></argument>, <argument pos:start="149:23" pos:end="149:23"><expr pos:start="149:23" pos:end="149:23"><literal type="number" pos:start="149:23" pos:end="149:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:50"><expr pos:start="153:9" pos:end="153:49"><call pos:start="153:9" pos:end="153:49"><name pos:start="153:9" pos:end="153:18">read_table</name><argument_list pos:start="153:19" pos:end="153:49">(<argument pos:start="153:20" pos:end="153:24"><expr pos:start="153:20" pos:end="153:24"><name pos:start="153:20" pos:end="153:24">avctx</name></expr></argument>, <argument pos:start="153:27" pos:end="153:30"><expr pos:start="153:27" pos:end="153:30"><name pos:start="153:27" pos:end="153:30">NULL</name></expr></argument>, <argument pos:start="153:33" pos:end="153:48"><expr pos:start="153:33" pos:end="153:48"><name pos:start="153:33" pos:end="153:48">parse_global_var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="157:9" pos:end="193:9"><if pos:start="157:9" pos:end="163:9">if <condition pos:start="157:12" pos:end="157:36">(<expr pos:start="157:13" pos:end="157:35"><name pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:14">mv</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:31">nb_audio_tracks</name></name> <operator pos:start="157:33" pos:end="157:33">&gt;</operator> <literal type="number" pos:start="157:35" pos:end="157:35">1</literal></expr>)</condition> <block pos:start="157:38" pos:end="163:9">{<block_content pos:start="159:13" pos:end="161:40">

            <expr_stmt pos:start="159:13" pos:end="159:69"><expr pos:start="159:13" pos:end="159:68"><call pos:start="159:13" pos:end="159:68"><name pos:start="159:13" pos:end="159:33">av_log_ask_for_sample</name><argument_list pos:start="159:34" pos:end="159:68">(<argument pos:start="159:35" pos:end="159:39"><expr pos:start="159:35" pos:end="159:39"><name pos:start="159:35" pos:end="159:39">avctx</name></expr></argument>, <argument pos:start="159:42" pos:end="159:67"><expr pos:start="159:42" pos:end="159:67"><literal type="string" pos:start="159:42" pos:end="159:67">"multiple audio streams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="161:13" pos:end="161:40">return <expr pos:start="161:20" pos:end="161:39"><name pos:start="161:20" pos:end="161:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="163:11" pos:end="193:9">else if <condition pos:start="163:19" pos:end="163:39">(<expr pos:start="163:20" pos:end="163:38"><name pos:start="163:20" pos:end="163:38"><name pos:start="163:20" pos:end="163:21">mv</name><operator pos:start="163:22" pos:end="163:23">-&gt;</operator><name pos:start="163:24" pos:end="163:38">nb_audio_tracks</name></name></expr>)</condition> <block pos:start="163:41" pos:end="193:9">{<block_content pos:start="165:13" pos:end="191:38">

            <expr_stmt pos:start="165:13" pos:end="165:51"><expr pos:start="165:13" pos:end="165:50"><name pos:start="165:13" pos:end="165:15">ast</name> <operator pos:start="165:17" pos:end="165:17">=</operator> <call pos:start="165:19" pos:end="165:50"><name pos:start="165:19" pos:end="165:37">avformat_new_stream</name><argument_list pos:start="165:38" pos:end="165:50">(<argument pos:start="165:39" pos:end="165:43"><expr pos:start="165:39" pos:end="165:43"><name pos:start="165:39" pos:end="165:43">avctx</name></expr></argument>, <argument pos:start="165:46" pos:end="165:49"><expr pos:start="165:46" pos:end="165:49"><name pos:start="165:46" pos:end="165:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="167:13" pos:end="169:39"><if pos:start="167:13" pos:end="169:39">if <condition pos:start="167:16" pos:end="167:21">(<expr pos:start="167:17" pos:end="167:20"><operator pos:start="167:17" pos:end="167:17">!</operator><name pos:start="167:18" pos:end="167:20">ast</name></expr>)</condition><block type="pseudo" pos:start="169:17" pos:end="169:39"><block_content pos:start="169:17" pos:end="169:39">

                <return pos:start="169:17" pos:end="169:39">return <expr pos:start="169:24" pos:end="169:38"><call pos:start="169:24" pos:end="169:38"><name pos:start="169:24" pos:end="169:30">AVERROR</name><argument_list pos:start="169:31" pos:end="169:38">(<argument pos:start="169:32" pos:end="169:37"><expr pos:start="169:32" pos:end="169:37"><name pos:start="169:32" pos:end="169:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:56"><expr pos:start="171:13" pos:end="171:55"><name pos:start="171:13" pos:end="171:34"><name pos:start="171:13" pos:end="171:15">ast</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:22">codec</name><operator pos:start="171:23" pos:end="171:24">-&gt;</operator><name pos:start="171:25" pos:end="171:34">codec_type</name></name> <operator pos:start="171:36" pos:end="171:36">=</operator> <name pos:start="171:38" pos:end="171:55">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

            <comment type="block" pos:start="173:13" pos:end="173:92">/* temporarily store compression value in codec_tag; format value in codec_id */</comment>

            <expr_stmt pos:start="175:13" pos:end="175:52"><expr pos:start="175:13" pos:end="175:51"><call pos:start="175:13" pos:end="175:51"><name pos:start="175:13" pos:end="175:22">read_table</name><argument_list pos:start="175:23" pos:end="175:51">(<argument pos:start="175:24" pos:end="175:28"><expr pos:start="175:24" pos:end="175:28"><name pos:start="175:24" pos:end="175:28">avctx</name></expr></argument>, <argument pos:start="175:31" pos:end="175:33"><expr pos:start="175:31" pos:end="175:33"><name pos:start="175:31" pos:end="175:33">ast</name></expr></argument>, <argument pos:start="175:36" pos:end="175:50"><expr pos:start="175:36" pos:end="175:50"><name pos:start="175:36" pos:end="175:50">parse_audio_var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="177:13" pos:end="189:13"><if pos:start="177:13" pos:end="181:13">if <condition pos:start="177:16" pos:end="177:135">(<expr pos:start="177:17" pos:end="177:134"><name pos:start="177:17" pos:end="177:37"><name pos:start="177:17" pos:end="177:19">ast</name><operator pos:start="177:20" pos:end="177:21">-&gt;</operator><name pos:start="177:22" pos:end="177:26">codec</name><operator pos:start="177:27" pos:end="177:28">-&gt;</operator><name pos:start="177:29" pos:end="177:37">codec_tag</name></name> <operator pos:start="177:39" pos:end="177:40">==</operator> <literal type="number" pos:start="177:42" pos:end="177:44">100</literal> <operator pos:start="177:46" pos:end="177:47">&amp;&amp;</operator> <name pos:start="177:49" pos:end="177:68"><name pos:start="177:49" pos:end="177:51">ast</name><operator pos:start="177:52" pos:end="177:53">-&gt;</operator><name pos:start="177:54" pos:end="177:58">codec</name><operator pos:start="177:59" pos:end="177:60">-&gt;</operator><name pos:start="177:61" pos:end="177:68">codec_id</name></name> <operator pos:start="177:70" pos:end="177:71">==</operator> <name pos:start="177:73" pos:end="177:91">AUDIO_FORMAT_SIGNED</name> <operator pos:start="177:93" pos:end="177:94">&amp;&amp;</operator> <name pos:start="177:96" pos:end="177:128"><name pos:start="177:96" pos:end="177:98">ast</name><operator pos:start="177:99" pos:end="177:100">-&gt;</operator><name pos:start="177:101" pos:end="177:105">codec</name><operator pos:start="177:106" pos:end="177:107">-&gt;</operator><name pos:start="177:108" pos:end="177:128">bits_per_coded_sample</name></name> <operator pos:start="177:130" pos:end="177:131">==</operator> <literal type="number" pos:start="177:133" pos:end="177:134">16</literal></expr>)</condition> <block pos:start="177:137" pos:end="181:13">{<block_content pos:start="179:17" pos:end="179:61">

                <expr_stmt pos:start="179:17" pos:end="179:61"><expr pos:start="179:17" pos:end="179:60"><name pos:start="179:17" pos:end="179:36"><name pos:start="179:17" pos:end="179:19">ast</name><operator pos:start="179:20" pos:end="179:21">-&gt;</operator><name pos:start="179:22" pos:end="179:26">codec</name><operator pos:start="179:27" pos:end="179:28">-&gt;</operator><name pos:start="179:29" pos:end="179:36">codec_id</name></name> <operator pos:start="179:38" pos:end="179:38">=</operator> <name pos:start="179:40" pos:end="179:60">AV_CODEC_ID_PCM_S16BE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="181:15" pos:end="189:13">else <block pos:start="181:20" pos:end="189:13">{<block_content pos:start="183:17" pos:end="187:56">

                <expr_stmt pos:start="183:17" pos:end="185:100"><expr pos:start="183:17" pos:end="185:99"><call pos:start="183:17" pos:end="185:99"><name pos:start="183:17" pos:end="183:37">av_log_ask_for_sample</name><argument_list pos:start="183:38" pos:end="185:99">(<argument pos:start="183:39" pos:end="183:43"><expr pos:start="183:39" pos:end="183:43"><name pos:start="183:39" pos:end="183:43">avctx</name></expr></argument>, <argument pos:start="183:46" pos:end="183:99"><expr pos:start="183:46" pos:end="183:99"><literal type="string" pos:start="183:46" pos:end="183:99">"unknown audio compression %i (format %i, width %i)\n"</literal></expr></argument>,

                    <argument pos:start="185:21" pos:end="185:41"><expr pos:start="185:21" pos:end="185:41"><name pos:start="185:21" pos:end="185:41"><name pos:start="185:21" pos:end="185:23">ast</name><operator pos:start="185:24" pos:end="185:25">-&gt;</operator><name pos:start="185:26" pos:end="185:30">codec</name><operator pos:start="185:31" pos:end="185:32">-&gt;</operator><name pos:start="185:33" pos:end="185:41">codec_tag</name></name></expr></argument>, <argument pos:start="185:44" pos:end="185:63"><expr pos:start="185:44" pos:end="185:63"><name pos:start="185:44" pos:end="185:63"><name pos:start="185:44" pos:end="185:46">ast</name><operator pos:start="185:47" pos:end="185:48">-&gt;</operator><name pos:start="185:49" pos:end="185:53">codec</name><operator pos:start="185:54" pos:end="185:55">-&gt;</operator><name pos:start="185:56" pos:end="185:63">codec_id</name></name></expr></argument>, <argument pos:start="185:66" pos:end="185:98"><expr pos:start="185:66" pos:end="185:98"><name pos:start="185:66" pos:end="185:98"><name pos:start="185:66" pos:end="185:68">ast</name><operator pos:start="185:69" pos:end="185:70">-&gt;</operator><name pos:start="185:71" pos:end="185:75">codec</name><operator pos:start="185:76" pos:end="185:77">-&gt;</operator><name pos:start="185:78" pos:end="185:98">bits_per_coded_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:56"><expr pos:start="187:17" pos:end="187:55"><name pos:start="187:17" pos:end="187:36"><name pos:start="187:17" pos:end="187:19">ast</name><operator pos:start="187:20" pos:end="187:21">-&gt;</operator><name pos:start="187:22" pos:end="187:26">codec</name><operator pos:start="187:27" pos:end="187:28">-&gt;</operator><name pos:start="187:29" pos:end="187:36">codec_id</name></name> <operator pos:start="187:38" pos:end="187:38">=</operator> <name pos:start="187:40" pos:end="187:55">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:38"><expr pos:start="191:13" pos:end="191:37"><name pos:start="191:13" pos:end="191:33"><name pos:start="191:13" pos:end="191:15">ast</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:22">codec</name><operator pos:start="191:23" pos:end="191:24">-&gt;</operator><name pos:start="191:25" pos:end="191:33">codec_tag</name></name> <operator pos:start="191:35" pos:end="191:35">=</operator> <literal type="number" pos:start="191:37" pos:end="191:37">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="197:9" pos:end="215:9"><if pos:start="197:9" pos:end="203:9">if <condition pos:start="197:12" pos:end="197:36">(<expr pos:start="197:13" pos:end="197:35"><name pos:start="197:13" pos:end="197:31"><name pos:start="197:13" pos:end="197:14">mv</name><operator pos:start="197:15" pos:end="197:16">-&gt;</operator><name pos:start="197:17" pos:end="197:31">nb_video_tracks</name></name> <operator pos:start="197:33" pos:end="197:33">&gt;</operator> <literal type="number" pos:start="197:35" pos:end="197:35">1</literal></expr>)</condition> <block pos:start="197:38" pos:end="203:9">{<block_content pos:start="199:13" pos:end="201:40">

            <expr_stmt pos:start="199:13" pos:end="199:69"><expr pos:start="199:13" pos:end="199:68"><call pos:start="199:13" pos:end="199:68"><name pos:start="199:13" pos:end="199:33">av_log_ask_for_sample</name><argument_list pos:start="199:34" pos:end="199:68">(<argument pos:start="199:35" pos:end="199:39"><expr pos:start="199:35" pos:end="199:39"><name pos:start="199:35" pos:end="199:39">avctx</name></expr></argument>, <argument pos:start="199:42" pos:end="199:67"><expr pos:start="199:42" pos:end="199:67"><literal type="string" pos:start="199:42" pos:end="199:67">"multiple video streams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="201:13" pos:end="201:40">return <expr pos:start="201:20" pos:end="201:39"><name pos:start="201:20" pos:end="201:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="203:11" pos:end="215:9">else if <condition pos:start="203:19" pos:end="203:39">(<expr pos:start="203:20" pos:end="203:38"><name pos:start="203:20" pos:end="203:38"><name pos:start="203:20" pos:end="203:21">mv</name><operator pos:start="203:22" pos:end="203:23">-&gt;</operator><name pos:start="203:24" pos:end="203:38">nb_video_tracks</name></name></expr>)</condition> <block pos:start="203:41" pos:end="215:9">{<block_content pos:start="205:13" pos:end="213:52">

            <expr_stmt pos:start="205:13" pos:end="205:51"><expr pos:start="205:13" pos:end="205:50"><name pos:start="205:13" pos:end="205:15">vst</name> <operator pos:start="205:17" pos:end="205:17">=</operator> <call pos:start="205:19" pos:end="205:50"><name pos:start="205:19" pos:end="205:37">avformat_new_stream</name><argument_list pos:start="205:38" pos:end="205:50">(<argument pos:start="205:39" pos:end="205:43"><expr pos:start="205:39" pos:end="205:43"><name pos:start="205:39" pos:end="205:43">avctx</name></expr></argument>, <argument pos:start="205:46" pos:end="205:49"><expr pos:start="205:46" pos:end="205:49"><name pos:start="205:46" pos:end="205:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="207:13" pos:end="209:39"><if pos:start="207:13" pos:end="209:39">if <condition pos:start="207:16" pos:end="207:21">(<expr pos:start="207:17" pos:end="207:20"><operator pos:start="207:17" pos:end="207:17">!</operator><name pos:start="207:18" pos:end="207:20">vst</name></expr>)</condition><block type="pseudo" pos:start="209:17" pos:end="209:39"><block_content pos:start="209:17" pos:end="209:39">

                <return pos:start="209:17" pos:end="209:39">return <expr pos:start="209:24" pos:end="209:38"><call pos:start="209:24" pos:end="209:38"><name pos:start="209:24" pos:end="209:30">AVERROR</name><argument_list pos:start="209:31" pos:end="209:38">(<argument pos:start="209:32" pos:end="209:37"><expr pos:start="209:32" pos:end="209:37"><name pos:start="209:32" pos:end="209:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:56"><expr pos:start="211:13" pos:end="211:55"><name pos:start="211:13" pos:end="211:34"><name pos:start="211:13" pos:end="211:15">vst</name><operator pos:start="211:16" pos:end="211:17">-&gt;</operator><name pos:start="211:18" pos:end="211:22">codec</name><operator pos:start="211:23" pos:end="211:24">-&gt;</operator><name pos:start="211:25" pos:end="211:34">codec_type</name></name> <operator pos:start="211:36" pos:end="211:36">=</operator> <name pos:start="211:38" pos:end="211:55">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:52"><expr pos:start="213:13" pos:end="213:51"><call pos:start="213:13" pos:end="213:51"><name pos:start="213:13" pos:end="213:22">read_table</name><argument_list pos:start="213:23" pos:end="213:51">(<argument pos:start="213:24" pos:end="213:28"><expr pos:start="213:24" pos:end="213:28"><name pos:start="213:24" pos:end="213:28">avctx</name></expr></argument>, <argument pos:start="213:31" pos:end="213:33"><expr pos:start="213:31" pos:end="213:33"><name pos:start="213:31" pos:end="213:33">vst</name></expr></argument>, <argument pos:start="213:36" pos:end="213:50"><expr pos:start="213:36" pos:end="213:50"><name pos:start="213:36" pos:end="213:50">parse_video_var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="219:9" pos:end="221:32"><if pos:start="219:9" pos:end="221:32">if <condition pos:start="219:12" pos:end="219:32">(<expr pos:start="219:13" pos:end="219:31"><name pos:start="219:13" pos:end="219:31"><name pos:start="219:13" pos:end="219:14">mv</name><operator pos:start="219:15" pos:end="219:16">-&gt;</operator><name pos:start="219:17" pos:end="219:31">nb_audio_tracks</name></name></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="221:32"><block_content pos:start="221:13" pos:end="221:32">

            <expr_stmt pos:start="221:13" pos:end="221:32"><expr pos:start="221:13" pos:end="221:31"><call pos:start="221:13" pos:end="221:31"><name pos:start="221:13" pos:end="221:22">read_index</name><argument_list pos:start="221:23" pos:end="221:31">(<argument pos:start="221:24" pos:end="221:25"><expr pos:start="221:24" pos:end="221:25"><name pos:start="221:24" pos:end="221:25">pb</name></expr></argument>, <argument pos:start="221:28" pos:end="221:30"><expr pos:start="221:28" pos:end="221:30"><name pos:start="221:28" pos:end="221:30">ast</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="225:9" pos:end="227:32"><if pos:start="225:9" pos:end="227:32">if <condition pos:start="225:12" pos:end="225:32">(<expr pos:start="225:13" pos:end="225:31"><name pos:start="225:13" pos:end="225:31"><name pos:start="225:13" pos:end="225:14">mv</name><operator pos:start="225:15" pos:end="225:16">-&gt;</operator><name pos:start="225:17" pos:end="225:31">nb_video_tracks</name></name></expr>)</condition><block type="pseudo" pos:start="227:13" pos:end="227:32"><block_content pos:start="227:13" pos:end="227:32">

            <expr_stmt pos:start="227:13" pos:end="227:32"><expr pos:start="227:13" pos:end="227:31"><call pos:start="227:13" pos:end="227:31"><name pos:start="227:13" pos:end="227:22">read_index</name><argument_list pos:start="227:23" pos:end="227:31">(<argument pos:start="227:24" pos:end="227:25"><expr pos:start="227:24" pos:end="227:25"><name pos:start="227:24" pos:end="227:25">pb</name></expr></argument>, <argument pos:start="227:28" pos:end="227:30"><expr pos:start="227:28" pos:end="227:30"><name pos:start="227:28" pos:end="227:30">vst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="229:7" pos:end="235:5">else <block pos:start="229:12" pos:end="235:5">{<block_content pos:start="231:9" pos:end="233:36">

        <expr_stmt pos:start="231:9" pos:end="231:70"><expr pos:start="231:9" pos:end="231:69"><call pos:start="231:9" pos:end="231:69"><name pos:start="231:9" pos:end="231:29">av_log_ask_for_sample</name><argument_list pos:start="231:30" pos:end="231:69">(<argument pos:start="231:31" pos:end="231:35"><expr pos:start="231:31" pos:end="231:35"><name pos:start="231:31" pos:end="231:35">avctx</name></expr></argument>, <argument pos:start="231:38" pos:end="231:59"><expr pos:start="231:38" pos:end="231:59"><literal type="string" pos:start="231:38" pos:end="231:59">"unknown version %i\n"</literal></expr></argument>, <argument pos:start="231:62" pos:end="231:68"><expr pos:start="231:62" pos:end="231:68"><name pos:start="231:62" pos:end="231:68">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="233:9" pos:end="233:36">return <expr pos:start="233:16" pos:end="233:35"><name pos:start="233:16" pos:end="233:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <return pos:start="239:5" pos:end="239:13">return <expr pos:start="239:12" pos:end="239:12"><literal type="number" pos:start="239:12" pos:end="239:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
