<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8777.c" pos:tabs="8"><function pos:start="1:1" pos:end="8:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">cpu_common_realizefn</name><parameter_list pos:start="1:33" pos:end="1:64">(<parameter pos:start="1:34" pos:end="1:49"><decl pos:start="1:34" pos:end="1:49"><type pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:44">DeviceState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">dev</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:56">Error</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier><modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">errp</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="8:1">{<block_content pos:start="3:5" pos:end="7:5">
    <decl_stmt pos:start="3:5" pos:end="3:29"><decl pos:start="3:5" pos:end="3:28"><type pos:start="3:5" pos:end="3:14"><name pos:start="3:5" pos:end="3:12">CPUState</name> <modifier pos:start="3:14" pos:end="3:14">*</modifier></type><name pos:start="3:15" pos:end="3:17">cpu</name> <init pos:start="3:19" pos:end="3:28">= <expr pos:start="3:21" pos:end="3:28"><call pos:start="3:21" pos:end="3:28"><name pos:start="3:21" pos:end="3:23">CPU</name><argument_list pos:start="3:24" pos:end="3:28">(<argument pos:start="3:25" pos:end="3:27"><expr pos:start="3:25" pos:end="3:27"><name pos:start="3:25" pos:end="3:27">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="4:5" pos:end="7:5"><if pos:start="4:5" pos:end="7:5">if <condition pos:start="4:8" pos:end="4:24">(<expr pos:start="4:9" pos:end="4:23"><name pos:start="4:9" pos:end="4:23"><name pos:start="4:9" pos:end="4:11">dev</name><operator pos:start="4:12" pos:end="4:13">-&gt;</operator><name pos:start="4:14" pos:end="4:23">hotplugged</name></name></expr>)</condition> <block pos:start="4:26" pos:end="7:5">{<block_content pos:start="5:9" pos:end="6:24">
        <expr_stmt pos:start="5:9" pos:end="5:39"><expr pos:start="5:9" pos:end="5:38"><call pos:start="5:9" pos:end="5:38"><name pos:start="5:9" pos:end="5:33">cpu_synchronize_post_init</name><argument_list pos:start="5:34" pos:end="5:38">(<argument pos:start="5:35" pos:end="5:37"><expr pos:start="5:35" pos:end="5:37"><name pos:start="5:35" pos:end="5:37">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="6:9" pos:end="6:24"><expr pos:start="6:9" pos:end="6:23"><call pos:start="6:9" pos:end="6:23"><name pos:start="6:9" pos:end="6:18">cpu_resume</name><argument_list pos:start="6:19" pos:end="6:23">(<argument pos:start="6:20" pos:end="6:22"><expr pos:start="6:20" pos:end="6:22"><name pos:start="6:20" pos:end="6:22">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function></unit>
