<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13319.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:18">filter</name><parameter_list pos:start="1:19" pos:end="5:89">(<parameter pos:start="1:20" pos:end="1:32"><decl pos:start="1:20" pos:end="1:32"><type pos:start="1:20" pos:end="1:32"><name pos:start="1:20" pos:end="1:29">SPPContext</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:32">p</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:41">uint8_t</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">dst</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:55">uint8_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">src</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:35"><decl pos:start="3:20" pos:end="3:35"><type pos:start="3:20" pos:end="3:35"><name pos:start="3:20" pos:end="3:22">int</name></type> <name pos:start="3:24" pos:end="3:35">dst_linesize</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:53"><decl pos:start="3:38" pos:end="3:53"><type pos:start="3:38" pos:end="3:53"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:53">src_linesize</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:64"><decl pos:start="3:56" pos:end="3:64"><type pos:start="3:56" pos:end="3:64"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:64">width</name></decl></parameter>, <parameter pos:start="3:67" pos:end="3:76"><decl pos:start="3:67" pos:end="3:76"><type pos:start="3:67" pos:end="3:76"><name pos:start="3:67" pos:end="3:69">int</name></type> <name pos:start="3:71" pos:end="3:76">height</name></decl></parameter>,

                   <parameter pos:start="5:20" pos:end="5:42"><decl pos:start="5:20" pos:end="5:42"><type pos:start="5:20" pos:end="5:42"><specifier pos:start="5:20" pos:end="5:24">const</specifier> <name pos:start="5:26" pos:end="5:32">uint8_t</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:42">qp_table</name></decl></parameter>, <parameter pos:start="5:45" pos:end="5:57"><decl pos:start="5:45" pos:end="5:57"><type pos:start="5:45" pos:end="5:57"><name pos:start="5:45" pos:end="5:47">int</name></type> <name pos:start="5:49" pos:end="5:57">qp_stride</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:70"><decl pos:start="5:60" pos:end="5:70"><type pos:start="5:60" pos:end="5:70"><name pos:start="5:60" pos:end="5:62">int</name></type> <name pos:start="5:64" pos:end="5:70">is_luma</name></decl></parameter>, <parameter pos:start="5:73" pos:end="5:88"><decl pos:start="5:73" pos:end="5:88"><type pos:start="5:73" pos:end="5:88"><name pos:start="5:73" pos:end="5:75">int</name></type> <name pos:start="5:77" pos:end="5:88">sample_bytes</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="139:1">{<block_content pos:start="9:5" pos:end="137:5">

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">x</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">y</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:19">count</name> <init pos:start="11:21" pos:end="11:40">= <expr pos:start="11:23" pos:end="11:40"><literal type="number" pos:start="11:23" pos:end="11:23">1</literal> <operator pos:start="11:25" pos:end="11:26">&lt;&lt;</operator> <name pos:start="11:28" pos:end="11:40"><name pos:start="11:28" pos:end="11:28">p</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:40">log2_count</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:76"><decl pos:start="13:5" pos:end="13:75"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:22">linesize</name> <init pos:start="13:24" pos:end="13:75">= <expr pos:start="13:26" pos:end="13:75"><ternary pos:start="13:26" pos:end="13:75"><condition pos:start="13:26" pos:end="13:34"><expr pos:start="13:26" pos:end="13:32"><name pos:start="13:26" pos:end="13:32">is_luma</name></expr> ?</condition><then pos:start="13:36" pos:end="13:51"> <expr pos:start="13:36" pos:end="13:51"><name pos:start="13:36" pos:end="13:51"><name pos:start="13:36" pos:end="13:36">p</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:51">temp_linesize</name></name></expr> </then><else pos:start="13:53" pos:end="13:75">: <expr pos:start="13:55" pos:end="13:75"><call pos:start="13:55" pos:end="13:75"><name pos:start="13:55" pos:end="13:61">FFALIGN</name><argument_list pos:start="13:62" pos:end="13:75">(<argument pos:start="13:63" pos:end="13:70"><expr pos:start="13:63" pos:end="13:70"><name pos:start="13:63" pos:end="13:67">width</name><operator pos:start="13:68" pos:end="13:68">+</operator><literal type="number" pos:start="13:69" pos:end="13:70">16</literal></expr></argument>, <argument pos:start="13:73" pos:end="13:74"><expr pos:start="13:73" pos:end="13:74"><literal type="number" pos:start="13:73" pos:end="13:74">16</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:51"><expr pos:start="15:5" pos:end="15:50"><call pos:start="15:5" pos:end="15:46"><name pos:start="15:5" pos:end="15:19">DECLARE_ALIGNED</name><argument_list pos:start="15:20" pos:end="15:46">(<argument pos:start="15:21" pos:end="15:22"><expr pos:start="15:21" pos:end="15:22"><literal type="number" pos:start="15:21" pos:end="15:22">16</literal></expr></argument>, <argument pos:start="15:25" pos:end="15:32"><expr pos:start="15:25" pos:end="15:32"><name pos:start="15:25" pos:end="15:32">uint64_t</name></expr></argument>, <argument pos:start="15:35" pos:end="15:45"><expr pos:start="15:35" pos:end="15:45"><name pos:start="15:35" pos:end="15:45">block_align</name></expr></argument>)</argument_list></call><index pos:start="15:47" pos:end="15:50">[<expr pos:start="15:48" pos:end="15:49"><literal type="number" pos:start="15:48" pos:end="15:49">32</literal></expr>]</index></expr>;</expr_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:45"><decl pos:start="17:5" pos:end="17:44"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">int16_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:18">block</name>  <init pos:start="17:21" pos:end="17:44">= <expr pos:start="17:23" pos:end="17:44"><operator pos:start="17:23" pos:end="17:23">(</operator><name pos:start="17:24" pos:end="17:30">int16_t</name> <operator pos:start="17:32" pos:end="17:32">*</operator><operator pos:start="17:33" pos:end="17:33">)</operator><name pos:start="17:34" pos:end="17:44">block_align</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:52"><decl pos:start="19:5" pos:end="19:51"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">int16_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:19">block2</name> <init pos:start="19:21" pos:end="19:51">= <expr pos:start="19:23" pos:end="19:51"><operator pos:start="19:23" pos:end="19:23">(</operator><name pos:start="19:24" pos:end="19:30">int16_t</name> <operator pos:start="19:32" pos:end="19:32">*</operator><operator pos:start="19:33" pos:end="19:33">)</operator><operator pos:start="19:34" pos:end="19:34">(</operator><name pos:start="19:35" pos:end="19:45">block_align</name> <operator pos:start="19:47" pos:end="19:47">+</operator> <literal type="number" pos:start="19:49" pos:end="19:50">16</literal><operator pos:start="19:51" pos:end="19:51">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:41"><decl pos:start="21:5" pos:end="21:40"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:12">uint16_t</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:20">psrc16</name> <init pos:start="21:22" pos:end="21:40">= <expr pos:start="21:24" pos:end="21:40"><operator pos:start="21:24" pos:end="21:24">(</operator><name pos:start="21:25" pos:end="21:32">uint16_t</name><operator pos:start="21:33" pos:end="21:33">*</operator><operator pos:start="21:34" pos:end="21:34">)</operator><name pos:start="21:35" pos:end="21:40"><name pos:start="21:35" pos:end="21:35">p</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:40">src</name></name></expr></init></decl>;</decl_stmt>



    <for pos:start="25:5" pos:end="53:5">for <control pos:start="25:9" pos:end="25:32">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">y</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:27"><expr pos:start="25:17" pos:end="25:26"><name pos:start="25:17" pos:end="25:17">y</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:26">height</name></expr>;</condition> <incr pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:29">y</name><operator pos:start="25:30" pos:end="25:31">++</operator></expr></incr>)</control> <block pos:start="25:34" pos:end="53:5">{<block_content pos:start="27:9" pos:end="51:9">

        <decl_stmt pos:start="27:9" pos:end="27:48"><decl pos:start="27:9" pos:end="27:47"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:17">index</name> <init pos:start="27:19" pos:end="27:47">= <expr pos:start="27:21" pos:end="27:47"><literal type="number" pos:start="27:21" pos:end="27:23">8</literal> <operator pos:start="27:23" pos:end="27:23">+</operator> <literal type="number" pos:start="27:25" pos:end="27:25">8</literal><operator pos:start="27:26" pos:end="27:26">*</operator><name pos:start="27:27" pos:end="27:34">linesize</name> <operator pos:start="27:36" pos:end="27:36">+</operator> <name pos:start="27:38" pos:end="27:38">y</name><operator pos:start="27:39" pos:end="27:39">*</operator><name pos:start="27:40" pos:end="27:47">linesize</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:86"><expr pos:start="29:9" pos:end="29:85"><call pos:start="29:9" pos:end="29:85"><name pos:start="29:9" pos:end="29:14">memcpy</name><argument_list pos:start="29:15" pos:end="29:85">(<argument pos:start="29:16" pos:end="29:42"><expr pos:start="29:16" pos:end="29:42"><name pos:start="29:16" pos:end="29:21"><name pos:start="29:16" pos:end="29:16">p</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:21">src</name></name> <operator pos:start="29:23" pos:end="29:23">+</operator> <name pos:start="29:25" pos:end="29:29">index</name><operator pos:start="29:30" pos:end="29:30">*</operator><name pos:start="29:31" pos:end="29:42">sample_bytes</name></expr></argument>, <argument pos:start="29:45" pos:end="29:64"><expr pos:start="29:45" pos:end="29:64"><name pos:start="29:45" pos:end="29:47">src</name> <operator pos:start="29:49" pos:end="29:49">+</operator> <name pos:start="29:51" pos:end="29:51">y</name><operator pos:start="29:52" pos:end="29:52">*</operator><name pos:start="29:53" pos:end="29:64">src_linesize</name></expr></argument>, <argument pos:start="29:67" pos:end="29:84"><expr pos:start="29:67" pos:end="29:84"><name pos:start="29:67" pos:end="29:71">width</name><operator pos:start="29:72" pos:end="29:72">*</operator><name pos:start="29:73" pos:end="29:84">sample_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="51:9"><if pos:start="31:9" pos:end="41:9">if <condition pos:start="31:12" pos:end="31:30">(<expr pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:24">sample_bytes</name> <operator pos:start="31:26" pos:end="31:27">==</operator> <literal type="number" pos:start="31:29" pos:end="31:29">1</literal></expr>)</condition> <block pos:start="31:32" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:13">

            <for pos:start="33:13" pos:end="39:13">for <control pos:start="33:17" pos:end="33:35">(<init pos:start="33:18" pos:end="33:23"><expr pos:start="33:18" pos:end="33:22"><name pos:start="33:18" pos:end="33:18">x</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <literal type="number" pos:start="33:22" pos:end="33:22">0</literal></expr>;</init> <condition pos:start="33:25" pos:end="33:30"><expr pos:start="33:25" pos:end="33:29"><name pos:start="33:25" pos:end="33:25">x</name> <operator pos:start="33:27" pos:end="33:27">&lt;</operator> <literal type="number" pos:start="33:29" pos:end="33:29">8</literal></expr>;</condition> <incr pos:start="33:32" pos:end="33:34"><expr pos:start="33:32" pos:end="33:34"><name pos:start="33:32" pos:end="33:32">x</name><operator pos:start="33:33" pos:end="33:34">++</operator></expr></incr>)</control> <block pos:start="33:37" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:78">

                <expr_stmt pos:start="35:17" pos:end="35:78"><expr pos:start="35:17" pos:end="35:77"><name pos:start="35:17" pos:end="35:45"><name pos:start="35:17" pos:end="35:17">p</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:22">src</name><index pos:start="35:23" pos:end="35:45">[<expr pos:start="35:24" pos:end="35:44"><name pos:start="35:24" pos:end="35:28">index</name>         <operator pos:start="35:38" pos:end="35:38">-</operator> <name pos:start="35:40" pos:end="35:40">x</name> <operator pos:start="35:42" pos:end="35:42">-</operator> <literal type="number" pos:start="35:44" pos:end="35:44">1</literal></expr>]</index></name> <operator pos:start="35:47" pos:end="35:47">=</operator> <name pos:start="35:49" pos:end="35:77"><name pos:start="35:49" pos:end="35:49">p</name><operator pos:start="35:50" pos:end="35:51">-&gt;</operator><name pos:start="35:52" pos:end="35:54">src</name><index pos:start="35:55" pos:end="35:77">[<expr pos:start="35:56" pos:end="35:72"><name pos:start="35:56" pos:end="35:60">index</name> <operator pos:start="35:62" pos:end="35:62">+</operator>         <name pos:start="35:72" pos:end="35:72">x</name></expr>    ]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:78"><expr pos:start="37:17" pos:end="37:77"><name pos:start="37:17" pos:end="37:45"><name pos:start="37:17" pos:end="37:17">p</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:22">src</name><index pos:start="37:23" pos:end="37:45">[<expr pos:start="37:24" pos:end="37:40"><name pos:start="37:24" pos:end="37:28">index</name> <operator pos:start="37:30" pos:end="37:30">+</operator> <name pos:start="37:32" pos:end="37:36">width</name> <operator pos:start="37:38" pos:end="37:38">+</operator> <name pos:start="37:40" pos:end="37:40">x</name></expr>    ]</index></name> <operator pos:start="37:47" pos:end="37:47">=</operator> <name pos:start="37:49" pos:end="37:77"><name pos:start="37:49" pos:end="37:49">p</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:54">src</name><index pos:start="37:55" pos:end="37:77">[<expr pos:start="37:56" pos:end="37:76"><name pos:start="37:56" pos:end="37:60">index</name> <operator pos:start="37:62" pos:end="37:62">+</operator> <name pos:start="37:64" pos:end="37:68">width</name> <operator pos:start="37:70" pos:end="37:70">-</operator> <name pos:start="37:72" pos:end="37:72">x</name> <operator pos:start="37:74" pos:end="37:74">-</operator> <literal type="number" pos:start="37:76" pos:end="37:76">1</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="51:9">else <block pos:start="41:16" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:13">

            <for pos:start="43:13" pos:end="49:13">for <control pos:start="43:17" pos:end="43:35">(<init pos:start="43:18" pos:end="43:23"><expr pos:start="43:18" pos:end="43:22"><name pos:start="43:18" pos:end="43:18">x</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</init> <condition pos:start="43:25" pos:end="43:30"><expr pos:start="43:25" pos:end="43:29"><name pos:start="43:25" pos:end="43:25">x</name> <operator pos:start="43:27" pos:end="43:27">&lt;</operator> <literal type="number" pos:start="43:29" pos:end="43:29">8</literal></expr>;</condition> <incr pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:32">x</name><operator pos:start="43:33" pos:end="43:34">++</operator></expr></incr>)</control> <block pos:start="43:37" pos:end="49:13">{<block_content pos:start="45:17" pos:end="47:78">

                <expr_stmt pos:start="45:17" pos:end="45:78"><expr pos:start="45:17" pos:end="45:77"><name pos:start="45:17" pos:end="45:45"><name pos:start="45:17" pos:end="45:22">psrc16</name><index pos:start="45:23" pos:end="45:45">[<expr pos:start="45:24" pos:end="45:44"><name pos:start="45:24" pos:end="45:28">index</name>         <operator pos:start="45:38" pos:end="45:38">-</operator> <name pos:start="45:40" pos:end="45:40">x</name> <operator pos:start="45:42" pos:end="45:42">-</operator> <literal type="number" pos:start="45:44" pos:end="45:44">1</literal></expr>]</index></name> <operator pos:start="45:47" pos:end="45:47">=</operator> <name pos:start="45:49" pos:end="45:77"><name pos:start="45:49" pos:end="45:54">psrc16</name><index pos:start="45:55" pos:end="45:77">[<expr pos:start="45:56" pos:end="45:72"><name pos:start="45:56" pos:end="45:60">index</name> <operator pos:start="45:62" pos:end="45:62">+</operator>         <name pos:start="45:72" pos:end="45:72">x</name></expr>    ]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:78"><expr pos:start="47:17" pos:end="47:77"><name pos:start="47:17" pos:end="47:45"><name pos:start="47:17" pos:end="47:22">psrc16</name><index pos:start="47:23" pos:end="47:45">[<expr pos:start="47:24" pos:end="47:40"><name pos:start="47:24" pos:end="47:28">index</name> <operator pos:start="47:30" pos:end="47:30">+</operator> <name pos:start="47:32" pos:end="47:36">width</name> <operator pos:start="47:38" pos:end="47:38">+</operator> <name pos:start="47:40" pos:end="47:40">x</name></expr>    ]</index></name> <operator pos:start="47:47" pos:end="47:47">=</operator> <name pos:start="47:49" pos:end="47:77"><name pos:start="47:49" pos:end="47:54">psrc16</name><index pos:start="47:55" pos:end="47:77">[<expr pos:start="47:56" pos:end="47:76"><name pos:start="47:56" pos:end="47:60">index</name> <operator pos:start="47:62" pos:end="47:62">+</operator> <name pos:start="47:64" pos:end="47:68">width</name> <operator pos:start="47:70" pos:end="47:70">-</operator> <name pos:start="47:72" pos:end="47:72">x</name> <operator pos:start="47:74" pos:end="47:74">-</operator> <literal type="number" pos:start="47:76" pos:end="47:76">1</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <for pos:start="55:5" pos:end="61:5">for <control pos:start="55:9" pos:end="55:27">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">y</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:22"><expr pos:start="55:17" pos:end="55:21"><name pos:start="55:17" pos:end="55:17">y</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <literal type="number" pos:start="55:21" pos:end="55:21">8</literal></expr>;</condition> <incr pos:start="55:24" pos:end="55:26"><expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:24">y</name><operator pos:start="55:25" pos:end="55:26">++</operator></expr></incr>)</control> <block pos:start="55:29" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:134">

        <expr_stmt pos:start="57:9" pos:end="57:134"><expr pos:start="57:9" pos:end="57:133"><call pos:start="57:9" pos:end="57:133"><name pos:start="57:9" pos:end="57:14">memcpy</name><argument_list pos:start="57:15" pos:end="57:133">(<argument pos:start="57:16" pos:end="57:60"><expr pos:start="57:16" pos:end="57:60"><name pos:start="57:16" pos:end="57:21"><name pos:start="57:16" pos:end="57:16">p</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:21">src</name></name> <operator pos:start="57:23" pos:end="57:23">+</operator> <operator pos:start="57:25" pos:end="57:25">(</operator>       <literal type="number" pos:start="57:33" pos:end="57:34">7</literal><operator pos:start="57:34" pos:end="57:34">-</operator><name pos:start="57:35" pos:end="57:35">y</name><operator pos:start="57:36" pos:end="57:36">)</operator><operator pos:start="57:37" pos:end="57:37">*</operator><name pos:start="57:38" pos:end="57:45">linesize</name> <operator pos:start="57:47" pos:end="57:47">*</operator> <name pos:start="57:49" pos:end="57:60">sample_bytes</name></expr></argument>, <argument pos:start="57:63" pos:end="57:107"><expr pos:start="57:63" pos:end="57:107"><name pos:start="57:63" pos:end="57:68"><name pos:start="57:63" pos:end="57:63">p</name><operator pos:start="57:64" pos:end="57:65">-&gt;</operator><name pos:start="57:66" pos:end="57:68">src</name></name> <operator pos:start="57:70" pos:end="57:70">+</operator> <operator pos:start="57:72" pos:end="57:72">(</operator>       <name pos:start="57:80" pos:end="57:80">y</name><operator pos:start="57:81" pos:end="57:81">+</operator><literal type="number" pos:start="57:82" pos:end="57:82">8</literal><operator pos:start="57:83" pos:end="57:83">)</operator><operator pos:start="57:84" pos:end="57:84">*</operator><name pos:start="57:85" pos:end="57:92">linesize</name> <operator pos:start="57:94" pos:end="57:94">*</operator> <name pos:start="57:96" pos:end="57:107">sample_bytes</name></expr></argument>, <argument pos:start="57:110" pos:end="57:132"><expr pos:start="57:110" pos:end="57:132"><name pos:start="57:110" pos:end="57:117">linesize</name> <operator pos:start="57:119" pos:end="57:119">*</operator> <name pos:start="57:121" pos:end="57:132">sample_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:134"><expr pos:start="59:9" pos:end="59:133"><call pos:start="59:9" pos:end="59:133"><name pos:start="59:9" pos:end="59:14">memcpy</name><argument_list pos:start="59:15" pos:end="59:133">(<argument pos:start="59:16" pos:end="59:60"><expr pos:start="59:16" pos:end="59:60"><name pos:start="59:16" pos:end="59:21"><name pos:start="59:16" pos:end="59:16">p</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:21">src</name></name> <operator pos:start="59:23" pos:end="59:23">+</operator> <operator pos:start="59:25" pos:end="59:25">(</operator><name pos:start="59:26" pos:end="59:31">height</name><operator pos:start="59:32" pos:end="59:32">+</operator><literal type="number" pos:start="59:33" pos:end="59:34">8</literal><operator pos:start="59:34" pos:end="59:34">+</operator><name pos:start="59:35" pos:end="59:35">y</name><operator pos:start="59:36" pos:end="59:36">)</operator><operator pos:start="59:37" pos:end="59:37">*</operator><name pos:start="59:38" pos:end="59:45">linesize</name> <operator pos:start="59:47" pos:end="59:47">*</operator> <name pos:start="59:49" pos:end="59:60">sample_bytes</name></expr></argument>, <argument pos:start="59:63" pos:end="59:107"><expr pos:start="59:63" pos:end="59:107"><name pos:start="59:63" pos:end="59:68"><name pos:start="59:63" pos:end="59:63">p</name><operator pos:start="59:64" pos:end="59:65">-&gt;</operator><name pos:start="59:66" pos:end="59:68">src</name></name> <operator pos:start="59:70" pos:end="59:70">+</operator> <operator pos:start="59:72" pos:end="59:72">(</operator><name pos:start="59:73" pos:end="59:78">height</name><operator pos:start="59:79" pos:end="59:79">-</operator><name pos:start="59:80" pos:end="59:80">y</name><operator pos:start="59:81" pos:end="59:81">+</operator><literal type="number" pos:start="59:82" pos:end="59:82">7</literal><operator pos:start="59:83" pos:end="59:83">)</operator><operator pos:start="59:84" pos:end="59:84">*</operator><name pos:start="59:85" pos:end="59:92">linesize</name> <operator pos:start="59:94" pos:end="59:94">*</operator> <name pos:start="59:96" pos:end="59:107">sample_bytes</name></expr></argument>, <argument pos:start="59:110" pos:end="59:132"><expr pos:start="59:110" pos:end="59:132"><name pos:start="59:110" pos:end="59:117">linesize</name> <operator pos:start="59:119" pos:end="59:119">*</operator> <name pos:start="59:121" pos:end="59:132">sample_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="65:5" pos:end="137:5">for <control pos:start="65:9" pos:end="65:39">(<init pos:start="65:10" pos:end="65:15"><expr pos:start="65:10" pos:end="65:14"><name pos:start="65:10" pos:end="65:10">y</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>;</init> <condition pos:start="65:17" pos:end="65:31"><expr pos:start="65:17" pos:end="65:30"><name pos:start="65:17" pos:end="65:17">y</name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <name pos:start="65:21" pos:end="65:26">height</name> <operator pos:start="65:28" pos:end="65:28">+</operator> <literal type="number" pos:start="65:30" pos:end="65:30">8</literal></expr>;</condition> <incr pos:start="65:33" pos:end="65:38"><expr pos:start="65:33" pos:end="65:38"><name pos:start="65:33" pos:end="65:33">y</name> <operator pos:start="65:35" pos:end="65:36">+=</operator> <literal type="number" pos:start="65:38" pos:end="65:38">8</literal></expr></incr>)</control> <block pos:start="65:41" pos:end="137:5">{<block_content pos:start="67:9" pos:end="135:9">

        <expr_stmt pos:start="67:9" pos:end="67:81"><expr pos:start="67:9" pos:end="67:80"><call pos:start="67:9" pos:end="67:80"><name pos:start="67:9" pos:end="67:14">memset</name><argument_list pos:start="67:15" pos:end="67:80">(<argument pos:start="67:16" pos:end="67:43"><expr pos:start="67:16" pos:end="67:43"><name pos:start="67:16" pos:end="67:22"><name pos:start="67:16" pos:end="67:16">p</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:22">temp</name></name> <operator pos:start="67:24" pos:end="67:24">+</operator> <operator pos:start="67:26" pos:end="67:26">(</operator><literal type="number" pos:start="67:27" pos:end="67:29">8</literal> <operator pos:start="67:29" pos:end="67:29">+</operator> <name pos:start="67:31" pos:end="67:31">y</name><operator pos:start="67:32" pos:end="67:32">)</operator> <operator pos:start="67:34" pos:end="67:34">*</operator> <name pos:start="67:36" pos:end="67:43">linesize</name></expr></argument>, <argument pos:start="67:46" pos:end="67:46"><expr pos:start="67:46" pos:end="67:46"><literal type="number" pos:start="67:46" pos:end="67:46">0</literal></expr></argument>, <argument pos:start="67:49" pos:end="67:79"><expr pos:start="67:49" pos:end="67:79"><literal type="number" pos:start="67:49" pos:end="67:49">8</literal> <operator pos:start="67:51" pos:end="67:51">*</operator> <name pos:start="67:53" pos:end="67:60">linesize</name> <operator pos:start="67:62" pos:end="67:62">*</operator> <sizeof pos:start="67:64" pos:end="67:79">sizeof<argument_list pos:start="67:70" pos:end="67:79">(<argument pos:start="67:71" pos:end="67:78"><expr pos:start="67:71" pos:end="67:78"><operator pos:start="67:71" pos:end="67:71">*</operator><name pos:start="67:72" pos:end="67:78"><name pos:start="67:72" pos:end="67:72">p</name><operator pos:start="67:73" pos:end="67:74">-&gt;</operator><name pos:start="67:75" pos:end="67:78">temp</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="69:9" pos:end="109:9">for <control pos:start="69:13" pos:end="69:42">(<init pos:start="69:14" pos:end="69:19"><expr pos:start="69:14" pos:end="69:18"><name pos:start="69:14" pos:end="69:14">x</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <literal type="number" pos:start="69:18" pos:end="69:18">0</literal></expr>;</init> <condition pos:start="69:21" pos:end="69:34"><expr pos:start="69:21" pos:end="69:33"><name pos:start="69:21" pos:end="69:21">x</name> <operator pos:start="69:23" pos:end="69:23">&lt;</operator> <name pos:start="69:25" pos:end="69:29">width</name> <operator pos:start="69:31" pos:end="69:31">+</operator> <literal type="number" pos:start="69:33" pos:end="69:33">8</literal></expr>;</condition> <incr pos:start="69:36" pos:end="69:41"><expr pos:start="69:36" pos:end="69:41"><name pos:start="69:36" pos:end="69:36">x</name> <operator pos:start="69:38" pos:end="69:39">+=</operator> <literal type="number" pos:start="69:41" pos:end="69:41">8</literal></expr></incr>)</control> <block pos:start="69:44" pos:end="109:9">{<block_content pos:start="71:13" pos:end="107:13">

            <decl_stmt pos:start="71:13" pos:end="71:19"><decl pos:start="71:13" pos:end="71:18"><type pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">int</name></type> <name pos:start="71:17" pos:end="71:18">qp</name></decl>;</decl_stmt>



            <if_stmt pos:start="75:13" pos:end="87:13"><if pos:start="75:13" pos:end="79:13">if <condition pos:start="75:16" pos:end="75:22">(<expr pos:start="75:17" pos:end="75:21"><name pos:start="75:17" pos:end="75:21"><name pos:start="75:17" pos:end="75:17">p</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:21">qp</name></name></expr>)</condition> <block pos:start="75:24" pos:end="79:13">{<block_content pos:start="77:17" pos:end="77:27">

                <expr_stmt pos:start="77:17" pos:end="77:27"><expr pos:start="77:17" pos:end="77:26"><name pos:start="77:17" pos:end="77:18">qp</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:26"><name pos:start="77:22" pos:end="77:22">p</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:26">qp</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="79:15" pos:end="87:13">else<block pos:start="79:19" pos:end="87:13">{<block_content pos:start="81:17" pos:end="85:63">

                <decl_stmt pos:start="81:17" pos:end="81:44"><decl pos:start="81:17" pos:end="81:43"><type pos:start="81:17" pos:end="81:25"><specifier pos:start="81:17" pos:end="81:21">const</specifier> <name pos:start="81:23" pos:end="81:25">int</name></type> <name pos:start="81:27" pos:end="81:29">qps</name> <init pos:start="81:31" pos:end="81:43">= <expr pos:start="81:33" pos:end="81:43"><literal type="number" pos:start="81:33" pos:end="81:35">3</literal> <operator pos:start="81:35" pos:end="81:35">+</operator> <name pos:start="81:37" pos:end="81:43">is_luma</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:104"><expr pos:start="83:17" pos:end="83:103"><name pos:start="83:17" pos:end="83:18">qp</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <name pos:start="83:22" pos:end="83:103"><name pos:start="83:22" pos:end="83:29">qp_table</name><index pos:start="83:30" pos:end="83:103">[<expr pos:start="83:31" pos:end="83:102"><operator pos:start="83:31" pos:end="83:31">(</operator><call pos:start="83:32" pos:end="83:50"><name pos:start="83:32" pos:end="83:36">FFMIN</name><argument_list pos:start="83:37" pos:end="83:50">(<argument pos:start="83:38" pos:end="83:38"><expr pos:start="83:38" pos:end="83:38"><name pos:start="83:38" pos:end="83:38">x</name></expr></argument>, <argument pos:start="83:41" pos:end="83:49"><expr pos:start="83:41" pos:end="83:49"><name pos:start="83:41" pos:end="83:45">width</name> <operator pos:start="83:47" pos:end="83:47">-</operator> <literal type="number" pos:start="83:49" pos:end="83:49">1</literal></expr></argument>)</argument_list></call> <operator pos:start="83:52" pos:end="83:53">&gt;&gt;</operator> <name pos:start="83:55" pos:end="83:57">qps</name><operator pos:start="83:58" pos:end="83:58">)</operator> <operator pos:start="83:60" pos:end="83:60">+</operator> <operator pos:start="83:62" pos:end="83:62">(</operator><call pos:start="83:63" pos:end="83:82"><name pos:start="83:63" pos:end="83:67">FFMIN</name><argument_list pos:start="83:68" pos:end="83:82">(<argument pos:start="83:69" pos:end="83:69"><expr pos:start="83:69" pos:end="83:69"><name pos:start="83:69" pos:end="83:69">y</name></expr></argument>, <argument pos:start="83:72" pos:end="83:81"><expr pos:start="83:72" pos:end="83:81"><name pos:start="83:72" pos:end="83:77">height</name> <operator pos:start="83:79" pos:end="83:79">-</operator> <literal type="number" pos:start="83:81" pos:end="83:81">1</literal></expr></argument>)</argument_list></call> <operator pos:start="83:84" pos:end="83:85">&gt;&gt;</operator> <name pos:start="83:87" pos:end="83:89">qps</name><operator pos:start="83:90" pos:end="83:90">)</operator> <operator pos:start="83:92" pos:end="83:92">*</operator> <name pos:start="83:94" pos:end="83:102">qp_stride</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:63"><expr pos:start="85:17" pos:end="85:62"><name pos:start="85:17" pos:end="85:18">qp</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <call pos:start="85:22" pos:end="85:62"><name pos:start="85:22" pos:end="85:26">FFMAX</name><argument_list pos:start="85:27" pos:end="85:62">(<argument pos:start="85:28" pos:end="85:28"><expr pos:start="85:28" pos:end="85:28"><literal type="number" pos:start="85:28" pos:end="85:28">1</literal></expr></argument>, <argument pos:start="85:31" pos:end="85:61"><expr pos:start="85:31" pos:end="85:61"><call pos:start="85:31" pos:end="85:61"><name pos:start="85:31" pos:end="85:41">norm_qscale</name><argument_list pos:start="85:42" pos:end="85:61">(<argument pos:start="85:43" pos:end="85:44"><expr pos:start="85:43" pos:end="85:44"><name pos:start="85:43" pos:end="85:44">qp</name></expr></argument>, <argument pos:start="85:47" pos:end="85:60"><expr pos:start="85:47" pos:end="85:60"><name pos:start="85:47" pos:end="85:60"><name pos:start="85:47" pos:end="85:47">p</name><operator pos:start="85:48" pos:end="85:49">-&gt;</operator><name pos:start="85:50" pos:end="85:60">qscale_type</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <for pos:start="89:13" pos:end="107:13">for <control pos:start="89:17" pos:end="89:39">(<init pos:start="89:18" pos:end="89:23"><expr pos:start="89:18" pos:end="89:22"><name pos:start="89:18" pos:end="89:18">i</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <literal type="number" pos:start="89:22" pos:end="89:22">0</literal></expr>;</init> <condition pos:start="89:25" pos:end="89:34"><expr pos:start="89:25" pos:end="89:33"><name pos:start="89:25" pos:end="89:25">i</name> <operator pos:start="89:27" pos:end="89:27">&lt;</operator> <name pos:start="89:29" pos:end="89:33">count</name></expr>;</condition> <incr pos:start="89:36" pos:end="89:38"><expr pos:start="89:36" pos:end="89:38"><name pos:start="89:36" pos:end="89:36">i</name><operator pos:start="89:37" pos:end="89:38">++</operator></expr></incr>)</control> <block pos:start="89:41" pos:end="107:13">{<block_content pos:start="91:17" pos:end="105:61">

                <decl_stmt pos:start="91:17" pos:end="91:60"><decl pos:start="91:17" pos:end="91:59"><type pos:start="91:17" pos:end="91:25"><specifier pos:start="91:17" pos:end="91:21">const</specifier> <name pos:start="91:23" pos:end="91:25">int</name></type> <name pos:start="91:27" pos:end="91:28">x1</name> <init pos:start="91:30" pos:end="91:59">= <expr pos:start="91:32" pos:end="91:59"><name pos:start="91:32" pos:end="91:32">x</name> <operator pos:start="91:34" pos:end="91:34">+</operator> <name pos:start="91:36" pos:end="91:59"><name pos:start="91:36" pos:end="91:41">offset</name><index pos:start="91:42" pos:end="91:56">[<expr pos:start="91:43" pos:end="91:55"><name pos:start="91:43" pos:end="91:43">i</name> <operator pos:start="91:45" pos:end="91:45">+</operator> <name pos:start="91:47" pos:end="91:51">count</name> <operator pos:start="91:53" pos:end="91:53">-</operator> <literal type="number" pos:start="91:55" pos:end="91:55">1</literal></expr>]</index><index pos:start="91:57" pos:end="91:59">[<expr pos:start="91:58" pos:end="91:58"><literal type="number" pos:start="91:58" pos:end="91:58">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="93:17" pos:end="93:60"><decl pos:start="93:17" pos:end="93:59"><type pos:start="93:17" pos:end="93:25"><specifier pos:start="93:17" pos:end="93:21">const</specifier> <name pos:start="93:23" pos:end="93:25">int</name></type> <name pos:start="93:27" pos:end="93:28">y1</name> <init pos:start="93:30" pos:end="93:59">= <expr pos:start="93:32" pos:end="93:59"><name pos:start="93:32" pos:end="93:32">y</name> <operator pos:start="93:34" pos:end="93:34">+</operator> <name pos:start="93:36" pos:end="93:59"><name pos:start="93:36" pos:end="93:41">offset</name><index pos:start="93:42" pos:end="93:56">[<expr pos:start="93:43" pos:end="93:55"><name pos:start="93:43" pos:end="93:43">i</name> <operator pos:start="93:45" pos:end="93:45">+</operator> <name pos:start="93:47" pos:end="93:51">count</name> <operator pos:start="93:53" pos:end="93:53">-</operator> <literal type="number" pos:start="93:55" pos:end="93:55">1</literal></expr>]</index><index pos:start="93:57" pos:end="93:59">[<expr pos:start="93:58" pos:end="93:58"><literal type="number" pos:start="93:58" pos:end="93:58">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="95:17" pos:end="95:51"><decl pos:start="95:17" pos:end="95:50"><type pos:start="95:17" pos:end="95:25"><specifier pos:start="95:17" pos:end="95:21">const</specifier> <name pos:start="95:23" pos:end="95:25">int</name></type> <name pos:start="95:27" pos:end="95:31">index</name> <init pos:start="95:33" pos:end="95:50">= <expr pos:start="95:35" pos:end="95:50"><name pos:start="95:35" pos:end="95:36">x1</name> <operator pos:start="95:38" pos:end="95:38">+</operator> <name pos:start="95:40" pos:end="95:41">y1</name><operator pos:start="95:42" pos:end="95:42">*</operator><name pos:start="95:43" pos:end="95:50">linesize</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:94"><expr pos:start="97:17" pos:end="97:93"><call pos:start="97:17" pos:end="97:93"><name pos:start="97:17" pos:end="97:34"><name pos:start="97:17" pos:end="97:17">p</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:22">dct</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:34">get_pixels</name></name><argument_list pos:start="97:35" pos:end="97:93">(<argument pos:start="97:36" pos:end="97:40"><expr pos:start="97:36" pos:end="97:40"><name pos:start="97:36" pos:end="97:40">block</name></expr></argument>, <argument pos:start="97:43" pos:end="97:69"><expr pos:start="97:43" pos:end="97:69"><name pos:start="97:43" pos:end="97:48"><name pos:start="97:43" pos:end="97:43">p</name><operator pos:start="97:44" pos:end="97:45">-&gt;</operator><name pos:start="97:46" pos:end="97:48">src</name></name> <operator pos:start="97:50" pos:end="97:50">+</operator> <name pos:start="97:52" pos:end="97:63">sample_bytes</name><operator pos:start="97:64" pos:end="97:64">*</operator><name pos:start="97:65" pos:end="97:69">index</name></expr></argument>, <argument pos:start="97:72" pos:end="97:92"><expr pos:start="97:72" pos:end="97:92"><name pos:start="97:72" pos:end="97:83">sample_bytes</name><operator pos:start="97:84" pos:end="97:84">*</operator><name pos:start="97:85" pos:end="97:92">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:36"><expr pos:start="99:17" pos:end="99:35"><call pos:start="99:17" pos:end="99:35"><name pos:start="99:17" pos:end="99:28"><name pos:start="99:17" pos:end="99:17">p</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:22">dct</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:28">fdct</name></name><argument_list pos:start="99:29" pos:end="99:35">(<argument pos:start="99:30" pos:end="99:34"><expr pos:start="99:30" pos:end="99:34"><name pos:start="99:30" pos:end="99:34">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:75"><expr pos:start="101:17" pos:end="101:74"><call pos:start="101:17" pos:end="101:74"><name pos:start="101:17" pos:end="101:29"><name pos:start="101:17" pos:end="101:17">p</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:29">requantize</name></name><argument_list pos:start="101:30" pos:end="101:74">(<argument pos:start="101:31" pos:end="101:36"><expr pos:start="101:31" pos:end="101:36"><name pos:start="101:31" pos:end="101:36">block2</name></expr></argument>, <argument pos:start="101:39" pos:end="101:43"><expr pos:start="101:39" pos:end="101:43"><name pos:start="101:39" pos:end="101:43">block</name></expr></argument>, <argument pos:start="101:46" pos:end="101:47"><expr pos:start="101:46" pos:end="101:47"><name pos:start="101:46" pos:end="101:47">qp</name></expr></argument>, <argument pos:start="101:50" pos:end="101:73"><expr pos:start="101:50" pos:end="101:73"><name pos:start="101:50" pos:end="101:73"><name pos:start="101:50" pos:end="101:50">p</name><operator pos:start="101:51" pos:end="101:52">-&gt;</operator><name pos:start="101:53" pos:end="101:55">dct</name><operator pos:start="101:56" pos:end="101:57">-&gt;</operator><name pos:start="101:58" pos:end="101:73">idct_permutation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:37"><expr pos:start="103:17" pos:end="103:36"><call pos:start="103:17" pos:end="103:36"><name pos:start="103:17" pos:end="103:28"><name pos:start="103:17" pos:end="103:17">p</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:22">dct</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:28">idct</name></name><argument_list pos:start="103:29" pos:end="103:36">(<argument pos:start="103:30" pos:end="103:35"><expr pos:start="103:30" pos:end="103:35"><name pos:start="103:30" pos:end="103:35">block2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:61"><expr pos:start="105:17" pos:end="105:60"><call pos:start="105:17" pos:end="105:60"><name pos:start="105:17" pos:end="105:25">add_block</name><argument_list pos:start="105:26" pos:end="105:60">(<argument pos:start="105:27" pos:end="105:41"><expr pos:start="105:27" pos:end="105:41"><name pos:start="105:27" pos:end="105:33"><name pos:start="105:27" pos:end="105:27">p</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:33">temp</name></name> <operator pos:start="105:35" pos:end="105:35">+</operator> <name pos:start="105:37" pos:end="105:41">index</name></expr></argument>, <argument pos:start="105:44" pos:end="105:51"><expr pos:start="105:44" pos:end="105:51"><name pos:start="105:44" pos:end="105:51">linesize</name></expr></argument>, <argument pos:start="105:54" pos:end="105:59"><expr pos:start="105:54" pos:end="105:59"><name pos:start="105:54" pos:end="105:59">block2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <if_stmt pos:start="111:9" pos:end="135:9"><if pos:start="111:9" pos:end="135:9">if <condition pos:start="111:12" pos:end="111:14">(<expr pos:start="111:13" pos:end="111:13"><name pos:start="111:13" pos:end="111:13">y</name></expr>)</condition> <block pos:start="111:16" pos:end="135:9">{<block_content pos:start="113:13" pos:end="133:13">

            <if_stmt pos:start="113:13" pos:end="133:13"><if pos:start="113:13" pos:end="123:13">if <condition pos:start="113:16" pos:end="113:34">(<expr pos:start="113:17" pos:end="113:33"><name pos:start="113:17" pos:end="113:28">sample_bytes</name> <operator pos:start="113:30" pos:end="113:31">==</operator> <literal type="number" pos:start="113:33" pos:end="113:33">1</literal></expr>)</condition> <block pos:start="113:36" pos:end="123:13">{<block_content pos:start="115:17" pos:end="121:40">

                <expr_stmt pos:start="115:17" pos:end="121:40"><expr pos:start="115:17" pos:end="121:39"><call pos:start="115:17" pos:end="121:39"><name pos:start="115:17" pos:end="115:30"><name pos:start="115:17" pos:end="115:17">p</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:30">store_slice</name></name><argument_list pos:start="115:31" pos:end="121:39">(<argument pos:start="115:32" pos:end="115:59"><expr pos:start="115:32" pos:end="115:59"><name pos:start="115:32" pos:end="115:34">dst</name> <operator pos:start="115:36" pos:end="115:36">+</operator> <operator pos:start="115:38" pos:end="115:38">(</operator><name pos:start="115:39" pos:end="115:39">y</name> <operator pos:start="115:41" pos:end="115:41">-</operator> <literal type="number" pos:start="115:43" pos:end="115:43">8</literal><operator pos:start="115:44" pos:end="115:44">)</operator> <operator pos:start="115:46" pos:end="115:46">*</operator> <name pos:start="115:48" pos:end="115:59">dst_linesize</name></expr></argument>, <argument pos:start="115:62" pos:end="115:85"><expr pos:start="115:62" pos:end="115:85"><name pos:start="115:62" pos:end="115:68"><name pos:start="115:62" pos:end="115:62">p</name><operator pos:start="115:63" pos:end="115:64">-&gt;</operator><name pos:start="115:65" pos:end="115:68">temp</name></name> <operator pos:start="115:70" pos:end="115:70">+</operator> <literal type="number" pos:start="115:72" pos:end="115:74">8</literal> <operator pos:start="115:74" pos:end="115:74">+</operator> <name pos:start="115:76" pos:end="115:76">y</name><operator pos:start="115:77" pos:end="115:77">*</operator><name pos:start="115:78" pos:end="115:85">linesize</name></expr></argument>,

                               <argument pos:start="117:32" pos:end="117:43"><expr pos:start="117:32" pos:end="117:43"><name pos:start="117:32" pos:end="117:43">dst_linesize</name></expr></argument>, <argument pos:start="117:46" pos:end="117:53"><expr pos:start="117:46" pos:end="117:53"><name pos:start="117:46" pos:end="117:53">linesize</name></expr></argument>, <argument pos:start="117:56" pos:end="117:60"><expr pos:start="117:56" pos:end="117:60"><name pos:start="117:56" pos:end="117:60">width</name></expr></argument>,

                               <argument pos:start="119:32" pos:end="119:55"><expr pos:start="119:32" pos:end="119:55"><call pos:start="119:32" pos:end="119:55"><name pos:start="119:32" pos:end="119:36">FFMIN</name><argument_list pos:start="119:37" pos:end="119:55">(<argument pos:start="119:38" pos:end="119:38"><expr pos:start="119:38" pos:end="119:38"><literal type="number" pos:start="119:38" pos:end="119:38">8</literal></expr></argument>, <argument pos:start="119:41" pos:end="119:54"><expr pos:start="119:41" pos:end="119:54"><name pos:start="119:41" pos:end="119:46">height</name> <operator pos:start="119:48" pos:end="119:48">+</operator> <literal type="number" pos:start="119:50" pos:end="119:52">8</literal> <operator pos:start="119:52" pos:end="119:52">-</operator> <name pos:start="119:54" pos:end="119:54">y</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:58" pos:end="119:82"><expr pos:start="119:58" pos:end="119:82"><name pos:start="119:58" pos:end="119:66">MAX_LEVEL</name> <operator pos:start="119:68" pos:end="119:68">-</operator> <name pos:start="119:70" pos:end="119:82"><name pos:start="119:70" pos:end="119:70">p</name><operator pos:start="119:71" pos:end="119:72">-&gt;</operator><name pos:start="119:73" pos:end="119:82">log2_count</name></name></expr></argument>,

                               <argument pos:start="121:32" pos:end="121:38"><expr pos:start="121:32" pos:end="121:38"><name pos:start="121:32" pos:end="121:38">ldither</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="123:15" pos:end="133:13">else <block pos:start="123:20" pos:end="133:13">{<block_content pos:start="125:17" pos:end="131:41">

                <expr_stmt pos:start="125:17" pos:end="131:41"><expr pos:start="125:17" pos:end="131:40"><call pos:start="125:17" pos:end="131:40"><name pos:start="125:17" pos:end="125:31">store_slice16_c</name><argument_list pos:start="125:32" pos:end="131:40">(<argument pos:start="125:33" pos:end="125:73"><expr pos:start="125:33" pos:end="125:73"><operator pos:start="125:33" pos:end="125:33">(</operator><name pos:start="125:34" pos:end="125:41">uint16_t</name><operator pos:start="125:42" pos:end="125:42">*</operator><operator pos:start="125:43" pos:end="125:43">)</operator><operator pos:start="125:44" pos:end="125:44">(</operator><name pos:start="125:45" pos:end="125:47">dst</name> <operator pos:start="125:49" pos:end="125:49">+</operator> <operator pos:start="125:51" pos:end="125:51">(</operator><name pos:start="125:52" pos:end="125:52">y</name> <operator pos:start="125:54" pos:end="125:54">-</operator> <literal type="number" pos:start="125:56" pos:end="125:56">8</literal><operator pos:start="125:57" pos:end="125:57">)</operator> <operator pos:start="125:59" pos:end="125:59">*</operator> <name pos:start="125:61" pos:end="125:72">dst_linesize</name><operator pos:start="125:73" pos:end="125:73">)</operator></expr></argument>, <argument pos:start="125:76" pos:end="125:99"><expr pos:start="125:76" pos:end="125:99"><name pos:start="125:76" pos:end="125:82"><name pos:start="125:76" pos:end="125:76">p</name><operator pos:start="125:77" pos:end="125:78">-&gt;</operator><name pos:start="125:79" pos:end="125:82">temp</name></name> <operator pos:start="125:84" pos:end="125:84">+</operator> <literal type="number" pos:start="125:86" pos:end="125:88">8</literal> <operator pos:start="125:88" pos:end="125:88">+</operator> <name pos:start="125:90" pos:end="125:90">y</name><operator pos:start="125:91" pos:end="125:91">*</operator><name pos:start="125:92" pos:end="125:99">linesize</name></expr></argument>,

                                <argument pos:start="127:33" pos:end="127:46"><expr pos:start="127:33" pos:end="127:46"><name pos:start="127:33" pos:end="127:44">dst_linesize</name><operator pos:start="127:45" pos:end="127:45">/</operator><literal type="number" pos:start="127:46" pos:end="127:46">2</literal></expr></argument>, <argument pos:start="127:49" pos:end="127:56"><expr pos:start="127:49" pos:end="127:56"><name pos:start="127:49" pos:end="127:56">linesize</name></expr></argument>, <argument pos:start="127:59" pos:end="127:63"><expr pos:start="127:59" pos:end="127:63"><name pos:start="127:59" pos:end="127:63">width</name></expr></argument>,

                                <argument pos:start="129:33" pos:end="129:56"><expr pos:start="129:33" pos:end="129:56"><call pos:start="129:33" pos:end="129:56"><name pos:start="129:33" pos:end="129:37">FFMIN</name><argument_list pos:start="129:38" pos:end="129:56">(<argument pos:start="129:39" pos:end="129:39"><expr pos:start="129:39" pos:end="129:39"><literal type="number" pos:start="129:39" pos:end="129:39">8</literal></expr></argument>, <argument pos:start="129:42" pos:end="129:55"><expr pos:start="129:42" pos:end="129:55"><name pos:start="129:42" pos:end="129:47">height</name> <operator pos:start="129:49" pos:end="129:49">+</operator> <literal type="number" pos:start="129:51" pos:end="129:53">8</literal> <operator pos:start="129:53" pos:end="129:53">-</operator> <name pos:start="129:55" pos:end="129:55">y</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="129:59" pos:end="129:83"><expr pos:start="129:59" pos:end="129:83"><name pos:start="129:59" pos:end="129:67">MAX_LEVEL</name> <operator pos:start="129:69" pos:end="129:69">-</operator> <name pos:start="129:71" pos:end="129:83"><name pos:start="129:71" pos:end="129:71">p</name><operator pos:start="129:72" pos:end="129:73">-&gt;</operator><name pos:start="129:74" pos:end="129:83">log2_count</name></name></expr></argument>,

                                <argument pos:start="131:33" pos:end="131:39"><expr pos:start="131:33" pos:end="131:39"><name pos:start="131:33" pos:end="131:39">ldither</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
