<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16377.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">test_visitor_in_errors</name><parameter_list pos:start="1:35" pos:end="2:54">(<parameter pos:start="1:36" pos:end="1:61"><decl pos:start="1:36" pos:end="1:61"><type pos:start="1:36" pos:end="1:61"><name pos:start="1:36" pos:end="1:55">TestInputVisitorData</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,
                                   <parameter pos:start="2:36" pos:end="2:53"><decl pos:start="2:36" pos:end="2:53"><type pos:start="2:36" pos:end="2:53"><specifier pos:start="2:36" pos:end="2:40">const</specifier> <name pos:start="2:42" pos:end="2:45">void</name> <modifier pos:start="2:47" pos:end="2:47">*</modifier></type><name pos:start="2:48" pos:end="2:53">unused</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="4:5" pos:end="16:15">
    <decl_stmt pos:start="4:5" pos:end="4:25"><decl pos:start="4:5" pos:end="4:24"><type pos:start="4:5" pos:end="4:16"><name pos:start="4:5" pos:end="4:14">TestStruct</name> <modifier pos:start="4:16" pos:end="4:16">*</modifier></type><name pos:start="4:17" pos:end="4:17">p</name> <init pos:start="4:19" pos:end="4:24">= <expr pos:start="4:21" pos:end="4:24"><name pos:start="4:21" pos:end="4:24">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">err</name> <init pos:start="5:16" pos:end="5:21">= <expr pos:start="5:18" pos:end="5:21"><name pos:start="5:18" pos:end="5:21">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:15"><decl pos:start="6:5" pos:end="6:14"><type pos:start="6:5" pos:end="6:13"><name pos:start="6:5" pos:end="6:11">Visitor</name> <modifier pos:start="6:13" pos:end="6:13">*</modifier></type><name pos:start="6:14" pos:end="6:14">v</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">strList</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">q</name> <init pos:start="7:16" pos:end="7:21">= <expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:25"><decl pos:start="8:5" pos:end="8:24"><type pos:start="8:5" pos:end="8:16"><name pos:start="8:5" pos:end="8:14">UserDefTwo</name> <modifier pos:start="8:16" pos:end="8:16">*</modifier></type><name pos:start="8:17" pos:end="8:17">r</name> <init pos:start="8:19" pos:end="8:24">= <expr pos:start="8:21" pos:end="8:24"><name pos:start="8:21" pos:end="8:24">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">WrapAlternate</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:20">s</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="11:51"><expr pos:start="10:5" pos:end="11:50"><name pos:start="10:5" pos:end="10:5">v</name> <operator pos:start="10:7" pos:end="10:7">=</operator> <call pos:start="10:9" pos:end="11:50"><name pos:start="10:9" pos:end="10:31">visitor_input_test_init</name><argument_list pos:start="10:32" pos:end="11:50">(<argument pos:start="10:33" pos:end="10:36"><expr pos:start="10:33" pos:end="10:36"><name pos:start="10:33" pos:end="10:36">data</name></expr></argument>, <argument pos:start="10:39" pos:end="11:49"><expr pos:start="10:39" pos:end="11:49"><literal type="string" pos:start="10:39" pos:end="10:78">"{ 'integer': false, 'boolean': 'foo', "</literal>
                                <literal type="string" pos:start="11:33" pos:end="11:49">"'string': -42 }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:45"><expr pos:start="12:5" pos:end="12:44"><call pos:start="12:5" pos:end="12:44"><name pos:start="12:5" pos:end="12:25">visit_type_TestStruct</name><argument_list pos:start="12:26" pos:end="12:44">(<argument pos:start="12:27" pos:end="12:27"><expr pos:start="12:27" pos:end="12:27"><name pos:start="12:27" pos:end="12:27">v</name></expr></argument>, <argument pos:start="12:30" pos:end="12:33"><expr pos:start="12:30" pos:end="12:33"><name pos:start="12:30" pos:end="12:33">NULL</name></expr></argument>, <argument pos:start="12:36" pos:end="12:37"><expr pos:start="12:36" pos:end="12:37"><operator pos:start="12:36" pos:end="12:36">&amp;</operator><name pos:start="12:37" pos:end="12:37">p</name></expr></argument>, <argument pos:start="12:40" pos:end="12:43"><expr pos:start="12:40" pos:end="12:43"><operator pos:start="12:40" pos:end="12:40">&amp;</operator><name pos:start="12:41" pos:end="12:43">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><call pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">g_assert</name><argument_list pos:start="13:13" pos:end="13:16">(<argument pos:start="13:14" pos:end="13:15"><expr pos:start="13:14" pos:end="13:15"><operator pos:start="13:14" pos:end="13:14">!</operator><name pos:start="13:15" pos:end="13:15">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:66"><expr pos:start="14:5" pos:end="14:65"><name pos:start="14:5" pos:end="14:5">v</name> <operator pos:start="14:7" pos:end="14:7">=</operator> <call pos:start="14:9" pos:end="14:65"><name pos:start="14:9" pos:end="14:31">visitor_input_test_init</name><argument_list pos:start="14:32" pos:end="14:65">(<argument pos:start="14:33" pos:end="14:36"><expr pos:start="14:33" pos:end="14:36"><name pos:start="14:33" pos:end="14:36">data</name></expr></argument>, <argument pos:start="14:39" pos:end="14:64"><expr pos:start="14:39" pos:end="14:64"><literal type="string" pos:start="14:39" pos:end="14:64">"[ '1', '2', false, '3' ]"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><call pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:22">visit_type_strList</name><argument_list pos:start="15:23" pos:end="15:41">(<argument pos:start="15:24" pos:end="15:24"><expr pos:start="15:24" pos:end="15:24"><name pos:start="15:24" pos:end="15:24">v</name></expr></argument>, <argument pos:start="15:27" pos:end="15:30"><expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">NULL</name></expr></argument>, <argument pos:start="15:33" pos:end="15:34"><expr pos:start="15:33" pos:end="15:34"><operator pos:start="15:33" pos:end="15:33">&amp;</operator><name pos:start="15:34" pos:end="15:34">q</name></expr></argument>, <argument pos:start="15:37" pos:end="15:40"><expr pos:start="15:37" pos:end="15:40"><operator pos:start="15:37" pos:end="15:37">&amp;</operator><name pos:start="15:38" pos:end="15:40">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:15"><expr pos:start="16:5" pos:end="16:14"><call pos:start="16:5" pos:end="16:14"><name pos:start="16:5" pos:end="16:10">assert</name><argument_list pos:start="16:11" pos:end="16:14">(<argument pos:start="16:12" pos:end="16:13"><expr pos:start="16:12" pos:end="16:13"><operator pos:start="16:12" pos:end="16:12">!</operator><name pos:start="16:13" pos:end="16:13">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function></unit>
