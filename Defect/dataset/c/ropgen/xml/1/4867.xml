<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4867.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">get_bitmap</name><parameter_list pos:start="1:22" pos:end="1:57">(<parameter pos:start="1:23" pos:end="1:33"><decl pos:start="1:23" pos:end="1:33"><type pos:start="1:23" pos:end="1:33"><name pos:start="1:23" pos:end="1:30">QEMUFile</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">f</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:43"><decl pos:start="1:36" pos:end="1:43"><type pos:start="1:36" pos:end="1:43"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">pv</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:56"><decl pos:start="1:46" pos:end="1:56"><type pos:start="1:46" pos:end="1:56"><name pos:start="1:46" pos:end="1:51">size_t</name></type> <name pos:start="1:53" pos:end="1:56">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:17">long</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">bmp</name> <init pos:start="5:24" pos:end="5:27">= <expr pos:start="5:26" pos:end="5:27"><name pos:start="5:26" pos:end="5:27">pv</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">idx</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>

    <for pos:start="9:5" pos:end="21:5">for <control pos:start="9:9" pos:end="9:44">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:39"><expr pos:start="9:17" pos:end="9:38"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <call pos:start="9:21" pos:end="9:38"><name pos:start="9:21" pos:end="9:32">BITS_TO_U64S</name><argument_list pos:start="9:33" pos:end="9:38">(<argument pos:start="9:34" pos:end="9:37"><expr pos:start="9:34" pos:end="9:37"><name pos:start="9:34" pos:end="9:37">size</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="9:41" pos:end="9:43"><expr pos:start="9:41" pos:end="9:43"><name pos:start="9:41" pos:end="9:41">i</name><operator pos:start="9:42" pos:end="9:43">++</operator></expr></incr>)</control> <block pos:start="9:46" pos:end="21:5">{<block_content pos:start="11:9" pos:end="19:9">

        <decl_stmt pos:start="11:9" pos:end="11:38"><decl pos:start="11:9" pos:end="11:37"><type pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16">uint64_t</name></type> <name pos:start="11:18" pos:end="11:18">w</name> <init pos:start="11:20" pos:end="11:37">= <expr pos:start="11:22" pos:end="11:37"><call pos:start="11:22" pos:end="11:37"><name pos:start="11:22" pos:end="11:34">qemu_get_be64</name><argument_list pos:start="11:35" pos:end="11:37">(<argument pos:start="11:36" pos:end="11:36"><expr pos:start="11:36" pos:end="11:36"><name pos:start="11:36" pos:end="11:36">f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:23"><expr pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:11">bmp</name><index pos:start="13:12" pos:end="13:18">[<expr pos:start="13:13" pos:end="13:17"><name pos:start="13:13" pos:end="13:15">idx</name><operator pos:start="13:16" pos:end="13:17">++</operator></expr>]</index></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <name pos:start="13:22" pos:end="13:22">w</name></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:68">(<expr pos:start="15:13" pos:end="15:67">sizeof<operator pos:start="15:19" pos:end="15:19">(</operator><name pos:start="15:20" pos:end="15:27">unsigned</name> <name pos:start="15:29" pos:end="15:32">long</name><operator pos:start="15:33" pos:end="15:33">)</operator> <operator pos:start="15:35" pos:end="15:36">==</operator> <literal type="number" pos:start="15:38" pos:end="15:38">4</literal> <operator pos:start="15:40" pos:end="15:41">&amp;&amp;</operator> <name pos:start="15:43" pos:end="15:45">idx</name> <operator pos:start="15:47" pos:end="15:47">&lt;</operator> <call pos:start="15:49" pos:end="15:67"><name pos:start="15:49" pos:end="15:61">BITS_TO_LONGS</name><argument_list pos:start="15:62" pos:end="15:67">(<argument pos:start="15:63" pos:end="15:66"><expr pos:start="15:63" pos:end="15:66"><name pos:start="15:63" pos:end="15:66">size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:70" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:33">

            <expr_stmt pos:start="17:13" pos:end="17:33"><expr pos:start="17:13" pos:end="17:32"><name pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:15">bmp</name><index pos:start="17:16" pos:end="17:22">[<expr pos:start="17:17" pos:end="17:21"><name pos:start="17:17" pos:end="17:19">idx</name><operator pos:start="17:20" pos:end="17:21">++</operator></expr>]</index></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <name pos:start="17:26" pos:end="17:26">w</name> <operator pos:start="17:28" pos:end="17:29">&gt;&gt;</operator> <literal type="number" pos:start="17:31" pos:end="17:32">32</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="23:5" pos:end="23:13">return <expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
