<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16757.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">mxf_read_source_package</name><parameter_list pos:start="1:35" pos:end="1:90">(<parameter pos:start="1:36" pos:end="1:44"><decl pos:start="1:36" pos:end="1:44"><type pos:start="1:36" pos:end="1:44"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">arg</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:57">AVIOContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">pb</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:70"><decl pos:start="1:64" pos:end="1:70"><type pos:start="1:64" pos:end="1:70"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:70">tag</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:80"><decl pos:start="1:73" pos:end="1:80"><type pos:start="1:73" pos:end="1:80"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:80">size</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:89"><decl pos:start="1:83" pos:end="1:89"><type pos:start="1:83" pos:end="1:89"><name pos:start="1:83" pos:end="1:85">UID</name></type> <name pos:start="1:87" pos:end="1:89">uid</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFPackage</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:23">package</name> <init pos:start="5:25" pos:end="5:29">= <expr pos:start="5:27" pos:end="5:29"><name pos:start="5:27" pos:end="5:29">arg</name></expr></init></decl>;</decl_stmt>

    <switch pos:start="7:5" pos:end="45:5">switch<condition pos:start="7:11" pos:end="7:15">(<expr pos:start="7:12" pos:end="7:14"><name pos:start="7:12" pos:end="7:14">tag</name></expr>)</condition> <block pos:start="7:17" pos:end="45:5">{<block_content pos:start="9:5" pos:end="43:14">

    <case pos:start="9:5" pos:end="9:16">case <expr pos:start="9:10" pos:end="9:15"><literal type="number" pos:start="9:10" pos:end="9:15">0x4403</literal></expr>:</case>

        <expr_stmt pos:start="11:9" pos:end="11:46"><expr pos:start="11:9" pos:end="11:45"><name pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:15">package</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:29">tracks_count</name></name> <operator pos:start="11:31" pos:end="11:31">=</operator> <call pos:start="11:33" pos:end="11:45"><name pos:start="11:33" pos:end="11:41">avio_rb32</name><argument_list pos:start="11:42" pos:end="11:45">(<argument pos:start="11:43" pos:end="11:44"><expr pos:start="11:43" pos:end="11:44"><name pos:start="11:43" pos:end="11:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="13:9" pos:end="15:22"><if pos:start="13:9" pos:end="15:22">if <condition pos:start="13:12" pos:end="13:60">(<expr pos:start="13:13" pos:end="13:59"><name pos:start="13:13" pos:end="13:33"><name pos:start="13:13" pos:end="13:19">package</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:33">tracks_count</name></name> <operator pos:start="13:35" pos:end="13:36">&gt;=</operator> <name pos:start="13:38" pos:end="13:45">UINT_MAX</name> <operator pos:start="13:47" pos:end="13:47">/</operator> <sizeof pos:start="13:49" pos:end="13:59">sizeof<argument_list pos:start="13:55" pos:end="13:59">(<argument pos:start="13:56" pos:end="13:58"><expr pos:start="13:56" pos:end="13:58"><name pos:start="13:56" pos:end="13:58">UID</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:22"><block_content pos:start="15:13" pos:end="15:22">

            <return pos:start="15:13" pos:end="15:22">return <expr pos:start="15:20" pos:end="15:21"><operator pos:start="15:20" pos:end="15:20">-</operator><literal type="number" pos:start="15:21" pos:end="15:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:78"><expr pos:start="17:9" pos:end="17:77"><name pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:15">package</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:28">tracks_refs</name></name> <operator pos:start="17:30" pos:end="17:30">=</operator> <call pos:start="17:32" pos:end="17:77"><name pos:start="17:32" pos:end="17:40">av_malloc</name><argument_list pos:start="17:41" pos:end="17:77">(<argument pos:start="17:42" pos:end="17:76"><expr pos:start="17:42" pos:end="17:76"><name pos:start="17:42" pos:end="17:62"><name pos:start="17:42" pos:end="17:48">package</name><operator pos:start="17:49" pos:end="17:50">-&gt;</operator><name pos:start="17:51" pos:end="17:62">tracks_count</name></name> <operator pos:start="17:64" pos:end="17:64">*</operator> <sizeof pos:start="17:66" pos:end="17:76">sizeof<argument_list pos:start="17:72" pos:end="17:76">(<argument pos:start="17:73" pos:end="17:75"><expr pos:start="17:73" pos:end="17:75"><name pos:start="17:73" pos:end="17:75">UID</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="21:22"><if pos:start="19:9" pos:end="21:22">if <condition pos:start="19:12" pos:end="19:34">(<expr pos:start="19:13" pos:end="19:33"><operator pos:start="19:13" pos:end="19:13">!</operator><name pos:start="19:14" pos:end="19:33"><name pos:start="19:14" pos:end="19:20">package</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:33">tracks_refs</name></name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:22"><block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><call pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:17">avio_skip</name><argument_list pos:start="23:18" pos:end="23:24">(<argument pos:start="23:19" pos:end="23:20"><expr pos:start="23:19" pos:end="23:20"><name pos:start="23:19" pos:end="23:20">pb</name></expr></argument>, <argument pos:start="23:23" pos:end="23:23"><expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:27" pos:end="23:85">/* useless size of objects, always 16 according to specs */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:92"><expr pos:start="25:9" pos:end="25:91"><call pos:start="25:9" pos:end="25:91"><name pos:start="25:9" pos:end="25:17">avio_read</name><argument_list pos:start="25:18" pos:end="25:91">(<argument pos:start="25:19" pos:end="25:20"><expr pos:start="25:19" pos:end="25:20"><name pos:start="25:19" pos:end="25:20">pb</name></expr></argument>, <argument pos:start="25:23" pos:end="25:53"><expr pos:start="25:23" pos:end="25:53"><operator pos:start="25:23" pos:end="25:23">(</operator><name pos:start="25:24" pos:end="25:30">uint8_t</name> <operator pos:start="25:32" pos:end="25:32">*</operator><operator pos:start="25:33" pos:end="25:33">)</operator><name pos:start="25:34" pos:end="25:53"><name pos:start="25:34" pos:end="25:40">package</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:53">tracks_refs</name></name></expr></argument>, <argument pos:start="25:56" pos:end="25:90"><expr pos:start="25:56" pos:end="25:90"><name pos:start="25:56" pos:end="25:76"><name pos:start="25:56" pos:end="25:62">package</name><operator pos:start="25:63" pos:end="25:64">-&gt;</operator><name pos:start="25:65" pos:end="25:76">tracks_count</name></name> <operator pos:start="25:78" pos:end="25:78">*</operator> <sizeof pos:start="25:80" pos:end="25:90">sizeof<argument_list pos:start="25:86" pos:end="25:90">(<argument pos:start="25:87" pos:end="25:89"><expr pos:start="25:87" pos:end="25:89"><name pos:start="25:87" pos:end="25:89">UID</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:16">case <expr pos:start="29:10" pos:end="29:15"><literal type="number" pos:start="29:10" pos:end="29:15">0x4401</literal></expr>:</case>

        <comment type="block" pos:start="31:9" pos:end="31:42">/* UMID, only get last 16 bytes */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:26"><expr pos:start="33:9" pos:end="33:25"><call pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:17">avio_skip</name><argument_list pos:start="33:18" pos:end="33:25">(<argument pos:start="33:19" pos:end="33:20"><expr pos:start="33:19" pos:end="33:20"><name pos:start="33:19" pos:end="33:20">pb</name></expr></argument>, <argument pos:start="33:23" pos:end="33:24"><expr pos:start="33:23" pos:end="33:24"><literal type="number" pos:start="33:23" pos:end="33:24">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:48"><expr pos:start="35:9" pos:end="35:47"><call pos:start="35:9" pos:end="35:47"><name pos:start="35:9" pos:end="35:17">avio_read</name><argument_list pos:start="35:18" pos:end="35:47">(<argument pos:start="35:19" pos:end="35:20"><expr pos:start="35:19" pos:end="35:20"><name pos:start="35:19" pos:end="35:20">pb</name></expr></argument>, <argument pos:start="35:23" pos:end="35:42"><expr pos:start="35:23" pos:end="35:42"><name pos:start="35:23" pos:end="35:42"><name pos:start="35:23" pos:end="35:29">package</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:42">package_uid</name></name></expr></argument>, <argument pos:start="35:45" pos:end="35:46"><expr pos:start="35:45" pos:end="35:46"><literal type="number" pos:start="35:45" pos:end="35:46">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:16">case <expr pos:start="39:10" pos:end="39:15"><literal type="number" pos:start="39:10" pos:end="39:15">0x4701</literal></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:51"><expr pos:start="41:9" pos:end="41:50"><call pos:start="41:9" pos:end="41:50"><name pos:start="41:9" pos:end="41:17">avio_read</name><argument_list pos:start="41:18" pos:end="41:50">(<argument pos:start="41:19" pos:end="41:20"><expr pos:start="41:19" pos:end="41:20"><name pos:start="41:19" pos:end="41:20">pb</name></expr></argument>, <argument pos:start="41:23" pos:end="41:45"><expr pos:start="41:23" pos:end="41:45"><name pos:start="41:23" pos:end="41:45"><name pos:start="41:23" pos:end="41:29">package</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:45">descriptor_ref</name></name></expr></argument>, <argument pos:start="41:48" pos:end="41:49"><expr pos:start="41:48" pos:end="41:49"><literal type="number" pos:start="41:48" pos:end="41:49">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
