<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14678.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">svq1_decode_delta_block</name><parameter_list pos:start="1:35" pos:end="7:77">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">avctx</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:73"><decl pos:start="1:59" pos:end="1:73"><type pos:start="1:59" pos:end="1:73"><name pos:start="1:59" pos:end="1:68">DSPContext</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">dsp</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:56"><decl pos:start="3:36" pos:end="3:56"><type pos:start="3:36" pos:end="3:56"><name pos:start="3:36" pos:end="3:48">GetBitContext</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:56">bitbuf</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:51"><decl pos:start="5:36" pos:end="5:51"><type pos:start="5:36" pos:end="5:51"><name pos:start="5:36" pos:end="5:42">uint8_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:51">current</name></decl></parameter>, <parameter pos:start="5:54" pos:end="5:70"><decl pos:start="5:54" pos:end="5:70"><type pos:start="5:54" pos:end="5:70"><name pos:start="5:54" pos:end="5:60">uint8_t</name> <modifier pos:start="5:62" pos:end="5:62">*</modifier></type><name pos:start="5:63" pos:end="5:70">previous</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:44"><decl pos:start="7:36" pos:end="7:44"><type pos:start="7:36" pos:end="7:44"><name pos:start="7:36" pos:end="7:38">int</name></type> <name pos:start="7:40" pos:end="7:44">pitch</name></decl></parameter>, <parameter pos:start="7:47" pos:end="7:62"><decl pos:start="7:47" pos:end="7:62"><type pos:start="7:47" pos:end="7:62"><name pos:start="7:47" pos:end="7:54">svq1_pmv</name> <modifier pos:start="7:56" pos:end="7:56">*</modifier></type><name pos:start="7:57" pos:end="7:62">motion</name></decl></parameter>, <parameter pos:start="7:65" pos:end="7:69"><decl pos:start="7:65" pos:end="7:69"><type pos:start="7:65" pos:end="7:69"><name pos:start="7:65" pos:end="7:67">int</name></type> <name pos:start="7:69" pos:end="7:69">x</name></decl></parameter>, <parameter pos:start="7:72" pos:end="7:76"><decl pos:start="7:72" pos:end="7:76"><type pos:start="7:72" pos:end="7:76"><name pos:start="7:72" pos:end="7:74">int</name></type> <name pos:start="7:76" pos:end="7:76">y</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="109:1">{<block_content pos:start="11:5" pos:end="107:18">

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:23">block_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">result</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:24">/* get block type */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:63"><expr pos:start="19:5" pos:end="19:62"><name pos:start="19:5" pos:end="19:14">block_type</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:62"><name pos:start="19:18" pos:end="19:25">get_vlc2</name><argument_list pos:start="19:26" pos:end="19:62">(<argument pos:start="19:27" pos:end="19:32"><expr pos:start="19:27" pos:end="19:32"><name pos:start="19:27" pos:end="19:32">bitbuf</name></expr></argument>, <argument pos:start="19:35" pos:end="19:55"><expr pos:start="19:35" pos:end="19:55"><name pos:start="19:35" pos:end="19:55"><name pos:start="19:35" pos:end="19:49">svq1_block_type</name><operator pos:start="19:50" pos:end="19:50">.</operator><name pos:start="19:51" pos:end="19:55">table</name></name></expr></argument>, <argument pos:start="19:58" pos:end="19:58"><expr pos:start="19:58" pos:end="19:58"><literal type="number" pos:start="19:58" pos:end="19:58">2</literal></expr></argument>, <argument pos:start="19:61" pos:end="19:61"><expr pos:start="19:61" pos:end="19:61"><literal type="number" pos:start="19:61" pos:end="19:61">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:30">/* reset motion vectors */</comment>

    <if_stmt pos:start="25:5" pos:end="39:5"><if pos:start="25:5" pos:end="39:5">if <condition pos:start="25:8" pos:end="25:72">(<expr pos:start="25:9" pos:end="25:71"><name pos:start="25:9" pos:end="25:18">block_type</name> <operator pos:start="25:20" pos:end="25:21">==</operator> <name pos:start="25:23" pos:end="25:37">SVQ1_BLOCK_SKIP</name> <operator pos:start="25:39" pos:end="25:40">||</operator> <name pos:start="25:42" pos:end="25:51">block_type</name> <operator pos:start="25:53" pos:end="25:54">==</operator> <name pos:start="25:56" pos:end="25:71">SVQ1_BLOCK_INTRA</name></expr>)</condition> <block pos:start="25:74" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:32">

        <expr_stmt pos:start="27:9" pos:end="37:32"><expr pos:start="27:9" pos:end="37:31"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:14">motion</name><index pos:start="27:15" pos:end="27:17">[<expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>]</index></name><operator pos:start="27:18" pos:end="27:18">.</operator><name pos:start="27:19" pos:end="27:19">x</name>         <operator pos:start="27:29" pos:end="27:29">=</operator>

        <name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:14">motion</name><index pos:start="29:15" pos:end="29:17">[<expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>]</index></name><operator pos:start="29:18" pos:end="29:18">.</operator><name pos:start="29:19" pos:end="29:19">y</name>         <operator pos:start="29:29" pos:end="29:29">=</operator>

        <name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:14">motion</name><index pos:start="31:15" pos:end="31:25">[<expr pos:start="31:16" pos:end="31:24"><name pos:start="31:16" pos:end="31:16">x</name> <operator pos:start="31:18" pos:end="31:18">/</operator> <literal type="number" pos:start="31:20" pos:end="31:22">8</literal> <operator pos:start="31:22" pos:end="31:22">+</operator> <literal type="number" pos:start="31:24" pos:end="31:24">2</literal></expr>]</index></name><operator pos:start="31:26" pos:end="31:26">.</operator><name pos:start="31:27" pos:end="31:27">x</name> <operator pos:start="31:29" pos:end="31:29">=</operator>

        <name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:14">motion</name><index pos:start="33:15" pos:end="33:25">[<expr pos:start="33:16" pos:end="33:24"><name pos:start="33:16" pos:end="33:16">x</name> <operator pos:start="33:18" pos:end="33:18">/</operator> <literal type="number" pos:start="33:20" pos:end="33:22">8</literal> <operator pos:start="33:22" pos:end="33:22">+</operator> <literal type="number" pos:start="33:24" pos:end="33:24">2</literal></expr>]</index></name><operator pos:start="33:26" pos:end="33:26">.</operator><name pos:start="33:27" pos:end="33:27">y</name> <operator pos:start="33:29" pos:end="33:29">=</operator>

        <name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:14">motion</name><index pos:start="35:15" pos:end="35:25">[<expr pos:start="35:16" pos:end="35:24"><name pos:start="35:16" pos:end="35:16">x</name> <operator pos:start="35:18" pos:end="35:18">/</operator> <literal type="number" pos:start="35:20" pos:end="35:22">8</literal> <operator pos:start="35:22" pos:end="35:22">+</operator> <literal type="number" pos:start="35:24" pos:end="35:24">3</literal></expr>]</index></name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:27">x</name> <operator pos:start="35:29" pos:end="35:29">=</operator>

        <name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:14">motion</name><index pos:start="37:15" pos:end="37:25">[<expr pos:start="37:16" pos:end="37:24"><name pos:start="37:16" pos:end="37:16">x</name> <operator pos:start="37:18" pos:end="37:18">/</operator> <literal type="number" pos:start="37:20" pos:end="37:22">8</literal> <operator pos:start="37:22" pos:end="37:22">+</operator> <literal type="number" pos:start="37:24" pos:end="37:24">3</literal></expr>]</index></name><operator pos:start="37:26" pos:end="37:26">.</operator><name pos:start="37:27" pos:end="37:27">y</name> <operator pos:start="37:29" pos:end="37:29">=</operator> <literal type="number" pos:start="37:31" pos:end="37:31">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="43:5" pos:end="103:5">switch <condition pos:start="43:12" pos:end="43:23">(<expr pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:22">block_type</name></expr>)</condition> <block pos:start="43:25" pos:end="103:5">{<block_content pos:start="45:5" pos:end="101:14">

    <case pos:start="45:5" pos:end="45:25">case <expr pos:start="45:10" pos:end="45:24"><name pos:start="45:10" pos:end="45:24">SVQ1_BLOCK_SKIP</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:56"><expr pos:start="47:9" pos:end="47:55"><call pos:start="47:9" pos:end="47:55"><name pos:start="47:9" pos:end="47:23">svq1_skip_block</name><argument_list pos:start="47:24" pos:end="47:55">(<argument pos:start="47:25" pos:end="47:31"><expr pos:start="47:25" pos:end="47:31"><name pos:start="47:25" pos:end="47:31">current</name></expr></argument>, <argument pos:start="47:34" pos:end="47:41"><expr pos:start="47:34" pos:end="47:41"><name pos:start="47:34" pos:end="47:41">previous</name></expr></argument>, <argument pos:start="47:44" pos:end="47:48"><expr pos:start="47:44" pos:end="47:48"><name pos:start="47:44" pos:end="47:48">pitch</name></expr></argument>, <argument pos:start="47:51" pos:end="47:51"><expr pos:start="47:51" pos:end="47:51"><name pos:start="47:51" pos:end="47:51">x</name></expr></argument>, <argument pos:start="47:54" pos:end="47:54"><expr pos:start="47:54" pos:end="47:54"><name pos:start="47:54" pos:end="47:54">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>



    <case pos:start="53:5" pos:end="53:26">case <expr pos:start="53:10" pos:end="53:25"><name pos:start="53:10" pos:end="53:25">SVQ1_BLOCK_INTER</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="57:62"><expr pos:start="55:9" pos:end="57:61"><name pos:start="55:9" pos:end="55:14">result</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <call pos:start="55:18" pos:end="57:61"><name pos:start="55:18" pos:end="55:40">svq1_motion_inter_block</name><argument_list pos:start="55:41" pos:end="57:61">(<argument pos:start="55:42" pos:end="55:44"><expr pos:start="55:42" pos:end="55:44"><name pos:start="55:42" pos:end="55:44">dsp</name></expr></argument>, <argument pos:start="55:47" pos:end="55:52"><expr pos:start="55:47" pos:end="55:52"><name pos:start="55:47" pos:end="55:52">bitbuf</name></expr></argument>, <argument pos:start="55:55" pos:end="55:61"><expr pos:start="55:55" pos:end="55:61"><name pos:start="55:55" pos:end="55:61">current</name></expr></argument>, <argument pos:start="55:64" pos:end="55:71"><expr pos:start="55:64" pos:end="55:71"><name pos:start="55:64" pos:end="55:71">previous</name></expr></argument>,

                                         <argument pos:start="57:42" pos:end="57:46"><expr pos:start="57:42" pos:end="57:46"><name pos:start="57:42" pos:end="57:46">pitch</name></expr></argument>, <argument pos:start="57:49" pos:end="57:54"><expr pos:start="57:49" pos:end="57:54"><name pos:start="57:49" pos:end="57:54">motion</name></expr></argument>, <argument pos:start="57:57" pos:end="57:57"><expr pos:start="57:57" pos:end="57:57"><name pos:start="57:57" pos:end="57:57">x</name></expr></argument>, <argument pos:start="57:60" pos:end="57:60"><expr pos:start="57:60" pos:end="57:60"><name pos:start="57:60" pos:end="57:60">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:24">(<expr pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:18">result</name> <operator pos:start="61:20" pos:end="61:21">!=</operator> <literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr>)</condition> <block pos:start="61:26" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:18">

            <expr_stmt pos:start="63:13" pos:end="63:76"><expr pos:start="63:13" pos:end="63:75"><call pos:start="63:13" pos:end="63:75"><name pos:start="63:13" pos:end="63:19">av_dlog</name><argument_list pos:start="63:20" pos:end="63:75">(<argument pos:start="63:21" pos:end="63:25"><expr pos:start="63:21" pos:end="63:25"><name pos:start="63:21" pos:end="63:25">avctx</name></expr></argument>, <argument pos:start="63:28" pos:end="63:66"><expr pos:start="63:28" pos:end="63:66"><literal type="string" pos:start="63:28" pos:end="63:66">"Error in svq1_motion_inter_block %i\n"</literal></expr></argument>, <argument pos:start="63:69" pos:end="63:74"><expr pos:start="63:69" pos:end="63:74"><name pos:start="63:69" pos:end="63:74">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:69"><expr pos:start="69:9" pos:end="69:68"><name pos:start="69:9" pos:end="69:14">result</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <call pos:start="69:18" pos:end="69:68"><name pos:start="69:18" pos:end="69:44">svq1_decode_block_non_intra</name><argument_list pos:start="69:45" pos:end="69:68">(<argument pos:start="69:46" pos:end="69:51"><expr pos:start="69:46" pos:end="69:51"><name pos:start="69:46" pos:end="69:51">bitbuf</name></expr></argument>, <argument pos:start="69:54" pos:end="69:60"><expr pos:start="69:54" pos:end="69:60"><name pos:start="69:54" pos:end="69:60">current</name></expr></argument>, <argument pos:start="69:63" pos:end="69:67"><expr pos:start="69:63" pos:end="69:67"><name pos:start="69:63" pos:end="69:67">pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>



    <case pos:start="75:5" pos:end="75:29">case <expr pos:start="75:10" pos:end="75:28"><name pos:start="75:10" pos:end="75:28">SVQ1_BLOCK_INTER_4V</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="79:65"><expr pos:start="77:9" pos:end="79:64"><name pos:start="77:9" pos:end="77:14">result</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <call pos:start="77:18" pos:end="79:64"><name pos:start="77:18" pos:end="77:43">svq1_motion_inter_4v_block</name><argument_list pos:start="77:44" pos:end="79:64">(<argument pos:start="77:45" pos:end="77:47"><expr pos:start="77:45" pos:end="77:47"><name pos:start="77:45" pos:end="77:47">dsp</name></expr></argument>, <argument pos:start="77:50" pos:end="77:55"><expr pos:start="77:50" pos:end="77:55"><name pos:start="77:50" pos:end="77:55">bitbuf</name></expr></argument>, <argument pos:start="77:58" pos:end="77:64"><expr pos:start="77:58" pos:end="77:64"><name pos:start="77:58" pos:end="77:64">current</name></expr></argument>, <argument pos:start="77:67" pos:end="77:74"><expr pos:start="77:67" pos:end="77:74"><name pos:start="77:67" pos:end="77:74">previous</name></expr></argument>,

                                            <argument pos:start="79:45" pos:end="79:49"><expr pos:start="79:45" pos:end="79:49"><name pos:start="79:45" pos:end="79:49">pitch</name></expr></argument>, <argument pos:start="79:52" pos:end="79:57"><expr pos:start="79:52" pos:end="79:57"><name pos:start="79:52" pos:end="79:57">motion</name></expr></argument>, <argument pos:start="79:60" pos:end="79:60"><expr pos:start="79:60" pos:end="79:60"><name pos:start="79:60" pos:end="79:60">x</name></expr></argument>, <argument pos:start="79:63" pos:end="79:63"><expr pos:start="79:63" pos:end="79:63"><name pos:start="79:63" pos:end="79:63">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="89:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:24">(<expr pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:18">result</name> <operator pos:start="83:20" pos:end="83:21">!=</operator> <literal type="number" pos:start="83:23" pos:end="83:23">0</literal></expr>)</condition> <block pos:start="83:26" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:18">

            <expr_stmt pos:start="85:13" pos:end="85:79"><expr pos:start="85:13" pos:end="85:78"><call pos:start="85:13" pos:end="85:78"><name pos:start="85:13" pos:end="85:19">av_dlog</name><argument_list pos:start="85:20" pos:end="85:78">(<argument pos:start="85:21" pos:end="85:25"><expr pos:start="85:21" pos:end="85:25"><name pos:start="85:21" pos:end="85:25">avctx</name></expr></argument>, <argument pos:start="85:28" pos:end="85:69"><expr pos:start="85:28" pos:end="85:69"><literal type="string" pos:start="85:28" pos:end="85:69">"Error in svq1_motion_inter_4v_block %i\n"</literal></expr></argument>, <argument pos:start="85:72" pos:end="85:77"><expr pos:start="85:72" pos:end="85:77"><name pos:start="85:72" pos:end="85:77">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:69"><expr pos:start="91:9" pos:end="91:68"><name pos:start="91:9" pos:end="91:14">result</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <call pos:start="91:18" pos:end="91:68"><name pos:start="91:18" pos:end="91:44">svq1_decode_block_non_intra</name><argument_list pos:start="91:45" pos:end="91:68">(<argument pos:start="91:46" pos:end="91:51"><expr pos:start="91:46" pos:end="91:51"><name pos:start="91:46" pos:end="91:51">bitbuf</name></expr></argument>, <argument pos:start="91:54" pos:end="91:60"><expr pos:start="91:54" pos:end="91:60"><name pos:start="91:54" pos:end="91:60">current</name></expr></argument>, <argument pos:start="91:63" pos:end="91:67"><expr pos:start="91:63" pos:end="91:67"><name pos:start="91:63" pos:end="91:67">pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>



    <case pos:start="97:5" pos:end="97:26">case <expr pos:start="97:10" pos:end="97:25"><name pos:start="97:10" pos:end="97:25">SVQ1_BLOCK_INTRA</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:65"><expr pos:start="99:9" pos:end="99:64"><name pos:start="99:9" pos:end="99:14">result</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <call pos:start="99:18" pos:end="99:64"><name pos:start="99:18" pos:end="99:40">svq1_decode_block_intra</name><argument_list pos:start="99:41" pos:end="99:64">(<argument pos:start="99:42" pos:end="99:47"><expr pos:start="99:42" pos:end="99:47"><name pos:start="99:42" pos:end="99:47">bitbuf</name></expr></argument>, <argument pos:start="99:50" pos:end="99:56"><expr pos:start="99:50" pos:end="99:56"><name pos:start="99:50" pos:end="99:56">current</name></expr></argument>, <argument pos:start="99:59" pos:end="99:63"><expr pos:start="99:59" pos:end="99:63"><name pos:start="99:59" pos:end="99:63">pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="107:5" pos:end="107:18">return <expr pos:start="107:12" pos:end="107:17"><name pos:start="107:12" pos:end="107:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
