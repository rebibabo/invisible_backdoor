<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24361.c" pos:tabs="8"><function pos:start="1:1" pos:end="809:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">ff_mjpeg_decode_frame</name><parameter_list pos:start="1:26" pos:end="3:42">(<parameter pos:start="1:27" pos:end="1:47"><decl pos:start="1:27" pos:end="1:47"><type pos:start="1:27" pos:end="1:47"><name pos:start="1:27" pos:end="1:40">AVCodecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">avctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:59"><decl pos:start="1:50" pos:end="1:59"><type pos:start="1:50" pos:end="1:59"><name pos:start="1:50" pos:end="1:53">void</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">data</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:75"><decl pos:start="1:62" pos:end="1:75"><type pos:start="1:62" pos:end="1:75"><name pos:start="1:62" pos:end="1:64">int</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:75">got_frame</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:41"><decl pos:start="3:27" pos:end="3:41"><type pos:start="3:27" pos:end="3:41"><name pos:start="3:27" pos:end="3:34">AVPacket</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:41">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="809:1">{<block_content pos:start="7:5" pos:end="807:25">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:11">AVFrame</name>     <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:22">frame</name> <init pos:start="7:24" pos:end="7:29">= <expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name>       <init pos:start="11:24" pos:end="11:36">= <expr pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:30">avpkt</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:45"><decl pos:start="13:5" pos:end="13:44"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:22">MJpegDecodeContext</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:25">s</name> <init pos:start="13:27" pos:end="13:44">= <expr pos:start="13:29" pos:end="13:44"><name pos:start="13:29" pos:end="13:44"><name pos:start="13:29" pos:end="13:33">avctx</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:26">buf_end</name></decl>, <decl pos:start="15:29" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:19"><modifier pos:start="15:29" pos:end="15:29">*</modifier></type><name pos:start="15:30" pos:end="15:36">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:36"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:36">unescaped_buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:14">hshift</name></decl>, <decl pos:start="19:17" pos:end="19:22"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:17" pos:end="19:22">vshift</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:26"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:26">unescaped_buf_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:18">start_code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>, <decl pos:start="25:12" pos:end="25:16"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:12" pos:end="25:16">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:16"><decl pos:start="27:5" pos:end="27:15"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name> <init pos:start="27:13" pos:end="27:15">= <expr pos:start="27:15" pos:end="27:15"><literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:16"><decl pos:start="29:5" pos:end="29:15"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:15">is16bit</name></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><call pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:16">av_dict_free</name><argument_list pos:start="33:17" pos:end="33:35">(<argument pos:start="33:18" pos:end="33:34"><expr pos:start="33:18" pos:end="33:34"><operator pos:start="33:18" pos:end="33:18">&amp;</operator><name pos:start="33:19" pos:end="33:34"><name pos:start="33:19" pos:end="33:19">s</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:34">exif_metadata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><call pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:12">av_freep</name><argument_list pos:start="35:13" pos:end="35:26">(<argument pos:start="35:14" pos:end="35:25"><expr pos:start="35:14" pos:end="35:25"><operator pos:start="35:14" pos:end="35:14">&amp;</operator><name pos:start="35:15" pos:end="35:25"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:25">stereo3d</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:22">adobe_transform</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <operator pos:start="37:26" pos:end="37:26">-</operator><literal type="number" pos:start="37:27" pos:end="37:27">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:18"><expr pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:11">buf_ptr</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:17">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:11">buf_end</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:17">buf</name> <operator pos:start="43:19" pos:end="43:19">+</operator> <name pos:start="43:21" pos:end="43:28">buf_size</name></expr>;</expr_stmt>

    <while pos:start="45:5" pos:end="417:5">while <condition pos:start="45:11" pos:end="45:29">(<expr pos:start="45:12" pos:end="45:28"><name pos:start="45:12" pos:end="45:18">buf_ptr</name> <operator pos:start="45:20" pos:end="45:20">&lt;</operator> <name pos:start="45:22" pos:end="45:28">buf_end</name></expr>)</condition> <block pos:start="45:31" pos:end="417:5">{<block_content pos:start="49:9" pos:end="415:73">

        <comment type="block" pos:start="47:9" pos:end="47:36">/* find start next marker */</comment>

        <expr_stmt pos:start="49:9" pos:end="53:63"><expr pos:start="49:9" pos:end="53:62"><name pos:start="49:9" pos:end="49:18">start_code</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="53:62"><name pos:start="49:22" pos:end="49:41">ff_mjpeg_find_marker</name><argument_list pos:start="49:42" pos:end="53:62">(<argument pos:start="49:43" pos:end="49:43"><expr pos:start="49:43" pos:end="49:43"><name pos:start="49:43" pos:end="49:43">s</name></expr></argument>, <argument pos:start="49:46" pos:end="49:53"><expr pos:start="49:46" pos:end="49:53"><operator pos:start="49:46" pos:end="49:46">&amp;</operator><name pos:start="49:47" pos:end="49:53">buf_ptr</name></expr></argument>, <argument pos:start="49:56" pos:end="49:62"><expr pos:start="49:56" pos:end="49:62"><name pos:start="49:56" pos:end="49:62">buf_end</name></expr></argument>,

                                          <argument pos:start="51:43" pos:end="51:60"><expr pos:start="51:43" pos:end="51:60"><operator pos:start="51:43" pos:end="51:43">&amp;</operator><name pos:start="51:44" pos:end="51:60">unescaped_buf_ptr</name></expr></argument>,

                                          <argument pos:start="53:43" pos:end="53:61"><expr pos:start="53:43" pos:end="53:61"><operator pos:start="53:43" pos:end="53:43">&amp;</operator><name pos:start="53:44" pos:end="53:61">unescaped_buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="55:9" pos:end="55:17">/* EOF */</comment>

        <if_stmt pos:start="57:9" pos:end="71:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:27">(<expr pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:22">start_code</name> <operator pos:start="57:24" pos:end="57:24">&lt;</operator> <literal type="number" pos:start="57:26" pos:end="57:26">0</literal></expr>)</condition> <block pos:start="57:29" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:18">

            <break pos:start="59:13" pos:end="59:18">break;</break>

        </block_content>}</block></if> <if type="elseif" pos:start="61:11" pos:end="71:9">else if <condition pos:start="61:19" pos:end="61:52">(<expr pos:start="61:20" pos:end="61:51"><name pos:start="61:20" pos:end="61:37">unescaped_buf_size</name> <operator pos:start="61:39" pos:end="61:39">&gt;</operator> <name pos:start="61:41" pos:end="61:47">INT_MAX</name> <operator pos:start="61:49" pos:end="61:49">/</operator> <literal type="number" pos:start="61:51" pos:end="61:51">8</literal></expr>)</condition> <block pos:start="61:54" pos:end="71:9">{<block_content pos:start="63:13" pos:end="69:39">

            <expr_stmt pos:start="63:13" pos:end="67:61"><expr pos:start="63:13" pos:end="67:60"><call pos:start="63:13" pos:end="67:60"><name pos:start="63:13" pos:end="63:18">av_log</name><argument_list pos:start="63:19" pos:end="67:60">(<argument pos:start="63:20" pos:end="63:24"><expr pos:start="63:20" pos:end="63:24"><name pos:start="63:20" pos:end="63:24">avctx</name></expr></argument>, <argument pos:start="63:27" pos:end="63:38"><expr pos:start="63:27" pos:end="63:38"><name pos:start="63:27" pos:end="63:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="65:20" pos:end="65:71"><expr pos:start="65:20" pos:end="65:71"><literal type="string" pos:start="65:20" pos:end="65:71">"MJPEG packet 0x%x too big (%d/%d), corrupt data?\n"</literal></expr></argument>,

                   <argument pos:start="67:20" pos:end="67:29"><expr pos:start="67:20" pos:end="67:29"><name pos:start="67:20" pos:end="67:29">start_code</name></expr></argument>, <argument pos:start="67:32" pos:end="67:49"><expr pos:start="67:32" pos:end="67:49"><name pos:start="67:32" pos:end="67:49">unescaped_buf_size</name></expr></argument>, <argument pos:start="67:52" pos:end="67:59"><expr pos:start="67:52" pos:end="67:59"><name pos:start="67:52" pos:end="67:59">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:39">return <expr pos:start="69:20" pos:end="69:38"><name pos:start="69:20" pos:end="69:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="75:46"><expr pos:start="73:9" pos:end="75:45"><call pos:start="73:9" pos:end="75:45"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="75:45">(<argument pos:start="73:16" pos:end="73:20"><expr pos:start="73:16" pos:end="73:20"><name pos:start="73:16" pos:end="73:20">avctx</name></expr></argument>, <argument pos:start="73:23" pos:end="73:34"><expr pos:start="73:23" pos:end="73:34"><name pos:start="73:23" pos:end="73:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="73:37" pos:end="73:88"><expr pos:start="73:37" pos:end="73:88"><literal type="string" pos:start="73:37" pos:end="73:67">"marker=%x avail_size_in_buf=%"</literal><name pos:start="73:68" pos:end="73:84">PTRDIFF_SPECIFIER</name><literal type="string" pos:start="73:85" pos:end="73:88">"\n"</literal></expr></argument>,

               <argument pos:start="75:16" pos:end="75:25"><expr pos:start="75:16" pos:end="75:25"><name pos:start="75:16" pos:end="75:25">start_code</name></expr></argument>, <argument pos:start="75:28" pos:end="75:44"><expr pos:start="75:28" pos:end="75:44"><name pos:start="75:28" pos:end="75:34">buf_end</name> <operator pos:start="75:36" pos:end="75:36">-</operator> <name pos:start="75:38" pos:end="75:44">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:76"><expr pos:start="79:9" pos:end="79:75"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:75"><name pos:start="79:15" pos:end="79:28">init_get_bits8</name><argument_list pos:start="79:29" pos:end="79:75">(<argument pos:start="79:30" pos:end="79:35"><expr pos:start="79:30" pos:end="79:35"><operator pos:start="79:30" pos:end="79:30">&amp;</operator><name pos:start="79:31" pos:end="79:35"><name pos:start="79:31" pos:end="79:31">s</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:35">gb</name></name></expr></argument>, <argument pos:start="79:38" pos:end="79:54"><expr pos:start="79:38" pos:end="79:54"><name pos:start="79:38" pos:end="79:54">unescaped_buf_ptr</name></expr></argument>, <argument pos:start="79:57" pos:end="79:74"><expr pos:start="79:57" pos:end="79:74"><name pos:start="79:57" pos:end="79:74">unescaped_buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="89:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:20">(<expr pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:15">ret</name> <operator pos:start="83:17" pos:end="83:17">&lt;</operator> <literal type="number" pos:start="83:19" pos:end="83:19">0</literal></expr>)</condition> <block pos:start="83:22" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:22">

            <expr_stmt pos:start="85:13" pos:end="85:60"><expr pos:start="85:13" pos:end="85:59"><call pos:start="85:13" pos:end="85:59"><name pos:start="85:13" pos:end="85:18">av_log</name><argument_list pos:start="85:19" pos:end="85:59">(<argument pos:start="85:20" pos:end="85:24"><expr pos:start="85:20" pos:end="85:24"><name pos:start="85:20" pos:end="85:24">avctx</name></expr></argument>, <argument pos:start="85:27" pos:end="85:38"><expr pos:start="85:27" pos:end="85:38"><name pos:start="85:27" pos:end="85:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:41" pos:end="85:58"><expr pos:start="85:41" pos:end="85:58"><literal type="string" pos:start="85:41" pos:end="85:58">"invalid buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="87:13" pos:end="87:22">goto <name pos:start="87:18" pos:end="87:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:35"><expr pos:start="93:9" pos:end="93:34"><name pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:21">start_code</name></name> <operator pos:start="93:23" pos:end="93:23">=</operator> <name pos:start="93:25" pos:end="93:34">start_code</name></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="97:71"><if pos:start="95:9" pos:end="97:71">if <condition pos:start="95:12" pos:end="95:49">(<expr pos:start="95:13" pos:end="95:48"><name pos:start="95:13" pos:end="95:27"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:20">avctx</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:27">debug</name></name> <operator pos:start="95:29" pos:end="95:29">&amp;</operator> <name pos:start="95:31" pos:end="95:48">FF_DEBUG_STARTCODE</name></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:71"><block_content pos:start="97:13" pos:end="97:71">

            <expr_stmt pos:start="97:13" pos:end="97:71"><expr pos:start="97:13" pos:end="97:70"><call pos:start="97:13" pos:end="97:70"><name pos:start="97:13" pos:end="97:18">av_log</name><argument_list pos:start="97:19" pos:end="97:70">(<argument pos:start="97:20" pos:end="97:24"><expr pos:start="97:20" pos:end="97:24"><name pos:start="97:20" pos:end="97:24">avctx</name></expr></argument>, <argument pos:start="97:27" pos:end="97:38"><expr pos:start="97:27" pos:end="97:38"><name pos:start="97:27" pos:end="97:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="97:41" pos:end="97:57"><expr pos:start="97:41" pos:end="97:57"><literal type="string" pos:start="97:41" pos:end="97:57">"startcode: %X\n"</literal></expr></argument>, <argument pos:start="97:60" pos:end="97:69"><expr pos:start="97:60" pos:end="97:69"><name pos:start="97:60" pos:end="97:69">start_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="101:9" pos:end="101:29">/* process markers */</comment>

        <if_stmt pos:start="103:9" pos:end="119:32"><if pos:start="103:9" pos:end="107:62">if <condition pos:start="103:12" pos:end="103:53">(<expr pos:start="103:13" pos:end="103:52"><name pos:start="103:13" pos:end="103:22">start_code</name> <operator pos:start="103:24" pos:end="103:25">&gt;=</operator> <literal type="number" pos:start="103:27" pos:end="103:30">0xd0</literal> <operator pos:start="103:32" pos:end="103:33">&amp;&amp;</operator> <name pos:start="103:35" pos:end="103:44">start_code</name> <operator pos:start="103:46" pos:end="103:47">&lt;=</operator> <literal type="number" pos:start="103:49" pos:end="103:52">0xd7</literal></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="107:62"><block_content pos:start="105:13" pos:end="107:62">

            <expr_stmt pos:start="105:13" pos:end="107:62"><expr pos:start="105:13" pos:end="107:61"><call pos:start="105:13" pos:end="107:61"><name pos:start="105:13" pos:end="105:18">av_log</name><argument_list pos:start="105:19" pos:end="107:61">(<argument pos:start="105:20" pos:end="105:24"><expr pos:start="105:20" pos:end="105:24"><name pos:start="105:20" pos:end="105:24">avctx</name></expr></argument>, <argument pos:start="105:27" pos:end="105:38"><expr pos:start="105:27" pos:end="105:38"><name pos:start="105:27" pos:end="105:38">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="107:20" pos:end="107:41"><expr pos:start="107:20" pos:end="107:41"><literal type="string" pos:start="107:20" pos:end="107:41">"restart marker: %d\n"</literal></expr></argument>, <argument pos:start="107:44" pos:end="107:60"><expr pos:start="107:44" pos:end="107:60"><name pos:start="107:44" pos:end="107:53">start_code</name> <operator pos:start="107:55" pos:end="107:55">&amp;</operator> <literal type="number" pos:start="107:57" pos:end="107:60">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <comment type="block" pos:start="109:13" pos:end="109:28">/* APP fields */</comment>

        <if type="elseif" pos:start="111:9" pos:end="113:32">else if <condition pos:start="111:17" pos:end="111:59">(<expr pos:start="111:18" pos:end="111:58"><name pos:start="111:18" pos:end="111:27">start_code</name> <operator pos:start="111:29" pos:end="111:30">&gt;=</operator> <name pos:start="111:32" pos:end="111:35">APP0</name> <operator pos:start="111:37" pos:end="111:38">&amp;&amp;</operator> <name pos:start="111:40" pos:end="111:49">start_code</name> <operator pos:start="111:51" pos:end="111:52">&lt;=</operator> <name pos:start="111:54" pos:end="111:58">APP15</name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:32"><block_content pos:start="113:13" pos:end="113:32">

            <expr_stmt pos:start="113:13" pos:end="113:32"><expr pos:start="113:13" pos:end="113:31"><call pos:start="113:13" pos:end="113:31"><name pos:start="113:13" pos:end="113:28">mjpeg_decode_app</name><argument_list pos:start="113:29" pos:end="113:31">(<argument pos:start="113:30" pos:end="113:30"><expr pos:start="113:30" pos:end="113:30"><name pos:start="113:30" pos:end="113:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <comment type="block" pos:start="115:13" pos:end="115:25">/* Comment */</comment>

        <if type="elseif" pos:start="117:9" pos:end="119:32">else if <condition pos:start="117:17" pos:end="117:35">(<expr pos:start="117:18" pos:end="117:34"><name pos:start="117:18" pos:end="117:27">start_code</name> <operator pos:start="117:29" pos:end="117:30">==</operator> <name pos:start="117:32" pos:end="117:34">COM</name></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:32"><block_content pos:start="119:13" pos:end="119:32">

            <expr_stmt pos:start="119:13" pos:end="119:32"><expr pos:start="119:13" pos:end="119:31"><call pos:start="119:13" pos:end="119:31"><name pos:start="119:13" pos:end="119:28">mjpeg_decode_com</name><argument_list pos:start="119:29" pos:end="119:31">(<argument pos:start="119:30" pos:end="119:30"><expr pos:start="119:30" pos:end="119:30"><name pos:start="119:30" pos:end="119:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:17"><expr pos:start="123:9" pos:end="123:16"><name pos:start="123:9" pos:end="123:11">ret</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <operator pos:start="123:15" pos:end="123:15">-</operator><literal type="number" pos:start="123:16" pos:end="123:16">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="127:9" pos:end="135:9"><if pos:start="127:9" pos:end="135:9">if <condition pos:start="127:12" pos:end="129:55">(<expr pos:start="127:13" pos:end="129:54"><operator pos:start="127:13" pos:end="127:13">!</operator><name pos:start="127:14" pos:end="127:34">CONFIG_JPEGLS_DECODER</name> <operator pos:start="127:36" pos:end="127:37">&amp;&amp;</operator>

            <operator pos:start="129:13" pos:end="129:13">(</operator><name pos:start="129:14" pos:end="129:23">start_code</name> <operator pos:start="129:25" pos:end="129:26">==</operator> <name pos:start="129:28" pos:end="129:32">SOF48</name> <operator pos:start="129:34" pos:end="129:35">||</operator> <name pos:start="129:37" pos:end="129:46">start_code</name> <operator pos:start="129:48" pos:end="129:49">==</operator> <name pos:start="129:51" pos:end="129:53">LSE</name><operator pos:start="129:54" pos:end="129:54">)</operator></expr>)</condition> <block pos:start="129:57" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:35">

            <expr_stmt pos:start="131:13" pos:end="131:74"><expr pos:start="131:13" pos:end="131:73"><call pos:start="131:13" pos:end="131:73"><name pos:start="131:13" pos:end="131:18">av_log</name><argument_list pos:start="131:19" pos:end="131:73">(<argument pos:start="131:20" pos:end="131:24"><expr pos:start="131:20" pos:end="131:24"><name pos:start="131:20" pos:end="131:24">avctx</name></expr></argument>, <argument pos:start="131:27" pos:end="131:38"><expr pos:start="131:27" pos:end="131:38"><name pos:start="131:27" pos:end="131:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="131:41" pos:end="131:72"><expr pos:start="131:41" pos:end="131:72"><literal type="string" pos:start="131:41" pos:end="131:72">"JPEG-LS support not enabled.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="133:13" pos:end="133:35">return <expr pos:start="133:20" pos:end="133:34"><call pos:start="133:20" pos:end="133:34"><name pos:start="133:20" pos:end="133:26">AVERROR</name><argument_list pos:start="133:27" pos:end="133:34">(<argument pos:start="133:28" pos:end="133:33"><expr pos:start="133:28" pos:end="133:33"><name pos:start="133:28" pos:end="133:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="139:9" pos:end="167:9"><if pos:start="139:9" pos:end="167:9">if <condition pos:start="139:12" pos:end="139:47">(<expr pos:start="139:13" pos:end="139:46"><name pos:start="139:13" pos:end="139:29"><name pos:start="139:13" pos:end="139:17">avctx</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:29">skip_frame</name></name> <operator pos:start="139:31" pos:end="139:32">==</operator> <name pos:start="139:34" pos:end="139:46">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="139:49" pos:end="167:9">{<block_content pos:start="141:13" pos:end="165:13">

            <switch pos:start="141:13" pos:end="165:13">switch<condition pos:start="141:19" pos:end="141:30">(<expr pos:start="141:20" pos:end="141:29"><name pos:start="141:20" pos:end="141:29">start_code</name></expr>)</condition> <block pos:start="141:32" pos:end="165:13">{<block_content pos:start="143:13" pos:end="163:26">

            <case pos:start="143:13" pos:end="143:22">case <expr pos:start="143:18" pos:end="143:21"><name pos:start="143:18" pos:end="143:21">SOF0</name></expr>:</case>

            <case pos:start="145:13" pos:end="145:22">case <expr pos:start="145:18" pos:end="145:21"><name pos:start="145:18" pos:end="145:21">SOF1</name></expr>:</case>

            <case pos:start="147:13" pos:end="147:22">case <expr pos:start="147:18" pos:end="147:21"><name pos:start="147:18" pos:end="147:21">SOF2</name></expr>:</case>

            <case pos:start="149:13" pos:end="149:22">case <expr pos:start="149:18" pos:end="149:21"><name pos:start="149:18" pos:end="149:21">SOF3</name></expr>:</case>

            <case pos:start="151:13" pos:end="151:23">case <expr pos:start="151:18" pos:end="151:22"><name pos:start="151:18" pos:end="151:22">SOF48</name></expr>:</case>

            <case pos:start="153:13" pos:end="153:21">case <expr pos:start="153:18" pos:end="153:20"><name pos:start="153:18" pos:end="153:20">SOI</name></expr>:</case>

            <case pos:start="155:13" pos:end="155:21">case <expr pos:start="155:18" pos:end="155:20"><name pos:start="155:18" pos:end="155:20">SOS</name></expr>:</case>

            <case pos:start="157:13" pos:end="157:21">case <expr pos:start="157:18" pos:end="157:20"><name pos:start="157:18" pos:end="157:20">EOI</name></expr>:</case>

                <break pos:start="159:17" pos:end="159:22">break;</break>

            <default pos:start="161:13" pos:end="161:20">default:</default>

                <goto pos:start="163:17" pos:end="163:26">goto <name pos:start="163:22" pos:end="163:25">skip</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="171:9" pos:end="401:9">switch <condition pos:start="171:16" pos:end="171:27">(<expr pos:start="171:17" pos:end="171:26"><name pos:start="171:17" pos:end="171:26">start_code</name></expr>)</condition> <block pos:start="171:29" pos:end="401:9">{<block_content pos:start="173:9" pos:end="399:18">

        <case pos:start="173:9" pos:end="173:17">case <expr pos:start="173:14" pos:end="173:16"><name pos:start="173:14" pos:end="173:16">SOI</name></expr>:</case>

            <expr_stmt pos:start="175:13" pos:end="175:36"><expr pos:start="175:13" pos:end="175:35"><name pos:start="175:13" pos:end="175:31"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:31">restart_interval</name></name> <operator pos:start="175:33" pos:end="175:33">=</operator> <literal type="number" pos:start="175:35" pos:end="175:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:36"><expr pos:start="177:13" pos:end="177:35"><name pos:start="177:13" pos:end="177:28"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:28">restart_count</name></name>    <operator pos:start="177:33" pos:end="177:33">=</operator> <literal type="number" pos:start="177:35" pos:end="177:35">0</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="179:13" pos:end="179:38">/* nothing to do on SOI */</comment>

            <break pos:start="181:13" pos:end="181:18">break;</break>

        <case pos:start="183:9" pos:end="183:17">case <expr pos:start="183:14" pos:end="183:16"><name pos:start="183:14" pos:end="183:16">DQT</name></expr>:</case>

            <expr_stmt pos:start="185:13" pos:end="185:35"><expr pos:start="185:13" pos:end="185:34"><call pos:start="185:13" pos:end="185:34"><name pos:start="185:13" pos:end="185:31">ff_mjpeg_decode_dqt</name><argument_list pos:start="185:32" pos:end="185:34">(<argument pos:start="185:33" pos:end="185:33"><expr pos:start="185:33" pos:end="185:33"><name pos:start="185:33" pos:end="185:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="187:13" pos:end="187:18">break;</break>

        <case pos:start="189:9" pos:end="189:17">case <expr pos:start="189:14" pos:end="189:16"><name pos:start="189:14" pos:end="189:16">DHT</name></expr>:</case>

            <if_stmt pos:start="191:13" pos:end="197:13"><if pos:start="191:13" pos:end="197:13">if <condition pos:start="191:16" pos:end="191:51">(<expr pos:start="191:17" pos:end="191:50"><operator pos:start="191:17" pos:end="191:17">(</operator><name pos:start="191:18" pos:end="191:20">ret</name> <operator pos:start="191:22" pos:end="191:22">=</operator> <call pos:start="191:24" pos:end="191:45"><name pos:start="191:24" pos:end="191:42">ff_mjpeg_decode_dht</name><argument_list pos:start="191:43" pos:end="191:45">(<argument pos:start="191:44" pos:end="191:44"><expr pos:start="191:44" pos:end="191:44"><name pos:start="191:44" pos:end="191:44">s</name></expr></argument>)</argument_list></call><operator pos:start="191:46" pos:end="191:46">)</operator> <operator pos:start="191:48" pos:end="191:48">&lt;</operator> <literal type="number" pos:start="191:50" pos:end="191:50">0</literal></expr>)</condition> <block pos:start="191:53" pos:end="197:13">{<block_content pos:start="193:17" pos:end="195:26">

                <expr_stmt pos:start="193:17" pos:end="193:76"><expr pos:start="193:17" pos:end="193:75"><call pos:start="193:17" pos:end="193:75"><name pos:start="193:17" pos:end="193:22">av_log</name><argument_list pos:start="193:23" pos:end="193:75">(<argument pos:start="193:24" pos:end="193:28"><expr pos:start="193:24" pos:end="193:28"><name pos:start="193:24" pos:end="193:28">avctx</name></expr></argument>, <argument pos:start="193:31" pos:end="193:42"><expr pos:start="193:31" pos:end="193:42"><name pos:start="193:31" pos:end="193:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="193:45" pos:end="193:74"><expr pos:start="193:45" pos:end="193:74"><literal type="string" pos:start="193:45" pos:end="193:74">"huffman table decode error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="195:17" pos:end="195:26">goto <name pos:start="195:22" pos:end="195:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="199:13" pos:end="199:18">break;</break>

        <case pos:start="201:9" pos:end="201:18">case <expr pos:start="201:14" pos:end="201:17"><name pos:start="201:14" pos:end="201:17">SOF0</name></expr>:</case>

        <case pos:start="203:9" pos:end="203:18">case <expr pos:start="203:14" pos:end="203:17"><name pos:start="203:14" pos:end="203:17">SOF1</name></expr>:</case>

            <expr_stmt pos:start="205:13" pos:end="205:31"><expr pos:start="205:13" pos:end="205:30"><name pos:start="205:13" pos:end="205:23"><name pos:start="205:13" pos:end="205:13">s</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:23">lossless</name></name>    <operator pos:start="205:28" pos:end="205:28">=</operator> <literal type="number" pos:start="205:30" pos:end="205:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:31"><expr pos:start="207:13" pos:end="207:30"><name pos:start="207:13" pos:end="207:17"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:17">ls</name></name>          <operator pos:start="207:28" pos:end="207:28">=</operator> <literal type="number" pos:start="207:30" pos:end="207:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:31"><expr pos:start="209:13" pos:end="209:30"><name pos:start="209:13" pos:end="209:26"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:26">progressive</name></name> <operator pos:start="209:28" pos:end="209:28">=</operator> <literal type="number" pos:start="209:30" pos:end="209:30">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="211:13" pos:end="213:26"><if pos:start="211:13" pos:end="213:26">if <condition pos:start="211:16" pos:end="211:51">(<expr pos:start="211:17" pos:end="211:50"><operator pos:start="211:17" pos:end="211:17">(</operator><name pos:start="211:18" pos:end="211:20">ret</name> <operator pos:start="211:22" pos:end="211:22">=</operator> <call pos:start="211:24" pos:end="211:45"><name pos:start="211:24" pos:end="211:42">ff_mjpeg_decode_sof</name><argument_list pos:start="211:43" pos:end="211:45">(<argument pos:start="211:44" pos:end="211:44"><expr pos:start="211:44" pos:end="211:44"><name pos:start="211:44" pos:end="211:44">s</name></expr></argument>)</argument_list></call><operator pos:start="211:46" pos:end="211:46">)</operator> <operator pos:start="211:48" pos:end="211:48">&lt;</operator> <literal type="number" pos:start="211:50" pos:end="211:50">0</literal></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:26"><block_content pos:start="213:17" pos:end="213:26">

                <goto pos:start="213:17" pos:end="213:26">goto <name pos:start="213:22" pos:end="213:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="215:13" pos:end="215:18">break;</break>

        <case pos:start="217:9" pos:end="217:18">case <expr pos:start="217:14" pos:end="217:17"><name pos:start="217:14" pos:end="217:17">SOF2</name></expr>:</case>

            <expr_stmt pos:start="219:13" pos:end="219:31"><expr pos:start="219:13" pos:end="219:30"><name pos:start="219:13" pos:end="219:23"><name pos:start="219:13" pos:end="219:13">s</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:23">lossless</name></name>    <operator pos:start="219:28" pos:end="219:28">=</operator> <literal type="number" pos:start="219:30" pos:end="219:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:31"><expr pos:start="221:13" pos:end="221:30"><name pos:start="221:13" pos:end="221:17"><name pos:start="221:13" pos:end="221:13">s</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:17">ls</name></name>          <operator pos:start="221:28" pos:end="221:28">=</operator> <literal type="number" pos:start="221:30" pos:end="221:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:31"><expr pos:start="223:13" pos:end="223:30"><name pos:start="223:13" pos:end="223:26"><name pos:start="223:13" pos:end="223:13">s</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:26">progressive</name></name> <operator pos:start="223:28" pos:end="223:28">=</operator> <literal type="number" pos:start="223:30" pos:end="223:30">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="225:13" pos:end="227:26"><if pos:start="225:13" pos:end="227:26">if <condition pos:start="225:16" pos:end="225:51">(<expr pos:start="225:17" pos:end="225:50"><operator pos:start="225:17" pos:end="225:17">(</operator><name pos:start="225:18" pos:end="225:20">ret</name> <operator pos:start="225:22" pos:end="225:22">=</operator> <call pos:start="225:24" pos:end="225:45"><name pos:start="225:24" pos:end="225:42">ff_mjpeg_decode_sof</name><argument_list pos:start="225:43" pos:end="225:45">(<argument pos:start="225:44" pos:end="225:44"><expr pos:start="225:44" pos:end="225:44"><name pos:start="225:44" pos:end="225:44">s</name></expr></argument>)</argument_list></call><operator pos:start="225:46" pos:end="225:46">)</operator> <operator pos:start="225:48" pos:end="225:48">&lt;</operator> <literal type="number" pos:start="225:50" pos:end="225:50">0</literal></expr>)</condition><block type="pseudo" pos:start="227:17" pos:end="227:26"><block_content pos:start="227:17" pos:end="227:26">

                <goto pos:start="227:17" pos:end="227:26">goto <name pos:start="227:22" pos:end="227:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="229:13" pos:end="229:18">break;</break>

        <case pos:start="231:9" pos:end="231:18">case <expr pos:start="231:14" pos:end="231:17"><name pos:start="231:14" pos:end="231:17">SOF3</name></expr>:</case>

            <expr_stmt pos:start="233:13" pos:end="233:63"><expr pos:start="233:13" pos:end="233:62"><name pos:start="233:13" pos:end="233:32"><name pos:start="233:13" pos:end="233:13">s</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:20">avctx</name><operator pos:start="233:21" pos:end="233:22">-&gt;</operator><name pos:start="233:23" pos:end="233:32">properties</name></name> <operator pos:start="233:34" pos:end="233:35">|=</operator> <name pos:start="233:37" pos:end="233:62">FF_CODEC_PROPERTY_LOSSLESS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:31"><expr pos:start="235:13" pos:end="235:30"><name pos:start="235:13" pos:end="235:23"><name pos:start="235:13" pos:end="235:13">s</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:23">lossless</name></name>    <operator pos:start="235:28" pos:end="235:28">=</operator> <literal type="number" pos:start="235:30" pos:end="235:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:31"><expr pos:start="237:13" pos:end="237:30"><name pos:start="237:13" pos:end="237:17"><name pos:start="237:13" pos:end="237:13">s</name><operator pos:start="237:14" pos:end="237:15">-&gt;</operator><name pos:start="237:16" pos:end="237:17">ls</name></name>          <operator pos:start="237:28" pos:end="237:28">=</operator> <literal type="number" pos:start="237:30" pos:end="237:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:31"><expr pos:start="239:13" pos:end="239:30"><name pos:start="239:13" pos:end="239:26"><name pos:start="239:13" pos:end="239:13">s</name><operator pos:start="239:14" pos:end="239:15">-&gt;</operator><name pos:start="239:16" pos:end="239:26">progressive</name></name> <operator pos:start="239:28" pos:end="239:28">=</operator> <literal type="number" pos:start="239:30" pos:end="239:30">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="241:13" pos:end="243:26"><if pos:start="241:13" pos:end="243:26">if <condition pos:start="241:16" pos:end="241:51">(<expr pos:start="241:17" pos:end="241:50"><operator pos:start="241:17" pos:end="241:17">(</operator><name pos:start="241:18" pos:end="241:20">ret</name> <operator pos:start="241:22" pos:end="241:22">=</operator> <call pos:start="241:24" pos:end="241:45"><name pos:start="241:24" pos:end="241:42">ff_mjpeg_decode_sof</name><argument_list pos:start="241:43" pos:end="241:45">(<argument pos:start="241:44" pos:end="241:44"><expr pos:start="241:44" pos:end="241:44"><name pos:start="241:44" pos:end="241:44">s</name></expr></argument>)</argument_list></call><operator pos:start="241:46" pos:end="241:46">)</operator> <operator pos:start="241:48" pos:end="241:48">&lt;</operator> <literal type="number" pos:start="241:50" pos:end="241:50">0</literal></expr>)</condition><block type="pseudo" pos:start="243:17" pos:end="243:26"><block_content pos:start="243:17" pos:end="243:26">

                <goto pos:start="243:17" pos:end="243:26">goto <name pos:start="243:22" pos:end="243:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="245:13" pos:end="245:18">break;</break>

        <case pos:start="247:9" pos:end="247:19">case <expr pos:start="247:14" pos:end="247:18"><name pos:start="247:14" pos:end="247:18">SOF48</name></expr>:</case>

            <expr_stmt pos:start="249:13" pos:end="249:63"><expr pos:start="249:13" pos:end="249:62"><name pos:start="249:13" pos:end="249:32"><name pos:start="249:13" pos:end="249:13">s</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:20">avctx</name><operator pos:start="249:21" pos:end="249:22">-&gt;</operator><name pos:start="249:23" pos:end="249:32">properties</name></name> <operator pos:start="249:34" pos:end="249:35">|=</operator> <name pos:start="249:37" pos:end="249:62">FF_CODEC_PROPERTY_LOSSLESS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:31"><expr pos:start="251:13" pos:end="251:30"><name pos:start="251:13" pos:end="251:23"><name pos:start="251:13" pos:end="251:13">s</name><operator pos:start="251:14" pos:end="251:15">-&gt;</operator><name pos:start="251:16" pos:end="251:23">lossless</name></name>    <operator pos:start="251:28" pos:end="251:28">=</operator> <literal type="number" pos:start="251:30" pos:end="251:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:31"><expr pos:start="253:13" pos:end="253:30"><name pos:start="253:13" pos:end="253:17"><name pos:start="253:13" pos:end="253:13">s</name><operator pos:start="253:14" pos:end="253:15">-&gt;</operator><name pos:start="253:16" pos:end="253:17">ls</name></name>          <operator pos:start="253:28" pos:end="253:28">=</operator> <literal type="number" pos:start="253:30" pos:end="253:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:31"><expr pos:start="255:13" pos:end="255:30"><name pos:start="255:13" pos:end="255:26"><name pos:start="255:13" pos:end="255:13">s</name><operator pos:start="255:14" pos:end="255:15">-&gt;</operator><name pos:start="255:16" pos:end="255:26">progressive</name></name> <operator pos:start="255:28" pos:end="255:28">=</operator> <literal type="number" pos:start="255:30" pos:end="255:30">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="257:13" pos:end="259:26"><if pos:start="257:13" pos:end="259:26">if <condition pos:start="257:16" pos:end="257:51">(<expr pos:start="257:17" pos:end="257:50"><operator pos:start="257:17" pos:end="257:17">(</operator><name pos:start="257:18" pos:end="257:20">ret</name> <operator pos:start="257:22" pos:end="257:22">=</operator> <call pos:start="257:24" pos:end="257:45"><name pos:start="257:24" pos:end="257:42">ff_mjpeg_decode_sof</name><argument_list pos:start="257:43" pos:end="257:45">(<argument pos:start="257:44" pos:end="257:44"><expr pos:start="257:44" pos:end="257:44"><name pos:start="257:44" pos:end="257:44">s</name></expr></argument>)</argument_list></call><operator pos:start="257:46" pos:end="257:46">)</operator> <operator pos:start="257:48" pos:end="257:48">&lt;</operator> <literal type="number" pos:start="257:50" pos:end="257:50">0</literal></expr>)</condition><block type="pseudo" pos:start="259:17" pos:end="259:26"><block_content pos:start="259:17" pos:end="259:26">

                <goto pos:start="259:17" pos:end="259:26">goto <name pos:start="259:22" pos:end="259:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="261:13" pos:end="261:18">break;</break>

        <case pos:start="263:9" pos:end="263:17">case <expr pos:start="263:14" pos:end="263:16"><name pos:start="263:14" pos:end="263:16">LSE</name></expr>:</case>

            <if_stmt pos:start="265:13" pos:end="269:26"><if pos:start="265:13" pos:end="269:26">if <condition pos:start="265:16" pos:end="267:52">(<expr pos:start="265:17" pos:end="267:51"><operator pos:start="265:17" pos:end="265:17">!</operator><name pos:start="265:18" pos:end="265:38">CONFIG_JPEGLS_DECODER</name> <operator pos:start="265:40" pos:end="265:41">||</operator>

                <operator pos:start="267:17" pos:end="267:17">(</operator><name pos:start="267:18" pos:end="267:20">ret</name> <operator pos:start="267:22" pos:end="267:22">=</operator> <call pos:start="267:24" pos:end="267:46"><name pos:start="267:24" pos:end="267:43">ff_jpegls_decode_lse</name><argument_list pos:start="267:44" pos:end="267:46">(<argument pos:start="267:45" pos:end="267:45"><expr pos:start="267:45" pos:end="267:45"><name pos:start="267:45" pos:end="267:45">s</name></expr></argument>)</argument_list></call><operator pos:start="267:47" pos:end="267:47">)</operator> <operator pos:start="267:49" pos:end="267:49">&lt;</operator> <literal type="number" pos:start="267:51" pos:end="267:51">0</literal></expr>)</condition><block type="pseudo" pos:start="269:17" pos:end="269:26"><block_content pos:start="269:17" pos:end="269:26">

                <goto pos:start="269:17" pos:end="269:26">goto <name pos:start="269:22" pos:end="269:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="271:13" pos:end="271:18">break;</break>

        <case pos:start="273:9" pos:end="273:17">case <expr pos:start="273:14" pos:end="273:16"><name pos:start="273:14" pos:end="273:16">EOI</name></expr>:</case>

<label pos:start="275:1" pos:end="275:11"><name pos:start="275:1" pos:end="275:10">eoi_parser</name>:</label>

            <expr_stmt pos:start="277:13" pos:end="277:28"><expr pos:start="277:13" pos:end="277:27"><name pos:start="277:13" pos:end="277:23"><name pos:start="277:13" pos:end="277:13">s</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:23">cur_scan</name></name> <operator pos:start="277:25" pos:end="277:25">=</operator> <literal type="number" pos:start="277:27" pos:end="277:27">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="279:13" pos:end="287:13"><if pos:start="279:13" pos:end="287:13">if <condition pos:start="279:16" pos:end="279:32">(<expr pos:start="279:17" pos:end="279:31"><operator pos:start="279:17" pos:end="279:17">!</operator><name pos:start="279:18" pos:end="279:31"><name pos:start="279:18" pos:end="279:18">s</name><operator pos:start="279:19" pos:end="279:20">-&gt;</operator><name pos:start="279:21" pos:end="279:31">got_picture</name></name></expr>)</condition> <block pos:start="279:34" pos:end="287:13">{<block_content pos:start="281:17" pos:end="285:22">

                <expr_stmt pos:start="281:17" pos:end="283:63"><expr pos:start="281:17" pos:end="283:62"><call pos:start="281:17" pos:end="283:62"><name pos:start="281:17" pos:end="281:22">av_log</name><argument_list pos:start="281:23" pos:end="283:62">(<argument pos:start="281:24" pos:end="281:28"><expr pos:start="281:24" pos:end="281:28"><name pos:start="281:24" pos:end="281:28">avctx</name></expr></argument>, <argument pos:start="281:31" pos:end="281:44"><expr pos:start="281:31" pos:end="281:44"><name pos:start="281:31" pos:end="281:44">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="283:24" pos:end="283:61"><expr pos:start="283:24" pos:end="283:61"><literal type="string" pos:start="283:24" pos:end="283:61">"Found EOI before any SOF, ignoring\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="285:17" pos:end="285:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="289:13" pos:end="299:13"><if pos:start="289:13" pos:end="299:13">if <condition pos:start="289:16" pos:end="289:30">(<expr pos:start="289:17" pos:end="289:29"><name pos:start="289:17" pos:end="289:29"><name pos:start="289:17" pos:end="289:17">s</name><operator pos:start="289:18" pos:end="289:19">-&gt;</operator><name pos:start="289:20" pos:end="289:29">interlaced</name></name></expr>)</condition> <block pos:start="289:32" pos:end="299:13">{<block_content pos:start="291:17" pos:end="297:26">

                <expr_stmt pos:start="291:17" pos:end="291:37"><expr pos:start="291:17" pos:end="291:36"><name pos:start="291:17" pos:end="291:31"><name pos:start="291:17" pos:end="291:17">s</name><operator pos:start="291:18" pos:end="291:19">-&gt;</operator><name pos:start="291:20" pos:end="291:31">bottom_field</name></name> <operator pos:start="291:33" pos:end="291:34">^=</operator> <literal type="number" pos:start="291:36" pos:end="291:36">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="293:17" pos:end="293:66">/* if not bottom field, do not output image yet */</comment>

                <if_stmt pos:start="295:17" pos:end="297:26"><if pos:start="295:17" pos:end="297:26">if <condition pos:start="295:20" pos:end="295:62">(<expr pos:start="295:21" pos:end="295:61"><name pos:start="295:21" pos:end="295:35"><name pos:start="295:21" pos:end="295:21">s</name><operator pos:start="295:22" pos:end="295:23">-&gt;</operator><name pos:start="295:24" pos:end="295:35">bottom_field</name></name> <operator pos:start="295:37" pos:end="295:38">==</operator> <operator pos:start="295:40" pos:end="295:40">!</operator><name pos:start="295:41" pos:end="295:61"><name pos:start="295:41" pos:end="295:41">s</name><operator pos:start="295:42" pos:end="295:43">-&gt;</operator><name pos:start="295:44" pos:end="295:61">interlace_polarity</name></name></expr>)</condition><block type="pseudo" pos:start="297:21" pos:end="297:26"><block_content pos:start="297:21" pos:end="297:26">

                    <break pos:start="297:21" pos:end="297:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="301:13" pos:end="307:13"><if pos:start="301:13" pos:end="307:13">if <condition pos:start="301:16" pos:end="301:51">(<expr pos:start="301:17" pos:end="301:50"><name pos:start="301:17" pos:end="301:33"><name pos:start="301:17" pos:end="301:21">avctx</name><operator pos:start="301:22" pos:end="301:23">-&gt;</operator><name pos:start="301:24" pos:end="301:33">skip_frame</name></name> <operator pos:start="301:35" pos:end="301:36">==</operator> <name pos:start="301:38" pos:end="301:50">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="301:53" pos:end="307:13">{<block_content pos:start="303:17" pos:end="305:40">

                <expr_stmt pos:start="303:17" pos:end="303:35"><expr pos:start="303:17" pos:end="303:34"><name pos:start="303:17" pos:end="303:30"><name pos:start="303:17" pos:end="303:17">s</name><operator pos:start="303:18" pos:end="303:19">-&gt;</operator><name pos:start="303:20" pos:end="303:30">got_picture</name></name> <operator pos:start="303:32" pos:end="303:32">=</operator> <literal type="number" pos:start="303:34" pos:end="303:34">0</literal></expr>;</expr_stmt>

                <goto pos:start="305:17" pos:end="305:40">goto <name pos:start="305:22" pos:end="305:39">the_end_no_picture</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="309:13" pos:end="311:27"><if pos:start="309:13" pos:end="311:27">if <condition pos:start="309:16" pos:end="309:64">(<expr pos:start="309:17" pos:end="309:63"><operator pos:start="309:17" pos:end="309:17">(</operator><name pos:start="309:18" pos:end="309:20">ret</name> <operator pos:start="309:22" pos:end="309:22">=</operator> <call pos:start="309:24" pos:end="309:58"><name pos:start="309:24" pos:end="309:35">av_frame_ref</name><argument_list pos:start="309:36" pos:end="309:58">(<argument pos:start="309:37" pos:end="309:41"><expr pos:start="309:37" pos:end="309:41"><name pos:start="309:37" pos:end="309:41">frame</name></expr></argument>, <argument pos:start="309:44" pos:end="309:57"><expr pos:start="309:44" pos:end="309:57"><name pos:start="309:44" pos:end="309:57"><name pos:start="309:44" pos:end="309:44">s</name><operator pos:start="309:45" pos:end="309:46">-&gt;</operator><name pos:start="309:47" pos:end="309:57">picture_ptr</name></name></expr></argument>)</argument_list></call><operator pos:start="309:59" pos:end="309:59">)</operator> <operator pos:start="309:61" pos:end="309:61">&lt;</operator> <literal type="number" pos:start="309:63" pos:end="309:63">0</literal></expr>)</condition><block type="pseudo" pos:start="311:17" pos:end="311:27"><block_content pos:start="311:17" pos:end="311:27">

                <return pos:start="311:17" pos:end="311:27">return <expr pos:start="311:24" pos:end="311:26"><name pos:start="311:24" pos:end="311:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:27"><expr pos:start="313:13" pos:end="313:26"><operator pos:start="313:13" pos:end="313:13">*</operator><name pos:start="313:14" pos:end="313:22">got_frame</name> <operator pos:start="313:24" pos:end="313:24">=</operator> <literal type="number" pos:start="313:26" pos:end="313:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:31"><expr pos:start="315:13" pos:end="315:30"><name pos:start="315:13" pos:end="315:26"><name pos:start="315:13" pos:end="315:13">s</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:26">got_picture</name></name> <operator pos:start="315:28" pos:end="315:28">=</operator> <literal type="number" pos:start="315:30" pos:end="315:30">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="319:13" pos:end="345:13"><if pos:start="319:13" pos:end="345:13">if <condition pos:start="319:16" pos:end="319:29">(<expr pos:start="319:17" pos:end="319:28"><operator pos:start="319:17" pos:end="319:17">!</operator><name pos:start="319:18" pos:end="319:28"><name pos:start="319:18" pos:end="319:18">s</name><operator pos:start="319:19" pos:end="319:20">-&gt;</operator><name pos:start="319:21" pos:end="319:28">lossless</name></name></expr>)</condition> <block pos:start="319:31" pos:end="345:13">{<block_content pos:start="321:17" pos:end="343:64">

                <decl_stmt pos:start="321:17" pos:end="325:46"><decl pos:start="321:17" pos:end="325:45"><type pos:start="321:17" pos:end="321:19"><name pos:start="321:17" pos:end="321:19">int</name></type> <name pos:start="321:21" pos:end="321:22">qp</name> <init pos:start="321:24" pos:end="325:45">= <expr pos:start="321:26" pos:end="325:45"><call pos:start="321:26" pos:end="325:45"><name pos:start="321:26" pos:end="321:31">FFMAX3</name><argument_list pos:start="321:32" pos:end="325:45">(<argument pos:start="321:33" pos:end="321:44"><expr pos:start="321:33" pos:end="321:44"><name pos:start="321:33" pos:end="321:44"><name pos:start="321:33" pos:end="321:33">s</name><operator pos:start="321:34" pos:end="321:35">-&gt;</operator><name pos:start="321:36" pos:end="321:41">qscale</name><index pos:start="321:42" pos:end="321:44">[<expr pos:start="321:43" pos:end="321:43"><literal type="number" pos:start="321:43" pos:end="321:43">0</literal></expr>]</index></name></expr></argument>,

                                <argument pos:start="323:33" pos:end="323:44"><expr pos:start="323:33" pos:end="323:44"><name pos:start="323:33" pos:end="323:44"><name pos:start="323:33" pos:end="323:33">s</name><operator pos:start="323:34" pos:end="323:35">-&gt;</operator><name pos:start="323:36" pos:end="323:41">qscale</name><index pos:start="323:42" pos:end="323:44">[<expr pos:start="323:43" pos:end="323:43"><literal type="number" pos:start="323:43" pos:end="323:43">1</literal></expr>]</index></name></expr></argument>,

                                <argument pos:start="325:33" pos:end="325:44"><expr pos:start="325:33" pos:end="325:44"><name pos:start="325:33" pos:end="325:44"><name pos:start="325:33" pos:end="325:33">s</name><operator pos:start="325:34" pos:end="325:35">-&gt;</operator><name pos:start="325:36" pos:end="325:41">qscale</name><index pos:start="325:42" pos:end="325:44">[<expr pos:start="325:43" pos:end="325:43"><literal type="number" pos:start="325:43" pos:end="325:43">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="327:17" pos:end="327:47"><decl pos:start="327:17" pos:end="327:46"><type pos:start="327:17" pos:end="327:19"><name pos:start="327:17" pos:end="327:19">int</name></type> <name pos:start="327:21" pos:end="327:23">qpw</name> <init pos:start="327:25" pos:end="327:46">= <expr pos:start="327:27" pos:end="327:46"><operator pos:start="327:27" pos:end="327:27">(</operator><name pos:start="327:28" pos:end="327:35"><name pos:start="327:28" pos:end="327:28">s</name><operator pos:start="327:29" pos:end="327:30">-&gt;</operator><name pos:start="327:31" pos:end="327:35">width</name></name> <operator pos:start="327:37" pos:end="327:37">+</operator> <literal type="number" pos:start="327:39" pos:end="327:40">15</literal><operator pos:start="327:41" pos:end="327:41">)</operator> <operator pos:start="327:43" pos:end="327:43">/</operator> <literal type="number" pos:start="327:45" pos:end="327:46">16</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="329:17" pos:end="329:65"><decl pos:start="329:17" pos:end="329:64"><type pos:start="329:17" pos:end="329:29"><name pos:start="329:17" pos:end="329:27">AVBufferRef</name> <modifier pos:start="329:29" pos:end="329:29">*</modifier></type><name pos:start="329:30" pos:end="329:41">qp_table_buf</name> <init pos:start="329:43" pos:end="329:64">= <expr pos:start="329:45" pos:end="329:64"><call pos:start="329:45" pos:end="329:64"><name pos:start="329:45" pos:end="329:59">av_buffer_alloc</name><argument_list pos:start="329:60" pos:end="329:64">(<argument pos:start="329:61" pos:end="329:63"><expr pos:start="329:61" pos:end="329:63"><name pos:start="329:61" pos:end="329:63">qpw</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="331:17" pos:end="337:17"><if pos:start="331:17" pos:end="337:17">if <condition pos:start="331:20" pos:end="331:33">(<expr pos:start="331:21" pos:end="331:32"><name pos:start="331:21" pos:end="331:32">qp_table_buf</name></expr>)</condition> <block pos:start="331:35" pos:end="337:17">{<block_content pos:start="333:21" pos:end="335:87">

                    <expr_stmt pos:start="333:21" pos:end="333:56"><expr pos:start="333:21" pos:end="333:55"><call pos:start="333:21" pos:end="333:55"><name pos:start="333:21" pos:end="333:26">memset</name><argument_list pos:start="333:27" pos:end="333:55">(<argument pos:start="333:28" pos:end="333:45"><expr pos:start="333:28" pos:end="333:45"><name pos:start="333:28" pos:end="333:45"><name pos:start="333:28" pos:end="333:39">qp_table_buf</name><operator pos:start="333:40" pos:end="333:41">-&gt;</operator><name pos:start="333:42" pos:end="333:45">data</name></name></expr></argument>, <argument pos:start="333:48" pos:end="333:49"><expr pos:start="333:48" pos:end="333:49"><name pos:start="333:48" pos:end="333:49">qp</name></expr></argument>, <argument pos:start="333:52" pos:end="333:54"><expr pos:start="333:52" pos:end="333:54"><name pos:start="333:52" pos:end="333:54">qpw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="335:21" pos:end="335:87"><expr pos:start="335:21" pos:end="335:86"><call pos:start="335:21" pos:end="335:86"><name pos:start="335:21" pos:end="335:41">av_frame_set_qp_table</name><argument_list pos:start="335:42" pos:end="335:86">(<argument pos:start="335:43" pos:end="335:46"><expr pos:start="335:43" pos:end="335:46"><name pos:start="335:43" pos:end="335:46">data</name></expr></argument>, <argument pos:start="335:49" pos:end="335:60"><expr pos:start="335:49" pos:end="335:60"><name pos:start="335:49" pos:end="335:60">qp_table_buf</name></expr></argument>, <argument pos:start="335:63" pos:end="335:63"><expr pos:start="335:63" pos:end="335:63"><literal type="number" pos:start="335:63" pos:end="335:63">0</literal></expr></argument>, <argument pos:start="335:66" pos:end="335:85"><expr pos:start="335:66" pos:end="335:85"><name pos:start="335:66" pos:end="335:85">FF_QSCALE_TYPE_MPEG1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="341:17" pos:end="343:64"><if pos:start="341:17" pos:end="343:64">if<condition pos:start="341:19" pos:end="341:46">(<expr pos:start="341:20" pos:end="341:45"><name pos:start="341:20" pos:end="341:31"><name pos:start="341:20" pos:end="341:24">avctx</name><operator pos:start="341:25" pos:end="341:26">-&gt;</operator><name pos:start="341:27" pos:end="341:31">debug</name></name> <operator pos:start="341:33" pos:end="341:33">&amp;</operator> <name pos:start="341:35" pos:end="341:45">FF_DEBUG_QP</name></expr>)</condition><block type="pseudo" pos:start="343:21" pos:end="343:64"><block_content pos:start="343:21" pos:end="343:64">

                    <expr_stmt pos:start="343:21" pos:end="343:64"><expr pos:start="343:21" pos:end="343:63"><call pos:start="343:21" pos:end="343:63"><name pos:start="343:21" pos:end="343:26">av_log</name><argument_list pos:start="343:27" pos:end="343:63">(<argument pos:start="343:28" pos:end="343:32"><expr pos:start="343:28" pos:end="343:32"><name pos:start="343:28" pos:end="343:32">avctx</name></expr></argument>, <argument pos:start="343:35" pos:end="343:46"><expr pos:start="343:35" pos:end="343:46"><name pos:start="343:35" pos:end="343:46">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="343:49" pos:end="343:58"><expr pos:start="343:49" pos:end="343:58"><literal type="string" pos:start="343:49" pos:end="343:58">"QP: %d\n"</literal></expr></argument>, <argument pos:start="343:61" pos:end="343:62"><expr pos:start="343:61" pos:end="343:62"><name pos:start="343:61" pos:end="343:62">qp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <goto pos:start="349:13" pos:end="349:25">goto <name pos:start="349:18" pos:end="349:24">the_end</name>;</goto>

        <case pos:start="351:9" pos:end="351:17">case <expr pos:start="351:14" pos:end="351:16"><name pos:start="351:14" pos:end="351:16">SOS</name></expr>:</case>

            <expr_stmt pos:start="353:13" pos:end="353:26"><expr pos:start="353:13" pos:end="353:25"><name pos:start="353:13" pos:end="353:23"><name pos:start="353:13" pos:end="353:13">s</name><operator pos:start="353:14" pos:end="353:15">-&gt;</operator><name pos:start="353:16" pos:end="353:23">cur_scan</name></name><operator pos:start="353:24" pos:end="353:25">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="355:13" pos:end="357:22"><if pos:start="355:13" pos:end="357:22">if <condition pos:start="355:16" pos:end="355:51">(<expr pos:start="355:17" pos:end="355:50"><name pos:start="355:17" pos:end="355:33"><name pos:start="355:17" pos:end="355:21">avctx</name><operator pos:start="355:22" pos:end="355:23">-&gt;</operator><name pos:start="355:24" pos:end="355:33">skip_frame</name></name> <operator pos:start="355:35" pos:end="355:36">==</operator> <name pos:start="355:38" pos:end="355:50">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="357:17" pos:end="357:22"><block_content pos:start="357:17" pos:end="357:22">

                <break pos:start="357:17" pos:end="357:22">break;</break></block_content></block></if></if_stmt>



            <if_stmt pos:start="361:13" pos:end="365:26"><if pos:start="361:13" pos:end="365:26">if <condition pos:start="361:16" pos:end="363:57">(<expr pos:start="361:17" pos:end="363:56"><operator pos:start="361:17" pos:end="361:17">(</operator><name pos:start="361:18" pos:end="361:20">ret</name> <operator pos:start="361:22" pos:end="361:22">=</operator> <call pos:start="361:24" pos:end="361:60"><name pos:start="361:24" pos:end="361:42">ff_mjpeg_decode_sos</name><argument_list pos:start="361:43" pos:end="361:60">(<argument pos:start="361:44" pos:end="361:44"><expr pos:start="361:44" pos:end="361:44"><name pos:start="361:44" pos:end="361:44">s</name></expr></argument>, <argument pos:start="361:47" pos:end="361:50"><expr pos:start="361:47" pos:end="361:50"><name pos:start="361:47" pos:end="361:50">NULL</name></expr></argument>, <argument pos:start="361:53" pos:end="361:53"><expr pos:start="361:53" pos:end="361:53"><literal type="number" pos:start="361:53" pos:end="361:53">0</literal></expr></argument>, <argument pos:start="361:56" pos:end="361:59"><expr pos:start="361:56" pos:end="361:59"><name pos:start="361:56" pos:end="361:59">NULL</name></expr></argument>)</argument_list></call><operator pos:start="361:61" pos:end="361:61">)</operator> <operator pos:start="361:63" pos:end="361:63">&lt;</operator> <literal type="number" pos:start="361:65" pos:end="361:65">0</literal> <operator pos:start="361:67" pos:end="361:68">&amp;&amp;</operator>

                <operator pos:start="363:17" pos:end="363:17">(</operator><name pos:start="363:18" pos:end="363:39"><name pos:start="363:18" pos:end="363:22">avctx</name><operator pos:start="363:23" pos:end="363:24">-&gt;</operator><name pos:start="363:25" pos:end="363:39">err_recognition</name></name> <operator pos:start="363:41" pos:end="363:41">&amp;</operator> <name pos:start="363:43" pos:end="363:55">AV_EF_EXPLODE</name><operator pos:start="363:56" pos:end="363:56">)</operator></expr>)</condition><block type="pseudo" pos:start="365:17" pos:end="365:26"><block_content pos:start="365:17" pos:end="365:26">

                <goto pos:start="365:17" pos:end="365:26">goto <name pos:start="365:22" pos:end="365:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="367:13" pos:end="367:18">break;</break>

        <case pos:start="369:9" pos:end="369:17">case <expr pos:start="369:14" pos:end="369:16"><name pos:start="369:14" pos:end="369:16">DRI</name></expr>:</case>

            <expr_stmt pos:start="371:13" pos:end="371:32"><expr pos:start="371:13" pos:end="371:31"><call pos:start="371:13" pos:end="371:31"><name pos:start="371:13" pos:end="371:28">mjpeg_decode_dri</name><argument_list pos:start="371:29" pos:end="371:31">(<argument pos:start="371:30" pos:end="371:30"><expr pos:start="371:30" pos:end="371:30"><name pos:start="371:30" pos:end="371:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="373:13" pos:end="373:18">break;</break>

        <case pos:start="375:9" pos:end="375:18">case <expr pos:start="375:14" pos:end="375:17"><name pos:start="375:14" pos:end="375:17">SOF5</name></expr>:</case>

        <case pos:start="377:9" pos:end="377:18">case <expr pos:start="377:14" pos:end="377:17"><name pos:start="377:14" pos:end="377:17">SOF6</name></expr>:</case>

        <case pos:start="379:9" pos:end="379:18">case <expr pos:start="379:14" pos:end="379:17"><name pos:start="379:14" pos:end="379:17">SOF7</name></expr>:</case>

        <case pos:start="381:9" pos:end="381:18">case <expr pos:start="381:14" pos:end="381:17"><name pos:start="381:14" pos:end="381:17">SOF9</name></expr>:</case>

        <case pos:start="383:9" pos:end="383:19">case <expr pos:start="383:14" pos:end="383:18"><name pos:start="383:14" pos:end="383:18">SOF10</name></expr>:</case>

        <case pos:start="385:9" pos:end="385:19">case <expr pos:start="385:14" pos:end="385:18"><name pos:start="385:14" pos:end="385:18">SOF11</name></expr>:</case>

        <case pos:start="387:9" pos:end="387:19">case <expr pos:start="387:14" pos:end="387:18"><name pos:start="387:14" pos:end="387:18">SOF13</name></expr>:</case>

        <case pos:start="389:9" pos:end="389:19">case <expr pos:start="389:14" pos:end="389:18"><name pos:start="389:14" pos:end="389:18">SOF14</name></expr>:</case>

        <case pos:start="391:9" pos:end="391:19">case <expr pos:start="391:14" pos:end="391:18"><name pos:start="391:14" pos:end="391:18">SOF15</name></expr>:</case>

        <case pos:start="393:9" pos:end="393:17">case <expr pos:start="393:14" pos:end="393:16"><name pos:start="393:14" pos:end="393:16">JPG</name></expr>:</case>

            <expr_stmt pos:start="395:13" pos:end="397:72"><expr pos:start="395:13" pos:end="397:71"><call pos:start="395:13" pos:end="397:71"><name pos:start="395:13" pos:end="395:18">av_log</name><argument_list pos:start="395:19" pos:end="397:71">(<argument pos:start="395:20" pos:end="395:24"><expr pos:start="395:20" pos:end="395:24"><name pos:start="395:20" pos:end="395:24">avctx</name></expr></argument>, <argument pos:start="395:27" pos:end="395:38"><expr pos:start="395:27" pos:end="395:38"><name pos:start="395:27" pos:end="395:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="397:20" pos:end="397:58"><expr pos:start="397:20" pos:end="397:58"><literal type="string" pos:start="397:20" pos:end="397:58">"mjpeg: unsupported coding type (%x)\n"</literal></expr></argument>, <argument pos:start="397:61" pos:end="397:70"><expr pos:start="397:61" pos:end="397:70"><name pos:start="397:61" pos:end="397:70">start_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="399:13" pos:end="399:18">break;</break>

        </block_content>}</block></switch>



<label pos:start="405:1" pos:end="405:5"><name pos:start="405:1" pos:end="405:4">skip</name>:</label>

        <comment type="block" pos:start="407:9" pos:end="407:36">/* eof process start code */</comment>

        <expr_stmt pos:start="409:9" pos:end="409:52"><expr pos:start="409:9" pos:end="409:51"><name pos:start="409:9" pos:end="409:15">buf_ptr</name> <operator pos:start="409:17" pos:end="409:18">+=</operator> <operator pos:start="409:20" pos:end="409:20">(</operator><call pos:start="409:21" pos:end="409:42"><name pos:start="409:21" pos:end="409:34">get_bits_count</name><argument_list pos:start="409:35" pos:end="409:42">(<argument pos:start="409:36" pos:end="409:41"><expr pos:start="409:36" pos:end="409:41"><operator pos:start="409:36" pos:end="409:36">&amp;</operator><name pos:start="409:37" pos:end="409:41"><name pos:start="409:37" pos:end="409:37">s</name><operator pos:start="409:38" pos:end="409:39">-&gt;</operator><name pos:start="409:40" pos:end="409:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="409:44" pos:end="409:44">+</operator> <literal type="number" pos:start="409:46" pos:end="409:46">7</literal><operator pos:start="409:47" pos:end="409:47">)</operator> <operator pos:start="409:49" pos:end="409:49">/</operator> <literal type="number" pos:start="409:51" pos:end="409:51">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="411:9" pos:end="415:73"><expr pos:start="411:9" pos:end="415:72"><call pos:start="411:9" pos:end="415:72"><name pos:start="411:9" pos:end="411:14">av_log</name><argument_list pos:start="411:15" pos:end="415:72">(<argument pos:start="411:16" pos:end="411:20"><expr pos:start="411:16" pos:end="411:20"><name pos:start="411:16" pos:end="411:20">avctx</name></expr></argument>, <argument pos:start="411:23" pos:end="411:34"><expr pos:start="411:23" pos:end="411:34"><name pos:start="411:23" pos:end="411:34">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="413:16" pos:end="413:56"><expr pos:start="413:16" pos:end="413:56"><literal type="string" pos:start="413:16" pos:end="413:56">"marker parser used %d bytes (%d bits)\n"</literal></expr></argument>,

               <argument pos:start="415:16" pos:end="415:47"><expr pos:start="415:16" pos:end="415:47"><operator pos:start="415:16" pos:end="415:16">(</operator><call pos:start="415:17" pos:end="415:38"><name pos:start="415:17" pos:end="415:30">get_bits_count</name><argument_list pos:start="415:31" pos:end="415:38">(<argument pos:start="415:32" pos:end="415:37"><expr pos:start="415:32" pos:end="415:37"><operator pos:start="415:32" pos:end="415:32">&amp;</operator><name pos:start="415:33" pos:end="415:37"><name pos:start="415:33" pos:end="415:33">s</name><operator pos:start="415:34" pos:end="415:35">-&gt;</operator><name pos:start="415:36" pos:end="415:37">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="415:40" pos:end="415:40">+</operator> <literal type="number" pos:start="415:42" pos:end="415:42">7</literal><operator pos:start="415:43" pos:end="415:43">)</operator> <operator pos:start="415:45" pos:end="415:45">/</operator> <literal type="number" pos:start="415:47" pos:end="415:47">8</literal></expr></argument>, <argument pos:start="415:50" pos:end="415:71"><expr pos:start="415:50" pos:end="415:71"><call pos:start="415:50" pos:end="415:71"><name pos:start="415:50" pos:end="415:63">get_bits_count</name><argument_list pos:start="415:64" pos:end="415:71">(<argument pos:start="415:65" pos:end="415:70"><expr pos:start="415:65" pos:end="415:70"><operator pos:start="415:65" pos:end="415:65">&amp;</operator><name pos:start="415:66" pos:end="415:70"><name pos:start="415:66" pos:end="415:66">s</name><operator pos:start="415:67" pos:end="415:68">-&gt;</operator><name pos:start="415:69" pos:end="415:70">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="419:5" pos:end="425:5"><if pos:start="419:5" pos:end="425:5">if <condition pos:start="419:8" pos:end="419:38">(<expr pos:start="419:9" pos:end="419:37"><name pos:start="419:9" pos:end="419:22"><name pos:start="419:9" pos:end="419:9">s</name><operator pos:start="419:10" pos:end="419:11">-&gt;</operator><name pos:start="419:12" pos:end="419:22">got_picture</name></name> <operator pos:start="419:24" pos:end="419:25">&amp;&amp;</operator> <name pos:start="419:27" pos:end="419:37"><name pos:start="419:27" pos:end="419:27">s</name><operator pos:start="419:28" pos:end="419:29">-&gt;</operator><name pos:start="419:30" pos:end="419:37">cur_scan</name></name></expr>)</condition> <block pos:start="419:40" pos:end="425:5">{<block_content pos:start="421:9" pos:end="423:24">

        <expr_stmt pos:start="421:9" pos:end="421:66"><expr pos:start="421:9" pos:end="421:65"><call pos:start="421:9" pos:end="421:65"><name pos:start="421:9" pos:end="421:14">av_log</name><argument_list pos:start="421:15" pos:end="421:65">(<argument pos:start="421:16" pos:end="421:20"><expr pos:start="421:16" pos:end="421:20"><name pos:start="421:16" pos:end="421:20">avctx</name></expr></argument>, <argument pos:start="421:23" pos:end="421:36"><expr pos:start="421:23" pos:end="421:36"><name pos:start="421:23" pos:end="421:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="421:39" pos:end="421:64"><expr pos:start="421:39" pos:end="421:64"><literal type="string" pos:start="421:39" pos:end="421:64">"EOI missing, emulating\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="423:9" pos:end="423:24">goto <name pos:start="423:14" pos:end="423:23">eoi_parser</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="427:5" pos:end="427:65"><expr pos:start="427:5" pos:end="427:64"><call pos:start="427:5" pos:end="427:64"><name pos:start="427:5" pos:end="427:10">av_log</name><argument_list pos:start="427:11" pos:end="427:64">(<argument pos:start="427:12" pos:end="427:16"><expr pos:start="427:12" pos:end="427:16"><name pos:start="427:12" pos:end="427:16">avctx</name></expr></argument>, <argument pos:start="427:19" pos:end="427:30"><expr pos:start="427:19" pos:end="427:30"><name pos:start="427:19" pos:end="427:30">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="427:33" pos:end="427:63"><expr pos:start="427:33" pos:end="427:63"><literal type="string" pos:start="427:33" pos:end="427:63">"No JPEG data found in image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="429:5" pos:end="429:31">return <expr pos:start="429:12" pos:end="429:30"><name pos:start="429:12" pos:end="429:30">AVERROR_INVALIDDATA</name></expr>;</return>

<label pos:start="431:1" pos:end="431:5"><name pos:start="431:1" pos:end="431:4">fail</name>:</label>

    <expr_stmt pos:start="433:5" pos:end="433:23"><expr pos:start="433:5" pos:end="433:22"><name pos:start="433:5" pos:end="433:18"><name pos:start="433:5" pos:end="433:5">s</name><operator pos:start="433:6" pos:end="433:7">-&gt;</operator><name pos:start="433:8" pos:end="433:18">got_picture</name></name> <operator pos:start="433:20" pos:end="433:20">=</operator> <literal type="number" pos:start="433:22" pos:end="433:22">0</literal></expr>;</expr_stmt>

    <return pos:start="435:5" pos:end="435:15">return <expr pos:start="435:12" pos:end="435:14"><name pos:start="435:12" pos:end="435:14">ret</name></expr>;</return>

<label pos:start="437:1" pos:end="437:8"><name pos:start="437:1" pos:end="437:7">the_end</name>:</label>



    <expr_stmt pos:start="441:5" pos:end="441:71"><expr pos:start="441:5" pos:end="441:70"><name pos:start="441:5" pos:end="441:11">is16bit</name> <operator pos:start="441:13" pos:end="441:13">=</operator> <call pos:start="441:15" pos:end="441:52"><name pos:start="441:15" pos:end="441:33">av_pix_fmt_desc_get</name><argument_list pos:start="441:34" pos:end="441:52">(<argument pos:start="441:35" pos:end="441:51"><expr pos:start="441:35" pos:end="441:51"><name pos:start="441:35" pos:end="441:51"><name pos:start="441:35" pos:end="441:35">s</name><operator pos:start="441:36" pos:end="441:37">-&gt;</operator><name pos:start="441:38" pos:end="441:42">avctx</name><operator pos:start="441:43" pos:end="441:44">-&gt;</operator><name pos:start="441:45" pos:end="441:51">pix_fmt</name></name></expr></argument>)</argument_list></call><operator pos:start="441:53" pos:end="441:54">-&gt;</operator><name pos:start="441:55" pos:end="441:61"><name pos:start="441:55" pos:end="441:58">comp</name><index pos:start="441:59" pos:end="441:61">[<expr pos:start="441:60" pos:end="441:60"><literal type="number" pos:start="441:60" pos:end="441:60">0</literal></expr>]</index></name><operator pos:start="441:62" pos:end="441:62">.</operator><name pos:start="441:63" pos:end="441:66">step</name> <operator pos:start="441:68" pos:end="441:68">&gt;</operator> <literal type="number" pos:start="441:70" pos:end="441:70">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="445:5" pos:end="557:5"><if pos:start="445:5" pos:end="557:5">if <condition pos:start="445:8" pos:end="445:30">(<expr pos:start="445:9" pos:end="445:29"><call pos:start="445:9" pos:end="445:29"><name pos:start="445:9" pos:end="445:15">AV_RB32</name><argument_list pos:start="445:16" pos:end="445:29">(<argument pos:start="445:17" pos:end="445:28"><expr pos:start="445:17" pos:end="445:28"><name pos:start="445:17" pos:end="445:28"><name pos:start="445:17" pos:end="445:17">s</name><operator pos:start="445:18" pos:end="445:19">-&gt;</operator><name pos:start="445:20" pos:end="445:28">upscale_h</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="445:32" pos:end="557:5">{<block_content pos:start="447:9" pos:end="555:9">

        <decl_stmt pos:start="447:9" pos:end="447:14"><decl pos:start="447:9" pos:end="447:13"><type pos:start="447:9" pos:end="447:11"><name pos:start="447:9" pos:end="447:11">int</name></type> <name pos:start="447:13" pos:end="447:13">p</name></decl>;</decl_stmt>

        <expr_stmt pos:start="449:9" pos:end="473:20"><expr pos:start="449:9" pos:end="473:19"><call pos:start="449:9" pos:end="473:19"><name pos:start="449:9" pos:end="449:18">av_assert0</name><argument_list pos:start="449:19" pos:end="473:19">(<argument pos:start="449:20" pos:end="471:53"><expr pos:start="449:20" pos:end="471:53"><name pos:start="449:20" pos:end="449:33"><name pos:start="449:20" pos:end="449:24">avctx</name><operator pos:start="449:25" pos:end="449:26">-&gt;</operator><name pos:start="449:27" pos:end="449:33">pix_fmt</name></name> <operator pos:start="449:35" pos:end="449:36">==</operator> <name pos:start="449:38" pos:end="449:56">AV_PIX_FMT_YUVJ444P</name> <operator pos:start="449:58" pos:end="449:59">||</operator>

                   <name pos:start="451:20" pos:end="451:33"><name pos:start="451:20" pos:end="451:24">avctx</name><operator pos:start="451:25" pos:end="451:26">-&gt;</operator><name pos:start="451:27" pos:end="451:33">pix_fmt</name></name> <operator pos:start="451:35" pos:end="451:36">==</operator> <name pos:start="451:38" pos:end="451:55">AV_PIX_FMT_YUV444P</name>  <operator pos:start="451:58" pos:end="451:59">||</operator>

                   <name pos:start="453:20" pos:end="453:33"><name pos:start="453:20" pos:end="453:24">avctx</name><operator pos:start="453:25" pos:end="453:26">-&gt;</operator><name pos:start="453:27" pos:end="453:33">pix_fmt</name></name> <operator pos:start="453:35" pos:end="453:36">==</operator> <name pos:start="453:38" pos:end="453:56">AV_PIX_FMT_YUVJ440P</name> <operator pos:start="453:58" pos:end="453:59">||</operator>

                   <name pos:start="455:20" pos:end="455:33"><name pos:start="455:20" pos:end="455:24">avctx</name><operator pos:start="455:25" pos:end="455:26">-&gt;</operator><name pos:start="455:27" pos:end="455:33">pix_fmt</name></name> <operator pos:start="455:35" pos:end="455:36">==</operator> <name pos:start="455:38" pos:end="455:55">AV_PIX_FMT_YUV440P</name>  <operator pos:start="455:58" pos:end="455:59">||</operator>

                   <name pos:start="457:20" pos:end="457:33"><name pos:start="457:20" pos:end="457:24">avctx</name><operator pos:start="457:25" pos:end="457:26">-&gt;</operator><name pos:start="457:27" pos:end="457:33">pix_fmt</name></name> <operator pos:start="457:35" pos:end="457:36">==</operator> <name pos:start="457:38" pos:end="457:56">AV_PIX_FMT_YUVA444P</name> <operator pos:start="457:58" pos:end="457:59">||</operator>

                   <name pos:start="459:20" pos:end="459:33"><name pos:start="459:20" pos:end="459:24">avctx</name><operator pos:start="459:25" pos:end="459:26">-&gt;</operator><name pos:start="459:27" pos:end="459:33">pix_fmt</name></name> <operator pos:start="459:35" pos:end="459:36">==</operator> <name pos:start="459:38" pos:end="459:56">AV_PIX_FMT_YUVJ420P</name> <operator pos:start="459:58" pos:end="459:59">||</operator>

                   <name pos:start="461:20" pos:end="461:33"><name pos:start="461:20" pos:end="461:24">avctx</name><operator pos:start="461:25" pos:end="461:26">-&gt;</operator><name pos:start="461:27" pos:end="461:33">pix_fmt</name></name> <operator pos:start="461:35" pos:end="461:36">==</operator> <name pos:start="461:38" pos:end="461:55">AV_PIX_FMT_YUV420P</name>  <operator pos:start="461:58" pos:end="461:59">||</operator>

                   <name pos:start="463:20" pos:end="463:33"><name pos:start="463:20" pos:end="463:24">avctx</name><operator pos:start="463:25" pos:end="463:26">-&gt;</operator><name pos:start="463:27" pos:end="463:33">pix_fmt</name></name> <operator pos:start="463:35" pos:end="463:36">==</operator> <name pos:start="463:38" pos:end="463:57">AV_PIX_FMT_YUV420P16</name><operator pos:start="463:58" pos:end="463:59">||</operator>

                   <name pos:start="465:20" pos:end="465:33"><name pos:start="465:20" pos:end="465:24">avctx</name><operator pos:start="465:25" pos:end="465:26">-&gt;</operator><name pos:start="465:27" pos:end="465:33">pix_fmt</name></name> <operator pos:start="465:35" pos:end="465:36">==</operator> <name pos:start="465:38" pos:end="465:56">AV_PIX_FMT_YUVA420P</name>  <operator pos:start="465:59" pos:end="465:60">||</operator>

                   <name pos:start="467:20" pos:end="467:33"><name pos:start="467:20" pos:end="467:24">avctx</name><operator pos:start="467:25" pos:end="467:26">-&gt;</operator><name pos:start="467:27" pos:end="467:33">pix_fmt</name></name> <operator pos:start="467:35" pos:end="467:36">==</operator> <name pos:start="467:38" pos:end="467:58">AV_PIX_FMT_YUVA420P16</name><operator pos:start="467:59" pos:end="467:60">||</operator>

                   <name pos:start="469:20" pos:end="469:33"><name pos:start="469:20" pos:end="469:24">avctx</name><operator pos:start="469:25" pos:end="469:26">-&gt;</operator><name pos:start="469:27" pos:end="469:33">pix_fmt</name></name> <operator pos:start="469:35" pos:end="469:36">==</operator> <name pos:start="469:38" pos:end="469:52">AV_PIX_FMT_GBRP</name>     <operator pos:start="469:58" pos:end="469:59">||</operator>

                   <name pos:start="471:20" pos:end="471:33"><name pos:start="471:20" pos:end="471:24">avctx</name><operator pos:start="471:25" pos:end="471:26">-&gt;</operator><name pos:start="471:27" pos:end="471:33">pix_fmt</name></name> <operator pos:start="471:35" pos:end="471:36">==</operator> <name pos:start="471:38" pos:end="471:53">AV_PIX_FMT_GBRAP</name></expr></argument>

                  )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="475:9" pos:end="475:75"><expr pos:start="475:9" pos:end="475:74"><call pos:start="475:9" pos:end="475:74"><name pos:start="475:9" pos:end="475:37">avcodec_get_chroma_sub_sample</name><argument_list pos:start="475:38" pos:end="475:74">(<argument pos:start="475:39" pos:end="475:55"><expr pos:start="475:39" pos:end="475:55"><name pos:start="475:39" pos:end="475:55"><name pos:start="475:39" pos:end="475:39">s</name><operator pos:start="475:40" pos:end="475:41">-&gt;</operator><name pos:start="475:42" pos:end="475:46">avctx</name><operator pos:start="475:47" pos:end="475:48">-&gt;</operator><name pos:start="475:49" pos:end="475:55">pix_fmt</name></name></expr></argument>, <argument pos:start="475:58" pos:end="475:64"><expr pos:start="475:58" pos:end="475:64"><operator pos:start="475:58" pos:end="475:58">&amp;</operator><name pos:start="475:59" pos:end="475:64">hshift</name></expr></argument>, <argument pos:start="475:67" pos:end="475:73"><expr pos:start="475:67" pos:end="475:73"><operator pos:start="475:67" pos:end="475:67">&amp;</operator><name pos:start="475:68" pos:end="475:73">vshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="477:9" pos:end="555:9">for <control pos:start="477:13" pos:end="477:29">(<init pos:start="477:14" pos:end="477:19"><expr pos:start="477:14" pos:end="477:18"><name pos:start="477:14" pos:end="477:14">p</name> <operator pos:start="477:16" pos:end="477:16">=</operator> <literal type="number" pos:start="477:18" pos:end="477:18">0</literal></expr>;</init> <condition pos:start="477:21" pos:end="477:24"><expr pos:start="477:21" pos:end="477:23"><name pos:start="477:21" pos:end="477:21">p</name><operator pos:start="477:22" pos:end="477:22">&lt;</operator><literal type="number" pos:start="477:23" pos:end="477:23">4</literal></expr>;</condition> <incr pos:start="477:26" pos:end="477:28"><expr pos:start="477:26" pos:end="477:28"><name pos:start="477:26" pos:end="477:26">p</name><operator pos:start="477:27" pos:end="477:28">++</operator></expr></incr>)</control> <block pos:start="477:31" pos:end="555:9">{<block_content pos:start="479:13" pos:end="553:13">

            <decl_stmt pos:start="479:13" pos:end="479:52"><decl pos:start="479:13" pos:end="479:51"><type pos:start="479:13" pos:end="479:21"><name pos:start="479:13" pos:end="479:19">uint8_t</name> <modifier pos:start="479:21" pos:end="479:21">*</modifier></type><name pos:start="479:22" pos:end="479:25">line</name> <init pos:start="479:27" pos:end="479:51">= <expr pos:start="479:29" pos:end="479:51"><name pos:start="479:29" pos:end="479:51"><name pos:start="479:29" pos:end="479:29">s</name><operator pos:start="479:30" pos:end="479:31">-&gt;</operator><name pos:start="479:32" pos:end="479:42">picture_ptr</name><operator pos:start="479:43" pos:end="479:44">-&gt;</operator><name pos:start="479:45" pos:end="479:48">data</name><index pos:start="479:49" pos:end="479:51">[<expr pos:start="479:50" pos:end="479:50"><name pos:start="479:50" pos:end="479:50">p</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="481:13" pos:end="481:29"><decl pos:start="481:13" pos:end="481:28"><type pos:start="481:13" pos:end="481:15"><name pos:start="481:13" pos:end="481:15">int</name></type> <name pos:start="481:17" pos:end="481:17">w</name> <init pos:start="481:19" pos:end="481:28">= <expr pos:start="481:21" pos:end="481:28"><name pos:start="481:21" pos:end="481:28"><name pos:start="481:21" pos:end="481:21">s</name><operator pos:start="481:22" pos:end="481:23">-&gt;</operator><name pos:start="481:24" pos:end="481:28">width</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="483:13" pos:end="483:30"><decl pos:start="483:13" pos:end="483:29"><type pos:start="483:13" pos:end="483:15"><name pos:start="483:13" pos:end="483:15">int</name></type> <name pos:start="483:17" pos:end="483:17">h</name> <init pos:start="483:19" pos:end="483:29">= <expr pos:start="483:21" pos:end="483:29"><name pos:start="483:21" pos:end="483:29"><name pos:start="483:21" pos:end="483:21">s</name><operator pos:start="483:22" pos:end="483:23">-&gt;</operator><name pos:start="483:24" pos:end="483:29">height</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="485:13" pos:end="487:25"><if pos:start="485:13" pos:end="487:25">if <condition pos:start="485:16" pos:end="485:33">(<expr pos:start="485:17" pos:end="485:32"><operator pos:start="485:17" pos:end="485:17">!</operator><name pos:start="485:18" pos:end="485:32"><name pos:start="485:18" pos:end="485:18">s</name><operator pos:start="485:19" pos:end="485:20">-&gt;</operator><name pos:start="485:21" pos:end="485:29">upscale_h</name><index pos:start="485:30" pos:end="485:32">[<expr pos:start="485:31" pos:end="485:31"><name pos:start="485:31" pos:end="485:31">p</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="487:17" pos:end="487:25"><block_content pos:start="487:17" pos:end="487:25">

                <continue pos:start="487:17" pos:end="487:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="489:13" pos:end="495:13"><if pos:start="489:13" pos:end="495:13">if <condition pos:start="489:16" pos:end="489:29">(<expr pos:start="489:17" pos:end="489:28"><name pos:start="489:17" pos:end="489:17">p</name><operator pos:start="489:18" pos:end="489:19">==</operator><literal type="number" pos:start="489:20" pos:end="489:20">1</literal> <operator pos:start="489:22" pos:end="489:23">||</operator> <name pos:start="489:25" pos:end="489:25">p</name><operator pos:start="489:26" pos:end="489:27">==</operator><literal type="number" pos:start="489:28" pos:end="489:28">2</literal></expr>)</condition> <block pos:start="489:31" pos:end="495:13">{<block_content pos:start="491:17" pos:end="493:46">

                <expr_stmt pos:start="491:17" pos:end="491:46"><expr pos:start="491:17" pos:end="491:45"><name pos:start="491:17" pos:end="491:17">w</name> <operator pos:start="491:19" pos:end="491:19">=</operator> <call pos:start="491:21" pos:end="491:45"><name pos:start="491:21" pos:end="491:34">AV_CEIL_RSHIFT</name><argument_list pos:start="491:35" pos:end="491:45">(<argument pos:start="491:36" pos:end="491:36"><expr pos:start="491:36" pos:end="491:36"><name pos:start="491:36" pos:end="491:36">w</name></expr></argument>, <argument pos:start="491:39" pos:end="491:44"><expr pos:start="491:39" pos:end="491:44"><name pos:start="491:39" pos:end="491:44">hshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="493:17" pos:end="493:46"><expr pos:start="493:17" pos:end="493:45"><name pos:start="493:17" pos:end="493:17">h</name> <operator pos:start="493:19" pos:end="493:19">=</operator> <call pos:start="493:21" pos:end="493:45"><name pos:start="493:21" pos:end="493:34">AV_CEIL_RSHIFT</name><argument_list pos:start="493:35" pos:end="493:45">(<argument pos:start="493:36" pos:end="493:36"><expr pos:start="493:36" pos:end="493:36"><name pos:start="493:36" pos:end="493:36">h</name></expr></argument>, <argument pos:start="493:39" pos:end="493:44"><expr pos:start="493:39" pos:end="493:44"><name pos:start="493:39" pos:end="493:44">vshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="497:13" pos:end="499:29"><if pos:start="497:13" pos:end="499:29">if <condition pos:start="497:16" pos:end="497:32">(<expr pos:start="497:17" pos:end="497:31"><name pos:start="497:17" pos:end="497:31"><name pos:start="497:17" pos:end="497:17">s</name><operator pos:start="497:18" pos:end="497:19">-&gt;</operator><name pos:start="497:20" pos:end="497:28">upscale_v</name><index pos:start="497:29" pos:end="497:31">[<expr pos:start="497:30" pos:end="497:30"><name pos:start="497:30" pos:end="497:30">p</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="499:17" pos:end="499:29"><block_content pos:start="499:17" pos:end="499:29">

                <expr_stmt pos:start="499:17" pos:end="499:29"><expr pos:start="499:17" pos:end="499:28"><name pos:start="499:17" pos:end="499:17">h</name> <operator pos:start="499:19" pos:end="499:19">=</operator> <operator pos:start="499:21" pos:end="499:21">(</operator><name pos:start="499:22" pos:end="499:22">h</name><operator pos:start="499:23" pos:end="499:23">+</operator><literal type="number" pos:start="499:24" pos:end="499:24">1</literal><operator pos:start="499:25" pos:end="499:25">)</operator><operator pos:start="499:26" pos:end="499:27">&gt;&gt;</operator><literal type="number" pos:start="499:28" pos:end="499:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="501:13" pos:end="501:30"><expr pos:start="501:13" pos:end="501:29"><call pos:start="501:13" pos:end="501:29"><name pos:start="501:13" pos:end="501:22">av_assert0</name><argument_list pos:start="501:23" pos:end="501:29">(<argument pos:start="501:24" pos:end="501:28"><expr pos:start="501:24" pos:end="501:28"><name pos:start="501:24" pos:end="501:24">w</name> <operator pos:start="501:26" pos:end="501:26">&gt;</operator> <literal type="number" pos:start="501:28" pos:end="501:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="503:13" pos:end="553:13">for <control pos:start="503:17" pos:end="503:35">(<init pos:start="503:18" pos:end="503:23"><expr pos:start="503:18" pos:end="503:22"><name pos:start="503:18" pos:end="503:18">i</name> <operator pos:start="503:20" pos:end="503:20">=</operator> <literal type="number" pos:start="503:22" pos:end="503:22">0</literal></expr>;</init> <condition pos:start="503:25" pos:end="503:30"><expr pos:start="503:25" pos:end="503:29"><name pos:start="503:25" pos:end="503:25">i</name> <operator pos:start="503:27" pos:end="503:27">&lt;</operator> <name pos:start="503:29" pos:end="503:29">h</name></expr>;</condition> <incr pos:start="503:32" pos:end="503:34"><expr pos:start="503:32" pos:end="503:34"><name pos:start="503:32" pos:end="503:32">i</name><operator pos:start="503:33" pos:end="503:34">++</operator></expr></incr>)</control> <block pos:start="503:37" pos:end="553:13">{<block_content pos:start="505:17" pos:end="551:39">

                <if_stmt pos:start="505:17" pos:end="549:17"><if pos:start="505:17" pos:end="523:17">if <condition pos:start="505:20" pos:end="505:41">(<expr pos:start="505:21" pos:end="505:40"><name pos:start="505:21" pos:end="505:35"><name pos:start="505:21" pos:end="505:21">s</name><operator pos:start="505:22" pos:end="505:23">-&gt;</operator><name pos:start="505:24" pos:end="505:32">upscale_h</name><index pos:start="505:33" pos:end="505:35">[<expr pos:start="505:34" pos:end="505:34"><name pos:start="505:34" pos:end="505:34">p</name></expr>]</index></name> <operator pos:start="505:37" pos:end="505:38">==</operator> <literal type="number" pos:start="505:40" pos:end="505:40">1</literal></expr>)</condition> <block pos:start="505:43" pos:end="523:17">{<block_content pos:start="507:21" pos:end="521:21">

                    <if_stmt pos:start="507:21" pos:end="509:78"><if pos:start="507:21" pos:end="507:91">if <condition pos:start="507:24" pos:end="507:32">(<expr pos:start="507:25" pos:end="507:31"><name pos:start="507:25" pos:end="507:31">is16bit</name></expr>)</condition><block type="pseudo" pos:start="507:34" pos:end="507:91"><block_content pos:start="507:34" pos:end="507:91"> <expr_stmt pos:start="507:34" pos:end="507:91"><expr pos:start="507:34" pos:end="507:90"><operator pos:start="507:34" pos:end="507:34">(</operator><operator pos:start="507:35" pos:end="507:35">(</operator><name pos:start="507:36" pos:end="507:43">uint16_t</name><operator pos:start="507:44" pos:end="507:44">*</operator><operator pos:start="507:45" pos:end="507:45">)</operator><name pos:start="507:46" pos:end="507:49">line</name><operator pos:start="507:50" pos:end="507:50">)</operator><index pos:start="507:51" pos:end="507:57">[<expr pos:start="507:52" pos:end="507:56"><name pos:start="507:52" pos:end="507:52">w</name> <operator pos:start="507:54" pos:end="507:54">-</operator> <literal type="number" pos:start="507:56" pos:end="507:56">1</literal></expr>]</index> <operator pos:start="507:59" pos:end="507:59">=</operator> <operator pos:start="507:61" pos:end="507:61">(</operator><operator pos:start="507:62" pos:end="507:62">(</operator><name pos:start="507:63" pos:end="507:70">uint16_t</name><operator pos:start="507:71" pos:end="507:71">*</operator><operator pos:start="507:72" pos:end="507:72">)</operator><name pos:start="507:73" pos:end="507:76">line</name><operator pos:start="507:77" pos:end="507:77">)</operator><index pos:start="507:78" pos:end="507:90">[<expr pos:start="507:79" pos:end="507:89"><operator pos:start="507:79" pos:end="507:79">(</operator><name pos:start="507:80" pos:end="507:80">w</name> <operator pos:start="507:82" pos:end="507:82">-</operator> <literal type="number" pos:start="507:84" pos:end="507:84">1</literal><operator pos:start="507:85" pos:end="507:85">)</operator> <operator pos:start="507:87" pos:end="507:87">/</operator> <literal type="number" pos:start="507:89" pos:end="507:89">2</literal></expr>]</index></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="509:21" pos:end="509:78">else<block type="pseudo" pos:start="509:47" pos:end="509:78"><block_content pos:start="509:47" pos:end="509:78">                      <expr_stmt pos:start="509:47" pos:end="509:78"><expr pos:start="509:47" pos:end="509:77"><name pos:start="509:47" pos:end="509:57"><name pos:start="509:47" pos:end="509:50">line</name><index pos:start="509:51" pos:end="509:57">[<expr pos:start="509:52" pos:end="509:56"><name pos:start="509:52" pos:end="509:52">w</name> <operator pos:start="509:54" pos:end="509:54">-</operator> <literal type="number" pos:start="509:56" pos:end="509:56">1</literal></expr>]</index></name> <operator pos:start="509:59" pos:end="509:59">=</operator> <name pos:start="509:61" pos:end="509:77"><name pos:start="509:61" pos:end="509:64">line</name><index pos:start="509:65" pos:end="509:77">[<expr pos:start="509:66" pos:end="509:76"><operator pos:start="509:66" pos:end="509:66">(</operator><name pos:start="509:67" pos:end="509:67">w</name> <operator pos:start="509:69" pos:end="509:69">-</operator> <literal type="number" pos:start="509:71" pos:end="509:71">1</literal><operator pos:start="509:72" pos:end="509:72">)</operator> <operator pos:start="509:74" pos:end="509:74">/</operator> <literal type="number" pos:start="509:76" pos:end="509:76">2</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <for pos:start="511:21" pos:end="521:21">for <control pos:start="511:25" pos:end="511:59">(<init pos:start="511:26" pos:end="511:39"><expr pos:start="511:26" pos:end="511:38"><name pos:start="511:26" pos:end="511:30">index</name> <operator pos:start="511:32" pos:end="511:32">=</operator> <name pos:start="511:34" pos:end="511:34">w</name> <operator pos:start="511:36" pos:end="511:36">-</operator> <literal type="number" pos:start="511:38" pos:end="511:38">2</literal></expr>;</init> <condition pos:start="511:41" pos:end="511:50"><expr pos:start="511:41" pos:end="511:49"><name pos:start="511:41" pos:end="511:45">index</name> <operator pos:start="511:47" pos:end="511:47">&gt;</operator> <literal type="number" pos:start="511:49" pos:end="511:49">0</literal></expr>;</condition> <incr pos:start="511:52" pos:end="511:58"><expr pos:start="511:52" pos:end="511:58"><name pos:start="511:52" pos:end="511:56">index</name><operator pos:start="511:57" pos:end="511:58">--</operator></expr></incr>)</control> <block pos:start="511:61" pos:end="521:21">{<block_content pos:start="513:25" pos:end="519:89">

                        <if_stmt pos:start="513:25" pos:end="519:89"><if pos:start="513:25" pos:end="515:128">if <condition pos:start="513:28" pos:end="513:36">(<expr pos:start="513:29" pos:end="513:35"><name pos:start="513:29" pos:end="513:35">is16bit</name></expr>)</condition><block type="pseudo" pos:start="515:29" pos:end="515:128"><block_content pos:start="515:29" pos:end="515:128">

                            <expr_stmt pos:start="515:29" pos:end="515:128"><expr pos:start="515:29" pos:end="515:127"><operator pos:start="515:29" pos:end="515:29">(</operator><operator pos:start="515:30" pos:end="515:30">(</operator><name pos:start="515:31" pos:end="515:38">uint16_t</name><operator pos:start="515:39" pos:end="515:39">*</operator><operator pos:start="515:40" pos:end="515:40">)</operator><name pos:start="515:41" pos:end="515:44">line</name><operator pos:start="515:45" pos:end="515:45">)</operator><index pos:start="515:46" pos:end="515:52">[<expr pos:start="515:47" pos:end="515:51"><name pos:start="515:47" pos:end="515:51">index</name></expr>]</index> <operator pos:start="515:54" pos:end="515:54">=</operator> <operator pos:start="515:56" pos:end="515:56">(</operator><operator pos:start="515:57" pos:end="515:57">(</operator><operator pos:start="515:58" pos:end="515:58">(</operator><name pos:start="515:59" pos:end="515:66">uint16_t</name><operator pos:start="515:67" pos:end="515:67">*</operator><operator pos:start="515:68" pos:end="515:68">)</operator><name pos:start="515:69" pos:end="515:72">line</name><operator pos:start="515:73" pos:end="515:73">)</operator><index pos:start="515:74" pos:end="515:84">[<expr pos:start="515:75" pos:end="515:83"><name pos:start="515:75" pos:end="515:79">index</name> <operator pos:start="515:81" pos:end="515:81">/</operator> <literal type="number" pos:start="515:83" pos:end="515:83">2</literal></expr>]</index> <operator pos:start="515:86" pos:end="515:86">+</operator> <operator pos:start="515:88" pos:end="515:88">(</operator><operator pos:start="515:89" pos:end="515:89">(</operator><name pos:start="515:90" pos:end="515:97">uint16_t</name><operator pos:start="515:98" pos:end="515:98">*</operator><operator pos:start="515:99" pos:end="515:99">)</operator><name pos:start="515:100" pos:end="515:103">line</name><operator pos:start="515:104" pos:end="515:104">)</operator><index pos:start="515:105" pos:end="515:121">[<expr pos:start="515:106" pos:end="515:120"><operator pos:start="515:106" pos:end="515:106">(</operator><name pos:start="515:107" pos:end="515:111">index</name> <operator pos:start="515:113" pos:end="515:113">+</operator> <literal type="number" pos:start="515:115" pos:end="515:115">1</literal><operator pos:start="515:116" pos:end="515:116">)</operator> <operator pos:start="515:118" pos:end="515:118">/</operator> <literal type="number" pos:start="515:120" pos:end="515:120">2</literal></expr>]</index><operator pos:start="515:122" pos:end="515:122">)</operator> <operator pos:start="515:124" pos:end="515:125">&gt;&gt;</operator> <literal type="number" pos:start="515:127" pos:end="515:127">1</literal></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="517:25" pos:end="519:89">else<block type="pseudo" pos:start="519:29" pos:end="519:89"><block_content pos:start="519:29" pos:end="519:89">

                            <expr_stmt pos:start="519:29" pos:end="519:89"><expr pos:start="519:29" pos:end="519:88"><name pos:start="519:29" pos:end="519:39"><name pos:start="519:29" pos:end="519:32">line</name><index pos:start="519:33" pos:end="519:39">[<expr pos:start="519:34" pos:end="519:38"><name pos:start="519:34" pos:end="519:38">index</name></expr>]</index></name> <operator pos:start="519:41" pos:end="519:41">=</operator> <operator pos:start="519:43" pos:end="519:43">(</operator><name pos:start="519:44" pos:end="519:58"><name pos:start="519:44" pos:end="519:47">line</name><index pos:start="519:48" pos:end="519:58">[<expr pos:start="519:49" pos:end="519:57"><name pos:start="519:49" pos:end="519:53">index</name> <operator pos:start="519:55" pos:end="519:55">/</operator> <literal type="number" pos:start="519:57" pos:end="519:57">2</literal></expr>]</index></name> <operator pos:start="519:60" pos:end="519:60">+</operator> <name pos:start="519:62" pos:end="519:82"><name pos:start="519:62" pos:end="519:65">line</name><index pos:start="519:66" pos:end="519:82">[<expr pos:start="519:67" pos:end="519:81"><operator pos:start="519:67" pos:end="519:67">(</operator><name pos:start="519:68" pos:end="519:72">index</name> <operator pos:start="519:74" pos:end="519:74">+</operator> <literal type="number" pos:start="519:76" pos:end="519:76">1</literal><operator pos:start="519:77" pos:end="519:77">)</operator> <operator pos:start="519:79" pos:end="519:79">/</operator> <literal type="number" pos:start="519:81" pos:end="519:81">2</literal></expr>]</index></name><operator pos:start="519:83" pos:end="519:83">)</operator> <operator pos:start="519:85" pos:end="519:86">&gt;&gt;</operator> <literal type="number" pos:start="519:88" pos:end="519:88">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <if type="elseif" pos:start="523:19" pos:end="549:17">else if <condition pos:start="523:27" pos:end="523:48">(<expr pos:start="523:28" pos:end="523:47"><name pos:start="523:28" pos:end="523:42"><name pos:start="523:28" pos:end="523:28">s</name><operator pos:start="523:29" pos:end="523:30">-&gt;</operator><name pos:start="523:31" pos:end="523:39">upscale_h</name><index pos:start="523:40" pos:end="523:42">[<expr pos:start="523:41" pos:end="523:41"><name pos:start="523:41" pos:end="523:41">p</name></expr>]</index></name> <operator pos:start="523:44" pos:end="523:45">==</operator> <literal type="number" pos:start="523:47" pos:end="523:47">2</literal></expr>)</condition> <block pos:start="523:50" pos:end="549:17">{<block_content pos:start="525:21" pos:end="547:21">

                    <if_stmt pos:start="525:21" pos:end="541:21"><if pos:start="525:21" pos:end="533:21">if <condition pos:start="525:24" pos:end="525:32">(<expr pos:start="525:25" pos:end="525:31"><name pos:start="525:25" pos:end="525:31">is16bit</name></expr>)</condition> <block pos:start="525:34" pos:end="533:21">{<block_content pos:start="527:25" pos:end="531:80">

                        <expr_stmt pos:start="527:25" pos:end="527:82"><expr pos:start="527:25" pos:end="527:81"><operator pos:start="527:25" pos:end="527:25">(</operator><operator pos:start="527:26" pos:end="527:26">(</operator><name pos:start="527:27" pos:end="527:34">uint16_t</name><operator pos:start="527:35" pos:end="527:35">*</operator><operator pos:start="527:36" pos:end="527:36">)</operator><name pos:start="527:37" pos:end="527:40">line</name><operator pos:start="527:41" pos:end="527:41">)</operator><index pos:start="527:42" pos:end="527:48">[<expr pos:start="527:43" pos:end="527:47"><name pos:start="527:43" pos:end="527:43">w</name> <operator pos:start="527:45" pos:end="527:45">-</operator> <literal type="number" pos:start="527:47" pos:end="527:47">1</literal></expr>]</index> <operator pos:start="527:50" pos:end="527:50">=</operator> <operator pos:start="527:52" pos:end="527:52">(</operator><operator pos:start="527:53" pos:end="527:53">(</operator><name pos:start="527:54" pos:end="527:61">uint16_t</name><operator pos:start="527:62" pos:end="527:62">*</operator><operator pos:start="527:63" pos:end="527:63">)</operator><name pos:start="527:64" pos:end="527:67">line</name><operator pos:start="527:68" pos:end="527:68">)</operator><index pos:start="527:69" pos:end="527:81">[<expr pos:start="527:70" pos:end="527:80"><operator pos:start="527:70" pos:end="527:70">(</operator><name pos:start="527:71" pos:end="527:71">w</name> <operator pos:start="527:73" pos:end="527:73">-</operator> <literal type="number" pos:start="527:75" pos:end="527:75">1</literal><operator pos:start="527:76" pos:end="527:76">)</operator> <operator pos:start="527:78" pos:end="527:78">/</operator> <literal type="number" pos:start="527:80" pos:end="527:80">3</literal></expr>]</index></expr>;</expr_stmt>

                        <if_stmt pos:start="529:25" pos:end="531:80"><if pos:start="529:25" pos:end="531:80">if <condition pos:start="529:28" pos:end="529:34">(<expr pos:start="529:29" pos:end="529:33"><name pos:start="529:29" pos:end="529:29">w</name> <operator pos:start="529:31" pos:end="529:31">&gt;</operator> <literal type="number" pos:start="529:33" pos:end="529:33">1</literal></expr>)</condition><block type="pseudo" pos:start="531:29" pos:end="531:80"><block_content pos:start="531:29" pos:end="531:80">

                            <expr_stmt pos:start="531:29" pos:end="531:80"><expr pos:start="531:29" pos:end="531:79"><operator pos:start="531:29" pos:end="531:29">(</operator><operator pos:start="531:30" pos:end="531:30">(</operator><name pos:start="531:31" pos:end="531:38">uint16_t</name><operator pos:start="531:39" pos:end="531:39">*</operator><operator pos:start="531:40" pos:end="531:40">)</operator><name pos:start="531:41" pos:end="531:44">line</name><operator pos:start="531:45" pos:end="531:45">)</operator><index pos:start="531:46" pos:end="531:52">[<expr pos:start="531:47" pos:end="531:51"><name pos:start="531:47" pos:end="531:47">w</name> <operator pos:start="531:49" pos:end="531:49">-</operator> <literal type="number" pos:start="531:51" pos:end="531:51">2</literal></expr>]</index> <operator pos:start="531:54" pos:end="531:54">=</operator> <operator pos:start="531:56" pos:end="531:56">(</operator><operator pos:start="531:57" pos:end="531:57">(</operator><name pos:start="531:58" pos:end="531:65">uint16_t</name><operator pos:start="531:66" pos:end="531:66">*</operator><operator pos:start="531:67" pos:end="531:67">)</operator><name pos:start="531:68" pos:end="531:71">line</name><operator pos:start="531:72" pos:end="531:72">)</operator><index pos:start="531:73" pos:end="531:79">[<expr pos:start="531:74" pos:end="531:78"><name pos:start="531:74" pos:end="531:74">w</name> <operator pos:start="531:76" pos:end="531:76">-</operator> <literal type="number" pos:start="531:78" pos:end="531:78">1</literal></expr>]</index></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if> <else pos:start="533:23" pos:end="541:21">else <block pos:start="533:28" pos:end="541:21">{<block_content pos:start="535:25" pos:end="539:54">

                        <expr_stmt pos:start="535:25" pos:end="535:56"><expr pos:start="535:25" pos:end="535:55"><name pos:start="535:25" pos:end="535:35"><name pos:start="535:25" pos:end="535:28">line</name><index pos:start="535:29" pos:end="535:35">[<expr pos:start="535:30" pos:end="535:34"><name pos:start="535:30" pos:end="535:30">w</name> <operator pos:start="535:32" pos:end="535:32">-</operator> <literal type="number" pos:start="535:34" pos:end="535:34">1</literal></expr>]</index></name> <operator pos:start="535:37" pos:end="535:37">=</operator> <name pos:start="535:39" pos:end="535:55"><name pos:start="535:39" pos:end="535:42">line</name><index pos:start="535:43" pos:end="535:55">[<expr pos:start="535:44" pos:end="535:54"><operator pos:start="535:44" pos:end="535:44">(</operator><name pos:start="535:45" pos:end="535:45">w</name> <operator pos:start="535:47" pos:end="535:47">-</operator> <literal type="number" pos:start="535:49" pos:end="535:49">1</literal><operator pos:start="535:50" pos:end="535:50">)</operator> <operator pos:start="535:52" pos:end="535:52">/</operator> <literal type="number" pos:start="535:54" pos:end="535:54">3</literal></expr>]</index></name></expr>;</expr_stmt>

                        <if_stmt pos:start="537:25" pos:end="539:54"><if pos:start="537:25" pos:end="539:54">if <condition pos:start="537:28" pos:end="537:34">(<expr pos:start="537:29" pos:end="537:33"><name pos:start="537:29" pos:end="537:29">w</name> <operator pos:start="537:31" pos:end="537:31">&gt;</operator> <literal type="number" pos:start="537:33" pos:end="537:33">1</literal></expr>)</condition><block type="pseudo" pos:start="539:29" pos:end="539:54"><block_content pos:start="539:29" pos:end="539:54">

                            <expr_stmt pos:start="539:29" pos:end="539:54"><expr pos:start="539:29" pos:end="539:53"><name pos:start="539:29" pos:end="539:39"><name pos:start="539:29" pos:end="539:32">line</name><index pos:start="539:33" pos:end="539:39">[<expr pos:start="539:34" pos:end="539:38"><name pos:start="539:34" pos:end="539:34">w</name> <operator pos:start="539:36" pos:end="539:36">-</operator> <literal type="number" pos:start="539:38" pos:end="539:38">2</literal></expr>]</index></name> <operator pos:start="539:41" pos:end="539:41">=</operator> <name pos:start="539:43" pos:end="539:53"><name pos:start="539:43" pos:end="539:46">line</name><index pos:start="539:47" pos:end="539:53">[<expr pos:start="539:48" pos:end="539:52"><name pos:start="539:48" pos:end="539:48">w</name> <operator pos:start="539:50" pos:end="539:50">-</operator> <literal type="number" pos:start="539:52" pos:end="539:52">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <for pos:start="543:21" pos:end="547:21">for <control pos:start="543:25" pos:end="543:59">(<init pos:start="543:26" pos:end="543:39"><expr pos:start="543:26" pos:end="543:38"><name pos:start="543:26" pos:end="543:30">index</name> <operator pos:start="543:32" pos:end="543:32">=</operator> <name pos:start="543:34" pos:end="543:34">w</name> <operator pos:start="543:36" pos:end="543:36">-</operator> <literal type="number" pos:start="543:38" pos:end="543:38">3</literal></expr>;</init> <condition pos:start="543:41" pos:end="543:50"><expr pos:start="543:41" pos:end="543:49"><name pos:start="543:41" pos:end="543:45">index</name> <operator pos:start="543:47" pos:end="543:47">&gt;</operator> <literal type="number" pos:start="543:49" pos:end="543:49">0</literal></expr>;</condition> <incr pos:start="543:52" pos:end="543:58"><expr pos:start="543:52" pos:end="543:58"><name pos:start="543:52" pos:end="543:56">index</name><operator pos:start="543:57" pos:end="543:58">--</operator></expr></incr>)</control> <block pos:start="543:61" pos:end="547:21">{<block_content pos:start="545:25" pos:end="545:112">

                        <expr_stmt pos:start="545:25" pos:end="545:112"><expr pos:start="545:25" pos:end="545:111"><name pos:start="545:25" pos:end="545:35"><name pos:start="545:25" pos:end="545:28">line</name><index pos:start="545:29" pos:end="545:35">[<expr pos:start="545:30" pos:end="545:34"><name pos:start="545:30" pos:end="545:34">index</name></expr>]</index></name> <operator pos:start="545:37" pos:end="545:37">=</operator> <operator pos:start="545:39" pos:end="545:39">(</operator><name pos:start="545:40" pos:end="545:54"><name pos:start="545:40" pos:end="545:43">line</name><index pos:start="545:44" pos:end="545:54">[<expr pos:start="545:45" pos:end="545:53"><name pos:start="545:45" pos:end="545:49">index</name> <operator pos:start="545:51" pos:end="545:51">/</operator> <literal type="number" pos:start="545:53" pos:end="545:53">3</literal></expr>]</index></name> <operator pos:start="545:56" pos:end="545:56">+</operator> <name pos:start="545:58" pos:end="545:78"><name pos:start="545:58" pos:end="545:61">line</name><index pos:start="545:62" pos:end="545:78">[<expr pos:start="545:63" pos:end="545:77"><operator pos:start="545:63" pos:end="545:63">(</operator><name pos:start="545:64" pos:end="545:68">index</name> <operator pos:start="545:70" pos:end="545:70">+</operator> <literal type="number" pos:start="545:72" pos:end="545:72">1</literal><operator pos:start="545:73" pos:end="545:73">)</operator> <operator pos:start="545:75" pos:end="545:75">/</operator> <literal type="number" pos:start="545:77" pos:end="545:77">3</literal></expr>]</index></name> <operator pos:start="545:80" pos:end="545:80">+</operator> <name pos:start="545:82" pos:end="545:102"><name pos:start="545:82" pos:end="545:85">line</name><index pos:start="545:86" pos:end="545:102">[<expr pos:start="545:87" pos:end="545:101"><operator pos:start="545:87" pos:end="545:87">(</operator><name pos:start="545:88" pos:end="545:92">index</name> <operator pos:start="545:94" pos:end="545:94">+</operator> <literal type="number" pos:start="545:96" pos:end="545:96">2</literal><operator pos:start="545:97" pos:end="545:97">)</operator> <operator pos:start="545:99" pos:end="545:99">/</operator> <literal type="number" pos:start="545:101" pos:end="545:101">3</literal></expr>]</index></name> <operator pos:start="545:104" pos:end="545:104">+</operator> <literal type="number" pos:start="545:106" pos:end="545:106">1</literal><operator pos:start="545:107" pos:end="545:107">)</operator> <operator pos:start="545:109" pos:end="545:109">/</operator> <literal type="number" pos:start="545:111" pos:end="545:111">3</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="551:17" pos:end="551:39"><expr pos:start="551:17" pos:end="551:38"><name pos:start="551:17" pos:end="551:20">line</name> <operator pos:start="551:22" pos:end="551:23">+=</operator> <name pos:start="551:25" pos:end="551:38"><name pos:start="551:25" pos:end="551:25">s</name><operator pos:start="551:26" pos:end="551:27">-&gt;</operator><name pos:start="551:28" pos:end="551:35">linesize</name><index pos:start="551:36" pos:end="551:38">[<expr pos:start="551:37" pos:end="551:37"><name pos:start="551:37" pos:end="551:37">p</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="559:5" pos:end="639:5"><if pos:start="559:5" pos:end="639:5">if <condition pos:start="559:8" pos:end="559:30">(<expr pos:start="559:9" pos:end="559:29"><call pos:start="559:9" pos:end="559:29"><name pos:start="559:9" pos:end="559:15">AV_RB32</name><argument_list pos:start="559:16" pos:end="559:29">(<argument pos:start="559:17" pos:end="559:28"><expr pos:start="559:17" pos:end="559:28"><name pos:start="559:17" pos:end="559:28"><name pos:start="559:17" pos:end="559:17">s</name><operator pos:start="559:18" pos:end="559:19">-&gt;</operator><name pos:start="559:20" pos:end="559:28">upscale_v</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="559:32" pos:end="639:5">{<block_content pos:start="561:9" pos:end="637:9">

        <decl_stmt pos:start="561:9" pos:end="561:14"><decl pos:start="561:9" pos:end="561:13"><type pos:start="561:9" pos:end="561:11"><name pos:start="561:9" pos:end="561:11">int</name></type> <name pos:start="561:13" pos:end="561:13">p</name></decl>;</decl_stmt>

        <expr_stmt pos:start="563:9" pos:end="589:21"><expr pos:start="563:9" pos:end="589:20"><call pos:start="563:9" pos:end="589:20"><name pos:start="563:9" pos:end="563:18">av_assert0</name><argument_list pos:start="563:19" pos:end="589:20">(<argument pos:start="563:20" pos:end="587:53"><expr pos:start="563:20" pos:end="587:53"><name pos:start="563:20" pos:end="563:33"><name pos:start="563:20" pos:end="563:24">avctx</name><operator pos:start="563:25" pos:end="563:26">-&gt;</operator><name pos:start="563:27" pos:end="563:33">pix_fmt</name></name> <operator pos:start="563:35" pos:end="563:36">==</operator> <name pos:start="563:38" pos:end="563:56">AV_PIX_FMT_YUVJ444P</name> <operator pos:start="563:58" pos:end="563:59">||</operator>

                   <name pos:start="565:20" pos:end="565:33"><name pos:start="565:20" pos:end="565:24">avctx</name><operator pos:start="565:25" pos:end="565:26">-&gt;</operator><name pos:start="565:27" pos:end="565:33">pix_fmt</name></name> <operator pos:start="565:35" pos:end="565:36">==</operator> <name pos:start="565:38" pos:end="565:55">AV_PIX_FMT_YUV444P</name>  <operator pos:start="565:58" pos:end="565:59">||</operator>

                   <name pos:start="567:20" pos:end="567:33"><name pos:start="567:20" pos:end="567:24">avctx</name><operator pos:start="567:25" pos:end="567:26">-&gt;</operator><name pos:start="567:27" pos:end="567:33">pix_fmt</name></name> <operator pos:start="567:35" pos:end="567:36">==</operator> <name pos:start="567:38" pos:end="567:56">AV_PIX_FMT_YUVJ422P</name> <operator pos:start="567:58" pos:end="567:59">||</operator>

                   <name pos:start="569:20" pos:end="569:33"><name pos:start="569:20" pos:end="569:24">avctx</name><operator pos:start="569:25" pos:end="569:26">-&gt;</operator><name pos:start="569:27" pos:end="569:33">pix_fmt</name></name> <operator pos:start="569:35" pos:end="569:36">==</operator> <name pos:start="569:38" pos:end="569:55">AV_PIX_FMT_YUV422P</name>  <operator pos:start="569:58" pos:end="569:59">||</operator>

                   <name pos:start="571:20" pos:end="571:33"><name pos:start="571:20" pos:end="571:24">avctx</name><operator pos:start="571:25" pos:end="571:26">-&gt;</operator><name pos:start="571:27" pos:end="571:33">pix_fmt</name></name> <operator pos:start="571:35" pos:end="571:36">==</operator> <name pos:start="571:38" pos:end="571:56">AV_PIX_FMT_YUVJ420P</name> <operator pos:start="571:58" pos:end="571:59">||</operator>

                   <name pos:start="573:20" pos:end="573:33"><name pos:start="573:20" pos:end="573:24">avctx</name><operator pos:start="573:25" pos:end="573:26">-&gt;</operator><name pos:start="573:27" pos:end="573:33">pix_fmt</name></name> <operator pos:start="573:35" pos:end="573:36">==</operator> <name pos:start="573:38" pos:end="573:55">AV_PIX_FMT_YUV420P</name>  <operator pos:start="573:58" pos:end="573:59">||</operator>

                   <name pos:start="575:20" pos:end="575:33"><name pos:start="575:20" pos:end="575:24">avctx</name><operator pos:start="575:25" pos:end="575:26">-&gt;</operator><name pos:start="575:27" pos:end="575:33">pix_fmt</name></name> <operator pos:start="575:35" pos:end="575:36">==</operator> <name pos:start="575:38" pos:end="575:55">AV_PIX_FMT_YUV440P</name>  <operator pos:start="575:58" pos:end="575:59">||</operator>

                   <name pos:start="577:20" pos:end="577:33"><name pos:start="577:20" pos:end="577:24">avctx</name><operator pos:start="577:25" pos:end="577:26">-&gt;</operator><name pos:start="577:27" pos:end="577:33">pix_fmt</name></name> <operator pos:start="577:35" pos:end="577:36">==</operator> <name pos:start="577:38" pos:end="577:56">AV_PIX_FMT_YUVJ440P</name> <operator pos:start="577:58" pos:end="577:59">||</operator>

                   <name pos:start="579:20" pos:end="579:33"><name pos:start="579:20" pos:end="579:24">avctx</name><operator pos:start="579:25" pos:end="579:26">-&gt;</operator><name pos:start="579:27" pos:end="579:33">pix_fmt</name></name> <operator pos:start="579:35" pos:end="579:36">==</operator> <name pos:start="579:38" pos:end="579:56">AV_PIX_FMT_YUVA444P</name> <operator pos:start="579:58" pos:end="579:59">||</operator>

                   <name pos:start="581:20" pos:end="581:33"><name pos:start="581:20" pos:end="581:24">avctx</name><operator pos:start="581:25" pos:end="581:26">-&gt;</operator><name pos:start="581:27" pos:end="581:33">pix_fmt</name></name> <operator pos:start="581:35" pos:end="581:36">==</operator> <name pos:start="581:38" pos:end="581:56">AV_PIX_FMT_YUVA420P</name>  <operator pos:start="581:59" pos:end="581:60">||</operator>

                   <name pos:start="583:20" pos:end="583:33"><name pos:start="583:20" pos:end="583:24">avctx</name><operator pos:start="583:25" pos:end="583:26">-&gt;</operator><name pos:start="583:27" pos:end="583:33">pix_fmt</name></name> <operator pos:start="583:35" pos:end="583:36">==</operator> <name pos:start="583:38" pos:end="583:58">AV_PIX_FMT_YUVA420P16</name><operator pos:start="583:59" pos:end="583:60">||</operator>

                   <name pos:start="585:20" pos:end="585:33"><name pos:start="585:20" pos:end="585:24">avctx</name><operator pos:start="585:25" pos:end="585:26">-&gt;</operator><name pos:start="585:27" pos:end="585:33">pix_fmt</name></name> <operator pos:start="585:35" pos:end="585:36">==</operator> <name pos:start="585:38" pos:end="585:52">AV_PIX_FMT_GBRP</name>     <operator pos:start="585:58" pos:end="585:59">||</operator>

                   <name pos:start="587:20" pos:end="587:33"><name pos:start="587:20" pos:end="587:24">avctx</name><operator pos:start="587:25" pos:end="587:26">-&gt;</operator><name pos:start="587:27" pos:end="587:33">pix_fmt</name></name> <operator pos:start="587:35" pos:end="587:36">==</operator> <name pos:start="587:38" pos:end="587:53">AV_PIX_FMT_GBRAP</name></expr></argument>

                   )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="591:9" pos:end="591:75"><expr pos:start="591:9" pos:end="591:74"><call pos:start="591:9" pos:end="591:74"><name pos:start="591:9" pos:end="591:37">avcodec_get_chroma_sub_sample</name><argument_list pos:start="591:38" pos:end="591:74">(<argument pos:start="591:39" pos:end="591:55"><expr pos:start="591:39" pos:end="591:55"><name pos:start="591:39" pos:end="591:55"><name pos:start="591:39" pos:end="591:39">s</name><operator pos:start="591:40" pos:end="591:41">-&gt;</operator><name pos:start="591:42" pos:end="591:46">avctx</name><operator pos:start="591:47" pos:end="591:48">-&gt;</operator><name pos:start="591:49" pos:end="591:55">pix_fmt</name></name></expr></argument>, <argument pos:start="591:58" pos:end="591:64"><expr pos:start="591:58" pos:end="591:64"><operator pos:start="591:58" pos:end="591:58">&amp;</operator><name pos:start="591:59" pos:end="591:64">hshift</name></expr></argument>, <argument pos:start="591:67" pos:end="591:73"><expr pos:start="591:67" pos:end="591:73"><operator pos:start="591:67" pos:end="591:67">&amp;</operator><name pos:start="591:68" pos:end="591:73">vshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="593:9" pos:end="637:9">for <control pos:start="593:13" pos:end="593:31">(<init pos:start="593:14" pos:end="593:19"><expr pos:start="593:14" pos:end="593:18"><name pos:start="593:14" pos:end="593:14">p</name> <operator pos:start="593:16" pos:end="593:16">=</operator> <literal type="number" pos:start="593:18" pos:end="593:18">0</literal></expr>;</init> <condition pos:start="593:21" pos:end="593:26"><expr pos:start="593:21" pos:end="593:25"><name pos:start="593:21" pos:end="593:21">p</name> <operator pos:start="593:23" pos:end="593:23">&lt;</operator> <literal type="number" pos:start="593:25" pos:end="593:25">4</literal></expr>;</condition> <incr pos:start="593:28" pos:end="593:30"><expr pos:start="593:28" pos:end="593:30"><name pos:start="593:28" pos:end="593:28">p</name><operator pos:start="593:29" pos:end="593:30">++</operator></expr></incr>)</control> <block pos:start="593:33" pos:end="637:9">{<block_content pos:start="595:13" pos:end="635:13">

            <decl_stmt pos:start="595:13" pos:end="595:25"><decl pos:start="595:13" pos:end="595:24"><type pos:start="595:13" pos:end="595:21"><name pos:start="595:13" pos:end="595:19">uint8_t</name> <modifier pos:start="595:21" pos:end="595:21">*</modifier></type><name pos:start="595:22" pos:end="595:24">dst</name></decl>;</decl_stmt>

            <decl_stmt pos:start="597:13" pos:end="597:29"><decl pos:start="597:13" pos:end="597:28"><type pos:start="597:13" pos:end="597:15"><name pos:start="597:13" pos:end="597:15">int</name></type> <name pos:start="597:17" pos:end="597:17">w</name> <init pos:start="597:19" pos:end="597:28">= <expr pos:start="597:21" pos:end="597:28"><name pos:start="597:21" pos:end="597:28"><name pos:start="597:21" pos:end="597:21">s</name><operator pos:start="597:22" pos:end="597:23">-&gt;</operator><name pos:start="597:24" pos:end="597:28">width</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="599:13" pos:end="599:30"><decl pos:start="599:13" pos:end="599:29"><type pos:start="599:13" pos:end="599:15"><name pos:start="599:13" pos:end="599:15">int</name></type> <name pos:start="599:17" pos:end="599:17">h</name> <init pos:start="599:19" pos:end="599:29">= <expr pos:start="599:21" pos:end="599:29"><name pos:start="599:21" pos:end="599:29"><name pos:start="599:21" pos:end="599:21">s</name><operator pos:start="599:22" pos:end="599:23">-&gt;</operator><name pos:start="599:24" pos:end="599:29">height</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="601:13" pos:end="603:25"><if pos:start="601:13" pos:end="603:25">if <condition pos:start="601:16" pos:end="601:33">(<expr pos:start="601:17" pos:end="601:32"><operator pos:start="601:17" pos:end="601:17">!</operator><name pos:start="601:18" pos:end="601:32"><name pos:start="601:18" pos:end="601:18">s</name><operator pos:start="601:19" pos:end="601:20">-&gt;</operator><name pos:start="601:21" pos:end="601:29">upscale_v</name><index pos:start="601:30" pos:end="601:32">[<expr pos:start="601:31" pos:end="601:31"><name pos:start="601:31" pos:end="601:31">p</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="603:17" pos:end="603:25"><block_content pos:start="603:17" pos:end="603:25">

                <continue pos:start="603:17" pos:end="603:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="605:13" pos:end="611:13"><if pos:start="605:13" pos:end="611:13">if <condition pos:start="605:16" pos:end="605:29">(<expr pos:start="605:17" pos:end="605:28"><name pos:start="605:17" pos:end="605:17">p</name><operator pos:start="605:18" pos:end="605:19">==</operator><literal type="number" pos:start="605:20" pos:end="605:20">1</literal> <operator pos:start="605:22" pos:end="605:23">||</operator> <name pos:start="605:25" pos:end="605:25">p</name><operator pos:start="605:26" pos:end="605:27">==</operator><literal type="number" pos:start="605:28" pos:end="605:28">2</literal></expr>)</condition> <block pos:start="605:31" pos:end="611:13">{<block_content pos:start="607:17" pos:end="609:46">

                <expr_stmt pos:start="607:17" pos:end="607:46"><expr pos:start="607:17" pos:end="607:45"><name pos:start="607:17" pos:end="607:17">w</name> <operator pos:start="607:19" pos:end="607:19">=</operator> <call pos:start="607:21" pos:end="607:45"><name pos:start="607:21" pos:end="607:34">AV_CEIL_RSHIFT</name><argument_list pos:start="607:35" pos:end="607:45">(<argument pos:start="607:36" pos:end="607:36"><expr pos:start="607:36" pos:end="607:36"><name pos:start="607:36" pos:end="607:36">w</name></expr></argument>, <argument pos:start="607:39" pos:end="607:44"><expr pos:start="607:39" pos:end="607:44"><name pos:start="607:39" pos:end="607:44">hshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="609:17" pos:end="609:46"><expr pos:start="609:17" pos:end="609:45"><name pos:start="609:17" pos:end="609:17">h</name> <operator pos:start="609:19" pos:end="609:19">=</operator> <call pos:start="609:21" pos:end="609:45"><name pos:start="609:21" pos:end="609:34">AV_CEIL_RSHIFT</name><argument_list pos:start="609:35" pos:end="609:45">(<argument pos:start="609:36" pos:end="609:36"><expr pos:start="609:36" pos:end="609:36"><name pos:start="609:36" pos:end="609:36">h</name></expr></argument>, <argument pos:start="609:39" pos:end="609:44"><expr pos:start="609:39" pos:end="609:44"><name pos:start="609:39" pos:end="609:44">vshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="613:13" pos:end="613:82"><expr pos:start="613:13" pos:end="613:81"><name pos:start="613:13" pos:end="613:15">dst</name> <operator pos:start="613:17" pos:end="613:17">=</operator> <operator pos:start="613:19" pos:end="613:19">&amp;</operator><operator pos:start="613:20" pos:end="613:20">(</operator><operator pos:start="613:21" pos:end="613:21">(</operator><name pos:start="613:22" pos:end="613:28">uint8_t</name> <operator pos:start="613:30" pos:end="613:30">*</operator><operator pos:start="613:31" pos:end="613:31">)</operator><name pos:start="613:32" pos:end="613:54"><name pos:start="613:32" pos:end="613:32">s</name><operator pos:start="613:33" pos:end="613:34">-&gt;</operator><name pos:start="613:35" pos:end="613:45">picture_ptr</name><operator pos:start="613:46" pos:end="613:47">-&gt;</operator><name pos:start="613:48" pos:end="613:51">data</name><index pos:start="613:52" pos:end="613:54">[<expr pos:start="613:53" pos:end="613:53"><name pos:start="613:53" pos:end="613:53">p</name></expr>]</index></name><operator pos:start="613:55" pos:end="613:55">)</operator><index pos:start="613:56" pos:end="613:81">[<expr pos:start="613:57" pos:end="613:80"><operator pos:start="613:57" pos:end="613:57">(</operator><name pos:start="613:58" pos:end="613:58">h</name> <operator pos:start="613:60" pos:end="613:60">-</operator> <literal type="number" pos:start="613:62" pos:end="613:62">1</literal><operator pos:start="613:63" pos:end="613:63">)</operator> <operator pos:start="613:65" pos:end="613:65">*</operator> <name pos:start="613:67" pos:end="613:80"><name pos:start="613:67" pos:end="613:67">s</name><operator pos:start="613:68" pos:end="613:69">-&gt;</operator><name pos:start="613:70" pos:end="613:77">linesize</name><index pos:start="613:78" pos:end="613:80">[<expr pos:start="613:79" pos:end="613:79"><name pos:start="613:79" pos:end="613:79">p</name></expr>]</index></name></expr>]</index></expr>;</expr_stmt>

            <for pos:start="615:13" pos:end="635:13">for <control pos:start="615:17" pos:end="615:35">(<init pos:start="615:18" pos:end="615:27"><expr pos:start="615:18" pos:end="615:26"><name pos:start="615:18" pos:end="615:18">i</name> <operator pos:start="615:20" pos:end="615:20">=</operator> <name pos:start="615:22" pos:end="615:22">h</name> <operator pos:start="615:24" pos:end="615:24">-</operator> <literal type="number" pos:start="615:26" pos:end="615:26">1</literal></expr>;</init> <condition pos:start="615:29" pos:end="615:30"><expr pos:start="615:29" pos:end="615:29"><name pos:start="615:29" pos:end="615:29">i</name></expr>;</condition> <incr pos:start="615:32" pos:end="615:34"><expr pos:start="615:32" pos:end="615:34"><name pos:start="615:32" pos:end="615:32">i</name><operator pos:start="615:33" pos:end="615:34">--</operator></expr></incr>)</control> <block pos:start="615:37" pos:end="635:13">{<block_content pos:start="617:17" pos:end="633:38">

                <decl_stmt pos:start="617:17" pos:end="617:94"><decl pos:start="617:17" pos:end="617:93"><type pos:start="617:17" pos:end="617:25"><name pos:start="617:17" pos:end="617:23">uint8_t</name> <modifier pos:start="617:25" pos:end="617:25">*</modifier></type><name pos:start="617:26" pos:end="617:29">src1</name> <init pos:start="617:31" pos:end="617:93">= <expr pos:start="617:33" pos:end="617:93"><operator pos:start="617:33" pos:end="617:33">&amp;</operator><operator pos:start="617:34" pos:end="617:34">(</operator><operator pos:start="617:35" pos:end="617:35">(</operator><name pos:start="617:36" pos:end="617:42">uint8_t</name> <operator pos:start="617:44" pos:end="617:44">*</operator><operator pos:start="617:45" pos:end="617:45">)</operator><name pos:start="617:46" pos:end="617:68"><name pos:start="617:46" pos:end="617:46">s</name><operator pos:start="617:47" pos:end="617:48">-&gt;</operator><name pos:start="617:49" pos:end="617:59">picture_ptr</name><operator pos:start="617:60" pos:end="617:61">-&gt;</operator><name pos:start="617:62" pos:end="617:65">data</name><index pos:start="617:66" pos:end="617:68">[<expr pos:start="617:67" pos:end="617:67"><name pos:start="617:67" pos:end="617:67">p</name></expr>]</index></name><operator pos:start="617:69" pos:end="617:69">)</operator><index pos:start="617:70" pos:end="617:93">[<expr pos:start="617:71" pos:end="617:92"><name pos:start="617:71" pos:end="617:71">i</name> <operator pos:start="617:73" pos:end="617:73">/</operator> <literal type="number" pos:start="617:75" pos:end="617:75">2</literal> <operator pos:start="617:77" pos:end="617:77">*</operator> <name pos:start="617:79" pos:end="617:92"><name pos:start="617:79" pos:end="617:79">s</name><operator pos:start="617:80" pos:end="617:81">-&gt;</operator><name pos:start="617:82" pos:end="617:89">linesize</name><index pos:start="617:90" pos:end="617:92">[<expr pos:start="617:91" pos:end="617:91"><name pos:start="617:91" pos:end="617:91">p</name></expr>]</index></name></expr>]</index></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="619:17" pos:end="619:100"><decl pos:start="619:17" pos:end="619:99"><type pos:start="619:17" pos:end="619:25"><name pos:start="619:17" pos:end="619:23">uint8_t</name> <modifier pos:start="619:25" pos:end="619:25">*</modifier></type><name pos:start="619:26" pos:end="619:29">src2</name> <init pos:start="619:31" pos:end="619:99">= <expr pos:start="619:33" pos:end="619:99"><operator pos:start="619:33" pos:end="619:33">&amp;</operator><operator pos:start="619:34" pos:end="619:34">(</operator><operator pos:start="619:35" pos:end="619:35">(</operator><name pos:start="619:36" pos:end="619:42">uint8_t</name> <operator pos:start="619:44" pos:end="619:44">*</operator><operator pos:start="619:45" pos:end="619:45">)</operator><name pos:start="619:46" pos:end="619:68"><name pos:start="619:46" pos:end="619:46">s</name><operator pos:start="619:47" pos:end="619:48">-&gt;</operator><name pos:start="619:49" pos:end="619:59">picture_ptr</name><operator pos:start="619:60" pos:end="619:61">-&gt;</operator><name pos:start="619:62" pos:end="619:65">data</name><index pos:start="619:66" pos:end="619:68">[<expr pos:start="619:67" pos:end="619:67"><name pos:start="619:67" pos:end="619:67">p</name></expr>]</index></name><operator pos:start="619:69" pos:end="619:69">)</operator><index pos:start="619:70" pos:end="619:99">[<expr pos:start="619:71" pos:end="619:98"><operator pos:start="619:71" pos:end="619:71">(</operator><name pos:start="619:72" pos:end="619:72">i</name> <operator pos:start="619:74" pos:end="619:74">+</operator> <literal type="number" pos:start="619:76" pos:end="619:76">1</literal><operator pos:start="619:77" pos:end="619:77">)</operator> <operator pos:start="619:79" pos:end="619:79">/</operator> <literal type="number" pos:start="619:81" pos:end="619:81">2</literal> <operator pos:start="619:83" pos:end="619:83">*</operator> <name pos:start="619:85" pos:end="619:98"><name pos:start="619:85" pos:end="619:85">s</name><operator pos:start="619:86" pos:end="619:87">-&gt;</operator><name pos:start="619:88" pos:end="619:95">linesize</name><index pos:start="619:96" pos:end="619:98">[<expr pos:start="619:97" pos:end="619:97"><name pos:start="619:97" pos:end="619:97">p</name></expr>]</index></name></expr>]</index></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="621:17" pos:end="631:17"><if pos:start="621:17" pos:end="625:17">if <condition pos:start="621:20" pos:end="621:47">(<expr pos:start="621:21" pos:end="621:46"><name pos:start="621:21" pos:end="621:24">src1</name> <operator pos:start="621:26" pos:end="621:27">==</operator> <name pos:start="621:29" pos:end="621:32">src2</name> <operator pos:start="621:34" pos:end="621:35">||</operator> <name pos:start="621:37" pos:end="621:37">i</name> <operator pos:start="621:39" pos:end="621:40">==</operator> <name pos:start="621:42" pos:end="621:42">h</name> <operator pos:start="621:44" pos:end="621:44">-</operator> <literal type="number" pos:start="621:46" pos:end="621:46">1</literal></expr>)</condition> <block pos:start="621:49" pos:end="625:17">{<block_content pos:start="623:21" pos:end="623:41">

                    <expr_stmt pos:start="623:21" pos:end="623:41"><expr pos:start="623:21" pos:end="623:40"><call pos:start="623:21" pos:end="623:40"><name pos:start="623:21" pos:end="623:26">memcpy</name><argument_list pos:start="623:27" pos:end="623:40">(<argument pos:start="623:28" pos:end="623:30"><expr pos:start="623:28" pos:end="623:30"><name pos:start="623:28" pos:end="623:30">dst</name></expr></argument>, <argument pos:start="623:33" pos:end="623:36"><expr pos:start="623:33" pos:end="623:36"><name pos:start="623:33" pos:end="623:36">src1</name></expr></argument>, <argument pos:start="623:39" pos:end="623:39"><expr pos:start="623:39" pos:end="623:39"><name pos:start="623:39" pos:end="623:39">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="625:19" pos:end="631:17">else <block pos:start="625:24" pos:end="631:17">{<block_content pos:start="627:21" pos:end="629:70">

                    <for pos:start="627:21" pos:end="629:70">for <control pos:start="627:25" pos:end="627:55">(<init pos:start="627:26" pos:end="627:35"><expr pos:start="627:26" pos:end="627:34"><name pos:start="627:26" pos:end="627:30">index</name> <operator pos:start="627:32" pos:end="627:32">=</operator> <literal type="number" pos:start="627:34" pos:end="627:34">0</literal></expr>;</init> <condition pos:start="627:37" pos:end="627:46"><expr pos:start="627:37" pos:end="627:45"><name pos:start="627:37" pos:end="627:41">index</name> <operator pos:start="627:43" pos:end="627:43">&lt;</operator> <name pos:start="627:45" pos:end="627:45">w</name></expr>;</condition> <incr pos:start="627:48" pos:end="627:54"><expr pos:start="627:48" pos:end="627:54"><name pos:start="627:48" pos:end="627:52">index</name><operator pos:start="627:53" pos:end="627:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="629:25" pos:end="629:70"><block_content pos:start="629:25" pos:end="629:70">

                        <expr_stmt pos:start="629:25" pos:end="629:70"><expr pos:start="629:25" pos:end="629:69"><name pos:start="629:25" pos:end="629:34"><name pos:start="629:25" pos:end="629:27">dst</name><index pos:start="629:28" pos:end="629:34">[<expr pos:start="629:29" pos:end="629:33"><name pos:start="629:29" pos:end="629:33">index</name></expr>]</index></name> <operator pos:start="629:36" pos:end="629:36">=</operator> <operator pos:start="629:38" pos:end="629:38">(</operator><name pos:start="629:39" pos:end="629:49"><name pos:start="629:39" pos:end="629:42">src1</name><index pos:start="629:43" pos:end="629:49">[<expr pos:start="629:44" pos:end="629:48"><name pos:start="629:44" pos:end="629:48">index</name></expr>]</index></name> <operator pos:start="629:51" pos:end="629:51">+</operator> <name pos:start="629:53" pos:end="629:63"><name pos:start="629:53" pos:end="629:56">src2</name><index pos:start="629:57" pos:end="629:63">[<expr pos:start="629:58" pos:end="629:62"><name pos:start="629:58" pos:end="629:62">index</name></expr>]</index></name><operator pos:start="629:64" pos:end="629:64">)</operator> <operator pos:start="629:66" pos:end="629:67">&gt;&gt;</operator> <literal type="number" pos:start="629:69" pos:end="629:69">1</literal></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="633:17" pos:end="633:38"><expr pos:start="633:17" pos:end="633:37"><name pos:start="633:17" pos:end="633:19">dst</name> <operator pos:start="633:21" pos:end="633:22">-=</operator> <name pos:start="633:24" pos:end="633:37"><name pos:start="633:24" pos:end="633:24">s</name><operator pos:start="633:25" pos:end="633:26">-&gt;</operator><name pos:start="633:27" pos:end="633:34">linesize</name><index pos:start="633:35" pos:end="633:37">[<expr pos:start="633:36" pos:end="633:36"><name pos:start="633:36" pos:end="633:36">p</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="641:5" pos:end="683:5"><if pos:start="641:5" pos:end="683:5">if <condition pos:start="641:8" pos:end="641:19">(<expr pos:start="641:9" pos:end="641:18"><name pos:start="641:9" pos:end="641:18"><name pos:start="641:9" pos:end="641:9">s</name><operator pos:start="641:10" pos:end="641:11">-&gt;</operator><name pos:start="641:12" pos:end="641:18">flipped</name></name></expr>)</condition> <block pos:start="641:21" pos:end="683:5">{<block_content pos:start="643:9" pos:end="681:9">

        <decl_stmt pos:start="643:9" pos:end="643:14"><decl pos:start="643:9" pos:end="643:13"><type pos:start="643:9" pos:end="643:11"><name pos:start="643:9" pos:end="643:11">int</name></type> <name pos:start="643:13" pos:end="643:13">j</name></decl>;</decl_stmt>

        <expr_stmt pos:start="645:9" pos:end="645:75"><expr pos:start="645:9" pos:end="645:74"><call pos:start="645:9" pos:end="645:74"><name pos:start="645:9" pos:end="645:37">avcodec_get_chroma_sub_sample</name><argument_list pos:start="645:38" pos:end="645:74">(<argument pos:start="645:39" pos:end="645:55"><expr pos:start="645:39" pos:end="645:55"><name pos:start="645:39" pos:end="645:55"><name pos:start="645:39" pos:end="645:39">s</name><operator pos:start="645:40" pos:end="645:41">-&gt;</operator><name pos:start="645:42" pos:end="645:46">avctx</name><operator pos:start="645:47" pos:end="645:48">-&gt;</operator><name pos:start="645:49" pos:end="645:55">pix_fmt</name></name></expr></argument>, <argument pos:start="645:58" pos:end="645:64"><expr pos:start="645:58" pos:end="645:64"><operator pos:start="645:58" pos:end="645:58">&amp;</operator><name pos:start="645:59" pos:end="645:64">hshift</name></expr></argument>, <argument pos:start="645:67" pos:end="645:73"><expr pos:start="645:67" pos:end="645:73"><operator pos:start="645:67" pos:end="645:67">&amp;</operator><name pos:start="645:68" pos:end="645:73">vshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="647:9" pos:end="681:9">for <control pos:start="647:13" pos:end="647:39">(<init pos:start="647:14" pos:end="647:21"><expr pos:start="647:14" pos:end="647:20"><name pos:start="647:14" pos:end="647:18">index</name><operator pos:start="647:19" pos:end="647:19">=</operator><literal type="number" pos:start="647:20" pos:end="647:20">0</literal></expr>;</init> <condition pos:start="647:23" pos:end="647:30"><expr pos:start="647:23" pos:end="647:29"><name pos:start="647:23" pos:end="647:27">index</name><operator pos:start="647:28" pos:end="647:28">&lt;</operator><literal type="number" pos:start="647:29" pos:end="647:29">4</literal></expr>;</condition> <incr pos:start="647:32" pos:end="647:38"><expr pos:start="647:32" pos:end="647:38"><name pos:start="647:32" pos:end="647:36">index</name><operator pos:start="647:37" pos:end="647:38">++</operator></expr></incr>)</control> <block pos:start="647:41" pos:end="681:9">{<block_content pos:start="649:13" pos:end="679:13">

            <decl_stmt pos:start="649:13" pos:end="649:55"><decl pos:start="649:13" pos:end="649:54"><type pos:start="649:13" pos:end="649:21"><name pos:start="649:13" pos:end="649:19">uint8_t</name> <modifier pos:start="649:21" pos:end="649:21">*</modifier></type><name pos:start="649:22" pos:end="649:24">dst</name> <init pos:start="649:26" pos:end="649:54">= <expr pos:start="649:28" pos:end="649:54"><name pos:start="649:28" pos:end="649:54"><name pos:start="649:28" pos:end="649:28">s</name><operator pos:start="649:29" pos:end="649:30">-&gt;</operator><name pos:start="649:31" pos:end="649:41">picture_ptr</name><operator pos:start="649:42" pos:end="649:43">-&gt;</operator><name pos:start="649:44" pos:end="649:47">data</name><index pos:start="649:48" pos:end="649:54">[<expr pos:start="649:49" pos:end="649:53"><name pos:start="649:49" pos:end="649:53">index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="651:13" pos:end="651:42"><decl pos:start="651:13" pos:end="651:41"><type pos:start="651:13" pos:end="651:15"><name pos:start="651:13" pos:end="651:15">int</name></type> <name pos:start="651:17" pos:end="651:17">w</name> <init pos:start="651:19" pos:end="651:41">= <expr pos:start="651:21" pos:end="651:41"><name pos:start="651:21" pos:end="651:41"><name pos:start="651:21" pos:end="651:21">s</name><operator pos:start="651:22" pos:end="651:23">-&gt;</operator><name pos:start="651:24" pos:end="651:34">picture_ptr</name><operator pos:start="651:35" pos:end="651:36">-&gt;</operator><name pos:start="651:37" pos:end="651:41">width</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="653:13" pos:end="653:43"><decl pos:start="653:13" pos:end="653:42"><type pos:start="653:13" pos:end="653:15"><name pos:start="653:13" pos:end="653:15">int</name></type> <name pos:start="653:17" pos:end="653:17">h</name> <init pos:start="653:19" pos:end="653:42">= <expr pos:start="653:21" pos:end="653:42"><name pos:start="653:21" pos:end="653:42"><name pos:start="653:21" pos:end="653:21">s</name><operator pos:start="653:22" pos:end="653:23">-&gt;</operator><name pos:start="653:24" pos:end="653:34">picture_ptr</name><operator pos:start="653:35" pos:end="653:36">-&gt;</operator><name pos:start="653:37" pos:end="653:42">height</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="655:13" pos:end="661:13"><if pos:start="655:13" pos:end="661:13">if<condition pos:start="655:15" pos:end="655:32">(<expr pos:start="655:16" pos:end="655:31"><name pos:start="655:16" pos:end="655:20">index</name> <operator pos:start="655:22" pos:end="655:23">&amp;&amp;</operator> <name pos:start="655:25" pos:end="655:29">index</name><operator pos:start="655:30" pos:end="655:30">&lt;</operator><literal type="number" pos:start="655:31" pos:end="655:31">3</literal></expr>)</condition><block pos:start="655:33" pos:end="661:13">{<block_content pos:start="657:17" pos:end="659:46">

                <expr_stmt pos:start="657:17" pos:end="657:46"><expr pos:start="657:17" pos:end="657:45"><name pos:start="657:17" pos:end="657:17">w</name> <operator pos:start="657:19" pos:end="657:19">=</operator> <call pos:start="657:21" pos:end="657:45"><name pos:start="657:21" pos:end="657:34">AV_CEIL_RSHIFT</name><argument_list pos:start="657:35" pos:end="657:45">(<argument pos:start="657:36" pos:end="657:36"><expr pos:start="657:36" pos:end="657:36"><name pos:start="657:36" pos:end="657:36">w</name></expr></argument>, <argument pos:start="657:39" pos:end="657:44"><expr pos:start="657:39" pos:end="657:44"><name pos:start="657:39" pos:end="657:44">hshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="659:17" pos:end="659:46"><expr pos:start="659:17" pos:end="659:45"><name pos:start="659:17" pos:end="659:17">h</name> <operator pos:start="659:19" pos:end="659:19">=</operator> <call pos:start="659:21" pos:end="659:45"><name pos:start="659:21" pos:end="659:34">AV_CEIL_RSHIFT</name><argument_list pos:start="659:35" pos:end="659:45">(<argument pos:start="659:36" pos:end="659:36"><expr pos:start="659:36" pos:end="659:36"><name pos:start="659:36" pos:end="659:36">h</name></expr></argument>, <argument pos:start="659:39" pos:end="659:44"><expr pos:start="659:39" pos:end="659:44"><name pos:start="659:39" pos:end="659:44">vshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="663:13" pos:end="679:13"><if pos:start="663:13" pos:end="679:13">if<condition pos:start="663:15" pos:end="663:19">(<expr pos:start="663:16" pos:end="663:18"><name pos:start="663:16" pos:end="663:18">dst</name></expr>)</condition><block pos:start="663:20" pos:end="679:13">{<block_content pos:start="665:17" pos:end="677:17">

                <decl_stmt pos:start="665:17" pos:end="665:76"><decl pos:start="665:17" pos:end="665:75"><type pos:start="665:17" pos:end="665:25"><name pos:start="665:17" pos:end="665:23">uint8_t</name> <modifier pos:start="665:25" pos:end="665:25">*</modifier></type><name pos:start="665:26" pos:end="665:29">dst2</name> <init pos:start="665:31" pos:end="665:75">= <expr pos:start="665:33" pos:end="665:75"><name pos:start="665:33" pos:end="665:35">dst</name> <operator pos:start="665:37" pos:end="665:37">+</operator> <name pos:start="665:39" pos:end="665:69"><name pos:start="665:39" pos:end="665:39">s</name><operator pos:start="665:40" pos:end="665:41">-&gt;</operator><name pos:start="665:42" pos:end="665:52">picture_ptr</name><operator pos:start="665:53" pos:end="665:54">-&gt;</operator><name pos:start="665:55" pos:end="665:62">linesize</name><index pos:start="665:63" pos:end="665:69">[<expr pos:start="665:64" pos:end="665:68"><name pos:start="665:64" pos:end="665:68">index</name></expr>]</index></name><operator pos:start="665:70" pos:end="665:70">*</operator><operator pos:start="665:71" pos:end="665:71">(</operator><name pos:start="665:72" pos:end="665:72">h</name><operator pos:start="665:73" pos:end="665:73">-</operator><literal type="number" pos:start="665:74" pos:end="665:74">1</literal><operator pos:start="665:75" pos:end="665:75">)</operator></expr></init></decl>;</decl_stmt>

                <for pos:start="667:17" pos:end="677:17">for <control pos:start="667:21" pos:end="667:37">(<init pos:start="667:22" pos:end="667:25"><expr pos:start="667:22" pos:end="667:24"><name pos:start="667:22" pos:end="667:22">i</name><operator pos:start="667:23" pos:end="667:23">=</operator><literal type="number" pos:start="667:24" pos:end="667:24">0</literal></expr>;</init> <condition pos:start="667:27" pos:end="667:32"><expr pos:start="667:27" pos:end="667:31"><name pos:start="667:27" pos:end="667:27">i</name><operator pos:start="667:28" pos:end="667:28">&lt;</operator><name pos:start="667:29" pos:end="667:29">h</name><operator pos:start="667:30" pos:end="667:30">/</operator><literal type="number" pos:start="667:31" pos:end="667:31">2</literal></expr>;</condition> <incr pos:start="667:34" pos:end="667:36"><expr pos:start="667:34" pos:end="667:36"><name pos:start="667:34" pos:end="667:34">i</name><operator pos:start="667:35" pos:end="667:36">++</operator></expr></incr>)</control> <block pos:start="667:39" pos:end="677:17">{<block_content pos:start="669:21" pos:end="675:60">

                    <for pos:start="669:21" pos:end="671:53">for <control pos:start="669:25" pos:end="669:39">(<init pos:start="669:26" pos:end="669:29"><expr pos:start="669:26" pos:end="669:28"><name pos:start="669:26" pos:end="669:26">j</name><operator pos:start="669:27" pos:end="669:27">=</operator><literal type="number" pos:start="669:28" pos:end="669:28">0</literal></expr>;</init> <condition pos:start="669:31" pos:end="669:34"><expr pos:start="669:31" pos:end="669:33"><name pos:start="669:31" pos:end="669:31">j</name><operator pos:start="669:32" pos:end="669:32">&lt;</operator><name pos:start="669:33" pos:end="669:33">w</name></expr>;</condition> <incr pos:start="669:36" pos:end="669:38"><expr pos:start="669:36" pos:end="669:38"><name pos:start="669:36" pos:end="669:36">j</name><operator pos:start="669:37" pos:end="669:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="671:25" pos:end="671:53"><block_content pos:start="671:25" pos:end="671:53">

                        <expr_stmt pos:start="671:25" pos:end="671:53"><expr pos:start="671:25" pos:end="671:52"><call pos:start="671:25" pos:end="671:52"><name pos:start="671:25" pos:end="671:30">FFSWAP</name><argument_list pos:start="671:31" pos:end="671:52">(<argument pos:start="671:32" pos:end="671:34"><expr pos:start="671:32" pos:end="671:34"><name pos:start="671:32" pos:end="671:34">int</name></expr></argument>, <argument pos:start="671:37" pos:end="671:42"><expr pos:start="671:37" pos:end="671:42"><name pos:start="671:37" pos:end="671:42"><name pos:start="671:37" pos:end="671:39">dst</name><index pos:start="671:40" pos:end="671:42">[<expr pos:start="671:41" pos:end="671:41"><name pos:start="671:41" pos:end="671:41">j</name></expr>]</index></name></expr></argument>, <argument pos:start="671:45" pos:end="671:51"><expr pos:start="671:45" pos:end="671:51"><name pos:start="671:45" pos:end="671:51"><name pos:start="671:45" pos:end="671:48">dst2</name><index pos:start="671:49" pos:end="671:51">[<expr pos:start="671:50" pos:end="671:50"><name pos:start="671:50" pos:end="671:50">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="673:21" pos:end="673:60"><expr pos:start="673:21" pos:end="673:59"><name pos:start="673:21" pos:end="673:23">dst</name>  <operator pos:start="673:26" pos:end="673:27">+=</operator> <name pos:start="673:29" pos:end="673:59"><name pos:start="673:29" pos:end="673:29">s</name><operator pos:start="673:30" pos:end="673:31">-&gt;</operator><name pos:start="673:32" pos:end="673:42">picture_ptr</name><operator pos:start="673:43" pos:end="673:44">-&gt;</operator><name pos:start="673:45" pos:end="673:52">linesize</name><index pos:start="673:53" pos:end="673:59">[<expr pos:start="673:54" pos:end="673:58"><name pos:start="673:54" pos:end="673:58">index</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="675:21" pos:end="675:60"><expr pos:start="675:21" pos:end="675:59"><name pos:start="675:21" pos:end="675:24">dst2</name> <operator pos:start="675:26" pos:end="675:27">-=</operator> <name pos:start="675:29" pos:end="675:59"><name pos:start="675:29" pos:end="675:29">s</name><operator pos:start="675:30" pos:end="675:31">-&gt;</operator><name pos:start="675:32" pos:end="675:42">picture_ptr</name><operator pos:start="675:43" pos:end="675:44">-&gt;</operator><name pos:start="675:45" pos:end="675:52">linesize</name><index pos:start="675:53" pos:end="675:59">[<expr pos:start="675:54" pos:end="675:58"><name pos:start="675:54" pos:end="675:58">index</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="685:5" pos:end="727:5"><if pos:start="685:5" pos:end="727:5">if <condition pos:start="685:8" pos:end="685:73">(<expr pos:start="685:9" pos:end="685:72"><name pos:start="685:9" pos:end="685:26"><name pos:start="685:9" pos:end="685:9">s</name><operator pos:start="685:10" pos:end="685:11">-&gt;</operator><name pos:start="685:12" pos:end="685:26">adobe_transform</name></name> <operator pos:start="685:28" pos:end="685:29">==</operator> <literal type="number" pos:start="685:31" pos:end="685:31">0</literal> <operator pos:start="685:33" pos:end="685:34">&amp;&amp;</operator> <name pos:start="685:36" pos:end="685:52"><name pos:start="685:36" pos:end="685:36">s</name><operator pos:start="685:37" pos:end="685:38">-&gt;</operator><name pos:start="685:39" pos:end="685:43">avctx</name><operator pos:start="685:44" pos:end="685:45">-&gt;</operator><name pos:start="685:46" pos:end="685:52">pix_fmt</name></name> <operator pos:start="685:54" pos:end="685:55">==</operator> <name pos:start="685:57" pos:end="685:72">AV_PIX_FMT_GBRAP</name></expr>)</condition> <block pos:start="685:75" pos:end="727:5">{<block_content pos:start="687:9" pos:end="725:9">

        <decl_stmt pos:start="687:9" pos:end="687:38"><decl pos:start="687:9" pos:end="687:37"><type pos:start="687:9" pos:end="687:11"><name pos:start="687:9" pos:end="687:11">int</name></type> <name pos:start="687:13" pos:end="687:13">w</name> <init pos:start="687:15" pos:end="687:37">= <expr pos:start="687:17" pos:end="687:37"><name pos:start="687:17" pos:end="687:37"><name pos:start="687:17" pos:end="687:17">s</name><operator pos:start="687:18" pos:end="687:19">-&gt;</operator><name pos:start="687:20" pos:end="687:30">picture_ptr</name><operator pos:start="687:31" pos:end="687:32">-&gt;</operator><name pos:start="687:33" pos:end="687:37">width</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="689:9" pos:end="689:39"><decl pos:start="689:9" pos:end="689:38"><type pos:start="689:9" pos:end="689:11"><name pos:start="689:9" pos:end="689:11">int</name></type> <name pos:start="689:13" pos:end="689:13">h</name> <init pos:start="689:15" pos:end="689:38">= <expr pos:start="689:17" pos:end="689:38"><name pos:start="689:17" pos:end="689:38"><name pos:start="689:17" pos:end="689:17">s</name><operator pos:start="689:18" pos:end="689:19">-&gt;</operator><name pos:start="689:20" pos:end="689:30">picture_ptr</name><operator pos:start="689:31" pos:end="689:32">-&gt;</operator><name pos:start="689:33" pos:end="689:38">height</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="691:9" pos:end="725:9">for <control pos:start="691:13" pos:end="691:27">(<init pos:start="691:14" pos:end="691:17"><expr pos:start="691:14" pos:end="691:16"><name pos:start="691:14" pos:end="691:14">i</name><operator pos:start="691:15" pos:end="691:15">=</operator><literal type="number" pos:start="691:16" pos:end="691:16">0</literal></expr>;</init> <condition pos:start="691:19" pos:end="691:22"><expr pos:start="691:19" pos:end="691:21"><name pos:start="691:19" pos:end="691:19">i</name><operator pos:start="691:20" pos:end="691:20">&lt;</operator><name pos:start="691:21" pos:end="691:21">h</name></expr>;</condition> <incr pos:start="691:24" pos:end="691:26"><expr pos:start="691:24" pos:end="691:26"><name pos:start="691:24" pos:end="691:24">i</name><operator pos:start="691:25" pos:end="691:26">++</operator></expr></incr>)</control> <block pos:start="691:29" pos:end="725:9">{<block_content pos:start="693:13" pos:end="723:13">

            <decl_stmt pos:start="693:13" pos:end="693:18"><decl pos:start="693:13" pos:end="693:17"><type pos:start="693:13" pos:end="693:15"><name pos:start="693:13" pos:end="693:15">int</name></type> <name pos:start="693:17" pos:end="693:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="695:13" pos:end="695:28"><decl pos:start="695:13" pos:end="695:27"><type pos:start="695:13" pos:end="695:21"><name pos:start="695:13" pos:end="695:19">uint8_t</name> <modifier pos:start="695:21" pos:end="695:21">*</modifier></type><name pos:start="695:22" pos:end="695:27"><name pos:start="695:22" pos:end="695:24">dst</name><index pos:start="695:25" pos:end="695:27">[<expr pos:start="695:26" pos:end="695:26"><literal type="number" pos:start="695:26" pos:end="695:26">4</literal></expr>]</index></name></decl>;</decl_stmt>

            <for pos:start="697:13" pos:end="703:13">for <control pos:start="697:17" pos:end="697:43">(<init pos:start="697:18" pos:end="697:25"><expr pos:start="697:18" pos:end="697:24"><name pos:start="697:18" pos:end="697:22">index</name><operator pos:start="697:23" pos:end="697:23">=</operator><literal type="number" pos:start="697:24" pos:end="697:24">0</literal></expr>;</init> <condition pos:start="697:27" pos:end="697:34"><expr pos:start="697:27" pos:end="697:33"><name pos:start="697:27" pos:end="697:31">index</name><operator pos:start="697:32" pos:end="697:32">&lt;</operator><literal type="number" pos:start="697:33" pos:end="697:33">4</literal></expr>;</condition> <incr pos:start="697:36" pos:end="697:42"><expr pos:start="697:36" pos:end="697:42"><name pos:start="697:36" pos:end="697:40">index</name><operator pos:start="697:41" pos:end="697:42">++</operator></expr></incr>)</control> <block pos:start="697:45" pos:end="703:13">{<block_content pos:start="699:17" pos:end="701:65">

                <expr_stmt pos:start="699:17" pos:end="701:65"><expr pos:start="699:17" pos:end="701:64"><name pos:start="699:17" pos:end="699:26"><name pos:start="699:17" pos:end="699:19">dst</name><index pos:start="699:20" pos:end="699:26">[<expr pos:start="699:21" pos:end="699:25"><name pos:start="699:21" pos:end="699:25">index</name></expr>]</index></name> <operator pos:start="699:28" pos:end="699:28">=</operator>   <name pos:start="699:32" pos:end="699:58"><name pos:start="699:32" pos:end="699:32">s</name><operator pos:start="699:33" pos:end="699:34">-&gt;</operator><name pos:start="699:35" pos:end="699:45">picture_ptr</name><operator pos:start="699:46" pos:end="699:47">-&gt;</operator><name pos:start="699:48" pos:end="699:51">data</name><index pos:start="699:52" pos:end="699:58">[<expr pos:start="699:53" pos:end="699:57"><name pos:start="699:53" pos:end="699:57">index</name></expr>]</index></name>

                             <operator pos:start="701:30" pos:end="701:30">+</operator> <name pos:start="701:32" pos:end="701:62"><name pos:start="701:32" pos:end="701:32">s</name><operator pos:start="701:33" pos:end="701:34">-&gt;</operator><name pos:start="701:35" pos:end="701:45">picture_ptr</name><operator pos:start="701:46" pos:end="701:47">-&gt;</operator><name pos:start="701:48" pos:end="701:55">linesize</name><index pos:start="701:56" pos:end="701:62">[<expr pos:start="701:57" pos:end="701:61"><name pos:start="701:57" pos:end="701:61">index</name></expr>]</index></name><operator pos:start="701:63" pos:end="701:63">*</operator><name pos:start="701:64" pos:end="701:64">i</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="705:13" pos:end="723:13">for <control pos:start="705:17" pos:end="705:31">(<init pos:start="705:18" pos:end="705:21"><expr pos:start="705:18" pos:end="705:20"><name pos:start="705:18" pos:end="705:18">j</name><operator pos:start="705:19" pos:end="705:19">=</operator><literal type="number" pos:start="705:20" pos:end="705:20">0</literal></expr>;</init> <condition pos:start="705:23" pos:end="705:26"><expr pos:start="705:23" pos:end="705:25"><name pos:start="705:23" pos:end="705:23">j</name><operator pos:start="705:24" pos:end="705:24">&lt;</operator><name pos:start="705:25" pos:end="705:25">w</name></expr>;</condition> <incr pos:start="705:28" pos:end="705:30"><expr pos:start="705:28" pos:end="705:30"><name pos:start="705:28" pos:end="705:28">j</name><operator pos:start="705:29" pos:end="705:30">++</operator></expr></incr>)</control> <block pos:start="705:33" pos:end="723:13">{<block_content pos:start="707:17" pos:end="721:32">

                <decl_stmt pos:start="707:17" pos:end="707:34"><decl pos:start="707:17" pos:end="707:33"><type pos:start="707:17" pos:end="707:19"><name pos:start="707:17" pos:end="707:19">int</name></type> <name pos:start="707:21" pos:end="707:21">k</name> <init pos:start="707:23" pos:end="707:33">= <expr pos:start="707:25" pos:end="707:33"><name pos:start="707:25" pos:end="707:33"><name pos:start="707:25" pos:end="707:27">dst</name><index pos:start="707:28" pos:end="707:30">[<expr pos:start="707:29" pos:end="707:29"><literal type="number" pos:start="707:29" pos:end="707:29">3</literal></expr>]</index><index pos:start="707:31" pos:end="707:33">[<expr pos:start="707:32" pos:end="707:32"><name pos:start="707:32" pos:end="707:32">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="709:17" pos:end="709:38"><decl pos:start="709:17" pos:end="709:37"><type pos:start="709:17" pos:end="709:19"><name pos:start="709:17" pos:end="709:19">int</name></type> <name pos:start="709:21" pos:end="709:21">r</name> <init pos:start="709:23" pos:end="709:37">= <expr pos:start="709:25" pos:end="709:37"><name pos:start="709:25" pos:end="709:33"><name pos:start="709:25" pos:end="709:27">dst</name><index pos:start="709:28" pos:end="709:30">[<expr pos:start="709:29" pos:end="709:29"><literal type="number" pos:start="709:29" pos:end="709:29">0</literal></expr>]</index><index pos:start="709:31" pos:end="709:33">[<expr pos:start="709:32" pos:end="709:32"><name pos:start="709:32" pos:end="709:32">j</name></expr>]</index></name> <operator pos:start="709:35" pos:end="709:35">*</operator> <name pos:start="709:37" pos:end="709:37">k</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="711:17" pos:end="711:38"><decl pos:start="711:17" pos:end="711:37"><type pos:start="711:17" pos:end="711:19"><name pos:start="711:17" pos:end="711:19">int</name></type> <name pos:start="711:21" pos:end="711:21">g</name> <init pos:start="711:23" pos:end="711:37">= <expr pos:start="711:25" pos:end="711:37"><name pos:start="711:25" pos:end="711:33"><name pos:start="711:25" pos:end="711:27">dst</name><index pos:start="711:28" pos:end="711:30">[<expr pos:start="711:29" pos:end="711:29"><literal type="number" pos:start="711:29" pos:end="711:29">1</literal></expr>]</index><index pos:start="711:31" pos:end="711:33">[<expr pos:start="711:32" pos:end="711:32"><name pos:start="711:32" pos:end="711:32">j</name></expr>]</index></name> <operator pos:start="711:35" pos:end="711:35">*</operator> <name pos:start="711:37" pos:end="711:37">k</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="713:17" pos:end="713:38"><decl pos:start="713:17" pos:end="713:37"><type pos:start="713:17" pos:end="713:19"><name pos:start="713:17" pos:end="713:19">int</name></type> <name pos:start="713:21" pos:end="713:21">b</name> <init pos:start="713:23" pos:end="713:37">= <expr pos:start="713:25" pos:end="713:37"><name pos:start="713:25" pos:end="713:33"><name pos:start="713:25" pos:end="713:27">dst</name><index pos:start="713:28" pos:end="713:30">[<expr pos:start="713:29" pos:end="713:29"><literal type="number" pos:start="713:29" pos:end="713:29">2</literal></expr>]</index><index pos:start="713:31" pos:end="713:33">[<expr pos:start="713:32" pos:end="713:32"><name pos:start="713:32" pos:end="713:32">j</name></expr>]</index></name> <operator pos:start="713:35" pos:end="713:35">*</operator> <name pos:start="713:37" pos:end="713:37">k</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="715:17" pos:end="715:40"><expr pos:start="715:17" pos:end="715:39"><name pos:start="715:17" pos:end="715:25"><name pos:start="715:17" pos:end="715:19">dst</name><index pos:start="715:20" pos:end="715:22">[<expr pos:start="715:21" pos:end="715:21"><literal type="number" pos:start="715:21" pos:end="715:21">0</literal></expr>]</index><index pos:start="715:23" pos:end="715:25">[<expr pos:start="715:24" pos:end="715:24"><name pos:start="715:24" pos:end="715:24">j</name></expr>]</index></name> <operator pos:start="715:27" pos:end="715:27">=</operator> <name pos:start="715:29" pos:end="715:29">g</name><operator pos:start="715:30" pos:end="715:30">*</operator><literal type="number" pos:start="715:31" pos:end="715:33">257</literal> <operator pos:start="715:35" pos:end="715:36">&gt;&gt;</operator> <literal type="number" pos:start="715:38" pos:end="715:39">16</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="717:17" pos:end="717:40"><expr pos:start="717:17" pos:end="717:39"><name pos:start="717:17" pos:end="717:25"><name pos:start="717:17" pos:end="717:19">dst</name><index pos:start="717:20" pos:end="717:22">[<expr pos:start="717:21" pos:end="717:21"><literal type="number" pos:start="717:21" pos:end="717:21">1</literal></expr>]</index><index pos:start="717:23" pos:end="717:25">[<expr pos:start="717:24" pos:end="717:24"><name pos:start="717:24" pos:end="717:24">j</name></expr>]</index></name> <operator pos:start="717:27" pos:end="717:27">=</operator> <name pos:start="717:29" pos:end="717:29">b</name><operator pos:start="717:30" pos:end="717:30">*</operator><literal type="number" pos:start="717:31" pos:end="717:33">257</literal> <operator pos:start="717:35" pos:end="717:36">&gt;&gt;</operator> <literal type="number" pos:start="717:38" pos:end="717:39">16</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="719:17" pos:end="719:40"><expr pos:start="719:17" pos:end="719:39"><name pos:start="719:17" pos:end="719:25"><name pos:start="719:17" pos:end="719:19">dst</name><index pos:start="719:20" pos:end="719:22">[<expr pos:start="719:21" pos:end="719:21"><literal type="number" pos:start="719:21" pos:end="719:21">2</literal></expr>]</index><index pos:start="719:23" pos:end="719:25">[<expr pos:start="719:24" pos:end="719:24"><name pos:start="719:24" pos:end="719:24">j</name></expr>]</index></name> <operator pos:start="719:27" pos:end="719:27">=</operator> <name pos:start="719:29" pos:end="719:29">r</name><operator pos:start="719:30" pos:end="719:30">*</operator><literal type="number" pos:start="719:31" pos:end="719:33">257</literal> <operator pos:start="719:35" pos:end="719:36">&gt;&gt;</operator> <literal type="number" pos:start="719:38" pos:end="719:39">16</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="721:17" pos:end="721:32"><expr pos:start="721:17" pos:end="721:31"><name pos:start="721:17" pos:end="721:25"><name pos:start="721:17" pos:end="721:19">dst</name><index pos:start="721:20" pos:end="721:22">[<expr pos:start="721:21" pos:end="721:21"><literal type="number" pos:start="721:21" pos:end="721:21">3</literal></expr>]</index><index pos:start="721:23" pos:end="721:25">[<expr pos:start="721:24" pos:end="721:24"><name pos:start="721:24" pos:end="721:24">j</name></expr>]</index></name> <operator pos:start="721:27" pos:end="721:27">=</operator> <literal type="number" pos:start="721:29" pos:end="721:31">255</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="729:5" pos:end="771:5"><if pos:start="729:5" pos:end="771:5">if <condition pos:start="729:8" pos:end="729:76">(<expr pos:start="729:9" pos:end="729:75"><name pos:start="729:9" pos:end="729:26"><name pos:start="729:9" pos:end="729:9">s</name><operator pos:start="729:10" pos:end="729:11">-&gt;</operator><name pos:start="729:12" pos:end="729:26">adobe_transform</name></name> <operator pos:start="729:28" pos:end="729:29">==</operator> <literal type="number" pos:start="729:31" pos:end="729:31">2</literal> <operator pos:start="729:33" pos:end="729:34">&amp;&amp;</operator> <name pos:start="729:36" pos:end="729:52"><name pos:start="729:36" pos:end="729:36">s</name><operator pos:start="729:37" pos:end="729:38">-&gt;</operator><name pos:start="729:39" pos:end="729:43">avctx</name><operator pos:start="729:44" pos:end="729:45">-&gt;</operator><name pos:start="729:46" pos:end="729:52">pix_fmt</name></name> <operator pos:start="729:54" pos:end="729:55">==</operator> <name pos:start="729:57" pos:end="729:75">AV_PIX_FMT_YUVA444P</name></expr>)</condition> <block pos:start="729:78" pos:end="771:5">{<block_content pos:start="731:9" pos:end="769:9">

        <decl_stmt pos:start="731:9" pos:end="731:38"><decl pos:start="731:9" pos:end="731:37"><type pos:start="731:9" pos:end="731:11"><name pos:start="731:9" pos:end="731:11">int</name></type> <name pos:start="731:13" pos:end="731:13">w</name> <init pos:start="731:15" pos:end="731:37">= <expr pos:start="731:17" pos:end="731:37"><name pos:start="731:17" pos:end="731:37"><name pos:start="731:17" pos:end="731:17">s</name><operator pos:start="731:18" pos:end="731:19">-&gt;</operator><name pos:start="731:20" pos:end="731:30">picture_ptr</name><operator pos:start="731:31" pos:end="731:32">-&gt;</operator><name pos:start="731:33" pos:end="731:37">width</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="733:9" pos:end="733:39"><decl pos:start="733:9" pos:end="733:38"><type pos:start="733:9" pos:end="733:11"><name pos:start="733:9" pos:end="733:11">int</name></type> <name pos:start="733:13" pos:end="733:13">h</name> <init pos:start="733:15" pos:end="733:38">= <expr pos:start="733:17" pos:end="733:38"><name pos:start="733:17" pos:end="733:38"><name pos:start="733:17" pos:end="733:17">s</name><operator pos:start="733:18" pos:end="733:19">-&gt;</operator><name pos:start="733:20" pos:end="733:30">picture_ptr</name><operator pos:start="733:31" pos:end="733:32">-&gt;</operator><name pos:start="733:33" pos:end="733:38">height</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="735:9" pos:end="769:9">for <control pos:start="735:13" pos:end="735:27">(<init pos:start="735:14" pos:end="735:17"><expr pos:start="735:14" pos:end="735:16"><name pos:start="735:14" pos:end="735:14">i</name><operator pos:start="735:15" pos:end="735:15">=</operator><literal type="number" pos:start="735:16" pos:end="735:16">0</literal></expr>;</init> <condition pos:start="735:19" pos:end="735:22"><expr pos:start="735:19" pos:end="735:21"><name pos:start="735:19" pos:end="735:19">i</name><operator pos:start="735:20" pos:end="735:20">&lt;</operator><name pos:start="735:21" pos:end="735:21">h</name></expr>;</condition> <incr pos:start="735:24" pos:end="735:26"><expr pos:start="735:24" pos:end="735:26"><name pos:start="735:24" pos:end="735:24">i</name><operator pos:start="735:25" pos:end="735:26">++</operator></expr></incr>)</control> <block pos:start="735:29" pos:end="769:9">{<block_content pos:start="737:13" pos:end="767:13">

            <decl_stmt pos:start="737:13" pos:end="737:18"><decl pos:start="737:13" pos:end="737:17"><type pos:start="737:13" pos:end="737:15"><name pos:start="737:13" pos:end="737:15">int</name></type> <name pos:start="737:17" pos:end="737:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="739:13" pos:end="739:28"><decl pos:start="739:13" pos:end="739:27"><type pos:start="739:13" pos:end="739:21"><name pos:start="739:13" pos:end="739:19">uint8_t</name> <modifier pos:start="739:21" pos:end="739:21">*</modifier></type><name pos:start="739:22" pos:end="739:27"><name pos:start="739:22" pos:end="739:24">dst</name><index pos:start="739:25" pos:end="739:27">[<expr pos:start="739:26" pos:end="739:26"><literal type="number" pos:start="739:26" pos:end="739:26">4</literal></expr>]</index></name></decl>;</decl_stmt>

            <for pos:start="741:13" pos:end="747:13">for <control pos:start="741:17" pos:end="741:43">(<init pos:start="741:18" pos:end="741:25"><expr pos:start="741:18" pos:end="741:24"><name pos:start="741:18" pos:end="741:22">index</name><operator pos:start="741:23" pos:end="741:23">=</operator><literal type="number" pos:start="741:24" pos:end="741:24">0</literal></expr>;</init> <condition pos:start="741:27" pos:end="741:34"><expr pos:start="741:27" pos:end="741:33"><name pos:start="741:27" pos:end="741:31">index</name><operator pos:start="741:32" pos:end="741:32">&lt;</operator><literal type="number" pos:start="741:33" pos:end="741:33">4</literal></expr>;</condition> <incr pos:start="741:36" pos:end="741:42"><expr pos:start="741:36" pos:end="741:42"><name pos:start="741:36" pos:end="741:40">index</name><operator pos:start="741:41" pos:end="741:42">++</operator></expr></incr>)</control> <block pos:start="741:45" pos:end="747:13">{<block_content pos:start="743:17" pos:end="745:65">

                <expr_stmt pos:start="743:17" pos:end="745:65"><expr pos:start="743:17" pos:end="745:64"><name pos:start="743:17" pos:end="743:26"><name pos:start="743:17" pos:end="743:19">dst</name><index pos:start="743:20" pos:end="743:26">[<expr pos:start="743:21" pos:end="743:25"><name pos:start="743:21" pos:end="743:25">index</name></expr>]</index></name> <operator pos:start="743:28" pos:end="743:28">=</operator>   <name pos:start="743:32" pos:end="743:58"><name pos:start="743:32" pos:end="743:32">s</name><operator pos:start="743:33" pos:end="743:34">-&gt;</operator><name pos:start="743:35" pos:end="743:45">picture_ptr</name><operator pos:start="743:46" pos:end="743:47">-&gt;</operator><name pos:start="743:48" pos:end="743:51">data</name><index pos:start="743:52" pos:end="743:58">[<expr pos:start="743:53" pos:end="743:57"><name pos:start="743:53" pos:end="743:57">index</name></expr>]</index></name>

                             <operator pos:start="745:30" pos:end="745:30">+</operator> <name pos:start="745:32" pos:end="745:62"><name pos:start="745:32" pos:end="745:32">s</name><operator pos:start="745:33" pos:end="745:34">-&gt;</operator><name pos:start="745:35" pos:end="745:45">picture_ptr</name><operator pos:start="745:46" pos:end="745:47">-&gt;</operator><name pos:start="745:48" pos:end="745:55">linesize</name><index pos:start="745:56" pos:end="745:62">[<expr pos:start="745:57" pos:end="745:61"><name pos:start="745:57" pos:end="745:61">index</name></expr>]</index></name><operator pos:start="745:63" pos:end="745:63">*</operator><name pos:start="745:64" pos:end="745:64">i</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="749:13" pos:end="767:13">for <control pos:start="749:17" pos:end="749:31">(<init pos:start="749:18" pos:end="749:21"><expr pos:start="749:18" pos:end="749:20"><name pos:start="749:18" pos:end="749:18">j</name><operator pos:start="749:19" pos:end="749:19">=</operator><literal type="number" pos:start="749:20" pos:end="749:20">0</literal></expr>;</init> <condition pos:start="749:23" pos:end="749:26"><expr pos:start="749:23" pos:end="749:25"><name pos:start="749:23" pos:end="749:23">j</name><operator pos:start="749:24" pos:end="749:24">&lt;</operator><name pos:start="749:25" pos:end="749:25">w</name></expr>;</condition> <incr pos:start="749:28" pos:end="749:30"><expr pos:start="749:28" pos:end="749:30"><name pos:start="749:28" pos:end="749:28">j</name><operator pos:start="749:29" pos:end="749:30">++</operator></expr></incr>)</control> <block pos:start="749:33" pos:end="767:13">{<block_content pos:start="751:17" pos:end="765:32">

                <decl_stmt pos:start="751:17" pos:end="751:34"><decl pos:start="751:17" pos:end="751:33"><type pos:start="751:17" pos:end="751:19"><name pos:start="751:17" pos:end="751:19">int</name></type> <name pos:start="751:21" pos:end="751:21">k</name> <init pos:start="751:23" pos:end="751:33">= <expr pos:start="751:25" pos:end="751:33"><name pos:start="751:25" pos:end="751:33"><name pos:start="751:25" pos:end="751:27">dst</name><index pos:start="751:28" pos:end="751:30">[<expr pos:start="751:29" pos:end="751:29"><literal type="number" pos:start="751:29" pos:end="751:29">3</literal></expr>]</index><index pos:start="751:31" pos:end="751:33">[<expr pos:start="751:32" pos:end="751:32"><name pos:start="751:32" pos:end="751:32">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="753:17" pos:end="753:46"><decl pos:start="753:17" pos:end="753:45"><type pos:start="753:17" pos:end="753:19"><name pos:start="753:17" pos:end="753:19">int</name></type> <name pos:start="753:21" pos:end="753:21">r</name> <init pos:start="753:23" pos:end="753:45">= <expr pos:start="753:25" pos:end="753:45"><operator pos:start="753:25" pos:end="753:25">(</operator><literal type="number" pos:start="753:26" pos:end="753:30">255</literal> <operator pos:start="753:30" pos:end="753:30">-</operator> <name pos:start="753:32" pos:end="753:40"><name pos:start="753:32" pos:end="753:34">dst</name><index pos:start="753:35" pos:end="753:37">[<expr pos:start="753:36" pos:end="753:36"><literal type="number" pos:start="753:36" pos:end="753:36">0</literal></expr>]</index><index pos:start="753:38" pos:end="753:40">[<expr pos:start="753:39" pos:end="753:39"><name pos:start="753:39" pos:end="753:39">j</name></expr>]</index></name><operator pos:start="753:41" pos:end="753:41">)</operator> <operator pos:start="753:43" pos:end="753:43">*</operator> <name pos:start="753:45" pos:end="753:45">k</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="755:17" pos:end="755:46"><decl pos:start="755:17" pos:end="755:45"><type pos:start="755:17" pos:end="755:19"><name pos:start="755:17" pos:end="755:19">int</name></type> <name pos:start="755:21" pos:end="755:21">g</name> <init pos:start="755:23" pos:end="755:45">= <expr pos:start="755:25" pos:end="755:45"><operator pos:start="755:25" pos:end="755:25">(</operator><literal type="number" pos:start="755:26" pos:end="755:30">128</literal> <operator pos:start="755:30" pos:end="755:30">-</operator> <name pos:start="755:32" pos:end="755:40"><name pos:start="755:32" pos:end="755:34">dst</name><index pos:start="755:35" pos:end="755:37">[<expr pos:start="755:36" pos:end="755:36"><literal type="number" pos:start="755:36" pos:end="755:36">1</literal></expr>]</index><index pos:start="755:38" pos:end="755:40">[<expr pos:start="755:39" pos:end="755:39"><name pos:start="755:39" pos:end="755:39">j</name></expr>]</index></name><operator pos:start="755:41" pos:end="755:41">)</operator> <operator pos:start="755:43" pos:end="755:43">*</operator> <name pos:start="755:45" pos:end="755:45">k</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="757:17" pos:end="757:46"><decl pos:start="757:17" pos:end="757:45"><type pos:start="757:17" pos:end="757:19"><name pos:start="757:17" pos:end="757:19">int</name></type> <name pos:start="757:21" pos:end="757:21">b</name> <init pos:start="757:23" pos:end="757:45">= <expr pos:start="757:25" pos:end="757:45"><operator pos:start="757:25" pos:end="757:25">(</operator><literal type="number" pos:start="757:26" pos:end="757:30">128</literal> <operator pos:start="757:30" pos:end="757:30">-</operator> <name pos:start="757:32" pos:end="757:40"><name pos:start="757:32" pos:end="757:34">dst</name><index pos:start="757:35" pos:end="757:37">[<expr pos:start="757:36" pos:end="757:36"><literal type="number" pos:start="757:36" pos:end="757:36">2</literal></expr>]</index><index pos:start="757:38" pos:end="757:40">[<expr pos:start="757:39" pos:end="757:39"><name pos:start="757:39" pos:end="757:39">j</name></expr>]</index></name><operator pos:start="757:41" pos:end="757:41">)</operator> <operator pos:start="757:43" pos:end="757:43">*</operator> <name pos:start="757:45" pos:end="757:45">k</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="759:17" pos:end="759:40"><expr pos:start="759:17" pos:end="759:39"><name pos:start="759:17" pos:end="759:25"><name pos:start="759:17" pos:end="759:19">dst</name><index pos:start="759:20" pos:end="759:22">[<expr pos:start="759:21" pos:end="759:21"><literal type="number" pos:start="759:21" pos:end="759:21">0</literal></expr>]</index><index pos:start="759:23" pos:end="759:25">[<expr pos:start="759:24" pos:end="759:24"><name pos:start="759:24" pos:end="759:24">j</name></expr>]</index></name> <operator pos:start="759:27" pos:end="759:27">=</operator> <name pos:start="759:29" pos:end="759:29">r</name><operator pos:start="759:30" pos:end="759:30">*</operator><literal type="number" pos:start="759:31" pos:end="759:33">257</literal> <operator pos:start="759:35" pos:end="759:36">&gt;&gt;</operator> <literal type="number" pos:start="759:38" pos:end="759:39">16</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="761:17" pos:end="761:48"><expr pos:start="761:17" pos:end="761:47"><name pos:start="761:17" pos:end="761:25"><name pos:start="761:17" pos:end="761:19">dst</name><index pos:start="761:20" pos:end="761:22">[<expr pos:start="761:21" pos:end="761:21"><literal type="number" pos:start="761:21" pos:end="761:21">1</literal></expr>]</index><index pos:start="761:23" pos:end="761:25">[<expr pos:start="761:24" pos:end="761:24"><name pos:start="761:24" pos:end="761:24">j</name></expr>]</index></name> <operator pos:start="761:27" pos:end="761:27">=</operator> <operator pos:start="761:29" pos:end="761:29">(</operator><name pos:start="761:30" pos:end="761:30">g</name><operator pos:start="761:31" pos:end="761:31">*</operator><literal type="number" pos:start="761:32" pos:end="761:34">257</literal> <operator pos:start="761:36" pos:end="761:37">&gt;&gt;</operator> <literal type="number" pos:start="761:39" pos:end="761:40">16</literal><operator pos:start="761:41" pos:end="761:41">)</operator> <operator pos:start="761:43" pos:end="761:43">+</operator> <literal type="number" pos:start="761:45" pos:end="761:47">128</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="763:17" pos:end="763:48"><expr pos:start="763:17" pos:end="763:47"><name pos:start="763:17" pos:end="763:25"><name pos:start="763:17" pos:end="763:19">dst</name><index pos:start="763:20" pos:end="763:22">[<expr pos:start="763:21" pos:end="763:21"><literal type="number" pos:start="763:21" pos:end="763:21">2</literal></expr>]</index><index pos:start="763:23" pos:end="763:25">[<expr pos:start="763:24" pos:end="763:24"><name pos:start="763:24" pos:end="763:24">j</name></expr>]</index></name> <operator pos:start="763:27" pos:end="763:27">=</operator> <operator pos:start="763:29" pos:end="763:29">(</operator><name pos:start="763:30" pos:end="763:30">b</name><operator pos:start="763:31" pos:end="763:31">*</operator><literal type="number" pos:start="763:32" pos:end="763:34">257</literal> <operator pos:start="763:36" pos:end="763:37">&gt;&gt;</operator> <literal type="number" pos:start="763:39" pos:end="763:40">16</literal><operator pos:start="763:41" pos:end="763:41">)</operator> <operator pos:start="763:43" pos:end="763:43">+</operator> <literal type="number" pos:start="763:45" pos:end="763:47">128</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="765:17" pos:end="765:32"><expr pos:start="765:17" pos:end="765:31"><name pos:start="765:17" pos:end="765:25"><name pos:start="765:17" pos:end="765:19">dst</name><index pos:start="765:20" pos:end="765:22">[<expr pos:start="765:21" pos:end="765:21"><literal type="number" pos:start="765:21" pos:end="765:21">3</literal></expr>]</index><index pos:start="765:23" pos:end="765:25">[<expr pos:start="765:24" pos:end="765:24"><name pos:start="765:24" pos:end="765:24">j</name></expr>]</index></name> <operator pos:start="765:27" pos:end="765:27">=</operator> <literal type="number" pos:start="765:29" pos:end="765:31">255</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="775:5" pos:end="789:5"><if pos:start="775:5" pos:end="789:5">if <condition pos:start="775:8" pos:end="775:20">(<expr pos:start="775:9" pos:end="775:19"><name pos:start="775:9" pos:end="775:19"><name pos:start="775:9" pos:end="775:9">s</name><operator pos:start="775:10" pos:end="775:11">-&gt;</operator><name pos:start="775:12" pos:end="775:19">stereo3d</name></name></expr>)</condition> <block pos:start="775:22" pos:end="789:5">{<block_content pos:start="777:9" pos:end="787:31">

        <decl_stmt pos:start="777:9" pos:end="777:64"><decl pos:start="777:9" pos:end="777:63"><type pos:start="777:9" pos:end="777:20"><name pos:start="777:9" pos:end="777:18">AVStereo3D</name> <modifier pos:start="777:20" pos:end="777:20">*</modifier></type><name pos:start="777:21" pos:end="777:26">stereo</name> <init pos:start="777:28" pos:end="777:63">= <expr pos:start="777:30" pos:end="777:63"><call pos:start="777:30" pos:end="777:63"><name pos:start="777:30" pos:end="777:57">av_stereo3d_create_side_data</name><argument_list pos:start="777:58" pos:end="777:63">(<argument pos:start="777:59" pos:end="777:62"><expr pos:start="777:59" pos:end="777:62"><name pos:start="777:59" pos:end="777:62">data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="779:9" pos:end="785:9"><if pos:start="779:9" pos:end="785:9">if <condition pos:start="779:12" pos:end="779:19">(<expr pos:start="779:13" pos:end="779:18"><name pos:start="779:13" pos:end="779:18">stereo</name></expr>)</condition> <block pos:start="779:21" pos:end="785:9">{<block_content pos:start="781:13" pos:end="783:47">

            <expr_stmt pos:start="781:13" pos:end="781:46"><expr pos:start="781:13" pos:end="781:45"><name pos:start="781:13" pos:end="781:24"><name pos:start="781:13" pos:end="781:18">stereo</name><operator pos:start="781:19" pos:end="781:20">-&gt;</operator><name pos:start="781:21" pos:end="781:24">type</name></name>  <operator pos:start="781:27" pos:end="781:27">=</operator> <name pos:start="781:29" pos:end="781:45"><name pos:start="781:29" pos:end="781:29">s</name><operator pos:start="781:30" pos:end="781:31">-&gt;</operator><name pos:start="781:32" pos:end="781:39">stereo3d</name><operator pos:start="781:40" pos:end="781:41">-&gt;</operator><name pos:start="781:42" pos:end="781:45">type</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="783:13" pos:end="783:47"><expr pos:start="783:13" pos:end="783:46"><name pos:start="783:13" pos:end="783:25"><name pos:start="783:13" pos:end="783:18">stereo</name><operator pos:start="783:19" pos:end="783:20">-&gt;</operator><name pos:start="783:21" pos:end="783:25">flags</name></name> <operator pos:start="783:27" pos:end="783:27">=</operator> <name pos:start="783:29" pos:end="783:46"><name pos:start="783:29" pos:end="783:29">s</name><operator pos:start="783:30" pos:end="783:31">-&gt;</operator><name pos:start="783:32" pos:end="783:39">stereo3d</name><operator pos:start="783:40" pos:end="783:41">-&gt;</operator><name pos:start="783:42" pos:end="783:46">flags</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="787:9" pos:end="787:31"><expr pos:start="787:9" pos:end="787:30"><call pos:start="787:9" pos:end="787:30"><name pos:start="787:9" pos:end="787:16">av_freep</name><argument_list pos:start="787:17" pos:end="787:30">(<argument pos:start="787:18" pos:end="787:29"><expr pos:start="787:18" pos:end="787:29"><operator pos:start="787:18" pos:end="787:18">&amp;</operator><name pos:start="787:19" pos:end="787:29"><name pos:start="787:19" pos:end="787:19">s</name><operator pos:start="787:20" pos:end="787:21">-&gt;</operator><name pos:start="787:22" pos:end="787:29">stereo3d</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="793:5" pos:end="793:72"><expr pos:start="793:5" pos:end="793:71"><call pos:start="793:5" pos:end="793:71"><name pos:start="793:5" pos:end="793:16">av_dict_copy</name><argument_list pos:start="793:17" pos:end="793:71">(<argument pos:start="793:18" pos:end="793:49"><expr pos:start="793:18" pos:end="793:49"><call pos:start="793:18" pos:end="793:49"><name pos:start="793:18" pos:end="793:43">avpriv_frame_get_metadatap</name><argument_list pos:start="793:44" pos:end="793:49">(<argument pos:start="793:45" pos:end="793:48"><expr pos:start="793:45" pos:end="793:48"><name pos:start="793:45" pos:end="793:48">data</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="793:52" pos:end="793:67"><expr pos:start="793:52" pos:end="793:67"><name pos:start="793:52" pos:end="793:67"><name pos:start="793:52" pos:end="793:52">s</name><operator pos:start="793:53" pos:end="793:54">-&gt;</operator><name pos:start="793:55" pos:end="793:67">exif_metadata</name></name></expr></argument>, <argument pos:start="793:70" pos:end="793:70"><expr pos:start="793:70" pos:end="793:70"><literal type="number" pos:start="793:70" pos:end="793:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="795:5" pos:end="795:36"><expr pos:start="795:5" pos:end="795:35"><call pos:start="795:5" pos:end="795:35"><name pos:start="795:5" pos:end="795:16">av_dict_free</name><argument_list pos:start="795:17" pos:end="795:35">(<argument pos:start="795:18" pos:end="795:34"><expr pos:start="795:18" pos:end="795:34"><operator pos:start="795:18" pos:end="795:18">&amp;</operator><name pos:start="795:19" pos:end="795:34"><name pos:start="795:19" pos:end="795:19">s</name><operator pos:start="795:20" pos:end="795:21">-&gt;</operator><name pos:start="795:22" pos:end="795:34">exif_metadata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="799:1" pos:end="799:19"><name pos:start="799:1" pos:end="799:18">the_end_no_picture</name>:</label>

    <expr_stmt pos:start="801:5" pos:end="803:30"><expr pos:start="801:5" pos:end="803:29"><call pos:start="801:5" pos:end="803:29"><name pos:start="801:5" pos:end="801:10">av_log</name><argument_list pos:start="801:11" pos:end="803:29">(<argument pos:start="801:12" pos:end="801:16"><expr pos:start="801:12" pos:end="801:16"><name pos:start="801:12" pos:end="801:16">avctx</name></expr></argument>, <argument pos:start="801:19" pos:end="801:30"><expr pos:start="801:19" pos:end="801:30"><name pos:start="801:19" pos:end="801:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="801:33" pos:end="801:82"><expr pos:start="801:33" pos:end="801:82"><literal type="string" pos:start="801:33" pos:end="801:55">"decode frame unused %"</literal><name pos:start="801:56" pos:end="801:72">PTRDIFF_SPECIFIER</name><literal type="string" pos:start="801:73" pos:end="801:82">" bytes\n"</literal></expr></argument>,

           <argument pos:start="803:12" pos:end="803:28"><expr pos:start="803:12" pos:end="803:28"><name pos:start="803:12" pos:end="803:18">buf_end</name> <operator pos:start="803:20" pos:end="803:20">-</operator> <name pos:start="803:22" pos:end="803:28">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="805:1" pos:end="805:29">//  return buf_end - buf_ptr;</comment>

    <return pos:start="807:5" pos:end="807:25">return <expr pos:start="807:12" pos:end="807:24"><name pos:start="807:12" pos:end="807:18">buf_ptr</name> <operator pos:start="807:20" pos:end="807:20">-</operator> <name pos:start="807:22" pos:end="807:24">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
