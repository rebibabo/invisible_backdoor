<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4990.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:21">int64_t</name></type> <name pos:start="1:23" pos:end="1:30">bs_get_v</name><parameter_list pos:start="1:31" pos:end="1:50">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:47"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:44">uint8_t</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier><modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:18">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:13">v</name> <init pos:start="5:15" pos:end="5:17">= <expr pos:start="5:17" pos:end="5:17"><literal type="number" pos:start="5:17" pos:end="5:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">br</name> <init pos:start="7:12" pos:end="7:14">= <expr pos:start="7:14" pos:end="7:14"><literal type="number" pos:start="7:14" pos:end="7:14">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">c</name></decl>;</decl_stmt>



    <do pos:start="13:5" pos:end="27:23">do <block pos:start="13:8" pos:end="27:5">{<block_content pos:start="15:9" pos:end="25:22">

        <expr_stmt pos:start="15:9" pos:end="15:17"><expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:9">c</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <operator pos:start="15:13" pos:end="15:13">*</operator><operator pos:start="15:14" pos:end="15:14">*</operator><name pos:start="15:15" pos:end="15:16">bs</name></expr>;</expr_stmt> <expr_stmt pos:start="15:19" pos:end="15:26"><expr pos:start="15:19" pos:end="15:25"><operator pos:start="15:19" pos:end="15:19">(</operator><operator pos:start="15:20" pos:end="15:20">*</operator><name pos:start="15:21" pos:end="15:22">bs</name><operator pos:start="15:23" pos:end="15:23">)</operator><operator pos:start="15:24" pos:end="15:25">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:16"><expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:9">v</name> <operator pos:start="17:11" pos:end="17:13">&lt;&lt;=</operator> <literal type="number" pos:start="17:15" pos:end="17:15">7</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:22"><expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:9">v</name> <operator pos:start="19:11" pos:end="19:12">|=</operator> <name pos:start="19:14" pos:end="19:14">c</name> <operator pos:start="19:16" pos:end="19:16">&amp;</operator> <literal type="number" pos:start="19:18" pos:end="19:21">0x7F</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:13"><expr pos:start="21:9" pos:end="21:12"><name pos:start="21:9" pos:end="21:10">br</name><operator pos:start="21:11" pos:end="21:12">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:22"><if pos:start="23:9" pos:end="25:22">if <condition pos:start="23:12" pos:end="23:20">(<expr pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:14">br</name> <operator pos:start="23:16" pos:end="23:16">&gt;</operator> <literal type="number" pos:start="23:18" pos:end="23:19">10</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:22"><block_content pos:start="25:13" pos:end="25:22">

            <return pos:start="25:13" pos:end="25:22">return <expr pos:start="25:20" pos:end="25:21"><operator pos:start="25:20" pos:end="25:20">-</operator><literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="27:13" pos:end="27:22">(<expr pos:start="27:14" pos:end="27:21"><name pos:start="27:14" pos:end="27:14">c</name> <operator pos:start="27:16" pos:end="27:16">&amp;</operator> <literal type="number" pos:start="27:18" pos:end="27:21">0x80</literal></expr>)</condition>;</do>



    <return pos:start="31:5" pos:end="31:18">return <expr pos:start="31:12" pos:end="31:17"><name pos:start="31:12" pos:end="31:12">v</name> <operator pos:start="31:14" pos:end="31:14">-</operator> <name pos:start="31:16" pos:end="31:17">br</name></expr>;</return>

</block_content>}</block></function>
</unit>
