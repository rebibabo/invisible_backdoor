<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5117.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">vmdk_write</name><parameter_list pos:start="1:22" pos:end="3:56">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:42"><name pos:start="1:23" pos:end="1:38">BlockDriverState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">bs</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><name pos:start="1:45" pos:end="1:51">int64_t</name></type> <name pos:start="1:53" pos:end="1:62">sector_num</name></decl></parameter>, 

                     <parameter pos:start="3:22" pos:end="3:39"><decl pos:start="3:22" pos:end="3:39"><type pos:start="3:22" pos:end="3:39"><specifier pos:start="3:22" pos:end="3:26">const</specifier> <name pos:start="3:28" pos:end="3:34">uint8_t</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:39">buf</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:55">nb_sectors</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVVmdkState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:24">index_in_cluster</name></decl>, <decl pos:start="9:27" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:27">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:27">cluster_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:14"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:14">int</name></type> <name pos:start="13:16" pos:end="13:25">cid_update</name> <init pos:start="13:27" pos:end="13:29">= <expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr></init></decl>;</decl_stmt>



    <while pos:start="17:5" pos:end="55:5">while <condition pos:start="17:11" pos:end="17:26">(<expr pos:start="17:12" pos:end="17:25"><name pos:start="17:12" pos:end="17:21">nb_sectors</name> <operator pos:start="17:23" pos:end="17:23">&gt;</operator> <literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr>)</condition> <block pos:start="17:28" pos:end="55:5">{<block_content pos:start="19:9" pos:end="53:9">

        <expr_stmt pos:start="19:9" pos:end="19:65"><expr pos:start="19:9" pos:end="19:64"><name pos:start="19:9" pos:end="19:24">index_in_cluster</name> <operator pos:start="19:26" pos:end="19:26">=</operator> <name pos:start="19:28" pos:end="19:37">sector_num</name> <operator pos:start="19:39" pos:end="19:39">&amp;</operator> <operator pos:start="19:41" pos:end="19:41">(</operator><name pos:start="19:42" pos:end="19:59"><name pos:start="19:42" pos:end="19:42">s</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:59">cluster_sectors</name></name> <operator pos:start="19:61" pos:end="19:61">-</operator> <literal type="number" pos:start="19:63" pos:end="19:63">1</literal><operator pos:start="19:64" pos:end="19:64">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:9">n</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:30">cluster_sectors</name></name> <operator pos:start="21:32" pos:end="21:32">-</operator> <name pos:start="21:34" pos:end="21:49">index_in_cluster</name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:27"><if pos:start="23:9" pos:end="25:27">if <condition pos:start="23:12" pos:end="23:27">(<expr pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:13">n</name> <operator pos:start="23:15" pos:end="23:15">&gt;</operator> <name pos:start="23:17" pos:end="23:26">nb_sectors</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:27"><block_content pos:start="25:13" pos:end="25:27">

            <expr_stmt pos:start="25:13" pos:end="25:27"><expr pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:13">n</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:26">nb_sectors</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:68"><expr pos:start="27:9" pos:end="27:67"><name pos:start="27:9" pos:end="27:22">cluster_offset</name> <operator pos:start="27:24" pos:end="27:24">=</operator> <call pos:start="27:26" pos:end="27:67"><name pos:start="27:26" pos:end="27:43">get_cluster_offset</name><argument_list pos:start="27:44" pos:end="27:67">(<argument pos:start="27:45" pos:end="27:46"><expr pos:start="27:45" pos:end="27:46"><name pos:start="27:45" pos:end="27:46">bs</name></expr></argument>, <argument pos:start="27:49" pos:end="27:63"><expr pos:start="27:49" pos:end="27:63"><name pos:start="27:49" pos:end="27:58">sector_num</name> <operator pos:start="27:60" pos:end="27:61">&lt;&lt;</operator> <literal type="number" pos:start="27:63" pos:end="27:63">9</literal></expr></argument>, <argument pos:start="27:66" pos:end="27:66"><expr pos:start="27:66" pos:end="27:66"><literal type="number" pos:start="27:66" pos:end="27:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:22"><if pos:start="29:9" pos:end="31:22">if <condition pos:start="29:12" pos:end="29:28">(<expr pos:start="29:13" pos:end="29:27"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:27">cluster_offset</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:22"><block_content pos:start="31:13" pos:end="31:22">

            <return pos:start="31:13" pos:end="31:22">return <expr pos:start="31:20" pos:end="31:21"><operator pos:start="31:20" pos:end="31:20">-</operator><literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="35:22"><if pos:start="33:9" pos:end="35:22">if <condition pos:start="33:12" pos:end="33:97">(<expr pos:start="33:13" pos:end="33:96"><call pos:start="33:13" pos:end="33:85"><name pos:start="33:13" pos:end="33:23">bdrv_pwrite</name><argument_list pos:start="33:24" pos:end="33:85">(<argument pos:start="33:25" pos:end="33:29"><expr pos:start="33:25" pos:end="33:29"><name pos:start="33:25" pos:end="33:29"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:29">hd</name></name></expr></argument>, <argument pos:start="33:32" pos:end="33:70"><expr pos:start="33:32" pos:end="33:70"><name pos:start="33:32" pos:end="33:45">cluster_offset</name> <operator pos:start="33:47" pos:end="33:47">+</operator> <name pos:start="33:49" pos:end="33:64">index_in_cluster</name> <operator pos:start="33:66" pos:end="33:66">*</operator> <literal type="number" pos:start="33:68" pos:end="33:70">512</literal></expr></argument>, <argument pos:start="33:73" pos:end="33:75"><expr pos:start="33:73" pos:end="33:75"><name pos:start="33:73" pos:end="33:75">buf</name></expr></argument>, <argument pos:start="33:78" pos:end="33:84"><expr pos:start="33:78" pos:end="33:84"><name pos:start="33:78" pos:end="33:78">n</name> <operator pos:start="33:80" pos:end="33:80">*</operator> <literal type="number" pos:start="33:82" pos:end="33:84">512</literal></expr></argument>)</argument_list></call> <operator pos:start="33:87" pos:end="33:88">!=</operator> <name pos:start="33:90" pos:end="33:90">n</name> <operator pos:start="33:92" pos:end="33:92">*</operator> <literal type="number" pos:start="33:94" pos:end="33:96">512</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:22"><block_content pos:start="35:13" pos:end="35:22">

            <return pos:start="35:13" pos:end="35:22">return <expr pos:start="35:20" pos:end="35:21"><operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:18">nb_sectors</name> <operator pos:start="37:20" pos:end="37:21">-=</operator> <name pos:start="37:23" pos:end="37:23">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:18">sector_num</name> <operator pos:start="39:20" pos:end="39:21">+=</operator> <name pos:start="39:23" pos:end="39:23">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:23"><expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:11">buf</name> <operator pos:start="41:13" pos:end="41:14">+=</operator> <name pos:start="41:16" pos:end="41:16">n</name> <operator pos:start="41:18" pos:end="41:18">*</operator> <literal type="number" pos:start="41:20" pos:end="41:22">512</literal></expr>;</expr_stmt>



        <comment type="line" pos:start="45:9" pos:end="45:78">// update CID on the first write every time the virtual disk is opened</comment>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:24">(<expr pos:start="47:13" pos:end="47:23"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:23">cid_update</name></expr>)</condition> <block pos:start="47:26" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:25">

            <expr_stmt pos:start="49:13" pos:end="49:43"><expr pos:start="49:13" pos:end="49:42"><call pos:start="49:13" pos:end="49:42"><name pos:start="49:13" pos:end="49:26">vmdk_write_cid</name><argument_list pos:start="49:27" pos:end="49:42">(<argument pos:start="49:28" pos:end="49:29"><expr pos:start="49:28" pos:end="49:29"><name pos:start="49:28" pos:end="49:29">bs</name></expr></argument>, <argument pos:start="49:32" pos:end="49:41"><expr pos:start="49:32" pos:end="49:41"><call pos:start="49:32" pos:end="49:41"><name pos:start="49:32" pos:end="49:35">time</name><argument_list pos:start="49:36" pos:end="49:41">(<argument pos:start="49:37" pos:end="49:40"><expr pos:start="49:37" pos:end="49:40"><name pos:start="49:37" pos:end="49:40">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:25"><expr pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:22">cid_update</name><operator pos:start="51:23" pos:end="51:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
