<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2664.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_stts</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>, <decl pos:start="9:21" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:21" pos:end="9:27">entries</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:20">duration</name><init pos:start="11:21" pos:end="11:22">=<expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:30">total_sample_count</name><init pos:start="13:31" pos:end="13:32">=<expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:30">(<expr pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:13">fc</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:25">nb_streams</name></name> <operator pos:start="17:27" pos:end="17:27">&lt;</operator> <literal type="number" pos:start="17:29" pos:end="17:29">1</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:6">st</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <name pos:start="21:10" pos:end="21:44"><name pos:start="21:10" pos:end="21:10">c</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:14">fc</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:23">streams</name><index pos:start="21:24" pos:end="21:44">[<expr pos:start="21:25" pos:end="21:43"><name pos:start="21:25" pos:end="21:41"><name pos:start="21:25" pos:end="21:25">c</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:29">fc</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:41">nb_streams</name></name><operator pos:start="21:42" pos:end="21:42">-</operator><literal type="number" pos:start="21:43" pos:end="21:43">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:6">sc</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <name pos:start="23:10" pos:end="23:22"><name pos:start="23:10" pos:end="23:11">st</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:22">priv_data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:16"><expr pos:start="27:5" pos:end="27:15"><call pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:11">avio_r8</name><argument_list pos:start="27:12" pos:end="27:15">(<argument pos:start="27:13" pos:end="27:14"><expr pos:start="27:13" pos:end="27:14"><name pos:start="27:13" pos:end="27:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:18" pos:end="27:30">/* version */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><call pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:13">avio_rb24</name><argument_list pos:start="29:14" pos:end="29:17">(<argument pos:start="29:15" pos:end="29:16"><expr pos:start="29:15" pos:end="29:16"><name pos:start="29:15" pos:end="29:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="29:20" pos:end="29:30">/* flags */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:11">entries</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:27"><name pos:start="31:15" pos:end="31:23">avio_rb32</name><argument_list pos:start="31:24" pos:end="31:27">(<argument pos:start="31:25" pos:end="31:26"><expr pos:start="31:25" pos:end="31:26"><name pos:start="31:25" pos:end="31:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="37:42"><expr pos:start="35:5" pos:end="37:41"><call pos:start="35:5" pos:end="37:41"><name pos:start="35:5" pos:end="35:11">av_dlog</name><argument_list pos:start="35:12" pos:end="37:41">(<argument pos:start="35:13" pos:end="35:17"><expr pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:13">c</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:17">fc</name></name></expr></argument>, <argument pos:start="35:20" pos:end="35:50"><expr pos:start="35:20" pos:end="35:50"><literal type="string" pos:start="35:20" pos:end="35:50">"track[%i].stts.entries = %i\n"</literal></expr></argument>,

            <argument pos:start="37:13" pos:end="37:31"><expr pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:29"><name pos:start="37:13" pos:end="37:13">c</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:17">fc</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:29">nb_streams</name></name><operator pos:start="37:30" pos:end="37:30">-</operator><literal type="number" pos:start="37:31" pos:end="37:31">1</literal></expr></argument>, <argument pos:start="37:34" pos:end="37:40"><expr pos:start="37:34" pos:end="37:40"><name pos:start="37:34" pos:end="37:40">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="43:18"><if pos:start="41:5" pos:end="43:18">if <condition pos:start="41:8" pos:end="41:53">(<expr pos:start="41:9" pos:end="41:52"><name pos:start="41:9" pos:end="41:15">entries</name> <operator pos:start="41:17" pos:end="41:18">&gt;=</operator> <name pos:start="41:20" pos:end="41:27">UINT_MAX</name> <operator pos:start="41:29" pos:end="41:29">/</operator> <sizeof pos:start="41:31" pos:end="41:52">sizeof<argument_list pos:start="41:37" pos:end="41:52">(<argument pos:start="41:38" pos:end="41:51"><expr pos:start="41:38" pos:end="41:51"><operator pos:start="41:38" pos:end="41:38">*</operator><name pos:start="41:39" pos:end="41:51"><name pos:start="41:39" pos:end="41:40">sc</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:51">stts_data</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:18"><block_content pos:start="43:9" pos:end="43:18">

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:64"><expr pos:start="47:5" pos:end="47:63"><name pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:6">sc</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:17">stts_data</name></name> <operator pos:start="47:19" pos:end="47:19">=</operator> <call pos:start="47:21" pos:end="47:63"><name pos:start="47:21" pos:end="47:29">av_malloc</name><argument_list pos:start="47:30" pos:end="47:63">(<argument pos:start="47:31" pos:end="47:62"><expr pos:start="47:31" pos:end="47:62"><name pos:start="47:31" pos:end="47:37">entries</name> <operator pos:start="47:39" pos:end="47:39">*</operator> <sizeof pos:start="47:41" pos:end="47:62">sizeof<argument_list pos:start="47:47" pos:end="47:62">(<argument pos:start="47:48" pos:end="47:61"><expr pos:start="47:48" pos:end="47:61"><operator pos:start="47:48" pos:end="47:48">*</operator><name pos:start="47:49" pos:end="47:61"><name pos:start="47:49" pos:end="47:50">sc</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:61">stts_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:31"><if pos:start="49:5" pos:end="51:31">if <condition pos:start="49:8" pos:end="49:23">(<expr pos:start="49:9" pos:end="49:22"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:22"><name pos:start="49:10" pos:end="49:11">sc</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:22">stts_data</name></name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:31"><block_content pos:start="51:9" pos:end="51:31">

        <return pos:start="51:9" pos:end="51:31">return <expr pos:start="51:16" pos:end="51:30"><call pos:start="51:16" pos:end="51:30"><name pos:start="51:16" pos:end="51:22">AVERROR</name><argument_list pos:start="51:23" pos:end="51:30">(<argument pos:start="51:24" pos:end="51:29"><expr pos:start="51:24" pos:end="51:29"><name pos:start="51:24" pos:end="51:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:29"><expr pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:6">sc</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:18">stts_count</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:28">entries</name></expr>;</expr_stmt>



    <for pos:start="59:5" pos:end="87:5">for <control pos:start="59:9" pos:end="59:29">(<init pos:start="59:10" pos:end="59:13"><expr pos:start="59:10" pos:end="59:12"><name pos:start="59:10" pos:end="59:10">i</name><operator pos:start="59:11" pos:end="59:11">=</operator><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</init> <condition pos:start="59:15" pos:end="59:24"><expr pos:start="59:15" pos:end="59:23"><name pos:start="59:15" pos:end="59:15">i</name><operator pos:start="59:16" pos:end="59:16">&lt;</operator><name pos:start="59:17" pos:end="59:23">entries</name></expr>;</condition> <incr pos:start="59:26" pos:end="59:28"><expr pos:start="59:26" pos:end="59:28"><name pos:start="59:26" pos:end="59:26">i</name><operator pos:start="59:27" pos:end="59:28">++</operator></expr></incr>)</control> <block pos:start="59:31" pos:end="87:5">{<block_content pos:start="61:9" pos:end="85:41">

        <decl_stmt pos:start="61:9" pos:end="61:28"><decl pos:start="61:9" pos:end="61:27"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:27">sample_duration</name></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:25"><decl pos:start="63:9" pos:end="63:24"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:24">sample_count</name></decl>;</decl_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:35"><expr pos:start="67:9" pos:end="67:34"><name pos:start="67:9" pos:end="67:20">sample_count</name><operator pos:start="67:21" pos:end="67:21">=</operator><call pos:start="67:22" pos:end="67:34"><name pos:start="67:22" pos:end="67:30">avio_rb32</name><argument_list pos:start="67:31" pos:end="67:34">(<argument pos:start="67:32" pos:end="67:33"><expr pos:start="67:32" pos:end="67:33"><name pos:start="67:32" pos:end="67:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:40"><expr pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:23">sample_duration</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <call pos:start="69:27" pos:end="69:39"><name pos:start="69:27" pos:end="69:35">avio_rb32</name><argument_list pos:start="69:36" pos:end="69:39">(<argument pos:start="69:37" pos:end="69:38"><expr pos:start="69:37" pos:end="69:38"><name pos:start="69:37" pos:end="69:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:45"><expr pos:start="71:9" pos:end="71:44"><name pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:10">sc</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:21">stts_data</name><index pos:start="71:22" pos:end="71:24">[<expr pos:start="71:23" pos:end="71:23"><name pos:start="71:23" pos:end="71:23">i</name></expr>]</index></name><operator pos:start="71:25" pos:end="71:25">.</operator><name pos:start="71:26" pos:end="71:30">count</name><operator pos:start="71:31" pos:end="71:31">=</operator> <name pos:start="71:33" pos:end="71:44">sample_count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:51"><expr pos:start="73:9" pos:end="73:50"><name pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:10">sc</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:21">stts_data</name><index pos:start="73:22" pos:end="73:24">[<expr pos:start="73:23" pos:end="73:23"><name pos:start="73:23" pos:end="73:23">i</name></expr>]</index></name><operator pos:start="73:25" pos:end="73:25">.</operator><name pos:start="73:26" pos:end="73:33">duration</name><operator pos:start="73:34" pos:end="73:34">=</operator> <name pos:start="73:36" pos:end="73:50">sample_duration</name></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="79:47"><expr pos:start="77:9" pos:end="79:46"><call pos:start="77:9" pos:end="79:46"><name pos:start="77:9" pos:end="77:15">av_dlog</name><argument_list pos:start="77:16" pos:end="79:46">(<argument pos:start="77:17" pos:end="77:21"><expr pos:start="77:17" pos:end="77:21"><name pos:start="77:17" pos:end="77:21"><name pos:start="77:17" pos:end="77:17">c</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:21">fc</name></name></expr></argument>, <argument pos:start="77:24" pos:end="77:62"><expr pos:start="77:24" pos:end="77:62"><literal type="string" pos:start="77:24" pos:end="77:62">"sample_count=%d, sample_duration=%d\n"</literal></expr></argument>,

                <argument pos:start="79:17" pos:end="79:28"><expr pos:start="79:17" pos:end="79:28"><name pos:start="79:17" pos:end="79:28">sample_count</name></expr></argument>, <argument pos:start="79:31" pos:end="79:45"><expr pos:start="79:31" pos:end="79:45"><name pos:start="79:31" pos:end="79:45">sample_duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:56"><expr pos:start="83:9" pos:end="83:55"><name pos:start="83:9" pos:end="83:16">duration</name><operator pos:start="83:17" pos:end="83:18">+=</operator><operator pos:start="83:19" pos:end="83:19">(</operator><name pos:start="83:20" pos:end="83:26">int64_t</name><operator pos:start="83:27" pos:end="83:27">)</operator><name pos:start="83:28" pos:end="83:42">sample_duration</name><operator pos:start="83:43" pos:end="83:43">*</operator><name pos:start="83:44" pos:end="83:55">sample_count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:41"><expr pos:start="85:9" pos:end="85:40"><name pos:start="85:9" pos:end="85:26">total_sample_count</name><operator pos:start="85:27" pos:end="85:28">+=</operator><name pos:start="85:29" pos:end="85:40">sample_count</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="91:5" pos:end="91:38"><expr pos:start="91:5" pos:end="91:37"><name pos:start="91:5" pos:end="91:17"><name pos:start="91:5" pos:end="91:6">st</name><operator pos:start="91:7" pos:end="91:8">-&gt;</operator><name pos:start="91:9" pos:end="91:17">nb_frames</name></name><operator pos:start="91:18" pos:end="91:18">=</operator> <name pos:start="91:20" pos:end="91:37">total_sample_count</name></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="95:31"><if pos:start="93:5" pos:end="95:31">if <condition pos:start="93:8" pos:end="93:17">(<expr pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:16">duration</name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:31"><block_content pos:start="95:9" pos:end="95:31">

        <expr_stmt pos:start="95:9" pos:end="95:31"><expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:10">st</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:20">duration</name></name><operator pos:start="95:21" pos:end="95:21">=</operator> <name pos:start="95:23" pos:end="95:30">duration</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="97:5" pos:end="97:13">return <expr pos:start="97:12" pos:end="97:12"><literal type="number" pos:start="97:12" pos:end="97:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
