<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19649.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">test_dynamic_globalprop</name><parameter_list pos:start="1:36" pos:end="1:41">(<parameter pos:start="1:37" pos:end="1:40"><decl pos:start="1:37" pos:end="1:40"><type pos:start="1:37" pos:end="1:40"><name pos:start="1:37" pos:end="1:40">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="35:41">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">MyType</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:14">mt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="17:6"><decl pos:start="7:5" pos:end="17:5"><type pos:start="7:5" pos:end="7:25"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <name pos:start="7:12" pos:end="7:25">GlobalProperty</name></type> <name pos:start="7:27" pos:end="7:33"><name pos:start="7:27" pos:end="7:31">props</name><index pos:start="7:32" pos:end="7:33">[]</index></name> <init pos:start="7:35" pos:end="17:5">= <expr pos:start="7:37" pos:end="17:5"><block pos:start="7:37" pos:end="17:5">{

        <expr pos:start="9:9" pos:end="9:46"><block pos:start="9:9" pos:end="9:46">{ <expr pos:start="9:11" pos:end="9:28"><name pos:start="9:11" pos:end="9:28">TYPE_DYNAMIC_PROPS</name></expr>, <expr pos:start="9:31" pos:end="9:37"><literal type="string" pos:start="9:31" pos:end="9:37">"prop1"</literal></expr>, <expr pos:start="9:40" pos:end="9:44"><literal type="string" pos:start="9:40" pos:end="9:44">"101"</literal></expr> }</block></expr>,

        <expr pos:start="11:9" pos:end="11:46"><block pos:start="11:9" pos:end="11:46">{ <expr pos:start="11:11" pos:end="11:28"><name pos:start="11:11" pos:end="11:28">TYPE_DYNAMIC_PROPS</name></expr>, <expr pos:start="11:31" pos:end="11:37"><literal type="string" pos:start="11:31" pos:end="11:37">"prop2"</literal></expr>, <expr pos:start="11:40" pos:end="11:44"><literal type="string" pos:start="11:40" pos:end="11:44">"102"</literal></expr> }</block></expr>,

        <expr pos:start="13:9" pos:end="13:58"><block pos:start="13:9" pos:end="13:58">{ <expr pos:start="13:11" pos:end="13:34"><name pos:start="13:11" pos:end="13:28">TYPE_DYNAMIC_PROPS</name><literal type="string" pos:start="13:29" pos:end="13:34">"-bad"</literal></expr>, <expr pos:start="13:37" pos:end="13:43"><literal type="string" pos:start="13:37" pos:end="13:43">"prop3"</literal></expr>, <expr pos:start="13:46" pos:end="13:50"><literal type="string" pos:start="13:46" pos:end="13:50">"103"</literal></expr>, <expr pos:start="13:53" pos:end="13:56"><name pos:start="13:53" pos:end="13:56">true</name></expr> }</block></expr>,

        <expr pos:start="15:9" pos:end="15:10"><block pos:start="15:9" pos:end="15:10">{}</block></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">all_used</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><call pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:34">qdev_prop_register_global_list</name><argument_list pos:start="23:35" pos:end="23:41">(<argument pos:start="23:36" pos:end="23:40"><expr pos:start="23:36" pos:end="23:40"><name pos:start="23:36" pos:end="23:40">props</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:54"><expr pos:start="27:5" pos:end="27:53"><name pos:start="27:5" pos:end="27:6">mt</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <call pos:start="27:10" pos:end="27:53"><name pos:start="27:10" pos:end="27:21">DYNAMIC_TYPE</name><argument_list pos:start="27:22" pos:end="27:53">(<argument pos:start="27:23" pos:end="27:52"><expr pos:start="27:23" pos:end="27:52"><call pos:start="27:23" pos:end="27:52"><name pos:start="27:23" pos:end="27:32">object_new</name><argument_list pos:start="27:33" pos:end="27:52">(<argument pos:start="27:34" pos:end="27:51"><expr pos:start="27:34" pos:end="27:51"><name pos:start="27:34" pos:end="27:51">TYPE_DYNAMIC_PROPS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><call pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:20">qdev_init_nofail</name><argument_list pos:start="29:21" pos:end="29:32">(<argument pos:start="29:22" pos:end="29:31"><expr pos:start="29:22" pos:end="29:31"><call pos:start="29:22" pos:end="29:31"><name pos:start="29:22" pos:end="29:27">DEVICE</name><argument_list pos:start="29:28" pos:end="29:31">(<argument pos:start="29:29" pos:end="29:30"><expr pos:start="29:29" pos:end="29:30"><name pos:start="29:29" pos:end="29:30">mt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><call pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:20">g_assert_cmpuint</name><argument_list pos:start="33:21" pos:end="33:40">(<argument pos:start="33:22" pos:end="33:30"><expr pos:start="33:22" pos:end="33:30"><name pos:start="33:22" pos:end="33:30"><name pos:start="33:22" pos:end="33:23">mt</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:30">prop1</name></name></expr></argument>, <argument pos:start="33:33" pos:end="33:34"><expr pos:start="33:33" pos:end="33:34"><operator pos:start="33:33" pos:end="33:34">==</operator></expr></argument>, <argument pos:start="33:37" pos:end="33:39"><expr pos:start="33:37" pos:end="33:39"><literal type="number" pos:start="33:37" pos:end="33:39">101</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><call pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:20">g_assert_cmpuint</name><argument_list pos:start="35:21" pos:end="35:40">(<argument pos:start="35:22" pos:end="35:30"><expr pos:start="35:22" pos:end="35:30"><name pos:start="35:22" pos:end="35:30"><name pos:start="35:22" pos:end="35:23">mt</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:30">prop2</name></name></expr></argument>, <argument pos:start="35:33" pos:end="35:34"><expr pos:start="35:33" pos:end="35:34"><operator pos:start="35:33" pos:end="35:34">==</operator></expr></argument>, <argument pos:start="35:37" pos:end="35:39"><expr pos:start="35:37" pos:end="35:39"><literal type="number" pos:start="35:37" pos:end="35:39">102</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



</block_content>}</block></function></unit>
