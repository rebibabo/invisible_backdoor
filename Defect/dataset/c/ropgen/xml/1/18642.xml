<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18642.c" pos:tabs="8"><function pos:start="1:1" pos:end="571:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">dec_misc</name><parameter_list pos:start="1:21" pos:end="1:53">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:37"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">dc</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:47">uint32_t</name></type> <name pos:start="1:49" pos:end="1:52">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="571:1">{<block_content pos:start="5:5" pos:end="569:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:16">op0</name></decl>, <decl pos:start="5:19" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:19" pos:end="5:21">op1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:15">ra</name></decl>, <decl pos:start="7:18" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:18" pos:end="7:19">rb</name></decl>, <decl pos:start="7:22" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:22" pos:end="7:23">rd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:15">L6</name></decl>, <decl pos:start="9:18" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:18" pos:end="9:19">K5</name></decl>, <decl pos:start="9:22" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:22" pos:end="9:24">K16</name></decl>, <decl pos:start="9:27" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:27" pos:end="9:31">K5_11</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int32_t</name></type> <name pos:start="11:13" pos:end="11:15">I16</name></decl>, <decl pos:start="11:18" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:18" pos:end="11:22">I5_11</name></decl>, <decl pos:start="11:25" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:25" pos:end="11:27">N26</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">TCGMemOp</name></type> <name pos:start="13:14" pos:end="13:16">mop</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">TCGv</name></type> <name pos:start="15:10" pos:end="15:11">t0</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:7">op0</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:32"><name pos:start="19:11" pos:end="19:19">extract32</name><argument_list pos:start="19:20" pos:end="19:32">(<argument pos:start="19:21" pos:end="19:24"><expr pos:start="19:21" pos:end="19:24"><name pos:start="19:21" pos:end="19:24">insn</name></expr></argument>, <argument pos:start="19:27" pos:end="19:28"><expr pos:start="19:27" pos:end="19:28"><literal type="number" pos:start="19:27" pos:end="19:28">26</literal></expr></argument>, <argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><literal type="number" pos:start="19:31" pos:end="19:31">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:7">op1</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:32"><name pos:start="21:11" pos:end="21:19">extract32</name><argument_list pos:start="21:20" pos:end="21:32">(<argument pos:start="21:21" pos:end="21:24"><expr pos:start="21:21" pos:end="21:24"><name pos:start="21:21" pos:end="21:24">insn</name></expr></argument>, <argument pos:start="21:27" pos:end="21:28"><expr pos:start="21:27" pos:end="21:28"><literal type="number" pos:start="21:27" pos:end="21:28">24</literal></expr></argument>, <argument pos:start="21:31" pos:end="21:31"><expr pos:start="21:31" pos:end="21:31"><literal type="number" pos:start="21:31" pos:end="21:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:6">ra</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:31"><name pos:start="23:10" pos:end="23:18">extract32</name><argument_list pos:start="23:19" pos:end="23:31">(<argument pos:start="23:20" pos:end="23:23"><expr pos:start="23:20" pos:end="23:23"><name pos:start="23:20" pos:end="23:23">insn</name></expr></argument>, <argument pos:start="23:26" pos:end="23:27"><expr pos:start="23:26" pos:end="23:27"><literal type="number" pos:start="23:26" pos:end="23:27">16</literal></expr></argument>, <argument pos:start="23:30" pos:end="23:30"><expr pos:start="23:30" pos:end="23:30"><literal type="number" pos:start="23:30" pos:end="23:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:6">rb</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:31"><name pos:start="25:10" pos:end="25:18">extract32</name><argument_list pos:start="25:19" pos:end="25:31">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">insn</name></expr></argument>, <argument pos:start="25:26" pos:end="25:27"><expr pos:start="25:26" pos:end="25:27"><literal type="number" pos:start="25:26" pos:end="25:27">11</literal></expr></argument>, <argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><literal type="number" pos:start="25:30" pos:end="25:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:6">rd</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <call pos:start="27:10" pos:end="27:31"><name pos:start="27:10" pos:end="27:18">extract32</name><argument_list pos:start="27:19" pos:end="27:31">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">insn</name></expr></argument>, <argument pos:start="27:26" pos:end="27:27"><expr pos:start="27:26" pos:end="27:27"><literal type="number" pos:start="27:26" pos:end="27:27">21</literal></expr></argument>, <argument pos:start="27:30" pos:end="27:30"><expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:6">L6</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:30"><name pos:start="29:10" pos:end="29:18">extract32</name><argument_list pos:start="29:19" pos:end="29:30">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">insn</name></expr></argument>, <argument pos:start="29:26" pos:end="29:26"><expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">5</literal></expr></argument>, <argument pos:start="29:29" pos:end="29:29"><expr pos:start="29:29" pos:end="29:29"><literal type="number" pos:start="29:29" pos:end="29:29">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:31"><expr pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:6">K5</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:30"><name pos:start="31:10" pos:end="31:18">extract32</name><argument_list pos:start="31:19" pos:end="31:30">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">insn</name></expr></argument>, <argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">0</literal></expr></argument>, <argument pos:start="31:29" pos:end="31:29"><expr pos:start="31:29" pos:end="31:29"><literal type="number" pos:start="31:29" pos:end="31:29">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:7">K16</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:32"><name pos:start="33:11" pos:end="33:19">extract32</name><argument_list pos:start="33:20" pos:end="33:32">(<argument pos:start="33:21" pos:end="33:24"><expr pos:start="33:21" pos:end="33:24"><name pos:start="33:21" pos:end="33:24">insn</name></expr></argument>, <argument pos:start="33:27" pos:end="33:27"><expr pos:start="33:27" pos:end="33:27"><literal type="number" pos:start="33:27" pos:end="33:27">0</literal></expr></argument>, <argument pos:start="33:30" pos:end="33:31"><expr pos:start="33:30" pos:end="33:31"><literal type="number" pos:start="33:30" pos:end="33:31">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:7">I16</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <operator pos:start="35:11" pos:end="35:11">(</operator><name pos:start="35:12" pos:end="35:18">int16_t</name><operator pos:start="35:19" pos:end="35:19">)</operator><name pos:start="35:20" pos:end="35:22">K16</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:34"><expr pos:start="37:5" pos:end="37:33"><name pos:start="37:5" pos:end="37:7">N26</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:33"><name pos:start="37:11" pos:end="37:20">sextract32</name><argument_list pos:start="37:21" pos:end="37:33">(<argument pos:start="37:22" pos:end="37:25"><expr pos:start="37:22" pos:end="37:25"><name pos:start="37:22" pos:end="37:25">insn</name></expr></argument>, <argument pos:start="37:28" pos:end="37:28"><expr pos:start="37:28" pos:end="37:28"><literal type="number" pos:start="37:28" pos:end="37:28">0</literal></expr></argument>, <argument pos:start="37:31" pos:end="37:32"><expr pos:start="37:31" pos:end="37:32"><literal type="number" pos:start="37:31" pos:end="37:32">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:68"><expr pos:start="39:5" pos:end="39:67"><name pos:start="39:5" pos:end="39:9">K5_11</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <operator pos:start="39:13" pos:end="39:13">(</operator><call pos:start="39:14" pos:end="39:35"><name pos:start="39:14" pos:end="39:22">extract32</name><argument_list pos:start="39:23" pos:end="39:35">(<argument pos:start="39:24" pos:end="39:27"><expr pos:start="39:24" pos:end="39:27"><name pos:start="39:24" pos:end="39:27">insn</name></expr></argument>, <argument pos:start="39:30" pos:end="39:31"><expr pos:start="39:30" pos:end="39:31"><literal type="number" pos:start="39:30" pos:end="39:31">21</literal></expr></argument>, <argument pos:start="39:34" pos:end="39:34"><expr pos:start="39:34" pos:end="39:34"><literal type="number" pos:start="39:34" pos:end="39:34">5</literal></expr></argument>)</argument_list></call> <operator pos:start="39:37" pos:end="39:38">&lt;&lt;</operator> <literal type="number" pos:start="39:40" pos:end="39:41">11</literal><operator pos:start="39:42" pos:end="39:42">)</operator> <operator pos:start="39:44" pos:end="39:44">|</operator> <call pos:start="39:46" pos:end="39:67"><name pos:start="39:46" pos:end="39:54">extract32</name><argument_list pos:start="39:55" pos:end="39:67">(<argument pos:start="39:56" pos:end="39:59"><expr pos:start="39:56" pos:end="39:59"><name pos:start="39:56" pos:end="39:59">insn</name></expr></argument>, <argument pos:start="39:62" pos:end="39:62"><expr pos:start="39:62" pos:end="39:62"><literal type="number" pos:start="39:62" pos:end="39:62">0</literal></expr></argument>, <argument pos:start="39:65" pos:end="39:66"><expr pos:start="39:65" pos:end="39:66"><literal type="number" pos:start="39:65" pos:end="39:66">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:9">I5_11</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:20">int16_t</name><operator pos:start="41:21" pos:end="41:21">)</operator><name pos:start="41:22" pos:end="41:26">K5_11</name></expr>;</expr_stmt>



    <switch pos:start="45:5" pos:end="569:5">switch <condition pos:start="45:12" pos:end="45:16">(<expr pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">op0</name></expr>)</condition> <block pos:start="45:18" pos:end="569:5">{<block_content pos:start="47:5" pos:end="567:14">

    <case pos:start="47:5" pos:end="47:14">case <expr pos:start="47:10" pos:end="47:13"><literal type="number" pos:start="47:10" pos:end="47:13">0x00</literal></expr>:</case>    <comment type="block" pos:start="47:19" pos:end="47:27">/* l.j */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><call pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:15">LOG_DIS</name><argument_list pos:start="49:16" pos:end="49:32">(<argument pos:start="49:17" pos:end="49:26"><expr pos:start="49:17" pos:end="49:26"><literal type="string" pos:start="49:17" pos:end="49:26">"l.j %d\n"</literal></expr></argument>, <argument pos:start="49:29" pos:end="49:31"><expr pos:start="49:29" pos:end="49:31"><name pos:start="49:29" pos:end="49:31">N26</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:34"><expr pos:start="51:9" pos:end="51:33"><call pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:16">gen_jump</name><argument_list pos:start="51:17" pos:end="51:33">(<argument pos:start="51:18" pos:end="51:19"><expr pos:start="51:18" pos:end="51:19"><name pos:start="51:18" pos:end="51:19">dc</name></expr></argument>, <argument pos:start="51:22" pos:end="51:24"><expr pos:start="51:22" pos:end="51:24"><name pos:start="51:22" pos:end="51:24">N26</name></expr></argument>, <argument pos:start="51:27" pos:end="51:27"><expr pos:start="51:27" pos:end="51:27"><literal type="number" pos:start="51:27" pos:end="51:27">0</literal></expr></argument>, <argument pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><name pos:start="51:30" pos:end="51:32">op0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>



    <case pos:start="57:5" pos:end="57:14">case <expr pos:start="57:10" pos:end="57:13"><literal type="number" pos:start="57:10" pos:end="57:13">0x01</literal></expr>:</case>    <comment type="block" pos:start="57:19" pos:end="57:29">/* l.jal */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:35"><expr pos:start="59:9" pos:end="59:34"><call pos:start="59:9" pos:end="59:34"><name pos:start="59:9" pos:end="59:15">LOG_DIS</name><argument_list pos:start="59:16" pos:end="59:34">(<argument pos:start="59:17" pos:end="59:28"><expr pos:start="59:17" pos:end="59:28"><literal type="string" pos:start="59:17" pos:end="59:28">"l.jal %d\n"</literal></expr></argument>, <argument pos:start="59:31" pos:end="59:33"><expr pos:start="59:31" pos:end="59:33"><name pos:start="59:31" pos:end="59:33">N26</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:34"><expr pos:start="61:9" pos:end="61:33"><call pos:start="61:9" pos:end="61:33"><name pos:start="61:9" pos:end="61:16">gen_jump</name><argument_list pos:start="61:17" pos:end="61:33">(<argument pos:start="61:18" pos:end="61:19"><expr pos:start="61:18" pos:end="61:19"><name pos:start="61:18" pos:end="61:19">dc</name></expr></argument>, <argument pos:start="61:22" pos:end="61:24"><expr pos:start="61:22" pos:end="61:24"><name pos:start="61:22" pos:end="61:24">N26</name></expr></argument>, <argument pos:start="61:27" pos:end="61:27"><expr pos:start="61:27" pos:end="61:27"><literal type="number" pos:start="61:27" pos:end="61:27">0</literal></expr></argument>, <argument pos:start="61:30" pos:end="61:32"><expr pos:start="61:30" pos:end="61:32"><name pos:start="61:30" pos:end="61:32">op0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>



    <case pos:start="67:5" pos:end="67:14">case <expr pos:start="67:10" pos:end="67:13"><literal type="number" pos:start="67:10" pos:end="67:13">0x03</literal></expr>:</case>    <comment type="block" pos:start="67:19" pos:end="67:29">/* l.bnf */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:35"><expr pos:start="69:9" pos:end="69:34"><call pos:start="69:9" pos:end="69:34"><name pos:start="69:9" pos:end="69:15">LOG_DIS</name><argument_list pos:start="69:16" pos:end="69:34">(<argument pos:start="69:17" pos:end="69:28"><expr pos:start="69:17" pos:end="69:28"><literal type="string" pos:start="69:17" pos:end="69:28">"l.bnf %d\n"</literal></expr></argument>, <argument pos:start="69:31" pos:end="69:33"><expr pos:start="69:31" pos:end="69:33"><name pos:start="69:31" pos:end="69:33">N26</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:34"><expr pos:start="71:9" pos:end="71:33"><call pos:start="71:9" pos:end="71:33"><name pos:start="71:9" pos:end="71:16">gen_jump</name><argument_list pos:start="71:17" pos:end="71:33">(<argument pos:start="71:18" pos:end="71:19"><expr pos:start="71:18" pos:end="71:19"><name pos:start="71:18" pos:end="71:19">dc</name></expr></argument>, <argument pos:start="71:22" pos:end="71:24"><expr pos:start="71:22" pos:end="71:24"><name pos:start="71:22" pos:end="71:24">N26</name></expr></argument>, <argument pos:start="71:27" pos:end="71:27"><expr pos:start="71:27" pos:end="71:27"><literal type="number" pos:start="71:27" pos:end="71:27">0</literal></expr></argument>, <argument pos:start="71:30" pos:end="71:32"><expr pos:start="71:30" pos:end="71:32"><name pos:start="71:30" pos:end="71:32">op0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>



    <case pos:start="77:5" pos:end="77:14">case <expr pos:start="77:10" pos:end="77:13"><literal type="number" pos:start="77:10" pos:end="77:13">0x04</literal></expr>:</case>    <comment type="block" pos:start="77:19" pos:end="77:28">/* l.bf */</comment>

        <expr_stmt pos:start="79:9" pos:end="79:34"><expr pos:start="79:9" pos:end="79:33"><call pos:start="79:9" pos:end="79:33"><name pos:start="79:9" pos:end="79:15">LOG_DIS</name><argument_list pos:start="79:16" pos:end="79:33">(<argument pos:start="79:17" pos:end="79:27"><expr pos:start="79:17" pos:end="79:27"><literal type="string" pos:start="79:17" pos:end="79:27">"l.bf %d\n"</literal></expr></argument>, <argument pos:start="79:30" pos:end="79:32"><expr pos:start="79:30" pos:end="79:32"><name pos:start="79:30" pos:end="79:32">N26</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:34"><expr pos:start="81:9" pos:end="81:33"><call pos:start="81:9" pos:end="81:33"><name pos:start="81:9" pos:end="81:16">gen_jump</name><argument_list pos:start="81:17" pos:end="81:33">(<argument pos:start="81:18" pos:end="81:19"><expr pos:start="81:18" pos:end="81:19"><name pos:start="81:18" pos:end="81:19">dc</name></expr></argument>, <argument pos:start="81:22" pos:end="81:24"><expr pos:start="81:22" pos:end="81:24"><name pos:start="81:22" pos:end="81:24">N26</name></expr></argument>, <argument pos:start="81:27" pos:end="81:27"><expr pos:start="81:27" pos:end="81:27"><literal type="number" pos:start="81:27" pos:end="81:27">0</literal></expr></argument>, <argument pos:start="81:30" pos:end="81:32"><expr pos:start="81:30" pos:end="81:32"><name pos:start="81:30" pos:end="81:32">op0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>



    <case pos:start="87:5" pos:end="87:14">case <expr pos:start="87:10" pos:end="87:13"><literal type="number" pos:start="87:10" pos:end="87:13">0x05</literal></expr>:</case>

        <switch pos:start="89:9" pos:end="105:9">switch <condition pos:start="89:16" pos:end="89:20">(<expr pos:start="89:17" pos:end="89:19"><name pos:start="89:17" pos:end="89:19">op1</name></expr>)</condition> <block pos:start="89:22" pos:end="105:9">{<block_content pos:start="91:9" pos:end="103:18">

        <case pos:start="91:9" pos:end="91:18">case <expr pos:start="91:14" pos:end="91:17"><literal type="number" pos:start="91:14" pos:end="91:17">0x01</literal></expr>:</case>    <comment type="block" pos:start="91:23" pos:end="91:33">/* l.nop */</comment>

            <expr_stmt pos:start="93:13" pos:end="93:39"><expr pos:start="93:13" pos:end="93:38"><call pos:start="93:13" pos:end="93:38"><name pos:start="93:13" pos:end="93:19">LOG_DIS</name><argument_list pos:start="93:20" pos:end="93:38">(<argument pos:start="93:21" pos:end="93:32"><expr pos:start="93:21" pos:end="93:32"><literal type="string" pos:start="93:21" pos:end="93:32">"l.nop %d\n"</literal></expr></argument>, <argument pos:start="93:35" pos:end="93:37"><expr pos:start="93:35" pos:end="93:37"><name pos:start="93:35" pos:end="93:37">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>



        <default pos:start="99:9" pos:end="99:16">default:</default>

            <expr_stmt pos:start="101:13" pos:end="101:38"><expr pos:start="101:13" pos:end="101:37"><call pos:start="101:13" pos:end="101:37"><name pos:start="101:13" pos:end="101:33">gen_illegal_exception</name><argument_list pos:start="101:34" pos:end="101:37">(<argument pos:start="101:35" pos:end="101:36"><expr pos:start="101:35" pos:end="101:36"><name pos:start="101:35" pos:end="101:36">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="107:9" pos:end="107:14">break;</break>



    <case pos:start="111:5" pos:end="111:14">case <expr pos:start="111:10" pos:end="111:13"><literal type="number" pos:start="111:10" pos:end="111:13">0x11</literal></expr>:</case>    <comment type="block" pos:start="111:19" pos:end="111:28">/* l.jr */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:34"><expr pos:start="113:9" pos:end="113:33"><call pos:start="113:9" pos:end="113:33"><name pos:start="113:9" pos:end="113:15">LOG_DIS</name><argument_list pos:start="113:16" pos:end="113:33">(<argument pos:start="113:17" pos:end="113:28"><expr pos:start="113:17" pos:end="113:28"><literal type="string" pos:start="113:17" pos:end="113:28">"l.jr r%d\n"</literal></expr></argument>, <argument pos:start="113:31" pos:end="113:32"><expr pos:start="113:31" pos:end="113:32"><name pos:start="113:31" pos:end="113:32">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <expr_stmt pos:start="115:10" pos:end="115:34"><expr pos:start="115:10" pos:end="115:33"><call pos:start="115:10" pos:end="115:33"><name pos:start="115:10" pos:end="115:17">gen_jump</name><argument_list pos:start="115:18" pos:end="115:33">(<argument pos:start="115:19" pos:end="115:20"><expr pos:start="115:19" pos:end="115:20"><name pos:start="115:19" pos:end="115:20">dc</name></expr></argument>, <argument pos:start="115:23" pos:end="115:23"><expr pos:start="115:23" pos:end="115:23"><literal type="number" pos:start="115:23" pos:end="115:23">0</literal></expr></argument>, <argument pos:start="115:26" pos:end="115:27"><expr pos:start="115:26" pos:end="115:27"><name pos:start="115:26" pos:end="115:27">rb</name></expr></argument>, <argument pos:start="115:30" pos:end="115:32"><expr pos:start="115:30" pos:end="115:32"><name pos:start="115:30" pos:end="115:32">op0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="117:10" pos:end="117:15">break;</break>



    <case pos:start="121:5" pos:end="121:14">case <expr pos:start="121:10" pos:end="121:13"><literal type="number" pos:start="121:10" pos:end="121:13">0x12</literal></expr>:</case>    <comment type="block" pos:start="121:19" pos:end="121:30">/* l.jalr */</comment>

        <expr_stmt pos:start="123:9" pos:end="123:36"><expr pos:start="123:9" pos:end="123:35"><call pos:start="123:9" pos:end="123:35"><name pos:start="123:9" pos:end="123:15">LOG_DIS</name><argument_list pos:start="123:16" pos:end="123:35">(<argument pos:start="123:17" pos:end="123:30"><expr pos:start="123:17" pos:end="123:30"><literal type="string" pos:start="123:17" pos:end="123:30">"l.jalr r%d\n"</literal></expr></argument>, <argument pos:start="123:33" pos:end="123:34"><expr pos:start="123:33" pos:end="123:34"><name pos:start="123:33" pos:end="123:34">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:33"><expr pos:start="125:9" pos:end="125:32"><call pos:start="125:9" pos:end="125:32"><name pos:start="125:9" pos:end="125:16">gen_jump</name><argument_list pos:start="125:17" pos:end="125:32">(<argument pos:start="125:18" pos:end="125:19"><expr pos:start="125:18" pos:end="125:19"><name pos:start="125:18" pos:end="125:19">dc</name></expr></argument>, <argument pos:start="125:22" pos:end="125:22"><expr pos:start="125:22" pos:end="125:22"><literal type="number" pos:start="125:22" pos:end="125:22">0</literal></expr></argument>, <argument pos:start="125:25" pos:end="125:26"><expr pos:start="125:25" pos:end="125:26"><name pos:start="125:25" pos:end="125:26">rb</name></expr></argument>, <argument pos:start="125:29" pos:end="125:31"><expr pos:start="125:29" pos:end="125:31"><name pos:start="125:29" pos:end="125:31">op0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>



    <case pos:start="131:5" pos:end="131:14">case <expr pos:start="131:10" pos:end="131:13"><literal type="number" pos:start="131:10" pos:end="131:13">0x13</literal></expr>:</case>    <comment type="block" pos:start="131:19" pos:end="131:30">/* l.maci */</comment>

        <expr_stmt pos:start="133:9" pos:end="133:45"><expr pos:start="133:9" pos:end="133:44"><call pos:start="133:9" pos:end="133:44"><name pos:start="133:9" pos:end="133:15">LOG_DIS</name><argument_list pos:start="133:16" pos:end="133:44">(<argument pos:start="133:17" pos:end="133:34"><expr pos:start="133:17" pos:end="133:34"><literal type="string" pos:start="133:17" pos:end="133:34">"l.maci r%d, %d\n"</literal></expr></argument>, <argument pos:start="133:37" pos:end="133:38"><expr pos:start="133:37" pos:end="133:38"><name pos:start="133:37" pos:end="133:38">ra</name></expr></argument>, <argument pos:start="133:41" pos:end="133:43"><expr pos:start="133:41" pos:end="133:43"><name pos:start="133:41" pos:end="133:43">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:31"><expr pos:start="135:9" pos:end="135:30"><name pos:start="135:9" pos:end="135:10">t0</name> <operator pos:start="135:12" pos:end="135:12">=</operator> <call pos:start="135:14" pos:end="135:30"><name pos:start="135:14" pos:end="135:25">tcg_const_tl</name><argument_list pos:start="135:26" pos:end="135:30">(<argument pos:start="135:27" pos:end="135:29"><expr pos:start="135:27" pos:end="135:29"><name pos:start="135:27" pos:end="135:29">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:35"><expr pos:start="137:9" pos:end="137:34"><call pos:start="137:9" pos:end="137:34"><name pos:start="137:9" pos:end="137:15">gen_mac</name><argument_list pos:start="137:16" pos:end="137:34">(<argument pos:start="137:17" pos:end="137:18"><expr pos:start="137:17" pos:end="137:18"><name pos:start="137:17" pos:end="137:18">dc</name></expr></argument>, <argument pos:start="137:21" pos:end="137:29"><expr pos:start="137:21" pos:end="137:29"><name pos:start="137:21" pos:end="137:29"><name pos:start="137:21" pos:end="137:25">cpu_R</name><index pos:start="137:26" pos:end="137:29">[<expr pos:start="137:27" pos:end="137:28"><name pos:start="137:27" pos:end="137:28">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="137:32" pos:end="137:33"><expr pos:start="137:32" pos:end="137:33"><name pos:start="137:32" pos:end="137:33">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:26"><expr pos:start="139:9" pos:end="139:25"><call pos:start="139:9" pos:end="139:25"><name pos:start="139:9" pos:end="139:21">tcg_temp_free</name><argument_list pos:start="139:22" pos:end="139:25">(<argument pos:start="139:23" pos:end="139:24"><expr pos:start="139:23" pos:end="139:24"><name pos:start="139:23" pos:end="139:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="141:9" pos:end="141:14">break;</break>



    <case pos:start="145:5" pos:end="145:14">case <expr pos:start="145:10" pos:end="145:13"><literal type="number" pos:start="145:10" pos:end="145:13">0x09</literal></expr>:</case>    <comment type="block" pos:start="145:19" pos:end="145:29">/* l.rfe */</comment>

        <expr_stmt pos:start="147:9" pos:end="147:27"><expr pos:start="147:9" pos:end="147:26"><call pos:start="147:9" pos:end="147:26"><name pos:start="147:9" pos:end="147:15">LOG_DIS</name><argument_list pos:start="147:16" pos:end="147:26">(<argument pos:start="147:17" pos:end="147:25"><expr pos:start="147:17" pos:end="147:25"><literal type="string" pos:start="147:17" pos:end="147:25">"l.rfe\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="149:9" pos:end="171:9">{<block_content pos:start="153:13" pos:end="170:0">

<cpp:if pos:start="151:1" pos:end="151:29">#<cpp:directive pos:start="151:2" pos:end="151:3">if</cpp:directive> <expr pos:start="151:5" pos:end="151:29"><call pos:start="151:5" pos:end="151:29"><name pos:start="151:5" pos:end="151:11">defined</name><argument_list pos:start="151:12" pos:end="151:29">(<argument pos:start="151:13" pos:end="151:28"><expr pos:start="151:13" pos:end="151:28"><name pos:start="151:13" pos:end="151:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <return pos:start="153:13" pos:end="156:0">return;</return>

<cpp:else pos:start="155:1" pos:end="155:5">#<cpp:directive pos:start="155:2" pos:end="155:5">else</cpp:directive></cpp:else>

            <if_stmt pos:start="157:13" pos:end="163:13"><if pos:start="157:13" pos:end="163:13">if <condition pos:start="157:16" pos:end="157:44">(<expr pos:start="157:17" pos:end="157:43"><name pos:start="157:17" pos:end="157:27"><name pos:start="157:17" pos:end="157:18">dc</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:27">mem_idx</name></name> <operator pos:start="157:29" pos:end="157:30">==</operator> <name pos:start="157:32" pos:end="157:43">MMU_USER_IDX</name></expr>)</condition> <block pos:start="157:46" pos:end="163:13">{<block_content pos:start="159:17" pos:end="161:23">

                <expr_stmt pos:start="159:17" pos:end="159:42"><expr pos:start="159:17" pos:end="159:41"><call pos:start="159:17" pos:end="159:41"><name pos:start="159:17" pos:end="159:37">gen_illegal_exception</name><argument_list pos:start="159:38" pos:end="159:41">(<argument pos:start="159:39" pos:end="159:40"><expr pos:start="159:39" pos:end="159:40"><name pos:start="159:39" pos:end="159:40">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="161:17" pos:end="161:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:36"><expr pos:start="165:13" pos:end="165:35"><call pos:start="165:13" pos:end="165:35"><name pos:start="165:13" pos:end="165:26">gen_helper_rfe</name><argument_list pos:start="165:27" pos:end="165:35">(<argument pos:start="165:28" pos:end="165:34"><expr pos:start="165:28" pos:end="165:34"><name pos:start="165:28" pos:end="165:34">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="170:0"><expr pos:start="167:13" pos:end="167:37"><name pos:start="167:13" pos:end="167:22"><name pos:start="167:13" pos:end="167:14">dc</name><operator pos:start="167:15" pos:end="167:16">-&gt;</operator><name pos:start="167:17" pos:end="167:22">is_jmp</name></name> <operator pos:start="167:24" pos:end="167:24">=</operator> <name pos:start="167:26" pos:end="167:37">DISAS_UPDATE</name></expr>;</expr_stmt>

<cpp:endif pos:start="169:1" pos:end="169:6">#<cpp:directive pos:start="169:2" pos:end="169:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block>

        <break pos:start="173:9" pos:end="173:14">break;</break>



    <case pos:start="177:5" pos:end="177:14">case <expr pos:start="177:10" pos:end="177:13"><literal type="number" pos:start="177:10" pos:end="177:13">0x1b</literal></expr>:</case> <comment type="block" pos:start="177:16" pos:end="177:26">/* l.lwa */</comment>

        <expr_stmt pos:start="179:9" pos:end="179:53"><expr pos:start="179:9" pos:end="179:52"><call pos:start="179:9" pos:end="179:52"><name pos:start="179:9" pos:end="179:15">LOG_DIS</name><argument_list pos:start="179:16" pos:end="179:52">(<argument pos:start="179:17" pos:end="179:38"><expr pos:start="179:17" pos:end="179:38"><literal type="string" pos:start="179:17" pos:end="179:38">"l.lwa r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="179:41" pos:end="179:42"><expr pos:start="179:41" pos:end="179:42"><name pos:start="179:41" pos:end="179:42">rd</name></expr></argument>, <argument pos:start="179:45" pos:end="179:46"><expr pos:start="179:45" pos:end="179:46"><name pos:start="179:45" pos:end="179:46">ra</name></expr></argument>, <argument pos:start="179:49" pos:end="179:51"><expr pos:start="179:49" pos:end="179:51"><name pos:start="179:49" pos:end="179:51">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:47"><expr pos:start="181:9" pos:end="181:46"><call pos:start="181:9" pos:end="181:46"><name pos:start="181:9" pos:end="181:15">gen_lwa</name><argument_list pos:start="181:16" pos:end="181:46">(<argument pos:start="181:17" pos:end="181:18"><expr pos:start="181:17" pos:end="181:18"><name pos:start="181:17" pos:end="181:18">dc</name></expr></argument>, <argument pos:start="181:21" pos:end="181:29"><expr pos:start="181:21" pos:end="181:29"><name pos:start="181:21" pos:end="181:29"><name pos:start="181:21" pos:end="181:25">cpu_R</name><index pos:start="181:26" pos:end="181:29">[<expr pos:start="181:27" pos:end="181:28"><name pos:start="181:27" pos:end="181:28">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="181:32" pos:end="181:40"><expr pos:start="181:32" pos:end="181:40"><name pos:start="181:32" pos:end="181:40"><name pos:start="181:32" pos:end="181:36">cpu_R</name><index pos:start="181:37" pos:end="181:40">[<expr pos:start="181:38" pos:end="181:39"><name pos:start="181:38" pos:end="181:39">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="181:43" pos:end="181:45"><expr pos:start="181:43" pos:end="181:45"><name pos:start="181:43" pos:end="181:45">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="183:9" pos:end="183:14">break;</break>



    <case pos:start="187:5" pos:end="187:14">case <expr pos:start="187:10" pos:end="187:13"><literal type="number" pos:start="187:10" pos:end="187:13">0x1c</literal></expr>:</case>    <comment type="block" pos:start="187:19" pos:end="187:31">/* l.cust1 */</comment>

        <expr_stmt pos:start="189:9" pos:end="189:29"><expr pos:start="189:9" pos:end="189:28"><call pos:start="189:9" pos:end="189:28"><name pos:start="189:9" pos:end="189:15">LOG_DIS</name><argument_list pos:start="189:16" pos:end="189:28">(<argument pos:start="189:17" pos:end="189:27"><expr pos:start="189:17" pos:end="189:27"><literal type="string" pos:start="189:17" pos:end="189:27">"l.cust1\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="191:9" pos:end="191:14">break;</break>



    <case pos:start="195:5" pos:end="195:14">case <expr pos:start="195:10" pos:end="195:13"><literal type="number" pos:start="195:10" pos:end="195:13">0x1d</literal></expr>:</case>    <comment type="block" pos:start="195:19" pos:end="195:31">/* l.cust2 */</comment>

        <expr_stmt pos:start="197:9" pos:end="197:29"><expr pos:start="197:9" pos:end="197:28"><call pos:start="197:9" pos:end="197:28"><name pos:start="197:9" pos:end="197:15">LOG_DIS</name><argument_list pos:start="197:16" pos:end="197:28">(<argument pos:start="197:17" pos:end="197:27"><expr pos:start="197:17" pos:end="197:27"><literal type="string" pos:start="197:17" pos:end="197:27">"l.cust2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="199:9" pos:end="199:14">break;</break>



    <case pos:start="203:5" pos:end="203:14">case <expr pos:start="203:10" pos:end="203:13"><literal type="number" pos:start="203:10" pos:end="203:13">0x1e</literal></expr>:</case>    <comment type="block" pos:start="203:19" pos:end="203:31">/* l.cust3 */</comment>

        <expr_stmt pos:start="205:9" pos:end="205:29"><expr pos:start="205:9" pos:end="205:28"><call pos:start="205:9" pos:end="205:28"><name pos:start="205:9" pos:end="205:15">LOG_DIS</name><argument_list pos:start="205:16" pos:end="205:28">(<argument pos:start="205:17" pos:end="205:27"><expr pos:start="205:17" pos:end="205:27"><literal type="string" pos:start="205:17" pos:end="205:27">"l.cust3\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="207:9" pos:end="207:14">break;</break>



    <case pos:start="211:5" pos:end="211:14">case <expr pos:start="211:10" pos:end="211:13"><literal type="number" pos:start="211:10" pos:end="211:13">0x1f</literal></expr>:</case>    <comment type="block" pos:start="211:19" pos:end="211:31">/* l.cust4 */</comment>

        <expr_stmt pos:start="213:9" pos:end="213:29"><expr pos:start="213:9" pos:end="213:28"><call pos:start="213:9" pos:end="213:28"><name pos:start="213:9" pos:end="213:15">LOG_DIS</name><argument_list pos:start="213:16" pos:end="213:28">(<argument pos:start="213:17" pos:end="213:27"><expr pos:start="213:17" pos:end="213:27"><literal type="string" pos:start="213:17" pos:end="213:27">"l.cust4\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>



    <case pos:start="219:5" pos:end="219:14">case <expr pos:start="219:10" pos:end="219:13"><literal type="number" pos:start="219:10" pos:end="219:13">0x3c</literal></expr>:</case>    <comment type="block" pos:start="219:19" pos:end="219:31">/* l.cust5 */</comment>

        <expr_stmt pos:start="221:9" pos:end="221:71"><expr pos:start="221:9" pos:end="221:70"><call pos:start="221:9" pos:end="221:70"><name pos:start="221:9" pos:end="221:15">LOG_DIS</name><argument_list pos:start="221:16" pos:end="221:70">(<argument pos:start="221:17" pos:end="221:49"><expr pos:start="221:17" pos:end="221:49"><literal type="string" pos:start="221:17" pos:end="221:49">"l.cust5 r%d, r%d, r%d, %d, %d\n"</literal></expr></argument>, <argument pos:start="221:52" pos:end="221:53"><expr pos:start="221:52" pos:end="221:53"><name pos:start="221:52" pos:end="221:53">rd</name></expr></argument>, <argument pos:start="221:56" pos:end="221:57"><expr pos:start="221:56" pos:end="221:57"><name pos:start="221:56" pos:end="221:57">ra</name></expr></argument>, <argument pos:start="221:60" pos:end="221:61"><expr pos:start="221:60" pos:end="221:61"><name pos:start="221:60" pos:end="221:61">rb</name></expr></argument>, <argument pos:start="221:64" pos:end="221:65"><expr pos:start="221:64" pos:end="221:65"><name pos:start="221:64" pos:end="221:65">L6</name></expr></argument>, <argument pos:start="221:68" pos:end="221:69"><expr pos:start="221:68" pos:end="221:69"><name pos:start="221:68" pos:end="221:69">K5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="223:9" pos:end="223:14">break;</break>



    <case pos:start="227:5" pos:end="227:14">case <expr pos:start="227:10" pos:end="227:13"><literal type="number" pos:start="227:10" pos:end="227:13">0x3d</literal></expr>:</case>    <comment type="block" pos:start="227:19" pos:end="227:31">/* l.cust6 */</comment>

        <expr_stmt pos:start="229:9" pos:end="229:29"><expr pos:start="229:9" pos:end="229:28"><call pos:start="229:9" pos:end="229:28"><name pos:start="229:9" pos:end="229:15">LOG_DIS</name><argument_list pos:start="229:16" pos:end="229:28">(<argument pos:start="229:17" pos:end="229:27"><expr pos:start="229:17" pos:end="229:27"><literal type="string" pos:start="229:17" pos:end="229:27">"l.cust6\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>



    <case pos:start="235:5" pos:end="235:14">case <expr pos:start="235:10" pos:end="235:13"><literal type="number" pos:start="235:10" pos:end="235:13">0x3e</literal></expr>:</case>    <comment type="block" pos:start="235:19" pos:end="235:31">/* l.cust7 */</comment>

        <expr_stmt pos:start="237:9" pos:end="237:29"><expr pos:start="237:9" pos:end="237:28"><call pos:start="237:9" pos:end="237:28"><name pos:start="237:9" pos:end="237:15">LOG_DIS</name><argument_list pos:start="237:16" pos:end="237:28">(<argument pos:start="237:17" pos:end="237:27"><expr pos:start="237:17" pos:end="237:27"><literal type="string" pos:start="237:17" pos:end="237:27">"l.cust7\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="239:9" pos:end="239:14">break;</break>



    <case pos:start="243:5" pos:end="243:14">case <expr pos:start="243:10" pos:end="243:13"><literal type="number" pos:start="243:10" pos:end="243:13">0x3f</literal></expr>:</case>    <comment type="block" pos:start="243:19" pos:end="243:31">/* l.cust8 */</comment>

        <expr_stmt pos:start="245:9" pos:end="245:29"><expr pos:start="245:9" pos:end="245:28"><call pos:start="245:9" pos:end="245:28"><name pos:start="245:9" pos:end="245:15">LOG_DIS</name><argument_list pos:start="245:16" pos:end="245:28">(<argument pos:start="245:17" pos:end="245:27"><expr pos:start="245:17" pos:end="245:27"><literal type="string" pos:start="245:17" pos:end="245:27">"l.cust8\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="247:9" pos:end="247:14">break;</break>



<comment type="block" pos:start="251:1" pos:end="251:47">/* not used yet, open it when we need or64.  */</comment>

<comment type="block" pos:start="253:1" pos:end="265:8">/*#ifdef TARGET_OPENRISC64

    case 0x20:     l.ld

        LOG_DIS("l.ld r%d, r%d, %d\n", rd, ra, I16);

        check_ob64s(dc);

        mop = MO_TEQ;

        goto do_load;

#endif*/</comment>



    <case pos:start="269:5" pos:end="269:14">case <expr pos:start="269:10" pos:end="269:13"><literal type="number" pos:start="269:10" pos:end="269:13">0x21</literal></expr>:</case>    <comment type="block" pos:start="269:19" pos:end="269:29">/* l.lwz */</comment>

        <expr_stmt pos:start="271:9" pos:end="271:53"><expr pos:start="271:9" pos:end="271:52"><call pos:start="271:9" pos:end="271:52"><name pos:start="271:9" pos:end="271:15">LOG_DIS</name><argument_list pos:start="271:16" pos:end="271:52">(<argument pos:start="271:17" pos:end="271:38"><expr pos:start="271:17" pos:end="271:38"><literal type="string" pos:start="271:17" pos:end="271:38">"l.lwz r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="271:41" pos:end="271:42"><expr pos:start="271:41" pos:end="271:42"><name pos:start="271:41" pos:end="271:42">rd</name></expr></argument>, <argument pos:start="271:45" pos:end="271:46"><expr pos:start="271:45" pos:end="271:46"><name pos:start="271:45" pos:end="271:46">ra</name></expr></argument>, <argument pos:start="271:49" pos:end="271:51"><expr pos:start="271:49" pos:end="271:51"><name pos:start="271:49" pos:end="271:51">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:22"><expr pos:start="273:9" pos:end="273:21"><name pos:start="273:9" pos:end="273:11">mop</name> <operator pos:start="273:13" pos:end="273:13">=</operator> <name pos:start="273:15" pos:end="273:21">MO_TEUL</name></expr>;</expr_stmt>

        <goto pos:start="275:9" pos:end="275:21">goto <name pos:start="275:14" pos:end="275:20">do_load</name>;</goto>



    <case pos:start="279:5" pos:end="279:14">case <expr pos:start="279:10" pos:end="279:13"><literal type="number" pos:start="279:10" pos:end="279:13">0x22</literal></expr>:</case>    <comment type="block" pos:start="279:19" pos:end="279:29">/* l.lws */</comment>

        <expr_stmt pos:start="281:9" pos:end="281:53"><expr pos:start="281:9" pos:end="281:52"><call pos:start="281:9" pos:end="281:52"><name pos:start="281:9" pos:end="281:15">LOG_DIS</name><argument_list pos:start="281:16" pos:end="281:52">(<argument pos:start="281:17" pos:end="281:38"><expr pos:start="281:17" pos:end="281:38"><literal type="string" pos:start="281:17" pos:end="281:38">"l.lws r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="281:41" pos:end="281:42"><expr pos:start="281:41" pos:end="281:42"><name pos:start="281:41" pos:end="281:42">rd</name></expr></argument>, <argument pos:start="281:45" pos:end="281:46"><expr pos:start="281:45" pos:end="281:46"><name pos:start="281:45" pos:end="281:46">ra</name></expr></argument>, <argument pos:start="281:49" pos:end="281:51"><expr pos:start="281:49" pos:end="281:51"><name pos:start="281:49" pos:end="281:51">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:22"><expr pos:start="283:9" pos:end="283:21"><name pos:start="283:9" pos:end="283:11">mop</name> <operator pos:start="283:13" pos:end="283:13">=</operator> <name pos:start="283:15" pos:end="283:21">MO_TESL</name></expr>;</expr_stmt>

        <goto pos:start="285:9" pos:end="285:21">goto <name pos:start="285:14" pos:end="285:20">do_load</name>;</goto>



    <case pos:start="289:5" pos:end="289:14">case <expr pos:start="289:10" pos:end="289:13"><literal type="number" pos:start="289:10" pos:end="289:13">0x23</literal></expr>:</case>    <comment type="block" pos:start="289:19" pos:end="289:29">/* l.lbz */</comment>

        <expr_stmt pos:start="291:9" pos:end="291:53"><expr pos:start="291:9" pos:end="291:52"><call pos:start="291:9" pos:end="291:52"><name pos:start="291:9" pos:end="291:15">LOG_DIS</name><argument_list pos:start="291:16" pos:end="291:52">(<argument pos:start="291:17" pos:end="291:38"><expr pos:start="291:17" pos:end="291:38"><literal type="string" pos:start="291:17" pos:end="291:38">"l.lbz r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="291:41" pos:end="291:42"><expr pos:start="291:41" pos:end="291:42"><name pos:start="291:41" pos:end="291:42">rd</name></expr></argument>, <argument pos:start="291:45" pos:end="291:46"><expr pos:start="291:45" pos:end="291:46"><name pos:start="291:45" pos:end="291:46">ra</name></expr></argument>, <argument pos:start="291:49" pos:end="291:51"><expr pos:start="291:49" pos:end="291:51"><name pos:start="291:49" pos:end="291:51">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:20"><expr pos:start="293:9" pos:end="293:19"><name pos:start="293:9" pos:end="293:11">mop</name> <operator pos:start="293:13" pos:end="293:13">=</operator> <name pos:start="293:15" pos:end="293:19">MO_UB</name></expr>;</expr_stmt>

        <goto pos:start="295:9" pos:end="295:21">goto <name pos:start="295:14" pos:end="295:20">do_load</name>;</goto>



    <case pos:start="299:5" pos:end="299:14">case <expr pos:start="299:10" pos:end="299:13"><literal type="number" pos:start="299:10" pos:end="299:13">0x24</literal></expr>:</case>    <comment type="block" pos:start="299:19" pos:end="299:29">/* l.lbs */</comment>

        <expr_stmt pos:start="301:9" pos:end="301:53"><expr pos:start="301:9" pos:end="301:52"><call pos:start="301:9" pos:end="301:52"><name pos:start="301:9" pos:end="301:15">LOG_DIS</name><argument_list pos:start="301:16" pos:end="301:52">(<argument pos:start="301:17" pos:end="301:38"><expr pos:start="301:17" pos:end="301:38"><literal type="string" pos:start="301:17" pos:end="301:38">"l.lbs r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="301:41" pos:end="301:42"><expr pos:start="301:41" pos:end="301:42"><name pos:start="301:41" pos:end="301:42">rd</name></expr></argument>, <argument pos:start="301:45" pos:end="301:46"><expr pos:start="301:45" pos:end="301:46"><name pos:start="301:45" pos:end="301:46">ra</name></expr></argument>, <argument pos:start="301:49" pos:end="301:51"><expr pos:start="301:49" pos:end="301:51"><name pos:start="301:49" pos:end="301:51">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:20"><expr pos:start="303:9" pos:end="303:19"><name pos:start="303:9" pos:end="303:11">mop</name> <operator pos:start="303:13" pos:end="303:13">=</operator> <name pos:start="303:15" pos:end="303:19">MO_SB</name></expr>;</expr_stmt>

        <goto pos:start="305:9" pos:end="305:21">goto <name pos:start="305:14" pos:end="305:20">do_load</name>;</goto>



    <case pos:start="309:5" pos:end="309:14">case <expr pos:start="309:10" pos:end="309:13"><literal type="number" pos:start="309:10" pos:end="309:13">0x25</literal></expr>:</case>    <comment type="block" pos:start="309:19" pos:end="309:29">/* l.lhz */</comment>

        <expr_stmt pos:start="311:9" pos:end="311:53"><expr pos:start="311:9" pos:end="311:52"><call pos:start="311:9" pos:end="311:52"><name pos:start="311:9" pos:end="311:15">LOG_DIS</name><argument_list pos:start="311:16" pos:end="311:52">(<argument pos:start="311:17" pos:end="311:38"><expr pos:start="311:17" pos:end="311:38"><literal type="string" pos:start="311:17" pos:end="311:38">"l.lhz r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="311:41" pos:end="311:42"><expr pos:start="311:41" pos:end="311:42"><name pos:start="311:41" pos:end="311:42">rd</name></expr></argument>, <argument pos:start="311:45" pos:end="311:46"><expr pos:start="311:45" pos:end="311:46"><name pos:start="311:45" pos:end="311:46">ra</name></expr></argument>, <argument pos:start="311:49" pos:end="311:51"><expr pos:start="311:49" pos:end="311:51"><name pos:start="311:49" pos:end="311:51">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:22"><expr pos:start="313:9" pos:end="313:21"><name pos:start="313:9" pos:end="313:11">mop</name> <operator pos:start="313:13" pos:end="313:13">=</operator> <name pos:start="313:15" pos:end="313:21">MO_TEUW</name></expr>;</expr_stmt>

        <goto pos:start="315:9" pos:end="315:21">goto <name pos:start="315:14" pos:end="315:20">do_load</name>;</goto>



    <case pos:start="319:5" pos:end="319:14">case <expr pos:start="319:10" pos:end="319:13"><literal type="number" pos:start="319:10" pos:end="319:13">0x26</literal></expr>:</case>    <comment type="block" pos:start="319:19" pos:end="319:29">/* l.lhs */</comment>

        <expr_stmt pos:start="321:9" pos:end="321:53"><expr pos:start="321:9" pos:end="321:52"><call pos:start="321:9" pos:end="321:52"><name pos:start="321:9" pos:end="321:15">LOG_DIS</name><argument_list pos:start="321:16" pos:end="321:52">(<argument pos:start="321:17" pos:end="321:38"><expr pos:start="321:17" pos:end="321:38"><literal type="string" pos:start="321:17" pos:end="321:38">"l.lhs r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="321:41" pos:end="321:42"><expr pos:start="321:41" pos:end="321:42"><name pos:start="321:41" pos:end="321:42">rd</name></expr></argument>, <argument pos:start="321:45" pos:end="321:46"><expr pos:start="321:45" pos:end="321:46"><name pos:start="321:45" pos:end="321:46">ra</name></expr></argument>, <argument pos:start="321:49" pos:end="321:51"><expr pos:start="321:49" pos:end="321:51"><name pos:start="321:49" pos:end="321:51">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:22"><expr pos:start="323:9" pos:end="323:21"><name pos:start="323:9" pos:end="323:11">mop</name> <operator pos:start="323:13" pos:end="323:13">=</operator> <name pos:start="323:15" pos:end="323:21">MO_TESW</name></expr>;</expr_stmt>

        <goto pos:start="325:9" pos:end="325:21">goto <name pos:start="325:14" pos:end="325:20">do_load</name>;</goto>



    <label pos:start="329:5" pos:end="329:12"><name pos:start="329:5" pos:end="329:11">do_load</name>:</label>

        <block pos:start="331:9" pos:end="341:9">{<block_content pos:start="333:13" pos:end="339:30">

            <decl_stmt pos:start="333:13" pos:end="333:37"><decl pos:start="333:13" pos:end="333:36"><type pos:start="333:13" pos:end="333:16"><name pos:start="333:13" pos:end="333:16">TCGv</name></type> <name pos:start="333:18" pos:end="333:19">t0</name> <init pos:start="333:21" pos:end="333:36">= <expr pos:start="333:23" pos:end="333:36"><call pos:start="333:23" pos:end="333:36"><name pos:start="333:23" pos:end="333:34">tcg_temp_new</name><argument_list pos:start="333:35" pos:end="333:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="335:13" pos:end="335:48"><expr pos:start="335:13" pos:end="335:47"><call pos:start="335:13" pos:end="335:47"><name pos:start="335:13" pos:end="335:27">tcg_gen_addi_tl</name><argument_list pos:start="335:28" pos:end="335:47">(<argument pos:start="335:29" pos:end="335:30"><expr pos:start="335:29" pos:end="335:30"><name pos:start="335:29" pos:end="335:30">t0</name></expr></argument>, <argument pos:start="335:33" pos:end="335:41"><expr pos:start="335:33" pos:end="335:41"><name pos:start="335:33" pos:end="335:41"><name pos:start="335:33" pos:end="335:37">cpu_R</name><index pos:start="335:38" pos:end="335:41">[<expr pos:start="335:39" pos:end="335:40"><name pos:start="335:39" pos:end="335:40">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="335:44" pos:end="335:46"><expr pos:start="335:44" pos:end="335:46"><name pos:start="335:44" pos:end="335:46">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:64"><expr pos:start="337:13" pos:end="337:63"><call pos:start="337:13" pos:end="337:63"><name pos:start="337:13" pos:end="337:30">tcg_gen_qemu_ld_tl</name><argument_list pos:start="337:31" pos:end="337:63">(<argument pos:start="337:32" pos:end="337:40"><expr pos:start="337:32" pos:end="337:40"><name pos:start="337:32" pos:end="337:40"><name pos:start="337:32" pos:end="337:36">cpu_R</name><index pos:start="337:37" pos:end="337:40">[<expr pos:start="337:38" pos:end="337:39"><name pos:start="337:38" pos:end="337:39">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="337:43" pos:end="337:44"><expr pos:start="337:43" pos:end="337:44"><name pos:start="337:43" pos:end="337:44">t0</name></expr></argument>, <argument pos:start="337:47" pos:end="337:57"><expr pos:start="337:47" pos:end="337:57"><name pos:start="337:47" pos:end="337:57"><name pos:start="337:47" pos:end="337:48">dc</name><operator pos:start="337:49" pos:end="337:50">-&gt;</operator><name pos:start="337:51" pos:end="337:57">mem_idx</name></name></expr></argument>, <argument pos:start="337:60" pos:end="337:62"><expr pos:start="337:60" pos:end="337:62"><name pos:start="337:60" pos:end="337:62">mop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:30"><expr pos:start="339:13" pos:end="339:29"><call pos:start="339:13" pos:end="339:29"><name pos:start="339:13" pos:end="339:25">tcg_temp_free</name><argument_list pos:start="339:26" pos:end="339:29">(<argument pos:start="339:27" pos:end="339:28"><expr pos:start="339:27" pos:end="339:28"><name pos:start="339:27" pos:end="339:28">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="343:9" pos:end="343:14">break;</break>



    <case pos:start="347:5" pos:end="347:14">case <expr pos:start="347:10" pos:end="347:13"><literal type="number" pos:start="347:10" pos:end="347:13">0x27</literal></expr>:</case>    <comment type="block" pos:start="347:19" pos:end="347:30">/* l.addi */</comment>

        <expr_stmt pos:start="349:9" pos:end="349:54"><expr pos:start="349:9" pos:end="349:53"><call pos:start="349:9" pos:end="349:53"><name pos:start="349:9" pos:end="349:15">LOG_DIS</name><argument_list pos:start="349:16" pos:end="349:53">(<argument pos:start="349:17" pos:end="349:39"><expr pos:start="349:17" pos:end="349:39"><literal type="string" pos:start="349:17" pos:end="349:39">"l.addi r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="349:42" pos:end="349:43"><expr pos:start="349:42" pos:end="349:43"><name pos:start="349:42" pos:end="349:43">rd</name></expr></argument>, <argument pos:start="349:46" pos:end="349:47"><expr pos:start="349:46" pos:end="349:47"><name pos:start="349:46" pos:end="349:47">ra</name></expr></argument>, <argument pos:start="349:50" pos:end="349:52"><expr pos:start="349:50" pos:end="349:52"><name pos:start="349:50" pos:end="349:52">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:31"><expr pos:start="351:9" pos:end="351:30"><name pos:start="351:9" pos:end="351:10">t0</name> <operator pos:start="351:12" pos:end="351:12">=</operator> <call pos:start="351:14" pos:end="351:30"><name pos:start="351:14" pos:end="351:25">tcg_const_tl</name><argument_list pos:start="351:26" pos:end="351:30">(<argument pos:start="351:27" pos:end="351:29"><expr pos:start="351:27" pos:end="351:29"><name pos:start="351:27" pos:end="351:29">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="353:9" pos:end="353:46"><expr pos:start="353:9" pos:end="353:45"><call pos:start="353:9" pos:end="353:45"><name pos:start="353:9" pos:end="353:15">gen_add</name><argument_list pos:start="353:16" pos:end="353:45">(<argument pos:start="353:17" pos:end="353:18"><expr pos:start="353:17" pos:end="353:18"><name pos:start="353:17" pos:end="353:18">dc</name></expr></argument>, <argument pos:start="353:21" pos:end="353:29"><expr pos:start="353:21" pos:end="353:29"><name pos:start="353:21" pos:end="353:29"><name pos:start="353:21" pos:end="353:25">cpu_R</name><index pos:start="353:26" pos:end="353:29">[<expr pos:start="353:27" pos:end="353:28"><name pos:start="353:27" pos:end="353:28">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="353:32" pos:end="353:40"><expr pos:start="353:32" pos:end="353:40"><name pos:start="353:32" pos:end="353:40"><name pos:start="353:32" pos:end="353:36">cpu_R</name><index pos:start="353:37" pos:end="353:40">[<expr pos:start="353:38" pos:end="353:39"><name pos:start="353:38" pos:end="353:39">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="353:43" pos:end="353:44"><expr pos:start="353:43" pos:end="353:44"><name pos:start="353:43" pos:end="353:44">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:26"><expr pos:start="355:9" pos:end="355:25"><call pos:start="355:9" pos:end="355:25"><name pos:start="355:9" pos:end="355:21">tcg_temp_free</name><argument_list pos:start="355:22" pos:end="355:25">(<argument pos:start="355:23" pos:end="355:24"><expr pos:start="355:23" pos:end="355:24"><name pos:start="355:23" pos:end="355:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="357:9" pos:end="357:14">break;</break>



    <case pos:start="361:5" pos:end="361:14">case <expr pos:start="361:10" pos:end="361:13"><literal type="number" pos:start="361:10" pos:end="361:13">0x28</literal></expr>:</case>    <comment type="block" pos:start="361:19" pos:end="361:31">/* l.addic */</comment>

        <expr_stmt pos:start="363:9" pos:end="363:55"><expr pos:start="363:9" pos:end="363:54"><call pos:start="363:9" pos:end="363:54"><name pos:start="363:9" pos:end="363:15">LOG_DIS</name><argument_list pos:start="363:16" pos:end="363:54">(<argument pos:start="363:17" pos:end="363:40"><expr pos:start="363:17" pos:end="363:40"><literal type="string" pos:start="363:17" pos:end="363:40">"l.addic r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="363:43" pos:end="363:44"><expr pos:start="363:43" pos:end="363:44"><name pos:start="363:43" pos:end="363:44">rd</name></expr></argument>, <argument pos:start="363:47" pos:end="363:48"><expr pos:start="363:47" pos:end="363:48"><name pos:start="363:47" pos:end="363:48">ra</name></expr></argument>, <argument pos:start="363:51" pos:end="363:53"><expr pos:start="363:51" pos:end="363:53"><name pos:start="363:51" pos:end="363:53">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="365:9" pos:end="365:31"><expr pos:start="365:9" pos:end="365:30"><name pos:start="365:9" pos:end="365:10">t0</name> <operator pos:start="365:12" pos:end="365:12">=</operator> <call pos:start="365:14" pos:end="365:30"><name pos:start="365:14" pos:end="365:25">tcg_const_tl</name><argument_list pos:start="365:26" pos:end="365:30">(<argument pos:start="365:27" pos:end="365:29"><expr pos:start="365:27" pos:end="365:29"><name pos:start="365:27" pos:end="365:29">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:47"><expr pos:start="367:9" pos:end="367:46"><call pos:start="367:9" pos:end="367:46"><name pos:start="367:9" pos:end="367:16">gen_addc</name><argument_list pos:start="367:17" pos:end="367:46">(<argument pos:start="367:18" pos:end="367:19"><expr pos:start="367:18" pos:end="367:19"><name pos:start="367:18" pos:end="367:19">dc</name></expr></argument>, <argument pos:start="367:22" pos:end="367:30"><expr pos:start="367:22" pos:end="367:30"><name pos:start="367:22" pos:end="367:30"><name pos:start="367:22" pos:end="367:26">cpu_R</name><index pos:start="367:27" pos:end="367:30">[<expr pos:start="367:28" pos:end="367:29"><name pos:start="367:28" pos:end="367:29">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="367:33" pos:end="367:41"><expr pos:start="367:33" pos:end="367:41"><name pos:start="367:33" pos:end="367:41"><name pos:start="367:33" pos:end="367:37">cpu_R</name><index pos:start="367:38" pos:end="367:41">[<expr pos:start="367:39" pos:end="367:40"><name pos:start="367:39" pos:end="367:40">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="367:44" pos:end="367:45"><expr pos:start="367:44" pos:end="367:45"><name pos:start="367:44" pos:end="367:45">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="369:9" pos:end="369:26"><expr pos:start="369:9" pos:end="369:25"><call pos:start="369:9" pos:end="369:25"><name pos:start="369:9" pos:end="369:21">tcg_temp_free</name><argument_list pos:start="369:22" pos:end="369:25">(<argument pos:start="369:23" pos:end="369:24"><expr pos:start="369:23" pos:end="369:24"><name pos:start="369:23" pos:end="369:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="371:9" pos:end="371:14">break;</break>



    <case pos:start="375:5" pos:end="375:14">case <expr pos:start="375:10" pos:end="375:13"><literal type="number" pos:start="375:10" pos:end="375:13">0x29</literal></expr>:</case>    <comment type="block" pos:start="375:19" pos:end="375:30">/* l.andi */</comment>

        <expr_stmt pos:start="377:9" pos:end="377:54"><expr pos:start="377:9" pos:end="377:53"><call pos:start="377:9" pos:end="377:53"><name pos:start="377:9" pos:end="377:15">LOG_DIS</name><argument_list pos:start="377:16" pos:end="377:53">(<argument pos:start="377:17" pos:end="377:39"><expr pos:start="377:17" pos:end="377:39"><literal type="string" pos:start="377:17" pos:end="377:39">"l.andi r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="377:42" pos:end="377:43"><expr pos:start="377:42" pos:end="377:43"><name pos:start="377:42" pos:end="377:43">rd</name></expr></argument>, <argument pos:start="377:46" pos:end="377:47"><expr pos:start="377:46" pos:end="377:47"><name pos:start="377:46" pos:end="377:47">ra</name></expr></argument>, <argument pos:start="377:50" pos:end="377:52"><expr pos:start="377:50" pos:end="377:52"><name pos:start="377:50" pos:end="377:52">K16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="379:9" pos:end="379:51"><expr pos:start="379:9" pos:end="379:50"><call pos:start="379:9" pos:end="379:50"><name pos:start="379:9" pos:end="379:23">tcg_gen_andi_tl</name><argument_list pos:start="379:24" pos:end="379:50">(<argument pos:start="379:25" pos:end="379:33"><expr pos:start="379:25" pos:end="379:33"><name pos:start="379:25" pos:end="379:33"><name pos:start="379:25" pos:end="379:29">cpu_R</name><index pos:start="379:30" pos:end="379:33">[<expr pos:start="379:31" pos:end="379:32"><name pos:start="379:31" pos:end="379:32">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="379:36" pos:end="379:44"><expr pos:start="379:36" pos:end="379:44"><name pos:start="379:36" pos:end="379:44"><name pos:start="379:36" pos:end="379:40">cpu_R</name><index pos:start="379:41" pos:end="379:44">[<expr pos:start="379:42" pos:end="379:43"><name pos:start="379:42" pos:end="379:43">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="379:47" pos:end="379:49"><expr pos:start="379:47" pos:end="379:49"><name pos:start="379:47" pos:end="379:49">K16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="381:9" pos:end="381:14">break;</break>



    <case pos:start="385:5" pos:end="385:14">case <expr pos:start="385:10" pos:end="385:13"><literal type="number" pos:start="385:10" pos:end="385:13">0x2a</literal></expr>:</case>    <comment type="block" pos:start="385:19" pos:end="385:29">/* l.ori */</comment>

        <expr_stmt pos:start="387:9" pos:end="387:53"><expr pos:start="387:9" pos:end="387:52"><call pos:start="387:9" pos:end="387:52"><name pos:start="387:9" pos:end="387:15">LOG_DIS</name><argument_list pos:start="387:16" pos:end="387:52">(<argument pos:start="387:17" pos:end="387:38"><expr pos:start="387:17" pos:end="387:38"><literal type="string" pos:start="387:17" pos:end="387:38">"l.ori r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="387:41" pos:end="387:42"><expr pos:start="387:41" pos:end="387:42"><name pos:start="387:41" pos:end="387:42">rd</name></expr></argument>, <argument pos:start="387:45" pos:end="387:46"><expr pos:start="387:45" pos:end="387:46"><name pos:start="387:45" pos:end="387:46">ra</name></expr></argument>, <argument pos:start="387:49" pos:end="387:51"><expr pos:start="387:49" pos:end="387:51"><name pos:start="387:49" pos:end="387:51">K16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="389:9" pos:end="389:50"><expr pos:start="389:9" pos:end="389:49"><call pos:start="389:9" pos:end="389:49"><name pos:start="389:9" pos:end="389:22">tcg_gen_ori_tl</name><argument_list pos:start="389:23" pos:end="389:49">(<argument pos:start="389:24" pos:end="389:32"><expr pos:start="389:24" pos:end="389:32"><name pos:start="389:24" pos:end="389:32"><name pos:start="389:24" pos:end="389:28">cpu_R</name><index pos:start="389:29" pos:end="389:32">[<expr pos:start="389:30" pos:end="389:31"><name pos:start="389:30" pos:end="389:31">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="389:35" pos:end="389:43"><expr pos:start="389:35" pos:end="389:43"><name pos:start="389:35" pos:end="389:43"><name pos:start="389:35" pos:end="389:39">cpu_R</name><index pos:start="389:40" pos:end="389:43">[<expr pos:start="389:41" pos:end="389:42"><name pos:start="389:41" pos:end="389:42">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="389:46" pos:end="389:48"><expr pos:start="389:46" pos:end="389:48"><name pos:start="389:46" pos:end="389:48">K16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="391:9" pos:end="391:14">break;</break>



    <case pos:start="395:5" pos:end="395:14">case <expr pos:start="395:10" pos:end="395:13"><literal type="number" pos:start="395:10" pos:end="395:13">0x2b</literal></expr>:</case>    <comment type="block" pos:start="395:19" pos:end="395:30">/* l.xori */</comment>

        <expr_stmt pos:start="397:9" pos:end="397:54"><expr pos:start="397:9" pos:end="397:53"><call pos:start="397:9" pos:end="397:53"><name pos:start="397:9" pos:end="397:15">LOG_DIS</name><argument_list pos:start="397:16" pos:end="397:53">(<argument pos:start="397:17" pos:end="397:39"><expr pos:start="397:17" pos:end="397:39"><literal type="string" pos:start="397:17" pos:end="397:39">"l.xori r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="397:42" pos:end="397:43"><expr pos:start="397:42" pos:end="397:43"><name pos:start="397:42" pos:end="397:43">rd</name></expr></argument>, <argument pos:start="397:46" pos:end="397:47"><expr pos:start="397:46" pos:end="397:47"><name pos:start="397:46" pos:end="397:47">ra</name></expr></argument>, <argument pos:start="397:50" pos:end="397:52"><expr pos:start="397:50" pos:end="397:52"><name pos:start="397:50" pos:end="397:52">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="399:9" pos:end="399:51"><expr pos:start="399:9" pos:end="399:50"><call pos:start="399:9" pos:end="399:50"><name pos:start="399:9" pos:end="399:23">tcg_gen_xori_tl</name><argument_list pos:start="399:24" pos:end="399:50">(<argument pos:start="399:25" pos:end="399:33"><expr pos:start="399:25" pos:end="399:33"><name pos:start="399:25" pos:end="399:33"><name pos:start="399:25" pos:end="399:29">cpu_R</name><index pos:start="399:30" pos:end="399:33">[<expr pos:start="399:31" pos:end="399:32"><name pos:start="399:31" pos:end="399:32">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="399:36" pos:end="399:44"><expr pos:start="399:36" pos:end="399:44"><name pos:start="399:36" pos:end="399:44"><name pos:start="399:36" pos:end="399:40">cpu_R</name><index pos:start="399:41" pos:end="399:44">[<expr pos:start="399:42" pos:end="399:43"><name pos:start="399:42" pos:end="399:43">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="399:47" pos:end="399:49"><expr pos:start="399:47" pos:end="399:49"><name pos:start="399:47" pos:end="399:49">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="401:9" pos:end="401:14">break;</break>



    <case pos:start="405:5" pos:end="405:14">case <expr pos:start="405:10" pos:end="405:13"><literal type="number" pos:start="405:10" pos:end="405:13">0x2c</literal></expr>:</case>    <comment type="block" pos:start="405:19" pos:end="405:30">/* l.muli */</comment>

        <expr_stmt pos:start="407:9" pos:end="407:54"><expr pos:start="407:9" pos:end="407:53"><call pos:start="407:9" pos:end="407:53"><name pos:start="407:9" pos:end="407:15">LOG_DIS</name><argument_list pos:start="407:16" pos:end="407:53">(<argument pos:start="407:17" pos:end="407:39"><expr pos:start="407:17" pos:end="407:39"><literal type="string" pos:start="407:17" pos:end="407:39">"l.muli r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="407:42" pos:end="407:43"><expr pos:start="407:42" pos:end="407:43"><name pos:start="407:42" pos:end="407:43">rd</name></expr></argument>, <argument pos:start="407:46" pos:end="407:47"><expr pos:start="407:46" pos:end="407:47"><name pos:start="407:46" pos:end="407:47">ra</name></expr></argument>, <argument pos:start="407:50" pos:end="407:52"><expr pos:start="407:50" pos:end="407:52"><name pos:start="407:50" pos:end="407:52">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="409:9" pos:end="409:31"><expr pos:start="409:9" pos:end="409:30"><name pos:start="409:9" pos:end="409:10">t0</name> <operator pos:start="409:12" pos:end="409:12">=</operator> <call pos:start="409:14" pos:end="409:30"><name pos:start="409:14" pos:end="409:25">tcg_const_tl</name><argument_list pos:start="409:26" pos:end="409:30">(<argument pos:start="409:27" pos:end="409:29"><expr pos:start="409:27" pos:end="409:29"><name pos:start="409:27" pos:end="409:29">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="411:9" pos:end="411:46"><expr pos:start="411:9" pos:end="411:45"><call pos:start="411:9" pos:end="411:45"><name pos:start="411:9" pos:end="411:15">gen_mul</name><argument_list pos:start="411:16" pos:end="411:45">(<argument pos:start="411:17" pos:end="411:18"><expr pos:start="411:17" pos:end="411:18"><name pos:start="411:17" pos:end="411:18">dc</name></expr></argument>, <argument pos:start="411:21" pos:end="411:29"><expr pos:start="411:21" pos:end="411:29"><name pos:start="411:21" pos:end="411:29"><name pos:start="411:21" pos:end="411:25">cpu_R</name><index pos:start="411:26" pos:end="411:29">[<expr pos:start="411:27" pos:end="411:28"><name pos:start="411:27" pos:end="411:28">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="411:32" pos:end="411:40"><expr pos:start="411:32" pos:end="411:40"><name pos:start="411:32" pos:end="411:40"><name pos:start="411:32" pos:end="411:36">cpu_R</name><index pos:start="411:37" pos:end="411:40">[<expr pos:start="411:38" pos:end="411:39"><name pos:start="411:38" pos:end="411:39">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="411:43" pos:end="411:44"><expr pos:start="411:43" pos:end="411:44"><name pos:start="411:43" pos:end="411:44">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="413:9" pos:end="413:26"><expr pos:start="413:9" pos:end="413:25"><call pos:start="413:9" pos:end="413:25"><name pos:start="413:9" pos:end="413:21">tcg_temp_free</name><argument_list pos:start="413:22" pos:end="413:25">(<argument pos:start="413:23" pos:end="413:24"><expr pos:start="413:23" pos:end="413:24"><name pos:start="413:23" pos:end="413:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="415:9" pos:end="415:14">break;</break>



    <case pos:start="419:5" pos:end="419:14">case <expr pos:start="419:10" pos:end="419:13"><literal type="number" pos:start="419:10" pos:end="419:13">0x2d</literal></expr>:</case>    <comment type="block" pos:start="419:19" pos:end="419:31">/* l.mfspr */</comment>

        <expr_stmt pos:start="421:9" pos:end="421:55"><expr pos:start="421:9" pos:end="421:54"><call pos:start="421:9" pos:end="421:54"><name pos:start="421:9" pos:end="421:15">LOG_DIS</name><argument_list pos:start="421:16" pos:end="421:54">(<argument pos:start="421:17" pos:end="421:40"><expr pos:start="421:17" pos:end="421:40"><literal type="string" pos:start="421:17" pos:end="421:40">"l.mfspr r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="421:43" pos:end="421:44"><expr pos:start="421:43" pos:end="421:44"><name pos:start="421:43" pos:end="421:44">rd</name></expr></argument>, <argument pos:start="421:47" pos:end="421:48"><expr pos:start="421:47" pos:end="421:48"><name pos:start="421:47" pos:end="421:48">ra</name></expr></argument>, <argument pos:start="421:51" pos:end="421:53"><expr pos:start="421:51" pos:end="421:53"><name pos:start="421:51" pos:end="421:53">K16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="423:9" pos:end="447:9">{<block_content pos:start="427:13" pos:end="446:0">

<cpp:if pos:start="425:1" pos:end="425:29">#<cpp:directive pos:start="425:2" pos:end="425:3">if</cpp:directive> <expr pos:start="425:5" pos:end="425:29"><call pos:start="425:5" pos:end="425:29"><name pos:start="425:5" pos:end="425:11">defined</name><argument_list pos:start="425:12" pos:end="425:29">(<argument pos:start="425:13" pos:end="425:28"><expr pos:start="425:13" pos:end="425:28"><name pos:start="425:13" pos:end="425:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <return pos:start="427:13" pos:end="430:0">return;</return>

<cpp:else pos:start="429:1" pos:end="429:5">#<cpp:directive pos:start="429:2" pos:end="429:5">else</cpp:directive></cpp:else>

            <decl_stmt pos:start="431:13" pos:end="431:45"><decl pos:start="431:13" pos:end="431:44"><type pos:start="431:13" pos:end="431:20"><name pos:start="431:13" pos:end="431:20">TCGv_i32</name></type> <name pos:start="431:22" pos:end="431:23">ti</name> <init pos:start="431:25" pos:end="431:44">= <expr pos:start="431:27" pos:end="431:44"><call pos:start="431:27" pos:end="431:44"><name pos:start="431:27" pos:end="431:39">tcg_const_i32</name><argument_list pos:start="431:40" pos:end="431:44">(<argument pos:start="431:41" pos:end="431:43"><expr pos:start="431:41" pos:end="431:43"><name pos:start="431:41" pos:end="431:43">K16</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="433:13" pos:end="439:13"><if pos:start="433:13" pos:end="439:13">if <condition pos:start="433:16" pos:end="433:44">(<expr pos:start="433:17" pos:end="433:43"><name pos:start="433:17" pos:end="433:27"><name pos:start="433:17" pos:end="433:18">dc</name><operator pos:start="433:19" pos:end="433:20">-&gt;</operator><name pos:start="433:21" pos:end="433:27">mem_idx</name></name> <operator pos:start="433:29" pos:end="433:30">==</operator> <name pos:start="433:32" pos:end="433:43">MMU_USER_IDX</name></expr>)</condition> <block pos:start="433:46" pos:end="439:13">{<block_content pos:start="435:17" pos:end="437:23">

                <expr_stmt pos:start="435:17" pos:end="435:42"><expr pos:start="435:17" pos:end="435:41"><call pos:start="435:17" pos:end="435:41"><name pos:start="435:17" pos:end="435:37">gen_illegal_exception</name><argument_list pos:start="435:38" pos:end="435:41">(<argument pos:start="435:39" pos:end="435:40"><expr pos:start="435:39" pos:end="435:40"><name pos:start="435:39" pos:end="435:40">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="437:17" pos:end="437:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:75"><expr pos:start="441:13" pos:end="441:74"><call pos:start="441:13" pos:end="441:74"><name pos:start="441:13" pos:end="441:28">gen_helper_mfspr</name><argument_list pos:start="441:29" pos:end="441:74">(<argument pos:start="441:30" pos:end="441:38"><expr pos:start="441:30" pos:end="441:38"><name pos:start="441:30" pos:end="441:38"><name pos:start="441:30" pos:end="441:34">cpu_R</name><index pos:start="441:35" pos:end="441:38">[<expr pos:start="441:36" pos:end="441:37"><name pos:start="441:36" pos:end="441:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="441:41" pos:end="441:47"><expr pos:start="441:41" pos:end="441:47"><name pos:start="441:41" pos:end="441:47">cpu_env</name></expr></argument>, <argument pos:start="441:50" pos:end="441:58"><expr pos:start="441:50" pos:end="441:58"><name pos:start="441:50" pos:end="441:58"><name pos:start="441:50" pos:end="441:54">cpu_R</name><index pos:start="441:55" pos:end="441:58">[<expr pos:start="441:56" pos:end="441:57"><name pos:start="441:56" pos:end="441:57">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="441:61" pos:end="441:69"><expr pos:start="441:61" pos:end="441:69"><name pos:start="441:61" pos:end="441:69"><name pos:start="441:61" pos:end="441:65">cpu_R</name><index pos:start="441:66" pos:end="441:69">[<expr pos:start="441:67" pos:end="441:68"><name pos:start="441:67" pos:end="441:68">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="441:72" pos:end="441:73"><expr pos:start="441:72" pos:end="441:73"><name pos:start="441:72" pos:end="441:73">ti</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="443:13" pos:end="446:0"><expr pos:start="443:13" pos:end="443:33"><call pos:start="443:13" pos:end="443:33"><name pos:start="443:13" pos:end="443:29">tcg_temp_free_i32</name><argument_list pos:start="443:30" pos:end="443:33">(<argument pos:start="443:31" pos:end="443:32"><expr pos:start="443:31" pos:end="443:32"><name pos:start="443:31" pos:end="443:32">ti</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="445:1" pos:end="445:6">#<cpp:directive pos:start="445:2" pos:end="445:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block>

        <break pos:start="449:9" pos:end="449:14">break;</break>



    <case pos:start="453:5" pos:end="453:14">case <expr pos:start="453:10" pos:end="453:13"><literal type="number" pos:start="453:10" pos:end="453:13">0x30</literal></expr>:</case>    <comment type="block" pos:start="453:19" pos:end="453:31">/* l.mtspr */</comment>

        <expr_stmt pos:start="455:9" pos:end="455:57"><expr pos:start="455:9" pos:end="455:56"><call pos:start="455:9" pos:end="455:56"><name pos:start="455:9" pos:end="455:15">LOG_DIS</name><argument_list pos:start="455:16" pos:end="455:56">(<argument pos:start="455:17" pos:end="455:40"><expr pos:start="455:17" pos:end="455:40"><literal type="string" pos:start="455:17" pos:end="455:40">"l.mtspr r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="455:43" pos:end="455:44"><expr pos:start="455:43" pos:end="455:44"><name pos:start="455:43" pos:end="455:44">ra</name></expr></argument>, <argument pos:start="455:47" pos:end="455:48"><expr pos:start="455:47" pos:end="455:48"><name pos:start="455:47" pos:end="455:48">rb</name></expr></argument>, <argument pos:start="455:51" pos:end="455:55"><expr pos:start="455:51" pos:end="455:55"><name pos:start="455:51" pos:end="455:55">K5_11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="457:9" pos:end="481:9">{<block_content pos:start="461:13" pos:end="480:0">

<cpp:if pos:start="459:1" pos:end="459:29">#<cpp:directive pos:start="459:2" pos:end="459:3">if</cpp:directive> <expr pos:start="459:5" pos:end="459:29"><call pos:start="459:5" pos:end="459:29"><name pos:start="459:5" pos:end="459:11">defined</name><argument_list pos:start="459:12" pos:end="459:29">(<argument pos:start="459:13" pos:end="459:28"><expr pos:start="459:13" pos:end="459:28"><name pos:start="459:13" pos:end="459:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <return pos:start="461:13" pos:end="464:0">return;</return>

<cpp:else pos:start="463:1" pos:end="463:5">#<cpp:directive pos:start="463:2" pos:end="463:5">else</cpp:directive></cpp:else>

            <decl_stmt pos:start="465:13" pos:end="465:47"><decl pos:start="465:13" pos:end="465:46"><type pos:start="465:13" pos:end="465:20"><name pos:start="465:13" pos:end="465:20">TCGv_i32</name></type> <name pos:start="465:22" pos:end="465:23">im</name> <init pos:start="465:25" pos:end="465:46">= <expr pos:start="465:27" pos:end="465:46"><call pos:start="465:27" pos:end="465:46"><name pos:start="465:27" pos:end="465:39">tcg_const_i32</name><argument_list pos:start="465:40" pos:end="465:46">(<argument pos:start="465:41" pos:end="465:45"><expr pos:start="465:41" pos:end="465:45"><name pos:start="465:41" pos:end="465:45">K5_11</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="467:13" pos:end="473:13"><if pos:start="467:13" pos:end="473:13">if <condition pos:start="467:16" pos:end="467:44">(<expr pos:start="467:17" pos:end="467:43"><name pos:start="467:17" pos:end="467:27"><name pos:start="467:17" pos:end="467:18">dc</name><operator pos:start="467:19" pos:end="467:20">-&gt;</operator><name pos:start="467:21" pos:end="467:27">mem_idx</name></name> <operator pos:start="467:29" pos:end="467:30">==</operator> <name pos:start="467:32" pos:end="467:43">MMU_USER_IDX</name></expr>)</condition> <block pos:start="467:46" pos:end="473:13">{<block_content pos:start="469:17" pos:end="471:23">

                <expr_stmt pos:start="469:17" pos:end="469:42"><expr pos:start="469:17" pos:end="469:41"><call pos:start="469:17" pos:end="469:41"><name pos:start="469:17" pos:end="469:37">gen_illegal_exception</name><argument_list pos:start="469:38" pos:end="469:41">(<argument pos:start="469:39" pos:end="469:40"><expr pos:start="469:39" pos:end="469:40"><name pos:start="469:39" pos:end="469:40">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="471:17" pos:end="471:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="475:13" pos:end="475:64"><expr pos:start="475:13" pos:end="475:63"><call pos:start="475:13" pos:end="475:63"><name pos:start="475:13" pos:end="475:28">gen_helper_mtspr</name><argument_list pos:start="475:29" pos:end="475:63">(<argument pos:start="475:30" pos:end="475:36"><expr pos:start="475:30" pos:end="475:36"><name pos:start="475:30" pos:end="475:36">cpu_env</name></expr></argument>, <argument pos:start="475:39" pos:end="475:47"><expr pos:start="475:39" pos:end="475:47"><name pos:start="475:39" pos:end="475:47"><name pos:start="475:39" pos:end="475:43">cpu_R</name><index pos:start="475:44" pos:end="475:47">[<expr pos:start="475:45" pos:end="475:46"><name pos:start="475:45" pos:end="475:46">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="475:50" pos:end="475:58"><expr pos:start="475:50" pos:end="475:58"><name pos:start="475:50" pos:end="475:58"><name pos:start="475:50" pos:end="475:54">cpu_R</name><index pos:start="475:55" pos:end="475:58">[<expr pos:start="475:56" pos:end="475:57"><name pos:start="475:56" pos:end="475:57">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="475:61" pos:end="475:62"><expr pos:start="475:61" pos:end="475:62"><name pos:start="475:61" pos:end="475:62">im</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="477:13" pos:end="480:0"><expr pos:start="477:13" pos:end="477:33"><call pos:start="477:13" pos:end="477:33"><name pos:start="477:13" pos:end="477:29">tcg_temp_free_i32</name><argument_list pos:start="477:30" pos:end="477:33">(<argument pos:start="477:31" pos:end="477:32"><expr pos:start="477:31" pos:end="477:32"><name pos:start="477:31" pos:end="477:32">im</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="479:1" pos:end="479:6">#<cpp:directive pos:start="479:2" pos:end="479:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block>

        <break pos:start="483:9" pos:end="483:14">break;</break>



    <case pos:start="487:5" pos:end="487:14">case <expr pos:start="487:10" pos:end="487:13"><literal type="number" pos:start="487:10" pos:end="487:13">0x33</literal></expr>:</case> <comment type="block" pos:start="487:16" pos:end="487:26">/* l.swa */</comment>

        <expr_stmt pos:start="489:9" pos:end="489:55"><expr pos:start="489:9" pos:end="489:54"><call pos:start="489:9" pos:end="489:54"><name pos:start="489:9" pos:end="489:15">LOG_DIS</name><argument_list pos:start="489:16" pos:end="489:54">(<argument pos:start="489:17" pos:end="489:38"><expr pos:start="489:17" pos:end="489:38"><literal type="string" pos:start="489:17" pos:end="489:38">"l.swa r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="489:41" pos:end="489:42"><expr pos:start="489:41" pos:end="489:42"><name pos:start="489:41" pos:end="489:42">ra</name></expr></argument>, <argument pos:start="489:45" pos:end="489:46"><expr pos:start="489:45" pos:end="489:46"><name pos:start="489:45" pos:end="489:46">rb</name></expr></argument>, <argument pos:start="489:49" pos:end="489:53"><expr pos:start="489:49" pos:end="489:53"><name pos:start="489:49" pos:end="489:53">I5_11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="491:9" pos:end="491:49"><expr pos:start="491:9" pos:end="491:48"><call pos:start="491:9" pos:end="491:48"><name pos:start="491:9" pos:end="491:15">gen_swa</name><argument_list pos:start="491:16" pos:end="491:48">(<argument pos:start="491:17" pos:end="491:18"><expr pos:start="491:17" pos:end="491:18"><name pos:start="491:17" pos:end="491:18">dc</name></expr></argument>, <argument pos:start="491:21" pos:end="491:29"><expr pos:start="491:21" pos:end="491:29"><name pos:start="491:21" pos:end="491:29"><name pos:start="491:21" pos:end="491:25">cpu_R</name><index pos:start="491:26" pos:end="491:29">[<expr pos:start="491:27" pos:end="491:28"><name pos:start="491:27" pos:end="491:28">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="491:32" pos:end="491:40"><expr pos:start="491:32" pos:end="491:40"><name pos:start="491:32" pos:end="491:40"><name pos:start="491:32" pos:end="491:36">cpu_R</name><index pos:start="491:37" pos:end="491:40">[<expr pos:start="491:38" pos:end="491:39"><name pos:start="491:38" pos:end="491:39">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="491:43" pos:end="491:47"><expr pos:start="491:43" pos:end="491:47"><name pos:start="491:43" pos:end="491:47">I5_11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="493:9" pos:end="493:14">break;</break>



<comment type="block" pos:start="497:1" pos:end="497:47">/* not used yet, open it when we need or64.  */</comment>

<comment type="block" pos:start="499:1" pos:end="511:8">/*#ifdef TARGET_OPENRISC64

    case 0x34:     l.sd

        LOG_DIS("l.sd r%d, r%d, %d\n", ra, rb, I5_11);

        check_ob64s(dc);

        mop = MO_TEQ;

        goto do_store;

#endif*/</comment>



    <case pos:start="515:5" pos:end="515:14">case <expr pos:start="515:10" pos:end="515:13"><literal type="number" pos:start="515:10" pos:end="515:13">0x35</literal></expr>:</case>    <comment type="block" pos:start="515:19" pos:end="515:28">/* l.sw */</comment>

        <expr_stmt pos:start="517:9" pos:end="517:54"><expr pos:start="517:9" pos:end="517:53"><call pos:start="517:9" pos:end="517:53"><name pos:start="517:9" pos:end="517:15">LOG_DIS</name><argument_list pos:start="517:16" pos:end="517:53">(<argument pos:start="517:17" pos:end="517:37"><expr pos:start="517:17" pos:end="517:37"><literal type="string" pos:start="517:17" pos:end="517:37">"l.sw r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="517:40" pos:end="517:41"><expr pos:start="517:40" pos:end="517:41"><name pos:start="517:40" pos:end="517:41">ra</name></expr></argument>, <argument pos:start="517:44" pos:end="517:45"><expr pos:start="517:44" pos:end="517:45"><name pos:start="517:44" pos:end="517:45">rb</name></expr></argument>, <argument pos:start="517:48" pos:end="517:52"><expr pos:start="517:48" pos:end="517:52"><name pos:start="517:48" pos:end="517:52">I5_11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="519:9" pos:end="519:22"><expr pos:start="519:9" pos:end="519:21"><name pos:start="519:9" pos:end="519:11">mop</name> <operator pos:start="519:13" pos:end="519:13">=</operator> <name pos:start="519:15" pos:end="519:21">MO_TEUL</name></expr>;</expr_stmt>

        <goto pos:start="521:9" pos:end="521:22">goto <name pos:start="521:14" pos:end="521:21">do_store</name>;</goto>



    <case pos:start="525:5" pos:end="525:14">case <expr pos:start="525:10" pos:end="525:13"><literal type="number" pos:start="525:10" pos:end="525:13">0x36</literal></expr>:</case>    <comment type="block" pos:start="525:19" pos:end="525:28">/* l.sb */</comment>

        <expr_stmt pos:start="527:9" pos:end="527:54"><expr pos:start="527:9" pos:end="527:53"><call pos:start="527:9" pos:end="527:53"><name pos:start="527:9" pos:end="527:15">LOG_DIS</name><argument_list pos:start="527:16" pos:end="527:53">(<argument pos:start="527:17" pos:end="527:37"><expr pos:start="527:17" pos:end="527:37"><literal type="string" pos:start="527:17" pos:end="527:37">"l.sb r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="527:40" pos:end="527:41"><expr pos:start="527:40" pos:end="527:41"><name pos:start="527:40" pos:end="527:41">ra</name></expr></argument>, <argument pos:start="527:44" pos:end="527:45"><expr pos:start="527:44" pos:end="527:45"><name pos:start="527:44" pos:end="527:45">rb</name></expr></argument>, <argument pos:start="527:48" pos:end="527:52"><expr pos:start="527:48" pos:end="527:52"><name pos:start="527:48" pos:end="527:52">I5_11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="529:9" pos:end="529:20"><expr pos:start="529:9" pos:end="529:19"><name pos:start="529:9" pos:end="529:11">mop</name> <operator pos:start="529:13" pos:end="529:13">=</operator> <name pos:start="529:15" pos:end="529:19">MO_UB</name></expr>;</expr_stmt>

        <goto pos:start="531:9" pos:end="531:22">goto <name pos:start="531:14" pos:end="531:21">do_store</name>;</goto>



    <case pos:start="535:5" pos:end="535:14">case <expr pos:start="535:10" pos:end="535:13"><literal type="number" pos:start="535:10" pos:end="535:13">0x37</literal></expr>:</case>    <comment type="block" pos:start="535:19" pos:end="535:28">/* l.sh */</comment>

        <expr_stmt pos:start="537:9" pos:end="537:54"><expr pos:start="537:9" pos:end="537:53"><call pos:start="537:9" pos:end="537:53"><name pos:start="537:9" pos:end="537:15">LOG_DIS</name><argument_list pos:start="537:16" pos:end="537:53">(<argument pos:start="537:17" pos:end="537:37"><expr pos:start="537:17" pos:end="537:37"><literal type="string" pos:start="537:17" pos:end="537:37">"l.sh r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="537:40" pos:end="537:41"><expr pos:start="537:40" pos:end="537:41"><name pos:start="537:40" pos:end="537:41">ra</name></expr></argument>, <argument pos:start="537:44" pos:end="537:45"><expr pos:start="537:44" pos:end="537:45"><name pos:start="537:44" pos:end="537:45">rb</name></expr></argument>, <argument pos:start="537:48" pos:end="537:52"><expr pos:start="537:48" pos:end="537:52"><name pos:start="537:48" pos:end="537:52">I5_11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="539:9" pos:end="539:22"><expr pos:start="539:9" pos:end="539:21"><name pos:start="539:9" pos:end="539:11">mop</name> <operator pos:start="539:13" pos:end="539:13">=</operator> <name pos:start="539:15" pos:end="539:21">MO_TEUW</name></expr>;</expr_stmt>

        <goto pos:start="541:9" pos:end="541:22">goto <name pos:start="541:14" pos:end="541:21">do_store</name>;</goto>



    <label pos:start="545:5" pos:end="545:13"><name pos:start="545:5" pos:end="545:12">do_store</name>:</label>

        <block pos:start="547:9" pos:end="557:9">{<block_content pos:start="549:13" pos:end="555:30">

            <decl_stmt pos:start="549:13" pos:end="549:37"><decl pos:start="549:13" pos:end="549:36"><type pos:start="549:13" pos:end="549:16"><name pos:start="549:13" pos:end="549:16">TCGv</name></type> <name pos:start="549:18" pos:end="549:19">t0</name> <init pos:start="549:21" pos:end="549:36">= <expr pos:start="549:23" pos:end="549:36"><call pos:start="549:23" pos:end="549:36"><name pos:start="549:23" pos:end="549:34">tcg_temp_new</name><argument_list pos:start="549:35" pos:end="549:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="551:13" pos:end="551:50"><expr pos:start="551:13" pos:end="551:49"><call pos:start="551:13" pos:end="551:49"><name pos:start="551:13" pos:end="551:27">tcg_gen_addi_tl</name><argument_list pos:start="551:28" pos:end="551:49">(<argument pos:start="551:29" pos:end="551:30"><expr pos:start="551:29" pos:end="551:30"><name pos:start="551:29" pos:end="551:30">t0</name></expr></argument>, <argument pos:start="551:33" pos:end="551:41"><expr pos:start="551:33" pos:end="551:41"><name pos:start="551:33" pos:end="551:41"><name pos:start="551:33" pos:end="551:37">cpu_R</name><index pos:start="551:38" pos:end="551:41">[<expr pos:start="551:39" pos:end="551:40"><name pos:start="551:39" pos:end="551:40">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="551:44" pos:end="551:48"><expr pos:start="551:44" pos:end="551:48"><name pos:start="551:44" pos:end="551:48">I5_11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="553:13" pos:end="553:64"><expr pos:start="553:13" pos:end="553:63"><call pos:start="553:13" pos:end="553:63"><name pos:start="553:13" pos:end="553:30">tcg_gen_qemu_st_tl</name><argument_list pos:start="553:31" pos:end="553:63">(<argument pos:start="553:32" pos:end="553:40"><expr pos:start="553:32" pos:end="553:40"><name pos:start="553:32" pos:end="553:40"><name pos:start="553:32" pos:end="553:36">cpu_R</name><index pos:start="553:37" pos:end="553:40">[<expr pos:start="553:38" pos:end="553:39"><name pos:start="553:38" pos:end="553:39">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="553:43" pos:end="553:44"><expr pos:start="553:43" pos:end="553:44"><name pos:start="553:43" pos:end="553:44">t0</name></expr></argument>, <argument pos:start="553:47" pos:end="553:57"><expr pos:start="553:47" pos:end="553:57"><name pos:start="553:47" pos:end="553:57"><name pos:start="553:47" pos:end="553:48">dc</name><operator pos:start="553:49" pos:end="553:50">-&gt;</operator><name pos:start="553:51" pos:end="553:57">mem_idx</name></name></expr></argument>, <argument pos:start="553:60" pos:end="553:62"><expr pos:start="553:60" pos:end="553:62"><name pos:start="553:60" pos:end="553:62">mop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="555:13" pos:end="555:30"><expr pos:start="555:13" pos:end="555:29"><call pos:start="555:13" pos:end="555:29"><name pos:start="555:13" pos:end="555:25">tcg_temp_free</name><argument_list pos:start="555:26" pos:end="555:29">(<argument pos:start="555:27" pos:end="555:28"><expr pos:start="555:27" pos:end="555:28"><name pos:start="555:27" pos:end="555:28">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="559:9" pos:end="559:14">break;</break>



    <default pos:start="563:5" pos:end="563:12">default:</default>

        <expr_stmt pos:start="565:9" pos:end="565:34"><expr pos:start="565:9" pos:end="565:33"><call pos:start="565:9" pos:end="565:33"><name pos:start="565:9" pos:end="565:29">gen_illegal_exception</name><argument_list pos:start="565:30" pos:end="565:33">(<argument pos:start="565:31" pos:end="565:32"><expr pos:start="565:31" pos:end="565:32"><name pos:start="565:31" pos:end="565:32">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="567:9" pos:end="567:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
