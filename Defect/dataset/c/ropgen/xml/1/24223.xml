<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24223.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">flic_read_packet</name><parameter_list pos:start="1:28" pos:end="3:42">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:41"><decl pos:start="3:29" pos:end="3:41"><type pos:start="3:29" pos:end="3:41"><name pos:start="3:29" pos:end="3:36">AVPacket</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="91:1">{<block_content pos:start="7:5" pos:end="89:15">

    <decl_stmt pos:start="7:5" pos:end="7:62"><decl pos:start="7:5" pos:end="7:61"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">FlicDemuxContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:26">flic</name> <init pos:start="7:28" pos:end="7:61">= <expr pos:start="7:30" pos:end="7:61"><operator pos:start="7:30" pos:end="7:30">(</operator><name pos:start="7:31" pos:end="7:46">FlicDemuxContext</name> <operator pos:start="7:48" pos:end="7:48">*</operator><operator pos:start="7:49" pos:end="7:49">)</operator><name pos:start="7:50" pos:end="7:61"><name pos:start="7:50" pos:end="7:50">s</name><operator pos:start="7:51" pos:end="7:52">-&gt;</operator><name pos:start="7:53" pos:end="7:61">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">pb</name> <init pos:start="9:23" pos:end="9:30">= <expr pos:start="9:25" pos:end="9:30"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">packet_read</name> <init pos:start="11:21" pos:end="11:23">= <expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:21">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">magic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name> <init pos:start="17:13" pos:end="17:15">= <expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:47"><decl pos:start="19:5" pos:end="19:46"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:17">char</name></type> <name pos:start="19:19" pos:end="19:46"><name pos:start="19:19" pos:end="19:26">preamble</name><index pos:start="19:27" pos:end="19:46">[<expr pos:start="19:28" pos:end="19:45"><name pos:start="19:28" pos:end="19:45">FLIC_PREAMBLE_SIZE</name></expr>]</index></name></decl>;</decl_stmt>



    <while pos:start="23:5" pos:end="85:5">while <condition pos:start="23:11" pos:end="23:24">(<expr pos:start="23:12" pos:end="23:23"><operator pos:start="23:12" pos:end="23:12">!</operator><name pos:start="23:13" pos:end="23:23">packet_read</name></expr>)</condition> <block pos:start="23:26" pos:end="85:5">{<block_content pos:start="27:9" pos:end="83:9">



        <if_stmt pos:start="27:9" pos:end="35:9"><if pos:start="27:9" pos:end="35:9">if <condition pos:start="27:12" pos:end="29:31">(<expr pos:start="27:13" pos:end="29:30"><operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:16">ret</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:63"><name pos:start="27:20" pos:end="27:29">get_buffer</name><argument_list pos:start="27:30" pos:end="27:63">(<argument pos:start="27:31" pos:end="27:32"><expr pos:start="27:31" pos:end="27:32"><name pos:start="27:31" pos:end="27:32">pb</name></expr></argument>, <argument pos:start="27:35" pos:end="27:42"><expr pos:start="27:35" pos:end="27:42"><name pos:start="27:35" pos:end="27:42">preamble</name></expr></argument>, <argument pos:start="27:45" pos:end="27:62"><expr pos:start="27:45" pos:end="27:62"><name pos:start="27:45" pos:end="27:62">FLIC_PREAMBLE_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="27:64" pos:end="27:64">)</operator> <operator pos:start="27:66" pos:end="27:67">!=</operator>

            <name pos:start="29:13" pos:end="29:30">FLIC_PREAMBLE_SIZE</name></expr>)</condition> <block pos:start="29:33" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:18">

            <expr_stmt pos:start="31:13" pos:end="31:29"><expr pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:28">AVERROR_IO</name></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:12">size</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:20">LE_32</name><argument_list pos:start="39:21" pos:end="39:34">(<argument pos:start="39:22" pos:end="39:33"><expr pos:start="39:22" pos:end="39:33"><operator pos:start="39:22" pos:end="39:22">&amp;</operator><name pos:start="39:23" pos:end="39:33"><name pos:start="39:23" pos:end="39:30">preamble</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><literal type="number" pos:start="39:32" pos:end="39:32">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:36"><expr pos:start="41:9" pos:end="41:35"><name pos:start="41:9" pos:end="41:13">magic</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="41:35"><name pos:start="41:17" pos:end="41:21">LE_16</name><argument_list pos:start="41:22" pos:end="41:35">(<argument pos:start="41:23" pos:end="41:34"><expr pos:start="41:23" pos:end="41:34"><operator pos:start="41:23" pos:end="41:23">&amp;</operator><name pos:start="41:24" pos:end="41:34"><name pos:start="41:24" pos:end="41:31">preamble</name><index pos:start="41:32" pos:end="41:34">[<expr pos:start="41:33" pos:end="41:33"><literal type="number" pos:start="41:33" pos:end="41:33">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="83:9"><if pos:start="45:9" pos:end="77:9">if <condition pos:start="45:12" pos:end="45:75">(<expr pos:start="45:13" pos:end="45:74"><operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:18">magic</name> <operator pos:start="45:20" pos:end="45:21">==</operator> <name pos:start="45:23" pos:end="45:40">FLIC_CHUNK_MAGIC_1</name><operator pos:start="45:41" pos:end="45:41">)</operator> <operator pos:start="45:43" pos:end="45:44">||</operator> <operator pos:start="45:46" pos:end="45:46">(</operator><name pos:start="45:47" pos:end="45:51">magic</name> <operator pos:start="45:53" pos:end="45:54">==</operator> <name pos:start="45:56" pos:end="45:73">FLIC_CHUNK_MAGIC_2</name><operator pos:start="45:74" pos:end="45:74">)</operator></expr>)</condition> <block pos:start="45:77" pos:end="77:9">{<block_content pos:start="47:13" pos:end="75:28">

            <if_stmt pos:start="47:13" pos:end="53:13"><if pos:start="47:13" pos:end="53:13">if <condition pos:start="47:16" pos:end="47:41">(<expr pos:start="47:17" pos:end="47:40"><call pos:start="47:17" pos:end="47:40"><name pos:start="47:17" pos:end="47:29">av_new_packet</name><argument_list pos:start="47:30" pos:end="47:40">(<argument pos:start="47:31" pos:end="47:33"><expr pos:start="47:31" pos:end="47:33"><name pos:start="47:31" pos:end="47:33">pkt</name></expr></argument>, <argument pos:start="47:36" pos:end="47:39"><expr pos:start="47:36" pos:end="47:39"><name pos:start="47:36" pos:end="47:39">size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:43" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:22">

                <expr_stmt pos:start="49:17" pos:end="49:33"><expr pos:start="49:17" pos:end="49:32"><name pos:start="49:17" pos:end="49:19">ret</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:32">AVERROR_IO</name></expr>;</expr_stmt>

                <break pos:start="51:17" pos:end="51:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:57"><expr pos:start="55:13" pos:end="55:56"><name pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:15">pkt</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:29">stream_index</name></name> <operator pos:start="55:31" pos:end="55:31">=</operator> <name pos:start="55:33" pos:end="55:56"><name pos:start="55:33" pos:end="55:36">flic</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:56">video_stream_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:33"><expr pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:15">pkt</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:20">pts</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:32"><name pos:start="57:24" pos:end="57:27">flic</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:32">pts</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:60"><expr pos:start="59:13" pos:end="59:59"><call pos:start="59:13" pos:end="59:59"><name pos:start="59:13" pos:end="59:18">memcpy</name><argument_list pos:start="59:19" pos:end="59:59">(<argument pos:start="59:20" pos:end="59:28"><expr pos:start="59:20" pos:end="59:28"><name pos:start="59:20" pos:end="59:28"><name pos:start="59:20" pos:end="59:22">pkt</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:28">data</name></name></expr></argument>, <argument pos:start="59:31" pos:end="59:38"><expr pos:start="59:31" pos:end="59:38"><name pos:start="59:31" pos:end="59:38">preamble</name></expr></argument>, <argument pos:start="59:41" pos:end="59:58"><expr pos:start="59:41" pos:end="59:58"><name pos:start="59:41" pos:end="59:58">FLIC_PREAMBLE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="63:43"><expr pos:start="61:13" pos:end="63:42"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="63:42"><name pos:start="61:19" pos:end="61:28">get_buffer</name><argument_list pos:start="61:29" pos:end="63:42">(<argument pos:start="61:30" pos:end="61:31"><expr pos:start="61:30" pos:end="61:31"><name pos:start="61:30" pos:end="61:31">pb</name></expr></argument>, <argument pos:start="61:34" pos:end="61:63"><expr pos:start="61:34" pos:end="61:63"><name pos:start="61:34" pos:end="61:42"><name pos:start="61:34" pos:end="61:36">pkt</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:42">data</name></name> <operator pos:start="61:44" pos:end="61:44">+</operator> <name pos:start="61:46" pos:end="61:63">FLIC_PREAMBLE_SIZE</name></expr></argument>, 

                <argument pos:start="63:17" pos:end="63:41"><expr pos:start="63:17" pos:end="63:41"><name pos:start="63:17" pos:end="63:20">size</name> <operator pos:start="63:22" pos:end="63:22">-</operator> <name pos:start="63:24" pos:end="63:41">FLIC_PREAMBLE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="71:13"><if pos:start="65:13" pos:end="71:13">if <condition pos:start="65:16" pos:end="65:49">(<expr pos:start="65:17" pos:end="65:48"><name pos:start="65:17" pos:end="65:19">ret</name> <operator pos:start="65:21" pos:end="65:22">!=</operator> <name pos:start="65:24" pos:end="65:27">size</name> <operator pos:start="65:29" pos:end="65:29">-</operator> <name pos:start="65:31" pos:end="65:48">FLIC_PREAMBLE_SIZE</name></expr>)</condition> <block pos:start="65:51" pos:end="71:13">{<block_content pos:start="67:17" pos:end="69:33">

                <expr_stmt pos:start="67:17" pos:end="67:36"><expr pos:start="67:17" pos:end="67:35"><call pos:start="67:17" pos:end="67:35"><name pos:start="67:17" pos:end="67:30">av_free_packet</name><argument_list pos:start="67:31" pos:end="67:35">(<argument pos:start="67:32" pos:end="67:34"><expr pos:start="67:32" pos:end="67:34"><name pos:start="67:32" pos:end="67:34">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:33"><expr pos:start="69:17" pos:end="69:32"><name pos:start="69:17" pos:end="69:19">ret</name> <operator pos:start="69:21" pos:end="69:21">=</operator> <name pos:start="69:23" pos:end="69:32">AVERROR_IO</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:45"><expr pos:start="73:13" pos:end="73:44"><name pos:start="73:13" pos:end="73:21"><name pos:start="73:13" pos:end="73:16">flic</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:21">pts</name></name> <operator pos:start="73:23" pos:end="73:24">+=</operator> <name pos:start="73:26" pos:end="73:44"><name pos:start="73:26" pos:end="73:29">flic</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:44">frame_pts_inc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:28"><expr pos:start="75:13" pos:end="75:27"><name pos:start="75:13" pos:end="75:23">packet_read</name> <operator pos:start="75:25" pos:end="75:25">=</operator> <literal type="number" pos:start="75:27" pos:end="75:27">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="83:9">else <block pos:start="77:16" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:46">

            <comment type="block" pos:start="79:13" pos:end="79:46">/* not interested in this chunk */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:46"><expr pos:start="81:13" pos:end="81:45"><call pos:start="81:13" pos:end="81:45"><name pos:start="81:13" pos:end="81:21">url_fseek</name><argument_list pos:start="81:22" pos:end="81:45">(<argument pos:start="81:23" pos:end="81:24"><expr pos:start="81:23" pos:end="81:24"><name pos:start="81:23" pos:end="81:24">pb</name></expr></argument>, <argument pos:start="81:27" pos:end="81:34"><expr pos:start="81:27" pos:end="81:34"><name pos:start="81:27" pos:end="81:30">size</name> <operator pos:start="81:32" pos:end="81:32">-</operator> <literal type="number" pos:start="81:34" pos:end="81:34">6</literal></expr></argument>, <argument pos:start="81:37" pos:end="81:44"><expr pos:start="81:37" pos:end="81:44"><name pos:start="81:37" pos:end="81:44">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <return pos:start="89:5" pos:end="89:15">return <expr pos:start="89:12" pos:end="89:14"><name pos:start="89:12" pos:end="89:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
