<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11818.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:39">vhost_dev_log_resize</name><parameter_list pos:start="1:40" pos:end="1:77">(<parameter pos:start="1:41" pos:end="1:61"><decl pos:start="1:41" pos:end="1:61"><type pos:start="1:41" pos:end="1:61"><name pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:46">struct</name> <name pos:start="1:48" pos:end="1:56">vhost_dev</name></name><modifier pos:start="1:57" pos:end="1:57">*</modifier></type> <name pos:start="1:59" pos:end="1:61">dev</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:76"><decl pos:start="1:64" pos:end="1:76"><type pos:start="1:64" pos:end="1:76"><name pos:start="1:64" pos:end="1:71">uint64_t</name></type> <name pos:start="1:73" pos:end="1:76">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:25">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">vhost_log_chunk_t</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">log</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:21">log_base</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">r</name></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:12">size</name></expr>)</condition> <block pos:start="11:15" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:44">

        <expr_stmt pos:start="13:9" pos:end="13:44"><expr pos:start="13:9" pos:end="13:43"><name pos:start="13:9" pos:end="13:11">log</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:43"><name pos:start="13:15" pos:end="13:23">g_malloc0</name><argument_list pos:start="13:24" pos:end="13:43">(<argument pos:start="13:25" pos:end="13:42"><expr pos:start="13:25" pos:end="13:42"><name pos:start="13:25" pos:end="13:28">size</name> <operator pos:start="13:30" pos:end="13:30">*</operator> <sizeof pos:start="13:32" pos:end="13:37">sizeof <name/></sizeof>*<name pos:start="13:40" pos:end="13:42">log</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="19:5">else <block pos:start="15:12" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:19">

        <expr_stmt pos:start="17:9" pos:end="17:19"><expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:11">log</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:18">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:12">log_base</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <operator pos:start="21:16" pos:end="21:16">(</operator><name pos:start="21:17" pos:end="21:24">uint64_t</name><operator pos:start="21:25" pos:end="21:25">)</operator><operator pos:start="21:26" pos:end="21:26">(</operator><name pos:start="21:27" pos:end="21:34">unsigned</name> <name pos:start="21:36" pos:end="21:39">long</name><operator pos:start="21:40" pos:end="21:40">)</operator><name pos:start="21:41" pos:end="21:43">log</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:59"><expr pos:start="23:5" pos:end="23:58"><name pos:start="23:5" pos:end="23:5">r</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="23:58"><name pos:start="23:9" pos:end="23:13">ioctl</name><argument_list pos:start="23:14" pos:end="23:58">(<argument pos:start="23:15" pos:end="23:26"><expr pos:start="23:15" pos:end="23:26"><name pos:start="23:15" pos:end="23:26"><name pos:start="23:15" pos:end="23:17">dev</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:26">control</name></name></expr></argument>, <argument pos:start="23:29" pos:end="23:46"><expr pos:start="23:29" pos:end="23:46"><name pos:start="23:29" pos:end="23:46">VHOST_SET_LOG_BASE</name></expr></argument>, <argument pos:start="23:49" pos:end="23:57"><expr pos:start="23:49" pos:end="23:57"><operator pos:start="23:49" pos:end="23:49">&amp;</operator><name pos:start="23:50" pos:end="23:57">log_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><call pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:10">assert</name><argument_list pos:start="25:11" pos:end="25:18">(<argument pos:start="25:12" pos:end="25:17"><expr pos:start="25:12" pos:end="25:17"><name pos:start="25:12" pos:end="25:12">r</name> <operator pos:start="25:14" pos:end="25:15">&gt;=</operator> <literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="29:64"><expr pos:start="27:5" pos:end="29:63"><call pos:start="27:5" pos:end="29:63"><name pos:start="27:5" pos:end="27:34">vhost_client_sync_dirty_bitmap</name><argument_list pos:start="27:35" pos:end="29:63">(<argument pos:start="27:36" pos:end="27:47"><expr pos:start="27:36" pos:end="27:47"><operator pos:start="27:36" pos:end="27:36">&amp;</operator><name pos:start="27:37" pos:end="27:47"><name pos:start="27:37" pos:end="27:39">dev</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:47">client</name></name></expr></argument>, <argument pos:start="27:50" pos:end="27:50"><expr pos:start="27:50" pos:end="27:50"><literal type="number" pos:start="27:50" pos:end="27:50">0</literal></expr></argument>,

                                   <argument pos:start="29:36" pos:end="29:62"><expr pos:start="29:36" pos:end="29:62"><operator pos:start="29:36" pos:end="29:36">(</operator><name pos:start="29:37" pos:end="29:54">target_phys_addr_t</name><operator pos:start="29:55" pos:end="29:55">)</operator><operator pos:start="29:56" pos:end="29:56">~</operator><literal type="number" pos:start="29:57" pos:end="29:62">0x0ull</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:11">dev</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:16">log</name></name></expr>)</condition> <block pos:start="31:19" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:25">

        <expr_stmt pos:start="33:9" pos:end="33:25"><expr pos:start="33:9" pos:end="33:24"><call pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:14">g_free</name><argument_list pos:start="33:15" pos:end="33:24">(<argument pos:start="33:16" pos:end="33:23"><expr pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:18">dev</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:23">log</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:7">dev</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:12">log</name></name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:18">log</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:7">dev</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:17">log_size</name></name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:24">size</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
