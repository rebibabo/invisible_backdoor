<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14355.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">decode_gain_info</name><parameter_list pos:start="1:29" pos:end="1:62">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:42">GetBitContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">gb</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:51">int</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:61">gaininfo</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:26">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">n</name></decl>;</decl_stmt>



    <while pos:start="9:5" pos:end="13:5">while <condition pos:start="9:11" pos:end="9:25">(<expr pos:start="9:12" pos:end="9:24"><call pos:start="9:12" pos:end="9:24"><name pos:start="9:12" pos:end="9:20">get_bits1</name><argument_list pos:start="9:21" pos:end="9:24">(<argument pos:start="9:22" pos:end="9:23"><expr pos:start="9:22" pos:end="9:23"><name pos:start="9:22" pos:end="9:23">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:27" pos:end="13:5">{<block_content>

        <comment type="block" pos:start="11:9" pos:end="11:21">/* NOTHING */</comment>

    </block_content>}</block></while>



    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:5">n</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <call pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:22">get_bits_count</name><argument_list pos:start="17:23" pos:end="17:26">(<argument pos:start="17:24" pos:end="17:25"><expr pos:start="17:24" pos:end="17:25"><name pos:start="17:24" pos:end="17:25">gb</name></expr></argument>)</argument_list></call> <operator pos:start="17:28" pos:end="17:28">-</operator> <literal type="number" pos:start="17:30" pos:end="17:30">1</literal></expr>;</expr_stmt>     <comment type="line" pos:start="17:37" pos:end="17:69">// amount of elements*2 to update</comment>



    <expr_stmt pos:start="21:5" pos:end="21:10"><expr pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:5">i</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <literal type="number" pos:start="21:9" pos:end="21:9">0</literal></expr>;</expr_stmt>

    <while pos:start="23:5" pos:end="35:5">while <condition pos:start="23:11" pos:end="23:15">(<expr pos:start="23:12" pos:end="23:14"><name pos:start="23:12" pos:end="23:12">n</name><operator pos:start="23:13" pos:end="23:14">--</operator></expr>)</condition> <block pos:start="23:17" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:33">

        <decl_stmt pos:start="25:9" pos:end="25:36"><decl pos:start="25:9" pos:end="25:35"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:17">index</name> <init pos:start="25:19" pos:end="25:35">= <expr pos:start="25:21" pos:end="25:35"><call pos:start="25:21" pos:end="25:35"><name pos:start="25:21" pos:end="25:28">get_bits</name><argument_list pos:start="25:29" pos:end="25:35">(<argument pos:start="25:30" pos:end="25:31"><expr pos:start="25:30" pos:end="25:31"><name pos:start="25:30" pos:end="25:31">gb</name></expr></argument>, <argument pos:start="25:34" pos:end="25:34"><expr pos:start="25:34" pos:end="25:34"><literal type="number" pos:start="25:34" pos:end="25:34">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:60"><decl pos:start="27:9" pos:end="27:59"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:16">gain</name> <init pos:start="27:18" pos:end="27:59">= <expr pos:start="27:20" pos:end="27:59"><ternary pos:start="27:20" pos:end="27:59"><condition pos:start="27:20" pos:end="27:34"><expr pos:start="27:20" pos:end="27:32"><call pos:start="27:20" pos:end="27:32"><name pos:start="27:20" pos:end="27:28">get_bits1</name><argument_list pos:start="27:29" pos:end="27:32">(<argument pos:start="27:30" pos:end="27:31"><expr pos:start="27:30" pos:end="27:31"><name pos:start="27:30" pos:end="27:31">gb</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="27:36" pos:end="27:54"> <expr pos:start="27:36" pos:end="27:54"><call pos:start="27:36" pos:end="27:50"><name pos:start="27:36" pos:end="27:43">get_bits</name><argument_list pos:start="27:44" pos:end="27:50">(<argument pos:start="27:45" pos:end="27:46"><expr pos:start="27:45" pos:end="27:46"><name pos:start="27:45" pos:end="27:46">gb</name></expr></argument>, <argument pos:start="27:49" pos:end="27:49"><expr pos:start="27:49" pos:end="27:49"><literal type="number" pos:start="27:49" pos:end="27:49">4</literal></expr></argument>)</argument_list></call> <operator pos:start="27:52" pos:end="27:52">-</operator> <literal type="number" pos:start="27:54" pos:end="27:54">7</literal></expr> </then><else pos:start="27:56" pos:end="27:59">: <expr pos:start="27:58" pos:end="27:59"><operator pos:start="27:58" pos:end="27:58">-</operator><literal type="number" pos:start="27:59" pos:end="27:59">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <while pos:start="31:9" pos:end="33:33">while <condition pos:start="31:15" pos:end="31:26">(<expr pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:16">i</name> <operator pos:start="31:18" pos:end="31:19">&lt;=</operator> <name pos:start="31:21" pos:end="31:25">index</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:33"><block_content pos:start="33:13" pos:end="33:33">

            <expr_stmt pos:start="33:13" pos:end="33:33"><expr pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:20">gaininfo</name><index pos:start="33:21" pos:end="33:25">[<expr pos:start="33:22" pos:end="33:24"><name pos:start="33:22" pos:end="33:22">i</name><operator pos:start="33:23" pos:end="33:24">++</operator></expr>]</index></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <name pos:start="33:29" pos:end="33:32">gain</name></expr>;</expr_stmt></block_content></block></while>

    </block_content>}</block></while>

    <while pos:start="37:5" pos:end="39:26">while <condition pos:start="37:11" pos:end="37:18">(<expr pos:start="37:12" pos:end="37:17"><name pos:start="37:12" pos:end="37:12">i</name> <operator pos:start="37:14" pos:end="37:15">&lt;=</operator> <literal type="number" pos:start="37:17" pos:end="37:17">8</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:26"><block_content pos:start="39:9" pos:end="39:26">

        <expr_stmt pos:start="39:9" pos:end="39:26"><expr pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:16">gaininfo</name><index pos:start="39:17" pos:end="39:21">[<expr pos:start="39:18" pos:end="39:20"><name pos:start="39:18" pos:end="39:18">i</name><operator pos:start="39:19" pos:end="39:20">++</operator></expr>]</index></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr>;</expr_stmt></block_content></block></while>

</block_content>}</block></function>
</unit>
