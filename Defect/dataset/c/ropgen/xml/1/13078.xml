<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13078.c" pos:tabs="8"><function pos:start="1:1" pos:end="104:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">open_f</name><parameter_list pos:start="1:18" pos:end="1:62">(<parameter pos:start="1:19" pos:end="1:38"><decl pos:start="1:19" pos:end="1:38"><type pos:start="1:19" pos:end="1:38"><name pos:start="1:19" pos:end="1:34">BlockDriverState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">bs</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:48"><decl pos:start="1:41" pos:end="1:48"><type pos:start="1:41" pos:end="1:48"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:48">argc</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:61"><decl pos:start="1:51" pos:end="1:61"><type pos:start="1:51" pos:end="1:61"><name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier><modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">argv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="104:1">{<block_content pos:start="5:5" pos:end="102:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">flags</name> <init pos:start="5:15" pos:end="5:17">= <expr pos:start="5:17" pos:end="5:17"><literal type="number" pos:start="5:17" pos:end="5:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">readonly</name> <init pos:start="7:18" pos:end="7:20">= <expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">growable</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">QemuOpts</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:19">qopts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">QDict</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:15">opts</name></decl>;</decl_stmt>



    <while pos:start="19:5" pos:end="69:5">while <condition pos:start="19:11" pos:end="19:53">(<expr pos:start="19:12" pos:end="19:52"><operator pos:start="19:12" pos:end="19:12">(</operator><name pos:start="19:13" pos:end="19:13">c</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:44"><name pos:start="19:17" pos:end="19:22">getopt</name><argument_list pos:start="19:23" pos:end="19:44">(<argument pos:start="19:24" pos:end="19:27"><expr pos:start="19:24" pos:end="19:27"><name pos:start="19:24" pos:end="19:27">argc</name></expr></argument>, <argument pos:start="19:30" pos:end="19:33"><expr pos:start="19:30" pos:end="19:33"><name pos:start="19:30" pos:end="19:33">argv</name></expr></argument>, <argument pos:start="19:36" pos:end="19:43"><expr pos:start="19:36" pos:end="19:43"><literal type="string" pos:start="19:36" pos:end="19:43">"snrgo:"</literal></expr></argument>)</argument_list></call><operator pos:start="19:45" pos:end="19:45">)</operator> <operator pos:start="19:47" pos:end="19:48">!=</operator> <name pos:start="19:50" pos:end="19:52">EOF</name></expr>)</condition> <block pos:start="19:55" pos:end="69:5">{<block_content pos:start="21:9" pos:end="67:9">

        <switch pos:start="21:9" pos:end="67:9">switch <condition pos:start="21:16" pos:end="21:18">(<expr pos:start="21:17" pos:end="21:17"><name pos:start="21:17" pos:end="21:17">c</name></expr>)</condition> <block pos:start="21:20" pos:end="67:9">{<block_content pos:start="23:9" pos:end="65:51">

        <case pos:start="23:9" pos:end="23:17">case <expr pos:start="23:14" pos:end="23:16"><literal type="char" pos:start="23:14" pos:end="23:16">'s'</literal></expr>:</case>

            <expr_stmt pos:start="25:13" pos:end="25:37"><expr pos:start="25:13" pos:end="25:36"><name pos:start="25:13" pos:end="25:17">flags</name> <operator pos:start="25:19" pos:end="25:20">|=</operator> <name pos:start="25:22" pos:end="25:36">BDRV_O_SNAPSHOT</name></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        <case pos:start="29:9" pos:end="29:17">case <expr pos:start="29:14" pos:end="29:16"><literal type="char" pos:start="29:14" pos:end="29:16">'n'</literal></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:54"><expr pos:start="31:13" pos:end="31:53"><name pos:start="31:13" pos:end="31:17">flags</name> <operator pos:start="31:19" pos:end="31:20">|=</operator> <name pos:start="31:22" pos:end="31:35">BDRV_O_NOCACHE</name> <operator pos:start="31:37" pos:end="31:37">|</operator> <name pos:start="31:39" pos:end="31:53">BDRV_O_CACHE_WB</name></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        <case pos:start="35:9" pos:end="35:17">case <expr pos:start="35:14" pos:end="35:16"><literal type="char" pos:start="35:14" pos:end="35:16">'r'</literal></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:25"><expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:20">readonly</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <literal type="number" pos:start="37:24" pos:end="37:24">1</literal></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:17">case <expr pos:start="41:14" pos:end="41:16"><literal type="char" pos:start="41:14" pos:end="41:16">'g'</literal></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:25"><expr pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:20">growable</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <literal type="number" pos:start="43:24" pos:end="43:24">1</literal></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        <case pos:start="47:9" pos:end="47:17">case <expr pos:start="47:14" pos:end="47:16"><literal type="char" pos:start="47:14" pos:end="47:16">'o'</literal></expr>:</case>

            <if_stmt pos:start="49:13" pos:end="57:13"><if pos:start="49:13" pos:end="57:13">if <condition pos:start="49:16" pos:end="49:57">(<expr pos:start="49:17" pos:end="49:56"><operator pos:start="49:17" pos:end="49:17">!</operator><call pos:start="49:18" pos:end="49:56"><name pos:start="49:18" pos:end="49:32">qemu_opts_parse</name><argument_list pos:start="49:33" pos:end="49:56">(<argument pos:start="49:34" pos:end="49:44"><expr pos:start="49:34" pos:end="49:44"><operator pos:start="49:34" pos:end="49:34">&amp;</operator><name pos:start="49:35" pos:end="49:44">empty_opts</name></expr></argument>, <argument pos:start="49:47" pos:end="49:52"><expr pos:start="49:47" pos:end="49:52"><name pos:start="49:47" pos:end="49:52">optarg</name></expr></argument>, <argument pos:start="49:55" pos:end="49:55"><expr pos:start="49:55" pos:end="49:55"><literal type="number" pos:start="49:55" pos:end="49:55">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:59" pos:end="57:13">{<block_content pos:start="51:17" pos:end="55:25">

                <expr_stmt pos:start="51:17" pos:end="51:70"><expr pos:start="51:17" pos:end="51:69"><call pos:start="51:17" pos:end="51:69"><name pos:start="51:17" pos:end="51:22">printf</name><argument_list pos:start="51:23" pos:end="51:69">(<argument pos:start="51:24" pos:end="51:60"><expr pos:start="51:24" pos:end="51:60"><literal type="string" pos:start="51:24" pos:end="51:60">"could not parse option list -- %s\n"</literal></expr></argument>, <argument pos:start="51:63" pos:end="51:68"><expr pos:start="51:63" pos:end="51:68"><name pos:start="51:63" pos:end="51:68">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:45"><expr pos:start="53:17" pos:end="53:44"><call pos:start="53:17" pos:end="53:44"><name pos:start="53:17" pos:end="53:31">qemu_opts_reset</name><argument_list pos:start="53:32" pos:end="53:44">(<argument pos:start="53:33" pos:end="53:43"><expr pos:start="53:33" pos:end="53:43"><operator pos:start="53:33" pos:end="53:33">&amp;</operator><name pos:start="53:34" pos:end="53:43">empty_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="55:17" pos:end="55:25">return <expr pos:start="55:24" pos:end="55:24"><literal type="number" pos:start="55:24" pos:end="55:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>

        <default pos:start="61:9" pos:end="61:16">default:</default>

            <expr_stmt pos:start="63:13" pos:end="63:41"><expr pos:start="63:13" pos:end="63:40"><call pos:start="63:13" pos:end="63:40"><name pos:start="63:13" pos:end="63:27">qemu_opts_reset</name><argument_list pos:start="63:28" pos:end="63:40">(<argument pos:start="63:29" pos:end="63:39"><expr pos:start="63:29" pos:end="63:39"><operator pos:start="63:29" pos:end="63:29">&amp;</operator><name pos:start="63:30" pos:end="63:39">empty_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:51">return <expr pos:start="65:20" pos:end="65:50"><call pos:start="65:20" pos:end="65:50"><name pos:start="65:20" pos:end="65:39">qemuio_command_usage</name><argument_list pos:start="65:40" pos:end="65:50">(<argument pos:start="65:41" pos:end="65:49"><expr pos:start="65:41" pos:end="65:49"><operator pos:start="65:41" pos:end="65:41">&amp;</operator><name pos:start="65:42" pos:end="65:49">open_cmd</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></while>



    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:18">(<expr pos:start="73:9" pos:end="73:17"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:17">readonly</name></expr>)</condition> <block pos:start="73:20" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:29">

        <expr_stmt pos:start="75:9" pos:end="75:29"><expr pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:13">flags</name> <operator pos:start="75:15" pos:end="75:16">|=</operator> <name pos:start="75:18" pos:end="75:28">BDRV_O_RDWR</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:46"><expr pos:start="81:5" pos:end="81:45"><name pos:start="81:5" pos:end="81:9">qopts</name> <operator pos:start="81:11" pos:end="81:11">=</operator> <call pos:start="81:13" pos:end="81:45"><name pos:start="81:13" pos:end="81:26">qemu_opts_find</name><argument_list pos:start="81:27" pos:end="81:45">(<argument pos:start="81:28" pos:end="81:38"><expr pos:start="81:28" pos:end="81:38"><operator pos:start="81:28" pos:end="81:28">&amp;</operator><name pos:start="81:29" pos:end="81:38">empty_opts</name></expr></argument>, <argument pos:start="81:41" pos:end="81:44"><expr pos:start="81:41" pos:end="81:44"><name pos:start="81:41" pos:end="81:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:58"><expr pos:start="83:5" pos:end="83:57"><name pos:start="83:5" pos:end="83:8">opts</name> <operator pos:start="83:10" pos:end="83:10">=</operator> <ternary pos:start="83:12" pos:end="83:57"><condition pos:start="83:12" pos:end="83:18"><expr pos:start="83:12" pos:end="83:16"><name pos:start="83:12" pos:end="83:16">qopts</name></expr> ?</condition><then pos:start="83:20" pos:end="83:50"> <expr pos:start="83:20" pos:end="83:50"><call pos:start="83:20" pos:end="83:50"><name pos:start="83:20" pos:end="83:37">qemu_opts_to_qdict</name><argument_list pos:start="83:38" pos:end="83:50">(<argument pos:start="83:39" pos:end="83:43"><expr pos:start="83:39" pos:end="83:43"><name pos:start="83:39" pos:end="83:43">qopts</name></expr></argument>, <argument pos:start="83:46" pos:end="83:49"><expr pos:start="83:46" pos:end="83:49"><name pos:start="83:46" pos:end="83:49">NULL</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="83:52" pos:end="83:57">: <expr pos:start="83:54" pos:end="83:57"><name pos:start="83:54" pos:end="83:57">NULL</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:33"><expr pos:start="85:5" pos:end="85:32"><call pos:start="85:5" pos:end="85:32"><name pos:start="85:5" pos:end="85:19">qemu_opts_reset</name><argument_list pos:start="85:20" pos:end="85:32">(<argument pos:start="85:21" pos:end="85:31"><expr pos:start="85:21" pos:end="85:31"><operator pos:start="85:21" pos:end="85:21">&amp;</operator><name pos:start="85:22" pos:end="85:31">empty_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="89:5" pos:end="102:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:27">(<expr pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:14">optind</name> <operator pos:start="89:16" pos:end="89:17">==</operator> <name pos:start="89:19" pos:end="89:22">argc</name> <operator pos:start="89:24" pos:end="89:24">-</operator> <literal type="number" pos:start="89:26" pos:end="89:26">1</literal></expr>)</condition> <block pos:start="89:29" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:61">

        <return pos:start="91:9" pos:end="91:61">return <expr pos:start="91:16" pos:end="91:60"><call pos:start="91:16" pos:end="91:60"><name pos:start="91:16" pos:end="91:23">openfile</name><argument_list pos:start="91:24" pos:end="91:60">(<argument pos:start="91:25" pos:end="91:36"><expr pos:start="91:25" pos:end="91:36"><name pos:start="91:25" pos:end="91:36"><name pos:start="91:25" pos:end="91:28">argv</name><index pos:start="91:29" pos:end="91:36">[<expr pos:start="91:30" pos:end="91:35"><name pos:start="91:30" pos:end="91:35">optind</name></expr>]</index></name></expr></argument>, <argument pos:start="91:39" pos:end="91:43"><expr pos:start="91:39" pos:end="91:43"><name pos:start="91:39" pos:end="91:43">flags</name></expr></argument>, <argument pos:start="91:46" pos:end="91:53"><expr pos:start="91:46" pos:end="91:53"><name pos:start="91:46" pos:end="91:53">growable</name></expr></argument>, <argument pos:start="91:56" pos:end="91:59"><expr pos:start="91:56" pos:end="91:59"><name pos:start="91:56" pos:end="91:59">opts</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="93:7" pos:end="97:5">else if <condition pos:start="93:15" pos:end="93:30">(<expr pos:start="93:16" pos:end="93:29"><name pos:start="93:16" pos:end="93:21">optind</name> <operator pos:start="93:23" pos:end="93:24">==</operator> <name pos:start="93:26" pos:end="93:29">argc</name></expr>)</condition> <block pos:start="93:32" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:53">

        <return pos:start="95:9" pos:end="95:53">return <expr pos:start="95:16" pos:end="95:52"><call pos:start="95:16" pos:end="95:52"><name pos:start="95:16" pos:end="95:23">openfile</name><argument_list pos:start="95:24" pos:end="95:52">(<argument pos:start="95:25" pos:end="95:28"><expr pos:start="95:25" pos:end="95:28"><name pos:start="95:25" pos:end="95:28">NULL</name></expr></argument>, <argument pos:start="95:31" pos:end="95:35"><expr pos:start="95:31" pos:end="95:35"><name pos:start="95:31" pos:end="95:35">flags</name></expr></argument>, <argument pos:start="95:38" pos:end="95:45"><expr pos:start="95:38" pos:end="95:45"><name pos:start="95:38" pos:end="95:45">growable</name></expr></argument>, <argument pos:start="95:48" pos:end="95:51"><expr pos:start="95:48" pos:end="95:51"><name pos:start="95:48" pos:end="95:51">opts</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="102:5">else <block pos:start="97:12" pos:end="102:5">{<block_content pos:start="100:9" pos:end="100:47">


        <return pos:start="100:9" pos:end="100:47">return <expr pos:start="100:16" pos:end="100:46"><call pos:start="100:16" pos:end="100:46"><name pos:start="100:16" pos:end="100:35">qemuio_command_usage</name><argument_list pos:start="100:36" pos:end="100:46">(<argument pos:start="100:37" pos:end="100:45"><expr pos:start="100:37" pos:end="100:45"><operator pos:start="100:37" pos:end="100:37">&amp;</operator><name pos:start="100:38" pos:end="100:45">open_cmd</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function></unit>
