<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5940.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">ff_dca_convert_bitstream</name><parameter_list pos:start="1:29" pos:end="3:42">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><specifier pos:start="1:30" pos:end="1:34">const</specifier> <name pos:start="1:36" pos:end="1:42">uint8_t</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">src</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:61">src_size</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:75"><decl pos:start="1:64" pos:end="1:75"><type pos:start="1:64" pos:end="1:75"><name pos:start="1:64" pos:end="1:70">uint8_t</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:75">dst</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:41">max_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="67:1">{<block_content pos:start="7:5" pos:end="65:5">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">mrk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:20"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">uint16_t</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:24">ssrc</name> <init pos:start="11:26" pos:end="11:49">= <expr pos:start="11:28" pos:end="11:49"><operator pos:start="11:28" pos:end="11:28">(</operator><specifier pos:start="11:29" pos:end="11:33">const</specifier> <name pos:start="11:35" pos:end="11:42">uint16_t</name> <operator pos:start="11:44" pos:end="11:44">*</operator><operator pos:start="11:45" pos:end="11:45">)</operator> <name pos:start="11:47" pos:end="11:49">src</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint16_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:18">sdst</name> <init pos:start="13:20" pos:end="13:37">= <expr pos:start="13:22" pos:end="13:37"><operator pos:start="13:22" pos:end="13:22">(</operator><name pos:start="13:23" pos:end="13:30">uint16_t</name> <operator pos:start="13:32" pos:end="13:32">*</operator><operator pos:start="13:33" pos:end="13:33">)</operator> <name pos:start="13:35" pos:end="13:37">dst</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:17">PutBitContext</name></type> <name pos:start="15:19" pos:end="15:20">pb</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:28"><if pos:start="19:5" pos:end="21:28">if <condition pos:start="19:8" pos:end="19:50">(<expr pos:start="19:9" pos:end="19:49"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:17">unsigned</name><operator pos:start="19:18" pos:end="19:18">)</operator> <name pos:start="19:20" pos:end="19:27">src_size</name> <operator pos:start="19:29" pos:end="19:29">&gt;</operator> <operator pos:start="19:31" pos:end="19:31">(</operator><name pos:start="19:32" pos:end="19:39">unsigned</name><operator pos:start="19:40" pos:end="19:40">)</operator> <name pos:start="19:42" pos:end="19:49">max_size</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:28"><block_content pos:start="21:9" pos:end="21:28">

        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:16">src_size</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:27">max_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:7">mrk</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:22"><name pos:start="25:11" pos:end="25:17">AV_RB32</name><argument_list pos:start="25:18" pos:end="25:22">(<argument pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="27:5" pos:end="65:5">switch <condition pos:start="27:12" pos:end="27:16">(<expr pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">mrk</name></expr>)</condition> <block pos:start="27:18" pos:end="65:5">{<block_content pos:start="29:5" pos:end="63:35">

    <case pos:start="29:5" pos:end="29:30">case <expr pos:start="29:10" pos:end="29:29"><name pos:start="29:10" pos:end="29:29">DCA_SYNCWORD_CORE_BE</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><call pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:14">memcpy</name><argument_list pos:start="31:15" pos:end="31:34">(<argument pos:start="31:16" pos:end="31:18"><expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">dst</name></expr></argument>, <argument pos:start="31:21" pos:end="31:23"><expr pos:start="31:21" pos:end="31:23"><name pos:start="31:21" pos:end="31:23">src</name></expr></argument>, <argument pos:start="31:26" pos:end="31:33"><expr pos:start="31:26" pos:end="31:33"><name pos:start="31:26" pos:end="31:33">src_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:24">return <expr pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:23">src_size</name></expr>;</return>

    <case pos:start="35:5" pos:end="35:30">case <expr pos:start="35:10" pos:end="35:29"><name pos:start="35:10" pos:end="35:29">DCA_SYNCWORD_CORE_LE</name></expr>:</case>

        <for pos:start="37:9" pos:end="39:42">for <control pos:start="37:13" pos:end="37:49">(<init pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:18"><name pos:start="37:14" pos:end="37:14">i</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</init> <condition pos:start="37:21" pos:end="37:44"><expr pos:start="37:21" pos:end="37:43"><name pos:start="37:21" pos:end="37:40"><name pos:start="37:21" pos:end="37:21">i</name> <argument_list type="generic" pos:start="37:23" pos:end="37:40">&lt; <argument pos:start="37:25" pos:end="37:38"><expr pos:start="37:25" pos:end="37:38"><operator pos:start="37:25" pos:end="37:25">(</operator><name pos:start="37:26" pos:end="37:33">src_size</name> <operator pos:start="37:35" pos:end="37:35">+</operator> <literal type="number" pos:start="37:37" pos:end="37:37">1</literal><operator pos:start="37:38" pos:end="37:38">)</operator></expr></argument> &gt;</argument_list></name><operator pos:start="37:41" pos:end="37:41">&gt;</operator> <literal type="number" pos:start="37:43" pos:end="37:43">1</literal></expr>;</condition> <incr pos:start="37:46" pos:end="37:48"><expr pos:start="37:46" pos:end="37:48"><name pos:start="37:46" pos:end="37:46">i</name><operator pos:start="37:47" pos:end="37:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:13" pos:end="39:42"><block_content pos:start="39:13" pos:end="39:42">

            <expr_stmt pos:start="39:13" pos:end="39:42"><expr pos:start="39:13" pos:end="39:41"><operator pos:start="39:13" pos:end="39:13">*</operator><name pos:start="39:14" pos:end="39:17">sdst</name><operator pos:start="39:18" pos:end="39:19">++</operator> <operator pos:start="39:21" pos:end="39:21">=</operator> <call pos:start="39:23" pos:end="39:41"><name pos:start="39:23" pos:end="39:32">av_bswap16</name><argument_list pos:start="39:33" pos:end="39:41">(<argument pos:start="39:34" pos:end="39:40"><expr pos:start="39:34" pos:end="39:40"><operator pos:start="39:34" pos:end="39:34">*</operator><name pos:start="39:35" pos:end="39:38">ssrc</name><operator pos:start="39:39" pos:end="39:40">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <return pos:start="41:9" pos:end="41:24">return <expr pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:23">src_size</name></expr>;</return>

    <case pos:start="43:5" pos:end="43:34">case <expr pos:start="43:10" pos:end="43:33"><name pos:start="43:10" pos:end="43:33">DCA_SYNCWORD_CORE_14B_BE</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:34">case <expr pos:start="45:10" pos:end="45:33"><name pos:start="45:10" pos:end="45:33">DCA_SYNCWORD_CORE_14B_LE</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:42"><expr pos:start="47:9" pos:end="47:41"><call pos:start="47:9" pos:end="47:41"><name pos:start="47:9" pos:end="47:21">init_put_bits</name><argument_list pos:start="47:22" pos:end="47:41">(<argument pos:start="47:23" pos:end="47:25"><expr pos:start="47:23" pos:end="47:25"><operator pos:start="47:23" pos:end="47:23">&amp;</operator><name pos:start="47:24" pos:end="47:25">pb</name></expr></argument>, <argument pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:30">dst</name></expr></argument>, <argument pos:start="47:33" pos:end="47:40"><expr pos:start="47:33" pos:end="47:40"><name pos:start="47:33" pos:end="47:40">max_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="49:9" pos:end="55:9">for <control pos:start="49:13" pos:end="49:59">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">i</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:44"><expr pos:start="49:21" pos:end="49:43"><name pos:start="49:21" pos:end="49:40"><name pos:start="49:21" pos:end="49:21">i</name> <argument_list type="generic" pos:start="49:23" pos:end="49:40">&lt; <argument pos:start="49:25" pos:end="49:38"><expr pos:start="49:25" pos:end="49:38"><operator pos:start="49:25" pos:end="49:25">(</operator><name pos:start="49:26" pos:end="49:33">src_size</name> <operator pos:start="49:35" pos:end="49:35">+</operator> <literal type="number" pos:start="49:37" pos:end="49:37">1</literal><operator pos:start="49:38" pos:end="49:38">)</operator></expr></argument> &gt;</argument_list></name><operator pos:start="49:41" pos:end="49:41">&gt;</operator> <literal type="number" pos:start="49:43" pos:end="49:43">1</literal></expr>;</condition> <incr pos:start="49:46" pos:end="49:58"><expr pos:start="49:46" pos:end="49:48"><name pos:start="49:46" pos:end="49:46">i</name><operator pos:start="49:47" pos:end="49:48">++</operator></expr><operator pos:start="49:49" pos:end="49:49">,</operator> <expr pos:start="49:51" pos:end="49:58"><name pos:start="49:51" pos:end="49:53">src</name> <operator pos:start="49:55" pos:end="49:56">+=</operator> <literal type="number" pos:start="49:58" pos:end="49:58">2</literal></expr></incr>)</control> <block pos:start="49:61" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:35">

            <expr_stmt pos:start="51:13" pos:end="51:93"><expr pos:start="51:13" pos:end="51:92"><name pos:start="51:13" pos:end="51:15">tmp</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <operator pos:start="51:19" pos:end="51:19">(</operator><ternary pos:start="51:20" pos:end="51:82"><condition pos:start="51:20" pos:end="51:54"><expr pos:start="51:20" pos:end="51:52"><operator pos:start="51:20" pos:end="51:20">(</operator><name pos:start="51:21" pos:end="51:23">mrk</name> <operator pos:start="51:25" pos:end="51:26">==</operator> <name pos:start="51:28" pos:end="51:51">DCA_SYNCWORD_CORE_14B_BE</name><operator pos:start="51:52" pos:end="51:52">)</operator></expr> ?</condition><then pos:start="51:56" pos:end="51:67"> <expr pos:start="51:56" pos:end="51:67"><call pos:start="51:56" pos:end="51:67"><name pos:start="51:56" pos:end="51:62">AV_RB16</name><argument_list pos:start="51:63" pos:end="51:67">(<argument pos:start="51:64" pos:end="51:66"><expr pos:start="51:64" pos:end="51:66"><name pos:start="51:64" pos:end="51:66">src</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="51:69" pos:end="51:82">: <expr pos:start="51:71" pos:end="51:82"><call pos:start="51:71" pos:end="51:82"><name pos:start="51:71" pos:end="51:77">AV_RL16</name><argument_list pos:start="51:78" pos:end="51:82">(<argument pos:start="51:79" pos:end="51:81"><expr pos:start="51:79" pos:end="51:81"><name pos:start="51:79" pos:end="51:81">src</name></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="51:83" pos:end="51:83">)</operator> <operator pos:start="51:85" pos:end="51:85">&amp;</operator> <literal type="number" pos:start="51:87" pos:end="51:92">0x3FFF</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:35"><expr pos:start="53:13" pos:end="53:34"><call pos:start="53:13" pos:end="53:34"><name pos:start="53:13" pos:end="53:20">put_bits</name><argument_list pos:start="53:21" pos:end="53:34">(<argument pos:start="53:22" pos:end="53:24"><expr pos:start="53:22" pos:end="53:24"><operator pos:start="53:22" pos:end="53:22">&amp;</operator><name pos:start="53:23" pos:end="53:24">pb</name></expr></argument>, <argument pos:start="53:27" pos:end="53:28"><expr pos:start="53:27" pos:end="53:28"><literal type="number" pos:start="53:27" pos:end="53:28">14</literal></expr></argument>, <argument pos:start="53:31" pos:end="53:33"><expr pos:start="53:31" pos:end="53:33"><name pos:start="53:31" pos:end="53:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><call pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:22">flush_put_bits</name><argument_list pos:start="57:23" pos:end="57:27">(<argument pos:start="57:24" pos:end="57:26"><expr pos:start="57:24" pos:end="57:26"><operator pos:start="57:24" pos:end="57:24">&amp;</operator><name pos:start="57:25" pos:end="57:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:46">return <expr pos:start="59:16" pos:end="59:45"><operator pos:start="59:16" pos:end="59:16">(</operator><call pos:start="59:17" pos:end="59:35"><name pos:start="59:17" pos:end="59:30">put_bits_count</name><argument_list pos:start="59:31" pos:end="59:35">(<argument pos:start="59:32" pos:end="59:34"><expr pos:start="59:32" pos:end="59:34"><operator pos:start="59:32" pos:end="59:32">&amp;</operator><name pos:start="59:33" pos:end="59:34">pb</name></expr></argument>)</argument_list></call> <operator pos:start="59:37" pos:end="59:37">+</operator> <literal type="number" pos:start="59:39" pos:end="59:39">7</literal><operator pos:start="59:40" pos:end="59:40">)</operator> <operator pos:start="59:42" pos:end="59:43">&gt;&gt;</operator> <literal type="number" pos:start="59:45" pos:end="59:45">3</literal></expr>;</return>

    <default pos:start="61:5" pos:end="61:12">default:</default>

        <return pos:start="63:9" pos:end="63:35">return <expr pos:start="63:16" pos:end="63:34"><name pos:start="63:16" pos:end="63:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
