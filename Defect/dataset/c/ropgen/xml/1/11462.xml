<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11462.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">rv10_decode_init</name><parameter_list pos:start="1:28" pos:end="1:50">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:14"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:19">done</name><init pos:start="7:20" pos:end="7:21">=<expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><call pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:23">MPV_decode_defaults</name><argument_list pos:start="11:24" pos:end="11:26">(<argument pos:start="11:25" pos:end="11:25"><expr pos:start="11:25" pos:end="11:25"><name pos:start="11:25" pos:end="11:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:12">avctx</name></name><operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:19">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:17">out_format</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:28">FMT_H263</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:15">codec_id</name></name><operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:32"><name pos:start="19:18" pos:end="19:22">avctx</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:32">codec_id</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:12">width</name></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:27"><name pos:start="23:16" pos:end="23:20">avctx</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:27">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:13">height</name></name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:29"><name pos:start="25:17" pos:end="25:21">avctx</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:29">height</name></name></expr>;</expr_stmt>



    <switch pos:start="29:5" pos:end="103:5">switch<condition pos:start="29:11" pos:end="29:25">(<expr pos:start="29:12" pos:end="29:24"><name pos:start="29:12" pos:end="29:24"><name pos:start="29:12" pos:end="29:16">avctx</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:24">sub_id</name></name></expr>)</condition><block pos:start="29:26" pos:end="103:5">{<block_content pos:start="31:5" pos:end="101:77">

    <case pos:start="31:5" pos:end="31:20">case <expr pos:start="31:10" pos:end="31:19"><literal type="number" pos:start="31:10" pos:end="31:19">0x10000000</literal></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:27"><expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:23">rv10_version</name></name><operator pos:start="33:24" pos:end="33:24">=</operator> <literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:28">h263_long_vectors</name></name><operator pos:start="35:29" pos:end="35:29">=</operator><literal type="number" pos:start="35:30" pos:end="35:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:20">low_delay</name></name><operator pos:start="37:21" pos:end="37:21">=</operator><literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:20">case <expr pos:start="41:10" pos:end="41:19"><literal type="number" pos:start="41:10" pos:end="41:19">0x10002000</literal></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:27"><expr pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:23">rv10_version</name></name><operator pos:start="43:24" pos:end="43:24">=</operator> <literal type="number" pos:start="43:26" pos:end="43:26">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:28">h263_long_vectors</name></name><operator pos:start="45:29" pos:end="45:29">=</operator><literal type="number" pos:start="45:30" pos:end="45:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:23"><expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:20">low_delay</name></name><operator pos:start="47:21" pos:end="47:21">=</operator><literal type="number" pos:start="47:22" pos:end="47:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:18"><expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:15">obmc</name></name><operator pos:start="49:16" pos:end="49:16">=</operator><literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:20">case <expr pos:start="53:10" pos:end="53:19"><literal type="number" pos:start="53:10" pos:end="53:19">0x10003000</literal></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:27"><expr pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:23">rv10_version</name></name><operator pos:start="55:24" pos:end="55:24">=</operator> <literal type="number" pos:start="55:26" pos:end="55:26">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:28">h263_long_vectors</name></name><operator pos:start="57:29" pos:end="57:29">=</operator><literal type="number" pos:start="57:30" pos:end="57:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:23"><expr pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:20">low_delay</name></name><operator pos:start="59:21" pos:end="59:21">=</operator><literal type="number" pos:start="59:22" pos:end="59:22">1</literal></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:20">case <expr pos:start="63:10" pos:end="63:19"><literal type="number" pos:start="63:10" pos:end="63:19">0x10003001</literal></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:27"><expr pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:23">rv10_version</name></name><operator pos:start="65:24" pos:end="65:24">=</operator> <literal type="number" pos:start="65:26" pos:end="65:26">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:31"><expr pos:start="67:9" pos:end="67:30"><name pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:28">h263_long_vectors</name></name><operator pos:start="67:29" pos:end="67:29">=</operator><literal type="number" pos:start="67:30" pos:end="67:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:23"><expr pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:20">low_delay</name></name><operator pos:start="69:21" pos:end="69:21">=</operator><literal type="number" pos:start="69:22" pos:end="69:22">1</literal></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:20">case <expr pos:start="73:10" pos:end="73:19"><literal type="number" pos:start="73:10" pos:end="73:19">0x20001000</literal></expr>:</case>

    <case pos:start="75:5" pos:end="75:20">case <expr pos:start="75:10" pos:end="75:19"><literal type="number" pos:start="75:10" pos:end="75:19">0x20100001</literal></expr>:</case>

    <case pos:start="77:5" pos:end="77:20">case <expr pos:start="77:10" pos:end="77:19"><literal type="number" pos:start="77:10" pos:end="77:19">0x20101001</literal></expr>:</case>

    <case pos:start="79:5" pos:end="79:20">case <expr pos:start="79:10" pos:end="79:19"><literal type="number" pos:start="79:10" pos:end="79:19">0x20103001</literal></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:20">low_delay</name></name><operator pos:start="81:21" pos:end="81:21">=</operator><literal type="number" pos:start="81:22" pos:end="81:22">1</literal></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:20">case <expr pos:start="85:10" pos:end="85:19"><literal type="number" pos:start="85:10" pos:end="85:19">0x20200002</literal></expr>:</case>

    <case pos:start="87:5" pos:end="87:20">case <expr pos:start="87:10" pos:end="87:19"><literal type="number" pos:start="87:10" pos:end="87:19">0x20201002</literal></expr>:</case>

    <case pos:start="89:5" pos:end="89:20">case <expr pos:start="89:10" pos:end="89:19"><literal type="number" pos:start="89:10" pos:end="89:19">0x30202002</literal></expr>:</case>

    <case pos:start="91:5" pos:end="91:20">case <expr pos:start="91:10" pos:end="91:19"><literal type="number" pos:start="91:10" pos:end="91:19">0x30203002</literal></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:23"><expr pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:20"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:20">low_delay</name></name><operator pos:start="93:21" pos:end="93:21">=</operator><literal type="number" pos:start="93:22" pos:end="93:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:33"><expr pos:start="95:9" pos:end="95:32"><name pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:16">avctx</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:30">has_b_frames</name></name><operator pos:start="95:31" pos:end="95:31">=</operator><literal type="number" pos:start="95:32" pos:end="95:32">1</literal></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <default pos:start="99:5" pos:end="99:12">default:</default>

        <expr_stmt pos:start="101:9" pos:end="101:77"><expr pos:start="101:9" pos:end="101:76"><call pos:start="101:9" pos:end="101:76"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:76">(<argument pos:start="101:16" pos:end="101:23"><expr pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:16">s</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:23">avctx</name></name></expr></argument>, <argument pos:start="101:26" pos:end="101:37"><expr pos:start="101:26" pos:end="101:37"><name pos:start="101:26" pos:end="101:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:40" pos:end="101:60"><expr pos:start="101:40" pos:end="101:60"><literal type="string" pos:start="101:40" pos:end="101:60">"unknown header %X\n"</literal></expr></argument>, <argument pos:start="101:63" pos:end="101:75"><expr pos:start="101:63" pos:end="101:75"><name pos:start="101:63" pos:end="101:75"><name pos:start="101:63" pos:end="101:67">avctx</name><operator pos:start="101:68" pos:end="101:69">-&gt;</operator><name pos:start="101:70" pos:end="101:75">sub_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

<comment type="line" pos:start="105:1" pos:end="105:57">//av_log(avctx, AV_LOG_DEBUG, "ver:%X\n", avctx-&gt;sub_id);</comment>

    <if_stmt pos:start="107:5" pos:end="109:18"><if pos:start="107:5" pos:end="109:18">if <condition pos:start="107:8" pos:end="107:31">(<expr pos:start="107:9" pos:end="107:30"><call pos:start="107:9" pos:end="107:26"><name pos:start="107:9" pos:end="107:23">MPV_common_init</name><argument_list pos:start="107:24" pos:end="107:26">(<argument pos:start="107:25" pos:end="107:25"><expr pos:start="107:25" pos:end="107:25"><name pos:start="107:25" pos:end="107:25">s</name></expr></argument>)</argument_list></call> <operator pos:start="107:28" pos:end="107:28">&lt;</operator> <literal type="number" pos:start="107:30" pos:end="107:30">0</literal></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:18"><block_content pos:start="109:9" pos:end="109:18">

        <return pos:start="109:9" pos:end="109:18">return <expr pos:start="109:16" pos:end="109:17"><operator pos:start="109:16" pos:end="109:16">-</operator><literal type="number" pos:start="109:17" pos:end="109:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:28"><expr pos:start="113:5" pos:end="113:27"><call pos:start="113:5" pos:end="113:27"><name pos:start="113:5" pos:end="113:24">h263_decode_init_vlc</name><argument_list pos:start="113:25" pos:end="113:27">(<argument pos:start="113:26" pos:end="113:26"><expr pos:start="113:26" pos:end="113:26"><name pos:start="113:26" pos:end="113:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="117:5" pos:end="117:21">/* init rv vlc */</comment>

    <if_stmt pos:start="119:5" pos:end="135:5"><if pos:start="119:5" pos:end="135:5">if <condition pos:start="119:8" pos:end="119:14">(<expr pos:start="119:9" pos:end="119:13"><operator pos:start="119:9" pos:end="119:9">!</operator><name pos:start="119:10" pos:end="119:13">done</name></expr>)</condition> <block pos:start="119:16" pos:end="135:5">{<block_content pos:start="121:9" pos:end="133:17">

        <expr_stmt pos:start="121:9" pos:end="125:36"><expr pos:start="121:9" pos:end="125:35"><call pos:start="121:9" pos:end="125:35"><name pos:start="121:9" pos:end="121:16">init_vlc</name><argument_list pos:start="121:17" pos:end="125:35">(<argument pos:start="121:18" pos:end="121:27"><expr pos:start="121:18" pos:end="121:27"><operator pos:start="121:18" pos:end="121:18">&amp;</operator><name pos:start="121:19" pos:end="121:27">rv_dc_lum</name></expr></argument>, <argument pos:start="121:30" pos:end="121:40"><expr pos:start="121:30" pos:end="121:40"><name pos:start="121:30" pos:end="121:40">DC_VLC_BITS</name></expr></argument>, <argument pos:start="121:43" pos:end="121:45"><expr pos:start="121:43" pos:end="121:45"><literal type="number" pos:start="121:43" pos:end="121:45">256</literal></expr></argument>, 

                 <argument pos:start="123:18" pos:end="123:28"><expr pos:start="123:18" pos:end="123:28"><name pos:start="123:18" pos:end="123:28">rv_lum_bits</name></expr></argument>, <argument pos:start="123:31" pos:end="123:31"><expr pos:start="123:31" pos:end="123:31"><literal type="number" pos:start="123:31" pos:end="123:31">1</literal></expr></argument>, <argument pos:start="123:34" pos:end="123:34"><expr pos:start="123:34" pos:end="123:34"><literal type="number" pos:start="123:34" pos:end="123:34">1</literal></expr></argument>,

                 <argument pos:start="125:18" pos:end="125:28"><expr pos:start="125:18" pos:end="125:28"><name pos:start="125:18" pos:end="125:28">rv_lum_code</name></expr></argument>, <argument pos:start="125:31" pos:end="125:31"><expr pos:start="125:31" pos:end="125:31"><literal type="number" pos:start="125:31" pos:end="125:31">2</literal></expr></argument>, <argument pos:start="125:34" pos:end="125:34"><expr pos:start="125:34" pos:end="125:34"><literal type="number" pos:start="125:34" pos:end="125:34">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="131:38"><expr pos:start="127:9" pos:end="131:37"><call pos:start="127:9" pos:end="131:37"><name pos:start="127:9" pos:end="127:16">init_vlc</name><argument_list pos:start="127:17" pos:end="131:37">(<argument pos:start="127:18" pos:end="127:29"><expr pos:start="127:18" pos:end="127:29"><operator pos:start="127:18" pos:end="127:18">&amp;</operator><name pos:start="127:19" pos:end="127:29">rv_dc_chrom</name></expr></argument>, <argument pos:start="127:32" pos:end="127:42"><expr pos:start="127:32" pos:end="127:42"><name pos:start="127:32" pos:end="127:42">DC_VLC_BITS</name></expr></argument>, <argument pos:start="127:45" pos:end="127:47"><expr pos:start="127:45" pos:end="127:47"><literal type="number" pos:start="127:45" pos:end="127:47">256</literal></expr></argument>, 

                 <argument pos:start="129:18" pos:end="129:30"><expr pos:start="129:18" pos:end="129:30"><name pos:start="129:18" pos:end="129:30">rv_chrom_bits</name></expr></argument>, <argument pos:start="129:33" pos:end="129:33"><expr pos:start="129:33" pos:end="129:33"><literal type="number" pos:start="129:33" pos:end="129:33">1</literal></expr></argument>, <argument pos:start="129:36" pos:end="129:36"><expr pos:start="129:36" pos:end="129:36"><literal type="number" pos:start="129:36" pos:end="129:36">1</literal></expr></argument>,

                 <argument pos:start="131:18" pos:end="131:30"><expr pos:start="131:18" pos:end="131:30"><name pos:start="131:18" pos:end="131:30">rv_chrom_code</name></expr></argument>, <argument pos:start="131:33" pos:end="131:33"><expr pos:start="131:33" pos:end="131:33"><literal type="number" pos:start="131:33" pos:end="131:33">2</literal></expr></argument>, <argument pos:start="131:36" pos:end="131:36"><expr pos:start="131:36" pos:end="131:36"><literal type="number" pos:start="131:36" pos:end="131:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:17"><expr pos:start="133:9" pos:end="133:16"><name pos:start="133:9" pos:end="133:12">done</name> <operator pos:start="133:14" pos:end="133:14">=</operator> <literal type="number" pos:start="133:16" pos:end="133:16">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="139:5" pos:end="139:37"><expr pos:start="139:5" pos:end="139:36"><name pos:start="139:5" pos:end="139:18"><name pos:start="139:5" pos:end="139:9">avctx</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:18">pix_fmt</name></name> <operator pos:start="139:20" pos:end="139:20">=</operator> <name pos:start="139:22" pos:end="139:36">PIX_FMT_YUV420P</name></expr>;</expr_stmt>



    <return pos:start="143:5" pos:end="143:13">return <expr pos:start="143:12" pos:end="143:12"><literal type="number" pos:start="143:12" pos:end="143:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
