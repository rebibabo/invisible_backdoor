<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16291.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">av_fifo_generic_read</name><parameter_list pos:start="1:25" pos:end="1:100">(<parameter pos:start="1:26" pos:end="1:40"><decl pos:start="1:26" pos:end="1:40"><type pos:start="1:26" pos:end="1:40"><name pos:start="1:26" pos:end="1:37">AVFifoBuffer</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">f</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:54">buf_size</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:87"><function_decl pos:start="1:57" pos:end="1:87"><type pos:start="1:57" pos:end="1:60"><name pos:start="1:57" pos:end="1:60">void</name></type> (<modifier pos:start="1:63" pos:end="1:63">*</modifier><name pos:start="1:64" pos:end="1:67">func</name>)<parameter_list pos:start="1:69" pos:end="1:87">(<parameter pos:start="1:70" pos:end="1:74"><decl pos:start="1:70" pos:end="1:74"><type pos:start="1:70" pos:end="1:74"><name pos:start="1:70" pos:end="1:73">void</name><modifier pos:start="1:74" pos:end="1:74">*</modifier></type></decl></parameter>, <parameter pos:start="1:77" pos:end="1:81"><decl pos:start="1:77" pos:end="1:81"><type pos:start="1:77" pos:end="1:81"><name pos:start="1:77" pos:end="1:80">void</name><modifier pos:start="1:81" pos:end="1:81">*</modifier></type></decl></parameter>, <parameter pos:start="1:84" pos:end="1:86"><decl pos:start="1:84" pos:end="1:86"><type pos:start="1:84" pos:end="1:86"><name pos:start="1:84" pos:end="1:86">int</name></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter pos:start="1:90" pos:end="1:99"><decl pos:start="1:90" pos:end="1:99"><type pos:start="1:90" pos:end="1:99"><name pos:start="1:90" pos:end="1:93">void</name><modifier pos:start="1:94" pos:end="1:94">*</modifier></type> <name pos:start="1:96" pos:end="1:99">dest</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">size</name> <init pos:start="5:14" pos:end="5:30">= <expr pos:start="5:16" pos:end="5:30"><call pos:start="5:16" pos:end="5:30"><name pos:start="5:16" pos:end="5:27">av_fifo_size</name><argument_list pos:start="5:28" pos:end="5:30">(<argument pos:start="5:29" pos:end="5:29"><expr pos:start="5:29" pos:end="5:29"><name pos:start="5:29" pos:end="5:29">f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:18"><if pos:start="9:5" pos:end="11:18">if <condition pos:start="9:8" pos:end="9:24">(<expr pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:12">size</name> <operator pos:start="9:14" pos:end="9:14">&lt;</operator> <name pos:start="9:16" pos:end="9:23">buf_size</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:18"><block_content pos:start="11:9" pos:end="11:18">

        <return pos:start="11:9" pos:end="11:18">return <expr pos:start="11:16" pos:end="11:17"><operator pos:start="11:16" pos:end="11:16">-</operator><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <do pos:start="13:5" pos:end="31:27">do <block pos:start="13:8" pos:end="31:5">{<block_content pos:start="15:9" pos:end="29:24">

        <decl_stmt pos:start="15:9" pos:end="15:52"><decl pos:start="15:9" pos:end="15:51"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:15">len</name> <init pos:start="15:17" pos:end="15:51">= <expr pos:start="15:19" pos:end="15:51"><call pos:start="15:19" pos:end="15:51"><name pos:start="15:19" pos:end="15:23">FFMIN</name><argument_list pos:start="15:24" pos:end="15:51">(<argument pos:start="15:25" pos:end="15:40"><expr pos:start="15:25" pos:end="15:40"><name pos:start="15:25" pos:end="15:30"><name pos:start="15:25" pos:end="15:25">f</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:30">end</name></name> <operator pos:start="15:32" pos:end="15:32">-</operator> <name pos:start="15:34" pos:end="15:40"><name pos:start="15:34" pos:end="15:34">f</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:40">rptr</name></name></expr></argument>, <argument pos:start="15:43" pos:end="15:50"><expr pos:start="15:43" pos:end="15:50"><name pos:start="15:43" pos:end="15:50">buf_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="17:9" pos:end="25:9"><if pos:start="17:9" pos:end="17:42">if<condition pos:start="17:11" pos:end="17:16">(<expr pos:start="17:12" pos:end="17:15"><name pos:start="17:12" pos:end="17:15">func</name></expr>)</condition><block type="pseudo" pos:start="17:18" pos:end="17:42"><block_content pos:start="17:18" pos:end="17:42"> <expr_stmt pos:start="17:18" pos:end="17:42"><expr pos:start="17:18" pos:end="17:41"><call pos:start="17:18" pos:end="17:41"><name pos:start="17:18" pos:end="17:21">func</name><argument_list pos:start="17:22" pos:end="17:41">(<argument pos:start="17:23" pos:end="17:26"><expr pos:start="17:23" pos:end="17:26"><name pos:start="17:23" pos:end="17:26">dest</name></expr></argument>, <argument pos:start="17:29" pos:end="17:35"><expr pos:start="17:29" pos:end="17:35"><name pos:start="17:29" pos:end="17:35"><name pos:start="17:29" pos:end="17:29">f</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:35">rptr</name></name></expr></argument>, <argument pos:start="17:38" pos:end="17:40"><expr pos:start="17:38" pos:end="17:40"><name pos:start="17:38" pos:end="17:40">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="19:9" pos:end="25:9">else<block pos:start="19:13" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:40">

            <expr_stmt pos:start="21:13" pos:end="21:39"><expr pos:start="21:13" pos:end="21:38"><call pos:start="21:13" pos:end="21:38"><name pos:start="21:13" pos:end="21:18">memcpy</name><argument_list pos:start="21:19" pos:end="21:38">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">dest</name></expr></argument>, <argument pos:start="21:26" pos:end="21:32"><expr pos:start="21:26" pos:end="21:32"><name pos:start="21:26" pos:end="21:32"><name pos:start="21:26" pos:end="21:26">f</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:32">rptr</name></name></expr></argument>, <argument pos:start="21:35" pos:end="21:37"><expr pos:start="21:35" pos:end="21:37"><name pos:start="21:35" pos:end="21:37">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:40"><expr pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:16">dest</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <operator pos:start="23:20" pos:end="23:20">(</operator><name pos:start="23:21" pos:end="23:27">uint8_t</name><operator pos:start="23:28" pos:end="23:28">*</operator><operator pos:start="23:29" pos:end="23:29">)</operator><name pos:start="23:30" pos:end="23:33">dest</name> <operator pos:start="23:35" pos:end="23:35">+</operator> <name pos:start="23:37" pos:end="23:39">len</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><call pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:21">av_fifo_drain</name><argument_list pos:start="27:22" pos:end="27:29">(<argument pos:start="27:23" pos:end="27:23"><expr pos:start="27:23" pos:end="27:23"><name pos:start="27:23" pos:end="27:23">f</name></expr></argument>, <argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:24"><expr pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:16">buf_size</name> <operator pos:start="29:18" pos:end="29:19">-=</operator> <name pos:start="29:21" pos:end="29:23">len</name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="31:13" pos:end="31:26">(<expr pos:start="31:14" pos:end="31:25"><name pos:start="31:14" pos:end="31:21">buf_size</name> <operator pos:start="31:23" pos:end="31:23">&gt;</operator> <literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr>)</condition>;</do>

    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
