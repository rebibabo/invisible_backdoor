<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25394.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">qemu_set_log_filename</name><parameter_list pos:start="1:27" pos:end="1:48">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:39"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:47">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:32">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:16">pidstr</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:24"><expr pos:start="7:5" pos:end="7:23"><call pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">g_free</name><argument_list pos:start="7:11" pos:end="7:23">(<argument pos:start="7:12" pos:end="7:22"><expr pos:start="7:12" pos:end="7:22"><name pos:start="7:12" pos:end="7:22">logfilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:35"><expr pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:10">pidstr</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <call pos:start="11:14" pos:end="11:34"><name pos:start="11:14" pos:end="11:19">strstr</name><argument_list pos:start="11:20" pos:end="11:34">(<argument pos:start="11:21" pos:end="11:28"><expr pos:start="11:21" pos:end="11:28"><name pos:start="11:21" pos:end="11:28">filename</name></expr></argument>, <argument pos:start="11:31" pos:end="11:33"><expr pos:start="11:31" pos:end="11:33"><literal type="string" pos:start="11:31" pos:end="11:33">"%"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="33:5"><if pos:start="13:5" pos:end="29:5">if <condition pos:start="13:8" pos:end="13:15">(<expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:14">pidstr</name></expr>)</condition> <block pos:start="13:17" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:9">

        <comment type="block" pos:start="15:9" pos:end="15:60">/* We only accept one %d, no other format strings */</comment>

        <if_stmt pos:start="17:9" pos:end="27:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:56">(<expr pos:start="17:13" pos:end="17:55"><name pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:18">pidstr</name><index pos:start="17:19" pos:end="17:21">[<expr pos:start="17:20" pos:end="17:20"><literal type="number" pos:start="17:20" pos:end="17:20">1</literal></expr>]</index></name> <operator pos:start="17:23" pos:end="17:24">!=</operator> <literal type="char" pos:start="17:26" pos:end="17:28">'d'</literal> <operator pos:start="17:30" pos:end="17:31">||</operator> <call pos:start="17:33" pos:end="17:55"><name pos:start="17:33" pos:end="17:38">strchr</name><argument_list pos:start="17:39" pos:end="17:55">(<argument pos:start="17:40" pos:end="17:49"><expr pos:start="17:40" pos:end="17:49"><name pos:start="17:40" pos:end="17:45">pidstr</name> <operator pos:start="17:47" pos:end="17:47">+</operator> <literal type="number" pos:start="17:49" pos:end="17:49">2</literal></expr></argument>, <argument pos:start="17:52" pos:end="17:54"><expr pos:start="17:52" pos:end="17:54"><literal type="char" pos:start="17:52" pos:end="17:54">'%'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:58" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:31">

            <expr_stmt pos:start="19:13" pos:end="19:61"><expr pos:start="19:13" pos:end="19:60"><call pos:start="19:13" pos:end="19:60"><name pos:start="19:13" pos:end="19:24">error_report</name><argument_list pos:start="19:25" pos:end="19:60">(<argument pos:start="19:26" pos:end="19:49"><expr pos:start="19:26" pos:end="19:49"><literal type="string" pos:start="19:26" pos:end="19:49">"Bad logfile format: %s"</literal></expr></argument>, <argument pos:start="19:52" pos:end="19:59"><expr pos:start="19:52" pos:end="19:59"><name pos:start="19:52" pos:end="19:59">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:31"><expr pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:23">logfilename</name> <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:30">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="23:11" pos:end="27:9">else <block pos:start="23:16" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:62">

            <expr_stmt pos:start="25:13" pos:end="25:62"><expr pos:start="25:13" pos:end="25:61"><name pos:start="25:13" pos:end="25:23">logfilename</name> <operator pos:start="25:25" pos:end="25:25">=</operator> <call pos:start="25:27" pos:end="25:61"><name pos:start="25:27" pos:end="25:41">g_strdup_printf</name><argument_list pos:start="25:42" pos:end="25:61">(<argument pos:start="25:43" pos:end="25:50"><expr pos:start="25:43" pos:end="25:50"><name pos:start="25:43" pos:end="25:50">filename</name></expr></argument>, <argument pos:start="25:53" pos:end="25:60"><expr pos:start="25:53" pos:end="25:60"><call pos:start="25:53" pos:end="25:60"><name pos:start="25:53" pos:end="25:58">getpid</name><argument_list pos:start="25:59" pos:end="25:60">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="33:5">else <block pos:start="29:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:41">

        <expr_stmt pos:start="31:9" pos:end="31:41"><expr pos:start="31:9" pos:end="31:40"><name pos:start="31:9" pos:end="31:19">logfilename</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <call pos:start="31:23" pos:end="31:40"><name pos:start="31:23" pos:end="31:30">g_strdup</name><argument_list pos:start="31:31" pos:end="31:40">(<argument pos:start="31:32" pos:end="31:39"><expr pos:start="31:32" pos:end="31:39"><name pos:start="31:32" pos:end="31:39">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:21"><expr pos:start="35:5" pos:end="35:20"><call pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:18">qemu_log_close</name><argument_list pos:start="35:19" pos:end="35:20">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:32"><expr pos:start="37:5" pos:end="37:31"><call pos:start="37:5" pos:end="37:31"><name pos:start="37:5" pos:end="37:16">qemu_set_log</name><argument_list pos:start="37:17" pos:end="37:31">(<argument pos:start="37:18" pos:end="37:30"><expr pos:start="37:18" pos:end="37:30"><name pos:start="37:18" pos:end="37:30">qemu_loglevel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
