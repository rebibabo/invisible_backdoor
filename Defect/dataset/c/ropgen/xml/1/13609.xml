<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13609.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">ehci_state_executing</name><parameter_list pos:start="1:32" pos:end="1:45">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:41">EHCIQueue</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">q</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:13">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">EHCIPacket</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">p</name> <init pos:start="5:19" pos:end="5:45">= <expr pos:start="5:21" pos:end="5:45"><call pos:start="5:21" pos:end="5:45"><name pos:start="5:21" pos:end="5:32">QTAILQ_FIRST</name><argument_list pos:start="5:33" pos:end="5:45">(<argument pos:start="5:34" pos:end="5:44"><expr pos:start="5:34" pos:end="5:44"><operator pos:start="5:34" pos:end="5:34">&amp;</operator><name pos:start="5:35" pos:end="5:44"><name pos:start="5:35" pos:end="5:35">q</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:44">packets</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><call pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:21">(<argument pos:start="9:12" pos:end="9:20"><expr pos:start="9:12" pos:end="9:20"><name pos:start="9:12" pos:end="9:12">p</name> <operator pos:start="9:14" pos:end="9:15">!=</operator> <name pos:start="9:17" pos:end="9:20">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><call pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:36">(<argument pos:start="11:12" pos:end="11:35"><expr pos:start="11:12" pos:end="11:35"><name pos:start="11:12" pos:end="11:21"><name pos:start="11:12" pos:end="11:12">p</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:21">qtdaddr</name></name> <operator pos:start="11:23" pos:end="11:24">==</operator> <name pos:start="11:26" pos:end="11:35"><name pos:start="11:26" pos:end="11:26">q</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:35">qtdaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><call pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:25">ehci_execute_complete</name><argument_list pos:start="15:26" pos:end="15:28">(<argument pos:start="15:27" pos:end="15:27"><expr pos:start="15:27" pos:end="15:27"><name pos:start="15:27" pos:end="15:27">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="19:5" pos:end="19:13">// 4.10.3</comment>

    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="33:5">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:17"><name pos:start="21:10" pos:end="21:10">q</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:17">async</name></name></expr>)</condition> <block pos:start="21:20" pos:end="33:5">{<block_content pos:start="23:9" pos:end="27:60">

        <decl_stmt pos:start="23:9" pos:end="23:64"><decl pos:start="23:9" pos:end="23:63"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:23">transactCtr</name> <init pos:start="23:25" pos:end="23:63">= <expr pos:start="23:27" pos:end="23:63"><call pos:start="23:27" pos:end="23:63"><name pos:start="23:27" pos:end="23:35">get_field</name><argument_list pos:start="23:36" pos:end="23:63">(<argument pos:start="23:37" pos:end="23:47"><expr pos:start="23:37" pos:end="23:47"><name pos:start="23:37" pos:end="23:47"><name pos:start="23:37" pos:end="23:37">q</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:41">qh</name><operator pos:start="23:42" pos:end="23:42">.</operator><name pos:start="23:43" pos:end="23:47">epcap</name></name></expr></argument>, <argument pos:start="23:50" pos:end="23:62"><expr pos:start="23:50" pos:end="23:62"><name pos:start="23:50" pos:end="23:62">QH_EPCAP_MULT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:22"><expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:19">transactCtr</name><operator pos:start="25:20" pos:end="25:21">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:60"><expr pos:start="27:9" pos:end="27:59"><call pos:start="27:9" pos:end="27:59"><name pos:start="27:9" pos:end="27:17">set_field</name><argument_list pos:start="27:18" pos:end="27:59">(<argument pos:start="27:19" pos:end="27:30"><expr pos:start="27:19" pos:end="27:30"><operator pos:start="27:19" pos:end="27:19">&amp;</operator><name pos:start="27:20" pos:end="27:30"><name pos:start="27:20" pos:end="27:20">q</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:24">qh</name><operator pos:start="27:25" pos:end="27:25">.</operator><name pos:start="27:26" pos:end="27:30">epcap</name></name></expr></argument>, <argument pos:start="27:33" pos:end="27:43"><expr pos:start="27:33" pos:end="27:43"><name pos:start="27:33" pos:end="27:43">transactCtr</name></expr></argument>, <argument pos:start="27:46" pos:end="27:58"><expr pos:start="27:46" pos:end="27:58"><name pos:start="27:46" pos:end="27:58">QH_EPCAP_MULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="29:9" pos:end="29:77">// 4.10.3, bottom of page 82, should exit this state when transaction</comment>

        <comment type="line" pos:start="31:9" pos:end="31:34">// counter decrements to 0</comment>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:16">/* 4.10.5 */</comment>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:37">(<expr pos:start="39:9" pos:end="39:36"><name pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:9">p</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:21">usb_status</name></name> <operator pos:start="39:23" pos:end="39:24">==</operator> <name pos:start="39:26" pos:end="39:36">USB_RET_NAK</name></expr>)</condition> <block pos:start="39:39" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:60">

        <expr_stmt pos:start="41:9" pos:end="41:60"><expr pos:start="41:9" pos:end="41:59"><call pos:start="41:9" pos:end="41:59"><name pos:start="41:9" pos:end="41:22">ehci_set_state</name><argument_list pos:start="41:23" pos:end="41:59">(<argument pos:start="41:24" pos:end="41:30"><expr pos:start="41:24" pos:end="41:30"><name pos:start="41:24" pos:end="41:30"><name pos:start="41:24" pos:end="41:24">q</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:30">ehci</name></name></expr></argument>, <argument pos:start="41:33" pos:end="41:40"><expr pos:start="41:33" pos:end="41:40"><name pos:start="41:33" pos:end="41:40"><name pos:start="41:33" pos:end="41:33">q</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:40">async</name></name></expr></argument>, <argument pos:start="41:43" pos:end="41:58"><expr pos:start="41:43" pos:end="41:58"><name pos:start="41:43" pos:end="41:58">EST_HORIZONTALQH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="47:5">else <block pos:start="43:12" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:57">

        <expr_stmt pos:start="45:9" pos:end="45:57"><expr pos:start="45:9" pos:end="45:56"><call pos:start="45:9" pos:end="45:56"><name pos:start="45:9" pos:end="45:22">ehci_set_state</name><argument_list pos:start="45:23" pos:end="45:56">(<argument pos:start="45:24" pos:end="45:30"><expr pos:start="45:24" pos:end="45:30"><name pos:start="45:24" pos:end="45:30"><name pos:start="45:24" pos:end="45:24">q</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:30">ehci</name></name></expr></argument>, <argument pos:start="45:33" pos:end="45:40"><expr pos:start="45:33" pos:end="45:40"><name pos:start="45:33" pos:end="45:40"><name pos:start="45:33" pos:end="45:33">q</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:40">async</name></name></expr></argument>, <argument pos:start="45:43" pos:end="45:55"><expr pos:start="45:43" pos:end="45:55"><name pos:start="45:43" pos:end="45:55">EST_WRITEBACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:21"><expr pos:start="51:5" pos:end="51:20"><call pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:17">ehci_flush_qh</name><argument_list pos:start="51:18" pos:end="51:20">(<argument pos:start="51:19" pos:end="51:19"><expr pos:start="51:19" pos:end="51:19"><name pos:start="51:19" pos:end="51:19">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
