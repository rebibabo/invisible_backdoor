<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6567.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">tcg_out_tlb_check</name> <parameter_list pos:start="1:31" pos:end="5:77">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:41">TCGContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:52"><decl pos:start="1:47" pos:end="1:52"><type pos:start="1:47" pos:end="1:52"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:52">r0</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:60"><decl pos:start="1:55" pos:end="1:60"><type pos:start="1:55" pos:end="1:60"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:60">r1</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:68"><decl pos:start="1:63" pos:end="1:68"><type pos:start="1:63" pos:end="1:68"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:68">r2</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:43">addr_reg</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:58"><decl pos:start="3:46" pos:end="3:58"><type pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:58">addr_reg2</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:70"><decl pos:start="3:61" pos:end="3:70"><type pos:start="3:61" pos:end="3:70"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:70">s_bits</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:42"><decl pos:start="5:32" pos:end="5:42"><type pos:start="5:32" pos:end="5:42"><name pos:start="5:32" pos:end="5:34">int</name></type> <name pos:start="5:36" pos:end="5:42">offset1</name></decl></parameter>, <parameter pos:start="5:45" pos:end="5:55"><decl pos:start="5:45" pos:end="5:55"><type pos:start="5:45" pos:end="5:55"><name pos:start="5:45" pos:end="5:47">int</name></type> <name pos:start="5:49" pos:end="5:55">offset2</name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:76"><decl pos:start="5:58" pos:end="5:76"><type pos:start="5:58" pos:end="5:76"><name pos:start="5:58" pos:end="5:64">uint8_t</name> <modifier pos:start="5:66" pos:end="5:66">*</modifier><modifier pos:start="5:67" pos:end="5:67">*</modifier></type><name pos:start="5:68" pos:end="5:76">label_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="113:1">{<block_content pos:start="9:5" pos:end="107:59">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:21">retranst</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="27:10"><expr pos:start="13:5" pos:end="27:9"><call pos:start="13:5" pos:end="27:9"><name pos:start="13:5" pos:end="13:13">tcg_out32</name> <argument_list pos:start="13:15" pos:end="27:9">(<argument pos:start="13:16" pos:end="13:16"><expr pos:start="13:16" pos:end="13:16"><name pos:start="13:16" pos:end="13:16">s</name></expr></argument>, <argument pos:start="13:19" pos:end="25:20"><expr pos:start="13:19" pos:end="25:20"><operator pos:start="13:19" pos:end="13:19">(</operator><name pos:start="13:20" pos:end="13:25">RLWINM</name>

                   <operator pos:start="15:20" pos:end="15:20">|</operator> <call pos:start="15:22" pos:end="15:28"><name pos:start="15:22" pos:end="15:23">RA</name> <argument_list pos:start="15:25" pos:end="15:28">(<argument pos:start="15:26" pos:end="15:27"><expr pos:start="15:26" pos:end="15:27"><name pos:start="15:26" pos:end="15:27">r0</name></expr></argument>)</argument_list></call>

                   <operator pos:start="17:20" pos:end="17:20">|</operator> <call pos:start="17:22" pos:end="17:34"><name pos:start="17:22" pos:end="17:23">RS</name> <argument_list pos:start="17:25" pos:end="17:34">(<argument pos:start="17:26" pos:end="17:33"><expr pos:start="17:26" pos:end="17:33"><name pos:start="17:26" pos:end="17:33">addr_reg</name></expr></argument>)</argument_list></call>

                   <operator pos:start="19:20" pos:end="19:20">|</operator> <call pos:start="19:22" pos:end="19:70"><name pos:start="19:22" pos:end="19:23">SH</name> <argument_list pos:start="19:25" pos:end="19:70">(<argument pos:start="19:26" pos:end="19:69"><expr pos:start="19:26" pos:end="19:69"><literal type="number" pos:start="19:26" pos:end="19:29">32</literal> <operator pos:start="19:29" pos:end="19:29">-</operator> <operator pos:start="19:31" pos:end="19:31">(</operator><name pos:start="19:32" pos:end="19:47">TARGET_PAGE_BITS</name> <operator pos:start="19:49" pos:end="19:49">-</operator> <name pos:start="19:51" pos:end="19:68">CPU_TLB_ENTRY_BITS</name><operator pos:start="19:69" pos:end="19:69">)</operator></expr></argument>)</argument_list></call>

                   <operator pos:start="21:20" pos:end="21:20">|</operator> <call pos:start="21:22" pos:end="21:66"><name pos:start="21:22" pos:end="21:23">MB</name> <argument_list pos:start="21:25" pos:end="21:66">(<argument pos:start="21:26" pos:end="21:65"><expr pos:start="21:26" pos:end="21:65"><literal type="number" pos:start="21:26" pos:end="21:29">32</literal> <operator pos:start="21:29" pos:end="21:29">-</operator> <operator pos:start="21:31" pos:end="21:31">(</operator><name pos:start="21:32" pos:end="21:43">CPU_TLB_BITS</name> <operator pos:start="21:45" pos:end="21:45">+</operator> <name pos:start="21:47" pos:end="21:64">CPU_TLB_ENTRY_BITS</name><operator pos:start="21:65" pos:end="21:65">)</operator></expr></argument>)</argument_list></call>

                   <operator pos:start="23:20" pos:end="23:20">|</operator> <call pos:start="23:22" pos:end="23:49"><name pos:start="23:22" pos:end="23:23">ME</name> <argument_list pos:start="23:25" pos:end="23:49">(<argument pos:start="23:26" pos:end="23:48"><expr pos:start="23:26" pos:end="23:48"><literal type="number" pos:start="23:26" pos:end="23:29">31</literal> <operator pos:start="23:29" pos:end="23:29">-</operator> <name pos:start="23:31" pos:end="23:48">CPU_TLB_ENTRY_BITS</name></expr></argument>)</argument_list></call>

                   <operator pos:start="25:20" pos:end="25:20">)</operator></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:60"><expr pos:start="29:5" pos:end="29:59"><call pos:start="29:5" pos:end="29:59"><name pos:start="29:5" pos:end="29:13">tcg_out32</name> <argument_list pos:start="29:15" pos:end="29:59">(<argument pos:start="29:16" pos:end="29:16"><expr pos:start="29:16" pos:end="29:16"><name pos:start="29:16" pos:end="29:16">s</name></expr></argument>, <argument pos:start="29:19" pos:end="29:58"><expr pos:start="29:19" pos:end="29:58"><name pos:start="29:19" pos:end="29:21">ADD</name> <operator pos:start="29:23" pos:end="29:23">|</operator> <call pos:start="29:25" pos:end="29:31"><name pos:start="29:25" pos:end="29:26">RT</name> <argument_list pos:start="29:28" pos:end="29:31">(<argument pos:start="29:29" pos:end="29:30"><expr pos:start="29:29" pos:end="29:30"><name pos:start="29:29" pos:end="29:30">r0</name></expr></argument>)</argument_list></call> <operator pos:start="29:33" pos:end="29:33">|</operator> <call pos:start="29:35" pos:end="29:41"><name pos:start="29:35" pos:end="29:36">RA</name> <argument_list pos:start="29:38" pos:end="29:41">(<argument pos:start="29:39" pos:end="29:40"><expr pos:start="29:39" pos:end="29:40"><name pos:start="29:39" pos:end="29:40">r0</name></expr></argument>)</argument_list></call> <operator pos:start="29:43" pos:end="29:43">|</operator> <call pos:start="29:45" pos:end="29:58"><name pos:start="29:45" pos:end="29:46">RB</name> <argument_list pos:start="29:48" pos:end="29:58">(<argument pos:start="29:49" pos:end="29:57"><expr pos:start="29:49" pos:end="29:57"><name pos:start="29:49" pos:end="29:57">TCG_AREG0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="41:10"><expr pos:start="31:5" pos:end="41:9"><call pos:start="31:5" pos:end="41:9"><name pos:start="31:5" pos:end="31:13">tcg_out32</name> <argument_list pos:start="31:15" pos:end="41:9">(<argument pos:start="31:16" pos:end="31:16"><expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">s</name></expr></argument>, <argument pos:start="31:19" pos:end="39:20"><expr pos:start="31:19" pos:end="39:20"><operator pos:start="31:19" pos:end="31:19">(</operator><name pos:start="31:20" pos:end="31:23">LWZU</name>

                   <operator pos:start="33:20" pos:end="33:20">|</operator> <call pos:start="33:22" pos:end="33:28"><name pos:start="33:22" pos:end="33:23">RT</name> <argument_list pos:start="33:25" pos:end="33:28">(<argument pos:start="33:26" pos:end="33:27"><expr pos:start="33:26" pos:end="33:27"><name pos:start="33:26" pos:end="33:27">r1</name></expr></argument>)</argument_list></call>

                   <operator pos:start="35:20" pos:end="35:20">|</operator> <call pos:start="35:22" pos:end="35:28"><name pos:start="35:22" pos:end="35:23">RA</name> <argument_list pos:start="35:25" pos:end="35:28">(<argument pos:start="35:26" pos:end="35:27"><expr pos:start="35:26" pos:end="35:27"><name pos:start="35:26" pos:end="35:27">r0</name></expr></argument>)</argument_list></call>

                   <operator pos:start="37:20" pos:end="37:20">|</operator> <name pos:start="37:22" pos:end="37:28">offset1</name>

                   <operator pos:start="39:20" pos:end="39:20">)</operator></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="57:10"><expr pos:start="43:5" pos:end="57:9"><call pos:start="43:5" pos:end="57:9"><name pos:start="43:5" pos:end="43:13">tcg_out32</name> <argument_list pos:start="43:15" pos:end="57:9">(<argument pos:start="43:16" pos:end="43:16"><expr pos:start="43:16" pos:end="43:16"><name pos:start="43:16" pos:end="43:16">s</name></expr></argument>, <argument pos:start="43:19" pos:end="55:20"><expr pos:start="43:19" pos:end="55:20"><operator pos:start="43:19" pos:end="43:19">(</operator><name pos:start="43:20" pos:end="43:25">RLWINM</name>

                   <operator pos:start="45:20" pos:end="45:20">|</operator> <call pos:start="45:22" pos:end="45:28"><name pos:start="45:22" pos:end="45:23">RA</name> <argument_list pos:start="45:25" pos:end="45:28">(<argument pos:start="45:26" pos:end="45:27"><expr pos:start="45:26" pos:end="45:27"><name pos:start="45:26" pos:end="45:27">r2</name></expr></argument>)</argument_list></call>

                   <operator pos:start="47:20" pos:end="47:20">|</operator> <call pos:start="47:22" pos:end="47:34"><name pos:start="47:22" pos:end="47:23">RS</name> <argument_list pos:start="47:25" pos:end="47:34">(<argument pos:start="47:26" pos:end="47:33"><expr pos:start="47:26" pos:end="47:33"><name pos:start="47:26" pos:end="47:33">addr_reg</name></expr></argument>)</argument_list></call>

                   <operator pos:start="49:20" pos:end="49:20">|</operator> <call pos:start="49:22" pos:end="49:27"><name pos:start="49:22" pos:end="49:23">SH</name> <argument_list pos:start="49:25" pos:end="49:27">(<argument pos:start="49:26" pos:end="49:26"><expr pos:start="49:26" pos:end="49:26"><literal type="number" pos:start="49:26" pos:end="49:26">0</literal></expr></argument>)</argument_list></call>

                   <operator pos:start="51:20" pos:end="51:20">|</operator> <call pos:start="51:22" pos:end="51:44"><name pos:start="51:22" pos:end="51:23">MB</name> <argument_list pos:start="51:25" pos:end="51:44">(<argument pos:start="51:26" pos:end="51:43"><expr pos:start="51:26" pos:end="51:43"><operator pos:start="51:26" pos:end="51:26">(</operator><literal type="number" pos:start="51:27" pos:end="51:30">32</literal> <operator pos:start="51:30" pos:end="51:30">-</operator> <name pos:start="51:32" pos:end="51:37">s_bits</name><operator pos:start="51:38" pos:end="51:38">)</operator> <operator pos:start="51:40" pos:end="51:40">&amp;</operator> <literal type="number" pos:start="51:42" pos:end="51:43">31</literal></expr></argument>)</argument_list></call>

                   <operator pos:start="53:20" pos:end="53:20">|</operator> <call pos:start="53:22" pos:end="53:47"><name pos:start="53:22" pos:end="53:23">ME</name> <argument_list pos:start="53:25" pos:end="53:47">(<argument pos:start="53:26" pos:end="53:46"><expr pos:start="53:26" pos:end="53:46"><literal type="number" pos:start="53:26" pos:end="53:29">31</literal> <operator pos:start="53:29" pos:end="53:29">-</operator> <name pos:start="53:31" pos:end="53:46">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call>

                   <operator pos:start="55:20" pos:end="55:20">)</operator></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="64:0"><expr pos:start="61:5" pos:end="61:51"><call pos:start="61:5" pos:end="61:51"><name pos:start="61:5" pos:end="61:13">tcg_out32</name> <argument_list pos:start="61:15" pos:end="61:51">(<argument pos:start="61:16" pos:end="61:16"><expr pos:start="61:16" pos:end="61:16"><name pos:start="61:16" pos:end="61:16">s</name></expr></argument>, <argument pos:start="61:19" pos:end="61:50"><expr pos:start="61:19" pos:end="61:50"><name pos:start="61:19" pos:end="61:21">CMP</name> <operator pos:start="61:23" pos:end="61:23">|</operator> <call pos:start="61:25" pos:end="61:30"><name pos:start="61:25" pos:end="61:26">BF</name> <argument_list pos:start="61:28" pos:end="61:30">(<argument pos:start="61:29" pos:end="61:29"><expr pos:start="61:29" pos:end="61:29"><literal type="number" pos:start="61:29" pos:end="61:29">7</literal></expr></argument>)</argument_list></call> <operator pos:start="61:32" pos:end="61:32">|</operator> <call pos:start="61:34" pos:end="61:40"><name pos:start="61:34" pos:end="61:35">RA</name> <argument_list pos:start="61:37" pos:end="61:40">(<argument pos:start="61:38" pos:end="61:39"><expr pos:start="61:38" pos:end="61:39"><name pos:start="61:38" pos:end="61:39">r2</name></expr></argument>)</argument_list></call> <operator pos:start="61:42" pos:end="61:42">|</operator> <call pos:start="61:44" pos:end="61:50"><name pos:start="61:44" pos:end="61:45">RB</name> <argument_list pos:start="61:47" pos:end="61:50">(<argument pos:start="61:48" pos:end="61:49"><expr pos:start="61:48" pos:end="61:49"><name pos:start="61:48" pos:end="61:49">r1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="63:1" pos:end="63:26">#<cpp:directive pos:start="63:2" pos:end="63:3">if</cpp:directive> <expr pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:20">TARGET_LONG_BITS</name> <operator pos:start="63:22" pos:end="63:23">==</operator> <literal type="number" pos:start="63:25" pos:end="63:26">64</literal></expr></cpp:if>

    <expr_stmt pos:start="65:5" pos:end="65:47"><expr pos:start="65:5" pos:end="65:46"><call pos:start="65:5" pos:end="65:46"><name pos:start="65:5" pos:end="65:13">tcg_out32</name> <argument_list pos:start="65:15" pos:end="65:46">(<argument pos:start="65:16" pos:end="65:16"><expr pos:start="65:16" pos:end="65:16"><name pos:start="65:16" pos:end="65:16">s</name></expr></argument>, <argument pos:start="65:19" pos:end="65:45"><expr pos:start="65:19" pos:end="65:45"><name pos:start="65:19" pos:end="65:21">LWZ</name> <operator pos:start="65:23" pos:end="65:23">|</operator> <call pos:start="65:25" pos:end="65:31"><name pos:start="65:25" pos:end="65:26">RT</name> <argument_list pos:start="65:28" pos:end="65:31">(<argument pos:start="65:29" pos:end="65:30"><expr pos:start="65:29" pos:end="65:30"><name pos:start="65:29" pos:end="65:30">r1</name></expr></argument>)</argument_list></call> <operator pos:start="65:33" pos:end="65:33">|</operator> <call pos:start="65:35" pos:end="65:41"><name pos:start="65:35" pos:end="65:36">RA</name> <argument_list pos:start="65:38" pos:end="65:41">(<argument pos:start="65:39" pos:end="65:40"><expr pos:start="65:39" pos:end="65:40"><name pos:start="65:39" pos:end="65:40">r0</name></expr></argument>)</argument_list></call> <operator pos:start="65:43" pos:end="65:43">|</operator> <literal type="number" pos:start="65:45" pos:end="65:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:59"><expr pos:start="67:5" pos:end="67:58"><call pos:start="67:5" pos:end="67:58"><name pos:start="67:5" pos:end="67:13">tcg_out32</name> <argument_list pos:start="67:15" pos:end="67:58">(<argument pos:start="67:16" pos:end="67:16"><expr pos:start="67:16" pos:end="67:16"><name pos:start="67:16" pos:end="67:16">s</name></expr></argument>, <argument pos:start="67:19" pos:end="67:57"><expr pos:start="67:19" pos:end="67:57"><name pos:start="67:19" pos:end="67:21">CMP</name> <operator pos:start="67:23" pos:end="67:23">|</operator> <call pos:start="67:25" pos:end="67:30"><name pos:start="67:25" pos:end="67:26">BF</name> <argument_list pos:start="67:28" pos:end="67:30">(<argument pos:start="67:29" pos:end="67:29"><expr pos:start="67:29" pos:end="67:29"><literal type="number" pos:start="67:29" pos:end="67:29">6</literal></expr></argument>)</argument_list></call> <operator pos:start="67:32" pos:end="67:32">|</operator> <call pos:start="67:34" pos:end="67:47"><name pos:start="67:34" pos:end="67:35">RA</name> <argument_list pos:start="67:37" pos:end="67:47">(<argument pos:start="67:38" pos:end="67:46"><expr pos:start="67:38" pos:end="67:46"><name pos:start="67:38" pos:end="67:46">addr_reg2</name></expr></argument>)</argument_list></call> <operator pos:start="67:49" pos:end="67:49">|</operator> <call pos:start="67:51" pos:end="67:57"><name pos:start="67:51" pos:end="67:52">RB</name> <argument_list pos:start="67:54" pos:end="67:57">(<argument pos:start="67:55" pos:end="67:56"><expr pos:start="67:55" pos:end="67:56"><name pos:start="67:55" pos:end="67:56">r1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="72:0"><expr pos:start="69:5" pos:end="69:72"><call pos:start="69:5" pos:end="69:72"><name pos:start="69:5" pos:end="69:13">tcg_out32</name> <argument_list pos:start="69:15" pos:end="69:72">(<argument pos:start="69:16" pos:end="69:16"><expr pos:start="69:16" pos:end="69:16"><name pos:start="69:16" pos:end="69:16">s</name></expr></argument>, <argument pos:start="69:19" pos:end="69:71"><expr pos:start="69:19" pos:end="69:71"><name pos:start="69:19" pos:end="69:23">CRAND</name> <operator pos:start="69:25" pos:end="69:25">|</operator> <call pos:start="69:27" pos:end="69:39"><name pos:start="69:27" pos:end="69:28">BT</name> <argument_list pos:start="69:30" pos:end="69:39">(<argument pos:start="69:31" pos:end="69:31"><expr pos:start="69:31" pos:end="69:31"><literal type="number" pos:start="69:31" pos:end="69:31">7</literal></expr></argument>, <argument pos:start="69:34" pos:end="69:38"><expr pos:start="69:34" pos:end="69:38"><name pos:start="69:34" pos:end="69:38">CR_EQ</name></expr></argument>)</argument_list></call> <operator pos:start="69:41" pos:end="69:41">|</operator> <call pos:start="69:43" pos:end="69:55"><name pos:start="69:43" pos:end="69:44">BA</name> <argument_list pos:start="69:46" pos:end="69:55">(<argument pos:start="69:47" pos:end="69:47"><expr pos:start="69:47" pos:end="69:47"><literal type="number" pos:start="69:47" pos:end="69:47">6</literal></expr></argument>, <argument pos:start="69:50" pos:end="69:54"><expr pos:start="69:50" pos:end="69:54"><name pos:start="69:50" pos:end="69:54">CR_EQ</name></expr></argument>)</argument_list></call> <operator pos:start="69:57" pos:end="69:57">|</operator> <call pos:start="69:59" pos:end="69:71"><name pos:start="69:59" pos:end="69:60">BB</name> <argument_list pos:start="69:62" pos:end="69:71">(<argument pos:start="69:63" pos:end="69:63"><expr pos:start="69:63" pos:end="69:63"><literal type="number" pos:start="69:63" pos:end="69:63">7</literal></expr></argument>, <argument pos:start="69:66" pos:end="69:70"><expr pos:start="69:66" pos:end="69:70"><name pos:start="69:66" pos:end="69:70">CR_EQ</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="75:5" pos:end="81:48">/* Use a conditional branch-and-link so that we load a pointer to

       somewhere within the current opcode, for passing on to the helper.

       This address cannot be used for a tail call, but it's shorter

       than forming an address from scratch.  */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:29"><expr pos:start="83:5" pos:end="83:28"><operator pos:start="83:5" pos:end="83:5">*</operator><name pos:start="83:6" pos:end="83:14">label_ptr</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <name pos:start="83:18" pos:end="83:28"><name pos:start="83:18" pos:end="83:18">s</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:28">code_ptr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:50"><expr pos:start="85:5" pos:end="85:49"><name pos:start="85:5" pos:end="85:12">retranst</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <operator pos:start="85:16" pos:end="85:16">(</operator><operator pos:start="85:17" pos:end="85:17">(</operator><name pos:start="85:18" pos:end="85:25">uint16_t</name> <operator pos:start="85:27" pos:end="85:27">*</operator><operator pos:start="85:28" pos:end="85:28">)</operator> <name pos:start="85:30" pos:end="85:40"><name pos:start="85:30" pos:end="85:30">s</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:40">code_ptr</name></name><operator pos:start="85:41" pos:end="85:41">)</operator><index pos:start="85:42" pos:end="85:44">[<expr pos:start="85:43" pos:end="85:43"><literal type="number" pos:start="85:43" pos:end="85:43">1</literal></expr>]</index> <operator pos:start="85:46" pos:end="85:46">&amp;</operator> <operator pos:start="85:48" pos:end="85:48">~</operator><literal type="number" pos:start="85:49" pos:end="85:49">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:68"><expr pos:start="87:5" pos:end="87:67"><call pos:start="87:5" pos:end="87:67"><name pos:start="87:5" pos:end="87:13">tcg_out32</name><argument_list pos:start="87:14" pos:end="87:67">(<argument pos:start="87:15" pos:end="87:15"><expr pos:start="87:15" pos:end="87:15"><name pos:start="87:15" pos:end="87:15">s</name></expr></argument>, <argument pos:start="87:18" pos:end="87:66"><expr pos:start="87:18" pos:end="87:66"><name pos:start="87:18" pos:end="87:19">BC</name> <operator pos:start="87:21" pos:end="87:21">|</operator> <call pos:start="87:23" pos:end="87:34"><name pos:start="87:23" pos:end="87:24">BI</name><argument_list pos:start="87:25" pos:end="87:34">(<argument pos:start="87:26" pos:end="87:26"><expr pos:start="87:26" pos:end="87:26"><literal type="number" pos:start="87:26" pos:end="87:26">7</literal></expr></argument>, <argument pos:start="87:29" pos:end="87:33"><expr pos:start="87:29" pos:end="87:33"><name pos:start="87:29" pos:end="87:33">CR_EQ</name></expr></argument>)</argument_list></call> <operator pos:start="87:36" pos:end="87:36">|</operator> <name pos:start="87:38" pos:end="87:45">retranst</name> <operator pos:start="87:47" pos:end="87:47">|</operator> <name pos:start="87:49" pos:end="87:61">BO_COND_FALSE</name> <operator pos:start="87:63" pos:end="87:63">|</operator> <name pos:start="87:65" pos:end="87:66">LK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="91:5" pos:end="91:66">/* r0 now contains &amp;env-&gt;tlb_table[mem_index][index].addr_x */</comment>

    <expr_stmt pos:start="93:5" pos:end="103:10"><expr pos:start="93:5" pos:end="103:9"><call pos:start="93:5" pos:end="103:9"><name pos:start="93:5" pos:end="93:13">tcg_out32</name> <argument_list pos:start="93:15" pos:end="103:9">(<argument pos:start="93:16" pos:end="93:16"><expr pos:start="93:16" pos:end="93:16"><name pos:start="93:16" pos:end="93:16">s</name></expr></argument>, <argument pos:start="93:19" pos:end="101:20"><expr pos:start="93:19" pos:end="101:20"><operator pos:start="93:19" pos:end="93:19">(</operator><name pos:start="93:20" pos:end="93:22">LWZ</name>

                   <operator pos:start="95:20" pos:end="95:20">|</operator> <call pos:start="95:22" pos:end="95:28"><name pos:start="95:22" pos:end="95:23">RT</name> <argument_list pos:start="95:25" pos:end="95:28">(<argument pos:start="95:26" pos:end="95:27"><expr pos:start="95:26" pos:end="95:27"><name pos:start="95:26" pos:end="95:27">r0</name></expr></argument>)</argument_list></call>

                   <operator pos:start="97:20" pos:end="97:20">|</operator> <call pos:start="97:22" pos:end="97:28"><name pos:start="97:22" pos:end="97:23">RA</name> <argument_list pos:start="97:25" pos:end="97:28">(<argument pos:start="97:26" pos:end="97:27"><expr pos:start="97:26" pos:end="97:27"><name pos:start="97:26" pos:end="97:27">r0</name></expr></argument>)</argument_list></call>

                   <operator pos:start="99:20" pos:end="99:20">|</operator> <name pos:start="99:22" pos:end="99:28">offset2</name>

                   <operator pos:start="101:20" pos:end="101:20">)</operator></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="105:5" pos:end="105:54">/* r0 = env-&gt;tlb_table[mem_index][index].addend */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:59"><expr pos:start="107:5" pos:end="107:58"><call pos:start="107:5" pos:end="107:58"><name pos:start="107:5" pos:end="107:13">tcg_out32</name> <argument_list pos:start="107:15" pos:end="107:58">(<argument pos:start="107:16" pos:end="107:16"><expr pos:start="107:16" pos:end="107:16"><name pos:start="107:16" pos:end="107:16">s</name></expr></argument>, <argument pos:start="107:19" pos:end="107:57"><expr pos:start="107:19" pos:end="107:57"><name pos:start="107:19" pos:end="107:21">ADD</name> <operator pos:start="107:23" pos:end="107:23">|</operator> <call pos:start="107:25" pos:end="107:31"><name pos:start="107:25" pos:end="107:26">RT</name> <argument_list pos:start="107:28" pos:end="107:31">(<argument pos:start="107:29" pos:end="107:30"><expr pos:start="107:29" pos:end="107:30"><name pos:start="107:29" pos:end="107:30">r0</name></expr></argument>)</argument_list></call> <operator pos:start="107:33" pos:end="107:33">|</operator> <call pos:start="107:35" pos:end="107:41"><name pos:start="107:35" pos:end="107:36">RA</name> <argument_list pos:start="107:38" pos:end="107:41">(<argument pos:start="107:39" pos:end="107:40"><expr pos:start="107:39" pos:end="107:40"><name pos:start="107:39" pos:end="107:40">r0</name></expr></argument>)</argument_list></call> <operator pos:start="107:43" pos:end="107:43">|</operator> <call pos:start="107:45" pos:end="107:57"><name pos:start="107:45" pos:end="107:46">RB</name> <argument_list pos:start="107:48" pos:end="107:57">(<argument pos:start="107:49" pos:end="107:56"><expr pos:start="107:49" pos:end="107:56"><name pos:start="107:49" pos:end="107:56">addr_reg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="109:5" pos:end="109:61">/* r0 = env-&gt;tlb_table[mem_index][index].addend + addr */</comment>



</block_content>}</block></function>
</unit>
