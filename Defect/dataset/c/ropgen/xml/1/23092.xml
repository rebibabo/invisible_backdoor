<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23092.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:39"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">memory_region_add_eventfd</name><parameter_list pos:start="1:31" pos:end="6:48">(<parameter pos:start="1:32" pos:end="1:47"><decl pos:start="1:32" pos:end="1:47"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:43">MemoryRegion</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">mr</name></decl></parameter>,
                               <parameter pos:start="2:32" pos:end="2:42"><decl pos:start="2:32" pos:end="2:42"><type pos:start="2:32" pos:end="2:42"><name pos:start="2:32" pos:end="2:37">hwaddr</name></type> <name pos:start="2:39" pos:end="2:42">addr</name></decl></parameter>,
                               <parameter pos:start="3:32" pos:end="3:44"><decl pos:start="3:32" pos:end="3:44"><type pos:start="3:32" pos:end="3:44"><name pos:start="3:32" pos:end="3:39">unsigned</name></type> <name pos:start="3:41" pos:end="3:44">size</name></decl></parameter>,
                               <parameter pos:start="4:32" pos:end="4:46"><decl pos:start="4:32" pos:end="4:46"><type pos:start="4:32" pos:end="4:46"><name pos:start="4:32" pos:end="4:35">bool</name></type> <name pos:start="4:37" pos:end="4:46">match_data</name></decl></parameter>,
                               <parameter pos:start="5:32" pos:end="5:44"><decl pos:start="5:32" pos:end="5:44"><type pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:39">uint64_t</name></type> <name pos:start="5:41" pos:end="5:44">data</name></decl></parameter>,
                               <parameter pos:start="6:32" pos:end="6:47"><decl pos:start="6:32" pos:end="6:47"><type pos:start="6:32" pos:end="6:47"><name pos:start="6:32" pos:end="6:44">EventNotifier</name> <modifier pos:start="6:46" pos:end="6:46">*</modifier></type><name pos:start="6:47" pos:end="6:47">e</name></decl></parameter>)</parameter_list>
<block pos:start="7:1" pos:end="29:39">{<block_content pos:start="8:5" pos:end="29:39">
    <decl_stmt pos:start="8:5" pos:end="14:6"><decl pos:start="8:5" pos:end="14:5"><type pos:start="8:5" pos:end="8:25"><name pos:start="8:5" pos:end="8:25">MemoryRegionIoeventfd</name></type> <name pos:start="8:27" pos:end="8:30">mrfd</name> <init pos:start="8:32" pos:end="14:5">= <expr pos:start="8:34" pos:end="14:5"><block pos:start="8:34" pos:end="14:5">{
        <expr pos:start="9:9" pos:end="9:41"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:19"><name pos:start="9:10" pos:end="9:13">addr</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:19">start</name></name> <operator pos:start="9:21" pos:end="9:21">=</operator> <call pos:start="9:23" pos:end="9:41"><name pos:start="9:23" pos:end="9:35">int128_make64</name><argument_list pos:start="9:36" pos:end="9:41">(<argument pos:start="9:37" pos:end="9:40"><expr pos:start="9:37" pos:end="9:40"><name pos:start="9:37" pos:end="9:40">addr</name></expr></argument>)</argument_list></call></expr>,
        <expr pos:start="10:9" pos:end="10:40"><operator pos:start="10:9" pos:end="10:9">.</operator><name pos:start="10:10" pos:end="10:18"><name pos:start="10:10" pos:end="10:13">addr</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:18">size</name></name> <operator pos:start="10:20" pos:end="10:20">=</operator> <call pos:start="10:22" pos:end="10:40"><name pos:start="10:22" pos:end="10:34">int128_make64</name><argument_list pos:start="10:35" pos:end="10:40">(<argument pos:start="10:36" pos:end="10:39"><expr pos:start="10:36" pos:end="10:39"><name pos:start="10:36" pos:end="10:39">size</name></expr></argument>)</argument_list></call></expr>,
        <expr pos:start="11:9" pos:end="11:32"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:19">match_data</name> <operator pos:start="11:21" pos:end="11:21">=</operator> <name pos:start="11:23" pos:end="11:32">match_data</name></expr>,
        <expr pos:start="12:9" pos:end="12:20"><operator pos:start="12:9" pos:end="12:9">.</operator><name pos:start="12:10" pos:end="12:13">data</name> <operator pos:start="12:15" pos:end="12:15">=</operator> <name pos:start="12:17" pos:end="12:20">data</name></expr>,
        <expr pos:start="13:9" pos:end="13:14"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:10">e</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <name pos:start="13:14" pos:end="13:14">e</name></expr>,
    }</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">unsigned</name></type> <name pos:start="15:14" pos:end="15:14">i</name></decl>;</decl_stmt>
    <if_stmt pos:start="16:5" pos:end="29:39"><if pos:start="16:5" pos:end="29:39">if <condition pos:start="16:8" pos:end="16:13">(<expr pos:start="16:9" pos:end="16:12"><name pos:start="16:9" pos:end="16:12">size</name></expr>)</condition> <block pos:start="16:15" pos:end="29:39">{<block_content pos:start="17:9" pos:end="29:39">
        <expr_stmt pos:start="17:9" pos:end="17:48"><expr pos:start="17:9" pos:end="17:47"><call pos:start="17:9" pos:end="17:47"><name pos:start="17:9" pos:end="17:25">adjust_endianness</name><argument_list pos:start="17:26" pos:end="17:47">(<argument pos:start="17:27" pos:end="17:28"><expr pos:start="17:27" pos:end="17:28"><name pos:start="17:27" pos:end="17:28">mr</name></expr></argument>, <argument pos:start="17:31" pos:end="17:40"><expr pos:start="17:31" pos:end="17:40"><operator pos:start="17:31" pos:end="17:31">&amp;</operator><name pos:start="17:32" pos:end="17:40"><name pos:start="17:32" pos:end="17:35">mrfd</name><operator pos:start="17:36" pos:end="17:36">.</operator><name pos:start="17:37" pos:end="17:40">data</name></name></expr></argument>, <argument pos:start="17:43" pos:end="17:46"><expr pos:start="17:43" pos:end="17:46"><name pos:start="17:43" pos:end="17:46">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:38"><expr pos:start="18:5" pos:end="18:37"><call pos:start="18:5" pos:end="18:37"><name pos:start="18:5" pos:end="18:35">memory_region_transaction_begin</name><argument_list pos:start="18:36" pos:end="18:37">()</argument_list></call></expr>;</expr_stmt>
    <for pos:start="19:5" pos:end="29:39">for <control pos:start="19:9" pos:end="19:42">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:37"><expr pos:start="19:17" pos:end="19:36"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:36"><name pos:start="19:21" pos:end="19:22">mr</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:36">ioeventfd_nb</name></name></expr>;</condition> <incr pos:start="19:39" pos:end="19:41"><expr pos:start="19:39" pos:end="19:41"><operator pos:start="19:39" pos:end="19:40">++</operator><name pos:start="19:41" pos:end="19:41">i</name></expr></incr>)</control> <block pos:start="19:44" pos:end="29:39">{<block_content pos:start="20:9" pos:end="29:39">
        <if_stmt pos:start="20:9" pos:end="29:39"><if pos:start="20:9" pos:end="29:39">if <condition pos:start="20:12" pos:end="20:68">(<expr pos:start="20:13" pos:end="20:67"><call pos:start="20:13" pos:end="20:67"><name pos:start="20:13" pos:end="20:42">memory_region_ioeventfd_before</name><argument_list pos:start="20:43" pos:end="20:67">(<argument pos:start="20:44" pos:end="20:47"><expr pos:start="20:44" pos:end="20:47"><name pos:start="20:44" pos:end="20:47">mrfd</name></expr></argument>, <argument pos:start="20:50" pos:end="20:66"><expr pos:start="20:50" pos:end="20:66"><name pos:start="20:50" pos:end="20:66"><name pos:start="20:50" pos:end="20:51">mr</name><operator pos:start="20:52" pos:end="20:53">-&gt;</operator><name pos:start="20:54" pos:end="20:63">ioeventfds</name><index pos:start="20:64" pos:end="20:66">[<expr pos:start="20:65" pos:end="20:65"><name pos:start="20:65" pos:end="20:65">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="20:70" pos:end="29:39">{<block_content pos:start="21:13" pos:end="29:39">
            <break pos:start="21:13" pos:end="21:18">break;</break>
    <expr_stmt pos:start="22:5" pos:end="22:23"><expr pos:start="22:5" pos:end="22:22"><operator pos:start="22:5" pos:end="22:6">++</operator><name pos:start="22:7" pos:end="22:22"><name pos:start="22:7" pos:end="22:8">mr</name><operator pos:start="22:9" pos:end="22:10">-&gt;</operator><name pos:start="22:11" pos:end="22:22">ioeventfd_nb</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="24:78"><expr pos:start="23:5" pos:end="24:77"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:6">mr</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:18">ioeventfds</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <call pos:start="23:22" pos:end="24:77"><name pos:start="23:22" pos:end="23:30">g_realloc</name><argument_list pos:start="23:31" pos:end="24:77">(<argument pos:start="23:32" pos:end="23:45"><expr pos:start="23:32" pos:end="23:45"><name pos:start="23:32" pos:end="23:45"><name pos:start="23:32" pos:end="23:33">mr</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:45">ioeventfds</name></name></expr></argument>,
                                  <argument pos:start="24:35" pos:end="24:76"><expr pos:start="24:35" pos:end="24:76"><sizeof pos:start="24:35" pos:end="24:57">sizeof<argument_list pos:start="24:41" pos:end="24:57">(<argument pos:start="24:42" pos:end="24:56"><expr pos:start="24:42" pos:end="24:56"><operator pos:start="24:42" pos:end="24:42">*</operator><name pos:start="24:43" pos:end="24:56"><name pos:start="24:43" pos:end="24:44">mr</name><operator pos:start="24:45" pos:end="24:46">-&gt;</operator><name pos:start="24:47" pos:end="24:56">ioeventfds</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="24:59" pos:end="24:59">*</operator> <name pos:start="24:61" pos:end="24:76"><name pos:start="24:61" pos:end="24:62">mr</name><operator pos:start="24:63" pos:end="24:64">-&gt;</operator><name pos:start="24:65" pos:end="24:76">ioeventfd_nb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="26:64"><expr pos:start="25:5" pos:end="26:63"><call pos:start="25:5" pos:end="26:63"><name pos:start="25:5" pos:end="25:11">memmove</name><argument_list pos:start="25:12" pos:end="26:63">(<argument pos:start="25:13" pos:end="25:32"><expr pos:start="25:13" pos:end="25:32"><operator pos:start="25:13" pos:end="25:13">&amp;</operator><name pos:start="25:14" pos:end="25:32"><name pos:start="25:14" pos:end="25:15">mr</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:27">ioeventfds</name><index pos:start="25:28" pos:end="25:32">[<expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:29">i</name><operator pos:start="25:30" pos:end="25:30">+</operator><literal type="number" pos:start="25:31" pos:end="25:31">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:35" pos:end="25:52"><expr pos:start="25:35" pos:end="25:52"><operator pos:start="25:35" pos:end="25:35">&amp;</operator><name pos:start="25:36" pos:end="25:52"><name pos:start="25:36" pos:end="25:37">mr</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:49">ioeventfds</name><index pos:start="25:50" pos:end="25:52">[<expr pos:start="25:51" pos:end="25:51"><name pos:start="25:51" pos:end="25:51">i</name></expr>]</index></name></expr></argument>,
            <argument pos:start="26:13" pos:end="26:62"><expr pos:start="26:13" pos:end="26:62"><sizeof pos:start="26:13" pos:end="26:35">sizeof<argument_list pos:start="26:19" pos:end="26:35">(<argument pos:start="26:20" pos:end="26:34"><expr pos:start="26:20" pos:end="26:34"><operator pos:start="26:20" pos:end="26:20">*</operator><name pos:start="26:21" pos:end="26:34"><name pos:start="26:21" pos:end="26:22">mr</name><operator pos:start="26:23" pos:end="26:24">-&gt;</operator><name pos:start="26:25" pos:end="26:34">ioeventfds</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="26:37" pos:end="26:37">*</operator> <operator pos:start="26:39" pos:end="26:39">(</operator><name pos:start="26:40" pos:end="26:55"><name pos:start="26:40" pos:end="26:41">mr</name><operator pos:start="26:42" pos:end="26:43">-&gt;</operator><name pos:start="26:44" pos:end="26:55">ioeventfd_nb</name></name><operator pos:start="26:56" pos:end="26:56">-</operator><literal type="number" pos:start="26:57" pos:end="26:59">1</literal> <operator pos:start="26:59" pos:end="26:59">-</operator> <name pos:start="26:61" pos:end="26:61">i</name><operator pos:start="26:62" pos:end="26:62">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:6">mr</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:18">ioeventfds</name><index pos:start="27:19" pos:end="27:21">[<expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">i</name></expr>]</index></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:28">mrfd</name></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:44"><expr pos:start="28:5" pos:end="28:43"><name pos:start="28:5" pos:end="28:28">ioeventfd_update_pending</name> <operator pos:start="28:30" pos:end="28:31">|=</operator> <name pos:start="28:33" pos:end="28:43"><name pos:start="28:33" pos:end="28:34">mr</name><operator pos:start="28:35" pos:end="28:36">-&gt;</operator><name pos:start="28:37" pos:end="28:43">enabled</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><call pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:36">memory_region_transaction_commit</name><argument_list pos:start="29:37" pos:end="29:38">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></unit>
