<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14613.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">ff_cavs_init_top_lines</name><parameter_list pos:start="1:28" pos:end="1:42">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:38">AVSContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">h</name></decl></parameter>)</parameter_list> <block pos:start="1:44" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:53">

    <comment type="block" pos:start="3:5" pos:end="3:38">/* alloc top line of predictors */</comment>

    <expr_stmt pos:start="5:5" pos:end="5:46"><expr pos:start="5:5" pos:end="5:45"><name pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:5">h</name><operator pos:start="5:6" pos:end="5:7">-&gt;</operator><name pos:start="5:8" pos:end="5:13">top_qp</name></name>       <operator pos:start="5:21" pos:end="5:21">=</operator> <call pos:start="5:23" pos:end="5:45"><name pos:start="5:23" pos:end="5:31">av_malloc</name><argument_list pos:start="5:32" pos:end="5:45">( <argument pos:start="5:34" pos:end="5:44"><expr pos:start="5:34" pos:end="5:44"><name pos:start="5:34" pos:end="5:44"><name pos:start="5:34" pos:end="5:34">h</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:44">mb_width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:71"><expr pos:start="7:5" pos:end="7:70"><name pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:5">h</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:13">top_mv</name><index pos:start="7:14" pos:end="7:16">[<expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr>]</index></name>    <operator pos:start="7:21" pos:end="7:21">=</operator> <call pos:start="7:23" pos:end="7:70"><name pos:start="7:23" pos:end="7:31">av_malloc</name><argument_list pos:start="7:32" pos:end="7:70">(<argument pos:start="7:33" pos:end="7:69"><expr pos:start="7:33" pos:end="7:69"><operator pos:start="7:33" pos:end="7:33">(</operator><name pos:start="7:34" pos:end="7:44"><name pos:start="7:34" pos:end="7:34">h</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:44">mb_width</name></name><operator pos:start="7:45" pos:end="7:45">*</operator><literal type="number" pos:start="7:46" pos:end="7:47">2</literal><operator pos:start="7:47" pos:end="7:47">+</operator><literal type="number" pos:start="7:48" pos:end="7:48">1</literal><operator pos:start="7:49" pos:end="7:49">)</operator><operator pos:start="7:50" pos:end="7:50">*</operator><sizeof pos:start="7:51" pos:end="7:69">sizeof<argument_list pos:start="7:57" pos:end="7:69">(<argument pos:start="7:58" pos:end="7:68"><expr pos:start="7:58" pos:end="7:68"><name pos:start="7:58" pos:end="7:68">cavs_vector</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:71"><expr pos:start="9:5" pos:end="9:70"><name pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:5">h</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:13">top_mv</name><index pos:start="9:14" pos:end="9:16">[<expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">1</literal></expr>]</index></name>    <operator pos:start="9:21" pos:end="9:21">=</operator> <call pos:start="9:23" pos:end="9:70"><name pos:start="9:23" pos:end="9:31">av_malloc</name><argument_list pos:start="9:32" pos:end="9:70">(<argument pos:start="9:33" pos:end="9:69"><expr pos:start="9:33" pos:end="9:69"><operator pos:start="9:33" pos:end="9:33">(</operator><name pos:start="9:34" pos:end="9:44"><name pos:start="9:34" pos:end="9:34">h</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:44">mb_width</name></name><operator pos:start="9:45" pos:end="9:45">*</operator><literal type="number" pos:start="9:46" pos:end="9:47">2</literal><operator pos:start="9:47" pos:end="9:47">+</operator><literal type="number" pos:start="9:48" pos:end="9:48">1</literal><operator pos:start="9:49" pos:end="9:49">)</operator><operator pos:start="9:50" pos:end="9:50">*</operator><sizeof pos:start="9:51" pos:end="9:69">sizeof<argument_list pos:start="9:57" pos:end="9:69">(<argument pos:start="9:58" pos:end="9:68"><expr pos:start="9:58" pos:end="9:68"><name pos:start="9:58" pos:end="9:68">cavs_vector</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:71"><expr pos:start="11:5" pos:end="11:70"><name pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:5">h</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:17">top_pred_Y</name></name>   <operator pos:start="11:21" pos:end="11:21">=</operator> <call pos:start="11:23" pos:end="11:70"><name pos:start="11:23" pos:end="11:31">av_malloc</name><argument_list pos:start="11:32" pos:end="11:70">( <argument pos:start="11:34" pos:end="11:69"><expr pos:start="11:34" pos:end="11:69"><name pos:start="11:34" pos:end="11:44"><name pos:start="11:34" pos:end="11:34">h</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:44">mb_width</name></name><operator pos:start="11:45" pos:end="11:45">*</operator><literal type="number" pos:start="11:46" pos:end="11:46">2</literal><operator pos:start="11:47" pos:end="11:47">*</operator><sizeof pos:start="11:48" pos:end="11:69">sizeof<argument_list pos:start="11:54" pos:end="11:69">(<argument pos:start="11:55" pos:end="11:68"><expr pos:start="11:55" pos:end="11:68"><operator pos:start="11:55" pos:end="11:55">*</operator><name pos:start="11:56" pos:end="11:68"><name pos:start="11:56" pos:end="11:56">h</name><operator pos:start="11:57" pos:end="11:58">-&gt;</operator><name pos:start="11:59" pos:end="11:68">top_pred_Y</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:5">h</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:19">top_border_y</name></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <call pos:start="13:23" pos:end="13:51"><name pos:start="13:23" pos:end="13:31">av_malloc</name><argument_list pos:start="13:32" pos:end="13:51">(<argument pos:start="13:33" pos:end="13:50"><expr pos:start="13:33" pos:end="13:50"><operator pos:start="13:33" pos:end="13:33">(</operator><name pos:start="13:34" pos:end="13:44"><name pos:start="13:34" pos:end="13:34">h</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:44">mb_width</name></name><operator pos:start="13:45" pos:end="13:45">+</operator><literal type="number" pos:start="13:46" pos:end="13:46">1</literal><operator pos:start="13:47" pos:end="13:47">)</operator><operator pos:start="13:48" pos:end="13:48">*</operator><literal type="number" pos:start="13:49" pos:end="13:50">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:51"><expr pos:start="15:5" pos:end="15:50"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:5">h</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:19">top_border_u</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <call pos:start="15:23" pos:end="15:50"><name pos:start="15:23" pos:end="15:31">av_malloc</name><argument_list pos:start="15:32" pos:end="15:50">( <argument pos:start="15:34" pos:end="15:49"><expr pos:start="15:34" pos:end="15:49"><name pos:start="15:34" pos:end="15:44"><name pos:start="15:34" pos:end="15:34">h</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:44">mb_width</name></name> <operator pos:start="15:46" pos:end="15:46">*</operator> <literal type="number" pos:start="15:48" pos:end="15:49">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:51"><expr pos:start="17:5" pos:end="17:50"><name pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:5">h</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:19">top_border_v</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <call pos:start="17:23" pos:end="17:50"><name pos:start="17:23" pos:end="17:31">av_malloc</name><argument_list pos:start="17:32" pos:end="17:50">( <argument pos:start="17:34" pos:end="17:49"><expr pos:start="17:34" pos:end="17:49"><name pos:start="17:34" pos:end="17:44"><name pos:start="17:34" pos:end="17:34">h</name><operator pos:start="17:35" pos:end="17:36">-&gt;</operator><name pos:start="17:37" pos:end="17:44">mb_width</name></name> <operator pos:start="17:46" pos:end="17:46">*</operator> <literal type="number" pos:start="17:48" pos:end="17:49">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:50">/* alloc space for co-located MVs and types */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:81"><expr pos:start="23:5" pos:end="23:80"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:5">h</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:13">col_mv</name></name>       <operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="23:80"><name pos:start="23:23" pos:end="23:31">av_malloc</name><argument_list pos:start="23:32" pos:end="23:80">( <argument pos:start="23:34" pos:end="23:79"><expr pos:start="23:34" pos:end="23:79"><name pos:start="23:34" pos:end="23:44"><name pos:start="23:34" pos:end="23:34">h</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:44">mb_width</name></name><operator pos:start="23:45" pos:end="23:45">*</operator><name pos:start="23:46" pos:end="23:57"><name pos:start="23:46" pos:end="23:46">h</name><operator pos:start="23:47" pos:end="23:48">-&gt;</operator><name pos:start="23:49" pos:end="23:57">mb_height</name></name><operator pos:start="23:58" pos:end="23:58">*</operator><literal type="number" pos:start="23:59" pos:end="23:59">4</literal><operator pos:start="23:60" pos:end="23:60">*</operator><sizeof pos:start="23:61" pos:end="23:79">sizeof<argument_list pos:start="23:67" pos:end="23:79">(<argument pos:start="23:68" pos:end="23:78"><expr pos:start="23:68" pos:end="23:78"><name pos:start="23:68" pos:end="23:78">cavs_vector</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:59"><expr pos:start="25:5" pos:end="25:58"><name pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:5">h</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:20">col_type_base</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="25:58"><name pos:start="25:24" pos:end="25:32">av_malloc</name><argument_list pos:start="25:33" pos:end="25:58">(<argument pos:start="25:34" pos:end="25:57"><expr pos:start="25:34" pos:end="25:57"><name pos:start="25:34" pos:end="25:44"><name pos:start="25:34" pos:end="25:34">h</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:44">mb_width</name></name><operator pos:start="25:45" pos:end="25:45">*</operator><name pos:start="25:46" pos:end="25:57"><name pos:start="25:46" pos:end="25:46">h</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:57">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:5">h</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:12">block</name></name>        <operator pos:start="27:21" pos:end="27:21">=</operator> <call pos:start="27:23" pos:end="27:52"><name pos:start="27:23" pos:end="27:32">av_mallocz</name><argument_list pos:start="27:33" pos:end="27:52">(<argument pos:start="27:34" pos:end="27:51"><expr pos:start="27:34" pos:end="27:51"><literal type="number" pos:start="27:34" pos:end="27:35">64</literal><operator pos:start="27:36" pos:end="27:36">*</operator><sizeof pos:start="27:37" pos:end="27:51">sizeof<argument_list pos:start="27:43" pos:end="27:51">(<argument pos:start="27:44" pos:end="27:50"><expr pos:start="27:44" pos:end="27:50"><name pos:start="27:44" pos:end="27:50">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
