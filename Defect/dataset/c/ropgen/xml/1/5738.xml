<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5738.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">blk_prw</name><parameter_list pos:start="1:19" pos:end="5:42">(<parameter pos:start="1:20" pos:end="1:36"><decl pos:start="1:20" pos:end="1:36"><type pos:start="1:20" pos:end="1:36"><name pos:start="1:20" pos:end="1:31">BlockBackend</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">blk</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:52"><name pos:start="1:39" pos:end="1:45">int64_t</name></type> <name pos:start="1:47" pos:end="1:52">offset</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:61">uint8_t</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">buf</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:32"><decl pos:start="3:20" pos:end="3:32"><type pos:start="3:20" pos:end="3:32"><name pos:start="3:20" pos:end="3:26">int64_t</name></type> <name pos:start="3:28" pos:end="3:32">bytes</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:57"><decl pos:start="3:35" pos:end="3:57"><type pos:start="3:35" pos:end="3:57"><name pos:start="3:35" pos:end="3:48">CoroutineEntry</name></type> <name pos:start="3:50" pos:end="3:57">co_entry</name></decl></parameter>,

                   <parameter pos:start="5:20" pos:end="5:41"><decl pos:start="5:20" pos:end="5:41"><type pos:start="5:20" pos:end="5:41"><name pos:start="5:20" pos:end="5:35">BdrvRequestFlags</name></type> <name pos:start="5:37" pos:end="5:41">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="67:1">{<block_content pos:start="9:5" pos:end="65:20">

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">AioContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:27">aio_context</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">QEMUIOVector</name></type> <name pos:start="11:18" pos:end="11:21">qiov</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:16">iovec</name></name></type> <name pos:start="13:18" pos:end="13:20">iov</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">Coroutine</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:17">co</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">BlkRwCo</name></type> <name pos:start="17:13" pos:end="17:16">rwco</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="27:6"><expr pos:start="21:5" pos:end="27:5"><name pos:start="21:5" pos:end="21:7">iov</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <operator pos:start="21:11" pos:end="21:11">(</operator>struct <name pos:start="21:19" pos:end="21:23">iovec</name><operator pos:start="21:24" pos:end="21:24">)</operator> <block pos:start="21:26" pos:end="27:5">{

        <expr pos:start="23:9" pos:end="23:23"><operator pos:start="23:9" pos:end="23:9">.</operator><name pos:start="23:10" pos:end="23:17">iov_base</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:23">buf</name></expr>,

        <expr pos:start="25:9" pos:end="25:24"><operator pos:start="25:9" pos:end="25:9">.</operator><name pos:start="25:10" pos:end="25:16">iov_len</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:24">bytes</name></expr>,

    }</block></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><call pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:28">qemu_iovec_init_external</name><argument_list pos:start="29:29" pos:end="29:44">(<argument pos:start="29:30" pos:end="29:34"><expr pos:start="29:30" pos:end="29:34"><operator pos:start="29:30" pos:end="29:30">&amp;</operator><name pos:start="29:31" pos:end="29:34">qiov</name></expr></argument>, <argument pos:start="29:37" pos:end="29:40"><expr pos:start="29:37" pos:end="29:40"><operator pos:start="29:37" pos:end="29:37">&amp;</operator><name pos:start="29:38" pos:end="29:40">iov</name></expr></argument>, <argument pos:start="29:43" pos:end="29:43"><expr pos:start="29:43" pos:end="29:43"><literal type="number" pos:start="29:43" pos:end="29:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="45:6"><expr pos:start="33:5" pos:end="45:5"><name pos:start="33:5" pos:end="33:8">rwco</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <operator pos:start="33:12" pos:end="33:12">(</operator><name pos:start="33:13" pos:end="33:19">BlkRwCo</name><operator pos:start="33:20" pos:end="33:20">)</operator> <block pos:start="33:22" pos:end="45:5">{

        <expr pos:start="35:9" pos:end="35:21"><operator pos:start="35:9" pos:end="35:9">.</operator><name pos:start="35:10" pos:end="35:12">blk</name>    <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:21">blk</name></expr>,

        <expr pos:start="37:9" pos:end="37:24"><operator pos:start="37:9" pos:end="37:9">.</operator><name pos:start="37:10" pos:end="37:15">offset</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:24">offset</name></expr>,

        <expr pos:start="39:9" pos:end="39:23"><operator pos:start="39:9" pos:end="39:9">.</operator><name pos:start="39:10" pos:end="39:13">qiov</name>   <operator pos:start="39:17" pos:end="39:17">=</operator> <operator pos:start="39:19" pos:end="39:19">&amp;</operator><name pos:start="39:20" pos:end="39:23">qiov</name></expr>,

        <expr pos:start="41:9" pos:end="41:23"><operator pos:start="41:9" pos:end="41:9">.</operator><name pos:start="41:10" pos:end="41:14">flags</name>  <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:23">flags</name></expr>,

        <expr pos:start="43:9" pos:end="43:26"><operator pos:start="43:9" pos:end="43:9">.</operator><name pos:start="43:10" pos:end="43:12">ret</name>    <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:26">NOT_DONE</name></expr>,

    }</block></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:41"><expr pos:start="49:5" pos:end="49:40"><name pos:start="49:5" pos:end="49:6">co</name> <operator pos:start="49:8" pos:end="49:8">=</operator> <call pos:start="49:10" pos:end="49:40"><name pos:start="49:10" pos:end="49:30">qemu_coroutine_create</name><argument_list pos:start="49:31" pos:end="49:40">(<argument pos:start="49:32" pos:end="49:39"><expr pos:start="49:32" pos:end="49:39"><name pos:start="49:32" pos:end="49:39">co_entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><call pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:24">qemu_coroutine_enter</name><argument_list pos:start="51:25" pos:end="51:35">(<argument pos:start="51:26" pos:end="51:27"><expr pos:start="51:26" pos:end="51:27"><name pos:start="51:26" pos:end="51:27">co</name></expr></argument>, <argument pos:start="51:30" pos:end="51:34"><expr pos:start="51:30" pos:end="51:34"><operator pos:start="51:30" pos:end="51:30">&amp;</operator><name pos:start="51:31" pos:end="51:34">rwco</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:43"><expr pos:start="55:5" pos:end="55:42"><name pos:start="55:5" pos:end="55:15">aio_context</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:42"><name pos:start="55:19" pos:end="55:37">blk_get_aio_context</name><argument_list pos:start="55:38" pos:end="55:42">(<argument pos:start="55:39" pos:end="55:41"><expr pos:start="55:39" pos:end="55:41"><name pos:start="55:39" pos:end="55:41">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="57:5" pos:end="61:5">while <condition pos:start="57:11" pos:end="57:32">(<expr pos:start="57:12" pos:end="57:31"><name pos:start="57:12" pos:end="57:19"><name pos:start="57:12" pos:end="57:15">rwco</name><operator pos:start="57:16" pos:end="57:16">.</operator><name pos:start="57:17" pos:end="57:19">ret</name></name> <operator pos:start="57:21" pos:end="57:22">==</operator> <name pos:start="57:24" pos:end="57:31">NOT_DONE</name></expr>)</condition> <block pos:start="57:34" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:36">

        <expr_stmt pos:start="59:9" pos:end="59:36"><expr pos:start="59:9" pos:end="59:35"><call pos:start="59:9" pos:end="59:35"><name pos:start="59:9" pos:end="59:16">aio_poll</name><argument_list pos:start="59:17" pos:end="59:35">(<argument pos:start="59:18" pos:end="59:28"><expr pos:start="59:18" pos:end="59:28"><name pos:start="59:18" pos:end="59:28">aio_context</name></expr></argument>, <argument pos:start="59:31" pos:end="59:34"><expr pos:start="59:31" pos:end="59:34"><name pos:start="59:31" pos:end="59:34">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="65:5" pos:end="65:20">return <expr pos:start="65:12" pos:end="65:19"><name pos:start="65:12" pos:end="65:19"><name pos:start="65:12" pos:end="65:15">rwco</name><operator pos:start="65:16" pos:end="65:16">.</operator><name pos:start="65:17" pos:end="65:19">ret</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
