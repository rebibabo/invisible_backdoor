<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1748.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">megasas_dcmd_cfg_read</name><parameter_list pos:start="1:33" pos:end="1:66">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:45">MegasasState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:65"><decl pos:start="1:51" pos:end="1:65"><type pos:start="1:51" pos:end="1:65"><name pos:start="1:51" pos:end="1:60">MegasasCmd</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">cmd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="165:1">{<block_content pos:start="5:5" pos:end="163:23">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:22"><name pos:start="5:13" pos:end="5:16">data</name><index pos:start="5:17" pos:end="5:22">[<expr pos:start="5:18" pos:end="5:21"><literal type="number" pos:start="5:18" pos:end="5:21">4096</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:26">mfi_config_data</name></name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:32">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:20">num_pd_disks</name> <init pos:start="9:22" pos:end="9:24">= <expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">0</literal></expr></init></decl>, <decl pos:start="9:27" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:38">array_offset</name></decl>, <decl pos:start="9:41" pos:end="9:49"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:41" pos:end="9:49">ld_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">BusChild</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">kid</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:29">(<expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:11">cmd</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:21">iov_size</name></name> <operator pos:start="15:23" pos:end="15:23">&gt;</operator> <literal type="number" pos:start="15:25" pos:end="15:28">4096</literal></expr>)</condition> <block pos:start="15:31" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:42">

        <return pos:start="17:9" pos:end="17:42">return <expr pos:start="17:16" pos:end="17:41"><name pos:start="17:16" pos:end="17:41">MFI_STAT_INVALID_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="23:5" pos:end="23:55"><name pos:start="23:5" pos:end="23:18">QTAILQ_FOREACH</name><argument_list pos:start="23:19" pos:end="23:55">(<argument pos:start="23:20" pos:end="23:22">kid</argument>, <argument pos:start="23:25" pos:end="23:45">&amp;s-&gt;bus.qbus.children</argument>, <argument pos:start="23:48" pos:end="23:54">sibling</argument>)</argument_list></macro> <block pos:start="23:57" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:23">

        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:20">num_pd_disks</name><operator pos:start="25:21" pos:end="25:22">++</operator></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="29:5" pos:end="29:43"><expr pos:start="29:5" pos:end="29:42"><name pos:start="29:5" pos:end="29:8">info</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <operator pos:start="29:12" pos:end="29:12">(</operator>struct <name pos:start="29:20" pos:end="29:34">mfi_config_data</name> <operator pos:start="29:36" pos:end="29:36">*</operator><operator pos:start="29:37" pos:end="29:37">)</operator><operator pos:start="29:38" pos:end="29:38">&amp;</operator><name pos:start="29:39" pos:end="29:42">data</name></expr>;</expr_stmt>

    <comment type="block" pos:start="31:5" pos:end="41:7">/*

     * Array mapping:

     * - One array per SCSI device

     * - One logical drive per SCSI device

     *   spanning the entire device

     */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:37"><expr pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:21"><name pos:start="43:5" pos:end="43:8">info</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:21">array_count</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:36">num_pd_disks</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:63"><expr pos:start="45:5" pos:end="45:62"><name pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:8">info</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:20">array_size</name></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <sizeof pos:start="45:24" pos:end="45:47">sizeof<argument_list pos:start="45:30" pos:end="45:47">(<argument pos:start="45:31" pos:end="45:46"><expr pos:start="45:31" pos:end="45:46">struct <name pos:start="45:38" pos:end="45:46">mfi_array</name></expr></argument>)</argument_list></sizeof> <operator pos:start="45:49" pos:end="45:49">*</operator> <name pos:start="45:51" pos:end="45:62">num_pd_disks</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:8">info</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:23">log_drv_count</name></name> <operator pos:start="47:25" pos:end="47:25">=</operator> <name pos:start="47:27" pos:end="47:38">num_pd_disks</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:69"><expr pos:start="49:5" pos:end="49:68"><name pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:8">info</name><operator pos:start="49:9" pos:end="49:10">-&gt;</operator><name pos:start="49:11" pos:end="49:22">log_drv_size</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <sizeof pos:start="49:26" pos:end="49:53">sizeof<argument_list pos:start="49:32" pos:end="49:53">(<argument pos:start="49:33" pos:end="49:52"><expr pos:start="49:33" pos:end="49:52">struct <name pos:start="49:40" pos:end="49:52">mfi_ld_config</name></expr></argument>)</argument_list></sizeof> <operator pos:start="49:55" pos:end="49:55">*</operator> <name pos:start="49:57" pos:end="49:68">num_pd_disks</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:8">info</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:22">spares_count</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:49"><expr pos:start="53:5" pos:end="53:48"><name pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:8">info</name><operator pos:start="53:9" pos:end="53:10">-&gt;</operator><name pos:start="53:11" pos:end="53:21">spares_size</name></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <sizeof pos:start="53:25" pos:end="53:48">sizeof<argument_list pos:start="53:31" pos:end="53:48">(<argument pos:start="53:32" pos:end="53:47"><expr pos:start="53:32" pos:end="53:47">struct <name pos:start="53:39" pos:end="53:47">mfi_spare</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="57:27"><expr pos:start="55:5" pos:end="57:26"><name pos:start="55:5" pos:end="55:14"><name pos:start="55:5" pos:end="55:8">info</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:14">size</name></name> <operator pos:start="55:16" pos:end="55:16">=</operator> <sizeof pos:start="55:18" pos:end="55:47">sizeof<argument_list pos:start="55:24" pos:end="55:47">(<argument pos:start="55:25" pos:end="55:46"><expr pos:start="55:25" pos:end="55:46">struct <name pos:start="55:32" pos:end="55:46">mfi_config_data</name></expr></argument>)</argument_list></sizeof> <operator pos:start="55:49" pos:end="55:49">+</operator> <name pos:start="55:51" pos:end="55:66"><name pos:start="55:51" pos:end="55:54">info</name><operator pos:start="55:55" pos:end="55:56">-&gt;</operator><name pos:start="55:57" pos:end="55:66">array_size</name></name> <operator pos:start="55:68" pos:end="55:68">+</operator>

        <name pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:12">info</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:26">log_drv_size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:26">(<expr pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:12">info</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:18">size</name></name> <operator pos:start="59:20" pos:end="59:20">&gt;</operator> <literal type="number" pos:start="59:22" pos:end="59:25">4096</literal></expr>)</condition> <block pos:start="59:28" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:42">

        <return pos:start="61:9" pos:end="61:42">return <expr pos:start="61:16" pos:end="61:41"><name pos:start="61:16" pos:end="61:41">MFI_STAT_INVALID_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:50"><expr pos:start="67:5" pos:end="67:49"><name pos:start="67:5" pos:end="67:16">array_offset</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <sizeof pos:start="67:20" pos:end="67:49">sizeof<argument_list pos:start="67:26" pos:end="67:49">(<argument pos:start="67:27" pos:end="67:48"><expr pos:start="67:27" pos:end="67:48">struct <name pos:start="67:34" pos:end="67:48">mfi_config_data</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:71"><expr pos:start="69:5" pos:end="69:70"><name pos:start="69:5" pos:end="69:13">ld_offset</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:28">array_offset</name> <operator pos:start="69:30" pos:end="69:30">+</operator> <sizeof pos:start="69:32" pos:end="69:55">sizeof<argument_list pos:start="69:38" pos:end="69:55">(<argument pos:start="69:39" pos:end="69:54"><expr pos:start="69:39" pos:end="69:54">struct <name pos:start="69:46" pos:end="69:54">mfi_array</name></expr></argument>)</argument_list></sizeof> <operator pos:start="69:57" pos:end="69:57">*</operator> <name pos:start="69:59" pos:end="69:70">num_pd_disks</name></expr>;</expr_stmt>



    <macro pos:start="73:5" pos:end="73:55"><name pos:start="73:5" pos:end="73:18">QTAILQ_FOREACH</name><argument_list pos:start="73:19" pos:end="73:55">(<argument pos:start="73:20" pos:end="73:22">kid</argument>, <argument pos:start="73:25" pos:end="73:45">&amp;s-&gt;bus.qbus.children</argument>, <argument pos:start="73:48" pos:end="73:54">sibling</argument>)</argument_list></macro> <block pos:start="73:57" pos:end="157:5">{<block_content pos:start="75:9" pos:end="155:50">

        <decl_stmt pos:start="75:9" pos:end="75:51"><decl pos:start="75:9" pos:end="75:50"><type pos:start="75:9" pos:end="75:20"><name pos:start="75:9" pos:end="75:18">SCSIDevice</name> <modifier pos:start="75:20" pos:end="75:20">*</modifier></type><name pos:start="75:21" pos:end="75:24">sdev</name> <init pos:start="75:26" pos:end="75:50">= <expr pos:start="75:28" pos:end="75:50"><call pos:start="75:28" pos:end="75:50"><name pos:start="75:28" pos:end="75:38">SCSI_DEVICE</name><argument_list pos:start="75:39" pos:end="75:50">(<argument pos:start="75:40" pos:end="75:49"><expr pos:start="75:40" pos:end="75:49"><name pos:start="75:40" pos:end="75:49"><name pos:start="75:40" pos:end="75:42">kid</name><operator pos:start="75:43" pos:end="75:44">-&gt;</operator><name pos:start="75:45" pos:end="75:49">child</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="77:9" pos:end="77:73"><decl pos:start="77:9" pos:end="77:72"><type pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:16">uint16_t</name></type> <name pos:start="77:18" pos:end="77:24">sdev_id</name> <init pos:start="77:26" pos:end="77:72">= <expr pos:start="77:28" pos:end="77:72"><operator pos:start="77:28" pos:end="77:28">(</operator><operator pos:start="77:29" pos:end="77:29">(</operator><name pos:start="77:30" pos:end="77:37"><name pos:start="77:30" pos:end="77:33">sdev</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:37">id</name></name> <operator pos:start="77:39" pos:end="77:39">&amp;</operator> <literal type="number" pos:start="77:41" pos:end="77:44">0xFF</literal><operator pos:start="77:45" pos:end="77:45">)</operator> <operator pos:start="77:47" pos:end="77:48">&lt;&lt;</operator> <literal type="number" pos:start="77:50" pos:end="77:50">8</literal><operator pos:start="77:51" pos:end="77:51">)</operator> <operator pos:start="77:53" pos:end="77:53">|</operator> <operator pos:start="77:55" pos:end="77:55">(</operator><name pos:start="77:56" pos:end="77:64"><name pos:start="77:56" pos:end="77:59">sdev</name><operator pos:start="77:60" pos:end="77:61">-&gt;</operator><name pos:start="77:62" pos:end="77:64">lun</name></name> <operator pos:start="77:66" pos:end="77:66">&amp;</operator> <literal type="number" pos:start="77:68" pos:end="77:71">0xFF</literal><operator pos:start="77:72" pos:end="77:72">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:32"><decl pos:start="79:9" pos:end="79:31"><type pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:14">struct</name> <name pos:start="79:16" pos:end="79:24">mfi_array</name></name> <modifier pos:start="79:26" pos:end="79:26">*</modifier></type><name pos:start="79:27" pos:end="79:31">array</name></decl>;</decl_stmt>

        <decl_stmt pos:start="81:9" pos:end="81:33"><decl pos:start="81:9" pos:end="81:32"><type pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:14">struct</name> <name pos:start="81:16" pos:end="81:28">mfi_ld_config</name></name> <modifier pos:start="81:30" pos:end="81:30">*</modifier></type><name pos:start="81:31" pos:end="81:32">ld</name></decl>;</decl_stmt>

        <decl_stmt pos:start="83:9" pos:end="83:25"><decl pos:start="83:9" pos:end="83:24"><type pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:16">uint64_t</name></type> <name pos:start="83:18" pos:end="83:24">pd_size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="85:9" pos:end="85:14"><decl pos:start="85:9" pos:end="85:13"><type pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">int</name></type> <name pos:start="85:13" pos:end="85:13">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:58"><expr pos:start="89:9" pos:end="89:57"><name pos:start="89:9" pos:end="89:13">array</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <operator pos:start="89:17" pos:end="89:17">(</operator>struct <name pos:start="89:25" pos:end="89:33">mfi_array</name> <operator pos:start="89:35" pos:end="89:35">*</operator><operator pos:start="89:36" pos:end="89:36">)</operator><operator pos:start="89:37" pos:end="89:37">(</operator><name pos:start="89:38" pos:end="89:41">data</name> <operator pos:start="89:43" pos:end="89:43">+</operator> <name pos:start="89:45" pos:end="89:56">array_offset</name><operator pos:start="89:57" pos:end="89:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:51"><expr pos:start="91:9" pos:end="91:50"><call pos:start="91:9" pos:end="91:50"><name pos:start="91:9" pos:end="91:24">blk_get_geometry</name><argument_list pos:start="91:25" pos:end="91:50">(<argument pos:start="91:26" pos:end="91:39"><expr pos:start="91:26" pos:end="91:39"><name pos:start="91:26" pos:end="91:39"><name pos:start="91:26" pos:end="91:29">sdev</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:35">conf</name><operator pos:start="91:36" pos:end="91:36">.</operator><name pos:start="91:37" pos:end="91:39">blk</name></name></expr></argument>, <argument pos:start="91:42" pos:end="91:49"><expr pos:start="91:42" pos:end="91:49"><operator pos:start="91:42" pos:end="91:42">&amp;</operator><name pos:start="91:43" pos:end="91:49">pd_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:43"><expr pos:start="93:9" pos:end="93:42"><name pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:13">array</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:19">size</name></name> <operator pos:start="93:21" pos:end="93:21">=</operator> <call pos:start="93:23" pos:end="93:42"><name pos:start="93:23" pos:end="93:33">cpu_to_le64</name><argument_list pos:start="93:34" pos:end="93:42">(<argument pos:start="93:35" pos:end="93:41"><expr pos:start="93:35" pos:end="93:41"><name pos:start="93:35" pos:end="93:41">pd_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:30"><expr pos:start="95:9" pos:end="95:29"><name pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:13">array</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:25">num_drives</name></name> <operator pos:start="95:27" pos:end="95:27">=</operator> <literal type="number" pos:start="95:29" pos:end="95:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:48"><expr pos:start="97:9" pos:end="97:47"><name pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:13">array</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:24">array_ref</name></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <call pos:start="97:28" pos:end="97:47"><name pos:start="97:28" pos:end="97:38">cpu_to_le16</name><argument_list pos:start="97:39" pos:end="97:47">(<argument pos:start="97:40" pos:end="97:46"><expr pos:start="97:40" pos:end="97:46"><name pos:start="97:40" pos:end="97:46">sdev_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:60"><expr pos:start="99:9" pos:end="99:59"><name pos:start="99:9" pos:end="99:20"><name pos:start="99:9" pos:end="99:13">array</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:17">pd</name><index pos:start="99:18" pos:end="99:20">[<expr pos:start="99:19" pos:end="99:19"><literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>]</index></name><operator pos:start="99:21" pos:end="99:21">.</operator><name pos:start="99:22" pos:end="99:36"><name pos:start="99:22" pos:end="99:24">ref</name><operator pos:start="99:25" pos:end="99:25">.</operator><name pos:start="99:26" pos:end="99:26">v</name><operator pos:start="99:27" pos:end="99:27">.</operator><name pos:start="99:28" pos:end="99:36">device_id</name></name> <operator pos:start="99:38" pos:end="99:38">=</operator> <call pos:start="99:40" pos:end="99:59"><name pos:start="99:40" pos:end="99:50">cpu_to_le16</name><argument_list pos:start="99:51" pos:end="99:59">(<argument pos:start="99:52" pos:end="99:58"><expr pos:start="99:52" pos:end="99:58"><name pos:start="99:52" pos:end="99:58">sdev_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:39"><expr pos:start="101:9" pos:end="101:38"><name pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:13">array</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:17">pd</name><index pos:start="101:18" pos:end="101:20">[<expr pos:start="101:19" pos:end="101:19"><literal type="number" pos:start="101:19" pos:end="101:19">0</literal></expr>]</index></name><operator pos:start="101:21" pos:end="101:21">.</operator><name pos:start="101:22" pos:end="101:34"><name pos:start="101:22" pos:end="101:24">ref</name><operator pos:start="101:25" pos:end="101:25">.</operator><name pos:start="101:26" pos:end="101:26">v</name><operator pos:start="101:27" pos:end="101:27">.</operator><name pos:start="101:28" pos:end="101:34">seq_num</name></name> <operator pos:start="101:36" pos:end="101:36">=</operator> <literal type="number" pos:start="101:38" pos:end="101:38">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:52"><expr pos:start="103:9" pos:end="103:51"><name pos:start="103:9" pos:end="103:20"><name pos:start="103:9" pos:end="103:13">array</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:17">pd</name><index pos:start="103:18" pos:end="103:20">[<expr pos:start="103:19" pos:end="103:19"><literal type="number" pos:start="103:19" pos:end="103:19">0</literal></expr>]</index></name><operator pos:start="103:21" pos:end="103:21">.</operator><name pos:start="103:22" pos:end="103:29">fw_state</name> <operator pos:start="103:31" pos:end="103:31">=</operator> <name pos:start="103:33" pos:end="103:51">MFI_PD_STATE_ONLINE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:36"><expr pos:start="105:9" pos:end="105:35"><name pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:13">array</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:17">pd</name><index pos:start="105:18" pos:end="105:20">[<expr pos:start="105:19" pos:end="105:19"><literal type="number" pos:start="105:19" pos:end="105:19">0</literal></expr>]</index></name><operator pos:start="105:21" pos:end="105:21">.</operator><name pos:start="105:22" pos:end="105:28"><name pos:start="105:22" pos:end="105:25">encl</name><operator pos:start="105:26" pos:end="105:26">.</operator><name pos:start="105:27" pos:end="105:28">pd</name></name> <operator pos:start="105:30" pos:end="105:30">=</operator> <literal type="number" pos:start="105:32" pos:end="105:35">0xFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:51"><expr pos:start="107:9" pos:end="107:50"><name pos:start="107:9" pos:end="107:20"><name pos:start="107:9" pos:end="107:13">array</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:17">pd</name><index pos:start="107:18" pos:end="107:20">[<expr pos:start="107:19" pos:end="107:19"><literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr>]</index></name><operator pos:start="107:21" pos:end="107:21">.</operator><name pos:start="107:22" pos:end="107:30"><name pos:start="107:22" pos:end="107:25">encl</name><operator pos:start="107:26" pos:end="107:26">.</operator><name pos:start="107:27" pos:end="107:30">slot</name></name> <operator pos:start="107:32" pos:end="107:32">=</operator> <operator pos:start="107:34" pos:end="107:34">(</operator><name pos:start="107:35" pos:end="107:42"><name pos:start="107:35" pos:end="107:38">sdev</name><operator pos:start="107:39" pos:end="107:40">-&gt;</operator><name pos:start="107:41" pos:end="107:42">id</name></name> <operator pos:start="107:44" pos:end="107:44">&amp;</operator> <literal type="number" pos:start="107:46" pos:end="107:49">0xFF</literal><operator pos:start="107:50" pos:end="107:50">)</operator></expr>;</expr_stmt>

        <for pos:start="109:9" pos:end="121:9">for <control pos:start="109:13" pos:end="109:46">(<init pos:start="109:14" pos:end="109:19"><expr pos:start="109:14" pos:end="109:18"><name pos:start="109:14" pos:end="109:14">i</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <literal type="number" pos:start="109:18" pos:end="109:18">1</literal></expr>;</init> <condition pos:start="109:21" pos:end="109:41"><expr pos:start="109:21" pos:end="109:40"><name pos:start="109:21" pos:end="109:21">i</name> <operator pos:start="109:23" pos:end="109:23">&lt;</operator> <name pos:start="109:25" pos:end="109:40">MFI_MAX_ROW_SIZE</name></expr>;</condition> <incr pos:start="109:43" pos:end="109:45"><expr pos:start="109:43" pos:end="109:45"><name pos:start="109:43" pos:end="109:43">i</name><operator pos:start="109:44" pos:end="109:45">++</operator></expr></incr>)</control> <block pos:start="109:48" pos:end="121:9">{<block_content pos:start="111:13" pos:end="119:42">

            <expr_stmt pos:start="111:13" pos:end="111:50"><expr pos:start="111:13" pos:end="111:49"><name pos:start="111:13" pos:end="111:24"><name pos:start="111:13" pos:end="111:17">array</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:21">pd</name><index pos:start="111:22" pos:end="111:24">[<expr pos:start="111:23" pos:end="111:23"><name pos:start="111:23" pos:end="111:23">i</name></expr>]</index></name><operator pos:start="111:25" pos:end="111:25">.</operator><name pos:start="111:26" pos:end="111:40"><name pos:start="111:26" pos:end="111:28">ref</name><operator pos:start="111:29" pos:end="111:29">.</operator><name pos:start="111:30" pos:end="111:30">v</name><operator pos:start="111:31" pos:end="111:31">.</operator><name pos:start="111:32" pos:end="111:40">device_id</name></name> <operator pos:start="111:42" pos:end="111:42">=</operator> <literal type="number" pos:start="111:44" pos:end="111:49">0xFFFF</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:43"><expr pos:start="113:13" pos:end="113:42"><name pos:start="113:13" pos:end="113:24"><name pos:start="113:13" pos:end="113:17">array</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:21">pd</name><index pos:start="113:22" pos:end="113:24">[<expr pos:start="113:23" pos:end="113:23"><name pos:start="113:23" pos:end="113:23">i</name></expr>]</index></name><operator pos:start="113:25" pos:end="113:25">.</operator><name pos:start="113:26" pos:end="113:38"><name pos:start="113:26" pos:end="113:28">ref</name><operator pos:start="113:29" pos:end="113:29">.</operator><name pos:start="113:30" pos:end="113:30">v</name><operator pos:start="113:31" pos:end="113:31">.</operator><name pos:start="113:32" pos:end="113:38">seq_num</name></name> <operator pos:start="113:40" pos:end="113:40">=</operator> <literal type="number" pos:start="113:42" pos:end="113:42">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:67"><expr pos:start="115:13" pos:end="115:66"><name pos:start="115:13" pos:end="115:24"><name pos:start="115:13" pos:end="115:17">array</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:21">pd</name><index pos:start="115:22" pos:end="115:24">[<expr pos:start="115:23" pos:end="115:23"><name pos:start="115:23" pos:end="115:23">i</name></expr>]</index></name><operator pos:start="115:25" pos:end="115:25">.</operator><name pos:start="115:26" pos:end="115:33">fw_state</name> <operator pos:start="115:35" pos:end="115:35">=</operator> <name pos:start="115:37" pos:end="115:66">MFI_PD_STATE_UNCONFIGURED_GOOD</name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:40"><expr pos:start="117:13" pos:end="117:39"><name pos:start="117:13" pos:end="117:24"><name pos:start="117:13" pos:end="117:17">array</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:21">pd</name><index pos:start="117:22" pos:end="117:24">[<expr pos:start="117:23" pos:end="117:23"><name pos:start="117:23" pos:end="117:23">i</name></expr>]</index></name><operator pos:start="117:25" pos:end="117:25">.</operator><name pos:start="117:26" pos:end="117:32"><name pos:start="117:26" pos:end="117:29">encl</name><operator pos:start="117:30" pos:end="117:30">.</operator><name pos:start="117:31" pos:end="117:32">pd</name></name> <operator pos:start="117:34" pos:end="117:34">=</operator> <literal type="number" pos:start="117:36" pos:end="117:39">0xFF</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:42"><expr pos:start="119:13" pos:end="119:41"><name pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:17">array</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:21">pd</name><index pos:start="119:22" pos:end="119:24">[<expr pos:start="119:23" pos:end="119:23"><name pos:start="119:23" pos:end="119:23">i</name></expr>]</index></name><operator pos:start="119:25" pos:end="119:25">.</operator><name pos:start="119:26" pos:end="119:34"><name pos:start="119:26" pos:end="119:29">encl</name><operator pos:start="119:30" pos:end="119:30">.</operator><name pos:start="119:31" pos:end="119:34">slot</name></name> <operator pos:start="119:36" pos:end="119:36">=</operator> <literal type="number" pos:start="119:38" pos:end="119:41">0xFF</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="123:9" pos:end="123:49"><expr pos:start="123:9" pos:end="123:48"><name pos:start="123:9" pos:end="123:20">array_offset</name> <operator pos:start="123:22" pos:end="123:23">+=</operator> <sizeof pos:start="123:25" pos:end="123:48">sizeof<argument_list pos:start="123:31" pos:end="123:48">(<argument pos:start="123:32" pos:end="123:47"><expr pos:start="123:32" pos:end="123:47">struct <name pos:start="123:39" pos:end="123:47">mfi_array</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:56"><expr pos:start="125:9" pos:end="125:55"><name pos:start="125:9" pos:end="125:10">ld</name> <operator pos:start="125:12" pos:end="125:12">=</operator> <operator pos:start="125:14" pos:end="125:14">(</operator>struct <name pos:start="125:22" pos:end="125:34">mfi_ld_config</name> <operator pos:start="125:36" pos:end="125:36">*</operator><operator pos:start="125:37" pos:end="125:37">)</operator><operator pos:start="125:38" pos:end="125:38">(</operator><name pos:start="125:39" pos:end="125:42">data</name> <operator pos:start="125:44" pos:end="125:44">+</operator> <name pos:start="125:46" pos:end="125:54">ld_offset</name><operator pos:start="125:55" pos:end="125:55">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:52"><expr pos:start="127:9" pos:end="127:51"><call pos:start="127:9" pos:end="127:51"><name pos:start="127:9" pos:end="127:14">memset</name><argument_list pos:start="127:15" pos:end="127:51">(<argument pos:start="127:16" pos:end="127:17"><expr pos:start="127:16" pos:end="127:17"><name pos:start="127:16" pos:end="127:17">ld</name></expr></argument>, <argument pos:start="127:20" pos:end="127:20"><expr pos:start="127:20" pos:end="127:20"><literal type="number" pos:start="127:20" pos:end="127:20">0</literal></expr></argument>, <argument pos:start="127:23" pos:end="127:50"><expr pos:start="127:23" pos:end="127:50"><sizeof pos:start="127:23" pos:end="127:50">sizeof<argument_list pos:start="127:29" pos:end="127:50">(<argument pos:start="127:30" pos:end="127:49"><expr pos:start="127:30" pos:end="127:49">struct <name pos:start="127:37" pos:end="127:49">mfi_ld_config</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:49"><expr pos:start="129:9" pos:end="129:48"><name pos:start="129:9" pos:end="129:37"><name pos:start="129:9" pos:end="129:10">ld</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:22">properties</name><operator pos:start="129:23" pos:end="129:23">.</operator><name pos:start="129:24" pos:end="129:25">ld</name><operator pos:start="129:26" pos:end="129:26">.</operator><name pos:start="129:27" pos:end="129:27">v</name><operator pos:start="129:28" pos:end="129:28">.</operator><name pos:start="129:29" pos:end="129:37">target_id</name></name> <operator pos:start="129:39" pos:end="129:39">=</operator> <name pos:start="129:41" pos:end="129:48"><name pos:start="129:41" pos:end="129:44">sdev</name><operator pos:start="129:45" pos:end="129:46">-&gt;</operator><name pos:start="129:47" pos:end="129:48">id</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="133:38"><expr pos:start="131:9" pos:end="133:37"><name pos:start="131:9" pos:end="131:43"><name pos:start="131:9" pos:end="131:10">ld</name><operator pos:start="131:11" pos:end="131:12">-&gt;</operator><name pos:start="131:13" pos:end="131:22">properties</name><operator pos:start="131:23" pos:end="131:23">.</operator><name pos:start="131:24" pos:end="131:43">default_cache_policy</name></name> <operator pos:start="131:45" pos:end="131:45">=</operator> <name pos:start="131:47" pos:end="131:68">MR_LD_CACHE_READ_AHEAD</name> <operator pos:start="131:70" pos:end="131:70">|</operator>

            <name pos:start="133:13" pos:end="133:37">MR_LD_CACHE_READ_ADAPTIVE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="137:38"><expr pos:start="135:9" pos:end="137:37"><name pos:start="135:9" pos:end="135:43"><name pos:start="135:9" pos:end="135:10">ld</name><operator pos:start="135:11" pos:end="135:12">-&gt;</operator><name pos:start="135:13" pos:end="135:22">properties</name><operator pos:start="135:23" pos:end="135:23">.</operator><name pos:start="135:24" pos:end="135:43">current_cache_policy</name></name> <operator pos:start="135:45" pos:end="135:45">=</operator> <name pos:start="135:47" pos:end="135:68">MR_LD_CACHE_READ_AHEAD</name> <operator pos:start="135:70" pos:end="135:70">|</operator>

            <name pos:start="137:13" pos:end="137:37">MR_LD_CACHE_READ_ADAPTIVE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:48"><expr pos:start="139:9" pos:end="139:47"><name pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:10">ld</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:18">params</name><operator pos:start="139:19" pos:end="139:19">.</operator><name pos:start="139:20" pos:end="139:24">state</name></name> <operator pos:start="139:26" pos:end="139:26">=</operator> <name pos:start="139:28" pos:end="139:47">MFI_LD_STATE_OPTIMAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:35"><expr pos:start="141:9" pos:end="141:34"><name pos:start="141:9" pos:end="141:30"><name pos:start="141:9" pos:end="141:10">ld</name><operator pos:start="141:11" pos:end="141:12">-&gt;</operator><name pos:start="141:13" pos:end="141:18">params</name><operator pos:start="141:19" pos:end="141:19">.</operator><name pos:start="141:20" pos:end="141:30">stripe_size</name></name> <operator pos:start="141:32" pos:end="141:32">=</operator> <literal type="number" pos:start="141:34" pos:end="141:34">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:34"><expr pos:start="143:9" pos:end="143:33"><name pos:start="143:9" pos:end="143:29"><name pos:start="143:9" pos:end="143:10">ld</name><operator pos:start="143:11" pos:end="143:12">-&gt;</operator><name pos:start="143:13" pos:end="143:18">params</name><operator pos:start="143:19" pos:end="143:19">.</operator><name pos:start="143:20" pos:end="143:29">num_drives</name></name> <operator pos:start="143:31" pos:end="143:31">=</operator> <literal type="number" pos:start="143:33" pos:end="143:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:34"><expr pos:start="145:9" pos:end="145:33"><name pos:start="145:9" pos:end="145:29"><name pos:start="145:9" pos:end="145:10">ld</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:18">params</name><operator pos:start="145:19" pos:end="145:19">.</operator><name pos:start="145:20" pos:end="145:29">span_depth</name></name> <operator pos:start="145:31" pos:end="145:31">=</operator> <literal type="number" pos:start="145:33" pos:end="145:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:37"><expr pos:start="147:9" pos:end="147:36"><name pos:start="147:9" pos:end="147:32"><name pos:start="147:9" pos:end="147:10">ld</name><operator pos:start="147:11" pos:end="147:12">-&gt;</operator><name pos:start="147:13" pos:end="147:18">params</name><operator pos:start="147:19" pos:end="147:19">.</operator><name pos:start="147:20" pos:end="147:32">is_consistent</name></name> <operator pos:start="147:34" pos:end="147:34">=</operator> <literal type="number" pos:start="147:36" pos:end="147:36">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:36"><expr pos:start="149:9" pos:end="149:35"><name pos:start="149:9" pos:end="149:19"><name pos:start="149:9" pos:end="149:10">ld</name><operator pos:start="149:11" pos:end="149:12">-&gt;</operator><name pos:start="149:13" pos:end="149:16">span</name><index pos:start="149:17" pos:end="149:19">[<expr pos:start="149:18" pos:end="149:18"><literal type="number" pos:start="149:18" pos:end="149:18">0</literal></expr>]</index></name><operator pos:start="149:20" pos:end="149:20">.</operator><name pos:start="149:21" pos:end="149:31">start_block</name> <operator pos:start="149:33" pos:end="149:33">=</operator> <literal type="number" pos:start="149:35" pos:end="149:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:54"><expr pos:start="151:9" pos:end="151:53"><name pos:start="151:9" pos:end="151:19"><name pos:start="151:9" pos:end="151:10">ld</name><operator pos:start="151:11" pos:end="151:12">-&gt;</operator><name pos:start="151:13" pos:end="151:16">span</name><index pos:start="151:17" pos:end="151:19">[<expr pos:start="151:18" pos:end="151:18"><literal type="number" pos:start="151:18" pos:end="151:18">0</literal></expr>]</index></name><operator pos:start="151:20" pos:end="151:20">.</operator><name pos:start="151:21" pos:end="151:30">num_blocks</name> <operator pos:start="151:32" pos:end="151:32">=</operator> <call pos:start="151:34" pos:end="151:53"><name pos:start="151:34" pos:end="151:44">cpu_to_le64</name><argument_list pos:start="151:45" pos:end="151:53">(<argument pos:start="151:46" pos:end="151:52"><expr pos:start="151:46" pos:end="151:52"><name pos:start="151:46" pos:end="151:52">pd_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:53"><expr pos:start="153:9" pos:end="153:52"><name pos:start="153:9" pos:end="153:19"><name pos:start="153:9" pos:end="153:10">ld</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:16">span</name><index pos:start="153:17" pos:end="153:19">[<expr pos:start="153:18" pos:end="153:18"><literal type="number" pos:start="153:18" pos:end="153:18">0</literal></expr>]</index></name><operator pos:start="153:20" pos:end="153:20">.</operator><name pos:start="153:21" pos:end="153:29">array_ref</name> <operator pos:start="153:31" pos:end="153:31">=</operator> <call pos:start="153:33" pos:end="153:52"><name pos:start="153:33" pos:end="153:43">cpu_to_le16</name><argument_list pos:start="153:44" pos:end="153:52">(<argument pos:start="153:45" pos:end="153:51"><expr pos:start="153:45" pos:end="153:51"><name pos:start="153:45" pos:end="153:51">sdev_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:50"><expr pos:start="155:9" pos:end="155:49"><name pos:start="155:9" pos:end="155:17">ld_offset</name> <operator pos:start="155:19" pos:end="155:20">+=</operator> <sizeof pos:start="155:22" pos:end="155:49">sizeof<argument_list pos:start="155:28" pos:end="155:49">(<argument pos:start="155:29" pos:end="155:48"><expr pos:start="155:29" pos:end="155:48">struct <name pos:start="155:36" pos:end="155:48">mfi_ld_config</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="161:5" pos:end="161:74"><expr pos:start="161:5" pos:end="161:73"><name pos:start="161:5" pos:end="161:17"><name pos:start="161:5" pos:end="161:7">cmd</name><operator pos:start="161:8" pos:end="161:9">-&gt;</operator><name pos:start="161:10" pos:end="161:17">iov_size</name></name> <operator pos:start="161:19" pos:end="161:20">-=</operator> <call pos:start="161:22" pos:end="161:73"><name pos:start="161:22" pos:end="161:33">dma_buf_read</name><argument_list pos:start="161:34" pos:end="161:73">(<argument pos:start="161:35" pos:end="161:49"><expr pos:start="161:35" pos:end="161:49"><operator pos:start="161:35" pos:end="161:35">(</operator><name pos:start="161:36" pos:end="161:42">uint8_t</name> <operator pos:start="161:44" pos:end="161:44">*</operator><operator pos:start="161:45" pos:end="161:45">)</operator><name pos:start="161:46" pos:end="161:49">data</name></expr></argument>, <argument pos:start="161:52" pos:end="161:61"><expr pos:start="161:52" pos:end="161:61"><name pos:start="161:52" pos:end="161:61"><name pos:start="161:52" pos:end="161:55">info</name><operator pos:start="161:56" pos:end="161:57">-&gt;</operator><name pos:start="161:58" pos:end="161:61">size</name></name></expr></argument>, <argument pos:start="161:64" pos:end="161:72"><expr pos:start="161:64" pos:end="161:72"><operator pos:start="161:64" pos:end="161:64">&amp;</operator><name pos:start="161:65" pos:end="161:72"><name pos:start="161:65" pos:end="161:67">cmd</name><operator pos:start="161:68" pos:end="161:69">-&gt;</operator><name pos:start="161:70" pos:end="161:72">qsg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="163:5" pos:end="163:23">return <expr pos:start="163:12" pos:end="163:22"><name pos:start="163:12" pos:end="163:22">MFI_STAT_OK</name></expr>;</return>

</block_content>}</block></function>
</unit>
