<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/954.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:24">doubles2str</name><parameter_list pos:start="1:25" pos:end="1:64">(<parameter pos:start="1:26" pos:end="1:35"><decl pos:start="1:26" pos:end="1:35"><type pos:start="1:26" pos:end="1:35"><name pos:start="1:26" pos:end="1:31">double</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:35">dp</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:46"><decl pos:start="1:38" pos:end="1:46"><type pos:start="1:38" pos:end="1:46"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:46">count</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">sep</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:15">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:12">ap</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">ap0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">component_len</name> <init pos:start="9:23" pos:end="9:40">= <expr pos:start="9:25" pos:end="9:40"><literal type="number" pos:start="9:25" pos:end="9:28">15</literal> <operator pos:start="9:28" pos:end="9:28">+</operator> <call pos:start="9:30" pos:end="9:40"><name pos:start="9:30" pos:end="9:35">strlen</name><argument_list pos:start="9:36" pos:end="9:40">(<argument pos:start="9:37" pos:end="9:39"><expr pos:start="9:37" pos:end="9:39"><name pos:start="9:37" pos:end="9:39">sep</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="11:25"><if pos:start="11:5" pos:end="11:25">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:12">sep</name></expr>)</condition><block type="pseudo" pos:start="11:15" pos:end="11:25"><block_content pos:start="11:15" pos:end="11:25"> <expr_stmt pos:start="11:15" pos:end="11:25"><expr pos:start="11:15" pos:end="11:24"><name pos:start="11:15" pos:end="11:17">sep</name> <operator pos:start="11:19" pos:end="11:19">=</operator> <literal type="string" pos:start="11:21" pos:end="11:24">", "</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:42"><expr pos:start="13:5" pos:end="13:41"><name pos:start="13:5" pos:end="13:6">ap</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:41"><name pos:start="13:10" pos:end="13:18">av_malloc</name><argument_list pos:start="13:19" pos:end="13:41">(<argument pos:start="13:20" pos:end="13:40"><expr pos:start="13:20" pos:end="13:40"><name pos:start="13:20" pos:end="13:32">component_len</name> <operator pos:start="13:34" pos:end="13:34">*</operator> <name pos:start="13:36" pos:end="13:40">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:20"><if pos:start="15:5" pos:end="17:20">if <condition pos:start="15:8" pos:end="15:12">(<expr pos:start="15:9" pos:end="15:11"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:11">ap</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:20"><block_content pos:start="17:9" pos:end="17:20">

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:15"><expr pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:7">ap0</name>   <operator pos:start="19:11" pos:end="19:11">=</operator> <name pos:start="19:13" pos:end="19:14">ap</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:6">ap</name><index pos:start="21:7" pos:end="21:9">[<expr pos:start="21:8" pos:end="21:8"><literal type="number" pos:start="21:8" pos:end="21:8">0</literal></expr>]</index></name> <operator pos:start="21:11" pos:end="21:11">=</operator> <literal type="char" pos:start="21:13" pos:end="21:16">'\0'</literal></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="33:5">for <control pos:start="23:9" pos:end="23:31">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:26"><expr pos:start="23:17" pos:end="23:25"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:25">count</name></expr>;</condition> <incr pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:28">i</name><operator pos:start="23:29" pos:end="23:30">++</operator></expr></incr>)</control> <block pos:start="23:33" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:16">

        <decl_stmt pos:start="25:9" pos:end="25:69"><decl pos:start="25:9" pos:end="25:68"><type pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:16">unsigned</name></type> <name pos:start="25:18" pos:end="25:18">l</name> <init pos:start="25:20" pos:end="25:68">= <expr pos:start="25:22" pos:end="25:68"><call pos:start="25:22" pos:end="25:68"><name pos:start="25:22" pos:end="25:29">snprintf</name><argument_list pos:start="25:30" pos:end="25:68">(<argument pos:start="25:31" pos:end="25:32"><expr pos:start="25:31" pos:end="25:32"><name pos:start="25:31" pos:end="25:32">ap</name></expr></argument>, <argument pos:start="25:35" pos:end="25:47"><expr pos:start="25:35" pos:end="25:47"><name pos:start="25:35" pos:end="25:47">component_len</name></expr></argument>, <argument pos:start="25:50" pos:end="25:55"><expr pos:start="25:50" pos:end="25:55"><literal type="string" pos:start="25:50" pos:end="25:55">"%f%s"</literal></expr></argument>, <argument pos:start="25:58" pos:end="25:62"><expr pos:start="25:58" pos:end="25:62"><name pos:start="25:58" pos:end="25:62"><name pos:start="25:58" pos:end="25:59">dp</name><index pos:start="25:60" pos:end="25:62">[<expr pos:start="25:61" pos:end="25:61"><name pos:start="25:61" pos:end="25:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="25:65" pos:end="25:67"><expr pos:start="25:65" pos:end="25:67"><name pos:start="25:65" pos:end="25:67">sep</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="27:9" pos:end="29:24"><if pos:start="27:9" pos:end="29:24">if<condition pos:start="27:11" pos:end="27:30">(<expr pos:start="27:12" pos:end="27:29"><name pos:start="27:12" pos:end="27:12">l</name> <operator pos:start="27:14" pos:end="27:15">&gt;=</operator> <name pos:start="27:17" pos:end="27:29">component_len</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:24"><block_content pos:start="29:13" pos:end="29:24">

            <return pos:start="29:13" pos:end="29:24">return <expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">NULL</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:16"><expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:10">ap</name> <operator pos:start="31:12" pos:end="31:13">+=</operator> <name pos:start="31:15" pos:end="31:15">l</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:7">ap0</name><index pos:start="35:8" pos:end="35:34">[<expr pos:start="35:9" pos:end="35:33"><call pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:14">strlen</name><argument_list pos:start="35:15" pos:end="35:19">(<argument pos:start="35:16" pos:end="35:18"><expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">ap0</name></expr></argument>)</argument_list></call> <operator pos:start="35:21" pos:end="35:21">-</operator> <call pos:start="35:23" pos:end="35:33"><name pos:start="35:23" pos:end="35:28">strlen</name><argument_list pos:start="35:29" pos:end="35:33">(<argument pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:32">sep</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="35:36" pos:end="35:36">=</operator> <literal type="char" pos:start="35:38" pos:end="35:41">'\0'</literal></expr>;</expr_stmt>

    <return pos:start="37:5" pos:end="37:15">return <expr pos:start="37:12" pos:end="37:14"><name pos:start="37:12" pos:end="37:14">ap0</name></expr>;</return>

</block_content>}</block></function>
</unit>
