<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22051.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:32"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:30">TranslationBlock</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:44">tb_find_fast</name><parameter_list pos:start="1:45" pos:end="1:50">(<parameter pos:start="1:46" pos:end="1:49"><decl pos:start="1:46" pos:end="1:49"><type pos:start="1:46" pos:end="1:49"><name pos:start="1:46" pos:end="1:49">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="159:1">{<block_content pos:start="5:5" pos:end="157:14">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">TranslationBlock</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">tb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:24">cs_base</name></decl>, <decl pos:start="7:27" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:27" pos:end="7:28">pc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="20:0"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:18">flags</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="17:22">/* we record a subset of the CPU state. It will

       always be the same before a given translated block

       is executed. */</comment>

<cpp:if pos:start="19:1" pos:end="19:24">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:24"><call pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:11">defined</name><argument_list pos:start="19:12" pos:end="19:24">(<argument pos:start="19:13" pos:end="19:23"><expr pos:start="19:13" pos:end="19:23"><name pos:start="19:13" pos:end="19:23">TARGET_I386</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:9">flags</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:15">env</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:23">hflags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:61"><expr pos:start="23:5" pos:end="23:60"><name pos:start="23:5" pos:end="23:9">flags</name> <operator pos:start="23:11" pos:end="23:12">|=</operator> <operator pos:start="23:14" pos:end="23:14">(</operator><name pos:start="23:15" pos:end="23:25"><name pos:start="23:15" pos:end="23:17">env</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:25">eflags</name></name> <operator pos:start="23:27" pos:end="23:27">&amp;</operator> <operator pos:start="23:29" pos:end="23:29">(</operator><name pos:start="23:30" pos:end="23:38">IOPL_MASK</name> <operator pos:start="23:40" pos:end="23:40">|</operator> <name pos:start="23:42" pos:end="23:48">TF_MASK</name> <operator pos:start="23:50" pos:end="23:50">|</operator> <name pos:start="23:52" pos:end="23:58">VM_MASK</name><operator pos:start="23:59" pos:end="23:59">)</operator><operator pos:start="23:60" pos:end="23:60">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:9">flags</name> <operator pos:start="25:11" pos:end="25:12">|=</operator> <name pos:start="25:14" pos:end="25:27"><name pos:start="25:14" pos:end="25:16">env</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:27">intercept</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:11">cs_base</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:29"><name pos:start="27:15" pos:end="27:17">env</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:23">segs</name><index pos:start="27:24" pos:end="27:29">[<expr pos:start="27:25" pos:end="27:28"><name pos:start="27:25" pos:end="27:28">R_CS</name></expr>]</index></name><operator pos:start="27:30" pos:end="27:30">.</operator><name pos:start="27:31" pos:end="27:34">base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="32:0"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:6">pc</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <name pos:start="29:10" pos:end="29:16">cs_base</name> <operator pos:start="29:18" pos:end="29:18">+</operator> <name pos:start="29:20" pos:end="29:27"><name pos:start="29:20" pos:end="29:22">env</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:27">eip</name></name></expr>;</expr_stmt>

<cpp:elif pos:start="31:1" pos:end="31:25">#<cpp:directive pos:start="31:2" pos:end="31:5">elif</cpp:directive> <expr pos:start="31:7" pos:end="31:25"><call pos:start="31:7" pos:end="31:25"><name pos:start="31:7" pos:end="31:13">defined</name><argument_list pos:start="31:14" pos:end="31:25">(<argument pos:start="31:15" pos:end="31:24"><expr pos:start="31:15" pos:end="31:24"><name pos:start="31:15" pos:end="31:24">TARGET_ARM</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="33:5" pos:end="35:41"><expr pos:start="33:5" pos:end="35:40"><name pos:start="33:5" pos:end="33:9">flags</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <name pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:15">env</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:22">thumb</name></name> <operator pos:start="33:24" pos:end="33:24">|</operator> <operator pos:start="33:26" pos:end="33:26">(</operator><name pos:start="33:27" pos:end="33:42"><name pos:start="33:27" pos:end="33:29">env</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:34">vfp</name><operator pos:start="33:35" pos:end="33:35">.</operator><name pos:start="33:36" pos:end="33:42">vec_len</name></name> <operator pos:start="33:44" pos:end="33:45">&lt;&lt;</operator> <literal type="number" pos:start="33:47" pos:end="33:47">1</literal><operator pos:start="33:48" pos:end="33:48">)</operator>

            <operator pos:start="35:13" pos:end="35:13">|</operator> <operator pos:start="35:15" pos:end="35:15">(</operator><name pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:18">env</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:23">vfp</name><operator pos:start="35:24" pos:end="35:24">.</operator><name pos:start="35:25" pos:end="35:34">vec_stride</name></name> <operator pos:start="35:36" pos:end="35:37">&lt;&lt;</operator> <literal type="number" pos:start="35:39" pos:end="35:39">4</literal><operator pos:start="35:40" pos:end="35:40">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:26"><if pos:start="37:5" pos:end="39:26">if <condition pos:start="37:8" pos:end="37:58">(<expr pos:start="37:9" pos:end="37:57"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:27"><name pos:start="37:10" pos:end="37:12">env</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:27">uncached_cpsr</name></name> <operator pos:start="37:29" pos:end="37:29">&amp;</operator> <name pos:start="37:31" pos:end="37:36">CPSR_M</name><operator pos:start="37:37" pos:end="37:37">)</operator> <operator pos:start="37:39" pos:end="37:40">!=</operator> <name pos:start="37:42" pos:end="37:57">ARM_CPU_MODE_USR</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:26"><block_content pos:start="39:9" pos:end="39:26">

        <expr_stmt pos:start="39:9" pos:end="39:26"><expr pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:13">flags</name> <operator pos:start="39:15" pos:end="39:16">|=</operator> <operator pos:start="39:18" pos:end="39:18">(</operator><literal type="number" pos:start="39:19" pos:end="39:19">1</literal> <operator pos:start="39:21" pos:end="39:22">&lt;&lt;</operator> <literal type="number" pos:start="39:24" pos:end="39:24">6</literal><operator pos:start="39:25" pos:end="39:25">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="43:26"><if pos:start="41:5" pos:end="43:26">if <condition pos:start="41:8" pos:end="41:50">(<expr pos:start="41:9" pos:end="41:49"><name pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:11">env</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:16">vfp</name><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:22">xregs</name><index pos:start="41:23" pos:end="41:37">[<expr pos:start="41:24" pos:end="41:36"><name pos:start="41:24" pos:end="41:36">ARM_VFP_FPEXC</name></expr>]</index></name> <operator pos:start="41:39" pos:end="41:39">&amp;</operator> <operator pos:start="41:41" pos:end="41:41">(</operator><literal type="number" pos:start="41:42" pos:end="41:42">1</literal> <operator pos:start="41:44" pos:end="41:45">&lt;&lt;</operator> <literal type="number" pos:start="41:47" pos:end="41:48">30</literal><operator pos:start="41:49" pos:end="41:49">)</operator></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:26"><block_content pos:start="43:9" pos:end="43:26">

        <expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:13">flags</name> <operator pos:start="43:15" pos:end="43:16">|=</operator> <operator pos:start="43:18" pos:end="43:18">(</operator><literal type="number" pos:start="43:19" pos:end="43:19">1</literal> <operator pos:start="43:21" pos:end="43:22">&lt;&lt;</operator> <literal type="number" pos:start="43:24" pos:end="43:24">7</literal><operator pos:start="43:25" pos:end="43:25">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:39"><expr pos:start="45:5" pos:end="45:38"><name pos:start="45:5" pos:end="45:9">flags</name> <operator pos:start="45:11" pos:end="45:12">|=</operator> <operator pos:start="45:14" pos:end="45:14">(</operator><name pos:start="45:15" pos:end="45:32"><name pos:start="45:15" pos:end="45:17">env</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:32">condexec_bits</name></name> <operator pos:start="45:34" pos:end="45:35">&lt;&lt;</operator> <literal type="number" pos:start="45:37" pos:end="45:37">8</literal><operator pos:start="45:38" pos:end="45:38">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:16"><expr pos:start="47:5" pos:end="47:15"><name pos:start="47:5" pos:end="47:11">cs_base</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="54:0"><expr pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:6">pc</name> <operator pos:start="49:8" pos:end="49:8">=</operator> <name pos:start="49:10" pos:end="49:22"><name pos:start="49:10" pos:end="49:12">env</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:18">regs</name><index pos:start="49:19" pos:end="49:22">[<expr pos:start="49:20" pos:end="49:21"><literal type="number" pos:start="49:20" pos:end="49:21">15</literal></expr>]</index></name></expr>;</expr_stmt>

<cpp:elif pos:start="51:1" pos:end="51:27">#<cpp:directive pos:start="51:2" pos:end="51:5">elif</cpp:directive> <expr pos:start="51:7" pos:end="51:27"><call pos:start="51:7" pos:end="51:27"><name pos:start="51:7" pos:end="51:13">defined</name><argument_list pos:start="51:14" pos:end="51:27">(<argument pos:start="51:15" pos:end="51:26"><expr pos:start="51:15" pos:end="51:26"><name pos:start="51:15" pos:end="51:26">TARGET_SPARC</name></expr></argument>)</argument_list></call></expr></cpp:elif>

<cpp:ifdef pos:start="53:1" pos:end="53:21">#<cpp:directive pos:start="53:2" pos:end="53:6">ifdef</cpp:directive> <name pos:start="53:8" pos:end="53:21">TARGET_SPARC64</name></cpp:ifdef>

    <comment type="line" pos:start="55:5" pos:end="55:68">// Combined FPU enable bits . PRIV . DMMU enabled . IMMU enabled</comment>

    <expr_stmt pos:start="57:5" pos:end="62:0"><expr pos:start="57:5" pos:end="59:73"><name pos:start="57:5" pos:end="57:9">flags</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <operator pos:start="57:13" pos:end="57:13">(</operator><operator pos:start="57:14" pos:end="57:14">(</operator><operator pos:start="57:15" pos:end="57:15">(</operator><name pos:start="57:16" pos:end="57:26"><name pos:start="57:16" pos:end="57:18">env</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:26">pstate</name></name> <operator pos:start="57:28" pos:end="57:28">&amp;</operator> <name pos:start="57:30" pos:end="57:35">PS_PEF</name><operator pos:start="57:36" pos:end="57:36">)</operator> <operator pos:start="57:38" pos:end="57:39">&gt;&gt;</operator> <literal type="number" pos:start="57:41" pos:end="57:41">1</literal><operator pos:start="57:42" pos:end="57:42">)</operator> <operator pos:start="57:44" pos:end="57:44">|</operator> <operator pos:start="57:46" pos:end="57:46">(</operator><operator pos:start="57:47" pos:end="57:47">(</operator><name pos:start="57:48" pos:end="57:56"><name pos:start="57:48" pos:end="57:50">env</name><operator pos:start="57:51" pos:end="57:52">-&gt;</operator><name pos:start="57:53" pos:end="57:56">fprs</name></name> <operator pos:start="57:58" pos:end="57:58">&amp;</operator> <name pos:start="57:60" pos:end="57:67">FPRS_FEF</name><operator pos:start="57:68" pos:end="57:68">)</operator> <operator pos:start="57:70" pos:end="57:71">&lt;&lt;</operator> <literal type="number" pos:start="57:73" pos:end="57:73">2</literal><operator pos:start="57:74" pos:end="57:74">)</operator><operator pos:start="57:75" pos:end="57:75">)</operator>

        <operator pos:start="59:9" pos:end="59:9">|</operator> <operator pos:start="59:11" pos:end="59:11">(</operator><name pos:start="59:12" pos:end="59:22"><name pos:start="59:12" pos:end="59:14">env</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:22">pstate</name></name> <operator pos:start="59:24" pos:end="59:24">&amp;</operator> <name pos:start="59:26" pos:end="59:32">PS_PRIV</name><operator pos:start="59:33" pos:end="59:33">)</operator> <operator pos:start="59:35" pos:end="59:35">|</operator> <operator pos:start="59:37" pos:end="59:37">(</operator><operator pos:start="59:38" pos:end="59:38">(</operator><name pos:start="59:39" pos:end="59:46"><name pos:start="59:39" pos:end="59:41">env</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:46">lsu</name></name> <operator pos:start="59:48" pos:end="59:48">&amp;</operator> <operator pos:start="59:50" pos:end="59:50">(</operator><name pos:start="59:51" pos:end="59:56">DMMU_E</name> <operator pos:start="59:58" pos:end="59:58">|</operator> <name pos:start="59:60" pos:end="59:65">IMMU_E</name><operator pos:start="59:66" pos:end="59:66">)</operator><operator pos:start="59:67" pos:end="59:67">)</operator> <operator pos:start="59:69" pos:end="59:70">&gt;&gt;</operator> <literal type="number" pos:start="59:72" pos:end="59:72">2</literal><operator pos:start="59:73" pos:end="59:73">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="61:1" pos:end="61:5">#<cpp:directive pos:start="61:2" pos:end="61:5">else</cpp:directive></cpp:else>

    <comment type="line" pos:start="63:5" pos:end="63:30">// FPU enable . Supervisor</comment>

    <expr_stmt pos:start="65:5" pos:end="68:0"><expr pos:start="65:5" pos:end="65:41"><name pos:start="65:5" pos:end="65:9">flags</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:23"><name pos:start="65:14" pos:end="65:16">env</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:23">psref</name></name> <operator pos:start="65:25" pos:end="65:26">&lt;&lt;</operator> <literal type="number" pos:start="65:28" pos:end="65:28">4</literal><operator pos:start="65:29" pos:end="65:29">)</operator> <operator pos:start="65:31" pos:end="65:31">|</operator> <name pos:start="65:33" pos:end="65:41"><name pos:start="65:33" pos:end="65:35">env</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:41">psrs</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="69:5" pos:end="69:23"><expr pos:start="69:5" pos:end="69:22"><name pos:start="69:5" pos:end="69:11">cs_base</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <name pos:start="69:15" pos:end="69:22"><name pos:start="69:15" pos:end="69:17">env</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:22">npc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="74:0"><expr pos:start="71:5" pos:end="71:16"><name pos:start="71:5" pos:end="71:6">pc</name> <operator pos:start="71:8" pos:end="71:8">=</operator> <name pos:start="71:10" pos:end="71:16"><name pos:start="71:10" pos:end="71:12">env</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:16">pc</name></name></expr>;</expr_stmt>

<cpp:elif pos:start="73:1" pos:end="73:25">#<cpp:directive pos:start="73:2" pos:end="73:5">elif</cpp:directive> <expr pos:start="73:7" pos:end="73:25"><call pos:start="73:7" pos:end="73:25"><name pos:start="73:7" pos:end="73:13">defined</name><argument_list pos:start="73:14" pos:end="73:25">(<argument pos:start="73:15" pos:end="73:24"><expr pos:start="73:15" pos:end="73:24"><name pos:start="73:15" pos:end="73:24">TARGET_PPC</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="75:5" pos:end="75:24"><expr pos:start="75:5" pos:end="75:23"><name pos:start="75:5" pos:end="75:9">flags</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <name pos:start="75:13" pos:end="75:23"><name pos:start="75:13" pos:end="75:15">env</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:23">hflags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:16"><expr pos:start="77:5" pos:end="77:15"><name pos:start="77:5" pos:end="77:11">cs_base</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <literal type="number" pos:start="77:15" pos:end="77:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="82:0"><expr pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:6">pc</name> <operator pos:start="79:8" pos:end="79:8">=</operator> <name pos:start="79:10" pos:end="79:17"><name pos:start="79:10" pos:end="79:12">env</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:17">nip</name></name></expr>;</expr_stmt>

<cpp:elif pos:start="81:1" pos:end="81:26">#<cpp:directive pos:start="81:2" pos:end="81:5">elif</cpp:directive> <expr pos:start="81:7" pos:end="81:26"><call pos:start="81:7" pos:end="81:26"><name pos:start="81:7" pos:end="81:13">defined</name><argument_list pos:start="81:14" pos:end="81:26">(<argument pos:start="81:15" pos:end="81:25"><expr pos:start="81:15" pos:end="81:25"><name pos:start="81:15" pos:end="81:25">TARGET_MIPS</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="83:5" pos:end="83:64"><expr pos:start="83:5" pos:end="83:63"><name pos:start="83:5" pos:end="83:9">flags</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <name pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:15">env</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:23">hflags</name></name> <operator pos:start="83:25" pos:end="83:25">&amp;</operator> <operator pos:start="83:27" pos:end="83:27">(</operator><name pos:start="83:28" pos:end="83:43">MIPS_HFLAG_TMASK</name> <operator pos:start="83:45" pos:end="83:45">|</operator> <name pos:start="83:47" pos:end="83:62">MIPS_HFLAG_BMASK</name><operator pos:start="83:63" pos:end="83:63">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:16"><expr pos:start="85:5" pos:end="85:15"><name pos:start="85:5" pos:end="85:11">cs_base</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <literal type="number" pos:start="85:15" pos:end="85:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="90:0"><expr pos:start="87:5" pos:end="87:33"><name pos:start="87:5" pos:end="87:6">pc</name> <operator pos:start="87:8" pos:end="87:8">=</operator> <name pos:start="87:10" pos:end="87:33"><name pos:start="87:10" pos:end="87:12">env</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:16">PC</name><index pos:start="87:17" pos:end="87:33">[<expr pos:start="87:18" pos:end="87:32"><name pos:start="87:18" pos:end="87:32"><name pos:start="87:18" pos:end="87:20">env</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:32">current_tc</name></name></expr>]</index></name></expr>;</expr_stmt>

<cpp:elif pos:start="89:1" pos:end="89:26">#<cpp:directive pos:start="89:2" pos:end="89:5">elif</cpp:directive> <expr pos:start="89:7" pos:end="89:26"><call pos:start="89:7" pos:end="89:26"><name pos:start="89:7" pos:end="89:13">defined</name><argument_list pos:start="89:14" pos:end="89:26">(<argument pos:start="89:15" pos:end="89:25"><expr pos:start="89:15" pos:end="89:25"><name pos:start="89:15" pos:end="89:25">TARGET_M68K</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="91:5" pos:end="95:40"><expr pos:start="91:5" pos:end="95:39"><name pos:start="91:5" pos:end="91:9">flags</name> <operator pos:start="91:11" pos:end="91:11">=</operator> <operator pos:start="91:13" pos:end="91:13">(</operator><name pos:start="91:14" pos:end="91:22"><name pos:start="91:14" pos:end="91:16">env</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:22">fpcr</name></name> <operator pos:start="91:24" pos:end="91:24">&amp;</operator> <name pos:start="91:26" pos:end="91:39">M68K_FPCR_PREC</name><operator pos:start="91:40" pos:end="91:40">)</operator>  <comment type="block" pos:start="91:43" pos:end="91:54">/* Bit  6 */</comment>

            <operator pos:start="93:13" pos:end="93:13">|</operator> <operator pos:start="93:15" pos:end="93:15">(</operator><name pos:start="93:16" pos:end="93:22"><name pos:start="93:16" pos:end="93:18">env</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:22">sr</name></name> <operator pos:start="93:24" pos:end="93:24">&amp;</operator> <name pos:start="93:26" pos:end="93:29">SR_S</name><operator pos:start="93:30" pos:end="93:30">)</operator>            <comment type="block" pos:start="93:43" pos:end="93:55">/* Bit  13 */</comment>

            <operator pos:start="95:13" pos:end="95:13">|</operator> <operator pos:start="95:15" pos:end="95:15">(</operator><operator pos:start="95:16" pos:end="95:16">(</operator><name pos:start="95:17" pos:end="95:26"><name pos:start="95:17" pos:end="95:19">env</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:26">macsr</name></name> <operator pos:start="95:28" pos:end="95:29">&gt;&gt;</operator> <literal type="number" pos:start="95:31" pos:end="95:31">4</literal><operator pos:start="95:32" pos:end="95:32">)</operator> <operator pos:start="95:34" pos:end="95:34">&amp;</operator> <literal type="number" pos:start="95:36" pos:end="95:38">0xf</literal><operator pos:start="95:39" pos:end="95:39">)</operator></expr>;</expr_stmt>  <comment type="block" pos:start="95:43" pos:end="95:56">/* Bits 0-3 */</comment>

    <expr_stmt pos:start="97:5" pos:end="97:16"><expr pos:start="97:5" pos:end="97:15"><name pos:start="97:5" pos:end="97:11">cs_base</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <literal type="number" pos:start="97:15" pos:end="97:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="102:0"><expr pos:start="99:5" pos:end="99:16"><name pos:start="99:5" pos:end="99:6">pc</name> <operator pos:start="99:8" pos:end="99:8">=</operator> <name pos:start="99:10" pos:end="99:16"><name pos:start="99:10" pos:end="99:12">env</name><operator pos:start="99:13" pos:end="99:14">-&gt;</operator><name pos:start="99:15" pos:end="99:16">pc</name></name></expr>;</expr_stmt>

<cpp:elif pos:start="101:1" pos:end="101:25">#<cpp:directive pos:start="101:2" pos:end="101:5">elif</cpp:directive> <expr pos:start="101:7" pos:end="101:25"><call pos:start="101:7" pos:end="101:25"><name pos:start="101:7" pos:end="101:13">defined</name><argument_list pos:start="101:14" pos:end="101:25">(<argument pos:start="101:15" pos:end="101:24"><expr pos:start="101:15" pos:end="101:24"><name pos:start="101:15" pos:end="101:24">TARGET_SH4</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="103:5" pos:end="103:23"><expr pos:start="103:5" pos:end="103:22"><name pos:start="103:5" pos:end="103:9">flags</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <name pos:start="103:13" pos:end="103:22"><name pos:start="103:13" pos:end="103:15">env</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:22">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:16"><expr pos:start="105:5" pos:end="105:15"><name pos:start="105:5" pos:end="105:11">cs_base</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <literal type="number" pos:start="105:15" pos:end="105:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="110:0"><expr pos:start="107:5" pos:end="107:16"><name pos:start="107:5" pos:end="107:6">pc</name> <operator pos:start="107:8" pos:end="107:8">=</operator> <name pos:start="107:10" pos:end="107:16"><name pos:start="107:10" pos:end="107:12">env</name><operator pos:start="107:13" pos:end="107:14">-&gt;</operator><name pos:start="107:15" pos:end="107:16">pc</name></name></expr>;</expr_stmt>

<cpp:elif pos:start="109:1" pos:end="109:27">#<cpp:directive pos:start="109:2" pos:end="109:5">elif</cpp:directive> <expr pos:start="109:7" pos:end="109:27"><call pos:start="109:7" pos:end="109:27"><name pos:start="109:7" pos:end="109:13">defined</name><argument_list pos:start="109:14" pos:end="109:27">(<argument pos:start="109:15" pos:end="109:26"><expr pos:start="109:15" pos:end="109:26"><name pos:start="109:15" pos:end="109:26">TARGET_ALPHA</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="111:5" pos:end="111:20"><expr pos:start="111:5" pos:end="111:19"><name pos:start="111:5" pos:end="111:9">flags</name> <operator pos:start="111:11" pos:end="111:11">=</operator> <name pos:start="111:13" pos:end="111:19"><name pos:start="111:13" pos:end="111:15">env</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:19">ps</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:16"><expr pos:start="113:5" pos:end="113:15"><name pos:start="113:5" pos:end="113:11">cs_base</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <literal type="number" pos:start="113:15" pos:end="113:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="118:0"><expr pos:start="115:5" pos:end="115:16"><name pos:start="115:5" pos:end="115:6">pc</name> <operator pos:start="115:8" pos:end="115:8">=</operator> <name pos:start="115:10" pos:end="115:16"><name pos:start="115:10" pos:end="115:12">env</name><operator pos:start="115:13" pos:end="115:14">-&gt;</operator><name pos:start="115:15" pos:end="115:16">pc</name></name></expr>;</expr_stmt>

<cpp:elif pos:start="117:1" pos:end="117:26">#<cpp:directive pos:start="117:2" pos:end="117:5">elif</cpp:directive> <expr pos:start="117:7" pos:end="117:26"><call pos:start="117:7" pos:end="117:26"><name pos:start="117:7" pos:end="117:13">defined</name><argument_list pos:start="117:14" pos:end="117:26">(<argument pos:start="117:15" pos:end="117:25"><expr pos:start="117:15" pos:end="117:25"><name pos:start="117:15" pos:end="117:25">TARGET_CRIS</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="119:5" pos:end="119:51"><expr pos:start="119:5" pos:end="119:50"><name pos:start="119:5" pos:end="119:9">flags</name> <operator pos:start="119:11" pos:end="119:11">=</operator> <name pos:start="119:13" pos:end="119:30"><name pos:start="119:13" pos:end="119:15">env</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:22">pregs</name><index pos:start="119:23" pos:end="119:30">[<expr pos:start="119:24" pos:end="119:29"><name pos:start="119:24" pos:end="119:29">PR_CCS</name></expr>]</index></name> <operator pos:start="119:32" pos:end="119:32">&amp;</operator> <operator pos:start="119:34" pos:end="119:34">(</operator><name pos:start="119:35" pos:end="119:40">U_FLAG</name> <operator pos:start="119:42" pos:end="119:42">|</operator> <name pos:start="119:44" pos:end="119:49">X_FLAG</name><operator pos:start="119:50" pos:end="119:50">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:16"><expr pos:start="121:5" pos:end="121:15"><name pos:start="121:5" pos:end="121:11">cs_base</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <literal type="number" pos:start="121:15" pos:end="121:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="130:0"><expr pos:start="123:5" pos:end="123:16"><name pos:start="123:5" pos:end="123:6">pc</name> <operator pos:start="123:8" pos:end="123:8">=</operator> <name pos:start="123:10" pos:end="123:16"><name pos:start="123:10" pos:end="123:12">env</name><operator pos:start="123:13" pos:end="123:14">-&gt;</operator><name pos:start="123:15" pos:end="123:16">pc</name></name></expr>;</expr_stmt>

<cpp:else pos:start="125:1" pos:end="125:5">#<cpp:directive pos:start="125:2" pos:end="125:5">else</cpp:directive></cpp:else>

<cpp:error pos:start="127:1" pos:end="127:22">#<cpp:directive pos:start="127:2" pos:end="127:6">error</cpp:directive> unsupported CPU</cpp:error>

<cpp:endif pos:start="129:1" pos:end="129:6">#<cpp:directive pos:start="129:2" pos:end="129:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="131:5" pos:end="131:55"><expr pos:start="131:5" pos:end="131:54"><name pos:start="131:5" pos:end="131:6">tb</name> <operator pos:start="131:8" pos:end="131:8">=</operator> <name pos:start="131:10" pos:end="131:54"><name pos:start="131:10" pos:end="131:12">env</name><operator pos:start="131:13" pos:end="131:14">-&gt;</operator><name pos:start="131:15" pos:end="131:26">tb_jmp_cache</name><index pos:start="131:27" pos:end="131:54">[<expr pos:start="131:28" pos:end="131:53"><call pos:start="131:28" pos:end="131:53"><name pos:start="131:28" pos:end="131:49">tb_jmp_cache_hash_func</name><argument_list pos:start="131:50" pos:end="131:53">(<argument pos:start="131:51" pos:end="131:52"><expr pos:start="131:51" pos:end="131:52"><name pos:start="131:51" pos:end="131:52">pc</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="133:5" pos:end="155:5"><if pos:start="133:5" pos:end="155:5">if <condition pos:start="133:8" pos:end="135:48">(<expr pos:start="133:9" pos:end="135:47"><call pos:start="133:9" pos:end="135:47"><name pos:start="133:9" pos:end="133:24">__builtin_expect</name><argument_list pos:start="133:25" pos:end="135:47">(<argument pos:start="133:26" pos:end="135:43"><expr pos:start="133:26" pos:end="135:43"><operator pos:start="133:26" pos:end="133:26">!</operator><name pos:start="133:27" pos:end="133:28">tb</name> <operator pos:start="133:30" pos:end="133:31">||</operator> <name pos:start="133:33" pos:end="133:38"><name pos:start="133:33" pos:end="133:34">tb</name><operator pos:start="133:35" pos:end="133:36">-&gt;</operator><name pos:start="133:37" pos:end="133:38">pc</name></name> <operator pos:start="133:40" pos:end="133:41">!=</operator> <name pos:start="133:43" pos:end="133:44">pc</name> <operator pos:start="133:46" pos:end="133:47">||</operator> <name pos:start="133:49" pos:end="133:59"><name pos:start="133:49" pos:end="133:50">tb</name><operator pos:start="133:51" pos:end="133:52">-&gt;</operator><name pos:start="133:53" pos:end="133:59">cs_base</name></name> <operator pos:start="133:61" pos:end="133:62">!=</operator> <name pos:start="133:64" pos:end="133:70">cs_base</name> <operator pos:start="133:72" pos:end="133:73">||</operator>

                         <name pos:start="135:26" pos:end="135:34"><name pos:start="135:26" pos:end="135:27">tb</name><operator pos:start="135:28" pos:end="135:29">-&gt;</operator><name pos:start="135:30" pos:end="135:34">flags</name></name> <operator pos:start="135:36" pos:end="135:37">!=</operator> <name pos:start="135:39" pos:end="135:43">flags</name></expr></argument>, <argument pos:start="135:46" pos:end="135:46"><expr pos:start="135:46" pos:end="135:46"><literal type="number" pos:start="135:46" pos:end="135:46">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="135:50" pos:end="155:5">{<block_content pos:start="137:9" pos:end="153:9">

        <expr_stmt pos:start="137:9" pos:end="137:46"><expr pos:start="137:9" pos:end="137:45"><name pos:start="137:9" pos:end="137:10">tb</name> <operator pos:start="137:12" pos:end="137:12">=</operator> <call pos:start="137:14" pos:end="137:45"><name pos:start="137:14" pos:end="137:25">tb_find_slow</name><argument_list pos:start="137:26" pos:end="137:45">(<argument pos:start="137:27" pos:end="137:28"><expr pos:start="137:27" pos:end="137:28"><name pos:start="137:27" pos:end="137:28">pc</name></expr></argument>, <argument pos:start="137:31" pos:end="137:37"><expr pos:start="137:31" pos:end="137:37"><name pos:start="137:31" pos:end="137:37">cs_base</name></expr></argument>, <argument pos:start="137:40" pos:end="137:44"><expr pos:start="137:40" pos:end="137:44"><name pos:start="137:40" pos:end="137:44">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="139:9" pos:end="141:38">/* Note: we do it here to avoid a gcc bug on Mac OS X when

           doing it in tb_find_slow */</comment>

        <if_stmt pos:start="143:9" pos:end="153:9"><if pos:start="143:9" pos:end="153:9">if <condition pos:start="143:12" pos:end="143:32">(<expr pos:start="143:13" pos:end="143:31"><name pos:start="143:13" pos:end="143:31">tb_invalidated_flag</name></expr>)</condition> <block pos:start="143:34" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:19">

            <comment type="block" pos:start="145:13" pos:end="149:52">/* as some TB could have been invalidated because

               of memory exceptions while generating the code, we

               must recompute the hash index here */</comment>

            <expr_stmt pos:start="151:13" pos:end="151:19"><expr pos:start="151:13" pos:end="151:18"><name pos:start="151:13" pos:end="151:14">T0</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <literal type="number" pos:start="151:18" pos:end="151:18">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="157:5" pos:end="157:14">return <expr pos:start="157:12" pos:end="157:13"><name pos:start="157:12" pos:end="157:13">tb</name></expr>;</return>

</block_content>}</block></function>
</unit>
