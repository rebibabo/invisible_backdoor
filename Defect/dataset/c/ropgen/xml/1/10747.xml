<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10747.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">ff_aac_update_ltp</name><parameter_list pos:start="1:23" pos:end="1:67">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:36">AACEncContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:66"><decl pos:start="1:42" pos:end="1:66"><type pos:start="1:42" pos:end="1:66"><name pos:start="1:42" pos:end="1:61">SingleChannelElement</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">sce</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:27">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>, <decl pos:start="5:15" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:17">lag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">float</name></type> <name pos:start="7:11" pos:end="7:14">corr</name></decl>, <decl pos:start="7:17" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:17" pos:end="7:18">s0</name></decl>, <decl pos:start="7:21" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:21" pos:end="7:22">s1</name></decl>, <decl pos:start="7:25" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:25" pos:end="7:32">max_corr</name> <init pos:start="7:34" pos:end="7:39">= <expr pos:start="7:36" pos:end="7:39"><literal type="number" pos:start="7:36" pos:end="7:39">0.0f</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:62"><decl pos:start="9:5" pos:end="9:61"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">float</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:18">samples</name> <init pos:start="9:20" pos:end="9:61">= <expr pos:start="9:22" pos:end="9:61"><operator pos:start="9:22" pos:end="9:22">&amp;</operator><name pos:start="9:23" pos:end="9:61"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:39">planar_samples</name><index pos:start="9:40" pos:end="9:55">[<expr pos:start="9:41" pos:end="9:54"><name pos:start="9:41" pos:end="9:54"><name pos:start="9:41" pos:end="9:41">s</name><operator pos:start="9:42" pos:end="9:43">-&gt;</operator><name pos:start="9:44" pos:end="9:54">cur_channel</name></name></expr>]</index><index pos:start="9:56" pos:end="9:61">[<expr pos:start="9:57" pos:end="9:60"><literal type="number" pos:start="9:57" pos:end="9:60">1024</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">float</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:22">pred_signal</name> <init pos:start="11:24" pos:end="11:43">= <expr pos:start="11:26" pos:end="11:43"><operator pos:start="11:26" pos:end="11:26">&amp;</operator><name pos:start="11:27" pos:end="11:43"><name pos:start="11:27" pos:end="11:29">sce</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:40">ltp_state</name><index pos:start="11:41" pos:end="11:43">[<expr pos:start="11:42" pos:end="11:42"><literal type="number" pos:start="11:42" pos:end="11:42">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">samples_num</name> <init pos:start="13:21" pos:end="13:26">= <expr pos:start="13:23" pos:end="13:26"><literal type="number" pos:start="13:23" pos:end="13:26">2048</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:15"><if pos:start="17:5" pos:end="19:15">if <condition pos:start="17:8" pos:end="17:41">(<expr pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:18">profile</name></name> <operator pos:start="17:20" pos:end="17:21">!=</operator> <name pos:start="17:23" pos:end="17:40">FF_PROFILE_AAC_LTP</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:15"><block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:23">/* Calculate lag */</comment>

    <for pos:start="25:5" pos:end="51:5">for <control pos:start="25:9" pos:end="25:37">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:32"><expr pos:start="25:17" pos:end="25:31"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:31">samples_num</name></expr>;</condition> <incr pos:start="25:34" pos:end="25:36"><expr pos:start="25:34" pos:end="25:36"><name pos:start="25:34" pos:end="25:34">i</name><operator pos:start="25:35" pos:end="25:36">++</operator></expr></incr>)</control> <block pos:start="25:39" pos:end="51:5">{<block_content pos:start="27:9" pos:end="49:9">

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:10">s0</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:15">s1</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <literal type="number" pos:start="27:19" pos:end="27:22">0.0f</literal></expr>;</expr_stmt>

        <for pos:start="29:9" pos:end="39:9">for <control pos:start="29:13" pos:end="29:41">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">j</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:36"><expr pos:start="29:21" pos:end="29:35"><name pos:start="29:21" pos:end="29:21">j</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <name pos:start="29:25" pos:end="29:35">samples_num</name></expr>;</condition> <incr pos:start="29:38" pos:end="29:40"><expr pos:start="29:38" pos:end="29:40"><name pos:start="29:38" pos:end="29:38">j</name><operator pos:start="29:39" pos:end="29:40">++</operator></expr></incr>)</control> <block pos:start="29:43" pos:end="39:9">{<block_content pos:start="31:13" pos:end="37:62">

            <if_stmt pos:start="31:13" pos:end="33:25"><if pos:start="31:13" pos:end="33:25">if <condition pos:start="31:16" pos:end="31:29">(<expr pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:17">j</name> <operator pos:start="31:19" pos:end="31:19">+</operator> <literal type="number" pos:start="31:21" pos:end="31:24">1024</literal> <operator pos:start="31:26" pos:end="31:26">&lt;</operator> <name pos:start="31:28" pos:end="31:28">i</name></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:25"><block_content pos:start="33:17" pos:end="33:25">

                <continue pos:start="33:17" pos:end="33:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:51"><expr pos:start="35:13" pos:end="35:50"><name pos:start="35:13" pos:end="35:14">s0</name> <operator pos:start="35:16" pos:end="35:17">+=</operator> <name pos:start="35:19" pos:end="35:28"><name pos:start="35:19" pos:end="35:25">samples</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><name pos:start="35:27" pos:end="35:27">j</name></expr>]</index></name><operator pos:start="35:29" pos:end="35:29">*</operator><name pos:start="35:30" pos:end="35:50"><name pos:start="35:30" pos:end="35:40">pred_signal</name><index pos:start="35:41" pos:end="35:50">[<expr pos:start="35:42" pos:end="35:49"><name pos:start="35:42" pos:end="35:42">j</name><operator pos:start="35:43" pos:end="35:43">-</operator><name pos:start="35:44" pos:end="35:44">i</name><operator pos:start="35:45" pos:end="35:45">+</operator><literal type="number" pos:start="35:46" pos:end="35:49">1024</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:62"><expr pos:start="37:13" pos:end="37:61"><name pos:start="37:13" pos:end="37:14">s1</name> <operator pos:start="37:16" pos:end="37:17">+=</operator> <name pos:start="37:19" pos:end="37:39"><name pos:start="37:19" pos:end="37:29">pred_signal</name><index pos:start="37:30" pos:end="37:39">[<expr pos:start="37:31" pos:end="37:38"><name pos:start="37:31" pos:end="37:31">j</name><operator pos:start="37:32" pos:end="37:32">-</operator><name pos:start="37:33" pos:end="37:33">i</name><operator pos:start="37:34" pos:end="37:34">+</operator><literal type="number" pos:start="37:35" pos:end="37:38">1024</literal></expr>]</index></name><operator pos:start="37:40" pos:end="37:40">*</operator><name pos:start="37:41" pos:end="37:61"><name pos:start="37:41" pos:end="37:51">pred_signal</name><index pos:start="37:52" pos:end="37:61">[<expr pos:start="37:53" pos:end="37:60"><name pos:start="37:53" pos:end="37:53">j</name><operator pos:start="37:54" pos:end="37:54">-</operator><name pos:start="37:55" pos:end="37:55">i</name><operator pos:start="37:56" pos:end="37:56">+</operator><literal type="number" pos:start="37:57" pos:end="37:60">1024</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="41:9" pos:end="41:46"><expr pos:start="41:9" pos:end="41:45"><name pos:start="41:9" pos:end="41:12">corr</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <ternary pos:start="41:16" pos:end="41:45"><condition pos:start="41:16" pos:end="41:26"><expr pos:start="41:16" pos:end="41:24"><name pos:start="41:16" pos:end="41:17">s1</name> <operator pos:start="41:19" pos:end="41:19">&gt;</operator> <literal type="number" pos:start="41:21" pos:end="41:24">0.0f</literal></expr> ?</condition><then pos:start="41:28" pos:end="41:38"> <expr pos:start="41:28" pos:end="41:38"><name pos:start="41:28" pos:end="41:29">s0</name><operator pos:start="41:30" pos:end="41:30">/</operator><call pos:start="41:31" pos:end="41:38"><name pos:start="41:31" pos:end="41:34">sqrt</name><argument_list pos:start="41:35" pos:end="41:38">(<argument pos:start="41:36" pos:end="41:37"><expr pos:start="41:36" pos:end="41:37"><name pos:start="41:36" pos:end="41:37">s1</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="41:40" pos:end="41:45">: <expr pos:start="41:42" pos:end="41:45"><literal type="number" pos:start="41:42" pos:end="41:45">0.0f</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:28">(<expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:16">corr</name> <operator pos:start="43:18" pos:end="43:18">&gt;</operator> <name pos:start="43:20" pos:end="43:27">max_corr</name></expr>)</condition> <block pos:start="43:30" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:20">

            <expr_stmt pos:start="45:13" pos:end="45:28"><expr pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:20">max_corr</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:27">corr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:20"><expr pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:15">lag</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:19">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:7">lag</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:31"><name pos:start="53:11" pos:end="53:17">av_clip</name><argument_list pos:start="53:18" pos:end="53:31">(<argument pos:start="53:19" pos:end="53:21"><expr pos:start="53:19" pos:end="53:21"><name pos:start="53:19" pos:end="53:21">lag</name></expr></argument>, <argument pos:start="53:24" pos:end="53:24"><expr pos:start="53:24" pos:end="53:24"><literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr></argument>, <argument pos:start="53:27" pos:end="53:30"><expr pos:start="53:27" pos:end="53:30"><literal type="number" pos:start="53:27" pos:end="53:30">2048</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="53:34" pos:end="53:61">/* 11 bits =&gt; 2^11 = 2048 */</comment>



    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:13">(<expr pos:start="57:9" pos:end="57:12"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:12">lag</name></expr>)</condition> <block pos:start="57:15" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:15">

        <expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:11">sce</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:16">ics</name><operator pos:start="59:17" pos:end="59:17">.</operator><name pos:start="59:18" pos:end="59:20">ltp</name><operator pos:start="59:21" pos:end="59:21">.</operator><name pos:start="59:22" pos:end="59:24">lag</name></name> <operator pos:start="59:26" pos:end="59:26">=</operator> <name pos:start="59:28" pos:end="59:30">lag</name></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:19"><expr pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:6">s0</name> <operator pos:start="67:8" pos:end="67:8">=</operator> <name pos:start="67:10" pos:end="67:11">s1</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <literal type="number" pos:start="67:15" pos:end="67:18">0.0f</literal></expr>;</expr_stmt>

    <for pos:start="69:5" pos:end="75:5">for <control pos:start="69:9" pos:end="69:29">(<init pos:start="69:10" pos:end="69:15"><expr pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:10">i</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</init> <condition pos:start="69:17" pos:end="69:24"><expr pos:start="69:17" pos:end="69:23"><name pos:start="69:17" pos:end="69:17">i</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <name pos:start="69:21" pos:end="69:23">lag</name></expr>;</condition> <incr pos:start="69:26" pos:end="69:28"><expr pos:start="69:26" pos:end="69:28"><name pos:start="69:26" pos:end="69:26">i</name><operator pos:start="69:27" pos:end="69:28">++</operator></expr></incr>)</control> <block pos:start="69:31" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:38">

        <expr_stmt pos:start="71:9" pos:end="71:25"><expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:10">s0</name> <operator pos:start="71:12" pos:end="71:13">+=</operator> <name pos:start="71:15" pos:end="71:24"><name pos:start="71:15" pos:end="71:21">samples</name><index pos:start="71:22" pos:end="71:24">[<expr pos:start="71:23" pos:end="71:23"><name pos:start="71:23" pos:end="71:23">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:38"><expr pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:10">s1</name> <operator pos:start="73:12" pos:end="73:13">+=</operator> <name pos:start="73:15" pos:end="73:37"><name pos:start="73:15" pos:end="73:25">pred_signal</name><index pos:start="73:26" pos:end="73:37">[<expr pos:start="73:27" pos:end="73:36"><name pos:start="73:27" pos:end="73:27">i</name><operator pos:start="73:28" pos:end="73:28">-</operator><name pos:start="73:29" pos:end="73:31">lag</name><operator pos:start="73:32" pos:end="73:32">+</operator><literal type="number" pos:start="73:33" pos:end="73:36">1024</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="79:5" pos:end="79:64"><expr pos:start="79:5" pos:end="79:63"><name pos:start="79:5" pos:end="79:25"><name pos:start="79:5" pos:end="79:7">sce</name><operator pos:start="79:8" pos:end="79:9">-&gt;</operator><name pos:start="79:10" pos:end="79:12">ics</name><operator pos:start="79:13" pos:end="79:13">.</operator><name pos:start="79:14" pos:end="79:16">ltp</name><operator pos:start="79:17" pos:end="79:17">.</operator><name pos:start="79:18" pos:end="79:25">coef_idx</name></name> <operator pos:start="79:27" pos:end="79:27">=</operator> <call pos:start="79:29" pos:end="79:63"><name pos:start="79:29" pos:end="79:43">quant_array_idx</name><argument_list pos:start="79:44" pos:end="79:63">(<argument pos:start="79:45" pos:end="79:49"><expr pos:start="79:45" pos:end="79:49"><name pos:start="79:45" pos:end="79:46">s0</name><operator pos:start="79:47" pos:end="79:47">/</operator><name pos:start="79:48" pos:end="79:49">s1</name></expr></argument>, <argument pos:start="79:52" pos:end="79:59"><expr pos:start="79:52" pos:end="79:59"><name pos:start="79:52" pos:end="79:59">ltp_coef</name></expr></argument>, <argument pos:start="79:62" pos:end="79:62"><expr pos:start="79:62" pos:end="79:62"><literal type="number" pos:start="79:62" pos:end="79:62">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:60"><expr pos:start="81:5" pos:end="81:59"><name pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:7">sce</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:12">ics</name><operator pos:start="81:13" pos:end="81:13">.</operator><name pos:start="81:14" pos:end="81:16">ltp</name><operator pos:start="81:17" pos:end="81:17">.</operator><name pos:start="81:18" pos:end="81:21">coef</name></name>     <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:59"><name pos:start="81:29" pos:end="81:36">ltp_coef</name><index pos:start="81:37" pos:end="81:59">[<expr pos:start="81:38" pos:end="81:58"><name pos:start="81:38" pos:end="81:58"><name pos:start="81:38" pos:end="81:40">sce</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:45">ics</name><operator pos:start="81:46" pos:end="81:46">.</operator><name pos:start="81:47" pos:end="81:49">ltp</name><operator pos:start="81:50" pos:end="81:50">.</operator><name pos:start="81:51" pos:end="81:58">coef_idx</name></name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:33">/* Predict the new samples */</comment>

    <if_stmt pos:start="87:5" pos:end="89:33"><if pos:start="87:5" pos:end="89:33">if <condition pos:start="87:8" pos:end="87:19">(<expr pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:11">lag</name> <operator pos:start="87:13" pos:end="87:13">&lt;</operator> <literal type="number" pos:start="87:15" pos:end="87:18">1024</literal></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:33"><block_content pos:start="89:9" pos:end="89:33">

        <expr_stmt pos:start="89:9" pos:end="89:33"><expr pos:start="89:9" pos:end="89:32"><name pos:start="89:9" pos:end="89:19">samples_num</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:25">lag</name> <operator pos:start="89:27" pos:end="89:27">+</operator> <literal type="number" pos:start="89:29" pos:end="89:32">1024</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="91:5" pos:end="93:72">for <control pos:start="91:9" pos:end="91:37">(<init pos:start="91:10" pos:end="91:15"><expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>;</init> <condition pos:start="91:17" pos:end="91:32"><expr pos:start="91:17" pos:end="91:31"><name pos:start="91:17" pos:end="91:17">i</name> <operator pos:start="91:19" pos:end="91:19">&lt;</operator> <name pos:start="91:21" pos:end="91:31">samples_num</name></expr>;</condition> <incr pos:start="91:34" pos:end="91:36"><expr pos:start="91:34" pos:end="91:36"><name pos:start="91:34" pos:end="91:34">i</name><operator pos:start="91:35" pos:end="91:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="93:9" pos:end="93:72"><block_content pos:start="93:9" pos:end="93:72">

        <expr_stmt pos:start="93:9" pos:end="93:72"><expr pos:start="93:9" pos:end="93:71"><name pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:19">pred_signal</name><index pos:start="93:20" pos:end="93:27">[<expr pos:start="93:21" pos:end="93:26"><name pos:start="93:21" pos:end="93:21">i</name><operator pos:start="93:22" pos:end="93:22">+</operator><literal type="number" pos:start="93:23" pos:end="93:26">1024</literal></expr>]</index></name> <operator pos:start="93:29" pos:end="93:29">=</operator> <name pos:start="93:31" pos:end="93:47"><name pos:start="93:31" pos:end="93:33">sce</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:38">ics</name><operator pos:start="93:39" pos:end="93:39">.</operator><name pos:start="93:40" pos:end="93:42">ltp</name><operator pos:start="93:43" pos:end="93:43">.</operator><name pos:start="93:44" pos:end="93:47">coef</name></name><operator pos:start="93:48" pos:end="93:48">*</operator><name pos:start="93:49" pos:end="93:71"><name pos:start="93:49" pos:end="93:59">pred_signal</name><index pos:start="93:60" pos:end="93:71">[<expr pos:start="93:61" pos:end="93:70"><name pos:start="93:61" pos:end="93:61">i</name><operator pos:start="93:62" pos:end="93:62">-</operator><name pos:start="93:63" pos:end="93:65">lag</name><operator pos:start="93:66" pos:end="93:66">+</operator><literal type="number" pos:start="93:67" pos:end="93:70">1024</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="95:5" pos:end="95:77"><expr pos:start="95:5" pos:end="95:76"><call pos:start="95:5" pos:end="95:76"><name pos:start="95:5" pos:end="95:10">memset</name><argument_list pos:start="95:11" pos:end="95:76">(<argument pos:start="95:12" pos:end="95:36"><expr pos:start="95:12" pos:end="95:36"><operator pos:start="95:12" pos:end="95:12">&amp;</operator><name pos:start="95:13" pos:end="95:36"><name pos:start="95:13" pos:end="95:23">pred_signal</name><index pos:start="95:24" pos:end="95:36">[<expr pos:start="95:25" pos:end="95:35"><name pos:start="95:25" pos:end="95:35">samples_num</name></expr>]</index></name></expr></argument>, <argument pos:start="95:39" pos:end="95:39"><expr pos:start="95:39" pos:end="95:39"><literal type="number" pos:start="95:39" pos:end="95:39">0</literal></expr></argument>, <argument pos:start="95:42" pos:end="95:75"><expr pos:start="95:42" pos:end="95:75"><operator pos:start="95:42" pos:end="95:42">(</operator><literal type="number" pos:start="95:43" pos:end="95:48">2048</literal> <operator pos:start="95:48" pos:end="95:48">-</operator> <name pos:start="95:50" pos:end="95:60">samples_num</name><operator pos:start="95:61" pos:end="95:61">)</operator><operator pos:start="95:62" pos:end="95:62">*</operator><sizeof pos:start="95:63" pos:end="95:75">sizeof<argument_list pos:start="95:69" pos:end="95:75">(<argument pos:start="95:70" pos:end="95:74"><expr pos:start="95:70" pos:end="95:74"><name pos:start="95:70" pos:end="95:74">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:27"><expr pos:start="99:5" pos:end="99:26"><name pos:start="99:5" pos:end="99:20"><name pos:start="99:5" pos:end="99:7">sce</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:12">ics</name><operator pos:start="99:13" pos:end="99:13">.</operator><name pos:start="99:14" pos:end="99:16">ltp</name><operator pos:start="99:17" pos:end="99:17">.</operator><name pos:start="99:18" pos:end="99:20">lag</name></name> <operator pos:start="99:22" pos:end="99:22">=</operator> <name pos:start="99:24" pos:end="99:26">lag</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
