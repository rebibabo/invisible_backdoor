<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15370.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">CharDriverState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:47">net_vhost_parse_chardev</name><parameter_list pos:start="1:48" pos:end="3:53">(

    <parameter pos:start="3:5" pos:end="3:38"><decl pos:start="3:5" pos:end="3:38"><type pos:start="3:5" pos:end="3:38"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:32">NetdevVhostUserOptions</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">opts</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:52"><decl pos:start="3:41" pos:end="3:52"><type pos:start="3:41" pos:end="3:52"><name pos:start="3:41" pos:end="3:45">Error</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier><modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:52">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:15">

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">CharDriverState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">chr</name> <init pos:start="7:26" pos:end="7:55">= <expr pos:start="7:28" pos:end="7:55"><call pos:start="7:28" pos:end="7:55"><name pos:start="7:28" pos:end="7:40">qemu_chr_find</name><argument_list pos:start="7:41" pos:end="7:55">(<argument pos:start="7:42" pos:end="7:54"><expr pos:start="7:42" pos:end="7:54"><name pos:start="7:42" pos:end="7:54"><name pos:start="7:42" pos:end="7:45">opts</name><operator pos:start="7:46" pos:end="7:47">-&gt;</operator><name pos:start="7:48" pos:end="7:54">chardev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:25">VhostUserChardevProps</name></type> <name pos:start="9:27" pos:end="9:31">props</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:11">chr</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <name pos:start="13:16" pos:end="13:19">NULL</name></expr>)</condition> <block pos:start="13:22" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:20">

        <expr_stmt pos:start="15:9" pos:end="15:68"><expr pos:start="15:9" pos:end="15:67"><call pos:start="15:9" pos:end="15:67"><name pos:start="15:9" pos:end="15:18">error_setg</name><argument_list pos:start="15:19" pos:end="15:67">(<argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">errp</name></expr></argument>, <argument pos:start="15:26" pos:end="15:51"><expr pos:start="15:26" pos:end="15:51"><literal type="string" pos:start="15:26" pos:end="15:51">"chardev \"%s\" not found"</literal></expr></argument>, <argument pos:start="15:54" pos:end="15:66"><expr pos:start="15:54" pos:end="15:66"><name pos:start="15:54" pos:end="15:66"><name pos:start="15:54" pos:end="15:57">opts</name><operator pos:start="15:58" pos:end="15:59">-&gt;</operator><name pos:start="15:60" pos:end="15:66">chardev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:30">/* inspect chardev opts */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><call pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:10">memset</name><argument_list pos:start="25:11" pos:end="25:36">(<argument pos:start="25:12" pos:end="25:17"><expr pos:start="25:12" pos:end="25:17"><operator pos:start="25:12" pos:end="25:12">&amp;</operator><name pos:start="25:13" pos:end="25:17">props</name></expr></argument>, <argument pos:start="25:20" pos:end="25:20"><expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr></argument>, <argument pos:start="25:23" pos:end="25:35"><expr pos:start="25:23" pos:end="25:35"><sizeof pos:start="25:23" pos:end="25:35">sizeof<argument_list pos:start="25:29" pos:end="25:35">(<argument pos:start="25:30" pos:end="25:34"><expr pos:start="25:30" pos:end="25:34"><name pos:start="25:30" pos:end="25:34">props</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:74">(<expr pos:start="27:9" pos:end="27:73"><call pos:start="27:9" pos:end="27:73"><name pos:start="27:9" pos:end="27:24">qemu_opt_foreach</name><argument_list pos:start="27:25" pos:end="27:73">(<argument pos:start="27:26" pos:end="27:34"><expr pos:start="27:26" pos:end="27:34"><name pos:start="27:26" pos:end="27:34"><name pos:start="27:26" pos:end="27:28">chr</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:34">opts</name></name></expr></argument>, <argument pos:start="27:37" pos:end="27:58"><expr pos:start="27:37" pos:end="27:58"><name pos:start="27:37" pos:end="27:58">net_vhost_chardev_opts</name></expr></argument>, <argument pos:start="27:61" pos:end="27:66"><expr pos:start="27:61" pos:end="27:66"><operator pos:start="27:61" pos:end="27:61">&amp;</operator><name pos:start="27:62" pos:end="27:66">props</name></expr></argument>, <argument pos:start="27:69" pos:end="27:72"><expr pos:start="27:69" pos:end="27:72"><name pos:start="27:69" pos:end="27:72">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:76" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:20">

        <return pos:start="29:9" pos:end="29:20">return <expr pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:43">(<expr pos:start="35:9" pos:end="35:42"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:24"><name pos:start="35:10" pos:end="35:14">props</name><operator pos:start="35:15" pos:end="35:15">.</operator><name pos:start="35:16" pos:end="35:24">is_socket</name></name> <operator pos:start="35:26" pos:end="35:27">||</operator> <operator pos:start="35:29" pos:end="35:29">!</operator><name pos:start="35:30" pos:end="35:42"><name pos:start="35:30" pos:end="35:34">props</name><operator pos:start="35:35" pos:end="35:35">.</operator><name pos:start="35:36" pos:end="35:42">is_unix</name></name></expr>)</condition> <block pos:start="35:45" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:20">

        <expr_stmt pos:start="37:9" pos:end="39:34"><expr pos:start="37:9" pos:end="39:33"><call pos:start="37:9" pos:end="39:33"><name pos:start="37:9" pos:end="37:18">error_setg</name><argument_list pos:start="37:19" pos:end="39:33">(<argument pos:start="37:20" pos:end="37:23"><expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">errp</name></expr></argument>, <argument pos:start="37:26" pos:end="37:62"><expr pos:start="37:26" pos:end="37:62"><literal type="string" pos:start="37:26" pos:end="37:62">"chardev \"%s\" is not a unix socket"</literal></expr></argument>,

                   <argument pos:start="39:20" pos:end="39:32"><expr pos:start="39:20" pos:end="39:32"><name pos:start="39:20" pos:end="39:32"><name pos:start="39:20" pos:end="39:23">opts</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:32">chardev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:20">return <expr pos:start="41:16" pos:end="41:19"><name pos:start="41:16" pos:end="41:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:35"><expr pos:start="47:5" pos:end="47:34"><call pos:start="47:5" pos:end="47:34"><name pos:start="47:5" pos:end="47:29">qemu_chr_fe_claim_no_fail</name><argument_list pos:start="47:30" pos:end="47:34">(<argument pos:start="47:31" pos:end="47:33"><expr pos:start="47:31" pos:end="47:33"><name pos:start="47:31" pos:end="47:33">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="51:5" pos:end="51:15">return <expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">chr</name></expr>;</return>

</block_content>}</block></function>
</unit>
