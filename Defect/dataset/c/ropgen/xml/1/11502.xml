<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11502.c" pos:tabs="8"><function pos:start="1:1" pos:end="281:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">mpegts_write_pmt</name><parameter_list pos:start="1:29" pos:end="1:72">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:71"><decl pos:start="1:50" pos:end="1:71"><type pos:start="1:50" pos:end="1:71"><name pos:start="1:50" pos:end="1:62">MpegTSService</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:71">service</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="281:1">{<block_content pos:start="5:5" pos:end="279:42">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">MpegTSWrite</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">ts</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:81"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:32"><name pos:start="7:13" pos:end="7:16">data</name><index pos:start="7:17" pos:end="7:32">[<expr pos:start="7:18" pos:end="7:31"><name pos:start="7:18" pos:end="7:31">SECTION_LENGTH</name></expr>]</index></name></decl>, <decl pos:start="7:35" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:11"><modifier pos:start="7:35" pos:end="7:35">*</modifier></type><name pos:start="7:36" pos:end="7:36">q</name></decl>, <decl pos:start="7:39" pos:end="7:54"><type ref="prev" pos:start="7:5" pos:end="7:11"><modifier pos:start="7:39" pos:end="7:39">*</modifier></type><name pos:start="7:40" pos:end="7:54">desc_length_ptr</name></decl>, <decl pos:start="7:57" pos:end="7:80"><type ref="prev" pos:start="7:5" pos:end="7:11"><modifier pos:start="7:57" pos:end="7:57">*</modifier></type><name pos:start="7:58" pos:end="7:80">program_info_length_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">val</name></decl>, <decl pos:start="9:14" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:24">stream_type</name></decl>, <decl pos:start="9:27" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:27">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:13"><expr pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:5">q</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <name pos:start="13:9" pos:end="13:12">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:41"><expr pos:start="15:5" pos:end="15:40"><call pos:start="15:5" pos:end="15:40"><name pos:start="15:5" pos:end="15:9">put16</name><argument_list pos:start="15:10" pos:end="15:40">(<argument pos:start="15:11" pos:end="15:12"><expr pos:start="15:11" pos:end="15:12"><operator pos:start="15:11" pos:end="15:11">&amp;</operator><name pos:start="15:12" pos:end="15:12">q</name></expr></argument>, <argument pos:start="15:15" pos:end="15:39"><expr pos:start="15:15" pos:end="15:39"><literal type="number" pos:start="15:15" pos:end="15:20">0xe000</literal> <operator pos:start="15:22" pos:end="15:22">|</operator> <name pos:start="15:24" pos:end="15:39"><name pos:start="15:24" pos:end="15:30">service</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:39">pcr_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:27">program_info_length_ptr</name> <operator pos:start="19:29" pos:end="19:29">=</operator> <name pos:start="19:31" pos:end="19:31">q</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:11"><expr pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:5">q</name> <operator pos:start="21:7" pos:end="21:8">+=</operator> <literal type="number" pos:start="21:10" pos:end="21:10">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="21:13" pos:end="21:31">/* patched after */</comment>



    <comment type="block" pos:start="25:5" pos:end="25:31">/* put program info here */</comment>



    <expr_stmt pos:start="29:5" pos:end="29:53"><expr pos:start="29:5" pos:end="29:52"><name pos:start="29:5" pos:end="29:7">val</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <literal type="number" pos:start="29:11" pos:end="29:16">0xf000</literal> <operator pos:start="29:18" pos:end="29:18">|</operator> <operator pos:start="29:20" pos:end="29:20">(</operator><name pos:start="29:21" pos:end="29:21">q</name> <operator pos:start="29:23" pos:end="29:23">-</operator> <name pos:start="29:25" pos:end="29:47">program_info_length_ptr</name> <operator pos:start="29:49" pos:end="29:49">-</operator> <literal type="number" pos:start="29:51" pos:end="29:51">2</literal><operator pos:start="29:52" pos:end="29:52">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:27">program_info_length_ptr</name><index pos:start="31:28" pos:end="31:30">[<expr pos:start="31:29" pos:end="31:29"><literal type="number" pos:start="31:29" pos:end="31:29">0</literal></expr>]</index></name> <operator pos:start="31:32" pos:end="31:32">=</operator> <name pos:start="31:34" pos:end="31:36">val</name> <operator pos:start="31:38" pos:end="31:39">&gt;&gt;</operator> <literal type="number" pos:start="31:41" pos:end="31:41">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:27">program_info_length_ptr</name><index pos:start="33:28" pos:end="33:30">[<expr pos:start="33:29" pos:end="33:29"><literal type="number" pos:start="33:29" pos:end="33:29">1</literal></expr>]</index></name> <operator pos:start="33:32" pos:end="33:32">=</operator> <name pos:start="33:34" pos:end="33:36">val</name></expr>;</expr_stmt>



    <for pos:start="37:5" pos:end="275:5">for <control pos:start="37:9" pos:end="37:39">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:34"><expr pos:start="37:17" pos:end="37:33"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <name pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:21">s</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:33">nb_streams</name></name></expr>;</condition> <incr pos:start="37:36" pos:end="37:38"><expr pos:start="37:36" pos:end="37:38"><name pos:start="37:36" pos:end="37:36">i</name><operator pos:start="37:37" pos:end="37:38">++</operator></expr></incr>)</control> <block pos:start="37:41" pos:end="275:5">{<block_content pos:start="39:9" pos:end="273:33">

        <decl_stmt pos:start="39:9" pos:end="39:37"><decl pos:start="39:9" pos:end="39:36"><type pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:16">AVStream</name> <modifier pos:start="39:18" pos:end="39:18">*</modifier></type><name pos:start="39:19" pos:end="39:20">st</name> <init pos:start="39:22" pos:end="39:36">= <expr pos:start="39:24" pos:end="39:36"><name pos:start="39:24" pos:end="39:36"><name pos:start="39:24" pos:end="39:24">s</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:33">streams</name><index pos:start="39:34" pos:end="39:36">[<expr pos:start="39:35" pos:end="39:35"><name pos:start="39:35" pos:end="39:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:49"><decl pos:start="41:9" pos:end="41:48"><type pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:25">MpegTSWriteStream</name> <modifier pos:start="41:27" pos:end="41:27">*</modifier></type><name pos:start="41:28" pos:end="41:32">ts_st</name> <init pos:start="41:34" pos:end="41:48">= <expr pos:start="41:36" pos:end="41:48"><name pos:start="41:36" pos:end="41:48"><name pos:start="41:36" pos:end="41:37">st</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:48">priv_data</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:81"><decl pos:start="43:9" pos:end="43:80"><type pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:25">AVDictionaryEntry</name> <modifier pos:start="43:27" pos:end="43:27">*</modifier></type><name pos:start="43:28" pos:end="43:31">lang</name> <init pos:start="43:33" pos:end="43:80">= <expr pos:start="43:35" pos:end="43:80"><call pos:start="43:35" pos:end="43:80"><name pos:start="43:35" pos:end="43:45">av_dict_get</name><argument_list pos:start="43:46" pos:end="43:80">(<argument pos:start="43:47" pos:end="43:58"><expr pos:start="43:47" pos:end="43:58"><name pos:start="43:47" pos:end="43:58"><name pos:start="43:47" pos:end="43:48">st</name><operator pos:start="43:49" pos:end="43:50">-&gt;</operator><name pos:start="43:51" pos:end="43:58">metadata</name></name></expr></argument>, <argument pos:start="43:61" pos:end="43:70"><expr pos:start="43:61" pos:end="43:70"><literal type="string" pos:start="43:61" pos:end="43:70">"language"</literal></expr></argument>, <argument pos:start="43:73" pos:end="43:76"><expr pos:start="43:73" pos:end="43:76"><name pos:start="43:73" pos:end="43:76">NULL</name></expr></argument>, <argument pos:start="43:79" pos:end="43:79"><expr pos:start="43:79" pos:end="43:79"><literal type="number" pos:start="43:79" pos:end="43:79">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <switch pos:start="45:9" pos:end="121:9">switch <condition pos:start="45:16" pos:end="45:36">(<expr pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:18">st</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:25">codec</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:35">codec_id</name></name></expr>)</condition> <block pos:start="45:38" pos:end="121:9">{<block_content pos:start="47:9" pos:end="119:18">

        <case pos:start="47:9" pos:end="47:36">case <expr pos:start="47:14" pos:end="47:35"><name pos:start="47:14" pos:end="47:35">AV_CODEC_ID_MPEG1VIDEO</name></expr>:</case>

        <case pos:start="49:9" pos:end="49:36">case <expr pos:start="49:14" pos:end="49:35"><name pos:start="49:14" pos:end="49:35">AV_CODEC_ID_MPEG2VIDEO</name></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="51:50"><expr pos:start="51:13" pos:end="51:49"><name pos:start="51:13" pos:end="51:23">stream_type</name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:49">STREAM_TYPE_VIDEO_MPEG2</name></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:31">case <expr pos:start="55:14" pos:end="55:30"><name pos:start="55:14" pos:end="55:30">AV_CODEC_ID_MPEG4</name></expr>:</case>

            <expr_stmt pos:start="57:13" pos:end="57:50"><expr pos:start="57:13" pos:end="57:49"><name pos:start="57:13" pos:end="57:23">stream_type</name> <operator pos:start="57:25" pos:end="57:25">=</operator> <name pos:start="57:27" pos:end="57:49">STREAM_TYPE_VIDEO_MPEG4</name></expr>;</expr_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>

        <case pos:start="61:9" pos:end="61:30">case <expr pos:start="61:14" pos:end="61:29"><name pos:start="61:14" pos:end="61:29">AV_CODEC_ID_H264</name></expr>:</case>

            <expr_stmt pos:start="63:13" pos:end="63:49"><expr pos:start="63:13" pos:end="63:48"><name pos:start="63:13" pos:end="63:23">stream_type</name> <operator pos:start="63:25" pos:end="63:25">=</operator> <name pos:start="63:27" pos:end="63:48">STREAM_TYPE_VIDEO_H264</name></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:30">case <expr pos:start="67:14" pos:end="67:29"><name pos:start="67:14" pos:end="67:29">AV_CODEC_ID_HEVC</name></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:49"><expr pos:start="69:13" pos:end="69:48"><name pos:start="69:13" pos:end="69:23">stream_type</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:48">STREAM_TYPE_VIDEO_HEVC</name></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        <case pos:start="73:9" pos:end="73:30">case <expr pos:start="73:14" pos:end="73:29"><name pos:start="73:14" pos:end="73:29">AV_CODEC_ID_CAVS</name></expr>:</case>

            <expr_stmt pos:start="75:13" pos:end="75:49"><expr pos:start="75:13" pos:end="75:48"><name pos:start="75:13" pos:end="75:23">stream_type</name> <operator pos:start="75:25" pos:end="75:25">=</operator> <name pos:start="75:27" pos:end="75:48">STREAM_TYPE_VIDEO_CAVS</name></expr>;</expr_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <case pos:start="79:9" pos:end="79:31">case <expr pos:start="79:14" pos:end="79:30"><name pos:start="79:14" pos:end="79:30">AV_CODEC_ID_DIRAC</name></expr>:</case>

            <expr_stmt pos:start="81:13" pos:end="81:50"><expr pos:start="81:13" pos:end="81:49"><name pos:start="81:13" pos:end="81:23">stream_type</name> <operator pos:start="81:25" pos:end="81:25">=</operator> <name pos:start="81:27" pos:end="81:49">STREAM_TYPE_VIDEO_DIRAC</name></expr>;</expr_stmt>

            <break pos:start="83:13" pos:end="83:18">break;</break>

        <case pos:start="85:9" pos:end="85:29">case <expr pos:start="85:14" pos:end="85:28"><name pos:start="85:14" pos:end="85:28">AV_CODEC_ID_MP2</name></expr>:</case>

        <case pos:start="87:9" pos:end="87:29">case <expr pos:start="87:14" pos:end="87:28"><name pos:start="87:14" pos:end="87:28">AV_CODEC_ID_MP3</name></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="89:50"><expr pos:start="89:13" pos:end="89:49"><name pos:start="89:13" pos:end="89:23">stream_type</name> <operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:49">STREAM_TYPE_AUDIO_MPEG1</name></expr>;</expr_stmt>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        <case pos:start="93:9" pos:end="93:29">case <expr pos:start="93:14" pos:end="93:28"><name pos:start="93:14" pos:end="93:28">AV_CODEC_ID_AAC</name></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="99:50"><expr pos:start="95:13" pos:end="99:49"><name pos:start="95:13" pos:end="95:23">stream_type</name> <operator pos:start="95:25" pos:end="95:25">=</operator> <ternary pos:start="95:27" pos:end="99:49"><condition pos:start="95:27" pos:end="97:27"><expr pos:start="95:27" pos:end="95:60"><operator pos:start="95:27" pos:end="95:27">(</operator><name pos:start="95:28" pos:end="95:36"><name pos:start="95:28" pos:end="95:29">ts</name><operator pos:start="95:30" pos:end="95:31">-&gt;</operator><name pos:start="95:32" pos:end="95:36">flags</name></name> <operator pos:start="95:38" pos:end="95:38">&amp;</operator> <name pos:start="95:40" pos:end="95:59">MPEGTS_FLAG_AAC_LATM</name><operator pos:start="95:60" pos:end="95:60">)</operator></expr>

                          ?</condition><then pos:start="97:29" pos:end="97:54"> <expr pos:start="97:29" pos:end="97:54"><name pos:start="97:29" pos:end="97:54">STREAM_TYPE_AUDIO_AAC_LATM</name></expr>

                          </then><else pos:start="99:27" pos:end="99:49">: <expr pos:start="99:29" pos:end="99:49"><name pos:start="99:29" pos:end="99:49">STREAM_TYPE_AUDIO_AAC</name></expr></else></ternary></expr>;</expr_stmt>

            <break pos:start="101:13" pos:end="101:18">break;</break>

        <case pos:start="103:9" pos:end="103:34">case <expr pos:start="103:14" pos:end="103:33"><name pos:start="103:14" pos:end="103:33">AV_CODEC_ID_AAC_LATM</name></expr>:</case>

            <expr_stmt pos:start="105:13" pos:end="105:53"><expr pos:start="105:13" pos:end="105:52"><name pos:start="105:13" pos:end="105:23">stream_type</name> <operator pos:start="105:25" pos:end="105:25">=</operator> <name pos:start="105:27" pos:end="105:52">STREAM_TYPE_AUDIO_AAC_LATM</name></expr>;</expr_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:29">case <expr pos:start="109:14" pos:end="109:28"><name pos:start="109:14" pos:end="109:28">AV_CODEC_ID_AC3</name></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="111:48"><expr pos:start="111:13" pos:end="111:47"><name pos:start="111:13" pos:end="111:23">stream_type</name> <operator pos:start="111:25" pos:end="111:25">=</operator> <name pos:start="111:27" pos:end="111:47">STREAM_TYPE_AUDIO_AC3</name></expr>;</expr_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        <default pos:start="115:9" pos:end="115:16">default:</default>

            <expr_stmt pos:start="117:13" pos:end="117:51"><expr pos:start="117:13" pos:end="117:50"><name pos:start="117:13" pos:end="117:23">stream_type</name> <operator pos:start="117:25" pos:end="117:25">=</operator> <name pos:start="117:27" pos:end="117:50">STREAM_TYPE_PRIVATE_DATA</name></expr>;</expr_stmt>

            <break pos:start="119:13" pos:end="119:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="123:9" pos:end="123:27"><expr pos:start="123:9" pos:end="123:26"><operator pos:start="123:9" pos:end="123:9">*</operator><name pos:start="123:10" pos:end="123:10">q</name><operator pos:start="123:11" pos:end="123:12">++</operator> <operator pos:start="123:14" pos:end="123:14">=</operator> <name pos:start="123:16" pos:end="123:26">stream_type</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:39"><expr pos:start="125:9" pos:end="125:38"><call pos:start="125:9" pos:end="125:38"><name pos:start="125:9" pos:end="125:13">put16</name><argument_list pos:start="125:14" pos:end="125:38">(<argument pos:start="125:15" pos:end="125:16"><expr pos:start="125:15" pos:end="125:16"><operator pos:start="125:15" pos:end="125:15">&amp;</operator><name pos:start="125:16" pos:end="125:16">q</name></expr></argument>, <argument pos:start="125:19" pos:end="125:37"><expr pos:start="125:19" pos:end="125:37"><literal type="number" pos:start="125:19" pos:end="125:24">0xe000</literal> <operator pos:start="125:26" pos:end="125:26">|</operator> <name pos:start="125:28" pos:end="125:37"><name pos:start="125:28" pos:end="125:32">ts_st</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:37">pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:28"><expr pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:23">desc_length_ptr</name> <operator pos:start="127:25" pos:end="127:25">=</operator> <name pos:start="127:27" pos:end="127:27">q</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:15"><expr pos:start="129:9" pos:end="129:14"><name pos:start="129:9" pos:end="129:9">q</name> <operator pos:start="129:11" pos:end="129:12">+=</operator> <literal type="number" pos:start="129:14" pos:end="129:14">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="129:17" pos:end="129:35">/* patched after */</comment>



        <comment type="block" pos:start="133:9" pos:end="133:45">/* write optional descriptors here */</comment>

        <switch pos:start="135:9" pos:end="265:9">switch <condition pos:start="135:16" pos:end="135:38">(<expr pos:start="135:17" pos:end="135:37"><name pos:start="135:17" pos:end="135:37"><name pos:start="135:17" pos:end="135:18">st</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:25">codec</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:37">codec_type</name></name></expr>)</condition> <block pos:start="135:40" pos:end="265:9">{<block_content pos:start="137:9" pos:end="263:18">

        <case pos:start="137:9" pos:end="137:32">case <expr pos:start="137:14" pos:end="137:31"><name pos:start="137:14" pos:end="137:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <if_stmt pos:start="139:13" pos:end="203:13"><if pos:start="139:13" pos:end="203:13">if <condition pos:start="139:16" pos:end="139:21">(<expr pos:start="139:17" pos:end="139:20"><name pos:start="139:17" pos:end="139:20">lang</name></expr>)</condition> <block pos:start="139:23" pos:end="203:13">{<block_content pos:start="141:17" pos:end="201:27">

                <decl_stmt pos:start="141:17" pos:end="141:24"><decl pos:start="141:17" pos:end="141:23"><type pos:start="141:17" pos:end="141:22"><name pos:start="141:17" pos:end="141:20">char</name> <modifier pos:start="141:22" pos:end="141:22">*</modifier></type><name pos:start="141:23" pos:end="141:23">p</name></decl>;</decl_stmt>

                <decl_stmt pos:start="143:17" pos:end="143:41"><decl pos:start="143:17" pos:end="143:40"><type pos:start="143:17" pos:end="143:22"><name pos:start="143:17" pos:end="143:20">char</name> <modifier pos:start="143:22" pos:end="143:22">*</modifier></type><name pos:start="143:23" pos:end="143:26">next</name> <init pos:start="143:28" pos:end="143:40">= <expr pos:start="143:30" pos:end="143:40"><name pos:start="143:30" pos:end="143:40"><name pos:start="143:30" pos:end="143:33">lang</name><operator pos:start="143:34" pos:end="143:35">-&gt;</operator><name pos:start="143:36" pos:end="143:40">value</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="145:17" pos:end="145:33"><decl pos:start="145:17" pos:end="145:32"><type pos:start="145:17" pos:end="145:25"><name pos:start="145:17" pos:end="145:23">uint8_t</name> <modifier pos:start="145:25" pos:end="145:25">*</modifier></type><name pos:start="145:26" pos:end="145:32">len_ptr</name></decl>;</decl_stmt>



                <expr_stmt pos:start="149:17" pos:end="149:32"><expr pos:start="149:17" pos:end="149:31"><operator pos:start="149:17" pos:end="149:17">*</operator><name pos:start="149:18" pos:end="149:18">q</name><operator pos:start="149:19" pos:end="149:20">++</operator>     <operator pos:start="149:26" pos:end="149:26">=</operator> <literal type="number" pos:start="149:28" pos:end="149:31">0x0a</literal></expr>;</expr_stmt> <comment type="block" pos:start="149:34" pos:end="149:66">/* ISO 639 language descriptor */</comment>

                <expr_stmt pos:start="151:17" pos:end="151:31"><expr pos:start="151:17" pos:end="151:30"><name pos:start="151:17" pos:end="151:23">len_ptr</name>  <operator pos:start="151:26" pos:end="151:26">=</operator> <name pos:start="151:28" pos:end="151:28">q</name><operator pos:start="151:29" pos:end="151:30">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:29"><expr pos:start="153:17" pos:end="153:28"><operator pos:start="153:17" pos:end="153:17">*</operator><name pos:start="153:18" pos:end="153:24">len_ptr</name> <operator pos:start="153:26" pos:end="153:26">=</operator> <literal type="number" pos:start="153:28" pos:end="153:28">0</literal></expr>;</expr_stmt>



                <for pos:start="157:17" pos:end="195:17">for <control pos:start="157:21" pos:end="157:83">(<init pos:start="157:22" pos:end="157:37"><expr pos:start="157:22" pos:end="157:36"><name pos:start="157:22" pos:end="157:22">p</name> <operator pos:start="157:24" pos:end="157:24">=</operator> <name pos:start="157:26" pos:end="157:36"><name pos:start="157:26" pos:end="157:29">lang</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:36">value</name></name></expr>;</init> <condition pos:start="157:39" pos:end="157:69"><expr pos:start="157:39" pos:end="157:68"><name pos:start="157:39" pos:end="157:42">next</name> <operator pos:start="157:44" pos:end="157:45">&amp;&amp;</operator> <operator pos:start="157:47" pos:end="157:47">*</operator><name pos:start="157:48" pos:end="157:54">len_ptr</name> <operator pos:start="157:56" pos:end="157:56">&lt;</operator> <literal type="number" pos:start="157:58" pos:end="157:60">255</literal> <operator pos:start="157:62" pos:end="157:62">/</operator> <literal type="number" pos:start="157:64" pos:end="157:64">4</literal> <operator pos:start="157:66" pos:end="157:66">*</operator> <literal type="number" pos:start="157:68" pos:end="157:68">4</literal></expr>;</condition> <incr pos:start="157:71" pos:end="157:82"><expr pos:start="157:71" pos:end="157:82"><name pos:start="157:71" pos:end="157:71">p</name> <operator pos:start="157:73" pos:end="157:73">=</operator> <name pos:start="157:75" pos:end="157:78">next</name> <operator pos:start="157:80" pos:end="157:80">+</operator> <literal type="number" pos:start="157:82" pos:end="157:82">1</literal></expr></incr>)</control> <block pos:start="157:85" pos:end="195:17">{<block_content pos:start="159:21" pos:end="193:34">

                    <expr_stmt pos:start="159:21" pos:end="159:42"><expr pos:start="159:21" pos:end="159:41"><name pos:start="159:21" pos:end="159:24">next</name> <operator pos:start="159:26" pos:end="159:26">=</operator> <call pos:start="159:28" pos:end="159:41"><name pos:start="159:28" pos:end="159:33">strchr</name><argument_list pos:start="159:34" pos:end="159:41">(<argument pos:start="159:35" pos:end="159:35"><expr pos:start="159:35" pos:end="159:35"><name pos:start="159:35" pos:end="159:35">p</name></expr></argument>, <argument pos:start="159:38" pos:end="159:40"><expr pos:start="159:38" pos:end="159:40"><literal type="char" pos:start="159:38" pos:end="159:40">','</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="161:21" pos:end="163:33"><if pos:start="161:21" pos:end="163:33">if <condition pos:start="161:24" pos:end="161:67">(<expr pos:start="161:25" pos:end="161:66"><call pos:start="161:25" pos:end="161:33"><name pos:start="161:25" pos:end="161:30">strlen</name><argument_list pos:start="161:31" pos:end="161:33">(<argument pos:start="161:32" pos:end="161:32"><expr pos:start="161:32" pos:end="161:32"><name pos:start="161:32" pos:end="161:32">p</name></expr></argument>)</argument_list></call> <operator pos:start="161:35" pos:end="161:36">!=</operator> <literal type="number" pos:start="161:38" pos:end="161:38">3</literal> <operator pos:start="161:40" pos:end="161:41">&amp;&amp;</operator> <operator pos:start="161:43" pos:end="161:43">(</operator><operator pos:start="161:44" pos:end="161:44">!</operator><name pos:start="161:45" pos:end="161:48">next</name> <operator pos:start="161:50" pos:end="161:51">||</operator> <name pos:start="161:53" pos:end="161:56">next</name> <operator pos:start="161:58" pos:end="161:59">!=</operator> <name pos:start="161:61" pos:end="161:61">p</name> <operator pos:start="161:63" pos:end="161:63">+</operator> <literal type="number" pos:start="161:65" pos:end="161:65">3</literal><operator pos:start="161:66" pos:end="161:66">)</operator></expr>)</condition><block type="pseudo" pos:start="163:25" pos:end="163:33"><block_content pos:start="163:25" pos:end="163:33">

                        <continue pos:start="163:25" pos:end="163:33">continue;</continue></block_content></block></if></if_stmt> <comment type="block" pos:start="163:35" pos:end="163:59">/* not a 3-letter code */</comment>



                    <expr_stmt pos:start="167:21" pos:end="167:32"><expr pos:start="167:21" pos:end="167:31"><operator pos:start="167:21" pos:end="167:21">*</operator><name pos:start="167:22" pos:end="167:22">q</name><operator pos:start="167:23" pos:end="167:24">++</operator> <operator pos:start="167:26" pos:end="167:26">=</operator> <operator pos:start="167:28" pos:end="167:28">*</operator><name pos:start="167:29" pos:end="167:29">p</name><operator pos:start="167:30" pos:end="167:31">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="169:21" pos:end="169:32"><expr pos:start="169:21" pos:end="169:31"><operator pos:start="169:21" pos:end="169:21">*</operator><name pos:start="169:22" pos:end="169:22">q</name><operator pos:start="169:23" pos:end="169:24">++</operator> <operator pos:start="169:26" pos:end="169:26">=</operator> <operator pos:start="169:28" pos:end="169:28">*</operator><name pos:start="169:29" pos:end="169:29">p</name><operator pos:start="169:30" pos:end="169:31">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="171:21" pos:end="171:32"><expr pos:start="171:21" pos:end="171:31"><operator pos:start="171:21" pos:end="171:21">*</operator><name pos:start="171:22" pos:end="171:22">q</name><operator pos:start="171:23" pos:end="171:24">++</operator> <operator pos:start="171:26" pos:end="171:26">=</operator> <operator pos:start="171:28" pos:end="171:28">*</operator><name pos:start="171:29" pos:end="171:29">p</name><operator pos:start="171:30" pos:end="171:31">++</operator></expr>;</expr_stmt>



                    <if_stmt pos:start="175:21" pos:end="189:33"><if pos:start="175:21" pos:end="177:36">if <condition pos:start="175:24" pos:end="175:71">(<expr pos:start="175:25" pos:end="175:70"><name pos:start="175:25" pos:end="175:39"><name pos:start="175:25" pos:end="175:26">st</name><operator pos:start="175:27" pos:end="175:28">-&gt;</operator><name pos:start="175:29" pos:end="175:39">disposition</name></name> <operator pos:start="175:41" pos:end="175:41">&amp;</operator> <name pos:start="175:43" pos:end="175:70">AV_DISPOSITION_CLEAN_EFFECTS</name></expr>)</condition><block type="pseudo" pos:start="177:25" pos:end="177:36"><block_content pos:start="177:25" pos:end="177:36">

                        <expr_stmt pos:start="177:25" pos:end="177:36"><expr pos:start="177:25" pos:end="177:35"><operator pos:start="177:25" pos:end="177:25">*</operator><name pos:start="177:26" pos:end="177:26">q</name><operator pos:start="177:27" pos:end="177:28">++</operator> <operator pos:start="177:30" pos:end="177:30">=</operator> <literal type="number" pos:start="177:32" pos:end="177:35">0x01</literal></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="179:21" pos:end="181:36">else if <condition pos:start="179:29" pos:end="179:79">(<expr pos:start="179:30" pos:end="179:78"><name pos:start="179:30" pos:end="179:44"><name pos:start="179:30" pos:end="179:31">st</name><operator pos:start="179:32" pos:end="179:33">-&gt;</operator><name pos:start="179:34" pos:end="179:44">disposition</name></name> <operator pos:start="179:46" pos:end="179:46">&amp;</operator> <name pos:start="179:48" pos:end="179:78">AV_DISPOSITION_HEARING_IMPAIRED</name></expr>)</condition><block type="pseudo" pos:start="181:25" pos:end="181:36"><block_content pos:start="181:25" pos:end="181:36">

                        <expr_stmt pos:start="181:25" pos:end="181:36"><expr pos:start="181:25" pos:end="181:35"><operator pos:start="181:25" pos:end="181:25">*</operator><name pos:start="181:26" pos:end="181:26">q</name><operator pos:start="181:27" pos:end="181:28">++</operator> <operator pos:start="181:30" pos:end="181:30">=</operator> <literal type="number" pos:start="181:32" pos:end="181:35">0x02</literal></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="183:21" pos:end="185:36">else if <condition pos:start="183:29" pos:end="183:78">(<expr pos:start="183:30" pos:end="183:77"><name pos:start="183:30" pos:end="183:44"><name pos:start="183:30" pos:end="183:31">st</name><operator pos:start="183:32" pos:end="183:33">-&gt;</operator><name pos:start="183:34" pos:end="183:44">disposition</name></name> <operator pos:start="183:46" pos:end="183:46">&amp;</operator> <name pos:start="183:48" pos:end="183:77">AV_DISPOSITION_VISUAL_IMPAIRED</name></expr>)</condition><block type="pseudo" pos:start="185:25" pos:end="185:36"><block_content pos:start="185:25" pos:end="185:36">

                        <expr_stmt pos:start="185:25" pos:end="185:36"><expr pos:start="185:25" pos:end="185:35"><operator pos:start="185:25" pos:end="185:25">*</operator><name pos:start="185:26" pos:end="185:26">q</name><operator pos:start="185:27" pos:end="185:28">++</operator> <operator pos:start="185:30" pos:end="185:30">=</operator> <literal type="number" pos:start="185:32" pos:end="185:35">0x03</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="187:21" pos:end="189:33">else<block type="pseudo" pos:start="189:25" pos:end="189:33"><block_content pos:start="189:25" pos:end="189:33">

                        <expr_stmt pos:start="189:25" pos:end="189:33"><expr pos:start="189:25" pos:end="189:32"><operator pos:start="189:25" pos:end="189:25">*</operator><name pos:start="189:26" pos:end="189:26">q</name><operator pos:start="189:27" pos:end="189:28">++</operator> <operator pos:start="189:30" pos:end="189:30">=</operator> <literal type="number" pos:start="189:32" pos:end="189:32">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="189:35" pos:end="189:54">/* undefined type */</comment>



                    <expr_stmt pos:start="193:21" pos:end="193:34"><expr pos:start="193:21" pos:end="193:33"><operator pos:start="193:21" pos:end="193:21">*</operator><name pos:start="193:22" pos:end="193:28">len_ptr</name> <operator pos:start="193:30" pos:end="193:31">+=</operator> <literal type="number" pos:start="193:33" pos:end="193:33">4</literal></expr>;</expr_stmt>

                </block_content>}</block></for>



                <if_stmt pos:start="199:17" pos:end="201:27"><if pos:start="199:17" pos:end="201:27">if <condition pos:start="199:20" pos:end="199:34">(<expr pos:start="199:21" pos:end="199:33"><operator pos:start="199:21" pos:end="199:21">*</operator><name pos:start="199:22" pos:end="199:28">len_ptr</name> <operator pos:start="199:30" pos:end="199:31">==</operator> <literal type="number" pos:start="199:33" pos:end="199:33">0</literal></expr>)</condition><block type="pseudo" pos:start="201:21" pos:end="201:27"><block_content pos:start="201:21" pos:end="201:27">

                    <expr_stmt pos:start="201:21" pos:end="201:27"><expr pos:start="201:21" pos:end="201:26"><name pos:start="201:21" pos:end="201:21">q</name> <operator pos:start="201:23" pos:end="201:24">-=</operator> <literal type="number" pos:start="201:26" pos:end="201:26">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="201:29" pos:end="201:64">/* no language codes were written */</comment>

            </block_content>}</block></if></if_stmt>

            <break pos:start="205:13" pos:end="205:18">break;</break>

        <case pos:start="207:9" pos:end="207:35">case <expr pos:start="207:14" pos:end="207:34"><name pos:start="207:14" pos:end="207:34">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

        <block pos:start="209:9" pos:end="241:9">{<block_content pos:start="211:13" pos:end="239:13">

            <decl_stmt pos:start="211:13" pos:end="211:33"><decl pos:start="211:13" pos:end="211:32"><type pos:start="211:13" pos:end="211:24"><specifier pos:start="211:13" pos:end="211:17">const</specifier> <name pos:start="211:19" pos:end="211:22">char</name> <modifier pos:start="211:24" pos:end="211:24">*</modifier></type><name pos:start="211:25" pos:end="211:32">language</name></decl>;</decl_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:78"><expr pos:start="213:13" pos:end="213:77"><name pos:start="213:13" pos:end="213:20">language</name> <operator pos:start="213:22" pos:end="213:22">=</operator> <ternary pos:start="213:24" pos:end="213:77"><condition pos:start="213:24" pos:end="213:57"><expr pos:start="213:24" pos:end="213:55"><name pos:start="213:24" pos:end="213:27">lang</name> <operator pos:start="213:29" pos:end="213:30">&amp;&amp;</operator> <call pos:start="213:32" pos:end="213:50"><name pos:start="213:32" pos:end="213:37">strlen</name><argument_list pos:start="213:38" pos:end="213:50">(<argument pos:start="213:39" pos:end="213:49"><expr pos:start="213:39" pos:end="213:49"><name pos:start="213:39" pos:end="213:49"><name pos:start="213:39" pos:end="213:42">lang</name><operator pos:start="213:43" pos:end="213:44">-&gt;</operator><name pos:start="213:45" pos:end="213:49">value</name></name></expr></argument>)</argument_list></call> <operator pos:start="213:52" pos:end="213:53">==</operator> <literal type="number" pos:start="213:55" pos:end="213:55">3</literal></expr> ?</condition><then pos:start="213:59" pos:end="213:69"> <expr pos:start="213:59" pos:end="213:69"><name pos:start="213:59" pos:end="213:69"><name pos:start="213:59" pos:end="213:62">lang</name><operator pos:start="213:63" pos:end="213:64">-&gt;</operator><name pos:start="213:65" pos:end="213:69">value</name></name></expr> </then><else pos:start="213:71" pos:end="213:77">: <expr pos:start="213:73" pos:end="213:77"><literal type="string" pos:start="213:73" pos:end="213:77">"eng"</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:24"><expr pos:start="215:13" pos:end="215:23"><operator pos:start="215:13" pos:end="215:13">*</operator><name pos:start="215:14" pos:end="215:14">q</name><operator pos:start="215:15" pos:end="215:16">++</operator> <operator pos:start="215:18" pos:end="215:18">=</operator> <literal type="number" pos:start="215:20" pos:end="215:23">0x59</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:21"><expr pos:start="217:13" pos:end="217:20"><operator pos:start="217:13" pos:end="217:13">*</operator><name pos:start="217:14" pos:end="217:14">q</name><operator pos:start="217:15" pos:end="217:16">++</operator> <operator pos:start="217:18" pos:end="217:18">=</operator> <literal type="number" pos:start="217:20" pos:end="217:20">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:31"><expr pos:start="219:13" pos:end="219:30"><operator pos:start="219:13" pos:end="219:13">*</operator><name pos:start="219:14" pos:end="219:14">q</name><operator pos:start="219:15" pos:end="219:16">++</operator> <operator pos:start="219:18" pos:end="219:18">=</operator> <name pos:start="219:20" pos:end="219:30"><name pos:start="219:20" pos:end="219:27">language</name><index pos:start="219:28" pos:end="219:30">[<expr pos:start="219:29" pos:end="219:29"><literal type="number" pos:start="219:29" pos:end="219:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:31"><expr pos:start="221:13" pos:end="221:30"><operator pos:start="221:13" pos:end="221:13">*</operator><name pos:start="221:14" pos:end="221:14">q</name><operator pos:start="221:15" pos:end="221:16">++</operator> <operator pos:start="221:18" pos:end="221:18">=</operator> <name pos:start="221:20" pos:end="221:30"><name pos:start="221:20" pos:end="221:27">language</name><index pos:start="221:28" pos:end="221:30">[<expr pos:start="221:29" pos:end="221:29"><literal type="number" pos:start="221:29" pos:end="221:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:31"><expr pos:start="223:13" pos:end="223:30"><operator pos:start="223:13" pos:end="223:13">*</operator><name pos:start="223:14" pos:end="223:14">q</name><operator pos:start="223:15" pos:end="223:16">++</operator> <operator pos:start="223:18" pos:end="223:18">=</operator> <name pos:start="223:20" pos:end="223:30"><name pos:start="223:20" pos:end="223:27">language</name><index pos:start="223:28" pos:end="223:30">[<expr pos:start="223:29" pos:end="223:29"><literal type="number" pos:start="223:29" pos:end="223:29">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:24"><expr pos:start="225:13" pos:end="225:23"><operator pos:start="225:13" pos:end="225:13">*</operator><name pos:start="225:14" pos:end="225:14">q</name><operator pos:start="225:15" pos:end="225:16">++</operator> <operator pos:start="225:18" pos:end="225:18">=</operator> <literal type="number" pos:start="225:20" pos:end="225:23">0x10</literal></expr>;</expr_stmt> <comment type="block" pos:start="225:26" pos:end="225:70">/* normal subtitles (0x20 = if hearing pb) */</comment>

            <if_stmt pos:start="227:13" pos:end="239:13"><if pos:start="227:13" pos:end="233:13">if <condition pos:start="227:16" pos:end="227:47">(<expr pos:start="227:17" pos:end="227:46"><name pos:start="227:17" pos:end="227:41"><name pos:start="227:17" pos:end="227:18">st</name><operator pos:start="227:19" pos:end="227:20">-&gt;</operator><name pos:start="227:21" pos:end="227:25">codec</name><operator pos:start="227:26" pos:end="227:27">-&gt;</operator><name pos:start="227:28" pos:end="227:41">extradata_size</name></name> <operator pos:start="227:43" pos:end="227:44">==</operator> <literal type="number" pos:start="227:46" pos:end="227:46">4</literal></expr>)</condition> <block pos:start="227:49" pos:end="233:13">{<block_content pos:start="229:17" pos:end="231:23">

                <expr_stmt pos:start="229:17" pos:end="229:51"><expr pos:start="229:17" pos:end="229:50"><call pos:start="229:17" pos:end="229:50"><name pos:start="229:17" pos:end="229:22">memcpy</name><argument_list pos:start="229:23" pos:end="229:50">(<argument pos:start="229:24" pos:end="229:24"><expr pos:start="229:24" pos:end="229:24"><name pos:start="229:24" pos:end="229:24">q</name></expr></argument>, <argument pos:start="229:27" pos:end="229:46"><expr pos:start="229:27" pos:end="229:46"><name pos:start="229:27" pos:end="229:46"><name pos:start="229:27" pos:end="229:28">st</name><operator pos:start="229:29" pos:end="229:30">-&gt;</operator><name pos:start="229:31" pos:end="229:35">codec</name><operator pos:start="229:36" pos:end="229:37">-&gt;</operator><name pos:start="229:38" pos:end="229:46">extradata</name></name></expr></argument>, <argument pos:start="229:49" pos:end="229:49"><expr pos:start="229:49" pos:end="229:49"><literal type="number" pos:start="229:49" pos:end="229:49">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:23"><expr pos:start="231:17" pos:end="231:22"><name pos:start="231:17" pos:end="231:17">q</name> <operator pos:start="231:19" pos:end="231:20">+=</operator> <literal type="number" pos:start="231:22" pos:end="231:22">4</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="233:15" pos:end="239:13">else <block pos:start="233:20" pos:end="239:13">{<block_content pos:start="235:17" pos:end="237:29">

                <expr_stmt pos:start="235:17" pos:end="235:29"><expr pos:start="235:17" pos:end="235:28"><call pos:start="235:17" pos:end="235:28"><name pos:start="235:17" pos:end="235:21">put16</name><argument_list pos:start="235:22" pos:end="235:28">(<argument pos:start="235:23" pos:end="235:24"><expr pos:start="235:23" pos:end="235:24"><operator pos:start="235:23" pos:end="235:23">&amp;</operator><name pos:start="235:24" pos:end="235:24">q</name></expr></argument>, <argument pos:start="235:27" pos:end="235:27"><expr pos:start="235:27" pos:end="235:27"><literal type="number" pos:start="235:27" pos:end="235:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="235:35" pos:end="235:47">/* page id */</comment>

                <expr_stmt pos:start="237:17" pos:end="237:29"><expr pos:start="237:17" pos:end="237:28"><call pos:start="237:17" pos:end="237:28"><name pos:start="237:17" pos:end="237:21">put16</name><argument_list pos:start="237:22" pos:end="237:28">(<argument pos:start="237:23" pos:end="237:24"><expr pos:start="237:23" pos:end="237:24"><operator pos:start="237:23" pos:end="237:23">&amp;</operator><name pos:start="237:24" pos:end="237:24">q</name></expr></argument>, <argument pos:start="237:27" pos:end="237:27"><expr pos:start="237:27" pos:end="237:27"><literal type="number" pos:start="237:27" pos:end="237:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="237:35" pos:end="237:57">/* ancillary page id */</comment>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block>

        <break pos:start="243:9" pos:end="243:14">break;</break>

        <case pos:start="245:9" pos:end="245:32">case <expr pos:start="245:14" pos:end="245:31"><name pos:start="245:14" pos:end="245:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <if_stmt pos:start="247:13" pos:end="261:13"><if pos:start="247:13" pos:end="261:13">if <condition pos:start="247:16" pos:end="247:55">(<expr pos:start="247:17" pos:end="247:54"><name pos:start="247:17" pos:end="247:27">stream_type</name> <operator pos:start="247:29" pos:end="247:30">==</operator> <name pos:start="247:32" pos:end="247:54">STREAM_TYPE_VIDEO_DIRAC</name></expr>)</condition> <block pos:start="247:57" pos:end="261:13">{<block_content pos:start="249:17" pos:end="259:27">

                <expr_stmt pos:start="249:17" pos:end="249:28"><expr pos:start="249:17" pos:end="249:27"><operator pos:start="249:17" pos:end="249:17">*</operator><name pos:start="249:18" pos:end="249:18">q</name><operator pos:start="249:19" pos:end="249:20">++</operator> <operator pos:start="249:22" pos:end="249:22">=</operator> <literal type="number" pos:start="249:24" pos:end="249:27">0x05</literal></expr>;</expr_stmt> <comment type="block" pos:start="249:30" pos:end="249:63">/*MPEG-2 registration descriptor*/</comment>

                <expr_stmt pos:start="251:17" pos:end="251:25"><expr pos:start="251:17" pos:end="251:24"><operator pos:start="251:17" pos:end="251:17">*</operator><name pos:start="251:18" pos:end="251:18">q</name><operator pos:start="251:19" pos:end="251:20">++</operator> <operator pos:start="251:22" pos:end="251:22">=</operator> <literal type="number" pos:start="251:24" pos:end="251:24">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:27"><expr pos:start="253:17" pos:end="253:26"><operator pos:start="253:17" pos:end="253:17">*</operator><name pos:start="253:18" pos:end="253:18">q</name><operator pos:start="253:19" pos:end="253:20">++</operator> <operator pos:start="253:22" pos:end="253:22">=</operator> <literal type="char" pos:start="253:24" pos:end="253:26">'d'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:27"><expr pos:start="255:17" pos:end="255:26"><operator pos:start="255:17" pos:end="255:17">*</operator><name pos:start="255:18" pos:end="255:18">q</name><operator pos:start="255:19" pos:end="255:20">++</operator> <operator pos:start="255:22" pos:end="255:22">=</operator> <literal type="char" pos:start="255:24" pos:end="255:26">'r'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="257:17" pos:end="257:27"><expr pos:start="257:17" pos:end="257:26"><operator pos:start="257:17" pos:end="257:17">*</operator><name pos:start="257:18" pos:end="257:18">q</name><operator pos:start="257:19" pos:end="257:20">++</operator> <operator pos:start="257:22" pos:end="257:22">=</operator> <literal type="char" pos:start="257:24" pos:end="257:26">'a'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="259:17" pos:end="259:27"><expr pos:start="259:17" pos:end="259:26"><operator pos:start="259:17" pos:end="259:17">*</operator><name pos:start="259:18" pos:end="259:18">q</name><operator pos:start="259:19" pos:end="259:20">++</operator> <operator pos:start="259:22" pos:end="259:22">=</operator> <literal type="char" pos:start="259:24" pos:end="259:26">'c'</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="263:13" pos:end="263:18">break;</break>

        </block_content>}</block></switch>



        <expr_stmt pos:start="269:9" pos:end="269:49"><expr pos:start="269:9" pos:end="269:48"><name pos:start="269:9" pos:end="269:11">val</name> <operator pos:start="269:13" pos:end="269:13">=</operator> <literal type="number" pos:start="269:15" pos:end="269:20">0xf000</literal> <operator pos:start="269:22" pos:end="269:22">|</operator> <operator pos:start="269:24" pos:end="269:24">(</operator><name pos:start="269:25" pos:end="269:25">q</name> <operator pos:start="269:27" pos:end="269:27">-</operator> <name pos:start="269:29" pos:end="269:43">desc_length_ptr</name> <operator pos:start="269:45" pos:end="269:45">-</operator> <literal type="number" pos:start="269:47" pos:end="269:47">2</literal><operator pos:start="269:48" pos:end="269:48">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:38"><expr pos:start="271:9" pos:end="271:37"><name pos:start="271:9" pos:end="271:26"><name pos:start="271:9" pos:end="271:23">desc_length_ptr</name><index pos:start="271:24" pos:end="271:26">[<expr pos:start="271:25" pos:end="271:25"><literal type="number" pos:start="271:25" pos:end="271:25">0</literal></expr>]</index></name> <operator pos:start="271:28" pos:end="271:28">=</operator> <name pos:start="271:30" pos:end="271:32">val</name> <operator pos:start="271:34" pos:end="271:35">&gt;&gt;</operator> <literal type="number" pos:start="271:37" pos:end="271:37">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:33"><expr pos:start="273:9" pos:end="273:32"><name pos:start="273:9" pos:end="273:26"><name pos:start="273:9" pos:end="273:23">desc_length_ptr</name><index pos:start="273:24" pos:end="273:26">[<expr pos:start="273:25" pos:end="273:25"><literal type="number" pos:start="273:25" pos:end="273:25">1</literal></expr>]</index></name> <operator pos:start="273:28" pos:end="273:28">=</operator> <name pos:start="273:30" pos:end="273:32">val</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="277:5" pos:end="279:42"><expr pos:start="277:5" pos:end="279:41"><call pos:start="277:5" pos:end="279:41"><name pos:start="277:5" pos:end="277:25">mpegts_write_section1</name><argument_list pos:start="277:26" pos:end="279:41">(<argument pos:start="277:27" pos:end="277:39"><expr pos:start="277:27" pos:end="277:39"><operator pos:start="277:27" pos:end="277:27">&amp;</operator><name pos:start="277:28" pos:end="277:39"><name pos:start="277:28" pos:end="277:34">service</name><operator pos:start="277:35" pos:end="277:36">-&gt;</operator><name pos:start="277:37" pos:end="277:39">pmt</name></name></expr></argument>, <argument pos:start="277:42" pos:end="277:48"><expr pos:start="277:42" pos:end="277:48"><name pos:start="277:42" pos:end="277:48">PMT_TID</name></expr></argument>, <argument pos:start="277:51" pos:end="277:62"><expr pos:start="277:51" pos:end="277:62"><name pos:start="277:51" pos:end="277:62"><name pos:start="277:51" pos:end="277:57">service</name><operator pos:start="277:58" pos:end="277:59">-&gt;</operator><name pos:start="277:60" pos:end="277:62">sid</name></name></expr></argument>, <argument pos:start="277:65" pos:end="277:65"><expr pos:start="277:65" pos:end="277:65"><literal type="number" pos:start="277:65" pos:end="277:65">0</literal></expr></argument>, <argument pos:start="277:68" pos:end="277:68"><expr pos:start="277:68" pos:end="277:68"><literal type="number" pos:start="277:68" pos:end="277:68">0</literal></expr></argument>, <argument pos:start="277:71" pos:end="277:71"><expr pos:start="277:71" pos:end="277:71"><literal type="number" pos:start="277:71" pos:end="277:71">0</literal></expr></argument>,

                          <argument pos:start="279:27" pos:end="279:30"><expr pos:start="279:27" pos:end="279:30"><name pos:start="279:27" pos:end="279:30">data</name></expr></argument>, <argument pos:start="279:33" pos:end="279:40"><expr pos:start="279:33" pos:end="279:40"><name pos:start="279:33" pos:end="279:33">q</name> <operator pos:start="279:35" pos:end="279:35">-</operator> <name pos:start="279:37" pos:end="279:40">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
