<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23892.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:36">fw_cfg_data_mem_read</name><parameter_list pos:start="1:37" pos:end="3:51">(<parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:41">void</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:49">opaque</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:62"><decl pos:start="1:52" pos:end="1:62"><type pos:start="1:52" pos:end="1:62"><name pos:start="1:52" pos:end="1:57">hwaddr</name></type> <name pos:start="1:59" pos:end="1:62">addr</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:50"><decl pos:start="3:38" pos:end="3:50"><type pos:start="3:38" pos:end="3:50"><name pos:start="3:38" pos:end="3:45">unsigned</name></type> <name pos:start="3:47" pos:end="3:50">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:12">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">FWCfgState</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:26">= <expr pos:start="7:21" pos:end="7:26"><name pos:start="7:21" pos:end="7:26">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:18"><name pos:start="9:13" pos:end="9:15">buf</name><index pos:start="9:16" pos:end="9:18">[<expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:14">i</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="19:5">for <control pos:start="15:9" pos:end="15:30">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:25"><expr pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:24">size</name></expr>;</condition> <incr pos:start="15:27" pos:end="15:29"><expr pos:start="15:27" pos:end="15:29"><operator pos:start="15:27" pos:end="15:28">++</operator><name pos:start="15:29" pos:end="15:29">i</name></expr></incr>)</control> <block pos:start="15:32" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:32">

        <expr_stmt pos:start="17:9" pos:end="17:32"><expr pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:11">buf</name><index pos:start="17:12" pos:end="17:14">[<expr pos:start="17:13" pos:end="17:13"><name pos:start="17:13" pos:end="17:13">i</name></expr>]</index></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:31"><name pos:start="17:18" pos:end="17:28">fw_cfg_read</name><argument_list pos:start="17:29" pos:end="17:31">(<argument pos:start="17:30" pos:end="17:30"><expr pos:start="17:30" pos:end="17:30"><name pos:start="17:30" pos:end="17:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <switch pos:start="21:5" pos:end="39:5">switch <condition pos:start="21:12" pos:end="21:17">(<expr pos:start="21:13" pos:end="21:16"><name pos:start="21:13" pos:end="21:16">size</name></expr>)</condition> <block pos:start="21:19" pos:end="39:5">{<block_content pos:start="23:5" pos:end="37:29">

    <case pos:start="23:5" pos:end="23:11">case <expr pos:start="23:10" pos:end="23:10"><literal type="number" pos:start="23:10" pos:end="23:10">1</literal></expr>:</case>

        <return pos:start="25:9" pos:end="25:22">return <expr pos:start="25:16" pos:end="25:21"><name pos:start="25:16" pos:end="25:21"><name pos:start="25:16" pos:end="25:18">buf</name><index pos:start="25:19" pos:end="25:21">[<expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr>]</index></name></expr>;</return>

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">2</literal></expr>:</case>

        <return pos:start="29:9" pos:end="29:30">return <expr pos:start="29:16" pos:end="29:29"><call pos:start="29:16" pos:end="29:29"><name pos:start="29:16" pos:end="29:24">lduw_he_p</name><argument_list pos:start="29:25" pos:end="29:29">(<argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:28">buf</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">4</literal></expr>:</case>

        <return pos:start="33:9" pos:end="33:39">return <expr pos:start="33:16" pos:end="33:38"><operator pos:start="33:16" pos:end="33:16">(</operator><name pos:start="33:17" pos:end="33:24">uint32_t</name><operator pos:start="33:25" pos:end="33:25">)</operator><call pos:start="33:26" pos:end="33:38"><name pos:start="33:26" pos:end="33:33">ldl_he_p</name><argument_list pos:start="33:34" pos:end="33:38">(<argument pos:start="33:35" pos:end="33:37"><expr pos:start="33:35" pos:end="33:37"><name pos:start="33:35" pos:end="33:37">buf</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="35:5" pos:end="35:11">case <expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">8</literal></expr>:</case>

        <return pos:start="37:9" pos:end="37:29">return <expr pos:start="37:16" pos:end="37:28"><call pos:start="37:16" pos:end="37:28"><name pos:start="37:16" pos:end="37:23">ldq_he_p</name><argument_list pos:start="37:24" pos:end="37:28">(<argument pos:start="37:25" pos:end="37:27"><expr pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:27">buf</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="41:5" pos:end="41:12"><expr pos:start="41:5" pos:end="41:11"><call pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:9">abort</name><argument_list pos:start="41:10" pos:end="41:11">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
