<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13979.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint16_t</name></type> <name pos:start="1:17" pos:end="1:30">eepro100_read2</name><parameter_list pos:start="1:31" pos:end="1:64">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:44">EEPRO100State</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type> <name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">uint32_t</name></type> <name pos:start="1:60" pos:end="1:63">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:15">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint16_t</name></type> <name pos:start="5:14" pos:end="5:16">val</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="11:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:45">(<expr pos:start="7:9" pos:end="7:44"><name pos:start="7:9" pos:end="7:12">addr</name> <operator pos:start="7:14" pos:end="7:15">&lt;=</operator> <sizeof pos:start="7:17" pos:end="7:30">sizeof<argument_list pos:start="7:23" pos:end="7:30">(<argument pos:start="7:24" pos:end="7:29"><expr pos:start="7:24" pos:end="7:29"><name pos:start="7:24" pos:end="7:29"><name pos:start="7:24" pos:end="7:24">s</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:29">mem</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="7:32" pos:end="7:32">-</operator> <sizeof pos:start="7:34" pos:end="7:44">sizeof<argument_list pos:start="7:40" pos:end="7:44">(<argument pos:start="7:41" pos:end="7:43"><expr pos:start="7:41" pos:end="7:43"><name pos:start="7:41" pos:end="7:43">val</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="7:47" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:49">

        <expr_stmt pos:start="9:9" pos:end="9:49"><expr pos:start="9:9" pos:end="9:48"><call pos:start="9:9" pos:end="9:48"><name pos:start="9:9" pos:end="9:14">memcpy</name><argument_list pos:start="9:15" pos:end="9:48">(<argument pos:start="9:16" pos:end="9:19"><expr pos:start="9:16" pos:end="9:19"><operator pos:start="9:16" pos:end="9:16">&amp;</operator><name pos:start="9:17" pos:end="9:19">val</name></expr></argument>, <argument pos:start="9:22" pos:end="9:34"><expr pos:start="9:22" pos:end="9:34"><operator pos:start="9:22" pos:end="9:22">&amp;</operator><name pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:28">mem</name><index pos:start="9:29" pos:end="9:34">[<expr pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:33">addr</name></expr>]</index></name></expr></argument>, <argument pos:start="9:37" pos:end="9:47"><expr pos:start="9:37" pos:end="9:47"><sizeof pos:start="9:37" pos:end="9:47">sizeof<argument_list pos:start="9:43" pos:end="9:47">(<argument pos:start="9:44" pos:end="9:46"><expr pos:start="9:44" pos:end="9:46"><name pos:start="9:44" pos:end="9:46">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="15:5" pos:end="39:5">switch <condition pos:start="15:12" pos:end="15:17">(<expr pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:16">addr</name></expr>)</condition> <block pos:start="15:19" pos:end="39:5">{<block_content pos:start="17:5" pos:end="37:37">

    <case pos:start="17:5" pos:end="17:19">case <expr pos:start="17:10" pos:end="17:18"><name pos:start="17:10" pos:end="17:18">SCBStatus</name></expr>:</case>

    <case pos:start="19:5" pos:end="19:16">case <expr pos:start="19:10" pos:end="19:15"><name pos:start="19:10" pos:end="19:15">SCBCmd</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:73"><expr pos:start="21:9" pos:end="21:72"><call pos:start="21:9" pos:end="21:72"><name pos:start="21:9" pos:end="21:13">TRACE</name><argument_list pos:start="21:14" pos:end="21:72">(<argument pos:start="21:15" pos:end="21:19"><expr pos:start="21:15" pos:end="21:19"><name pos:start="21:15" pos:end="21:19">OTHER</name></expr></argument>, <argument pos:start="21:22" pos:end="21:71"><expr pos:start="21:22" pos:end="21:71"><call pos:start="21:22" pos:end="21:71"><name pos:start="21:22" pos:end="21:27">logout</name><argument_list pos:start="21:28" pos:end="21:71">(<argument pos:start="21:29" pos:end="21:50"><expr pos:start="21:29" pos:end="21:50"><literal type="string" pos:start="21:29" pos:end="21:50">"addr=%s val=0x%04x\n"</literal></expr></argument>, <argument pos:start="21:53" pos:end="21:65"><expr pos:start="21:53" pos:end="21:65"><call pos:start="21:53" pos:end="21:65"><name pos:start="21:53" pos:end="21:59">regname</name><argument_list pos:start="21:60" pos:end="21:65">(<argument pos:start="21:61" pos:end="21:64"><expr pos:start="21:61" pos:end="21:64"><name pos:start="21:61" pos:end="21:64">addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:68" pos:end="21:70"><expr pos:start="21:68" pos:end="21:70"><name pos:start="21:68" pos:end="21:70">val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:19">case <expr pos:start="25:10" pos:end="25:18"><name pos:start="25:10" pos:end="25:18">SCBeeprom</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:11">val</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:37"><name pos:start="27:15" pos:end="27:34">eepro100_read_eeprom</name><argument_list pos:start="27:35" pos:end="27:37">(<argument pos:start="27:36" pos:end="27:36"><expr pos:start="27:36" pos:end="27:36"><name pos:start="27:36" pos:end="27:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:73"><expr pos:start="29:9" pos:end="29:72"><call pos:start="29:9" pos:end="29:72"><name pos:start="29:9" pos:end="29:13">TRACE</name><argument_list pos:start="29:14" pos:end="29:72">(<argument pos:start="29:15" pos:end="29:19"><expr pos:start="29:15" pos:end="29:19"><name pos:start="29:15" pos:end="29:19">OTHER</name></expr></argument>, <argument pos:start="29:22" pos:end="29:71"><expr pos:start="29:22" pos:end="29:71"><call pos:start="29:22" pos:end="29:71"><name pos:start="29:22" pos:end="29:27">logout</name><argument_list pos:start="29:28" pos:end="29:71">(<argument pos:start="29:29" pos:end="29:50"><expr pos:start="29:29" pos:end="29:50"><literal type="string" pos:start="29:29" pos:end="29:50">"addr=%s val=0x%04x\n"</literal></expr></argument>, <argument pos:start="29:53" pos:end="29:65"><expr pos:start="29:53" pos:end="29:65"><call pos:start="29:53" pos:end="29:65"><name pos:start="29:53" pos:end="29:59">regname</name><argument_list pos:start="29:60" pos:end="29:65">(<argument pos:start="29:61" pos:end="29:64"><expr pos:start="29:61" pos:end="29:64"><name pos:start="29:61" pos:end="29:64">addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:68" pos:end="29:70"><expr pos:start="29:68" pos:end="29:70"><name pos:start="29:68" pos:end="29:70">val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <default pos:start="33:5" pos:end="33:12">default:</default>

        <expr_stmt pos:start="35:9" pos:end="35:59"><expr pos:start="35:9" pos:end="35:58"><call pos:start="35:9" pos:end="35:58"><name pos:start="35:9" pos:end="35:14">logout</name><argument_list pos:start="35:15" pos:end="35:58">(<argument pos:start="35:16" pos:end="35:37"><expr pos:start="35:16" pos:end="35:37"><literal type="string" pos:start="35:16" pos:end="35:37">"addr=%s val=0x%04x\n"</literal></expr></argument>, <argument pos:start="35:40" pos:end="35:52"><expr pos:start="35:40" pos:end="35:52"><call pos:start="35:40" pos:end="35:52"><name pos:start="35:40" pos:end="35:46">regname</name><argument_list pos:start="35:47" pos:end="35:52">(<argument pos:start="35:48" pos:end="35:51"><expr pos:start="35:48" pos:end="35:51"><name pos:start="35:48" pos:end="35:51">addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:55" pos:end="35:57"><expr pos:start="35:55" pos:end="35:57"><name pos:start="35:55" pos:end="35:57">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:37"><expr pos:start="37:9" pos:end="37:36"><call pos:start="37:9" pos:end="37:36"><name pos:start="37:9" pos:end="37:15">missing</name><argument_list pos:start="37:16" pos:end="37:36">(<argument pos:start="37:17" pos:end="37:35"><expr pos:start="37:17" pos:end="37:35"><literal type="string" pos:start="37:17" pos:end="37:35">"unknown word read"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <return pos:start="41:5" pos:end="41:15">return <expr pos:start="41:12" pos:end="41:14"><name pos:start="41:12" pos:end="41:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
